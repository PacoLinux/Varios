VERSION E05

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:1    
        1        1        /*M* FTW$WRAT - contains routines for M$READ, M$WRITE, M$TRUNC,
        2        2                           M$PRECORD, M$PFIL, M$REW and M$WEOF */
        3        3        /*T***********************************************************/
        4        4        /*T*                                                         */
        5        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        6        6        /*T*                                                         */
        7        7        /*T***********************************************************/
        8        8        /*X* CRT=1,CTI=4,DCI=6,SQB,ECI=3,CSI=3,IPC,DIN=2,SDI=3 */
        9        9
       10       10        FTW$WRAT: PROC( FPTCODE, FPT, VFC ) ALTRET;
       11       11
       12       12         /***
       13       13          *** INCLUDE files:
       14       14          ***/
       15       15
       16       16        %INCLUDE B$JIT_C;
       17      330         %B$JIT0;
       18      419         %U$JIT1X;
       19      422         %M$JIT2;
       20      432         %F$JIT3;
       21      437         %S$JIT4X;
       22      440         %J$JIT5;
       23      528         %A$JIT6X;
       24      531        %INCLUDE B_PTRS_R;
       25      539        %INCLUDE CP_6_SUBS;
       26     1079        %INCLUDE F$CP6V_C;
       27     1305         %FPT$WRITE_V(BASED="BASED(FPT$)");
       28     1311         %FPT$READ_V(BASED="BASED(FPT$)");
       29     1318         %FPT$PFIL_V(BASED="BASED(FPT$)");
       30     1321         %FPT$PRECORD_V(BASED="BASED(FPT$)");
       31     1326        %MACRO F$DCBBJ(BASED=BASED);
       32     1327        %INCLUDE F$DCB;
       33     1376        %MEND;
       34     1377         %F$DCBBJ(BASED="BASED(JDCB$)");
       35     1427        %INCLUDE FM$CFU;
       36     1472         %FM$CFUJ;
       37     1477        %INCLUDE F_ERRORS_C;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:2    
       38     1717        %INCLUDE F_FMTCODE_C;
       39     1751        %INCLUDE F_FPTCODE_C;
       40     1787        %INCLUDE FM_BUF_R;
       41     1796        %MACRO FT$DDTBD(BASED=BASED);
       42     1797        %INCLUDE FT$DDT;
       43     1858        %MEND;
       44     1859         %FT$DDTBD(BASED="BASED(DDDT$)");
       45     1921        %INCLUDE FT$LBLS;
       46     2189        %INCLUDE FT$RECS;
       47     2257        %INCLUDE FT_SUBS;
       48     2337        %INCLUDE NK$LDCT;
       49     2439         %NK$LDCT;
       50     2485        %INCLUDE NK_LDCT_R;
       51     2494        %INCLUDE SS_SCHED_C;
       52     2727        %INCLUDE UD_ERRORS_C;
       53     2769        %INCLUDE UE_CP6;
       54     3460         %SUB_EXC;
       55     3507        %INCLUDE B$TABLES_C;
       56     3615         %B$SR_NON_DEC(NAME=FT_NONDECIMAL_TABLE);
       57     3619         %B$XL_MOD_256(NAME=F_ASC_ASC);
       58     3623         %B$XL_ASC_EBC(NAME=F_ASC_EBC);
       59     3627         %B$XL_EBC_ASC(NAME=F_EBC_ASC);
       60     3631         %B$XL_UPPER_UR(NAME=NK_URTBLUC);
       61     3635         %B$XL_UR(NAME=NK_URTBL);
       62     3639        %SUB ALTRET_HANDLING="WHILE('0'B)/*ALTRET_HANDLING*/";
       63     3640
       64     3641         /***
       65     3642          *** External routines:
       66     3643          ***/
       67     3644
       68     3645    1     DCL FMD$GETBUF ENTRY(3);              /* Get specified FPOOL buffer         */
       69     3646    1     DCL FMD$RELBUF ENTRY(1);              /* Release specified FPOOL buffer     */
       70     3647    1     DCL FMM$DFLOPN ENTRY;                 /* Default open                       */
       71     3648    1     DCL FMO$GETDOMAIN ENTRY(1);           /* Get current domain                 */
       72     3649    1     DCL FPO$LABELOD ENTRY(1) ALTRET;      /* Label optical disk volume*/
       73     3650    1     DCL FPO$RDODMAP ENTRY(1) ALTRET;      /* Read OD Library Map                */
       74     3651    1     DCL FPO$COPYOD ENTRY ALTRET;          /* Copy OD volume to blank disc*/
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:3    
       75     3652    1     DCL FPO$WRODBLK ENTRY(1) ALTRET;      /* Write Optical Disk Block           */
       76     3653    1     DCL FPO$RDODBLK ENTRY(1) ALTRET;      /* Read Optical Disk Block            */
       77     3654    1     DCL FPO$TRUNC ENTRY(1) ALTRET;        /* Truncate buffer for Optical Disk   */
       78     3655    1     DCL FPO$UNTRUNC ENTRY(1) ALTRET;      /* Untruncate buffer for Optical Disk */
       79     3656    1     DCL FTI$RDASC ENTRY(1) ALTRET;    /* Read ASCII block into specified buffer */
       80     3657    1     DCL FTI$RDBIN ENTRY(1) ALTRET;   /* Read binary block into specified buffer */
       81     3658    1     DCL FTI$REWIND ENTRY ALTRET;          /* Rewind tape                        */
       82     3659    1     DCL FTI$SPFILE ENTRY ALTRET;          /* Space DCB.ARS files                */
       83     3660    1     DCL FTI$SPREC ENTRY ALTRET;           /* Space DCB.ARS records              */
       84     3661    1     DCL FTI$WRASC ENTRY(1) ALTRET;   /* Write ASCII block from specified buffer */
       85     3662    1     DCL FTI$WRBIN ENTRY(1) ALTRET;  /* Write binary block from specified buffer */
       86     3663    1     DCL FTI$WRFM ENTRY ALTRET;            /* Write file mark                    */
       87     3664    1     DCL FTL$CVOL ENTRY(5) ALTRET;         /* CVOL                               */
       88     3665    1     DCL FTL$EOF ENTRY(1) ALTRET;          /* Handle labels after file mark      */
       89     3666    1     DCL FTL$FINDSEQ ENTRY ALTRET;        /* Find file by sequence and section # */
       90     3667    1     DCL FTL$LBLS ENTRY(2) ALTRET;
       91     3668    1     DCL FTL$PBSN ENTRY(3) ALTRET;         /* Position before specified section  */
       92     3669    1     DCL FTL$VOL1 ENTRY ALTRET;            /* Write VOL1 label                   */
       93     3670    1     DCL FTR$CHNGVOL ENTRY(1) ALTRET;      /* Change to specified volume of set  */
       94     3671    1     DCL FTR$GETSN ENTRY(2) ALTRET;        /* Get specified SN from SN CFUs      */
       95     3672    1     DCL FTR$JRNLDCB ENTRY ALTRET;         /* Moves JRNL CFU info to DCB         */
       96     3673    1     DCL FTR$UNJRNLDCB ENTRY ALTRET;       /* Moves DCB info to JRNL CFU         */
       97     3674    1     DCL HFC$CACHECLR ENTRY;               /* Clear cache                        */
       98     3675    1     DCL HFF$DSIZ ENTRY(2) ALTRET;         /* Calc size of segment               */
       99     3676    1     DCL HFF$NILERASE ENTRY(1) ALTRET;     /* Check segment                      */
      100     3677    1     DCL HFF$WRITE1 ENTRY(1) ALTRET;       /* Check if buffer is writeable       */
      101     3678    1     DCL SSR$REG ENTRY(3) ALTRET;          /* To wait awhile                     */
      102     3679    1     DCL SSV$EVENT ENTRY(7);               /* To notify JRNL owner               */
      103     3680    1     DCL UQB$MDEQ ENTRY(1) ALTRET;         /* Dequeue                            */
      104     3681    1     DCL UQB$MENQXB ENTRY(1) ALTRET;       /* Enqueue                            */
      105     3682
      106     3683    1     DCL CVOLFT BIT(1) AUTO;               /* Indicate FT CVOL call              */
      107     3684         /***
      108     3685          *** Parameter:
      109     3686          ***/
      110     3687
      111     3688    1     DCL FPTCODE SBIN WORD;                /* Function code                      */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:4    
      112     3689    1     DCL FPT UBIN;                         /* FPT                                */
      113     3690    1     DCL VFC UBIN BYTE UNAL;               /* Vertical format control byte       */
      114     3691
      115     3692         /***
      116     3693          *** AUTO data:
      117     3694          ***/
      118     3695
      119     3696    1     DCL AFPOOL$ PTR AUTO;                 /* Pointer to FPOOL buffer            */
      120     3697    1     DCL ALIGNED_BASED_WORD SBIN WORD ALIGNED BASED;
      121     3698    1     DCL ARECL UBIN AUTO;                  /* Actual record length               */
      122     3699    1     DCL ASEG$ PTR AUTO;                   /* Pointer to record segment          */
      123     3700    1     DCL BASED_WORD UBIN WORD CALIGNED BASED;
      124     3701    1     DCL BYTES_TO_GO SBIN WORD ALIGNED AUTO; /* Number of bytes left to read/write */
      125     3702    1     DCL CHARS CHAR(DUBYTES) BASED CALIGNED;
      126     3703    1     DCL CHARZ CHAR(CHARZLEN) BASED CALIGNED;
      127     3704    1     DCL CHARZLEN SBIN AUTO;               /* Length of CHARZ                    */
      128     3705    1     DCL DCRECNO SBIN AUTO;                /* CRECNO from DCB                    */
      129     3706    1     DCL DCVOL BIT(1) ALIGNED AUTO;        /* Saves DCB.CVOL                     */
      130     3707    1     DCL DDDT$ PTR AUTO;                 /* Pointer to DDT entry of DCB's device */
      131     3708    1     DCL DUB$ PTR AUTO;                    /* Pointer to user's buffer           */
      132     3709    1     DCL DUBYTES SBIN AUTO;                /* Number of bytes to read/write      */
      133     3710    1     DCL DVBYTE UBIN BYTE;
      134     3711    1     DCL EOXL CHAR(3) AUTO;                /* Either 'EOF' or 'EOV'              */
      135     3712    1     DCL ERRSAV BIT(36) AUTO;              /* Saves JIT.ERR                      */
      136     3713    1     DCL FOUR_BASED_CHARS CHAR(4) BASED UNAL; /* To move unaligned BINs          */
      137     3714    1     DCL FPT$ PTR AUTO;                    /* Pointer to FPT                     */
      138     3715    1     DCL TRNCHLD BIT(1) AUTO;              /* Set if entered TRNCHLD entrypoint  */
      139     3716    1     DCL I UBIN AUTO;                      /* Temporary (index)                  */
      140     3717    1     DCL IOERROK BIT(1) AUTO;              /* My copy of FPT.IOERROK             */
      141     3718    1     DCL JDCB$ PTR AUTO;                   /* Pointer to DCB                     */
      142     3719        %B$JRNLERR(NAME=JRNLECCI,
      143     3720         STCLASS="",
      144     3721         PARONLY=1);
      145     3729    1     DCL KEYCHARS CHAR(KEYSIZE) BASED CALIGNED; /* For key moving                */
      146     3730    1     DCL KEYSIZE SBIN WORD ALIGNED AUTO;   /* For key moving                     */
      147     3731    1     DCL MAXRECL SBIN WORD AUTO;           /* Maximum record size                */
      148     3732    1     DCL N SBIN AUTO;                      /* Temporary number                   */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:5    
      149     3733    1     DCL NC REDEF N CHAR(4);
      150     3734    1     DCL NCHARS CHAR(N) BASED UNAL;
      151     3735    1     DCL RCWSIZE SBIN WORD AUTO;           /* For variable format size of RCW    */
      152     3736    1     DCL RCWTYPE SBIN AUTO;
              3736              /* For variable formats sys RCW/BOL binary, decimal, or none */
      153     3737    1     DCL RECSIZE SBIN WORD AUTO;           /* Total number of bytes              */
      154     3738    1     DCL SEGSIZE SBIN WORD AUTO;           /* Current record segment size        */
      155     3739    1     DCL SIX_CHARS CHAR(6) AUTO;           /* For temp SN storage                */
      156     3740    1     DCL SPANINFO SBIN WORD AUTO;        /* Current record segment spanning info */
      157     3741    1     DCL SPAN_MID SBIN WORD AUTO;          /* Ascii - 2, Ebcdic - 3              */
      158     3742    1     DCL SPAN_LAST SBIN WORD AUTO;         /* Ascii - 3, Ebcdic - 2              */
      159     3743    1     DCL TEMP SBIN AUTO;                   /* Temporary SBIN                     */
      160     3744    1     DCL TEMPC REDEF TEMP CHAR(4);         /* To move unaligned BINs             */
      161     3745    1     DCL TEMP$ PTR AUTO;                   /* Temp pointer                       */
      162     3746    1     DCL TEMPFP$ PTR AUTO;                 /* Temp FPOOL pointer.                */
      163     3747    1     DCL TEMPFPOOL UBIN AUTO;              /* Temp FPOOL number.                 */
      164     3748    1     DCL UKEY$ PTR AUTO;                   /* User's key                         */
      165     3749    1     DCL UKEYLEN SBIN WORD AUTO;           /* Length of user's key               */
      166     3750    1     DCL VFC_MOVED BIT(1) ALIGNED AUTO;    /* Indicates when VFC moved for UR    */
      167     3751    1     DCL BOF BIT(1) ALIGNED AUTO;    /* Indicates whether position to BOF or EOF */
      168     3752
      169     3753         /***
      170     3754          *** SYMREF data:
      171     3755          ***/
      172     3756
      173     3757    1     DCL B$JIT$ PTR SYMREF;                /* Pointer to JIT                     */
      174     3758
      175     3759         /***
      176     3760          *** CONSTANT data:
      177     3761          ***/
      178     3762
      179     3763    1     DCL ANSPAD CHAR(18) CONSTANT INIT('^^^^^^^^^^^^^^^^^^'); /* Circumflex pad  */
      180     3764    1     DCL ZEROBITS(0:4) UBIN CONSTANT INIT(0,0,0,0,0);
      181     3765    1     DCL NULPAD REDEF ZEROBITS CHAR(20);   /* Binary pad                         */
      182     3766
      183     3767         /***
      184     3768          *** SUBs:
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:6    
      185     3769          ***/
      186     3770
      187     3771        %SUB RCWBIN#=0/*RCWBIN#*/;
      188     3772        %SUB RCWDEC#=1/*RCWDEC#*/;
      189     3773        %SUB RCWNONE#=2/*RCWNONE#*/;
      190     3774
      191     3775         /***
      192     3776          *** Translation tables:
      193     3777          ***/
      194     3778
      195     3779
      196     3780        %FT$ERR( ERRNAME=E_BADBLKL, MID='27'O, CODE=%E$BADBLKL, SEV=0 );
      197     3788        /*E*     ERROR: FTW-E$BADBLKL-0
      198     3789                 MESSAGE: Inconsistent block length% for %TA%
      199     3790                 MESSAGE1: Actual block length is less than that specified in
      200     3791                          the Block Header Record.
      201     3792                 DESCRIPTION: The block size specified in the BOL is larger
      202     3793                    than the actual block size.
      203     3794         ***/
      204     3795
      205     3796        %FT$ERR( ERRNAME=E_BADKEY, MID='27'O, CODE=%E$BADKEY, SEV=2 );
      206     3804        /*E*     ERROR: FTW-E$BADKEY-2
      207     3805                 MESSAGE: Illegal key length% for %TA%
      208     3806                 MESSAGE1: Key length is less than 1 or greater than 255.
      209     3807         ***/
      210     3808
      211     3809        %FT$ERR( ERRNAME=E_BADRECL, MID='27'O, CODE=%E$BADRECL, SEV=0 );
      212     3817        /*E*     ERROR: FTW-E$BADRECL-0
      213     3818                 MESSAGE: Inconsistent record length% for %TA%
      214     3819                 MESSAGE1: Record (segment) length is less than that specified
      215     3820                          in the Record Control Word.
      216     3821                 DESCRIPTION: Probably bad tape.
      217     3822         ***/
      218     3823
      219     3824        %FT$ERR( ERRNAME=E_BADSPAN, MID='27'O, CODE=%E$BADSPAN, SEV=0 );
      220     3832        /*E*     ERROR: FTW-E$BADSPAN-0
      221     3833                 MESSAGE: Inconsistent spanning information% on %TA%
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:7    
      222     3834                 MESSAGE1: A new record either started without the previous
      223     3835                    record terminating properly or it didn't begin properly.
      224     3836                 DESCRIPTION: A record segment started a record without the
      225     3837                           previous segment indicating previous record end or
      226     3838                           the previous record segment ended the previous
      227     3839                           record but the current segment does not start a record.
      228     3840         ***/
      229     3841
      230     3842        %FT$ERR( ERRNAME=E_BOF, MID='27'O, CODE=%E$BOF, SEV=2 );
      231     3850        /*E*     ERROR: FTW-E$BOF
      232     3851                 MESSAGE: Beginning of file hit% on %TA%
      233     3852                 MESSAGE1: An attempt to position before the beginning
      234     3853                    of file was made.
      235     3854                 MESSAGE2: A backspace record of backspace file encountered
      236     3855                    the beginning of file.
      237     3856         ***/
      238     3857
      239     3858        %FT$ERR( ERRNAME=E_BOT, MID='27'O, CODE=%E$BOT, SEV= 2);
      240     3866        /*E*     ERROR: FTW-E$BOT-2
      241     3867                 MESSAGE: Beginning of tape% on %TA%
      242     3868                  MESSAGE1: An attempt to position before tape load point was
      243     3869                    made. This might be due to user not realizing that a
      244     3870                    volume change has been made.
      245     3871         ***/
      246     3872
      247     3873        %FT$ERR( ERRNAME=E_CANTIO, MID='27'O, CODE=%E$CANTIO, SEV=2 );
      248     3881        /*E*     ERROR: FTW-E$CANTIO-2
      249     3882                 MESSAGE: I/O not allowed% on %TA% due to previous error
      250     3883                 MESSAGE1: I/O is not allowed due to previous error.
      251     3884                 DESCRIPTION: Either position was lost or no drive.
      252     3885         ***/
      253     3886
      254     3887        %FT$ERR( ERRNAME=E_CANTTRANSLATE, MID='27'O, CODE=%E$CANTTRANSLATE, SEV=2 );
      255     3895        /*E*     ERROR: FTW-E$CANTTRANSLATE-2
      256     3896                 MESSAGE: EBCDIC translation required% on %TA% but buffer inaccessible
      257     3897                 MESSAGE1: Translation of data from ASCII to EBCDIC is required
      258     3898                    before data can be written, but the monitor is not able to
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:8    
      259     3899                    access your buffer because it is write-protected (CONSTANT).
      260     3900         ***/
      261     3901
      262     3902        %FT$ERR( ERRNAME=E_CVBOT, MID='27'O, CODE=%E$CVBOT, SEV=2 );
      263     3910        /*E*     ERROR: FTW-E$CVBOT-2
      264     3911                 MESSAGE: Beginning of tape hit while CVOLing on I/O error%, for %TA%.
      265     3912                 MESSAGE1: An I/O error was detected while writing the first block
      266     3913                    of the first file of your tape, and you had specified IOERROK.
      267     3914                    You need to substitute another tape.
      268     3915         ***/
      269     3916
      270     3917        %FT$ERR( ERRNAME=E_DI, MID='27'O, CODE=%E$DI, SEV=2 );
      271     3925        /*E*     ERROR: FTW-E$DI-2
      272     3926                 MESSAGE: An attempt was made to read a record which was
      273     3927                    never written% in %TA%
      274     3928         ***/
      275     3929
      276     3930        %FT$ERR( ERRNAME=E_DOMAIN, MID='27'O, CODE=%E$DOMAIN, SEV=2 );
      277     3938        /*E*     ERROR: FTW-E$DOMAIN-2
      278     3939                 MESSAGE: Execute-only DCB% %DC% opened by another domain
      279     3940                 DESCRIPTION: This DCB, connected to an execute-only file,
      280     3941                    was opened by another domain and may not be accessed from
      281     3942                    this domain.
      282     3943         ***/
      283     3944
      284     3945        %FT$ERR( ERRNAME=E_EOF, MID='27'O, CODE=%E$EOF, SEV=2 );
      285     3953        /*E*    ERROR: FTW-E$EOF-2
      286     3954                 MESSAGE: End of file% on %TA%
      287     3955                 MESSAGE1: An attempt to position or read past file end was made.
      288     3956         ***/
      289     3957
      290     3958        %FT$ERR( ERRNAME=E_EOT, MID='27'O, CODE=%E$EOT, SEV=2 );
      291     3966        /*E*     ERROR: FTW-E$EOT-2
      292     3967                 MESSAGE: End of tape% on %TA%
      293     3968                 MESSAGE1: The end of tape marker was passed on the last write.
      294     3969                 DESCRIPTION: See message.
      295     3970         ***/
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:9    
      296     3971
      297     3972        %FT$ERR( ERRNAME=E_EOVOL, MID='27'O, CODE=%E$EOVOL, SEV=2 );
      298     3980        /*E*     ERROR: FTW-E$EOVOL-2
      299     3981                 MESSAGE: End of volume% for %TA%
      300     3982                 MESSAGE1: End of volume with user requested CVOL notification.
      301     3983                 DESCRIPTION: End of volume and user asked to be notified.
      302     3984         ***/
      303     3985
      304     3986        %FT$ERR( ERRNAME=E_EOVOLS, MID='27'O, CODE=%E$EOVOLS, SEV=2 );
      305     3994        /*E*     ERROR: FTW-E$EOVOLS-3
      306     3995                 MESSAGE: End of volume...partial record% on %TA%
      307     3996                 MESSAGE1: End of volume with user requested CVOL notification
      308     3997                           during write of spanned record.
      309     3998                 DESCRIPTION: End of volume while spanning and user asked to
      310     3999                    be notified.
      311     4000         ***/
      312     4001
      313     4002        %FT$ERR( ERRNAME=E_FILLIM, MID='27'O, CODE=%E$FILLIM, SEV=2 );
      314     4010        /*E*     ERROR: FTW-E$FILLIM-2
      315     4011                 MESSAGE: Attempt to access record outside the limits of file% %TA%
      316     4012         ***/
      317     4013
      318     4014        %FT$ERR( ERRNAME=E_INDBC, MID='27'O, CODE=%E$INDBC, SEV=2 );
      319     4022        /*E*     ERROR: FTW-E$INDBC-2
      320     4023                 MESSAGE: Key not contained in record% for %TA%
      321     4024                 MESSAGE1: On a write to an indexed file the key must be
      322     4025                    contained in the initial record segment.
      323     4026         ***/
      324     4027
      325     4028        %FT$ERR( ERRNAME=E_KEYORDER, MID='27'O, CODE=%E$KEYORDER, SEV=2 );
      326     4036        /*E*     ERROR: FTW-E$KEYORDER-2
      327     4037                 MESSAGE: Out of order key% for %TA%
      328     4038                 MESSAGE1: On a write to KEYED or INDEXED files with ACS=SEQUEN
      329     4039                    the key is not greater than that of the previous record.
      330     4040         ***/
      331     4041
      332     4042        %FT$ERR( ERRNAME=E_LD, MID='27'O, CODE=%E$LD, SEV=2 );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:10   
      333     4050        /*E*    ERROR: FTW-E$LD-2
      334     4051                 MESSAGE: Lost data% on %TA%
      335     4052                 MESSAGE1: Read-your buffer is too small; Write-total record
      336     4053                           length would exceed DCB.RECL.
      337     4054                DESCRIPTION: The user's buffer is not large enough to contain
      338     4055                   the next record (portion) on a read.  On a write, the total
      339     4056                   record length exceeds DCB.RECL.
      340     4057         ***/
      341     4058
      342     4059        %FT$ERR( ERRNAME=E_NOCONT, MID='27'O, CODE=%E$NOCONT, SEV=2 );
      343     4067        /*E*    ERROR: FTW-E$NOCONT-2
      344     4068                 MESSAGE: Illegal use of CONT% on %TA%
      345     4069                 MESSAGE1: Continuation is not allowed because previous operation
      346     4070                           was not an M$READ.
      347     4071                DESCRIPTION: The user specified continued read after a non-read
      348     4072                   operation.
      349     4073         ***/
      350     4074
      351     4075        %FT$ERR( ERRNAME=E_NOFPOOL, MID='27'O, CODE=%E$NOFPOOL, SEV=2 );
      352     4083        /*E*     ERROR: FTW-E$NOFPOOL-2
      353     4084                 MESSAGE: No FPOOL buffer% for %TA%
      354     4085                 MESSAGE1: There is no FPOOL buffer available to complete the current
      355     4086                           operation%, on %TA%.
      356     4087                 MESSAGE2: A temporary FPOOL buffer was needed to complete a CVOL on an
      357     4088                           I/O error or a continued write of a variable-length record,
      358     4089                           and none was found; or, the user requires more FPOOLs
      359     4090                           than the set user maximum.
      360     4091                 DESCRIPTION: This can happen in three possible ways:  On a continued
      361     4092                          write to a blocked tape file with ORG=VARIABLE and SPANNED=NO,
      362     4093                          we ran out of space in the block and tried to get a temporary
      363     4094                          FPOOL buffer to save the record being written (so we can trunc
      364     4095                          the current buffer), there wasn't a free one.  Also, if we
      365     4096                          detected an I/O error during the write and the user had
      366     4097                          specified IOERROK, we needed an extra FPOOL to save the
      367     4098                          previously-written block (so we would have enough room to
      368     4099                          CVOL), and there wasn't one.  Finally, we're trying to
      369     4100                          get a block to accommodate BLKL but it exceeds the user's
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:11   
      370     4101                          set maximum FPOOL limit.
      371     4102         ***/
      372     4103
      373     4104        %FT$ERR( ERRNAME=E_NOKEY, MID='27'O, CODE=%E$NOKEY, SEV=2 );
      374     4112        /*E*     ERROR: FTW-E$NOKEY-2
      375     4113                 MESSAGE: The specified key does not exist% in %TA%
      376     4114         ***/
      377     4115
      378     4116        %FT$ERR( ERRNAME=E_NONDECRCW, MID='27'O, CODE=%E$NONDECRCW, SEV=2 );
      379     4124        /*E*     ERROR: FTW-E$NONDECRCW-2
      380     4125                 MESSAGE: Non-decimal control bytes% in %TA%
      381     4126                 MESSAGE1: The record control word, segment control word, or
      382     4127                    block control word of a tape file format with decimal
      383     4128                    control information is non-decimal.
      384     4129         ***/
      385     4130
      386     4131        %FT$ERR( ERRNAME=E_NOTAUTH, MID='27'O, CODE=%E$NOTAUTH, SEV=2 );
      387     4139        /*E*     ERROR: FTW-E$NOTAUTH-2
      388     4140                 MESSAGE: You are not authorized to label optical disk platters.
      389     4141         ***/
      390     4142
      391     4143        %FT$ERR( ERRNAME=E_NOTFULL, MID='27'O, CODE=%E$NOTFULL, SEV=2 );
      392     4151        /*E*     ERROR: FTW-E$NOTFULL-2
      393     4152                 MESSAGE: Must read/write FULL RANDOM/IDS tape files% for %TA%
      394     4153                 MESSAGE1: Only full granule reads or writes of RANDOM or IDS
      395     4154                    files is supported for labelled tape.
      396     4155         ***/
      397     4156
      398     4157        %FT$ERR( ERRNAME=E_NOTIMPLEMENTED, MID='27'O, CODE=%E$NOTIMPLEMENTED, SEV=2 );
      399     4165        /*E*     ERROR: FTW-E$NOTIMPLEMENTED-2
      400     4166                 MESSAGE: Unimplemented operation attempted% on %DC%.
      401     4167                 MESSAGE1: You tried to read or write an optical disk platter that
      402     4168                           was opened as a device, or you tried to use M$PRECORD,
      403     4169                           M$PFIL, M$REW, M$WEOF or M$CVOL, none of which are
      404     4170                           currently implemented for optical disk.
      405     4171         ***/
      406     4172
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:12   
      407     4173        %FT$ERR( ERRNAME=E_NOTJRNLOWNER, MID='27'O, CODE=%E$NOTJRNLOWNER, SEV=2 );
      408     4181        /*E*     ERROR: FTW-E$NOTJRNLOWNER-2
      409     4182                 MESSAGE: Only the journal owner can CVOL% on DCB %DC%
      410     4183         ***/
      411     4184
      412     4185        %FT$ERR( ERRNAME=E_PARTIALKEY, MID='27'O, CODE=%E$PARTIALKEY, SEV=2 );
      413     4193        /*E*     ERROR: FTW-E$PARTIALKEY-2
      414     4194                 MESSAGE: Partial key% for %TA%
      415     4195                 MESSAGE1: Part of key is not present in block.
      416     4196                 DESCRIPTION: The key contained in the last record of a tape
      417     4197                    block is not wholly contained in the block.
      418     4198         ***/
      419     4199
      420     4200        %FT$ERR( ERRNAME=E_RANBADBLK, MID='27'O, CODE=%E$RANBADBLK, SEV=2 );
      421     4208        /*E*     ERROR: FTW-E$RANBADBLK-2
      422     4209                 MESSAGE: Illegal block number% for file %TA%
      423     4210                 MESSAGE1: The specified block number is negative or greater
      424     4211                           than the size of the file.
      425     4212         ***/
      426     4213
      427     4214        %FT$ERR( ERRNAME=E_SMALLRECL, MID='27'O, CODE=%E$SMALLRECL, SEV=2 );
      428     4222        /*E*     ERROR: FTW-E$SMALLRECL-2
      429     4223                 MESSAGE: Record too small% for %TA%
      430     4224                 MESSAGE1: Tape records of less than 4 bytes are not allowed.
      431     4225                 DESCRIPTION: Attempt to write a tape block with a record
      432     4226                    of less than 4 bytes.
      433     4227         ***/
      434     4228
      435     4229        %FT$ERR( ERRNAME=E_VOLOUT, MID='27'O, CODE=%E$VOLOUT, SEV=2 );
      436     4237        /*E*     ERROR: FTW-E$VOLOUT-2
      437     4238                 MESSAGE: No next volume% on %TA% for a CVOL after an I/O error.
      438     4239                 DESCRIPTION: An output CVOL was attempted after detecting an I/O
      439     4240                              error, and there was no next volume.
      440     4241         ***/
      441     4242
      442     4243        /*P*    NAME: FTW$WRAT
      443     4244                PURPOSE: Contains lower level tape functions.
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:13   
      444     4245                DESCRIPTION: Use of DCB fields:
      445     4246                   RPOS   - set if the record descriptors CRECX,
      446     4247                            CRECNO, and NRECX are already positioned
      447     4248                            to the next record to read or write
      448     4249                   CRECX  - byte displacement into the FPOOL buffer of the
      449     4250                            record (segment) just read/written if RPOS reset or of the
      450     4251                            next record to read/write if RPOS set
      451     4252                   NRECX  - record index (1-n) into the FPOOL buffer of the
      452     4253                            record just read/written if RPOS reset or of the
      453     4254                            next record to read/write if RPOS set
      454     4255                   CRECNO - the sequential number of the record described
      455     4256                            by CRECX and NRECX
      456     4257                   PRECNO - the number (1-n) of the file section tape record
      457     4258                            currently in memory
      458     4259                   AFTRBLK- set if tape is positioned immediately after the
      459     4260                            block (tape record) currently in memory; reset if
      460     4261                            tape is positioned immediately before the block
      461     4262                            (tape record) currently in memory
      462     4263                   LSTBLK - set if the block (tape record) currently in memory
      463     4264                            is known to be the last block (tape record) of
      464     4265                            the file
      465     4266                   FMOD   - set if the file has ever been modified
      466     4267                   NOEOF  - set if file has been modified and no end of file
      467     4268                            indicators written yet (double file mark for device tapes,
      468     4269                            EOF labels for managed tapes)
      469     4270                   TRNC   - set with code indicating type of trunc performed
      470     4271                   CONT   - set if the last operation performed was a
      471     4272                            to-be-continued write
      472     4273                   BLKLEN - the number of bytes in the block (tape record)
      473     4274                            currently in memory
      474     4275                   GDISP  - after a read, the total number of bytes read from
      475     4276                            the current record; after a write, the total number
      476     4277                            of bytes written to the current record
      477     4278                   EOP    - a value indicating the type of operation last
      478     4279                            performed
      479     4280                   SPAN   - for managed tapes (spanned formats) indicates if
      480     4281                            the next record segment is expected to be a continuation
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:14   
      481     4282                   CBUFNUM - for FPOOL buffer formats current FPOOL buffer number
      482     4283                   NEW_FSECT - set after a CVOL to indicate that no "current"
      483     4284                             block is in memory
      484     4285                   MUST_CVOL - set if the last write operation detected end
      485     4286                             of tape
      486     4287                   LASTKEY - for RANDOM, IDS, RESTRICT and RELATIVE files,
      487     4288                             the "number" of the last record read or written
      488     4289                   LASTKEY$ - for KEYED and INDEXED files, a pointer to an
      489     4290                             area in RO which contains the last key read or
      490     4291                             written (used for SEQUEN access)
      491     4292                   HAVLASTKEY - set if LASTKEY/LASTKEY$ is valid for checking
      492     4293                             SEQUEN access
      493     4294                NOTES: Some general rules about tape/record positioning:
      494     4295                   1) After a read, the current record is always the record
      495     4296                      just read so that a subsequent write will rewrite the
      496     4297                      just-read record
      497     4298                   2) After a PFIL or PRECORD, the current record is always
      498     4299                      the record which will next be read or written
      499     4300                   3) After a to-be-continued write, the current record is
      500     4301                      the record just written; after a(n ordinary) write,
      501     4302                      the current record is the next record to be written
      502     4303                   4) For variable formats, the caller of 'next segment' routines
      503     4304                      is responsible for setting NRECX.
      504     4305                   5) For variable formats, the caller of 'next record' routines
      505     4306                      is responsible for maintaining CRECNO and RPOS.
      506     4307         ***/
      507     4308        /*N* PRECNO=0 MIGHT ALSO BE USED INSTEAD OF NEW_FSECT */
      508     4309
      509     4310        /********************/
      510     4311
      511     4312         /***
      512     4313          *** Direct to proper routine.
      513     4314          ***/
      514     4315
      515     4316    1           JDCB$ = B$JIT.DCB$;
      516     4317    1           IF (~ F$DCB.REALSPAN)
      517     4318    2           THEN DO;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:15   
      518     4319    2              SPAN_MID = 3;
      519     4320    2              SPAN_LAST = 2;
      520     4321    2              END;
      521     4322    2           ELSE DO;
      522     4323    2              SPAN_MID = 2;
      523     4324    2              SPAN_LAST = 3;
      524     4325    2              END;
      525     4326    1           IF F$DCB.ACS = %JRNL# THEN
      526     4327    1              CALL FTR$JRNLDCB;
      527     4328    1           CALL FTW_CHKIO ALTRET(JUSTALT); /* Make sure I/O allowed              */
      528     4329    1           F$DCB.TAPTYP.NOCVOL = %NO#;     /* Assume user CVOL control valid     */
      529     4330    1           IOERROK = %NO#;
      530     4331    1           FPT$ = ADDR(FPT);
      531     4332
      532     4333    2           DO CASE(FPTCODE);
      533     4334    2              CASE(FPTREAD);
      534     4335    2                 IOERROK = FPT$READ_V.IOERROK;
      535     4336    2                 CALL FTW_READ ALTRET(JUSTALT);
      536     4337    2              CASE(FPTWRITE,MFC_WRUR,MFC_WRURUC,MFC_WRBIN);
      537     4338    2                 DVBYTE = BITBIN(FPT$WRITE_V.DVBYTE);
      538     4339    2                 IOERROK = FPT$WRITE_V.IOERROK;
      539     4340    2                 CALL FTW_WRITE ALTRET(JUSTALT);
      540     4341    2              CASE(FPTREW);
      541     4342    2                 CALL FTW_REW ALTRET(JUSTALT);
      542     4343    2              CASE(FPTWEOF);
      543     4344    2                 CALL FTW_WEOF ALTRET(JUSTALT);
      544     4345    2              CASE(FPTPREC);
      545     4346    2                 IOERROK = FPT$PRECORD_V.IOERROK;
      546     4347    2                 CALL FTW_PRECORD ALTRET(JUSTALT);
      547     4348    2              CASE(FPTPFIL);
      548     4349    2                 CALL FTW_PFIL ALTRET(JUSTALT);
      549     4350    2              CASE(ELSE);
      550     4351    2                 CALL FTT$TRUNC ALTRET(JUSTALT);
      551     4352    2              END;
      552     4353
      553     4354    1           IF F$DCB.ACS = %JRNL# THEN      /* Debrief DCB                        */
      554     4355    1              CALL FTR$UNJRNLDCB;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:16   
      555     4356    2           IF (F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2) AND (F$DCB.IOERROK OR IOERROK)
              4356                    THEN DO;
      556     4357    2              B$JIT.ERR = '0'B;
      557     4358    2              RETURN;
      558     4359    2              END;
      559     4360    1           IF B$JIT.ERR THEN
      560     4361    1              ALTRETURN;                   /* Catch lost data, etc.              */
      561     4362    1           IF F$DCB.ASN ~= %DEVICE# OR F$DCB.TAPTYP.MANAGED THEN
      562     4363    1              F$DCB.TYC = '0'B;
      563     4364    1           RETURN;
      564     4365
      565     4366    1   JUSTALT:
      566     4367    1           IF F$DCB.ACS = %JRNL# THEN      /* Debrief DCB                        */
      567     4368    1              CALL FTR$UNJRNLDCB;
      568     4369    2           IF (F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2) AND (F$DCB.IOERROK OR IOERROK)
              4369                    THEN DO;
      569     4370    2              B$JIT.ERR = '0'B;
      570     4371    2              RETURN;
      571     4372    2              END;
      572     4373    1           IF F$DCB.ASN ~= %DEVICE# OR F$DCB.TAPTYP.MANAGED THEN
      573     4374    1              F$DCB.TYC = '0'B;
      574     4375    1           ALTRETURN;
      575     4376        /*********************************************************************/
      576     4377        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:17   
      577     4378        /******************************************************************************/
      578     4379    1   FTW_CHKIO: PROC ALTRET;
      579     4380        /*F*     NAME: FTW_CHKIO
      580     4381                 PURPOSE: Check if I/O is currently allowed.
      581     4382         ***/
      582     4383
      583     4384        /********************/
      584     4385
      585     4386         /***
      586     4387          *** I/O is only possible if we have a drive and position is not lost.
      587     4388          ***/
      588     4389
      589     4390    2              JDCB$ = B$JIT.DCB$;
      590     4391    2              N = F$DCB.SETX;              /* Check if I/O possible              */
      591     4392    3              IF N <= 0 THEN DO;
      592     4393    3                 B$JIT.ERR = E_CANTIO; /*E* ERROR: FTW-E$CANTIO */
      593     4394    3                 ALTRETURN;
      594     4395    3                 END;
      595     4396
      596     4397    2              DDDT$ = NK$LDCT$(N)->NK$LDCT.DDT$;
      597     4398    3              IF FT$DDT.POSLOST OR FT$DDT.FUNNYPOS THEN DO; /* Position lost     */
      598     4399    3                 B$JIT.ERR = E_CANTIO; /*E* ERROR: FTW-E$CANTIO */
      599     4400    3   JUSTALT:      ;
      600     4401    3                 ALTRETURN;
      601     4402    3                 END;
      602     4403
      603     4404         /***
      604     4405          *** Backup before filemark if positioned past.
      605     4406          ***/
      606     4407
      607     4408    2              IF FT$DDT.POS = FTP_CHK# THEN
      608     4409    2                 CALL FTW_RESTORE_POS ALTRET(JUSTALT);
      609     4410    2              RETURN;
      610     4411
      611     4412    2      END FTW_CHKIO;
      612     4413        /*********************************************************************/
      613     4414        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:18   
      614     4415        /******************************************************************************/
      615     4416    1   FTW_RESTORE_POS: PROC ALTRET;
      616     4417        /*F*     NAME: FTW_RESTORE_POS
      617     4418                 PURPOSE: Position before EOF file mark if after it.
      618     4419         ***/
      619     4420
      620     4421        /********************/
      621     4422
      622     4423         /***
      623     4424          *** Back up to file data if positioned after file mark preceeding
      624     4425          *** EOF labels.
      625     4426          ***/
      626     4427
      627     4428    2              IF FT$DDT.POS = FTP_CHK# AND F$DCB.ASN ~= %DEVICE#
      628     4429    3              THEN DO;        /* Positioned after file mark preceeding EOF label */
      629     4430    3                 F$DCB.ARS = -1;           /* Back up                            */
      630     4431    3                 CALL FTI$SPFILE ALTRET(JUSTALT);
      631     4432    3                 IF F$DCB.LPOOL > 0
      632     4433    4                 THEN DO;                  /* Get rid of label FPOOL             */
      633     4434    4                    CALL FMD$RELBUF(F$DCB.LPOOL - 1);
      634     4435    4                    F$DCB.LPOOL = 0;
      635     4436    4                    END;
      636     4437    3                 FT$DDT.POS = FTP_BOD#;
      637     4438    3                 END;
      638     4439    2              RETURN;
      639     4440
      640     4441    2   JUSTALT:   ;
      641     4442    2              ALTRETURN;
      642     4443
      643     4444    2      END FTW_RESTORE_POS;
      644     4445        /******************************************************************************/
      645     4446        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:19   
      646     4447        /*********************************************************************/
      647     4448    1   FTW_READ:  PROC ALTRET;
      648     4449        /*F*    NAME: FTW_READ
      649     4450                PURPOSE: Directs tape read logic to proper routine.
      650     4451         ***/
      651     4452
      652     4453        /********************/
      653     4454
      654     4455    2              CALL FTW_INIT;
      655     4456
      656     4457         /***
      657     4458          *** Take detour now for user buffer read formats.
      658     4459          ***/
      659     4460
      660     4461    3              IF F$DCB.TAPTYP.USRBUF THEN DO; /* Read into user buffer format    */
      661     4462    3                 IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED THEN
      662     4463    3                    IF F$DCB.IASN ~= %OD# THEN
      663     4464    3                       CALL FTW_RDEV ALTRET(JUSTALT);
      664     4465    3                    ELSE
      665     4466    3                       CALL FTW_ODRDEV ALTRET(JUSTALT);
      666     4467    3                 ELSE
      667     4468    3                    CALL FTW_RUSRBUF ALTRET(JUSTALT);
      668     4469    3                 F$DCB.EOP = READEOP#;     /* Successful read                    */
      669     4470    3                 RETURN;
      670     4471    3                 END;
      671     4472
      672     4473         /***
      673     4474          *** If previous operation was not a read, continuation is illegal.
      674     4475          ***/
      675     4476
      676     4477    2              IF FPT$READ_V.DVBYTE.CONT AND F$DCB.EOP ~= READEOP#
      677     4478    3              THEN DO; /* Continuation specified but last operation was not read */
      678     4479    3                 B$JIT.ERR = E_NOCONT;
      679     4480    3                 ALTRETURN;
      680     4481    3                 END;
      681     4482
      682     4483         /***
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:20   
      683     4484          *** Read FPOOL buffer formats.
      684     4485          ***/
      685     4486
      686     4487    2              CALL FTW_RNR ALTRET(JUSTALT);
      687     4488    2              RETURN;
      688     4489
      689     4490    2   JUSTALT:   ;
      690     4491    2              F$DCB.EOP = WHOKNOWSEOP#;
      691     4492    2              ALTRETURN;
      692     4493
      693     4494    2      END FTW_READ;
      694     4495        /*********************************************************************/
      695     4496        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:21   
      696     4497        /*********************************************************************/
      697     4498    1   FTW_WRITE: PROC ALTRET;
      698     4499        /*F*    NAME: FTW_WRITE
      699     4500                PURPOSE: Directs tape write logic to proper routine.
      700     4501         ***/
      701     4502
      702     4503        /********************/
      703     4504
      704     4505    2              CALL FTW_INIT;
      705     4506    2              DVBYTE = BITBIN(FPT$WRITE_V.DVBYTE);
      706     4507
      707     4508         /***
      708     4509          *** Take detour now for user buffer write formats.
      709     4510          ***/
      710     4511
      711     4512    3              IF F$DCB.TAPTYP.USRBUF THEN DO; /* Write user buffer format        */
      712     4513    3                 IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED THEN
      713     4514    3                    IF F$DCB.IASN ~= %OD# THEN
      714     4515    3                       CALL FTW_WDEV ALTRET(JUSTALT);
      715     4516    3                    ELSE
      716     4517    3                       CALL FTW_ODWDEV ALTRET(JUSTALT);
      717     4518    3                 ELSE
      718     4519    3                    CALL FTW_WUSRBUF ALTRET(JUSTALT);
      719     4520    3                 RETURN;
      720     4521    3                 END;
      721     4522
      722     4523         /***
      723     4524          *** If previous operation was not an M$WRITE, reset continuation.
      724     4525          ***/
      725     4526    2              IF F$DCB.EOP ~= WRITEEOP#
      726     4527    2              THEN F$DCB.CONT = %NO#;      /* No previous M$WRITE to continue    */
      727     4528
      728     4529         /***
      729     4530          *** Get ready and write.
      730     4531          ***/
      731     4532
      732     4533    2              CALL FTW_WNR ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:22   
      733     4534    2              RETURN;
      734     4535
      735     4536    2   JUSTALT:
      736     4537    2              F$DCB.EOP = WHOKNOWSEOP#;
      737     4538    2              ALTRETURN;
      738     4539
      739     4540    2      END FTW_WRITE;
      740     4541        /*********************************************************************/
      741     4542        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:23   
      742     4543        /*********************************************************************/
      743     4544    1   FTW_PRECORD: PROC ALTRET;
      744     4545        /*F*    NAME: FTW_PRECORD
      745     4546                PURPOSE: Directs tape precord logic to proper routine.
      746     4547         ***/
      747     4548
      748     4549    2     DCL KEYS BIT(1) ALIGNED AUTO;
      749     4550
      750     4551        /********************/
      751     4552
      752     4553    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow Precord on OD file    */
      753     4554    3                 B$JIT.ERR = E_NOTIMPLEMENTED;
      754     4555    3                 ALTRETURN;
      755     4556    3                 END;
      756     4557    2              IF FPT$PRECORD_V.BOF OR FPT$PRECORD_V.EOF
      757     4558    3              THEN DO;                  /* Position to BOF or EOF before using N */
      758     4559    3                 IF FPT$PRECORD_V.BOF THEN
      759     4560    3                    BOF='1'B;
      760     4561    3                 ELSE BOF='0'B;
      761     4562    3                 CALL FTW_PFIL2 ALTRET(JUSTALT);
      762     4563    3                 END;
      763     4564
      764     4565    2              CALL FTW_CHKIO ALTRET(JUSTALT); /* Make sure I/O allowed           */
      765     4566    2              F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL control     */
      766     4567
      767     4568         /***
      768     4569          *** Detour now for device tape.
      769     4570          ***/
      770     4571
      771     4572    2              IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED
      772     4573    3              THEN DO;
      773     4574    3                 N = FPT$PRECORD_V.N;
      774     4575    3                 CALL FTW_PRDEV ALTRET(ENDPRECORD);
      775     4576    3                 F$DCB.EOP = PRECORDEOP#;
      776     4577    3                 RETURN;
      777     4578    3                 END;
      778     4579
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:24   
      779     4580
      780     4581         /***
      781     4582          *** Initialize for positioning.  End of file is an expected error.
      782     4583          ***/
      783     4584
      784     4585    2              IF NOT F$DCB.TAPTYP.USRBUF
      785     4586    3              THEN DO;                     /* Initialize for FPOOL formats       */
      786     4587    3                 CALL FTW_INIT;
      787     4588    3                 CALL FTW_PNRSNE ALTRET(ENDPRECORD);
      788     4589    3                 END;
      789     4590
      790     4591         /***
      791     4592            *** Set KEYS from fpt. BOF or EOF overrides KEYS, so ignore KEYS
      792     4593            *** if BOF or EOF set.
      793     4594            ***/
      794     4595
      795     4596    2              KEYS=FPT$PRECORD_V.KEYS;
      796     4597    2              IF FPT$PRECORD_V.BOF OR FPT$PRECORD_V.EOF THEN
      797     4598    2                 KEYS='0'B;
      798     4599         /***
      799     4600          *** Position by key first if key is specified.
      800     4601          ***/
      801     4602
      802     4603    2              IF KEYS
      803     4604    3              THEN DO;                     /* Key is specified                   */
      804     4605    3                 CALL FTW_FNDKEY(B$PS$(1)->FT$KEY) ALTRET(JUSTALT);
      805     4606    3                 END;
      806     4607
      807     4608         /***
      808     4609          *** Position by N if 1) keyed format and key not specified,
      809     4610          *** 2) non-keyed format, or 3) N > 0.
      810     4611          ***/
      811     4612
      812     4613    2              N = FPT$PRECORD_V.N;
      813     4614    2              IF N ~= 0 OR (NOT KEYS OR
      814     4615    2                  (F$DCB.ORG = %UNDEF# OR F$DCB.ORG = %CONSEC# OR F$DCB.ORG = %
              4615                           RESTRICT#
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:25   
      815     4616    2                  OR F$DCB.ORG = %FIXED# OR F$DCB.ORG = %UR#
      816     4617    2                  OR F$DCB.ORG = %VARIABLE# OR F$DCB.ORG = %SYMB# OR F$DCB.ORG = %IREL#
              4617                           ))
      817     4618    3              THEN DO;                     /* Position by N                      */
      818     4619    3                 IF F$DCB.TAPTYP.USRBUF
      819     4620    3                 THEN CALL FTW_PRUSRBUF ALTRET(ENDPRECORD);
      820     4621    3                 ELSE CALL FTW_PR ALTRET(ENDPRECORD);
      821     4622    3                 END;
      822     4623
      823     4624    2              IF FPT$PRECORD_V.KEYR
      824     4625    2              THEN CALL FTW_RETURN_KEY_PS1; /* Return key                        */
      825     4626
      826     4627    2              F$DCB.EOP = PRECORDEOP#;
      827     4628
      828     4629    3              DO ALTRET_HANDLING;
      829     4630    3   ENDPRECORD:   ;
      830     4631    3                 F$DCB.EOP = WHOKNOWSEOP#;
      831     4632    3                 END;
      832     4633
      833     4634    2              IF B$JIT.ERR THEN ALTRETURN;
      834     4635    2              RETURN;
      835     4636
      836     4637    2   JUSTALT:   ;
      837     4638    2              ALTRETURN;
      838     4639
      839     4640    2      END FTW_PRECORD;
      840     4641        /*********************************************************************/
      841     4642        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:26   
      842     4643        /*********************************************************************/
      843     4644    1   FTW_PFIL:  PROC ALTRET;
      844     4645        /*F*    NAME: FTW_PFIL
      845     4646                PURPOSE: Sets BOF bit and calls routine which actually handles
      846     4647                         the pfil.
      847     4648         ***/
      848     4649
      849     4650        /*******************/
      850     4651
      851     4652    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow Pfile on OD file      */
      852     4653    3                 B$JIT.ERR = E_NOTIMPLEMENTED;
      853     4654    3                 ALTRETURN;
      854     4655    3                 END;
      855     4656    2              BOF=FPT$PFIL_V.BOF;
      856     4657    2              CALL FTW_PFIL2 ALTRET(JUSTALT);
      857     4658    2              RETURN;
      858     4659
      859     4660    2   JUSTALT:   ;
      860     4661    2              ALTRETURN;
      861     4662
      862     4663    2      END FTW_PFIL;
      863     4664        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:27   
      864     4665        /*********************************************************************/
      865     4666    1   FTW_PFIL2: PROC ALTRET;
      866     4667        /*F*    NAME: FTW_PFIL2
      867     4668                PURPOSE: Directs tape pfil logic to proper routine.
      868     4669         ***/
      869     4670
      870     4671        /*******************/
      871     4672
      872     4673    2              CALL FTW_CHKIO ALTRET(JUSTALT); /* Make sure I/O allowed           */
      873     4674    2              F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL control     */
      874     4675
      875     4676         /***
      876     4677          *** Detour now for device tape.
      877     4678          ***/
      878     4679
      879     4680    2              IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED
      880     4681    3              THEN DO;
      881     4682    3                 CALL FTW_PFDEV ALTRET(JUSTALT);
      882     4683    3                 RETURN;
      883     4684    3                 END;
      884     4685
      885     4686         /***
      886     4687          *** All file formats can be PFIL BOF'd in the same way.
      887     4688          ***/
      888     4689
      889     4690    2              IF BOF
      890     4691    3              THEN DO;                     /* PFIL BOF                           */
      891     4692    3                 IF NOT F$DCB.TAPTYP.USRBUF
      892     4693    4                 THEN DO;                  /* Initialize for user buffer formats */
      893     4694    4                    CALL FTW_INIT;
      894     4695    4                    CALL FTW_PNRSNE ALTRET(JUSTALT); /* Get current record segment */
      895     4696    4                    END;
      896     4697    3                 CALL FTW_BOF ALTRET(JUSTALT);
      897     4698    3                 F$DCB.EOP = PRECORDEOP#;
      898     4699    3                 RETURN;
      899     4700    3                 END;
      900     4701
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:28   
      901     4702         /***
      902     4703          *** Either user buffer format or FPOOL buffer format.
      903     4704          ***/
      904     4705
      905     4706    2              IF F$DCB.TAPTYP.USRBUF
      906     4707    2              THEN CALL FTW_PFUSRBUF ALTRET(ENDPFIL);
      907     4708    3              ELSE DO;
      908     4709    3                 CALL FTW_INIT;
      909     4710    3                 CALL FTW_PFL ALTRET(ENDPFIL);
      910     4711    3                 END;
      911     4712
      912     4713    2              F$DCB.EOP = PRECORDEOP#;
      913     4714
      914     4715    3              DO ALTRET_HANDLING;
      915     4716    3   ENDPFIL:      ;
      916     4717    3                 F$DCB.EOP = WHOKNOWSEOP#;
      917     4718    3                 END;
      918     4719    2              IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
      919     4720    2              B$JIT.ERR = '0'B;            /* Don't return EOF as error          */
      920     4721    2              RETURN;
      921     4722
      922     4723    2   JUSTALT:   ;
      923     4724    2              ALTRETURN;
      924     4725
      925     4726    2      END FTW_PFIL2;
      926     4727        /*********************************************************************/
      927     4728        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:29   
      928     4729        /*********************************************************************/
      929     4730    1   FTW$CVOL:  ENTRY ALTRET;
      930     4731        /*F*     NAME: FTW$CVOL
      931     4732                 PURPOSE: Perform CVOL function
      932     4733         ***/
      933     4734
      934     4735        /********************/
      935     4736
      936     4737    2              IF B$JIT.DCB$->F$DCB.IASN = %OD# THEN DO;
              4737                       /* Don't allow M$CVOL on OD file */
      937     4738    2                 B$JIT.ERR = E_NOTIMPLEMENTED;
      938     4739    2                 ALTRETURN;
      939     4740    2                 END;
      940     4741    1              CVOLFT = %NO#;
      941     4742    1              GOTO FTWCVOLCONT;
      942     4743
      943     4744    1   FTW$CVOLFT: ENTRY ALTRET;
      944     4745
      945     4746    1              CVOLFT = %YES#;
      946     4747
      947     4748    1   FTWCVOLCONT: ;
      948     4749
      949     4750
      950     4751         /***
      951     4752          *** Make sure that DCB is open.  Ignore CVOL if not tape.
      952     4753          ***/
      953     4754
      954     4755    1              JDCB$ = B$JIT.DCB$;
      955     4756    1              IF NOT F$DCB.FCD
      956     4757    2              THEN DO;                     /* DCB isn't open                     */
      957     4758    2                 CALL FMO$GETDOMAIN(N);    /* Set current domain                 */
      958     4759    2                 F$DCB.WSR = N;
      959     4760    2                 CALL FMM$DFLOPN;          /* Default open                       */
      960     4761    2                 IF NOT F$DCB.FCD THEN RETURN; /* Not open?                      */
      961     4762    2                 END;
      962     4763    2              ELSE DO;                    /* Must be same domain if execute only */
      963     4764    2                 IF F$DCB.FFLG.EXEC
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:30   
      964     4765    3                 THEN DO;
      965     4766    3                    CALL FMO$GETDOMAIN(N);
      966     4767    3                    IF F$DCB.WSR ~= N
      967     4768    4                    THEN DO;
      968     4769    4                       B$JIT.ERR = E_DOMAIN; /*E* ERROR: FTW-E$DOMAIN */
      969     4770    4                       RETURN;
      970     4771    4                       END;
      971     4772    3                    END;
      972     4773    2                 END;
      973     4774
      974     4775    1              IF F$DCB.IFMT ~= FMTTAPE# THEN RETURN; /* Ignore for non-tape      */
      975     4776    1              IF F$DCB.ACS = %JRNL#
      976     4777    1              THEN IF NOT F$DCB.OWNER
      977     4778    2                 THEN DO;                  /* Non-owner JRNL user can't CVOL     */
      978     4779    2                    B$JIT.ERR = E_NOTJRNLOWNER; /*E* FTW-E$NOTJRNLOWNER */
      979     4780    2                    RETURN;
      980     4781    2                    END;
      981     4782    2                 ELSE DO;                  /* Enqueue journal                    */
      982     4783    2                    CALL FTR$JRNLDCB;
      983     4784    2                    CALL UQB$MENQXB(F$DCB.CFU$) ALTRET(ENDENQUEUE);
      984     4785    2                    F$DCB.ENQF = %YES#;
      985     4786    2                    END;
      986     4787
      987     4788         /***
      988     4789          *** Make sure I/O is valid for this DCB.
      989     4790          ***/
      990     4791
      991     4792    1              CALL FTW_CHKIO ALTRET(CVOLALT);
      992     4793
      993     4794         /***
      994     4795          *** For device tape just close current volume and open next.
      995     4796          ***/
      996     4797
      997     4798    2              IF F$DCB.ASN = %DEVICE# THEN DO;
      998     4799    3                 IF F$DCB.NOEOF THEN DO;   /* Close output free tape             */
      999     4800    4                    IF F$DCB.TAPTYP.MANAGED THEN DO; /* Trunc any buffers        */
     1000     4801    4                       CALL FTW_END_MANAGED_FREE_SECT ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:31   
     1001     4802    4                       CALL FTI$WRFM ALTRET(JUSTALT);
     1002     4803    4                       F$DCB.ARS = -1;     /* Position before second file mark   */
     1003     4804    4                       CALL FTI$SPFILE ALTRET(JUSTALT);
     1004     4805    4                       END;
     1005     4806    4                    ELSE DO;
     1006     4807    4                       IF NOT F$DCB.TAPTYP.PASTFM THEN
     1007     4808    4                          CALL FTI$WRFM ALTRET(JUSTALT);
     1008     4809                                        /* If write file mark was last, only need one */
     1009     4810    4                       CALL FTI$WRFM ALTRET(JUSTALT);
     1010     4811    4                       F$DCB.ARS = -1;
     1011     4812    4                       CALL FTI$SPFILE ALTRET(JUSTALT); /* Position between      */
     1012     4813    4                       F$DCB.SPAN = %NO#;  /* WEOF not last                      */
     1013     4814    4                       F$DCB.SEZ_OK = %YES#; /* Permit CVOL to scratch           */
     1014     4815    4                       END;
     1015     4816    3                    END;
     1016     4817    2                 ELSE
     1017     4818    2                    F$DCB.SEZ_OK = %NO#;   /* Input...don't permit scratch CVOL  */
     1018     4819    3                 IF NOT CVOLFT THEN DO;
     1019     4820    3                    N = 0;
     1020     4821    3                    CALL HFF$DSIZ( 1, N ) ALTRET( NOUHL );
     1021     4822    3   NOUHL:           ;
     1022     4823    3                    IF N >=4 THEN
     1023     4824    3                       B$PS$(1)->BASED_WORD = 0; /* No UHL                       */
     1024     4825    3                    END;
     1025     4826    2                 CALL FTR$CHNGVOL( F$DCB.VOL+1 ) ALTRET(CVOLALT);
     1026     4827    3                 IF NOT CVOLFT THEN DO;
     1027     4828    3                    N = 0;
     1028     4829    3                    CALL HFF$DSIZ( 2, N ) ALTRET( NOUTL );
     1029     4830    3   NOUTL:           ;
     1030     4831    3                    IF N >= 4 THEN
     1031     4832    3                       B$PS$(2)->BASED_WORD = 0; /* No UTL                       */
     1032     4833    3                    END;
     1033     4834    2                 F$DCB.MUST_CVOL = %NO#;
     1034     4835    2                 RETURN;
     1035     4836    2                 END;
     1036     4837
     1037     4838         /***
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:32   
     1038     4839          *** For labelled tape, position to end of file section before
     1039     4840          *** attempting CVOL.
     1040     4841          ***/
     1041     4842
     1042     4843    2              IF F$DCB.EOP ~= WRITEEOP# THEN DO; /* Need section end             */
     1043     4844    2                 IF NOT F$DCB.MUST_CVOL THEN
              4844                          /* Already after last record segment of section */
     1044     4845    2                    CALL FTW_POSEOSECT ALTRET(CVOLALT);
     1045     4846    2                 END;
     1046     4847    2              ELSE DO;            /* Trunc current buffer before changing volume */
     1047     4848    2                 CALL FTW_INIT;
     1048     4849    2                 F$DCB.CONT = %NO#;        /* Can't continue over M$CVOL         */
     1049     4850    2                 CALL FTW$TRNCHLD ALTRET(CVOLALT);
     1050     4851    2                 F$DCB.CRECX = F$DCB.BOL;  /* Ready to write next block          */
     1051     4852    2                 F$DCB.NRECX = 0;
     1052     4853    2                 F$DCB.BLKLEN = F$DCB.BOL;
     1053     4854    2                 TEMP = F$DCB.BFR.BUFX(F$DCB.CBUFNUM);
     1054     4855    3                 IF TEMP > 0 THEN DO;      /* Trunced a buffer                   */
     1055     4856    3                    AFPOOL$ = FM$BUF$(TEMP);
     1056     4857    3                    CALL FTW_SETBLKLEN;
     1057     4858    3                    END;
     1058     4859    2                 END;
     1059     4860    1              CALL FTL$CVOL(EOXL,ADDR(B$PS$(1)->FOUR_BASED_CHARS),1,ADDR(B$PS$(2)->
              4860                       FOUR_BASED_CHARS),2) ALTRET(CVOLALT);
     1060     4861    1              IF F$DCB.ACS = %JRNL# THEN
     1061     4862    1                 F$DCB.CFU$->FM$CFUJ.ERR_WAIT = %NO#; /* CVOL done               */
     1062     4863    1              IF F$DCB.SPAN THEN
     1063     4864    1                 F$DCB.RPOS = %NO#;        /* Positioned to next segment         */
     1064     4865    1              ELSE
     1065     4866    1                 F$DCB.RPOS = %YES#;       /* Positioned to next record          */
     1066     4867    2              IF F$DCB.ENQF THEN DO;       /* Dequeue                            */
     1067     4868    2                 CALL UQB$MDEQ(F$DCB.CFU$);
     1068     4869    2                 F$DCB.ENQF = %NO#;
     1069     4870    2                 END;
     1070     4871    1              RETURN;
     1071     4872
     1072     4873    1   CVOLALT:   ;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:33   
     1073     4874    1              IF F$DCB.ACS = %JRNL#
     1074     4875    2              THEN DO;
     1075     4876    2                 CALL FTR$UNJRNLDCB;
     1076     4877    2                 END;
     1077     4878    1              IF F$DCB.ENQF
     1078     4879    2              THEN DO;                     /* Dequeue                            */
     1079     4880    2                 CALL UQB$MDEQ(F$DCB.CFU$);
     1080     4881    2                 F$DCB.ENQF = %NO#;
     1081     4882    2                 END;
     1082     4883    1              ALTRETURN;
     1083     4884
     1084     4885    1   ENDENQUEUE: ;                           /* Broke out of enqueue               */
     1085     4886    1              ALTRETURN;
     1086     4887
     1087     4888        /*********************************************************************/
     1088     4889        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:34   
     1089     4890        /*********************************************************************/
     1090     4891    1   FTW_POSEOSECT: PROC ALTRET;
     1091     4892        /*F*     NAME: FTW_POSEOSECT
     1092     4893                 PURPOSE: Position to end of current file section.
     1093     4894         ***/
     1094     4895
     1095     4896        /********************/
     1096     4897
     1097     4898         /***
     1098     4899          *** Make sure that end of section will be detected.
     1099     4900          ***/
     1100     4901
     1101     4902    2              DCVOL = F$DCB.CVOL;
     1102     4903    2              F$DCB.CVOL = %YES#; /* Force end of section condition to be detected */
     1103     4904
     1104     4905         /***
     1105     4906          *** Position to end of section.
     1106     4907          ***/
     1107     4908
     1108     4909    2              IF F$DCB.TAPTYP.USRBUF
     1109     4910    3              THEN DO;                   /* Space records to end of file section */
     1110     4911    3                 IF NOT F$DCB.LSTBLK
     1111     4912    4                 THEN DO;                /* Not already positioned to last block */
     1112     4913    4                    IF F$DCB.ORG = %UNDEF#
     1113     4914    5                    THEN DO;               /* Space physical blocks              */
     1114     4915    5                       F$DCB.ARS = 65500;
     1115     4916    5                       CALL FTI$SPREC ALTRET(ENDCVOL);
     1116     4917    5                       F$DCB.PRECNO = F$DCB.PRECNO + F$DCB.ARS;
              4917                                /* Remember where we are */
     1117     4918    5                       F$DCB.CRECNO = F$DCB.CRECNO + F$DCB.ARS;
     1118     4919    5                       CALL FTL$EOF(EOXL) ALTRET(ENDCVOL);
     1119     4920    5                       END;
     1120     4921    5                    ELSE DO;            /* Must retain RANDOM, IDS, RESTRICT key */
     1121     4922    6                       DO WHILE('1'B);
     1122     4923    6                          CALL FTW_PNUR ALTRET(ENDCVOL);
     1123     4924    6                          END;
     1124     4925    5                       END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:35   
     1125     4926    4                    END;
     1126     4927    4                 ELSE DO;
     1127     4928    4                    B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */
     1128     4929    4                    END;
     1129     4930    3                 END;
     1130     4931    3              ELSE DO;
     1131     4932    3                 CALL FTW_INIT;
     1132     4933    3                 CALL FTW_PNRS(2) ALTRET(ENDCVOL);
     1133     4934    4                 DO WHILE(%YES#);          /* To section end                     */
     1134     4935    4                    CALL FTW_PNRS(1) ALTRET(ENDCVOL);
     1135     4936    4                    F$DCB.RPOS = %NO#;     /* As if record was read              */
     1136     4937    4                    END;
     1137     4938    3                 END;
     1138     4939
     1139     4940         /***
     1140     4941          *** Expected errors are end of volume and end of volume in span.
     1141     4942          ***/
     1142     4943
     1143     4944    2   ENDCVOL:   ;
     1144     4945    2              F$DCB.CVOL = DCVOL;          /* Restore user specified CVOL        */
     1145     4946    2              F$DCB.EOP = PRECORDEOP#;     /* Effectively precorded              */
     1146     4947    2              IF B$JIT.ERR.CODE = %E$EOVOL OR B$JIT.ERR.CODE = %E$EOVOLS
     1147     4948    3              THEN DO;                     /* At section end                     */
     1148     4949    3                 B$JIT.ERR = '0'B;
     1149     4950    3                 RETURN;
     1150     4951    3                 END;
     1151     4952    2              IF B$JIT.ERR.CODE = %E$EOF THEN F$DCB.LSTBLK = %YES#;
     1152     4953    2              ALTRETURN;
     1153     4954
     1154     4955    2      END FTW_POSEOSECT;
     1155     4956        /*********************************************************************/
     1156     4957        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:36   
     1157     4958        /*********************************************************************/
     1158     4959    1   FTW_REW:   PROC ALTRET;
     1159     4960        /*F*     NAME: FTW_REW
     1160     4961                 PURPOSE: Rewind.
     1161     4962         ***/
     1162     4963
     1163     4964        /********************/
     1164     4965
     1165     4966         /***
     1166     4967          *** If device tape, rewind.  If managed, position to bof.
     1167     4968          ***/
     1168     4969
     1169     4970    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow rewinds on OD file    */
     1170     4971    3                 B$JIT.ERR = E_NOTIMPLEMENTED;
     1171     4972    3                 ALTRETURN;
     1172     4973    3                 END;
     1173     4974    2              IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED
     1174     4975    3              THEN DO;                     /* Rewind for device tape             */
     1175     4976    3                 IF F$DCB.NOEOF
     1176     4977    4                 THEN DO;                  /* Need 2 file marks to end tape      */
     1177     4978    4                    IF NOT F$DCB.TAPTYP.PASTFM THEN CALL FTI$WRFM ALTRET(JUSTALT);
     1178     4979    4                    CALL FTI$WRFM ALTRET(JUSTALT);
     1179     4980    4                    F$DCB.NOEOF = %NO#;
     1180     4981    4                    F$DCB.TAPTYP.PASTFM = %NO#; /* WEOF wasn't last operation    */
     1181     4982    4                    END;
     1182     4983    3                 CALL FTI$REWIND ALTRET(JUSTALT); /* Resets DDT.FMCNT            */
     1183     4984    3                 F$DCB.TYC.BOT(1) = %NO#;  /* No BOT error                       */
     1184     4985    3                 F$DCB.MUST_CVOL = %NO#;
     1185     4986    3                 END;
     1186     4987    3              ELSE DO;                     /* Just PFIL BOF for managed tapes    */
     1187     4988    3                 CALL FTW_INIT;
     1188     4989    3                 IF NOT F$DCB.TAPTYP.USRBUF
     1189     4990    3                 THEN CALL FTW_PNRSNE ALTRET(JUSTALT); /* Get current record segment */
     1190     4991    3                 CALL FTW_BOF ALTRET(JUSTALT);
     1191     4992    3                 END;
     1192     4993    2              RETURN;
     1193     4994
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:37   
     1194     4995    2   JUSTALT:   ;
     1195     4996    2              ALTRETURN;
     1196     4997
     1197     4998    2      END FTW_REW;
     1198     4999        /*********************************************************************/
     1199     5000        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:38   
     1200     5001        /*********************************************************************/
     1201     5002    1   FTW_WEOF:  PROC ALTRET;
     1202     5003        /*F*     NAME: FTW_WEOF
     1203     5004                 PURPOSE: Write end of file.
     1204     5005         ***/
     1205     5006
     1206     5007        /********************/
     1207     5008
     1208     5009    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow WEOF on OD file       */
     1209     5010    3                 B$JIT.ERR = E_NOTIMPLEMENTED;
     1210     5011    3                 ALTRETURN;
     1211     5012    3                 END;
     1212     5013         /***
     1213     5014          *** If we must CVOL, do it now.
     1214     5015          ***/
     1215     5016
     1216     5017    2              IF F$DCB.MUST_CVOL
     1217     5018    2              THEN CALL FTW$CVOL ALTRET(JUSTALT);
     1218     5019
     1219     5020         /***
     1220     5021          *** Write file mark for device tapes.  Ignore for managed.
     1221     5022          ***/
     1222     5023
     1223     5024    2              IF F$DCB.ASN = %DEVICE#
     1224     5025    3              THEN DO;
     1225     5026    3                 IF F$DCB.TAPTYP.MANAGED
     1226     5027    4                 THEN DO;                  /* Managed...must trunc any buffers   */
     1227     5028    4                    CALL FTW_END_MANAGED_FREE_SECT ALTRET(JUSTALT);
     1228     5029    4                    F$DCB.NOEOF = %YES#;   /* As if create open                  */
     1229     5030    4                    F$DCB.FMOD = %YES#;
     1230     5031    4                    F$DCB.LSTBLK = %YES#;
     1231     5032    4                    F$DCB.EOP = WRITEEOP#;
     1232     5033    4                    END;
     1233     5034    4                 ELSE DO;
     1234     5035    4                    CALL FTI$WRFM ALTRET(JUSTALT); /* Increments DDT.FMCNT       */
     1235     5036    4                    FT$DDT.POS = FTP_CHK#; /* Remember after file mark           */
     1236     5037    4                    F$DCB.NOEOF = %YES#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:39   
     1237     5038    4                    F$DCB.TAPTYP.PASTFM = %YES#; /* File mark written last       */
     1238     5039    4                    IF F$DCB.TYC.EOT(1)
     1239     5040    4                    THEN IF F$DCB.CVOL
     1240     5041    4                       THEN B$JIT.ERR = E_EOT; /*E* FTW-E$EOT */ /* User handling */
     1241     5042    5                       ELSE DO;
     1242     5043    5                          F$DCB.MUST_CVOL = %YES#;
     1243     5044    5                          F$DCB.TYC.EOT(1) = %NO#;
     1244     5045    5                          END;
     1245     5046    4                    END;
     1246     5047    3                 END;
     1247     5048    3              ELSE DO;                     /* Not device                         */
     1248     5049    3                 CALL FTW_INIT;
     1249     5050    3                 F$DCB.CONT = %NO#;
     1250     5051    3                 IF NOT F$DCB.TAPTYP.USRBUF
     1251     5052    4                 THEN DO;
     1252     5053    4                    IF F$DCB.TRNC ~= FT_NOTRUNC#
     1253     5054    4                    THEN CALL FTW_UNDOTRUNC ALTRET(JUSTALT);
     1254     5055    4                    ELSE AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));
     1255     5056    4                    IF NOT F$DCB.RPOS
     1256     5057    5                    THEN DO;               /* Position to beginning of record    */
     1257     5058    5                       F$DCB.TAPTYP.NOCVOL = %YES#;
     1258     5059    5                       CALL FTW_PNRS(1) ALTRET(CHKEOF);
     1259     5060    6                       DO ALTRET_HANDLING;
     1260     5061    6   CHKEOF:                ;
     1261     5062    6                          IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
              5062                                   /* Serious error */
     1262     5063    6                          CALL FTW_RESTORE_POS ALTRET(JUSTALT);
     1263     5064    6                          B$JIT.ERR = '0'B;
     1264     5065    6                          END;
     1265     5066    5                       END;
     1266     5067    4                    F$DCB.BLKLEN = F$DCB.CRECX;
     1267     5068    4                    F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#;
     1268     5069    4                    F$DCB.FMOD = %YES#;
     1269     5070    4                    F$DCB.NOEOF = %YES#;
     1270     5071    4                    F$DCB.LSTBLK = %YES#;
     1271     5072    4                    F$DCB.EOP = WRITEEOP#;
     1272     5073    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:40   
     1273     5074    3                 END;
     1274     5075    2              RETURN;
     1275     5076
     1276     5077    2   JUSTALT:   ;
     1277     5078    2              ALTRETURN;
     1278     5079
     1279     5080    2      END FTW_WEOF;
     1280     5081        /*********************************************************************/
     1281     5082        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:41   
     1282     5083        /*********************************************************************/
     1283     5084    1   FTT$TRUNC: ENTRY ALTRET;
     1284     5085        /*F*    NAME: FTW$TRUNC
     1285     5086                PURPOSE: Perform M$TRUNC for tape files.
     1286     5087         ***/
     1287     5088
     1288     5089        /********************/
     1289     5090
     1290     5091    1              JDCB$ = B$JIT.DCB$;
     1291     5092
     1292     5093    1              IF F$DCB.BFR.BUFX(FT_RBUF1) > 0
     1293     5094    2              THEN DO;                     /* Buffer exists to be trunced        */
     1294     5095    2                 CALL FTW$TRNCHLD ALTRET(RELBUF); /* Trunc but hold buffer       */
     1295     5096    2   RELBUF:       ;
     1296     5097    2                 CALL FMD$RELBUF(FT_RBUF1);
     1297     5098    2                 IF F$DCB.NEW_FSECT
     1298     5099    2                 THEN F$DCB.TRNC = FT_EBTRUNC#; /* Empty buffer trunc            */
     1299     5100    2                 ELSE F$DCB.TRNC = FT_FBTRUNC#; /* Full buffer trunc             */
     1300     5101    2                 F$DCB.CBUFNUM = 0;        /* Indicate no buffer                 */
     1301     5102    2                 F$DCB.BFR.BUFX(FT_RBUF1) = 0;
     1302     5103    2                 END;
     1303     5104    1              IF F$DCB.LPOOL > 0
     1304     5105    1              THEN CALL FMD$RELBUF( F$DCB.LPOOL - 1 ); /* Get rid of label FPOOL */
     1305     5106    1              F$DCB.LPOOL = 0;             /* Label FPOOL gone                   */
     1306     5107    1              RETURN;
     1307     5108
     1308     5109        /*********************************************************************/
     1309     5110        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:42   
     1310     5111        /*********************************************************************/
     1311     5112    1   FTW_RDEV:  PROC ALTRET;
     1312     5113        /*F*     NAME: FTW_RDEV
     1313     5114                 PURPOSE: Read free format tape.
     1314     5115         ***/
     1315     5116
     1316     5117         /***
     1317     5118          *** Locals:
     1318     5119          ***/
     1319     5120
     1320     5121    2     DCL EOFCNT SBIN AUTO;                 /* Counts file marks                  */
     1321     5122
     1322     5123        /********************/
     1323     5124
     1324     5125    2              EOFCNT = 0;                  /* No file marks seen                 */
     1325     5126
     1326     5127         /***
     1327     5128          *** If last operation was a write, return eof.  Otherwise attempt
     1328     5129          *** read according to BIN bit in FPT.
     1329     5130          ***/
     1330     5131
     1331     5132    2              IF F$DCB.NOEOF
     1332     5133    2              THEN F$DCB.TYC.EOF(1) = %YES#; /* Nothing follows                  */
     1333     5134    3              ELSE DO;                     /* Attempt read                       */
     1334     5135    3   TRYAGAIN:     ;
     1335     5136    3                 F$DCB.ARS = DUBYTES;      /* Set # bytes to read                */
     1336     5137    3                 IF FPT$READ_V.DVBYTE.BIN  /* Read binary or ASCII               */
     1337     5138    3                 THEN CALL FTI$RDBIN(DUB$) ALTRET(JUSTALT);
     1338     5139    3                 ELSE CALL FTI$RDASC(DUB$) ALTRET(JUSTALT);
     1339     5140    3                 IF NOT F$DCB.CVOL AND F$DCB.TYC.EOF(1)
     1340     5141    4                 THEN DO;             /* User wants auto CVOL; double file mark? */
     1341     5142    5                    DO WHILE( F$DCB.TYC.EOF(1) ); /* File mark hit?              */
     1342     5143    5                       EOFCNT = EOFCNT + 1;
     1343     5144    5                       IF EOFCNT < 2
     1344     5145    6                       THEN DO;            /* Check for second file mark         */
     1345     5146    6                          F$DCB.ARS = 1;
     1346     5147    6                          CALL FTI$RDASC(ADDR(TEMP)) ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:43   
     1347     5148    6                          END;
     1348     5149    6                       ELSE DO;            /* Double file mark                   */
     1349     5150    6                          F$DCB.ARS = -1;
     1350     5151    6                          CALL FTI$SPFILE ALTRET(JUSTALT); /* To between marks   */
     1351     5152    6                          CALL FTW$CVOLFT ALTRET(CHKVOLOUT);
     1352     5153    6                          GOTO TRYAGAIN;
     1353     5154    6                          END;
     1354     5155    5                       END;
     1355     5156    4                    F$DCB.ARS = -1;        /* Only 1 file mark                   */
     1356     5157    4                    CALL FTI$SPREC ALTRET(JUSTALT);
     1357     5158    4                    F$DCB.TYC.EOF(1) = %YES#;
     1358     5159    4                    END;
     1359     5160    3                 END;
     1360     5161
     1361     5162         /***
     1362     5163          *** Return eof error if file mark hit.
     1363     5164          ***/
     1364     5165
     1365     5166    2              IF F$DCB.TYC.EOF(1)
     1366     5167    3              THEN DO;
     1367     5168    3                 FT$DDT.POS = FTP_CHK#;    /* Remember after file mark           */
     1368     5169    3                 F$DCB.ARS = 0;            /* Nothing read                       */
     1369     5170    3                 B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */
     1370     5171    3                 FT$DDT.FMCNT = FT$DDT.FMCNT + 1;
     1371     5172                                                /* Count file marks                   */
     1372     5173    3                 F$DCB.TYC.EOD(1) = %YES#;
     1373     5174    3                 F$DCB.TYC(0) = F$DCB.TYC(1);
     1374     5175    3                 END;
     1375     5176    3              ELSE DO;
     1376     5177    3                 FT$DDT.POS = FTP_BOD#;    /* Remember after data                */
     1377     5178    3                 IF NOT FPT$READ_V.DVBYTE.BIN
     1378     5179    4                 THEN DO;                  /* Do conversion if necessary         */
     1379     5180    4                    IF F$DCB.EBCDIC AND F$DCB.CNVRT
     1380     5181    4                        AND NOT FPT$READ_V.DVBYTE.TRANS
     1381     5182    5                    THEN DO;
     1382     5183    5                       CHARZLEN = F$DCB.ARS;
     1383     5184    5                       IF DUBYTES < CHARZLEN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:44   
     1384     5185    5                       THEN CHARZLEN = DUBYTES; /* Limit chars to buf size       */
     1385     5186    5                       CALL XLATE( DUB$->CHARZ, F_EBC_ASC, DUB$->CHARZ );
     1386     5187    5                       END;
     1387     5188    4                    END;
     1388     5189    3                 END;
     1389     5190
     1390     5191    2              RETURN;
     1391     5192
     1392     5193    2   CHKVOLOUT: ;
     1393     5194    2              IF B$JIT.ERR.CODE = %E$VOLOUT
     1394     5195    2              THEN B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */
     1395     5196
     1396     5197    2   JUSTALT:   ;
     1397     5198    2              ALTRETURN;
     1398     5199
     1399     5200    2      END FTW_RDEV;
     1400     5201        /*********************************************************************/
     1401     5202        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:45   
     1402     5203        /*********************************************************************/
     1403     5204    1   FTW_WDEV:  PROC ALTRET;
     1404     5205        /*F*     NAME: FTW_WDEV
     1405     5206                 PURPOSE: Write for free format tape.
     1406     5207         ***/
     1407     5208
     1408     5209        /********************/
     1409     5210
     1410     5211         /***
     1411     5212          *** If we must CVOL, do it now.
     1412     5213          ***/
     1413     5214
     1414     5215    2              IF F$DCB.MUST_CVOL
     1415     5216    2              THEN CALL FTW$CVOLFT ALTRET(JUSTALT);
     1416     5217
     1417     5218         /***
     1418     5219          *** Attempt write according to BIN bit of FPT.
     1419     5220          ***/
     1420     5221
     1421     5222    2              IF DUBYTES < 4
     1422     5223    3              THEN DO;                     /* Record too small                   */
     1423     5224    3                 B$JIT.ERR = E_SMALLRECL; /*E* ERROR:  FTW-E$SMALLRECL */
     1424     5225    3                 ALTRETURN;
     1425     5226    3                 END;
     1426     5227    2              F$DCB.ARS = DUBYTES;         /* Set # bytes to write               */
     1427     5228    2              F$DCB.FMOD = %YES#;
     1428     5229    2              F$DCB.NOEOF = %YES#;         /* Remember tape modified             */
     1429     5230    2              F$DCB.TAPTYP.PASTFM = %NO#;  /* WEOF not last                      */
     1430     5231    2              IF FPT$WRITE_V.DVBYTE.BIN
     1431     5232    2              THEN CALL FTI$WRBIN(DUB$) ALTRET(JUSTALT);
     1432     5233    3              ELSE DO;
     1433     5234    3                 IF F$DCB.CNVRT AND NOT FPT$WRITE_V.DVBYTE.TRANS
     1434     5235    4                 THEN DO;                  /* Conversion requested               */
     1435     5236    4                    CALL HFF$WRITE1(DUB$) ALTRET(NOTRANSLATE);
     1436     5237    4                    IF F$DCB.EBCDIC
     1437     5238    4                    THEN CALL XLATE( DUB$->CHARS, F_ASC_EBC, DUB$->CHARS );
     1438     5239    4                    ELSE CALL XLATE( DUB$->CHARS, F_ASC_ASC, DUB$->CHARS );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:46   
     1439     5240    4                    END;
     1440     5241    3                 CALL FTI$WRASC(DUB$) ALTRET(JUSTALT);
     1441     5242    3                 END;
     1442     5243    2              FT$DDT.POS = FTP_BOD#;       /* Remember after data                */
     1443     5244
     1444     5245         /***
     1445     5246          *** Return end of tape error if necessary.
     1446     5247          ***/
     1447     5248
     1448     5249    2              IF F$DCB.TYC.EOT(1)
     1449     5250    2              THEN IF F$DCB.CVOL
     1450     5251    2                 THEN B$JIT.ERR = E_EOT; /*E* FTW-E$EOT */ /* User handling      */
     1451     5252    3                 ELSE DO;                  /* TFM handles                        */
     1452     5253    3                    F$DCB.MUST_CVOL = %YES#;
     1453     5254    3                    F$DCB.TYC.EOT(1) = %NO#;
     1454     5255    3                    END;
     1455     5256    2              RETURN;
     1456     5257
     1457     5258    2   NOTRANSLATE: ;
     1458     5259    2              B$JIT.ERR = E_CANTTRANSLATE; /*E* FTW-E$CANTTRANSLATE */
     1459     5260
     1460     5261    2   JUSTALT:   ;
     1461     5262    2              ALTRETURN;
     1462     5263
     1463     5264    2      END FTW_WDEV;
     1464     5265        /*********************************************************************/
     1465     5266        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:47   
     1466     5267        /*********************************************************************/
     1467     5268    1   FTW_PRDEV: PROC ALTRET;
     1468     5269        /*F*     NAME: FTW_PRDEV
     1469     5270                 PURPOSE: Position record for free tape.
     1470     5271         ***/
     1471     5272
     1472     5273        /********************/
     1473     5274
     1474     5275    2              IF N > 0
     1475     5276    3              THEN DO;                     /* Positioning forward                */
     1476     5277    3                 IF F$DCB.NOEOF
     1477     5278    4                 THEN DO;                  /* Already at end of tape             */
     1478     5279    4                    F$DCB.ARS = 0;         /* None skipped over                  */
     1479     5280    4                    F$DCB.TYC.EOF(1) = %YES#;
     1480     5281    4                    END;
     1481     5282    4                 ELSE DO;
     1482     5283    4                    F$DCB.ARS = N;         /* Set number of records to skip      */
     1483     5284    4                    CALL FTI$SPREC ALTRET(JUSTALT);
     1484     5285    4                    END;
     1485     5286    3                 END;
     1486     5287    2              ELSE IF N < 0
     1487     5288    3                 THEN DO;                  /* Positioning back                   */
     1488     5289    3                    CALL FTW_DEVBACK ALTRET(JUSTALT); /* Do backup positioning   */
     1489     5290    3                    IF F$DCB.ARS ~= 0 THEN CALL FTI$SPFILE ALTRET(JUSTALT);
     1490     5291    3                    F$DCB.ARS = N;         /* Set number of records to skip      */
     1491     5292    3                    CALL FTI$SPREC ALTRET(JUSTALT);
     1492     5293    3                    END;
     1493     5294    3                 ELSE DO;                  /* Not changing position              */
     1494     5295    3                    F$DCB.ARS = 0;
     1495     5296    3                    F$DCB.TYC = '0'B;
     1496     5297    3                    END;
     1497     5298    2              FT$DDT.POS = FTP_BOD#;       /* Assume after data                  */
     1498     5299
     1499     5300         /***
     1500     5301          *** Return code for error conditions.
     1501     5302          ***/
     1502     5303
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:48   
     1503     5304    2              IF F$DCB.TYC.EOF(1) OR F$DCB.TYC.BOF(1)
     1504     5305    3              THEN DO;
     1505     5306    3                 F$DCB.TYC.EOD(1) = %YES#;
     1506     5307    3                 F$DCB.TYC(0) = F$DCB.TYC(1);
     1507     5308    3                 IF F$DCB.TYC.EOF(1)
     1508     5309    4                 THEN DO;
     1509     5310    4                    FT$DDT.POS = FTP_CHK#; /* Remember after file mark           */
     1510     5311    4                    B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */
     1511     5312    4                    FT$DDT.FMCNT = FT$DDT.FMCNT + 1; /* Count file marks         */
     1512     5313    4                    END;
     1513     5314    4                 ELSE DO;
     1514     5315    4                    B$JIT.ERR = E_BOF; /*E* ERROR: FTW-E$BOF */
     1515     5316    4                    FT$DDT.FMCNT = FT$DDT.FMCNT - 1;
     1516     5317    4                    END;
     1517     5318    3                 END;
     1518     5319    2              ELSE IF F$DCB.TYC.BOT(1)
     1519     5320    3                 THEN DO;
     1520     5321    3                    B$JIT.ERR = E_BOT; /*E* ERROR: FTW-E$BOT */
     1521     5322    3                    FT$DDT.POS = FTP_BOV#; /* At beginning of volume             */
     1522     5323    3                    END;
     1523     5324    2              RETURN;
     1524     5325
     1525     5326    2   JUSTALT:   ;
     1526     5327    2              ALTRETURN;
     1527     5328
     1528     5329    2      END FTW_PRDEV;
     1529     5330        /*********************************************************************/
     1530     5331        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:49   
     1531     5332        /*********************************************************************/
     1532     5333    1   FTW_PFDEV: PROC ALTRET;
     1533     5334        /*F*     NAME: FTW_PFDEV
     1534     5335                 PURPOSE: Position file for free tape.
     1535     5336         ***/
     1536     5337
     1537     5338        /********************/
     1538     5339
     1539     5340    2              IF BOF
     1540     5341    3              THEN DO;                     /* Positioning back                   */
     1541     5342    3                 CALL FTW_DEVBACK ALTRET(JUSTALT); /* Do backup handling         */
     1542     5343    3                 F$DCB.ARS = F$DCB.ARS - 1;
     1543     5344    3                 CALL FTI$SPFILE ALTRET(JUSTALT);
     1544     5345    3                 END;
     1545     5346    2              ELSE IF F$DCB.NOEOF
     1546     5347    2                 THEN F$DCB.TYC.EOF(1) = %YES#;
     1547     5348    3                 ELSE DO;
     1548     5349    3                    F$DCB.ARS = 1;
     1549     5350    3                    CALL FTI$SPFILE ALTRET(JUSTALT);
     1550     5351    3                    END;
     1551     5352    2              FT$DDT.POS = FTP_BOD#;       /* Assume after data                  */
     1552     5353
     1553     5354         /***
     1554     5355          *** Determine code for error conditions.
     1555     5356          ***/
     1556     5357
     1557     5358    2              IF F$DCB.TYC.EOF(1) OR F$DCB.TYC.BOF(1)
     1558     5359    3              THEN DO;
     1559     5360    3                 IF F$DCB.TYC.EOF(1)
     1560     5361    4                 THEN DO;
     1561     5362    4                    FT$DDT.POS = FTP_CHK#; /* Remember after file mark           */
     1562     5363    4                    F$DCB.TYC.EOF(1) = %NO#;
     1563     5364    4                    FT$DDT.FMCNT = FT$DDT.FMCNT + 1; /* Count file marks         */
     1564     5365    4                    END;
     1565     5366    4                 ELSE DO;
     1566     5367    4                    F$DCB.TYC.BOF(1) = %NO#;
     1567     5368    4                    FT$DDT.FMCNT = FT$DDT.FMCNT - 1;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:50   
     1568     5369    4                    END;
     1569     5370    3                 F$DCB.TYC(0) = F$DCB.TYC(1);
     1570     5371    3                 END;
     1571     5372    2              ELSE IF F$DCB.TYC.BOT(1)
     1572     5373    3                 THEN DO;
     1573     5374    3                    B$JIT.ERR = E_BOT; /*E* ERROR: FTW-E$BOT */
     1574     5375    3                    FT$DDT.POS = FTP_BOV#; /* At beginning of volume             */
     1575     5376    3                    END;
     1576     5377    2              RETURN;
     1577     5378
     1578     5379    2   JUSTALT:   ;
     1579     5380    2              ALTRETURN;
     1580     5381
     1581     5382    2      END FTW_PFDEV;
     1582     5383        /*********************************************************************/
     1583     5384        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:51   
     1584     5385        /*********************************************************************/
     1585     5386    1   FTW_DEVBACK: PROC ALTRET;
     1586     5387        /*F*     NAME: FTW_DEVBACK
     1587     5388                 PURPOSE: Prepare for backwards motion on device tape.
     1588     5389         ***/
     1589     5390
     1590     5391        /********************/
     1591     5392
     1592     5393         /***
     1593     5394          *** If no end of file indicator (double eof), write them.
     1594     5395          ***/
     1595     5396
     1596     5397    2              IF F$DCB.NOEOF
     1597     5398    3              THEN DO;
     1598     5399    3                 CALL FTI$WRFM ALTRET(JUSTALT);
     1599     5400    3                 IF F$DCB.TAPTYP.PASTFM
     1600     5401    4                 THEN DO;                  /* File mark written last             */
     1601     5402    4                    F$DCB.ARS = -1;        /* To space back over fm written      */
     1602     5403    4                    END;
     1603     5404    4                 ELSE DO;                  /* Need double file mark              */
     1604     5405    4                    CALL FTI$WRFM ALTRET(JUSTALT);
     1605     5406    4                    F$DCB.ARS = -2;        /* To space back over both written    */
     1606     5407    4                    END;
     1607     5408    3                 F$DCB.NOEOF = %NO#;
     1608     5409    3                 F$DCB.TAPTYP.PASTFM = %NO#;
     1609     5410    3                 END;
     1610     5411    2              ELSE F$DCB.ARS = 0;          /* No backspacing needed              */
     1611     5412
     1612     5413    2              RETURN;
     1613     5414
     1614     5415    2   JUSTALT:   ;
     1615     5416    2              ALTRETURN;
     1616     5417
     1617     5418    2      END FTW_DEVBACK;
     1618     5419        /*********************************************************************/
     1619     5420        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:52   
     1620     5421        /*********************************************************************/
     1621     5422    1   FTW_ODRDEV: PROC ALTRET;
     1622     5423        /*F*     NAME: FTW_ODRDEV
     1623     5424                 PURPOSE: Perform device-type reads for optical disk.
     1624     5425         ***/
     1625     5426
     1626     5427    3              IF FPT$WRITE_V.ODFNC ~= 1 THEN DO; /* Not a map operation?         */
     1627     5428    3                 B$JIT.ERR = E_NOTIMPLEMENTED; /*E* ERROR: FTW-E$NOTIMPLEMENTED */
     1628     5429    3                 ALTRETURN;
     1629     5430    3                 END;
     1630     5431    2              F$DCB.ARS = DUBYTES;
     1631     5432    2              CALL FPO$RDODMAP (DUB$) ALTRET(JUSTALT);
     1632     5433    2              RETURN;
     1633     5434    2   JUSTALT:   ALTRETURN;
     1634     5435
     1635     5436    2      END FTW_ODRDEV;
     1636     5437        /*********************************************************************/
     1637     5438        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:53   
     1638     5439        /*********************************************************************/
     1639     5440    1   FTW_ODWDEV: PROC ALTRET;
     1640     5441        /*F*     NAME: FTW_ODWDEV
     1641     5442                 PURPOSE: Perform device-type writes for optical disk.
     1642     5443         ***/
     1643     5444
     1644     5445    2              IF FPT$WRITE_V.ODFNC ~= 1 AND
     1645     5446    3                  FPT$WRITE_V.ODFNC ~= 2 THEN DO; /* Not LABEL or MAP oeration   */
     1646     5447    3                 B$JIT.ERR = E_NOTIMPLEMENTED; /*E* ERROR: FTW-E$NOTIMPLEMENTED */
     1647     5448    3                 ALTRETURN;
     1648     5449    3                 END;
     1649     5450
     1650     5451    3              IF NOT (B$JIT.PRIV.ACTIVE & %PR_FMSEC#) THEN DO;
     1651     5452    3                 B$JIT.ERR = E_NOTAUTH; /*E* ERROR: FTW-E$NOTAUTH */
     1652     5453    3                 ALTRETURN;
     1653     5454    3                 END;
     1654     5455    2              IF FPT$WRITE_V.ODFNC = 1 THEN
     1655     5456    2                 CALL FPO$LABELOD(DUB$) ALTRET(JUSTALT);
     1656     5457    2              ELSE
     1657     5458    2                 CALL FPO$COPYOD ALTRET(JUSTALT);
     1658     5459    2              RETURN;
     1659     5460
     1660     5461    2   JUSTALT:   ;
     1661     5462    2              ALTRETURN;
     1662     5463
     1663     5464    2      END FTW_ODWDEV;
     1664     5465        /*********************************************************************/
     1665     5466        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:54   
     1666     5467        /*********************************************************************/
     1667     5468    1   FTW_RUSRBUF: PROC ALTRET;
     1668     5469        /*F*     NAME: FTW_RUSRBUF
     1669     5470                 PURPOSE: Read tape file for user buffer formats.
     1670     5471         ***/
     1671     5472
     1672     5473         /***
     1673     5474          *** Locals:
     1674     5475          ***/
     1675     5476
     1676     5477    2     DCL CRNTKEY SBIN AUTO;                /* Current record's key               */
     1677     5478    2     DCL DATA_INCON BIT(1) AUTO;           /* Flag says data lost previously     */
     1678     5479    2     DCL FRSTKEY SBIN AUTO;                /* Key of first record read           */
     1679     5480    2     DCL MAXMKEY SBIN AUTO;                /* Key of last possible record        */
     1680     5481    2     DCL NEXTKEY SBIN AUTO;                /* Expected key of next record        */
     1681     5482        /********************/
     1682     5483
     1683     5484         /***
     1684     5485          *** End of file if read after write.
     1685     5486          ***/
     1686     5487
     1687     5488    2              IF F$DCB.LSTBLK
     1688     5489    2                  AND NOT (FPT$READ_V.KEYS
     1689     5490    2                  AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#) )
     1690     5491    3              THEN DO;                     /* Attempt to read end of file        */
     1691     5492    3                 B$JIT.ERR = E_EOF;        /* ERROR: FTW-E$EOF                   */
     1692     5493    3                 ALTRETURN;
     1693     5494    3                 END;
     1694     5495
     1695     5496         /***
     1696     5497          *** If a key is specified, find specified record.
     1697     5498          ***/
     1698     5499
     1699     5500    2              IF FPT$READ_V.KEYS AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#)
     1700     5501    3              THEN DO;                     /* We've got a key                    */
     1701     5502    3                 CALL FTW_FNDKEY(B$PS$(1)->FOUR_BASED_CHARS) ALTRET(JUSTALT);
     1702     5503    3                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:55   
     1703     5504
     1704     5505         /***
     1705     5506          *** Get FPOOL buffer if non-FULL read of RANDOM or IDS file.
     1706     5507          ***/
     1707     5508
     1708     5509    2              IF NOT FPT$READ_V.FULL AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#)
     1709     5510    3              THEN DO;
     1710     5511    3                 CALL FTW_GETAFPOOL$;      /* Get FPOOL buffer (pointer)         */
     1711     5512    3                 RCWSIZE = 4;              /* Indicate non-FULL                  */
     1712     5513    3                 END;
     1713     5514    3              ELSE DO;                     /* FULL                               */
     1714     5515    3                 RCWSIZE = 0;              /* Indicate FULL                      */
     1715     5516    3                 END;
     1716     5517
     1717     5518         /***
     1718     5519          *** Read next block.
     1719     5520          ***/
     1720     5521
     1721     5522    2              IF RCWSIZE = 0 THEN
     1722     5523    2                 AFPOOL$ = DUB$;           /* Read into user buffer              */
     1723     5524    2              ELSE
     1724     5525    2                 ASEG$ = DUB$;             /* Read into FPOOL                    */
     1725     5526    2              RECSIZE = 0;                 /* Count up number of bytes read      */
     1726     5527    2              SEGSIZE = 0;                 /* Count actual # bytes transferred   */
     1727     5528    2              DATA_INCON = %NO#;
     1728     5529    2              FRSTKEY = -123456789;
     1729     5530    3              DO WHILE(DUBYTES > 0);
     1730     5531    4                 IF F$DCB.OLDIOERR = 1 THEN DO;
              5531                          /* Had an I/O error on the last block. */
     1731     5532    4                    F$DCB.ARS = 1;
     1732     5533    4                    F$DCB.OLDIOERR = 0;
     1733     5534    4                    CALL FTI$SPREC ALTRET(JUSTALT); /* Space past bad block.     */
     1734     5535    4                    F$DCB.OLDIOERR = 3;    /* Past bad block.                    */
     1735     5536    4                    END;
     1736     5537    3                 IF RCWSIZE = 0 THEN
     1737     5538    3                    F$DCB.ARS = DUBYTES;   /* Read maximum possible              */
     1738     5539    3                 ELSE
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:56   
     1739     5540    3                    F$DCB.ARS = 4096;      /* Limited to 1 page                  */
     1740     5541    4                 IF F$DCB.ARS < 4 THEN DO; /* Reads this small are illegal       */
     1741     5542    4                    B$JIT.ERR = E_SMALLRECL; /*E* ERROR: FTW-E$SMALLRECL */
     1742     5543    4                    GOTO SETARSRET;
     1743     5544    4                    END;
     1744     5545    3                 IF DUBYTES + RCWSIZE < F$DCB.ARS THEN
     1745     5546    3                    F$DCB.ARS = DUBYTES + RCWSIZE; /* Limit to user buffer size  */
     1746     5547    4                 CALL FTW_RDFPOOL WHENALTRETURN DO;
     1747     5548    4                    IF B$JIT.ERR.CODE ~= %E$IOERR OR
     1748     5549    4                        F$DCB.IASN = %OD# THEN
     1749     5550    4                       ALTRETURN;
     1750     5551    4                    FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                     */
     1751     5552    4                    IF NOT F$DCB.IOERROK AND NOT IOERROK THEN
     1752     5553    4                       ALTRETURN;
     1753     5554    4                    F$DCB.OLDIOERR = 1;
     1754     5555    4                    F$DCB.TYC.IOERR(1) = '1'B;
     1755     5556    4                    B$JIT.ERR = '0'B;
     1756     5557    4                    END;
     1757     5558    4                 IF F$DCB.TYC.EOF(1) THEN DO; /* Handle end of file section      */
     1758     5559    4                    CALL FTL$EOF(EOXL) ALTRET(CHKEOFV);
     1759     5560    4                    END;
     1760     5561    4                 ELSE DO;                  /* Didn't get end of file             */
     1761     5562    4                    F$DCB.PRECNO = F$DCB.PRECNO + 1;
     1762     5563    4                    F$DCB.CRECNO = F$DCB.CRECNO + 1;
     1763     5564         /***
     1764     5565                *** Read only one record for UNDEF or RESTRICT files.
     1765     5566                ***/
     1766     5567    5                    IF F$DCB.ORG = %UNDEF# OR F$DCB.ORG = %RESTRICT# THEN DO;
     1767     5568                                                /* Read only one record               */
     1768     5569    5                       IF F$DCB.EBCDIC AND F$DCB.CNVRT AND
     1769     5570    6                           NOT FPT$READ_V.DVBYTE.TRANS THEN DO;
              5570                                    /* Translation necessary */
     1770     5571    6                          DUBYTES = F$DCB.ARS;
     1771     5572    6                          CALL XLATE(AFPOOL$->CHARS, F_EBC_ASC, AFPOOL$->CHARS);
     1772     5573    6                          END;
     1773     5574    5                       IF F$DCB.IASN = %OD#
     1774     5575    5                           AND F$DCB.TYC.LD(1) THEN /* Lost data?                */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:57   
     1775     5576    5                          B$JIT.ERR = E_LD;
     1776     5577    5                       RETURN;
     1777     5578    5                       END;
     1778     5579         /***
     1779     5580                *** For RANDOM and IDS, check record "key".
     1780     5581                ***/
     1781     5582    4                    CALL HFC$CACHECLR; /* Clear cache to access real buffer contents */
     1782     5583    4                    CRNTKEY = AFPOOL$->ALIGNED_BASED_WORD;
     1783     5584    4                    F$DCB.TAPTYP.HAVLASTKEY = %YES#;
     1784     5585    4                    F$DCB.LASTKEY = CRNTKEY; /* Note: key returned from LASTKEY  */
     1785     5586    5                    IF FRSTKEY = -123456789 THEN DO; /* First record of group    */
     1786     5587    5                       FRSTKEY = AFPOOL$->ALIGNED_BASED_WORD; /* Remember first  */
     1787     5588    5                       NEXTKEY = FRSTKEY;  /* Fake next expected                 */
     1788     5589    5                       N = F$DCB.BLKL;     /* Make SBIN for divide.              */
     1789     5590    5                       MAXMKEY = FRSTKEY   /* Key of first record in buffer      */
     1790     5591    5                           + DUBYTES / (N - RCWSIZE)
              5591                                    /* Number of records containable */
     1791     5592    5                           - 1;            /* Convert to offset value            */
     1792     5593                                                /* Calc key of last record of group   */
     1793     5594    5                       IF FPT$READ_V.KEYR THEN
     1794     5595    5                          CALL FTW_RETURN_KEY_PS1; /* Return first key if requested */
     1795     5596    5                       END;
     1796     5597    5                    IF CRNTKEY ~= NEXTKEY THEN DO;
              5597                             /* Next record not in sequential order?*/
     1797     5598    6                       IF CRNTKEY < NEXTKEY THEN DO; /* Way out of order         */
     1798     5599    6                          CALL FTW_BACKUSRBUF ALTRET(JUSTALT); /* Backup 1 record */
     1799     5600    6                          F$DCB.ARS = RECSIZE; /* Number of bytes read           */
     1800     5601    6                          IF F$DCB.OLDIOERR = 1 THEN
     1801     5602    6                             F$DCB.TYC.DI(1) = '1'B;
     1802     5603    6                          B$JIT.ERR = E_DI; /*E* FTW-E$DI               */
     1803     5604    6                          ALTRETURN;
     1804     5605    6                          END;
     1805     5606    5                       IF RCWSIZE > 0
     1806     5607    6                       THEN DO;            /* Read into FPOOL                    */
     1807     5608    6                          N = F$DCB.ARS - RCWSIZE; /* Number of bytes to move    */
     1808     5609    6                          TEMP$ = PINCRC( AFPOOL$, RCWSIZE );
     1809     5610    6                          ASEG$->NCHARS = TEMP$->NCHARS;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:58   
     1810     5611    6                          TEMP$ = ASEG$;   /* Save record pointer                */
     1811     5612    6                          END;
     1812     5613    5                       ELSE TEMP$ = AFPOOL$;
     1813     5614    5                       IF CRNTKEY <= MAXMKEY
     1814     5615    6                       THEN DO;            /* Current record is in group         */
     1815     5616    6                          IF RCWSIZE = 0
     1816     5617    7                          THEN DO;         /* Was into user buffer               */
     1817     5618    7                             AFPOOL$ = PINCRC( AFPOOL$, (CRNTKEY-NEXTKEY)*F$DCB.BLKL );
     1818     5619    7                             ASEG$ = AFPOOL$;
     1819     5620    7                             END;
     1820     5621    6                          ELSE ASEG$ = PINCRC( ASEG$, (CRNTKEY-NEXTKEY)*(F$DCB.BLKL-
              5621                                   RCWSIZE) );
     1821     5622    6                          N = F$DCB.ARS - RCWSIZE;
     1822     5623    6                          ASEG$->NCHARS = TEMP$->NCHARS;
              5623                                   /* Move to proper destination */
     1823     5624    6                          END;
     1824     5625    6                       DO WHILE( NEXTKEY < CRNTKEY AND NEXTKEY <= MAXMKEY );
     1825     5626    6                          TEMP$->ALIGNED_BASED_WORD = -1; /* Mark missing gran   */
     1826     5627    6                          NEXTKEY = NEXTKEY + 1;
     1827     5628    6                          RECSIZE = RECSIZE + (F$DCB.BLKL-RCWSIZE);
              5628                                   /* Count missing gran */
     1828     5629    6                          SEGSIZE = RECSIZE;
     1829     5630    6                          TEMP$ = PINCRC( TEMP$, F$DCB.BLKL-RCWSIZE );
     1830     5631    6                          DUBYTES = DUBYTES - (F$DCB.BLKL-RCWSIZE);
     1831     5632    6                          END;
     1832     5633    5                       IF CRNTKEY > MAXMKEY
     1833     5634    6                       THEN DO;            /* Current not in group               */
     1834     5635    6                          CALL FTW_BACKUSRBUF ALTRET(JUSTALT);
     1835     5636    6                          F$DCB.ARS = RECSIZE;
     1836     5637    6                          IF F$DCB.OLDIOERR = 1 THEN
     1837     5638    6                             F$DCB.TYC.DI(1) = '1'B;
     1838     5639    6                          B$JIT.ERR = E_DI; /*E* ERROR: FTW-E$DI        */
     1839     5640    6                          ALTRETURN;
     1840     5641    6                          END;
     1841     5642    5                       DATA_INCON = %YES#; /* Data inconsistency occurred        */
     1842     5643    5                       END;
     1843     5644    5                    ELSE DO;               /* Next record in sequential order    */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:59   
     1844     5645    5                       IF RCWSIZE > 0
     1845     5646    6                       THEN DO;            /* Non-FULL                           */
     1846     5647    6                          N = F$DCB.ARS - RCWSIZE;
     1847     5648    6                          TEMP$ = PINCRC( AFPOOL$, RCWSIZE );
     1848     5649    6                          ASEG$->NCHARS = TEMP$->NCHARS;
     1849     5650    6                          END;
     1850     5651    5                       END;
     1851     5652    4                    NEXTKEY = CRNTKEY + 1; /* Next expected key                  */
     1852     5653         /***
     1853     5654                *** SEGSIZE totals number of bytes actually read. RECSIZE totals
     1854     5655                *** number of bytes in all blocks read.
     1855     5656                ***/
     1856     5657    4                    SEGSIZE = RECSIZE + F$DCB.ARS - RCWSIZE; /* # actually returned */
     1857     5658    4                    DUBYTES = DUBYTES - (F$DCB.BLKL-RCWSIZE);
     1858     5659    4                    IF DUBYTES <= 0
     1859     5660    4                    THEN RECSIZE = SEGSIZE;
     1860     5661    4                    ELSE RECSIZE = RECSIZE + (F$DCB.BLKL-RCWSIZE);
     1861     5662    4                    IF RCWSIZE = 0         /* Ready to read next block           */
     1862     5663    4                    THEN AFPOOL$ = PINCRC( AFPOOL$, F$DCB.BLKL );
     1863     5664    4                    ELSE ASEG$ = PINCRC( ASEG$, F$DCB.BLKL-RCWSIZE );
     1864     5665    4                    END;
     1865     5666    3                 END;
     1866     5667
     1867     5668    2   SETARSRET: ;
     1868     5669    2              F$DCB.ARS = RECSIZE;
     1869     5670    2              IF DATA_INCON THEN B$JIT.ERR = E_DI; /*E* ERROR: FTW-E$DI */
     1870     5671    2              RETURN;
     1871     5672
     1872     5673    2   CHKEOFV:   ;                    /* End of file, end of volume (cvol) handling */
     1873     5674    2              N = B$JIT.ERR.CODE;          /* Get error code                     */
     1874     5675    2              IF N ~= %E$EOF AND N ~= %E$EOVOL THEN ALTRETURN; /* Serious stuff  */
     1875     5676    2              F$DCB.ARS = SEGSIZE;
     1876     5677    2              IF RECSIZE > 0
     1877     5678    3              THEN DO;              /* Read something...return it before eof/eov */
     1878     5679    3                 F$DCB.MUST_CVOL = %NO#;
     1879     5680    3                 IF DATA_INCON
     1880     5681    3                 THEN B$JIT.ERR = E_DI; /*E* ERROR: FTW-E$DI */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:60   
     1881     5682    3                 ELSE B$JIT.ERR = '0'B;
     1882     5683    3                 RETURN;
     1883     5684    3                 END;
     1884     5685    2              F$DCB.EOP = WHOKNOWSEOP#;
     1885     5686
     1886     5687    2   JUSTALT:   ;
     1887     5688    2              ALTRETURN;
     1888     5689
     1889     5690        /****************************************/
     1890     5691
     1891     5692    2   FTW_BACKUSRBUF: PROC ALTRET;
     1892     5693        /*F*     NAME: FTW_BACKUSRBUF
     1893     5694                 PURPOSE: Back up to read already read record.
     1894     5695         ***/
     1895     5696
     1896     5697        /********************/
     1897     5698
     1898     5699    3                 F$DCB.ARS = -1;           /* Back up 1 rec                      */
     1899     5700    3                 CALL FTI$SPREC ALTRET(JUSTALT);
     1900     5701    3                 F$DCB.PRECNO = F$DCB.PRECNO - 1;
     1901     5702    3                 F$DCB.CRECNO = F$DCB.CRECNO - 1;
     1902     5703    3                 RETURN;
     1903     5704
     1904     5705    3   JUSTALT:      ;
     1905     5706    3                 ALTRETURN;
     1906     5707
     1907     5708    3         END FTW_BACKUSRBUF;
     1908     5709
     1909     5710    2      END FTW_RUSRBUF;
     1910     5711        /*********************************************************************/
     1911     5712        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:61   
     1912     5713        /*********************************************************************/
     1913     5714    1   FTW_WUSRBUF: PROC ALTRET;
     1914     5715        /*F*     NAME: FTW_WUSRBUF
     1915     5716                 PURPOSE: Write for user buffer formats.
     1916     5717         ***/
     1917     5718
     1918     5719        /********************/
     1919     5720
     1920     5721         /***
     1921     5722          *** Can't exceed block size for UNDEF or RESTRICT files.
     1922     5723          ***/
     1923     5724
     1924     5725    2              IF F$DCB.BLKL < DUBYTES
     1925     5726    2              THEN IF F$DCB.ORG = %UNDEF# OR F$DCB.ORG = %RESTRICT#
     1926     5727    3                 THEN DO;                  /* Tried to exceed block size         */
     1927     5728    3                    B$JIT.ERR = E_LD; /*E* ERROR: FTW-E$LD */
     1928     5729    3                    DUBYTES = F$DCB.BLKL;  /* Truncate                           */
     1929     5730    3                    END;
     1930     5731
     1931     5732         /***
     1932     5733          *** Convert to EBCDIC if required.
     1933     5734          ***/
     1934     5735
     1935     5736    2              IF F$DCB.CNVRT AND NOT FPT$READ_V.DVBYTE.TRANS
     1936     5737    3              THEN DO;                     /* Conversion requested               */
     1937     5738    3                 CALL HFF$WRITE1(DUB$) ALTRET(NOTRANSLATE);
     1938     5739    3                 IF F$DCB.EBCDIC
     1939     5740    3                 THEN CALL XLATE(DUB$->CHARS, F_ASC_EBC, DUB$->CHARS );
     1940     5741    3                 ELSE CALL XLATE(DUB$->CHARS, F_ASC_ASC, DUB$->CHARS );
     1941     5742    3                 END;
     1942     5743
     1943     5744         /***
     1944     5745          *** FPOOL is needed for non-FULL write to RANDOM or IDS file.
     1945     5746          ***/
     1946     5747
     1947     5748    2              IF NOT FPT$WRITE_V.FULL AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#)
     1948     5749    3              THEN DO;                     /* Buffer needed                      */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:62   
     1949     5750    3                 CALL FTW_GETAFPOOL$;
     1950     5751    3                 RCWSIZE = 4;              /* Indicate non-FULL                  */
     1951     5752    3                 END;
     1952     5753    2              ELSE RCWSIZE = 0;            /* Indicate FULL                      */
     1953     5754
     1954     5755         /***
     1955     5756          *** If a key is specified for RANDOM or IDS files, use it.
     1956     5757          ***/
     1957     5758
     1958     5759    2              IF F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#
     1959     5760    3              THEN DO;                     /* RANDOM, IDS or RESTRICT            */
     1960     5761    3                 CALL HFF$DSIZ(1,TEMP) ALTRET(HOPETEMP0); /* Check if key specified */
     1961     5762    3   HOPETEMP0:    ;
     1962     5763    3                 IF TEMP > 0
     1963     5764    4                 THEN DO;
     1964     5765    4                    TEMPC = B$PS$(1)->FOUR_BASED_CHARS;
     1965     5766    4                    IF TEMP < 0
     1966     5767    5                    THEN DO;               /* Illegal RANDOM or IDS key          */
     1967     5768    5                       B$JIT.ERR = E_RANBADBLK; /*E* ERROR: FTW-E$RANBADBLK */
     1968     5769    5                       ALTRETURN;
     1969     5770    5                       END;
     1970     5771    4                    IF F$DCB.ACS = %SEQUEN# AND F$DCB.TAPTYP.HAVLASTKEY
     1971     5772    5                    THEN DO;               /* Check key order                    */
     1972     5773    5                       IF F$DCB.LASTKEY >= TEMP
     1973     5774    6                       THEN DO;
     1974     5775    6                          B$JIT.ERR = E_KEYORDER; /*E* ERROR: FTW-E$KEYORDER */
     1975     5776    6                          ALTRETURN;
     1976     5777    6                          END;
     1977     5778    5                       END;
     1978     5779    4                    F$DCB.LASTKEY = TEMP - 1; /* Use user's key                  */
     1979     5780    4                    END;
     1980     5781    3                 END;
     1981     5782
     1982     5783         /***
     1983     5784          *** For RANDOM and IDS files, break up buffer into DCB.BLKL
     1984     5785          *** byte blocks.  Write the entire buffer for UNDEF and RESTRICT
     1985     5786          *** files.
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:63   
     1986     5787          ***/
     1987     5788
     1988     5789    2              IF RCWSIZE = 0 THEN
     1989     5790    2                 AFPOOL$ = DUB$;           /* Write from user's buffer           */
     1990     5791    2              ELSE
     1991     5792    2                 ASEG$ = DUB$;             /* Write from FPOOL buffer            */
     1992     5793    2              N = 0;                       /* Record count                       */
     1993     5794    3              DO WHILE(DUBYTES > 0);
     1994     5795    4                 IF DUBYTES+RCWSIZE < 4 THEN DO; /* Record too small             */
     1995     5796    4                    B$JIT.ERR = E_SMALLRECL; /*E* ERROR: FTW-E$SMALLRECL */
     1996     5797    4                    ALTRETURN;
     1997     5798    4                    END;
     1998     5799    4                 IF F$DCB.MUST_CVOL THEN DO; /* CVOL before next write           */
     1999     5800    4                    F$DCB.NOEOF = %YES#;   /* Indicate output CVOL               */
     2000     5801    4                    CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(JUSTALT);
     2001     5802    4                    N = 0;
     2002     5803    4                    END;
     2003     5804    3                 F$DCB.ARS = MINIMUM( DUBYTES+RCWSIZE, F$DCB.BLKL );
     2004     5805    3                 DUBYTES = DUBYTES - F$DCB.ARS - RCWSIZE;
              5805                          /* Calc # bytes for next write */
     2005     5806    4                 IF F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS# THEN DO;
     2006     5807                                                /* Supply RANDOM or IDS key           */
     2007     5808    4                    F$DCB.LASTKEY = F$DCB.LASTKEY + 1;
     2008     5809    4                    AFPOOL$->ALIGNED_BASED_WORD = F$DCB.LASTKEY;
     2009     5810    4                    F$DCB.TAPTYP.HAVLASTKEY = %YES#;
     2010     5811    4                    END;
     2011     5812    4                 IF RCWSIZE > 0 THEN DO;   /* Move record to FPOOL               */
     2012     5813    4                    CHARZLEN = F$DCB.ARS - RCWSIZE;
              5813                             /* Number of bytes from user buffer */
     2013     5814    4                    TEMP$ = PINCRC( AFPOOL$, RCWSIZE );
     2014     5815    4                    TEMP$->CHARZ = ASEG$->CHARZ;
     2015     5816    4                    END;
     2016     5817    4                 CALL FTW_WRFPOOL WHENALTRETURN DO;
     2017     5818    4                    IF B$JIT.ERR.CODE ~= %E$IOERR OR F$DCB.IASN = %OD# THEN
     2018     5819    4                       ALTRETURN;
     2019     5820    4                    FT$DDT.POSLOST = %NO#;
     2020     5821    4                    IF (F$DCB.CVOL) OR (NOT F$DCB.IOERROK AND NOT IOERROK) THEN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:64   
     2021     5822    4                       ALTRETURN;
     2022     5823    4                    CALL FTW_IOERRCVOL ALTRET(JUSTALT);
     2023     5824    4                    F$DCB.PRECNO = F$DCB.PRECNO - 1;
     2024     5825    4                    N = 1 - F$DCB.PRECNO;
     2025     5826    4                    END;
     2026     5827    3                 N = N - 1;                /* One more record written            */
     2027     5828    3                 F$DCB.PRECNO = F$DCB.PRECNO + 1;
     2028     5829    3                 F$DCB.CRECNO = F$DCB.CRECNO + 1;
     2029     5830    4                 IF F$DCB.TYC.EOT(1) THEN DO; /*CVOL necessary                   */
     2030     5831    4                    F$DCB.MUST_CVOL = %YES#; /* Nothing before CVOL              */
     2031     5832    4                    IF F$DCB.CVOL THEN
     2032     5833    4                       IF DUBYTES = 0 THEN
     2033     5834    4                          B$JIT.ERR = E_EOVOL; /*E* ERROR: FTW-E$EOVOL */
     2034     5835    5                       ELSE DO;
              5835                                /* Back up over the records written during this write */
     2035     5836    5                          F$DCB.TAPTYP.HAVLASTKEY = %NO#;
     2036     5837    5                          F$DCB.ARS = N;
     2037     5838    5                          CALL FTI$SPREC ALTRET(JUSTALT);
     2038     5839    5                          B$JIT.ERR = E_EOVOLS; /*E* ERROR: FTW-E$EOVOLS */
     2039     5840    5                          DUBYTES = 0;     /* End write                          */
     2040     5841    5                          END;
     2041     5842    4                    END;
     2042     5843    3                 IF RCWSIZE = 0 THEN       /* On to next record                  */
     2043     5844    3                    AFPOOL$ = PINCRC( AFPOOL$, F$DCB.BLKL );
     2044     5845    3                 ELSE
     2045     5846    3                    ASEG$ = PINCRC( ASEG$, F$DCB.BLKL-RCWSIZE );
     2046     5847    3                 END;
     2047     5848
     2048     5849         /***
     2049     5850          *** Done.
     2050     5851          ***/
     2051     5852
     2052     5853    2              F$DCB.FMOD = %YES#;          /* File modified                      */
     2053     5854    2              F$DCB.NOEOF = %YES#;         /* Need EOF/EOV labels                */
     2054     5855    2              F$DCB.LSTBLK = %YES#;        /* Known last block of file           */
     2055     5856    2              F$DCB.EOP = WRITEEOP#;
     2056     5857    2              RETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:65   
     2057     5858
     2058     5859    2   NOTRANSLATE: ;
     2059     5860    2              B$JIT.ERR = E_CANTTRANSLATE; /*E* FTW-E$CANTTRANSLATE */
     2060     5861
     2061     5862    2   JUSTALT:   ;
     2062     5863    2              ALTRETURN;
     2063     5864
     2064     5865    2      END FTW_WUSRBUF;
     2065     5866        /*********************************************************************/
     2066     5867        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:66   
     2067     5868        /*********************************************************************/
     2068     5869    1   FTW_PRUSRBUF: PROC ALTRET;
     2069     5870        /*F*     NAME: FTW_PRUSRBUF
     2070     5871                 PURPOSE: Position record (PRECORD) for user buffer formats.
     2071     5872         ***/
     2072     5873
     2073     5874        /********************/
     2074     5875
     2075     5876    2              DCRECNO = F$DCB.CRECNO;      /* Save current position              */
     2076     5877
     2077     5878         /***
     2078     5879          *** If N > 0, position forward.
     2079     5880          ***/
     2080     5881
     2081     5882    2              IF N > 0
     2082     5883    3              THEN DO;                     /* Position forward                   */
     2083     5884    3                 IF F$DCB.LSTBLK
     2084     5885    4                 THEN DO;                  /* Already at eof                     */
     2085     5886    4                    B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */
     2086     5887    4                    F$DCB.ARS = 0;         /* Didn't move                        */
     2087     5888    4                    RETURN;
     2088     5889    4                    END;
     2089     5890    4                 DO WHILE(N > 0);          /* While file sections exist          */
     2090     5891    5                    DO WHILE(N > 0 AND NOT F$DCB.TYC(1));
     2091     5892    6                       IF F$DCB.ORG = %UNDEF# THEN DO;
     2092     5893    6                          IF N >= 65500 THEN
     2093     5894    6                             F$DCB.ARS = 65500;
     2094     5895    6                          ELSE
     2095     5896    6                             F$DCB.ARS = N;
     2096     5897    6                          CALL FTI$SPREC ALTRET(JUSTALT); /* Record forward      */
     2097     5898    6                          F$DCB.PRECNO = F$DCB.PRECNO + F$DCB.ARS;
     2098     5899    6                          F$DCB.CRECNO = F$DCB.CRECNO + F$DCB.ARS;
     2099     5900    6                          N = N - F$DCB.ARS;
     2100     5901    6                          END;
     2101     5902    6                       ELSE DO;
     2102     5903    6                          CALL FTW_PNUR ALTRET(CHKEOFV);
     2103     5904    6                          N = N - 1;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:67   
     2104     5905    6                          END;
     2105     5906    5                       END;
     2106     5907    5                    IF F$DCB.TYC.EOF(1) THEN DO; /* End of file                  */
     2107     5908    5                       CALL FTL$EOF(EOXL) ALTRET(CHKEOFV);
     2108     5909    6                       DO ALTRET_HANDLING;
     2109     5910    6   CHKEOFV:               ;               /* Either end of file or serious error */
     2110     5911    6                          IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
     2111     5912    6                          N = 0;           /* Done positioning                   */
     2112     5913    6                          END;
     2113     5914    5                       END;
     2114     5915    4                    END;
     2115     5916    3                 F$DCB.ARS = F$DCB.CRECNO - DCRECNO;
     2116     5917    3                 RETURN;
     2117     5918    3                 END;
     2118     5919
     2119     5920         /***
     2120     5921          *** N<0, position backwards.
     2121     5922          ***/
     2122     5923
     2123     5924    2              IF N < 0
     2124     5925    3              THEN DO;
     2125     5926    3                 IF NOT (FPT$PRECORD_V.NOMARKS) THEN
     2126     5927    3                    CALL FTW_TRNCWEOF ALTRET(JUSTALT);
              5927                             /* Write EOF labels if necessary */
     2127     5928    3                 F$DCB.LSTBLK = %NO#;
     2128     5929    3                 IF N + DCRECNO <= 1
     2129     5930    4                 THEN DO;                  /* Would hit BOF                      */
     2130     5931    4                    CALL FTW_BOF ALTRET(JUSTALT);
     2131     5932    4                    IF N + DCRECNO < 1 THEN B$JIT.ERR = E_BOF; /*E* ERROR: FTW-E$BOF */
     2132     5933    4                    END;
     2133     5934    4                 ELSE DO;                  /* Will not hit BOF                   */
     2134     5935    4                    F$DCB.MUST_CVOL = %NO#;
     2135     5936    4                    F$DCB.PRECNO = F$DCB.PRECNO - 1;
     2136     5937                                                /* Calc # recs already past           */
     2137     5938         /***
     2138     5939               *** The following DO WHILE positions backwards
     2139     5940               *** over file sections.  DCB.PRECNO = # recs this section.
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:68   
     2140     5941               ***/
     2141     5942    5                    DO WHILE (F$DCB.PRECNO < -N);
     2142     5943    5                       F$DCB.CRECNO = F$DCB.CRECNO - F$DCB.PRECNO;
     2143     5944    5                       N = N + F$DCB.PRECNO;
     2144     5945                                             /* Subtract # records in current section */
     2145     5946    5                       CALL FTL$PBSN(0,ADDR(NIL),F$DCB.FSECT - 1) ALTRET(JUSTALT);
     2146     5947                                                /* Position to previous file section  */
     2147     5948    5                       F$DCB.ARS = 65500;  /* Space to end of section            */
     2148     5949    5                       CALL FTI$SPREC ALTRET(JUSTALT);
     2149     5950    5                       IF F$DCB.FSECT = 1 AND F$DCB.TAPTYP.CP6F
     2150     5951    5                       THEN F$DCB.PRECNO = F$DCB.ARS - 1; /* Don't count FIT     */
     2151     5952    5                       ELSE F$DCB.PRECNO = F$DCB.ARS;
     2152     5953                /* DCB.PRECNO contains the number of data blocks in this file section */
     2153     5954    5                       END;
     2154     5955         /***
     2155     5956               *** Desired position is in this file section.
     2156     5957               ***/
     2157     5958    4                    F$DCB.ARS = N;
     2158     5959    4                    CALL FTI$SPREC ALTRET(JUSTALT);
     2159     5960    4                    F$DCB.PRECNO = F$DCB.PRECNO + N + 1;
     2160     5961    4                    F$DCB.CRECNO = F$DCB.CRECNO + N;
     2161     5962    4                    END;
     2162     5963    3                 END;
     2163     5964
     2164     5965    2              F$DCB.ARS = DCRECNO - F$DCB.CRECNO;
     2165     5966         /***
     2166     5967          *** Get key of non-UNDEF record.
     2167     5968          ***/
     2168     5969    2              IF F$DCB.ORG ~= %UNDEF#
     2169     5970    3              THEN DO;
     2170     5971    3                 ERRSAV = B$JIT.ERR;       /* In case of BOF or EOF              */
     2171     5972    3                 CALL FTW_PNUR ALTRET(CHKEOFV2);
     2172     5973    3                 F$DCB.ARS = -1;           /* Backup before record               */
     2173     5974    3                 CALL FTI$SPREC ALTRET(JUSTALT);
     2174     5975    3                 F$DCB.PRECNO = F$DCB.PRECNO - 1;
     2175     5976    3                 F$DCB.CRECNO = F$DCB.CRECNO - 1;
     2176     5977    3                 F$DCB.TAPTYP.HAVLASTKEY = %NO#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:69   
     2177     5978    4                 DO ALTRET_HANDLING;
     2178     5979    4   CHKEOFV2:        ;
     2179     5980    4                    IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
     2180     5981    4                    END;
     2181     5982    3                 B$JIT.ERR = ERRSAV;
     2182     5983    3                 END;
     2183     5984    2              RETURN;
     2184     5985
     2185     5986    2   JUSTALT:   ;
     2186     5987    2              ALTRETURN;
     2187     5988
     2188     5989    2      END FTW_PRUSRBUF;
     2189     5990        /*********************************************************************/
     2190     5991        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:70   
     2191     5992        /*********************************************************************/
     2192     5993    1   FTW_PFUSRBUF: PROC ALTRET;
     2193     5994        /*F*     NAME: FTW_PFUSRBUF
     2194     5995                 PURPOSE: Position file for user buffer formats.
     2195     5996         ***/
     2196     5997
     2197     5998        /********************/
     2198     5999
     2199     6000         /***
     2200     6001          *** Might already be at file end.
     2201     6002          ***/
     2202     6003
     2203     6004    2              IF F$DCB.LSTBLK THEN RETURN;
     2204     6005
     2205     6006         /***
     2206     6007          *** Find end of last section of file.
     2207     6008          ***/
     2208     6009
     2209     6010    3              DO WHILE( B$JIT.ERR.CODE ~= %E$EOF );
     2210     6011    3                 IF F$DCB.ORG = %UNDEF#
     2211     6012    4                 THEN DO;                  /* Position by physical blocks        */
     2212     6013    4                    F$DCB.ARS = 65500;
     2213     6014    4                    CALL FTI$SPREC ALTRET(JUSTALT);
     2214     6015    4                    F$DCB.PRECNO = F$DCB.PRECNO + F$DCB.ARS;
     2215     6016    4                    F$DCB.CRECNO = F$DCB.CRECNO + F$DCB.ARS;
     2216     6017    4                    CALL FTL$EOF(EOXL) ALTRET(CHKEOFV); /* Handle end of file    */
     2217     6018    4                    END;
     2218     6019    4                 ELSE DO;
     2219     6020    5                    DO WHILE('1'B);
     2220     6021    5                       CALL FTW_PNUR ALTRET(CHKEOFV);
     2221     6022    5                       END;
     2222     6023    4                    END;
     2223     6024    4                 DO ALTRET_HANDLING;
     2224     6025    4   CHKEOFV:         ;
     2225     6026    4                    IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
              6026                             /* Expecting end of file */
     2226     6027    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:71   
     2227     6028    3                 END;
     2228     6029
     2229     6030         /***
     2230     6031          *** End of file.
     2231     6032          ***/
     2232     6033
     2233     6034    2              F$DCB.LSTBLK = %YES#;
     2234     6035    2              RETURN;
     2235     6036
     2236     6037    2   JUSTALT:   ;
     2237     6038
     2238     6039    2      END FTW_PFUSRBUF;
     2239     6040        /*********************************************************************/
     2240     6041        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:72   
     2241     6042        /*********************************************************************/
     2242     6043    1   FTW_RNR:   PROC ALTRET;
     2243     6044        /*F*    NAME: FTW_RNR
     2244     6045                PURPOSE: Fixed and variable format tape read next record.
     2245     6046                INPUT:   B$PS$(0)    -> V area of READ FPT
     2246     6047                         JDCB$   -> DCB
     2247     6048                         B$JIT$  -> JIT
     2248     6049                         DUB$    = F$DCB.UC$
     2249     6050                         DUBYTES = F$DCB.UBYTES
     2250     6051                         AFPOOL$ -> FPOOL buffer
     2251     6052                         SEGSIZE = size of current segment
     2252     6053                         SPANINFO = spanning information of current segment
     2253     6054                ALTRET: If a record (portion) is not returned.
     2254     6055         ***/
     2255     6056        /********************/
     2256     6057
     2257     6058         /***
     2258     6059          *** Get current record segment.
     2259     6060          ***/
     2260     6061
     2261     6062    2              CALL FTW_PNRS(2) ALTRET(CHKKEYE);
     2262     6063    3              DO ALTRET_HANDLING;
     2263     6064    3   CHKKEYE:      ;                         /* If read by key, eof might be ok    */
     2264     6065    3                 IF (B$JIT.ERR.CODE = %E$EOF AND NOT FPT$READ_V.KEYS)
     2265     6066    3                     OR B$JIT.ERR.CODE ~= %E$EOF
     2266     6067    3                 THEN ALTRETURN;          /* Not EOF or EOF and no key specified */
     2267     6068    3                 CALL FTW_RESTORE_POS ALTRET(JUSTALT);
              6068                          /* Restore position if after file mark */
     2268     6069                                            /* EOF error will be passed to FTW_FNDKEY */
     2269     6070    3                 END;
     2270     6071
     2271     6072         /***
     2272     6073          *** If continuation is not specified, position to the next record
     2273     6074          *** to read.  If continuation is specified, make sure we are still
     2274     6075          *** reading the current segment.   Unit record can not be continued.
     2275     6076          ***/
     2276     6077
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:73   
     2277     6078    2              IF FPT$READ_V.DVBYTE.CONT
     2278     6079    3              THEN DO;                    /* Expect continuation of last segment */
     2279     6080    3                 IF F$DCB.RPOS
     2280     6081    4                 THEN DO;    /* At next record already...end of previous segment */
     2281     6082    4                    F$DCB.ARS = 0;  /* Nothing left of previous record (segment) */
     2282     6083    4                    RETURN;
     2283     6084    4                    END;
     2284     6085    3                 END;
     2285     6086    3              ELSE DO;                     /* Continuation is not specified      */
     2286     6087    3                 IF NOT F$DCB.RPOS
     2287     6088    4                 THEN DO;                  /* Get next record                    */
     2288     6089    4                    CALL FTW_PNRS(1) ALTRET(CHKKEYE2);
     2289     6090    5                    DO ALTRET_HANDLING;    /* If read by key, eof ok             */
     2290     6091    5   CHKKEYE2:           ;
     2291     6092    5                       IF B$JIT.ERR.CODE ~= %E$EOF OR NOT FPT$READ_V.KEYS
     2292     6093    5                       THEN ALTRETURN;
     2293     6094    5                       CALL FTW_RESTORE_POS ALTRET(JUSTALT);
              6094                                /* Restore position if after file mark */
     2294     6095    5                       END;
     2295     6096    4                    END;
     2296     6097         /***
     2297     6098             *** Find by key if specified.
     2298     6099             ***/
     2299     6100    3                 IF FPT$READ_V.KEYS AND F$DCB.IASN ~= %OD# THEN
     2300     6101    3                    CALL FTW_FNDKEY(B$PS$(1)->FT$KEY) ALTRET(JUSTALT);
              6101                             /* Key is specified */
     2301     6102    3   HOPEN0:       ;
     2302     6103    3                 IF FPT$READ_V.KEYR
     2303     6104    3                 THEN CALL FTW_RETURN_KEY_PS1; /* Return key                     */
     2304     6105         /***
     2305     6106             *** For keyed and indexed files, skip over key to record data.
     2306     6107             ***/
     2307     6108    3                 IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# OR F$DCB.ORG = %
              6108                          RELATIVE#
     2308     6109    4                 THEN DO;          /* Don't include RCW or key as part of record */
     2309     6110    4                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     2310     6111    4                    IF F$DCB.ORG = %KEYED#
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:74   
     2311     6112    4                    THEN F$DCB.GDISP = RCWSIZE + ASEG$->FT$KEY.KL + 1;
     2312     6113    4                    ELSE IF F$DCB.ORG = %RELATIVE#
     2313     6114    5                       THEN DO;
     2314     6115    5                          F$DCB.GDISP = RCWSIZE + 4;
     2315     6116    5                          ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
              6116                                   /* Key pointer */
     2316     6117    5                          F$DCB.LASTKEY = ASEG$->BASED_WORD; /* Save last key read */
     2317     6118    5                          END;
     2318     6119    4                       ELSE F$DCB.GDISP = RCWSIZE + F$DCB.KEYL;
     2319     6120    4                    IF F$DCB.CRECX + F$DCB.GDISP > F$DCB.BLKLEN
     2320     6121    5                    THEN DO;               /* Key not wholly contained in block  */
     2321     6122    5                       F$DCB.GDISP = SEGSIZE; /* Use max displacement for segment */
     2322     6123    5                       B$JIT.ERR = E_PARTIALKEY; /*E* ERROR: FTW-E$PARTIALKEY */
     2323     6124    5                       END;
     2324     6125    4                    END;
     2325     6126    3                 F$DCB.RPOS = %NO#;        /* This record will be read           */
     2326     6127    3                 END;
     2327     6128
     2328     6129         /***
     2329     6130          *** Read spanned segments until tape record ends or lost
     2330     6131          *** data error.
     2331     6132          ***/
     2332     6133
     2333     6134    2              BYTES_TO_GO = DUBYTES;       /* Total # bytes to read              */
     2334     6135    2              RECSIZE = 0;                 /* Moved nothing so far               */
     2335     6136    2              F$DCB.EOP = READEOP#;        /* Last operation was read            */
     2336     6137    3              DO WHILE( BYTES_TO_GO > 0 );
     2337     6138    3                 DUBYTES = BYTES_TO_GO;    /* Get next segment                   */
     2338     6139         /***
     2339     6140             *** Calculate the number of bytes remaining to be read.
     2340     6141             *** If this exceeds the user's buffer size ... lost data.
     2341     6142             ***/
     2342     6143    3                 ARECL = SEGSIZE - F$DCB.GDISP;
              6143                          /* Calc # of remaining bytes in segment */
     2343     6144    3                 IF DUBYTES < ARECL
     2344     6145    3                 THEN B$JIT.ERR = E_LD;
     2345     6146    3                 ELSE DUBYTES = ARECL;     /* Move at most # bytes remaining     */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:75   
     2346     6147         /***
     2347     6148             *** Calculate pointer to next record (portion).  Move record
     2348     6149             *** (portion) to the user's buffer and set DCB fields
     2349     6150             *** to be ready for a continued READ. Translate if necessary.
     2350     6151             ***/
     2351     6152    3                 ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + F$DCB.GDISP );
     2352     6153    3                 IF F$DCB.EBCDIC
     2353     6154    4                 THEN DO;                  /* Conversion to ASCII possible       */
     2354     6155    4                    IF F$DCB.CNVRT AND NOT FPT$READ_V.DVBYTE.TRANS
     2355     6156    4                    THEN CALL XLATE( DUB$->CHARS, F_EBC_ASC, ASEG$->CHARS );
     2356     6157    4                    ELSE DUB$->CHARS = ASEG$->CHARS;
     2357     6158    4                    END;
     2358     6159    3                 ELSE DUB$->CHARS = ASEG$->CHARS;
     2359     6160    3                 RECSIZE = RECSIZE + DUBYTES; /* Total up bytes moved            */
     2360     6161    3                 BYTES_TO_GO = BYTES_TO_GO - DUBYTES;
     2361     6162         /***
     2362     6163             *** If spanning and more bytes to read, get them.
     2363     6164             ***/
     2364     6165    3                 IF (SPANINFO = 1 OR SPANINFO = SPAN_MID)
              6165                          /* Another segment should follow */
     2365     6166    4                     AND BYTES_TO_GO > 0 THEN DO; /* Get next segment            */
     2366     6167    4                    CALL FTW_PNRS(0) ALTRET(CANTCONT);
     2367     6168    4                    DUB$ = PINCRC( DUB$, DUBYTES ); /* Advance destination pointer */
     2368     6169    5                    IF SPANINFO <= 1 THEN DO; /* Span error...at next record to read */
     2369     6170    5                       F$DCB.RPOS = %YES#;
     2370     6171    5   CANTCONT:           F$DCB.NRECX = F$DCB.NRECX + 1;
     2371     6172    5                       F$DCB.CRECNO = F$DCB.CRECNO + 1; /* Count new record      */
     2372     6173    5                       F$DCB.ARS = RECSIZE;
     2373     6174    5                       F$DCB.GDISP = RCWSIZE;
     2374     6175    5                       IF B$JIT.ERR.CODE = %E$EOF AND RECSIZE > 0
     2375     6176    5                       THEN B$JIT.ERR = E_BADSPAN; /*E* ERROR: FTW-E$BADSPAN */
     2376     6177    5                       RETURN;
     2377     6178    5                       END;
     2378     6179    4                    END;
     2379     6180    3                 ELSE
     2380     6181    3                    BYTES_TO_GO = 0;       /* No more segments in this record    */
     2381     6182    3                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:76   
     2382     6183    2              F$DCB.ARS = RECSIZE;         /* Number of bytes moved              */
     2383     6184    2              F$DCB.GDISP = F$DCB.GDISP + DUBYTES;
     2384     6185                    /* Ix of next unread byte = ix of prev unread byte + # bytes read */
     2385     6186    2              IF (SPANINFO = 1 OR SPANINFO = SPAN_MID) AND F$DCB.GDISP = F$DCB.BLKL
              6186                       THEN
     2386     6187    2                 B$JIT.ERR = E_LD;         /* Spanned to next block:  lost data. */
     2387     6188    2              RETURN;
     2388     6189
     2389     6190    2   JUSTALT:   ;
     2390     6191    2              ALTRETURN;
     2391     6192
     2392     6193    2      END FTW_RNR;
     2393     6194        /*********************************************************************/
     2394     6195        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:77   
     2395     6196        /*********************************************************************/
     2396     6197    1   FTW_WNR:   PROC ALTRET;
     2397     6198        /*F*    NAME: FTW_WNR
     2398     6199                PURPOSE: Fixed and variable format tape write next record.
     2399     6200                INPUT:   JDCB$    -> DCB
     2400     6201                         DUB$     = F$DCB.UB$
     2401     6202                         DUBYTES  = F$DCB.UBYTES
     2402     6203                         B$PS$(0)     -> V area of WRITE FPT
     2403     6204         ***/
     2404     6205
     2405     6206        /********************/
     2406     6207
     2407     6208    2              IF F$DCB.TRNC ~= FT_NOTRUNC#
     2408     6209    2              THEN CALL FTW_UNDOTRUNC ALTRET(JUSTALT);
     2409     6210    2              ELSE AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));
     2410     6211
     2411     6212         /***
     2412     6213          *** Position to beginning of next record to write if not continued.
     2413     6214          ***/
     2414     6215
     2415     6216    2              IF F$DCB.CONT
     2416     6217    3              THEN DO;                     /* Remember spanning information      */
     2417     6218    3                 CALL FTW_GETSIZE ALTRET(JUSTALT);
     2418     6219    3                 IF SPANINFO > 1 THEN F$DCB.SPAN = %YES#;
              6219                          /* Segment continues previous */
     2419     6220    3                 END;
     2420     6221    3              ELSE DO;                     /* Position to next record to write   */
     2421     6222    3                 IF NOT F$DCB.RPOS
     2422     6223    4                 THEN DO;                  /* Not already there                  */
     2423     6224    4                    F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL handling */
     2424     6225    4                    CALL FTW_PNRS(1) ALTRET(CHKEOF); /* Next record              */
     2425     6226    5                    DO ALTRET_HANDLING;
     2426     6227    5   CHKEOF:             ;
     2427     6228    5                       IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN; /* Serious error */
     2428     6229    5                       CALL FTW_RESTORE_POS ALTRET(JUSTALT);
     2429     6230    5                       B$JIT.ERR = '0'B;   /* Write at end of file               */
     2430     6231    5                       END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:78   
     2431     6232    4                    END;
     2432     6233         /***
     2433     6234             *** Check key length/location and order if necessary.
     2434     6235             ***/
     2435     6236    4                 DO CASE(F$DCB.ORG);
     2436     6237    4                    CASE(%KEYED#,%INDEXED#,%RELATIVE#);
     2437     6238    4                       CALL FTW_CHK_KEY_PS1 ALTRET(JUSTALT); /* Check key        */
     2438     6239    4                       IF F$DCB.ACS = %SEQUEN# AND F$DCB.TAPTYP.HAVLASTKEY
     2439     6240    5                       THEN DO;            /* Must check key order               */
     2440     6241    5                          IF F$DCB.ORG = %KEYED#
     2441     6242    6                          THEN DO;
     2442     6243    6                             UKEYLEN = B$PS$(1)->FT$KEY.KL;
     2443     6244    6                             UKEY$ = PINCRC( ADDR(B$PS$(1)->FT$KEY), 1 );
     2444     6245    6                             ASEG$ = F$DCB.LASTKEY$; /* Pass arguments           */
     2445     6246    6                             CALL FTW_COMPARE_KEYS;
     2446     6247    6                             END;
     2447     6248    5                          ELSE IF F$DCB.ORG = %INDEXED#
     2448     6249    6                             THEN DO;
     2449     6250    6                                UKEY$ = PINCRC( DUB$, F$DCB.KEYX );
     2450     6251    6                                UKEYLEN = F$DCB.KEYL;
     2451     6252    6                                ASEG$ = F$DCB.LASTKEY$;
     2452     6253    6                                CALL FTW_COMPARE_KEYS;
     2453     6254    6                                END;
     2454     6255    6                             ELSE DO;
     2455     6256    6                                CALL HFF$DSIZ(1,TEMP) ALTRET(HOPETEMP00);
     2456     6257    6   HOPETEMP00:                  IF TEMP ~= 0
     2457     6258    7                                THEN DO;   /* User specified key to check        */
     2458     6259    7                                   UKEY$ = ADDR( B$PS$(1)->FOUR_BASED_CHARS );
     2459     6260    7                                   IF UKEY$->BASED_WORD < 1
     2460     6261    8                                   THEN DO;
     2461     6262    8                                      B$JIT.ERR = E_FILLIM; /*E* ERROR: FTW-E$FILLIM */
     2462     6263    8                                      ALTRETURN;
     2463     6264    8                                      END;
     2464     6265    7                                   ASEG$ = ADDR( F$DCB.LASTKEY );
     2465     6266    7                                   CALL FTW_COMPARE_KEYS;
     2466     6267    7                                   END;
     2467     6268    6                                ELSE TEMP = 1; /* Key will be manufactured       */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:79   
     2468     6269    6                                END;
     2469     6270    5                          IF TEMP ~= 1
     2470     6271    6                          THEN DO;    /* User's key is not greater than previous */
     2471     6272    6                             B$JIT.ERR = E_KEYORDER; /*E* FTW-E$KEYORDER */
     2472     6273    6                             ALTRETURN;
     2473     6274    6                             END;
     2474     6275    5                          END;
     2475     6276    4                    CASE(ELSE);
     2476     6277    4                       KEYSIZE = 0;
     2477     6278    4                    END;
     2478     6279         /***
     2479     6280             *** Positioned to next record to write.  If previous write request
     2480     6281             *** resulted in EOT detection, CVOL now.
     2481     6282             ***/
     2482     6283    3                 IF F$DCB.MUST_CVOL
     2483     6284    4                 THEN DO;                  /* CVOL now                           */
     2484     6285    4                    F$DCB.NOEOF = %YES#;   /* Indicate output CVOL               */
     2485     6286    4                    CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(JUSTALT);
     2486     6287    4                    F$DCB.CRECX = F$DCB.BOL; /* Resume at first blk of sect      */
     2487     6288    4                    F$DCB.NRECX = 1;       /* At first record of block           */
     2488     6289    4                    END;
     2489     6290    3                 F$DCB.BLKLEN = F$DCB.CRECX;
     2490     6291    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#;
     2491     6292    3                 F$DCB.NOEOF = %YES#;
     2492     6293    3                 F$DCB.FMOD = %YES#;
     2493     6294    3                 F$DCB.NEW_FSECT = %NO#;   /* Have something in section          */
     2494     6295         /***
     2495     6296             *** Truncate block if not first segment and the file is not blocked
     2496     6297             *** or if there is not enough room for RCW and key (if any).
     2497     6298             ***/
     2498     6299    3                 IF F$DCB.CRECX ~= F$DCB.BOL
     2499     6300    4                 THEN DO;                  /* Not first segment of block         */
     2500     6301    4                    IF NOT F$DCB.BLOCKED
     2501     6302    4                        OR
     2502     6303    4                        F$DCB.BLKLEN + RCWSIZE + KEYSIZE > F$DCB.BLKL
     2503     6304    4                        OR
     2504     6305    4                        (NOT F$DCB.SPANNED
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:80   
     2505     6306    4                        AND ((F$DCB.BLKLEN + F$DCB.RECL > F$DCB.BLKL AND F$DCB.ORG~=%
              6306                                 VARIABLE#)
     2506     6307    4                        OR (F$DCB.BLKLEN+RCWSIZE+DUBYTES > F$DCB.BLKL AND
     2507     6308    4                        F$DCB.ORG=%VARIABLE#)))
     2508     6309    5                    THEN DO;               /* Write current block and ready next */
     2509     6310    5                       CALL FTW_TRUNCIT ALTRET(JUSTALT);
     2510     6311    5                       F$DCB.NRECX = 1;    /* At first record of block           */
     2511     6312    5                       END;
     2512     6313    4                    END;
     2513     6314         /***
     2514     6315             *** Move key to the record segment.
     2515     6316             ***/
     2516     6317    4                 DO CASE(F$DCB.ORG);
     2517     6318    4                    CASE(%KEYED#,%INDEXED#);
     2518     6319    4                       ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     2519     6320    4                       IF F$DCB.ORG = %KEYED#
     2520     6321    4                       THEN ASEG$->KEYCHARS = B$PS$(1)->KEYCHARS; /* Move key    */
     2521     6322    5                       ELSE DO;            /* Indexed                            */
     2522     6323    5                          ASEG$->KEYCHARS = PINCRC( DUB$, F$DCB.KEYX )->KEYCHARS;
     2523     6324    5                          END;
     2524     6325    4                       F$DCB.GDISP = RCWSIZE + KEYSIZE; /* To first byte of data */
     2525     6326    4                       IF F$DCB.ACS = %SEQUEN# THEN CALL FTW_SAVE_LAST_KEY;
     2526     6327    4                    CASE(%RELATIVE#);
     2527     6328    4                       ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     2528     6329    4                       CALL HFF$NILERASE(1) ALTRET(NOKEYS);
     2529     6330    4                       ASEG$->FOUR_BASED_CHARS = B$PS$(1)->FOUR_BASED_CHARS;
     2530     6331    5                       DO ALTRET_HANDLING;
     2531     6332    5   NOKEYS:                ;
     2532     6333    5                          ASEG$->BASED_WORD = F$DCB.LASTKEY + 1;
     2533     6334    5                          END;
     2534     6335    4                       F$DCB.LASTKEY = ASEG$->BASED_WORD;
     2535     6336    4                       IF F$DCB.ACS = %SEQUEN# THEN CALL FTW_SAVE_LAST_KEY;
     2536     6337    4                       F$DCB.GDISP = RCWSIZE + KEYSIZE;
     2537     6338    4                    CASE(ELSE);
     2538     6339    4                       F$DCB.GDISP = RCWSIZE;
     2539     6340    4                    END;
     2540     6341    3                 F$DCB.SPAN = %NO#;        /* Beginning of record                */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:81   
     2541     6342    3                 F$DCB.RPOS = %NO#;
     2542     6343    3                 F$DCB.BYTESLEFT = F$DCB.RECL;
              6343                          /* Maximum number of bytes in this record */
     2543     6344    3                 END;
     2544     6345
     2545     6346         /***
     2546     6347          *** Determine maximum segment size for format type.
     2547     6348          ***/
     2548     6349
     2549     6350    3              DO CASE(RCWTYPE);
     2550     6351    3                 CASE(RCWNONE#,RCWBIN#);
     2551     6352    3                    RECSIZE = 65536;
     2552     6353    3                 CASE(RCWDEC#);            /* ANS D and S                        */
     2553     6354    3                    RECSIZE = 9999;
     2554     6355    3                 END;
     2555     6356
     2556     6357         /***
     2557     6358          *** We are ready to move the data portion to the FPOOL buffer.
     2558     6359          *** For spanned records, break user buffer into .RECL sized
     2559     6360          *** segments.  If unspanned, only permit one .RECL sized segment.
     2560     6361          *** For spanned, unblocked files, write each segment to tape.
     2561     6362          ***/
     2562     6363
     2563     6364    2              IF F$DCB.ORG = %UR#
     2564     6365    2              THEN IF ADDR(VFC) ~= ADDR(NIL)
     2565     6366    3                 THEN DO;             /* Indicate move VFC char first for VFC UR */
     2566     6367    3                    DUB$ = ADDR(VFC);
     2567     6368    3                    BYTES_TO_GO = 1;
     2568     6369    3                    VFC_MOVED = %NO#;
     2569     6370    3                    END;
     2570     6371    3                 ELSE DO;                  /* No VFC to move                     */
     2571     6372    3                    BYTES_TO_GO = DUBYTES;
     2572     6373    3                    VFC_MOVED = %YES#;
     2573     6374    3                    END;
     2574     6375    2              ELSE BYTES_TO_GO = DUBYTES;
     2575     6376    2              SEGSIZE = -1;      /* Makes sure that 0 byte records are processed */
     2576     6377    3              DO WHILE( BYTES_TO_GO > 0 OR SEGSIZE < 0 );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:82   
     2577     6378         /***
     2578     6379             *** If the current record will not fit into the current block,
     2579     6380             *** trunc the current block and begin new record at next block.
     2580     6381             ***/
     2581     6382    3                 MAXRECL = F$DCB.BLKL - F$DCB.CRECX; /* Max # bytes left         */
     2582     6383    3                 IF (NOT F$DCB.SPANNED AND
     2583     6384    3                     ((MAXRECL < F$DCB.RECL AND F$DCB.ORG~=%VARIABLE#) OR
     2584     6385    3                     (MAXRECL < RCWSIZE+DUBYTES AND F$DCB.ORG=%VARIABLE#))) OR
     2585     6386                             /* Require enough room for entire segment if not spanned */
     2586     6387    3                     MAXRECL <= RCWSIZE OR /* Require enough room for RCW        */
     2587     6388    4                     F$DCB.GDISP >= RECSIZE THEN DO;
              6388                              /* Must trunc if max segment used */
     2588     6389    4                    CALL FTW_TRUNCIT ALTRET(JUSTALT); /* Trunc now               */
     2589     6390    4                    MAXRECL = F$DCB.BLKL - F$DCB.CRECX; /* Back to maximum       */
     2590     6391    4                    END;
     2591     6392
     2592     6393        /*
     2593     6394         * If this is a continued write of a variable-length record, and we're out of
     2594     6395         * space in this block, and this is not the first record of the block, AND
     2595     6396         * records aren't spanned across blocks, then save the current record, trunc
     2596     6397         * this block, and put the current record in a new block.  This is all to make
     2597     6398         * continued writes a little more efficient, space-wise.
     2598     6399         */
     2599     6400
     2600     6401    3                 IF F$DCB.ORG = %VARIABLE# AND /* Variable-length record.        */
     2601     6402    3                     NOT F$DCB.SPANNED AND /* Records aren't spanned.            */
     2602     6403    3                     F$DCB.CONT AND        /* Continued write.                   */
     2603     6404    3                     F$DCB.CRECX ~= F$DCB.BOL AND
              6404                              /* Not the first record of the block. */
     2604     6405    4                     F$DCB.CRECX+F$DCB.GDISP+BYTES_TO_GO > F$DCB.BLKL THEN DO;
              6405                              /* Out of space. */
     2605     6406    5                    CALL FTW_TMPFPOOL(TEMPFP$,TEMPFPOOL,F$DCB.GDISP) WHENRETURN DO;
     2606     6407    5                       ASEG$ = PINCRC(AFPOOL$,F$DCB.CRECX);
              6407                                /* Point at beginning of rec */
     2607     6408    5                       CHARZLEN = F$DCB.GDISP; /* Length of rec, incl RCW        */
     2608     6409    5                       TEMP$->CHARZ = ASEG$->CHARZ; /* Save the current record.  */
     2609     6410    5                       F$DCB.BLKLEN = F$DCB.CRECX;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:83   
              6410                                /* Remove this rec from block length */
     2610     6411    5                       CALL FTW_SETBLKLEN;
              6411                                /* Set the block length in the block header */
     2611     6412    5                       CALL FTW_TRUNCIT ALTRET(JUSTALT); /* Trunc the current buffer */
     2612     6413    5                       ASEG$ = PINCRC(AFPOOL$,F$DCB.CRECX);
              6413                                /* Point at rec destination */
     2613     6414    5                       CHARZLEN = F$DCB.GDISP;
     2614     6415    5                       ASEG$->CHARZ = TEMP$->CHARZ; /* Restore the record.       */
     2615     6416    5                       CALL FMD$RELBUF(I); /* Release our temporary FPOOL.       */
     2616     6417    5                       F$DCB.NRECX = 1;    /* At first record of block.          */
     2617     6418    5                       F$DCB.BLKLEN = F$DCB.CRECX + F$DCB.GDISP;
     2618     6419    5                       CALL FTW_SETBLKLEN; /* Set the new block length.          */
     2619     6420    5                       MAXRECL = F$DCB.BLKL - F$DCB.CRECX;
              6420                                /* New max # of bytes left */
     2620     6421    5                       END;
     2621     6422    5                    WHENALTRETURN DO;      /* Couldn't get a temp FPOOL.         */
     2622     6423    5                       BYTES_TO_GO = MAXRECL - F$DCB.GDISP; /* Truncate the record. */
     2623     6424    5                       END;
     2624     6425    4                    END;
     2625     6426
     2626     6427         /***
     2627     6428             *** Limit maximum to that imposed by maximum segment.
     2628     6429             ***/
     2629     6430
     2630     6431    4                 IF F$DCB.SPANNED THEN DO;
     2631     6432    4                    IF MAXRECL > RECSIZE
     2632     6433    4                    THEN MAXRECL = RECSIZE;
     2633     6434    4                    END;
     2634     6435    4                 ELSE DO;
     2635     6436    4                    IF MAXRECL > F$DCB.RECL
     2636     6437    4                    THEN MAXRECL = F$DCB.RECL;
              6437                             /* RECL is always smaller than max segment size */
     2637     6438    4                    ELSE IF MAXRECL > RECSIZE
     2638     6439    4                       THEN MAXRECL = RECSIZE;
     2639     6440    4                    END;
     2640     6441         /***
     2641     6442             *** Record length is the number of bytes to write plus the
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:84   
     2642     6443             *** number of bytes previously written.  If this exceeds the
     2643     6444             *** maximum, truncate the record and return a lost data error.
     2644     6445             ***/
     2645     6446
     2646     6447    3                 ARECL = BYTES_TO_GO + F$DCB.GDISP; /* # to write + # written    */
     2647     6448    3                 IF ARECL > MAXRECL
     2648     6449    4                 THEN DO;                  /* Record exceeds maximum size        */
     2649     6450    4                    ARECL = MAXRECL;       /* Truncate at maximum size           */
     2650     6451    4                    IF F$DCB.SPANNED
     2651     6452    5                    THEN DO;               /* Split up record                    */
     2652     6453    5                       DUBYTES = ARECL - F$DCB.GDISP;
     2653     6454    5                       BYTES_TO_GO = BYTES_TO_GO - DUBYTES;
     2654     6455    5                       END;
     2655     6456    5                    ELSE DO;               /* Only allowed one segment           */
     2656     6457    5                       B$JIT.ERR = E_LD; /*E* ERROR: FTW-E$LD */
     2657     6458    5                       DUBYTES = MAXRECL - F$DCB.GDISP;
     2658     6459    5                       BYTES_TO_GO = 0;
     2659     6460    5                       END;
     2660     6461    4                    END;
     2661     6462    4                 ELSE DO;                  /* Can fit entire segment             */
     2662     6463    4                    DUBYTES = BYTES_TO_GO; /* Move everything                    */
     2663     6464    4                    BYTES_TO_GO = 0;       /* Nothing left                       */
     2664     6465    4                    END;
     2665     6466
     2666     6467         /***
     2667     6468             *** If a RECL is specified for spanned files, the total record
     2668     6469             *** length must not be greater than RECL.
     2669     6470             ***/
     2670     6471
     2671     6472    3                 IF F$DCB.SPANNED
     2672     6473    4                 THEN DO; /*N* MAY NEED TO IGNORE EBCDIC VARIABLE HERE */
     2673     6474    4                    IF F$DCB.RECL > 0
     2674     6475    5                    THEN DO;               /* Must check against RECL            */
     2675     6476    5                       IF DUBYTES > F$DCB.BYTESLEFT
     2676     6477    6                       THEN DO;            /* Must truncate record               */
     2677     6478    6                          B$JIT.ERR = E_LD; /*E* ERROR: FTW-E$LD */
     2678     6479    6                          DUBYTES = F$DCB.BYTESLEFT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:85   
     2679     6480    6                          BYTES_TO_GO = 0;
     2680     6481    6                          END;
     2681     6482    5                       F$DCB.BYTESLEFT = F$DCB.BYTESLEFT - DUBYTES;
     2682     6483    5                       END;
     2683     6484    4                    END;
     2684     6485
     2685     6486         /***
     2686     6487             *** Calculate pointer to destination in FPOOL buffer
     2687     6488             *** of this record (portion) and the number of bytes to move.
     2688     6489             ***/
     2689     6490
     2690     6491    3                 ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + F$DCB.GDISP );
     2691     6492    3                 IF F$DCB.ORG = %FIXED#    /* Pad fixed format records           */
     2692     6493    3                 THEN CHARZLEN = F$DCB.RECL - F$DCB.GDISP; /* # of chars needed  */
     2693     6494    3                 ELSE CHARZLEN = DUBYTES;
     2694     6495    3                 IF FPTCODE = MFC_WRUR OR FPTCODE = MFC_WRURUC
     2695     6496    4                 THEN DO;                  /* Translate unit record data         */
     2696     6497    4                    IF VFC_MOVED           /* Don't translate VFC                */
     2697     6498    4                    THEN IF FPTCODE = MFC_WRUR
     2698     6499    4                       THEN CALL XLATE( ASEG$->CHARZ, NK_URTBL, DUB$->CHARS );
     2699     6500    4                       ELSE CALL XLATE( ASEG$->CHARZ, NK_URTBLUC, DUB$->CHARS );
     2700     6501    4                    ELSE ASEG$->CHARZ = DUB$->CHARS;
     2701     6502    4                    END;
     2702     6503    3                 ELSE ASEG$->CHARZ = DUB$->CHARS;
     2703     6504    3                 IF F$DCB.CNVRT AND NOT FPT$WRITE_V.DVBYTE.TRANS
     2704     6505    4                 THEN DO;                  /* Conversion requested               */
     2705     6506    4                    IF F$DCB.EBCDIC
     2706     6507    4                    THEN CALL XLATE( ASEG$->CHARZ, F_ASC_EBC, ASEG$->CHARZ );
     2707     6508    4                    ELSE CALL XLATE( ASEG$->CHARZ, F_ASC_ASC, ASEG$->CHARZ );
     2708     6509    4                    END;
     2709     6510
     2710     6511         /***
     2711     6512             *** If spanned, determine spanning information.
     2712     6513             ***/
     2713     6514
     2714     6515    3                 IF F$DCB.SPANNED
     2715     6516    3                 THEN IF F$DCB.SPAN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:86   
     2716     6517    3                    THEN IF BYTES_TO_GO > 0
     2717     6518    3                       THEN SPANINFO = SPAN_MID; /* Not beginning, not end       */
     2718     6519    4                       ELSE DO;            /* Not beginning, end                 */
     2719     6520    4                          F$DCB.SPAN = %NO#;
     2720     6521    4                          SPANINFO = SPAN_LAST;
     2721     6522    4                          END;
     2722     6523    3                    ELSE IF BYTES_TO_GO > 0
     2723     6524    4                       THEN DO;            /* Beginning, not end                 */
     2724     6525    4                          F$DCB.SPAN = %YES#;
     2725     6526    4                          SPANINFO = 1;
     2726     6527    4                          END;
     2727     6528    3                       ELSE SPANINFO = 0;  /* Beginning, end                     */
     2728     6529    3                 ELSE SPANINFO = 0;        /* Beginning, end                     */
     2729     6530    3                 SEGSIZE = F$DCB.GDISP + CHARZLEN; /* Total segment length       */
     2730     6531
     2731     6532    3                 CALL FTW_SETSIZE;         /* Set record information             */
     2732     6533    3                 F$DCB.BLKLEN = F$DCB.CRECX + SEGSIZE; /* Include segment        */
     2733     6534    3                 F$DCB.GDISP = F$DCB.GDISP + DUBYTES; /* New GDISP               */
     2734     6535    3                 CALL FTW_SETBLKLEN;
     2735     6536
     2736     6537         /***
     2737     6538             *** If spanning and not blocked, trunc current block now.
     2738     6539             *** If spanning and blocked, move on to next segment.
     2739     6540             ***/
     2740     6541
     2741     6542    3                 IF F$DCB.SPAN
     2742     6543    4                 THEN DO;                  /* Spanning record                    */
     2743     6544    4                    DUB$ = PINCRC( DUB$, DUBYTES ); /* Next user buffer portion  */
     2744     6545    4                    IF NOT F$DCB.BLOCKED
     2745     6546    4                    THEN CALL FTW_TRUNCIT ALTRET(JUSTALT);
     2746     6547    5                    ELSE DO;               /* Position to next segment           */
     2747     6548    5                       F$DCB.CRECX = F$DCB.CRECX + F$DCB.GDISP;
     2748     6549    5                       F$DCB.GDISP = RCWSIZE;
     2749     6550    5                       END;
     2750     6551    4                    END;
     2751     6552    3                 IF F$DCB.ORG = %UR#
     2752     6553    4                 THEN DO;                  /* Write record now if just moved VFC */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:87   
     2753     6554    4                    IF NOT VFC_MOVED
     2754     6555    5                    THEN DO;
     2755     6556    5                       BYTES_TO_GO = F$DCB.UBYTES;
     2756     6557    5                       DUB$ = F$DCB.UB$;
     2757     6558    5                       VFC_MOVED = %YES#;
     2758     6559    5                       END;
     2759     6560    4                    END;
     2760     6561    3                 END /* BYTES_TO_GO > 0 */;
     2761     6562         /***
     2762     6563          *** If continuation is specified, we're ready for following write and
     2763     6564          *** stay positioned to current record.  If continuation is not specified,
     2764     6565          *** position to the next record.
     2765     6566          ***/
     2766     6567
     2767     6568    2              IF NOT FPT$WRITE_V.DVBYTE.CONT
     2768     6569    3              THEN DO;             /* Not continued...get ready for next segment */
     2769     6570    3                 F$DCB.CRECX = F$DCB.BLKLEN; /* Next rec follows used block      */
     2770     6571    3                 F$DCB.CRECNO = F$DCB.CRECNO + 1; /* Count record                */
     2771     6572    3                 F$DCB.NRECX = F$DCB.NRECX + 1; /* Count rec blocked             */
     2772     6573    3                 F$DCB.RPOS = %YES#;       /* Positioned to next record          */
     2773     6574    3                 F$DCB.SPAN = %NO#;
     2774     6575    3                 F$DCB.CONT = %NO#;        /* No continuation                    */
     2775     6576    3                 END;
     2776     6577    2              ELSE F$DCB.CONT = %YES#;     /* Continue with next write           */
     2777     6578    2              F$DCB.FMOD = %YES#;          /* File was modified                  */
     2778     6579    2              F$DCB.NOEOF = %YES#;         /* EOF labels are needed              */
     2779     6580    2              F$DCB.LSTBLK = %YES#;        /* Last block of file written         */
     2780     6581    2              F$DCB.EOP = WRITEEOP#;       /* Last operation was write           */
     2781     6582    2              RETURN;
     2782     6583
     2783     6584    2   JUSTALT:   ;
     2784     6585    2              N = B$JIT.ERR.CODE;
     2785     6586    2              IF N = %E$EOVOL OR N = %E$EOVOLS
     2786     6587    3              THEN DO;                     /* Set flags like successful write    */
     2787     6588    3                 F$DCB.FMOD = %YES#;
     2788     6589    3                 F$DCB.NOEOF = %YES#;
     2789     6590    3                 F$DCB.LSTBLK = %YES#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:88   
     2790     6591    3                 F$DCB.EOP = WRITEEOP#;
     2791     6592    3                 RETURN;
     2792     6593    3                 END;
     2793     6594    2              ALTRETURN;
     2794     6595
     2795     6596    2      END FTW_WNR;
     2796     6597        /*********************************************************************/
     2797     6598        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:89   
     2798     6599        /*********************************************************************/
     2799     6600    1   FTW_TRUNCIT: PROC ALTRET;
     2800     6601        /*F*     NAME: FTW_TRUNCIT
     2801     6602                 PURPOSE: Write current FPOOL buffer and get ready to fill next.
     2802     6603         ***/
     2803     6604
     2804     6605        /********************/
     2805     6606
     2806     6607    2              IF F$DCB.IASN = %OD# THEN
     2807     6608    2                 CALL FTW$TRNCOD ALTRET(JUSTALT);
     2808     6609    2              ELSE
     2809     6610    3                 CALL FTW$TRNCHLD WHENALTRETURN DO; /* Write current FPOOL buffer */
     2810     6611    3                    IF B$JIT.ERR.CODE ~= %E$IOERR THEN
     2811     6612    3                       ALTRETURN;
     2812     6613    3                    IF F$DCB.CVOL THEN
     2813     6614    3                       ALTRETURN;
     2814     6615    3                    FT$DDT.POSLOST = %NO#;
     2815     6616    3                    IF NOT F$DCB.IOERROK AND NOT FPT$WRITE_V.IOERROK THEN
     2816     6617    3                       ALTRETURN;
     2817     6618    3                    CALL FTW_IOERRCVOL ALTRET(JUSTALT);
     2818     6619    3                    END;
     2819     6620
     2820     6621         /***
     2821     6622          *** Ready next block.
     2822     6623          ***/
     2823     6624
     2824     6625    3              IF NOT F$DCB.TYC.EOT(1) THEN DO; /* Successful write               */
     2825     6626    3                 F$DCB.CRECX = F$DCB.BOL;
     2826     6627    3                 F$DCB.NRECX = 0;
     2827     6628    3                 F$DCB.BLKLEN = F$DCB.BOL;
     2828     6629    3                 CALL FTW_SETBLKLEN;
     2829     6630    3                 F$DCB.PRECNO = F$DCB.PRECNO + 1;
     2830     6631    3                 F$DCB.AFTRBLK = %NO#;     /* Before next block to write         */
     2831     6632    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#; /* Will be modified     */
     2832     6633    3                 RETURN;
     2833     6634    3                 END;
     2834     6635
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:90   
     2835     6636         /***
     2836     6637          *** Detour for journal users.
     2837     6638          ***/
     2838     6639
     2839     6640    3              IF F$DCB.ACS = %JRNL# THEN DO;
     2840     6641    4                 IF NOT F$DCB.OWNER THEN DO; /* Journal user but not owner       */
     2841     6642    5                    IF F$DCB.SPAN THEN DO; /* In segment                         */
     2842     6643    5                       N = -1;
     2843     6644    5                       CALL FTW_PR ALTRET(JUSTALT); /* Ignore record portion     */
     2844     6645    5                       F$DCB.BLKLEN = F$DCB.CRECX;
     2845     6646    5                       END;
     2846     6647    4                    B$JIT.ERR = E_EOVOL; /*E* ERROR: FTW-E$EOVOL */
     2847     6648    4                    ALTRETURN;
     2848     6649    4                    END;
     2849     6650    4                 ELSE DO;                  /* Journal owner                      */
     2850     6651    4                    F$DCB.CFU$->FM$CFUJ.ERR_WAIT = %YES#; /* Lock out others     */
     2851     6652    4                    END;
     2852     6653    3                 END;
     2853     6654
     2854     6655         /***
     2855     6656          *** Last block written encountered end of tape.
     2856     6657          ***/
     2857     6658
     2858     6659    2              F$DCB.MUST_CVOL = %YES#;     /* Need to CVOL before next write     */
     2859     6660    2              IF NOT F$DCB.CVOL
     2860     6661    3              THEN DO;                     /* User did not request CVOL handling */
     2861     6662    3                 F$DCB.NOEOF = %YES#;      /* Indicate output CVOL               */
     2862     6663    3                 CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(JUSTALT);
     2863     6664    3                 F$DCB.CRECX = F$DCB.BOL;
     2864     6665    3                 F$DCB.NRECX = 0;
     2865     6666    3                 F$DCB.BLKLEN = F$DCB.BOL;
     2866     6667    3                 CALL FTW_SETBLKLEN;
     2867     6668    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#; /* Will be modified     */
     2868     6669    3                 RETURN;
     2869     6670    3                 END;
     2870     6671
     2871     6672         /***
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:91   
     2872     6673          *** User requests CVOL control.
     2873     6674          ***/
     2874     6675
     2875     6676    2              IF F$DCB.SPAN
     2876     6677    3              THEN DO;                     /* CVOL in segment                    */
     2877     6678    3                 N = -1;
     2878     6679    3                 CALL FTW_PR ALTRET(JUSTALT);
     2879     6680    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#;
              6680                          /* Make trunc get rid of record */
     2880     6681    3                 F$DCB.BLKLEN = F$DCB.CRECX;
     2881     6682    3                 END;
     2882     6683    2              B$JIT.ERR = E_EOVOL; /*E* ERROR: FTW-E$EOVOL */
     2883     6684    2              F$DCB.EOP = WRITEEOP#;       /* Makes M$CVOL know to write         */
     2884     6685
     2885     6686    2   JUSTALT:   ;
     2886     6687    2              ALTRETURN;
     2887     6688
     2888     6689    2      END FTW_TRUNCIT;
     2889     6690        /*********************************************************************/
     2890     6691        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:92   
     2891     6692        /*********************************************************************/
     2892     6693    1   FTW_IOERRCVOL: PROC ALTRET;
     2893     6694        /*F*    NAME: FTW_IOERRCVOL
     2894     6695                PURPOSE: Perform a CVOL after an I/O error, if IOERROK was
     2895     6696                         specified on the write.  We have to go through some
     2896     6697                         handwaving to do this for the general case.
     2897     6698         ***/
     2898     6699
     2899     6700    2     DCL TEMP UBIN;
     2900     6701
     2901     6702        /********************/
     2902     6703
     2903     6704    2              F$DCB.MUST_CVOL = %YES#;
     2904     6705    2              TEMP = F$DCB.BLKL;
     2905     6706    2              CALL FTW_TMPFPOOL(TEMPFP$,TEMPFPOOL,TEMP) ALTRET(JUSTALT);
     2906     6707    2              AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));
     2907     6708    2              CHARZLEN = F$DCB.BLKL;
     2908     6709    2              TEMPFP$->CHARS = AFPOOL$->CHARS;
     2909     6710    2              F$DCB.ARS = -1;
     2910     6711    2              CALL FTI$SPREC ALTRET(RELFP);
     2911     6712    3              IF NOT F$DCB.TYC.BOF(1) THEN DO;
              6712                       /* Just move prev block to next volume */
     2912     6713    3                 CALL FTW_RDFPOOL ALTRET(RELFP);
     2913     6714    3                 F$DCB.ARS = -1;
     2914     6715    3                 CALL FTI$SPREC ALTRET(RELFP);
     2915     6716    3                 F$DCB.NOEOF = %YES#;
     2916     6717    3                 CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(RELFP);
     2917     6718    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS;
     2918     6719    3                 F$DCB.ARS = TEMP - (TEMP / 512) * 256;
     2919     6720    3                 CALL FTW_WRFPOOL ALTRET(RELFP);
     2920     6721    3                 CHARZLEN = F$DCB.BLKL;
     2921     6722    3                 AFPOOL$->CHARS = TEMPFP$->CHARS;
     2922     6723    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS;
     2923     6724    3                 F$DCB.ARS = TEMP - (TEMP / 512) * 256;
     2924     6725    3                 CALL FTW_WRFPOOL ALTRET(RELFP);
     2925     6726    3                 CALL FMD$RELBUF(TEMPFPOOL);
     2926     6727    3                 F$DCB.PRECNO = 3;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:93   
     2927     6728    3                 F$DCB.AFTRBLK = %NO#;
     2928     6729    3                 END;
     2929     6730    3              ELSE DO;                     /* Need to move some labels, as well. */
     2930     6731    3                 AFPOOL$->CHARS = TEMPFP$->CHARS; /* Put current block back.     */
     2931     6732    3                 CALL FMD$RELBUF(TEMPFPOOL); /* Get rid of temp FPOOL, need larger. */
     2932     6733    3                 IF F$DCB.MAXVOL <= 0 THEN /* Next volume to be taken from list? */
     2933     6734    4                    CALL FTR$GETSN(F$DCB.VOL+1,ADDR(SIX_CHARS)) WHENALTRETURN DO;
     2934     6735    4                       B$JIT.ERR = E_VOLOUT; /*E* FTW-E$VOLOUT */
     2935     6736    4                       ALTRETURN;
     2936     6737    4                       END;
     2937     6738    3                 TEMPFP$ = AFPOOL$;
     2938     6739    3                 CALL FTW_TMPFPOOL(AFPOOL$,TEMPFPOOL,320) ALTRET(JUSTALT);
     2939     6740    3                 F$DCB.ARS = -2;
     2940     6741    3                 CALL FTI$SPFILE ALTRET(RELFP);
     2941     6742    4                 IF F$DCB.TYC.BOT(1) THEN DO; /* First block of first file on tape. */
     2942     6743    4                    B$JIT.ERR = E_CVBOT; /*E* FTW-E$CVBOT */
     2943     6744    4                    GOTO RELFP;
     2944     6745    4                    END;
     2945     6746    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read EOF1.                   */
     2946     6747    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     2947     6748    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read EOF2.                   */
     2948     6749    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     2949     6750    3                 F$DCB.ARS = 1;
     2950     6751    3                 CALL FTI$SPFILE ALTRET(RELFP);
     2951     6752    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read HDR1.                   */
     2952     6753    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     2953     6754    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read HDR2.                   */
     2954     6755    3                 AFPOOL$ = PINCRC(AFPOOL$,-240);
     2955     6756    3                 AFPOOL$->FT$LBL1.LABEL_ID = 'EOV'; /* Change EOF1 to EOV1.      */
     2956     6757    3                 F$DCB.ARS = 80;
     2957     6758    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOV1.                  */
     2958     6759    3                 CALL CHARBIN(N,AFPOOL$->FT$LBL1.FSECT); /* Save FSECT,          */
     2959     6760    3                 F$DCB.FSECT = N;
     2960     6761    3                 IF F$DCB.EBCDIC THEN      /* If IBM tape, get file-rel fsect.   */
     2961     6762    3                    F$DCB.FSECT = F$DCB.FSECT - F$DCB.STR;
     2962     6763    3                 CALL CHARBIN(N,AFPOOL$->FT$LBL1.FSEQU_NUM); /* and FSN.         */
     2963     6764    3                 F$DCB.FSN = N;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:94   
     2964     6765    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     2965     6766    3                 AFPOOL$->FT$LBL2.LABEL_ID = 'EOV'; /* Change EOF2 to EOV2.      */
     2966     6767    3                 F$DCB.ARS = 80;
     2967     6768    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOV2.                  */
     2968     6769    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write two file marks.           */
     2969     6770    3                 CALL FTI$WRFM ALTRET(RELFP);
     2970     6771    3                 F$DCB.SEZ_OK = %YES#;     /* Scratch next vol is OK.            */
     2971     6772    3                 CALL FTR$CHNGVOL(F$DCB.VOL+1) ALTRET(RELFP);
     2972     6773    3                 DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
     2973     6774    3                 CALL FTL$VOL1 ALTRET(RELFP); /* Write VOL1.                     */
     2974     6775    3                 AFPOOL$ = PINCRC(AFPOOL$,-240);
     2975     6776    3                 IF F$DCB.EBCDIC THEN
     2976     6777    3                    F$DCB.FSECT = F$DCB.VOL; /* File section is on new volume.   */
     2977     6778    3                 ELSE
     2978     6779    3                    F$DCB.FSECT = F$DCB.FSECT + 1; /* Increment FSECT.           */
     2979     6780    3                 CALL BINCHAR(AFPOOL$->FT$LBL1.FSECT,F$DCB.FSECT);
     2980     6781    3                 AFPOOL$->FT$LBL1.LABEL_ID = 'HDR'; /* Change EOV1 to HDR1.      */
     2981     6782    3                 SIX_CHARS = AFPOOL$->FT$LBL1.BLK_CNT; /* Save EOF1 block count. */
     2982     6783    3                 AFPOOL$->FT$LBL1.BLK_CNT = '000000'; /* Zero it for HDR1.       */
     2983     6784    3                 F$DCB.ARS = 80;
     2984     6785    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR1.                  */
     2985     6786    3                 AFPOOL$->FT$LBL1.BLK_CNT = SIX_CHARS; /* Restore block count.   */
     2986     6787    3                 AFPOOL$->FT$LBL1.LABEL_ID = 'EOF'; /* Change it to EOF1.        */
     2987     6788    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     2988     6789    3                 AFPOOL$->FT$LBL2.LABEL_ID = 'HDR'; /* Change EOV2 to HDR2.      */
     2989     6790    3                 F$DCB.ARS = 80;
     2990     6791    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR2.                  */
     2991     6792    3                 AFPOOL$->FT$LBL2.LABEL_ID = 'EOF'; /* Change it to EOF2.        */
     2992     6793    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write two file marks.           */
     2993     6794    3                 CALL FTI$WRFM ALTRET(RELFP);
     2994     6795    3                 AFPOOL$ = PINCRC(AFPOOL$,-80);
     2995     6796    3                 F$DCB.ARS = 80;
     2996     6797    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOF1.                  */
     2997     6798    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     2998     6799    3                 F$DCB.ARS = 80;
     2999     6800    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOF2.                  */
     3000     6801    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write file mark.                */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:95   
     3001     6802    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     3002     6803    3                 F$DCB.ARS = 80;
     3003     6804    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR1 for next file.    */
     3004     6805    3                 AFPOOL$ = PINCRC(AFPOOL$,80);
     3005     6806    3                 F$DCB.ARS = 80;
     3006     6807    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR2 for next file.    */
     3007     6808    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write file mark.                */
     3008     6809    3                 CALL FMD$RELBUF(TEMPFPOOL); /* Release temporary buffer.        */
     3009     6810    3                 AFPOOL$ = TEMPFP$;
     3010     6811    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS;
     3011     6812    3                 F$DCB.ARS = TEMP - (TEMP / 512) * 256;
     3012     6813    3                 CALL FTW_WRFPOOL ALTRET(JUSTALT); /* Write the block            */
     3013     6814    3                 F$DCB.PRECNO = 2;
     3014     6815    3                 F$DCB.AFTRBLK = %NO#;
     3015     6816    3                 END;
     3016     6817    2              RETURN;
     3017     6818
     3018     6819    2   RELFP:     ;
     3019     6820    2              CALL FMD$RELBUF(TEMPFPOOL);
     3020     6821    2   JUSTALT:   ;
     3021     6822    2              ALTRETURN;
     3022     6823
     3023     6824    2      END FTW_IOERRCVOL;
     3024     6825        /*********************************************************************/
     3025     6826        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:96   
     3026     6827        /*********************************************************************/
     3027     6828    1   FTW_PR:    PROC ALTRET;
     3028     6829        /*F*    NAME: FTW_PR
     3029     6830                PURPOSE: Fixed and variable format position record.
     3030     6831                RESTRICTION: If no altret is taken, the current record must be
     3031     6832                  in the current FPOOL buffer at DCB.CRECX.
     3032     6833         ***/
     3033     6834
     3034     6835        /********************/
     3035     6836
     3036     6837    2              CALL FTW_PNRSNE ALTRET(JUSTALT); /* Get current record segment     */
     3037     6838
     3038     6839         /***
     3039     6840          *** Prepare for PRECORD by first adjusting position.  M$PRECORD
     3040     6841          *** from the record which would be the next record read.
     3041     6842          ***/
     3042     6843
     3043     6844    2              IF NOT F$DCB.RPOS
     3044     6845    3              THEN DO;                   /* We are positioned behind next record */
     3045     6846    3                 DCRECNO = F$DCB.CRECNO + 1; /* Pretend at next record           */
     3046     6847    3                 N = N + 1;                /* One more record forward            */
     3047     6848    3                 END;
     3048     6849    2              ELSE DCRECNO = F$DCB.CRECNO; /* Positioned to record to position from */
     3049     6850
     3050     6851         /***
     3051     6852          *** Position backward: if the number of records to skip backward is
     3052     6853          *** greater than the number of the record we are positioned to,
     3053     6854          *** just use PFIL BOF--it's much faster.  Otherwise we must
     3054     6855          *** determine the number of records in each block backspaced over
     3055     6856          *** until we arrive at a block which contains the specified record.
     3056     6857          ***/
     3057     6858
     3058     6859    2              IF N < 0 OR (N = 0 AND NOT F$DCB.RPOS)
     3059     6860    3              THEN DO;                     /* Negative positioning               */
     3060     6861    3                 IF DCRECNO + N <= 0
     3061     6862    4                 THEN DO;                  /* Positioning would leave us at BOF  */
     3062     6863    4                    CALL FTW_BOF ALTRET(JUSTALT); /* PFIL BOF                    */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:97   
     3063     6864    4                    B$JIT.ERR = E_BOF; /*E* ERROR: FTW-E$BOF */
     3064     6865                               /* Beginning of file error--attempt to skip beyond BOF */
     3065     6866    4                    F$DCB.ARS = DCRECNO - 1; /* Return number of recs skipped    */
     3066     6867    4                    RETURN;
     3067     6868    4                    END;
     3068     6869         /***
     3069     6870             *** Due to the above check, we can't possibly hit beginning of file
     3070     6871             *** unless a tape error goes undetected.
     3071     6872             ***/
     3072     6873    3                 F$DCB.MUST_CVOL = %NO#;
     3073     6874                    /* DCB.NRECX is the number of recs in the block including current */
     3074     6875    3                 N = N + (F$DCB.NRECX - 1); /* Position to first record of block */
     3075     6876    3                 F$DCB.CRECNO = F$DCB.CRECNO - (F$DCB.NRECX - 1);
     3076     6877    3                 CALL FTW_P1RB ALTRET(NO1STREC);
              6877                          /* Position to first record of block */
     3077     6878    4                 DO ALTRET_HANDLING;
     3078     6879    4   NO1STREC:        ;
     3079     6880    4                    IF B$JIT.ERR THEN ALTRETURN;
     3080     6881    4                    SPANINFO = 3;          /* Anything > 1                       */
     3081     6882    4                    END;
     3082     6883    3                 IF N < 0 OR SPANINFO > 1
     3083     6884    4                 THEN DO;                 /* Need to trunc due to backwards skip */
     3084     6885    4                    IF NOT (FPT$PRECORD_V.NOMARKS) THEN
     3085     6886    4                       CALL FTW_TRNCWEOF ALTRET(JUSTALT);
              6886                                /* Trunc last block if modified */
     3086     6887    4                    F$DCB.LSTBLK = %NO#;
              6887                             /* Can't be positioned to last block anymore */
     3087     6888    4                    END;
     3088     6889         /***
     3089     6890             *** This DO WHILE backs up to the block which contains
     3090     6891             *** the beginning of the proper record.
     3091     6892             ***/
     3092     6893    4                 DO WHILE(N < 0 OR SPANINFO > 1);
     3093     6894             /* We are now positioned to "read" the first record of the current block */
     3094     6895    4   NO1ST:           ;
     3095     6896    4                    IF B$JIT.ERR THEN ALTRETURN;
     3096     6897         /***
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:98   
     3097     6898                *** We must now read the previous block.  If it does
     3098     6899                *** not reside in the current file section, get the
     3099     6900                *** previous file section.
     3100     6901                ***/
     3101     6902    4                    F$DCB.PRECNO = F$DCB.PRECNO - 1;
     3102     6903    5                    IF F$DCB.PRECNO < 1 THEN DO;
              6903                             /* Must get block from previous section */
     3103     6904    6                       DO WHILE(F$DCB.PRECNO < 1); /* Get previous volume        */
     3104     6905    6                          CALL FTL$PBSN(0,ADDR(NIL),F$DCB.FSECT-1) ALTRET(JUSTALT);
     3105     6906    6                          F$DCB.ARS = 65500; /* Space to end of file             */
     3106     6907    6                          CALL FTI$SPREC ALTRET(JUSTALT);
     3107     6908    6                          IF F$DCB.FSECT = 1 AND F$DCB.TAPTYP.CP6F THEN
     3108     6909    6                             F$DCB.PRECNO = F$DCB.ARS - 1; /* Don't count FIT    */
     3109     6910    6                          ELSE
     3110     6911    6                             F$DCB.PRECNO = F$DCB.ARS;
     3111     6912    6                          F$DCB.ARS = -1;
     3112     6913    6                          CALL FTI$SPFILE ALTRET(JUSTALT);
     3113     6914    6                          F$DCB.AFTRBLK = %NO#; /* Just backup 1 block           */
     3114     6915    6                          END;
     3115     6916    5                       END;
     3116     6917    4                    IF F$DCB.AFTRBLK THEN
     3117     6918    4                       F$DCB.ARS = -2;     /* Skip current and previous          */
     3118     6919    4                    ELSE
     3119     6920    4                       F$DCB.ARS = -1;     /* Just skip previous                 */
     3120     6921    4                    CALL FTI$SPREC ALTRET(JUSTALT);
     3121     6922    4                    IF F$DCB.OLDIOERR ~= 0 THEN
     3122     6923    4                       F$DCB.OLDIOERR = 0;
              6923                                /* We're going backwards, so just forget it. */
     3123     6924    4                    F$DCB.ARS = F$DCB.BLKL; /* Read block                        */
     3124     6925    5                    CALL FTW_RDFPOOL WHENALTRETURN DO;
     3125     6926    5                       IF B$JIT.ERR.CODE ~= %E$IOERR THEN
     3126     6927    5                          ALTRETURN;
     3127     6928    5                       FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                  */
     3128     6929    6                       IF NOT F$DCB.IOERROK AND NOT IOERROK THEN DO;
     3129     6930    6                          ERRSAV = B$JIT.ERR; /* Save the error.                 */
     3130     6931    6                          F$DCB.ARS = 1;   /* Back up to the previous block.     */
     3131     6932    6                          CALL FTI$SPREC ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:99   
     3132     6933    6                          F$DCB.ARS = F$DCB.BLKL; /* Reread it.                  */
     3133     6934    6                          CALL FTW_RDFPOOL ALTRET(JUSTALT);
     3134     6935    6                          B$JIT.ERR = ERRSAV; /* Restore the error.              */
     3135     6936    6                          GOTO PPREDONE;
     3136     6937    6                          END;
     3137     6938    5                       CALL FTW_GETBLKLEN; /* Get and check real block length.   */
     3138     6939    5                       F$DCB.OLDIOERR = 1; /* Remember we hit an I/O error.      */
     3139     6940    5                       F$DCB.BLKLEN = F$DCB.ARS; /* Save the size of the block.  */
     3140     6941    5                       F$DCB.TYC.IOERR(1) = '1'B; /* Set IOERR in TYC.           */
     3141     6942    5                       B$JIT.ERR = '0'B;   /* Clear error.                       */
     3142     6943    5                       END;
     3143     6944    4                    F$DCB.NEW_FSECT = %NO#; /* Can't be beginning of file section */
     3144     6945    4                    F$DCB.AFTRBLK = %YES#;
     3145     6946    4                    CALL FTW_P1RB ALTRET(NO1ST);
              6946                             /* Get ready to determine # recs in block */
     3146     6947    5                    DO WHILE (%YES#);
     3147     6948    5                       CALL FTW_PNRB ALTRET(BLKEND); /* Count # recs in block    */
     3148     6949    5                       END;
     3149     6950    4   BLKEND:          F$DCB.CRECNO = F$DCB.CRECNO - F$DCB.NRECX;
     3150     6951    4                    N = N + F$DCB.NRECX;
     3151     6952                                  /* DCB.NRECX = number of records beginning in block */
     3152     6953    4                    CALL FTW_P1RB ALTRET(NO1ST);
     3153     6954    4                    END;
     3154     6955    3                 END;
     3155     6956
     3156     6957         /***
     3157     6958          *** Position forward: position to next record until count or
     3158     6959          *** file exhausted.
     3159     6960          ***/
     3160     6961
     3161     6962    3              DO WHILE (N > 0);
     3162     6963    3                 CALL FTW_PNRS(1) ALTRET(PPREDONE);
     3163     6964    3                 N = N - 1;                /* Record skipped                     */
     3164     6965    3                 F$DCB.RPOS = %NO#;        /* As if record was read              */
     3165     6966    3                 END;
     3166     6967    2   PPREDONE:  ;
     3167     6968    2              F$DCB.EOP = PRECORDEOP#;     /* Last operation was PRECORD         */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:100  
     3168     6969    2              F$DCB.ARS = F$DCB.CRECNO - DCRECNO; /* New pos - old pos = # skipped */
     3169     6970    2              IF F$DCB.ARS < 0 THEN F$DCB.ARS = - F$DCB.ARS;
     3170     6971    2              IF N = 0 THEN B$JIT.ERR = '0'B;
     3171     6972                              /* If not positioned to proper record, leave error code */
     3172     6973    2              F$DCB.RPOS = %YES#;
     3173     6974    2              RETURN;
     3174     6975
     3175     6976    2   JUSTALT:
     3176     6977    2              ALTRETURN;
     3177     6978
     3178     6979    2      END FTW_PR;
     3179     6980        /*********************************************************************/
     3180     6981        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:101  
     3181     6982        /*********************************************************************/
     3182     6983    1   FTW_PFL:   PROC ALTRET;
     3183     6984        /*F*    NAME: FTW_PFL
     3184     6985                PURPOSE: Perform fixed and variable format position file.
     3185     6986         ***/
     3186     6987
     3187     6988
     3188     6989        /*********************/
     3189     6990
     3190     6991    2              CALL FTW_PNRS(2) ALTRET(JUSTALT);
     3191     6992
     3192     6993    3              DO WHILE (%YES#);
     3193     6994    3                 CALL FTW_PNRS(1) ALTRET(JUSTALT);
     3194     6995    3                 F$DCB.RPOS = %NO#;        /* As if record was read              */
     3195     6996    3                 END;
     3196     6997
     3197     6998    2   JUSTALT:   ;
     3198     6999    2              ALTRETURN;
     3199     7000    2      END FTW_PFL;
     3200     7001        /*********************************************************************/
     3201     7002        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:102  
     3202     7003        /*********************************************************************/
     3203     7004    1   FTW_INIT:  PROC;
     3204     7005        /*F*    NAME: FTW_INIT
     3205     7006                PURPOSE: Initialization for FTW routines.
     3206     7007         ***/
     3207     7008
     3208     7009        /********************/
     3209     7010
     3210     7011    2              DUB$ = F$DCB.UB$;            /* Localize pointer to user buffer    */
     3211     7012    2              DUBYTES = F$DCB.UBYTES;    /* Localize number of bytes to transfer */
     3212     7013    3              DO CASE(F$DCB.ORG);          /* Determine spanning info            */
     3213     7014    3                 CASE(%CONSEC#,%KEYED#,%RELATIVE#,%UR#,%INDEXED#,%SYMB#,%IREL#);
     3214     7015    3                    RCWSIZE = 4;
     3215     7016    3                    RCWTYPE = RCWBIN#;
     3216     7017    3                 CASE(%VARIABLE#);
     3217     7018    3                    IF F$DCB.EBCDIC
     3218     7019    4                    THEN DO;               /* V                                  */
     3219     7020    4                       RCWSIZE = 4;
     3220     7021    4                       RCWTYPE = RCWBIN#;
     3221     7022    4                       END;
     3222     7023    4                    ELSE DO;               /* D, S                               */
     3223     7024    4                       RCWTYPE = RCWDEC#;
     3224     7025    4                       IF F$DCB.SPANNED
     3225     7026    4                       THEN RCWSIZE = 5;
     3226     7027    4                       ELSE RCWSIZE = 4;
     3227     7028    4                       END;
     3228     7029    3                 CASE(ELSE);               /* FIXED, RESTRICT, UNDEF, IDS        */
     3229     7030    3                    RCWSIZE = 0;
     3230     7031    3                    RCWTYPE = RCWNONE#;
     3231     7032    3                 END;
     3232     7033    2              RETURN;
     3233     7034
     3234     7035    2      END FTW_INIT;
     3235     7036        /*********************************************************************/
     3236     7037        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:103  
     3237     7038        /*********************************************************************/
     3238     7039    1   FTW_PNRSNE: PROC ALTRET;
     3239     7040        /*F*     NAME: FTW_PNRSNE
     3240     7041                 PURPOSE: Position to current record segment and ignore
     3241     7042                    end-of-file error.
     3242     7043         ***/
     3243     7044
     3244     7045        /********************/
     3245     7046
     3246     7047    2              CALL FTW_PNRS(2) ALTRET(CHKEOF);
     3247     7048    3              DO ALTRET_HANDLING;
     3248     7049    3   CHKEOF:       ;
     3249     7050    3                 IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
     3250     7051    3                 CALL FTW_RESTORE_POS ALTRET(JUSTALT);
              7051                          /* Restore position if after file mark */
     3251     7052    3                 B$JIT.ERR = '0'B;         /* Ignore end-of-file                 */
     3252     7053    3                 END;
     3253     7054    2              RETURN;
     3254     7055
     3255     7056    2   JUSTALT:   ;
     3256     7057    2              ALTRETURN;
     3257     7058
     3258     7059    2      END FTW_PNRSNE;
     3259     7060        /*********************************************************************/
     3260     7061        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:104  
     3261     7062        /*********************************************************************/
     3262     7063    1   FTW_FNDKEY: PROC(KEY) ALTRET;
     3263     7064        /*F*     NAME: FTW_FNDKEY
     3264     7065                 PURPOSE: Find record with specified key.
     3265     7066         ***/
     3266     7067
     3267     7068         /***
     3268     7069          *** Parameter:
     3269     7070          ***/
     3270     7071
     3271     7072    2     DCL 1 KEY UNAL,                       /* Key to search for                  */
     3272     7073    2            2 KL UBIN BYTE UNAL,
     3273     7074    2            2 C CHAR(KEY.KL) UNAL;
     3274     7075
     3275     7076         /***
     3276     7077          *** Locals:
     3277     7078          ***/
     3278     7079
     3279     7080    2     DCL UBINBYTE UBIN BYTE BASED UNAL;
     3280     7081
     3281     7082        /********************/
     3282     7083
     3283     7084    3              DO CASE(F$DCB.ORG);
     3284     7085    3                 CASE(%UNDEF#,%CONSEC#,%UR#,%VARIABLE#,%FIXED#,%RESTRICT#,%SYMB#,%IREL#
              7085                          );
     3285     7086    3                    RETURN;                /* No keys                            */
     3286     7087    3                 CASE(%KEYED#);
     3287     7088    3                    UKEYLEN = KEY.KL;
     3288     7089    3                    IF UKEYLEN < 1 OR UKEYLEN > 255
     3289     7090    4                    THEN DO;               /* Invalid key                        */
     3290     7091    4                       B$JIT.ERR = E_BADKEY; /*E* ERROR: FTW-E$BADKEY */
     3291     7092    4                       ALTRETURN;
     3292     7093    4                       END;
     3293     7094    3                 CASE(%INDEXED#);
     3294     7095    3                    UKEYLEN = F$DCB.KEYL;
     3295     7096    3                 CASE(%RANDOM#,%IDS#);
     3296     7097    3                    UKEYLEN = 4;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:105  
     3297     7098    3                 CASE(%RELATIVE#);
     3298     7099    3                    UKEYLEN = 4;
     3299     7100    3                 END;
     3300     7101
     3301     7102    2              F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL control     */
     3302     7103
     3303     7104         /***
     3304     7105          *** Position to next record of file.
     3305     7106          ***/
     3306     7107
     3307     7108    2              IF F$DCB.TAPTYP.USRBUF
     3308     7109    2              THEN CALL FTW_PNUR ALTRET(CHKEOF);
     3309     7110    2              ELSE IF NOT F$DCB.RPOS
     3310     7111    2                 THEN CALL FTW_PNRS(1) ALTRET(CHKEOF);
     3311     7112
     3312     7113         /***
     3313     7114          *** Look for key until: 1) key found or if ACS = SEQUEN 2) a key is
     3314     7115          *** found which is greater than that specified or end of file is
     3315     7116          *** reached or if ACS ~= SEQUEN 3) entire file has been searched and
     3316     7117          *** key not found.
     3317     7118          ***/
     3318     7119
     3319     7120    2   CHKEOF:    ;
     3320     7121    2              IF F$DCB.ORG = %KEYED#
     3321     7122    2              THEN UKEY$ = ADDR( KEY.C );  /* Point to key chars                 */
     3322     7123    2              ELSE UKEY$ = ADDR( KEY );
     3323     7124    2              DCRECNO = F$DCB.CRECNO;      /* Remember where search started      */
     3324     7125
     3325     7126    3              DO WHILE('1'B);
     3326     7127    3                 IF B$JIT.ERR
     3327     7128    4                 THEN DO;               /* Some error has occurred during search */
     3328     7129    4                    IF B$JIT.ERR.CODE ~= %E$EOF OR F$DCB.ACS = %SEQUEN#
     3329     7130    5                    THEN DO;               /* Terminate search...not found       */
     3330     7131    5   ENDFNDKEYX:         ;
     3331     7132    5                       IF B$JIT.ERR.CODE = %E$EOF THEN B$JIT.ERR = E_NOKEY;
              7132                                /*E* ERROR: FTW-E$NOKEY */
     3332     7133    5                       ALTRETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:106  
     3333     7134    5                       END;
     3334     7135    4                    B$JIT.ERR = '0'B;
              7135                             /* Hit end of file...resume search at beginning */
     3335     7136    4                    CALL FTW_TRNCWEOF ALTRET(JUSTALT);
              7136                             /* Write EOF labels if necessary */
     3336     7137    4                    CALL FTW_RESTORE_POS ALTRET(JUSTALT);
              7137                             /* Can't be after file mark */
     3337     7138    4                    CALL FTW_BOF ALTRET(ENDFNDKEYX);
     3338     7139    4                    IF F$DCB.TAPTYP.USRBUF
     3339     7140    4                    THEN CALL FTW_PNUR ALTRET(ENDFNDKEYX);
     3340     7141    4                    ELSE CALL FTW_PNRS(2) ALTRET(ENDFNDKEYX);
     3341     7142    4                    IF DCRECNO = F$DCB.CRECNO
     3342     7143    5                    THEN DO;               /* Returned to search origin point    */
     3343     7144    5                       B$JIT.ERR = E_NOKEY; /*E* ERROR: FTW-E$NOKEY */
     3344     7145    5                       ALTRETURN;
     3345     7146    5                       END;
     3346     7147    4                    END;
     3347     7148         /***
     3348     7149             *** Compare keys.  For user buffer "keyed" files (RANDOM, IDS)
     3349     7150             *** AFPOOL$ points to a 4 bytes temporary into which the key
     3350     7151             *** was read.
     3351     7152             ***/
     3352     7153
     3353     7154    3                 IF F$DCB.TAPTYP.USRBUF
     3354     7155    3                 THEN ASEG$ = AFPOOL$;
     3355     7156    3                 ELSE ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     3356     7157    3                 CALL FTW_COMPARE_KEYS;    /* Determine relation of keys         */
     3357     7158
     3358     7159    4                 DO CASE(TEMP);
     3359     7160    4                    CASE(0);               /* Specified key = record key         */
     3360     7161    4                       IF F$DCB.TAPTYP.USRBUF
     3361     7162    5                       THEN DO;            /* Backup to position before record   */
     3362     7163    5                          F$DCB.ARS = -1;
     3363     7164    5                          CALL FTI$SPREC ALTRET(JUSTALT);
     3364     7165    5                          F$DCB.PRECNO = F$DCB.PRECNO - 1;
     3365     7166    5                          F$DCB.CRECNO = F$DCB.CRECNO - 1;
     3366     7167    5                          F$DCB.TAPTYP.HAVLASTKEY = %NO#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:107  
     3367     7168    5                          END;
     3368     7169    4                       RETURN;
     3369     7170    4                    CASE(2);               /* Specified key < record key         */
     3370     7171    4                       IF F$DCB.ACS = %SEQUEN#
     3371     7172    5                       THEN DO;           /* Sequen search termination condition */
     3372     7173    5                          B$JIT.ERR = E_NOKEY; /*E* ERROR: FTW-E$NOKEY */
     3373     7174    5                          ALTRETURN;
     3374     7175    5                          END;
     3375     7176    4                    END;
     3376     7177
     3377     7178         /***
     3378     7179                *** Check next record.
     3379     7180                ***/
     3380     7181
     3381     7182    3                 IF F$DCB.TAPTYP.USRBUF
     3382     7183    3                 THEN CALL FTW_PNUR ALTRET(CHKEOF2);
     3383     7184    3                 ELSE CALL FTW_PNRS(1) ALTRET(CHKEOF2);
     3384     7185    3   CHKEOF2:      ;
     3385     7186    3                 IF DCRECNO = F$DCB.CRECNO
     3386     7187    4                 THEN DO;                  /* Returned to search origin point    */
     3387     7188    4                    B$JIT.ERR = E_NOKEY; /*E* ERROR: FTW-E$NOKEY */
     3388     7189    4                    ALTRETURN;
     3389     7190    4                    END;
     3390     7191    3                 END;
     3391     7192
     3392     7193    2   JUSTALT:   ;
     3393     7194    2              ALTRETURN;
     3394     7195
     3395     7196    2      END FTW_FNDKEY;
     3396     7197        /*********************************************************************/
     3397     7198        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:108  
     3398     7199        /*********************************************************************/
     3399     7200    1   FTW_COMPARE_KEYS: PROC;
     3400     7201        /*F*     NAME: FTW_COMPARE_KEYS
     3401     7202                 PURPOSE: Compare two key values and return value indicating
     3402     7203                    which is lesser or if they are equal.
     3403     7204                 INPUT: ASEG$ - [PTR] to "our" key (usually current record's key).
     3404     7205                    UKEY$ - [PTR] to user's key data.
     3405     7206                    UKEYLEN - length of user's key.
     3406     7207                 OUTPUT: TEMP = 0 if equal, = 1 if user's is greater,
     3407     7208                    = 2 if ours is greater.
     3408     7209         ***/
     3409     7210
     3410     7211        /********************/
     3411     7212
     3412     7213    3              DO CASE(F$DCB.ORG);
     3413     7214    3                 CASE(%RELATIVE#,%RANDOM#,%IDS#);
     3414     7215    3                    TEMP = ASEG$->BASED_WORD; /* Key is 4 bytes                  */
     3415     7216    3                    NC = UKEY$->FOUR_BASED_CHARS;
     3416     7217    3                    IF TEMP = N
     3417     7218    3                    THEN TEMP = 0;         /* Equal                              */
     3418     7219    3                    ELSE IF TEMP > N
     3419     7220    3                       THEN TEMP = 2;      /* Ours greater                       */
     3420     7221    3                       ELSE TEMP = 1;
     3421     7222    3                 CASE(%KEYED#,%INDEXED#);
     3422     7223    3                    IF F$DCB.ORG = %KEYED#
     3423     7224    4                    THEN DO;               /* Key length is in first byte        */
     3424     7225    4                       CHARZLEN = ASEG$->FT$KEY.KL;
     3425     7226    4                       ASEG$ = PINCRC( ASEG$, 1 ); /* Point to data              */
     3426     7227    4                       IF UKEYLEN = CHARZLEN
     3427     7228    4                       THEN TEMP = 0;      /* Keys are of equal length           */
     3428     7229    4                       ELSE IF UKEYLEN > CHARZLEN
     3429     7230    4                          THEN TEMP = 1;   /* User's key is longer               */
     3430     7231    5                          ELSE DO;         /* Our key is longer                  */
     3431     7232    5                             CHARZLEN = UKEYLEN; /* Only compare key bytes       */
     3432     7233    5                             TEMP = 2;
     3433     7234    5                             END;
     3434     7235    4                       END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:109  
     3435     7236    4                    ELSE DO;               /* Indexed file                       */
     3436     7237    4                       CHARZLEN = F$DCB.KEYL;
     3437     7238    4                       TEMP = 0;           /* Keys of equal length               */
     3438     7239    4                       END;
     3439     7240
     3440     7241    3                    IF UKEY$->CHARZ < ASEG$->CHARZ
     3441     7242    3                    THEN TEMP = 2;         /* Indicate user's key is lesser      */
     3442     7243    3                    ELSE IF UKEY$->CHARZ > ASEG$->CHARZ
     3443     7244    3                       THEN TEMP = 1;      /* Indicate user's key is greater     */
     3444     7245    3                       ELSE ;              /* Longer of keys is greater          */
     3445     7246    3                 END;
     3446     7247    2              RETURN;
     3447     7248
     3448     7249    2      END FTW_COMPARE_KEYS;
     3449     7250        /*********************************************************************/
     3450     7251        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:110  
     3451     7252        /*********************************************************************/
     3452     7253    1   FTW_RETURN_KEY_PS1: PROC;
     3453     7254        /*F*     NAME: FTW_RETURN_KEY_PS1
     3454     7255                 PURPOSE: Returns key of current record to B$PS$(1) area.
     3455     7256         ***/
     3456     7257
     3457     7258        /********************/
     3458     7259
     3459     7260    3              DO CASE(F$DCB.ORG);
     3460     7261    3                 CASE(%KEYED#);            /* Textc key in record just past RCW  */
     3461     7262    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     3462     7263    3                    KEYSIZE = ASEG$->FT$KEY.KL + 1;
     3463     7264    3                    B$PS$(1)->KEYCHARS = ASEG$->KEYCHARS;
     3464     7265    3                 CASE(%INDEXED#);     /* KEYL length key in record just past RCW */
     3465     7266    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     3466     7267    3                    KEYSIZE = F$DCB.KEYL;
     3467     7268    3                    B$PS$(1)->KEYCHARS = ASEG$->KEYCHARS;
     3468     7269    3                 CASE(%RELATIVE#);
     3469     7270    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     3470     7271    3                    B$PS$(1)->FOUR_BASED_CHARS = ASEG$->FOUR_BASED_CHARS;
     3471     7272    3                 CASE(%RANDOM#,%IDS#);
     3472     7273    3                    TEMP = F$DCB.LASTKEY;
     3473     7274    3                    B$PS$(1)->FOUR_BASED_CHARS = TEMPC;
     3474     7275    3                 CASE(%CONSEC#,%IREL#);
     3475     7276    3                    TEMP = F$DCB.CRECNO;
     3476     7277    3                    B$PS$(1)->FOUR_BASED_CHARS = TEMPC;
     3477     7278    3                 CASE(ELSE);               /* No key                             */
     3478     7279    4                    DO; END;
     3479     7280    3                 END;
     3480     7281
     3481     7282    2              RETURN;
     3482     7283
     3483     7284    2      END FTW_RETURN_KEY_PS1;
     3484     7285        /*********************************************************************/
     3485     7286        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:111  
     3486     7287        /*********************************************************************/
     3487     7288    1   FTW_CHK_KEY_PS1: PROC ALTRET;
     3488     7289        /*F*     NAME: FTW_CHK_KEY_PS1
     3489     7290                 PURPOSE: Checks user's key for size limits and location.
     3490     7291                 INPUT: DUBYTES - size of user's buffer
     3491     7292                 OUTPUT: KEYSIZE - size of user's key
     3492     7293         ***/
     3493     7294
     3494     7295        /********************/
     3495     7296
     3496     7297    3              DO CASE(F$DCB.ORG);
     3497     7298    3                 CASE(%KEYED#);
     3498     7299    3                    CALL HFF$DSIZ(1,KEYSIZE) ALTRET(HOPEKEYSIZE0);
     3499     7300    3   HOPEKEYSIZE0:    ;
     3500     7301    3                    IF KEYSIZE > 0 THEN KEYSIZE = B$PS$(1)->FT$KEY.KL + 1;
              7301                             /* Get key length */
     3501     7302    3                    IF KEYSIZE < 2 OR KEYSIZE > 256
     3502     7303    4                    THEN DO;               /* Bad key                            */
     3503     7304    4                       B$JIT.ERR = E_BADKEY; /*E* ERROR: FTW-E$BADKEY */
     3504     7305    4                       ALTRETURN;
     3505     7306    4                       END;
     3506     7307    3                 CASE(%INDEXED#);
     3507     7308    3                    KEYSIZE = F$DCB.KEYL;
     3508     7309    3                    IF F$DCB.KEYX + KEYSIZE > DUBYTES
     3509     7310    4                    THEN DO;      /* Key not contained in initial record segment */
     3510     7311    4                       B$JIT.ERR = E_INDBC; /*E* ERROR: FTW-E$INDBC */
     3511     7312    4                       ALTRETURN;
     3512     7313    4                       END;
     3513     7314    3                 CASE(%RELATIVE#);
     3514     7315    3                    KEYSIZE = 4;
     3515     7316    3                 END;
     3516     7317    2              RETURN;
     3517     7318
     3518     7319    2      END FTW_CHK_KEY_PS1;
     3519     7320        /*********************************************************************/
     3520     7321        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:112  
     3521     7322        /*********************************************************************/
     3522     7323    1   FTW_SAVE_LAST_KEY: PROC;
     3523     7324        /*F*     NAME: FTW_SAVE_LAST_KEY
     3524     7325                 PURPOSE: Saves last key encountered.
     3525     7326         ***/
     3526     7327
     3527     7328        /********************/
     3528     7329
     3529     7330         /***
     3530     7331          *** For files with real keys, save key in last key buffer.  For
     3531     7332          *** other files, save as last key.
     3532     7333          ***/
     3533     7334
     3534     7335    3              DO CASE(F$DCB.ORG);
     3535     7336    3                 CASE(%KEYED#);
     3536     7337    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     3537     7338    3                    KEYSIZE = ASEG$->FT$KEY.KL + 1; /* Get key length            */
     3538     7339    3                    F$DCB.LASTKEY$->KEYCHARS = ASEG$->KEYCHARS;
     3539     7340    3                 CASE(%INDEXED#);
     3540     7341    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     3541     7342    3                    KEYSIZE = F$DCB.KEYL;  /* Fixed key length                   */
     3542     7343    3                    F$DCB.LASTKEY$->KEYCHARS = ASEG$->KEYCHARS;
     3543     7344    3                 CASE(%RELATIVE#);
     3544     7345    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
     3545     7346    3                    F$DCB.LASTKEY = ASEG$->BASED_WORD;
     3546     7347    3                 CASE(%RANDOM#,%IDS#);
     3547     7348    3                    F$DCB.LASTKEY = AFPOOL$->BASED_WORD;
     3548     7349    3                 END;
     3549     7350    2              F$DCB.TAPTYP.HAVLASTKEY = %YES#;
     3550     7351    2              RETURN;
     3551     7352
     3552     7353    2      END FTW_SAVE_LAST_KEY;
     3553     7354        /*********************************************************************/
     3554     7355        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:113  
     3555     7356        /*********************************************************************/
     3556     7357    1   FTW_END_MANAGED_FREE_SECT: PROC ALTRET;
     3557     7358        /*F*     NAME: FTW_END_MANAGED_FREE_SECT
     3558     7359                 PURPOSE: Terminates managed free tape file.
     3559     7360         ***/
     3560     7361
     3561     7362        /********************/
     3562     7363
     3563     7364    2              CALL FTW$TRNCHLD ALTRET(JUSTALT);
     3564     7365    2              CALL FTI$WRFM ALTRET(JUSTALT);
     3565     7366    2              CALL FTW_SET_BOF_INDICATORS;
     3566     7367    2              RETURN;
     3567     7368
     3568     7369    2   JUSTALT:   ;
     3569     7370    2              ALTRETURN;
     3570     7371
     3571     7372    2      END FTW_END_MANAGED_FREE_SECT;
     3572     7373        /*********************************************************************/
     3573     7374        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:114  
     3574     7375        /*********************************************************************/
     3575     7376    1   FTW_UNDOTRUNC: PROC ALTRET;
     3576     7377        /*F*    NAME: FTW_UNDOTRUNC
     3577     7378                PURPOSE: Undo trunc.
     3578     7379         ***/
     3579     7380
     3580     7381        /*******************/
     3581     7382
     3582     7383         /***
     3583     7384          *** A trunc was performed on the DCB, get the block back.
     3584     7385          ***/
     3585     7386
     3586     7387    3              IF (F$DCB.BLKL+4095)/4096 > B$JIT.FBUL THEN DO;
     3587     7388    3                 B$JIT.ERR = E_NOFPOOL;
     3588     7389    3                 ALTRETURN;
     3589     7390    3                 END;
     3590     7391
     3591     7392    2              CALL FMD$GETBUF(FT_RBUF1,(F$DCB.BLKL+4095)/4096,AFPOOL$);
     3592     7393                                                /* Get a buffer back                  */
     3593     7394    2              F$DCB.CBUFNUM = FT_RBUF1;    /* Remember FPOOL buffer              */
     3594     7395    3              IF F$DCB.TRNC = FT_FBTRUNC# THEN DO; /* Actually trunced a block   */
     3595     7396    4                 IF F$DCB.IASN = %OD# THEN DO;
     3596     7397    4                    F$DCB.ARS = F$DCB.BLKL;
     3597     7398    4                    CALL FPO$UNTRUNC(AFPOOL$) ALTRET(JUSTALT);
     3598     7399    5                    IF NOT F$DCB.TAPTYP.USRBUF AND NOT F$DCB.TYC.EOF(1) THEN DO;
     3599     7400    5                       F$DCB.BLKLEN = F$DCB.ARS;
     3600     7401    5                       CALL FTW_GETBLKLEN;
     3601     7402    5                       END;
     3602     7403    4                    END;
     3603     7404    4                 ELSE DO;
     3604     7405    4                    F$DCB.ARS = -1;
     3605     7406    4                    CALL FTI$SPREC ALTRET(JUSTALT);
     3606     7407    4                    F$DCB.ARS = F$DCB.BLKL;
     3607     7408    4                    CALL FTW_RDFPOOL ALTRET(JUSTALT);
     3608     7409    4                    END;
     3609     7410    3                 END;
     3610     7411    3              ELSE DO;                     /* No block in this file section      */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:115  
     3611     7412    3                 CALL FTW_SETBLKLEN;
     3612     7413    3                 END;
     3613     7414    2              F$DCB.TRNC = FT_NOTRUNC#;    /* Trunc is undone                    */
     3614     7415    2              RETURN;
     3615     7416    2   JUSTALT:   ;
     3616     7417    2              ALTRETURN;
     3617     7418
     3618     7419    2      END FTW_UNDOTRUNC;
     3619     7420        /*********************************************************************/
     3620     7421        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:116  
     3621     7422        /*********************************************************************/
     3622     7423    1   FTW_GETBLKLEN: PROC;
     3623     7424        /*F*    NAME: FTW_GETBLKLEN
     3624     7425                PURPOSE: Get BOL of current FPOOL buffer and check against block length.
     3625     7426         ***/
     3626     7427
     3627     7428        /********************/
     3628     7429
     3629     7430         /***
     3630     7431          *** Determine which type of BOL (decimal or binary) is required
     3631     7432          *** and get it.
     3632     7433          ***/
     3633     7434
     3634     7435    2              IF F$DCB.BOL < 4 THEN RETURN; /* No BOL needed or possible         */
     3635     7436    2              IF RCWTYPE = RCWBIN#
     3636     7437    3              THEN DO;
     3637     7438    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS; /* Get two 8 bit pieces          */
     3638     7439    3                 TEMP = TEMP - (TEMP / 512) * 256; /* Make into one 16 bit value */
     3639     7440    3                 END;
     3640     7441    3              ELSE DO;                     /* Decimal BOL                        */
     3641     7442    3                 RETURN;
     3642     7443    3                 END;
     3643     7444    2              IF TEMP > F$DCB.BLKLEN
     3644     7445    3              THEN DO;
     3645     7446    3                 B$JIT.ERR = E_BADBLKL; /*E* ERROR: FTW-E$BADBLKL */
     3646     7447    3                 END;
     3647     7448    2              ELSE F$DCB.BLKLEN = TEMP;
     3648     7449    2              RETURN;
     3649     7450
     3650     7451    2      END FTW_GETBLKLEN;
     3651     7452        /*********************************************************************/
     3652     7453        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:117  
     3653     7454        /*********************************************************************/
     3654     7455    1   FTW_SETBLKLEN: PROC;
     3655     7456        /*F*    NAME: FTW_SETBLKLEN
     3656     7457                PURPOSE: Set BOL of current FPOOL buffer with specified value.
     3657     7458         ***/
     3658     7459
     3659     7460        /********************/
     3660     7461
     3661     7462         /***
     3662     7463          *** Determine which type of BOL (decimal or binary) is required
     3663     7464          *** and set it.
     3664     7465          ***/
     3665     7466
     3666     7467    2              CHARZLEN = F$DCB.BOL;
     3667     7468    2              IF CHARZLEN <= 0 THEN RETURN; /* No BOL possible                   */
     3668     7469    2              IF RCWTYPE = RCWBIN#
     3669     7470    3              THEN DO;
     3670     7471    3                 AFPOOL$->CHARZ = NULPAD;  /* Default to zeros                   */
     3671     7472    3                 IF CHARZLEN < 4 THEN RETURN; /* Return if no room for BOL       */
     3672     7473    3                 TEMP = F$DCB.BLKLEN;
     3673     7474    3                 AFPOOL$->FT$BLKHDRE.LS = TEMP + (TEMP / 256) * 256;
     3674     7475                            /* Note: the above makes two 8 bit pieces from DCB.BLKLEN */
     3675     7476    3                 END;
     3676     7477    3              ELSE DO;
     3677     7478    3                 AFPOOL$->CHARZ = ' ';     /* Default to blanks                  */
     3678     7479    3                 IF CHARZLEN < 4 THEN RETURN; /* Return if no room for BOL       */
     3679     7480    3                 CALL BINCHAR( AFPOOL$->FT$ORGD.SIZE, F$DCB.BLKLEN ); /* Decimal BOL */
     3680     7481    3                 F$DCB.BLKLEN = TEMP;
     3681     7482    3                 END;
     3682     7483    2              RETURN;
     3683     7484
     3684     7485    2      END FTW_SETBLKLEN;
     3685     7486        /*********************************************************************/
     3686     7487        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:118  
     3687     7488        /*********************************************************************/
     3688     7489    1   FTW_SETSIZE: PROC;
     3689     7490        /*F*    NAME: FTW_SETSIZE
     3690     7491                PURPOSE: Set RCW of current FPOOL buffer record with specified values.
     3691     7492         ***/
     3692     7493
     3693     7494        /********************/
     3694     7495
     3695     7496         /***
     3696     7497          *** Determine which type of RCW (decimal or binary) is required
     3697     7498          *** and set it.
     3698     7499          ***/
     3699     7500
     3700     7501    3              DO CASE(RCWTYPE);
     3701     7502    3                 CASE(RCWNONE#);
     3702     7503    3                    RETURN;
     3703     7504    3                 CASE(RCWBIN#);
     3704     7505    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */
     3705     7506    3                    TEMP$->FT$HDRE.LS = SEGSIZE + (SEGSIZE / 256) * 256;
     3706     7507    3                    TEMP$->FT$HDR.S1 = SPANINFO; /* Set spanning info            */
     3707     7508    3                    IF F$DCB.TAPTYP.CP6F
     3708     7509    3                    THEN TEMP$->FT$HDR.S2 = DVBYTE;
     3709     7510    3                    ELSE TEMP$->FT$HDR.S2 = 0;
     3710     7511    3                 CASE(RCWDEC#);
     3711     7512    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */
     3712     7513    3                    IF F$DCB.SPANNED
     3713     7514    4                    THEN DO;               /* Use S format RCW                   */
     3714     7515    4                       CALL BINCHAR( TEMP$->FT$ORGS.SIZE, SEGSIZE );
     3715     7516    4                       TEMP$->FT$ORGS.SPAN = SPANINFO + ASCBIN('0');
     3716     7517    4                       END;
     3717     7518    3                    ELSE CALL BINCHAR( TEMP$->FT$ORGD.SIZE, SEGSIZE );
     3718     7519    3                 END;
     3719     7520    2              RETURN;
     3720     7521
     3721     7522    2      END FTW_SETSIZE;
     3722     7523        /*********************************************************************/
     3723     7524        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:119  
     3724     7525        /*********************************************************************/
     3725     7526    1   FTW_GETSIZE: PROC ALTRET;
     3726     7527        /*F*    NAME: FTW_GETSIZE
     3727     7528                PURPOSE: Get RCW of current FPOOL buffer record
     3728     7529                  and check it against block length.
     3729     7530         ***/
     3730     7531
     3731     7532        /********************/
     3732     7533
     3733     7534         /***
     3734     7535          *** Determine which type of RCW (decimal or binary) is required
     3735     7536          *** and get it.
     3736     7537          ***/
     3737     7538
     3738     7539    3              DO CASE(RCWTYPE);
     3739     7540    3                 CASE(RCWNONE#);
     3740     7541    3                    SEGSIZE = F$DCB.RECL;  /* Record length predetermined        */
     3741     7542    3                    SPANINFO = 0;
     3742     7543    3                 CASE(RCWBIN#);
     3743     7544    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */
     3744     7545    3                    SEGSIZE = TEMP$->FT$HDRE.LS;
     3745     7546    3                    SEGSIZE = SEGSIZE - (SEGSIZE / 511) * 256;
              7546                             /* Make 8 bit pieces into 16 bit value */
     3746     7547    3                    SPANINFO = TEMP$->FT$HDR.S1;
     3747     7548    4                    IF F$DCB.OLDIOERR = 1 THEN DO;
              7548                             /* Segment must fit in truncated block */
     3748     7549    5                       IF F$DCB.CRECX + RCWSIZE + SEGSIZE > F$DCB.BLKLEN THEN DO;
     3749     7550    5                          F$DCB.TYC.DI(1) = '1'B; /* Tell user we lost data.     */
     3750     7551    5                          SEGSIZE = (F$DCB.BLKLEN - F$DCB.CRECX) - RCWSIZE;
              7551                                   /* Force it. */
     3751     7552    5                          IF SPANINFO = 1 THEN /* Also force spanning to stop here. */
     3752     7553    5                             SPANINFO = 0;
     3753     7554    5                          ELSE IF SPANINFO = SPAN_MID THEN
     3754     7555    5                                SPANINFO = SPAN_LAST;
     3755     7556    5                          END;
     3756     7557    4                       END;
     3757     7558    3                    IF F$DCB.TAPTYP.CP6F THEN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:120  
     3758     7559    3                       F$DCB.DVBYTE = BINBIT(TEMP$->FT$HDR.S2,9);
     3759     7560    3                 CASE(RCWDEC#);
     3760     7561    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */
     3761     7562    3                    IF F$DCB.SPANNED
     3762     7563    4                    THEN DO;
     3763     7564    4                       CALL FTW_CHKDEC( TEMP$->FT$ORGS.SIZE,
     3764     7565    4                           LENGTHC(TEMP$->FT$ORGS.SIZE) ) ALTRET(JUSTALT);
     3765     7566    4                       CALL FTW_CHKDEC( TEMP$->FT$ORGS.SPAN,
     3766     7567    4                           LENGTHC(TEMP$->FT$ORGS.SPAN) ) ALTRET(JUSTALT);
     3767     7568    4                       CALL CHARBIN( SEGSIZE, TEMP$->FT$ORGS.SIZE );
     3768     7569    4                       SPANINFO = TEMP$->FT$ORGS.SPAN - ASCBIN('0');
     3769     7570    4                       END;
     3770     7571    4                    ELSE DO;               /* All records whole                  */
     3771     7572    4                       CALL FTW_CHKDEC( TEMP$->FT$ORGD.SIZE,
     3772     7573    4                           LENGTHC(TEMP$->FT$ORGD.SIZE) ) ALTRET(JUSTALT);
     3773     7574    4                       CALL CHARBIN( SEGSIZE, TEMP$->FT$ORGD.SIZE );
     3774     7575    4                       SPANINFO = 0;
     3775     7576    4                       END;
     3776     7577    3                 END;
     3777     7578    2              RETURN;
     3778     7579
     3779     7580    2   JUSTALT:   ;
     3780     7581    2              ALTRETURN;
     3781     7582
     3782     7583    2      END FTW_GETSIZE;
     3783     7584        /*********************************************************************/
     3784     7585        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:121  
     3785     7586        /*********************************************************************/
     3786     7587    1   FTW_SPANCHK: PROC;
     3787     7588        /*F*     NAME: FTW_SPANCHK
     3788     7589                 PURPOSE: Check consistency of span information.
     3789     7590         ***/
     3790     7591
     3791     7592        /********************/
     3792     7593
     3793     7594         /***
     3794     7595          *** If previous segment indicated continuation, this segment should
     3795     7596          *** continue it.  If previous segment indicated no continuation, this
     3796     7597          *** segment should not continue it.  If we just spaced past a block that
     3797     7598          *** had an I/O error in it, just indicate a data inconsistency (TYC.DI).
     3798     7599          ***/
     3799     7600
     3800     7601    2              IF (F$DCB.SPAN AND SPANINFO <= 1) OR (NOT F$DCB.SPAN AND SPANINFO > 1)
              7601                       THEN
     3801     7602                                        /* New segment begins without previous ending */
     3802     7603    3                 IF (F$DCB.IOERROK OR F$DCB.IGNOREFSN) AND F$DCB.OLDIOERR = 2 THEN DO;
     3803     7604                                                /* Had an I/O error, or this is the   */
     3804     7605                                                /* first FSECT we could find.         */
     3805     7606    3                    F$DCB.TYC.DI(1) = '1'B; /* Just indicate data inconsistency. */
     3806     7607    3                    IF F$DCB.IGNOREFSN THEN /* If first FSECT, forget this.      */
     3807     7608    3                       F$DCB.OLDIOERR = 0;
     3808     7609    3                    END;
     3809     7610    2                 ELSE
     3810     7611    2                    B$JIT.ERR = E_BADSPAN; /*E* ERROR: FTW-E$BADSPAN */
     3811     7612
     3812     7613         /***
     3813     7614          *** Remeber whether this segment should be continued or not.
     3814     7615          ***/
     3815     7616
     3816     7617    2              IF SPANINFO = 0 OR SPANINFO = SPAN_LAST THEN
     3817     7618    2                 F$DCB.SPAN = %NO#;        /* Next should begin span             */
     3818     7619    2              ELSE
     3819     7620    2                 F$DCB.SPAN = %YES#;       /* Next should continue               */
     3820     7621    2              RETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:122  
     3821     7622
     3822     7623    2      END FTW_SPANCHK;
     3823     7624        /*********************************************************************/
     3824     7625        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:123  
     3825     7626        /*********************************************************************/
     3826     7627    1   FTW_SIZECHK: PROC;
     3827     7628        /*F*     NAME: FTW_SIZECHK
     3828     7629                 PURPOSE: Check segment size information for consistency.
     3829     7630         ***/
     3830     7631
     3831     7632        /********************/
     3832     7633
     3833     7634         /***
     3834     7635          *** Segment must fit within block.
     3835     7636          ***/
     3836     7637
     3837     7638    2              IF F$DCB.CRECX + SEGSIZE > F$DCB.BLKLEN
     3838     7639    3              THEN DO;                 /* Segment couldn't possible fit in block */
     3839     7640    3                 SEGSIZE = F$DCB.BLKLEN - F$DCB.CRECX;
     3840     7641                                                /* Set segment size to max possible   */
     3841     7642    3                 B$JIT.ERR = E_BADRECL; /*E* ERROR: FTW-E$BADRECL */
     3842     7643    3                 END;
     3843     7644
     3844     7645         /***
     3845     7646          *** Segment should be no larger than DCB.RECL specifies.
     3846     7647          ***/
     3847     7648
     3848     7649    2              IF SEGSIZE < RCWSIZE
     3849     7650    3              THEN DO;                     /* Illegal segment length             */
     3850     7651    3                 B$JIT.ERR = E_BADRECL; /*E* ERROR: FTW-E$BADRECL */
     3851     7652    3                 F$DCB.GDISP = SEGSIZE;    /* Don't permit negative data length  */
     3852     7653                                                /* Don't permit negative data length  */
     3853     7654    3                 END;
     3854     7655    2              RETURN;
     3855     7656
     3856     7657    2      END FTW_SIZECHK;
     3857     7658        /*********************************************************************/
     3858     7659        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:124  
     3859     7660        /*********************************************************************/
     3860     7661    1   FTW_CHKDEC: PROC( FIELD_CHAR, FIELD_LENGTH ) ALTRET;
     3861     7662        /*F*     NAME: FTW_CHKDEC
     3862     7663                 PURPOSE: Check field for numeric characters.
     3863     7664         ***/
     3864     7665
     3865     7666    2     DCL FIELD_CHAR CHAR(FIELD_LENGTH) CALIGNED;
     3866     7667    2     DCL FIELD_LENGTH SBIN;
     3867     7668
     3868     7669        /********************/
     3869     7670
     3870     7671    2              CALL SEARCH( TEMP, TEMP, FT_NONDECIMAL_TABLE, FIELD_CHAR ) ALTRET(
              7671                       ALLDECIMAL );
     3871     7672    2              B$JIT.ERR = E_NONDECRCW; /*E* ERROR: FTW-E$NONDECRCW */
     3872     7673    2              ALTRETURN;
     3873     7674
     3874     7675    2   ALLDECIMAL: ;
     3875     7676    2              RETURN;
     3876     7677
     3877     7678    2      END FTW_CHKDEC;
     3878     7679        /*********************************************************************/
     3879     7680        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:125  
     3880     7681        /*********************************************************************/
     3881     7682    1   FTW_BOF:   PROC ALTRET;
     3882     7683        /*F*     NAME: FTW_BOF
     3883     7684                 PURPOSE: Position to beginning of file regardless of format.
     3884     7685         ***/
     3885     7686
     3886     7687        /********************/
     3887     7688
     3888     7689         /***
     3889     7690          *** If not in section 1, change to volume with proper section.
     3890     7691          *** Either backspace over blocks or backspace over file...whichever
     3891     7692          *** seems faster.
     3892     7693          ***/
     3893     7694
     3894     7695    2              F$DCB.MUST_CVOL = %NO#;
     3895     7696    2              IF F$DCB.FSECT > 1
     3896     7697    3              THEN DO;                     /* Must get to section 1              */
     3897     7698    3                 CALL FTW_TRNCWEOF ALTRET(JUSTALT); /* Close current section     */
     3898     7699    3                 CALL FTL$PBSN( 0, ADDR(NIL), 1 ) ALTRET(JUSTALT);
     3899     7700    3                 IF F$DCB.TAPTYP.CP6F
     3900     7701    4                 THEN DO;                  /* Skip FIT                           */
     3901     7702    4                    F$DCB.ARS = 1;
     3902     7703    4                    CALL FTI$SPREC ALTRET(JUSTALT);
     3903     7704    4                    END;
     3904     7705    3                 F$DCB.LSTBLK = %NO#;      /* Not known if last block            */
     3905     7706    3                 END;
     3906     7707    3              ELSE DO;                     /* Already in section 1               */
     3907     7708    3                 CALL FTW_TRNCWEOF ALTRET(JUSTALT); /* Trunc file; write EOF labels */
     3908     7709    3                 IF NOT F$DCB.AFTRBLK
     3909     7710    3                 THEN F$DCB.PRECNO = F$DCB.PRECNO - 1;
     3910     7711                         /** DCB.PRECNO is now the number of blocks to skip backward **/
     3911     7712    3                 IF F$DCB.PRECNO > 0
     3912     7713    4                 THEN DO;                  /* Not already at first block         */
     3913     7714    4                    IF F$DCB.TAPTYP.CP6F
     3914     7715    4                    THEN TEMP = 3;         /* SPFILE limit for FIT format files  */
     3915     7716    4                    ELSE TEMP = 2;         /* Non-FIT format files               */
     3916     7717    4                    IF F$DCB.PRECNO <= TEMP
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:126  
     3917     7718    5                    THEN DO;               /* Just backspace                     */
     3918     7719    5                       F$DCB.ARS = - F$DCB.PRECNO;
     3919     7720    5                       CALL FTI$SPREC ALTRET(JUSTALT);
     3920     7721    5                       END;
     3921     7722    5                    ELSE DO;               /* Use SPFILE                         */
     3922     7723    5                       F$DCB.ARS = -1;     /* Find BOF file mark                 */
     3923     7724    5                       CALL FTI$SPFILE ALTRET(JUSTALT);
     3924     7725    5                       IF NOT F$DCB.TYC.BOT(0)
     3925     7726    6                       THEN DO;            /* Must have hit file mark            */
     3926     7727    6                          F$DCB.ARS = 1;   /* Skip over BOF mark                 */
     3927     7728    6                          CALL FTI$SPFILE ALTRET(JUSTALT);
     3928     7729    6                          END;
     3929     7730    5                       IF F$DCB.TAPTYP.CP6F
     3930     7731    6                       THEN DO;            /* Must skip over FIT also            */
     3931     7732    6                          F$DCB.ARS = 1;
     3932     7733    6                          CALL FTI$SPREC ALTRET(JUSTALT);
     3933     7734    6                          END;
     3934     7735    5                       END;
     3935     7736    4                    F$DCB.NEW_FSECT = %YES#; /* Need to read first block         */
     3936     7737    4                    F$DCB.LSTBLK = %NO#;   /* Not known if last block            */
     3937     7738    4                    END;
     3938     7739    3                 END;
     3939     7740    2              CALL FTW_SET_BOF_INDICATORS;
     3940     7741    2              RETURN;
     3941     7742
     3942     7743    2   JUSTALT:   ;
     3943     7744    2              ALTRETURN;
     3944     7745
     3945     7746    2      END FTW_BOF;
     3946     7747        /*********************************************************************/
     3947     7748        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:127  
     3948     7749        /*********************************************************************/
     3949     7750    1   FTW_SET_BOF_INDICATORS: PROC;
     3950     7751        /*F*     NAME: FTW_SET_BOF_INDICATORS
     3951     7752                 PURPOSE: Reset DCB fields to indicate current BOF position.
     3952     7753         ***/
     3953     7754
     3954     7755        /********************/
     3955     7756
     3956     7757    2              F$DCB.CRECNO = 1;            /* At first record of file            */
     3957     7758    2              F$DCB.CRECX = F$DCB.BOL;
     3958     7759    2              F$DCB.GDISP = RCWSIZE;
     3959     7760    2              F$DCB.NRECX = 1;
     3960     7761    2              F$DCB.RPOS = %YES#;          /* Positioned to next record to read  */
     3961     7762    2              F$DCB.SPAN = %NO#;
     3962     7763    2              F$DCB.TAPTYP.HAVLASTKEY = %NO#;
     3963     7764    3              DO CASE(F$DCB.ORG);          /* Reset DCB.LASTKEY if necessary     */
     3964     7765    3                 CASE(%RANDOM#,%IDS#,%RESTRICT#);
     3965     7766    3                    F$DCB.LASTKEY = -1;
     3966     7767    3                 CASE(%RELATIVE#);
     3967     7768    3                    F$DCB.LASTKEY = 0;
     3968     7769    3                 CASE(ELSE);
     3969     7770    4                    DO; END;
     3970     7771    3                 END;
     3971     7772    2              F$DCB.AFTRBLK = %NO#;        /* Before                             */
     3972     7773    2              F$DCB.PRECNO = 1;            /* first data block of file           */
     3973     7774    2              RETURN;
     3974     7775
     3975     7776    2      END FTW_SET_BOF_INDICATORS;
     3976     7777        /*********************************************************************/
     3977     7778        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:128  
     3978     7779        /*********************************************************************/
     3979     7780    1   FTW_P1RB:  PROC ALTRET;
     3980     7781        /*F*     NAME: FTW_P1RB
     3981     7782                 PURPOSE: Fixed and variable position to first record of block.
     3982     7783         ***/
     3983     7784
     3984     7785        /********************/
     3985     7786
     3986     7787         /***
     3987     7788          *** Reset CRECX to beginning of block and find the first segment
     3988     7789          *** that begins a record.
     3989     7790          ***/
     3990     7791
     3991     7792    2              F$DCB.CRECX = F$DCB.BOL;
     3992     7793    2              CALL FTW_CHKSEG ALTRET(NONEBEGIN); /* Check if 1st segment fits    */
     3993     7794    2              CALL FTW_CHKSEGINFO ALTRET(NONEBEGIN);
     3994     7795    2              B$JIT.ERR = '0'B; /*N* Ignore span errors               */
     3995     7796    2              CALL FTW_NXTRB ALTRET(NONEBEGIN); /* Find beginning of next record */
     3996     7797    2              F$DCB.GDISP = RCWSIZE;
     3997     7798    2              F$DCB.NRECX = 1;             /* At first record of block           */
     3998     7799    2              F$DCB.RPOS = %YES#;          /* Positioned to record               */
     3999     7800    2              RETURN;
     4000     7801
     4001     7802    2   NONEBEGIN: ;
     4002     7803    2              IF B$JIT.ERR THEN
     4003     7804    3                 IF F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2 THEN DO;
     4004     7805    3                    IF B$JIT.ERR.CODE = %E$LD THEN
     4005     7806    3                       F$DCB.TYC.LD(1) = '1'B;
     4006     7807    3                    ELSE
     4007     7808    3                       F$DCB.TYC.DI(1) = '1'B;
     4008     7809    3                    B$JIT.ERR = '0'B;
     4009     7810    3                    END;
     4010     7811    2                 ELSE
     4011     7812    2                    ALTRETURN;
     4012     7813    2              F$DCB.GDISP = RCWSIZE;
     4013     7814    2              F$DCB.NRECX = 0;             /* No record begins in this block     */
     4014     7815    2              ALTRETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:129  
     4015     7816
     4016     7817    2      END FTW_P1RB;
     4017     7818        /*********************************************************************/
     4018     7819        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:130  
     4019     7820        /*********************************************************************/
     4020     7821    1   FTW_PNRB:  PROC ALTRET;
     4021     7822        /*F*    NAME: FTW_PNRB
     4022     7823                PURPOSE: Fixed and variable format position to next record of block.
     4023     7824                DESCRIPTION: Will position to the next record to read by
     4024     7825                   incrementing current record descriptors CRECX, CRECNO,
     4025     7826                   and NRECX while the next record is fully contained within
     4026     7827                   the current block.  Will ALTRET if the next record is not
     4027     7828                   fully contained within the current block.
     4028     7829         ***/
     4029     7830
     4030     7831        /********************/
     4031     7832
     4032     7833         /***
     4033     7834          *** If already past block end--ALTRETURN.
     4034     7835          ***/
     4035     7836
     4036     7837    2              CALL FTW_PNSB ALTRET(SEGBLKEND);
     4037     7838
     4038     7839    2              CALL FTW_NXTRB ALTRET(SEGBLKEND); /* Find beginning of next record */
     4039     7840    2              F$DCB.NRECX = F$DCB.NRECX + 1; /* Deblocked 1 more                 */
     4040     7841    2              RETURN;
     4041     7842
     4042     7843    2   SEGBLKEND: ;
     4043     7844    2              IF B$JIT.ERR THEN
     4044     7845    3                 IF F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2 THEN DO;
     4045     7846    3                    IF B$JIT.ERR.CODE = %E$LD THEN
     4046     7847    3                       F$DCB.TYC.LD(1) = '1'B;
     4047     7848    3                    ELSE
     4048     7849    3                       F$DCB.TYC.DI(1) = '1'B;
     4049     7850    3                    B$JIT.ERR = '0'B;
     4050     7851    3                    END;
     4051     7852    2                 ELSE
     4052     7853    2                    ALTRETURN;
     4053     7854    2              F$DCB.BLKLEN = F$DCB.CRECX;
     4054     7855    2              ALTRETURN;
     4055     7856
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:131  
     4056     7857    2      END FTW_PNRB;
     4057     7858        /*********************************************************************/
     4058     7859        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:132  
     4059     7860        /*********************************************************************/
     4060     7861    1   FTW_NXTRB: PROC ALTRET;
     4061     7862        /*F*     NAME: FTW_NXTRB
     4062     7863                 PURPOSE: Find next record beginning.
     4063     7864         ***/
     4064     7865
     4065     7866        /********************/
     4066     7867
     4067     7868         /***
     4068     7869          *** Next record begins when span information indicates beginning
     4069     7870          *** or when previous segment indicates ending.
     4070     7871          ***/
     4071     7872
     4072     7873    3              DO WHILE( SPANINFO > 1 );    /* While not record beginning         */
     4073     7874    3                 IF SPANINFO = SPAN_LAST
     4074     7875    4                 THEN DO;                  /* Next segment must begin record     */
     4075     7876    4                    CALL FTW_PNSB ALTRET(JUSTALT);
     4076     7877    4                    IF SPANINFO = SPAN_MID
     4077     7878    4                    THEN SPANINFO = 1;
     4078     7879    4                    ELSE IF SPANINFO = SPAN_LAST
     4079     7880    4                       THEN SPANINFO = 0;
     4080     7881    4                    END;
     4081     7882    3                 ELSE CALL FTW_PNSB ALTRET(JUSTALT);
     4082     7883    3                 END;
     4083     7884    2              RETURN;
     4084     7885
     4085     7886    2   JUSTALT:   ;
     4086     7887    2              ALTRETURN;
     4087     7888
     4088     7889    2      END FTW_NXTRB;
     4089     7890        /*********************************************************************/
     4090     7891        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:133  
     4091     7892        /*********************************************************************/
     4092     7893    1   FTW_PNSB:  PROC ALTRET;
     4093     7894        /*F*     NAME: FTW_PNSB
     4094     7895                 PURPOSE: Position to next segment within block.
     4095     7896         ***/
     4096     7897
     4097     7898        /********************/
     4098     7899
     4099     7900    2              F$DCB.CRECX = F$DCB.CRECX + SEGSIZE;
     4100     7901    2              CALL FTW_CHKSEG ALTRET(JUSTALT);
     4101     7902    2              CALL FTW_CHKSEGINFO ALTRET(JUSTALT);
     4102     7903    2              F$DCB.GDISP = RCWSIZE;
     4103     7904    2              RETURN;
     4104     7905
     4105     7906    2   JUSTALT:   ;
     4106     7907    2              ALTRETURN;
     4107     7908
     4108     7909    2      END FTW_PNSB;
     4109     7910        /*********************************************************************/
     4110     7911        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:134  
     4111     7912        /*********************************************************************/
     4112     7913    1   FTW_CHKSEGINFO: PROC ALTRET;
     4113     7914        /*F*     NAME: FTW_CHKSEGINFO
     4114     7915                 PURPOSE: Check segment size and spanning information.
     4115     7916         ***/
     4116     7917
     4117     7918        /********************/
     4118     7919
     4119     7920    2              CALL FTW_GETSIZE ALTRET(JUSTALT);
     4120     7921    2              CALL FTW_SPANCHK;
     4121     7922    2              CALL FTW_SIZECHK;
     4122     7923    2              RETURN;
     4123     7924
     4124     7925    2   JUSTALT:   ;
     4125     7926    2              ALTRETURN;
     4126     7927
     4127     7928    2      END FTW_CHKSEGINFO;
     4128     7929        /*********************************************************************/
     4129     7930        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:135  
     4130     7931        /*********************************************************************/
     4131     7932    1   FTW_PNRS:  PROC(SEG) ALTRET;
     4132     7933        /*F*    NAME: FTW_PNRS
     4133     7934                PURPOSE: Fixed and variable format position to next record or segment.
     4134     7935         ***/
     4135     7936
     4136     7937         /***
     4137     7938          *** Parameter:
     4138     7939          ***/
     4139     7940
     4140     7941    2     DCL SEG SBIN;                   /* 0 - next seg, 1 - next rec, 2 - crnt seg */
     4141     7942
     4142     7943        /********************/
     4143     7944
     4144     7945         /***
     4145     7946          *** Position to next segment or record of block. If end of block, get next.
     4146     7947          ***/
     4147     7948
     4148     7949    3              DO CASE(SEG);
     4149     7950    3                 CASE(0);                  /* Next segment                       */
     4150     7951    4                    CALL FTW_PNSB WHENALTRETURN DO;
     4151     7952    5                       IF F$DCB.OLDIOERR = 1 THEN DO; /* Working on an I/O error? */
     4152     7953    5                          F$DCB.TYC.IOERR(1) = '1'B;
              7953                                   /* Yes, tell user we're at end of blk. */
     4153     7954    5                          B$JIT.ERR = '0'B; /* Clear error.                      */
     4154     7955    5                          ALTRETURN;
     4155     7956    5                          END;
     4156     7957    4                       ELSE
     4157     7958    4                          GOTO CHKNEWBLK;
     4158     7959    4                       END;
     4159     7960    3                    RETURN;
     4160     7961    3                 CASE(1);                  /* Next record                        */
     4161     7962    3                    CALL FTW_PNRB ALTRET(CHKNEWBLK);
     4162     7963    3                    F$DCB.CRECNO = F$DCB.CRECNO + 1;
     4163     7964    3                    IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# OR F$DCB.ORG = %
              7964                             RELATIVE#
     4164     7965    4                    THEN DO;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:136  
     4165     7966    4                       IF F$DCB.ACS = %SEQUEN# AND (F$DCB.FUN = %CREATE# OR F$DCB.FUN =
              7966                                %UPDATE#)
     4166     7967    4                       THEN CALL FTW_SAVE_LAST_KEY;
     4167     7968    4                       END;
     4168     7969    3                    F$DCB.RPOS = %YES#;
     4169     7970    3                    RETURN;
     4170     7971    3                 CASE(2);                  /* Current segment                    */
     4171     7972    3                    IF F$DCB.TRNC ~= FT_NOTRUNC# THEN CALL FTW_UNDOTRUNC ALTRET(JUSTALT
              7972                             );
     4172     7973    3                    IF F$DCB.NEW_FSECT
     4173     7974    4                    THEN DO; /* At beginning of file section...might not have FPOOL */
     4174     7975    4                       CALL FTW_GETAFPOOL$; /* Get FPOOL buffer (pointer)        */
     4175     7976    4                       IF F$DCB.FSECT = 1 THEN F$DCB.SPAN = %NO#; /* First seg   */
     4176     7977    4                       END;
     4177     7978    4                    ELSE DO;               /* Not at beginning of file section   */
     4178     7979    4                       AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));
     4179     7980    4                       CALL FTW_CHKSEG ALTRET(CHKNEWBLK);
     4180     7981    4                       CALL FTW_CHKSEGINFO ALTRET(JUSTALT);
     4181     7982    4                       B$JIT.ERR = '0'B;   /* No span errors on first segment    */
     4182     7983    4                       RETURN;
     4183     7984    4                       END;
     4184     7985    3                 END;
     4185     7986
     4186     7987
     4187     7988         /***
     4188     7989          *** If this is the last block of the file we're at file end.
     4189     7990          ***/
     4190     7991
     4191     7992    2   CHKNEWBLK: ;
     4192     7993    2              IF B$JIT.ERR THEN ALTRETURN;
     4193     7994    2              IF F$DCB.LSTBLK
     4194     7995    3              THEN DO;                     /* Last block of file                 */
     4195     7996    3                 IF SEG = 1 AND NOT F$DCB.RPOS
     4196     7997    4                 THEN DO;                 /* Encountered EOF...not already there */
     4197     7998    4                    F$DCB.CRECNO = F$DCB.CRECNO + 1;
     4198     7999    4                    F$DCB.NRECX = F$DCB.NRECX + 1;
     4199     8000    4                    F$DCB.RPOS = %YES#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:137  
     4200     8001    4                    END;
     4201     8002    3                 B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */
     4202     8003    3                 ALTRETURN;
     4203     8004    3                 END;
     4204     8005
     4205     8006         /***
     4206     8007          *** Not last block of file.  Read the next block.
     4207     8008          ***/
     4208     8009
     4209     8010    3              DO WHILE('1'B);             /* Until next record is found or error */
     4210     8011    3   NEEDNXTBLK:   ;
     4211     8012    3                 IF B$JIT.ERR THEN
     4212     8013    4                    IF F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2 THEN DO;
     4213     8014    4                       IF B$JIT.ERR.CODE = %E$LD THEN
     4214     8015    4                          F$DCB.TYC.LD(1) = '1'B;
     4215     8016    4                       ELSE
     4216     8017    4                          F$DCB.TYC.DI(1) = '1'B;
     4217     8018    4                       B$JIT.ERR = '0'B;
     4218     8019    4                       END;
     4219     8020    3                    ELSE
     4220     8021    3                       ALTRETURN;
     4221     8022    4                 DO CASE(F$DCB.OLDIOERR);
     4222     8023    4                    CASE(1);               /* Last block got an I/O error.       */
     4223     8024    4                       F$DCB.ARS = 1;
     4224     8025    4                       CALL FTI$SPREC ALTRET(JUSTALT); /* Space past bad block.  */
     4225     8026    4                       F$DCB.OLDIOERR = 2;
     4226     8027    4                    CASE(2);               /* We're way past the error.          */
     4227     8028    4                       F$DCB.OLDIOERR = 3;
     4228     8029    4                    END;
     4229     8030    3                 F$DCB.ARS = F$DCB.BLKL;
     4230     8031    4                 CALL FTW_RDFPOOL WHENALTRETURN DO;
     4231     8032    4                    IF B$JIT.ERR.CODE ~= %E$IOERR THEN
     4232     8033    4                       ALTRETURN;
     4233     8034    4                    FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                     */
     4234     8035    5                    IF NOT F$DCB.IOERROK AND NOT IOERROK THEN DO;
     4235     8036    5                       ERRSAV = B$JIT.ERR; /* Save the error.                    */
     4236     8037    5                       F$DCB.ARS = -1;     /* Back up to the previous block.     */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:138  
     4237     8038    5                       CALL FTI$SPREC ALTRET(JUSTALT);
     4238     8039    5                       F$DCB.ARS = F$DCB.BLKL; /* Reread it.                     */
     4239     8040    5                       CALL FTW_RDFPOOL ALTRET(JUSTALT);
     4240     8041    5                       B$JIT.ERR = ERRSAV; /* Restore the error.                 */
     4241     8042    5                       ALTRETURN;
     4242     8043    5                       END;
     4243     8044    4                    CALL FTW_GETBLKLEN;    /* Get and check real block length.   */
     4244     8045    4                    F$DCB.OLDIOERR = 1;    /* Remember we hit an I/O error.      */
     4245     8046    4                    F$DCB.BLKLEN = F$DCB.ARS; /* Save the size of the block.     */
     4246     8047    4                    F$DCB.TYC.IOERR(1) = '1'B; /* Set IOERR in TYC.              */
     4247     8048    4                    B$JIT.ERR = '0'B;      /* Clear error.                       */
     4248     8049    4                    END;
     4249     8050    4                 IF NOT F$DCB.TYC.EOF(1) THEN DO; /* File mark not encountered   */
     4250     8051    4                    F$DCB.NEW_FSECT = %NO#; /* Have block from section           */
     4251     8052    4                    IF F$DCB.AFTRBLK THEN
     4252     8053    4                       F$DCB.PRECNO = F$DCB.PRECNO + 1; /* Now after block       */
     4253     8054    4                    ELSE
     4254     8055    4                       F$DCB.AFTRBLK = %YES#;
     4255     8056    5                    IF SEG ~= 1 THEN DO;   /* Position to first segment          */
     4256     8057    5                       F$DCB.CRECX = F$DCB.BOL;
     4257     8058    5                       CALL FTW_CHKSEG ALTRET(NEEDNXTBLK);
     4258     8059    5                       CALL FTW_CHKSEGINFO ALTRET(JUSTALT);
     4259     8060    6                       IF B$JIT.ERR AND (F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2) THEN
              8060                                DO;
     4260     8061    6                          F$DCB.TYC.DI(1) = '1'B;
     4261     8062    6                          B$JIT.ERR = '0'B;
     4262     8063    6                          END;
     4263     8064    5                       F$DCB.GDISP = RCWSIZE;
     4264     8065    5                       IF SEG = 0 THEN
     4265     8066    5                          F$DCB.NRECX = 0;
     4266     8067    5                       END;
     4267     8068    5                    ELSE DO;
     4268     8069    5                       CALL FTW_P1RB ALTRET(NEEDNXTBLK);
              8069                                /* Position to 1st record of block */
     4269     8070    5                       F$DCB.CRECNO = F$DCB.CRECNO + 1;
     4270     8071    5                       IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# OR F$DCB.ORG = %
              8071                                RELATIVE# THEN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:139  
     4271     8072    5                          IF F$DCB.ACS = %SEQUEN# AND (F$DCB.FUN = %CREATE# OR F$DCB.
              8072                                   FUN = %UPDATE#) THEN
     4272     8073    5                             CALL FTW_SAVE_LAST_KEY;
     4273     8074    5                       END;
     4274     8075    4                    RETURN;
     4275     8076    4                    END;
     4276     8077
     4277     8078         /***
     4278     8079             *** A tape mark was encountered while trying to read the next
     4279     8080             *** block (tape record)--do end of file section processing.
     4280     8081             ***/
     4281     8082
     4282     8083    3                 CALL FTL$EOF(EOXL) ALTRET(CHKCVOLE); /* Handle following labels */
     4283     8084    3                 F$DCB.PRECNO = 0;         /* Before first block                 */
     4284     8085    3                 F$DCB.AFTRBLK = %YES#;
     4285     8086    3                 END;
     4286     8087
     4287     8088         /***
     4288     8089          *** If end of file, "position" to next (nonexistent) record.
     4289     8090          *** If nothing in this section, fake a block.
     4290     8091          ***/
     4291     8092
     4292     8093    2   CHKCVOLE:  ;
     4293     8094    2              IF B$JIT.ERR.CODE = %E$EOF
     4294     8095    3              THEN DO;                  /* First eof encounter...position to eof */
     4295     8096    3                 F$DCB.CRECNO = F$DCB.CRECNO + 1;
     4296     8097    3                 F$DCB.NRECX = F$DCB.NRECX + 1;
     4297     8098    3                 F$DCB.RPOS = %YES#;
     4298     8099    3                 END;
     4299     8100
     4300     8101    2              IF F$DCB.PRECNO <= 0
     4301     8102    3              THEN DO;    /* No data blocks in this section...get ready to write */
     4302     8103    3                 F$DCB.PRECNO = 1;
     4303     8104    3                 F$DCB.AFTRBLK = %NO#;
     4304     8105    3                 F$DCB.BLKLEN = F$DCB.BOL;
     4305     8106    3                 F$DCB.CRECX = F$DCB.BOL;
     4306     8107    3                 F$DCB.NRECX = 0;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:140  
     4307     8108    3                 F$DCB.GDISP = RCWSIZE;
     4308     8109    3                 CALL FTW_SETBLKLEN;       /* Get ready to add records           */
     4309     8110    3                 END;
     4310     8111
     4311     8112    2   JUSTALT:   ;
     4312     8113    2              ALTRETURN;
     4313     8114    2      END FTW_PNRS;
     4314     8115        /*********************************************************************/
     4315     8116        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:141  
     4316     8117        /********************************************************************/
     4317     8118    1   FTW_GETAFPOOL$: PROC;
     4318     8119        /*F*     NAME: FTW_GETAFPOOL$
     4319     8120                 PURPOSE: Get (FPOOL and) pointer to current FPOOL buffer.
     4320     8121         ***/
     4321     8122
     4322     8123        /********************/
     4323     8124
     4324     8125    2              IF F$DCB.BFR.BUFX(F$DCB.CBUFNUM) = 0
     4325     8126    3              THEN DO;                     /* Get FPOOL                          */
     4326     8127    3                 CALL FMD$GETBUF(FT_RBUF1,(F$DCB.BLKL+4095)/4096,AFPOOL$);
     4327     8128    3                 F$DCB.CBUFNUM = FT_RBUF1;
     4328     8129    3                 END;
     4329     8130    2              ELSE AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));
     4330     8131    2              RETURN;
     4331     8132
     4332     8133    2      END FTW_GETAFPOOL$;
     4333     8134        /********************************************************************/
     4334     8135        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:142  
     4335     8136        /********************************************************************/
     4336     8137    1   FTW_TMPFPOOL: PROC(FP$,FPNUM,SIZE) ALTRET;
     4337     8138        /*F*     NAME: FTW_TMPFPOOL
     4338     8139                 PURPOSE: Get an unused FPOOL to use as a temporary buffer.
     4339     8140         ***/
     4340     8141
     4341     8142    2     DCL FP$ PTR;
     4342     8143    2     DCL FPNUM UBIN;
     4343     8144    2     DCL SIZE UBIN;
     4344     8145
     4345     8146        /********************/
     4346     8147
     4347     8148    2              FP$ = ADDR(NIL);
     4348     8149    2   GETFP:
     4349     8150    3              DO I = 0 TO 4;
     4350     8151    4                 IF F$DCB.BFR.BUFX(I) = 0 THEN DO; /* Find an unused FPOOL.      */
     4351     8152    4                    CALL FMD$GETBUF(I,(SIZE+4095)/4096,FP$);
     4352     8153    4                    EXIT GETFP;
     4353     8154    4                    END;
     4354     8155    3                 END GETFP;
     4355     8156    3              IF FP$ = ADDR(NIL) THEN DO;
     4356     8157    3                 B$JIT.ERR = E_NOFPOOL; /*E* ERROR:  FTW-E$NOFPOOL */
     4357     8158    3                 ALTRETURN;
     4358     8159    3                 END;
     4359     8160    2              FPNUM = I;
     4360     8161    2              RETURN;
     4361     8162
     4362     8163    2      END FTW_TMPFPOOL;
     4363     8164        /********************************************************************/
     4364     8165        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:143  
     4365     8166        /*********************************************************************/
     4366     8167    1   FTW_PNUR:  PROC ALTRET;
     4367     8168        /*F*     NAME: FTW_PNUR
     4368     8169                 PURPOSE: Position (read) next record of user buffer format file.
     4369     8170         ***/
     4370     8171
     4371     8172        /********************/
     4372     8173
     4373     8174    2              AFPOOL$ = ADDR(TEMP);        /* Pointer to input buffer            */
     4374     8175    3              IF F$DCB.LSTBLK THEN DO;     /* At end of file                     */
     4375     8176    3                 B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF       */
     4376     8177    3                 ALTRETURN;
     4377     8178    3                 END;
     4378     8179    3              DO WHILE('1'B);
     4379     8180    4                 IF F$DCB.OLDIOERR = 1 THEN DO;
              8180                          /* Had an I/O error on the last block. */
     4380     8181    4                    F$DCB.ARS = 1;
     4381     8182    4                    CALL FTI$SPREC ALTRET(JUSTALT); /* Space past bad block.     */
     4382     8183    4                    F$DCB.OLDIOERR = 3;
     4383     8184    4                    END;
     4384     8185    3                 F$DCB.ARS = 4;
     4385     8186    4                 CALL FTW_RDFPOOL WHENALTRETURN DO;
     4386     8187    4                    IF B$JIT.ERR.CODE ~= %E$IOERR THEN
     4387     8188    4                       ALTRETURN;
     4388     8189    4                    FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                     */
     4389     8190    4                    IF NOT F$DCB.IOERROK AND NOT IOERROK THEN
     4390     8191    4                       ALTRETURN;
     4391     8192    4                    F$DCB.OLDIOERR = 1;
     4392     8193    4                    F$DCB.TYC.IOERR(1) = '1'B;
     4393     8194    4                    B$JIT.ERR = '0'B;
     4394     8195    4                    END;
     4395     8196    3                 CALL HFC$CACHECLR;        /* Clear cache to access real buffer  */
     4396     8197    3                 IF F$DCB.TYC.EOF(1) THEN
     4397     8198    3                    CALL FTL$EOF(EOXL) ALTRET(JUSTALT);
              8198                             /* Handle labels following file mark */
     4398     8199    4                 ELSE DO;                  /* Read next record                   */
     4399     8200    4                    F$DCB.PRECNO = F$DCB.PRECNO + 1;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:144  
     4400     8201    4                    F$DCB.CRECNO = F$DCB.CRECNO + 1;
     4401     8202    4                    F$DCB.LASTKEY = TEMP;
     4402     8203    4                    F$DCB.TAPTYP.HAVLASTKEY = %YES#;
     4403     8204    4                    RETURN;
     4404     8205    4                    END;
     4405     8206    3                 END;
     4406     8207
     4407     8208    2   JUSTALT:   ;
     4408     8209    2              ALTRETURN;
     4409     8210
     4410     8211    2      END FTW_PNUR;
     4411     8212        /*********************************************************************/
     4412     8213        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:145  
     4413     8214        /*********************************************************************/
     4414     8215    1   FTW_CHKSEG: PROC ALTRET;
     4415     8216        /*F*     NAME: FTW_CHKSEG
     4416     8217                 PURPOSE: Check if current input segment can reside within block.
     4417     8218         ***/
     4418     8219
     4419     8220        /********************/
     4420     8221
     4421     8222         /***
     4422     8223          *** If no RCW can exist in the remaining block portion,
     4423     8224          *** altreturn.
     4424     8225          ***/
     4425     8226
     4426     8227    3              DO CASE(RCWTYPE);
     4427     8228    3                 CASE(RCWNONE#);
     4428     8229    3                    IF F$DCB.CRECX + F$DCB.RECL > F$DCB.BLKLEN THEN GOTO SETBLKLEN;
     4429     8230                                                /* Must have room for record          */
     4430     8231    3                 CASE(RCWBIN#);
     4431     8232    3                    IF F$DCB.CRECX + RCWSIZE > F$DCB.BLKLEN THEN
     4432     8233    3                       GOTO SETBLKLEN;     /* Must have room for RCW             */
     4433     8234    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to next seg */
     4434     8235    3                    IF TEMP$->FT$HDR.L1 = 0 AND TEMP$->FT$HDR.L2 < RCWSIZE THEN
     4435     8236    3                       GOTO SETBLKLEN;
              8236                                /* For binary RCW, must specify at least RCW size */
     4436     8237    3                 CASE(RCWDEC#);
     4437     8238    3                    IF F$DCB.CRECX + RCWSIZE > F$DCB.BLKLEN THEN GOTO SETBLKLEN;
     4438     8239                                                /* Must have room for RCW             */
     4439     8240    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to next seg */
     4440     8241    3                    IF F$DCB.SPANNED
     4441     8242    3                    THEN IF TEMP$->FT$ORGS.SIZE = '^^^^'
     4442     8243    3                       THEN GOTO SETBLKLEN;
     4443     8244    3                       ELSE ;
     4444     8245    3                    ELSE IF TEMP$->FT$ORGD.SIZE = '^^^^'
     4445     8246    3                       THEN GOTO SETBLKLEN;
     4446     8247    3                       ELSE ;
     4447     8248                                             /* For decimal RCW, circumflex means end */
     4448     8249    3                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:146  
     4449     8250    2              RETURN;
     4450     8251
     4451     8252    2   SETBLKLEN: ;
     4452     8253    2              F$DCB.BLKLEN = F$DCB.CRECX;  /* Set to actual size                 */
     4453     8254    2              ALTRETURN;
     4454     8255
     4455     8256    2      END FTW_CHKSEG;
     4456     8257        /*********************************************************************/
     4457     8258        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:147  
     4458     8259        /*********************************************************************/
     4459     8260    1   FTW$TRNCHLD: ENTRY ALTRET;
     4460     8261        /*F*    NAME: FTW$TRNCHLD
     4461     8262                PURPOSE: Tape file trunc and hold buffer.
     4462     8263         ***/
     4463     8264
     4464     8265        /********************/
     4465     8266
     4466     8267    1              TRNCHLD = %YES#;
     4467     8268    1              GOTO TRNC_COMMON;
     4468     8269
     4469     8270        /*********************************************************************/
     4470     8271    1   FTW$TRNCOD: ENTRY ALTRET;
     4471     8272        /*F*    NAME: FTW$TRNCOD
     4472     8273                PURPOSE: Does a local trunc for optical disk files.
     4473     8274         ***/
     4474     8275
     4475     8276        /********************/
     4476     8277
     4477     8278    1              TRNCHLD = %NO#;
     4478     8279    1   TRNC_COMMON:;
     4479     8280
     4480     8281         /***
     4481     8282          *** Get truncing information from the DCB.
     4482     8283          ***/
     4483     8284
     4484     8285    1              JDCB$ = B$JIT.DCB$;
     4485     8286    1              TEMP = F$DCB.BFR.BUFX(F$DCB.CBUFNUM); /* Buffer pointer index      */
     4486     8287    1              IF TEMP <= 0 THEN RETURN;    /* Nothing to trunc                   */
     4487     8288
     4488     8289         /***
     4489     8290          *** If the buffer has been modified, write it.
     4490     8291          ***/
     4491     8292
     4492     8293    1              IF F$DCB.BFR.BUFUP(F$DCB.CBUFNUM)
     4493     8294    2              THEN DO;                     /* Buffer has been updated            */
     4494     8295    2                 DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:148  
     4495     8296    2                 AFPOOL$ = FM$BUF$(TEMP);
     4496     8297                                                /* Calc number of filler bytes needed */
     4497     8298    2                 IF (F$DCB.TAPTYP.MANAGED AND F$DCB.ORG = %FIXED#)
     4498     8299    2                     OR F$DCB.EBCDIC
     4499     8300    2                 THEN CHARZLEN = 0;        /* No filler chars for managed or IBM */
     4500     8301    2                 ELSE IF F$DCB.BLKLEN < 20
     4501     8302    2                    THEN CHARZLEN = 20-F$DCB.BLKLEN; /* Pad out to 5 words       */
     4502     8303    2                    ELSE IF F$DCB.TAPTYP.CP6F
     4503     8304    2                       THEN CHARZLEN = ((F$DCB.BLKLEN + 7) / 8) * 8 - F$DCB.BLKLEN;
     4504     8305                                                /* Write binary...pad to doubleword   */
     4505     8306    2                       ELSE CHARZLEN = ((F$DCB.BLKLEN + 3) / 4) * 4 - F$DCB.BLKLEN;
     4506     8307                                                /* Write ASCII...pad to word          */
     4507     8308    2                 ASEG$ = PINCRC( AFPOOL$, F$DCB.BLKLEN ); /* Point to filler     */
     4508     8309    2                 IF F$DCB.TAPTYP.CP6F OR (F$DCB.ORG = %VARIABLE# AND F$DCB.EBCDIC)
     4509     8310    2                 THEN ASEG$->CHARZ = NULPAD; /* Pad with zeros                   */
     4510     8311    2                 ELSE ASEG$->CHARZ = ANSPAD; /* Pad with circumflex              */
     4511     8312    2                 F$DCB.BLKLEN = F$DCB.BLKLEN + CHARZLEN; /* Set # bytes to write */
     4512     8313    2                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %NO#; /* Reset block modified  */
     4513     8314    2                 IF TRNCHLD AND F$DCB.AFTRBLK AND F$DCB.IASN ~= %OD#
     4514     8315    3                 THEN DO;                  /* Position before to write over      */
     4515     8316    3                    F$DCB.ARS = -1;
     4516     8317    3                    CALL FTI$SPREC ALTRET(JUSTALT);
     4517     8318    3                    END;
     4518     8319    2                 F$DCB.ARS = F$DCB.BLKLEN; /* Pass # bytes to write              */
     4519     8320    3                 IF TRNCHLD AND F$DCB.IASN = %OD# THEN DO;
     4520     8321    3                    CALL FPO$TRUNC(AFPOOL$) ALTRET(JUSTALT);
     4521     8322    3                    FT$DDT.FMNEEDED = %YES#;
     4522     8323    3                    END;
     4523     8324    2                 ELSE
     4524     8325    2                    CALL FTW_WRFPOOL ALTRET(JUSTALT);
     4525     8326    2                 F$DCB.AFTRBLK = %YES#;
     4526     8327    2                 END;
     4527     8328    1              RETURN;
     4528     8329
     4529     8330        /*********************************************************************/
     4530     8331        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:149  
     4531     8332        /*********************************************************************/
     4532     8333    1   FTW_TRNCWEOF: PROC ALTRET;
     4533     8334        /*F*    NAME: FTW_TRNCWEOF
     4534     8335                PURPOSE: Truncate file and write EOF labels if necessary.
     4535     8336         ***/
     4536     8337
     4537     8338        /********************/
     4538     8339
     4539     8340         /***
     4540     8341          *** Trunc file and hold buffer.
     4541     8342          ***/
     4542     8343
     4543     8344    2              IF NOT F$DCB.TAPTYP.USRBUF
     4544     8345    2              THEN CALL FTW$TRNCHLD ALTRET(JUSTALT); /* Trunc file, hold buffer  */
     4545     8346    2              IF F$DCB.NOEOF
     4546     8347    3              THEN DO;                   /* File was modified...write EOF labels */
     4547     8348    3                 IF F$DCB.ASN = %TAPE#
     4548     8349    4                 THEN DO;                  /* Labelled tape                      */
     4549     8350    4                    CALL FTI$WRFM ALTRET(JUSTALT);
     4550     8351    4                    CALL FTL$LBLS( 'EOF' ) ALTRET(JUSTALT);
     4551     8352    4                    CALL FMD$RELBUF(F$DCB.LPOOL - 1); /* Get rid of label FPOOL  */
     4552     8353    4                    F$DCB.LPOOL = 0;
     4553     8354    4                    CALL FTI$WRFM ALTRET(JUSTALT);
     4554     8355    4                    CALL FTI$WRFM ALTRET(JUSTALT);
     4555     8356    4                    FT$DDT.FMNEEDED = %NO#; /* Don't need file marks             */
     4556     8357    4                    F$DCB.ARS = -3;      /* Space before first file mark written */
     4557     8358    4                    CALL FTI$SPFILE ALTRET(JUSTALT);
     4558     8359    4                    F$DCB.NOEOF = %NO#; /* No need for labels later if only reading */
     4559     8360                                                /*PS* (^ * EOF1 EOF2 * *)             */
     4560     8361    4                    END;
     4561     8362    4                 ELSE DO;                  /* Managed free tape                  */
     4562     8363    4                    CALL FTI$WRFM ALTRET(JUSTALT);
     4563     8364    4                    CALL FTI$WRFM ALTRET(JUSTALT);
     4564     8365    4                    F$DCB.ARS = -2;
     4565     8366    4                    CALL FTI$SPFILE ALTRET(JUSTALT);
     4566     8367    4                    END;
     4567     8368    3                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:150  
     4568     8369    2              RETURN;
     4569     8370
     4570     8371    2   JUSTALT:
     4571     8372    2              ALTRETURN;
     4572     8373
     4573     8374    2      END FTW_TRNCWEOF;
     4574     8375        /*********************************************************************/
     4575     8376        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:151  
     4576     8377        /*********************************************************************/
     4577     8378    1   FTW_WRFPOOL: PROC ALTRET;
     4578     8379        /*F*     NAME: FTW_WRFPOOL
     4579     8380                 PURPOSE: Write FPOOL buffer.
     4580     8381         ***/
     4581     8382
     4582     8383        /********************/
     4583     8384
     4584     8385    2              IF F$DCB.IASN = %OD# THEN
     4585     8386    2                 CALL FPO$WRODBLK (AFPOOL$) ALTRET (JUSTALT);
     4586     8387    3              ELSE DO;
     4587     8388    3                 IF F$DCB.TAPTYP.RWASC THEN
     4588     8389    3                    CALL FTI$WRASC (AFPOOL$) ALTRET (JUSTALT);
     4589     8390    3                 ELSE
     4590     8391    3                    CALL FTI$WRBIN (AFPOOL$) ALTRET (JUSTALT);
     4591     8392    3                 FT$DDT.FMNEEDED = %YES#;  /* Needs file mark                    */
     4592     8393    3                 END;
     4593     8394    2              RETURN;
     4594     8395
     4595     8396    2   JUSTALT:   ;
     4596     8397    2              ALTRETURN;
     4597     8398
     4598     8399    2      END FTW_WRFPOOL;
     4599     8400        /*********************************************************************/
     4600     8401        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:152  
     4601     8402        /*********************************************************************/
     4602     8403    1   FTW_RDFPOOL: PROC ALTRET;
     4603     8404        /*F*     NAME: FTW_RDFPOOL
     4604     8405                 PURPOSE: Read FPOOL buffer.
     4605     8406         ***/
     4606     8407
     4607     8408        /********************/
     4608     8409
     4609     8410    2              IF F$DCB.IASN = %OD# THEN
     4610     8411    2                 CALL FPO$RDODBLK (AFPOOL$) ALTRET (JUSTALT);
     4611     8412    3              ELSE DO;
     4612     8413    3                 IF F$DCB.TAPTYP.RWASC THEN
     4613     8414    3                    CALL FTI$RDASC (AFPOOL$) ALTRET (JUSTALT);
     4614     8415    3                 ELSE
     4615     8416    3                    CALL FTI$RDBIN (AFPOOL$) ALTRET (JUSTALT);
     4616     8417    3                 END;
     4617     8418    2              IF NOT F$DCB.TAPTYP.USRBUF AND NOT F$DCB.TYC.EOF(1)
     4618     8419    3              THEN DO;
     4619     8420    3                 F$DCB.BLKLEN = F$DCB.ARS;
     4620     8421    3                 CALL FTW_GETBLKLEN;
     4621     8422    3                 END;
     4622     8423    2              RETURN;
     4623     8424
     4624     8425    2   JUSTALT:   ;
     4625     8426    2              ALTRETURN;
     4626     8427
     4627     8428    2      END FTW_RDFPOOL;
     4628     8429        /*********************************************************************/
     4629     8430    1   END FTW$WRAT;
     4630     8431        /*********************************************************************/

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:153  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   UE_CP6.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$RECS.:E05TOU  cannot be made into a system file and is referenced.
   FT$LBLS.:E05TOU  cannot be made into a system file and is referenced.
   FT$DDT.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_FMTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FTW$WRAT.

   Procedure FTW$WRAT requires 6793 words for executable code.
   Procedure FTW$WRAT requires 82 words of local(AUTO) storage.

    No errors detected in file FTW$WRAT.:E05TSI    .

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:154  

 Object Unit name= FTW$WRAT                                   File name= FTW$WRAT.:E05TOU
 UTS= JUL 29 '97 18:02:19.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     48     60  FTW$WRAT
    1   Proc  even  none  6793  15211  FTW$WRAT
    2  RoData even  none    34     42  FTW$WRAT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  FTW$WRAT
     1   1064          yes     yes      Std        0  FTW$CVOL
     1   1101          yes     yes      Std        0  FTW$CVOLFT
     1   2153          yes     yes      Std        0  FTT$TRUNC
     1  14515          yes     yes      Std        0  FTW$TRNCHLD
     1  14522          yes     yes      Std        0  FTW$TRNCOD
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:155  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       0 FTR$UNJRNLDCB
         yes           Std       1 FMO$GETDOMAIN
         yes           Std       1 FMD$RELBUF
 yes     yes           Std       0 FTI$WRFM
 yes     yes           Std       1 FPO$TRUNC
 yes     yes           Std       0 FTR$JRNLDCB
 yes     yes           Std       1 FTR$CHNGVOL
 yes     yes           Std       2 HFF$DSIZ
 yes     yes           Std       5 FTL$CVOL
 yes     yes           Std       1 UQB$MDEQ
 yes     yes           Std       1 UQB$MENQXB
         yes           Std       0 FMM$DFLOPN
 yes     yes           Std       0 FTI$SPFILE
 yes     yes           Std       0 FTI$SPREC
 yes     yes           Std       1 FTL$EOF
 yes     yes           Std       0 FTI$REWIND
 yes     yes           Std       1 FTI$RDBIN
 yes     yes           Std       1 FTI$RDASC
 yes     yes           Std       1 HFF$WRITE1
 yes     yes           Std       1 FTI$WRASC
 yes     yes           Std       1 FTI$WRBIN
 yes     yes           Std       1 FPO$RDODMAP
 yes     yes           Std       1 FPO$LABELOD
 yes     yes           Std       0 FPO$COPYOD
         yes           Std       0 HFC$CACHECLR
 yes     yes           Std       3 FTL$PBSN
 yes     yes           Std       1 HFF$NILERASE
 yes     yes           Std       2 FTR$GETSN
 yes     yes           Std       0 FTL$VOL1
         yes           Std       3 FMD$GETBUF
 yes     yes           Std       1 FPO$UNTRUNC
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:156  
 yes     yes           Std       2 FTL$LBLS
 yes     yes           Std       1 FPO$WRODBLK
 yes     yes           Std       1 FPO$RDODBLK
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$PS$                                 FM$BUF$                               N$DCT$$
r    B$SR_NON_DEC$                    r    B$XL_MOD_256$                    r    B$XL_ASC_EBC$
r    B$XL_EBC_ASC$                    r    B$XL_UPPER_UR$                   r    B$XL_UR$
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:157  


        1        1        /*M* FTW$WRAT - contains routines for M$READ, M$WRITE, M$TRUNC,
        2        2                           M$PRECORD, M$PFIL, M$REW and M$WEOF */
        3        3        /*T***********************************************************/
        4        4        /*T*                                                         */
        5        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        6        6        /*T*                                                         */
        7        7        /*T***********************************************************/
        8        8        /*X* CRT=1,CTI=4,DCI=6,SQB,ECI=3,CSI=3,IPC,DIN=2,SDI=3 */
        9        9
       10       10        FTW$WRAT: PROC( FPTCODE, FPT, VFC ) ALTRET;

     10  1 000000   000000 700200 xent  FTW$WRAT     TSX0  ! X66_AUTO_3
         1 000001   000122 000003                    ZERO    82,3

       11       11
       12       12         /***
       13       13          *** INCLUDE files:
       14       14          ***/
       15       15
       16       16        %INCLUDE B$JIT_C;
       17      330         %B$JIT0;
       18      419         %U$JIT1X;
       19      422         %M$JIT2;
       20      432         %F$JIT3;
       21      437         %S$JIT4X;
       22      440         %J$JIT5;
       23      528         %A$JIT6X;
       24      531        %INCLUDE B_PTRS_R;
       25      539        %INCLUDE CP_6_SUBS;
       26     1079        %INCLUDE F$CP6V_C;
       27     1305         %FPT$WRITE_V(BASED="BASED(FPT$)");
       28     1311         %FPT$READ_V(BASED="BASED(FPT$)");
       29     1318         %FPT$PFIL_V(BASED="BASED(FPT$)");
       30     1321         %FPT$PRECORD_V(BASED="BASED(FPT$)");
       31     1326        %MACRO F$DCBBJ(BASED=BASED);
       32     1327        %INCLUDE F$DCB;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:158  
       33     1376        %MEND;
       34     1377         %F$DCBBJ(BASED="BASED(JDCB$)");
       35     1427        %INCLUDE FM$CFU;
       36     1472         %FM$CFUJ;
       37     1477        %INCLUDE F_ERRORS_C;
       38     1717        %INCLUDE F_FMTCODE_C;
       39     1751        %INCLUDE F_FPTCODE_C;
       40     1787        %INCLUDE FM_BUF_R;
       41     1796        %MACRO FT$DDTBD(BASED=BASED);
       42     1797        %INCLUDE FT$DDT;
       43     1858        %MEND;
       44     1859         %FT$DDTBD(BASED="BASED(DDDT$)");
       45     1921        %INCLUDE FT$LBLS;
       46     2189        %INCLUDE FT$RECS;
       47     2257        %INCLUDE FT_SUBS;
       48     2337        %INCLUDE NK$LDCT;
       49     2439         %NK$LDCT;
       50     2485        %INCLUDE NK_LDCT_R;
       51     2494        %INCLUDE SS_SCHED_C;
       52     2727        %INCLUDE UD_ERRORS_C;
       53     2769        %INCLUDE UE_CP6;
       54     3460         %SUB_EXC;
       55     3507        %INCLUDE B$TABLES_C;
       56     3615         %B$SR_NON_DEC(NAME=FT_NONDECIMAL_TABLE);
       57     3619         %B$XL_MOD_256(NAME=F_ASC_ASC);
       58     3623         %B$XL_ASC_EBC(NAME=F_ASC_EBC);
       59     3627         %B$XL_EBC_ASC(NAME=F_EBC_ASC);
       60     3631         %B$XL_UPPER_UR(NAME=NK_URTBLUC);
       61     3635         %B$XL_UR(NAME=NK_URTBL);
       62     3639        %SUB ALTRET_HANDLING="WHILE('0'B)/*ALTRET_HANDLING*/";
       63     3640
       64     3641         /***
       65     3642          *** External routines:
       66     3643          ***/
       67     3644
       68     3645    1     DCL FMD$GETBUF ENTRY(3);              /* Get specified FPOOL buffer         */
       69     3646    1     DCL FMD$RELBUF ENTRY(1);              /* Release specified FPOOL buffer     */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:159  
       70     3647    1     DCL FMM$DFLOPN ENTRY;                 /* Default open                       */
       71     3648    1     DCL FMO$GETDOMAIN ENTRY(1);           /* Get current domain                 */
       72     3649    1     DCL FPO$LABELOD ENTRY(1) ALTRET;      /* Label optical disk volume*/
       73     3650    1     DCL FPO$RDODMAP ENTRY(1) ALTRET;      /* Read OD Library Map                */
       74     3651    1     DCL FPO$COPYOD ENTRY ALTRET;          /* Copy OD volume to blank disc*/
       75     3652    1     DCL FPO$WRODBLK ENTRY(1) ALTRET;      /* Write Optical Disk Block           */
       76     3653    1     DCL FPO$RDODBLK ENTRY(1) ALTRET;      /* Read Optical Disk Block            */
       77     3654    1     DCL FPO$TRUNC ENTRY(1) ALTRET;        /* Truncate buffer for Optical Disk   */
       78     3655    1     DCL FPO$UNTRUNC ENTRY(1) ALTRET;      /* Untruncate buffer for Optical Disk */
       79     3656    1     DCL FTI$RDASC ENTRY(1) ALTRET;    /* Read ASCII block into specified buffer */
       80     3657    1     DCL FTI$RDBIN ENTRY(1) ALTRET;   /* Read binary block into specified buffer */
       81     3658    1     DCL FTI$REWIND ENTRY ALTRET;          /* Rewind tape                        */
       82     3659    1     DCL FTI$SPFILE ENTRY ALTRET;          /* Space DCB.ARS files                */
       83     3660    1     DCL FTI$SPREC ENTRY ALTRET;           /* Space DCB.ARS records              */
       84     3661    1     DCL FTI$WRASC ENTRY(1) ALTRET;   /* Write ASCII block from specified buffer */
       85     3662    1     DCL FTI$WRBIN ENTRY(1) ALTRET;  /* Write binary block from specified buffer */
       86     3663    1     DCL FTI$WRFM ENTRY ALTRET;            /* Write file mark                    */
       87     3664    1     DCL FTL$CVOL ENTRY(5) ALTRET;         /* CVOL                               */
       88     3665    1     DCL FTL$EOF ENTRY(1) ALTRET;          /* Handle labels after file mark      */
       89     3666    1     DCL FTL$FINDSEQ ENTRY ALTRET;        /* Find file by sequence and section # */
       90     3667    1     DCL FTL$LBLS ENTRY(2) ALTRET;
       91     3668    1     DCL FTL$PBSN ENTRY(3) ALTRET;         /* Position before specified section  */
       92     3669    1     DCL FTL$VOL1 ENTRY ALTRET;            /* Write VOL1 label                   */
       93     3670    1     DCL FTR$CHNGVOL ENTRY(1) ALTRET;      /* Change to specified volume of set  */
       94     3671    1     DCL FTR$GETSN ENTRY(2) ALTRET;        /* Get specified SN from SN CFUs      */
       95     3672    1     DCL FTR$JRNLDCB ENTRY ALTRET;         /* Moves JRNL CFU info to DCB         */
       96     3673    1     DCL FTR$UNJRNLDCB ENTRY ALTRET;       /* Moves DCB info to JRNL CFU         */
       97     3674    1     DCL HFC$CACHECLR ENTRY;               /* Clear cache                        */
       98     3675    1     DCL HFF$DSIZ ENTRY(2) ALTRET;         /* Calc size of segment               */
       99     3676    1     DCL HFF$NILERASE ENTRY(1) ALTRET;     /* Check segment                      */
      100     3677    1     DCL HFF$WRITE1 ENTRY(1) ALTRET;       /* Check if buffer is writeable       */
      101     3678    1     DCL SSR$REG ENTRY(3) ALTRET;          /* To wait awhile                     */
      102     3679    1     DCL SSV$EVENT ENTRY(7);               /* To notify JRNL owner               */
      103     3680    1     DCL UQB$MDEQ ENTRY(1) ALTRET;         /* Dequeue                            */
      104     3681    1     DCL UQB$MENQXB ENTRY(1) ALTRET;       /* Enqueue                            */
      105     3682
      106     3683    1     DCL CVOLFT BIT(1) AUTO;               /* Indicate FT CVOL call              */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:160  
      107     3684         /***
      108     3685          *** Parameter:
      109     3686          ***/
      110     3687
      111     3688    1     DCL FPTCODE SBIN WORD;                /* Function code                      */
      112     3689    1     DCL FPT UBIN;                         /* FPT                                */
      113     3690    1     DCL VFC UBIN BYTE UNAL;               /* Vertical format control byte       */
      114     3691
      115     3692         /***
      116     3693          *** AUTO data:
      117     3694          ***/
      118     3695
      119     3696    1     DCL AFPOOL$ PTR AUTO;                 /* Pointer to FPOOL buffer            */
      120     3697    1     DCL ALIGNED_BASED_WORD SBIN WORD ALIGNED BASED;
      121     3698    1     DCL ARECL UBIN AUTO;                  /* Actual record length               */
      122     3699    1     DCL ASEG$ PTR AUTO;                   /* Pointer to record segment          */
      123     3700    1     DCL BASED_WORD UBIN WORD CALIGNED BASED;
      124     3701    1     DCL BYTES_TO_GO SBIN WORD ALIGNED AUTO; /* Number of bytes left to read/write */
      125     3702    1     DCL CHARS CHAR(DUBYTES) BASED CALIGNED;
      126     3703    1     DCL CHARZ CHAR(CHARZLEN) BASED CALIGNED;
      127     3704    1     DCL CHARZLEN SBIN AUTO;               /* Length of CHARZ                    */
      128     3705    1     DCL DCRECNO SBIN AUTO;                /* CRECNO from DCB                    */
      129     3706    1     DCL DCVOL BIT(1) ALIGNED AUTO;        /* Saves DCB.CVOL                     */
      130     3707    1     DCL DDDT$ PTR AUTO;                 /* Pointer to DDT entry of DCB's device */
      131     3708    1     DCL DUB$ PTR AUTO;                    /* Pointer to user's buffer           */
      132     3709    1     DCL DUBYTES SBIN AUTO;                /* Number of bytes to read/write      */
      133     3710    1     DCL DVBYTE UBIN BYTE;
      134     3711    1     DCL EOXL CHAR(3) AUTO;                /* Either 'EOF' or 'EOV'              */
      135     3712    1     DCL ERRSAV BIT(36) AUTO;              /* Saves JIT.ERR                      */
      136     3713    1     DCL FOUR_BASED_CHARS CHAR(4) BASED UNAL; /* To move unaligned BINs          */
      137     3714    1     DCL FPT$ PTR AUTO;                    /* Pointer to FPT                     */
      138     3715    1     DCL TRNCHLD BIT(1) AUTO;              /* Set if entered TRNCHLD entrypoint  */
      139     3716    1     DCL I UBIN AUTO;                      /* Temporary (index)                  */
      140     3717    1     DCL IOERROK BIT(1) AUTO;              /* My copy of FPT.IOERROK             */
      141     3718    1     DCL JDCB$ PTR AUTO;                   /* Pointer to DCB                     */
      142     3719        %B$JRNLERR(NAME=JRNLECCI,
      143     3720         STCLASS="",
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:161  
      144     3721         PARONLY=1);
      145     3729    1     DCL KEYCHARS CHAR(KEYSIZE) BASED CALIGNED; /* For key moving                */
      146     3730    1     DCL KEYSIZE SBIN WORD ALIGNED AUTO;   /* For key moving                     */
      147     3731    1     DCL MAXRECL SBIN WORD AUTO;           /* Maximum record size                */
      148     3732    1     DCL N SBIN AUTO;                      /* Temporary number                   */
      149     3733    1     DCL NC REDEF N CHAR(4);
      150     3734    1     DCL NCHARS CHAR(N) BASED UNAL;
      151     3735    1     DCL RCWSIZE SBIN WORD AUTO;           /* For variable format size of RCW    */
      152     3736    1     DCL RCWTYPE SBIN AUTO;
              3736              /* For variable formats sys RCW/BOL binary, decimal, or none */
      153     3737    1     DCL RECSIZE SBIN WORD AUTO;           /* Total number of bytes              */
      154     3738    1     DCL SEGSIZE SBIN WORD AUTO;           /* Current record segment size        */
      155     3739    1     DCL SIX_CHARS CHAR(6) AUTO;           /* For temp SN storage                */
      156     3740    1     DCL SPANINFO SBIN WORD AUTO;        /* Current record segment spanning info */
      157     3741    1     DCL SPAN_MID SBIN WORD AUTO;          /* Ascii - 2, Ebcdic - 3              */
      158     3742    1     DCL SPAN_LAST SBIN WORD AUTO;         /* Ascii - 3, Ebcdic - 2              */
      159     3743    1     DCL TEMP SBIN AUTO;                   /* Temporary SBIN                     */
      160     3744    1     DCL TEMPC REDEF TEMP CHAR(4);         /* To move unaligned BINs             */
      161     3745    1     DCL TEMP$ PTR AUTO;                   /* Temp pointer                       */
      162     3746    1     DCL TEMPFP$ PTR AUTO;                 /* Temp FPOOL pointer.                */
      163     3747    1     DCL TEMPFPOOL UBIN AUTO;              /* Temp FPOOL number.                 */
      164     3748    1     DCL UKEY$ PTR AUTO;                   /* User's key                         */
      165     3749    1     DCL UKEYLEN SBIN WORD AUTO;           /* Length of user's key               */
      166     3750    1     DCL VFC_MOVED BIT(1) ALIGNED AUTO;    /* Indicates when VFC moved for UR    */
      167     3751    1     DCL BOF BIT(1) ALIGNED AUTO;    /* Indicates whether position to BOF or EOF */
      168     3752
      169     3753         /***
      170     3754          *** SYMREF data:
      171     3755          ***/
      172     3756
      173     3757    1     DCL B$JIT$ PTR SYMREF;                /* Pointer to JIT                     */
      174     3758
      175     3759         /***
      176     3760          *** CONSTANT data:
      177     3761          ***/
      178     3762
      179     3763    1     DCL ANSPAD CHAR(18) CONSTANT INIT('^^^^^^^^^^^^^^^^^^'); /* Circumflex pad  */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:162  
      180     3764    1     DCL ZEROBITS(0:4) UBIN CONSTANT INIT(0,0,0,0,0);
      181     3765    1     DCL NULPAD REDEF ZEROBITS CHAR(20);   /* Binary pad                         */
      182     3766
      183     3767         /***
      184     3768          *** SUBs:
      185     3769          ***/
      186     3770
      187     3771        %SUB RCWBIN#=0/*RCWBIN#*/;
      188     3772        %SUB RCWDEC#=1/*RCWDEC#*/;
      189     3773        %SUB RCWNONE#=2/*RCWNONE#*/;
      190     3774
      191     3775         /***
      192     3776          *** Translation tables:
      193     3777          ***/
      194     3778
      195     3779
      196     3780        %FT$ERR( ERRNAME=E_BADBLKL, MID='27'O, CODE=%E$BADBLKL, SEV=0 );
      197     3788        /*E*     ERROR: FTW-E$BADBLKL-0
      198     3789                 MESSAGE: Inconsistent block length% for %TA%
      199     3790                 MESSAGE1: Actual block length is less than that specified in
      200     3791                          the Block Header Record.
      201     3792                 DESCRIPTION: The block size specified in the BOL is larger
      202     3793                    than the actual block size.
      203     3794         ***/
      204     3795
      205     3796        %FT$ERR( ERRNAME=E_BADKEY, MID='27'O, CODE=%E$BADKEY, SEV=2 );
      206     3804        /*E*     ERROR: FTW-E$BADKEY-2
      207     3805                 MESSAGE: Illegal key length% for %TA%
      208     3806                 MESSAGE1: Key length is less than 1 or greater than 255.
      209     3807         ***/
      210     3808
      211     3809        %FT$ERR( ERRNAME=E_BADRECL, MID='27'O, CODE=%E$BADRECL, SEV=0 );
      212     3817        /*E*     ERROR: FTW-E$BADRECL-0
      213     3818                 MESSAGE: Inconsistent record length% for %TA%
      214     3819                 MESSAGE1: Record (segment) length is less than that specified
      215     3820                          in the Record Control Word.
      216     3821                 DESCRIPTION: Probably bad tape.
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:163  
      217     3822         ***/
      218     3823
      219     3824        %FT$ERR( ERRNAME=E_BADSPAN, MID='27'O, CODE=%E$BADSPAN, SEV=0 );
      220     3832        /*E*     ERROR: FTW-E$BADSPAN-0
      221     3833                 MESSAGE: Inconsistent spanning information% on %TA%
      222     3834                 MESSAGE1: A new record either started without the previous
      223     3835                    record terminating properly or it didn't begin properly.
      224     3836                 DESCRIPTION: A record segment started a record without the
      225     3837                           previous segment indicating previous record end or
      226     3838                           the previous record segment ended the previous
      227     3839                           record but the current segment does not start a record.
      228     3840         ***/
      229     3841
      230     3842        %FT$ERR( ERRNAME=E_BOF, MID='27'O, CODE=%E$BOF, SEV=2 );
      231     3850        /*E*     ERROR: FTW-E$BOF
      232     3851                 MESSAGE: Beginning of file hit% on %TA%
      233     3852                 MESSAGE1: An attempt to position before the beginning
      234     3853                    of file was made.
      235     3854                 MESSAGE2: A backspace record of backspace file encountered
      236     3855                    the beginning of file.
      237     3856         ***/
      238     3857
      239     3858        %FT$ERR( ERRNAME=E_BOT, MID='27'O, CODE=%E$BOT, SEV= 2);
      240     3866        /*E*     ERROR: FTW-E$BOT-2
      241     3867                 MESSAGE: Beginning of tape% on %TA%
      242     3868                  MESSAGE1: An attempt to position before tape load point was
      243     3869                    made. This might be due to user not realizing that a
      244     3870                    volume change has been made.
      245     3871         ***/
      246     3872
      247     3873        %FT$ERR( ERRNAME=E_CANTIO, MID='27'O, CODE=%E$CANTIO, SEV=2 );
      248     3881        /*E*     ERROR: FTW-E$CANTIO-2
      249     3882                 MESSAGE: I/O not allowed% on %TA% due to previous error
      250     3883                 MESSAGE1: I/O is not allowed due to previous error.
      251     3884                 DESCRIPTION: Either position was lost or no drive.
      252     3885         ***/
      253     3886
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:164  
      254     3887        %FT$ERR( ERRNAME=E_CANTTRANSLATE, MID='27'O, CODE=%E$CANTTRANSLATE, SEV=2 );
      255     3895        /*E*     ERROR: FTW-E$CANTTRANSLATE-2
      256     3896                 MESSAGE: EBCDIC translation required% on %TA% but buffer inaccessible
      257     3897                 MESSAGE1: Translation of data from ASCII to EBCDIC is required
      258     3898                    before data can be written, but the monitor is not able to
      259     3899                    access your buffer because it is write-protected (CONSTANT).
      260     3900         ***/
      261     3901
      262     3902        %FT$ERR( ERRNAME=E_CVBOT, MID='27'O, CODE=%E$CVBOT, SEV=2 );
      263     3910        /*E*     ERROR: FTW-E$CVBOT-2
      264     3911                 MESSAGE: Beginning of tape hit while CVOLing on I/O error%, for %TA%.
      265     3912                 MESSAGE1: An I/O error was detected while writing the first block
      266     3913                    of the first file of your tape, and you had specified IOERROK.
      267     3914                    You need to substitute another tape.
      268     3915         ***/
      269     3916
      270     3917        %FT$ERR( ERRNAME=E_DI, MID='27'O, CODE=%E$DI, SEV=2 );
      271     3925        /*E*     ERROR: FTW-E$DI-2
      272     3926                 MESSAGE: An attempt was made to read a record which was
      273     3927                    never written% in %TA%
      274     3928         ***/
      275     3929
      276     3930        %FT$ERR( ERRNAME=E_DOMAIN, MID='27'O, CODE=%E$DOMAIN, SEV=2 );
      277     3938        /*E*     ERROR: FTW-E$DOMAIN-2
      278     3939                 MESSAGE: Execute-only DCB% %DC% opened by another domain
      279     3940                 DESCRIPTION: This DCB, connected to an execute-only file,
      280     3941                    was opened by another domain and may not be accessed from
      281     3942                    this domain.
      282     3943         ***/
      283     3944
      284     3945        %FT$ERR( ERRNAME=E_EOF, MID='27'O, CODE=%E$EOF, SEV=2 );
      285     3953        /*E*    ERROR: FTW-E$EOF-2
      286     3954                 MESSAGE: End of file% on %TA%
      287     3955                 MESSAGE1: An attempt to position or read past file end was made.
      288     3956         ***/
      289     3957
      290     3958        %FT$ERR( ERRNAME=E_EOT, MID='27'O, CODE=%E$EOT, SEV=2 );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:165  
      291     3966        /*E*     ERROR: FTW-E$EOT-2
      292     3967                 MESSAGE: End of tape% on %TA%
      293     3968                 MESSAGE1: The end of tape marker was passed on the last write.
      294     3969                 DESCRIPTION: See message.
      295     3970         ***/
      296     3971
      297     3972        %FT$ERR( ERRNAME=E_EOVOL, MID='27'O, CODE=%E$EOVOL, SEV=2 );
      298     3980        /*E*     ERROR: FTW-E$EOVOL-2
      299     3981                 MESSAGE: End of volume% for %TA%
      300     3982                 MESSAGE1: End of volume with user requested CVOL notification.
      301     3983                 DESCRIPTION: End of volume and user asked to be notified.
      302     3984         ***/
      303     3985
      304     3986        %FT$ERR( ERRNAME=E_EOVOLS, MID='27'O, CODE=%E$EOVOLS, SEV=2 );
      305     3994        /*E*     ERROR: FTW-E$EOVOLS-3
      306     3995                 MESSAGE: End of volume...partial record% on %TA%
      307     3996                 MESSAGE1: End of volume with user requested CVOL notification
      308     3997                           during write of spanned record.
      309     3998                 DESCRIPTION: End of volume while spanning and user asked to
      310     3999                    be notified.
      311     4000         ***/
      312     4001
      313     4002        %FT$ERR( ERRNAME=E_FILLIM, MID='27'O, CODE=%E$FILLIM, SEV=2 );
      314     4010        /*E*     ERROR: FTW-E$FILLIM-2
      315     4011                 MESSAGE: Attempt to access record outside the limits of file% %TA%
      316     4012         ***/
      317     4013
      318     4014        %FT$ERR( ERRNAME=E_INDBC, MID='27'O, CODE=%E$INDBC, SEV=2 );
      319     4022        /*E*     ERROR: FTW-E$INDBC-2
      320     4023                 MESSAGE: Key not contained in record% for %TA%
      321     4024                 MESSAGE1: On a write to an indexed file the key must be
      322     4025                    contained in the initial record segment.
      323     4026         ***/
      324     4027
      325     4028        %FT$ERR( ERRNAME=E_KEYORDER, MID='27'O, CODE=%E$KEYORDER, SEV=2 );
      326     4036        /*E*     ERROR: FTW-E$KEYORDER-2
      327     4037                 MESSAGE: Out of order key% for %TA%
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:166  
      328     4038                 MESSAGE1: On a write to KEYED or INDEXED files with ACS=SEQUEN
      329     4039                    the key is not greater than that of the previous record.
      330     4040         ***/
      331     4041
      332     4042        %FT$ERR( ERRNAME=E_LD, MID='27'O, CODE=%E$LD, SEV=2 );
      333     4050        /*E*    ERROR: FTW-E$LD-2
      334     4051                 MESSAGE: Lost data% on %TA%
      335     4052                 MESSAGE1: Read-your buffer is too small; Write-total record
      336     4053                           length would exceed DCB.RECL.
      337     4054                DESCRIPTION: The user's buffer is not large enough to contain
      338     4055                   the next record (portion) on a read.  On a write, the total
      339     4056                   record length exceeds DCB.RECL.
      340     4057         ***/
      341     4058
      342     4059        %FT$ERR( ERRNAME=E_NOCONT, MID='27'O, CODE=%E$NOCONT, SEV=2 );
      343     4067        /*E*    ERROR: FTW-E$NOCONT-2
      344     4068                 MESSAGE: Illegal use of CONT% on %TA%
      345     4069                 MESSAGE1: Continuation is not allowed because previous operation
      346     4070                           was not an M$READ.
      347     4071                DESCRIPTION: The user specified continued read after a non-read
      348     4072                   operation.
      349     4073         ***/
      350     4074
      351     4075        %FT$ERR( ERRNAME=E_NOFPOOL, MID='27'O, CODE=%E$NOFPOOL, SEV=2 );
      352     4083        /*E*     ERROR: FTW-E$NOFPOOL-2
      353     4084                 MESSAGE: No FPOOL buffer% for %TA%
      354     4085                 MESSAGE1: There is no FPOOL buffer available to complete the current
      355     4086                           operation%, on %TA%.
      356     4087                 MESSAGE2: A temporary FPOOL buffer was needed to complete a CVOL on an
      357     4088                           I/O error or a continued write of a variable-length record,
      358     4089                           and none was found; or, the user requires more FPOOLs
      359     4090                           than the set user maximum.
      360     4091                 DESCRIPTION: This can happen in three possible ways:  On a continued
      361     4092                          write to a blocked tape file with ORG=VARIABLE and SPANNED=NO,
      362     4093                          we ran out of space in the block and tried to get a temporary
      363     4094                          FPOOL buffer to save the record being written (so we can trunc
      364     4095                          the current buffer), there wasn't a free one.  Also, if we
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:167  
      365     4096                          detected an I/O error during the write and the user had
      366     4097                          specified IOERROK, we needed an extra FPOOL to save the
      367     4098                          previously-written block (so we would have enough room to
      368     4099                          CVOL), and there wasn't one.  Finally, we're trying to
      369     4100                          get a block to accommodate BLKL but it exceeds the user's
      370     4101                          set maximum FPOOL limit.
      371     4102         ***/
      372     4103
      373     4104        %FT$ERR( ERRNAME=E_NOKEY, MID='27'O, CODE=%E$NOKEY, SEV=2 );
      374     4112        /*E*     ERROR: FTW-E$NOKEY-2
      375     4113                 MESSAGE: The specified key does not exist% in %TA%
      376     4114         ***/
      377     4115
      378     4116        %FT$ERR( ERRNAME=E_NONDECRCW, MID='27'O, CODE=%E$NONDECRCW, SEV=2 );
      379     4124        /*E*     ERROR: FTW-E$NONDECRCW-2
      380     4125                 MESSAGE: Non-decimal control bytes% in %TA%
      381     4126                 MESSAGE1: The record control word, segment control word, or
      382     4127                    block control word of a tape file format with decimal
      383     4128                    control information is non-decimal.
      384     4129         ***/
      385     4130
      386     4131        %FT$ERR( ERRNAME=E_NOTAUTH, MID='27'O, CODE=%E$NOTAUTH, SEV=2 );
      387     4139        /*E*     ERROR: FTW-E$NOTAUTH-2
      388     4140                 MESSAGE: You are not authorized to label optical disk platters.
      389     4141         ***/
      390     4142
      391     4143        %FT$ERR( ERRNAME=E_NOTFULL, MID='27'O, CODE=%E$NOTFULL, SEV=2 );
      392     4151        /*E*     ERROR: FTW-E$NOTFULL-2
      393     4152                 MESSAGE: Must read/write FULL RANDOM/IDS tape files% for %TA%
      394     4153                 MESSAGE1: Only full granule reads or writes of RANDOM or IDS
      395     4154                    files is supported for labelled tape.
      396     4155         ***/
      397     4156
      398     4157        %FT$ERR( ERRNAME=E_NOTIMPLEMENTED, MID='27'O, CODE=%E$NOTIMPLEMENTED, SEV=2 );
      399     4165        /*E*     ERROR: FTW-E$NOTIMPLEMENTED-2
      400     4166                 MESSAGE: Unimplemented operation attempted% on %DC%.
      401     4167                 MESSAGE1: You tried to read or write an optical disk platter that
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:168  
      402     4168                           was opened as a device, or you tried to use M$PRECORD,
      403     4169                           M$PFIL, M$REW, M$WEOF or M$CVOL, none of which are
      404     4170                           currently implemented for optical disk.
      405     4171         ***/
      406     4172
      407     4173        %FT$ERR( ERRNAME=E_NOTJRNLOWNER, MID='27'O, CODE=%E$NOTJRNLOWNER, SEV=2 );
      408     4181        /*E*     ERROR: FTW-E$NOTJRNLOWNER-2
      409     4182                 MESSAGE: Only the journal owner can CVOL% on DCB %DC%
      410     4183         ***/
      411     4184
      412     4185        %FT$ERR( ERRNAME=E_PARTIALKEY, MID='27'O, CODE=%E$PARTIALKEY, SEV=2 );
      413     4193        /*E*     ERROR: FTW-E$PARTIALKEY-2
      414     4194                 MESSAGE: Partial key% for %TA%
      415     4195                 MESSAGE1: Part of key is not present in block.
      416     4196                 DESCRIPTION: The key contained in the last record of a tape
      417     4197                    block is not wholly contained in the block.
      418     4198         ***/
      419     4199
      420     4200        %FT$ERR( ERRNAME=E_RANBADBLK, MID='27'O, CODE=%E$RANBADBLK, SEV=2 );
      421     4208        /*E*     ERROR: FTW-E$RANBADBLK-2
      422     4209                 MESSAGE: Illegal block number% for file %TA%
      423     4210                 MESSAGE1: The specified block number is negative or greater
      424     4211                           than the size of the file.
      425     4212         ***/
      426     4213
      427     4214        %FT$ERR( ERRNAME=E_SMALLRECL, MID='27'O, CODE=%E$SMALLRECL, SEV=2 );
      428     4222        /*E*     ERROR: FTW-E$SMALLRECL-2
      429     4223                 MESSAGE: Record too small% for %TA%
      430     4224                 MESSAGE1: Tape records of less than 4 bytes are not allowed.
      431     4225                 DESCRIPTION: Attempt to write a tape block with a record
      432     4226                    of less than 4 bytes.
      433     4227         ***/
      434     4228
      435     4229        %FT$ERR( ERRNAME=E_VOLOUT, MID='27'O, CODE=%E$VOLOUT, SEV=2 );
      436     4237        /*E*     ERROR: FTW-E$VOLOUT-2
      437     4238                 MESSAGE: No next volume% on %TA% for a CVOL after an I/O error.
      438     4239                 DESCRIPTION: An output CVOL was attempted after detecting an I/O
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:169  
      439     4240                              error, and there was no next volume.
      440     4241         ***/
      441     4242
      442     4243        /*P*    NAME: FTW$WRAT
      443     4244                PURPOSE: Contains lower level tape functions.
      444     4245                DESCRIPTION: Use of DCB fields:
      445     4246                   RPOS   - set if the record descriptors CRECX,
      446     4247                            CRECNO, and NRECX are already positioned
      447     4248                            to the next record to read or write
      448     4249                   CRECX  - byte displacement into the FPOOL buffer of the
      449     4250                            record (segment) just read/written if RPOS reset or of the
      450     4251                            next record to read/write if RPOS set
      451     4252                   NRECX  - record index (1-n) into the FPOOL buffer of the
      452     4253                            record just read/written if RPOS reset or of the
      453     4254                            next record to read/write if RPOS set
      454     4255                   CRECNO - the sequential number of the record described
      455     4256                            by CRECX and NRECX
      456     4257                   PRECNO - the number (1-n) of the file section tape record
      457     4258                            currently in memory
      458     4259                   AFTRBLK- set if tape is positioned immediately after the
      459     4260                            block (tape record) currently in memory; reset if
      460     4261                            tape is positioned immediately before the block
      461     4262                            (tape record) currently in memory
      462     4263                   LSTBLK - set if the block (tape record) currently in memory
      463     4264                            is known to be the last block (tape record) of
      464     4265                            the file
      465     4266                   FMOD   - set if the file has ever been modified
      466     4267                   NOEOF  - set if file has been modified and no end of file
      467     4268                            indicators written yet (double file mark for device tapes,
      468     4269                            EOF labels for managed tapes)
      469     4270                   TRNC   - set with code indicating type of trunc performed
      470     4271                   CONT   - set if the last operation performed was a
      471     4272                            to-be-continued write
      472     4273                   BLKLEN - the number of bytes in the block (tape record)
      473     4274                            currently in memory
      474     4275                   GDISP  - after a read, the total number of bytes read from
      475     4276                            the current record; after a write, the total number
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:170  
      476     4277                            of bytes written to the current record
      477     4278                   EOP    - a value indicating the type of operation last
      478     4279                            performed
      479     4280                   SPAN   - for managed tapes (spanned formats) indicates if
      480     4281                            the next record segment is expected to be a continuation
      481     4282                   CBUFNUM - for FPOOL buffer formats current FPOOL buffer number
      482     4283                   NEW_FSECT - set after a CVOL to indicate that no "current"
      483     4284                             block is in memory
      484     4285                   MUST_CVOL - set if the last write operation detected end
      485     4286                             of tape
      486     4287                   LASTKEY - for RANDOM, IDS, RESTRICT and RELATIVE files,
      487     4288                             the "number" of the last record read or written
      488     4289                   LASTKEY$ - for KEYED and INDEXED files, a pointer to an
      489     4290                             area in RO which contains the last key read or
      490     4291                             written (used for SEQUEN access)
      491     4292                   HAVLASTKEY - set if LASTKEY/LASTKEY$ is valid for checking
      492     4293                             SEQUEN access
      493     4294                NOTES: Some general rules about tape/record positioning:
      494     4295                   1) After a read, the current record is always the record
      495     4296                      just read so that a subsequent write will rewrite the
      496     4297                      just-read record
      497     4298                   2) After a PFIL or PRECORD, the current record is always
      498     4299                      the record which will next be read or written
      499     4300                   3) After a to-be-continued write, the current record is
      500     4301                      the record just written; after a(n ordinary) write,
      501     4302                      the current record is the next record to be written
      502     4303                   4) For variable formats, the caller of 'next segment' routines
      503     4304                      is responsible for setting NRECX.
      504     4305                   5) For variable formats, the caller of 'next record' routines
      505     4306                      is responsible for maintaining CRECNO and RPOS.
      506     4307         ***/
      507     4308        /*N* PRECNO=0 MIGHT ALSO BE USED INSTEAD OF NEW_FSECT */
      508     4309
      509     4310        /********************/
      510     4311
      511     4312         /***
      512     4313          *** Direct to proper routine.
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:171  
      513     4314          ***/
      514     4315
      515     4316    1           JDCB$ = B$JIT.DCB$;

   4316  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000232 236100                    LDQ     154,,PR0
         1 000004   200030 756100                    STQ     JDCB$,,AUTO

      516     4317    1           IF (~ F$DCB.REALSPAN)

   4317  1 000005   200030 471500                    LDP1    JDCB$,,AUTO
         1 000006   100102 236100                    LDQ     66,,PR1
         1 000007   000031 736000                    QLS     25
         1 000010   400000 376003                    ANQ     -131072,DU
         1 000011   400000 676003                    ERQ     -131072,DU
         1 000012   000020 600000 1                  TZE     s:4323

      517     4318    2           THEN DO;

      518     4319    2              SPAN_MID = 3;

   4319  1 000013   000003 235007                    LDA     3,DL
         1 000014   200045 755100                    STA     SPAN_MID,,AUTO

      519     4320    2              SPAN_LAST = 2;

   4320  1 000015   000002 236007                    LDQ     2,DL
         1 000016   200046 756100                    STQ     SPAN_LAST,,AUTO

      520     4321    2              END;

   4321  1 000017   000024 710000 1                  TRA     s:4326

      521     4322    2           ELSE DO;

      522     4323    2              SPAN_MID = 2;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:172  
   4323  1 000020   000002 235007                    LDA     2,DL
         1 000021   200045 755100                    STA     SPAN_MID,,AUTO

      523     4324    2              SPAN_LAST = 3;

   4324  1 000022   000003 236007                    LDQ     3,DL
         1 000023   200046 756100                    STQ     SPAN_LAST,,AUTO

      524     4325    2              END;

      525     4326    1           IF F$DCB.ACS = %JRNL# THEN

   4326  1 000024   100036 236100                    LDQ     30,,PR1
         1 000025   000777 376007                    ANQ     511,DL
         1 000026   000004 116007                    CMPQ    4,DL
         1 000027   000033 601000 1                  TNZ     s:4328

      526     4327    1              CALL FTR$JRNLDCB;

   4327  1 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000031   000000 701000 xent               TSX1    FTR$JRNLDCB
         1 000032   000000 011000                    NOP     0

      527     4328    1           CALL FTW_CHKIO ALTRET(JUSTALT); /* Make sure I/O allowed              */

   4328  1 000033   000244 701000 1                  TSX1    FTW_CHKIO
         1 000034   000203 702000 1                  TSX2    JUSTALT

      528     4329    1           F$DCB.TAPTYP.NOCVOL = %NO#;     /* Assume user CVOL control valid     */

   4329  1 000035   200030 470500                    LDP0    JDCB$,,AUTO
         1 000036   000000 236000 2                  LDQ     0
         1 000037   000067 356100                    ANSQ    55,,PR0

      529     4330    1           IOERROK = %NO#;

   4330  1 000040   200027 450100                    STZ     IOERROK,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:173  

      530     4331    1           FPT$ = ADDR(FPT);

   4331  1 000041   200004 236100                    LDQ     @FPT,,AUTO
         1 000042   200024 756100                    STQ     FPT$,,AUTO

      531     4332
      532     4333    2           DO CASE(FPTCODE);

   4333  1 000043   200003 471500                    LDP1    @FPTCODE,,AUTO
         1 000044   100000 235100                    LDA     0,,PR1
         1 000045   000016 115007                    CMPA    14,DL
         1 000046   000050 602005 1                  TNC     s:4333+5,AL
         1 000047   000133 710000 1                  TRA     s:4351
         1 000050   000066 710000 1                  TRA     s:4335
         1 000051   000076 710000 1                  TRA     s:4338
         1 000052   000133 710000 1                  TRA     s:4351
         1 000053   000120 710000 1                  TRA     s:4346
         1 000054   000130 710000 1                  TRA     s:4349
         1 000055   000133 710000 1                  TRA     s:4351
         1 000056   000112 710000 1                  TRA     s:4342
         1 000057   000115 710000 1                  TRA     s:4344
         1 000060   000133 710000 1                  TRA     s:4351
         1 000061   000133 710000 1                  TRA     s:4351
         1 000062   000076 710000 1                  TRA     s:4338
         1 000063   000076 710000 1                  TRA     s:4338
         1 000064   000133 710000 1                  TRA     s:4351
         1 000065   000076 710000 1                  TRA     s:4338

      533     4334    2              CASE(FPTREAD);

      534     4335    2                 IOERROK = FPT$READ_V.IOERROK;

   4335  1 000066   200024 473500                    LDP3    FPT$,,AUTO
         1 000067   300000 236100                    LDQ     0,,PR3
         1 000070   000031 736000                    QLS     25
         1 000071   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:174  
         1 000072   200027 756100                    STQ     IOERROK,,AUTO

      535     4336    2                 CALL FTW_READ ALTRET(JUSTALT);

   4336  1 000073   000363 701000 1                  TSX1    FTW_READ
         1 000074   000203 702000 1                  TSX2    JUSTALT
         1 000075   000136 710000 1                  TRA     s:4354

      536     4337    2              CASE(FPTWRITE,MFC_WRUR,MFC_WRURUC,MFC_WRBIN);

      537     4338    2                 DVBYTE = BITBIN(FPT$WRITE_V.DVBYTE);

   4338  1 000076   200024 473500                    LDP3    FPT$,,AUTO
         1 000077   300003 236100                    LDQ     3,,PR3
         1 000100   000033 772000                    QRL     27
         1 000101   000033 736000                    QLS     27
         1 000102   200021 756100                    STQ     DVBYTE,,AUTO

      538     4339    2                 IOERROK = FPT$WRITE_V.IOERROK;

   4339  1 000103   300000 236100                    LDQ     0,,PR3
         1 000104   000037 736000                    QLS     31
         1 000105   400000 376003                    ANQ     -131072,DU
         1 000106   200027 756100                    STQ     IOERROK,,AUTO

      539     4340    2                 CALL FTW_WRITE ALTRET(JUSTALT);

   4340  1 000107   000451 701000 1                  TSX1    FTW_WRITE
         1 000110   000203 702000 1                  TSX2    JUSTALT
         1 000111   000136 710000 1                  TRA     s:4354

      540     4341    2              CASE(FPTREW);

      541     4342    2                 CALL FTW_REW ALTRET(JUSTALT);

   4342  1 000112   001661 701000 1                  TSX1    FTW_REW
         1 000113   000203 702000 1                  TSX2    JUSTALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:175  
         1 000114   000136 710000 1                  TRA     s:4354

      542     4343    2              CASE(FPTWEOF);

      543     4344    2                 CALL FTW_WEOF ALTRET(JUSTALT);

   4344  1 000115   001753 701000 1                  TSX1    FTW_WEOF
         1 000116   000203 702000 1                  TSX2    JUSTALT
         1 000117   000136 710000 1                  TRA     s:4354

      544     4345    2              CASE(FPTPREC);

      545     4346    2                 IOERROK = FPT$PRECORD_V.IOERROK;

   4346  1 000120   200024 473500                    LDP3    FPT$,,AUTO
         1 000121   300000 236100                    LDQ     0,,PR3
         1 000122   000031 736000                    QLS     25
         1 000123   400000 376003                    ANQ     -131072,DU
         1 000124   200027 756100                    STQ     IOERROK,,AUTO

      546     4347    2                 CALL FTW_PRECORD ALTRET(JUSTALT);

   4347  1 000125   000531 701000 1                  TSX1    FTW_PRECORD
         1 000126   000203 702000 1                  TSX2    JUSTALT
         1 000127   000136 710000 1                  TRA     s:4354

      547     4348    2              CASE(FPTPFIL);

      548     4349    2                 CALL FTW_PFIL ALTRET(JUSTALT);

   4349  1 000130   000734 701000 1                  TSX1    FTW_PFIL
         1 000131   000203 702000 1                  TSX2    JUSTALT
         1 000132   000136 710000 1                  TRA     s:4354

      549     4350    2              CASE(ELSE);

      550     4351    2                 CALL FTT$TRUNC ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:176  

   4351  1 000133   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000134   002153 701000 1                  TSX1    s:5084
         1 000135   000203 702000 1                  TSX2    JUSTALT

      551     4352    2              END;

      552     4353
      553     4354    1           IF F$DCB.ACS = %JRNL# THEN      /* Debrief DCB                        */

   4354  1 000136   200030 470500                    LDP0    JDCB$,,AUTO
         1 000137   000036 236100                    LDQ     30,,PR0
         1 000140   000777 376007                    ANQ     511,DL
         1 000141   000004 116007                    CMPQ    4,DL
         1 000142   000146 601000 1                  TNZ     s:4356

      554     4355    1              CALL FTR$UNJRNLDCB;

   4355  1 000143   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000144   000000 701000 xent               TSX1    FTR$UNJRNLDCB
         1 000145   000000 011000                    NOP     0

      555     4356    2          IF (F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2) AND (F$DCB.IOERROK OR IOERROK)
              4356                    THEN DO;

   4356  1 000146   200030 470500                    LDP0    JDCB$,,AUTO
         1 000147   000102 236100                    LDQ     66,,PR0
         1 000150   140000 376003                    ANQ     49152,DU
         1 000151   040000 116003                    CMPQ    16384,DU
         1 000152   000155 600000 1                  TZE     s:4356+7
         1 000153   100000 116003                    CMPQ    32768,DU
         1 000154   000165 601000 1                  TNZ     s:4360
         1 000155   000031 236100                    LDQ     25,,PR0
         1 000156   020000 316003                    CANQ    8192,DU
         1 000157   000162 601000 1                  TNZ     s:4357
         1 000160   200027 234100                    SZN     IOERROK,,AUTO
         1 000161   000165 605000 1                  TPL     s:4360
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:177  

      556     4357    2              B$JIT.ERR = '0'B;

   4357  1 000162   000000 471400 xsym               LDP1    B$JIT$
         1 000163   100012 450100                    STZ     10,,PR1

      557     4358    2              RETURN;

   4358  1 000164   000000 702200 xent               TSX2  ! X66_ARET

      558     4359    2              END;
      559     4360    1           IF B$JIT.ERR THEN

   4360  1 000165   000000 471400 xsym               LDP1    B$JIT$
         1 000166   100012 235100                    LDA     10,,PR1
         1 000167   000171 600000 1                  TZE     s:4362

      560     4361    1              ALTRETURN;                   /* Catch lost data, etc.              */

   4361  1 000170   000000 702200 xent               TSX2  ! X66_AALT

      561     4362    1           IF F$DCB.ASN ~= %DEVICE# OR F$DCB.TAPTYP.MANAGED THEN

   4362  1 000171   000032 236100                    LDQ     26,,PR0
         1 000172   777000 376007                    ANQ     -512,DL
         1 000173   003000 116007                    CMPQ    1536,DL
         1 000174   000200 601000 1                  TNZ     s:4363
         1 000175   000067 236100                    LDQ     55,,PR0
         1 000176   000010 316003                    CANQ    8,DU
         1 000177   000202 600000 1                  TZE     s:4364

      562     4363    1              F$DCB.TYC = '0'B;

   4363  1 000200   000001 450100                    STZ     1,,PR0
         1 000201   000002 450100                    STZ     2,,PR0

      563     4364    1           RETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:178  

   4364  1 000202   000000 702200 xent               TSX2  ! X66_ARET

      564     4365
      565     4366    1   JUSTALT:
      566     4367    1           IF F$DCB.ACS = %JRNL# THEN      /* Debrief DCB                        */

   4367  1 000203   200030 470500       JUSTALT      LDP0    JDCB$,,AUTO
         1 000204   000036 236100                    LDQ     30,,PR0
         1 000205   000777 376007                    ANQ     511,DL
         1 000206   000004 116007                    CMPQ    4,DL
         1 000207   000213 601000 1                  TNZ     s:4369

      567     4368    1              CALL FTR$UNJRNLDCB;

   4368  1 000210   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000211   000000 701000 xent               TSX1    FTR$UNJRNLDCB
         1 000212   000000 011000                    NOP     0

      568     4369    2          IF (F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2) AND (F$DCB.IOERROK OR IOERROK)
              4369                    THEN DO;

   4369  1 000213   200030 470500                    LDP0    JDCB$,,AUTO
         1 000214   000102 236100                    LDQ     66,,PR0
         1 000215   140000 376003                    ANQ     49152,DU
         1 000216   040000 116003                    CMPQ    16384,DU
         1 000217   000222 600000 1                  TZE     s:4369+7
         1 000220   100000 116003                    CMPQ    32768,DU
         1 000221   000232 601000 1                  TNZ     s:4373
         1 000222   000031 236100                    LDQ     25,,PR0
         1 000223   020000 316003                    CANQ    8192,DU
         1 000224   000227 601000 1                  TNZ     s:4370
         1 000225   200027 234100                    SZN     IOERROK,,AUTO
         1 000226   000232 605000 1                  TPL     s:4373

      569     4370    2              B$JIT.ERR = '0'B;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:179  
   4370  1 000227   000000 471400 xsym               LDP1    B$JIT$
         1 000230   100012 450100                    STZ     10,,PR1

      570     4371    2              RETURN;

   4371  1 000231   000000 702200 xent               TSX2  ! X66_ARET

      571     4372    2              END;
      572     4373    1           IF F$DCB.ASN ~= %DEVICE# OR F$DCB.TAPTYP.MANAGED THEN

   4373  1 000232   000032 236100                    LDQ     26,,PR0
         1 000233   777000 376007                    ANQ     -512,DL
         1 000234   003000 116007                    CMPQ    1536,DL
         1 000235   000241 601000 1                  TNZ     s:4374
         1 000236   000067 236100                    LDQ     55,,PR0
         1 000237   000010 316003                    CANQ    8,DU
         1 000240   000243 600000 1                  TZE     s:4375

      573     4374    1              F$DCB.TYC = '0'B;

   4374  1 000241   000001 450100                    STZ     1,,PR0
         1 000242   000002 450100                    STZ     2,,PR0

      574     4375    1           ALTRETURN;

   4375  1 000243   000000 702200 xent               TSX2  ! X66_AALT

      575     4376        /*********************************************************************/
      576     4377        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:180  
      577     4378        /******************************************************************************/
      578     4379    1   FTW_CHKIO: PROC ALTRET;

   4379  1 000244   200064 741300       FTW_CHKIO    STX1  ! CRNTKEY+1,,AUTO

      579     4380        /*F*     NAME: FTW_CHKIO
      580     4381                 PURPOSE: Check if I/O is currently allowed.
      581     4382         ***/
      582     4383
      583     4384        /********************/
      584     4385
      585     4386         /***
      586     4387          *** I/O is only possible if we have a drive and position is not lost.
      587     4388          ***/
      588     4389
      589     4390    2              JDCB$ = B$JIT.DCB$;

   4390  1 000245   000000 470400 xsym               LDP0    B$JIT$
         1 000246   000232 236100                    LDQ     154,,PR0
         1 000247   200030 756100                    STQ     JDCB$,,AUTO

      590     4391    2              N = F$DCB.SETX;              /* Check if I/O possible              */

   4391  1 000250   200030 471500                    LDP1    JDCB$,,AUTO
         1 000251   100051 236100                    LDQ     41,,PR1
         1 000252   777777 376007                    ANQ     -1,DL
         1 000253   200035 756100                    STQ     N,,AUTO

      591     4392    3              IF N <= 0 THEN DO;

   4392  1 000254   000261 605400 1                  TPNZ    s:4397

      592     4393    3                 B$JIT.ERR = E_CANTIO; /*E* ERROR: FTW-E$CANTIO */

   4393  1 000255   000020 236000 0                  LDQ     E_CANTIO
         1 000256   000012 756100                    STQ     10,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:181  
      593     4394    3                 ALTRETURN;

   4394  1 000257   200064 221300                    LDX1  ! CRNTKEY+1,,AUTO
         1 000260   000000 702211                    TSX2  ! 0,X1

      594     4395    3                 END;
      595     4396
      596     4397    2              DDDT$ = NK$LDCT$(N)->NK$LDCT.DDT$;

   4397  1 000261   000000 473400 xsym               LDP3    N$DCT$$
         1 000262   300000 474506                    LDP4    0,QL,PR3
         1 000263   400004 236100                    LDQ     4,,PR4
         1 000264   200016 756100                    STQ     DDDT$,,AUTO

      597     4398    3              IF FT$DDT.POSLOST OR FT$DDT.FUNNYPOS THEN DO; /* Position lost     */

   4398  1 000265   200016 474500                    LDP4    DDDT$,,AUTO
         1 000266   400006 236100                    LDQ     6,,PR4
         1 000267   004000 316007                    CANQ    2048,DL
         1 000270   000274 601000 1                  TNZ     s:4399
         1 000271   400007 236100                    LDQ     7,,PR4
         1 000272   400000 316007                    CANQ    -131072,DL
         1 000273   000300 600000 1                  TZE     s:4408

      598     4399    3                 B$JIT.ERR = E_CANTIO; /*E* ERROR: FTW-E$CANTIO */

   4399  1 000274   000020 236000 0                  LDQ     E_CANTIO
         1 000275   000012 756100                    STQ     10,,PR0

   4399  1 000276                       JUSTALT      null
      599     4400    3   JUSTALT:      ;
      600     4401    3                 ALTRETURN;

   4401  1 000276   200064 221300                    LDX1  ! CRNTKEY+1,,AUTO
         1 000277   000000 702211                    TSX2  ! 0,X1

      601     4402    3                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:182  
      602     4403
      603     4404         /***
      604     4405          *** Backup before filemark if positioned past.
      605     4406          ***/
      606     4407
      607     4408    2              IF FT$DDT.POS = FTP_CHK# THEN

   4408  1 000300   400006 236100                    LDQ     6,,PR4
         1 000301   000160 376007                    ANQ     112,DL
         1 000302   000120 116007                    CMPQ    80,DL
         1 000303   000306 601000 1                  TNZ     s:4410

      608     4409    2                 CALL FTW_RESTORE_POS ALTRET(JUSTALT);

   4409  1 000304   000310 701000 1                  TSX1    FTW_RESTORE_POS
         1 000305   000276 702000 1                  TSX2    JUSTALT

      609     4410    2              RETURN;

   4410  1 000306   200064 221300                    LDX1  ! CRNTKEY+1,,AUTO
         1 000307   000001 702211                    TSX2  ! 1,X1

      610     4411
      611     4412    2      END FTW_CHKIO;
      612     4413        /*********************************************************************/
      613     4414        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:183  
      614     4415        /******************************************************************************/
      615     4416    1   FTW_RESTORE_POS: PROC ALTRET;

   4416  1 000310   200072 741300       FTW_RESTORE* STX1  ! @FP$+1,,AUTO

      616     4417        /*F*     NAME: FTW_RESTORE_POS
      617     4418                 PURPOSE: Position before EOF file mark if after it.
      618     4419         ***/
      619     4420
      620     4421        /********************/
      621     4422
      622     4423         /***
      623     4424          *** Back up to file data if positioned after file mark preceeding
      624     4425          *** EOF labels.
      625     4426          ***/
      626     4427
      627     4428    2              IF FT$DDT.POS = FTP_CHK# AND F$DCB.ASN ~= %DEVICE#

   4428  1 000311   200016 470500                    LDP0    DDDT$,,AUTO
         1 000312   000006 236100                    LDQ     6,,PR0
         1 000313   000160 376007                    ANQ     112,DL
         1 000314   000120 116007                    CMPQ    80,DL
         1 000315   000357 601000 1                  TNZ     s:4439
         1 000316   200030 471500                    LDP1    JDCB$,,AUTO
         1 000317   100032 236100                    LDQ     26,,PR1
         1 000320   777000 376007                    ANQ     -512,DL
         1 000321   003000 116007                    CMPQ    1536,DL
         1 000322   000357 600000 1                  TZE     s:4439

      628     4429    3              THEN DO;        /* Positioned after file mark preceeding EOF label */

      629     4430    3                 F$DCB.ARS = -1;           /* Back up                            */

   4430  1 000323   000001 335007                    LCA     1,DL
         1 000324   100000 755100                    STA     0,,PR1

      630     4431    3                 CALL FTI$SPFILE ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:184  

   4431  1 000325   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000326   000000 701000 xent               TSX1    FTI$SPFILE
         1 000327   000361 702000 1                  TSX2    JUSTALT

      631     4432    3                 IF F$DCB.LPOOL > 0

   4432  1 000330   200030 470500                    LDP0    JDCB$,,AUTO
         1 000331   000067 236100                    LDQ     55,,PR0
         1 000332   070000 316003                    CANQ    28672,DU
         1 000333   000352 600000 1                  TZE     s:4437

      632     4433    4                 THEN DO;                  /* Get rid of label FPOOL             */

      633     4434    4                    CALL FMD$RELBUF(F$DCB.LPOOL - 1);

   4434  1 000334   000067 236100                    LDQ     55,,PR0
         1 000335   000036 772000                    QRL     30
         1 000336   000007 376007                    ANQ     7,DL
         1 000337   000001 136007                    SBLQ    1,DL
         1 000340   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 000341   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 000342   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 000343   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 000344   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000345   000000 701000 xent               TSX1    FMD$RELBUF
         1 000346   000000 011000                    NOP     0

      634     4435    4                    F$DCB.LPOOL = 0;

   4435  1 000347   200030 470500                    LDP0    JDCB$,,AUTO
         1 000350   000001 236000 2                  LDQ     1
         1 000351   000067 356100                    ANSQ    55,,PR0

      635     4436    4                    END;

      636     4437    3                 FT$DDT.POS = FTP_BOD#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:185  

   4437  1 000352   200016 471500                    LDP1    DDDT$,,AUTO
         1 000353   100006 236100                    LDQ     6,,PR1
         1 000354   000002 376000 2                  ANQ     2
         1 000355   000060 276007                    ORQ     48,DL
         1 000356   100006 756100                    STQ     6,,PR1

      637     4438    3                 END;

      638     4439    2              RETURN;

   4439  1 000357   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 000360   000001 702211                    TSX2  ! 1,X1

   4438  1 000361                       JUSTALT      null
      639     4440
      640     4441    2   JUSTALT:   ;
      641     4442    2              ALTRETURN;

   4442  1 000361   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 000362   000000 702211                    TSX2  ! 0,X1

      642     4443
      643     4444    2      END FTW_RESTORE_POS;
      644     4445        /******************************************************************************/
      645     4446        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:186  
      646     4447        /*********************************************************************/
      647     4448    1   FTW_READ:  PROC ALTRET;

   4448  1 000363   200060 741300       FTW_READ     STX1  ! BOF+2,,AUTO

      648     4449        /*F*    NAME: FTW_READ
      649     4450                PURPOSE: Directs tape read logic to proper routine.
      650     4451         ***/
      651     4452
      652     4453        /********************/
      653     4454
      654     4455    2              CALL FTW_INIT;

   4455  1 000364   010737 701000 1                  TSX1    FTW_INIT
         1 000365   000000 011000                    NOP     0

      655     4456
      656     4457         /***
      657     4458          *** Take detour now for user buffer read formats.
      658     4459          ***/
      659     4460
      660     4461    3              IF F$DCB.TAPTYP.USRBUF THEN DO; /* Read into user buffer format    */

   4461  1 000366   200030 470500                    LDP0    JDCB$,,AUTO
         1 000367   000067 236100                    LDQ     55,,PR0
         1 000370   000100 316003                    CANQ    64,DU
         1 000371   000424 600000 1                  TZE     s:4477

      661     4462    3                 IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED THEN

   4462  1 000372   000032 236100                    LDQ     26,,PR0
         1 000373   777000 376007                    ANQ     -512,DL
         1 000374   003000 116007                    CMPQ    1536,DL
         1 000375   000413 601000 1                  TNZ     s:4468
         1 000376   000067 236100                    LDQ     55,,PR0
         1 000377   000010 316003                    CANQ    8,DU
         1 000400   000413 601000 1                  TNZ     s:4468
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:187  

      662     4463    3                    IF F$DCB.IASN ~= %OD# THEN

   4463  1 000401   000103 236100                    LDQ     67,,PR0
         1 000402   000777 376007                    ANQ     511,DL
         1 000403   000012 116007                    CMPQ    10,DL
         1 000404   000410 600000 1                  TZE     s:4466

      663     4464    3                       CALL FTW_RDEV ALTRET(JUSTALT);

   4464  1 000405   002235 701000 1                  TSX1    FTW_RDEV
         1 000406   000444 702000 1                  TSX2    JUSTALT
         1 000407   000415 710000 1                  TRA     s:4469

      664     4465    3                    ELSE
      665     4466    3                       CALL FTW_ODRDEV ALTRET(JUSTALT);

   4466  1 000410   003100 701000 1                  TSX1    FTW_ODRDEV
         1 000411   000444 702000 1                  TSX2    JUSTALT
         1 000412   000415 710000 1                  TRA     s:4469

      666     4467    3                 ELSE
      667     4468    3                    CALL FTW_RUSRBUF ALTRET(JUSTALT);

   4468  1 000413   003177 701000 1                  TSX1    FTW_RUSRBUF
         1 000414   000444 702000 1                  TSX2    JUSTALT

      668     4469    3                 F$DCB.EOP = READEOP#;     /* Successful read                    */

   4469  1 000415   200030 470500                    LDP0    JDCB$,,AUTO
         1 000416   000064 236100                    LDQ     52,,PR0
         1 000417   000003 376000 2                  ANQ     3
         1 000420   001000 276003                    ORQ     512,DU
         1 000421   000064 756100                    STQ     52,,PR0

      669     4470    3                 RETURN;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:188  
   4470  1 000422   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000423   000001 702211                    TSX2  ! 1,X1

      670     4471    3                 END;
      671     4472
      672     4473         /***
      673     4474          *** If previous operation was not a read, continuation is illegal.
      674     4475          ***/
      675     4476
      676     4477    2              IF FPT$READ_V.DVBYTE.CONT AND F$DCB.EOP ~= READEOP#

   4477  1 000424   200024 471500                    LDP1    FPT$,,AUTO
         1 000425   100003 430100                    FSZN    3,,PR1
         1 000426   000440 605000 1                  TPL     s:4487
         1 000427   000064 236100                    LDQ     52,,PR0
         1 000430   003000 376003                    ANQ     1536,DU
         1 000431   001000 116003                    CMPQ    512,DU
         1 000432   000440 600000 1                  TZE     s:4487

      677     4478    3              THEN DO; /* Continuation specified but last operation was not read */

      678     4479    3                 B$JIT.ERR = E_NOCONT;

   4479  1 000433   000035 236000 0                  LDQ     E_NOCONT
         1 000434   000000 473400 xsym               LDP3    B$JIT$
         1 000435   300012 756100                    STQ     10,,PR3

      679     4480    3                 ALTRETURN;

   4480  1 000436   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000437   000000 702211                    TSX2  ! 0,X1

      680     4481    3                 END;
      681     4482
      682     4483         /***
      683     4484          *** Read FPOOL buffer formats.
      684     4485          ***/
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:189  
      685     4486
      686     4487    2              CALL FTW_RNR ALTRET(JUSTALT);

   4487  1 000440   005170 701000 1                  TSX1    FTW_RNR
         1 000441   000444 702000 1                  TSX2    JUSTALT

      687     4488    2              RETURN;

   4488  1 000442   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000443   000001 702211                    TSX2  ! 1,X1

   4477  1 000444                       JUSTALT      null
      688     4489
      689     4490    2   JUSTALT:   ;
      690     4491    2              F$DCB.EOP = WHOKNOWSEOP#;

   4491  1 000444   200030 470500                    LDP0    JDCB$,,AUTO
         1 000445   000003 236000 2                  LDQ     3
         1 000446   000064 356100                    ANSQ    52,,PR0

      691     4492    2              ALTRETURN;

   4492  1 000447   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000450   000000 702211                    TSX2  ! 0,X1

      692     4493
      693     4494    2      END FTW_READ;
      694     4495        /*********************************************************************/
      695     4496        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:190  
      696     4497        /*********************************************************************/
      697     4498    1   FTW_WRITE: PROC ALTRET;

   4498  1 000451   200060 741300       FTW_WRITE    STX1  ! BOF+2,,AUTO

      698     4499        /*F*    NAME: FTW_WRITE
      699     4500                PURPOSE: Directs tape write logic to proper routine.
      700     4501         ***/
      701     4502
      702     4503        /********************/
      703     4504
      704     4505    2              CALL FTW_INIT;

   4505  1 000452   010737 701000 1                  TSX1    FTW_INIT
         1 000453   000000 011000                    NOP     0

      705     4506    2              DVBYTE = BITBIN(FPT$WRITE_V.DVBYTE);

   4506  1 000454   200024 470500                    LDP0    FPT$,,AUTO
         1 000455   000003 236100                    LDQ     3,,PR0
         1 000456   000033 772000                    QRL     27
         1 000457   000033 736000                    QLS     27
         1 000460   200021 756100                    STQ     DVBYTE,,AUTO

      706     4507
      707     4508         /***
      708     4509          *** Take detour now for user buffer write formats.
      709     4510          ***/
      710     4511
      711     4512    3              IF F$DCB.TAPTYP.USRBUF THEN DO; /* Write user buffer format        */

   4512  1 000461   200030 471500                    LDP1    JDCB$,,AUTO
         1 000462   100067 236100                    LDQ     55,,PR1
         1 000463   000100 316003                    CANQ    64,DU
         1 000464   000512 600000 1                  TZE     s:4526

      712     4513    3                 IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED THEN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:191  

   4513  1 000465   100032 236100                    LDQ     26,,PR1
         1 000466   777000 376007                    ANQ     -512,DL
         1 000467   003000 116007                    CMPQ    1536,DL
         1 000470   000506 601000 1                  TNZ     s:4519
         1 000471   100067 236100                    LDQ     55,,PR1
         1 000472   000010 316003                    CANQ    8,DU
         1 000473   000506 601000 1                  TNZ     s:4519

      713     4514    3                    IF F$DCB.IASN ~= %OD# THEN

   4514  1 000474   100103 236100                    LDQ     67,,PR1
         1 000475   000777 376007                    ANQ     511,DL
         1 000476   000012 116007                    CMPQ    10,DL
         1 000477   000503 600000 1                  TZE     s:4517

      714     4515    3                       CALL FTW_WDEV ALTRET(JUSTALT);

   4515  1 000500   002446 701000 1                  TSX1    FTW_WDEV
         1 000501   000524 702000 1                  TSX2    JUSTALT
         1 000502   000510 710000 1                  TRA     s:4520

      715     4516    3                    ELSE
      716     4517    3                       CALL FTW_ODWDEV ALTRET(JUSTALT);

   4517  1 000503   003130 701000 1                  TSX1    FTW_ODWDEV
         1 000504   000524 702000 1                  TSX2    JUSTALT
         1 000505   000510 710000 1                  TRA     s:4520

      717     4518    3                 ELSE
      718     4519    3                    CALL FTW_WUSRBUF ALTRET(JUSTALT);

   4519  1 000506   004111 701000 1                  TSX1    FTW_WUSRBUF
         1 000507   000524 702000 1                  TSX2    JUSTALT

      719     4520    3                 RETURN;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:192  
   4520  1 000510   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000511   000001 702211                    TSX2  ! 1,X1

      720     4521    3                 END;
      721     4522
      722     4523         /***
      723     4524          *** If previous operation was not an M$WRITE, reset continuation.
      724     4525          ***/
      725     4526    2              IF F$DCB.EOP ~= WRITEEOP#

   4526  1 000512   100064 236100                    LDQ     52,,PR1
         1 000513   003000 376003                    ANQ     1536,DU
         1 000514   003000 116003                    CMPQ    1536,DU
         1 000515   000520 600000 1                  TZE     s:4533

      726     4527    2              THEN F$DCB.CONT = %NO#;      /* No previous M$WRITE to continue    */

   4527  1 000516   000004 236000 2                  LDQ     4
         1 000517   100064 356100                    ANSQ    52,,PR1

      727     4528
      728     4529         /***
      729     4530          *** Get ready and write.
      730     4531          ***/
      731     4532
      732     4533    2              CALL FTW_WNR ALTRET(JUSTALT);

   4533  1 000520   005611 701000 1                  TSX1    FTW_WNR
         1 000521   000524 702000 1                  TSX2    JUSTALT

      733     4534    2              RETURN;

   4534  1 000522   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000523   000001 702211                    TSX2  ! 1,X1

      734     4535
      735     4536    2   JUSTALT:
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:193  
      736     4537    2              F$DCB.EOP = WHOKNOWSEOP#;

   4537  1 000524   200030 470500       JUSTALT      LDP0    JDCB$,,AUTO
         1 000525   000003 236000 2                  LDQ     3
         1 000526   000064 356100                    ANSQ    52,,PR0

      737     4538    2              ALTRETURN;

   4538  1 000527   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000530   000000 702211                    TSX2  ! 0,X1

      738     4539
      739     4540    2      END FTW_WRITE;
      740     4541        /*********************************************************************/
      741     4542        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:194  
      742     4543        /*********************************************************************/
      743     4544    1   FTW_PRECORD: PROC ALTRET;

   4544  1 000531   200060 741300       FTW_PRECORD  STX1  ! BOF+2,,AUTO

      744     4545        /*F*    NAME: FTW_PRECORD
      745     4546                PURPOSE: Directs tape precord logic to proper routine.
      746     4547         ***/
      747     4548
      748     4549    2     DCL KEYS BIT(1) ALIGNED AUTO;
      749     4550
      750     4551        /********************/
      751     4552
      752     4553    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow Precord on OD file    */

   4553  1 000532   200030 470500                    LDP0    JDCB$,,AUTO
         1 000533   000103 236100                    LDQ     67,,PR0
         1 000534   000777 376007                    ANQ     511,DL
         1 000535   000012 116007                    CMPQ    10,DL
         1 000536   000544 601000 1                  TNZ     s:4557

      753     4554    3                 B$JIT.ERR = E_NOTIMPLEMENTED;

   4554  1 000537   000043 236000 0                  LDQ     E_NOTIMPLEMENTED
         1 000540   000000 471400 xsym               LDP1    B$JIT$
         1 000541   100012 756100                    STQ     10,,PR1

      754     4555    3                 ALTRETURN;

   4555  1 000542   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000543   000000 702211                    TSX2  ! 0,X1

      755     4556    3                 END;
      756     4557    2              IF FPT$PRECORD_V.BOF OR FPT$PRECORD_V.EOF

   4557  1 000544   200024 471500                    LDP1    FPT$,,AUTO
         1 000545   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:195  
         1 000546   020000 316007                    CANQ    8192,DL
         1 000547   000552 601000 1                  TNZ     s:4559
         1 000550   010000 316007                    CANQ    4096,DL
         1 000551   000562 600000 1                  TZE     s:4565

      757     4558    3              THEN DO;                  /* Position to BOF or EOF before using N */

      758     4559    3                 IF FPT$PRECORD_V.BOF THEN

   4559  1 000552   020000 316007                    CANQ    8192,DL
         1 000553   000557 600000 1                  TZE     s:4561

      759     4560    3                    BOF='1'B;

   4560  1 000554   400000 236003                    LDQ     -131072,DU
         1 000555   200056 756100                    STQ     BOF,,AUTO
         1 000556   000560 710000 1                  TRA     s:4562

      760     4561    3                 ELSE BOF='0'B;

   4561  1 000557   200056 450100                    STZ     BOF,,AUTO

      761     4562    3                 CALL FTW_PFIL2 ALTRET(JUSTALT);

   4562  1 000560   000762 701000 1                  TSX1    FTW_PFIL2
         1 000561   000732 702000 1                  TSX2    JUSTALT

      762     4563    3                 END;

      763     4564
      764     4565    2              CALL FTW_CHKIO ALTRET(JUSTALT); /* Make sure I/O allowed           */

   4565  1 000562   000244 701000 1                  TSX1    FTW_CHKIO
         1 000563   000732 702000 1                  TSX2    JUSTALT

      765     4566    2              F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL control     */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:196  
   4566  1 000564   200030 470500                    LDP0    JDCB$,,AUTO
         1 000565   000020 236003                    LDQ     16,DU
         1 000566   000067 256100                    ORSQ    55,,PR0

      766     4567
      767     4568         /***
      768     4569          *** Detour now for device tape.
      769     4570          ***/
      770     4571
      771     4572    2              IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED

   4572  1 000567   000032 236100                    LDQ     26,,PR0
         1 000570   777000 376007                    ANQ     -512,DL
         1 000571   003000 116007                    CMPQ    1536,DL
         1 000572   000612 601000 1                  TNZ     s:4585
         1 000573   000067 236100                    LDQ     55,,PR0
         1 000574   000010 316003                    CANQ    8,DU
         1 000575   000612 601000 1                  TNZ     s:4585

      772     4573    3              THEN DO;

      773     4574    3                 N = FPT$PRECORD_V.N;

   4574  1 000576   200024 471500                    LDP1    FPT$,,AUTO
         1 000577   100001 235100                    LDA     1,,PR1
         1 000600   200035 755100                    STA     N,,AUTO

      774     4575    3                 CALL FTW_PRDEV ALTRET(ENDPRECORD);

   4575  1 000601   002611 701000 1                  TSX1    FTW_PRDEV
         1 000602   000720 702000 1                  TSX2    ENDPRECORD

      775     4576    3                 F$DCB.EOP = PRECORDEOP#;

   4576  1 000603   200030 470500                    LDP0    JDCB$,,AUTO
         1 000604   000064 236100                    LDQ     52,,PR0
         1 000605   000003 376000 2                  ANQ     3
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:197  
         1 000606   002000 276003                    ORQ     1024,DU
         1 000607   000064 756100                    STQ     52,,PR0

      776     4577    3                 RETURN;

   4577  1 000610   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000611   000001 702211                    TSX2  ! 1,X1

      777     4578    3                 END;
      778     4579
      779     4580
      780     4581         /***
      781     4582          *** Initialize for positioning.  End of file is an expected error.
      782     4583          ***/
      783     4584
      784     4585    2              IF NOT F$DCB.TAPTYP.USRBUF

   4585  1 000612   000067 236100                    LDQ     55,,PR0
         1 000613   000100 316003                    CANQ    64,DU
         1 000614   000621 601000 1                  TNZ     s:4596

      785     4586    3              THEN DO;                     /* Initialize for FPOOL formats       */

      786     4587    3                 CALL FTW_INIT;

   4587  1 000615   010737 701000 1                  TSX1    FTW_INIT
         1 000616   000000 011000                    NOP     0

      787     4588    3                 CALL FTW_PNRSNE ALTRET(ENDPRECORD);

   4588  1 000617   011024 701000 1                  TSX1    FTW_PNRSNE
         1 000620   000720 702000 1                  TSX2    ENDPRECORD

      788     4589    3                 END;

      789     4590
      790     4591         /***
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:198  
      791     4592            *** Set KEYS from fpt. BOF or EOF overrides KEYS, so ignore KEYS
      792     4593            *** if BOF or EOF set.
      793     4594            ***/
      794     4595
      795     4596    2              KEYS=FPT$PRECORD_V.KEYS;

   4596  1 000621   200024 470500                    LDP0    FPT$,,AUTO
         1 000622   000000 236100                    LDQ     0,,PR0
         1 000623   000022 736000                    QLS     18
         1 000624   400000 376003                    ANQ     -131072,DU
         1 000625   200061 756100                    STQ     KEYS,,AUTO

      796     4597    2              IF FPT$PRECORD_V.BOF OR FPT$PRECORD_V.EOF THEN

   4597  1 000626   000000 236100                    LDQ     0,,PR0
         1 000627   020000 316007                    CANQ    8192,DL
         1 000630   000633 601000 1                  TNZ     s:4598
         1 000631   010000 316007                    CANQ    4096,DL
         1 000632   000634 600000 1                  TZE     s:4603

      797     4598    2                 KEYS='0'B;

   4598  1 000633   200061 450100                    STZ     KEYS,,AUTO

      798     4599         /***
      799     4600          *** Position by key first if key is specified.
      800     4601          ***/
      801     4602
      802     4603    2              IF KEYS

   4603  1 000634   200061 234100                    SZN     KEYS,,AUTO
         1 000635   000642 605000 1                  TPL     s:4613

      803     4604    3              THEN DO;                     /* Key is specified                   */

      804     4605    3                 CALL FTW_FNDKEY(B$PS$(1)->FT$KEY) ALTRET(JUSTALT);

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:199  
   4605  1 000636   000001 236000 xsym               LDQ     B$PS$+1
         1 000637   200071 756100                    STQ     TEMP+2,,AUTO
         1 000640   011051 701000 1                  TSX1    FTW_FNDKEY
         1 000641   000732 702000 1                  TSX2    JUSTALT

      805     4606    3                 END;

      806     4607
      807     4608         /***
      808     4609          *** Position by N if 1) keyed format and key not specified,
      809     4610          *** 2) non-keyed format, or 3) N > 0.
      810     4611          ***/
      811     4612
      812     4613    2              N = FPT$PRECORD_V.N;

   4613  1 000642   200024 470500                    LDP0    FPT$,,AUTO
         1 000643   000001 235100                    LDA     1,,PR0
         1 000644   200035 755100                    STA     N,,AUTO

      813     4614    2              IF N ~= 0 OR (NOT KEYS OR

   4614  1 000645   000673 601000 1                  TNZ     s:4619
         1 000646   200061 234100                    SZN     KEYS,,AUTO
         1 000647   000673 605000 1                  TPL     s:4619
         1 000650   200030 471500                    LDP1    JDCB$,,AUTO
         1 000651   100032 236100                    LDQ     26,,PR1
         1 000652   777000 376003                    ANQ     -512,DU
         1 000653   021000 116003                    CMPQ    8704,DU
         1 000654   000673 600000 1                  TZE     s:4619
         1 000655   001000 116003                    CMPQ    512,DU
         1 000656   000673 600000 1                  TZE     s:4619
         1 000657   022000 116003                    CMPQ    9216,DU
         1 000660   000673 600000 1                  TZE     s:4619
         1 000661   017000 116003                    CMPQ    7680,DU
         1 000662   000673 600000 1                  TZE     s:4619
         1 000663   004000 116003                    CMPQ    2048,DU
         1 000664   000673 600000 1                  TZE     s:4619
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:200  
         1 000665   020000 116003                    CMPQ    8192,DU
         1 000666   000673 600000 1                  TZE     s:4619
         1 000667   011000 116003                    CMPQ    4608,DU
         1 000670   000673 600000 1                  TZE     s:4619
         1 000671   015000 116003                    CMPQ    6656,DU
         1 000672   000704 601000 1                  TNZ     s:4624

      814     4615    2                  (F$DCB.ORG = %UNDEF# OR F$DCB.ORG = %CONSEC# OR F$DCB.ORG = %
              4615                           RESTRICT#
      815     4616    2                  OR F$DCB.ORG = %FIXED# OR F$DCB.ORG = %UR#
      816     4617    2                 OR F$DCB.ORG = %VARIABLE# OR F$DCB.ORG = %SYMB# OR F$DCB.ORG = %IREL#
              4617                           ))
      817     4618    3              THEN DO;                     /* Position by N                      */

      818     4619    3                 IF F$DCB.TAPTYP.USRBUF

   4619  1 000673   200030 471500                    LDP1    JDCB$,,AUTO
         1 000674   100067 236100                    LDQ     55,,PR1
         1 000675   000100 316003                    CANQ    64,DU
         1 000676   000702 600000 1                  TZE     s:4621

      819     4620    3                 THEN CALL FTW_PRUSRBUF ALTRET(ENDPRECORD);

   4620  1 000677   004560 701000 1                  TSX1    FTW_PRUSRBUF
         1 000700   000720 702000 1                  TSX2    ENDPRECORD
         1 000701   000704 710000 1                  TRA     s:4624

      820     4621    3                 ELSE CALL FTW_PR ALTRET(ENDPRECORD);

   4621  1 000702   010313 701000 1                  TSX1    FTW_PR
         1 000703   000720 702000 1                  TSX2    ENDPRECORD

      821     4622    3                 END;

      822     4623
      823     4624    2              IF FPT$PRECORD_V.KEYR

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:201  
   4624  1 000704   200024 470500                    LDP0    FPT$,,AUTO
         1 000705   000000 236100                    LDQ     0,,PR0
         1 000706   200000 316007                    CANQ    65536,DL
         1 000707   000712 600000 1                  TZE     s:4627

      824     4625    2              THEN CALL FTW_RETURN_KEY_PS1; /* Return key                        */

   4625  1 000710   011474 701000 1                  TSX1    FTW_RETURN_KEY_PS1
         1 000711   000000 011000                    NOP     0

      825     4626
      826     4627    2              F$DCB.EOP = PRECORDEOP#;

   4627  1 000712   200030 470500                    LDP0    JDCB$,,AUTO
         1 000713   000064 236100                    LDQ     52,,PR0
         1 000714   000003 376000 2                  ANQ     3
         1 000715   002000 276003                    ORQ     1024,DU
         1 000716   000064 756100                    STQ     52,,PR0

      827     4628
      828     4629    3              DO ALTRET_HANDLING;

   4629  1 000717   000723 710000 1                  TRA     s:4634

   4625  1 000720                       ENDPRECORD   null
      829     4630    3   ENDPRECORD:   ;
      830     4631    3                 F$DCB.EOP = WHOKNOWSEOP#;

   4631  1 000720   200030 470500                    LDP0    JDCB$,,AUTO
         1 000721   000003 236000 2                  LDQ     3
         1 000722   000064 356100                    ANSQ    52,,PR0

      831     4632    3                 END;

      832     4633
      833     4634    2              IF B$JIT.ERR THEN ALTRETURN;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:202  
   4634  1 000723   000000 471400 xsym               LDP1    B$JIT$
         1 000724   100012 235100                    LDA     10,,PR1
         1 000725   000730 600000 1                  TZE     s:4635

   4634  1 000726   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000727   000000 702211                    TSX2  ! 0,X1

      834     4635    2              RETURN;

   4635  1 000730   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000731   000001 702211                    TSX2  ! 1,X1

   4634  1 000732                       JUSTALT      null
      835     4636
      836     4637    2   JUSTALT:   ;
      837     4638    2              ALTRETURN;

   4638  1 000732   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000733   000000 702211                    TSX2  ! 0,X1

      838     4639
      839     4640    2      END FTW_PRECORD;
      840     4641        /*********************************************************************/
      841     4642        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:203  
      842     4643        /*********************************************************************/
      843     4644    1   FTW_PFIL:  PROC ALTRET;

   4644  1 000734   200060 741300       FTW_PFIL     STX1  ! BOF+2,,AUTO

      844     4645        /*F*    NAME: FTW_PFIL
      845     4646                PURPOSE: Sets BOF bit and calls routine which actually handles
      846     4647                         the pfil.
      847     4648         ***/
      848     4649
      849     4650        /*******************/
      850     4651
      851     4652    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow Pfile on OD file      */

   4652  1 000735   200030 470500                    LDP0    JDCB$,,AUTO
         1 000736   000103 236100                    LDQ     67,,PR0
         1 000737   000777 376007                    ANQ     511,DL
         1 000740   000012 116007                    CMPQ    10,DL
         1 000741   000747 601000 1                  TNZ     s:4656

      852     4653    3                 B$JIT.ERR = E_NOTIMPLEMENTED;

   4653  1 000742   000043 236000 0                  LDQ     E_NOTIMPLEMENTED
         1 000743   000000 471400 xsym               LDP1    B$JIT$
         1 000744   100012 756100                    STQ     10,,PR1

      853     4654    3                 ALTRETURN;

   4654  1 000745   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000746   000000 702211                    TSX2  ! 0,X1

      854     4655    3                 END;
      855     4656    2              BOF=FPT$PFIL_V.BOF;

   4656  1 000747   200024 471500                    LDP1    FPT$,,AUTO
         1 000750   100000 236100                    LDQ     0,,PR1
         1 000751   000022 736000                    QLS     18
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:204  
         1 000752   400000 376003                    ANQ     -131072,DU
         1 000753   200056 756100                    STQ     BOF,,AUTO

      856     4657    2              CALL FTW_PFIL2 ALTRET(JUSTALT);

   4657  1 000754   000762 701000 1                  TSX1    FTW_PFIL2
         1 000755   000760 702000 1                  TSX2    JUSTALT

      857     4658    2              RETURN;

   4658  1 000756   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000757   000001 702211                    TSX2  ! 1,X1

   4656  1 000760                       JUSTALT      null
      858     4659
      859     4660    2   JUSTALT:   ;
      860     4661    2              ALTRETURN;

   4661  1 000760   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 000761   000000 702211                    TSX2  ! 0,X1

      861     4662
      862     4663    2      END FTW_PFIL;
      863     4664        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:205  
      864     4665        /*********************************************************************/
      865     4666    1   FTW_PFIL2: PROC ALTRET;

   4666  1 000762   200062 741300       FTW_PFIL2    STX1  ! KEYS+1,,AUTO

      866     4667        /*F*    NAME: FTW_PFIL2
      867     4668                PURPOSE: Directs tape pfil logic to proper routine.
      868     4669         ***/
      869     4670
      870     4671        /*******************/
      871     4672
      872     4673    2              CALL FTW_CHKIO ALTRET(JUSTALT); /* Make sure I/O allowed           */

   4673  1 000763   000244 701000 1                  TSX1    FTW_CHKIO
         1 000764   001062 702000 1                  TSX2    JUSTALT

      873     4674    2              F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL control     */

   4674  1 000765   200030 470500                    LDP0    JDCB$,,AUTO
         1 000766   000020 236003                    LDQ     16,DU
         1 000767   000067 256100                    ORSQ    55,,PR0

      874     4675
      875     4676         /***
      876     4677          *** Detour now for device tape.
      877     4678          ***/
      878     4679
      879     4680    2              IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED

   4680  1 000770   000032 236100                    LDQ     26,,PR0
         1 000771   777000 376007                    ANQ     -512,DL
         1 000772   003000 116007                    CMPQ    1536,DL
         1 000773   001003 601000 1                  TNZ     s:4690
         1 000774   000067 236100                    LDQ     55,,PR0
         1 000775   000010 316003                    CANQ    8,DU
         1 000776   001003 601000 1                  TNZ     s:4690

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:206  
      880     4681    3              THEN DO;

      881     4682    3                 CALL FTW_PFDEV ALTRET(JUSTALT);

   4682  1 000777   002735 701000 1                  TSX1    FTW_PFDEV
         1 001000   001062 702000 1                  TSX2    JUSTALT

      882     4683    3                 RETURN;

   4683  1 001001   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 001002   000001 702211                    TSX2  ! 1,X1

      883     4684    3                 END;
      884     4685
      885     4686         /***
      886     4687          *** All file formats can be PFIL BOF'd in the same way.
      887     4688          ***/
      888     4689
      889     4690    2              IF BOF

   4690  1 001003   200056 234100                    SZN     BOF,,AUTO
         1 001004   001025 605000 1                  TPL     s:4706

      890     4691    3              THEN DO;                     /* PFIL BOF                           */

      891     4692    3                 IF NOT F$DCB.TAPTYP.USRBUF

   4692  1 001005   000067 236100                    LDQ     55,,PR0
         1 001006   000100 316003                    CANQ    64,DU
         1 001007   001014 601000 1                  TNZ     s:4697

      892     4693    4                 THEN DO;                  /* Initialize for user buffer formats */

      893     4694    4                    CALL FTW_INIT;

   4694  1 001010   010737 701000 1                  TSX1    FTW_INIT
         1 001011   000000 011000                    NOP     0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:207  

      894     4695    4                    CALL FTW_PNRSNE ALTRET(JUSTALT); /* Get current record segment */

   4695  1 001012   011024 701000 1                  TSX1    FTW_PNRSNE
         1 001013   001062 702000 1                  TSX2    JUSTALT

      895     4696    4                    END;

      896     4697    3                 CALL FTW_BOF ALTRET(JUSTALT);

   4697  1 001014   012753 701000 1                  TSX1    FTW_BOF
         1 001015   001062 702000 1                  TSX2    JUSTALT

      897     4698    3                 F$DCB.EOP = PRECORDEOP#;

   4698  1 001016   200030 470500                    LDP0    JDCB$,,AUTO
         1 001017   000064 236100                    LDQ     52,,PR0
         1 001020   000003 376000 2                  ANQ     3
         1 001021   002000 276003                    ORQ     1024,DU
         1 001022   000064 756100                    STQ     52,,PR0

      898     4699    3                 RETURN;

   4699  1 001023   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 001024   000001 702211                    TSX2  ! 1,X1

      899     4700    3                 END;
      900     4701
      901     4702         /***
      902     4703          *** Either user buffer format or FPOOL buffer format.
      903     4704          ***/
      904     4705
      905     4706    2              IF F$DCB.TAPTYP.USRBUF

   4706  1 001025   000067 236100                    LDQ     55,,PR0
         1 001026   000100 316003                    CANQ    64,DU
         1 001027   001033 600000 1                  TZE     s:4709
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:208  

      906     4707    2              THEN CALL FTW_PFUSRBUF ALTRET(ENDPFIL);

   4707  1 001030   005076 701000 1                  TSX1    FTW_PFUSRBUF
         1 001031   001045 702000 1                  TSX2    ENDPFIL
         1 001032   001037 710000 1                  TRA     s:4713

      907     4708    3              ELSE DO;

      908     4709    3                 CALL FTW_INIT;

   4709  1 001033   010737 701000 1                  TSX1    FTW_INIT
         1 001034   000000 011000                    NOP     0

      909     4710    3                 CALL FTW_PFL ALTRET(ENDPFIL);

   4710  1 001035   010720 701000 1                  TSX1    FTW_PFL
         1 001036   001045 702000 1                  TSX2    ENDPFIL

      910     4711    3                 END;

      911     4712
      912     4713    2              F$DCB.EOP = PRECORDEOP#;

   4713  1 001037   200030 470500                    LDP0    JDCB$,,AUTO
         1 001040   000064 236100                    LDQ     52,,PR0
         1 001041   000003 376000 2                  ANQ     3
         1 001042   002000 276003                    ORQ     1024,DU
         1 001043   000064 756100                    STQ     52,,PR0

      913     4714
      914     4715    3              DO ALTRET_HANDLING;

   4715  1 001044   001050 710000 1                  TRA     s:4719

   4707  1 001045                       ENDPFIL      null
      915     4716    3   ENDPFIL:      ;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:209  
      916     4717    3                 F$DCB.EOP = WHOKNOWSEOP#;

   4717  1 001045   200030 470500                    LDP0    JDCB$,,AUTO
         1 001046   000003 236000 2                  LDQ     3
         1 001047   000064 356100                    ANSQ    52,,PR0

      917     4718    3                 END;

      918     4719    2              IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;

   4719  1 001050   000000 471400 xsym               LDP1    B$JIT$
         1 001051   100012 236100                    LDQ     10,,PR1
         1 001052   377770 376007                    ANQ     131064,DL
         1 001053   000060 116007                    CMPQ    48,DL
         1 001054   001057 600000 1                  TZE     s:4720

   4719  1 001055   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 001056   000000 702211                    TSX2  ! 0,X1

      919     4720    2              B$JIT.ERR = '0'B;            /* Don't return EOF as error          */

   4720  1 001057   100012 450100                    STZ     10,,PR1

      920     4721    2              RETURN;

   4721  1 001060   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 001061   000001 702211                    TSX2  ! 1,X1

   4720  1 001062                       JUSTALT      null
      921     4722
      922     4723    2   JUSTALT:   ;
      923     4724    2              ALTRETURN;

   4724  1 001062   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 001063   000000 702211                    TSX2  ! 0,X1

      924     4725
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:210  
      925     4726    2      END FTW_PFIL2;
      926     4727        /*********************************************************************/
      927     4728        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:211  
      928     4729        /*********************************************************************/
      929     4730    1   FTW$CVOL:  ENTRY ALTRET;

   4730  1 001064   000000 700200 xent  FTW$CVOL     TSX0  ! X66_AUTO_3
         1 001065   000122 000003                    ZERO    82,3

      930     4731        /*F*     NAME: FTW$CVOL
      931     4732                 PURPOSE: Perform CVOL function
      932     4733         ***/
      933     4734
      934     4735        /********************/
      935     4736
      936     4737    2              IF B$JIT.DCB$->F$DCB.IASN = %OD# THEN DO;
              4737                       /* Don't allow M$CVOL on OD file */

   4737  1 001066   000000 470400 xsym               LDP0    B$JIT$
         1 001067   000232 471500                    LDP1    154,,PR0
         1 001070   100103 236100                    LDQ     67,,PR1
         1 001071   000777 376007                    ANQ     511,DL
         1 001072   000012 116007                    CMPQ    10,DL
         1 001073   001077 601000 1                  TNZ     s:4741

      937     4738    2                 B$JIT.ERR = E_NOTIMPLEMENTED;

   4738  1 001074   000043 236000 0                  LDQ     E_NOTIMPLEMENTED
         1 001075   000012 756100                    STQ     10,,PR0

      938     4739    2                 ALTRETURN;

   4739  1 001076   000000 702200 xent               TSX2  ! X66_AALT

      939     4740    2                 END;
      940     4741    1              CVOLFT = %NO#;

   4741  1 001077   200006 450100                    STZ     CVOLFT,,AUTO

      941     4742    1              GOTO FTWCVOLCONT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:212  

   4742  1 001100   001105 710000 1                  TRA     FTWCVOLCONT

      942     4743
      943     4744    1   FTW$CVOLFT: ENTRY ALTRET;

   4744  1 001101   000000 700200 xent  FTW$CVOLFT   TSX0  ! X66_AUTO_3
         1 001102   000122 000003                    ZERO    82,3

      944     4745
      945     4746    1              CVOLFT = %YES#;

   4746  1 001103   400000 236003                    LDQ     -131072,DU
         1 001104   200006 756100                    STQ     CVOLFT,,AUTO

   4746  1 001105                       FTWCVOLCONT  null
      946     4747
      947     4748    1   FTWCVOLCONT: ;
      948     4749
      949     4750
      950     4751         /***
      951     4752          *** Make sure that DCB is open.  Ignore CVOL if not tape.
      952     4753          ***/
      953     4754
      954     4755    1              JDCB$ = B$JIT.DCB$;

   4755  1 001105   000000 470400 xsym               LDP0    B$JIT$
         1 001106   000232 236100                    LDQ     154,,PR0
         1 001107   200030 756100                    STQ     JDCB$,,AUTO

      955     4756    1              IF NOT F$DCB.FCD

   4756  1 001110   200030 471500                    LDP1    JDCB$,,AUTO
         1 001111   100031 236100                    LDQ     25,,PR1
         1 001112   020000 316007                    CANQ    8192,DL
         1 001113   001136 601000 1                  TNZ     s:4764

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:213  
      956     4757    2              THEN DO;                     /* DCB isn't open                     */

      957     4758    2                 CALL FMO$GETDOMAIN(N);    /* Set current domain                 */

   4758  1 001114   200035 633500                    EPPR3   N,,AUTO
         1 001115   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 001116   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001120   000000 701000 xent               TSX1    FMO$GETDOMAIN
         1 001121   000000 011000                    NOP     0

      958     4759    2                 F$DCB.WSR = N;

   4759  1 001122   200030 470500                    LDP0    JDCB$,,AUTO
         1 001123   200035 236100                    LDQ     N,,AUTO
         1 001124   000022 736000                    QLS     18
         1 001125   000040 552120                    STBQ    32,'20'O,PR0

      959     4760    2                 CALL FMM$DFLOPN;          /* Default open                       */

   4760  1 001126   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001127   000000 701000 xent               TSX1    FMM$DFLOPN
         1 001130   000000 011000                    NOP     0

      960     4761    2                 IF NOT F$DCB.FCD THEN RETURN; /* Not open?                      */

   4761  1 001131   200030 470500                    LDP0    JDCB$,,AUTO
         1 001132   000031 236100                    LDQ     25,,PR0
         1 001133   020000 316007                    CANQ    8192,DL
         1 001134   001161 601000 1                  TNZ     s:4775

   4761  1 001135   000000 702200 xent               TSX2  ! X66_ARET

      961     4762    2                 END;
      962     4763    2              ELSE DO;                    /* Must be same domain if execute only */

      963     4764    2                 IF F$DCB.FFLG.EXEC
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:214  

   4764  1 001136   100004 236100                    LDQ     4,,PR1
         1 001137   002000 316003                    CANQ    1024,DU
         1 001140   001161 600000 1                  TZE     s:4775

      964     4765    3                 THEN DO;

      965     4766    3                    CALL FMO$GETDOMAIN(N);

   4766  1 001141   200035 633500                    EPPR3   N,,AUTO
         1 001142   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 001143   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001145   000000 701000 xent               TSX1    FMO$GETDOMAIN
         1 001146   000000 011000                    NOP     0

      966     4767    3                    IF F$DCB.WSR ~= N

   4767  1 001147   200030 470500                    LDP0    JDCB$,,AUTO
         1 001150   000040 236100                    LDQ     32,,PR0
         1 001151   000022 772000                    QRL     18
         1 001152   000777 376007                    ANQ     511,DL
         1 001153   200035 116100                    CMPQ    N,,AUTO
         1 001154   001161 600000 1                  TZE     s:4775

      967     4768    4                    THEN DO;

      968     4769    4                       B$JIT.ERR = E_DOMAIN; /*E* ERROR: FTW-E$DOMAIN */

   4769  1 001155   000024 236000 0                  LDQ     E_DOMAIN
         1 001156   000000 471400 xsym               LDP1    B$JIT$
         1 001157   100012 756100                    STQ     10,,PR1

      969     4770    4                       RETURN;

   4770  1 001160   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:215  
      970     4771    4                       END;
      971     4772    3                    END;
      972     4773    2                 END;
      973     4774
      974     4775    1              IF F$DCB.IFMT ~= FMTTAPE# THEN RETURN; /* Ignore for non-tape      */

   4775  1 001161   200030 470500                    LDP0    JDCB$,,AUTO
         1 001162   000103 236100                    LDQ     67,,PR0
         1 001163   777000 376003                    ANQ     -512,DU
         1 001164   005000 116003                    CMPQ    2560,DU
         1 001165   001167 600000 1                  TZE     s:4776

   4775  1 001166   000000 702200 xent               TSX2  ! X66_ARET

      975     4776    1              IF F$DCB.ACS = %JRNL#

   4776  1 001167   000036 236100                    LDQ     30,,PR0
         1 001170   000777 376007                    ANQ     511,DL
         1 001171   000004 116007                    CMPQ    4,DL
         1 001172   001217 601000 1                  TNZ     s:4792

      976     4777    1              THEN IF NOT F$DCB.OWNER

   4777  1 001173   000064 236100                    LDQ     52,,PR0
         1 001174   040000 316007                    CANQ    16384,DL
         1 001175   001202 601000 1                  TNZ     s:4783

      977     4778    2                 THEN DO;                  /* Non-owner JRNL user can't CVOL     */

      978     4779    2                    B$JIT.ERR = E_NOTJRNLOWNER; /*E* FTW-E$NOTJRNLOWNER */

   4779  1 001176   000044 236000 0                  LDQ     E_NOTJRNLOWNER
         1 001177   000000 471400 xsym               LDP1    B$JIT$
         1 001200   100012 756100                    STQ     10,,PR1

      979     4780    2                    RETURN;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:216  
   4780  1 001201   000000 702200 xent               TSX2  ! X66_ARET

      980     4781    2                    END;
      981     4782    2                 ELSE DO;                  /* Enqueue journal                    */

      982     4783    2                    CALL FTR$JRNLDCB;

   4783  1 001202   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001203   000000 701000 xent               TSX1    FTR$JRNLDCB
         1 001204   000000 011000                    NOP     0

      983     4784    2                    CALL UQB$MENQXB(F$DCB.CFU$) ALTRET(ENDENQUEUE);

   4784  1 001205   200030 236100                    LDQ     JDCB$,,AUTO
         1 001206   000066 036003                    ADLQ    54,DU
         1 001207   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 001210   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001211   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001212   000000 701000 xent               TSX1    UQB$MENQXB
         1 001213   001534 702000 1                  TSX2    ENDENQUEUE

      984     4785    2                    F$DCB.ENQF = %YES#;

   4785  1 001214   200030 470500                    LDP0    JDCB$,,AUTO
         1 001215   000200 236007                    LDQ     128,DL
         1 001216   000064 256100                    ORSQ    52,,PR0

      985     4786    2                    END;

      986     4787
      987     4788         /***
      988     4789          *** Make sure I/O is valid for this DCB.
      989     4790          ***/
      990     4791
      991     4792    1              CALL FTW_CHKIO ALTRET(CVOLALT);

   4792  1 001217   000244 701000 1                  TSX1    FTW_CHKIO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:217  
         1 001220   001505 702000 1                  TSX2    CVOLALT

      992     4793
      993     4794         /***
      994     4795          *** For device tape just close current volume and open next.
      995     4796          ***/
      996     4797
      997     4798    2              IF F$DCB.ASN = %DEVICE# THEN DO;

   4798  1 001221   200030 470500                    LDP0    JDCB$,,AUTO
         1 001222   000032 236100                    LDQ     26,,PR0
         1 001223   777000 376007                    ANQ     -512,DL
         1 001224   003000 116007                    CMPQ    1536,DL
         1 001225   001361 601000 1                  TNZ     s:4843

      998     4799    3                 IF F$DCB.NOEOF THEN DO;   /* Close output free tape             */

   4799  1 001226   000064 236100                    LDQ     52,,PR0
         1 001227   400000 316007                    CANQ    -131072,DL
         1 001230   001274 600000 1                  TZE     s:4818

      999     4800    4                    IF F$DCB.TAPTYP.MANAGED THEN DO; /* Trunc any buffers        */

   4800  1 001231   000067 236100                    LDQ     55,,PR0
         1 001232   000010 316003                    CANQ    8,DU
         1 001233   001250 600000 1                  TZE     s:4807

     1000     4801    4                       CALL FTW_END_MANAGED_FREE_SECT ALTRET(JUSTALT);

   4801  1 001234   012026 701000 1                  TSX1    FTW_END_MANAGED_FREE_SECT
         1 001235   000203 702000 1                  TSX2    JUSTALT

     1001     4802    4                       CALL FTI$WRFM ALTRET(JUSTALT);

   4802  1 001236   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001237   000000 701000 xent               TSX1    FTI$WRFM
         1 001240   000203 702000 1                  TSX2    JUSTALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:218  

     1002     4803    4                       F$DCB.ARS = -1;     /* Position before second file mark   */

   4803  1 001241   000001 335007                    LCA     1,DL
         1 001242   200030 470500                    LDP0    JDCB$,,AUTO
         1 001243   000000 755100                    STA     0,,PR0

     1003     4804    4                       CALL FTI$SPFILE ALTRET(JUSTALT);

   4804  1 001244   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001245   000000 701000 xent               TSX1    FTI$SPFILE
         1 001246   000203 702000 1                  TSX2    JUSTALT

     1004     4805    4                       END;

   4805  1 001247   001276 710000 1                  TRA     s:4819

     1005     4806    4                    ELSE DO;

     1006     4807    4                       IF NOT F$DCB.TAPTYP.PASTFM THEN

   4807  1 001250   000004 316003                    CANQ    4,DU
         1 001251   001255 601000 1                  TNZ     s:4810

     1007     4808    4                          CALL FTI$WRFM ALTRET(JUSTALT);

   4808  1 001252   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001253   000000 701000 xent               TSX1    FTI$WRFM
         1 001254   000203 702000 1                  TSX2    JUSTALT

     1008     4809                                        /* If write file mark was last, only need one */
     1009     4810    4                       CALL FTI$WRFM ALTRET(JUSTALT);

   4810  1 001255   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001256   000000 701000 xent               TSX1    FTI$WRFM
         1 001257   000203 702000 1                  TSX2    JUSTALT

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:219  
     1010     4811    4                       F$DCB.ARS = -1;

   4811  1 001260   000001 335007                    LCA     1,DL
         1 001261   200030 470500                    LDP0    JDCB$,,AUTO
         1 001262   000000 755100                    STA     0,,PR0

     1011     4812    4                       CALL FTI$SPFILE ALTRET(JUSTALT); /* Position between      */

   4812  1 001263   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001264   000000 701000 xent               TSX1    FTI$SPFILE
         1 001265   000203 702000 1                  TSX2    JUSTALT

     1012     4813    4                       F$DCB.SPAN = %NO#;  /* WEOF not last                      */

   4813  1 001266   200030 470500                    LDP0    JDCB$,,AUTO
         1 001267   000005 236000 2                  LDQ     5
         1 001270   000064 356100                    ANSQ    52,,PR0

     1013     4814    4                       F$DCB.SEZ_OK = %YES#; /* Permit CVOL to scratch           */

   4814  1 001271   000004 236003                    LDQ     4,DU
         1 001272   000064 256100                    ORSQ    52,,PR0

     1014     4815    4                       END;

     1015     4816    3                    END;

   4816  1 001273   001276 710000 1                  TRA     s:4819

     1016     4817    2                 ELSE
     1017     4818    2                    F$DCB.SEZ_OK = %NO#;   /* Input...don't permit scratch CVOL  */

   4818  1 001274   000006 236000 2                  LDQ     6
         1 001275   000064 356100                    ANSQ    52,,PR0

     1018     4819    3                 IF NOT CVOLFT THEN DO;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:220  
   4819  1 001276   200006 234100                    SZN     CVOLFT,,AUTO
         1 001277   001320 604000 1                  TMI     s:4826

     1019     4820    3                    N = 0;

   4820  1 001300   200035 450100                    STZ     N,,AUTO

     1020     4821    3                    CALL HFF$DSIZ( 1, N ) ALTRET( NOUHL );

   4821  1 001301   200035 630500                    EPPR0   N,,AUTO
         1 001302   200113 450500                    STP0    @FIELD_LENGTH+3,,AUTO
         1 001303   000007 236000 2                  LDQ     7
         1 001304   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 001305   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001306   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001307   000000 701000 xent               TSX1    HFF$DSIZ
         1 001310   001311 702000 1                  TSX2    NOUHL

   4820  1 001311                       NOUHL        null
     1021     4822    3   NOUHL:           ;
     1022     4823    3                    IF N >=4 THEN

   4823  1 001311   200035 235100                    LDA     N,,AUTO
         1 001312   000004 115007                    CMPA    4,DL
         1 001313   001320 604000 1                  TMI     s:4826

     1023     4824    3                       B$PS$(1)->BASED_WORD = 0; /* No UHL                       */

   4824  1 001314   000001 470400 xsym               LDP0    B$PS$+1
         1 001315   000100 100400                    MLR     fill='000'O
         1 001316   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 001317   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     1024     4825    3                    END;

     1025     4826    2                 CALL FTR$CHNGVOL( F$DCB.VOL+1 ) ALTRET(CVOLALT);

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:221  
   4826  1 001320   200030 470500                    LDP0    JDCB$,,AUTO
         1 001321   000043 236100                    LDQ     35,,PR0
         1 001322   000033 772000                    QRL     27
         1 001323   000001 036007                    ADLQ    1,DL
         1 001324   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 001325   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 001326   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 001327   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 001330   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001331   000000 701000 xent               TSX1    FTR$CHNGVOL
         1 001332   001505 702000 1                  TSX2    CVOLALT

     1026     4827    3                 IF NOT CVOLFT THEN DO;

   4827  1 001333   200006 234100                    SZN     CVOLFT,,AUTO
         1 001334   001355 604000 1                  TMI     s:4834

     1027     4828    3                    N = 0;

   4828  1 001335   200035 450100                    STZ     N,,AUTO

     1028     4829    3                    CALL HFF$DSIZ( 2, N ) ALTRET( NOUTL );

   4829  1 001336   200035 630500                    EPPR0   N,,AUTO
         1 001337   200113 450500                    STP0    @FIELD_LENGTH+3,,AUTO
         1 001340   000010 236000 2                  LDQ     8
         1 001341   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 001342   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001343   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001344   000000 701000 xent               TSX1    HFF$DSIZ
         1 001345   001346 702000 1                  TSX2    NOUTL

   4828  1 001346                       NOUTL        null
     1029     4830    3   NOUTL:           ;
     1030     4831    3                    IF N >= 4 THEN

   4831  1 001346   200035 235100                    LDA     N,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:222  
         1 001347   000004 115007                    CMPA    4,DL
         1 001350   001355 604000 1                  TMI     s:4834

     1031     4832    3                       B$PS$(2)->BASED_WORD = 0; /* No UTL                       */

   4832  1 001351   000002 470400 xsym               LDP0    B$PS$+2
         1 001352   000100 100400                    MLR     fill='000'O
         1 001353   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 001354   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     1032     4833    3                    END;

     1033     4834    2                 F$DCB.MUST_CVOL = %NO#;

   4834  1 001355   200030 470500                    LDP0    JDCB$,,AUTO
         1 001356   000011 236000 2                  LDQ     9
         1 001357   000064 356100                    ANSQ    52,,PR0

     1034     4835    2                 RETURN;

   4835  1 001360   000000 702200 xent               TSX2  ! X66_ARET

     1035     4836    2                 END;
     1036     4837
     1037     4838         /***
     1038     4839          *** For labelled tape, position to end of file section before
     1039     4840          *** attempting CVOL.
     1040     4841          ***/
     1041     4842
     1042     4843    2              IF F$DCB.EOP ~= WRITEEOP# THEN DO; /* Need section end             */

   4843  1 001361   000064 236100                    LDQ     52,,PR0
         1 001362   003000 376003                    ANQ     1536,DU
         1 001363   003000 116003                    CMPQ    1536,DU
         1 001364   001373 600000 1                  TZE     s:4848

     1043     4844    2                 IF NOT F$DCB.MUST_CVOL THEN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:223  
              4844                          /* Already after last record segment of section */

   4844  1 001365   000064 236100                    LDQ     52,,PR0
         1 001366   000002 316003                    CANQ    2,DU
         1 001367   001425 601000 1                  TNZ     s:4860

     1044     4845    2                    CALL FTW_POSEOSECT ALTRET(CVOLALT);

   4845  1 001370   001535 701000 1                  TSX1    FTW_POSEOSECT
         1 001371   001505 702000 1                  TSX2    CVOLALT

     1045     4846    2                 END;

   4846  1 001372   001425 710000 1                  TRA     s:4860

     1046     4847    2              ELSE DO;            /* Trunc current buffer before changing volume */

     1047     4848    2                 CALL FTW_INIT;

   4848  1 001373   010737 701000 1                  TSX1    FTW_INIT
         1 001374   000000 011000                    NOP     0

     1048     4849    2                 F$DCB.CONT = %NO#;        /* Can't continue over M$CVOL         */

   4849  1 001375   200030 470500                    LDP0    JDCB$,,AUTO
         1 001376   000004 236000 2                  LDQ     4
         1 001377   000064 356100                    ANSQ    52,,PR0

     1049     4850    2                 CALL FTW$TRNCHLD ALTRET(CVOLALT);

   4850  1 001400   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001401   014515 701000 1                  TSX1    s:8260
         1 001402   001505 702000 1                  TSX2    CVOLALT

     1050     4851    2                 F$DCB.CRECX = F$DCB.BOL;  /* Ready to write next block          */

   4851  1 001403   200030 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:224  
         1 001404   000034 720100                    LXL0    28,,PR0
         1 001405   000777 360003                    ANX0    511,DU
         1 001406   000067 440100                    SXL0    55,,PR0

     1051     4852    2                 F$DCB.NRECX = 0;

   4852  1 001407   000000 221003                    LDX1    0,DU
         1 001410   000100 741100                    STX1    64,,PR0

     1052     4853    2                 F$DCB.BLKLEN = F$DCB.BOL;

   4853  1 001411   000074 440100                    SXL0    60,,PR0

     1053     4854    2                 TEMP = F$DCB.BFR.BUFX(F$DCB.CBUFNUM);

   4854  1 001412   000070 236100                    LDQ     56,,PR0
         1 001413   000041 772000                    QRL     33
         1 001414   000115 236106                    LDQ     77,QL,PR0
         1 001415   000033 772000                    QRL     27
         1 001416   000037 376007                    ANQ     31,DL
         1 001417   200047 756100                    STQ     TEMP,,AUTO

     1054     4855    3                 IF TEMP > 0 THEN DO;      /* Trunced a buffer                   */

   4855  1 001420   001425 604400 1                  TMOZ    s:4860

     1055     4856    3                    AFPOOL$ = FM$BUF$(TEMP);

   4856  1 001421   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 001422   200007 756100                    STQ     AFPOOL$,,AUTO

     1056     4857    3                    CALL FTW_SETBLKLEN;

   4857  1 001423   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 001424   000000 011000                    NOP     0

     1057     4858    3                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:225  

     1058     4859    2                 END;

     1059     4860    1              CALL FTL$CVOL(EOXL,ADDR(B$PS$(1)->FOUR_BASED_CHARS),1,ADDR(B$PS$(2)->
              4860                       FOUR_BASED_CHARS),2) ALTRET(CVOLALT);

   4860  1 001425   000001 236000 xsym               LDQ     B$PS$+1
         1 001426   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 001427   000002 236000 xsym               LDQ     B$PS$+2
         1 001430   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 001431   000010 236000 2                  LDQ     8
         1 001432   200120 756100                    STQ     @FIELD_LENGTH+8,,AUTO
         1 001433   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 001434   200117 450500                    STP0    @FIELD_LENGTH+7,,AUTO
         1 001435   000007 236000 2                  LDQ     7
         1 001436   200116 756100                    STQ     @FIELD_LENGTH+6,,AUTO
         1 001437   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 001440   200115 451500                    STP1    @FIELD_LENGTH+5,,AUTO
         1 001441   200022 633500                    EPPR3   EOXL,,AUTO
         1 001442   200114 453500                    STP3    @FIELD_LENGTH+4,,AUTO
         1 001443   200114 630500                    EPPR0   @FIELD_LENGTH+4,,AUTO
         1 001444   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001445   000000 701000 xent               TSX1    FTL$CVOL
         1 001446   001505 702000 1                  TSX2    CVOLALT

     1060     4861    1              IF F$DCB.ACS = %JRNL# THEN

   4861  1 001447   200030 470500                    LDP0    JDCB$,,AUTO
         1 001450   000036 236100                    LDQ     30,,PR0
         1 001451   000777 376007                    ANQ     511,DL
         1 001452   000004 116007                    CMPQ    4,DL
         1 001453   001457 601000 1                  TNZ     s:4863

     1061     4862    1                 F$DCB.CFU$->FM$CFUJ.ERR_WAIT = %NO#; /* CVOL done               */

   4862  1 001454   000066 471500                    LDP1    54,,PR0
         1 001455   000012 236000 2                  LDQ     10
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:226  
         1 001456   100005 356100                    ANSQ    5,,PR1

     1062     4863    1              IF F$DCB.SPAN THEN

   4863  1 001457   000064 236100                    LDQ     52,,PR0
         1 001460   100000 316007                    CANQ    32768,DL
         1 001461   001465 600000 1                  TZE     s:4866

     1063     4864    1                 F$DCB.RPOS = %NO#;        /* Positioned to next segment         */

   4864  1 001462   000013 236000 2                  LDQ     11
         1 001463   000064 356100                    ANSQ    52,,PR0
         1 001464   001467 710000 1                  TRA     s:4867

     1064     4865    1              ELSE
     1065     4866    1                 F$DCB.RPOS = %YES#;       /* Positioned to next record          */

   4866  1 001465   010000 236007                    LDQ     4096,DL
         1 001466   000064 256100                    ORSQ    52,,PR0

     1066     4867    2              IF F$DCB.ENQF THEN DO;       /* Dequeue                            */

   4867  1 001467   000064 236100                    LDQ     52,,PR0
         1 001470   000200 316007                    CANQ    128,DL
         1 001471   001504 600000 1                  TZE     s:4871

     1067     4868    2                 CALL UQB$MDEQ(F$DCB.CFU$);

   4868  1 001472   200030 236100                    LDQ     JDCB$,,AUTO
         1 001473   000066 036003                    ADLQ    54,DU
         1 001474   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 001475   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001476   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001477   000000 701000 xent               TSX1    UQB$MDEQ
         1 001500   000000 011000                    NOP     0

     1068     4869    2                 F$DCB.ENQF = %NO#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:227  

   4869  1 001501   200030 470500                    LDP0    JDCB$,,AUTO
         1 001502   000014 236000 2                  LDQ     12
         1 001503   000064 356100                    ANSQ    52,,PR0

     1069     4870    2                 END;

     1070     4871    1              RETURN;

   4871  1 001504   000000 702200 xent               TSX2  ! X66_ARET

   4867  1 001505                       CVOLALT      null
     1071     4872
     1072     4873    1   CVOLALT:   ;
     1073     4874    1              IF F$DCB.ACS = %JRNL#

   4874  1 001505   200030 470500                    LDP0    JDCB$,,AUTO
         1 001506   000036 236100                    LDQ     30,,PR0
         1 001507   000777 376007                    ANQ     511,DL
         1 001510   000004 116007                    CMPQ    4,DL
         1 001511   001515 601000 1                  TNZ     s:4878

     1074     4875    2              THEN DO;

     1075     4876    2                 CALL FTR$UNJRNLDCB;

   4876  1 001512   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001513   000000 701000 xent               TSX1    FTR$UNJRNLDCB
         1 001514   000000 011000                    NOP     0

     1076     4877    2                 END;

     1077     4878    1              IF F$DCB.ENQF

   4878  1 001515   200030 470500                    LDP0    JDCB$,,AUTO
         1 001516   000064 236100                    LDQ     52,,PR0
         1 001517   000200 316007                    CANQ    128,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:228  
         1 001520   001533 600000 1                  TZE     s:4883

     1078     4879    2              THEN DO;                     /* Dequeue                            */

     1079     4880    2                 CALL UQB$MDEQ(F$DCB.CFU$);

   4880  1 001521   200030 236100                    LDQ     JDCB$,,AUTO
         1 001522   000066 036003                    ADLQ    54,DU
         1 001523   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 001524   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001525   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001526   000000 701000 xent               TSX1    UQB$MDEQ
         1 001527   000000 011000                    NOP     0

     1080     4881    2                 F$DCB.ENQF = %NO#;

   4881  1 001530   200030 470500                    LDP0    JDCB$,,AUTO
         1 001531   000014 236000 2                  LDQ     12
         1 001532   000064 356100                    ANSQ    52,,PR0

     1081     4882    2                 END;

     1082     4883    1              ALTRETURN;

   4883  1 001533   000000 702200 xent               TSX2  ! X66_AALT

   4878  1 001534                       ENDENQUEUE   null
     1083     4884
     1084     4885    1   ENDENQUEUE: ;                           /* Broke out of enqueue               */
     1085     4886    1              ALTRETURN;

   4886  1 001534   000000 702200 xent               TSX2  ! X66_AALT

     1086     4887
     1087     4888        /*********************************************************************/
     1088     4889        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:229  
     1089     4890        /*********************************************************************/
     1090     4891    1   FTW_POSEOSECT: PROC ALTRET;

   4891  1 001535   200060 741300       FTW_POSEOSE* STX1  ! BOF+2,,AUTO

     1091     4892        /*F*     NAME: FTW_POSEOSECT
     1092     4893                 PURPOSE: Position to end of current file section.
     1093     4894         ***/
     1094     4895
     1095     4896        /********************/
     1096     4897
     1097     4898         /***
     1098     4899          *** Make sure that end of section will be detected.
     1099     4900          ***/
     1100     4901
     1101     4902    2              DCVOL = F$DCB.CVOL;

   4902  1 001536   200030 470500                    LDP0    JDCB$,,AUTO
         1 001537   000031 236100                    LDQ     25,,PR0
         1 001540   000037 736000                    QLS     31
         1 001541   400000 376003                    ANQ     -131072,DU
         1 001542   200015 756100                    STQ     DCVOL,,AUTO

     1102     4903    2              F$DCB.CVOL = %YES#; /* Force end of section condition to be detected */

   4903  1 001543   000020 236007                    LDQ     16,DL
         1 001544   000031 256100                    ORSQ    25,,PR0

     1103     4904
     1104     4905         /***
     1105     4906          *** Position to end of section.
     1106     4907          ***/
     1107     4908
     1108     4909    2              IF F$DCB.TAPTYP.USRBUF

   4909  1 001545   000067 236100                    LDQ     55,,PR0
         1 001546   000100 316003                    CANQ    64,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:230  
         1 001547   001611 600000 1                  TZE     s:4932

     1109     4910    3              THEN DO;                   /* Space records to end of file section */

     1110     4911    3                 IF NOT F$DCB.LSTBLK

   4911  1 001550   000064 236100                    LDQ     52,,PR0
         1 001551   000001 316007                    CANQ    1,DL
         1 001552   001605 601000 1                  TNZ     s:4928

     1111     4912    4                 THEN DO;                /* Not already positioned to last block */

     1112     4913    4                    IF F$DCB.ORG = %UNDEF#

   4913  1 001553   000032 236100                    LDQ     26,,PR0
         1 001554   777000 376003                    ANQ     -512,DU
         1 001555   021000 116003                    CMPQ    8704,DU
         1 001556   001602 601000 1                  TNZ     s:4923

     1113     4914    5                    THEN DO;               /* Space physical blocks              */

     1114     4915    5                       F$DCB.ARS = 65500;

   4915  1 001557   177734 235007                    LDA     65500,DL
         1 001560   000000 755100                    STA     0,,PR0

     1115     4916    5                       CALL FTI$SPREC ALTRET(ENDCVOL);

   4916  1 001561   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001562   000000 701000 xent               TSX1    FTI$SPREC
         1 001563   001627 702000 1                  TSX2    ENDCVOL

     1116     4917    5                       F$DCB.PRECNO = F$DCB.PRECNO + F$DCB.ARS;
              4917                                /* Remember where we are */

   4917  1 001564   200030 470500                    LDP0    JDCB$,,AUTO
         1 001565   000072 236100                    LDQ     58,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:231  
         1 001566   000000 036100                    ADLQ    0,,PR0
         1 001567   000072 756100                    STQ     58,,PR0

     1117     4918    5                       F$DCB.CRECNO = F$DCB.CRECNO + F$DCB.ARS;

   4918  1 001570   000071 236100                    LDQ     57,,PR0
         1 001571   000000 036100                    ADLQ    0,,PR0
         1 001572   000071 756100                    STQ     57,,PR0

     1118     4919    5                       CALL FTL$EOF(EOXL) ALTRET(ENDCVOL);

   4919  1 001573   200022 631500                    EPPR1   EOXL,,AUTO
         1 001574   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 001575   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 001576   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001577   000000 701000 xent               TSX1    FTL$EOF
         1 001600   001627 702000 1                  TSX2    ENDCVOL

     1119     4920    5                       END;

   4920  1 001601   001627 710000 1                  TRA     ENDCVOL

     1120     4921    5                    ELSE DO;            /* Must retain RANDOM, IDS, RESTRICT key */

     1121     4922    6                       DO WHILE('1'B);

     1122     4923    6                          CALL FTW_PNUR ALTRET(ENDCVOL);

   4923  1 001602   014254 701000 1                  TSX1    FTW_PNUR
         1 001603   001627 702000 1                  TSX2    ENDCVOL

     1123     4924    6                          END;

   4924  1 001604   001602 710000 1                  TRA     s:4923

     1124     4925    5                       END;
     1125     4926    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:232  
     1126     4927    4                 ELSE DO;

     1127     4928    4                    B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */

   4928  1 001605   000025 236000 0                  LDQ     E_EOF
         1 001606   000000 471400 xsym               LDP1    B$JIT$
         1 001607   100012 756100                    STQ     10,,PR1

     1128     4929    4                    END;

     1129     4930    3                 END;

   4930  1 001610   001627 710000 1                  TRA     ENDCVOL

     1130     4931    3              ELSE DO;

     1131     4932    3                 CALL FTW_INIT;

   4932  1 001611   010737 701000 1                  TSX1    FTW_INIT
         1 001612   000000 011000                    NOP     0

     1132     4933    3                 CALL FTW_PNRS(2) ALTRET(ENDCVOL);

   4933  1 001613   000010 236000 2                  LDQ     8
         1 001614   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 001615   013423 701000 1                  TSX1    FTW_PNRS
         1 001616   001627 702000 1                  TSX2    ENDCVOL

     1133     4934    4                 DO WHILE(%YES#);          /* To section end                     */

     1134     4935    4                    CALL FTW_PNRS(1) ALTRET(ENDCVOL);

   4935  1 001617   000007 236000 2                  LDQ     7
         1 001620   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 001621   013423 701000 1                  TSX1    FTW_PNRS
         1 001622   001627 702000 1                  TSX2    ENDCVOL

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:233  
     1135     4936    4                    F$DCB.RPOS = %NO#;     /* As if record was read              */

   4936  1 001623   200030 470500                    LDP0    JDCB$,,AUTO
         1 001624   000013 236000 2                  LDQ     11
         1 001625   000064 356100                    ANSQ    52,,PR0

     1136     4937    4                    END;

   4937  1 001626   001617 710000 1                  TRA     s:4935

     1137     4938    3                 END;
     1138     4939
     1139     4940         /***
     1140     4941          *** Expected errors are end of volume and end of volume in span.
     1141     4942          ***/
     1142     4943
     1143     4944    2   ENDCVOL:   ;

   4944  1 001627                       ENDCVOL      null
     1144     4945    2              F$DCB.CVOL = DCVOL;          /* Restore user specified CVOL        */

   4945  1 001627   200030 470500                    LDP0    JDCB$,,AUTO
         1 001630   200015 236100                    LDQ     DCVOL,,AUTO
         1 001631   000037 772000                    QRL     31
         1 001632   000031 676100                    ERQ     25,,PR0
         1 001633   000020 376007                    ANQ     16,DL
         1 001634   000031 656100                    ERSQ    25,,PR0

     1145     4946    2              F$DCB.EOP = PRECORDEOP#;     /* Effectively precorded              */

   4946  1 001635   000064 236100                    LDQ     52,,PR0
         1 001636   000003 376000 2                  ANQ     3
         1 001637   002000 276003                    ORQ     1024,DU
         1 001640   000064 756100                    STQ     52,,PR0

     1146     4947    2              IF B$JIT.ERR.CODE = %E$EOVOL OR B$JIT.ERR.CODE = %E$EOVOLS

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:234  
   4947  1 001641   000000 471400 xsym               LDP1    B$JIT$
         1 001642   100012 236100                    LDQ     10,,PR1
         1 001643   377770 376007                    ANQ     131064,DL
         1 001644   013130 116007                    CMPQ    5720,DL
         1 001645   001650 600000 1                  TZE     s:4949
         1 001646   013150 116007                    CMPQ    5736,DL
         1 001647   001653 601000 1                  TNZ     s:4952

     1147     4948    3              THEN DO;                     /* At section end                     */

     1148     4949    3                 B$JIT.ERR = '0'B;

   4949  1 001650   100012 450100                    STZ     10,,PR1

     1149     4950    3                 RETURN;

   4950  1 001651   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 001652   000001 702211                    TSX2  ! 1,X1

     1150     4951    3                 END;
     1151     4952    2              IF B$JIT.ERR.CODE = %E$EOF THEN F$DCB.LSTBLK = %YES#;

   4952  1 001653   000060 116007                    CMPQ    48,DL
         1 001654   001657 601000 1                  TNZ     s:4953

   4952  1 001655   000001 236007                    LDQ     1,DL
         1 001656   000064 256100                    ORSQ    52,,PR0

     1152     4953    2              ALTRETURN;

   4953  1 001657   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 001660   000000 702211                    TSX2  ! 0,X1

     1153     4954
     1154     4955    2      END FTW_POSEOSECT;
     1155     4956        /*********************************************************************/
     1156     4957        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:235  
     1157     4958        /*********************************************************************/
     1158     4959    1   FTW_REW:   PROC ALTRET;

   4959  1 001661   200060 741300       FTW_REW      STX1  ! BOF+2,,AUTO

     1159     4960        /*F*     NAME: FTW_REW
     1160     4961                 PURPOSE: Rewind.
     1161     4962         ***/
     1162     4963
     1163     4964        /********************/
     1164     4965
     1165     4966         /***
     1166     4967          *** If device tape, rewind.  If managed, position to bof.
     1167     4968          ***/
     1168     4969
     1169     4970    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow rewinds on OD file    */

   4970  1 001662   200030 470500                    LDP0    JDCB$,,AUTO
         1 001663   000103 236100                    LDQ     67,,PR0
         1 001664   000777 376007                    ANQ     511,DL
         1 001665   000012 116007                    CMPQ    10,DL
         1 001666   001674 601000 1                  TNZ     s:4974

     1170     4971    3                 B$JIT.ERR = E_NOTIMPLEMENTED;

   4971  1 001667   000043 236000 0                  LDQ     E_NOTIMPLEMENTED
         1 001670   000000 471400 xsym               LDP1    B$JIT$
         1 001671   100012 756100                    STQ     10,,PR1

     1171     4972    3                 ALTRETURN;

   4972  1 001672   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 001673   000000 702211                    TSX2  ! 0,X1

     1172     4973    3                 END;
     1173     4974    2              IF F$DCB.ASN = %DEVICE# AND NOT F$DCB.TAPTYP.MANAGED

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:236  
   4974  1 001674   000032 236100                    LDQ     26,,PR0
         1 001675   777000 376007                    ANQ     -512,DL
         1 001676   003000 116007                    CMPQ    1536,DL
         1 001677   001735 601000 1                  TNZ     s:4988
         1 001700   000067 236100                    LDQ     55,,PR0
         1 001701   000010 316003                    CANQ    8,DU
         1 001702   001735 601000 1                  TNZ     s:4988

     1174     4975    3              THEN DO;                     /* Rewind for device tape             */

     1175     4976    3                 IF F$DCB.NOEOF

   4976  1 001703   000064 236100                    LDQ     52,,PR0
         1 001704   400000 316007                    CANQ    -131072,DL
         1 001705   001724 600000 1                  TZE     s:4983

     1176     4977    4                 THEN DO;                  /* Need 2 file marks to end tape      */

     1177     4978    4                    IF NOT F$DCB.TAPTYP.PASTFM THEN CALL FTI$WRFM ALTRET(JUSTALT);

   4978  1 001706   000067 236100                    LDQ     55,,PR0
         1 001707   000004 316003                    CANQ    4,DU
         1 001710   001714 601000 1                  TNZ     s:4979

   4978  1 001711   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001712   000000 701000 xent               TSX1    FTI$WRFM
         1 001713   001751 702000 1                  TSX2    JUSTALT

     1178     4979    4                    CALL FTI$WRFM ALTRET(JUSTALT);

   4979  1 001714   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001715   000000 701000 xent               TSX1    FTI$WRFM
         1 001716   001751 702000 1                  TSX2    JUSTALT

     1179     4980    4                    F$DCB.NOEOF = %NO#;

   4980  1 001717   200030 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:237  
         1 001720   000015 236000 2                  LDQ     13
         1 001721   000064 356100                    ANSQ    52,,PR0

     1180     4981    4                    F$DCB.TAPTYP.PASTFM = %NO#; /* WEOF wasn't last operation    */

   4981  1 001722   000006 236000 2                  LDQ     6
         1 001723   000067 356100                    ANSQ    55,,PR0

     1181     4982    4                    END;

     1182     4983    3                 CALL FTI$REWIND ALTRET(JUSTALT); /* Resets DDT.FMCNT            */

   4983  1 001724   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001725   000000 701000 xent               TSX1    FTI$REWIND
         1 001726   001751 702000 1                  TSX2    JUSTALT

     1183     4984    3                 F$DCB.TYC.BOT(1) = %NO#;  /* No BOT error                       */

   4984  1 001727   200030 470500                    LDP0    JDCB$,,AUTO
         1 001730   000016 236000 2                  LDQ     14
         1 001731   000002 356100                    ANSQ    2,,PR0

     1184     4985    3                 F$DCB.MUST_CVOL = %NO#;

   4985  1 001732   000011 236000 2                  LDQ     9
         1 001733   000064 356100                    ANSQ    52,,PR0

     1185     4986    3                 END;

   4986  1 001734   001747 710000 1                  TRA     s:4993

     1186     4987    3              ELSE DO;                     /* Just PFIL BOF for managed tapes    */

     1187     4988    3                 CALL FTW_INIT;

   4988  1 001735   010737 701000 1                  TSX1    FTW_INIT
         1 001736   000000 011000                    NOP     0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:238  

     1188     4989    3                 IF NOT F$DCB.TAPTYP.USRBUF

   4989  1 001737   200030 470500                    LDP0    JDCB$,,AUTO
         1 001740   000067 236100                    LDQ     55,,PR0
         1 001741   000100 316003                    CANQ    64,DU
         1 001742   001745 601000 1                  TNZ     s:4991

     1189     4990    3                THEN CALL FTW_PNRSNE ALTRET(JUSTALT); /* Get current record segment */

   4990  1 001743   011024 701000 1                  TSX1    FTW_PNRSNE
         1 001744   001751 702000 1                  TSX2    JUSTALT

     1190     4991    3                 CALL FTW_BOF ALTRET(JUSTALT);

   4991  1 001745   012753 701000 1                  TSX1    FTW_BOF
         1 001746   001751 702000 1                  TSX2    JUSTALT

     1191     4992    3                 END;

     1192     4993    2              RETURN;

   4993  1 001747   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 001750   000001 702211                    TSX2  ! 1,X1

   4990  1 001751                       JUSTALT      null
     1193     4994
     1194     4995    2   JUSTALT:   ;
     1195     4996    2              ALTRETURN;

   4996  1 001751   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 001752   000000 702211                    TSX2  ! 0,X1

     1196     4997
     1197     4998    2      END FTW_REW;
     1198     4999        /*********************************************************************/
     1199     5000        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:239  
     1200     5001        /*********************************************************************/
     1201     5002    1   FTW_WEOF:  PROC ALTRET;

   5002  1 001753   200060 741300       FTW_WEOF     STX1  ! BOF+2,,AUTO

     1202     5003        /*F*     NAME: FTW_WEOF
     1203     5004                 PURPOSE: Write end of file.
     1204     5005         ***/
     1205     5006
     1206     5007        /********************/
     1207     5008
     1208     5009    3              IF F$DCB.IASN = %OD# THEN DO; /* Don't allow WEOF on OD file       */

   5009  1 001754   200030 470500                    LDP0    JDCB$,,AUTO
         1 001755   000103 236100                    LDQ     67,,PR0
         1 001756   000777 376007                    ANQ     511,DL
         1 001757   000012 116007                    CMPQ    10,DL
         1 001760   001766 601000 1                  TNZ     s:5017

     1209     5010    3                 B$JIT.ERR = E_NOTIMPLEMENTED;

   5010  1 001761   000043 236000 0                  LDQ     E_NOTIMPLEMENTED
         1 001762   000000 471400 xsym               LDP1    B$JIT$
         1 001763   100012 756100                    STQ     10,,PR1

     1210     5011    3                 ALTRETURN;

   5011  1 001764   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 001765   000000 702211                    TSX2  ! 0,X1

     1211     5012    3                 END;
     1212     5013         /***
     1213     5014          *** If we must CVOL, do it now.
     1214     5015          ***/
     1215     5016
     1216     5017    2              IF F$DCB.MUST_CVOL

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:240  
   5017  1 001766   000064 236100                    LDQ     52,,PR0
         1 001767   000002 316003                    CANQ    2,DU
         1 001770   001774 600000 1                  TZE     s:5024

     1217     5018    2              THEN CALL FTW$CVOL ALTRET(JUSTALT);

   5018  1 001771   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001772   001064 701000 1                  TSX1    s:4730
         1 001773   002151 702000 1                  TSX2    JUSTALT

     1218     5019
     1219     5020         /***
     1220     5021          *** Write file mark for device tapes.  Ignore for managed.
     1221     5022          ***/
     1222     5023
     1223     5024    2              IF F$DCB.ASN = %DEVICE#

   5024  1 001774   200030 470500                    LDP0    JDCB$,,AUTO
         1 001775   000032 236100                    LDQ     26,,PR0
         1 001776   777000 376007                    ANQ     -512,DL
         1 001777   003000 116007                    CMPQ    1536,DL
         1 002000   002054 601000 1                  TNZ     s:5049

     1224     5025    3              THEN DO;

     1225     5026    3                 IF F$DCB.TAPTYP.MANAGED

   5026  1 002001   000067 236100                    LDQ     55,,PR0
         1 002002   000010 316003                    CANQ    8,DU
         1 002003   002020 600000 1                  TZE     s:5035

     1226     5027    4                 THEN DO;                  /* Managed...must trunc any buffers   */

     1227     5028    4                    CALL FTW_END_MANAGED_FREE_SECT ALTRET(JUSTALT);

   5028  1 002004   012026 701000 1                  TSX1    FTW_END_MANAGED_FREE_SECT
         1 002005   002151 702000 1                  TSX2    JUSTALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:241  

     1228     5029    4                    F$DCB.NOEOF = %YES#;   /* As if create open                  */

   5029  1 002006   200030 470500                    LDP0    JDCB$,,AUTO
         1 002007   400000 236007                    LDQ     -131072,DL
         1 002010   000064 256100                    ORSQ    52,,PR0

     1229     5030    4                    F$DCB.FMOD = %YES#;

   5030  1 002011   040000 236003                    LDQ     16384,DU
         1 002012   000064 256100                    ORSQ    52,,PR0

     1230     5031    4                    F$DCB.LSTBLK = %YES#;

   5031  1 002013   000001 236007                    LDQ     1,DL
         1 002014   000064 256100                    ORSQ    52,,PR0

     1231     5032    4                    F$DCB.EOP = WRITEEOP#;

   5032  1 002015   003000 236003                    LDQ     1536,DU
         1 002016   000064 256100                    ORSQ    52,,PR0

     1232     5033    4                    END;

   5033  1 002017   002147 710000 1                  TRA     s:5075

     1233     5034    4                 ELSE DO;

     1234     5035    4                    CALL FTI$WRFM ALTRET(JUSTALT); /* Increments DDT.FMCNT       */

   5035  1 002020   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002021   000000 701000 xent               TSX1    FTI$WRFM
         1 002022   002151 702000 1                  TSX2    JUSTALT

     1235     5036    4                    FT$DDT.POS = FTP_CHK#; /* Remember after file mark           */

   5036  1 002023   200016 470500                    LDP0    DDDT$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:242  
         1 002024   000006 236100                    LDQ     6,,PR0
         1 002025   000002 376000 2                  ANQ     2
         1 002026   000120 276007                    ORQ     80,DL
         1 002027   000006 756100                    STQ     6,,PR0

     1236     5037    4                    F$DCB.NOEOF = %YES#;

   5037  1 002030   200030 471500                    LDP1    JDCB$,,AUTO
         1 002031   400000 236007                    LDQ     -131072,DL
         1 002032   100064 256100                    ORSQ    52,,PR1

     1237     5038    4                    F$DCB.TAPTYP.PASTFM = %YES#; /* File mark written last       */

   5038  1 002033   000004 236003                    LDQ     4,DU
         1 002034   100067 256100                    ORSQ    55,,PR1

     1238     5039    4                    IF F$DCB.TYC.EOT(1)

   5039  1 002035   100002 236100                    LDQ     2,,PR1
         1 002036   100000 316003                    CANQ    32768,DU
         1 002037   002147 600000 1                  TZE     s:5075

     1239     5040    4                    THEN IF F$DCB.CVOL

   5040  1 002040   100031 236100                    LDQ     25,,PR1
         1 002041   000020 316007                    CANQ    16,DL
         1 002042   002047 600000 1                  TZE     s:5043

     1240     5041    4                       THEN B$JIT.ERR = E_EOT; /*E* FTW-E$EOT */ /* User handling */

   5041  1 002043   000026 236000 0                  LDQ     E_EOT
         1 002044   000000 473400 xsym               LDP3    B$JIT$
         1 002045   300012 756100                    STQ     10,,PR3
         1 002046   002147 710000 1                  TRA     s:5075

     1241     5042    5                       ELSE DO;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:243  
     1242     5043    5                          F$DCB.MUST_CVOL = %YES#;

   5043  1 002047   000002 236003                    LDQ     2,DU
         1 002050   100064 256100                    ORSQ    52,,PR1

     1243     5044    5                          F$DCB.TYC.EOT(1) = %NO#;

   5044  1 002051   000017 236000 2                  LDQ     15
         1 002052   100002 356100                    ANSQ    2,,PR1

     1244     5045    5                          END;

     1245     5046    4                    END;

     1246     5047    3                 END;

   5047  1 002053   002147 710000 1                  TRA     s:5075

     1247     5048    3              ELSE DO;                     /* Not device                         */

     1248     5049    3                 CALL FTW_INIT;

   5049  1 002054   010737 701000 1                  TSX1    FTW_INIT
         1 002055   000000 011000                    NOP     0

     1249     5050    3                 F$DCB.CONT = %NO#;

   5050  1 002056   200030 470500                    LDP0    JDCB$,,AUTO
         1 002057   000004 236000 2                  LDQ     4
         1 002060   000064 356100                    ANSQ    52,,PR0

     1250     5051    3                 IF NOT F$DCB.TAPTYP.USRBUF

   5051  1 002061   000067 236100                    LDQ     55,,PR0
         1 002062   000100 316003                    CANQ    64,DU
         1 002063   002147 601000 1                  TNZ     s:5075

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:244  
     1251     5052    4                 THEN DO;

     1252     5053    4                    IF F$DCB.TRNC ~= FT_NOTRUNC#

   5053  1 002064   000064 236100                    LDQ     52,,PR0
         1 002065   000014 316007                    CANQ    12,DL
         1 002066   002072 600000 1                  TZE     s:5055

     1253     5054    4                    THEN CALL FTW_UNDOTRUNC ALTRET(JUSTALT);

   5054  1 002067   012043 701000 1                  TSX1    FTW_UNDOTRUNC
         1 002070   002151 702000 1                  TSX2    JUSTALT
         1 002071   002101 710000 1                  TRA     s:5056

     1254     5055    4                    ELSE AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));

   5055  1 002072   000070 236100                    LDQ     56,,PR0
         1 002073   000041 772000                    QRL     33
         1 002074   000115 236106                    LDQ     77,QL,PR0
         1 002075   000033 772000                    QRL     27
         1 002076   000037 376007                    ANQ     31,DL
         1 002077   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 002100   200007 756100                    STQ     AFPOOL$,,AUTO

     1255     5056    4                    IF NOT F$DCB.RPOS

   5056  1 002101   200030 470500                    LDP0    JDCB$,,AUTO
         1 002102   000064 236100                    LDQ     52,,PR0
         1 002103   010000 316007                    CANQ    4096,DL
         1 002104   002127 601000 1                  TNZ     s:5067

     1256     5057    5                    THEN DO;               /* Position to beginning of record    */

     1257     5058    5                       F$DCB.TAPTYP.NOCVOL = %YES#;

   5058  1 002105   000020 236003                    LDQ     16,DU
         1 002106   000067 256100                    ORSQ    55,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:245  

     1258     5059    5                       CALL FTW_PNRS(1) ALTRET(CHKEOF);

   5059  1 002107   000007 236000 2                  LDQ     7
         1 002110   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 002111   013423 701000 1                  TSX1    FTW_PNRS
         1 002112   002114 702000 1                  TSX2    CHKEOF

     1259     5060    6                       DO ALTRET_HANDLING;

   5060  1 002113   002127 710000 1                  TRA     s:5067

   5059  1 002114                       CHKEOF       null
     1260     5061    6   CHKEOF:                ;
     1261     5062    6                          IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
              5062                                   /* Serious error */

   5062  1 002114   000000 470400 xsym               LDP0    B$JIT$
         1 002115   000012 236100                    LDQ     10,,PR0
         1 002116   377770 376007                    ANQ     131064,DL
         1 002117   000060 116007                    CMPQ    48,DL
         1 002120   002123 600000 1                  TZE     s:5063

   5062  1 002121   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 002122   000000 702211                    TSX2  ! 0,X1

     1262     5063    6                          CALL FTW_RESTORE_POS ALTRET(JUSTALT);

   5063  1 002123   000310 701000 1                  TSX1    FTW_RESTORE_POS
         1 002124   002151 702000 1                  TSX2    JUSTALT

     1263     5064    6                          B$JIT.ERR = '0'B;

   5064  1 002125   000000 470400 xsym               LDP0    B$JIT$
         1 002126   000012 450100                    STZ     10,,PR0

     1264     5065    6                          END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:246  

     1265     5066    5                       END;

     1266     5067    4                    F$DCB.BLKLEN = F$DCB.CRECX;

   5067  1 002127   200030 470500                    LDP0    JDCB$,,AUTO
         1 002130   000067 720100                    LXL0    55,,PR0
         1 002131   000074 440100                    SXL0    60,,PR0

     1267     5068    4                    F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#;

   5068  1 002132   000070 236100                    LDQ     56,,PR0
         1 002133   000041 772000                    QRL     33
         1 002134   000000 621006                    EAX1    0,QL
         1 002135   400000 236003                    LDQ     -131072,DU
         1 002136   000115 256111                    ORSQ    77,X1,PR0

     1268     5069    4                    F$DCB.FMOD = %YES#;

   5069  1 002137   040000 236003                    LDQ     16384,DU
         1 002140   000064 256100                    ORSQ    52,,PR0

     1269     5070    4                    F$DCB.NOEOF = %YES#;

   5070  1 002141   400000 236007                    LDQ     -131072,DL
         1 002142   000064 256100                    ORSQ    52,,PR0

     1270     5071    4                    F$DCB.LSTBLK = %YES#;

   5071  1 002143   000001 236007                    LDQ     1,DL
         1 002144   000064 256100                    ORSQ    52,,PR0

     1271     5072    4                    F$DCB.EOP = WRITEEOP#;

   5072  1 002145   003000 236003                    LDQ     1536,DU
         1 002146   000064 256100                    ORSQ    52,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:247  
     1272     5073    4                    END;

     1273     5074    3                 END;

     1274     5075    2              RETURN;

   5075  1 002147   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 002150   000001 702211                    TSX2  ! 1,X1

   5068  1 002151                       JUSTALT      null
     1275     5076
     1276     5077    2   JUSTALT:   ;
     1277     5078    2              ALTRETURN;

   5078  1 002151   200060 221300                    LDX1  ! BOF+2,,AUTO
         1 002152   000000 702211                    TSX2  ! 0,X1

     1278     5079
     1279     5080    2      END FTW_WEOF;
     1280     5081        /*********************************************************************/
     1281     5082        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:248  
     1282     5083        /*********************************************************************/
     1283     5084    1   FTT$TRUNC: ENTRY ALTRET;

   5084  1 002153   000000 700200 xent  FTT$TRUNC    TSX0  ! X66_AUTO_3
         1 002154   000122 000003                    ZERO    82,3

     1284     5085        /*F*    NAME: FTW$TRUNC
     1285     5086                PURPOSE: Perform M$TRUNC for tape files.
     1286     5087         ***/
     1287     5088
     1288     5089        /********************/
     1289     5090
     1290     5091    1              JDCB$ = B$JIT.DCB$;

   5091  1 002155   000000 470400 xsym               LDP0    B$JIT$
         1 002156   000232 236100                    LDQ     154,,PR0
         1 002157   200030 756100                    STQ     JDCB$,,AUTO

     1291     5092
     1292     5093    1              IF F$DCB.BFR.BUFX(FT_RBUF1) > 0

   5093  1 002160   200030 471500                    LDP1    JDCB$,,AUTO
         1 002161   100120 236100                    LDQ     80,,PR1
         1 002162   037000 316003                    CANQ    15872,DU
         1 002163   002212 600000 1                  TZE     s:5104

     1293     5094    2              THEN DO;                     /* Buffer exists to be trunced        */

     1294     5095    2                 CALL FTW$TRNCHLD ALTRET(RELBUF); /* Trunc but hold buffer       */

   5095  1 002164   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002165   014515 701000 1                  TSX1    s:8260
         1 002166   002167 702000 1                  TSX2    RELBUF

   5095  1 002167                       RELBUF       null
     1295     5096    2   RELBUF:       ;
     1296     5097    2                 CALL FMD$RELBUF(FT_RBUF1);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:249  

   5097  1 002167   000020 630400 2                  EPPR0   16
         1 002170   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002171   000000 701000 xent               TSX1    FMD$RELBUF
         1 002172   000000 011000                    NOP     0

     1297     5098    2                 IF F$DCB.NEW_FSECT

   5098  1 002173   200030 470500                    LDP0    JDCB$,,AUTO
         1 002174   000064 236100                    LDQ     52,,PR0
         1 002175   000001 316003                    CANQ    1,DU
         1 002176   002203 600000 1                  TZE     s:5100

     1298     5099    2                 THEN F$DCB.TRNC = FT_EBTRUNC#; /* Empty buffer trunc            */

   5099  1 002177   000021 376000 2                  ANQ     17
         1 002200   000004 276007                    ORQ     4,DL
         1 002201   000064 756100                    STQ     52,,PR0
         1 002202   002206 710000 1                  TRA     s:5101

     1299     5100    2                 ELSE F$DCB.TRNC = FT_FBTRUNC#; /* Full buffer trunc             */

   5100  1 002203   000021 376000 2                  ANQ     17
         1 002204   000010 276007                    ORQ     8,DL
         1 002205   000064 756100                    STQ     52,,PR0

     1300     5101    2                 F$DCB.CBUFNUM = 0;        /* Indicate no buffer                 */

   5101  1 002206   000022 236000 2                  LDQ     18
         1 002207   000070 356100                    ANSQ    56,,PR0

     1301     5102    2                 F$DCB.BFR.BUFX(FT_RBUF1) = 0;

   5102  1 002210   000023 236000 2                  LDQ     19
         1 002211   000120 356100                    ANSQ    80,,PR0

     1302     5103    2                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:250  

     1303     5104    1              IF F$DCB.LPOOL > 0

   5104  1 002212   200030 470500                    LDP0    JDCB$,,AUTO
         1 002213   000067 236100                    LDQ     55,,PR0
         1 002214   070000 316003                    CANQ    28672,DU
         1 002215   002231 600000 1                  TZE     s:5106

     1304     5105    1              THEN CALL FMD$RELBUF( F$DCB.LPOOL - 1 ); /* Get rid of label FPOOL */

   5105  1 002216   000067 236100                    LDQ     55,,PR0
         1 002217   000036 772000                    QRL     30
         1 002220   000007 376007                    ANQ     7,DL
         1 002221   000001 136007                    SBLQ    1,DL
         1 002222   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 002223   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 002224   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 002225   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 002226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002227   000000 701000 xent               TSX1    FMD$RELBUF
         1 002230   000000 011000                    NOP     0

     1305     5106    1              F$DCB.LPOOL = 0;             /* Label FPOOL gone                   */

   5106  1 002231   200030 470500                    LDP0    JDCB$,,AUTO
         1 002232   000001 236000 2                  LDQ     1
         1 002233   000067 356100                    ANSQ    55,,PR0

     1306     5107    1              RETURN;

   5107  1 002234   000000 702200 xent               TSX2  ! X66_ARET

     1307     5108
     1308     5109        /*********************************************************************/
     1309     5110        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:251  
     1310     5111        /*********************************************************************/
     1311     5112    1   FTW_RDEV:  PROC ALTRET;

   5112  1 002235   200062 741300       FTW_RDEV     STX1  ! KEYS+1,,AUTO

     1312     5113        /*F*     NAME: FTW_RDEV
     1313     5114                 PURPOSE: Read free format tape.
     1314     5115         ***/
     1315     5116
     1316     5117         /***
     1317     5118          *** Locals:
     1318     5119          ***/
     1319     5120
     1320     5121    2     DCL EOFCNT SBIN AUTO;                 /* Counts file marks                  */
     1321     5122
     1322     5123        /********************/
     1323     5124
     1324     5125    2              EOFCNT = 0;                  /* No file marks seen                 */

   5125  1 002236   200063 450100                    STZ     EOFCNT,,AUTO

     1325     5126
     1326     5127         /***
     1327     5128          *** If last operation was a write, return eof.  Otherwise attempt
     1328     5129          *** read according to BIN bit in FPT.
     1329     5130          ***/
     1330     5131
     1331     5132    2              IF F$DCB.NOEOF

   5132  1 002237   200030 470500                    LDP0    JDCB$,,AUTO
         1 002240   000064 236100                    LDQ     52,,PR0
         1 002241   400000 316007                    CANQ    -131072,DL
         1 002242   002246 600000 1                  TZE     TRYAGAIN

     1332     5133    2              THEN F$DCB.TYC.EOF(1) = %YES#; /* Nothing follows                  */

   5133  1 002243   004000 236003                    LDQ     2048,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:252  
         1 002244   000002 256100                    ORSQ    2,,PR0
         1 002245   002351 710000 1                  TRA     s:5166

     1333     5134    3              ELSE DO;                     /* Attempt read                       */

   5106  1 002246                       TRYAGAIN     null
     1334     5135    3   TRYAGAIN:     ;
     1335     5136    3                 F$DCB.ARS = DUBYTES;      /* Set # bytes to read                */

   5136  1 002246   200030 470500                    LDP0    JDCB$,,AUTO
         1 002247   200020 235100                    LDA     DUBYTES,,AUTO
         1 002250   000000 755100                    STA     0,,PR0

     1336     5137    3                 IF FPT$READ_V.DVBYTE.BIN  /* Read binary or ASCII               */

   5137  1 002251   200024 471500                    LDP1    FPT$,,AUTO
         1 002252   100003 236100                    LDQ     3,,PR1
         1 002253   040000 316003                    CANQ    16384,DU
         1 002254   002264 600000 1                  TZE     s:5139

     1337     5138    3                 THEN CALL FTI$RDBIN(DUB$) ALTRET(JUSTALT);

   5138  1 002255   200017 633500                    EPPR3   DUB$,,AUTO
         1 002256   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 002257   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 002260   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002261   000000 701000 xent               TSX1    FTI$RDBIN
         1 002262   002444 702000 1                  TSX2    JUSTALT
         1 002263   002272 710000 1                  TRA     s:5140

     1338     5139    3                 ELSE CALL FTI$RDASC(DUB$) ALTRET(JUSTALT);

   5139  1 002264   200017 633500                    EPPR3   DUB$,,AUTO
         1 002265   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 002266   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 002267   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002270   000000 701000 xent               TSX1    FTI$RDASC
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:253  
         1 002271   002444 702000 1                  TSX2    JUSTALT

     1339     5140    3                 IF NOT F$DCB.CVOL AND F$DCB.TYC.EOF(1)

   5140  1 002272   200030 470500                    LDP0    JDCB$,,AUTO
         1 002273   000031 236100                    LDQ     25,,PR0
         1 002274   000020 316007                    CANQ    16,DL
         1 002275   002351 601000 1                  TNZ     s:5166
         1 002276   000002 236100                    LDQ     2,,PR0
         1 002277   004000 316003                    CANQ    2048,DU
         1 002300   002351 600000 1                  TZE     s:5166

     1340     5141    4                 THEN DO;             /* User wants auto CVOL; double file mark? */

     1341     5142    5                    DO WHILE( F$DCB.TYC.EOF(1) ); /* File mark hit?              */

   5142  1 002301   004000 316003                    CANQ    2048,DU
         1 002302   002341 600000 1                  TZE     s:5156

     1342     5143    5                       EOFCNT = EOFCNT + 1;

   5143  1 002303   200063 054100                    AOS     EOFCNT,,AUTO

     1343     5144    5                       IF EOFCNT < 2

   5144  1 002304   200063 235100                    LDA     EOFCNT,,AUTO
         1 002305   000002 115007                    CMPA    2,DL
         1 002306   002323 605000 1                  TPL     s:5150

     1344     5145    6                       THEN DO;            /* Check for second file mark         */

     1345     5146    6                          F$DCB.ARS = 1;

   5146  1 002307   000001 236007                    LDQ     1,DL
         1 002310   200030 470500                    LDP0    JDCB$,,AUTO
         1 002311   000000 756100                    STQ     0,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:254  
     1346     5147    6                          CALL FTI$RDASC(ADDR(TEMP)) ALTRET(JUSTALT);

   5147  1 002312   200047 631500                    EPPR1   TEMP,,AUTO
         1 002313   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 002314   200112 633500                    EPPR3   @FIELD_LENGTH+2,,AUTO
         1 002315   200113 453500                    STP3    @FIELD_LENGTH+3,,AUTO
         1 002316   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 002317   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002320   000000 701000 xent               TSX1    FTI$RDASC
         1 002321   002444 702000 1                  TSX2    JUSTALT

     1347     5148    6                          END;

   5148  1 002322   002335 710000 1                  TRA     s:5155

     1348     5149    6                       ELSE DO;            /* Double file mark                   */

     1349     5150    6                          F$DCB.ARS = -1;

   5150  1 002323   000001 336007                    LCQ     1,DL
         1 002324   200030 470500                    LDP0    JDCB$,,AUTO
         1 002325   000000 756100                    STQ     0,,PR0

     1350     5151    6                          CALL FTI$SPFILE ALTRET(JUSTALT); /* To between marks   */

   5151  1 002326   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002327   000000 701000 xent               TSX1    FTI$SPFILE
         1 002330   002444 702000 1                  TSX2    JUSTALT

     1351     5152    6                          CALL FTW$CVOLFT ALTRET(CHKVOLOUT);

   5152  1 002331   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002332   001101 701000 1                  TSX1    s:4744
         1 002333   002435 702000 1                  TSX2    CHKVOLOUT

     1352     5153    6                          GOTO TRYAGAIN;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:255  
   5153  1 002334   002246 710000 1                  TRA     TRYAGAIN

     1353     5154    6                          END;
     1354     5155    5                       END;

   5155  1 002335   200030 470500                    LDP0    JDCB$,,AUTO
         1 002336   000002 236100                    LDQ     2,,PR0
         1 002337   004000 316003                    CANQ    2048,DU
         1 002340   002303 601000 1                  TNZ     s:5143

     1355     5156    4                    F$DCB.ARS = -1;        /* Only 1 file mark                   */

   5156  1 002341   000001 335007                    LCA     1,DL
         1 002342   000000 755100                    STA     0,,PR0

     1356     5157    4                    CALL FTI$SPREC ALTRET(JUSTALT);

   5157  1 002343   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002344   000000 701000 xent               TSX1    FTI$SPREC
         1 002345   002444 702000 1                  TSX2    JUSTALT

     1357     5158    4                    F$DCB.TYC.EOF(1) = %YES#;

   5158  1 002346   200030 470500                    LDP0    JDCB$,,AUTO
         1 002347   004000 236003                    LDQ     2048,DU
         1 002350   000002 256100                    ORSQ    2,,PR0

     1358     5159    4                    END;

     1359     5160    3                 END;

     1360     5161
     1361     5162         /***
     1362     5163          *** Return eof error if file mark hit.
     1363     5164          ***/
     1364     5165
     1365     5166    2              IF F$DCB.TYC.EOF(1)
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:256  

   5166  1 002351   000002 236100                    LDQ     2,,PR0
         1 002352   004000 316003                    CANQ    2048,DU
         1 002353   002375 600000 1                  TZE     s:5177

     1366     5167    3              THEN DO;

     1367     5168    3                 FT$DDT.POS = FTP_CHK#;    /* Remember after file mark           */

   5168  1 002354   200016 471500                    LDP1    DDDT$,,AUTO
         1 002355   100006 236100                    LDQ     6,,PR1
         1 002356   000002 376000 2                  ANQ     2
         1 002357   000120 276007                    ORQ     80,DL
         1 002360   100006 756100                    STQ     6,,PR1

     1368     5169    3                 F$DCB.ARS = 0;            /* Nothing read                       */

   5169  1 002361   000000 450100                    STZ     0,,PR0

     1369     5170    3                 B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */

   5170  1 002362   000025 236000 0                  LDQ     E_EOF
         1 002363   000000 473400 xsym               LDP3    B$JIT$
         1 002364   300012 756100                    STQ     10,,PR3

     1370     5171    3                 FT$DDT.FMCNT = FT$DDT.FMCNT + 1;

   5171  1 002365   100006 220100                    LDX0    6,,PR1
         1 002366   000001 621010                    EAX1    1,X0
         1 002367   100006 741100                    STX1    6,,PR1

     1371     5172                                                /* Count file marks                   */
     1372     5173    3                 F$DCB.TYC.EOD(1) = %YES#;

   5173  1 002370   000200 236003                    LDQ     128,DU
         1 002371   000002 256100                    ORSQ    2,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:257  
     1373     5174    3                 F$DCB.TYC(0) = F$DCB.TYC(1);

   5174  1 002372   000002 236100                    LDQ     2,,PR0
         1 002373   000001 756100                    STQ     1,,PR0

     1374     5175    3                 END;

   5175  1 002374   002433 710000 1                  TRA     s:5191

     1375     5176    3              ELSE DO;

     1376     5177    3                 FT$DDT.POS = FTP_BOD#;    /* Remember after data                */

   5177  1 002375   200016 471500                    LDP1    DDDT$,,AUTO
         1 002376   100006 236100                    LDQ     6,,PR1
         1 002377   000002 376000 2                  ANQ     2
         1 002400   000060 276007                    ORQ     48,DL
         1 002401   100006 756100                    STQ     6,,PR1

     1377     5178    3                 IF NOT FPT$READ_V.DVBYTE.BIN

   5178  1 002402   200024 473500                    LDP3    FPT$,,AUTO
         1 002403   300003 236100                    LDQ     3,,PR3
         1 002404   040000 316003                    CANQ    16384,DU
         1 002405   002433 601000 1                  TNZ     s:5191

     1378     5179    4                 THEN DO;                  /* Do conversion if necessary         */

     1379     5180    4                    IF F$DCB.EBCDIC AND F$DCB.CNVRT

   5180  1 002406   000031 236100                    LDQ     25,,PR0
         1 002407   100000 316007                    CANQ    32768,DL
         1 002410   002433 600000 1                  TZE     s:5191
         1 002411   200000 316007                    CANQ    65536,DL
         1 002412   002433 600000 1                  TZE     s:5191
         1 002413   300003 236100                    LDQ     3,,PR3
         1 002414   020000 316003                    CANQ    8192,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:258  
         1 002415   002433 601000 1                  TNZ     s:5191

     1380     5181    4                        AND NOT FPT$READ_V.DVBYTE.TRANS
     1381     5182    5                    THEN DO;

     1382     5183    5                       CHARZLEN = F$DCB.ARS;

   5183  1 002416   000000 235100                    LDA     0,,PR0
         1 002417   200013 755100                    STA     CHARZLEN,,AUTO

     1383     5184    5                       IF DUBYTES < CHARZLEN

   5184  1 002420   200020 236100                    LDQ     DUBYTES,,AUTO
         1 002421   200013 116100                    CMPQ    CHARZLEN,,AUTO
         1 002422   002424 605000 1                  TPL     s:5186

     1384     5185    5                       THEN CHARZLEN = DUBYTES; /* Limit chars to buf size       */

   5185  1 002423   200013 756100                    STQ     CHARZLEN,,AUTO

     1385     5186    5                       CALL XLATE( DUB$->CHARZ, F_EBC_ASC, DUB$->CHARZ );

   5186  1 002424   200017 474500                    LDP4    DUB$,,AUTO
         1 002425   200013 720100                    LXL0    CHARZLEN,,AUTO
         1 002426   000000 475400 xsym               LDP5    B$XL_EBC_ASC$
         1 002427   040140 160540                    MVT     fill='040'O
         1 002430   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 002431   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 002432   500000 000100                    ARG     0,,PR5

     1386     5187    5                       END;

     1387     5188    4                    END;

     1388     5189    3                 END;

     1389     5190
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:259  
     1390     5191    2              RETURN;

   5191  1 002433   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 002434   000001 702211                    TSX2  ! 1,X1

   5182  1 002435                       CHKVOLOUT    null
     1391     5192
     1392     5193    2   CHKVOLOUT: ;
     1393     5194    2              IF B$JIT.ERR.CODE = %E$VOLOUT

   5194  1 002435   000000 470400 xsym               LDP0    B$JIT$
         1 002436   000012 236100                    LDQ     10,,PR0
         1 002437   377770 376007                    ANQ     131064,DL
         1 002440   013270 116007                    CMPQ    5816,DL
         1 002441   002444 601000 1                  TNZ     JUSTALT

     1394     5195    2              THEN B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */

   5195  1 002442   000025 236000 0                  LDQ     E_EOF
         1 002443   000012 756100                    STQ     10,,PR0

   5194  1 002444                       JUSTALT      null
     1395     5196
     1396     5197    2   JUSTALT:   ;
     1397     5198    2              ALTRETURN;

   5198  1 002444   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 002445   000000 702211                    TSX2  ! 0,X1

     1398     5199
     1399     5200    2      END FTW_RDEV;
     1400     5201        /*********************************************************************/
     1401     5202        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:260  
     1402     5203        /*********************************************************************/
     1403     5204    1   FTW_WDEV:  PROC ALTRET;

   5204  1 002446   200062 741300       FTW_WDEV     STX1  ! KEYS+1,,AUTO

     1404     5205        /*F*     NAME: FTW_WDEV
     1405     5206                 PURPOSE: Write for free format tape.
     1406     5207         ***/
     1407     5208
     1408     5209        /********************/
     1409     5210
     1410     5211         /***
     1411     5212          *** If we must CVOL, do it now.
     1412     5213          ***/
     1413     5214
     1414     5215    2              IF F$DCB.MUST_CVOL

   5215  1 002447   200030 470500                    LDP0    JDCB$,,AUTO
         1 002450   000064 236100                    LDQ     52,,PR0
         1 002451   000002 316003                    CANQ    2,DU
         1 002452   002456 600000 1                  TZE     s:5222

     1415     5216    2              THEN CALL FTW$CVOLFT ALTRET(JUSTALT);

   5216  1 002453   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002454   001101 701000 1                  TSX1    s:4744
         1 002455   002607 702000 1                  TSX2    JUSTALT

     1416     5217
     1417     5218         /***
     1418     5219          *** Attempt write according to BIN bit of FPT.
     1419     5220          ***/
     1420     5221
     1421     5222    2              IF DUBYTES < 4

   5222  1 002456   200020 235100                    LDA     DUBYTES,,AUTO
         1 002457   000004 115007                    CMPA    4,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:261  
         1 002460   002466 605000 1                  TPL     s:5227

     1422     5223    3              THEN DO;                     /* Record too small                   */

     1423     5224    3                 B$JIT.ERR = E_SMALLRECL; /*E* ERROR:  FTW-E$SMALLRECL */

   5224  1 002461   000047 236000 0                  LDQ     E_SMALLRECL
         1 002462   000000 470400 xsym               LDP0    B$JIT$
         1 002463   000012 756100                    STQ     10,,PR0

     1424     5225    3                 ALTRETURN;

   5225  1 002464   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 002465   000000 702211                    TSX2  ! 0,X1

     1425     5226    3                 END;
     1426     5227    2              F$DCB.ARS = DUBYTES;         /* Set # bytes to write               */

   5227  1 002466   200030 470500                    LDP0    JDCB$,,AUTO
         1 002467   000000 755100                    STA     0,,PR0

     1427     5228    2              F$DCB.FMOD = %YES#;

   5228  1 002470   040000 236003                    LDQ     16384,DU
         1 002471   000064 256100                    ORSQ    52,,PR0

     1428     5229    2              F$DCB.NOEOF = %YES#;         /* Remember tape modified             */

   5229  1 002472   400000 236007                    LDQ     -131072,DL
         1 002473   000064 256100                    ORSQ    52,,PR0

     1429     5230    2              F$DCB.TAPTYP.PASTFM = %NO#;  /* WEOF not last                      */

   5230  1 002474   000006 236000 2                  LDQ     6
         1 002475   000067 356100                    ANSQ    55,,PR0

     1430     5231    2              IF FPT$WRITE_V.DVBYTE.BIN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:262  

   5231  1 002476   200024 471500                    LDP1    FPT$,,AUTO
         1 002477   100003 236100                    LDQ     3,,PR1
         1 002500   040000 316003                    CANQ    16384,DU
         1 002501   002511 600000 1                  TZE     s:5234

     1431     5232    2              THEN CALL FTI$WRBIN(DUB$) ALTRET(JUSTALT);

   5232  1 002502   200017 633500                    EPPR3   DUB$,,AUTO
         1 002503   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 002504   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 002505   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002506   000000 701000 xent               TSX1    FTI$WRBIN
         1 002507   002607 702000 1                  TSX2    JUSTALT
         1 002510   002556 710000 1                  TRA     s:5243

     1432     5233    3              ELSE DO;

     1433     5234    3                 IF F$DCB.CNVRT AND NOT FPT$WRITE_V.DVBYTE.TRANS

   5234  1 002511   000031 236100                    LDQ     25,,PR0
         1 002512   200000 316007                    CANQ    65536,DL
         1 002513   002550 600000 1                  TZE     s:5241
         1 002514   100003 236100                    LDQ     3,,PR1
         1 002515   020000 316003                    CANQ    8192,DU
         1 002516   002550 601000 1                  TNZ     s:5241

     1434     5235    4                 THEN DO;                  /* Conversion requested               */

     1435     5236    4                    CALL HFF$WRITE1(DUB$) ALTRET(NOTRANSLATE);

   5236  1 002517   200017 633500                    EPPR3   DUB$,,AUTO
         1 002520   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 002521   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 002522   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002523   000000 701000 xent               TSX1    HFF$WRITE1
         1 002524   002604 702000 1                  TSX2    NOTRANSLATE
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:263  

     1436     5237    4                    IF F$DCB.EBCDIC

   5237  1 002525   200030 470500                    LDP0    JDCB$,,AUTO
         1 002526   000031 236100                    LDQ     25,,PR0
         1 002527   100000 316007                    CANQ    32768,DL
         1 002530   002541 600000 1                  TZE     s:5239

     1437     5238    4                    THEN CALL XLATE( DUB$->CHARS, F_ASC_EBC, DUB$->CHARS );

   5238  1 002531   200017 471500                    LDP1    DUB$,,AUTO
         1 002532   200020 720100                    LXL0    DUBYTES,,AUTO
         1 002533   000000 473400 xsym               LDP3    B$XL_ASC_EBC$
         1 002534   040140 160540                    MVT     fill='040'O
         1 002535   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 002536   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 002537   300000 000100                    ARG     0,,PR3
         1 002540   002550 710000 1                  TRA     s:5241

     1438     5239    4                    ELSE CALL XLATE( DUB$->CHARS, F_ASC_ASC, DUB$->CHARS );

   5239  1 002541   200017 471500                    LDP1    DUB$,,AUTO
         1 002542   200020 720100                    LXL0    DUBYTES,,AUTO
         1 002543   000000 473400 xsym               LDP3    B$XL_MOD_256$
         1 002544   040140 160540                    MVT     fill='040'O
         1 002545   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 002546   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 002547   300000 000100                    ARG     0,,PR3

     1439     5240    4                    END;

     1440     5241    3                 CALL FTI$WRASC(DUB$) ALTRET(JUSTALT);

   5241  1 002550   200017 631500                    EPPR1   DUB$,,AUTO
         1 002551   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 002552   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 002553   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:264  
         1 002554   000000 701000 xent               TSX1    FTI$WRASC
         1 002555   002607 702000 1                  TSX2    JUSTALT

     1441     5242    3                 END;

     1442     5243    2              FT$DDT.POS = FTP_BOD#;       /* Remember after data                */

   5243  1 002556   200016 470500                    LDP0    DDDT$,,AUTO
         1 002557   000006 236100                    LDQ     6,,PR0
         1 002560   000002 376000 2                  ANQ     2
         1 002561   000060 276007                    ORQ     48,DL
         1 002562   000006 756100                    STQ     6,,PR0

     1443     5244
     1444     5245         /***
     1445     5246          *** Return end of tape error if necessary.
     1446     5247          ***/
     1447     5248
     1448     5249    2              IF F$DCB.TYC.EOT(1)

   5249  1 002563   200030 471500                    LDP1    JDCB$,,AUTO
         1 002564   100002 236100                    LDQ     2,,PR1
         1 002565   100000 316003                    CANQ    32768,DU
         1 002566   002602 600000 1                  TZE     s:5256

     1449     5250    2              THEN IF F$DCB.CVOL

   5250  1 002567   100031 236100                    LDQ     25,,PR1
         1 002570   000020 316007                    CANQ    16,DL
         1 002571   002576 600000 1                  TZE     s:5253

     1450     5251    2                 THEN B$JIT.ERR = E_EOT; /*E* FTW-E$EOT */ /* User handling      */

   5251  1 002572   000026 236000 0                  LDQ     E_EOT
         1 002573   000000 473400 xsym               LDP3    B$JIT$
         1 002574   300012 756100                    STQ     10,,PR3
         1 002575   002602 710000 1                  TRA     s:5256
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:265  

     1451     5252    3                 ELSE DO;                  /* TFM handles                        */

     1452     5253    3                    F$DCB.MUST_CVOL = %YES#;

   5253  1 002576   000002 236003                    LDQ     2,DU
         1 002577   100064 256100                    ORSQ    52,,PR1

     1453     5254    3                    F$DCB.TYC.EOT(1) = %NO#;

   5254  1 002600   000017 236000 2                  LDQ     15
         1 002601   100002 356100                    ANSQ    2,,PR1

     1454     5255    3                    END;

     1455     5256    2              RETURN;

   5256  1 002602   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 002603   000001 702211                    TSX2  ! 1,X1

   5249  1 002604                       NOTRANSLATE  null
     1456     5257
     1457     5258    2   NOTRANSLATE: ;
     1458     5259    2              B$JIT.ERR = E_CANTTRANSLATE; /*E* FTW-E$CANTTRANSLATE */

   5259  1 002604   000021 236000 0                  LDQ     E_CANTTRANSLATE
         1 002605   000000 470400 xsym               LDP0    B$JIT$
         1 002606   000012 756100                    STQ     10,,PR0

   5259  1 002607                       JUSTALT      null
     1459     5260
     1460     5261    2   JUSTALT:   ;
     1461     5262    2              ALTRETURN;

   5262  1 002607   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 002610   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:266  
     1462     5263
     1463     5264    2      END FTW_WDEV;
     1464     5265        /*********************************************************************/
     1465     5266        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:267  
     1466     5267        /*********************************************************************/
     1467     5268    1   FTW_PRDEV: PROC ALTRET;

   5268  1 002611   200062 741300       FTW_PRDEV    STX1  ! KEYS+1,,AUTO

     1468     5269        /*F*     NAME: FTW_PRDEV
     1469     5270                 PURPOSE: Position record for free tape.
     1470     5271         ***/
     1471     5272
     1472     5273        /********************/
     1473     5274
     1474     5275    2              IF N > 0

   5275  1 002612   200035 235100                    LDA     N,,AUTO
         1 002613   002631 604400 1                  TMOZ    s:5287

     1475     5276    3              THEN DO;                     /* Positioning forward                */

     1476     5277    3                 IF F$DCB.NOEOF

   5277  1 002614   200030 470500                    LDP0    JDCB$,,AUTO
         1 002615   000064 236100                    LDQ     52,,PR0
         1 002616   400000 316007                    CANQ    -131072,DL
         1 002617   002624 600000 1                  TZE     s:5283

     1477     5278    4                 THEN DO;                  /* Already at end of tape             */

     1478     5279    4                    F$DCB.ARS = 0;         /* None skipped over                  */

   5279  1 002620   000000 450100                    STZ     0,,PR0

     1479     5280    4                    F$DCB.TYC.EOF(1) = %YES#;

   5280  1 002621   004000 236003                    LDQ     2048,DU
         1 002622   000002 256100                    ORSQ    2,,PR0

     1480     5281    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:268  

   5281  1 002623   002655 710000 1                  TRA     s:5298

     1481     5282    4                 ELSE DO;

     1482     5283    4                    F$DCB.ARS = N;         /* Set number of records to skip      */

   5283  1 002624   000000 755100                    STA     0,,PR0

     1483     5284    4                    CALL FTI$SPREC ALTRET(JUSTALT);

   5284  1 002625   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002626   000000 701000 xent               TSX1    FTI$SPREC
         1 002627   002733 702000 1                  TSX2    JUSTALT

     1484     5285    4                    END;

     1485     5286    3                 END;

   5286  1 002630   002655 710000 1                  TRA     s:5298

     1486     5287    2              ELSE IF N < 0

   5287  1 002631   002651 605000 1                  TPL     s:5295

     1487     5288    3                 THEN DO;                  /* Positioning back                   */

     1488     5289    3                    CALL FTW_DEVBACK ALTRET(JUSTALT); /* Do backup positioning   */

   5289  1 002632   003041 701000 1                  TSX1    FTW_DEVBACK
         1 002633   002733 702000 1                  TSX2    JUSTALT

     1489     5290    3                    IF F$DCB.ARS ~= 0 THEN CALL FTI$SPFILE ALTRET(JUSTALT);

   5290  1 002634   200030 470500                    LDP0    JDCB$,,AUTO
         1 002635   000000 235100                    LDA     0,,PR0
         1 002636   002642 600000 1                  TZE     s:5291
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:269  

   5290  1 002637   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002640   000000 701000 xent               TSX1    FTI$SPFILE
         1 002641   002733 702000 1                  TSX2    JUSTALT

     1490     5291    3                    F$DCB.ARS = N;         /* Set number of records to skip      */

   5291  1 002642   200030 470500                    LDP0    JDCB$,,AUTO
         1 002643   200035 235100                    LDA     N,,AUTO
         1 002644   000000 755100                    STA     0,,PR0

     1491     5292    3                    CALL FTI$SPREC ALTRET(JUSTALT);

   5292  1 002645   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002646   000000 701000 xent               TSX1    FTI$SPREC
         1 002647   002733 702000 1                  TSX2    JUSTALT

     1492     5293    3                    END;

   5293  1 002650   002655 710000 1                  TRA     s:5298

     1493     5294    3                 ELSE DO;                  /* Not changing position              */

     1494     5295    3                    F$DCB.ARS = 0;

   5295  1 002651   200030 470500                    LDP0    JDCB$,,AUTO
         1 002652   000000 450100                    STZ     0,,PR0

     1495     5296    3                    F$DCB.TYC = '0'B;

   5296  1 002653   000001 450100                    STZ     1,,PR0
         1 002654   000002 450100                    STZ     2,,PR0

     1496     5297    3                    END;

     1497     5298    2              FT$DDT.POS = FTP_BOD#;       /* Assume after data                  */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:270  
   5298  1 002655   200016 470500                    LDP0    DDDT$,,AUTO
         1 002656   000006 236100                    LDQ     6,,PR0
         1 002657   000002 376000 2                  ANQ     2
         1 002660   000060 276007                    ORQ     48,DL
         1 002661   000006 756100                    STQ     6,,PR0

     1498     5299
     1499     5300         /***
     1500     5301          *** Return code for error conditions.
     1501     5302          ***/
     1502     5303
     1503     5304    2              IF F$DCB.TYC.EOF(1) OR F$DCB.TYC.BOF(1)

   5304  1 002662   200030 471500                    LDP1    JDCB$,,AUTO
         1 002663   100002 236100                    LDQ     2,,PR1
         1 002664   004000 316003                    CANQ    2048,DU
         1 002665   002670 601000 1                  TNZ     s:5306
         1 002666   020000 316003                    CANQ    8192,DU
         1 002667   002720 600000 1                  TZE     s:5319

     1504     5305    3              THEN DO;

     1505     5306    3                 F$DCB.TYC.EOD(1) = %YES#;

   5306  1 002670   000200 236003                    LDQ     128,DU
         1 002671   100002 256100                    ORSQ    2,,PR1

     1506     5307    3                 F$DCB.TYC(0) = F$DCB.TYC(1);

   5307  1 002672   100002 236100                    LDQ     2,,PR1
         1 002673   100001 756100                    STQ     1,,PR1

     1507     5308    3                 IF F$DCB.TYC.EOF(1)

   5308  1 002674   004000 316003                    CANQ    2048,DU
         1 002675   002711 600000 1                  TZE     s:5315

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:271  
     1508     5309    4                 THEN DO;

     1509     5310    4                    FT$DDT.POS = FTP_CHK#; /* Remember after file mark           */

   5310  1 002676   000006 236100                    LDQ     6,,PR0
         1 002677   000002 376000 2                  ANQ     2
         1 002700   000120 276007                    ORQ     80,DL
         1 002701   000006 756100                    STQ     6,,PR0

     1510     5311    4                    B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */

   5311  1 002702   000025 236000 0                  LDQ     E_EOF
         1 002703   000000 473400 xsym               LDP3    B$JIT$
         1 002704   300012 756100                    STQ     10,,PR3

     1511     5312    4                    FT$DDT.FMCNT = FT$DDT.FMCNT + 1; /* Count file marks         */

   5312  1 002705   000006 220100                    LDX0    6,,PR0
         1 002706   000001 621010                    EAX1    1,X0
         1 002707   000006 741100                    STX1    6,,PR0

     1512     5313    4                    END;

   5313  1 002710   002731 710000 1                  TRA     s:5324

     1513     5314    4                 ELSE DO;

     1514     5315    4                    B$JIT.ERR = E_BOF; /*E* ERROR: FTW-E$BOF */

   5315  1 002711   000016 236000 0                  LDQ     E_BOF
         1 002712   000000 473400 xsym               LDP3    B$JIT$
         1 002713   300012 756100                    STQ     10,,PR3

     1515     5316    4                    FT$DDT.FMCNT = FT$DDT.FMCNT - 1;

   5316  1 002714   000006 220100                    LDX0    6,,PR0
         1 002715   777777 621010                    EAX1    -1,X0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:272  
         1 002716   000006 741100                    STX1    6,,PR0

     1516     5317    4                    END;

     1517     5318    3                 END;

   5318  1 002717   002731 710000 1                  TRA     s:5324

     1518     5319    2              ELSE IF F$DCB.TYC.BOT(1)

   5319  1 002720   040000 316003                    CANQ    16384,DU
         1 002721   002731 600000 1                  TZE     s:5324

     1519     5320    3                 THEN DO;

     1520     5321    3                    B$JIT.ERR = E_BOT; /*E* ERROR: FTW-E$BOT */

   5321  1 002722   000017 236000 0                  LDQ     E_BOT
         1 002723   000000 473400 xsym               LDP3    B$JIT$
         1 002724   300012 756100                    STQ     10,,PR3

     1521     5322    3                    FT$DDT.POS = FTP_BOV#; /* At beginning of volume             */

   5322  1 002725   000006 236100                    LDQ     6,,PR0
         1 002726   000002 376000 2                  ANQ     2
         1 002727   000020 276007                    ORQ     16,DL
         1 002730   000006 756100                    STQ     6,,PR0

     1522     5323    3                    END;

     1523     5324    2              RETURN;

   5324  1 002731   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 002732   000001 702211                    TSX2  ! 1,X1

   5318  1 002733                       JUSTALT      null
     1524     5325
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:273  
     1525     5326    2   JUSTALT:   ;
     1526     5327    2              ALTRETURN;

   5327  1 002733   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 002734   000000 702211                    TSX2  ! 0,X1

     1527     5328
     1528     5329    2      END FTW_PRDEV;
     1529     5330        /*********************************************************************/
     1530     5331        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:274  
     1531     5332        /*********************************************************************/
     1532     5333    1   FTW_PFDEV: PROC ALTRET;

   5333  1 002735   200064 741300       FTW_PFDEV    STX1  ! CRNTKEY+1,,AUTO

     1533     5334        /*F*     NAME: FTW_PFDEV
     1534     5335                 PURPOSE: Position file for free tape.
     1535     5336         ***/
     1536     5337
     1537     5338        /********************/
     1538     5339
     1539     5340    2              IF BOF

   5340  1 002736   200056 234100                    SZN     BOF,,AUTO
         1 002737   002751 605000 1                  TPL     s:5346

     1540     5341    3              THEN DO;                     /* Positioning back                   */

     1541     5342    3                 CALL FTW_DEVBACK ALTRET(JUSTALT); /* Do backup handling         */

   5342  1 002740   003041 701000 1                  TSX1    FTW_DEVBACK
         1 002741   003037 702000 1                  TSX2    JUSTALT

     1542     5343    3                 F$DCB.ARS = F$DCB.ARS - 1;

   5343  1 002742   200030 470500                    LDP0    JDCB$,,AUTO
         1 002743   000001 336007                    LCQ     1,DL
         1 002744   000000 056100                    ASQ     0,,PR0

     1543     5344    3                 CALL FTI$SPFILE ALTRET(JUSTALT);

   5344  1 002745   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002746   000000 701000 xent               TSX1    FTI$SPFILE
         1 002747   003037 702000 1                  TSX2    JUSTALT

     1544     5345    3                 END;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:275  
   5345  1 002750   002765 710000 1                  TRA     s:5352

     1545     5346    2              ELSE IF F$DCB.NOEOF

   5346  1 002751   200030 470500                    LDP0    JDCB$,,AUTO
         1 002752   000064 236100                    LDQ     52,,PR0
         1 002753   400000 316007                    CANQ    -131072,DL
         1 002754   002760 600000 1                  TZE     s:5349

     1546     5347    2                 THEN F$DCB.TYC.EOF(1) = %YES#;

   5347  1 002755   004000 236003                    LDQ     2048,DU
         1 002756   000002 256100                    ORSQ    2,,PR0
         1 002757   002765 710000 1                  TRA     s:5352

     1547     5348    3                 ELSE DO;

     1548     5349    3                    F$DCB.ARS = 1;

   5349  1 002760   000001 235007                    LDA     1,DL
         1 002761   000000 755100                    STA     0,,PR0

     1549     5350    3                    CALL FTI$SPFILE ALTRET(JUSTALT);

   5350  1 002762   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002763   000000 701000 xent               TSX1    FTI$SPFILE
         1 002764   003037 702000 1                  TSX2    JUSTALT

     1550     5351    3                    END;

     1551     5352    2              FT$DDT.POS = FTP_BOD#;       /* Assume after data                  */

   5352  1 002765   200016 470500                    LDP0    DDDT$,,AUTO
         1 002766   000006 236100                    LDQ     6,,PR0
         1 002767   000002 376000 2                  ANQ     2
         1 002770   000060 276007                    ORQ     48,DL
         1 002771   000006 756100                    STQ     6,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:276  

     1552     5353
     1553     5354         /***
     1554     5355          *** Determine code for error conditions.
     1555     5356          ***/
     1556     5357
     1557     5358    2              IF F$DCB.TYC.EOF(1) OR F$DCB.TYC.BOF(1)

   5358  1 002772   200030 471500                    LDP1    JDCB$,,AUTO
         1 002773   100002 236100                    LDQ     2,,PR1
         1 002774   004000 316003                    CANQ    2048,DU
         1 002775   003000 601000 1                  TNZ     s:5360
         1 002776   020000 316003                    CANQ    8192,DU
         1 002777   003024 600000 1                  TZE     s:5372

     1558     5359    3              THEN DO;

     1559     5360    3                 IF F$DCB.TYC.EOF(1)

   5360  1 003000   004000 316003                    CANQ    2048,DU
         1 003001   003014 600000 1                  TZE     s:5367

     1560     5361    4                 THEN DO;

     1561     5362    4                    FT$DDT.POS = FTP_CHK#; /* Remember after file mark           */

   5362  1 003002   000006 236100                    LDQ     6,,PR0
         1 003003   000002 376000 2                  ANQ     2
         1 003004   000120 276007                    ORQ     80,DL
         1 003005   000006 756100                    STQ     6,,PR0

     1562     5363    4                    F$DCB.TYC.EOF(1) = %NO#;

   5363  1 003006   000024 236000 2                  LDQ     20
         1 003007   100002 356100                    ANSQ    2,,PR1

     1563     5364    4                    FT$DDT.FMCNT = FT$DDT.FMCNT + 1; /* Count file marks         */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:277  

   5364  1 003010   000006 220100                    LDX0    6,,PR0
         1 003011   000001 621010                    EAX1    1,X0
         1 003012   000006 741100                    STX1    6,,PR0

     1564     5365    4                    END;

   5365  1 003013   003021 710000 1                  TRA     s:5370

     1565     5366    4                 ELSE DO;

     1566     5367    4                    F$DCB.TYC.BOF(1) = %NO#;

   5367  1 003014   000025 236000 2                  LDQ     21
         1 003015   100002 356100                    ANSQ    2,,PR1

     1567     5368    4                    FT$DDT.FMCNT = FT$DDT.FMCNT - 1;

   5368  1 003016   000006 220100                    LDX0    6,,PR0
         1 003017   777777 621010                    EAX1    -1,X0
         1 003020   000006 741100                    STX1    6,,PR0

     1568     5369    4                    END;

     1569     5370    3                 F$DCB.TYC(0) = F$DCB.TYC(1);

   5370  1 003021   100002 236100                    LDQ     2,,PR1
         1 003022   100001 756100                    STQ     1,,PR1

     1570     5371    3                 END;

   5371  1 003023   003035 710000 1                  TRA     s:5377

     1571     5372    2              ELSE IF F$DCB.TYC.BOT(1)

   5372  1 003024   040000 316003                    CANQ    16384,DU
         1 003025   003035 600000 1                  TZE     s:5377
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:278  

     1572     5373    3                 THEN DO;

     1573     5374    3                    B$JIT.ERR = E_BOT; /*E* ERROR: FTW-E$BOT */

   5374  1 003026   000017 236000 0                  LDQ     E_BOT
         1 003027   000000 473400 xsym               LDP3    B$JIT$
         1 003030   300012 756100                    STQ     10,,PR3

     1574     5375    3                    FT$DDT.POS = FTP_BOV#; /* At beginning of volume             */

   5375  1 003031   000006 236100                    LDQ     6,,PR0
         1 003032   000002 376000 2                  ANQ     2
         1 003033   000020 276007                    ORQ     16,DL
         1 003034   000006 756100                    STQ     6,,PR0

     1575     5376    3                    END;

     1576     5377    2              RETURN;

   5377  1 003035   200064 221300                    LDX1  ! CRNTKEY+1,,AUTO
         1 003036   000001 702211                    TSX2  ! 1,X1

   5371  1 003037                       JUSTALT      null
     1577     5378
     1578     5379    2   JUSTALT:   ;
     1579     5380    2              ALTRETURN;

   5380  1 003037   200064 221300                    LDX1  ! CRNTKEY+1,,AUTO
         1 003040   000000 702211                    TSX2  ! 0,X1

     1580     5381
     1581     5382    2      END FTW_PFDEV;
     1582     5383        /*********************************************************************/
     1583     5384        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:279  
     1584     5385        /*********************************************************************/
     1585     5386    1   FTW_DEVBACK: PROC ALTRET;

   5386  1 003041   200066 741300       FTW_DEVBACK  STX1  ! FRSTKEY+1,,AUTO

     1586     5387        /*F*     NAME: FTW_DEVBACK
     1587     5388                 PURPOSE: Prepare for backwards motion on device tape.
     1588     5389         ***/
     1589     5390
     1590     5391        /********************/
     1591     5392
     1592     5393         /***
     1593     5394          *** If no end of file indicator (double eof), write them.
     1594     5395          ***/
     1595     5396
     1596     5397    2              IF F$DCB.NOEOF

   5397  1 003042   200030 470500                    LDP0    JDCB$,,AUTO
         1 003043   000064 236100                    LDQ     52,,PR0
         1 003044   400000 316007                    CANQ    -131072,DL
         1 003045   003073 600000 1                  TZE     s:5411

     1597     5398    3              THEN DO;

     1598     5399    3                 CALL FTI$WRFM ALTRET(JUSTALT);

   5399  1 003046   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 003047   000000 701000 xent               TSX1    FTI$WRFM
         1 003050   003076 702000 1                  TSX2    JUSTALT

     1599     5400    3                 IF F$DCB.TAPTYP.PASTFM

   5400  1 003051   200030 470500                    LDP0    JDCB$,,AUTO
         1 003052   000067 236100                    LDQ     55,,PR0
         1 003053   000004 316003                    CANQ    4,DU
         1 003054   003060 600000 1                  TZE     s:5405

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:280  
     1600     5401    4                 THEN DO;                  /* File mark written last             */

     1601     5402    4                    F$DCB.ARS = -1;        /* To space back over fm written      */

   5402  1 003055   000001 335007                    LCA     1,DL
         1 003056   000000 755100                    STA     0,,PR0

     1602     5403    4                    END;

   5403  1 003057   003066 710000 1                  TRA     s:5408

     1603     5404    4                 ELSE DO;                  /* Need double file mark              */

     1604     5405    4                    CALL FTI$WRFM ALTRET(JUSTALT);

   5405  1 003060   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 003061   000000 701000 xent               TSX1    FTI$WRFM
         1 003062   003076 702000 1                  TSX2    JUSTALT

     1605     5406    4                    F$DCB.ARS = -2;        /* To space back over both written    */

   5406  1 003063   000002 335007                    LCA     2,DL
         1 003064   200030 470500                    LDP0    JDCB$,,AUTO
         1 003065   000000 755100                    STA     0,,PR0

     1606     5407    4                    END;

     1607     5408    3                 F$DCB.NOEOF = %NO#;

   5408  1 003066   000015 236000 2                  LDQ     13
         1 003067   000064 356100                    ANSQ    52,,PR0

     1608     5409    3                 F$DCB.TAPTYP.PASTFM = %NO#;

   5409  1 003070   000006 236000 2                  LDQ     6
         1 003071   000067 356100                    ANSQ    55,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:281  
     1609     5410    3                 END;

   5410  1 003072   003074 710000 1                  TRA     s:5413

     1610     5411    2              ELSE F$DCB.ARS = 0;          /* No backspacing needed              */

   5411  1 003073   000000 450100                    STZ     0,,PR0

     1611     5412
     1612     5413    2              RETURN;

   5413  1 003074   200066 221300                    LDX1  ! FRSTKEY+1,,AUTO
         1 003075   000001 702211                    TSX2  ! 1,X1

   5408  1 003076                       JUSTALT      null
     1613     5414
     1614     5415    2   JUSTALT:   ;
     1615     5416    2              ALTRETURN;

   5416  1 003076   200066 221300                    LDX1  ! FRSTKEY+1,,AUTO
         1 003077   000000 702211                    TSX2  ! 0,X1

     1616     5417
     1617     5418    2      END FTW_DEVBACK;
     1618     5419        /*********************************************************************/
     1619     5420        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:282  
     1620     5421        /*********************************************************************/
     1621     5422    1   FTW_ODRDEV: PROC ALTRET;

   5422  1 003100   200062 741300       FTW_ODRDEV   STX1  ! KEYS+1,,AUTO

     1622     5423        /*F*     NAME: FTW_ODRDEV
     1623     5424                 PURPOSE: Perform device-type reads for optical disk.
     1624     5425         ***/
     1625     5426
     1626     5427    3              IF FPT$WRITE_V.ODFNC ~= 1 THEN DO; /* Not a map operation?         */

   5427  1 003101   200024 470500                    LDP0    FPT$,,AUTO
         1 003102   000003 236100                    LDQ     3,,PR0
         1 003103   000377 376003                    ANQ     255,DU
         1 003104   000001 116003                    CMPQ    1,DU
         1 003105   003113 600000 1                  TZE     s:5431

     1627     5428    3                 B$JIT.ERR = E_NOTIMPLEMENTED; /*E* ERROR: FTW-E$NOTIMPLEMENTED */

   5428  1 003106   000043 236000 0                  LDQ     E_NOTIMPLEMENTED
         1 003107   000000 471400 xsym               LDP1    B$JIT$
         1 003110   100012 756100                    STQ     10,,PR1

     1628     5429    3                 ALTRETURN;

   5429  1 003111   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003112   000000 702211                    TSX2  ! 0,X1

     1629     5430    3                 END;
     1630     5431    2              F$DCB.ARS = DUBYTES;

   5431  1 003113   200030 471500                    LDP1    JDCB$,,AUTO
         1 003114   200020 235100                    LDA     DUBYTES,,AUTO
         1 003115   100000 755100                    STA     0,,PR1

     1631     5432    2              CALL FPO$RDODMAP (DUB$) ALTRET(JUSTALT);

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:283  
   5432  1 003116   200017 633500                    EPPR3   DUB$,,AUTO
         1 003117   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 003120   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 003121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003122   000000 701000 xent               TSX1    FPO$RDODMAP
         1 003123   003126 702000 1                  TSX2    JUSTALT

     1632     5433    2              RETURN;

   5433  1 003124   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003125   000001 702211                    TSX2  ! 1,X1

     1633     5434    2   JUSTALT:   ALTRETURN;

   5434  1 003126   200062 221300       JUSTALT      LDX1  ! KEYS+1,,AUTO
         1 003127   000000 702211                    TSX2  ! 0,X1

     1634     5435
     1635     5436    2      END FTW_ODRDEV;
     1636     5437        /*********************************************************************/
     1637     5438        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:284  
     1638     5439        /*********************************************************************/
     1639     5440    1   FTW_ODWDEV: PROC ALTRET;

   5440  1 003130   200062 741300       FTW_ODWDEV   STX1  ! KEYS+1,,AUTO

     1640     5441        /*F*     NAME: FTW_ODWDEV
     1641     5442                 PURPOSE: Perform device-type writes for optical disk.
     1642     5443         ***/
     1643     5444
     1644     5445    2              IF FPT$WRITE_V.ODFNC ~= 1 AND

   5445  1 003131   200024 470500                    LDP0    FPT$,,AUTO
         1 003132   000003 236100                    LDQ     3,,PR0
         1 003133   000377 376003                    ANQ     255,DU
         1 003134   000001 116003                    CMPQ    1,DU
         1 003135   003145 600000 1                  TZE     s:5451
         1 003136   000002 116003                    CMPQ    2,DU
         1 003137   003145 600000 1                  TZE     s:5451

     1645     5446    3                  FPT$WRITE_V.ODFNC ~= 2 THEN DO; /* Not LABEL or MAP oeration   */

     1646     5447    3                 B$JIT.ERR = E_NOTIMPLEMENTED; /*E* ERROR: FTW-E$NOTIMPLEMENTED */

   5447  1 003140   000043 236000 0                  LDQ     E_NOTIMPLEMENTED
         1 003141   000000 471400 xsym               LDP1    B$JIT$
         1 003142   100012 756100                    STQ     10,,PR1

     1647     5448    3                 ALTRETURN;

   5448  1 003143   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003144   000000 702211                    TSX2  ! 0,X1

     1648     5449    3                 END;
     1649     5450
     1650     5451    3              IF NOT (B$JIT.PRIV.ACTIVE & %PR_FMSEC#) THEN DO;

   5451  1 003145   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:285  
         1 003146   100013 236100                    LDQ     11,,PR1
         1 003147   000051 376000 0                  ANQ     E_VOLOUT+1
         1 003150   003155 601000 1                  TNZ     s:5455

     1651     5452    3                 B$JIT.ERR = E_NOTAUTH; /*E* ERROR: FTW-E$NOTAUTH */

   5452  1 003151   000041 236000 0                  LDQ     E_NOTAUTH
         1 003152   100012 756100                    STQ     10,,PR1

     1652     5453    3                 ALTRETURN;

   5453  1 003153   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003154   000000 702211                    TSX2  ! 0,X1

     1653     5454    3                 END;
     1654     5455    2              IF FPT$WRITE_V.ODFNC = 1 THEN

   5455  1 003155   000003 236100                    LDQ     3,,PR0
         1 003156   000377 376003                    ANQ     255,DU
         1 003157   000001 116003                    CMPQ    1,DU
         1 003160   003170 601000 1                  TNZ     s:5458

     1655     5456    2                 CALL FPO$LABELOD(DUB$) ALTRET(JUSTALT);

   5456  1 003161   200017 633500                    EPPR3   DUB$,,AUTO
         1 003162   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 003163   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 003164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003165   000000 701000 xent               TSX1    FPO$LABELOD
         1 003166   003175 702000 1                  TSX2    JUSTALT
         1 003167   003173 710000 1                  TRA     s:5459

     1656     5457    2              ELSE
     1657     5458    2                 CALL FPO$COPYOD ALTRET(JUSTALT);

   5458  1 003170   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 003171   000000 701000 xent               TSX1    FPO$COPYOD
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:286  
         1 003172   003175 702000 1                  TSX2    JUSTALT

     1658     5459    2              RETURN;

   5459  1 003173   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003174   000001 702211                    TSX2  ! 1,X1

   5455  1 003175                       JUSTALT      null
     1659     5460
     1660     5461    2   JUSTALT:   ;
     1661     5462    2              ALTRETURN;

   5462  1 003175   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003176   000000 702211                    TSX2  ! 0,X1

     1662     5463
     1663     5464    2      END FTW_ODWDEV;
     1664     5465        /*********************************************************************/
     1665     5466        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:287  
     1666     5467        /*********************************************************************/
     1667     5468    1   FTW_RUSRBUF: PROC ALTRET;

   5468  1 003177   200062 741300       FTW_RUSRBUF  STX1  ! KEYS+1,,AUTO

     1668     5469        /*F*     NAME: FTW_RUSRBUF
     1669     5470                 PURPOSE: Read tape file for user buffer formats.
     1670     5471         ***/
     1671     5472
     1672     5473         /***
     1673     5474          *** Locals:
     1674     5475          ***/
     1675     5476
     1676     5477    2     DCL CRNTKEY SBIN AUTO;                /* Current record's key               */
     1677     5478    2     DCL DATA_INCON BIT(1) AUTO;           /* Flag says data lost previously     */
     1678     5479    2     DCL FRSTKEY SBIN AUTO;                /* Key of first record read           */
     1679     5480    2     DCL MAXMKEY SBIN AUTO;                /* Key of last possible record        */
     1680     5481    2     DCL NEXTKEY SBIN AUTO;                /* Expected key of next record        */
     1681     5482        /********************/
     1682     5483
     1683     5484         /***
     1684     5485          *** End of file if read after write.
     1685     5486          ***/
     1686     5487
     1687     5488    2              IF F$DCB.LSTBLK

   5488  1 003200   200030 470500                    LDP0    JDCB$,,AUTO
         1 003201   000064 236100                    LDQ     52,,PR0
         1 003202   000001 316007                    CANQ    1,DL
         1 003203   003223 600000 1                  TZE     s:5500
         1 003204   200024 471500                    LDP1    FPT$,,AUTO
         1 003205   100000 236100                    LDQ     0,,PR1
         1 003206   200000 316007                    CANQ    65536,DL
         1 003207   003216 600000 1                  TZE     s:5492
         1 003210   000032 236100                    LDQ     26,,PR0
         1 003211   777000 376003                    ANQ     -512,DU
         1 003212   003000 116003                    CMPQ    1536,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:288  
         1 003213   003223 600000 1                  TZE     s:5500
         1 003214   007000 116003                    CMPQ    3584,DU
         1 003215   003223 600000 1                  TZE     s:5500

     1688     5489    2                  AND NOT (FPT$READ_V.KEYS
     1689     5490    2                  AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#) )
     1690     5491    3              THEN DO;                     /* Attempt to read end of file        */

     1691     5492    3                 B$JIT.ERR = E_EOF;        /* ERROR: FTW-E$EOF                   */

   5492  1 003216   000025 236000 0                  LDQ     E_EOF
         1 003217   000000 473400 xsym               LDP3    B$JIT$
         1 003220   300012 756100                    STQ     10,,PR3

     1692     5493    3                 ALTRETURN;

   5493  1 003221   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003222   000000 702211                    TSX2  ! 0,X1

     1693     5494    3                 END;
     1694     5495
     1695     5496         /***
     1696     5497          *** If a key is specified, find specified record.
     1697     5498          ***/
     1698     5499
     1699     5500    2              IF FPT$READ_V.KEYS AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#)

   5500  1 003223   200024 471500                    LDP1    FPT$,,AUTO
         1 003224   100000 236100                    LDQ     0,,PR1
         1 003225   200000 316007                    CANQ    65536,DL
         1 003226   003241 600000 1                  TZE     s:5509
         1 003227   000032 236100                    LDQ     26,,PR0
         1 003230   777000 376003                    ANQ     -512,DU
         1 003231   003000 116003                    CMPQ    1536,DU
         1 003232   003235 600000 1                  TZE     s:5502
         1 003233   007000 116003                    CMPQ    3584,DU
         1 003234   003241 601000 1                  TNZ     s:5509
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:289  

     1700     5501    3              THEN DO;                     /* We've got a key                    */

     1701     5502    3                 CALL FTW_FNDKEY(B$PS$(1)->FOUR_BASED_CHARS) ALTRET(JUSTALT);

   5502  1 003235   000001 236000 xsym               LDQ     B$PS$+1
         1 003236   200071 756100                    STQ     TEMP+2,,AUTO
         1 003237   011051 701000 1                  TSX1    FTW_FNDKEY
         1 003240   004070 702000 1                  TSX2    JUSTALT

     1702     5503    3                 END;

     1703     5504
     1704     5505         /***
     1705     5506          *** Get FPOOL buffer if non-FULL read of RANDOM or IDS file.
     1706     5507          ***/
     1707     5508
     1708     5509    2              IF NOT FPT$READ_V.FULL AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#)

   5509  1 003241   200024 470500                    LDP0    FPT$,,AUTO
         1 003242   000000 236100                    LDQ     0,,PR0
         1 003243   010000 316007                    CANQ    4096,DL
         1 003244   003261 601000 1                  TNZ     s:5515
         1 003245   200030 471500                    LDP1    JDCB$,,AUTO
         1 003246   100032 236100                    LDQ     26,,PR1
         1 003247   777000 376003                    ANQ     -512,DU
         1 003250   003000 116003                    CMPQ    1536,DU
         1 003251   003254 600000 1                  TZE     s:5511
         1 003252   007000 116003                    CMPQ    3584,DU
         1 003253   003261 601000 1                  TNZ     s:5515

     1709     5510    3              THEN DO;

     1710     5511    3                 CALL FTW_GETAFPOOL$;      /* Get FPOOL buffer (pointer)         */

   5511  1 003254   014132 701000 1                  TSX1    FTW_GETAFPOOL$
         1 003255   000000 011000                    NOP     0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:290  

     1711     5512    3                 RCWSIZE = 4;              /* Indicate non-FULL                  */

   5512  1 003256   000004 235007                    LDA     4,DL
         1 003257   200036 755100                    STA     RCWSIZE,,AUTO

     1712     5513    3                 END;

   5513  1 003260   003262 710000 1                  TRA     s:5522

     1713     5514    3              ELSE DO;                     /* FULL                               */

     1714     5515    3                 RCWSIZE = 0;              /* Indicate FULL                      */

   5515  1 003261   200036 450100                    STZ     RCWSIZE,,AUTO

     1715     5516    3                 END;

     1716     5517
     1717     5518         /***
     1718     5519          *** Read next block.
     1719     5520          ***/
     1720     5521
     1721     5522    2              IF RCWSIZE = 0 THEN

   5522  1 003262   200036 235100                    LDA     RCWSIZE,,AUTO
         1 003263   003267 601000 1                  TNZ     s:5525

     1722     5523    2                 AFPOOL$ = DUB$;           /* Read into user buffer              */

   5523  1 003264   200017 236100                    LDQ     DUB$,,AUTO
         1 003265   200007 756100                    STQ     AFPOOL$,,AUTO
         1 003266   003271 710000 1                  TRA     s:5526

     1723     5524    2              ELSE
     1724     5525    2                 ASEG$ = DUB$;             /* Read into FPOOL                    */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:291  
   5525  1 003267   200017 236100                    LDQ     DUB$,,AUTO
         1 003270   200011 756100                    STQ     ASEG$,,AUTO

     1725     5526    2              RECSIZE = 0;                 /* Count up number of bytes read      */

   5526  1 003271   200040 450100                    STZ     RECSIZE,,AUTO

     1726     5527    2              SEGSIZE = 0;                 /* Count actual # bytes transferred   */

   5527  1 003272   200041 450100                    STZ     SEGSIZE,,AUTO

     1727     5528    2              DATA_INCON = %NO#;

   5528  1 003273   200064 450100                    STZ     DATA_INCON,,AUTO

     1728     5529    2              FRSTKEY = -123456789;

   5529  1 003274   000026 235000 2                  LDA     22
         1 003275   200065 755100                    STA     FRSTKEY,,AUTO

     1729     5530    3              DO WHILE(DUBYTES > 0);

   5530  1 003276   200020 235100                    LDA     DUBYTES,,AUTO
         1 003277   004020 604400 1                  TMOZ    SETARSRET

     1730     5531    4                 IF F$DCB.OLDIOERR = 1 THEN DO;
              5531                          /* Had an I/O error on the last block. */

   5531  1 003300   200030 470500                    LDP0    JDCB$,,AUTO
         1 003301   000102 236100                    LDQ     66,,PR0
         1 003302   140000 376003                    ANQ     49152,DU
         1 003303   040000 116003                    CMPQ    16384,DU
         1 003304   003317 601000 1                  TNZ     s:5537

     1731     5532    4                    F$DCB.ARS = 1;

   5532  1 003305   000001 235007                    LDA     1,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:292  
         1 003306   000000 755100                    STA     0,,PR0

     1732     5533    4                    F$DCB.OLDIOERR = 0;

   5533  1 003307   000027 236000 2                  LDQ     23
         1 003310   000102 356100                    ANSQ    66,,PR0

     1733     5534    4                    CALL FTI$SPREC ALTRET(JUSTALT); /* Space past bad block.     */

   5534  1 003311   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 003312   000000 701000 xent               TSX1    FTI$SPREC
         1 003313   004070 702000 1                  TSX2    JUSTALT

     1734     5535    4                    F$DCB.OLDIOERR = 3;    /* Past bad block.                    */

   5535  1 003314   200030 470500                    LDP0    JDCB$,,AUTO
         1 003315   140000 236003                    LDQ     49152,DU
         1 003316   000102 256100                    ORSQ    66,,PR0

     1735     5536    4                    END;

     1736     5537    3                 IF RCWSIZE = 0 THEN

   5537  1 003317   200036 235100                    LDA     RCWSIZE,,AUTO
         1 003320   003324 601000 1                  TNZ     s:5540

     1737     5538    3                    F$DCB.ARS = DUBYTES;   /* Read maximum possible              */

   5538  1 003321   200020 236100                    LDQ     DUBYTES,,AUTO
         1 003322   000000 756100                    STQ     0,,PR0
         1 003323   003326 710000 1                  TRA     s:5541

     1738     5539    3                 ELSE
     1739     5540    3                    F$DCB.ARS = 4096;      /* Limited to 1 page                  */

   5540  1 003324   010000 236007                    LDQ     4096,DL
         1 003325   000000 756100                    STQ     0,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:293  

     1740     5541    4                 IF F$DCB.ARS < 4 THEN DO; /* Reads this small are illegal       */

   5541  1 003326   000004 116007                    CMPQ    4,DL
         1 003327   003334 605000 1                  TPL     s:5545

     1741     5542    4                    B$JIT.ERR = E_SMALLRECL; /*E* ERROR: FTW-E$SMALLRECL */

   5542  1 003330   000047 236000 0                  LDQ     E_SMALLRECL
         1 003331   000000 471400 xsym               LDP1    B$JIT$
         1 003332   100012 756100                    STQ     10,,PR1

     1742     5543    4                    GOTO SETARSRET;

   5543  1 003333   004020 710000 1                  TRA     SETARSRET

     1743     5544    4                    END;
     1744     5545    3                 IF DUBYTES + RCWSIZE < F$DCB.ARS THEN

   5545  1 003334   200020 236100                    LDQ     DUBYTES,,AUTO
         1 003335   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 003336   000000 116100                    CMPQ    0,,PR0
         1 003337   003343 605000 1                  TPL     s:5547

     1745     5546    3                    F$DCB.ARS = DUBYTES + RCWSIZE; /* Limit to user buffer size  */

   5546  1 003340   200020 236100                    LDQ     DUBYTES,,AUTO
         1 003341   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 003342   000000 756100                    STQ     0,,PR0

     1746     5547    4                 CALL FTW_RDFPOOL WHENALTRETURN DO;

   5547  1 003343   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 003344   003346 702000 1                  TSX2    s:5548
         1 003345   003403 710000 1                  TRA     s:5558

     1747     5548    4                    IF B$JIT.ERR.CODE ~= %E$IOERR OR
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:294  

   5548  1 003346   000000 470400 xsym               LDP0    B$JIT$
         1 003347   000012 236100                    LDQ     10,,PR0
         1 003350   377770 376007                    ANQ     131064,DL
         1 003351   000100 116007                    CMPQ    64,DL
         1 003352   003360 601000 1                  TNZ     s:5550
         1 003353   200030 471500                    LDP1    JDCB$,,AUTO
         1 003354   100103 236100                    LDQ     67,,PR1
         1 003355   000777 376007                    ANQ     511,DL
         1 003356   000012 116007                    CMPQ    10,DL
         1 003357   003362 601000 1                  TNZ     s:5551

     1748     5549    4                        F$DCB.IASN = %OD# THEN
     1749     5550    4                       ALTRETURN;

   5550  1 003360   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003361   000000 702211                    TSX2  ! 0,X1

     1750     5551    4                    FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                     */

   5551  1 003362   200016 473500                    LDP3    DDDT$,,AUTO
         1 003363   000030 236000 2                  LDQ     24
         1 003364   300006 356100                    ANSQ    6,,PR3

     1751     5552    4                    IF NOT F$DCB.IOERROK AND NOT IOERROK THEN

   5552  1 003365   100031 236100                    LDQ     25,,PR1
         1 003366   020000 316003                    CANQ    8192,DU
         1 003367   003374 601000 1                  TNZ     s:5554
         1 003370   200027 234100                    SZN     IOERROK,,AUTO
         1 003371   003374 604000 1                  TMI     s:5554

     1752     5553    4                       ALTRETURN;

   5553  1 003372   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003373   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:295  
     1753     5554    4                    F$DCB.OLDIOERR = 1;

   5554  1 003374   100102 236100                    LDQ     66,,PR1
         1 003375   000027 376000 2                  ANQ     23
         1 003376   040000 276003                    ORQ     16384,DU
         1 003377   100102 756100                    STQ     66,,PR1

     1754     5555    4                    F$DCB.TYC.IOERR(1) = '1'B;

   5555  1 003400   001000 236003                    LDQ     512,DU
         1 003401   100002 256100                    ORSQ    2,,PR1

     1755     5556    4                    B$JIT.ERR = '0'B;

   5556  1 003402   000012 450100                    STZ     10,,PR0

     1756     5557    4                    END;

     1757     5558    4                 IF F$DCB.TYC.EOF(1) THEN DO; /* Handle end of file section      */

   5558  1 003403   200030 470500                    LDP0    JDCB$,,AUTO
         1 003404   000002 236100                    LDQ     2,,PR0
         1 003405   004000 316003                    CANQ    2048,DU
         1 003406   003416 600000 1                  TZE     s:5562

     1758     5559    4                    CALL FTL$EOF(EOXL) ALTRET(CHKEOFV);

   5559  1 003407   200022 631500                    EPPR1   EOXL,,AUTO
         1 003410   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 003411   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 003412   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003413   000000 701000 xent               TSX1    FTL$EOF
         1 003414   004032 702000 1                  TSX2    CHKEOFV

     1759     5560    4                    END;

   5560  1 003415   004016 710000 1                  TRA     s:5666
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:296  

     1760     5561    4                 ELSE DO;                  /* Didn't get end of file             */

     1761     5562    4                    F$DCB.PRECNO = F$DCB.PRECNO + 1;

   5562  1 003416   000072 054100                    AOS     58,,PR0

     1762     5563    4                    F$DCB.CRECNO = F$DCB.CRECNO + 1;

   5563  1 003417   000071 054100                    AOS     57,,PR0

     1763     5564         /***
     1764     5565                *** Read only one record for UNDEF or RESTRICT files.
     1765     5566                ***/
     1766     5567    5                    IF F$DCB.ORG = %UNDEF# OR F$DCB.ORG = %RESTRICT# THEN DO;

   5567  1 003420   000032 236100                    LDQ     26,,PR0
         1 003421   777000 376003                    ANQ     -512,DU
         1 003422   021000 116003                    CMPQ    8704,DU
         1 003423   003426 600000 1                  TZE     s:5569
         1 003424   022000 116003                    CMPQ    9216,DU
         1 003425   003465 601000 1                  TNZ     s:5582

     1767     5568                                                /* Read only one record               */
     1768     5569    5                       IF F$DCB.EBCDIC AND F$DCB.CNVRT AND

   5569  1 003426   000031 236100                    LDQ     25,,PR0
         1 003427   100000 316007                    CANQ    32768,DL
         1 003430   003451 600000 1                  TZE     s:5574
         1 003431   200000 316007                    CANQ    65536,DL
         1 003432   003451 600000 1                  TZE     s:5574
         1 003433   200024 471500                    LDP1    FPT$,,AUTO
         1 003434   100003 236100                    LDQ     3,,PR1
         1 003435   020000 316003                    CANQ    8192,DU
         1 003436   003451 601000 1                  TNZ     s:5574

     1769     5570    6                           NOT FPT$READ_V.DVBYTE.TRANS THEN DO;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:297  
              5570                                    /* Translation necessary */

     1770     5571    6                          DUBYTES = F$DCB.ARS;

   5571  1 003437   000000 235100                    LDA     0,,PR0
         1 003440   200020 755100                    STA     DUBYTES,,AUTO

     1771     5572    6                          CALL XLATE(AFPOOL$->CHARS, F_EBC_ASC, AFPOOL$->CHARS);

   5572  1 003441   200007 473500                    LDP3    AFPOOL$,,AUTO
         1 003442   000000 620005                    EAX0    0,AL
         1 003443   000000 474400 xsym               LDP4    B$XL_EBC_ASC$
         1 003444   200020 721100                    LXL1    DUBYTES,,AUTO
         1 003445   040140 160540                    MVT     fill='040'O
         1 003446   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 003447   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         1 003450   400000 000100                    ARG     0,,PR4

     1772     5573    6                          END;

     1773     5574    5                       IF F$DCB.IASN = %OD#

   5574  1 003451   000103 236100                    LDQ     67,,PR0
         1 003452   000777 376007                    ANQ     511,DL
         1 003453   000012 116007                    CMPQ    10,DL
         1 003454   003463 601000 1                  TNZ     s:5577
         1 003455   000002 236100                    LDQ     2,,PR0
         1 003456   002000 316003                    CANQ    1024,DU
         1 003457   003463 600000 1                  TZE     s:5577

     1774     5575    5                           AND F$DCB.TYC.LD(1) THEN /* Lost data?                */
     1775     5576    5                          B$JIT.ERR = E_LD;

   5576  1 003460   000034 236000 0                  LDQ     E_LD
         1 003461   000000 471400 xsym               LDP1    B$JIT$
         1 003462   100012 756100                    STQ     10,,PR1

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:298  
     1776     5577    5                       RETURN;

   5577  1 003463   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003464   000001 702211                    TSX2  ! 1,X1

     1777     5578    5                       END;
     1778     5579         /***
     1779     5580                *** For RANDOM and IDS, check record "key".
     1780     5581                ***/
     1781     5582    4                   CALL HFC$CACHECLR; /* Clear cache to access real buffer contents */

   5582  1 003465   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 003466   000000 701000 xent               TSX1    HFC$CACHECLR
         1 003467   000000 011000                    NOP     0

     1782     5583    4                    CRNTKEY = AFPOOL$->ALIGNED_BASED_WORD;

   5583  1 003470   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 003471   000000 235100                    LDA     0,,PR0
         1 003472   200063 755100                    STA     CRNTKEY,,AUTO

     1783     5584    4                    F$DCB.TAPTYP.HAVLASTKEY = %YES#;

   5584  1 003473   200030 471500                    LDP1    JDCB$,,AUTO
         1 003474   000040 236003                    LDQ     32,DU
         1 003475   100067 256100                    ORSQ    55,,PR1

     1784     5585    4                    F$DCB.LASTKEY = CRNTKEY; /* Note: key returned from LASTKEY  */

   5585  1 003476   100065 755100                    STA     53,,PR1

     1785     5586    5                    IF FRSTKEY = -123456789 THEN DO; /* First record of group    */

   5586  1 003477   200065 235100                    LDA     FRSTKEY,,AUTO
         1 003500   000026 115000 2                  CMPA    22
         1 003501   003525 601000 1                  TNZ     s:5597

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:299  
     1786     5587    5                       FRSTKEY = AFPOOL$->ALIGNED_BASED_WORD; /* Remember first  */

   5587  1 003502   000000 235100                    LDA     0,,PR0
         1 003503   200065 755100                    STA     FRSTKEY,,AUTO

     1787     5588    5                       NEXTKEY = FRSTKEY;  /* Fake next expected                 */

   5588  1 003504   200067 755100                    STA     NEXTKEY,,AUTO

     1788     5589    5                       N = F$DCB.BLKL;     /* Make SBIN for divide.              */

   5589  1 003505   100033 236100                    LDQ     27,,PR1
         1 003506   000022 772000                    QRL     18
         1 003507   200035 756100                    STQ     N,,AUTO

     1789     5590    5                       MAXMKEY = FRSTKEY   /* Key of first record in buffer      */

   5590  1 003510   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003511   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 003512   200020 236100                    LDQ     DUBYTES,,AUTO
         1 003513   200112 506100                    DIV     @FIELD_LENGTH+2,,AUTO
         1 003514   200065 036100                    ADLQ    FRSTKEY,,AUTO
         1 003515   000001 136007                    SBLQ    1,DL
         1 003516   200066 756100                    STQ     MAXMKEY,,AUTO

     1790     5591    5                           + DUBYTES / (N - RCWSIZE)
              5591                                    /* Number of records containable */
     1791     5592    5                           - 1;            /* Convert to offset value            */
     1792     5593                                                /* Calc key of last record of group   */
     1793     5594    5                       IF FPT$READ_V.KEYR THEN

   5594  1 003517   200024 473500                    LDP3    FPT$,,AUTO
         1 003520   300000 236100                    LDQ     0,,PR3
         1 003521   100000 316007                    CANQ    32768,DL
         1 003522   003525 600000 1                  TZE     s:5597

     1794     5595    5                          CALL FTW_RETURN_KEY_PS1; /* Return first key if requested */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:300  

   5595  1 003523   011474 701000 1                  TSX1    FTW_RETURN_KEY_PS1
         1 003524   000000 011000                    NOP     0

     1795     5596    5                       END;

     1796     5597    5                    IF CRNTKEY ~= NEXTKEY THEN DO;
              5597                             /* Next record not in sequential order?*/

   5597  1 003525   200063 236100                    LDQ     CRNTKEY,,AUTO
         1 003526   200067 116100                    CMPQ    NEXTKEY,,AUTO
         1 003527   003730 600000 1                  TZE     s:5645

     1797     5598    6                       IF CRNTKEY < NEXTKEY THEN DO; /* Way out of order         */

   5598  1 003530   003551 605000 1                  TPL     s:5606

     1798     5599    6                          CALL FTW_BACKUSRBUF ALTRET(JUSTALT); /* Backup 1 record */

   5599  1 003531   004072 701000 1                  TSX1    FTW_BACKUSRBUF
         1 003532   004070 702000 1                  TSX2    JUSTALT

     1799     5600    6                          F$DCB.ARS = RECSIZE; /* Number of bytes read           */

   5600  1 003533   200030 470500                    LDP0    JDCB$,,AUTO
         1 003534   200040 235100                    LDA     RECSIZE,,AUTO
         1 003535   000000 755100                    STA     0,,PR0

     1800     5601    6                          IF F$DCB.OLDIOERR = 1 THEN

   5601  1 003536   000102 236100                    LDQ     66,,PR0
         1 003537   140000 376003                    ANQ     49152,DU
         1 003540   040000 116003                    CMPQ    16384,DU
         1 003541   003544 601000 1                  TNZ     s:5603

     1801     5602    6                             F$DCB.TYC.DI(1) = '1'B;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:301  
   5602  1 003542   000400 236003                    LDQ     256,DU
         1 003543   000002 256100                    ORSQ    2,,PR0

     1802     5603    6                          B$JIT.ERR = E_DI; /*E* FTW-E$DI               */

   5603  1 003544   000023 236000 0                  LDQ     E_DI
         1 003545   000000 471400 xsym               LDP1    B$JIT$
         1 003546   100012 756100                    STQ     10,,PR1

     1803     5604    6                          ALTRETURN;

   5604  1 003547   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003550   000000 702211                    TSX2  ! 0,X1

     1804     5605    6                          END;
     1805     5606    5                       IF RCWSIZE > 0

   5606  1 003551   200036 235100                    LDA     RCWSIZE,,AUTO
         1 003552   003574 604400 1                  TMOZ    s:5613

     1806     5607    6                       THEN DO;            /* Read into FPOOL                    */

     1807     5608    6                          N = F$DCB.ARS - RCWSIZE; /* Number of bytes to move    */

   5608  1 003553   200030 470500                    LDP0    JDCB$,,AUTO
         1 003554   000000 236100                    LDQ     0,,PR0
         1 003555   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003556   200035 756100                    STQ     N,,AUTO

     1808     5609    6                          TEMP$ = PINCRC( AFPOOL$, RCWSIZE );

   5609  1 003557   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 003560   000020 736000                    QLS     16
         1 003561   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 003562   200050 756100                    STQ     TEMP$,,AUTO

     1809     5610    6                          ASEG$->NCHARS = TEMP$->NCHARS;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:302  

   5610  1 003563   200050 471500                    LDP1    TEMP$,,AUTO
         1 003564   200035 720100                    LXL0    N,,AUTO
         1 003565   200011 473500                    LDP3    ASEG$,,AUTO
         1 003566   040140 100540                    MLR     fill='040'O
         1 003567   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 003570   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     1810     5611    6                          TEMP$ = ASEG$;   /* Save record pointer                */

   5611  1 003571   200011 236100                    LDQ     ASEG$,,AUTO
         1 003572   200050 756100                    STQ     TEMP$,,AUTO

     1811     5612    6                          END;

   5612  1 003573   003576 710000 1                  TRA     s:5614

     1812     5613    5                       ELSE TEMP$ = AFPOOL$;

   5613  1 003574   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 003575   200050 756100                    STQ     TEMP$,,AUTO

     1813     5614    5                       IF CRNTKEY <= MAXMKEY

   5614  1 003576   200063 236100                    LDQ     CRNTKEY,,AUTO
         1 003577   200066 116100                    CMPQ    MAXMKEY,,AUTO
         1 003600   003644 605400 1                  TPNZ    s:5625

     1814     5615    6                       THEN DO;            /* Current record is in group         */

     1815     5616    6                          IF RCWSIZE = 0

   5616  1 003601   000000 115003                    CMPA    0,DU
         1 003602   003620 601000 1                  TNZ     s:5621

     1816     5617    7                          THEN DO;         /* Was into user buffer               */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:303  
     1817     5618    7                            AFPOOL$ = PINCRC( AFPOOL$, (CRNTKEY-NEXTKEY)*F$DCB.BLKL );

   5618  1 003603   200067 136100                    SBLQ    NEXTKEY,,AUTO
         1 003604   200030 470500                    LDP0    JDCB$,,AUTO
         1 003605   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 003606   000033 236100                    LDQ     27,,PR0
         1 003607   000022 772000                    QRL     18
         1 003610   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 003611   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 003612   200113 402100                    MPY     @FIELD_LENGTH+3,,AUTO
         1 003613   000020 736000                    QLS     16
         1 003614   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 003615   200007 756100                    STQ     AFPOOL$,,AUTO

     1818     5619    7                             ASEG$ = AFPOOL$;

   5619  1 003616   200011 756100                    STQ     ASEG$,,AUTO

     1819     5620    7                             END;

   5620  1 003617   003632 710000 1                  TRA     s:5622

     1820     5621    6                          ELSE ASEG$ = PINCRC( ASEG$, (CRNTKEY-NEXTKEY)*(F$DCB.BLKL-
              5621                                   RCWSIZE) );

   5621  1 003620   200067 136100                    SBLQ    NEXTKEY,,AUTO
         1 003621   200030 470500                    LDP0    JDCB$,,AUTO
         1 003622   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 003623   000033 236100                    LDQ     27,,PR0
         1 003624   000022 772000                    QRL     18
         1 003625   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003626   200112 402100                    MPY     @FIELD_LENGTH+2,,AUTO
         1 003627   000020 736000                    QLS     16
         1 003630   200011 036100                    ADLQ    ASEG$,,AUTO
         1 003631   200011 756100                    STQ     ASEG$,,AUTO

     1821     5622    6                          N = F$DCB.ARS - RCWSIZE;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:304  

   5622  1 003632   000000 236100                    LDQ     0,,PR0
         1 003633   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003634   200035 756100                    STQ     N,,AUTO

     1822     5623    6                          ASEG$->NCHARS = TEMP$->NCHARS;
              5623                                   /* Move to proper destination */

   5623  1 003635   200050 471500                    LDP1    TEMP$,,AUTO
         1 003636   000000 620006                    EAX0    0,QL
         1 003637   200011 473500                    LDP3    ASEG$,,AUTO
         1 003640   200035 721100                    LXL1    N,,AUTO
         1 003641   040140 100540                    MLR     fill='040'O
         1 003642   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 003643   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     1823     5624    6                          END;

     1824     5625    6                       DO WHILE( NEXTKEY < CRNTKEY AND NEXTKEY <= MAXMKEY );

   5625  1 003644   003675 710000 1                  TRA     s:5632

     1825     5626    6                          TEMP$->ALIGNED_BASED_WORD = -1; /* Mark missing gran   */

   5626  1 003645   000001 335007                    LCA     1,DL
         1 003646   200050 470500                    LDP0    TEMP$,,AUTO
         1 003647   000000 755100                    STA     0,,PR0

     1826     5627    6                          NEXTKEY = NEXTKEY + 1;

   5627  1 003650   200067 054100                    AOS     NEXTKEY,,AUTO

     1827     5628    6                          RECSIZE = RECSIZE + (F$DCB.BLKL-RCWSIZE);
              5628                                   /* Count missing gran */

   5628  1 003651   200030 471500                    LDP1    JDCB$,,AUTO
         1 003652   100033 236100                    LDQ     27,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:305  
         1 003653   000022 772000                    QRL     18
         1 003654   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003655   200040 036100                    ADLQ    RECSIZE,,AUTO
         1 003656   200040 756100                    STQ     RECSIZE,,AUTO

     1828     5629    6                          SEGSIZE = RECSIZE;

   5629  1 003657   200041 756100                    STQ     SEGSIZE,,AUTO

     1829     5630    6                          TEMP$ = PINCRC( TEMP$, F$DCB.BLKL-RCWSIZE );

   5630  1 003660   100033 236100                    LDQ     27,,PR1
         1 003661   000022 772000                    QRL     18
         1 003662   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003663   000020 736000                    QLS     16
         1 003664   200050 036100                    ADLQ    TEMP$,,AUTO
         1 003665   200050 756100                    STQ     TEMP$,,AUTO

     1830     5631    6                          DUBYTES = DUBYTES - (F$DCB.BLKL-RCWSIZE);

   5631  1 003666   100033 236100                    LDQ     27,,PR1
         1 003667   000022 772000                    QRL     18
         1 003670   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003671   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 003672   200020 236100                    LDQ     DUBYTES,,AUTO
         1 003673   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 003674   200020 756100                    STQ     DUBYTES,,AUTO

     1831     5632    6                          END;

   5632  1 003675   200067 236100                    LDQ     NEXTKEY,,AUTO
         1 003676   200063 116100                    CMPQ    CRNTKEY,,AUTO
         1 003677   003702 605000 1                  TPL     s:5633
         1 003700   200066 116100                    CMPQ    MAXMKEY,,AUTO
         1 003701   003645 604400 1                  TMOZ    s:5626

     1832     5633    5                       IF CRNTKEY > MAXMKEY
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:306  

   5633  1 003702   200063 236100                    LDQ     CRNTKEY,,AUTO
         1 003703   200066 116100                    CMPQ    MAXMKEY,,AUTO
         1 003704   003725 604400 1                  TMOZ    s:5642

     1833     5634    6                       THEN DO;            /* Current not in group               */

     1834     5635    6                          CALL FTW_BACKUSRBUF ALTRET(JUSTALT);

   5635  1 003705   004072 701000 1                  TSX1    FTW_BACKUSRBUF
         1 003706   004070 702000 1                  TSX2    JUSTALT

     1835     5636    6                          F$DCB.ARS = RECSIZE;

   5636  1 003707   200030 470500                    LDP0    JDCB$,,AUTO
         1 003710   200040 235100                    LDA     RECSIZE,,AUTO
         1 003711   000000 755100                    STA     0,,PR0

     1836     5637    6                          IF F$DCB.OLDIOERR = 1 THEN

   5637  1 003712   000102 236100                    LDQ     66,,PR0
         1 003713   140000 376003                    ANQ     49152,DU
         1 003714   040000 116003                    CMPQ    16384,DU
         1 003715   003720 601000 1                  TNZ     s:5639

     1837     5638    6                             F$DCB.TYC.DI(1) = '1'B;

   5638  1 003716   000400 236003                    LDQ     256,DU
         1 003717   000002 256100                    ORSQ    2,,PR0

     1838     5639    6                          B$JIT.ERR = E_DI; /*E* ERROR: FTW-E$DI        */

   5639  1 003720   000023 236000 0                  LDQ     E_DI
         1 003721   000000 471400 xsym               LDP1    B$JIT$
         1 003722   100012 756100                    STQ     10,,PR1

     1839     5640    6                          ALTRETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:307  

   5640  1 003723   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 003724   000000 702211                    TSX2  ! 0,X1

     1840     5641    6                          END;
     1841     5642    5                       DATA_INCON = %YES#; /* Data inconsistency occurred        */

   5642  1 003725   400000 236003                    LDQ     -131072,DU
         1 003726   200064 756100                    STQ     DATA_INCON,,AUTO

     1842     5643    5                       END;

   5643  1 003727   003750 710000 1                  TRA     s:5652

     1843     5644    5                    ELSE DO;               /* Next record in sequential order    */

     1844     5645    5                       IF RCWSIZE > 0

   5645  1 003730   200036 235100                    LDA     RCWSIZE,,AUTO
         1 003731   003750 604400 1                  TMOZ    s:5652

     1845     5646    6                       THEN DO;            /* Non-FULL                           */

     1846     5647    6                          N = F$DCB.ARS - RCWSIZE;

   5647  1 003732   200030 470500                    LDP0    JDCB$,,AUTO
         1 003733   000000 236100                    LDQ     0,,PR0
         1 003734   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003735   200035 756100                    STQ     N,,AUTO

     1847     5648    6                          TEMP$ = PINCRC( AFPOOL$, RCWSIZE );

   5648  1 003736   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 003737   000020 736000                    QLS     16
         1 003740   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 003741   200050 756100                    STQ     TEMP$,,AUTO

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:308  
     1848     5649    6                          ASEG$->NCHARS = TEMP$->NCHARS;

   5649  1 003742   200050 471500                    LDP1    TEMP$,,AUTO
         1 003743   200035 720100                    LXL0    N,,AUTO
         1 003744   200011 473500                    LDP3    ASEG$,,AUTO
         1 003745   040140 100540                    MLR     fill='040'O
         1 003746   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 003747   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     1849     5650    6                          END;

     1850     5651    5                       END;

     1851     5652    4                    NEXTKEY = CRNTKEY + 1; /* Next expected key                  */

   5652  1 003750   200063 235100                    LDA     CRNTKEY,,AUTO
         1 003751   000001 035007                    ADLA    1,DL
         1 003752   200067 755100                    STA     NEXTKEY,,AUTO

     1852     5653         /***
     1853     5654                *** SEGSIZE totals number of bytes actually read. RECSIZE totals
     1854     5655                *** number of bytes in all blocks read.
     1855     5656                ***/
     1856     5657    4                    SEGSIZE = RECSIZE + F$DCB.ARS - RCWSIZE; /* # actually returned */

   5657  1 003753   200030 470500                    LDP0    JDCB$,,AUTO
         1 003754   200040 236100                    LDQ     RECSIZE,,AUTO
         1 003755   000000 036100                    ADLQ    0,,PR0
         1 003756   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003757   200041 756100                    STQ     SEGSIZE,,AUTO

     1857     5658    4                    DUBYTES = DUBYTES - (F$DCB.BLKL-RCWSIZE);

   5658  1 003760   000033 236100                    LDQ     27,,PR0
         1 003761   000022 772000                    QRL     18
         1 003762   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003763   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:309  
         1 003764   200020 236100                    LDQ     DUBYTES,,AUTO
         1 003765   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 003766   200020 756100                    STQ     DUBYTES,,AUTO

     1858     5659    4                    IF DUBYTES <= 0

   5659  1 003767   003773 605400 1                  TPNZ    s:5661

     1859     5660    4                    THEN RECSIZE = SEGSIZE;

   5660  1 003770   200041 235100                    LDA     SEGSIZE,,AUTO
         1 003771   200040 755100                    STA     RECSIZE,,AUTO
         1 003772   004000 710000 1                  TRA     s:5662

     1860     5661    4                    ELSE RECSIZE = RECSIZE + (F$DCB.BLKL-RCWSIZE);

   5661  1 003773   000033 236100                    LDQ     27,,PR0
         1 003774   000022 772000                    QRL     18
         1 003775   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 003776   200040 036100                    ADLQ    RECSIZE,,AUTO
         1 003777   200040 756100                    STQ     RECSIZE,,AUTO

     1861     5662    4                    IF RCWSIZE = 0         /* Ready to read next block           */

   5662  1 004000   200036 235100                    LDA     RCWSIZE,,AUTO
         1 004001   004010 601000 1                  TNZ     s:5664

     1862     5663    4                    THEN AFPOOL$ = PINCRC( AFPOOL$, F$DCB.BLKL );

   5663  1 004002   000033 236100                    LDQ     27,,PR0
         1 004003   000022 772000                    QRL     18
         1 004004   000020 736000                    QLS     16
         1 004005   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 004006   200007 756100                    STQ     AFPOOL$,,AUTO
         1 004007   004016 710000 1                  TRA     s:5666

     1863     5664    4                    ELSE ASEG$ = PINCRC( ASEG$, F$DCB.BLKL-RCWSIZE );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:310  

   5664  1 004010   000033 236100                    LDQ     27,,PR0
         1 004011   000022 772000                    QRL     18
         1 004012   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 004013   000020 736000                    QLS     16
         1 004014   200011 036100                    ADLQ    ASEG$,,AUTO
         1 004015   200011 756100                    STQ     ASEG$,,AUTO

     1864     5665    4                    END;

     1865     5666    3                 END;

   5666  1 004016   200020 235100                    LDA     DUBYTES,,AUTO
         1 004017   003300 605400 1                  TPNZ    s:5531

   5664  1 004020                       SETARSRET    null
     1866     5667
     1867     5668    2   SETARSRET: ;
     1868     5669    2              F$DCB.ARS = RECSIZE;

   5669  1 004020   200030 470500                    LDP0    JDCB$,,AUTO
         1 004021   200040 235100                    LDA     RECSIZE,,AUTO
         1 004022   000000 755100                    STA     0,,PR0

     1869     5670    2              IF DATA_INCON THEN B$JIT.ERR = E_DI; /*E* ERROR: FTW-E$DI */

   5670  1 004023   200064 234100                    SZN     DATA_INCON,,AUTO
         1 004024   004030 605000 1                  TPL     s:5671

   5670  1 004025   000023 236000 0                  LDQ     E_DI
         1 004026   000000 471400 xsym               LDP1    B$JIT$
         1 004027   100012 756100                    STQ     10,,PR1

     1870     5671    2              RETURN;

   5671  1 004030   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004031   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:311  

   5670  1 004032                       CHKEOFV      null
     1871     5672
     1872     5673    2   CHKEOFV:   ;                    /* End of file, end of volume (cvol) handling */
     1873     5674    2              N = B$JIT.ERR.CODE;          /* Get error code                     */

   5674  1 004032   000000 470400 xsym               LDP0    B$JIT$
         1 004033   000012 236100                    LDQ     10,,PR0
         1 004034   000003 772000                    QRL     3
         1 004035   037777 376007                    ANQ     16383,DL
         1 004036   200035 756100                    STQ     N,,AUTO

     1874     5675    2              IF N ~= %E$EOF AND N ~= %E$EOVOL THEN ALTRETURN; /* Serious stuff  */

   5675  1 004037   000006 116007                    CMPQ    6,DL
         1 004040   004045 600000 1                  TZE     s:5676
         1 004041   001313 116007                    CMPQ    715,DL
         1 004042   004045 600000 1                  TZE     s:5676

   5675  1 004043   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004044   000000 702211                    TSX2  ! 0,X1

     1875     5676    2              F$DCB.ARS = SEGSIZE;

   5676  1 004045   200030 471500                    LDP1    JDCB$,,AUTO
         1 004046   200041 235100                    LDA     SEGSIZE,,AUTO
         1 004047   100000 755100                    STA     0,,PR1

     1876     5677    2              IF RECSIZE > 0

   5677  1 004050   200040 236100                    LDQ     RECSIZE,,AUTO
         1 004051   004066 604400 1                  TMOZ    s:5685

     1877     5678    3              THEN DO;              /* Read something...return it before eof/eov */

     1878     5679    3                 F$DCB.MUST_CVOL = %NO#;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:312  
   5679  1 004052   000011 236000 2                  LDQ     9
         1 004053   100064 356100                    ANSQ    52,,PR1

     1879     5680    3                 IF DATA_INCON

   5680  1 004054   200064 234100                    SZN     DATA_INCON,,AUTO
         1 004055   004062 605000 1                  TPL     s:5682

     1880     5681    3                 THEN B$JIT.ERR = E_DI; /*E* ERROR: FTW-E$DI */

   5681  1 004056   000023 236000 0                  LDQ     E_DI
         1 004057   000000 470400 xsym               LDP0    B$JIT$
         1 004060   000012 756100                    STQ     10,,PR0
         1 004061   004064 710000 1                  TRA     s:5683

     1881     5682    3                 ELSE B$JIT.ERR = '0'B;

   5682  1 004062   000000 470400 xsym               LDP0    B$JIT$
         1 004063   000012 450100                    STZ     10,,PR0

     1882     5683    3                 RETURN;

   5683  1 004064   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004065   000001 702211                    TSX2  ! 1,X1

     1883     5684    3                 END;
     1884     5685    2              F$DCB.EOP = WHOKNOWSEOP#;

   5685  1 004066   000003 236000 2                  LDQ     3
         1 004067   100064 356100                    ANSQ    52,,PR1

   5685  1 004070                       JUSTALT      null
     1885     5686
     1886     5687    2   JUSTALT:   ;
     1887     5688    2              ALTRETURN;

   5688  1 004070   200062 221300                    LDX1  ! KEYS+1,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:313  
         1 004071   000000 702211                    TSX2  ! 0,X1

     1888     5689
     1889     5690        /****************************************/
     1890     5691
     1891     5692    2   FTW_BACKUSRBUF: PROC ALTRET;

   5692  1 004072   200070 741300       FTW_BACKUSR* STX1  ! TEMP+1,,AUTO

     1892     5693        /*F*     NAME: FTW_BACKUSRBUF
     1893     5694                 PURPOSE: Back up to read already read record.
     1894     5695         ***/
     1895     5696
     1896     5697        /********************/
     1897     5698
     1898     5699    3                 F$DCB.ARS = -1;           /* Back up 1 rec                      */

   5699  1 004073   000001 335007                    LCA     1,DL
         1 004074   200030 470500                    LDP0    JDCB$,,AUTO
         1 004075   000000 755100                    STA     0,,PR0

     1899     5700    3                 CALL FTI$SPREC ALTRET(JUSTALT);

   5700  1 004076   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 004077   000000 701000 xent               TSX1    FTI$SPREC
         1 004100   004107 702000 1                  TSX2    JUSTALT

     1900     5701    3                 F$DCB.PRECNO = F$DCB.PRECNO - 1;

   5701  1 004101   200030 470500                    LDP0    JDCB$,,AUTO
         1 004102   000001 336007                    LCQ     1,DL
         1 004103   000072 056100                    ASQ     58,,PR0

     1901     5702    3                 F$DCB.CRECNO = F$DCB.CRECNO - 1;

   5702  1 004104   000071 056100                    ASQ     57,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:314  
     1902     5703    3                 RETURN;

   5703  1 004105   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 004106   000001 702211                    TSX2  ! 1,X1

   5702  1 004107                       JUSTALT      null
     1903     5704
     1904     5705    3   JUSTALT:      ;
     1905     5706    3                 ALTRETURN;

   5706  1 004107   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 004110   000000 702211                    TSX2  ! 0,X1

     1906     5707
     1907     5708    3         END FTW_BACKUSRBUF;
     1908     5709
     1909     5710    2      END FTW_RUSRBUF;
     1910     5711        /*********************************************************************/
     1911     5712        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:315  
     1912     5713        /*********************************************************************/
     1913     5714    1   FTW_WUSRBUF: PROC ALTRET;

   5714  1 004111   200062 741300       FTW_WUSRBUF  STX1  ! KEYS+1,,AUTO

     1914     5715        /*F*     NAME: FTW_WUSRBUF
     1915     5716                 PURPOSE: Write for user buffer formats.
     1916     5717         ***/
     1917     5718
     1918     5719        /********************/
     1919     5720
     1920     5721         /***
     1921     5722          *** Can't exceed block size for UNDEF or RESTRICT files.
     1922     5723          ***/
     1923     5724
     1924     5725    2              IF F$DCB.BLKL < DUBYTES

   5725  1 004112   200030 470500                    LDP0    JDCB$,,AUTO
         1 004113   000033 236100                    LDQ     27,,PR0
         1 004114   000022 772000                    QRL     18
         1 004115   200020 116100                    CMPQ    DUBYTES,,AUTO
         1 004116   004133 605000 1                  TPL     s:5736

     1925     5726    2              THEN IF F$DCB.ORG = %UNDEF# OR F$DCB.ORG = %RESTRICT#

   5726  1 004117   000032 236100                    LDQ     26,,PR0
         1 004120   777000 376003                    ANQ     -512,DU
         1 004121   021000 116003                    CMPQ    8704,DU
         1 004122   004125 600000 1                  TZE     s:5728
         1 004123   022000 116003                    CMPQ    9216,DU
         1 004124   004133 601000 1                  TNZ     s:5736

     1926     5727    3                 THEN DO;                  /* Tried to exceed block size         */

     1927     5728    3                    B$JIT.ERR = E_LD; /*E* ERROR: FTW-E$LD */

   5728  1 004125   000034 236000 0                  LDQ     E_LD
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:316  
         1 004126   000000 471400 xsym               LDP1    B$JIT$
         1 004127   100012 756100                    STQ     10,,PR1

     1928     5729    3                    DUBYTES = F$DCB.BLKL;  /* Truncate                           */

   5729  1 004130   000033 236100                    LDQ     27,,PR0
         1 004131   000022 772000                    QRL     18
         1 004132   200020 756100                    STQ     DUBYTES,,AUTO

     1929     5730    3                    END;

     1930     5731
     1931     5732         /***
     1932     5733          *** Convert to EBCDIC if required.
     1933     5734          ***/
     1934     5735
     1935     5736    2              IF F$DCB.CNVRT AND NOT FPT$READ_V.DVBYTE.TRANS

   5736  1 004133   000031 236100                    LDQ     25,,PR0
         1 004134   200000 316007                    CANQ    65536,DL
         1 004135   004173 600000 1                  TZE     s:5748
         1 004136   200024 471500                    LDP1    FPT$,,AUTO
         1 004137   100003 236100                    LDQ     3,,PR1
         1 004140   020000 316003                    CANQ    8192,DU
         1 004141   004173 601000 1                  TNZ     s:5748

     1936     5737    3              THEN DO;                     /* Conversion requested               */

     1937     5738    3                 CALL HFF$WRITE1(DUB$) ALTRET(NOTRANSLATE);

   5738  1 004142   200017 633500                    EPPR3   DUB$,,AUTO
         1 004143   200112 453500                    STP3    @FIELD_LENGTH+2,,AUTO
         1 004144   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 004145   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004146   000000 701000 xent               TSX1    HFF$WRITE1
         1 004147   004553 702000 1                  TSX2    NOTRANSLATE

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:317  
     1938     5739    3                 IF F$DCB.EBCDIC

   5739  1 004150   200030 470500                    LDP0    JDCB$,,AUTO
         1 004151   000031 236100                    LDQ     25,,PR0
         1 004152   100000 316007                    CANQ    32768,DL
         1 004153   004164 600000 1                  TZE     s:5741

     1939     5740    3                 THEN CALL XLATE(DUB$->CHARS, F_ASC_EBC, DUB$->CHARS );

   5740  1 004154   200017 471500                    LDP1    DUB$,,AUTO
         1 004155   200020 720100                    LXL0    DUBYTES,,AUTO
         1 004156   000000 473400 xsym               LDP3    B$XL_ASC_EBC$
         1 004157   040140 160540                    MVT     fill='040'O
         1 004160   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004161   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004162   300000 000100                    ARG     0,,PR3
         1 004163   004173 710000 1                  TRA     s:5748

     1940     5741    3                 ELSE CALL XLATE(DUB$->CHARS, F_ASC_ASC, DUB$->CHARS );

   5741  1 004164   200017 471500                    LDP1    DUB$,,AUTO
         1 004165   200020 720100                    LXL0    DUBYTES,,AUTO
         1 004166   000000 473400 xsym               LDP3    B$XL_MOD_256$
         1 004167   040140 160540                    MVT     fill='040'O
         1 004170   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004171   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004172   300000 000100                    ARG     0,,PR3

     1941     5742    3                 END;

     1942     5743
     1943     5744         /***
     1944     5745          *** FPOOL is needed for non-FULL write to RANDOM or IDS file.
     1945     5746          ***/
     1946     5747
     1947     5748    2              IF NOT FPT$WRITE_V.FULL AND (F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#)

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:318  
   5748  1 004173   200024 471500                    LDP1    FPT$,,AUTO
         1 004174   100000 236100                    LDQ     0,,PR1
         1 004175   010000 316007                    CANQ    4096,DL
         1 004176   004212 601000 1                  TNZ     s:5753
         1 004177   000032 236100                    LDQ     26,,PR0
         1 004200   777000 376003                    ANQ     -512,DU
         1 004201   003000 116003                    CMPQ    1536,DU
         1 004202   004205 600000 1                  TZE     s:5750
         1 004203   007000 116003                    CMPQ    3584,DU
         1 004204   004212 601000 1                  TNZ     s:5753

     1948     5749    3              THEN DO;                     /* Buffer needed                      */

     1949     5750    3                 CALL FTW_GETAFPOOL$;

   5750  1 004205   014132 701000 1                  TSX1    FTW_GETAFPOOL$
         1 004206   000000 011000                    NOP     0

     1950     5751    3                 RCWSIZE = 4;              /* Indicate non-FULL                  */

   5751  1 004207   000004 235007                    LDA     4,DL
         1 004210   200036 755100                    STA     RCWSIZE,,AUTO

     1951     5752    3                 END;

   5752  1 004211   004213 710000 1                  TRA     s:5759

     1952     5753    2              ELSE RCWSIZE = 0;            /* Indicate FULL                      */

   5753  1 004212   200036 450100                    STZ     RCWSIZE,,AUTO

     1953     5754
     1954     5755         /***
     1955     5756          *** If a key is specified for RANDOM or IDS files, use it.
     1956     5757          ***/
     1957     5758
     1958     5759    2              IF F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS#
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:319  

   5759  1 004213   200030 470500                    LDP0    JDCB$,,AUTO
         1 004214   000032 236100                    LDQ     26,,PR0
         1 004215   777000 376003                    ANQ     -512,DU
         1 004216   003000 116003                    CMPQ    1536,DU
         1 004217   004222 600000 1                  TZE     s:5761
         1 004220   007000 116003                    CMPQ    3584,DU
         1 004221   004271 601000 1                  TNZ     s:5789

     1959     5760    3              THEN DO;                     /* RANDOM, IDS or RESTRICT            */

     1960     5761    3                 CALL HFF$DSIZ(1,TEMP) ALTRET(HOPETEMP0); /* Check if key specified */

   5761  1 004222   200047 631500                    EPPR1   TEMP,,AUTO
         1 004223   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 004224   000007 236000 2                  LDQ     7
         1 004225   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 004226   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 004227   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 004230   000000 701000 xent               TSX1    HFF$DSIZ
         1 004231   004232 702000 1                  TSX2    HOPETEMP0

   5761  1 004232                       HOPETEMP0    null
     1961     5762    3   HOPETEMP0:    ;
     1962     5763    3                 IF TEMP > 0

   5763  1 004232   200047 235100                    LDA     TEMP,,AUTO
         1 004233   004271 604400 1                  TMOZ    s:5789

     1963     5764    4                 THEN DO;

     1964     5765    4                    TEMPC = B$PS$(1)->FOUR_BASED_CHARS;

   5765  1 004234   000001 470400 xsym               LDP0    B$PS$+1
         1 004235   040100 100500                    MLR     fill='040'O
         1 004236   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 004237   200047 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:320  

     1965     5766    4                    IF TEMP < 0

   5766  1 004240   200047 235100                    LDA     TEMP,,AUTO
         1 004241   004247 605000 1                  TPL     s:5771

     1966     5767    5                    THEN DO;               /* Illegal RANDOM or IDS key          */

     1967     5768    5                       B$JIT.ERR = E_RANBADBLK; /*E* ERROR: FTW-E$RANBADBLK */

   5768  1 004242   000046 236000 0                  LDQ     E_RANBADBLK
         1 004243   000000 471400 xsym               LDP1    B$JIT$
         1 004244   100012 756100                    STQ     10,,PR1

     1968     5769    5                       ALTRETURN;

   5769  1 004245   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004246   000000 702211                    TSX2  ! 0,X1

     1969     5770    5                       END;
     1970     5771    4                    IF F$DCB.ACS = %SEQUEN# AND F$DCB.TAPTYP.HAVLASTKEY

   5771  1 004247   200030 471500                    LDP1    JDCB$,,AUTO
         1 004250   100036 236100                    LDQ     30,,PR1
         1 004251   000777 376007                    ANQ     511,DL
         1 004252   000001 116007                    CMPQ    1,DL
         1 004253   004267 601000 1                  TNZ     s:5779
         1 004254   100067 236100                    LDQ     55,,PR1
         1 004255   000040 316003                    CANQ    32,DU
         1 004256   004267 600000 1                  TZE     s:5779

     1971     5772    5                    THEN DO;               /* Check key order                    */

     1972     5773    5                       IF F$DCB.LASTKEY >= TEMP

   5773  1 004257   100065 236100                    LDQ     53,,PR1
         1 004260   200047 116100                    CMPQ    TEMP,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:321  
         1 004261   004267 604000 1                  TMI     s:5779

     1973     5774    6                       THEN DO;

     1974     5775    6                          B$JIT.ERR = E_KEYORDER; /*E* ERROR: FTW-E$KEYORDER */

   5775  1 004262   000033 236000 0                  LDQ     E_KEYORDER
         1 004263   000000 473400 xsym               LDP3    B$JIT$
         1 004264   300012 756100                    STQ     10,,PR3

     1975     5776    6                          ALTRETURN;

   5776  1 004265   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004266   000000 702211                    TSX2  ! 0,X1

     1976     5777    6                          END;
     1977     5778    5                       END;
     1978     5779    4                    F$DCB.LASTKEY = TEMP - 1; /* Use user's key                  */

   5779  1 004267   000001 135007                    SBLA    1,DL
         1 004270   100065 755100                    STA     53,,PR1

     1979     5780    4                    END;

     1980     5781    3                 END;

     1981     5782
     1982     5783         /***
     1983     5784          *** For RANDOM and IDS files, break up buffer into DCB.BLKL
     1984     5785          *** byte blocks.  Write the entire buffer for UNDEF and RESTRICT
     1985     5786          *** files.
     1986     5787          ***/
     1987     5788
     1988     5789    2              IF RCWSIZE = 0 THEN

   5789  1 004271   200036 235100                    LDA     RCWSIZE,,AUTO
         1 004272   004276 601000 1                  TNZ     s:5792
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:322  

     1989     5790    2                 AFPOOL$ = DUB$;           /* Write from user's buffer           */

   5790  1 004273   200017 236100                    LDQ     DUB$,,AUTO
         1 004274   200007 756100                    STQ     AFPOOL$,,AUTO
         1 004275   004300 710000 1                  TRA     s:5793

     1990     5791    2              ELSE
     1991     5792    2                 ASEG$ = DUB$;             /* Write from FPOOL buffer            */

   5792  1 004276   200017 236100                    LDQ     DUB$,,AUTO
         1 004277   200011 756100                    STQ     ASEG$,,AUTO

     1992     5793    2              N = 0;                       /* Record count                       */

   5793  1 004300   200035 450100                    STZ     N,,AUTO

     1993     5794    3              DO WHILE(DUBYTES > 0);

   5794  1 004301   200020 235100                    LDA     DUBYTES,,AUTO
         1 004302   004540 604400 1                  TMOZ    s:5853

     1994     5795    4                 IF DUBYTES+RCWSIZE < 4 THEN DO; /* Record too small             */

   5795  1 004303   200020 236100                    LDQ     DUBYTES,,AUTO
         1 004304   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 004305   000004 116007                    CMPQ    4,DL
         1 004306   004314 605000 1                  TPL     s:5799

     1995     5796    4                    B$JIT.ERR = E_SMALLRECL; /*E* ERROR: FTW-E$SMALLRECL */

   5796  1 004307   000047 236000 0                  LDQ     E_SMALLRECL
         1 004310   000000 470400 xsym               LDP0    B$JIT$
         1 004311   000012 756100                    STQ     10,,PR0

     1996     5797    4                    ALTRETURN;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:323  
   5797  1 004312   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004313   000000 702211                    TSX2  ! 0,X1

     1997     5798    4                    END;
     1998     5799    4                 IF F$DCB.MUST_CVOL THEN DO; /* CVOL before next write           */

   5799  1 004314   200030 470500                    LDP0    JDCB$,,AUTO
         1 004315   000064 236100                    LDQ     52,,PR0
         1 004316   000002 316003                    CANQ    2,DU
         1 004317   004337 600000 1                  TZE     s:5804

     1999     5800    4                    F$DCB.NOEOF = %YES#;   /* Indicate output CVOL               */

   5800  1 004320   400000 236007                    LDQ     -131072,DL
         1 004321   000064 256100                    ORSQ    52,,PR0

     2000     5801    4                    CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(JUSTALT);

   5801  1 004322   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 004323   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 004324   000031 236000 2                  LDQ     25
         1 004325   200115 756100                    STQ     @FIELD_LENGTH+5,,AUTO
         1 004326   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 004327   200114 451500                    STP1    @FIELD_LENGTH+4,,AUTO
         1 004330   200022 633500                    EPPR3   EOXL,,AUTO
         1 004331   200113 453500                    STP3    @FIELD_LENGTH+3,,AUTO
         1 004332   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 004333   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 004334   000000 701000 xent               TSX1    FTL$CVOL
         1 004335   004556 702000 1                  TSX2    JUSTALT

     2001     5802    4                    N = 0;

   5802  1 004336   200035 450100                    STZ     N,,AUTO

     2002     5803    4                    END;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:324  
     2003     5804    3                 F$DCB.ARS = MINIMUM( DUBYTES+RCWSIZE, F$DCB.BLKL );

   5804  1 004337   200020 236100                    LDQ     DUBYTES,,AUTO
         1 004340   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 004341   200030 470500                    LDP0    JDCB$,,AUTO
         1 004342   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 004343   000033 236100                    LDQ     27,,PR0
         1 004344   000022 772000                    QRL     18
         1 004345   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 004346   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 004347   004354 604000 1                  TMI     s:5804+13
         1 004350   200113 116100                    CMPQ    @FIELD_LENGTH+3,,AUTO
         1 004351   004354 602000 1                  TNC     s:5804+13
         1 004352   004354 600000 1                  TZE     s:5804+13
         1 004353   200113 236100                    LDQ     @FIELD_LENGTH+3,,AUTO
         1 004354   000000 756100                    STQ     0,,PR0

     2004     5805    3                 DUBYTES = DUBYTES - F$DCB.ARS - RCWSIZE;
              5805                          /* Calc # bytes for next write */

   5805  1 004355   200020 236100                    LDQ     DUBYTES,,AUTO
         1 004356   000000 136100                    SBLQ    0,,PR0
         1 004357   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 004360   200020 756100                    STQ     DUBYTES,,AUTO

     2005     5806    4                 IF F$DCB.ORG = %RANDOM# OR F$DCB.ORG = %IDS# THEN DO;

   5806  1 004361   000032 236100                    LDQ     26,,PR0
         1 004362   777000 376003                    ANQ     -512,DU
         1 004363   003000 116003                    CMPQ    1536,DU
         1 004364   004367 600000 1                  TZE     s:5808
         1 004365   007000 116003                    CMPQ    3584,DU
         1 004366   004375 601000 1                  TNZ     s:5812

     2006     5807                                                /* Supply RANDOM or IDS key           */
     2007     5808    4                    F$DCB.LASTKEY = F$DCB.LASTKEY + 1;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:325  
   5808  1 004367   000065 054100                    AOS     53,,PR0

     2008     5809    4                    AFPOOL$->ALIGNED_BASED_WORD = F$DCB.LASTKEY;

   5809  1 004370   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 004371   000065 235100                    LDA     53,,PR0
         1 004372   100000 755100                    STA     0,,PR1

     2009     5810    4                    F$DCB.TAPTYP.HAVLASTKEY = %YES#;

   5810  1 004373   000040 236003                    LDQ     32,DU
         1 004374   000067 256100                    ORSQ    55,,PR0

     2010     5811    4                    END;

     2011     5812    4                 IF RCWSIZE > 0 THEN DO;   /* Move record to FPOOL               */

   5812  1 004375   200036 235100                    LDA     RCWSIZE,,AUTO
         1 004376   004414 604400 1                  TMOZ    s:5817

     2012     5813    4                    CHARZLEN = F$DCB.ARS - RCWSIZE;
              5813                             /* Number of bytes from user buffer */

   5813  1 004377   000000 236100                    LDQ     0,,PR0
         1 004400   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 004401   200013 756100                    STQ     CHARZLEN,,AUTO

     2013     5814    4                    TEMP$ = PINCRC( AFPOOL$, RCWSIZE );

   5814  1 004402   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 004403   000020 736000                    QLS     16
         1 004404   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 004405   200050 756100                    STQ     TEMP$,,AUTO

     2014     5815    4                    TEMP$->CHARZ = ASEG$->CHARZ;

   5815  1 004406   200011 471500                    LDP1    ASEG$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:326  
         1 004407   200013 720100                    LXL0    CHARZLEN,,AUTO
         1 004410   200050 473500                    LDP3    TEMP$,,AUTO
         1 004411   040140 100540                    MLR     fill='040'O
         1 004412   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 004413   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     2015     5816    4                    END;

     2016     5817    4                 CALL FTW_WRFPOOL WHENALTRETURN DO;

   5817  1 004414   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 004415   004417 702000 1                  TSX2    s:5818
         1 004416   004460 710000 1                  TRA     s:5827

     2017     5818    4                    IF B$JIT.ERR.CODE ~= %E$IOERR OR F$DCB.IASN = %OD# THEN

   5818  1 004417   000000 470400 xsym               LDP0    B$JIT$
         1 004420   000012 236100                    LDQ     10,,PR0
         1 004421   377770 376007                    ANQ     131064,DL
         1 004422   000100 116007                    CMPQ    64,DL
         1 004423   004431 601000 1                  TNZ     s:5819
         1 004424   200030 471500                    LDP1    JDCB$,,AUTO
         1 004425   100103 236100                    LDQ     67,,PR1
         1 004426   000777 376007                    ANQ     511,DL
         1 004427   000012 116007                    CMPQ    10,DL
         1 004430   004433 601000 1                  TNZ     s:5820

     2018     5819    4                       ALTRETURN;

   5819  1 004431   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004432   000000 702211                    TSX2  ! 0,X1

     2019     5820    4                    FT$DDT.POSLOST = %NO#;

   5820  1 004433   200016 473500                    LDP3    DDDT$,,AUTO
         1 004434   000030 236000 2                  LDQ     24
         1 004435   300006 356100                    ANSQ    6,,PR3
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:327  

     2020     5821    4                    IF (F$DCB.CVOL) OR (NOT F$DCB.IOERROK AND NOT IOERROK) THEN

   5821  1 004436   100031 236100                    LDQ     25,,PR1
         1 004437   000020 316007                    CANQ    16,DL
         1 004440   004445 601000 1                  TNZ     s:5822
         1 004441   020000 316003                    CANQ    8192,DU
         1 004442   004447 601000 1                  TNZ     s:5823
         1 004443   200027 234100                    SZN     IOERROK,,AUTO
         1 004444   004447 604000 1                  TMI     s:5823

     2021     5822    4                       ALTRETURN;

   5822  1 004445   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004446   000000 702211                    TSX2  ! 0,X1

     2022     5823    4                    CALL FTW_IOERRCVOL ALTRET(JUSTALT);

   5823  1 004447   007462 701000 1                  TSX1    FTW_IOERRCVOL
         1 004450   004556 702000 1                  TSX2    JUSTALT

     2023     5824    4                    F$DCB.PRECNO = F$DCB.PRECNO - 1;

   5824  1 004451   200030 470500                    LDP0    JDCB$,,AUTO
         1 004452   000001 336007                    LCQ     1,DL
         1 004453   000072 056100                    ASQ     58,,PR0

     2024     5825    4                    N = 1 - F$DCB.PRECNO;

   5825  1 004454   000072 235100                    LDA     58,,PR0
         1 004455   000027 675000 xsym               ERA     B_VECTNIL+23
         1 004456   000002 035007                    ADLA    2,DL
         1 004457   200035 755100                    STA     N,,AUTO

     2025     5826    4                    END;

     2026     5827    3                 N = N - 1;                /* One more record written            */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:328  

   5827  1 004460   000001 336007                    LCQ     1,DL
         1 004461   200035 056100                    ASQ     N,,AUTO

     2027     5828    3                 F$DCB.PRECNO = F$DCB.PRECNO + 1;

   5828  1 004462   200030 470500                    LDP0    JDCB$,,AUTO
         1 004463   000072 054100                    AOS     58,,PR0

     2028     5829    3                 F$DCB.CRECNO = F$DCB.CRECNO + 1;

   5829  1 004464   000071 054100                    AOS     57,,PR0

     2029     5830    4                 IF F$DCB.TYC.EOT(1) THEN DO; /*CVOL necessary                   */

   5830  1 004465   000002 236100                    LDQ     2,,PR0
         1 004466   100000 316003                    CANQ    32768,DU
         1 004467   004516 600000 1                  TZE     s:5843

     2030     5831    4                    F$DCB.MUST_CVOL = %YES#; /* Nothing before CVOL              */

   5831  1 004470   000002 236003                    LDQ     2,DU
         1 004471   000064 256100                    ORSQ    52,,PR0

     2031     5832    4                    IF F$DCB.CVOL THEN

   5832  1 004472   000031 236100                    LDQ     25,,PR0
         1 004473   000020 316007                    CANQ    16,DL
         1 004474   004516 600000 1                  TZE     s:5843

     2032     5833    4                       IF DUBYTES = 0 THEN

   5833  1 004475   200020 235100                    LDA     DUBYTES,,AUTO
         1 004476   004503 601000 1                  TNZ     s:5836

     2033     5834    4                          B$JIT.ERR = E_EOVOL; /*E* ERROR: FTW-E$EOVOL */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:329  
   5834  1 004477   000027 236000 0                  LDQ     E_EOVOL
         1 004500   000000 471400 xsym               LDP1    B$JIT$
         1 004501   100012 756100                    STQ     10,,PR1
         1 004502   004516 710000 1                  TRA     s:5843

     2034     5835    5                       ELSE DO;
              5835                                /* Back up over the records written during this write */

     2035     5836    5                          F$DCB.TAPTYP.HAVLASTKEY = %NO#;

   5836  1 004503   000032 236000 2                  LDQ     26
         1 004504   000067 356100                    ANSQ    55,,PR0

     2036     5837    5                          F$DCB.ARS = N;

   5837  1 004505   200035 235100                    LDA     N,,AUTO
         1 004506   000000 755100                    STA     0,,PR0

     2037     5838    5                          CALL FTI$SPREC ALTRET(JUSTALT);

   5838  1 004507   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 004510   000000 701000 xent               TSX1    FTI$SPREC
         1 004511   004556 702000 1                  TSX2    JUSTALT

     2038     5839    5                          B$JIT.ERR = E_EOVOLS; /*E* ERROR: FTW-E$EOVOLS */

   5839  1 004512   000030 236000 0                  LDQ     E_EOVOLS
         1 004513   000000 470400 xsym               LDP0    B$JIT$
         1 004514   000012 756100                    STQ     10,,PR0

     2039     5840    5                          DUBYTES = 0;     /* End write                          */

   5840  1 004515   200020 450100                    STZ     DUBYTES,,AUTO

     2040     5841    5                          END;

     2041     5842    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:330  

     2042     5843    3                 IF RCWSIZE = 0 THEN       /* On to next record                  */

   5843  1 004516   200036 235100                    LDA     RCWSIZE,,AUTO
         1 004517   004527 601000 1                  TNZ     s:5846

     2043     5844    3                    AFPOOL$ = PINCRC( AFPOOL$, F$DCB.BLKL );

   5844  1 004520   200030 470500                    LDP0    JDCB$,,AUTO
         1 004521   000033 236100                    LDQ     27,,PR0
         1 004522   000022 772000                    QRL     18
         1 004523   000020 736000                    QLS     16
         1 004524   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 004525   200007 756100                    STQ     AFPOOL$,,AUTO
         1 004526   004536 710000 1                  TRA     s:5847

     2044     5845    3                 ELSE
     2045     5846    3                    ASEG$ = PINCRC( ASEG$, F$DCB.BLKL-RCWSIZE );

   5846  1 004527   200030 470500                    LDP0    JDCB$,,AUTO
         1 004530   000033 236100                    LDQ     27,,PR0
         1 004531   000022 772000                    QRL     18
         1 004532   200036 136100                    SBLQ    RCWSIZE,,AUTO
         1 004533   000020 736000                    QLS     16
         1 004534   200011 036100                    ADLQ    ASEG$,,AUTO
         1 004535   200011 756100                    STQ     ASEG$,,AUTO

     2046     5847    3                 END;

   5847  1 004536   200020 236100                    LDQ     DUBYTES,,AUTO
         1 004537   004303 605400 1                  TPNZ    s:5795

     2047     5848
     2048     5849         /***
     2049     5850          *** Done.
     2050     5851          ***/
     2051     5852
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:331  
     2052     5853    2              F$DCB.FMOD = %YES#;          /* File modified                      */

   5853  1 004540   200030 470500                    LDP0    JDCB$,,AUTO
         1 004541   040000 236003                    LDQ     16384,DU
         1 004542   000064 256100                    ORSQ    52,,PR0

     2053     5854    2              F$DCB.NOEOF = %YES#;         /* Need EOF/EOV labels                */

   5854  1 004543   400000 236007                    LDQ     -131072,DL
         1 004544   000064 256100                    ORSQ    52,,PR0

     2054     5855    2              F$DCB.LSTBLK = %YES#;        /* Known last block of file           */

   5855  1 004545   000001 236007                    LDQ     1,DL
         1 004546   000064 256100                    ORSQ    52,,PR0

     2055     5856    2              F$DCB.EOP = WRITEEOP#;

   5856  1 004547   003000 236003                    LDQ     1536,DU
         1 004550   000064 256100                    ORSQ    52,,PR0

     2056     5857    2              RETURN;

   5857  1 004551   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004552   000001 702211                    TSX2  ! 1,X1

   5856  1 004553                       NOTRANSLATE  null
     2057     5858
     2058     5859    2   NOTRANSLATE: ;
     2059     5860    2              B$JIT.ERR = E_CANTTRANSLATE; /*E* FTW-E$CANTTRANSLATE */

   5860  1 004553   000021 236000 0                  LDQ     E_CANTTRANSLATE
         1 004554   000000 470400 xsym               LDP0    B$JIT$
         1 004555   000012 756100                    STQ     10,,PR0

   5860  1 004556                       JUSTALT      null
     2060     5861
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:332  
     2061     5862    2   JUSTALT:   ;
     2062     5863    2              ALTRETURN;

   5863  1 004556   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004557   000000 702211                    TSX2  ! 0,X1

     2063     5864
     2064     5865    2      END FTW_WUSRBUF;
     2065     5866        /*********************************************************************/
     2066     5867        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:333  
     2067     5868        /*********************************************************************/
     2068     5869    1   FTW_PRUSRBUF: PROC ALTRET;

   5869  1 004560   200062 741300       FTW_PRUSRBUF STX1  ! KEYS+1,,AUTO

     2069     5870        /*F*     NAME: FTW_PRUSRBUF
     2070     5871                 PURPOSE: Position record (PRECORD) for user buffer formats.
     2071     5872         ***/
     2072     5873
     2073     5874        /********************/
     2074     5875
     2075     5876    2              DCRECNO = F$DCB.CRECNO;      /* Save current position              */

   5876  1 004561   200030 470500                    LDP0    JDCB$,,AUTO
         1 004562   000071 235100                    LDA     57,,PR0
         1 004563   200014 755100                    STA     DCRECNO,,AUTO

     2076     5877
     2077     5878         /***
     2078     5879          *** If N > 0, position forward.
     2079     5880          ***/
     2080     5881
     2081     5882    2              IF N > 0

   5882  1 004564   200035 236100                    LDQ     N,,AUTO
         1 004565   004700 604400 1                  TMOZ    s:5924

     2082     5883    3              THEN DO;                     /* Position forward                   */

     2083     5884    3                 IF F$DCB.LSTBLK

   5884  1 004566   000064 236100                    LDQ     52,,PR0
         1 004567   000001 316007                    CANQ    1,DL
         1 004570   004577 600000 1                  TZE     s:5890

     2084     5885    4                 THEN DO;                  /* Already at eof                     */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:334  
     2085     5886    4                    B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */

   5886  1 004571   000025 236000 0                  LDQ     E_EOF
         1 004572   000000 471400 xsym               LDP1    B$JIT$
         1 004573   100012 756100                    STQ     10,,PR1

     2086     5887    4                    F$DCB.ARS = 0;         /* Didn't move                        */

   5887  1 004574   000000 450100                    STZ     0,,PR0

     2087     5888    4                    RETURN;

   5888  1 004575   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004576   000001 702211                    TSX2  ! 1,X1

     2088     5889    4                    END;
     2089     5890    4                 DO WHILE(N > 0);          /* While file sections exist          */

   5890  1 004577   200035 235100                    LDA     N,,AUTO
         1 004600   004672 604400 1                  TMOZ    s:5916

     2090     5891    5                    DO WHILE(N > 0 AND NOT F$DCB.TYC(1));

   5891  1 004601   004640 710000 1                  TRA     s:5906

     2091     5892    6                       IF F$DCB.ORG = %UNDEF# THEN DO;

   5892  1 004602   200030 470500                    LDP0    JDCB$,,AUTO
         1 004603   000032 236100                    LDQ     26,,PR0
         1 004604   777000 376003                    ANQ     -512,DU
         1 004605   021000 116003                    CMPQ    8704,DU
         1 004606   004634 601000 1                  TNZ     s:5903

     2092     5893    6                          IF N >= 65500 THEN

   5893  1 004607   200035 235100                    LDA     N,,AUTO
         1 004610   177734 115007                    CMPA    65500,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:335  
         1 004611   004615 604000 1                  TMI     s:5896

     2093     5894    6                             F$DCB.ARS = 65500;

   5894  1 004612   177734 235007                    LDA     65500,DL
         1 004613   000000 755100                    STA     0,,PR0
         1 004614   004616 710000 1                  TRA     s:5897

     2094     5895    6                          ELSE
     2095     5896    6                             F$DCB.ARS = N;

   5896  1 004615   000000 755100                    STA     0,,PR0

     2096     5897    6                          CALL FTI$SPREC ALTRET(JUSTALT); /* Record forward      */

   5897  1 004616   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 004617   000000 701000 xent               TSX1    FTI$SPREC
         1 004620   005074 702000 1                  TSX2    JUSTALT

     2097     5898    6                          F$DCB.PRECNO = F$DCB.PRECNO + F$DCB.ARS;

   5898  1 004621   200030 470500                    LDP0    JDCB$,,AUTO
         1 004622   000072 236100                    LDQ     58,,PR0
         1 004623   000000 036100                    ADLQ    0,,PR0
         1 004624   000072 756100                    STQ     58,,PR0

     2098     5899    6                          F$DCB.CRECNO = F$DCB.CRECNO + F$DCB.ARS;

   5899  1 004625   000071 236100                    LDQ     57,,PR0
         1 004626   000000 036100                    ADLQ    0,,PR0
         1 004627   000071 756100                    STQ     57,,PR0

     2099     5900    6                          N = N - F$DCB.ARS;

   5900  1 004630   200035 236100                    LDQ     N,,AUTO
         1 004631   000000 136100                    SBLQ    0,,PR0
         1 004632   200035 756100                    STQ     N,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:336  

     2100     5901    6                          END;

   5901  1 004633   004640 710000 1                  TRA     s:5906

     2101     5902    6                       ELSE DO;

     2102     5903    6                          CALL FTW_PNUR ALTRET(CHKEOFV);

   5903  1 004634   014254 701000 1                  TSX1    FTW_PNUR
         1 004635   004660 702000 1                  TSX2    CHKEOFV

     2103     5904    6                          N = N - 1;

   5904  1 004636   000001 336007                    LCQ     1,DL
         1 004637   200035 056100                    ASQ     N,,AUTO

     2104     5905    6                          END;

     2105     5906    5                       END;

   5906  1 004640   200035 235100                    LDA     N,,AUTO
         1 004641   004645 604400 1                  TMOZ    s:5907
         1 004642   200030 470500                    LDP0    JDCB$,,AUTO
         1 004643   000002 235100                    LDA     2,,PR0
         1 004644   004602 600000 1                  TZE     s:5892

     2106     5907    5                    IF F$DCB.TYC.EOF(1) THEN DO; /* End of file                  */

   5907  1 004645   200030 470500                    LDP0    JDCB$,,AUTO
         1 004646   000002 236100                    LDQ     2,,PR0
         1 004647   004000 316003                    CANQ    2048,DU
         1 004650   004670 600000 1                  TZE     s:5915

     2107     5908    5                       CALL FTL$EOF(EOXL) ALTRET(CHKEOFV);

   5908  1 004651   200022 631500                    EPPR1   EOXL,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:337  
         1 004652   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 004653   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 004654   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004655   000000 701000 xent               TSX1    FTL$EOF
         1 004656   004660 702000 1                  TSX2    CHKEOFV

     2108     5909    6                       DO ALTRET_HANDLING;

   5909  1 004657   004670 710000 1                  TRA     s:5915

   5905  1 004660                       CHKEOFV      null
     2109     5910    6   CHKEOFV:               ;               /* Either end of file or serious error */
     2110     5911    6                          IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;

   5911  1 004660   000000 470400 xsym               LDP0    B$JIT$
         1 004661   000012 236100                    LDQ     10,,PR0
         1 004662   377770 376007                    ANQ     131064,DL
         1 004663   000060 116007                    CMPQ    48,DL
         1 004664   004667 600000 1                  TZE     s:5912

   5911  1 004665   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004666   000000 702211                    TSX2  ! 0,X1

     2111     5912    6                          N = 0;           /* Done positioning                   */

   5912  1 004667   200035 450100                    STZ     N,,AUTO

     2112     5913    6                          END;

     2113     5914    5                       END;

     2114     5915    4                    END;

   5915  1 004670   200035 235100                    LDA     N,,AUTO
         1 004671   004601 605400 1                  TPNZ    s:5891

     2115     5916    3                 F$DCB.ARS = F$DCB.CRECNO - DCRECNO;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:338  

   5916  1 004672   200030 470500                    LDP0    JDCB$,,AUTO
         1 004673   000071 236100                    LDQ     57,,PR0
         1 004674   200014 136100                    SBLQ    DCRECNO,,AUTO
         1 004675   000000 756100                    STQ     0,,PR0

     2116     5917    3                 RETURN;

   5917  1 004676   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 004677   000001 702211                    TSX2  ! 1,X1

     2117     5918    3                 END;
     2118     5919
     2119     5920         /***
     2120     5921          *** N<0, position backwards.
     2121     5922          ***/
     2122     5923
     2123     5924    2              IF N < 0

   5924  1 004700   005026 605000 1                  TPL     s:5965

     2124     5925    3              THEN DO;

     2125     5926    3                 IF NOT (FPT$PRECORD_V.NOMARKS) THEN

   5926  1 004701   200024 471500                    LDP1    FPT$,,AUTO
         1 004702   100002 236100                    LDQ     2,,PR1
         1 004703   200000 316007                    CANQ    65536,DL
         1 004704   004707 601000 1                  TNZ     s:5928

     2126     5927    3                    CALL FTW_TRNCWEOF ALTRET(JUSTALT);
              5927                             /* Write EOF labels if necessary */

   5927  1 004705   014760 701000 1                  TSX1    FTW_TRNCWEOF
         1 004706   005074 702000 1                  TSX2    JUSTALT

     2127     5928    3                 F$DCB.LSTBLK = %NO#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:339  

   5928  1 004707   200030 470500                    LDP0    JDCB$,,AUTO
         1 004710   000033 236000 2                  LDQ     27
         1 004711   000064 356100                    ANSQ    52,,PR0

     2128     5929    3                 IF N + DCRECNO <= 1

   5929  1 004712   200035 236100                    LDQ     N,,AUTO
         1 004713   200014 036100                    ADLQ    DCRECNO,,AUTO
         1 004714   000001 116007                    CMPQ    1,DL
         1 004715   004727 605400 1                  TPNZ    s:5935

     2129     5930    4                 THEN DO;                  /* Would hit BOF                      */

     2130     5931    4                    CALL FTW_BOF ALTRET(JUSTALT);

   5931  1 004716   012753 701000 1                  TSX1    FTW_BOF
         1 004717   005074 702000 1                  TSX2    JUSTALT

     2131     5932    4                   IF N + DCRECNO < 1 THEN B$JIT.ERR = E_BOF; /*E* ERROR: FTW-E$BOF */

   5932  1 004720   200035 236100                    LDQ     N,,AUTO
         1 004721   200014 036100                    ADLQ    DCRECNO,,AUTO
         1 004722   005026 605400 1                  TPNZ    s:5965

   5932  1 004723   000016 236000 0                  LDQ     E_BOF
         1 004724   000000 470400 xsym               LDP0    B$JIT$
         1 004725   000012 756100                    STQ     10,,PR0

     2132     5933    4                    END;

   5933  1 004726   005026 710000 1                  TRA     s:5965

     2133     5934    4                 ELSE DO;                  /* Will not hit BOF                   */

     2134     5935    4                    F$DCB.MUST_CVOL = %NO#;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:340  
   5935  1 004727   000011 236000 2                  LDQ     9
         1 004730   000064 356100                    ANSQ    52,,PR0

     2135     5936    4                    F$DCB.PRECNO = F$DCB.PRECNO - 1;

   5936  1 004731   000001 336007                    LCQ     1,DL
         1 004732   000072 056100                    ASQ     58,,PR0

     2136     5937                                                /* Calc # recs already past           */
     2137     5938         /***
     2138     5939               *** The following DO WHILE positions backwards
     2139     5940               *** over file sections.  DCB.PRECNO = # recs this section.
     2140     5941               ***/
     2141     5942    5                    DO WHILE (F$DCB.PRECNO < -N);

   5942  1 004733   005006 710000 1                  TRA     s:5954

     2142     5943    5                       F$DCB.CRECNO = F$DCB.CRECNO - F$DCB.PRECNO;

   5943  1 004734   200030 470500                    LDP0    JDCB$,,AUTO
         1 004735   000071 236100                    LDQ     57,,PR0
         1 004736   000072 136100                    SBLQ    58,,PR0
         1 004737   000071 756100                    STQ     57,,PR0

     2143     5944    5                       N = N + F$DCB.PRECNO;

   5944  1 004740   200035 236100                    LDQ     N,,AUTO
         1 004741   000072 036100                    ADLQ    58,,PR0
         1 004742   200035 756100                    STQ     N,,AUTO

     2144     5945                                             /* Subtract # records in current section */
     2145     5946    5                       CALL FTL$PBSN(0,ADDR(NIL),F$DCB.FSECT - 1) ALTRET(JUSTALT);

   5946  1 004743   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 004744   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 004745   000077 236100                    LDQ     63,,PR0
         1 004746   000022 772000                    QRL     18
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:341  
         1 004747   000001 136007                    SBLQ    1,DL
         1 004750   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 004751   200113 631500                    EPPR1   @FIELD_LENGTH+3,,AUTO
         1 004752   200116 451500                    STP1    @FIELD_LENGTH+6,,AUTO
         1 004753   200112 633500                    EPPR3   @FIELD_LENGTH+2,,AUTO
         1 004754   200115 453500                    STP3    @FIELD_LENGTH+5,,AUTO
         1 004755   000031 236000 2                  LDQ     25
         1 004756   200114 756100                    STQ     @FIELD_LENGTH+4,,AUTO
         1 004757   200114 630500                    EPPR0   @FIELD_LENGTH+4,,AUTO
         1 004760   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 004761   000000 701000 xent               TSX1    FTL$PBSN
         1 004762   005074 702000 1                  TSX2    JUSTALT

     2146     5947                                                /* Position to previous file section  */
     2147     5948    5                       F$DCB.ARS = 65500;  /* Space to end of section            */

   5948  1 004763   177734 235007                    LDA     65500,DL
         1 004764   200030 470500                    LDP0    JDCB$,,AUTO
         1 004765   000000 755100                    STA     0,,PR0

     2148     5949    5                       CALL FTI$SPREC ALTRET(JUSTALT);

   5949  1 004766   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 004767   000000 701000 xent               TSX1    FTI$SPREC
         1 004770   005074 702000 1                  TSX2    JUSTALT

     2149     5950    5                       IF F$DCB.FSECT = 1 AND F$DCB.TAPTYP.CP6F

   5950  1 004771   200030 470500                    LDP0    JDCB$,,AUTO
         1 004772   000077 220100                    LDX0    63,,PR0
         1 004773   000001 100003                    CMPX0   1,DU
         1 004774   005004 601000 1                  TNZ     s:5952
         1 004775   000067 236100                    LDQ     55,,PR0
         1 004776   000200 316003                    CANQ    128,DU
         1 004777   005004 600000 1                  TZE     s:5952

     2150     5951    5                       THEN F$DCB.PRECNO = F$DCB.ARS - 1; /* Don't count FIT     */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:342  

   5951  1 005000   000000 235100                    LDA     0,,PR0
         1 005001   000001 135007                    SBLA    1,DL
         1 005002   000072 755100                    STA     58,,PR0
         1 005003   005006 710000 1                  TRA     s:5954

     2151     5952    5                       ELSE F$DCB.PRECNO = F$DCB.ARS;

   5952  1 005004   000000 235100                    LDA     0,,PR0
         1 005005   000072 755100                    STA     58,,PR0

     2152     5953                /* DCB.PRECNO contains the number of data blocks in this file section */
     2153     5954    5                       END;

   5954  1 005006   200035 336100                    LCQ     N,,AUTO
         1 005007   000072 116100                    CMPQ    58,,PR0
         1 005010   004734 605400 1                  TPNZ    s:5943

     2154     5955         /***
     2155     5956               *** Desired position is in this file section.
     2156     5957               ***/
     2157     5958    4                    F$DCB.ARS = N;

   5958  1 005011   200035 235100                    LDA     N,,AUTO
         1 005012   000000 755100                    STA     0,,PR0

     2158     5959    4                    CALL FTI$SPREC ALTRET(JUSTALT);

   5959  1 005013   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 005014   000000 701000 xent               TSX1    FTI$SPREC
         1 005015   005074 702000 1                  TSX2    JUSTALT

     2159     5960    4                    F$DCB.PRECNO = F$DCB.PRECNO + N + 1;

   5960  1 005016   200030 470500                    LDP0    JDCB$,,AUTO
         1 005017   000072 236100                    LDQ     58,,PR0
         1 005020   200035 036100                    ADLQ    N,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:343  
         1 005021   000001 036007                    ADLQ    1,DL
         1 005022   000072 756100                    STQ     58,,PR0

     2160     5961    4                    F$DCB.CRECNO = F$DCB.CRECNO + N;

   5961  1 005023   000071 236100                    LDQ     57,,PR0
         1 005024   200035 036100                    ADLQ    N,,AUTO
         1 005025   000071 756100                    STQ     57,,PR0

     2161     5962    4                    END;

     2162     5963    3                 END;

     2163     5964
     2164     5965    2              F$DCB.ARS = DCRECNO - F$DCB.CRECNO;

   5965  1 005026   200030 470500                    LDP0    JDCB$,,AUTO
         1 005027   200014 236100                    LDQ     DCRECNO,,AUTO
         1 005030   000071 136100                    SBLQ    57,,PR0
         1 005031   000000 756100                    STQ     0,,PR0

     2165     5966         /***
     2166     5967          *** Get key of non-UNDEF record.
     2167     5968          ***/
     2168     5969    2              IF F$DCB.ORG ~= %UNDEF#

   5969  1 005032   000032 236100                    LDQ     26,,PR0
         1 005033   777000 376003                    ANQ     -512,DU
         1 005034   021000 116003                    CMPQ    8704,DU
         1 005035   005072 600000 1                  TZE     s:5984

     2169     5970    3              THEN DO;

     2170     5971    3                 ERRSAV = B$JIT.ERR;       /* In case of BOF or EOF              */

   5971  1 005036   000000 471400 xsym               LDP1    B$JIT$
         1 005037   100012 236100                    LDQ     10,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:344  
         1 005040   200023 756100                    STQ     ERRSAV,,AUTO

     2171     5972    3                 CALL FTW_PNUR ALTRET(CHKEOFV2);

   5972  1 005041   014254 701000 1                  TSX1    FTW_PNUR
         1 005042   005060 702000 1                  TSX2    CHKEOFV2

     2172     5973    3                 F$DCB.ARS = -1;           /* Backup before record               */

   5973  1 005043   000001 335007                    LCA     1,DL
         1 005044   200030 470500                    LDP0    JDCB$,,AUTO
         1 005045   000000 755100                    STA     0,,PR0

     2173     5974    3                 CALL FTI$SPREC ALTRET(JUSTALT);

   5974  1 005046   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 005047   000000 701000 xent               TSX1    FTI$SPREC
         1 005050   005074 702000 1                  TSX2    JUSTALT

     2174     5975    3                 F$DCB.PRECNO = F$DCB.PRECNO - 1;

   5975  1 005051   200030 470500                    LDP0    JDCB$,,AUTO
         1 005052   000001 336007                    LCQ     1,DL
         1 005053   000072 056100                    ASQ     58,,PR0

     2175     5976    3                 F$DCB.CRECNO = F$DCB.CRECNO - 1;

   5976  1 005054   000071 056100                    ASQ     57,,PR0

     2176     5977    3                 F$DCB.TAPTYP.HAVLASTKEY = %NO#;

   5977  1 005055   000032 236000 2                  LDQ     26
         1 005056   000067 356100                    ANSQ    55,,PR0

     2177     5978    4                 DO ALTRET_HANDLING;

   5978  1 005057   005067 710000 1                  TRA     s:5982
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:345  

   5974  1 005060                       CHKEOFV2     null
     2178     5979    4   CHKEOFV2:        ;
     2179     5980    4                    IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;

   5980  1 005060   000000 470400 xsym               LDP0    B$JIT$
         1 005061   000012 236100                    LDQ     10,,PR0
         1 005062   377770 376007                    ANQ     131064,DL
         1 005063   000060 116007                    CMPQ    48,DL
         1 005064   005067 600000 1                  TZE     s:5982

   5980  1 005065   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005066   000000 702211                    TSX2  ! 0,X1

     2180     5981    4                    END;

     2181     5982    3                 B$JIT.ERR = ERRSAV;

   5982  1 005067   200023 236100                    LDQ     ERRSAV,,AUTO
         1 005070   000000 470400 xsym               LDP0    B$JIT$
         1 005071   000012 756100                    STQ     10,,PR0

     2182     5983    3                 END;

     2183     5984    2              RETURN;

   5984  1 005072   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005073   000001 702211                    TSX2  ! 1,X1

   5976  1 005074                       JUSTALT      null
     2184     5985
     2185     5986    2   JUSTALT:   ;
     2186     5987    2              ALTRETURN;

   5987  1 005074   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005075   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:346  
     2187     5988
     2188     5989    2      END FTW_PRUSRBUF;
     2189     5990        /*********************************************************************/
     2190     5991        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:347  
     2191     5992        /*********************************************************************/
     2192     5993    1   FTW_PFUSRBUF: PROC ALTRET;

   5993  1 005076   200064 741300       FTW_PFUSRBUF STX1  ! DATA_INCON,,AUTO

     2193     5994        /*F*     NAME: FTW_PFUSRBUF
     2194     5995                 PURPOSE: Position file for user buffer formats.
     2195     5996         ***/
     2196     5997
     2197     5998        /********************/
     2198     5999
     2199     6000         /***
     2200     6001          *** Might already be at file end.
     2201     6002          ***/
     2202     6003
     2203     6004    2              IF F$DCB.LSTBLK THEN RETURN;

   6004  1 005077   200030 470500                    LDP0    JDCB$,,AUTO
         1 005100   000064 236100                    LDQ     52,,PR0
         1 005101   000001 316007                    CANQ    1,DL
         1 005102   005104 600000 1                  TZE     s:6010

   6004  1 005103   000001 702211                    TSX2  ! 1,X1

     2204     6005
     2205     6006         /***
     2206     6007          *** Find end of last section of file.
     2207     6008          ***/
     2208     6009
     2209     6010    3              DO WHILE( B$JIT.ERR.CODE ~= %E$EOF );

   6010  1 005104   000000 471400 xsym               LDP1    B$JIT$
         1 005105   100012 236100                    LDQ     10,,PR1
         1 005106   377770 376007                    ANQ     131064,DL
         1 005107   000060 116007                    CMPQ    48,DL
         1 005110   005161 600000 1                  TZE     s:6034

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:348  
     2210     6011    3                 IF F$DCB.ORG = %UNDEF#

   6011  1 005111   200030 470500                    LDP0    JDCB$,,AUTO
         1 005112   000032 236100                    LDQ     26,,PR0
         1 005113   777000 376003                    ANQ     -512,DU
         1 005114   021000 116003                    CMPQ    8704,DU
         1 005115   005141 601000 1                  TNZ     s:6021

     2211     6012    4                 THEN DO;                  /* Position by physical blocks        */

     2212     6013    4                    F$DCB.ARS = 65500;

   6013  1 005116   177734 235007                    LDA     65500,DL
         1 005117   000000 755100                    STA     0,,PR0

     2213     6014    4                    CALL FTI$SPREC ALTRET(JUSTALT);

   6014  1 005120   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 005121   000000 701000 xent               TSX1    FTI$SPREC
         1 005122   005166 702000 1                  TSX2    JUSTALT

     2214     6015    4                    F$DCB.PRECNO = F$DCB.PRECNO + F$DCB.ARS;

   6015  1 005123   200030 470500                    LDP0    JDCB$,,AUTO
         1 005124   000072 236100                    LDQ     58,,PR0
         1 005125   000000 036100                    ADLQ    0,,PR0
         1 005126   000072 756100                    STQ     58,,PR0

     2215     6016    4                    F$DCB.CRECNO = F$DCB.CRECNO + F$DCB.ARS;

   6016  1 005127   000071 236100                    LDQ     57,,PR0
         1 005130   000000 036100                    ADLQ    0,,PR0
         1 005131   000071 756100                    STQ     57,,PR0

     2216     6017    4                    CALL FTL$EOF(EOXL) ALTRET(CHKEOFV); /* Handle end of file    */

   6017  1 005132   200022 631500                    EPPR1   EOXL,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:349  
         1 005133   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 005134   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 005135   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 005136   000000 701000 xent               TSX1    FTL$EOF
         1 005137   005145 702000 1                  TSX2    CHKEOFV

     2217     6018    4                    END;

   6018  1 005140   005144 710000 1                  TRA     s:6024

     2218     6019    4                 ELSE DO;

     2219     6020    5                    DO WHILE('1'B);

     2220     6021    5                       CALL FTW_PNUR ALTRET(CHKEOFV);

   6021  1 005141   014254 701000 1                  TSX1    FTW_PNUR
         1 005142   005145 702000 1                  TSX2    CHKEOFV

     2221     6022    5                       END;

   6022  1 005143   005141 710000 1                  TRA     s:6021

     2222     6023    4                    END;
     2223     6024    4                 DO ALTRET_HANDLING;

   6024  1 005144   005154 710000 1                  TRA     s:6028

   6019  1 005145                       CHKEOFV      null
     2224     6025    4   CHKEOFV:         ;
     2225     6026    4                    IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;
              6026                             /* Expecting end of file */

   6026  1 005145   000000 470400 xsym               LDP0    B$JIT$
         1 005146   000012 236100                    LDQ     10,,PR0
         1 005147   377770 376007                    ANQ     131064,DL
         1 005150   000060 116007                    CMPQ    48,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:350  
         1 005151   005154 600000 1                  TZE     s:6028

   6026  1 005152   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 005153   000000 702211                    TSX2  ! 0,X1

     2226     6027    4                    END;

     2227     6028    3                 END;

   6028  1 005154   000000 470400 xsym               LDP0    B$JIT$
         1 005155   000012 236100                    LDQ     10,,PR0
         1 005156   377770 376007                    ANQ     131064,DL
         1 005157   000060 116007                    CMPQ    48,DL
         1 005160   005111 601000 1                  TNZ     s:6011

     2228     6029
     2229     6030         /***
     2230     6031          *** End of file.
     2231     6032          ***/
     2232     6033
     2233     6034    2              F$DCB.LSTBLK = %YES#;

   6034  1 005161   200030 470500                    LDP0    JDCB$,,AUTO
         1 005162   000001 236007                    LDQ     1,DL
         1 005163   000064 256100                    ORSQ    52,,PR0

     2234     6035    2              RETURN;

   6035  1 005164   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 005165   000001 702211                    TSX2  ! 1,X1

   6034  1 005166                       JUSTALT      null
     2235     6036
     2236     6037    2   JUSTALT:   ;
     2237     6038
     2238     6039    2      END FTW_PFUSRBUF;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:351  
   6039  1 005166   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 005167   000001 702211                    TSX2  ! 1,X1

     2239     6040        /*********************************************************************/
     2240     6041        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:352  
     2241     6042        /*********************************************************************/
     2242     6043    1   FTW_RNR:   PROC ALTRET;

   6043  1 005170   200062 741300       FTW_RNR      STX1  ! KEYS+1,,AUTO

     2243     6044        /*F*    NAME: FTW_RNR
     2244     6045                PURPOSE: Fixed and variable format tape read next record.
     2245     6046                INPUT:   B$PS$(0)    -> V area of READ FPT
     2246     6047                         JDCB$   -> DCB
     2247     6048                         B$JIT$  -> JIT
     2248     6049                         DUB$    = F$DCB.UC$
     2249     6050                         DUBYTES = F$DCB.UBYTES
     2250     6051                         AFPOOL$ -> FPOOL buffer
     2251     6052                         SEGSIZE = size of current segment
     2252     6053                         SPANINFO = spanning information of current segment
     2253     6054                ALTRET: If a record (portion) is not returned.
     2254     6055         ***/
     2255     6056        /********************/
     2256     6057
     2257     6058         /***
     2258     6059          *** Get current record segment.
     2259     6060          ***/
     2260     6061
     2261     6062    2              CALL FTW_PNRS(2) ALTRET(CHKKEYE);

   6062  1 005171   000010 236000 2                  LDQ     8
         1 005172   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 005173   013423 701000 1                  TSX1    FTW_PNRS
         1 005174   005176 702000 1                  TSX2    CHKKEYE

     2262     6063    3              DO ALTRET_HANDLING;

   6063  1 005175   005217 710000 1                  TRA     s:6078

   6063  1 005176                       CHKKEYE      null
     2263     6064    3   CHKKEYE:      ;                         /* If read by key, eof might be ok    */
     2264     6065    3                 IF (B$JIT.ERR.CODE = %E$EOF AND NOT FPT$READ_V.KEYS)
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:353  

   6065  1 005176   000000 470400 xsym               LDP0    B$JIT$
         1 005177   000012 236100                    LDQ     10,,PR0
         1 005200   377770 376007                    ANQ     131064,DL
         1 005201   000060 116007                    CMPQ    48,DL
         1 005202   005207 601000 1                  TNZ     CHKKEYE+9
         1 005203   200024 471500                    LDP1    FPT$,,AUTO
         1 005204   100000 236100                    LDQ     0,,PR1
         1 005205   200000 316007                    CANQ    65536,DL
         1 005206   005213 600000 1                  TZE     s:6067
         1 005207   000012 236100                    LDQ     10,,PR0
         1 005210   377770 376007                    ANQ     131064,DL
         1 005211   000060 116007                    CMPQ    48,DL
         1 005212   005215 600000 1                  TZE     s:6068

     2265     6066    3                     OR B$JIT.ERR.CODE ~= %E$EOF
     2266     6067    3                 THEN ALTRETURN;          /* Not EOF or EOF and no key specified */

   6067  1 005213   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005214   000000 702211                    TSX2  ! 0,X1

     2267     6068    3                 CALL FTW_RESTORE_POS ALTRET(JUSTALT);
              6068                          /* Restore position if after file mark */

   6068  1 005215   000310 701000 1                  TSX1    FTW_RESTORE_POS
         1 005216   005607 702000 1                  TSX2    JUSTALT

     2268     6069                                            /* EOF error will be passed to FTW_FNDKEY */
     2269     6070    3                 END;

     2270     6071
     2271     6072         /***
     2272     6073          *** If continuation is not specified, position to the next record
     2273     6074          *** to read.  If continuation is specified, make sure we are still
     2274     6075          *** reading the current segment.   Unit record can not be continued.
     2275     6076          ***/
     2276     6077
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:354  
     2277     6078    2              IF FPT$READ_V.DVBYTE.CONT

   6078  1 005217   200024 470500                    LDP0    FPT$,,AUTO
         1 005220   000003 430100                    FSZN    3,,PR0
         1 005221   005231 605000 1                  TPL     s:6087

     2278     6079    3              THEN DO;                    /* Expect continuation of last segment */

     2279     6080    3                 IF F$DCB.RPOS

   6080  1 005222   200030 471500                    LDP1    JDCB$,,AUTO
         1 005223   100064 236100                    LDQ     52,,PR1
         1 005224   010000 316007                    CANQ    4096,DL
         1 005225   005402 600000 1                  TZE     s:6134

     2280     6081    4                 THEN DO;    /* At next record already...end of previous segment */

     2281     6082    4                    F$DCB.ARS = 0;  /* Nothing left of previous record (segment) */

   6082  1 005226   100000 450100                    STZ     0,,PR1

     2282     6083    4                    RETURN;

   6083  1 005227   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005230   000001 702211                    TSX2  ! 1,X1

     2283     6084    4                    END;
     2284     6085    3                 END;
     2285     6086    3              ELSE DO;                     /* Continuation is not specified      */

     2286     6087    3                 IF NOT F$DCB.RPOS

   6087  1 005231   200030 471500                    LDP1    JDCB$,,AUTO
         1 005232   100064 236100                    LDQ     52,,PR1
         1 005233   010000 316007                    CANQ    4096,DL
         1 005234   005257 601000 1                  TNZ     s:6100

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:355  
     2287     6088    4                 THEN DO;                  /* Get next record                    */

     2288     6089    4                    CALL FTW_PNRS(1) ALTRET(CHKKEYE2);

   6089  1 005235   000007 236000 2                  LDQ     7
         1 005236   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 005237   013423 701000 1                  TSX1    FTW_PNRS
         1 005240   005242 702000 1                  TSX2    CHKKEYE2

     2289     6090    5                    DO ALTRET_HANDLING;    /* If read by key, eof ok             */

   6090  1 005241   005257 710000 1                  TRA     s:6100

   6088  1 005242                       CHKKEYE2     null
     2290     6091    5   CHKKEYE2:           ;
     2291     6092    5                       IF B$JIT.ERR.CODE ~= %E$EOF OR NOT FPT$READ_V.KEYS

   6092  1 005242   000000 470400 xsym               LDP0    B$JIT$
         1 005243   000012 236100                    LDQ     10,,PR0
         1 005244   377770 376007                    ANQ     131064,DL
         1 005245   000060 116007                    CMPQ    48,DL
         1 005246   005253 601000 1                  TNZ     s:6093
         1 005247   200024 471500                    LDP1    FPT$,,AUTO
         1 005250   100000 236100                    LDQ     0,,PR1
         1 005251   200000 316007                    CANQ    65536,DL
         1 005252   005255 601000 1                  TNZ     s:6094

     2292     6093    5                       THEN ALTRETURN;

   6093  1 005253   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005254   000000 702211                    TSX2  ! 0,X1

     2293     6094    5                       CALL FTW_RESTORE_POS ALTRET(JUSTALT);
              6094                                /* Restore position if after file mark */

   6094  1 005255   000310 701000 1                  TSX1    FTW_RESTORE_POS
         1 005256   005607 702000 1                  TSX2    JUSTALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:356  

     2294     6095    5                       END;

     2295     6096    4                    END;

     2296     6097         /***
     2297     6098             *** Find by key if specified.
     2298     6099             ***/
     2299     6100    3                 IF FPT$READ_V.KEYS AND F$DCB.IASN ~= %OD# THEN

   6100  1 005257   200024 470500                    LDP0    FPT$,,AUTO
         1 005260   000000 236100                    LDQ     0,,PR0
         1 005261   200000 316007                    CANQ    65536,DL
         1 005262   005274 600000 1                  TZE     HOPEN0
         1 005263   200030 471500                    LDP1    JDCB$,,AUTO
         1 005264   100103 236100                    LDQ     67,,PR1
         1 005265   000777 376007                    ANQ     511,DL
         1 005266   000012 116007                    CMPQ    10,DL
         1 005267   005274 600000 1                  TZE     HOPEN0

     2300     6101    3                    CALL FTW_FNDKEY(B$PS$(1)->FT$KEY) ALTRET(JUSTALT);
              6101                             /* Key is specified */

   6101  1 005270   000001 236000 xsym               LDQ     B$PS$+1
         1 005271   200071 756100                    STQ     TEMP+2,,AUTO
         1 005272   011051 701000 1                  TSX1    FTW_FNDKEY
         1 005273   005607 702000 1                  TSX2    JUSTALT

   6100  1 005274                       HOPEN0       null
     2301     6102    3   HOPEN0:       ;
     2302     6103    3                 IF FPT$READ_V.KEYR

   6103  1 005274   200024 470500                    LDP0    FPT$,,AUTO
         1 005275   000000 236100                    LDQ     0,,PR0
         1 005276   100000 316007                    CANQ    32768,DL
         1 005277   005302 600000 1                  TZE     s:6108

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:357  
     2303     6104    3                 THEN CALL FTW_RETURN_KEY_PS1; /* Return key                     */

   6104  1 005300   011474 701000 1                  TSX1    FTW_RETURN_KEY_PS1
         1 005301   000000 011000                    NOP     0

     2304     6105         /***
     2305     6106             *** For keyed and indexed files, skip over key to record data.
     2306     6107             ***/
     2307     6108    3                 IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# OR F$DCB.ORG = %
              6108                          RELATIVE#

   6108  1 005302   200030 470500                    LDP0    JDCB$,,AUTO
         1 005303   000032 236100                    LDQ     26,,PR0
         1 005304   777000 376003                    ANQ     -512,DU
         1 005305   002000 116003                    CMPQ    1024,DU
         1 005306   005313 600000 1                  TZE     s:6110
         1 005307   006000 116003                    CMPQ    3072,DU
         1 005310   005313 600000 1                  TZE     s:6110
         1 005311   005000 116003                    CMPQ    2560,DU
         1 005312   005400 601000 1                  TNZ     s:6126

     2308     6109    4                 THEN DO;          /* Don't include RCW or key as part of record */

     2309     6110    4                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

   6110  1 005313   000067 236100                    LDQ     55,,PR0
         1 005314   777777 376007                    ANQ     -1,DL
         1 005315   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 005316   000020 736000                    QLS     16
         1 005317   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 005320   200011 756100                    STQ     ASEG$,,AUTO

     2310     6111    4                    IF F$DCB.ORG = %KEYED#

   6111  1 005321   000032 236100                    LDQ     26,,PR0
         1 005322   777000 376003                    ANQ     -512,DU
         1 005323   002000 116003                    CMPQ    1024,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:358  
         1 005324   005336 601000 1                  TNZ     s:6113

     2311     6112    4                    THEN F$DCB.GDISP = RCWSIZE + ASEG$->FT$KEY.KL + 1;

   6112  1 005325   200011 471500                    LDP1    ASEG$,,AUTO
         1 005326   000100 101500                    MRL     fill='000'O
         1 005327   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 005330   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 005331   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 005332   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 005333   000001 036007                    ADLQ    1,DL
         1 005334   000101 756100                    STQ     65,,PR0
         1 005335   005363 710000 1                  TRA     s:6120

     2312     6113    4                    ELSE IF F$DCB.ORG = %RELATIVE#

   6113  1 005336   005000 116003                    CMPQ    2560,DU
         1 005337   005356 601000 1                  TNZ     s:6119

     2313     6114    5                       THEN DO;

     2314     6115    5                          F$DCB.GDISP = RCWSIZE + 4;

   6115  1 005340   200036 235100                    LDA     RCWSIZE,,AUTO
         1 005341   000004 035007                    ADLA    4,DL
         1 005342   000101 755100                    STA     65,,PR0

     2315     6116    5                          ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
              6116                                   /* Key pointer */

   6116  1 005343   000067 236100                    LDQ     55,,PR0
         1 005344   777777 376007                    ANQ     -1,DL
         1 005345   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 005346   000020 736000                    QLS     16
         1 005347   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 005350   200011 756100                    STQ     ASEG$,,AUTO

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:359  
     2316     6117    5                          F$DCB.LASTKEY = ASEG$->BASED_WORD; /* Save last key read */

   6117  1 005351   200011 471500                    LDP1    ASEG$,,AUTO
         1 005352   000100 100500                    MLR     fill='000'O
         1 005353   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 005354   000065 000004                    ADSC9   53,,PR0                  cn=0,n=4

     2317     6118    5                          END;

   6118  1 005355   005363 710000 1                  TRA     s:6120

     2318     6119    4                       ELSE F$DCB.GDISP = RCWSIZE + F$DCB.KEYL;

   6119  1 005356   000036 236100                    LDQ     30,,PR0
         1 005357   000011 772000                    QRL     9
         1 005360   000777 376007                    ANQ     511,DL
         1 005361   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 005362   000101 756100                    STQ     65,,PR0

     2319     6120    4                    IF F$DCB.CRECX + F$DCB.GDISP > F$DCB.BLKLEN

   6120  1 005363   000067 236100                    LDQ     55,,PR0
         1 005364   777777 376007                    ANQ     -1,DL
         1 005365   000101 036100                    ADLQ    65,,PR0
         1 005366   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 005367   000074 236100                    LDQ     60,,PR0
         1 005370   777777 376007                    ANQ     -1,DL
         1 005371   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 005372   005400 603000 1                  TRC     s:6126

     2320     6121    5                    THEN DO;               /* Key not wholly contained in block  */

     2321     6122    5                       F$DCB.GDISP = SEGSIZE; /* Use max displacement for segment */

   6122  1 005373   200041 235100                    LDA     SEGSIZE,,AUTO
         1 005374   000101 755100                    STA     65,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:360  
     2322     6123    5                       B$JIT.ERR = E_PARTIALKEY; /*E* ERROR: FTW-E$PARTIALKEY */

   6123  1 005375   000045 236000 0                  LDQ     E_PARTIALKEY
         1 005376   000000 471400 xsym               LDP1    B$JIT$
         1 005377   100012 756100                    STQ     10,,PR1

     2323     6124    5                       END;

     2324     6125    4                    END;

     2325     6126    3                 F$DCB.RPOS = %NO#;        /* This record will be read           */

   6126  1 005400   000013 236000 2                  LDQ     11
         1 005401   000064 356100                    ANSQ    52,,PR0

     2326     6127    3                 END;

     2327     6128
     2328     6129         /***
     2329     6130          *** Read spanned segments until tape record ends or lost
     2330     6131          *** data error.
     2331     6132          ***/
     2332     6133
     2333     6134    2              BYTES_TO_GO = DUBYTES;       /* Total # bytes to read              */

   6134  1 005402   200020 235100                    LDA     DUBYTES,,AUTO
         1 005403   200012 755100                    STA     BYTES_TO_GO,,AUTO

     2334     6135    2              RECSIZE = 0;                 /* Moved nothing so far               */

   6135  1 005404   200040 450100                    STZ     RECSIZE,,AUTO

     2335     6136    2              F$DCB.EOP = READEOP#;        /* Last operation was read            */

   6136  1 005405   200030 470500                    LDP0    JDCB$,,AUTO
         1 005406   000064 236100                    LDQ     52,,PR0
         1 005407   000003 376000 2                  ANQ     3
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:361  
         1 005410   001000 276003                    ORQ     512,DU
         1 005411   000064 756100                    STQ     52,,PR0

     2336     6137    3              DO WHILE( BYTES_TO_GO > 0 );

   6137  1 005412   000000 115003                    CMPA    0,DU
         1 005413   005562 604400 1                  TMOZ    s:6183

     2337     6138    3                 DUBYTES = BYTES_TO_GO;    /* Get next segment                   */

   6138  1 005414   200012 235100                    LDA     BYTES_TO_GO,,AUTO
         1 005415   200020 755100                    STA     DUBYTES,,AUTO

     2338     6139         /***
     2339     6140             *** Calculate the number of bytes remaining to be read.
     2340     6141             *** If this exceeds the user's buffer size ... lost data.
     2341     6142             ***/
     2342     6143    3                 ARECL = SEGSIZE - F$DCB.GDISP;
              6143                          /* Calc # of remaining bytes in segment */

   6143  1 005416   200030 470500                    LDP0    JDCB$,,AUTO
         1 005417   200041 236100                    LDQ     SEGSIZE,,AUTO
         1 005420   000101 136100                    SBLQ    65,,PR0
         1 005421   200010 756100                    STQ     ARECL,,AUTO

     2343     6144    3                 IF DUBYTES < ARECL

   6144  1 005422   005425 604000 1                  TMI     s:6145
         1 005423   200020 116100                    CMPQ    DUBYTES,,AUTO
         1 005424   005431 604400 1                  TMOZ    s:6146

     2344     6145    3                 THEN B$JIT.ERR = E_LD;

   6145  1 005425   000034 236000 0                  LDQ     E_LD
         1 005426   000000 471400 xsym               LDP1    B$JIT$
         1 005427   100012 756100                    STQ     10,,PR1
         1 005430   005432 710000 1                  TRA     s:6152
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:362  

     2345     6146    3                 ELSE DUBYTES = ARECL;     /* Move at most # bytes remaining     */

   6146  1 005431   200020 756100                    STQ     DUBYTES,,AUTO

     2346     6147         /***
     2347     6148             *** Calculate pointer to next record (portion).  Move record
     2348     6149             *** (portion) to the user's buffer and set DCB fields
     2349     6150             *** to be ready for a continued READ. Translate if necessary.
     2350     6151             ***/
     2351     6152    3                 ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + F$DCB.GDISP );

   6152  1 005432   000067 236100                    LDQ     55,,PR0
         1 005433   777777 376007                    ANQ     -1,DL
         1 005434   000101 036100                    ADLQ    65,,PR0
         1 005435   000020 736000                    QLS     16
         1 005436   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 005437   200011 756100                    STQ     ASEG$,,AUTO

     2352     6153    3                 IF F$DCB.EBCDIC

   6153  1 005440   000031 236100                    LDQ     25,,PR0
         1 005441   100000 316007                    CANQ    32768,DL
         1 005442   005471 600000 1                  TZE     s:6159

     2353     6154    4                 THEN DO;                  /* Conversion to ASCII possible       */

     2354     6155    4                    IF F$DCB.CNVRT AND NOT FPT$READ_V.DVBYTE.TRANS

   6155  1 005443   200000 316007                    CANQ    65536,DL
         1 005444   005462 600000 1                  TZE     s:6157
         1 005445   200024 471500                    LDP1    FPT$,,AUTO
         1 005446   100003 236100                    LDQ     3,,PR1
         1 005447   020000 316003                    CANQ    8192,DU
         1 005450   005462 601000 1                  TNZ     s:6157

     2355     6156    4                    THEN CALL XLATE( DUB$->CHARS, F_EBC_ASC, ASEG$->CHARS );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:363  

   6156  1 005451   200011 473500                    LDP3    ASEG$,,AUTO
         1 005452   200020 720100                    LXL0    DUBYTES,,AUTO
         1 005453   000000 474400 xsym               LDP4    B$XL_EBC_ASC$
         1 005454   200017 475500                    LDP5    DUB$,,AUTO
         1 005455   040140 160540                    MVT     fill='040'O
         1 005456   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 005457   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         1 005460   400000 000100                    ARG     0,,PR4
         1 005461   005477 710000 1                  TRA     s:6160

     2356     6157    4                    ELSE DUB$->CHARS = ASEG$->CHARS;

   6157  1 005462   200011 471500                    LDP1    ASEG$,,AUTO
         1 005463   200020 720100                    LXL0    DUBYTES,,AUTO
         1 005464   200017 473500                    LDP3    DUB$,,AUTO
         1 005465   040140 100540                    MLR     fill='040'O
         1 005466   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 005467   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     2357     6158    4                    END;

   6158  1 005470   005477 710000 1                  TRA     s:6160

     2358     6159    3                 ELSE DUB$->CHARS = ASEG$->CHARS;

   6159  1 005471   200011 471500                    LDP1    ASEG$,,AUTO
         1 005472   200020 720100                    LXL0    DUBYTES,,AUTO
         1 005473   200017 473500                    LDP3    DUB$,,AUTO
         1 005474   040140 100540                    MLR     fill='040'O
         1 005475   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 005476   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     2359     6160    3                 RECSIZE = RECSIZE + DUBYTES; /* Total up bytes moved            */

   6160  1 005477   200040 236100                    LDQ     RECSIZE,,AUTO
         1 005500   200020 036100                    ADLQ    DUBYTES,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:364  
         1 005501   200040 756100                    STQ     RECSIZE,,AUTO

     2360     6161    3                 BYTES_TO_GO = BYTES_TO_GO - DUBYTES;

   6161  1 005502   200012 236100                    LDQ     BYTES_TO_GO,,AUTO
         1 005503   200020 136100                    SBLQ    DUBYTES,,AUTO
         1 005504   200012 756100                    STQ     BYTES_TO_GO,,AUTO

     2361     6162         /***
     2362     6163             *** If spanning and more bytes to read, get them.
     2363     6164             ***/
     2364     6165    3                 IF (SPANINFO = 1 OR SPANINFO = SPAN_MID)
              6165                          /* Another segment should follow */

   6165  1 005505   200044 235100                    LDA     SPANINFO,,AUTO
         1 005506   000001 115007                    CMPA    1,DL
         1 005507   005513 600000 1                  TZE     s:6165+6
         1 005510   200044 236100                    LDQ     SPANINFO,,AUTO
         1 005511   200045 116100                    CMPQ    SPAN_MID,,AUTO
         1 005512   005557 601000 1                  TNZ     s:6181
         1 005513   200012 236100                    LDQ     BYTES_TO_GO,,AUTO
         1 005514   005557 604400 1                  TMOZ    s:6181

     2365     6166    4                     AND BYTES_TO_GO > 0 THEN DO; /* Get next segment            */

     2366     6167    4                    CALL FTW_PNRS(0) ALTRET(CANTCONT);

   6167  1 005515   000031 236000 2                  LDQ     25
         1 005516   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 005517   013423 701000 1                  TSX1    FTW_PNRS
         1 005520   005533 702000 1                  TSX2    CANTCONT

     2367     6168    4                    DUB$ = PINCRC( DUB$, DUBYTES ); /* Advance destination pointer */

   6168  1 005521   200020 236100                    LDQ     DUBYTES,,AUTO
         1 005522   000020 736000                    QLS     16
         1 005523   200017 036100                    ADLQ    DUB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:365  
         1 005524   200017 756100                    STQ     DUB$,,AUTO

     2368     6169    5                   IF SPANINFO <= 1 THEN DO; /* Span error...at next record to read */

   6169  1 005525   200044 235100                    LDA     SPANINFO,,AUTO
         1 005526   000001 115007                    CMPA    1,DL
         1 005527   005560 605400 1                  TPNZ    s:6182

     2369     6170    5                       F$DCB.RPOS = %YES#;

   6170  1 005530   200030 470500                    LDP0    JDCB$,,AUTO
         1 005531   010000 236007                    LDQ     4096,DL
         1 005532   000064 256100                    ORSQ    52,,PR0

     2370     6171    5   CANTCONT:           F$DCB.NRECX = F$DCB.NRECX + 1;

   6171  1 005533   200030 470500       CANTCONT     LDP0    JDCB$,,AUTO
         1 005534   000100 220100                    LDX0    64,,PR0
         1 005535   000001 621010                    EAX1    1,X0
         1 005536   000100 741100                    STX1    64,,PR0

     2371     6172    5                       F$DCB.CRECNO = F$DCB.CRECNO + 1; /* Count new record      */

   6172  1 005537   000071 054100                    AOS     57,,PR0

     2372     6173    5                       F$DCB.ARS = RECSIZE;

   6173  1 005540   200040 235100                    LDA     RECSIZE,,AUTO
         1 005541   000000 755100                    STA     0,,PR0

     2373     6174    5                       F$DCB.GDISP = RCWSIZE;

   6174  1 005542   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 005543   000101 756100                    STQ     65,,PR0

     2374     6175    5                       IF B$JIT.ERR.CODE = %E$EOF AND RECSIZE > 0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:366  
   6175  1 005544   000000 471400 xsym               LDP1    B$JIT$
         1 005545   100012 236100                    LDQ     10,,PR1
         1 005546   377770 376007                    ANQ     131064,DL
         1 005547   000060 116007                    CMPQ    48,DL
         1 005550   005555 601000 1                  TNZ     s:6177
         1 005551   000000 115003                    CMPA    0,DU
         1 005552   005555 604400 1                  TMOZ    s:6177

     2375     6176    5                       THEN B$JIT.ERR = E_BADSPAN; /*E* ERROR: FTW-E$BADSPAN */

   6176  1 005553   000015 236000 0                  LDQ     E_BADSPAN
         1 005554   100012 756100                    STQ     10,,PR1

     2376     6177    5                       RETURN;

   6177  1 005555   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005556   000001 702211                    TSX2  ! 1,X1

     2377     6178    5                       END;
     2378     6179    4                    END;
     2379     6180    3                 ELSE
     2380     6181    3                    BYTES_TO_GO = 0;       /* No more segments in this record    */

   6181  1 005557   200012 450100                    STZ     BYTES_TO_GO,,AUTO

     2381     6182    3                 END;

   6182  1 005560   200012 236100                    LDQ     BYTES_TO_GO,,AUTO
         1 005561   005414 605400 1                  TPNZ    s:6138

     2382     6183    2              F$DCB.ARS = RECSIZE;         /* Number of bytes moved              */

   6183  1 005562   200030 470500                    LDP0    JDCB$,,AUTO
         1 005563   200040 235100                    LDA     RECSIZE,,AUTO
         1 005564   000000 755100                    STA     0,,PR0

     2383     6184    2              F$DCB.GDISP = F$DCB.GDISP + DUBYTES;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:367  

   6184  1 005565   000101 236100                    LDQ     65,,PR0
         1 005566   200020 036100                    ADLQ    DUBYTES,,AUTO
         1 005567   000101 756100                    STQ     65,,PR0

     2384     6185                    /* Ix of next unread byte = ix of prev unread byte + # bytes read */
     2385     6186    2              IF (SPANINFO = 1 OR SPANINFO = SPAN_MID) AND F$DCB.GDISP = F$DCB.BLKL
              6186                       THEN

   6186  1 005570   200044 235100                    LDA     SPANINFO,,AUTO
         1 005571   000001 115007                    CMPA    1,DL
         1 005572   005576 600000 1                  TZE     s:6186+6
         1 005573   200044 236100                    LDQ     SPANINFO,,AUTO
         1 005574   200045 116100                    CMPQ    SPAN_MID,,AUTO
         1 005575   005605 601000 1                  TNZ     s:6188
         1 005576   000033 236100                    LDQ     27,,PR0
         1 005577   000022 772000                    QRL     18
         1 005600   000101 116100                    CMPQ    65,,PR0
         1 005601   005605 601000 1                  TNZ     s:6188

     2386     6187    2                 B$JIT.ERR = E_LD;         /* Spanned to next block:  lost data. */

   6187  1 005602   000034 236000 0                  LDQ     E_LD
         1 005603   000000 471400 xsym               LDP1    B$JIT$
         1 005604   100012 756100                    STQ     10,,PR1

     2387     6188    2              RETURN;

   6188  1 005605   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005606   000001 702211                    TSX2  ! 1,X1

   6186  1 005607                       JUSTALT      null
     2388     6189
     2389     6190    2   JUSTALT:   ;
     2390     6191    2              ALTRETURN;

   6191  1 005607   200062 221300                    LDX1  ! KEYS+1,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:368  
         1 005610   000000 702211                    TSX2  ! 0,X1

     2391     6192
     2392     6193    2      END FTW_RNR;
     2393     6194        /*********************************************************************/
     2394     6195        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:369  
     2395     6196        /*********************************************************************/
     2396     6197    1   FTW_WNR:   PROC ALTRET;

   6197  1 005611   200062 741300       FTW_WNR      STX1  ! KEYS+1,,AUTO

     2397     6198        /*F*    NAME: FTW_WNR
     2398     6199                PURPOSE: Fixed and variable format tape write next record.
     2399     6200                INPUT:   JDCB$    -> DCB
     2400     6201                         DUB$     = F$DCB.UB$
     2401     6202                         DUBYTES  = F$DCB.UBYTES
     2402     6203                         B$PS$(0)     -> V area of WRITE FPT
     2403     6204         ***/
     2404     6205
     2405     6206        /********************/
     2406     6207
     2407     6208    2              IF F$DCB.TRNC ~= FT_NOTRUNC#

   6208  1 005612   200030 470500                    LDP0    JDCB$,,AUTO
         1 005613   000064 236100                    LDQ     52,,PR0
         1 005614   000014 316007                    CANQ    12,DL
         1 005615   005621 600000 1                  TZE     s:6210

     2408     6209    2              THEN CALL FTW_UNDOTRUNC ALTRET(JUSTALT);

   6209  1 005616   012043 701000 1                  TSX1    FTW_UNDOTRUNC
         1 005617   007212 702000 1                  TSX2    JUSTALT
         1 005620   005630 710000 1                  TRA     s:6216

     2409     6210    2              ELSE AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));

   6210  1 005621   000070 236100                    LDQ     56,,PR0
         1 005622   000041 772000                    QRL     33
         1 005623   000115 236106                    LDQ     77,QL,PR0
         1 005624   000033 772000                    QRL     27
         1 005625   000037 376007                    ANQ     31,DL
         1 005626   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 005627   200007 756100                    STQ     AFPOOL$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:370  

     2410     6211
     2411     6212         /***
     2412     6213          *** Position to beginning of next record to write if not continued.
     2413     6214          ***/
     2414     6215
     2415     6216    2              IF F$DCB.CONT

   6216  1 005630   200030 470500                    LDP0    JDCB$,,AUTO
         1 005631   000064 236100                    LDQ     52,,PR0
         1 005632   000040 316007                    CANQ    32,DL
         1 005633   005645 600000 1                  TZE     s:6222

     2416     6217    3              THEN DO;                     /* Remember spanning information      */

     2417     6218    3                 CALL FTW_GETSIZE ALTRET(JUSTALT);

   6218  1 005634   012415 701000 1                  TSX1    FTW_GETSIZE
         1 005635   007212 702000 1                  TSX2    JUSTALT

     2418     6219    3                 IF SPANINFO > 1 THEN F$DCB.SPAN = %YES#;
              6219                          /* Segment continues previous */

   6219  1 005636   200044 235100                    LDA     SPANINFO,,AUTO
         1 005637   000001 115007                    CMPA    1,DL
         1 005640   006325 604400 1                  TMOZ    s:6350

   6219  1 005641   200030 470500                    LDP0    JDCB$,,AUTO
         1 005642   100000 236007                    LDQ     32768,DL
         1 005643   000064 256100                    ORSQ    52,,PR0

     2419     6220    3                 END;

   6220  1 005644   006325 710000 1                  TRA     s:6350

     2420     6221    3              ELSE DO;                     /* Position to next record to write   */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:371  
     2421     6222    3                 IF NOT F$DCB.RPOS

   6222  1 005645   010000 316007                    CANQ    4096,DL
         1 005646   005671 601000 1                  TNZ     s:6236

     2422     6223    4                 THEN DO;                  /* Not already there                  */

     2423     6224    4                    F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL handling */

   6224  1 005647   000020 236003                    LDQ     16,DU
         1 005650   000067 256100                    ORSQ    55,,PR0

     2424     6225    4                    CALL FTW_PNRS(1) ALTRET(CHKEOF); /* Next record              */

   6225  1 005651   000007 236000 2                  LDQ     7
         1 005652   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 005653   013423 701000 1                  TSX1    FTW_PNRS
         1 005654   005656 702000 1                  TSX2    CHKEOF

     2425     6226    5                    DO ALTRET_HANDLING;

   6226  1 005655   005671 710000 1                  TRA     s:6236

   6225  1 005656                       CHKEOF       null
     2426     6227    5   CHKEOF:             ;
     2427     6228    5                       IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN; /* Serious error */

   6228  1 005656   000000 470400 xsym               LDP0    B$JIT$
         1 005657   000012 236100                    LDQ     10,,PR0
         1 005660   377770 376007                    ANQ     131064,DL
         1 005661   000060 116007                    CMPQ    48,DL
         1 005662   005665 600000 1                  TZE     s:6229

   6228  1 005663   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 005664   000000 702211                    TSX2  ! 0,X1

     2428     6229    5                       CALL FTW_RESTORE_POS ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:372  

   6229  1 005665   000310 701000 1                  TSX1    FTW_RESTORE_POS
         1 005666   007212 702000 1                  TSX2    JUSTALT

     2429     6230    5                       B$JIT.ERR = '0'B;   /* Write at end of file               */

   6230  1 005667   000000 470400 xsym               LDP0    B$JIT$
         1 005670   000012 450100                    STZ     10,,PR0

     2430     6231    5                       END;

     2431     6232    4                    END;

     2432     6233         /***
     2433     6234             *** Check key length/location and order if necessary.
     2434     6235             ***/
     2435     6236    4                 DO CASE(F$DCB.ORG);

   6236  1 005671   200030 470500                    LDP0    JDCB$,,AUTO
         1 005672   000032 236100                    LDQ     26,,PR0
         1 005673   000033 772000                    QRL     27
         1 005674   000007 116007                    CMPQ    7,DL
         1 005675   005677 602006 1                  TNC     s:6236+6,QL
         1 005676   006030 710000 1                  TRA     s:6277
         1 005677   006030 710000 1                  TRA     s:6277
         1 005700   006030 710000 1                  TRA     s:6277
         1 005701   005706 710000 1                  TRA     s:6238
         1 005702   006030 710000 1                  TRA     s:6277
         1 005703   006030 710000 1                  TRA     s:6277
         1 005704   005706 710000 1                  TRA     s:6238
         1 005705   005706 710000 1                  TRA     s:6238

     2436     6237    4                    CASE(%KEYED#,%INDEXED#,%RELATIVE#);

     2437     6238    4                       CALL FTW_CHK_KEY_PS1 ALTRET(JUSTALT); /* Check key        */

   6238  1 005706   011623 701000 1                  TSX1    FTW_CHK_KEY_PS1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:373  
         1 005707   007212 702000 1                  TSX2    JUSTALT

     2438     6239    4                       IF F$DCB.ACS = %SEQUEN# AND F$DCB.TAPTYP.HAVLASTKEY

   6239  1 005710   200030 470500                    LDP0    JDCB$,,AUTO
         1 005711   000036 236100                    LDQ     30,,PR0
         1 005712   000777 376007                    ANQ     511,DL
         1 005713   000001 116007                    CMPQ    1,DL
         1 005714   006031 601000 1                  TNZ     s:6283
         1 005715   000067 236100                    LDQ     55,,PR0
         1 005716   000040 316003                    CANQ    32,DU
         1 005717   006031 600000 1                  TZE     s:6283

     2439     6240    5                       THEN DO;            /* Must check key order               */

     2440     6241    5                          IF F$DCB.ORG = %KEYED#

   6241  1 005720   000032 236100                    LDQ     26,,PR0
         1 005721   777000 376003                    ANQ     -512,DU
         1 005722   002000 116003                    CMPQ    1024,DU
         1 005723   005740 601000 1                  TNZ     s:6248

     2441     6242    6                          THEN DO;

     2442     6243    6                             UKEYLEN = B$PS$(1)->FT$KEY.KL;

   6243  1 005724   000001 471400 xsym               LDP1    B$PS$+1
         1 005725   000100 101500                    MRL     fill='000'O
         1 005726   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 005727   200054 000004                    ADSC9   UKEYLEN,,AUTO            cn=0,n=4

     2443     6244    6                             UKEY$ = PINCRC( ADDR(B$PS$(1)->FT$KEY), 1 );

   6244  1 005730   000001 236000 xsym               LDQ     B$PS$+1
         1 005731   200000 036007                    ADLQ    65536,DL
         1 005732   200053 756100                    STQ     UKEY$,,AUTO

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:374  
     2444     6245    6                             ASEG$ = F$DCB.LASTKEY$; /* Pass arguments           */

   6245  1 005733   000065 236100                    LDQ     53,,PR0
         1 005734   200011 756100                    STQ     ASEG$,,AUTO

     2445     6246    6                             CALL FTW_COMPARE_KEYS;

   6246  1 005735   011356 701000 1                  TSX1    FTW_COMPARE_KEYS
         1 005736   000000 011000                    NOP     0

     2446     6247    6                             END;

   6247  1 005737   006020 710000 1                  TRA     s:6270

     2447     6248    5                          ELSE IF F$DCB.ORG = %INDEXED#

   6248  1 005740   006000 116003                    CMPQ    3072,DU
         1 005741   005760 601000 1                  TNZ     s:6256

     2448     6249    6                             THEN DO;

     2449     6250    6                                UKEY$ = PINCRC( DUB$, F$DCB.KEYX );

   6250  1 005742   000036 236100                    LDQ     30,,PR0
         1 005743   000022 772000                    QRL     18
         1 005744   000020 736000                    QLS     16
         1 005745   200017 036100                    ADLQ    DUB$,,AUTO
         1 005746   200053 756100                    STQ     UKEY$,,AUTO

     2450     6251    6                                UKEYLEN = F$DCB.KEYL;

   6251  1 005747   000036 236100                    LDQ     30,,PR0
         1 005750   000011 772000                    QRL     9
         1 005751   000777 376007                    ANQ     511,DL
         1 005752   200054 756100                    STQ     UKEYLEN,,AUTO

     2451     6252    6                                ASEG$ = F$DCB.LASTKEY$;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:375  

   6252  1 005753   000065 236100                    LDQ     53,,PR0
         1 005754   200011 756100                    STQ     ASEG$,,AUTO

     2452     6253    6                                CALL FTW_COMPARE_KEYS;

   6253  1 005755   011356 701000 1                  TSX1    FTW_COMPARE_KEYS
         1 005756   000000 011000                    NOP     0

     2453     6254    6                                END;

   6254  1 005757   006020 710000 1                  TRA     s:6270

     2454     6255    6                             ELSE DO;

     2455     6256    6                                CALL HFF$DSIZ(1,TEMP) ALTRET(HOPETEMP00);

   6256  1 005760   200047 631500                    EPPR1   TEMP,,AUTO
         1 005761   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 005762   000007 236000 2                  LDQ     7
         1 005763   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 005764   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 005765   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 005766   000000 701000 xent               TSX1    HFF$DSIZ
         1 005767   005770 702000 1                  TSX2    HOPETEMP00

     2456     6257    6   HOPETEMP00:                  IF TEMP ~= 0

   6257  1 005770   200047 235100       HOPETEMP00   LDA     TEMP,,AUTO
         1 005771   006016 600000 1                  TZE     s:6268

     2457     6258    7                                THEN DO;   /* User specified key to check        */

     2458     6259    7                                   UKEY$ = ADDR( B$PS$(1)->FOUR_BASED_CHARS );

   6259  1 005772   000001 236000 xsym               LDQ     B$PS$+1
         1 005773   200053 756100                    STQ     UKEY$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:376  

     2459     6260    7                                   IF UKEY$->BASED_WORD < 1

   6260  1 005774   200053 470500                    LDP0    UKEY$,,AUTO
         1 005775   000100 100500                    MLR     fill='000'O
         1 005776   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 005777   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 006000   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 006001   000000 116003                    CMPQ    0,DU
         1 006002   006010 601000 1                  TNZ     s:6265

     2460     6261    8                                   THEN DO;

     2461     6262    8                                     B$JIT.ERR = E_FILLIM; /*E* ERROR: FTW-E$FILLIM */

   6262  1 006003   000031 236000 0                  LDQ     E_FILLIM
         1 006004   000000 471400 xsym               LDP1    B$JIT$
         1 006005   100012 756100                    STQ     10,,PR1

     2462     6263    8                                      ALTRETURN;

   6263  1 006006   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 006007   000000 702211                    TSX2  ! 0,X1

     2463     6264    8                                      END;
     2464     6265    7                                   ASEG$ = ADDR( F$DCB.LASTKEY );

   6265  1 006010   200030 236100                    LDQ     JDCB$,,AUTO
         1 006011   000065 036003                    ADLQ    53,DU
         1 006012   200011 756100                    STQ     ASEG$,,AUTO

     2465     6266    7                                   CALL FTW_COMPARE_KEYS;

   6266  1 006013   011356 701000 1                  TSX1    FTW_COMPARE_KEYS
         1 006014   000000 011000                    NOP     0

     2466     6267    7                                   END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:377  

   6267  1 006015   006020 710000 1                  TRA     s:6270

     2467     6268    6                                ELSE TEMP = 1; /* Key will be manufactured       */

   6268  1 006016   000001 236007                    LDQ     1,DL
         1 006017   200047 756100                    STQ     TEMP,,AUTO

     2468     6269    6                                END;

     2469     6270    5                          IF TEMP ~= 1

   6270  1 006020   200047 235100                    LDA     TEMP,,AUTO
         1 006021   000001 115007                    CMPA    1,DL
         1 006022   006031 600000 1                  TZE     s:6283

     2470     6271    6                          THEN DO;    /* User's key is not greater than previous */

     2471     6272    6                             B$JIT.ERR = E_KEYORDER; /*E* FTW-E$KEYORDER */

   6272  1 006023   000033 236000 0                  LDQ     E_KEYORDER
         1 006024   000000 470400 xsym               LDP0    B$JIT$
         1 006025   000012 756100                    STQ     10,,PR0

     2472     6273    6                             ALTRETURN;

   6273  1 006026   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 006027   000000 702211                    TSX2  ! 0,X1

     2473     6274    6                             END;
     2474     6275    5                          END;
     2475     6276    4                    CASE(ELSE);

     2476     6277    4                       KEYSIZE = 0;

   6277  1 006030   200033 450100                    STZ     KEYSIZE,,AUTO

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:378  
     2477     6278    4                    END;

     2478     6279         /***
     2479     6280             *** Positioned to next record to write.  If previous write request
     2480     6281             *** resulted in EOT detection, CVOL now.
     2481     6282             ***/
     2482     6283    3                 IF F$DCB.MUST_CVOL

   6283  1 006031   200030 470500                    LDP0    JDCB$,,AUTO
         1 006032   000064 236100                    LDQ     52,,PR0
         1 006033   000002 316003                    CANQ    2,DU
         1 006034   006061 600000 1                  TZE     s:6290

     2483     6284    4                 THEN DO;                  /* CVOL now                           */

     2484     6285    4                    F$DCB.NOEOF = %YES#;   /* Indicate output CVOL               */

   6285  1 006035   400000 236007                    LDQ     -131072,DL
         1 006036   000064 256100                    ORSQ    52,,PR0

     2485     6286    4                    CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(JUSTALT);

   6286  1 006037   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 006040   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006041   000031 236000 2                  LDQ     25
         1 006042   200115 756100                    STQ     @FIELD_LENGTH+5,,AUTO
         1 006043   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 006044   200114 451500                    STP1    @FIELD_LENGTH+4,,AUTO
         1 006045   200022 633500                    EPPR3   EOXL,,AUTO
         1 006046   200113 453500                    STP3    @FIELD_LENGTH+3,,AUTO
         1 006047   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 006050   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 006051   000000 701000 xent               TSX1    FTL$CVOL
         1 006052   007212 702000 1                  TSX2    JUSTALT

     2486     6287    4                    F$DCB.CRECX = F$DCB.BOL; /* Resume at first blk of sect      */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:379  
   6287  1 006053   200030 470500                    LDP0    JDCB$,,AUTO
         1 006054   000034 720100                    LXL0    28,,PR0
         1 006055   000777 360003                    ANX0    511,DU
         1 006056   000067 440100                    SXL0    55,,PR0

     2487     6288    4                    F$DCB.NRECX = 1;       /* At first record of block           */

   6288  1 006057   000001 221003                    LDX1    1,DU
         1 006060   000100 741100                    STX1    64,,PR0

     2488     6289    4                    END;

     2489     6290    3                 F$DCB.BLKLEN = F$DCB.CRECX;

   6290  1 006061   000067 720100                    LXL0    55,,PR0
         1 006062   000074 440100                    SXL0    60,,PR0

     2490     6291    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#;

   6291  1 006063   000070 236100                    LDQ     56,,PR0
         1 006064   000041 772000                    QRL     33
         1 006065   000000 621006                    EAX1    0,QL
         1 006066   400000 236003                    LDQ     -131072,DU
         1 006067   000115 256111                    ORSQ    77,X1,PR0

     2491     6292    3                 F$DCB.NOEOF = %YES#;

   6292  1 006070   400000 236007                    LDQ     -131072,DL
         1 006071   000064 256100                    ORSQ    52,,PR0

     2492     6293    3                 F$DCB.FMOD = %YES#;

   6293  1 006072   040000 236003                    LDQ     16384,DU
         1 006073   000064 256100                    ORSQ    52,,PR0

     2493     6294    3                 F$DCB.NEW_FSECT = %NO#;   /* Have something in section          */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:380  
   6294  1 006074   000034 236000 2                  LDQ     28
         1 006075   000064 356100                    ANSQ    52,,PR0

     2494     6295         /***
     2495     6296             *** Truncate block if not first segment and the file is not blocked
     2496     6297             *** or if there is not enough room for RCW and key (if any).
     2497     6298             ***/
     2498     6299    3                 IF F$DCB.CRECX ~= F$DCB.BOL

   6299  1 006076   000034 236100                    LDQ     28,,PR0
         1 006077   000777 376007                    ANQ     511,DL
         1 006100   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006101   000067 236100                    LDQ     55,,PR0
         1 006102   777777 376007                    ANQ     -1,DL
         1 006103   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 006104   006165 600000 1                  TZE     s:6317

     2499     6300    4                 THEN DO;                  /* Not first segment of block         */

     2500     6301    4                    IF NOT F$DCB.BLOCKED

   6301  1 006105   000031 236100                    LDQ     25,,PR0
         1 006106   000010 316007                    CANQ    8,DL
         1 006107   006160 600000 1                  TZE     s:6310
         1 006110   000074 236100                    LDQ     60,,PR0
         1 006111   777777 376007                    ANQ     -1,DL
         1 006112   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 006113   200033 036100                    ADLQ    KEYSIZE,,AUTO
         1 006114   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006115   000033 236100                    LDQ     27,,PR0
         1 006116   000022 772000                    QRL     18
         1 006117   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 006120   006160 604000 1                  TMI     s:6310
         1 006121   000031 236100                    LDQ     25,,PR0
         1 006122   000004 316007                    CANQ    4,DL
         1 006123   006165 601000 1                  TNZ     s:6317
         1 006124   000033 236100                    LDQ     27,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:381  
         1 006125   777777 376007                    ANQ     -1,DL
         1 006126   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 006127   000074 236100                    LDQ     60,,PR0
         1 006130   777777 376007                    ANQ     -1,DL
         1 006131   200113 036100                    ADLQ    @FIELD_LENGTH+3,,AUTO
         1 006132   200114 756100                    STQ     @FIELD_LENGTH+4,,AUTO
         1 006133   000033 236100                    LDQ     27,,PR0
         1 006134   000022 772000                    QRL     18
         1 006135   200114 116100                    CMPQ    @FIELD_LENGTH+4,,AUTO
         1 006136   006143 603000 1                  TRC     s:6301+30
         1 006137   000032 236100                    LDQ     26,,PR0
         1 006140   777000 376003                    ANQ     -512,DU
         1 006141   020000 116003                    CMPQ    8192,DU
         1 006142   006160 601000 1                  TNZ     s:6310
         1 006143   000074 236100                    LDQ     60,,PR0
         1 006144   777777 376007                    ANQ     -1,DL
         1 006145   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 006146   200020 036100                    ADLQ    DUBYTES,,AUTO
         1 006147   200115 756100                    STQ     @FIELD_LENGTH+5,,AUTO
         1 006150   000033 236100                    LDQ     27,,PR0
         1 006151   000022 772000                    QRL     18
         1 006152   200115 116100                    CMPQ    @FIELD_LENGTH+5,,AUTO
         1 006153   006165 605000 1                  TPL     s:6317
         1 006154   000032 236100                    LDQ     26,,PR0
         1 006155   777000 376003                    ANQ     -512,DU
         1 006156   020000 116003                    CMPQ    8192,DU
         1 006157   006165 601000 1                  TNZ     s:6317

     2501     6302    4                        OR
     2502     6303    4                        F$DCB.BLKLEN + RCWSIZE + KEYSIZE > F$DCB.BLKL
     2503     6304    4                        OR
     2504     6305    4                        (NOT F$DCB.SPANNED
     2505     6306    4                        AND ((F$DCB.BLKLEN + F$DCB.RECL > F$DCB.BLKL AND F$DCB.ORG~=%
              6306                                 VARIABLE#)
     2506     6307    4                        OR (F$DCB.BLKLEN+RCWSIZE+DUBYTES > F$DCB.BLKL AND
     2507     6308    4                        F$DCB.ORG=%VARIABLE#)))
     2508     6309    5                    THEN DO;               /* Write current block and ready next */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:382  

     2509     6310    5                       CALL FTW_TRUNCIT ALTRET(JUSTALT);

   6310  1 006160   007240 701000 1                  TSX1    FTW_TRUNCIT
         1 006161   007212 702000 1                  TSX2    JUSTALT

     2510     6311    5                       F$DCB.NRECX = 1;    /* At first record of block           */

   6311  1 006162   000001 220003                    LDX0    1,DU
         1 006163   200030 470500                    LDP0    JDCB$,,AUTO
         1 006164   000100 740100                    STX0    64,,PR0

     2511     6312    5                       END;

     2512     6313    4                    END;

     2513     6314         /***
     2514     6315             *** Move key to the record segment.
     2515     6316             ***/
     2516     6317    4                 DO CASE(F$DCB.ORG);

   6317  1 006165   000032 236100                    LDQ     26,,PR0
         1 006166   000033 772000                    QRL     27
         1 006167   000007 116007                    CMPQ    7,DL
         1 006170   006172 602006 1                  TNC     s:6317+5,QL
         1 006171   006313 710000 1                  TRA     s:6339
         1 006172   006313 710000 1                  TRA     s:6339
         1 006173   006313 710000 1                  TRA     s:6339
         1 006174   006201 710000 1                  TRA     s:6319
         1 006175   006313 710000 1                  TRA     s:6339
         1 006176   006313 710000 1                  TRA     s:6339
         1 006177   006244 710000 1                  TRA     s:6328
         1 006200   006201 710000 1                  TRA     s:6319

     2517     6318    4                    CASE(%KEYED#,%INDEXED#);

     2518     6319    4                       ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:383  

   6319  1 006201   000067 236100                    LDQ     55,,PR0
         1 006202   777777 376007                    ANQ     -1,DL
         1 006203   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 006204   000020 736000                    QLS     16
         1 006205   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 006206   200011 756100                    STQ     ASEG$,,AUTO

     2519     6320    4                       IF F$DCB.ORG = %KEYED#

   6320  1 006207   000032 236100                    LDQ     26,,PR0
         1 006210   777000 376003                    ANQ     -512,DU
         1 006211   002000 116003                    CMPQ    1024,DU
         1 006212   006222 601000 1                  TNZ     s:6323

     2520     6321    4                       THEN ASEG$->KEYCHARS = B$PS$(1)->KEYCHARS; /* Move key    */

   6321  1 006213   000001 471400 xsym               LDP1    B$PS$+1
         1 006214   200033 720100                    LXL0    KEYSIZE,,AUTO
         1 006215   200011 473500                    LDP3    ASEG$,,AUTO
         1 006216   040140 100540                    MLR     fill='040'O
         1 006217   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 006220   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 006221   006232 710000 1                  TRA     s:6325

     2521     6322    5                       ELSE DO;            /* Indexed                            */

     2522     6323    5                          ASEG$->KEYCHARS = PINCRC( DUB$, F$DCB.KEYX )->KEYCHARS;

   6323  1 006222   000036 236100                    LDQ     30,,PR0
         1 006223   000022 772000                    QRL     18
         1 006224   200017 471500                    LDP1    DUB$,,AUTO
         1 006225   200033 720100                    LXL0    KEYSIZE,,AUTO
         1 006226   200011 473500                    LDP3    ASEG$,,AUTO
         1 006227   040140 100546                    MLR     fill='040'O
         1 006230   100000 000010                    ADSC9   0,Q,PR1                  cn=0,n=*X0
         1 006231   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:384  

     2523     6324    5                          END;

     2524     6325    4                       F$DCB.GDISP = RCWSIZE + KEYSIZE; /* To first byte of data */

   6325  1 006232   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 006233   200033 036100                    ADLQ    KEYSIZE,,AUTO
         1 006234   000101 756100                    STQ     65,,PR0

     2525     6326    4                       IF F$DCB.ACS = %SEQUEN# THEN CALL FTW_SAVE_LAST_KEY;

   6326  1 006235   000036 236100                    LDQ     30,,PR0
         1 006236   000777 376007                    ANQ     511,DL
         1 006237   000001 116007                    CMPQ    1,DL
         1 006240   006315 601000 1                  TNZ     s:6341

   6326  1 006241   011716 701000 1                  TSX1    FTW_SAVE_LAST_KEY
         1 006242   000000 011000                    NOP     0
         1 006243   006315 710000 1                  TRA     s:6341

     2526     6327    4                    CASE(%RELATIVE#);

     2527     6328    4                       ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

   6328  1 006244   000067 236100                    LDQ     55,,PR0
         1 006245   777777 376007                    ANQ     -1,DL
         1 006246   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 006247   000020 736000                    QLS     16
         1 006250   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 006251   200011 756100                    STQ     ASEG$,,AUTO

     2528     6329    4                       CALL HFF$NILERASE(1) ALTRET(NOKEYS);

   6329  1 006252   000007 630400 2                  EPPR0   7
         1 006253   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 006254   000000 701000 xent               TSX1    HFF$NILERASE
         1 006255   006264 702000 1                  TSX2    NOKEYS
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:385  

     2529     6330    4                       ASEG$->FOUR_BASED_CHARS = B$PS$(1)->FOUR_BASED_CHARS;

   6330  1 006256   000001 470400 xsym               LDP0    B$PS$+1
         1 006257   200011 471500                    LDP1    ASEG$,,AUTO
         1 006260   040100 100500                    MLR     fill='040'O
         1 006261   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 006262   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

     2530     6331    5                       DO ALTRET_HANDLING;

   6331  1 006263   006274 710000 1                  TRA     s:6335

   6330  1 006264                       NOKEYS       null
     2531     6332    5   NOKEYS:                ;
     2532     6333    5                          ASEG$->BASED_WORD = F$DCB.LASTKEY + 1;

   6333  1 006264   200030 470500                    LDP0    JDCB$,,AUTO
         1 006265   000065 236100                    LDQ     53,,PR0
         1 006266   000001 036007                    ADLQ    1,DL
         1 006267   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006270   200011 471500                    LDP1    ASEG$,,AUTO
         1 006271   000100 100500                    MLR     fill='000'O
         1 006272   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 006273   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

     2533     6334    5                          END;

     2534     6335    4                       F$DCB.LASTKEY = ASEG$->BASED_WORD;

   6335  1 006274   200030 470500                    LDP0    JDCB$,,AUTO
         1 006275   000100 100500                    MLR     fill='000'O
         1 006276   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 006277   000065 000004                    ADSC9   53,,PR0                  cn=0,n=4

     2535     6336    4                       IF F$DCB.ACS = %SEQUEN# THEN CALL FTW_SAVE_LAST_KEY;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:386  
   6336  1 006300   000036 236100                    LDQ     30,,PR0
         1 006301   000777 376007                    ANQ     511,DL
         1 006302   000001 116007                    CMPQ    1,DL
         1 006303   006306 601000 1                  TNZ     s:6337

   6336  1 006304   011716 701000 1                  TSX1    FTW_SAVE_LAST_KEY
         1 006305   000000 011000                    NOP     0

     2536     6337    4                       F$DCB.GDISP = RCWSIZE + KEYSIZE;

   6337  1 006306   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 006307   200033 036100                    ADLQ    KEYSIZE,,AUTO
         1 006310   200030 470500                    LDP0    JDCB$,,AUTO
         1 006311   000101 756100                    STQ     65,,PR0
         1 006312   006315 710000 1                  TRA     s:6341

     2537     6338    4                    CASE(ELSE);

     2538     6339    4                       F$DCB.GDISP = RCWSIZE;

   6339  1 006313   200036 235100                    LDA     RCWSIZE,,AUTO
         1 006314   000101 755100                    STA     65,,PR0

     2539     6340    4                    END;

     2540     6341    3                 F$DCB.SPAN = %NO#;        /* Beginning of record                */

   6341  1 006315   200030 470500                    LDP0    JDCB$,,AUTO
         1 006316   000005 236000 2                  LDQ     5
         1 006317   000064 356100                    ANSQ    52,,PR0

     2541     6342    3                 F$DCB.RPOS = %NO#;

   6342  1 006320   000013 236000 2                  LDQ     11
         1 006321   000064 356100                    ANSQ    52,,PR0

     2542     6343    3                 F$DCB.BYTESLEFT = F$DCB.RECL;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:387  
              6343                          /* Maximum number of bytes in this record */

   6343  1 006322   000033 236100                    LDQ     27,,PR0
         1 006323   777777 376007                    ANQ     -1,DL
         1 006324   000070 552134                    STBQ    56,'34'O,PR0

     2543     6344    3                 END;

     2544     6345
     2545     6346         /***
     2546     6347          *** Determine maximum segment size for format type.
     2547     6348          ***/
     2548     6349
     2549     6350    3              DO CASE(RCWTYPE);

   6350  1 006325   200037 235100                    LDA     RCWTYPE,,AUTO
         1 006326   000003 115007                    CMPA    3,DL
         1 006327   006331 602005 1                  TNC     s:6350+4,AL
         1 006330   006341 710000 1                  TRA     s:6364
         1 006331   006334 710000 1                  TRA     s:6352
         1 006332   006337 710000 1                  TRA     s:6354
         1 006333   006334 710000 1                  TRA     s:6352

     2550     6351    3                 CASE(RCWNONE#,RCWBIN#);

     2551     6352    3                    RECSIZE = 65536;

   6352  1 006334   200000 236007                    LDQ     65536,DL
         1 006335   200040 756100                    STQ     RECSIZE,,AUTO
         1 006336   006341 710000 1                  TRA     s:6364

     2552     6353    3                 CASE(RCWDEC#);            /* ANS D and S                        */

     2553     6354    3                    RECSIZE = 9999;

   6354  1 006337   023417 236007                    LDQ     9999,DL
         1 006340   200040 756100                    STQ     RECSIZE,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:388  

     2554     6355    3                 END;

     2555     6356
     2556     6357         /***
     2557     6358          *** We are ready to move the data portion to the FPOOL buffer.
     2558     6359          *** For spanned records, break user buffer into .RECL sized
     2559     6360          *** segments.  If unspanned, only permit one .RECL sized segment.
     2560     6361          *** For spanned, unblocked files, write each segment to tape.
     2561     6362          ***/
     2562     6363
     2563     6364    2              IF F$DCB.ORG = %UR#

   6364  1 006341   200030 470500                    LDP0    JDCB$,,AUTO
         1 006342   000032 236100                    LDQ     26,,PR0
         1 006343   777000 376003                    ANQ     -512,DU
         1 006344   004000 116003                    CMPQ    2048,DU
         1 006345   006363 601000 1                  TNZ     s:6375

     2564     6365    2              THEN IF ADDR(VFC) ~= ADDR(NIL)

   6365  1 006346   200005 236100                    LDQ     @VFC,,AUTO
         1 006347   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 006350   006356 600000 1                  TZE     s:6372

     2565     6366    3                 THEN DO;             /* Indicate move VFC char first for VFC UR */

     2566     6367    3                    DUB$ = ADDR(VFC);

   6367  1 006351   200017 756100                    STQ     DUB$,,AUTO

     2567     6368    3                    BYTES_TO_GO = 1;

   6368  1 006352   000001 235007                    LDA     1,DL
         1 006353   200012 755100                    STA     BYTES_TO_GO,,AUTO

     2568     6369    3                    VFC_MOVED = %NO#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:389  

   6369  1 006354   200055 450100                    STZ     VFC_MOVED,,AUTO

     2569     6370    3                    END;

   6370  1 006355   006365 710000 1                  TRA     s:6376

     2570     6371    3                 ELSE DO;                  /* No VFC to move                     */

     2571     6372    3                    BYTES_TO_GO = DUBYTES;

   6372  1 006356   200020 235100                    LDA     DUBYTES,,AUTO
         1 006357   200012 755100                    STA     BYTES_TO_GO,,AUTO

     2572     6373    3                    VFC_MOVED = %YES#;

   6373  1 006360   400000 236003                    LDQ     -131072,DU
         1 006361   200055 756100                    STQ     VFC_MOVED,,AUTO

     2573     6374    3                    END;

   6374  1 006362   006365 710000 1                  TRA     s:6376

     2574     6375    2              ELSE BYTES_TO_GO = DUBYTES;

   6375  1 006363   200020 235100                    LDA     DUBYTES,,AUTO
         1 006364   200012 755100                    STA     BYTES_TO_GO,,AUTO

     2575     6376    2              SEGSIZE = -1;      /* Makes sure that 0 byte records are processed */

   6376  1 006365   000001 336007                    LCQ     1,DL
         1 006366   200041 756100                    STQ     SEGSIZE,,AUTO

     2576     6377    3              DO WHILE( BYTES_TO_GO > 0 OR SEGSIZE < 0 );

   6377  1 006367   007152 710000 1                  TRA     s:6561

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:390  
     2577     6378         /***
     2578     6379             *** If the current record will not fit into the current block,
     2579     6380             *** trunc the current block and begin new record at next block.
     2580     6381             ***/
     2581     6382    3                 MAXRECL = F$DCB.BLKL - F$DCB.CRECX; /* Max # bytes left         */

   6382  1 006370   200030 470500                    LDP0    JDCB$,,AUTO
         1 006371   000067 236100                    LDQ     55,,PR0
         1 006372   777777 376007                    ANQ     -1,DL
         1 006373   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006374   000033 236100                    LDQ     27,,PR0
         1 006375   000022 772000                    QRL     18
         1 006376   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 006377   200034 756100                    STQ     MAXRECL,,AUTO

     2582     6383    3                 IF (NOT F$DCB.SPANNED AND

   6383  1 006400   000031 236100                    LDQ     25,,PR0
         1 006401   000004 316007                    CANQ    4,DL
         1 006402   006423 601000 1                  TNZ     s:6383+19
         1 006403   000033 236100                    LDQ     27,,PR0
         1 006404   777777 376007                    ANQ     -1,DL
         1 006405   200034 116100                    CMPQ    MAXRECL,,AUTO
         1 006406   006413 604400 1                  TMOZ    s:6383+11
         1 006407   000032 236100                    LDQ     26,,PR0
         1 006410   777000 376003                    ANQ     -512,DU
         1 006411   020000 116003                    CMPQ    8192,DU
         1 006412   006432 601000 1                  TNZ     s:6389
         1 006413   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 006414   200020 036100                    ADLQ    DUBYTES,,AUTO
         1 006415   200034 116100                    CMPQ    MAXRECL,,AUTO
         1 006416   006423 604400 1                  TMOZ    s:6383+19
         1 006417   000032 236100                    LDQ     26,,PR0
         1 006420   777000 376003                    ANQ     -512,DU
         1 006421   020000 116003                    CMPQ    8192,DU
         1 006422   006432 600000 1                  TZE     s:6389
         1 006423   200034 236100                    LDQ     MAXRECL,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:391  
         1 006424   200036 116100                    CMPQ    RCWSIZE,,AUTO
         1 006425   006432 604400 1                  TMOZ    s:6389
         1 006426   000101 236100                    LDQ     65,,PR0
         1 006427   006432 604000 1                  TMI     s:6389
         1 006430   200040 116100                    CMPQ    RECSIZE,,AUTO
         1 006431   006444 604000 1                  TMI     s:6401

     2583     6384    3                     ((MAXRECL < F$DCB.RECL AND F$DCB.ORG~=%VARIABLE#) OR
     2584     6385    3                     (MAXRECL < RCWSIZE+DUBYTES AND F$DCB.ORG=%VARIABLE#))) OR
     2585     6386                             /* Require enough room for entire segment if not spanned */
     2586     6387    3                     MAXRECL <= RCWSIZE OR /* Require enough room for RCW        */
     2587     6388    4                     F$DCB.GDISP >= RECSIZE THEN DO;
              6388                              /* Must trunc if max segment used */

     2588     6389    4                    CALL FTW_TRUNCIT ALTRET(JUSTALT); /* Trunc now               */

   6389  1 006432   007240 701000 1                  TSX1    FTW_TRUNCIT
         1 006433   007212 702000 1                  TSX2    JUSTALT

     2589     6390    4                    MAXRECL = F$DCB.BLKL - F$DCB.CRECX; /* Back to maximum       */

   6390  1 006434   200030 470500                    LDP0    JDCB$,,AUTO
         1 006435   000067 236100                    LDQ     55,,PR0
         1 006436   777777 376007                    ANQ     -1,DL
         1 006437   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006440   000033 236100                    LDQ     27,,PR0
         1 006441   000022 772000                    QRL     18
         1 006442   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 006443   200034 756100                    STQ     MAXRECL,,AUTO

     2590     6391    4                    END;

     2591     6392
     2592     6393        /*
     2593     6394         * If this is a continued write of a variable-length record, and we're out of
     2594     6395         * space in this block, and this is not the first record of the block, AND
     2595     6396         * records aren't spanned across blocks, then save the current record, trunc
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:392  
     2596     6397         * this block, and put the current record in a new block.  This is all to make
     2597     6398         * continued writes a little more efficient, space-wise.
     2598     6399         */
     2599     6400
     2600     6401    3                 IF F$DCB.ORG = %VARIABLE# AND /* Variable-length record.        */

   6401  1 006444   000032 236100                    LDQ     26,,PR0
         1 006445   777000 376003                    ANQ     -512,DU
         1 006446   020000 116003                    CMPQ    8192,DU
         1 006447   006606 601000 1                  TNZ     s:6431
         1 006450   000031 236100                    LDQ     25,,PR0
         1 006451   000004 316007                    CANQ    4,DL
         1 006452   006606 601000 1                  TNZ     s:6431
         1 006453   000064 236100                    LDQ     52,,PR0
         1 006454   000040 316007                    CANQ    32,DL
         1 006455   006606 600000 1                  TZE     s:6431
         1 006456   000034 236100                    LDQ     28,,PR0
         1 006457   000777 376007                    ANQ     511,DL
         1 006460   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006461   000067 236100                    LDQ     55,,PR0
         1 006462   777777 376007                    ANQ     -1,DL
         1 006463   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 006464   006606 600000 1                  TZE     s:6431
         1 006465   000101 036100                    ADLQ    65,,PR0
         1 006466   200012 036100                    ADLQ    BYTES_TO_GO,,AUTO
         1 006467   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 006470   000033 236100                    LDQ     27,,PR0
         1 006471   000022 772000                    QRL     18
         1 006472   200113 116100                    CMPQ    @FIELD_LENGTH+3,,AUTO
         1 006473   006606 605000 1                  TPL     s:6431

     2601     6402    3                     NOT F$DCB.SPANNED AND /* Records aren't spanned.            */
     2602     6403    3                     F$DCB.CONT AND        /* Continued write.                   */
     2603     6404    3                     F$DCB.CRECX ~= F$DCB.BOL AND
              6404                              /* Not the first record of the block. */
     2604     6405    4                     F$DCB.CRECX+F$DCB.GDISP+BYTES_TO_GO > F$DCB.BLKL THEN DO;
              6405                              /* Out of space. */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:393  

     2605     6406    5                    CALL FTW_TMPFPOOL(TEMPFP$,TEMPFPOOL,F$DCB.GDISP) WHENRETURN DO;

   6406  1 006474   200030 236100                    LDQ     JDCB$,,AUTO
         1 006475   000101 036003                    ADLQ    65,DU
         1 006476   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 006477   200052 631500                    EPPR1   TEMPFPOOL,,AUTO
         1 006500   200072 451500                    STP1    @FP$+1,,AUTO
         1 006501   200051 633500                    EPPR3   TEMPFP$,,AUTO
         1 006502   200071 453500                    STP3    TEMP+2,,AUTO
         1 006503   014177 701000 1                  TSX1    FTW_TMPFPOOL
         1 006504   006602 702000 1                  TSX2    s:6423

     2606     6407    5                       ASEG$ = PINCRC(AFPOOL$,F$DCB.CRECX);
              6407                                /* Point at beginning of rec */

   6407  1 006505   200030 470500                    LDP0    JDCB$,,AUTO
         1 006506   000067 236100                    LDQ     55,,PR0
         1 006507   777777 376007                    ANQ     -1,DL
         1 006510   000020 736000                    QLS     16
         1 006511   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 006512   200011 756100                    STQ     ASEG$,,AUTO

     2607     6408    5                       CHARZLEN = F$DCB.GDISP; /* Length of rec, incl RCW        */

   6408  1 006513   000101 235100                    LDA     65,,PR0
         1 006514   200013 755100                    STA     CHARZLEN,,AUTO

     2608     6409    5                       TEMP$->CHARZ = ASEG$->CHARZ; /* Save the current record.  */

   6409  1 006515   200011 471500                    LDP1    ASEG$,,AUTO
         1 006516   000000 620005                    EAX0    0,AL
         1 006517   200050 473500                    LDP3    TEMP$,,AUTO
         1 006520   200013 721100                    LXL1    CHARZLEN,,AUTO
         1 006521   040140 100540                    MLR     fill='040'O
         1 006522   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 006523   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:394  

     2609     6410    5                       F$DCB.BLKLEN = F$DCB.CRECX;
              6410                                /* Remove this rec from block length */

   6410  1 006524   000067 720100                    LXL0    55,,PR0
         1 006525   000074 440100                    SXL0    60,,PR0

     2610     6411    5                       CALL FTW_SETBLKLEN;
              6411                                /* Set the block length in the block header */

   6411  1 006526   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 006527   000000 011000                    NOP     0

     2611     6412    5                      CALL FTW_TRUNCIT ALTRET(JUSTALT); /* Trunc the current buffer */

   6412  1 006530   007240 701000 1                  TSX1    FTW_TRUNCIT
         1 006531   007212 702000 1                  TSX2    JUSTALT

     2612     6413    5                       ASEG$ = PINCRC(AFPOOL$,F$DCB.CRECX);
              6413                                /* Point at rec destination */

   6413  1 006532   200030 470500                    LDP0    JDCB$,,AUTO
         1 006533   000067 236100                    LDQ     55,,PR0
         1 006534   777777 376007                    ANQ     -1,DL
         1 006535   000020 736000                    QLS     16
         1 006536   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 006537   200011 756100                    STQ     ASEG$,,AUTO

     2613     6414    5                       CHARZLEN = F$DCB.GDISP;

   6414  1 006540   000101 235100                    LDA     65,,PR0
         1 006541   200013 755100                    STA     CHARZLEN,,AUTO

     2614     6415    5                       ASEG$->CHARZ = TEMP$->CHARZ; /* Restore the record.       */

   6415  1 006542   200050 471500                    LDP1    TEMP$,,AUTO
         1 006543   000000 620005                    EAX0    0,AL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:395  
         1 006544   200011 473500                    LDP3    ASEG$,,AUTO
         1 006545   200013 721100                    LXL1    CHARZLEN,,AUTO
         1 006546   040140 100540                    MLR     fill='040'O
         1 006547   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 006550   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     2615     6416    5                       CALL FMD$RELBUF(I); /* Release our temporary FPOOL.       */

   6416  1 006551   200026 634500                    EPPR4   I,,AUTO
         1 006552   200112 454500                    STP4    @FIELD_LENGTH+2,,AUTO
         1 006553   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 006554   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 006555   000000 701000 xent               TSX1    FMD$RELBUF
         1 006556   000000 011000                    NOP     0

     2616     6417    5                       F$DCB.NRECX = 1;    /* At first record of block.          */

   6417  1 006557   000001 220003                    LDX0    1,DU
         1 006560   200030 470500                    LDP0    JDCB$,,AUTO
         1 006561   000100 740100                    STX0    64,,PR0

     2617     6418    5                       F$DCB.BLKLEN = F$DCB.CRECX + F$DCB.GDISP;

   6418  1 006562   000067 236100                    LDQ     55,,PR0
         1 006563   777777 376007                    ANQ     -1,DL
         1 006564   000101 036100                    ADLQ    65,,PR0
         1 006565   000000 621006                    EAX1    0,QL
         1 006566   000074 441100                    SXL1    60,,PR0

     2618     6419    5                       CALL FTW_SETBLKLEN; /* Set the new block length.          */

   6419  1 006567   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 006570   000000 011000                    NOP     0

     2619     6420    5                       MAXRECL = F$DCB.BLKL - F$DCB.CRECX;
              6420                                /* New max # of bytes left */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:396  
   6420  1 006571   200030 470500                    LDP0    JDCB$,,AUTO
         1 006572   000067 236100                    LDQ     55,,PR0
         1 006573   777777 376007                    ANQ     -1,DL
         1 006574   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 006575   000033 236100                    LDQ     27,,PR0
         1 006576   000022 772000                    QRL     18
         1 006577   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 006600   200034 756100                    STQ     MAXRECL,,AUTO

     2620     6421    5                       END;

   6421  1 006601   006606 710000 1                  TRA     s:6431

     2621     6422    5                    WHENALTRETURN DO;      /* Couldn't get a temp FPOOL.         */

     2622     6423    5                       BYTES_TO_GO = MAXRECL - F$DCB.GDISP; /* Truncate the record. */

   6423  1 006602   200030 470500                    LDP0    JDCB$,,AUTO
         1 006603   200034 236100                    LDQ     MAXRECL,,AUTO
         1 006604   000101 136100                    SBLQ    65,,PR0
         1 006605   200012 756100                    STQ     BYTES_TO_GO,,AUTO

     2623     6424    5                       END;

     2624     6425    4                    END;

     2625     6426
     2626     6427         /***
     2627     6428             *** Limit maximum to that imposed by maximum segment.
     2628     6429             ***/
     2629     6430
     2630     6431    4                 IF F$DCB.SPANNED THEN DO;

   6431  1 006606   000031 236100                    LDQ     25,,PR0
         1 006607   000004 316007                    CANQ    4,DL
         1 006610   006617 600000 1                  TZE     s:6436

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:397  
     2631     6432    4                    IF MAXRECL > RECSIZE

   6432  1 006611   200034 236100                    LDQ     MAXRECL,,AUTO
         1 006612   200040 116100                    CMPQ    RECSIZE,,AUTO
         1 006613   006632 604400 1                  TMOZ    s:6447

     2632     6433    4                    THEN MAXRECL = RECSIZE;

   6433  1 006614   200040 235100                    LDA     RECSIZE,,AUTO
         1 006615   200034 755100                    STA     MAXRECL,,AUTO

     2633     6434    4                    END;

   6434  1 006616   006632 710000 1                  TRA     s:6447

     2634     6435    4                 ELSE DO;

     2635     6436    4                    IF MAXRECL > F$DCB.RECL

   6436  1 006617   000033 236100                    LDQ     27,,PR0
         1 006620   777777 376007                    ANQ     -1,DL
         1 006621   200034 116100                    CMPQ    MAXRECL,,AUTO
         1 006622   006625 605000 1                  TPL     s:6438

     2636     6437    4                    THEN MAXRECL = F$DCB.RECL;
              6437                             /* RECL is always smaller than max segment size */

   6437  1 006623   200034 756100                    STQ     MAXRECL,,AUTO
         1 006624   006632 710000 1                  TRA     s:6447

     2637     6438    4                    ELSE IF MAXRECL > RECSIZE

   6438  1 006625   200034 236100                    LDQ     MAXRECL,,AUTO
         1 006626   200040 116100                    CMPQ    RECSIZE,,AUTO
         1 006627   006632 604400 1                  TMOZ    s:6447

     2638     6439    4                       THEN MAXRECL = RECSIZE;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:398  

   6439  1 006630   200040 235100                    LDA     RECSIZE,,AUTO
         1 006631   200034 755100                    STA     MAXRECL,,AUTO

     2639     6440    4                    END;

     2640     6441         /***
     2641     6442             *** Record length is the number of bytes to write plus the
     2642     6443             *** number of bytes previously written.  If this exceeds the
     2643     6444             *** maximum, truncate the record and return a lost data error.
     2644     6445             ***/
     2645     6446
     2646     6447    3                 ARECL = BYTES_TO_GO + F$DCB.GDISP; /* # to write + # written    */

   6447  1 006632   200012 236100                    LDQ     BYTES_TO_GO,,AUTO
         1 006633   000101 036100                    ADLQ    65,,PR0
         1 006634   200010 756100                    STQ     ARECL,,AUTO

     2647     6448    3                 IF ARECL > MAXRECL

   6448  1 006635   006640 604000 1                  TMI     s:6450
         1 006636   200034 116100                    CMPQ    MAXRECL,,AUTO
         1 006637   006664 604400 1                  TMOZ    s:6463

     2648     6449    4                 THEN DO;                  /* Record exceeds maximum size        */

     2649     6450    4                    ARECL = MAXRECL;       /* Truncate at maximum size           */

   6450  1 006640   200034 235100                    LDA     MAXRECL,,AUTO
         1 006641   200010 755100                    STA     ARECL,,AUTO

     2650     6451    4                    IF F$DCB.SPANNED

   6451  1 006642   000031 236100                    LDQ     25,,PR0
         1 006643   000004 316007                    CANQ    4,DL
         1 006644   006654 600000 1                  TZE     s:6457

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:399  
     2651     6452    5                    THEN DO;               /* Split up record                    */

     2652     6453    5                       DUBYTES = ARECL - F$DCB.GDISP;

   6453  1 006645   200010 236100                    LDQ     ARECL,,AUTO
         1 006646   000101 136100                    SBLQ    65,,PR0
         1 006647   200020 756100                    STQ     DUBYTES,,AUTO

     2653     6454    5                       BYTES_TO_GO = BYTES_TO_GO - DUBYTES;

   6454  1 006650   200012 236100                    LDQ     BYTES_TO_GO,,AUTO
         1 006651   200020 136100                    SBLQ    DUBYTES,,AUTO
         1 006652   200012 756100                    STQ     BYTES_TO_GO,,AUTO

     2654     6455    5                       END;

   6455  1 006653   006667 710000 1                  TRA     s:6472

     2655     6456    5                    ELSE DO;               /* Only allowed one segment           */

     2656     6457    5                       B$JIT.ERR = E_LD; /*E* ERROR: FTW-E$LD */

   6457  1 006654   000034 236000 0                  LDQ     E_LD
         1 006655   000000 471400 xsym               LDP1    B$JIT$
         1 006656   100012 756100                    STQ     10,,PR1

     2657     6458    5                       DUBYTES = MAXRECL - F$DCB.GDISP;

   6458  1 006657   200034 236100                    LDQ     MAXRECL,,AUTO
         1 006660   000101 136100                    SBLQ    65,,PR0
         1 006661   200020 756100                    STQ     DUBYTES,,AUTO

     2658     6459    5                       BYTES_TO_GO = 0;

   6459  1 006662   200012 450100                    STZ     BYTES_TO_GO,,AUTO

     2659     6460    5                       END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:400  

     2660     6461    4                    END;

   6461  1 006663   006667 710000 1                  TRA     s:6472

     2661     6462    4                 ELSE DO;                  /* Can fit entire segment             */

     2662     6463    4                    DUBYTES = BYTES_TO_GO; /* Move everything                    */

   6463  1 006664   200012 235100                    LDA     BYTES_TO_GO,,AUTO
         1 006665   200020 755100                    STA     DUBYTES,,AUTO

     2663     6464    4                    BYTES_TO_GO = 0;       /* Nothing left                       */

   6464  1 006666   200012 450100                    STZ     BYTES_TO_GO,,AUTO

     2664     6465    4                    END;

     2665     6466
     2666     6467         /***
     2667     6468             *** If a RECL is specified for spanned files, the total record
     2668     6469             *** length must not be greater than RECL.
     2669     6470             ***/
     2670     6471
     2671     6472    3                 IF F$DCB.SPANNED

   6472  1 006667   000031 236100                    LDQ     25,,PR0
         1 006670   000004 316007                    CANQ    4,DL
         1 006671   006711 600000 1                  TZE     s:6491

     2672     6473    4                 THEN DO; /*N* MAY NEED TO IGNORE EBCDIC VARIABLE HERE */

     2673     6474    4                    IF F$DCB.RECL > 0

   6474  1 006672   000033 720100                    LXL0    27,,PR0
         1 006673   006711 600000 1                  TZE     s:6491

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:401  
     2674     6475    5                    THEN DO;               /* Must check against RECL            */

     2675     6476    5                       IF DUBYTES > F$DCB.BYTESLEFT

   6476  1 006674   000070 236100                    LDQ     56,,PR0
         1 006675   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006676   200020 116100                    CMPQ    DUBYTES,,AUTO
         1 006677   006707 605000 1                  TPL     s:6482

     2676     6477    6                       THEN DO;            /* Must truncate record               */

     2677     6478    6                          B$JIT.ERR = E_LD; /*E* ERROR: FTW-E$LD */

   6478  1 006700   000034 236000 0                  LDQ     E_LD
         1 006701   000000 471400 xsym               LDP1    B$JIT$
         1 006702   100012 756100                    STQ     10,,PR1

     2678     6479    6                          DUBYTES = F$DCB.BYTESLEFT;

   6479  1 006703   000070 236100                    LDQ     56,,PR0
         1 006704   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 006705   200020 756100                    STQ     DUBYTES,,AUTO

     2679     6480    6                          BYTES_TO_GO = 0;

   6480  1 006706   200012 450100                    STZ     BYTES_TO_GO,,AUTO

     2680     6481    6                          END;

     2681     6482    5                       F$DCB.BYTESLEFT = F$DCB.BYTESLEFT - DUBYTES;

   6482  1 006707   200020 136100                    SBLQ    DUBYTES,,AUTO
         1 006710   000070 552134                    STBQ    56,'34'O,PR0

     2682     6483    5                       END;

     2683     6484    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:402  

     2684     6485
     2685     6486         /***
     2686     6487             *** Calculate pointer to destination in FPOOL buffer
     2687     6488             *** of this record (portion) and the number of bytes to move.
     2688     6489             ***/
     2689     6490
     2690     6491    3                 ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + F$DCB.GDISP );

   6491  1 006711   000067 236100                    LDQ     55,,PR0
         1 006712   777777 376007                    ANQ     -1,DL
         1 006713   000101 036100                    ADLQ    65,,PR0
         1 006714   000020 736000                    QLS     16
         1 006715   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 006716   200011 756100                    STQ     ASEG$,,AUTO

     2691     6492    3                 IF F$DCB.ORG = %FIXED#    /* Pad fixed format records           */

   6492  1 006717   000032 236100                    LDQ     26,,PR0
         1 006720   777000 376003                    ANQ     -512,DU
         1 006721   017000 116003                    CMPQ    7680,DU
         1 006722   006730 601000 1                  TNZ     s:6494

     2692     6493    3                 THEN CHARZLEN = F$DCB.RECL - F$DCB.GDISP; /* # of chars needed  */

   6493  1 006723   000033 236100                    LDQ     27,,PR0
         1 006724   777777 376007                    ANQ     -1,DL
         1 006725   000101 136100                    SBLQ    65,,PR0
         1 006726   200013 756100                    STQ     CHARZLEN,,AUTO
         1 006727   006732 710000 1                  TRA     s:6495

     2693     6494    3                 ELSE CHARZLEN = DUBYTES;

   6494  1 006730   200020 235100                    LDA     DUBYTES,,AUTO
         1 006731   200013 755100                    STA     CHARZLEN,,AUTO

     2694     6495    3                 IF FPTCODE = MFC_WRUR OR FPTCODE = MFC_WRURUC
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:403  

   6495  1 006732   200003 471500                    LDP1    @FPTCODE,,AUTO
         1 006733   100000 235100                    LDA     0,,PR1
         1 006734   000012 115007                    CMPA    10,DL
         1 006735   006740 600000 1                  TZE     s:6497
         1 006736   000015 115007                    CMPA    13,DL
         1 006737   007000 601000 1                  TNZ     s:6503

     2695     6496    4                 THEN DO;                  /* Translate unit record data         */

     2696     6497    4                    IF VFC_MOVED           /* Don't translate VFC                */

   6497  1 006740   200055 234100                    SZN     VFC_MOVED,,AUTO
         1 006741   006770 605000 1                  TPL     s:6501

     2697     6498    4                    THEN IF FPTCODE = MFC_WRUR

   6498  1 006742   000012 115007                    CMPA    10,DL
         1 006743   006756 601000 1                  TNZ     s:6500

     2698     6499    4                       THEN CALL XLATE( ASEG$->CHARZ, NK_URTBL, DUB$->CHARS );

   6499  1 006744   200017 473500                    LDP3    DUB$,,AUTO
         1 006745   200020 720100                    LXL0    DUBYTES,,AUTO
         1 006746   000000 474400 xsym               LDP4    B$XL_UR$
         1 006747   200011 475500                    LDP5    ASEG$,,AUTO
         1 006750   200013 721100                    LXL1    CHARZLEN,,AUTO
         1 006751   040140 160540                    MVT     fill='040'O
         1 006752   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 006753   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         1 006754   400000 000100                    ARG     0,,PR4
         1 006755   007007 710000 1                  TRA     s:6504

     2699     6500    4                       ELSE CALL XLATE( ASEG$->CHARZ, NK_URTBLUC, DUB$->CHARS );

   6500  1 006756   200017 473500                    LDP3    DUB$,,AUTO
         1 006757   200020 720100                    LXL0    DUBYTES,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:404  
         1 006760   000000 474400 xsym               LDP4    B$XL_UPPER_UR$
         1 006761   200011 475500                    LDP5    ASEG$,,AUTO
         1 006762   200013 721100                    LXL1    CHARZLEN,,AUTO
         1 006763   040140 160540                    MVT     fill='040'O
         1 006764   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 006765   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         1 006766   400000 000100                    ARG     0,,PR4
         1 006767   007007 710000 1                  TRA     s:6504

     2700     6501    4                    ELSE ASEG$->CHARZ = DUB$->CHARS;

   6501  1 006770   200017 473500                    LDP3    DUB$,,AUTO
         1 006771   200020 720100                    LXL0    DUBYTES,,AUTO
         1 006772   200011 474500                    LDP4    ASEG$,,AUTO
         1 006773   200013 721100                    LXL1    CHARZLEN,,AUTO
         1 006774   040140 100540                    MLR     fill='040'O
         1 006775   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 006776   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1

     2701     6502    4                    END;

   6502  1 006777   007007 710000 1                  TRA     s:6504

     2702     6503    3                 ELSE ASEG$->CHARZ = DUB$->CHARS;

   6503  1 007000   200017 473500                    LDP3    DUB$,,AUTO
         1 007001   200020 720100                    LXL0    DUBYTES,,AUTO
         1 007002   200011 474500                    LDP4    ASEG$,,AUTO
         1 007003   200013 721100                    LXL1    CHARZLEN,,AUTO
         1 007004   040140 100540                    MLR     fill='040'O
         1 007005   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 007006   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1

     2703     6504    3                 IF F$DCB.CNVRT AND NOT FPT$WRITE_V.DVBYTE.TRANS

   6504  1 007007   000031 236100                    LDQ     25,,PR0
         1 007010   200000 316007                    CANQ    65536,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:405  
         1 007011   007036 600000 1                  TZE     s:6515
         1 007012   200024 473500                    LDP3    FPT$,,AUTO
         1 007013   300003 236100                    LDQ     3,,PR3
         1 007014   020000 316003                    CANQ    8192,DU
         1 007015   007036 601000 1                  TNZ     s:6515

     2704     6505    4                 THEN DO;                  /* Conversion requested               */

     2705     6506    4                    IF F$DCB.EBCDIC

   6506  1 007016   000031 236100                    LDQ     25,,PR0
         1 007017   100000 316007                    CANQ    32768,DL
         1 007020   007030 600000 1                  TZE     s:6508

     2706     6507    4                    THEN CALL XLATE( ASEG$->CHARZ, F_ASC_EBC, ASEG$->CHARZ );

   6507  1 007021   200011 474500                    LDP4    ASEG$,,AUTO
         1 007022   000000 475400 xsym               LDP5    B$XL_ASC_EBC$
         1 007023   040140 160540                    MVT     fill='040'O
         1 007024   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         1 007025   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         1 007026   500000 000100                    ARG     0,,PR5
         1 007027   007036 710000 1                  TRA     s:6515

     2707     6508    4                    ELSE CALL XLATE( ASEG$->CHARZ, F_ASC_ASC, ASEG$->CHARZ );

   6508  1 007030   200011 474500                    LDP4    ASEG$,,AUTO
         1 007031   000000 475400 xsym               LDP5    B$XL_MOD_256$
         1 007032   040140 160540                    MVT     fill='040'O
         1 007033   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         1 007034   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         1 007035   500000 000100                    ARG     0,,PR5

     2708     6509    4                    END;

     2709     6510
     2710     6511         /***
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:406  
     2711     6512             *** If spanned, determine spanning information.
     2712     6513             ***/
     2713     6514
     2714     6515    3                 IF F$DCB.SPANNED

   6515  1 007036   000031 236100                    LDQ     25,,PR0
         1 007037   000004 316007                    CANQ    4,DL
         1 007040   007067 600000 1                  TZE     s:6529

     2715     6516    3                 THEN IF F$DCB.SPAN

   6516  1 007041   000064 236100                    LDQ     52,,PR0
         1 007042   100000 316007                    CANQ    32768,DL
         1 007043   007056 600000 1                  TZE     s:6523

     2716     6517    3                    THEN IF BYTES_TO_GO > 0

   6517  1 007044   200012 235100                    LDA     BYTES_TO_GO,,AUTO
         1 007045   007051 604400 1                  TMOZ    s:6520

     2717     6518    3                       THEN SPANINFO = SPAN_MID; /* Not beginning, not end       */

   6518  1 007046   200045 235100                    LDA     SPAN_MID,,AUTO
         1 007047   200044 755100                    STA     SPANINFO,,AUTO
         1 007050   007070 710000 1                  TRA     s:6530

     2718     6519    4                       ELSE DO;            /* Not beginning, end                 */

     2719     6520    4                          F$DCB.SPAN = %NO#;

   6520  1 007051   000005 236000 2                  LDQ     5
         1 007052   000064 356100                    ANSQ    52,,PR0

     2720     6521    4                          SPANINFO = SPAN_LAST;

   6521  1 007053   200046 235100                    LDA     SPAN_LAST,,AUTO
         1 007054   200044 755100                    STA     SPANINFO,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:407  

     2721     6522    4                          END;

   6522  1 007055   007070 710000 1                  TRA     s:6530

     2722     6523    3                    ELSE IF BYTES_TO_GO > 0

   6523  1 007056   200012 235100                    LDA     BYTES_TO_GO,,AUTO
         1 007057   007065 604400 1                  TMOZ    s:6528

     2723     6524    4                       THEN DO;            /* Beginning, not end                 */

     2724     6525    4                          F$DCB.SPAN = %YES#;

   6525  1 007060   100000 236007                    LDQ     32768,DL
         1 007061   000064 256100                    ORSQ    52,,PR0

     2725     6526    4                          SPANINFO = 1;

   6526  1 007062   000001 235007                    LDA     1,DL
         1 007063   200044 755100                    STA     SPANINFO,,AUTO

     2726     6527    4                          END;

   6527  1 007064   007070 710000 1                  TRA     s:6530

     2727     6528    3                       ELSE SPANINFO = 0;  /* Beginning, end                     */

   6528  1 007065   200044 450100                    STZ     SPANINFO,,AUTO
         1 007066   007070 710000 1                  TRA     s:6530

     2728     6529    3                 ELSE SPANINFO = 0;        /* Beginning, end                     */

   6529  1 007067   200044 450100                    STZ     SPANINFO,,AUTO

     2729     6530    3                 SEGSIZE = F$DCB.GDISP + CHARZLEN; /* Total segment length       */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:408  
   6530  1 007070   000101 236100                    LDQ     65,,PR0
         1 007071   200013 036100                    ADLQ    CHARZLEN,,AUTO
         1 007072   200041 756100                    STQ     SEGSIZE,,AUTO

     2730     6531
     2731     6532    3                 CALL FTW_SETSIZE;         /* Set record information             */

   6532  1 007073   012315 701000 1                  TSX1    FTW_SETSIZE
         1 007074   000000 011000                    NOP     0

     2732     6533    3                 F$DCB.BLKLEN = F$DCB.CRECX + SEGSIZE; /* Include segment        */

   6533  1 007075   200030 470500                    LDP0    JDCB$,,AUTO
         1 007076   000067 236100                    LDQ     55,,PR0
         1 007077   777777 376007                    ANQ     -1,DL
         1 007100   200041 036100                    ADLQ    SEGSIZE,,AUTO
         1 007101   000000 620006                    EAX0    0,QL
         1 007102   000074 440100                    SXL0    60,,PR0

     2733     6534    3                 F$DCB.GDISP = F$DCB.GDISP + DUBYTES; /* New GDISP               */

   6534  1 007103   000101 236100                    LDQ     65,,PR0
         1 007104   200020 036100                    ADLQ    DUBYTES,,AUTO
         1 007105   000101 756100                    STQ     65,,PR0

     2734     6535    3                 CALL FTW_SETBLKLEN;

   6535  1 007106   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 007107   000000 011000                    NOP     0

     2735     6536
     2736     6537         /***
     2737     6538             *** If spanning and not blocked, trunc current block now.
     2738     6539             *** If spanning and blocked, move on to next segment.
     2739     6540             ***/
     2740     6541
     2741     6542    3                 IF F$DCB.SPAN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:409  

   6542  1 007110   200030 470500                    LDP0    JDCB$,,AUTO
         1 007111   000064 236100                    LDQ     52,,PR0
         1 007112   100000 316007                    CANQ    32768,DL
         1 007113   007135 600000 1                  TZE     s:6552

     2742     6543    4                 THEN DO;                  /* Spanning record                    */

     2743     6544    4                    DUB$ = PINCRC( DUB$, DUBYTES ); /* Next user buffer portion  */

   6544  1 007114   200020 236100                    LDQ     DUBYTES,,AUTO
         1 007115   000020 736000                    QLS     16
         1 007116   200017 036100                    ADLQ    DUB$,,AUTO
         1 007117   200017 756100                    STQ     DUB$,,AUTO

     2744     6545    4                    IF NOT F$DCB.BLOCKED

   6545  1 007120   000031 236100                    LDQ     25,,PR0
         1 007121   000010 316007                    CANQ    8,DL
         1 007122   007126 601000 1                  TNZ     s:6548

     2745     6546    4                    THEN CALL FTW_TRUNCIT ALTRET(JUSTALT);

   6546  1 007123   007240 701000 1                  TSX1    FTW_TRUNCIT
         1 007124   007212 702000 1                  TSX2    JUSTALT
         1 007125   007135 710000 1                  TRA     s:6552

     2746     6547    5                    ELSE DO;               /* Position to next segment           */

     2747     6548    5                       F$DCB.CRECX = F$DCB.CRECX + F$DCB.GDISP;

   6548  1 007126   000067 236100                    LDQ     55,,PR0
         1 007127   777777 376007                    ANQ     -1,DL
         1 007130   000101 036100                    ADLQ    65,,PR0
         1 007131   000000 620006                    EAX0    0,QL
         1 007132   000067 440100                    SXL0    55,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:410  
     2748     6549    5                       F$DCB.GDISP = RCWSIZE;

   6549  1 007133   200036 235100                    LDA     RCWSIZE,,AUTO
         1 007134   000101 755100                    STA     65,,PR0

     2749     6550    5                       END;

     2750     6551    4                    END;

     2751     6552    3                 IF F$DCB.ORG = %UR#

   6552  1 007135   200030 470500                    LDP0    JDCB$,,AUTO
         1 007136   000032 236100                    LDQ     26,,PR0
         1 007137   777000 376003                    ANQ     -512,DU
         1 007140   004000 116003                    CMPQ    2048,DU
         1 007141   007152 601000 1                  TNZ     s:6561

     2752     6553    4                 THEN DO;                  /* Write record now if just moved VFC */

     2753     6554    4                    IF NOT VFC_MOVED

   6554  1 007142   200055 234100                    SZN     VFC_MOVED,,AUTO
         1 007143   007152 604000 1                  TMI     s:6561

     2754     6555    5                    THEN DO;

     2755     6556    5                       BYTES_TO_GO = F$DCB.UBYTES;

   6556  1 007144   000076 235100                    LDA     62,,PR0
         1 007145   200012 755100                    STA     BYTES_TO_GO,,AUTO

     2756     6557    5                       DUB$ = F$DCB.UB$;

   6557  1 007146   000075 236100                    LDQ     61,,PR0
         1 007147   200017 756100                    STQ     DUB$,,AUTO

     2757     6558    5                       VFC_MOVED = %YES#;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:411  

   6558  1 007150   400000 236003                    LDQ     -131072,DU
         1 007151   200055 756100                    STQ     VFC_MOVED,,AUTO

     2758     6559    5                       END;

     2759     6560    4                    END;

     2760     6561    3                 END /* BYTES_TO_GO > 0 */;

   6561  1 007152   200012 235100                    LDA     BYTES_TO_GO,,AUTO
         1 007153   006370 605400 1                  TPNZ    s:6382
         1 007154   200041 236100                    LDQ     SEGSIZE,,AUTO
         1 007155   006370 604000 1                  TMI     s:6382

     2761     6562         /***
     2762     6563          *** If continuation is specified, we're ready for following write and
     2763     6564          *** stay positioned to current record.  If continuation is not specified,
     2764     6565          *** position to the next record.
     2765     6566          ***/
     2766     6567
     2767     6568    2              IF NOT FPT$WRITE_V.DVBYTE.CONT

   6568  1 007156   200024 471500                    LDP1    FPT$,,AUTO
         1 007157   100003 430100                    FSZN    3,,PR1
         1 007160   007176 604000 1                  TMI     s:6577

     2768     6569    3              THEN DO;             /* Not continued...get ready for next segment */

     2769     6570    3                 F$DCB.CRECX = F$DCB.BLKLEN; /* Next rec follows used block      */

   6570  1 007161   000074 720100                    LXL0    60,,PR0
         1 007162   000067 440100                    SXL0    55,,PR0

     2770     6571    3                 F$DCB.CRECNO = F$DCB.CRECNO + 1; /* Count record                */

   6571  1 007163   000071 054100                    AOS     57,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:412  

     2771     6572    3                 F$DCB.NRECX = F$DCB.NRECX + 1; /* Count rec blocked             */

   6572  1 007164   000100 221100                    LDX1    64,,PR0
         1 007165   000001 622011                    EAX2    1,X1
         1 007166   000100 742100                    STX2    64,,PR0

     2772     6573    3                 F$DCB.RPOS = %YES#;       /* Positioned to next record          */

   6573  1 007167   010000 236007                    LDQ     4096,DL
         1 007170   000064 256100                    ORSQ    52,,PR0

     2773     6574    3                 F$DCB.SPAN = %NO#;

   6574  1 007171   000005 236000 2                  LDQ     5
         1 007172   000064 356100                    ANSQ    52,,PR0

     2774     6575    3                 F$DCB.CONT = %NO#;        /* No continuation                    */

   6575  1 007173   000004 236000 2                  LDQ     4
         1 007174   000064 356100                    ANSQ    52,,PR0

     2775     6576    3                 END;

   6576  1 007175   007200 710000 1                  TRA     s:6578

     2776     6577    2              ELSE F$DCB.CONT = %YES#;     /* Continue with next write           */

   6577  1 007176   000040 236007                    LDQ     32,DL
         1 007177   000064 256100                    ORSQ    52,,PR0

     2777     6578    2              F$DCB.FMOD = %YES#;          /* File was modified                  */

   6578  1 007200   040000 236003                    LDQ     16384,DU
         1 007201   000064 256100                    ORSQ    52,,PR0

     2778     6579    2              F$DCB.NOEOF = %YES#;         /* EOF labels are needed              */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:413  

   6579  1 007202   400000 236007                    LDQ     -131072,DL
         1 007203   000064 256100                    ORSQ    52,,PR0

     2779     6580    2              F$DCB.LSTBLK = %YES#;        /* Last block of file written         */

   6580  1 007204   000001 236007                    LDQ     1,DL
         1 007205   000064 256100                    ORSQ    52,,PR0

     2780     6581    2              F$DCB.EOP = WRITEEOP#;       /* Last operation was write           */

   6581  1 007206   003000 236003                    LDQ     1536,DU
         1 007207   000064 256100                    ORSQ    52,,PR0

     2781     6582    2              RETURN;

   6582  1 007210   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 007211   000001 702211                    TSX2  ! 1,X1

   6581  1 007212                       JUSTALT      null
     2782     6583
     2783     6584    2   JUSTALT:   ;
     2784     6585    2              N = B$JIT.ERR.CODE;

   6585  1 007212   000000 470400 xsym               LDP0    B$JIT$
         1 007213   000012 236100                    LDQ     10,,PR0
         1 007214   000003 772000                    QRL     3
         1 007215   037777 376007                    ANQ     16383,DL
         1 007216   200035 756100                    STQ     N,,AUTO

     2785     6586    2              IF N = %E$EOVOL OR N = %E$EOVOLS

   6586  1 007217   001313 116007                    CMPQ    715,DL
         1 007220   007223 600000 1                  TZE     s:6588
         1 007221   001315 116007                    CMPQ    717,DL
         1 007222   007236 601000 1                  TNZ     s:6594

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:414  
     2786     6587    3              THEN DO;                     /* Set flags like successful write    */

     2787     6588    3                 F$DCB.FMOD = %YES#;

   6588  1 007223   200030 471500                    LDP1    JDCB$,,AUTO
         1 007224   040000 236003                    LDQ     16384,DU
         1 007225   100064 256100                    ORSQ    52,,PR1

     2788     6589    3                 F$DCB.NOEOF = %YES#;

   6589  1 007226   400000 236007                    LDQ     -131072,DL
         1 007227   100064 256100                    ORSQ    52,,PR1

     2789     6590    3                 F$DCB.LSTBLK = %YES#;

   6590  1 007230   000001 236007                    LDQ     1,DL
         1 007231   100064 256100                    ORSQ    52,,PR1

     2790     6591    3                 F$DCB.EOP = WRITEEOP#;

   6591  1 007232   003000 236003                    LDQ     1536,DU
         1 007233   100064 256100                    ORSQ    52,,PR1

     2791     6592    3                 RETURN;

   6592  1 007234   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 007235   000001 702211                    TSX2  ! 1,X1

     2792     6593    3                 END;
     2793     6594    2              ALTRETURN;

   6594  1 007236   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 007237   000000 702211                    TSX2  ! 0,X1

     2794     6595
     2795     6596    2      END FTW_WNR;
     2796     6597        /*********************************************************************/
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:415  
     2797     6598        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:416  
     2798     6599        /*********************************************************************/
     2799     6600    1   FTW_TRUNCIT: PROC ALTRET;

   6600  1 007240   200064 741300       FTW_TRUNCIT  STX1  ! DATA_INCON,,AUTO

     2800     6601        /*F*     NAME: FTW_TRUNCIT
     2801     6602                 PURPOSE: Write current FPOOL buffer and get ready to fill next.
     2802     6603         ***/
     2803     6604
     2804     6605        /********************/
     2805     6606
     2806     6607    2              IF F$DCB.IASN = %OD# THEN

   6607  1 007241   200030 470500                    LDP0    JDCB$,,AUTO
         1 007242   000103 236100                    LDQ     67,,PR0
         1 007243   000777 376007                    ANQ     511,DL
         1 007244   000012 116007                    CMPQ    10,DL
         1 007245   007252 601000 1                  TNZ     s:6610

     2807     6608    2                 CALL FTW$TRNCOD ALTRET(JUSTALT);

   6608  1 007246   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 007247   014522 701000 1                  TSX1    s:8271
         1 007250   007460 702000 1                  TSX2    JUSTALT
         1 007251   007311 710000 1                  TRA     s:6625

     2808     6609    2              ELSE
     2809     6610    3                 CALL FTW$TRNCHLD WHENALTRETURN DO; /* Write current FPOOL buffer */

   6610  1 007252   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 007253   014515 701000 1                  TSX1    s:8260
         1 007254   007256 702000 1                  TSX2    s:6611
         1 007255   007311 710000 1                  TRA     s:6625

     2810     6611    3                    IF B$JIT.ERR.CODE ~= %E$IOERR THEN

   6611  1 007256   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:417  
         1 007257   000012 236100                    LDQ     10,,PR0
         1 007260   377770 376007                    ANQ     131064,DL
         1 007261   000100 116007                    CMPQ    64,DL
         1 007262   007265 600000 1                  TZE     s:6613

     2811     6612    3                       ALTRETURN;

   6612  1 007263   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 007264   000000 702211                    TSX2  ! 0,X1

     2812     6613    3                    IF F$DCB.CVOL THEN

   6613  1 007265   200030 471500                    LDP1    JDCB$,,AUTO
         1 007266   100031 236100                    LDQ     25,,PR1
         1 007267   000020 316007                    CANQ    16,DL
         1 007270   007273 600000 1                  TZE     s:6615

     2813     6614    3                       ALTRETURN;

   6614  1 007271   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 007272   000000 702211                    TSX2  ! 0,X1

     2814     6615    3                    FT$DDT.POSLOST = %NO#;

   6615  1 007273   200016 473500                    LDP3    DDDT$,,AUTO
         1 007274   000030 236000 2                  LDQ     24
         1 007275   300006 356100                    ANSQ    6,,PR3

     2815     6616    3                    IF NOT F$DCB.IOERROK AND NOT FPT$WRITE_V.IOERROK THEN

   6616  1 007276   100031 236100                    LDQ     25,,PR1
         1 007277   020000 316003                    CANQ    8192,DU
         1 007300   007307 601000 1                  TNZ     s:6618
         1 007301   200024 474500                    LDP4    FPT$,,AUTO
         1 007302   400000 236100                    LDQ     0,,PR4
         1 007303   000020 316007                    CANQ    16,DL
         1 007304   007307 601000 1                  TNZ     s:6618
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:418  

     2816     6617    3                       ALTRETURN;

   6617  1 007305   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 007306   000000 702211                    TSX2  ! 0,X1

     2817     6618    3                    CALL FTW_IOERRCVOL ALTRET(JUSTALT);

   6618  1 007307   007462 701000 1                  TSX1    FTW_IOERRCVOL
         1 007310   007460 702000 1                  TSX2    JUSTALT

     2818     6619    3                    END;

     2819     6620
     2820     6621         /***
     2821     6622          *** Ready next block.
     2822     6623          ***/
     2823     6624
     2824     6625    3              IF NOT F$DCB.TYC.EOT(1) THEN DO; /* Successful write               */

   6625  1 007311   200030 470500                    LDP0    JDCB$,,AUTO
         1 007312   000002 236100                    LDQ     2,,PR0
         1 007313   100000 316003                    CANQ    32768,DU
         1 007314   007340 601000 1                  TNZ     s:6640

     2825     6626    3                 F$DCB.CRECX = F$DCB.BOL;

   6626  1 007315   000034 720100                    LXL0    28,,PR0
         1 007316   000777 360003                    ANX0    511,DU
         1 007317   000067 440100                    SXL0    55,,PR0

     2826     6627    3                 F$DCB.NRECX = 0;

   6627  1 007320   000000 221003                    LDX1    0,DU
         1 007321   000100 741100                    STX1    64,,PR0

     2827     6628    3                 F$DCB.BLKLEN = F$DCB.BOL;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:419  

   6628  1 007322   000074 440100                    SXL0    60,,PR0

     2828     6629    3                 CALL FTW_SETBLKLEN;

   6629  1 007323   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 007324   000000 011000                    NOP     0

     2829     6630    3                 F$DCB.PRECNO = F$DCB.PRECNO + 1;

   6630  1 007325   200030 470500                    LDP0    JDCB$,,AUTO
         1 007326   000072 054100                    AOS     58,,PR0

     2830     6631    3                 F$DCB.AFTRBLK = %NO#;     /* Before next block to write         */

   6631  1 007327   000035 236000 2                  LDQ     29
         1 007330   000064 356100                    ANSQ    52,,PR0

     2831     6632    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#; /* Will be modified     */

   6632  1 007331   000070 236100                    LDQ     56,,PR0
         1 007332   000041 772000                    QRL     33
         1 007333   000000 620006                    EAX0    0,QL
         1 007334   400000 236003                    LDQ     -131072,DU
         1 007335   000115 256110                    ORSQ    77,X0,PR0

     2832     6633    3                 RETURN;

   6633  1 007336   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 007337   000001 702211                    TSX2  ! 1,X1

     2833     6634    3                 END;
     2834     6635
     2835     6636         /***
     2836     6637          *** Detour for journal users.
     2837     6638          ***/
     2838     6639
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:420  
     2839     6640    3              IF F$DCB.ACS = %JRNL# THEN DO;

   6640  1 007340   000036 236100                    LDQ     30,,PR0
         1 007341   000777 376007                    ANQ     511,DL
         1 007342   000004 116007                    CMPQ    4,DL
         1 007343   007370 601000 1                  TNZ     s:6659

     2840     6641    4                 IF NOT F$DCB.OWNER THEN DO; /* Journal user but not owner       */

   6641  1 007344   000064 236100                    LDQ     52,,PR0
         1 007345   040000 316007                    CANQ    16384,DL
         1 007346   007365 601000 1                  TNZ     s:6651

     2841     6642    5                    IF F$DCB.SPAN THEN DO; /* In segment                         */

   6642  1 007347   100000 316007                    CANQ    32768,DL
         1 007350   007360 600000 1                  TZE     s:6647

     2842     6643    5                       N = -1;

   6643  1 007351   000001 335007                    LCA     1,DL
         1 007352   200035 755100                    STA     N,,AUTO

     2843     6644    5                       CALL FTW_PR ALTRET(JUSTALT); /* Ignore record portion     */

   6644  1 007353   010313 701000 1                  TSX1    FTW_PR
         1 007354   007460 702000 1                  TSX2    JUSTALT

     2844     6645    5                       F$DCB.BLKLEN = F$DCB.CRECX;

   6645  1 007355   200030 470500                    LDP0    JDCB$,,AUTO
         1 007356   000067 720100                    LXL0    55,,PR0
         1 007357   000074 440100                    SXL0    60,,PR0

     2845     6646    5                       END;

     2846     6647    4                    B$JIT.ERR = E_EOVOL; /*E* ERROR: FTW-E$EOVOL */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:421  

   6647  1 007360   000027 236000 0                  LDQ     E_EOVOL
         1 007361   000000 471400 xsym               LDP1    B$JIT$
         1 007362   100012 756100                    STQ     10,,PR1

     2847     6648    4                    ALTRETURN;

   6648  1 007363   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 007364   000000 702211                    TSX2  ! 0,X1

     2848     6649    4                    END;
     2849     6650    4                 ELSE DO;                  /* Journal owner                      */

     2850     6651    4                    F$DCB.CFU$->FM$CFUJ.ERR_WAIT = %YES#; /* Lock out others     */

   6651  1 007365   000066 471500                    LDP1    54,,PR0
         1 007366   200000 236003                    LDQ     65536,DU
         1 007367   100005 256100                    ORSQ    5,,PR1

     2851     6652    4                    END;

     2852     6653    3                 END;

     2853     6654
     2854     6655         /***
     2855     6656          *** Last block written encountered end of tape.
     2856     6657          ***/
     2857     6658
     2858     6659    2              F$DCB.MUST_CVOL = %YES#;     /* Need to CVOL before next write     */

   6659  1 007370   000002 236003                    LDQ     2,DU
         1 007371   000064 256100                    ORSQ    52,,PR0

     2859     6660    2              IF NOT F$DCB.CVOL

   6660  1 007372   000031 236100                    LDQ     25,,PR0
         1 007373   000020 316007                    CANQ    16,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:422  
         1 007374   007434 601000 1                  TNZ     s:6676

     2860     6661    3              THEN DO;                     /* User did not request CVOL handling */

     2861     6662    3                 F$DCB.NOEOF = %YES#;      /* Indicate output CVOL               */

   6662  1 007375   400000 236007                    LDQ     -131072,DL
         1 007376   000064 256100                    ORSQ    52,,PR0

     2862     6663    3                 CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(JUSTALT);

   6663  1 007377   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 007400   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 007401   000031 236000 2                  LDQ     25
         1 007402   200115 756100                    STQ     @FIELD_LENGTH+5,,AUTO
         1 007403   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 007404   200114 451500                    STP1    @FIELD_LENGTH+4,,AUTO
         1 007405   200022 633500                    EPPR3   EOXL,,AUTO
         1 007406   200113 453500                    STP3    @FIELD_LENGTH+3,,AUTO
         1 007407   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 007410   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 007411   000000 701000 xent               TSX1    FTL$CVOL
         1 007412   007460 702000 1                  TSX2    JUSTALT

     2863     6664    3                 F$DCB.CRECX = F$DCB.BOL;

   6664  1 007413   200030 470500                    LDP0    JDCB$,,AUTO
         1 007414   000034 720100                    LXL0    28,,PR0
         1 007415   000777 360003                    ANX0    511,DU
         1 007416   000067 440100                    SXL0    55,,PR0

     2864     6665    3                 F$DCB.NRECX = 0;

   6665  1 007417   000000 221003                    LDX1    0,DU
         1 007420   000100 741100                    STX1    64,,PR0

     2865     6666    3                 F$DCB.BLKLEN = F$DCB.BOL;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:423  

   6666  1 007421   000074 440100                    SXL0    60,,PR0

     2866     6667    3                 CALL FTW_SETBLKLEN;

   6667  1 007422   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 007423   000000 011000                    NOP     0

     2867     6668    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#; /* Will be modified     */

   6668  1 007424   200030 470500                    LDP0    JDCB$,,AUTO
         1 007425   000070 236100                    LDQ     56,,PR0
         1 007426   000041 772000                    QRL     33
         1 007427   000000 620006                    EAX0    0,QL
         1 007430   400000 236003                    LDQ     -131072,DU
         1 007431   000115 256110                    ORSQ    77,X0,PR0

     2868     6669    3                 RETURN;

   6669  1 007432   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 007433   000001 702211                    TSX2  ! 1,X1

     2869     6670    3                 END;
     2870     6671
     2871     6672         /***
     2872     6673          *** User requests CVOL control.
     2873     6674          ***/
     2874     6675
     2875     6676    2              IF F$DCB.SPAN

   6676  1 007434   000064 236100                    LDQ     52,,PR0
         1 007435   100000 316007                    CANQ    32768,DL
         1 007436   007453 600000 1                  TZE     s:6683

     2876     6677    3              THEN DO;                     /* CVOL in segment                    */

     2877     6678    3                 N = -1;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:424  

   6678  1 007437   000001 335007                    LCA     1,DL
         1 007440   200035 755100                    STA     N,,AUTO

     2878     6679    3                 CALL FTW_PR ALTRET(JUSTALT);

   6679  1 007441   010313 701000 1                  TSX1    FTW_PR
         1 007442   007460 702000 1                  TSX2    JUSTALT

     2879     6680    3                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %YES#;
              6680                          /* Make trunc get rid of record */

   6680  1 007443   200030 470500                    LDP0    JDCB$,,AUTO
         1 007444   000070 236100                    LDQ     56,,PR0
         1 007445   000041 772000                    QRL     33
         1 007446   000000 620006                    EAX0    0,QL
         1 007447   400000 236003                    LDQ     -131072,DU
         1 007450   000115 256110                    ORSQ    77,X0,PR0

     2880     6681    3                 F$DCB.BLKLEN = F$DCB.CRECX;

   6681  1 007451   000067 720100                    LXL0    55,,PR0
         1 007452   000074 440100                    SXL0    60,,PR0

     2881     6682    3                 END;

     2882     6683    2              B$JIT.ERR = E_EOVOL; /*E* ERROR: FTW-E$EOVOL */

   6683  1 007453   000027 236000 0                  LDQ     E_EOVOL
         1 007454   000000 471400 xsym               LDP1    B$JIT$
         1 007455   100012 756100                    STQ     10,,PR1

     2883     6684    2              F$DCB.EOP = WRITEEOP#;       /* Makes M$CVOL know to write         */

   6684  1 007456   003000 236003                    LDQ     1536,DU
         1 007457   000064 256100                    ORSQ    52,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:425  
   6684  1 007460                       JUSTALT      null
     2884     6685
     2885     6686    2   JUSTALT:   ;
     2886     6687    2              ALTRETURN;

   6687  1 007460   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 007461   000000 702211                    TSX2  ! 0,X1

     2887     6688
     2888     6689    2      END FTW_TRUNCIT;
     2889     6690        /*********************************************************************/
     2890     6691        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:426  
     2891     6692        /*********************************************************************/
     2892     6693    1   FTW_IOERRCVOL: PROC ALTRET;

   6693  1 007462   200066 741300       FTW_IOERRCV* STX1  ! MAXMKEY,,AUTO

     2893     6694        /*F*    NAME: FTW_IOERRCVOL
     2894     6695                PURPOSE: Perform a CVOL after an I/O error, if IOERROK was
     2895     6696                         specified on the write.  We have to go through some
     2896     6697                         handwaving to do this for the general case.
     2897     6698         ***/
     2898     6699
     2899     6700    2     DCL TEMP UBIN;
     2900     6701
     2901     6702        /********************/
     2902     6703
     2903     6704    2              F$DCB.MUST_CVOL = %YES#;

   6704  1 007463   200030 470500                    LDP0    JDCB$,,AUTO
         1 007464   000002 236003                    LDQ     2,DU
         1 007465   000064 256100                    ORSQ    52,,PR0

     2904     6705    2              TEMP = F$DCB.BLKL;

   6705  1 007466   000033 236100                    LDQ     27,,PR0
         1 007467   000022 772000                    QRL     18
         1 007470   200067 756100                    STQ     TEMP,,AUTO

     2905     6706    2              CALL FTW_TMPFPOOL(TEMPFP$,TEMPFPOOL,TEMP) ALTRET(JUSTALT);

   6706  1 007471   200067 631500                    EPPR1   TEMP,,AUTO
         1 007472   200073 451500                    STP1    @FPNUM+1,,AUTO
         1 007473   200052 633500                    EPPR3   TEMPFPOOL,,AUTO
         1 007474   200072 453500                    STP3    @FP$+1,,AUTO
         1 007475   200051 634500                    EPPR4   TEMPFP$,,AUTO
         1 007476   200071 454500                    STP4    TEMP+2,,AUTO
         1 007477   014177 701000 1                  TSX1    FTW_TMPFPOOL
         1 007500   010311 702000 1                  TSX2    JUSTALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:427  

     2906     6707    2              AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));

   6707  1 007501   200030 470500                    LDP0    JDCB$,,AUTO
         1 007502   000070 236100                    LDQ     56,,PR0
         1 007503   000041 772000                    QRL     33
         1 007504   000115 236106                    LDQ     77,QL,PR0
         1 007505   000033 772000                    QRL     27
         1 007506   000037 376007                    ANQ     31,DL
         1 007507   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 007510   200007 756100                    STQ     AFPOOL$,,AUTO

     2907     6708    2              CHARZLEN = F$DCB.BLKL;

   6708  1 007511   000033 236100                    LDQ     27,,PR0
         1 007512   000022 772000                    QRL     18
         1 007513   200013 756100                    STQ     CHARZLEN,,AUTO

     2908     6709    2              TEMPFP$->CHARS = AFPOOL$->CHARS;

   6709  1 007514   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 007515   200020 720100                    LXL0    DUBYTES,,AUTO
         1 007516   200051 473500                    LDP3    TEMPFP$,,AUTO
         1 007517   040140 100540                    MLR     fill='040'O
         1 007520   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 007521   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     2909     6710    2              F$DCB.ARS = -1;

   6710  1 007522   000001 335007                    LCA     1,DL
         1 007523   000000 755100                    STA     0,,PR0

     2910     6711    2              CALL FTI$SPREC ALTRET(RELFP);

   6711  1 007524   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 007525   000000 701000 xent               TSX1    FTI$SPREC
         1 007526   010303 702000 1                  TSX2    RELFP
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:428  

     2911     6712    3              IF NOT F$DCB.TYC.BOF(1) THEN DO;
              6712                       /* Just move prev block to next volume */

   6712  1 007527   200030 470500                    LDP0    JDCB$,,AUTO
         1 007530   000002 236100                    LDQ     2,,PR0
         1 007531   020000 316003                    CANQ    8192,DU
         1 007532   007641 601000 1                  TNZ     s:6731

     2912     6713    3                 CALL FTW_RDFPOOL ALTRET(RELFP);

   6713  1 007533   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 007534   010303 702000 1                  TSX2    RELFP

     2913     6714    3                 F$DCB.ARS = -1;

   6714  1 007535   000001 335007                    LCA     1,DL
         1 007536   200030 470500                    LDP0    JDCB$,,AUTO
         1 007537   000000 755100                    STA     0,,PR0

     2914     6715    3                 CALL FTI$SPREC ALTRET(RELFP);

   6715  1 007540   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 007541   000000 701000 xent               TSX1    FTI$SPREC
         1 007542   010303 702000 1                  TSX2    RELFP

     2915     6716    3                 F$DCB.NOEOF = %YES#;

   6716  1 007543   200030 470500                    LDP0    JDCB$,,AUTO
         1 007544   400000 236007                    LDQ     -131072,DL
         1 007545   000064 256100                    ORSQ    52,,PR0

     2916     6717    3                 CALL FTL$CVOL(EOXL,ADDR(NIL),0) ALTRET(RELFP);

   6717  1 007546   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 007547   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 007550   000031 236000 2                  LDQ     25
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:429  
         1 007551   200115 756100                    STQ     @FIELD_LENGTH+5,,AUTO
         1 007552   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 007553   200114 451500                    STP1    @FIELD_LENGTH+4,,AUTO
         1 007554   200022 633500                    EPPR3   EOXL,,AUTO
         1 007555   200113 453500                    STP3    @FIELD_LENGTH+3,,AUTO
         1 007556   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 007557   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 007560   000000 701000 xent               TSX1    FTL$CVOL
         1 007561   010303 702000 1                  TSX2    RELFP

     2917     6718    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS;

   6718  1 007562   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 007563   000000 236100                    LDQ     0,,PR0
         1 007564   000022 772000                    QRL     18
         1 007565   200067 756100                    STQ     TEMP,,AUTO

     2918     6719    3                 F$DCB.ARS = TEMP - (TEMP / 512) * 256;

   6719  1 007566   000011 772000                    QRL     9
         1 007567   000010 736000                    QLS     8
         1 007570   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 007571   000001 036007                    ADLQ    1,DL
         1 007572   200067 036100                    ADLQ    TEMP,,AUTO
         1 007573   200030 471500                    LDP1    JDCB$,,AUTO
         1 007574   100000 756100                    STQ     0,,PR1

     2919     6720    3                 CALL FTW_WRFPOOL ALTRET(RELFP);

   6720  1 007575   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 007576   010303 702000 1                  TSX2    RELFP

     2920     6721    3                 CHARZLEN = F$DCB.BLKL;

   6721  1 007577   200030 470500                    LDP0    JDCB$,,AUTO
         1 007600   000033 236100                    LDQ     27,,PR0
         1 007601   000022 772000                    QRL     18
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:430  
         1 007602   200013 756100                    STQ     CHARZLEN,,AUTO

     2921     6722    3                 AFPOOL$->CHARS = TEMPFP$->CHARS;

   6722  1 007603   200051 471500                    LDP1    TEMPFP$,,AUTO
         1 007604   200020 720100                    LXL0    DUBYTES,,AUTO
         1 007605   200007 473500                    LDP3    AFPOOL$,,AUTO
         1 007606   040140 100540                    MLR     fill='040'O
         1 007607   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 007610   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     2922     6723    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS;

   6723  1 007611   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 007612   100000 236100                    LDQ     0,,PR1
         1 007613   000022 772000                    QRL     18
         1 007614   200067 756100                    STQ     TEMP,,AUTO

     2923     6724    3                 F$DCB.ARS = TEMP - (TEMP / 512) * 256;

   6724  1 007615   000011 772000                    QRL     9
         1 007616   000010 736000                    QLS     8
         1 007617   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 007620   000001 036007                    ADLQ    1,DL
         1 007621   200067 036100                    ADLQ    TEMP,,AUTO
         1 007622   000000 756100                    STQ     0,,PR0

     2924     6725    3                 CALL FTW_WRFPOOL ALTRET(RELFP);

   6725  1 007623   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 007624   010303 702000 1                  TSX2    RELFP

     2925     6726    3                 CALL FMD$RELBUF(TEMPFPOOL);

   6726  1 007625   200052 630500                    EPPR0   TEMPFPOOL,,AUTO
         1 007626   200112 450500                    STP0    @FIELD_LENGTH+2,,AUTO
         1 007627   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:431  
         1 007630   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 007631   000000 701000 xent               TSX1    FMD$RELBUF
         1 007632   000000 011000                    NOP     0

     2926     6727    3                 F$DCB.PRECNO = 3;

   6727  1 007633   000003 235007                    LDA     3,DL
         1 007634   200030 470500                    LDP0    JDCB$,,AUTO
         1 007635   000072 755100                    STA     58,,PR0

     2927     6728    3                 F$DCB.AFTRBLK = %NO#;

   6728  1 007636   000035 236000 2                  LDQ     29
         1 007637   000064 356100                    ANSQ    52,,PR0

     2928     6729    3                 END;

   6729  1 007640   010301 710000 1                  TRA     s:6817

     2929     6730    3              ELSE DO;                     /* Need to move some labels, as well. */

     2930     6731    3                 AFPOOL$->CHARS = TEMPFP$->CHARS; /* Put current block back.     */

   6731  1 007641   200051 471500                    LDP1    TEMPFP$,,AUTO
         1 007642   200020 720100                    LXL0    DUBYTES,,AUTO
         1 007643   200007 473500                    LDP3    AFPOOL$,,AUTO
         1 007644   040140 100540                    MLR     fill='040'O
         1 007645   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 007646   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

     2931     6732    3                 CALL FMD$RELBUF(TEMPFPOOL); /* Get rid of temp FPOOL, need larger. */

   6732  1 007647   200052 631500                    EPPR1   TEMPFPOOL,,AUTO
         1 007650   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 007651   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 007652   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 007653   000000 701000 xent               TSX1    FMD$RELBUF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:432  
         1 007654   000000 011000                    NOP     0

     2932     6733    3                 IF F$DCB.MAXVOL <= 0 THEN /* Next volume to be taken from list? */

   6733  1 007655   200030 470500                    LDP0    JDCB$,,AUTO
         1 007656   000043 236100                    LDQ     35,,PR0
         1 007657   000777 316003                    CANQ    511,DU
         1 007660   007705 601000 1                  TNZ     s:6738

     2933     6734    4                    CALL FTR$GETSN(F$DCB.VOL+1,ADDR(SIX_CHARS)) WHENALTRETURN DO;

   6734  1 007661   000043 236100                    LDQ     35,,PR0
         1 007662   000033 772000                    QRL     27
         1 007663   000001 036007                    ADLQ    1,DL
         1 007664   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 007665   200042 631500                    EPPR1   SIX_CHARS,,AUTO
         1 007666   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 007667   200113 633500                    EPPR3   @FIELD_LENGTH+3,,AUTO
         1 007670   200115 453500                    STP3    @FIELD_LENGTH+5,,AUTO
         1 007671   200112 634500                    EPPR4   @FIELD_LENGTH+2,,AUTO
         1 007672   200114 454500                    STP4    @FIELD_LENGTH+4,,AUTO
         1 007673   200114 630500                    EPPR0   @FIELD_LENGTH+4,,AUTO
         1 007674   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 007675   000000 701000 xent               TSX1    FTR$GETSN
         1 007676   007700 702000 1                  TSX2    s:6735
         1 007677   007705 710000 1                  TRA     s:6738

     2934     6735    4                       B$JIT.ERR = E_VOLOUT; /*E* FTW-E$VOLOUT */

   6735  1 007700   000050 236000 0                  LDQ     E_VOLOUT
         1 007701   000000 470400 xsym               LDP0    B$JIT$
         1 007702   000012 756100                    STQ     10,,PR0

     2935     6736    4                       ALTRETURN;

   6736  1 007703   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 007704   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:433  

     2936     6737    4                       END;
     2937     6738    3                 TEMPFP$ = AFPOOL$;

   6738  1 007705   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 007706   200051 756100                    STQ     TEMPFP$,,AUTO

     2938     6739    3                 CALL FTW_TMPFPOOL(AFPOOL$,TEMPFPOOL,320) ALTRET(JUSTALT);

   6739  1 007707   000037 236000 2                  LDQ     31
         1 007710   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 007711   200052 630500                    EPPR0   TEMPFPOOL,,AUTO
         1 007712   200072 450500                    STP0    @FP$+1,,AUTO
         1 007713   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 007714   200071 451500                    STP1    TEMP+2,,AUTO
         1 007715   014177 701000 1                  TSX1    FTW_TMPFPOOL
         1 007716   010311 702000 1                  TSX2    JUSTALT

     2939     6740    3                 F$DCB.ARS = -2;

   6740  1 007717   000002 335007                    LCA     2,DL
         1 007720   200030 470500                    LDP0    JDCB$,,AUTO
         1 007721   000000 755100                    STA     0,,PR0

     2940     6741    3                 CALL FTI$SPFILE ALTRET(RELFP);

   6741  1 007722   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 007723   000000 701000 xent               TSX1    FTI$SPFILE
         1 007724   010303 702000 1                  TSX2    RELFP

     2941     6742    4                 IF F$DCB.TYC.BOT(1) THEN DO; /* First block of first file on tape. */

   6742  1 007725   200030 470500                    LDP0    JDCB$,,AUTO
         1 007726   000002 236100                    LDQ     2,,PR0
         1 007727   040000 316003                    CANQ    16384,DU
         1 007730   007735 600000 1                  TZE     s:6746

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:434  
     2942     6743    4                    B$JIT.ERR = E_CVBOT; /*E* FTW-E$CVBOT */

   6743  1 007731   000022 236000 0                  LDQ     E_CVBOT
         1 007732   000000 471400 xsym               LDP1    B$JIT$
         1 007733   100012 756100                    STQ     10,,PR1

     2943     6744    4                    GOTO RELFP;

   6744  1 007734   010303 710000 1                  TRA     RELFP

     2944     6745    4                    END;
     2945     6746    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read EOF1.                   */

   6746  1 007735   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 007736   010303 702000 1                  TSX2    RELFP

     2946     6747    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6747  1 007737   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 007740   000024 036003                    ADLQ    20,DU
         1 007741   200007 756100                    STQ     AFPOOL$,,AUTO

     2947     6748    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read EOF2.                   */

   6748  1 007742   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 007743   010303 702000 1                  TSX2    RELFP

     2948     6749    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6749  1 007744   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 007745   000024 036003                    ADLQ    20,DU
         1 007746   200007 756100                    STQ     AFPOOL$,,AUTO

     2949     6750    3                 F$DCB.ARS = 1;

   6750  1 007747   000001 235007                    LDA     1,DL
         1 007750   200030 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:435  
         1 007751   000000 755100                    STA     0,,PR0

     2950     6751    3                 CALL FTI$SPFILE ALTRET(RELFP);

   6751  1 007752   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 007753   000000 701000 xent               TSX1    FTI$SPFILE
         1 007754   010303 702000 1                  TSX2    RELFP

     2951     6752    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read HDR1.                   */

   6752  1 007755   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 007756   010303 702000 1                  TSX2    RELFP

     2952     6753    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6753  1 007757   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 007760   000024 036003                    ADLQ    20,DU
         1 007761   200007 756100                    STQ     AFPOOL$,,AUTO

     2953     6754    3                 CALL FTW_RDFPOOL ALTRET(RELFP); /* Read HDR2.                   */

   6754  1 007762   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 007763   010303 702000 1                  TSX2    RELFP

     2954     6755    3                 AFPOOL$ = PINCRC(AFPOOL$,-240);

   6755  1 007764   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 007765   777704 036003                    ADLQ    -60,DU
         1 007766   200007 756100                    STQ     AFPOOL$,,AUTO

     2955     6756    3                 AFPOOL$->FT$LBL1.LABEL_ID = 'EOV'; /* Change EOF1 to EOV1.      */

   6756  1 007767   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 007770   040100 100400                    MLR     fill='040'O
         1 007771   000052 000003 0                  ADSC9   E_VOLOUT+2               cn=0,n=3
         1 007772   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:436  
     2956     6757    3                 F$DCB.ARS = 80;

   6757  1 007773   000120 235007                    LDA     80,DL
         1 007774   200030 470500                    LDP0    JDCB$,,AUTO
         1 007775   000000 755100                    STA     0,,PR0

     2957     6758    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOV1.                  */

   6758  1 007776   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 007777   010303 702000 1                  TSX2    RELFP

     2958     6759    3                 CALL CHARBIN(N,AFPOOL$->FT$LBL1.FSECT); /* Save FSECT,          */

   6759  1 010000   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 010001   000100 305500                    DTB
         1 010002   000006 630004                    NDSC9   6,,PR0                   cn=3,s=nosgn,sf=0,n=4
         1 010003   200035 000004                    NDSC9   N,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

     2959     6760    3                 F$DCB.FSECT = N;

   6760  1 010004   200035 720100                    LXL0    N,,AUTO
         1 010005   200030 471500                    LDP1    JDCB$,,AUTO
         1 010006   100077 740100                    STX0    63,,PR1

     2960     6761    3                 IF F$DCB.EBCDIC THEN      /* If IBM tape, get file-rel fsect.   */

   6761  1 010007   100031 236100                    LDQ     25,,PR1
         1 010010   100000 316007                    CANQ    32768,DL
         1 010011   010022 600000 1                  TZE     s:6763

     2961     6762    3                    F$DCB.FSECT = F$DCB.FSECT - F$DCB.STR;

   6762  1 010012   100077 236100                    LDQ     63,,PR1
         1 010013   000777 376007                    ANQ     511,DL
         1 010014   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 010015   100077 236100                    LDQ     63,,PR1
         1 010016   000022 772000                    QRL     18
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:437  
         1 010017   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 010020   000000 621006                    EAX1    0,QL
         1 010021   100077 741100                    STX1    63,,PR1

     2962     6763    3                 CALL CHARBIN(N,AFPOOL$->FT$LBL1.FSEQU_NUM); /* and FSN.         */

   6763  1 010022   000100 305500                    DTB
         1 010023   000007 630004                    NDSC9   7,,PR0                   cn=3,s=nosgn,sf=0,n=4
         1 010024   200035 000004                    NDSC9   N,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

     2963     6764    3                 F$DCB.FSN = N;

   6764  1 010025   200035 720100                    LXL0    N,,AUTO
         1 010026   100034 740100                    STX0    28,,PR1

     2964     6765    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6765  1 010027   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 010030   000024 036003                    ADLQ    20,DU
         1 010031   200007 756100                    STQ     AFPOOL$,,AUTO

     2965     6766    3                 AFPOOL$->FT$LBL2.LABEL_ID = 'EOV'; /* Change EOF2 to EOV2.      */

   6766  1 010032   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 010033   040100 100400                    MLR     fill='040'O
         1 010034   000052 000003 0                  ADSC9   E_VOLOUT+2               cn=0,n=3
         1 010035   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3

     2966     6767    3                 F$DCB.ARS = 80;

   6767  1 010036   000120 235007                    LDA     80,DL
         1 010037   100000 755100                    STA     0,,PR1

     2967     6768    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOV2.                  */

   6768  1 010040   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010041   010303 702000 1                  TSX2    RELFP
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:438  

     2968     6769    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write two file marks.           */

   6769  1 010042   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010043   000000 701000 xent               TSX1    FTI$WRFM
         1 010044   010303 702000 1                  TSX2    RELFP

     2969     6770    3                 CALL FTI$WRFM ALTRET(RELFP);

   6770  1 010045   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010046   000000 701000 xent               TSX1    FTI$WRFM
         1 010047   010303 702000 1                  TSX2    RELFP

     2970     6771    3                 F$DCB.SEZ_OK = %YES#;     /* Scratch next vol is OK.            */

   6771  1 010050   200030 470500                    LDP0    JDCB$,,AUTO
         1 010051   000004 236003                    LDQ     4,DU
         1 010052   000064 256100                    ORSQ    52,,PR0

     2971     6772    3                 CALL FTR$CHNGVOL(F$DCB.VOL+1) ALTRET(RELFP);

   6772  1 010053   000043 236100                    LDQ     35,,PR0
         1 010054   000033 772000                    QRL     27
         1 010055   000001 036007                    ADLQ    1,DL
         1 010056   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 010057   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 010060   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 010061   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 010062   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 010063   000000 701000 xent               TSX1    FTR$CHNGVOL
         1 010064   010303 702000 1                  TSX2    RELFP

     2972     6773    3                 DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

   6773  1 010065   200030 470500                    LDP0    JDCB$,,AUTO
         1 010066   000051 720100                    LXL0    41,,PR0
         1 010067   000000 471400 xsym               LDP1    N$DCT$$
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:439  
         1 010070   100000 473510                    LDP3    0,X0,PR1
         1 010071   300004 236100                    LDQ     4,,PR3
         1 010072   200016 756100                    STQ     DDDT$,,AUTO

     2973     6774    3                 CALL FTL$VOL1 ALTRET(RELFP); /* Write VOL1.                     */

   6774  1 010073   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010074   000000 701000 xent               TSX1    FTL$VOL1
         1 010075   010303 702000 1                  TSX2    RELFP

     2974     6775    3                 AFPOOL$ = PINCRC(AFPOOL$,-240);

   6775  1 010076   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 010077   777704 036003                    ADLQ    -60,DU
         1 010100   200007 756100                    STQ     AFPOOL$,,AUTO

     2975     6776    3                 IF F$DCB.EBCDIC THEN

   6776  1 010101   200030 470500                    LDP0    JDCB$,,AUTO
         1 010102   000031 236100                    LDQ     25,,PR0
         1 010103   100000 316007                    CANQ    32768,DL
         1 010104   010112 600000 1                  TZE     s:6779

     2976     6777    3                    F$DCB.FSECT = F$DCB.VOL; /* File section is on new volume.   */

   6777  1 010105   000043 236100                    LDQ     35,,PR0
         1 010106   000033 772000                    QRL     27
         1 010107   000000 620006                    EAX0    0,QL
         1 010110   000077 740100                    STX0    63,,PR0
         1 010111   010115 710000 1                  TRA     s:6780

     2977     6778    3                 ELSE
     2978     6779    3                    F$DCB.FSECT = F$DCB.FSECT + 1; /* Increment FSECT.           */

   6779  1 010112   000077 220100                    LDX0    63,,PR0
         1 010113   000001 621010                    EAX1    1,X0
         1 010114   000077 741100                    STX1    63,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:440  

     2979     6780    3                 CALL BINCHAR(AFPOOL$->FT$LBL1.FSECT,F$DCB.FSECT);

   6780  1 010115   000077 236100                    LDQ     63,,PR0
         1 010116   000022 772000                    QRL     18
         1 010117   000000 235003                    LDA     0,DU
         1 010120   200112 757100                    STAQ    @FIELD_LENGTH+2,,AUTO
         1 010121   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 010122   000100 301500                    BTD
         1 010123   200112 000010                    NDSC9   @FIELD_LENGTH+2,,AUTO    cn=0,s=lsgnf,sf=0,n=8
         1 010124   100006 630004                    NDSC9   6,,PR1                   cn=3,s=nosgn,sf=0,n=4

     2980     6781    3                 AFPOOL$->FT$LBL1.LABEL_ID = 'HDR'; /* Change EOV1 to HDR1.      */

   6781  1 010125   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 010126   040100 100400                    MLR     fill='040'O
         1 010127   000053 000003 0                  ADSC9   E_VOLOUT+3               cn=0,n=3
         1 010130   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3

     2981     6782    3                 SIX_CHARS = AFPOOL$->FT$LBL1.BLK_CNT; /* Save EOF1 block count. */

   6782  1 010131   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 010132   040100 100500                    MLR     fill='040'O
         1 010133   100015 400006                    ADSC9   13,,PR1                  cn=2,n=6
         1 010134   200042 000006                    ADSC9   SIX_CHARS,,AUTO          cn=0,n=6

     2982     6783    3                 AFPOOL$->FT$LBL1.BLK_CNT = '000000'; /* Zero it for HDR1.       */

   6783  1 010135   040100 100400                    MLR     fill='040'O
         1 010136   000054 000006 0                  ADSC9   E_VOLOUT+4               cn=0,n=6
         1 010137   100015 400006                    ADSC9   13,,PR1                  cn=2,n=6

     2983     6784    3                 F$DCB.ARS = 80;

   6784  1 010140   000120 236007                    LDQ     80,DL
         1 010141   000000 756100                    STQ     0,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:441  
     2984     6785    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR1.                  */

   6785  1 010142   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010143   010303 702000 1                  TSX2    RELFP

     2985     6786    3                 AFPOOL$->FT$LBL1.BLK_CNT = SIX_CHARS; /* Restore block count.   */

   6786  1 010144   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 010145   040100 100500                    MLR     fill='040'O
         1 010146   200042 000006                    ADSC9   SIX_CHARS,,AUTO          cn=0,n=6
         1 010147   000015 400006                    ADSC9   13,,PR0                  cn=2,n=6

     2986     6787    3                 AFPOOL$->FT$LBL1.LABEL_ID = 'EOF'; /* Change it to EOF1.        */

   6787  1 010150   040100 100400                    MLR     fill='040'O
         1 010151   000056 000003 0                  ADSC9   E_VOLOUT+6               cn=0,n=3
         1 010152   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3

     2987     6788    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6788  1 010153   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 010154   000024 036003                    ADLQ    20,DU
         1 010155   200007 756100                    STQ     AFPOOL$,,AUTO

     2988     6789    3                 AFPOOL$->FT$LBL2.LABEL_ID = 'HDR'; /* Change EOV2 to HDR2.      */

   6789  1 010156   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 010157   040100 100400                    MLR     fill='040'O
         1 010160   000053 000003 0                  ADSC9   E_VOLOUT+3               cn=0,n=3
         1 010161   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3

     2989     6790    3                 F$DCB.ARS = 80;

   6790  1 010162   000120 235007                    LDA     80,DL
         1 010163   200030 470500                    LDP0    JDCB$,,AUTO
         1 010164   000000 755100                    STA     0,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:442  
     2990     6791    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR2.                  */

   6791  1 010165   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010166   010303 702000 1                  TSX2    RELFP

     2991     6792    3                 AFPOOL$->FT$LBL2.LABEL_ID = 'EOF'; /* Change it to EOF2.        */

   6792  1 010167   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 010170   040100 100400                    MLR     fill='040'O
         1 010171   000056 000003 0                  ADSC9   E_VOLOUT+6               cn=0,n=3
         1 010172   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3

     2992     6793    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write two file marks.           */

   6793  1 010173   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010174   000000 701000 xent               TSX1    FTI$WRFM
         1 010175   010303 702000 1                  TSX2    RELFP

     2993     6794    3                 CALL FTI$WRFM ALTRET(RELFP);

   6794  1 010176   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010177   000000 701000 xent               TSX1    FTI$WRFM
         1 010200   010303 702000 1                  TSX2    RELFP

     2994     6795    3                 AFPOOL$ = PINCRC(AFPOOL$,-80);

   6795  1 010201   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 010202   777754 036003                    ADLQ    -20,DU
         1 010203   200007 756100                    STQ     AFPOOL$,,AUTO

     2995     6796    3                 F$DCB.ARS = 80;

   6796  1 010204   000120 235007                    LDA     80,DL
         1 010205   200030 470500                    LDP0    JDCB$,,AUTO
         1 010206   000000 755100                    STA     0,,PR0

     2996     6797    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOF1.                  */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:443  

   6797  1 010207   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010210   010303 702000 1                  TSX2    RELFP

     2997     6798    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6798  1 010211   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 010212   000024 036003                    ADLQ    20,DU
         1 010213   200007 756100                    STQ     AFPOOL$,,AUTO

     2998     6799    3                 F$DCB.ARS = 80;

   6799  1 010214   000120 235007                    LDA     80,DL
         1 010215   200030 470500                    LDP0    JDCB$,,AUTO
         1 010216   000000 755100                    STA     0,,PR0

     2999     6800    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write EOF2.                  */

   6800  1 010217   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010220   010303 702000 1                  TSX2    RELFP

     3000     6801    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write file mark.                */

   6801  1 010221   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010222   000000 701000 xent               TSX1    FTI$WRFM
         1 010223   010303 702000 1                  TSX2    RELFP

     3001     6802    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6802  1 010224   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 010225   000024 036003                    ADLQ    20,DU
         1 010226   200007 756100                    STQ     AFPOOL$,,AUTO

     3002     6803    3                 F$DCB.ARS = 80;

   6803  1 010227   000120 235007                    LDA     80,DL
         1 010230   200030 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:444  
         1 010231   000000 755100                    STA     0,,PR0

     3003     6804    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR1 for next file.    */

   6804  1 010232   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010233   010303 702000 1                  TSX2    RELFP

     3004     6805    3                 AFPOOL$ = PINCRC(AFPOOL$,80);

   6805  1 010234   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 010235   000024 036003                    ADLQ    20,DU
         1 010236   200007 756100                    STQ     AFPOOL$,,AUTO

     3005     6806    3                 F$DCB.ARS = 80;

   6806  1 010237   000120 235007                    LDA     80,DL
         1 010240   200030 470500                    LDP0    JDCB$,,AUTO
         1 010241   000000 755100                    STA     0,,PR0

     3006     6807    3                 CALL FTW_WRFPOOL ALTRET(RELFP); /* Write HDR2 for next file.    */

   6807  1 010242   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010243   010303 702000 1                  TSX2    RELFP

     3007     6808    3                 CALL FTI$WRFM ALTRET(RELFP); /* Write file mark.                */

   6808  1 010244   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010245   000000 701000 xent               TSX1    FTI$WRFM
         1 010246   010303 702000 1                  TSX2    RELFP

     3008     6809    3                 CALL FMD$RELBUF(TEMPFPOOL); /* Release temporary buffer.        */

   6809  1 010247   200052 630500                    EPPR0   TEMPFPOOL,,AUTO
         1 010250   200112 450500                    STP0    @FIELD_LENGTH+2,,AUTO
         1 010251   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 010252   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 010253   000000 701000 xent               TSX1    FMD$RELBUF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:445  
         1 010254   000000 011000                    NOP     0

     3009     6810    3                 AFPOOL$ = TEMPFP$;

   6810  1 010255   200051 236100                    LDQ     TEMPFP$,,AUTO
         1 010256   200007 756100                    STQ     AFPOOL$,,AUTO

     3010     6811    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS;

   6811  1 010257   200007 470500                    LDP0    AFPOOL$,,AUTO
         1 010260   000000 236100                    LDQ     0,,PR0
         1 010261   000022 772000                    QRL     18
         1 010262   200067 756100                    STQ     TEMP,,AUTO

     3011     6812    3                 F$DCB.ARS = TEMP - (TEMP / 512) * 256;

   6812  1 010263   000011 772000                    QRL     9
         1 010264   000010 736000                    QLS     8
         1 010265   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 010266   000001 036007                    ADLQ    1,DL
         1 010267   200067 036100                    ADLQ    TEMP,,AUTO
         1 010270   200030 471500                    LDP1    JDCB$,,AUTO
         1 010271   100000 756100                    STQ     0,,PR1

     3012     6813    3                 CALL FTW_WRFPOOL ALTRET(JUSTALT); /* Write the block            */

   6813  1 010272   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 010273   010311 702000 1                  TSX2    JUSTALT

     3013     6814    3                 F$DCB.PRECNO = 2;

   6814  1 010274   000002 235007                    LDA     2,DL
         1 010275   200030 470500                    LDP0    JDCB$,,AUTO
         1 010276   000072 755100                    STA     58,,PR0

     3014     6815    3                 F$DCB.AFTRBLK = %NO#;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:446  
   6815  1 010277   000035 236000 2                  LDQ     29
         1 010300   000064 356100                    ANSQ    52,,PR0

     3015     6816    3                 END;

     3016     6817    2              RETURN;

   6817  1 010301   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 010302   000001 702211                    TSX2  ! 1,X1

   6812  1 010303                       RELFP        null
     3017     6818
     3018     6819    2   RELFP:     ;
     3019     6820    2              CALL FMD$RELBUF(TEMPFPOOL);

   6820  1 010303   200052 630500                    EPPR0   TEMPFPOOL,,AUTO
         1 010304   200112 450500                    STP0    @FIELD_LENGTH+2,,AUTO
         1 010305   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 010306   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 010307   000000 701000 xent               TSX1    FMD$RELBUF
         1 010310   000000 011000                    NOP     0

   6812  1 010311                       JUSTALT      null
     3020     6821    2   JUSTALT:   ;
     3021     6822    2              ALTRETURN;

   6822  1 010311   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 010312   000000 702211                    TSX2  ! 0,X1

     3022     6823
     3023     6824    2      END FTW_IOERRCVOL;
     3024     6825        /*********************************************************************/
     3025     6826        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:447  
     3026     6827        /*********************************************************************/
     3027     6828    1   FTW_PR:    PROC ALTRET;

   6828  1 010313   200066 741300       FTW_PR       STX1  ! MAXMKEY,,AUTO

     3028     6829        /*F*    NAME: FTW_PR
     3029     6830                PURPOSE: Fixed and variable format position record.
     3030     6831                RESTRICTION: If no altret is taken, the current record must be
     3031     6832                  in the current FPOOL buffer at DCB.CRECX.
     3032     6833         ***/
     3033     6834
     3034     6835        /********************/
     3035     6836
     3036     6837    2              CALL FTW_PNRSNE ALTRET(JUSTALT); /* Get current record segment     */

   6837  1 010314   011024 701000 1                  TSX1    FTW_PNRSNE
         1 010315   010716 702000 1                  TSX2    JUSTALT

     3037     6838
     3038     6839         /***
     3039     6840          *** Prepare for PRECORD by first adjusting position.  M$PRECORD
     3040     6841          *** from the record which would be the next record read.
     3041     6842          ***/
     3042     6843
     3043     6844    2              IF NOT F$DCB.RPOS

   6844  1 010316   200030 470500                    LDP0    JDCB$,,AUTO
         1 010317   000064 236100                    LDQ     52,,PR0
         1 010320   010000 316007                    CANQ    4096,DL
         1 010321   010327 601000 1                  TNZ     s:6849

     3044     6845    3              THEN DO;                   /* We are positioned behind next record */

     3045     6846    3                 DCRECNO = F$DCB.CRECNO + 1; /* Pretend at next record           */

   6846  1 010322   000071 235100                    LDA     57,,PR0
         1 010323   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:448  
         1 010324   200014 755100                    STA     DCRECNO,,AUTO

     3046     6847    3                 N = N + 1;                /* One more record forward            */

   6847  1 010325   200035 054100                    AOS     N,,AUTO

     3047     6848    3                 END;

   6848  1 010326   010331 710000 1                  TRA     s:6859

     3048     6849    2              ELSE DCRECNO = F$DCB.CRECNO; /* Positioned to record to position from */

   6849  1 010327   000071 235100                    LDA     57,,PR0
         1 010330   200014 755100                    STA     DCRECNO,,AUTO

     3049     6850
     3050     6851         /***
     3051     6852          *** Position backward: if the number of records to skip backward is
     3052     6853          *** greater than the number of the record we are positioned to,
     3053     6854          *** just use PFIL BOF--it's much faster.  Otherwise we must
     3054     6855          *** determine the number of records in each block backspaced over
     3055     6856          *** until we arrive at a block which contains the specified record.
     3056     6857          ***/
     3057     6858
     3058     6859    2              IF N < 0 OR (N = 0 AND NOT F$DCB.RPOS)

   6859  1 010331   200035 235100                    LDA     N,,AUTO
         1 010332   010336 604000 1                  TMI     s:6861
         1 010333   010655 601000 1                  TNZ     s:6962
         1 010334   010000 316007                    CANQ    4096,DL
         1 010335   010655 601000 1                  TNZ     s:6962

     3059     6860    3              THEN DO;                     /* Negative positioning               */

     3060     6861    3                 IF DCRECNO + N <= 0

   6861  1 010336   200014 236100                    LDQ     DCRECNO,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:449  
         1 010337   200035 036100                    ADLQ    N,,AUTO
         1 010340   010354 605400 1                  TPNZ    s:6873

     3061     6862    4                 THEN DO;                  /* Positioning would leave us at BOF  */

     3062     6863    4                    CALL FTW_BOF ALTRET(JUSTALT); /* PFIL BOF                    */

   6863  1 010341   012753 701000 1                  TSX1    FTW_BOF
         1 010342   010716 702000 1                  TSX2    JUSTALT

     3063     6864    4                    B$JIT.ERR = E_BOF; /*E* ERROR: FTW-E$BOF */

   6864  1 010343   000016 236000 0                  LDQ     E_BOF
         1 010344   000000 470400 xsym               LDP0    B$JIT$
         1 010345   000012 756100                    STQ     10,,PR0

     3064     6865                               /* Beginning of file error--attempt to skip beyond BOF */
     3065     6866    4                    F$DCB.ARS = DCRECNO - 1; /* Return number of recs skipped    */

   6866  1 010346   200030 471500                    LDP1    JDCB$,,AUTO
         1 010347   200014 235100                    LDA     DCRECNO,,AUTO
         1 010350   000001 135007                    SBLA    1,DL
         1 010351   100000 755100                    STA     0,,PR1

     3066     6867    4                    RETURN;

   6867  1 010352   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 010353   000001 702211                    TSX2  ! 1,X1

     3067     6868    4                    END;
     3068     6869         /***
     3069     6870             *** Due to the above check, we can't possibly hit beginning of file
     3070     6871             *** unless a tape error goes undetected.
     3071     6872             ***/
     3072     6873    3                 F$DCB.MUST_CVOL = %NO#;

   6873  1 010354   000011 236000 2                  LDQ     9
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:450  
         1 010355   000064 356100                    ANSQ    52,,PR0

     3073     6874                    /* DCB.NRECX is the number of recs in the block including current */
     3074     6875    3                 N = N + (F$DCB.NRECX - 1); /* Position to first record of block */

   6875  1 010356   000100 236100                    LDQ     64,,PR0
         1 010357   000022 772000                    QRL     18
         1 010360   200035 036100                    ADLQ    N,,AUTO
         1 010361   000001 136007                    SBLQ    1,DL
         1 010362   200035 756100                    STQ     N,,AUTO

     3075     6876    3                 F$DCB.CRECNO = F$DCB.CRECNO - (F$DCB.NRECX - 1);

   6876  1 010363   000100 236100                    LDQ     64,,PR0
         1 010364   000022 772000                    QRL     18
         1 010365   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 010366   000071 236100                    LDQ     57,,PR0
         1 010367   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 010370   000001 036007                    ADLQ    1,DL
         1 010371   000071 756100                    STQ     57,,PR0

     3076     6877    3                 CALL FTW_P1RB ALTRET(NO1STREC);
              6877                          /* Position to first record of block */

   6877  1 010372   013177 701000 1                  TSX1    FTW_P1RB
         1 010373   010375 702000 1                  TSX2    NO1STREC

     3077     6878    4                 DO ALTRET_HANDLING;

   6878  1 010374   010404 710000 1                  TRA     s:6883

   6877  1 010375                       NO1STREC     null
     3078     6879    4   NO1STREC:        ;
     3079     6880    4                    IF B$JIT.ERR THEN ALTRETURN;

   6880  1 010375   000000 470400 xsym               LDP0    B$JIT$
         1 010376   000012 235100                    LDA     10,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:451  
         1 010377   010402 600000 1                  TZE     s:6881

   6880  1 010400   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 010401   000000 702211                    TSX2  ! 0,X1

     3080     6881    4                    SPANINFO = 3;          /* Anything > 1                       */

   6881  1 010402   000003 236007                    LDQ     3,DL
         1 010403   200044 756100                    STQ     SPANINFO,,AUTO

     3081     6882    4                    END;

     3082     6883    3                 IF N < 0 OR SPANINFO > 1

   6883  1 010404   200035 235100                    LDA     N,,AUTO
         1 010405   010411 604000 1                  TMI     s:6885
         1 010406   200044 236100                    LDQ     SPANINFO,,AUTO
         1 010407   000001 116007                    CMPQ    1,DL
         1 010410   010422 604400 1                  TMOZ    s:6893

     3083     6884    4                 THEN DO;                 /* Need to trunc due to backwards skip */

     3084     6885    4                    IF NOT (FPT$PRECORD_V.NOMARKS) THEN

   6885  1 010411   200024 470500                    LDP0    FPT$,,AUTO
         1 010412   000002 236100                    LDQ     2,,PR0
         1 010413   200000 316007                    CANQ    65536,DL
         1 010414   010417 601000 1                  TNZ     s:6887

     3085     6886    4                       CALL FTW_TRNCWEOF ALTRET(JUSTALT);
              6886                                /* Trunc last block if modified */

   6886  1 010415   014760 701000 1                  TSX1    FTW_TRNCWEOF
         1 010416   010716 702000 1                  TSX2    JUSTALT

     3086     6887    4                    F$DCB.LSTBLK = %NO#;
              6887                             /* Can't be positioned to last block anymore */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:452  

   6887  1 010417   200030 470500                    LDP0    JDCB$,,AUTO
         1 010420   000033 236000 2                  LDQ     27
         1 010421   000064 356100                    ANSQ    52,,PR0

     3087     6888    4                    END;

     3088     6889         /***
     3089     6890             *** This DO WHILE backs up to the block which contains
     3090     6891             *** the beginning of the proper record.
     3091     6892             ***/
     3092     6893    4                 DO WHILE(N < 0 OR SPANINFO > 1);

   6893  1 010422   010650 710000 1                  TRA     s:6954

   6893  1 010423                       NO1ST        null
     3093     6894             /* We are now positioned to "read" the first record of the current block */
     3094     6895    4   NO1ST:           ;
     3095     6896    4                    IF B$JIT.ERR THEN ALTRETURN;

   6896  1 010423   000000 470400 xsym               LDP0    B$JIT$
         1 010424   000012 235100                    LDA     10,,PR0
         1 010425   010430 600000 1                  TZE     s:6902

   6896  1 010426   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 010427   000000 702211                    TSX2  ! 0,X1

     3096     6897         /***
     3097     6898                *** We must now read the previous block.  If it does
     3098     6899                *** not reside in the current file section, get the
     3099     6900                *** previous file section.
     3100     6901                ***/
     3101     6902    4                    F$DCB.PRECNO = F$DCB.PRECNO - 1;

   6902  1 010430   200030 471500                    LDP1    JDCB$,,AUTO
         1 010431   000001 336007                    LCQ     1,DL
         1 010432   100072 056100                    ASQ     58,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:453  

     3102     6903    5                    IF F$DCB.PRECNO < 1 THEN DO;
              6903                             /* Must get block from previous section */

   6903  1 010433   010513 605400 1                  TPNZ    s:6917

     3103     6904    6                       DO WHILE(F$DCB.PRECNO < 1); /* Get previous volume        */

   6904  1 010434   010513 605400 1                  TPNZ    s:6917

     3104     6905    6                          CALL FTL$PBSN(0,ADDR(NIL),F$DCB.FSECT-1) ALTRET(JUSTALT);

   6905  1 010435   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 010436   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 010437   200030 470500                    LDP0    JDCB$,,AUTO
         1 010440   000077 236100                    LDQ     63,,PR0
         1 010441   000022 772000                    QRL     18
         1 010442   000001 136007                    SBLQ    1,DL
         1 010443   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 010444   200113 631500                    EPPR1   @FIELD_LENGTH+3,,AUTO
         1 010445   200116 451500                    STP1    @FIELD_LENGTH+6,,AUTO
         1 010446   200112 633500                    EPPR3   @FIELD_LENGTH+2,,AUTO
         1 010447   200115 453500                    STP3    @FIELD_LENGTH+5,,AUTO
         1 010450   000031 236000 2                  LDQ     25
         1 010451   200114 756100                    STQ     @FIELD_LENGTH+4,,AUTO
         1 010452   200114 630500                    EPPR0   @FIELD_LENGTH+4,,AUTO
         1 010453   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 010454   000000 701000 xent               TSX1    FTL$PBSN
         1 010455   010716 702000 1                  TSX2    JUSTALT

     3105     6906    6                          F$DCB.ARS = 65500; /* Space to end of file             */

   6906  1 010456   177734 235007                    LDA     65500,DL
         1 010457   200030 470500                    LDP0    JDCB$,,AUTO
         1 010460   000000 755100                    STA     0,,PR0

     3106     6907    6                          CALL FTI$SPREC ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:454  

   6907  1 010461   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010462   000000 701000 xent               TSX1    FTI$SPREC
         1 010463   010716 702000 1                  TSX2    JUSTALT

     3107     6908    6                          IF F$DCB.FSECT = 1 AND F$DCB.TAPTYP.CP6F THEN

   6908  1 010464   200030 470500                    LDP0    JDCB$,,AUTO
         1 010465   000077 220100                    LDX0    63,,PR0
         1 010466   000001 100003                    CMPX0   1,DU
         1 010467   010477 601000 1                  TNZ     s:6911
         1 010470   000067 236100                    LDQ     55,,PR0
         1 010471   000200 316003                    CANQ    128,DU
         1 010472   010477 600000 1                  TZE     s:6911

     3108     6909    6                             F$DCB.PRECNO = F$DCB.ARS - 1; /* Don't count FIT    */

   6909  1 010473   000000 235100                    LDA     0,,PR0
         1 010474   000001 135007                    SBLA    1,DL
         1 010475   000072 755100                    STA     58,,PR0
         1 010476   010501 710000 1                  TRA     s:6912

     3109     6910    6                          ELSE
     3110     6911    6                             F$DCB.PRECNO = F$DCB.ARS;

   6911  1 010477   000000 235100                    LDA     0,,PR0
         1 010500   000072 755100                    STA     58,,PR0

     3111     6912    6                          F$DCB.ARS = -1;

   6912  1 010501   000001 336007                    LCQ     1,DL
         1 010502   000000 756100                    STQ     0,,PR0

     3112     6913    6                          CALL FTI$SPFILE ALTRET(JUSTALT);

   6913  1 010503   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010504   000000 701000 xent               TSX1    FTI$SPFILE
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:455  
         1 010505   010716 702000 1                  TSX2    JUSTALT

     3113     6914    6                          F$DCB.AFTRBLK = %NO#; /* Just backup 1 block           */

   6914  1 010506   200030 470500                    LDP0    JDCB$,,AUTO
         1 010507   000035 236000 2                  LDQ     29
         1 010510   000064 356100                    ANSQ    52,,PR0

     3114     6915    6                          END;

   6915  1 010511   000072 235100                    LDA     58,,PR0
         1 010512   010435 604400 1                  TMOZ    s:6905

     3115     6916    5                       END;

     3116     6917    4                    IF F$DCB.AFTRBLK THEN

   6917  1 010513   200030 470500                    LDP0    JDCB$,,AUTO
         1 010514   000064 236100                    LDQ     52,,PR0
         1 010515   000002 316007                    CANQ    2,DL
         1 010516   010522 600000 1                  TZE     s:6920

     3117     6918    4                       F$DCB.ARS = -2;     /* Skip current and previous          */

   6918  1 010517   000002 335007                    LCA     2,DL
         1 010520   000000 755100                    STA     0,,PR0
         1 010521   010524 710000 1                  TRA     s:6921

     3118     6919    4                    ELSE
     3119     6920    4                       F$DCB.ARS = -1;     /* Just skip previous                 */

   6920  1 010522   000001 335007                    LCA     1,DL
         1 010523   000000 755100                    STA     0,,PR0

     3120     6921    4                    CALL FTI$SPREC ALTRET(JUSTALT);

   6921  1 010524   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:456  
         1 010525   000000 701000 xent               TSX1    FTI$SPREC
         1 010526   010716 702000 1                  TSX2    JUSTALT

     3121     6922    4                    IF F$DCB.OLDIOERR ~= 0 THEN

   6922  1 010527   200030 470500                    LDP0    JDCB$,,AUTO
         1 010530   000102 236100                    LDQ     66,,PR0
         1 010531   140000 316003                    CANQ    49152,DU
         1 010532   010535 600000 1                  TZE     s:6924

     3122     6923    4                       F$DCB.OLDIOERR = 0;
              6923                                /* We're going backwards, so just forget it. */

   6923  1 010533   000027 236000 2                  LDQ     23
         1 010534   000102 356100                    ANSQ    66,,PR0

     3123     6924    4                    F$DCB.ARS = F$DCB.BLKL; /* Read block                        */

   6924  1 010535   000033 236100                    LDQ     27,,PR0
         1 010536   000022 772000                    QRL     18
         1 010537   000000 756100                    STQ     0,,PR0

     3124     6925    5                    CALL FTW_RDFPOOL WHENALTRETURN DO;

   6925  1 010540   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 010541   010543 702000 1                  TSX2    s:6926
         1 010542   010621 710000 1                  TRA     s:6944

     3125     6926    5                       IF B$JIT.ERR.CODE ~= %E$IOERR THEN

   6926  1 010543   000000 470400 xsym               LDP0    B$JIT$
         1 010544   000012 236100                    LDQ     10,,PR0
         1 010545   377770 376007                    ANQ     131064,DL
         1 010546   000100 116007                    CMPQ    64,DL
         1 010547   010552 600000 1                  TZE     s:6928

     3126     6927    5                          ALTRETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:457  

   6927  1 010550   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 010551   000000 702211                    TSX2  ! 0,X1

     3127     6928    5                       FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                  */

   6928  1 010552   200016 471500                    LDP1    DDDT$,,AUTO
         1 010553   000030 236000 2                  LDQ     24
         1 010554   100006 356100                    ANSQ    6,,PR1

     3128     6929    6                       IF NOT F$DCB.IOERROK AND NOT IOERROK THEN DO;

   6929  1 010555   200030 473500                    LDP3    JDCB$,,AUTO
         1 010556   300031 236100                    LDQ     25,,PR3
         1 010557   020000 316003                    CANQ    8192,DU
         1 010560   010604 601000 1                  TNZ     s:6938
         1 010561   200027 234100                    SZN     IOERROK,,AUTO
         1 010562   010604 604000 1                  TMI     s:6938

     3129     6930    6                          ERRSAV = B$JIT.ERR; /* Save the error.                 */

   6930  1 010563   000012 236100                    LDQ     10,,PR0
         1 010564   200023 756100                    STQ     ERRSAV,,AUTO

     3130     6931    6                          F$DCB.ARS = 1;   /* Back up to the previous block.     */

   6931  1 010565   000001 235007                    LDA     1,DL
         1 010566   300000 755100                    STA     0,,PR3

     3131     6932    6                          CALL FTI$SPREC ALTRET(JUSTALT);

   6932  1 010567   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 010570   000000 701000 xent               TSX1    FTI$SPREC
         1 010571   010716 702000 1                  TSX2    JUSTALT

     3132     6933    6                          F$DCB.ARS = F$DCB.BLKL; /* Reread it.                  */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:458  
   6933  1 010572   200030 470500                    LDP0    JDCB$,,AUTO
         1 010573   000033 236100                    LDQ     27,,PR0
         1 010574   000022 772000                    QRL     18
         1 010575   000000 756100                    STQ     0,,PR0

     3133     6934    6                          CALL FTW_RDFPOOL ALTRET(JUSTALT);

   6934  1 010576   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 010577   010716 702000 1                  TSX2    JUSTALT

     3134     6935    6                          B$JIT.ERR = ERRSAV; /* Restore the error.              */

   6935  1 010600   200023 236100                    LDQ     ERRSAV,,AUTO
         1 010601   000000 470400 xsym               LDP0    B$JIT$
         1 010602   000012 756100                    STQ     10,,PR0

     3135     6936    6                          GOTO PPREDONE;

   6936  1 010603   010672 710000 1                  TRA     PPREDONE

     3136     6937    6                          END;
     3137     6938    5                       CALL FTW_GETBLKLEN; /* Get and check real block length.   */

   6938  1 010604   012171 701000 1                  TSX1    FTW_GETBLKLEN
         1 010605   000000 011000                    NOP     0

     3138     6939    5                       F$DCB.OLDIOERR = 1; /* Remember we hit an I/O error.      */

   6939  1 010606   200030 470500                    LDP0    JDCB$,,AUTO
         1 010607   000102 236100                    LDQ     66,,PR0
         1 010610   000027 376000 2                  ANQ     23
         1 010611   040000 276003                    ORQ     16384,DU
         1 010612   000102 756100                    STQ     66,,PR0

     3139     6940    5                       F$DCB.BLKLEN = F$DCB.ARS; /* Save the size of the block.  */

   6940  1 010613   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:459  
         1 010614   000074 440100                    SXL0    60,,PR0

     3140     6941    5                       F$DCB.TYC.IOERR(1) = '1'B; /* Set IOERR in TYC.           */

   6941  1 010615   001000 236003                    LDQ     512,DU
         1 010616   000002 256100                    ORSQ    2,,PR0

     3141     6942    5                       B$JIT.ERR = '0'B;   /* Clear error.                       */

   6942  1 010617   000000 471400 xsym               LDP1    B$JIT$
         1 010620   100012 450100                    STZ     10,,PR1

     3142     6943    5                       END;

     3143     6944    4                    F$DCB.NEW_FSECT = %NO#; /* Can't be beginning of file section */

   6944  1 010621   200030 470500                    LDP0    JDCB$,,AUTO
         1 010622   000034 236000 2                  LDQ     28
         1 010623   000064 356100                    ANSQ    52,,PR0

     3144     6945    4                    F$DCB.AFTRBLK = %YES#;

   6945  1 010624   000002 236007                    LDQ     2,DL
         1 010625   000064 256100                    ORSQ    52,,PR0

     3145     6946    4                    CALL FTW_P1RB ALTRET(NO1ST);
              6946                             /* Get ready to determine # recs in block */

   6946  1 010626   013177 701000 1                  TSX1    FTW_P1RB
         1 010627   010423 702000 1                  TSX2    NO1ST

     3146     6947    5                    DO WHILE (%YES#);

     3147     6948    5                       CALL FTW_PNRB ALTRET(BLKEND); /* Count # recs in block    */

   6948  1 010630   013263 701000 1                  TSX1    FTW_PNRB
         1 010631   010633 702000 1                  TSX2    BLKEND
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:460  

     3148     6949    5                       END;

   6949  1 010632   010630 710000 1                  TRA     s:6948

     3149     6950    4   BLKEND:          F$DCB.CRECNO = F$DCB.CRECNO - F$DCB.NRECX;

   6950  1 010633   200030 470500       BLKEND       LDP0    JDCB$,,AUTO
         1 010634   000100 236100                    LDQ     64,,PR0
         1 010635   000022 772000                    QRL     18
         1 010636   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 010637   000071 236100                    LDQ     57,,PR0
         1 010640   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 010641   000071 756100                    STQ     57,,PR0

     3150     6951    4                    N = N + F$DCB.NRECX;

   6951  1 010642   000100 236100                    LDQ     64,,PR0
         1 010643   000022 772000                    QRL     18
         1 010644   200035 036100                    ADLQ    N,,AUTO
         1 010645   200035 756100                    STQ     N,,AUTO

     3151     6952                                  /* DCB.NRECX = number of records beginning in block */
     3152     6953    4                    CALL FTW_P1RB ALTRET(NO1ST);

   6953  1 010646   013177 701000 1                  TSX1    FTW_P1RB
         1 010647   010423 702000 1                  TSX2    NO1ST

     3153     6954    4                    END;

   6954  1 010650   200035 235100                    LDA     N,,AUTO
         1 010651   010423 604000 1                  TMI     NO1ST
         1 010652   200044 236100                    LDQ     SPANINFO,,AUTO
         1 010653   000001 116007                    CMPQ    1,DL
         1 010654   010423 605400 1                  TPNZ    NO1ST

     3154     6955    3                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:461  

     3155     6956
     3156     6957         /***
     3157     6958          *** Position forward: position to next record until count or
     3158     6959          *** file exhausted.
     3159     6960          ***/
     3160     6961
     3161     6962    3              DO WHILE (N > 0);

   6962  1 010655   000000 115003                    CMPA    0,DU
         1 010656   010672 604400 1                  TMOZ    PPREDONE

     3162     6963    3                 CALL FTW_PNRS(1) ALTRET(PPREDONE);

   6963  1 010657   000007 236000 2                  LDQ     7
         1 010660   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 010661   013423 701000 1                  TSX1    FTW_PNRS
         1 010662   010672 702000 1                  TSX2    PPREDONE

     3163     6964    3                 N = N - 1;                /* Record skipped                     */

   6964  1 010663   000001 336007                    LCQ     1,DL
         1 010664   200035 056100                    ASQ     N,,AUTO

     3164     6965    3                 F$DCB.RPOS = %NO#;        /* As if record was read              */

   6965  1 010665   200030 470500                    LDP0    JDCB$,,AUTO
         1 010666   000013 236000 2                  LDQ     11
         1 010667   000064 356100                    ANSQ    52,,PR0

     3165     6966    3                 END;

   6966  1 010670   200035 235100                    LDA     N,,AUTO
         1 010671   010657 605400 1                  TPNZ    s:6963

   6963  1 010672                       PPREDONE     null
     3166     6967    2   PPREDONE:  ;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:462  
     3167     6968    2              F$DCB.EOP = PRECORDEOP#;     /* Last operation was PRECORD         */

   6968  1 010672   200030 470500                    LDP0    JDCB$,,AUTO
         1 010673   000064 236100                    LDQ     52,,PR0
         1 010674   000003 376000 2                  ANQ     3
         1 010675   002000 276003                    ORQ     1024,DU
         1 010676   000064 756100                    STQ     52,,PR0

     3168     6969    2              F$DCB.ARS = F$DCB.CRECNO - DCRECNO; /* New pos - old pos = # skipped */

   6969  1 010677   000071 236100                    LDQ     57,,PR0
         1 010700   200014 136100                    SBLQ    DCRECNO,,AUTO
         1 010701   000000 756100                    STQ     0,,PR0

     3169     6970    2              IF F$DCB.ARS < 0 THEN F$DCB.ARS = - F$DCB.ARS;

   6970  1 010702   010706 605000 1                  TPL     s:6971

   6970  1 010703   000000 235100                    LDA     0,,PR0
         1 010704   000000 531000                    NEG     0
         1 010705   000000 755100                    STA     0,,PR0

     3170     6971    2              IF N = 0 THEN B$JIT.ERR = '0'B;

   6971  1 010706   200035 235100                    LDA     N,,AUTO
         1 010707   010712 601000 1                  TNZ     s:6973

   6971  1 010710   000000 471400 xsym               LDP1    B$JIT$
         1 010711   100012 450100                    STZ     10,,PR1

     3171     6972                              /* If not positioned to proper record, leave error code */
     3172     6973    2              F$DCB.RPOS = %YES#;

   6973  1 010712   010000 236007                    LDQ     4096,DL
         1 010713   000064 256100                    ORSQ    52,,PR0

     3173     6974    2              RETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:463  

   6974  1 010714   200066 221300                    LDX1  ! MAXMKEY,,AUTO
         1 010715   000001 702211                    TSX2  ! 1,X1

     3174     6975
     3175     6976    2   JUSTALT:
     3176     6977    2              ALTRETURN;

   6977  1 010716   200066 221300       JUSTALT      LDX1  ! MAXMKEY,,AUTO
         1 010717   000000 702211                    TSX2  ! 0,X1

     3177     6978
     3178     6979    2      END FTW_PR;
     3179     6980        /*********************************************************************/
     3180     6981        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:464  
     3181     6982        /*********************************************************************/
     3182     6983    1   FTW_PFL:   PROC ALTRET;

   6983  1 010720   200064 741300       FTW_PFL      STX1  ! DATA_INCON,,AUTO

     3183     6984        /*F*    NAME: FTW_PFL
     3184     6985                PURPOSE: Perform fixed and variable format position file.
     3185     6986         ***/
     3186     6987
     3187     6988
     3188     6989        /*********************/
     3189     6990
     3190     6991    2              CALL FTW_PNRS(2) ALTRET(JUSTALT);

   6991  1 010721   000010 236000 2                  LDQ     8
         1 010722   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 010723   013423 701000 1                  TSX1    FTW_PNRS
         1 010724   010735 702000 1                  TSX2    JUSTALT

     3191     6992
     3192     6993    3              DO WHILE (%YES#);

     3193     6994    3                 CALL FTW_PNRS(1) ALTRET(JUSTALT);

   6994  1 010725   000007 236000 2                  LDQ     7
         1 010726   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 010727   013423 701000 1                  TSX1    FTW_PNRS
         1 010730   010735 702000 1                  TSX2    JUSTALT

     3194     6995    3                 F$DCB.RPOS = %NO#;        /* As if record was read              */

   6995  1 010731   200030 470500                    LDP0    JDCB$,,AUTO
         1 010732   000013 236000 2                  LDQ     11
         1 010733   000064 356100                    ANSQ    52,,PR0

     3195     6996    3                 END;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:465  
   6996  1 010734   010725 710000 1                  TRA     s:6994

   6994  1 010735                       JUSTALT      null
     3196     6997
     3197     6998    2   JUSTALT:   ;
     3198     6999    2              ALTRETURN;

   6999  1 010735   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 010736   000000 702211                    TSX2  ! 0,X1

     3199     7000    2      END FTW_PFL;
     3200     7001        /*********************************************************************/
     3201     7002        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:466  
     3202     7003        /*********************************************************************/
     3203     7004    1   FTW_INIT:  PROC;

   7004  1 010737   200064 741300       FTW_INIT     STX1  ! DATA_INCON,,AUTO

     3204     7005        /*F*    NAME: FTW_INIT
     3205     7006                PURPOSE: Initialization for FTW routines.
     3206     7007         ***/
     3207     7008
     3208     7009        /********************/
     3209     7010
     3210     7011    2              DUB$ = F$DCB.UB$;            /* Localize pointer to user buffer    */

   7011  1 010740   200030 470500                    LDP0    JDCB$,,AUTO
         1 010741   000075 236100                    LDQ     61,,PR0
         1 010742   200017 756100                    STQ     DUB$,,AUTO

     3211     7012    2              DUBYTES = F$DCB.UBYTES;    /* Localize number of bytes to transfer */

   7012  1 010743   000076 235100                    LDA     62,,PR0
         1 010744   200020 755100                    STA     DUBYTES,,AUTO

     3212     7013    3              DO CASE(F$DCB.ORG);          /* Determine spanning info            */

   7013  1 010745   000032 236100                    LDQ     26,,PR0
         1 010746   000033 772000                    QRL     27
         1 010747   000021 116007                    CMPQ    17,DL
         1 010750   010752 602006 1                  TNC     s:7013+5,QL
         1 010751   011020 710000 1                  TRA     s:7030
         1 010752   011020 710000 1                  TRA     s:7030
         1 010753   010773 710000 1                  TRA     s:7015
         1 010754   010773 710000 1                  TRA     s:7015
         1 010755   011020 710000 1                  TRA     s:7030
         1 010756   010773 710000 1                  TRA     s:7015
         1 010757   010773 710000 1                  TRA     s:7015
         1 010760   010773 710000 1                  TRA     s:7015
         1 010761   011020 710000 1                  TRA     s:7030
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:467  
         1 010762   011020 710000 1                  TRA     s:7030
         1 010763   010773 710000 1                  TRA     s:7015
         1 010764   011020 710000 1                  TRA     s:7030
         1 010765   011020 710000 1                  TRA     s:7030
         1 010766   011020 710000 1                  TRA     s:7030
         1 010767   010773 710000 1                  TRA     s:7015
         1 010770   011020 710000 1                  TRA     s:7030
         1 010771   011020 710000 1                  TRA     s:7030
         1 010772   010777 710000 1                  TRA     s:7018

     3213     7014    3                 CASE(%CONSEC#,%KEYED#,%RELATIVE#,%UR#,%INDEXED#,%SYMB#,%IREL#);

     3214     7015    3                    RCWSIZE = 4;

   7015  1 010773   000004 235007                    LDA     4,DL
         1 010774   200036 755100                    STA     RCWSIZE,,AUTO

     3215     7016    3                    RCWTYPE = RCWBIN#;

   7016  1 010775   200037 450100                    STZ     RCWTYPE,,AUTO
         1 010776   011023 710000 1                  TRA     s:7033

     3216     7017    3                 CASE(%VARIABLE#);

     3217     7018    3                    IF F$DCB.EBCDIC

   7018  1 010777   000031 236100                    LDQ     25,,PR0
         1 011000   100000 316007                    CANQ    32768,DL
         1 011001   011006 600000 1                  TZE     s:7024

     3218     7019    4                    THEN DO;               /* V                                  */

     3219     7020    4                       RCWSIZE = 4;

   7020  1 011002   000004 235007                    LDA     4,DL
         1 011003   200036 755100                    STA     RCWSIZE,,AUTO

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:468  
     3220     7021    4                       RCWTYPE = RCWBIN#;

   7021  1 011004   200037 450100                    STZ     RCWTYPE,,AUTO

     3221     7022    4                       END;

   7022  1 011005   011023 710000 1                  TRA     s:7033

     3222     7023    4                    ELSE DO;               /* D, S                               */

     3223     7024    4                       RCWTYPE = RCWDEC#;

   7024  1 011006   000001 235007                    LDA     1,DL
         1 011007   200037 755100                    STA     RCWTYPE,,AUTO

     3224     7025    4                       IF F$DCB.SPANNED

   7025  1 011010   000004 316007                    CANQ    4,DL
         1 011011   011015 600000 1                  TZE     s:7027

     3225     7026    4                       THEN RCWSIZE = 5;

   7026  1 011012   000005 235007                    LDA     5,DL
         1 011013   200036 755100                    STA     RCWSIZE,,AUTO
         1 011014   011023 710000 1                  TRA     s:7033

     3226     7027    4                       ELSE RCWSIZE = 4;

   7027  1 011015   000004 235007                    LDA     4,DL
         1 011016   200036 755100                    STA     RCWSIZE,,AUTO

     3227     7028    4                       END;

   7028  1 011017   011023 710000 1                  TRA     s:7033

     3228     7029    3                 CASE(ELSE);               /* FIXED, RESTRICT, UNDEF, IDS        */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:469  
     3229     7030    3                    RCWSIZE = 0;

   7030  1 011020   200036 450100                    STZ     RCWSIZE,,AUTO

     3230     7031    3                    RCWTYPE = RCWNONE#;

   7031  1 011021   000002 235007                    LDA     2,DL
         1 011022   200037 755100                    STA     RCWTYPE,,AUTO

     3231     7032    3                 END;

     3232     7033    2              RETURN;

   7033  1 011023   000001 702211                    TSX2  ! 1,X1

     3233     7034
     3234     7035    2      END FTW_INIT;
     3235     7036        /*********************************************************************/
     3236     7037        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:470  
     3237     7038        /*********************************************************************/
     3238     7039    1   FTW_PNRSNE: PROC ALTRET;

   7039  1 011024   200070 741300       FTW_PNRSNE   STX1  ! TEMP+1,,AUTO

     3239     7040        /*F*     NAME: FTW_PNRSNE
     3240     7041                 PURPOSE: Position to current record segment and ignore
     3241     7042                    end-of-file error.
     3242     7043         ***/
     3243     7044
     3244     7045        /********************/
     3245     7046
     3246     7047    2              CALL FTW_PNRS(2) ALTRET(CHKEOF);

   7047  1 011025   000010 236000 2                  LDQ     8
         1 011026   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 011027   013423 701000 1                  TSX1    FTW_PNRS
         1 011030   011032 702000 1                  TSX2    CHKEOF

     3247     7048    3              DO ALTRET_HANDLING;

   7048  1 011031   011045 710000 1                  TRA     s:7054

   7047  1 011032                       CHKEOF       null
     3248     7049    3   CHKEOF:       ;
     3249     7050    3                 IF B$JIT.ERR.CODE ~= %E$EOF THEN ALTRETURN;

   7050  1 011032   000000 470400 xsym               LDP0    B$JIT$
         1 011033   000012 236100                    LDQ     10,,PR0
         1 011034   377770 376007                    ANQ     131064,DL
         1 011035   000060 116007                    CMPQ    48,DL
         1 011036   011041 600000 1                  TZE     s:7051

   7050  1 011037   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011040   000000 702211                    TSX2  ! 0,X1

     3250     7051    3                 CALL FTW_RESTORE_POS ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:471  
              7051                          /* Restore position if after file mark */

   7051  1 011041   000310 701000 1                  TSX1    FTW_RESTORE_POS
         1 011042   011047 702000 1                  TSX2    JUSTALT

     3251     7052    3                 B$JIT.ERR = '0'B;         /* Ignore end-of-file                 */

   7052  1 011043   000000 470400 xsym               LDP0    B$JIT$
         1 011044   000012 450100                    STZ     10,,PR0

     3252     7053    3                 END;

     3253     7054    2              RETURN;

   7054  1 011045   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011046   000001 702211                    TSX2  ! 1,X1

   7049  1 011047                       JUSTALT      null
     3254     7055
     3255     7056    2   JUSTALT:   ;
     3256     7057    2              ALTRETURN;

   7057  1 011047   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011050   000000 702211                    TSX2  ! 0,X1

     3257     7058
     3258     7059    2      END FTW_PNRSNE;
     3259     7060        /*********************************************************************/
     3260     7061        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:472  
     3261     7062        /*********************************************************************/
     3262     7063    1   FTW_FNDKEY: PROC(KEY) ALTRET;

   7063  1 011051   200070 741300       FTW_FNDKEY   STX1  ! TEMP+1,,AUTO

     3263     7064        /*F*     NAME: FTW_FNDKEY
     3264     7065                 PURPOSE: Find record with specified key.
     3265     7066         ***/
     3266     7067
     3267     7068         /***
     3268     7069          *** Parameter:
     3269     7070          ***/
     3270     7071
     3271     7072    2     DCL 1 KEY UNAL,                       /* Key to search for                  */
     3272     7073    2            2 KL UBIN BYTE UNAL,
     3273     7074    2            2 C CHAR(KEY.KL) UNAL;
     3274     7075
     3275     7076         /***
     3276     7077          *** Locals:
     3277     7078          ***/
     3278     7079
     3279     7080    2     DCL UBINBYTE UBIN BYTE BASED UNAL;
     3280     7081
     3281     7082        /********************/
     3282     7083
     3283     7084    3              DO CASE(F$DCB.ORG);

   7084  1 011052   200030 470500                    LDP0    JDCB$,,AUTO
         1 011053   000032 236100                    LDQ     26,,PR0
         1 011054   000033 772000                    QRL     27
         1 011055   000023 116007                    CMPQ    19,DL
         1 011056   011060 602006 1                  TNC     s:7084+6,QL
         1 011057   011133 710000 1                  TRA     s:7102
         1 011060   011133 710000 1                  TRA     s:7102
         1 011061   011103 710000 1                  TRA     s:7086
         1 011062   011104 710000 1                  TRA     s:7088
         1 011063   011126 710000 1                  TRA     s:7097
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:473  
         1 011064   011103 710000 1                  TRA     s:7086
         1 011065   011131 710000 1                  TRA     s:7099
         1 011066   011121 710000 1                  TRA     s:7095
         1 011067   011126 710000 1                  TRA     s:7097
         1 011070   011133 710000 1                  TRA     s:7102
         1 011071   011103 710000 1                  TRA     s:7086
         1 011072   011133 710000 1                  TRA     s:7102
         1 011073   011133 710000 1                  TRA     s:7102
         1 011074   011133 710000 1                  TRA     s:7102
         1 011075   011103 710000 1                  TRA     s:7086
         1 011076   011133 710000 1                  TRA     s:7102
         1 011077   011103 710000 1                  TRA     s:7086
         1 011100   011103 710000 1                  TRA     s:7086
         1 011101   011103 710000 1                  TRA     s:7086
         1 011102   011103 710000 1                  TRA     s:7086

     3284     7085    3                CASE(%UNDEF#,%CONSEC#,%UR#,%VARIABLE#,%FIXED#,%RESTRICT#,%SYMB#,%IREL#
              7085                          );

     3285     7086    3                    RETURN;                /* No keys                            */

   7086  1 011103   000001 702211                    TSX2  ! 1,X1

     3286     7087    3                 CASE(%KEYED#);

     3287     7088    3                    UKEYLEN = KEY.KL;

   7088  1 011104   200071 471500                    LDP1    @KEY,,AUTO
         1 011105   000100 101500                    MRL     fill='000'O
         1 011106   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 011107   200054 000004                    ADSC9   UKEYLEN,,AUTO            cn=0,n=4

     3288     7089    3                    IF UKEYLEN < 1 OR UKEYLEN > 255

   7089  1 011110   200054 235100                    LDA     UKEYLEN,,AUTO
         1 011111   011114 604400 1                  TMOZ    s:7091
         1 011112   000377 115007                    CMPA    255,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:474  
         1 011113   011133 604400 1                  TMOZ    s:7102

     3289     7090    4                    THEN DO;               /* Invalid key                        */

     3290     7091    4                       B$JIT.ERR = E_BADKEY; /*E* ERROR: FTW-E$BADKEY */

   7091  1 011114   000013 236000 0                  LDQ     E_BADKEY
         1 011115   000000 473400 xsym               LDP3    B$JIT$
         1 011116   300012 756100                    STQ     10,,PR3

     3291     7092    4                       ALTRETURN;

   7092  1 011117   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011120   000000 702211                    TSX2  ! 0,X1

     3292     7093    4                       END;
     3293     7094    3                 CASE(%INDEXED#);

     3294     7095    3                    UKEYLEN = F$DCB.KEYL;

   7095  1 011121   000036 236100                    LDQ     30,,PR0
         1 011122   000011 772000                    QRL     9
         1 011123   000777 376007                    ANQ     511,DL
         1 011124   200054 756100                    STQ     UKEYLEN,,AUTO
         1 011125   011133 710000 1                  TRA     s:7102

     3295     7096    3                 CASE(%RANDOM#,%IDS#);

     3296     7097    3                    UKEYLEN = 4;

   7097  1 011126   000004 235007                    LDA     4,DL
         1 011127   200054 755100                    STA     UKEYLEN,,AUTO
         1 011130   011133 710000 1                  TRA     s:7102

     3297     7098    3                 CASE(%RELATIVE#);

     3298     7099    3                    UKEYLEN = 4;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:475  

   7099  1 011131   000004 235007                    LDA     4,DL
         1 011132   200054 755100                    STA     UKEYLEN,,AUTO

     3299     7100    3                 END;

     3300     7101
     3301     7102    2              F$DCB.TAPTYP.NOCVOL = %YES#; /* Don't permit user CVOL control     */

   7102  1 011133   000020 236003                    LDQ     16,DU
         1 011134   000067 256100                    ORSQ    55,,PR0

     3302     7103
     3303     7104         /***
     3304     7105          *** Position to next record of file.
     3305     7106          ***/
     3306     7107
     3307     7108    2              IF F$DCB.TAPTYP.USRBUF

   7108  1 011135   000067 236100                    LDQ     55,,PR0
         1 011136   000100 316003                    CANQ    64,DU
         1 011137   011143 600000 1                  TZE     s:7110

     3308     7109    2              THEN CALL FTW_PNUR ALTRET(CHKEOF);

   7109  1 011140   014254 701000 1                  TSX1    FTW_PNUR
         1 011141   011152 702000 1                  TSX2    CHKEOF
         1 011142   011152 710000 1                  TRA     CHKEOF

     3309     7110    2              ELSE IF NOT F$DCB.RPOS

   7110  1 011143   000064 236100                    LDQ     52,,PR0
         1 011144   010000 316007                    CANQ    4096,DL
         1 011145   011152 601000 1                  TNZ     CHKEOF

     3310     7111    2                 THEN CALL FTW_PNRS(1) ALTRET(CHKEOF);

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:476  
   7111  1 011146   000007 236000 2                  LDQ     7
         1 011147   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 011150   013423 701000 1                  TSX1    FTW_PNRS
         1 011151   011152 702000 1                  TSX2    CHKEOF

   7108  1 011152                       CHKEOF       null
     3311     7112
     3312     7113         /***
     3313     7114          *** Look for key until: 1) key found or if ACS = SEQUEN 2) a key is
     3314     7115          *** found which is greater than that specified or end of file is
     3315     7116          *** reached or if ACS ~= SEQUEN 3) entire file has been searched and
     3316     7117          *** key not found.
     3317     7118          ***/
     3318     7119
     3319     7120    2   CHKEOF:    ;
     3320     7121    2              IF F$DCB.ORG = %KEYED#

   7121  1 011152   200030 470500                    LDP0    JDCB$,,AUTO
         1 011153   000032 236100                    LDQ     26,,PR0
         1 011154   777000 376003                    ANQ     -512,DU
         1 011155   002000 116003                    CMPQ    1024,DU
         1 011156   011163 601000 1                  TNZ     s:7123

     3321     7122    2              THEN UKEY$ = ADDR( KEY.C );  /* Point to key chars                 */

   7122  1 011157   200071 236100                    LDQ     @KEY,,AUTO
         1 011160   200000 036007                    ADLQ    65536,DL
         1 011161   200053 756100                    STQ     UKEY$,,AUTO
         1 011162   011165 710000 1                  TRA     s:7124

     3322     7123    2              ELSE UKEY$ = ADDR( KEY );

   7123  1 011163   200071 236100                    LDQ     @KEY,,AUTO
         1 011164   200053 756100                    STQ     UKEY$,,AUTO

     3323     7124    2              DCRECNO = F$DCB.CRECNO;      /* Remember where search started      */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:477  
   7124  1 011165   000071 235100                    LDA     57,,PR0
         1 011166   200014 755100                    STA     DCRECNO,,AUTO

     3324     7125
     3325     7126    3              DO WHILE('1'B);

     3326     7127    3                 IF B$JIT.ERR

   7127  1 011167   000000 470400 xsym               LDP0    B$JIT$
         1 011170   000012 235100                    LDA     10,,PR0
         1 011171   011247 600000 1                  TZE     s:7154

     3327     7128    4                 THEN DO;               /* Some error has occurred during search */

     3328     7129    4                    IF B$JIT.ERR.CODE ~= %E$EOF OR F$DCB.ACS = %SEQUEN#

   7129  1 011172   000012 236100                    LDQ     10,,PR0
         1 011173   377770 376007                    ANQ     131064,DL
         1 011174   000060 116007                    CMPQ    48,DL
         1 011175   011203 601000 1                  TNZ     ENDFNDKEYX
         1 011176   200030 471500                    LDP1    JDCB$,,AUTO
         1 011177   100036 236100                    LDQ     30,,PR1
         1 011200   000777 376007                    ANQ     511,DL
         1 011201   000001 116007                    CMPQ    1,DL
         1 011202   011214 601000 1                  TNZ     s:7135

     3329     7130    5                    THEN DO;               /* Terminate search...not found       */

   7129  1 011203                       ENDFNDKEYX   null
     3330     7131    5   ENDFNDKEYX:         ;
     3331     7132    5                       IF B$JIT.ERR.CODE = %E$EOF THEN B$JIT.ERR = E_NOKEY;
              7132                                /*E* ERROR: FTW-E$NOKEY */

   7132  1 011203   000000 470400 xsym               LDP0    B$JIT$
         1 011204   000012 236100                    LDQ     10,,PR0
         1 011205   377770 376007                    ANQ     131064,DL
         1 011206   000060 116007                    CMPQ    48,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:478  
         1 011207   011212 601000 1                  TNZ     s:7133

   7132  1 011210   000037 236000 0                  LDQ     E_NOKEY
         1 011211   000012 756100                    STQ     10,,PR0

     3332     7133    5                       ALTRETURN;

   7133  1 011212   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011213   000000 702211                    TSX2  ! 0,X1

     3333     7134    5                       END;
     3334     7135    4                    B$JIT.ERR = '0'B;
              7135                             /* Hit end of file...resume search at beginning */

   7135  1 011214   000012 450100                    STZ     10,,PR0

     3335     7136    4                    CALL FTW_TRNCWEOF ALTRET(JUSTALT);
              7136                             /* Write EOF labels if necessary */

   7136  1 011215   014760 701000 1                  TSX1    FTW_TRNCWEOF
         1 011216   011354 702000 1                  TSX2    JUSTALT

     3336     7137    4                    CALL FTW_RESTORE_POS ALTRET(JUSTALT);
              7137                             /* Can't be after file mark */

   7137  1 011217   000310 701000 1                  TSX1    FTW_RESTORE_POS
         1 011220   011354 702000 1                  TSX2    JUSTALT

     3337     7138    4                    CALL FTW_BOF ALTRET(ENDFNDKEYX);

   7138  1 011221   012753 701000 1                  TSX1    FTW_BOF
         1 011222   011203 702000 1                  TSX2    ENDFNDKEYX

     3338     7139    4                    IF F$DCB.TAPTYP.USRBUF

   7139  1 011223   200030 470500                    LDP0    JDCB$,,AUTO
         1 011224   000067 236100                    LDQ     55,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:479  
         1 011225   000100 316003                    CANQ    64,DU
         1 011226   011232 600000 1                  TZE     s:7141

     3339     7140    4                    THEN CALL FTW_PNUR ALTRET(ENDFNDKEYX);

   7140  1 011227   014254 701000 1                  TSX1    FTW_PNUR
         1 011230   011203 702000 1                  TSX2    ENDFNDKEYX
         1 011231   011236 710000 1                  TRA     s:7142

     3340     7141    4                    ELSE CALL FTW_PNRS(2) ALTRET(ENDFNDKEYX);

   7141  1 011232   000010 236000 2                  LDQ     8
         1 011233   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 011234   013423 701000 1                  TSX1    FTW_PNRS
         1 011235   011203 702000 1                  TSX2    ENDFNDKEYX

     3341     7142    4                    IF DCRECNO = F$DCB.CRECNO

   7142  1 011236   200030 470500                    LDP0    JDCB$,,AUTO
         1 011237   200014 236100                    LDQ     DCRECNO,,AUTO
         1 011240   000071 116100                    CMPQ    57,,PR0
         1 011241   011247 601000 1                  TNZ     s:7154

     3342     7143    5                    THEN DO;               /* Returned to search origin point    */

     3343     7144    5                       B$JIT.ERR = E_NOKEY; /*E* ERROR: FTW-E$NOKEY */

   7144  1 011242   000037 236000 0                  LDQ     E_NOKEY
         1 011243   000000 471400 xsym               LDP1    B$JIT$
         1 011244   100012 756100                    STQ     10,,PR1

     3344     7145    5                       ALTRETURN;

   7145  1 011245   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011246   000000 702211                    TSX2  ! 0,X1

     3345     7146    5                       END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:480  
     3346     7147    4                    END;
     3347     7148         /***
     3348     7149             *** Compare keys.  For user buffer "keyed" files (RANDOM, IDS)
     3349     7150             *** AFPOOL$ points to a 4 bytes temporary into which the key
     3350     7151             *** was read.
     3351     7152             ***/
     3352     7153
     3353     7154    3                 IF F$DCB.TAPTYP.USRBUF

   7154  1 011247   200030 470500                    LDP0    JDCB$,,AUTO
         1 011250   000067 236100                    LDQ     55,,PR0
         1 011251   000100 316003                    CANQ    64,DU
         1 011252   011256 600000 1                  TZE     s:7156

     3354     7155    3                 THEN ASEG$ = AFPOOL$;

   7155  1 011253   200007 236100                    LDQ     AFPOOL$,,AUTO
         1 011254   200011 756100                    STQ     ASEG$,,AUTO
         1 011255   011264 710000 1                  TRA     s:7157

     3355     7156    3                 ELSE ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

   7156  1 011256   000067 236100                    LDQ     55,,PR0
         1 011257   777777 376007                    ANQ     -1,DL
         1 011260   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 011261   000020 736000                    QLS     16
         1 011262   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 011263   200011 756100                    STQ     ASEG$,,AUTO

     3356     7157    3                 CALL FTW_COMPARE_KEYS;    /* Determine relation of keys         */

   7157  1 011264   011356 701000 1                  TSX1    FTW_COMPARE_KEYS
         1 011265   000000 011000                    NOP     0

     3357     7158
     3358     7159    4                 DO CASE(TEMP);

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:481  
   7159  1 011266   200047 235100                    LDA     TEMP,,AUTO
         1 011267   000003 115007                    CMPA    3,DL
         1 011270   011272 602005 1                  TNC     s:7159+4,AL
         1 011271   011330 710000 1                  TRA     s:7182
         1 011272   011275 710000 1                  TRA     s:7161
         1 011273   011330 710000 1                  TRA     s:7182
         1 011274   011316 710000 1                  TRA     s:7171

     3359     7160    4                    CASE(0);               /* Specified key = record key         */

     3360     7161    4                       IF F$DCB.TAPTYP.USRBUF

   7161  1 011275   200030 470500                    LDP0    JDCB$,,AUTO
         1 011276   000067 236100                    LDQ     55,,PR0
         1 011277   000100 316003                    CANQ    64,DU
         1 011300   011314 600000 1                  TZE     s:7169

     3361     7162    5                       THEN DO;            /* Backup to position before record   */

     3362     7163    5                          F$DCB.ARS = -1;

   7163  1 011301   000001 335007                    LCA     1,DL
         1 011302   000000 755100                    STA     0,,PR0

     3363     7164    5                          CALL FTI$SPREC ALTRET(JUSTALT);

   7164  1 011303   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 011304   000000 701000 xent               TSX1    FTI$SPREC
         1 011305   011354 702000 1                  TSX2    JUSTALT

     3364     7165    5                          F$DCB.PRECNO = F$DCB.PRECNO - 1;

   7165  1 011306   200030 470500                    LDP0    JDCB$,,AUTO
         1 011307   000001 336007                    LCQ     1,DL
         1 011310   000072 056100                    ASQ     58,,PR0

     3365     7166    5                          F$DCB.CRECNO = F$DCB.CRECNO - 1;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:482  

   7166  1 011311   000071 056100                    ASQ     57,,PR0

     3366     7167    5                          F$DCB.TAPTYP.HAVLASTKEY = %NO#;

   7167  1 011312   000032 236000 2                  LDQ     26
         1 011313   000067 356100                    ANSQ    55,,PR0

     3367     7168    5                          END;

     3368     7169    4                       RETURN;

   7169  1 011314   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011315   000001 702211                    TSX2  ! 1,X1

     3369     7170    4                    CASE(2);               /* Specified key < record key         */

     3370     7171    4                       IF F$DCB.ACS = %SEQUEN#

   7171  1 011316   200030 470500                    LDP0    JDCB$,,AUTO
         1 011317   000036 236100                    LDQ     30,,PR0
         1 011320   000777 376007                    ANQ     511,DL
         1 011321   000001 116007                    CMPQ    1,DL
         1 011322   011330 601000 1                  TNZ     s:7182

     3371     7172    5                       THEN DO;           /* Sequen search termination condition */

     3372     7173    5                          B$JIT.ERR = E_NOKEY; /*E* ERROR: FTW-E$NOKEY */

   7173  1 011323   000037 236000 0                  LDQ     E_NOKEY
         1 011324   000000 471400 xsym               LDP1    B$JIT$
         1 011325   100012 756100                    STQ     10,,PR1

     3373     7174    5                          ALTRETURN;

   7174  1 011326   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011327   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:483  

     3374     7175    5                          END;
     3375     7176    4                    END;

     3376     7177
     3377     7178         /***
     3378     7179                *** Check next record.
     3379     7180                ***/
     3380     7181
     3381     7182    3                 IF F$DCB.TAPTYP.USRBUF

   7182  1 011330   200030 470500                    LDP0    JDCB$,,AUTO
         1 011331   000067 236100                    LDQ     55,,PR0
         1 011332   000100 316003                    CANQ    64,DU
         1 011333   011337 600000 1                  TZE     s:7184

     3382     7183    3                 THEN CALL FTW_PNUR ALTRET(CHKEOF2);

   7183  1 011334   014254 701000 1                  TSX1    FTW_PNUR
         1 011335   011343 702000 1                  TSX2    CHKEOF2
         1 011336   011343 710000 1                  TRA     CHKEOF2

     3383     7184    3                 ELSE CALL FTW_PNRS(1) ALTRET(CHKEOF2);

   7184  1 011337   000007 236000 2                  LDQ     7
         1 011340   200073 756100                    STQ     @FPNUM+1,,AUTO
         1 011341   013423 701000 1                  TSX1    FTW_PNRS
         1 011342   011343 702000 1                  TSX2    CHKEOF2

   7182  1 011343                       CHKEOF2      null
     3384     7185    3   CHKEOF2:      ;
     3385     7186    3                 IF DCRECNO = F$DCB.CRECNO

   7186  1 011343   200030 470500                    LDP0    JDCB$,,AUTO
         1 011344   200014 236100                    LDQ     DCRECNO,,AUTO
         1 011345   000071 116100                    CMPQ    57,,PR0
         1 011346   011167 601000 1                  TNZ     s:7127
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:484  

     3386     7187    4                 THEN DO;                  /* Returned to search origin point    */

     3387     7188    4                    B$JIT.ERR = E_NOKEY; /*E* ERROR: FTW-E$NOKEY */

   7188  1 011347   000037 236000 0                  LDQ     E_NOKEY
         1 011350   000000 471400 xsym               LDP1    B$JIT$
         1 011351   100012 756100                    STQ     10,,PR1

     3388     7189    4                    ALTRETURN;

   7189  1 011352   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011353   000000 702211                    TSX2  ! 0,X1

     3389     7190    4                    END;
     3390     7191    3                 END;

   7183  1 011354                       JUSTALT      null
     3391     7192
     3392     7193    2   JUSTALT:   ;
     3393     7194    2              ALTRETURN;

   7194  1 011354   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011355   000000 702211                    TSX2  ! 0,X1

     3394     7195
     3395     7196    2      END FTW_FNDKEY;
     3396     7197        /*********************************************************************/
     3397     7198        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:485  
     3398     7199        /*********************************************************************/
     3399     7200    1   FTW_COMPARE_KEYS: PROC;

   7200  1 011356   200072 741300       FTW_COMPARE* STX1  ! @FP$+1,,AUTO

     3400     7201        /*F*     NAME: FTW_COMPARE_KEYS
     3401     7202                 PURPOSE: Compare two key values and return value indicating
     3402     7203                    which is lesser or if they are equal.
     3403     7204                 INPUT: ASEG$ - [PTR] to "our" key (usually current record's key).
     3404     7205                    UKEY$ - [PTR] to user's key data.
     3405     7206                    UKEYLEN - length of user's key.
     3406     7207                 OUTPUT: TEMP = 0 if equal, = 1 if user's is greater,
     3407     7208                    = 2 if ours is greater.
     3408     7209         ***/
     3409     7210
     3410     7211        /********************/
     3411     7212
     3412     7213    3              DO CASE(F$DCB.ORG);

   7213  1 011357   200030 470500                    LDP0    JDCB$,,AUTO
         1 011360   000032 236100                    LDQ     26,,PR0
         1 011361   000033 772000                    QRL     27
         1 011362   000010 116007                    CMPQ    8,DL
         1 011363   011365 602006 1                  TNC     s:7213+6,QL
         1 011364   011473 710000 1                  TRA     s:7247
         1 011365   011473 710000 1                  TRA     s:7247
         1 011366   011473 710000 1                  TRA     s:7247
         1 011367   011421 710000 1                  TRA     s:7223
         1 011370   011375 710000 1                  TRA     s:7215
         1 011371   011473 710000 1                  TRA     s:7247
         1 011372   011375 710000 1                  TRA     s:7215
         1 011373   011421 710000 1                  TRA     s:7223
         1 011374   011375 710000 1                  TRA     s:7215

     3413     7214    3                 CASE(%RELATIVE#,%RANDOM#,%IDS#);

     3414     7215    3                    TEMP = ASEG$->BASED_WORD; /* Key is 4 bytes                  */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:486  

   7215  1 011375   200011 471500                    LDP1    ASEG$,,AUTO
         1 011376   000100 100500                    MLR     fill='000'O
         1 011377   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 011400   200047 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     3415     7216    3                    NC = UKEY$->FOUR_BASED_CHARS;

   7216  1 011401   200053 473500                    LDP3    UKEY$,,AUTO
         1 011402   040100 100500                    MLR     fill='040'O
         1 011403   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         1 011404   200035 000004                    ADSC9   N,,AUTO                  cn=0,n=4

     3416     7217    3                    IF TEMP = N

   7217  1 011405   200047 236100                    LDQ     TEMP,,AUTO
         1 011406   200035 116100                    CMPQ    N,,AUTO
         1 011407   011412 601000 1                  TNZ     s:7219

     3417     7218    3                    THEN TEMP = 0;         /* Equal                              */

   7218  1 011410   200047 450100                    STZ     TEMP,,AUTO
         1 011411   011473 710000 1                  TRA     s:7247

     3418     7219    3                    ELSE IF TEMP > N

   7219  1 011412   011416 604400 1                  TMOZ    s:7221

     3419     7220    3                       THEN TEMP = 2;      /* Ours greater                       */

   7220  1 011413   000002 235007                    LDA     2,DL
         1 011414   200047 755100                    STA     TEMP,,AUTO
         1 011415   011473 710000 1                  TRA     s:7247

     3420     7221    3                       ELSE TEMP = 1;

   7221  1 011416   000001 235007                    LDA     1,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:487  
         1 011417   200047 755100                    STA     TEMP,,AUTO
         1 011420   011473 710000 1                  TRA     s:7247

     3421     7222    3                 CASE(%KEYED#,%INDEXED#);

     3422     7223    3                    IF F$DCB.ORG = %KEYED#

   7223  1 011421   000033 736000                    QLS     27
         1 011422   002000 116003                    CMPQ    1024,DU
         1 011423   011450 601000 1                  TNZ     s:7237

     3423     7224    4                    THEN DO;               /* Key length is in first byte        */

     3424     7225    4                       CHARZLEN = ASEG$->FT$KEY.KL;

   7225  1 011424   200011 471500                    LDP1    ASEG$,,AUTO
         1 011425   000100 101500                    MRL     fill='000'O
         1 011426   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 011427   200013 000004                    ADSC9   CHARZLEN,,AUTO           cn=0,n=4

     3425     7226    4                       ASEG$ = PINCRC( ASEG$, 1 ); /* Point to data              */

   7226  1 011430   200011 236100                    LDQ     ASEG$,,AUTO
         1 011431   200000 036007                    ADLQ    65536,DL
         1 011432   200011 756100                    STQ     ASEG$,,AUTO

     3426     7227    4                       IF UKEYLEN = CHARZLEN

   7227  1 011433   200054 236100                    LDQ     UKEYLEN,,AUTO
         1 011434   200013 116100                    CMPQ    CHARZLEN,,AUTO
         1 011435   011440 601000 1                  TNZ     s:7229

     3427     7228    4                       THEN TEMP = 0;      /* Keys are of equal length           */

   7228  1 011436   200047 450100                    STZ     TEMP,,AUTO
         1 011437   011455 710000 1                  TRA     s:7241

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:488  
     3428     7229    4                       ELSE IF UKEYLEN > CHARZLEN

   7229  1 011440   011444 604400 1                  TMOZ    s:7232

     3429     7230    4                          THEN TEMP = 1;   /* User's key is longer               */

   7230  1 011441   000001 235007                    LDA     1,DL
         1 011442   200047 755100                    STA     TEMP,,AUTO
         1 011443   011455 710000 1                  TRA     s:7241

     3430     7231    5                          ELSE DO;         /* Our key is longer                  */

     3431     7232    5                             CHARZLEN = UKEYLEN; /* Only compare key bytes       */

   7232  1 011444   200013 756100                    STQ     CHARZLEN,,AUTO

     3432     7233    5                             TEMP = 2;

   7233  1 011445   000002 235007                    LDA     2,DL
         1 011446   200047 755100                    STA     TEMP,,AUTO

     3433     7234    5                             END;

     3434     7235    4                       END;

   7235  1 011447   011455 710000 1                  TRA     s:7241

     3435     7236    4                    ELSE DO;               /* Indexed file                       */

     3436     7237    4                       CHARZLEN = F$DCB.KEYL;

   7237  1 011450   000036 236100                    LDQ     30,,PR0
         1 011451   000011 772000                    QRL     9
         1 011452   000777 376007                    ANQ     511,DL
         1 011453   200013 756100                    STQ     CHARZLEN,,AUTO

     3437     7238    4                       TEMP = 0;           /* Keys of equal length               */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:489  

   7238  1 011454   200047 450100                    STZ     TEMP,,AUTO

     3438     7239    4                       END;

     3439     7240
     3440     7241    3                    IF UKEY$->CHARZ < ASEG$->CHARZ

   7241  1 011455   200053 471500                    LDP1    UKEY$,,AUTO
         1 011456   200013 720100                    LXL0    CHARZLEN,,AUTO
         1 011457   200011 473500                    LDP3    ASEG$,,AUTO
         1 011460   040140 106540                    CMPC    fill='040'O
         1 011461   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 011462   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 011463   011467 603000 1                  TRC     s:7243

     3441     7242    3                    THEN TEMP = 2;         /* Indicate user's key is lesser      */

   7242  1 011464   000002 235007                    LDA     2,DL
         1 011465   200047 755100                    STA     TEMP,,AUTO
         1 011466   011473 710000 1                  TRA     s:7247

     3442     7243    3                    ELSE IF UKEY$->CHARZ > ASEG$->CHARZ

   7243  1 011467   011473 602000 1                  TNC     s:7247
         1 011470   011473 600000 1                  TZE     s:7247

     3443     7244    3                       THEN TEMP = 1;      /* Indicate user's key is greater     */

   7244  1 011471   000001 235007                    LDA     1,DL
         1 011472   200047 755100                    STA     TEMP,,AUTO

     3444     7245    3                       ELSE ;              /* Longer of keys is greater          */
     3445     7246    3                 END;

     3446     7247    2              RETURN;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:490  
   7247  1 011473   000001 702211                    TSX2  ! 1,X1

     3447     7248
     3448     7249    2      END FTW_COMPARE_KEYS;
     3449     7250        /*********************************************************************/
     3450     7251        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:491  
     3451     7252        /*********************************************************************/
     3452     7253    1   FTW_RETURN_KEY_PS1: PROC;

   7253  1 011474   200070 741300       FTW_RETURN_* STX1  ! TEMP+1,,AUTO

     3453     7254        /*F*     NAME: FTW_RETURN_KEY_PS1
     3454     7255                 PURPOSE: Returns key of current record to B$PS$(1) area.
     3455     7256         ***/
     3456     7257
     3457     7258        /********************/
     3458     7259
     3459     7260    3              DO CASE(F$DCB.ORG);

   7260  1 011475   200030 470500                    LDP0    JDCB$,,AUTO
         1 011476   000032 236100                    LDQ     26,,PR0
         1 011477   000033 772000                    QRL     27
         1 011500   000016 116007                    CMPQ    14,DL
         1 011501   011503 602006 1                  TNC     s:7260+6,QL
         1 011502   011621 710000 1                  TRA     s:7282
         1 011503   011621 710000 1                  TRA     s:7282
         1 011504   011612 710000 1                  TRA     s:7276
         1 011505   011521 710000 1                  TRA     s:7262
         1 011506   011603 710000 1                  TRA     s:7273
         1 011507   011621 710000 1                  TRA     s:7282
         1 011510   011567 710000 1                  TRA     s:7270
         1 011511   011545 710000 1                  TRA     s:7266
         1 011512   011603 710000 1                  TRA     s:7273
         1 011513   011621 710000 1                  TRA     s:7282
         1 011514   011621 710000 1                  TRA     s:7282
         1 011515   011621 710000 1                  TRA     s:7282
         1 011516   011621 710000 1                  TRA     s:7282
         1 011517   011621 710000 1                  TRA     s:7282
         1 011520   011612 710000 1                  TRA     s:7276

     3460     7261    3                 CASE(%KEYED#);            /* Textc key in record just past RCW  */

     3461     7262    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:492  

   7262  1 011521   000067 236100                    LDQ     55,,PR0
         1 011522   777777 376007                    ANQ     -1,DL
         1 011523   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 011524   000020 736000                    QLS     16
         1 011525   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 011526   200011 756100                    STQ     ASEG$,,AUTO

     3462     7263    3                    KEYSIZE = ASEG$->FT$KEY.KL + 1;

   7263  1 011527   200011 471500                    LDP1    ASEG$,,AUTO
         1 011530   000100 101500                    MRL     fill='000'O
         1 011531   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 011532   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 011533   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 011534   000001 036007                    ADLQ    1,DL
         1 011535   200033 756100                    STQ     KEYSIZE,,AUTO

     3463     7264    3                    B$PS$(1)->KEYCHARS = ASEG$->KEYCHARS;

   7264  1 011536   000000 620006                    EAX0    0,QL
         1 011537   000001 473400 xsym               LDP3    B$PS$+1
         1 011540   200033 722100                    LXL2    KEYSIZE,,AUTO
         1 011541   040140 100540                    MLR     fill='040'O
         1 011542   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 011543   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         1 011544   011621 710000 1                  TRA     s:7282

     3464     7265    3                 CASE(%INDEXED#);     /* KEYL length key in record just past RCW */

     3465     7266    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

   7266  1 011545   000067 236100                    LDQ     55,,PR0
         1 011546   777777 376007                    ANQ     -1,DL
         1 011547   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 011550   000020 736000                    QLS     16
         1 011551   200007 036100                    ADLQ    AFPOOL$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:493  
         1 011552   200011 756100                    STQ     ASEG$,,AUTO

     3466     7267    3                    KEYSIZE = F$DCB.KEYL;

   7267  1 011553   000036 236100                    LDQ     30,,PR0
         1 011554   000011 772000                    QRL     9
         1 011555   000777 376007                    ANQ     511,DL
         1 011556   200033 756100                    STQ     KEYSIZE,,AUTO

     3467     7268    3                    B$PS$(1)->KEYCHARS = ASEG$->KEYCHARS;

   7268  1 011557   200011 471500                    LDP1    ASEG$,,AUTO
         1 011560   000000 620006                    EAX0    0,QL
         1 011561   000001 473400 xsym               LDP3    B$PS$+1
         1 011562   200033 722100                    LXL2    KEYSIZE,,AUTO
         1 011563   040140 100540                    MLR     fill='040'O
         1 011564   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 011565   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         1 011566   011621 710000 1                  TRA     s:7282

     3468     7269    3                 CASE(%RELATIVE#);

     3469     7270    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

   7270  1 011567   000067 236100                    LDQ     55,,PR0
         1 011570   777777 376007                    ANQ     -1,DL
         1 011571   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 011572   000020 736000                    QLS     16
         1 011573   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 011574   200011 756100                    STQ     ASEG$,,AUTO

     3470     7271    3                    B$PS$(1)->FOUR_BASED_CHARS = ASEG$->FOUR_BASED_CHARS;

   7271  1 011575   200011 471500                    LDP1    ASEG$,,AUTO
         1 011576   000001 473400 xsym               LDP3    B$PS$+1
         1 011577   040100 100500                    MLR     fill='040'O
         1 011600   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:494  
         1 011601   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         1 011602   011621 710000 1                  TRA     s:7282

     3471     7272    3                 CASE(%RANDOM#,%IDS#);

     3472     7273    3                    TEMP = F$DCB.LASTKEY;

   7273  1 011603   000065 235100                    LDA     53,,PR0
         1 011604   200047 755100                    STA     TEMP,,AUTO

     3473     7274    3                    B$PS$(1)->FOUR_BASED_CHARS = TEMPC;

   7274  1 011605   000001 471400 xsym               LDP1    B$PS$+1
         1 011606   040100 100500                    MLR     fill='040'O
         1 011607   200047 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         1 011610   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 011611   011621 710000 1                  TRA     s:7282

     3474     7275    3                 CASE(%CONSEC#,%IREL#);

     3475     7276    3                    TEMP = F$DCB.CRECNO;

   7276  1 011612   000071 235100                    LDA     57,,PR0
         1 011613   200047 755100                    STA     TEMP,,AUTO

     3476     7277    3                    B$PS$(1)->FOUR_BASED_CHARS = TEMPC;

   7277  1 011614   000001 471400 xsym               LDP1    B$PS$+1
         1 011615   040100 100500                    MLR     fill='040'O
         1 011616   200047 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         1 011617   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 011620   011621 710000 1                  TRA     s:7282

     3477     7278    3                 CASE(ELSE);               /* No key                             */

     3478     7279    4                    DO; END;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:495  
     3479     7280    3                 END;

     3480     7281
     3481     7282    2              RETURN;

   7282  1 011621   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 011622   000001 702211                    TSX2  ! 1,X1

     3482     7283
     3483     7284    2      END FTW_RETURN_KEY_PS1;
     3484     7285        /*********************************************************************/
     3485     7286        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:496  
     3486     7287        /*********************************************************************/
     3487     7288    1   FTW_CHK_KEY_PS1: PROC ALTRET;

   7288  1 011623   200064 741300       FTW_CHK_KEY* STX1  ! DATA_INCON,,AUTO

     3488     7289        /*F*     NAME: FTW_CHK_KEY_PS1
     3489     7290                 PURPOSE: Checks user's key for size limits and location.
     3490     7291                 INPUT: DUBYTES - size of user's buffer
     3491     7292                 OUTPUT: KEYSIZE - size of user's key
     3492     7293         ***/
     3493     7294
     3494     7295        /********************/
     3495     7296
     3496     7297    3              DO CASE(F$DCB.ORG);

   7297  1 011624   200030 470500                    LDP0    JDCB$,,AUTO
         1 011625   000032 236100                    LDQ     26,,PR0
         1 011626   000033 772000                    QRL     27
         1 011627   000007 116007                    CMPQ    7,DL
         1 011630   011632 602006 1                  TNC     s:7297+6,QL
         1 011631   011714 710000 1                  TRA     s:7317
         1 011632   011714 710000 1                  TRA     s:7317
         1 011633   011714 710000 1                  TRA     s:7317
         1 011634   011641 710000 1                  TRA     s:7299
         1 011635   011714 710000 1                  TRA     s:7317
         1 011636   011714 710000 1                  TRA     s:7317
         1 011637   011712 710000 1                  TRA     s:7315
         1 011640   011674 710000 1                  TRA     s:7308

     3497     7298    3                 CASE(%KEYED#);

     3498     7299    3                    CALL HFF$DSIZ(1,KEYSIZE) ALTRET(HOPEKEYSIZE0);

   7299  1 011641   200033 631500                    EPPR1   KEYSIZE,,AUTO
         1 011642   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 011643   000007 236000 2                  LDQ     7
         1 011644   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:497  
         1 011645   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 011646   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 011647   000000 701000 xent               TSX1    HFF$DSIZ
         1 011650   011651 702000 1                  TSX2    HOPEKEYSIZE0

   7299  1 011651                       HOPEKEYSIZE0 null
     3499     7300    3   HOPEKEYSIZE0:    ;
     3500     7301    3                    IF KEYSIZE > 0 THEN KEYSIZE = B$PS$(1)->FT$KEY.KL + 1;
              7301                             /* Get key length */

   7301  1 011651   200033 235100                    LDA     KEYSIZE,,AUTO
         1 011652   011662 604400 1                  TMOZ    s:7302

   7301  1 011653   000001 470400 xsym               LDP0    B$PS$+1
         1 011654   000100 101500                    MRL     fill='000'O
         1 011655   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 011656   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 011657   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 011660   000001 036007                    ADLQ    1,DL
         1 011661   200033 756100                    STQ     KEYSIZE,,AUTO

     3501     7302    3                    IF KEYSIZE < 2 OR KEYSIZE > 256

   7302  1 011662   200033 235100                    LDA     KEYSIZE,,AUTO
         1 011663   000002 115007                    CMPA    2,DL
         1 011664   011667 604000 1                  TMI     s:7304
         1 011665   000400 115007                    CMPA    256,DL
         1 011666   011714 604400 1                  TMOZ    s:7317

     3502     7303    4                    THEN DO;               /* Bad key                            */

     3503     7304    4                       B$JIT.ERR = E_BADKEY; /*E* ERROR: FTW-E$BADKEY */

   7304  1 011667   000013 236000 0                  LDQ     E_BADKEY
         1 011670   000000 470400 xsym               LDP0    B$JIT$
         1 011671   000012 756100                    STQ     10,,PR0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:498  
     3504     7305    4                       ALTRETURN;

   7305  1 011672   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 011673   000000 702211                    TSX2  ! 0,X1

     3505     7306    4                       END;
     3506     7307    3                 CASE(%INDEXED#);

     3507     7308    3                    KEYSIZE = F$DCB.KEYL;

   7308  1 011674   000036 236100                    LDQ     30,,PR0
         1 011675   000011 772000                    QRL     9
         1 011676   000777 376007                    ANQ     511,DL
         1 011677   200033 756100                    STQ     KEYSIZE,,AUTO

     3508     7309    3                    IF F$DCB.KEYX + KEYSIZE > DUBYTES

   7309  1 011700   000036 236100                    LDQ     30,,PR0
         1 011701   000022 772000                    QRL     18
         1 011702   200033 036100                    ADLQ    KEYSIZE,,AUTO
         1 011703   200020 116100                    CMPQ    DUBYTES,,AUTO
         1 011704   011714 604400 1                  TMOZ    s:7317

     3509     7310    4                    THEN DO;      /* Key not contained in initial record segment */

     3510     7311    4                       B$JIT.ERR = E_INDBC; /*E* ERROR: FTW-E$INDBC */

   7311  1 011705   000032 236000 0                  LDQ     E_INDBC
         1 011706   000000 471400 xsym               LDP1    B$JIT$
         1 011707   100012 756100                    STQ     10,,PR1

     3511     7312    4                       ALTRETURN;

   7312  1 011710   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 011711   000000 702211                    TSX2  ! 0,X1

     3512     7313    4                       END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:499  
     3513     7314    3                 CASE(%RELATIVE#);

     3514     7315    3                    KEYSIZE = 4;

   7315  1 011712   000004 235007                    LDA     4,DL
         1 011713   200033 755100                    STA     KEYSIZE,,AUTO

     3515     7316    3                 END;

     3516     7317    2              RETURN;

   7317  1 011714   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 011715   000001 702211                    TSX2  ! 1,X1

     3517     7318
     3518     7319    2      END FTW_CHK_KEY_PS1;
     3519     7320        /*********************************************************************/
     3520     7321        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:500  
     3521     7322        /*********************************************************************/
     3522     7323    1   FTW_SAVE_LAST_KEY: PROC;

   7323  1 011716   200074 741300       FTW_SAVE_LA* STX1  ! @SIZE+1,,AUTO

     3523     7324        /*F*     NAME: FTW_SAVE_LAST_KEY
     3524     7325                 PURPOSE: Saves last key encountered.
     3525     7326         ***/
     3526     7327
     3527     7328        /********************/
     3528     7329
     3529     7330         /***
     3530     7331          *** For files with real keys, save key in last key buffer.  For
     3531     7332          *** other files, save as last key.
     3532     7333          ***/
     3533     7334
     3534     7335    3              DO CASE(F$DCB.ORG);

   7335  1 011717   200030 470500                    LDP0    JDCB$,,AUTO
         1 011720   000032 236100                    LDQ     26,,PR0
         1 011721   000033 772000                    QRL     27
         1 011722   000010 116007                    CMPQ    8,DL
         1 011723   011725 602006 1                  TNC     s:7335+6,QL
         1 011724   012022 710000 1                  TRA     s:7350
         1 011725   012022 710000 1                  TRA     s:7350
         1 011726   012022 710000 1                  TRA     s:7350
         1 011727   011735 710000 1                  TRA     s:7337
         1 011730   012016 710000 1                  TRA     s:7348
         1 011731   012022 710000 1                  TRA     s:7350
         1 011732   012003 710000 1                  TRA     s:7345
         1 011733   011761 710000 1                  TRA     s:7341
         1 011734   012016 710000 1                  TRA     s:7348

     3535     7336    3                 CASE(%KEYED#);

     3536     7337    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:501  
   7337  1 011735   000067 236100                    LDQ     55,,PR0
         1 011736   777777 376007                    ANQ     -1,DL
         1 011737   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 011740   000020 736000                    QLS     16
         1 011741   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 011742   200011 756100                    STQ     ASEG$,,AUTO

     3537     7338    3                    KEYSIZE = ASEG$->FT$KEY.KL + 1; /* Get key length            */

   7338  1 011743   200011 471500                    LDP1    ASEG$,,AUTO
         1 011744   000100 101500                    MRL     fill='000'O
         1 011745   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 011746   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 011747   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 011750   000001 036007                    ADLQ    1,DL
         1 011751   200033 756100                    STQ     KEYSIZE,,AUTO

     3538     7339    3                    F$DCB.LASTKEY$->KEYCHARS = ASEG$->KEYCHARS;

   7339  1 011752   000065 473500                    LDP3    53,,PR0
         1 011753   000000 620006                    EAX0    0,QL
         1 011754   200033 722100                    LXL2    KEYSIZE,,AUTO
         1 011755   040140 100540                    MLR     fill='040'O
         1 011756   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 011757   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         1 011760   012022 710000 1                  TRA     s:7350

     3539     7340    3                 CASE(%INDEXED#);

     3540     7341    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

   7341  1 011761   000067 236100                    LDQ     55,,PR0
         1 011762   777777 376007                    ANQ     -1,DL
         1 011763   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 011764   000020 736000                    QLS     16
         1 011765   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 011766   200011 756100                    STQ     ASEG$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:502  

     3541     7342    3                    KEYSIZE = F$DCB.KEYL;  /* Fixed key length                   */

   7342  1 011767   000036 236100                    LDQ     30,,PR0
         1 011770   000011 772000                    QRL     9
         1 011771   000777 376007                    ANQ     511,DL
         1 011772   200033 756100                    STQ     KEYSIZE,,AUTO

     3542     7343    3                    F$DCB.LASTKEY$->KEYCHARS = ASEG$->KEYCHARS;

   7343  1 011773   000065 471500                    LDP1    53,,PR0
         1 011774   200011 473500                    LDP3    ASEG$,,AUTO
         1 011775   000000 620006                    EAX0    0,QL
         1 011776   200033 722100                    LXL2    KEYSIZE,,AUTO
         1 011777   040140 100540                    MLR     fill='040'O
         1 012000   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 012001   100000 000012                    ADSC9   0,,PR1                   cn=0,n=*X2
         1 012002   012022 710000 1                  TRA     s:7350

     3543     7344    3                 CASE(%RELATIVE#);

     3544     7345    3                    ASEG$ = PINCRC( AFPOOL$, F$DCB.CRECX + RCWSIZE );

   7345  1 012003   000067 236100                    LDQ     55,,PR0
         1 012004   777777 376007                    ANQ     -1,DL
         1 012005   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 012006   000020 736000                    QLS     16
         1 012007   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 012010   200011 756100                    STQ     ASEG$,,AUTO

     3545     7346    3                    F$DCB.LASTKEY = ASEG$->BASED_WORD;

   7346  1 012011   200011 471500                    LDP1    ASEG$,,AUTO
         1 012012   000100 100500                    MLR     fill='000'O
         1 012013   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 012014   000065 000004                    ADSC9   53,,PR0                  cn=0,n=4
         1 012015   012022 710000 1                  TRA     s:7350
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:503  

     3546     7347    3                 CASE(%RANDOM#,%IDS#);

     3547     7348    3                    F$DCB.LASTKEY = AFPOOL$->BASED_WORD;

   7348  1 012016   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 012017   000100 100500                    MLR     fill='000'O
         1 012020   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 012021   000065 000004                    ADSC9   53,,PR0                  cn=0,n=4

     3548     7349    3                 END;

     3549     7350    2              F$DCB.TAPTYP.HAVLASTKEY = %YES#;

   7350  1 012022   000040 236003                    LDQ     32,DU
         1 012023   000067 256100                    ORSQ    55,,PR0

     3550     7351    2              RETURN;

   7351  1 012024   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 012025   000001 702211                    TSX2  ! 1,X1

     3551     7352
     3552     7353    2      END FTW_SAVE_LAST_KEY;
     3553     7354        /*********************************************************************/
     3554     7355        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:504  
     3555     7356        /*********************************************************************/
     3556     7357    1   FTW_END_MANAGED_FREE_SECT: PROC ALTRET;

   7357  1 012026   200062 741300       FTW_END_MAN* STX1  ! KEYS+1,,AUTO

     3557     7358        /*F*     NAME: FTW_END_MANAGED_FREE_SECT
     3558     7359                 PURPOSE: Terminates managed free tape file.
     3559     7360         ***/
     3560     7361
     3561     7362        /********************/
     3562     7363
     3563     7364    2              CALL FTW$TRNCHLD ALTRET(JUSTALT);

   7364  1 012027   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 012030   014515 701000 1                  TSX1    s:8260
         1 012031   012041 702000 1                  TSX2    JUSTALT

     3564     7365    2              CALL FTI$WRFM ALTRET(JUSTALT);

   7365  1 012032   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 012033   000000 701000 xent               TSX1    FTI$WRFM
         1 012034   012041 702000 1                  TSX2    JUSTALT

     3565     7366    2              CALL FTW_SET_BOF_INDICATORS;

   7366  1 012035   013113 701000 1                  TSX1    FTW_SET_BOF_INDICATORS
         1 012036   000000 011000                    NOP     0

     3566     7367    2              RETURN;

   7367  1 012037   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 012040   000001 702211                    TSX2  ! 1,X1

   7364  1 012041                       JUSTALT      null
     3567     7368
     3568     7369    2   JUSTALT:   ;
     3569     7370    2              ALTRETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:505  

   7370  1 012041   200062 221300                    LDX1  ! KEYS+1,,AUTO
         1 012042   000000 702211                    TSX2  ! 0,X1

     3570     7371
     3571     7372    2      END FTW_END_MANAGED_FREE_SECT;
     3572     7373        /*********************************************************************/
     3573     7374        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:506  
     3574     7375        /*********************************************************************/
     3575     7376    1   FTW_UNDOTRUNC: PROC ALTRET;

   7376  1 012043   200074 741300       FTW_UNDOTRU* STX1  ! @SIZE+1,,AUTO

     3576     7377        /*F*    NAME: FTW_UNDOTRUNC
     3577     7378                PURPOSE: Undo trunc.
     3578     7379         ***/
     3579     7380
     3580     7381        /*******************/
     3581     7382
     3582     7383         /***
     3583     7384          *** A trunc was performed on the DCB, get the block back.
     3584     7385          ***/
     3585     7386
     3586     7387    3              IF (F$DCB.BLKL+4095)/4096 > B$JIT.FBUL THEN DO;

   7387  1 012044   200030 470500                    LDP0    JDCB$,,AUTO
         1 012045   000033 236100                    LDQ     27,,PR0
         1 012046   000022 772000                    QRL     18
         1 012047   007777 036007                    ADLQ    4095,DL
         1 012050   000014 772000                    QRL     12
         1 012051   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012052   000000 471400 xsym               LDP1    B$JIT$
         1 012053   100205 236100                    LDQ     133,,PR1
         1 012054   777777 376007                    ANQ     -1,DL
         1 012055   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 012056   012063 603000 1                  TRC     s:7392

     3587     7388    3                 B$JIT.ERR = E_NOFPOOL;

   7388  1 012057   000036 236000 0                  LDQ     E_NOFPOOL
         1 012060   100012 756100                    STQ     10,,PR1

     3588     7389    3                 ALTRETURN;

   7389  1 012061   200074 221300                    LDX1  ! @SIZE+1,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:507  
         1 012062   000000 702211                    TSX2  ! 0,X1

     3589     7390    3                 END;
     3590     7391
     3591     7392    2              CALL FMD$GETBUF(FT_RBUF1,(F$DCB.BLKL+4095)/4096,AFPOOL$);

   7392  1 012063   000033 236100                    LDQ     27,,PR0
         1 012064   000022 772000                    QRL     18
         1 012065   007777 036007                    ADLQ    4095,DL
         1 012066   000014 772000                    QRL     12
         1 012067   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012070   200007 633500                    EPPR3   AFPOOL$,,AUTO
         1 012071   200115 453500                    STP3    @FIELD_LENGTH+5,,AUTO
         1 012072   200112 634500                    EPPR4   @FIELD_LENGTH+2,,AUTO
         1 012073   200114 454500                    STP4    @FIELD_LENGTH+4,,AUTO
         1 012074   000020 236000 2                  LDQ     16
         1 012075   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 012076   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 012077   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 012100   000000 701000 xent               TSX1    FMD$GETBUF
         1 012101   000000 011000                    NOP     0

     3592     7393                                                /* Get a buffer back                  */
     3593     7394    2              F$DCB.CBUFNUM = FT_RBUF1;    /* Remember FPOOL buffer              */

   7394  1 012102   200030 470500                    LDP0    JDCB$,,AUTO
         1 012103   000070 236100                    LDQ     56,,PR0
         1 012104   000022 376000 2                  ANQ     18
         1 012105   300000 276003                    ORQ     98304,DU
         1 012106   000070 756100                    STQ     56,,PR0

     3594     7395    3              IF F$DCB.TRNC = FT_FBTRUNC# THEN DO; /* Actually trunced a block   */

   7395  1 012107   000064 236100                    LDQ     52,,PR0
         1 012110   000014 376007                    ANQ     12,DL
         1 012111   000010 116007                    CMPQ    8,DL
         1 012112   012160 601000 1                  TNZ     s:7412
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:508  

     3595     7396    4                 IF F$DCB.IASN = %OD# THEN DO;

   7396  1 012113   000103 236100                    LDQ     67,,PR0
         1 012114   000777 376007                    ANQ     511,DL
         1 012115   000012 116007                    CMPQ    10,DL
         1 012116   012144 601000 1                  TNZ     s:7405

     3596     7397    4                    F$DCB.ARS = F$DCB.BLKL;

   7397  1 012117   000033 236100                    LDQ     27,,PR0
         1 012120   000022 772000                    QRL     18
         1 012121   000000 756100                    STQ     0,,PR0

     3597     7398    4                    CALL FPO$UNTRUNC(AFPOOL$) ALTRET(JUSTALT);

   7398  1 012122   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 012123   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 012124   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 012125   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 012126   000000 701000 xent               TSX1    FPO$UNTRUNC
         1 012127   012167 702000 1                  TSX2    JUSTALT

     3598     7399    5                    IF NOT F$DCB.TAPTYP.USRBUF AND NOT F$DCB.TYC.EOF(1) THEN DO;

   7399  1 012130   200030 470500                    LDP0    JDCB$,,AUTO
         1 012131   000067 236100                    LDQ     55,,PR0
         1 012132   000100 316003                    CANQ    64,DU
         1 012133   012162 601000 1                  TNZ     s:7414
         1 012134   000002 236100                    LDQ     2,,PR0
         1 012135   004000 316003                    CANQ    2048,DU
         1 012136   012162 601000 1                  TNZ     s:7414

     3599     7400    5                       F$DCB.BLKLEN = F$DCB.ARS;

   7400  1 012137   000000 720100                    LXL0    0,,PR0
         1 012140   000074 440100                    SXL0    60,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:509  

     3600     7401    5                       CALL FTW_GETBLKLEN;

   7401  1 012141   012171 701000 1                  TSX1    FTW_GETBLKLEN
         1 012142   000000 011000                    NOP     0

     3601     7402    5                       END;

     3602     7403    4                    END;

   7403  1 012143   012162 710000 1                  TRA     s:7414

     3603     7404    4                 ELSE DO;

     3604     7405    4                    F$DCB.ARS = -1;

   7405  1 012144   000001 335007                    LCA     1,DL
         1 012145   000000 755100                    STA     0,,PR0

     3605     7406    4                    CALL FTI$SPREC ALTRET(JUSTALT);

   7406  1 012146   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 012147   000000 701000 xent               TSX1    FTI$SPREC
         1 012150   012167 702000 1                  TSX2    JUSTALT

     3606     7407    4                    F$DCB.ARS = F$DCB.BLKL;

   7407  1 012151   200030 470500                    LDP0    JDCB$,,AUTO
         1 012152   000033 236100                    LDQ     27,,PR0
         1 012153   000022 772000                    QRL     18
         1 012154   000000 756100                    STQ     0,,PR0

     3607     7408    4                    CALL FTW_RDFPOOL ALTRET(JUSTALT);

   7408  1 012155   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 012156   012167 702000 1                  TSX2    JUSTALT

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:510  
     3608     7409    4                    END;

     3609     7410    3                 END;

   7410  1 012157   012162 710000 1                  TRA     s:7414

     3610     7411    3              ELSE DO;                     /* No block in this file section      */

     3611     7412    3                 CALL FTW_SETBLKLEN;

   7412  1 012160   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 012161   000000 011000                    NOP     0

     3612     7413    3                 END;

     3613     7414    2              F$DCB.TRNC = FT_NOTRUNC#;    /* Trunc is undone                    */

   7414  1 012162   200030 470500                    LDP0    JDCB$,,AUTO
         1 012163   000021 236000 2                  LDQ     17
         1 012164   000064 356100                    ANSQ    52,,PR0

     3614     7415    2              RETURN;

   7415  1 012165   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 012166   000001 702211                    TSX2  ! 1,X1

   7414  1 012167                       JUSTALT      null
     3615     7416    2   JUSTALT:   ;
     3616     7417    2              ALTRETURN;

   7417  1 012167   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 012170   000000 702211                    TSX2  ! 0,X1

     3617     7418
     3618     7419    2      END FTW_UNDOTRUNC;
     3619     7420        /*********************************************************************/
     3620     7421        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:511  
     3621     7422        /*********************************************************************/
     3622     7423    1   FTW_GETBLKLEN: PROC;

   7423  1 012171   200100 741300       FTW_GETBLKL* STX1  ! @SIZE+5,,AUTO

     3623     7424        /*F*    NAME: FTW_GETBLKLEN
     3624     7425                PURPOSE: Get BOL of current FPOOL buffer and check against block length.
     3625     7426         ***/
     3626     7427
     3627     7428        /********************/
     3628     7429
     3629     7430         /***
     3630     7431          *** Determine which type of BOL (decimal or binary) is required
     3631     7432          *** and get it.
     3632     7433          ***/
     3633     7434
     3634     7435    2              IF F$DCB.BOL < 4 THEN RETURN; /* No BOL needed or possible         */

   7435  1 012172   200030 470500                    LDP0    JDCB$,,AUTO
         1 012173   000034 236100                    LDQ     28,,PR0
         1 012174   000777 376007                    ANQ     511,DL
         1 012175   000004 116007                    CMPQ    4,DL
         1 012176   012200 603000 1                  TRC     s:7436

   7435  1 012177   000001 702211                    TSX2  ! 1,X1

     3635     7436    2              IF RCWTYPE = RCWBIN#

   7436  1 012200   200037 235100                    LDA     RCWTYPE,,AUTO
         1 012201   012215 601000 1                  TNZ     s:7442

     3636     7437    3              THEN DO;

     3637     7438    3                 TEMP = AFPOOL$->FT$BLKHDRE.LS; /* Get two 8 bit pieces          */

   7438  1 012202   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 012203   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:512  
         1 012204   000022 772000                    QRL     18
         1 012205   200047 756100                    STQ     TEMP,,AUTO

     3638     7439    3                 TEMP = TEMP - (TEMP / 512) * 256; /* Make into one 16 bit value */

   7439  1 012206   001000 506007                    DIV     512,DL
         1 012207   000010 736000                    QLS     8
         1 012210   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 012211   000001 036007                    ADLQ    1,DL
         1 012212   200047 036100                    ADLQ    TEMP,,AUTO
         1 012213   200047 756100                    STQ     TEMP,,AUTO

     3639     7440    3                 END;

   7440  1 012214   012216 710000 1                  TRA     s:7444

     3640     7441    3              ELSE DO;                     /* Decimal BOL                        */

     3641     7442    3                 RETURN;

   7442  1 012215   000001 702211                    TSX2  ! 1,X1

     3642     7443    3                 END;
     3643     7444    2              IF TEMP > F$DCB.BLKLEN

   7444  1 012216   000074 236100                    LDQ     60,,PR0
         1 012217   777777 376007                    ANQ     -1,DL
         1 012220   200047 116100                    CMPQ    TEMP,,AUTO
         1 012221   012226 605000 1                  TPL     s:7448

     3644     7445    3              THEN DO;

     3645     7446    3                 B$JIT.ERR = E_BADBLKL; /*E* ERROR: FTW-E$BADBLKL */

   7446  1 012222   000012 236000 0                  LDQ     E_BADBLKL
         1 012223   000000 473400 xsym               LDP3    B$JIT$
         1 012224   300012 756100                    STQ     10,,PR3
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:513  

     3646     7447    3                 END;

   7447  1 012225   012230 710000 1                  TRA     s:7449

     3647     7448    2              ELSE F$DCB.BLKLEN = TEMP;

   7448  1 012226   200047 720100                    LXL0    TEMP,,AUTO
         1 012227   000074 440100                    SXL0    60,,PR0

     3648     7449    2              RETURN;

   7449  1 012230   200100 221300                    LDX1  ! @SIZE+5,,AUTO
         1 012231   000001 702211                    TSX2  ! 1,X1

     3649     7450
     3650     7451    2      END FTW_GETBLKLEN;
     3651     7452        /*********************************************************************/
     3652     7453        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:514  
     3653     7454        /*********************************************************************/
     3654     7455    1   FTW_SETBLKLEN: PROC;

   7455  1 012232   200076 741300       FTW_SETBLKL* STX1  ! @SIZE+3,,AUTO

     3655     7456        /*F*    NAME: FTW_SETBLKLEN
     3656     7457                PURPOSE: Set BOL of current FPOOL buffer with specified value.
     3657     7458         ***/
     3658     7459
     3659     7460        /********************/
     3660     7461
     3661     7462         /***
     3662     7463          *** Determine which type of BOL (decimal or binary) is required
     3663     7464          *** and set it.
     3664     7465          ***/
     3665     7466
     3666     7467    2              CHARZLEN = F$DCB.BOL;

   7467  1 012233   200030 470500                    LDP0    JDCB$,,AUTO
         1 012234   000034 236100                    LDQ     28,,PR0
         1 012235   000777 376007                    ANQ     511,DL
         1 012236   200013 756100                    STQ     CHARZLEN,,AUTO

     3667     7468    2              IF CHARZLEN <= 0 THEN RETURN; /* No BOL possible                   */

   7468  1 012237   012241 605400 1                  TPNZ    s:7469

   7468  1 012240   000001 702211                    TSX2  ! 1,X1

     3668     7469    2              IF RCWTYPE = RCWBIN#

   7469  1 012241   200037 235100                    LDA     RCWTYPE,,AUTO
         1 012242   012267 601000 1                  TNZ     s:7478

     3669     7470    3              THEN DO;

     3670     7471    3                 AFPOOL$->CHARZ = NULPAD;  /* Default to zeros                   */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:515  

   7471  1 012243   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 012244   000000 620006                    EAX0    0,QL
         1 012245   040140 100400                    MLR     fill='040'O
         1 012246   000005 000024 0                  ADSC9   ZEROBITS                 cn=0,n=20
         1 012247   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     3671     7472    3                 IF CHARZLEN < 4 THEN RETURN; /* Return if no room for BOL       */

   7472  1 012250   200013 236100                    LDQ     CHARZLEN,,AUTO
         1 012251   000004 116007                    CMPQ    4,DL
         1 012252   012255 605000 1                  TPL     s:7473

   7472  1 012253   200076 221300                    LDX1  ! @SIZE+3,,AUTO
         1 012254   000001 702211                    TSX2  ! 1,X1

     3672     7473    3                 TEMP = F$DCB.BLKLEN;

   7473  1 012255   000074 236100                    LDQ     60,,PR0
         1 012256   777777 376007                    ANQ     -1,DL
         1 012257   200047 756100                    STQ     TEMP,,AUTO

     3673     7474    3                 AFPOOL$->FT$BLKHDRE.LS = TEMP + (TEMP / 256) * 256;

   7474  1 012260   000400 506007                    DIV     256,DL
         1 012261   000010 736000                    QLS     8
         1 012262   200047 036100                    ADLQ    TEMP,,AUTO
         1 012263   000000 620006                    EAX0    0,QL
         1 012264   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 012265   100000 740100                    STX0    0,,PR1

     3674     7475                            /* Note: the above makes two 8 bit pieces from DCB.BLKLEN */
     3675     7476    3                 END;

   7476  1 012266   012313 710000 1                  TRA     s:7483

     3676     7477    3              ELSE DO;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:516  

     3677     7478    3                 AFPOOL$->CHARZ = ' ';     /* Default to blanks                  */

   7478  1 012267   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 012270   000000 620006                    EAX0    0,QL
         1 012271   040140 100400                    MLR     fill='040'O
         1 012272   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 012273   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     3678     7479    3                 IF CHARZLEN < 4 THEN RETURN; /* Return if no room for BOL       */

   7479  1 012274   200013 236100                    LDQ     CHARZLEN,,AUTO
         1 012275   000004 116007                    CMPQ    4,DL
         1 012276   012301 605000 1                  TPL     s:7480

   7479  1 012277   200076 221300                    LDX1  ! @SIZE+3,,AUTO
         1 012300   000001 702211                    TSX2  ! 1,X1

     3679     7480    3                CALL BINCHAR( AFPOOL$->FT$ORGD.SIZE, F$DCB.BLKLEN ); /* Decimal BOL */

   7480  1 012301   000074 236100                    LDQ     60,,PR0
         1 012302   777777 376007                    ANQ     -1,DL
         1 012303   000000 235003                    LDA     0,DU
         1 012304   200112 757100                    STAQ    @FIELD_LENGTH+2,,AUTO
         1 012305   200007 471500                    LDP1    AFPOOL$,,AUTO
         1 012306   000100 301500                    BTD
         1 012307   200112 000010                    NDSC9   @FIELD_LENGTH+2,,AUTO    cn=0,s=lsgnf,sf=0,n=8
         1 012310   100000 030004                    NDSC9   0,,PR1                   cn=0,s=nosgn,sf=0,n=4

     3680     7481    3                 F$DCB.BLKLEN = TEMP;

   7481  1 012311   200047 720100                    LXL0    TEMP,,AUTO
         1 012312   000074 440100                    SXL0    60,,PR0

     3681     7482    3                 END;

     3682     7483    2              RETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:517  

   7483  1 012313   200076 221300                    LDX1  ! @SIZE+3,,AUTO
         1 012314   000001 702211                    TSX2  ! 1,X1

     3683     7484
     3684     7485    2      END FTW_SETBLKLEN;
     3685     7486        /*********************************************************************/
     3686     7487        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:518  
     3687     7488        /*********************************************************************/
     3688     7489    1   FTW_SETSIZE: PROC;

   7489  1 012315   200064 741300       FTW_SETSIZE  STX1  ! DATA_INCON,,AUTO

     3689     7490        /*F*    NAME: FTW_SETSIZE
     3690     7491                PURPOSE: Set RCW of current FPOOL buffer record with specified values.
     3691     7492         ***/
     3692     7493
     3693     7494        /********************/
     3694     7495
     3695     7496         /***
     3696     7497          *** Determine which type of RCW (decimal or binary) is required
     3697     7498          *** and set it.
     3698     7499          ***/
     3699     7500
     3700     7501    3              DO CASE(RCWTYPE);

   7501  1 012316   200037 235100                    LDA     RCWTYPE,,AUTO
         1 012317   000003 115007                    CMPA    3,DL
         1 012320   012322 602005 1                  TNC     s:7501+4,AL
         1 012321   012413 710000 1                  TRA     s:7520
         1 012322   012326 710000 1                  TRA     s:7505
         1 012323   012363 710000 1                  TRA     s:7512
         1 012324   012325 710000 1                  TRA     s:7503

     3701     7502    3                 CASE(RCWNONE#);

     3702     7503    3                    RETURN;

   7503  1 012325   000001 702211                    TSX2  ! 1,X1

     3703     7504    3                 CASE(RCWBIN#);

     3704     7505    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */

   7505  1 012326   200030 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:519  
         1 012327   000067 236100                    LDQ     55,,PR0
         1 012330   777777 376007                    ANQ     -1,DL
         1 012331   000020 736000                    QLS     16
         1 012332   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 012333   200050 756100                    STQ     TEMP$,,AUTO

     3705     7506    3                    TEMP$->FT$HDRE.LS = SEGSIZE + (SEGSIZE / 256) * 256;

   7506  1 012334   200041 236100                    LDQ     SEGSIZE,,AUTO
         1 012335   000400 506007                    DIV     256,DL
         1 012336   000010 736000                    QLS     8
         1 012337   200041 036100                    ADLQ    SEGSIZE,,AUTO
         1 012340   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012341   200050 471500                    LDP1    TEMP$,,AUTO
         1 012342   000100 101500                    MRL     fill='000'O
         1 012343   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 012344   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     3706     7507    3                    TEMP$->FT$HDR.S1 = SPANINFO; /* Set spanning info            */

   7507  1 012345   000100 101500                    MRL     fill='000'O
         1 012346   200044 000004                    ADSC9   SPANINFO,,AUTO           cn=0,n=4
         1 012347   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1

     3707     7508    3                    IF F$DCB.TAPTYP.CP6F

   7508  1 012350   000067 236100                    LDQ     55,,PR0
         1 012351   000200 316003                    CANQ    128,DU
         1 012352   012357 600000 1                  TZE     s:7510

     3708     7509    3                    THEN TEMP$->FT$HDR.S2 = DVBYTE;

   7509  1 012353   000100 100500                    MLR     fill='000'O
         1 012354   200021 000001                    ADSC9   DVBYTE,,AUTO             cn=0,n=1
         1 012355   100000 600001                    ADSC9   0,,PR1                   cn=3,n=1
         1 012356   012413 710000 1                  TRA     s:7520

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:520  
     3709     7510    3                    ELSE TEMP$->FT$HDR.S2 = 0;

   7510  1 012357   000100 101400                    MRL     fill='000'O
         1 012360   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 012361   100000 600001                    ADSC9   0,,PR1                   cn=3,n=1
         1 012362   012413 710000 1                  TRA     s:7520

     3710     7511    3                 CASE(RCWDEC#);

     3711     7512    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */

   7512  1 012363   200030 470500                    LDP0    JDCB$,,AUTO
         1 012364   000067 236100                    LDQ     55,,PR0
         1 012365   777777 376007                    ANQ     -1,DL
         1 012366   000020 736000                    QLS     16
         1 012367   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 012370   200050 756100                    STQ     TEMP$,,AUTO

     3712     7513    3                    IF F$DCB.SPANNED

   7513  1 012371   000031 236100                    LDQ     25,,PR0
         1 012372   000004 316007                    CANQ    4,DL
         1 012373   012407 600000 1                  TZE     s:7518

     3713     7514    4                    THEN DO;               /* Use S format RCW                   */

     3714     7515    4                       CALL BINCHAR( TEMP$->FT$ORGS.SIZE, SEGSIZE );

   7515  1 012374   200050 471500                    LDP1    TEMP$,,AUTO
         1 012375   000100 301500                    BTD
         1 012376   200041 000004                    NDSC9   SEGSIZE,,AUTO            cn=0,s=lsgnf,sf=0,n=4
         1 012377   100000 230004                    NDSC9   0,,PR1                   cn=1,s=nosgn,sf=0,n=4

     3715     7516    4                       TEMP$->FT$ORGS.SPAN = SPANINFO + ASCBIN('0');

   7516  1 012400   200044 236100                    LDQ     SPANINFO,,AUTO
         1 012401   000060 036007                    ADLQ    48,DL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:521  
         1 012402   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012403   000100 101500                    MRL     fill='000'O
         1 012404   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 012405   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     3716     7517    4                       END;

   7517  1 012406   012413 710000 1                  TRA     s:7520

     3717     7518    3                    ELSE CALL BINCHAR( TEMP$->FT$ORGD.SIZE, SEGSIZE );

   7518  1 012407   200050 471500                    LDP1    TEMP$,,AUTO
         1 012410   000100 301500                    BTD
         1 012411   200041 000004                    NDSC9   SEGSIZE,,AUTO            cn=0,s=lsgnf,sf=0,n=4
         1 012412   100000 030004                    NDSC9   0,,PR1                   cn=0,s=nosgn,sf=0,n=4

     3718     7519    3                 END;

     3719     7520    2              RETURN;

   7520  1 012413   200064 221300                    LDX1  ! DATA_INCON,,AUTO
         1 012414   000001 702211                    TSX2  ! 1,X1

     3720     7521
     3721     7522    2      END FTW_SETSIZE;
     3722     7523        /*********************************************************************/
     3723     7524        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:522  
     3724     7525        /*********************************************************************/
     3725     7526    1   FTW_GETSIZE: PROC ALTRET;

   7526  1 012415   200104 741300       FTW_GETSIZE  STX1  ! @SIZE+9,,AUTO

     3726     7527        /*F*    NAME: FTW_GETSIZE
     3727     7528                PURPOSE: Get RCW of current FPOOL buffer record
     3728     7529                  and check it against block length.
     3729     7530         ***/
     3730     7531
     3731     7532        /********************/
     3732     7533
     3733     7534         /***
     3734     7535          *** Determine which type of RCW (decimal or binary) is required
     3735     7536          *** and get it.
     3736     7537          ***/
     3737     7538
     3738     7539    3              DO CASE(RCWTYPE);

   7539  1 012416   200037 235100                    LDA     RCWTYPE,,AUTO
         1 012417   000003 115007                    CMPA    3,DL
         1 012420   012422 602005 1                  TNC     s:7539+4,AL
         1 012421   012610 710000 1                  TRA     s:7578
         1 012422   012433 710000 1                  TRA     s:7544
         1 012423   012534 710000 1                  TRA     s:7561
         1 012424   012425 710000 1                  TRA     s:7541

     3739     7540    3                 CASE(RCWNONE#);

     3740     7541    3                    SEGSIZE = F$DCB.RECL;  /* Record length predetermined        */

   7541  1 012425   200030 470500                    LDP0    JDCB$,,AUTO
         1 012426   000033 236100                    LDQ     27,,PR0
         1 012427   777777 376007                    ANQ     -1,DL
         1 012430   200041 756100                    STQ     SEGSIZE,,AUTO

     3741     7542    3                    SPANINFO = 0;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:523  

   7542  1 012431   200044 450100                    STZ     SPANINFO,,AUTO
         1 012432   012610 710000 1                  TRA     s:7578

     3742     7543    3                 CASE(RCWBIN#);

     3743     7544    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */

   7544  1 012433   200030 470500                    LDP0    JDCB$,,AUTO
         1 012434   000067 236100                    LDQ     55,,PR0
         1 012435   777777 376007                    ANQ     -1,DL
         1 012436   000020 736000                    QLS     16
         1 012437   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 012440   200050 756100                    STQ     TEMP$,,AUTO

     3744     7545    3                    SEGSIZE = TEMP$->FT$HDRE.LS;

   7545  1 012441   200050 471500                    LDP1    TEMP$,,AUTO
         1 012442   000100 101500                    MRL     fill='000'O
         1 012443   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         1 012444   200041 000004                    ADSC9   SEGSIZE,,AUTO            cn=0,n=4

     3745     7546    3                    SEGSIZE = SEGSIZE - (SEGSIZE / 511) * 256;
              7546                             /* Make 8 bit pieces into 16 bit value */

   7546  1 012445   200041 236100                    LDQ     SEGSIZE,,AUTO
         1 012446   000777 506007                    DIV     511,DL
         1 012447   000010 736000                    QLS     8
         1 012450   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 012451   000001 036007                    ADLQ    1,DL
         1 012452   200041 036100                    ADLQ    SEGSIZE,,AUTO
         1 012453   200041 756100                    STQ     SEGSIZE,,AUTO

     3746     7547    3                    SPANINFO = TEMP$->FT$HDR.S1;

   7547  1 012454   000100 101500                    MRL     fill='000'O
         1 012455   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:524  
         1 012456   200044 000004                    ADSC9   SPANINFO,,AUTO           cn=0,n=4

     3747     7548    4                    IF F$DCB.OLDIOERR = 1 THEN DO;
              7548                             /* Segment must fit in truncated block */

   7548  1 012457   000102 236100                    LDQ     66,,PR0
         1 012460   140000 376003                    ANQ     49152,DU
         1 012461   040000 116003                    CMPQ    16384,DU
         1 012462   012520 601000 1                  TNZ     s:7558

     3748     7549    5                       IF F$DCB.CRECX + RCWSIZE + SEGSIZE > F$DCB.BLKLEN THEN DO;

   7549  1 012463   000067 236100                    LDQ     55,,PR0
         1 012464   777777 376007                    ANQ     -1,DL
         1 012465   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 012466   200041 036100                    ADLQ    SEGSIZE,,AUTO
         1 012467   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012470   000074 236100                    LDQ     60,,PR0
         1 012471   777777 376007                    ANQ     -1,DL
         1 012472   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 012473   012520 605000 1                  TPL     s:7558

     3749     7550    5                          F$DCB.TYC.DI(1) = '1'B; /* Tell user we lost data.     */

   7550  1 012474   000400 236003                    LDQ     256,DU
         1 012475   000002 256100                    ORSQ    2,,PR0

     3750     7551    5                          SEGSIZE = (F$DCB.BLKLEN - F$DCB.CRECX) - RCWSIZE;
              7551                                   /* Force it. */

   7551  1 012476   000067 236100                    LDQ     55,,PR0
         1 012477   777777 376007                    ANQ     -1,DL
         1 012500   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012501   000074 236100                    LDQ     60,,PR0
         1 012502   777777 376007                    ANQ     -1,DL
         1 012503   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 012504   200036 136100                    SBLQ    RCWSIZE,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:525  
         1 012505   200041 756100                    STQ     SEGSIZE,,AUTO

     3751     7552    5                          IF SPANINFO = 1 THEN /* Also force spanning to stop here. */

   7552  1 012506   200044 235100                    LDA     SPANINFO,,AUTO
         1 012507   000001 115007                    CMPA    1,DL
         1 012510   012513 601000 1                  TNZ     s:7554

     3752     7553    5                             SPANINFO = 0;

   7553  1 012511   200044 450100                    STZ     SPANINFO,,AUTO
         1 012512   012520 710000 1                  TRA     s:7558

     3753     7554    5                          ELSE IF SPANINFO = SPAN_MID THEN

   7554  1 012513   200044 236100                    LDQ     SPANINFO,,AUTO
         1 012514   200045 116100                    CMPQ    SPAN_MID,,AUTO
         1 012515   012520 601000 1                  TNZ     s:7558

     3754     7555    5                                SPANINFO = SPAN_LAST;

   7555  1 012516   200046 235100                    LDA     SPAN_LAST,,AUTO
         1 012517   200044 755100                    STA     SPANINFO,,AUTO

     3755     7556    5                          END;

     3756     7557    4                       END;

     3757     7558    3                    IF F$DCB.TAPTYP.CP6F THEN

   7558  1 012520   000067 236100                    LDQ     55,,PR0
         1 012521   000200 316003                    CANQ    128,DU
         1 012522   012610 600000 1                  TZE     s:7578

     3758     7559    3                       F$DCB.DVBYTE = BINBIT(TEMP$->FT$HDR.S2,9);

   7559  1 012523   000100 101500                    MRL     fill='000'O
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:526  
         1 012524   100000 600001                    ADSC9   0,,PR1                   cn=3,n=1
         1 012525   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 012526   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 012527   000033 736000                    QLS     27
         1 012530   000003 676100                    ERQ     3,,PR0
         1 012531   776000 376003                    ANQ     -1024,DU
         1 012532   000003 656100                    ERSQ    3,,PR0
         1 012533   012610 710000 1                  TRA     s:7578

     3759     7560    3                 CASE(RCWDEC#);

     3760     7561    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to RCW      */

   7561  1 012534   200030 470500                    LDP0    JDCB$,,AUTO
         1 012535   000067 236100                    LDQ     55,,PR0
         1 012536   777777 376007                    ANQ     -1,DL
         1 012537   000020 736000                    QLS     16
         1 012540   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 012541   200050 756100                    STQ     TEMP$,,AUTO

     3761     7562    3                    IF F$DCB.SPANNED

   7562  1 012542   000031 236100                    LDQ     25,,PR0
         1 012543   000004 316007                    CANQ    4,DL
         1 012544   012575 600000 1                  TZE     s:7572

     3762     7563    4                    THEN DO;

     3763     7564    4                       CALL FTW_CHKDEC( TEMP$->FT$ORGS.SIZE,

   7564  1 012545   000040 236000 2                  LDQ     32
         1 012546   200110 756100                    STQ     @FIELD_CHAR+1,,AUTO
         1 012547   200050 236100                    LDQ     TEMP$,,AUTO
         1 012550   200000 036007                    ADLQ    65536,DL
         1 012551   200107 756100                    STQ     @SIZE+12,,AUTO
         1 012552   012726 701000 1                  TSX1    FTW_CHKDEC
         1 012553   012612 702000 1                  TSX2    JUSTALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:527  

     3764     7565    4                           LENGTHC(TEMP$->FT$ORGS.SIZE) ) ALTRET(JUSTALT);
     3765     7566    4                       CALL FTW_CHKDEC( TEMP$->FT$ORGS.SPAN,

   7566  1 012554   000007 236000 2                  LDQ     7
         1 012555   200110 756100                    STQ     @FIELD_CHAR+1,,AUTO
         1 012556   200050 236100                    LDQ     TEMP$,,AUTO
         1 012557   200107 756100                    STQ     @SIZE+12,,AUTO
         1 012560   012726 701000 1                  TSX1    FTW_CHKDEC
         1 012561   012612 702000 1                  TSX2    JUSTALT

     3766     7567    4                           LENGTHC(TEMP$->FT$ORGS.SPAN) ) ALTRET(JUSTALT);
     3767     7568    4                       CALL CHARBIN( SEGSIZE, TEMP$->FT$ORGS.SIZE );

   7568  1 012562   200050 470500                    LDP0    TEMP$,,AUTO
         1 012563   000100 305500                    DTB
         1 012564   000000 230004                    NDSC9   0,,PR0                   cn=1,s=nosgn,sf=0,n=4
         1 012565   200041 000004                    NDSC9   SEGSIZE,,AUTO            cn=0,s=lsgnf,sf=0,n=4

     3768     7569    4                       SPANINFO = TEMP$->FT$ORGS.SPAN - ASCBIN('0');

   7569  1 012566   000100 101500                    MRL     fill='000'O
         1 012567   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 012570   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
         1 012571   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 012572   000060 136007                    SBLQ    48,DL
         1 012573   200044 756100                    STQ     SPANINFO,,AUTO

     3769     7570    4                       END;

   7570  1 012574   012610 710000 1                  TRA     s:7578

     3770     7571    4                    ELSE DO;               /* All records whole                  */

     3771     7572    4                       CALL FTW_CHKDEC( TEMP$->FT$ORGD.SIZE,

   7572  1 012575   000040 236000 2                  LDQ     32
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:528  
         1 012576   200110 756100                    STQ     @FIELD_CHAR+1,,AUTO
         1 012577   200050 236100                    LDQ     TEMP$,,AUTO
         1 012600   200107 756100                    STQ     @SIZE+12,,AUTO
         1 012601   012726 701000 1                  TSX1    FTW_CHKDEC
         1 012602   012612 702000 1                  TSX2    JUSTALT

     3772     7573    4                           LENGTHC(TEMP$->FT$ORGD.SIZE) ) ALTRET(JUSTALT);
     3773     7574    4                       CALL CHARBIN( SEGSIZE, TEMP$->FT$ORGD.SIZE );

   7574  1 012603   200050 470500                    LDP0    TEMP$,,AUTO
         1 012604   000100 305500                    DTB
         1 012605   000000 030004                    NDSC9   0,,PR0                   cn=0,s=nosgn,sf=0,n=4
         1 012606   200041 000004                    NDSC9   SEGSIZE,,AUTO            cn=0,s=lsgnf,sf=0,n=4

     3774     7575    4                       SPANINFO = 0;

   7575  1 012607   200044 450100                    STZ     SPANINFO,,AUTO

     3775     7576    4                       END;

     3776     7577    3                 END;

     3777     7578    2              RETURN;

   7578  1 012610   200104 221300                    LDX1  ! @SIZE+9,,AUTO
         1 012611   000001 702211                    TSX2  ! 1,X1

   7571  1 012612                       JUSTALT      null
     3778     7579
     3779     7580    2   JUSTALT:   ;
     3780     7581    2              ALTRETURN;

   7581  1 012612   200104 221300                    LDX1  ! @SIZE+9,,AUTO
         1 012613   000000 702211                    TSX2  ! 0,X1

     3781     7582
     3782     7583    2      END FTW_GETSIZE;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:529  
     3783     7584        /*********************************************************************/
     3784     7585        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:530  
     3785     7586        /*********************************************************************/
     3786     7587    1   FTW_SPANCHK: PROC;

   7587  1 012614   200104 741300       FTW_SPANCHK  STX1  ! @SIZE+9,,AUTO

     3787     7588        /*F*     NAME: FTW_SPANCHK
     3788     7589                 PURPOSE: Check consistency of span information.
     3789     7590         ***/
     3790     7591
     3791     7592        /********************/
     3792     7593
     3793     7594         /***
     3794     7595          *** If previous segment indicated continuation, this segment should
     3795     7596          *** continue it.  If previous segment indicated no continuation, this
     3796     7597          *** segment should not continue it.  If we just spaced past a block that
     3797     7598          *** had an I/O error in it, just indicate a data inconsistency (TYC.DI).
     3798     7599          ***/
     3799     7600
     3800     7601    2              IF (F$DCB.SPAN AND SPANINFO <= 1) OR (NOT F$DCB.SPAN AND SPANINFO > 1)
              7601                       THEN

   7601  1 012615   200030 470500                    LDP0    JDCB$,,AUTO
         1 012616   000064 236100                    LDQ     52,,PR0
         1 012617   100000 316007                    CANQ    32768,DL
         1 012620   012624 600000 1                  TZE     s:7601+7
         1 012621   200044 235100                    LDA     SPANINFO,,AUTO
         1 012622   000001 115007                    CMPA    1,DL
         1 012623   012631 604400 1                  TMOZ    s:7603
         1 012624   100000 316007                    CANQ    32768,DL
         1 012625   012654 601000 1                  TNZ     s:7617
         1 012626   200044 235100                    LDA     SPANINFO,,AUTO
         1 012627   000001 115007                    CMPA    1,DL
         1 012630   012654 604400 1                  TMOZ    s:7617

     3801     7602                                        /* New segment begins without previous ending */
     3802     7603    3                 IF (F$DCB.IOERROK OR F$DCB.IGNOREFSN) AND F$DCB.OLDIOERR = 2 THEN DO;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:531  
   7603  1 012631   000031 236100                    LDQ     25,,PR0
         1 012632   020000 316003                    CANQ    8192,DU
         1 012633   012636 601000 1                  TNZ     s:7603+5
         1 012634   000031 234100                    SZN     25,,PR0
         1 012635   012651 605000 1                  TPL     s:7611
         1 012636   000102 236100                    LDQ     66,,PR0
         1 012637   140000 376003                    ANQ     49152,DU
         1 012640   100000 116003                    CMPQ    32768,DU
         1 012641   012651 601000 1                  TNZ     s:7611

     3803     7604                                                /* Had an I/O error, or this is the   */
     3804     7605                                                /* first FSECT we could find.         */
     3805     7606    3                    F$DCB.TYC.DI(1) = '1'B; /* Just indicate data inconsistency. */

   7606  1 012642   000400 236003                    LDQ     256,DU
         1 012643   000002 256100                    ORSQ    2,,PR0

     3806     7607    3                    IF F$DCB.IGNOREFSN THEN /* If first FSECT, forget this.      */

   7607  1 012644   000031 234100                    SZN     25,,PR0
         1 012645   012654 605000 1                  TPL     s:7617

     3807     7608    3                       F$DCB.OLDIOERR = 0;

   7608  1 012646   000027 236000 2                  LDQ     23
         1 012647   000102 356100                    ANSQ    66,,PR0

     3808     7609    3                    END;

   7609  1 012650   012654 710000 1                  TRA     s:7617

     3809     7610    2                 ELSE
     3810     7611    2                    B$JIT.ERR = E_BADSPAN; /*E* ERROR: FTW-E$BADSPAN */

   7611  1 012651   000015 236000 0                  LDQ     E_BADSPAN
         1 012652   000000 471400 xsym               LDP1    B$JIT$
         1 012653   100012 756100                    STQ     10,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:532  

     3811     7612
     3812     7613         /***
     3813     7614          *** Remeber whether this segment should be continued or not.
     3814     7615          ***/
     3815     7616
     3816     7617    2              IF SPANINFO = 0 OR SPANINFO = SPAN_LAST THEN

   7617  1 012654   200044 235100                    LDA     SPANINFO,,AUTO
         1 012655   012661 600000 1                  TZE     s:7618
         1 012656   200044 236100                    LDQ     SPANINFO,,AUTO
         1 012657   200046 116100                    CMPQ    SPAN_LAST,,AUTO
         1 012660   012664 601000 1                  TNZ     s:7620

     3817     7618    2                 F$DCB.SPAN = %NO#;        /* Next should begin span             */

   7618  1 012661   000005 236000 2                  LDQ     5
         1 012662   000064 356100                    ANSQ    52,,PR0
         1 012663   012666 710000 1                  TRA     s:7621

     3818     7619    2              ELSE
     3819     7620    2                 F$DCB.SPAN = %YES#;       /* Next should continue               */

   7620  1 012664   100000 236007                    LDQ     32768,DL
         1 012665   000064 256100                    ORSQ    52,,PR0

     3820     7621    2              RETURN;

   7621  1 012666   200104 221300                    LDX1  ! @SIZE+9,,AUTO
         1 012667   000001 702211                    TSX2  ! 1,X1

     3821     7622
     3822     7623    2      END FTW_SPANCHK;
     3823     7624        /*********************************************************************/
     3824     7625        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:533  
     3825     7626        /*********************************************************************/
     3826     7627    1   FTW_SIZECHK: PROC;

   7627  1 012670   200104 741300       FTW_SIZECHK  STX1  ! @SIZE+9,,AUTO

     3827     7628        /*F*     NAME: FTW_SIZECHK
     3828     7629                 PURPOSE: Check segment size information for consistency.
     3829     7630         ***/
     3830     7631
     3831     7632        /********************/
     3832     7633
     3833     7634         /***
     3834     7635          *** Segment must fit within block.
     3835     7636          ***/
     3836     7637
     3837     7638    2              IF F$DCB.CRECX + SEGSIZE > F$DCB.BLKLEN

   7638  1 012671   200030 470500                    LDP0    JDCB$,,AUTO
         1 012672   000067 236100                    LDQ     55,,PR0
         1 012673   777777 376007                    ANQ     -1,DL
         1 012674   200041 036100                    ADLQ    SEGSIZE,,AUTO
         1 012675   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012676   000074 236100                    LDQ     60,,PR0
         1 012677   777777 376007                    ANQ     -1,DL
         1 012700   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 012701   012714 605000 1                  TPL     s:7649

     3838     7639    3              THEN DO;                 /* Segment couldn't possible fit in block */

     3839     7640    3                 SEGSIZE = F$DCB.BLKLEN - F$DCB.CRECX;

   7640  1 012702   000067 236100                    LDQ     55,,PR0
         1 012703   777777 376007                    ANQ     -1,DL
         1 012704   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012705   000074 236100                    LDQ     60,,PR0
         1 012706   777777 376007                    ANQ     -1,DL
         1 012707   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:534  
         1 012710   200041 756100                    STQ     SEGSIZE,,AUTO

     3840     7641                                                /* Set segment size to max possible   */
     3841     7642    3                 B$JIT.ERR = E_BADRECL; /*E* ERROR: FTW-E$BADRECL */

   7642  1 012711   000014 236000 0                  LDQ     E_BADRECL
         1 012712   000000 471400 xsym               LDP1    B$JIT$
         1 012713   100012 756100                    STQ     10,,PR1

     3842     7643    3                 END;

     3843     7644
     3844     7645         /***
     3845     7646          *** Segment should be no larger than DCB.RECL specifies.
     3846     7647          ***/
     3847     7648
     3848     7649    2              IF SEGSIZE < RCWSIZE

   7649  1 012714   200041 236100                    LDQ     SEGSIZE,,AUTO
         1 012715   200036 116100                    CMPQ    RCWSIZE,,AUTO
         1 012716   012724 605000 1                  TPL     s:7655

     3849     7650    3              THEN DO;                     /* Illegal segment length             */

     3850     7651    3                 B$JIT.ERR = E_BADRECL; /*E* ERROR: FTW-E$BADRECL */

   7651  1 012717   000014 236000 0                  LDQ     E_BADRECL
         1 012720   000000 471400 xsym               LDP1    B$JIT$
         1 012721   100012 756100                    STQ     10,,PR1

     3851     7652    3                 F$DCB.GDISP = SEGSIZE;    /* Don't permit negative data length  */

   7652  1 012722   200041 235100                    LDA     SEGSIZE,,AUTO
         1 012723   000101 755100                    STA     65,,PR0

     3852     7653                                                /* Don't permit negative data length  */
     3853     7654    3                 END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:535  

     3854     7655    2              RETURN;

   7655  1 012724   200104 221300                    LDX1  ! @SIZE+9,,AUTO
         1 012725   000001 702211                    TSX2  ! 1,X1

     3855     7656
     3856     7657    2      END FTW_SIZECHK;
     3857     7658        /*********************************************************************/
     3858     7659        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:536  
     3859     7660        /*********************************************************************/
     3860     7661    1   FTW_CHKDEC: PROC( FIELD_CHAR, FIELD_LENGTH ) ALTRET;

   7661  1 012726   200106 741300       FTW_CHKDEC   STX1  ! @SIZE+11,,AUTO

     3861     7662        /*F*     NAME: FTW_CHKDEC
     3862     7663                 PURPOSE: Check field for numeric characters.
     3863     7664         ***/
     3864     7665
     3865     7666    2     DCL FIELD_CHAR CHAR(FIELD_LENGTH) CALIGNED;
     3866     7667    2     DCL FIELD_LENGTH SBIN;
     3867     7668
     3868     7669        /********************/
     3869     7670
     3870     7671    2              CALL SEARCH( TEMP, TEMP, FT_NONDECIMAL_TABLE, FIELD_CHAR ) ALTRET(
              7671                       ALLDECIMAL );

   7671  1 012727   200110 470500                    LDP0    @FIELD_LENGTH,,AUTO
         1 012730   000000 720100                    LXL0    0,,PR0
         1 012731   000000 471400 xsym               LDP1    B$SR_NON_DEC$
         1 012732   200107 473500                    LDP3    @FIELD_CHAR,,AUTO
         1 012733   000000 164540                    TCT
         1 012734   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 012735   100000 000100                    ARG     0,,PR1
         1 012736   200047 000100                    ARG     TEMP,,AUTO
         1 012737   200047 235100                    LDA     TEMP,,AUTO
         1 012740   000033 771000                    ARL     27
         1 012741   200047 755100                    STA     TEMP,,AUTO
         1 012742   200047 551140                    STBA    TEMP,'40'O,AUTO
         1 012743   012751 606400 1                  TTN     ALLDECIMAL

     3871     7672    2              B$JIT.ERR = E_NONDECRCW; /*E* ERROR: FTW-E$NONDECRCW */

   7672  1 012744   000040 236000 0                  LDQ     E_NONDECRCW
         1 012745   000000 474400 xsym               LDP4    B$JIT$
         1 012746   400012 756100                    STQ     10,,PR4

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:537  
     3872     7673    2              ALTRETURN;

   7673  1 012747   200106 221300                    LDX1  ! @SIZE+11,,AUTO
         1 012750   000000 702211                    TSX2  ! 0,X1

   7672  1 012751                       ALLDECIMAL   null
     3873     7674
     3874     7675    2   ALLDECIMAL: ;
     3875     7676    2              RETURN;

   7676  1 012751   200106 221300                    LDX1  ! @SIZE+11,,AUTO
         1 012752   000001 702211                    TSX2  ! 1,X1

     3876     7677
     3877     7678    2      END FTW_CHKDEC;
     3878     7679        /*********************************************************************/
     3879     7680        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:538  
     3880     7681        /*********************************************************************/
     3881     7682    1   FTW_BOF:   PROC ALTRET;

   7682  1 012753   200072 741300       FTW_BOF      STX1  ! @FP$+1,,AUTO

     3882     7683        /*F*     NAME: FTW_BOF
     3883     7684                 PURPOSE: Position to beginning of file regardless of format.
     3884     7685         ***/
     3885     7686
     3886     7687        /********************/
     3887     7688
     3888     7689         /***
     3889     7690          *** If not in section 1, change to volume with proper section.
     3890     7691          *** Either backspace over blocks or backspace over file...whichever
     3891     7692          *** seems faster.
     3892     7693          ***/
     3893     7694
     3894     7695    2              F$DCB.MUST_CVOL = %NO#;

   7695  1 012754   200030 470500                    LDP0    JDCB$,,AUTO
         1 012755   000011 236000 2                  LDQ     9
         1 012756   000064 356100                    ANSQ    52,,PR0

     3895     7696    2              IF F$DCB.FSECT > 1

   7696  1 012757   000077 220100                    LDX0    63,,PR0
         1 012760   000002 100003                    CMPX0   2,DU
         1 012761   013015 602000 1                  TNC     s:7708

     3896     7697    3              THEN DO;                     /* Must get to section 1              */

     3897     7698    3                 CALL FTW_TRNCWEOF ALTRET(JUSTALT); /* Close current section     */

   7698  1 012762   014760 701000 1                  TSX1    FTW_TRNCWEOF
         1 012763   013111 702000 1                  TSX2    JUSTALT

     3898     7699    3                 CALL FTL$PBSN( 0, ADDR(NIL), 1 ) ALTRET(JUSTALT);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:539  

   7699  1 012764   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 012765   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 012766   000007 236000 2                  LDQ     7
         1 012767   200115 756100                    STQ     @FIELD_LENGTH+5,,AUTO
         1 012770   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 012771   200114 450500                    STP0    @FIELD_LENGTH+4,,AUTO
         1 012772   000031 236000 2                  LDQ     25
         1 012773   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 012774   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 012775   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 012776   000000 701000 xent               TSX1    FTL$PBSN
         1 012777   013111 702000 1                  TSX2    JUSTALT

     3899     7700    3                 IF F$DCB.TAPTYP.CP6F

   7700  1 013000   200030 470500                    LDP0    JDCB$,,AUTO
         1 013001   000067 236100                    LDQ     55,,PR0
         1 013002   000200 316003                    CANQ    128,DU
         1 013003   013011 600000 1                  TZE     s:7705

     3900     7701    4                 THEN DO;                  /* Skip FIT                           */

     3901     7702    4                    F$DCB.ARS = 1;

   7702  1 013004   000001 235007                    LDA     1,DL
         1 013005   000000 755100                    STA     0,,PR0

     3902     7703    4                    CALL FTI$SPREC ALTRET(JUSTALT);

   7703  1 013006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 013007   000000 701000 xent               TSX1    FTI$SPREC
         1 013010   013111 702000 1                  TSX2    JUSTALT

     3903     7704    4                    END;

     3904     7705    3                 F$DCB.LSTBLK = %NO#;      /* Not known if last block            */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:540  

   7705  1 013011   200030 470500                    LDP0    JDCB$,,AUTO
         1 013012   000033 236000 2                  LDQ     27
         1 013013   000064 356100                    ANSQ    52,,PR0

     3905     7706    3                 END;

   7706  1 013014   013105 710000 1                  TRA     s:7740

     3906     7707    3              ELSE DO;                     /* Already in section 1               */

     3907     7708    3                 CALL FTW_TRNCWEOF ALTRET(JUSTALT); /* Trunc file; write EOF labels */

   7708  1 013015   014760 701000 1                  TSX1    FTW_TRNCWEOF
         1 013016   013111 702000 1                  TSX2    JUSTALT

     3908     7709    3                 IF NOT F$DCB.AFTRBLK

   7709  1 013017   200030 470500                    LDP0    JDCB$,,AUTO
         1 013020   000064 236100                    LDQ     52,,PR0
         1 013021   000002 316007                    CANQ    2,DL
         1 013022   013025 601000 1                  TNZ     s:7712

     3909     7710    3                 THEN F$DCB.PRECNO = F$DCB.PRECNO - 1;

   7710  1 013023   000001 336007                    LCQ     1,DL
         1 013024   000072 056100                    ASQ     58,,PR0

     3910     7711                         /** DCB.PRECNO is now the number of blocks to skip backward **/
     3911     7712    3                 IF F$DCB.PRECNO > 0

   7712  1 013025   000072 235100                    LDA     58,,PR0
         1 013026   013105 604400 1                  TMOZ    s:7740

     3912     7713    4                 THEN DO;                  /* Not already at first block         */

     3913     7714    4                    IF F$DCB.TAPTYP.CP6F
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:541  

   7714  1 013027   000067 236100                    LDQ     55,,PR0
         1 013030   000200 316003                    CANQ    128,DU
         1 013031   013035 600000 1                  TZE     s:7716

     3914     7715    4                    THEN TEMP = 3;         /* SPFILE limit for FIT format files  */

   7715  1 013032   000003 235007                    LDA     3,DL
         1 013033   200047 755100                    STA     TEMP,,AUTO
         1 013034   013037 710000 1                  TRA     s:7717

     3915     7716    4                    ELSE TEMP = 2;         /* Non-FIT format files               */

   7716  1 013035   000002 235007                    LDA     2,DL
         1 013036   200047 755100                    STA     TEMP,,AUTO

     3916     7717    4                    IF F$DCB.PRECNO <= TEMP

   7717  1 013037   000072 236100                    LDQ     58,,PR0
         1 013040   200047 116100                    CMPQ    TEMP,,AUTO
         1 013041   013051 605400 1                  TPNZ    s:7723

     3917     7718    5                    THEN DO;               /* Just backspace                     */

     3918     7719    5                       F$DCB.ARS = - F$DCB.PRECNO;

   7719  1 013042   000072 235100                    LDA     58,,PR0
         1 013043   000000 531000                    NEG     0
         1 013044   000000 755100                    STA     0,,PR0

     3919     7720    5                       CALL FTI$SPREC ALTRET(JUSTALT);

   7720  1 013045   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 013046   000000 701000 xent               TSX1    FTI$SPREC
         1 013047   013111 702000 1                  TSX2    JUSTALT

     3920     7721    5                       END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:542  

   7721  1 013050   013100 710000 1                  TRA     s:7736

     3921     7722    5                    ELSE DO;               /* Use SPFILE                         */

     3922     7723    5                       F$DCB.ARS = -1;     /* Find BOF file mark                 */

   7723  1 013051   000001 335007                    LCA     1,DL
         1 013052   000000 755100                    STA     0,,PR0

     3923     7724    5                       CALL FTI$SPFILE ALTRET(JUSTALT);

   7724  1 013053   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 013054   000000 701000 xent               TSX1    FTI$SPFILE
         1 013055   013111 702000 1                  TSX2    JUSTALT

     3924     7725    5                       IF NOT F$DCB.TYC.BOT(0)

   7725  1 013056   200030 470500                    LDP0    JDCB$,,AUTO
         1 013057   000001 236100                    LDQ     1,,PR0
         1 013060   040000 316003                    CANQ    16384,DU
         1 013061   013067 601000 1                  TNZ     s:7730

     3925     7726    6                       THEN DO;            /* Must have hit file mark            */

     3926     7727    6                          F$DCB.ARS = 1;   /* Skip over BOF mark                 */

   7727  1 013062   000001 235007                    LDA     1,DL
         1 013063   000000 755100                    STA     0,,PR0

     3927     7728    6                          CALL FTI$SPFILE ALTRET(JUSTALT);

   7728  1 013064   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 013065   000000 701000 xent               TSX1    FTI$SPFILE
         1 013066   013111 702000 1                  TSX2    JUSTALT

     3928     7729    6                          END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:543  

     3929     7730    5                       IF F$DCB.TAPTYP.CP6F

   7730  1 013067   200030 470500                    LDP0    JDCB$,,AUTO
         1 013070   000067 236100                    LDQ     55,,PR0
         1 013071   000200 316003                    CANQ    128,DU
         1 013072   013100 600000 1                  TZE     s:7736

     3930     7731    6                       THEN DO;            /* Must skip over FIT also            */

     3931     7732    6                          F$DCB.ARS = 1;

   7732  1 013073   000001 235007                    LDA     1,DL
         1 013074   000000 755100                    STA     0,,PR0

     3932     7733    6                          CALL FTI$SPREC ALTRET(JUSTALT);

   7733  1 013075   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 013076   000000 701000 xent               TSX1    FTI$SPREC
         1 013077   013111 702000 1                  TSX2    JUSTALT

     3933     7734    6                          END;

     3934     7735    5                       END;

     3935     7736    4                    F$DCB.NEW_FSECT = %YES#; /* Need to read first block         */

   7736  1 013100   200030 470500                    LDP0    JDCB$,,AUTO
         1 013101   000001 236003                    LDQ     1,DU
         1 013102   000064 256100                    ORSQ    52,,PR0

     3936     7737    4                    F$DCB.LSTBLK = %NO#;   /* Not known if last block            */

   7737  1 013103   000033 236000 2                  LDQ     27
         1 013104   000064 356100                    ANSQ    52,,PR0

     3937     7738    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:544  

     3938     7739    3                 END;

     3939     7740    2              CALL FTW_SET_BOF_INDICATORS;

   7740  1 013105   013113 701000 1                  TSX1    FTW_SET_BOF_INDICATORS
         1 013106   000000 011000                    NOP     0

     3940     7741    2              RETURN;

   7741  1 013107   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013110   000001 702211                    TSX2  ! 1,X1

   7733  1 013111                       JUSTALT      null
     3941     7742
     3942     7743    2   JUSTALT:   ;
     3943     7744    2              ALTRETURN;

   7744  1 013111   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013112   000000 702211                    TSX2  ! 0,X1

     3944     7745
     3945     7746    2      END FTW_BOF;
     3946     7747        /*********************************************************************/
     3947     7748        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:545  
     3948     7749        /*********************************************************************/
     3949     7750    1   FTW_SET_BOF_INDICATORS: PROC;

   7750  1 013113   200074 741300       FTW_SET_BOF* STX1  ! @SIZE+1,,AUTO

     3950     7751        /*F*     NAME: FTW_SET_BOF_INDICATORS
     3951     7752                 PURPOSE: Reset DCB fields to indicate current BOF position.
     3952     7753         ***/
     3953     7754
     3954     7755        /********************/
     3955     7756
     3956     7757    2              F$DCB.CRECNO = 1;            /* At first record of file            */

   7757  1 013114   000001 235007                    LDA     1,DL
         1 013115   200030 470500                    LDP0    JDCB$,,AUTO
         1 013116   000071 755100                    STA     57,,PR0

     3957     7758    2              F$DCB.CRECX = F$DCB.BOL;

   7758  1 013117   000034 720100                    LXL0    28,,PR0
         1 013120   000777 360003                    ANX0    511,DU
         1 013121   000067 440100                    SXL0    55,,PR0

     3958     7759    2              F$DCB.GDISP = RCWSIZE;

   7759  1 013122   200036 236100                    LDQ     RCWSIZE,,AUTO
         1 013123   000101 756100                    STQ     65,,PR0

     3959     7760    2              F$DCB.NRECX = 1;

   7760  1 013124   000001 221003                    LDX1    1,DU
         1 013125   000100 741100                    STX1    64,,PR0

     3960     7761    2              F$DCB.RPOS = %YES#;          /* Positioned to next record to read  */

   7761  1 013126   010000 236007                    LDQ     4096,DL
         1 013127   000064 256100                    ORSQ    52,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:546  

     3961     7762    2              F$DCB.SPAN = %NO#;

   7762  1 013130   000005 236000 2                  LDQ     5
         1 013131   000064 356100                    ANSQ    52,,PR0

     3962     7763    2              F$DCB.TAPTYP.HAVLASTKEY = %NO#;

   7763  1 013132   000032 236000 2                  LDQ     26
         1 013133   000067 356100                    ANSQ    55,,PR0

     3963     7764    3              DO CASE(F$DCB.ORG);          /* Reset DCB.LASTKEY if necessary     */

   7764  1 013134   000032 236100                    LDQ     26,,PR0
         1 013135   000033 772000                    QRL     27
         1 013136   000023 116007                    CMPQ    19,DL
         1 013137   013141 602006 1                  TNC     s:7764+5,QL
         1 013140   013171 710000 1                  TRA     s:7772
         1 013141   013171 710000 1                  TRA     s:7772
         1 013142   013171 710000 1                  TRA     s:7772
         1 013143   013171 710000 1                  TRA     s:7772
         1 013144   013164 710000 1                  TRA     s:7766
         1 013145   013171 710000 1                  TRA     s:7772
         1 013146   013167 710000 1                  TRA     s:7768
         1 013147   013171 710000 1                  TRA     s:7772
         1 013150   013164 710000 1                  TRA     s:7766
         1 013151   013171 710000 1                  TRA     s:7772
         1 013152   013171 710000 1                  TRA     s:7772
         1 013153   013171 710000 1                  TRA     s:7772
         1 013154   013171 710000 1                  TRA     s:7772
         1 013155   013171 710000 1                  TRA     s:7772
         1 013156   013171 710000 1                  TRA     s:7772
         1 013157   013171 710000 1                  TRA     s:7772
         1 013160   013171 710000 1                  TRA     s:7772
         1 013161   013171 710000 1                  TRA     s:7772
         1 013162   013171 710000 1                  TRA     s:7772
         1 013163   013164 710000 1                  TRA     s:7766
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:547  

     3964     7765    3                 CASE(%RANDOM#,%IDS#,%RESTRICT#);

     3965     7766    3                    F$DCB.LASTKEY = -1;

   7766  1 013164   000001 335007                    LCA     1,DL
         1 013165   000065 755100                    STA     53,,PR0
         1 013166   013171 710000 1                  TRA     s:7772

     3966     7767    3                 CASE(%RELATIVE#);

     3967     7768    3                    F$DCB.LASTKEY = 0;

   7768  1 013167   000065 450100                    STZ     53,,PR0
         1 013170   013171 710000 1                  TRA     s:7772

     3968     7769    3                 CASE(ELSE);

     3969     7770    4                    DO; END;

     3970     7771    3                 END;

     3971     7772    2              F$DCB.AFTRBLK = %NO#;        /* Before                             */

   7772  1 013171   000035 236000 2                  LDQ     29
         1 013172   000064 356100                    ANSQ    52,,PR0

     3972     7773    2              F$DCB.PRECNO = 1;            /* first data block of file           */

   7773  1 013173   000001 235007                    LDA     1,DL
         1 013174   000072 755100                    STA     58,,PR0

     3973     7774    2              RETURN;

   7774  1 013175   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 013176   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:548  
     3974     7775
     3975     7776    2      END FTW_SET_BOF_INDICATORS;
     3976     7777        /*********************************************************************/
     3977     7778        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:549  
     3978     7779        /*********************************************************************/
     3979     7780    1   FTW_P1RB:  PROC ALTRET;

   7780  1 013177   200074 741300       FTW_P1RB     STX1  ! @SIZE+1,,AUTO

     3980     7781        /*F*     NAME: FTW_P1RB
     3981     7782                 PURPOSE: Fixed and variable position to first record of block.
     3982     7783         ***/
     3983     7784
     3984     7785        /********************/
     3985     7786
     3986     7787         /***
     3987     7788          *** Reset CRECX to beginning of block and find the first segment
     3988     7789          *** that begins a record.
     3989     7790          ***/
     3990     7791
     3991     7792    2              F$DCB.CRECX = F$DCB.BOL;

   7792  1 013200   200030 470500                    LDP0    JDCB$,,AUTO
         1 013201   000034 720100                    LXL0    28,,PR0
         1 013202   000777 360003                    ANX0    511,DU
         1 013203   000067 440100                    SXL0    55,,PR0

     3992     7793    2              CALL FTW_CHKSEG ALTRET(NONEBEGIN); /* Check if 1st segment fits    */

   7793  1 013204   014373 701000 1                  TSX1    FTW_CHKSEG
         1 013205   013225 702000 1                  TSX2    NONEBEGIN

     3993     7794    2              CALL FTW_CHKSEGINFO ALTRET(NONEBEGIN);

   7794  1 013206   013410 701000 1                  TSX1    FTW_CHKSEGINFO
         1 013207   013225 702000 1                  TSX2    NONEBEGIN

     3994     7795    2              B$JIT.ERR = '0'B; /*N* Ignore span errors               */

   7795  1 013210   000000 470400 xsym               LDP0    B$JIT$
         1 013211   000012 450100                    STZ     10,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:550  

     3995     7796    2              CALL FTW_NXTRB ALTRET(NONEBEGIN); /* Find beginning of next record */

   7796  1 013212   013332 701000 1                  TSX1    FTW_NXTRB
         1 013213   013225 702000 1                  TSX2    NONEBEGIN

     3996     7797    2              F$DCB.GDISP = RCWSIZE;

   7797  1 013214   200036 235100                    LDA     RCWSIZE,,AUTO
         1 013215   200030 470500                    LDP0    JDCB$,,AUTO
         1 013216   000101 755100                    STA     65,,PR0

     3997     7798    2              F$DCB.NRECX = 1;             /* At first record of block           */

   7798  1 013217   000001 220003                    LDX0    1,DU
         1 013220   000100 740100                    STX0    64,,PR0

     3998     7799    2              F$DCB.RPOS = %YES#;          /* Positioned to record               */

   7799  1 013221   010000 236007                    LDQ     4096,DL
         1 013222   000064 256100                    ORSQ    52,,PR0

     3999     7800    2              RETURN;

   7800  1 013223   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 013224   000001 702211                    TSX2  ! 1,X1

   7799  1 013225                       NONEBEGIN    null
     4000     7801
     4001     7802    2   NONEBEGIN: ;
     4002     7803    2              IF B$JIT.ERR THEN

   7803  1 013225   000000 470400 xsym               LDP0    B$JIT$
         1 013226   000012 235100                    LDA     10,,PR0
         1 013227   013254 600000 1                  TZE     s:7813

     4003     7804    3                 IF F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2 THEN DO;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:551  

   7804  1 013230   200030 471500                    LDP1    JDCB$,,AUTO
         1 013231   100102 236100                    LDQ     66,,PR1
         1 013232   140000 376003                    ANQ     49152,DU
         1 013233   040000 116003                    CMPQ    16384,DU
         1 013234   013237 600000 1                  TZE     s:7805
         1 013235   100000 116003                    CMPQ    32768,DU
         1 013236   013252 601000 1                  TNZ     s:7812

     4004     7805    3                    IF B$JIT.ERR.CODE = %E$LD THEN

   7805  1 013237   000012 236100                    LDQ     10,,PR0
         1 013240   377770 376007                    ANQ     131064,DL
         1 013241   000070 116007                    CMPQ    56,DL
         1 013242   013246 601000 1                  TNZ     s:7808

     4005     7806    3                       F$DCB.TYC.LD(1) = '1'B;

   7806  1 013243   002000 236003                    LDQ     1024,DU
         1 013244   100002 256100                    ORSQ    2,,PR1
         1 013245   013250 710000 1                  TRA     s:7809

     4006     7807    3                    ELSE
     4007     7808    3                       F$DCB.TYC.DI(1) = '1'B;

   7808  1 013246   000400 236003                    LDQ     256,DU
         1 013247   100002 256100                    ORSQ    2,,PR1

     4008     7809    3                    B$JIT.ERR = '0'B;

   7809  1 013250   000012 450100                    STZ     10,,PR0

     4009     7810    3                    END;

   7810  1 013251   013254 710000 1                  TRA     s:7813

     4010     7811    2                 ELSE
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:552  
     4011     7812    2                    ALTRETURN;

   7812  1 013252   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 013253   000000 702211                    TSX2  ! 0,X1

     4012     7813    2              F$DCB.GDISP = RCWSIZE;

   7813  1 013254   200036 235100                    LDA     RCWSIZE,,AUTO
         1 013255   200030 471500                    LDP1    JDCB$,,AUTO
         1 013256   100101 755100                    STA     65,,PR1

     4013     7814    2              F$DCB.NRECX = 0;             /* No record begins in this block     */

   7814  1 013257   000000 220003                    LDX0    0,DU
         1 013260   100100 740100                    STX0    64,,PR1

     4014     7815    2              ALTRETURN;

   7815  1 013261   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 013262   000000 702211                    TSX2  ! 0,X1

     4015     7816
     4016     7817    2      END FTW_P1RB;
     4017     7818        /*********************************************************************/
     4018     7819        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:553  
     4019     7820        /*********************************************************************/
     4020     7821    1   FTW_PNRB:  PROC ALTRET;

   7821  1 013263   200074 741300       FTW_PNRB     STX1  ! @SIZE+1,,AUTO

     4021     7822        /*F*    NAME: FTW_PNRB
     4022     7823                PURPOSE: Fixed and variable format position to next record of block.
     4023     7824                DESCRIPTION: Will position to the next record to read by
     4024     7825                   incrementing current record descriptors CRECX, CRECNO,
     4025     7826                   and NRECX while the next record is fully contained within
     4026     7827                   the current block.  Will ALTRET if the next record is not
     4027     7828                   fully contained within the current block.
     4028     7829         ***/
     4029     7830
     4030     7831        /********************/
     4031     7832
     4032     7833         /***
     4033     7834          *** If already past block end--ALTRETURN.
     4034     7835          ***/
     4035     7836
     4036     7837    2              CALL FTW_PNSB ALTRET(SEGBLKEND);

   7837  1 013264   013366 701000 1                  TSX1    FTW_PNSB
         1 013265   013276 702000 1                  TSX2    SEGBLKEND

     4037     7838
     4038     7839    2              CALL FTW_NXTRB ALTRET(SEGBLKEND); /* Find beginning of next record */

   7839  1 013266   013332 701000 1                  TSX1    FTW_NXTRB
         1 013267   013276 702000 1                  TSX2    SEGBLKEND

     4039     7840    2              F$DCB.NRECX = F$DCB.NRECX + 1; /* Deblocked 1 more                 */

   7840  1 013270   200030 470500                    LDP0    JDCB$,,AUTO
         1 013271   000100 220100                    LDX0    64,,PR0
         1 013272   000001 621010                    EAX1    1,X0
         1 013273   000100 741100                    STX1    64,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:554  

     4040     7841    2              RETURN;

   7841  1 013274   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 013275   000001 702211                    TSX2  ! 1,X1

   7840  1 013276                       SEGBLKEND    null
     4041     7842
     4042     7843    2   SEGBLKEND: ;
     4043     7844    2              IF B$JIT.ERR THEN

   7844  1 013276   000000 470400 xsym               LDP0    B$JIT$
         1 013277   000012 235100                    LDA     10,,PR0
         1 013300   013325 600000 1                  TZE     s:7854

     4044     7845    3                 IF F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2 THEN DO;

   7845  1 013301   200030 471500                    LDP1    JDCB$,,AUTO
         1 013302   100102 236100                    LDQ     66,,PR1
         1 013303   140000 376003                    ANQ     49152,DU
         1 013304   040000 116003                    CMPQ    16384,DU
         1 013305   013310 600000 1                  TZE     s:7846
         1 013306   100000 116003                    CMPQ    32768,DU
         1 013307   013323 601000 1                  TNZ     s:7853

     4045     7846    3                    IF B$JIT.ERR.CODE = %E$LD THEN

   7846  1 013310   000012 236100                    LDQ     10,,PR0
         1 013311   377770 376007                    ANQ     131064,DL
         1 013312   000070 116007                    CMPQ    56,DL
         1 013313   013317 601000 1                  TNZ     s:7849

     4046     7847    3                       F$DCB.TYC.LD(1) = '1'B;

   7847  1 013314   002000 236003                    LDQ     1024,DU
         1 013315   100002 256100                    ORSQ    2,,PR1
         1 013316   013321 710000 1                  TRA     s:7850
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:555  

     4047     7848    3                    ELSE
     4048     7849    3                       F$DCB.TYC.DI(1) = '1'B;

   7849  1 013317   000400 236003                    LDQ     256,DU
         1 013320   100002 256100                    ORSQ    2,,PR1

     4049     7850    3                    B$JIT.ERR = '0'B;

   7850  1 013321   000012 450100                    STZ     10,,PR0

     4050     7851    3                    END;

   7851  1 013322   013325 710000 1                  TRA     s:7854

     4051     7852    2                 ELSE
     4052     7853    2                    ALTRETURN;

   7853  1 013323   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 013324   000000 702211                    TSX2  ! 0,X1

     4053     7854    2              F$DCB.BLKLEN = F$DCB.CRECX;

   7854  1 013325   200030 471500                    LDP1    JDCB$,,AUTO
         1 013326   100067 720100                    LXL0    55,,PR1
         1 013327   100074 440100                    SXL0    60,,PR1

     4054     7855    2              ALTRETURN;

   7855  1 013330   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 013331   000000 702211                    TSX2  ! 0,X1

     4055     7856
     4056     7857    2      END FTW_PNRB;
     4057     7858        /*********************************************************************/
     4058     7859        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:556  
     4059     7860        /*********************************************************************/
     4060     7861    1   FTW_NXTRB: PROC ALTRET;

   7861  1 013332   200076 741300       FTW_NXTRB    STX1  ! @SIZE+3,,AUTO

     4061     7862        /*F*     NAME: FTW_NXTRB
     4062     7863                 PURPOSE: Find next record beginning.
     4063     7864         ***/
     4064     7865
     4065     7866        /********************/
     4066     7867
     4067     7868         /***
     4068     7869          *** Next record begins when span information indicates beginning
     4069     7870          *** or when previous segment indicates ending.
     4070     7871          ***/
     4071     7872
     4072     7873    3              DO WHILE( SPANINFO > 1 );    /* While not record beginning         */

   7873  1 013333   200044 235100                    LDA     SPANINFO,,AUTO
         1 013334   000001 115007                    CMPA    1,DL
         1 013335   013362 604400 1                  TMOZ    s:7884

     4073     7874    3                 IF SPANINFO = SPAN_LAST

   7874  1 013336   200044 236100                    LDQ     SPANINFO,,AUTO
         1 013337   200046 116100                    CMPQ    SPAN_LAST,,AUTO
         1 013340   013355 601000 1                  TNZ     s:7882

     4074     7875    4                 THEN DO;                  /* Next segment must begin record     */

     4075     7876    4                    CALL FTW_PNSB ALTRET(JUSTALT);

   7876  1 013341   013366 701000 1                  TSX1    FTW_PNSB
         1 013342   013364 702000 1                  TSX2    JUSTALT

     4076     7877    4                    IF SPANINFO = SPAN_MID

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:557  
   7877  1 013343   200044 236100                    LDQ     SPANINFO,,AUTO
         1 013344   200045 116100                    CMPQ    SPAN_MID,,AUTO
         1 013345   013351 601000 1                  TNZ     s:7879

     4077     7878    4                    THEN SPANINFO = 1;

   7878  1 013346   000001 235007                    LDA     1,DL
         1 013347   200044 755100                    STA     SPANINFO,,AUTO
         1 013350   013357 710000 1                  TRA     s:7883

     4078     7879    4                    ELSE IF SPANINFO = SPAN_LAST

   7879  1 013351   200046 116100                    CMPQ    SPAN_LAST,,AUTO
         1 013352   013357 601000 1                  TNZ     s:7883

     4079     7880    4                       THEN SPANINFO = 0;

   7880  1 013353   200044 450100                    STZ     SPANINFO,,AUTO

     4080     7881    4                    END;

   7881  1 013354   013357 710000 1                  TRA     s:7883

     4081     7882    3                 ELSE CALL FTW_PNSB ALTRET(JUSTALT);

   7882  1 013355   013366 701000 1                  TSX1    FTW_PNSB
         1 013356   013364 702000 1                  TSX2    JUSTALT

     4082     7883    3                 END;

   7883  1 013357   200044 235100                    LDA     SPANINFO,,AUTO
         1 013360   000001 115007                    CMPA    1,DL
         1 013361   013336 605400 1                  TPNZ    s:7874

     4083     7884    2              RETURN;

   7884  1 013362   200076 221300                    LDX1  ! @SIZE+3,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:558  
         1 013363   000001 702211                    TSX2  ! 1,X1

   7874  1 013364                       JUSTALT      null
     4084     7885
     4085     7886    2   JUSTALT:   ;
     4086     7887    2              ALTRETURN;

   7887  1 013364   200076 221300                    LDX1  ! @SIZE+3,,AUTO
         1 013365   000000 702211                    TSX2  ! 0,X1

     4087     7888
     4088     7889    2      END FTW_NXTRB;
     4089     7890        /*********************************************************************/
     4090     7891        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:559  
     4091     7892        /*********************************************************************/
     4092     7893    1   FTW_PNSB:  PROC ALTRET;

   7893  1 013366   200100 741300       FTW_PNSB     STX1  ! @SIZE+5,,AUTO

     4093     7894        /*F*     NAME: FTW_PNSB
     4094     7895                 PURPOSE: Position to next segment within block.
     4095     7896         ***/
     4096     7897
     4097     7898        /********************/
     4098     7899
     4099     7900    2              F$DCB.CRECX = F$DCB.CRECX + SEGSIZE;

   7900  1 013367   200030 470500                    LDP0    JDCB$,,AUTO
         1 013370   000067 236100                    LDQ     55,,PR0
         1 013371   777777 376007                    ANQ     -1,DL
         1 013372   200041 036100                    ADLQ    SEGSIZE,,AUTO
         1 013373   000000 620006                    EAX0    0,QL
         1 013374   000067 440100                    SXL0    55,,PR0

     4100     7901    2              CALL FTW_CHKSEG ALTRET(JUSTALT);

   7901  1 013375   014373 701000 1                  TSX1    FTW_CHKSEG
         1 013376   013406 702000 1                  TSX2    JUSTALT

     4101     7902    2              CALL FTW_CHKSEGINFO ALTRET(JUSTALT);

   7902  1 013377   013410 701000 1                  TSX1    FTW_CHKSEGINFO
         1 013400   013406 702000 1                  TSX2    JUSTALT

     4102     7903    2              F$DCB.GDISP = RCWSIZE;

   7903  1 013401   200036 235100                    LDA     RCWSIZE,,AUTO
         1 013402   200030 470500                    LDP0    JDCB$,,AUTO
         1 013403   000101 755100                    STA     65,,PR0

     4103     7904    2              RETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:560  

   7904  1 013404   200100 221300                    LDX1  ! @SIZE+5,,AUTO
         1 013405   000001 702211                    TSX2  ! 1,X1

   7903  1 013406                       JUSTALT      null
     4104     7905
     4105     7906    2   JUSTALT:   ;
     4106     7907    2              ALTRETURN;

   7907  1 013406   200100 221300                    LDX1  ! @SIZE+5,,AUTO
         1 013407   000000 702211                    TSX2  ! 0,X1

     4107     7908
     4108     7909    2      END FTW_PNSB;
     4109     7910        /*********************************************************************/
     4110     7911        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:561  
     4111     7912        /*********************************************************************/
     4112     7913    1   FTW_CHKSEGINFO: PROC ALTRET;

   7913  1 013410   200102 741300       FTW_CHKSEGI* STX1  ! @SIZE+7,,AUTO

     4113     7914        /*F*     NAME: FTW_CHKSEGINFO
     4114     7915                 PURPOSE: Check segment size and spanning information.
     4115     7916         ***/
     4116     7917
     4117     7918        /********************/
     4118     7919
     4119     7920    2              CALL FTW_GETSIZE ALTRET(JUSTALT);

   7920  1 013411   012415 701000 1                  TSX1    FTW_GETSIZE
         1 013412   013421 702000 1                  TSX2    JUSTALT

     4120     7921    2              CALL FTW_SPANCHK;

   7921  1 013413   012614 701000 1                  TSX1    FTW_SPANCHK
         1 013414   000000 011000                    NOP     0

     4121     7922    2              CALL FTW_SIZECHK;

   7922  1 013415   012670 701000 1                  TSX1    FTW_SIZECHK
         1 013416   000000 011000                    NOP     0

     4122     7923    2              RETURN;

   7923  1 013417   200102 221300                    LDX1  ! @SIZE+7,,AUTO
         1 013420   000001 702211                    TSX2  ! 1,X1

   7920  1 013421                       JUSTALT      null
     4123     7924
     4124     7925    2   JUSTALT:   ;
     4125     7926    2              ALTRETURN;

   7926  1 013421   200102 221300                    LDX1  ! @SIZE+7,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:562  
         1 013422   000000 702211                    TSX2  ! 0,X1

     4126     7927
     4127     7928    2      END FTW_CHKSEGINFO;
     4128     7929        /*********************************************************************/
     4129     7930        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:563  
     4130     7931        /*********************************************************************/
     4131     7932    1   FTW_PNRS:  PROC(SEG) ALTRET;

   7932  1 013423   200072 741300       FTW_PNRS     STX1  ! @FP$+1,,AUTO

     4132     7933        /*F*    NAME: FTW_PNRS
     4133     7934                PURPOSE: Fixed and variable format position to next record or segment.
     4134     7935         ***/
     4135     7936
     4136     7937         /***
     4137     7938          *** Parameter:
     4138     7939          ***/
     4139     7940
     4140     7941    2     DCL SEG SBIN;                   /* 0 - next seg, 1 - next rec, 2 - crnt seg */
     4141     7942
     4142     7943        /********************/
     4143     7944
     4144     7945         /***
     4145     7946          *** Position to next segment or record of block. If end of block, get next.
     4146     7947          ***/
     4147     7948
     4148     7949    3              DO CASE(SEG);

   7949  1 013424   200073 470500                    LDP0    @SEG,,AUTO
         1 013425   000000 235100                    LDA     0,,PR0
         1 013426   000003 115007                    CMPA    3,DL
         1 013427   013431 602005 1                  TNC     s:7949+5,AL
         1 013430   013553 710000 1                  TRA     CHKNEWBLK
         1 013431   013434 710000 1                  TRA     s:7951
         1 013432   013454 710000 1                  TRA     s:7962
         1 013433   013511 710000 1                  TRA     s:7972

     4149     7950    3                 CASE(0);                  /* Next segment                       */

     4150     7951    4                    CALL FTW_PNSB WHENALTRETURN DO;

   7951  1 013434   013366 701000 1                  TSX1    FTW_PNSB
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:564  
         1 013435   013437 702000 1                  TSX2    s:7952
         1 013436   013452 710000 1                  TRA     s:7960

     4151     7952    5                       IF F$DCB.OLDIOERR = 1 THEN DO; /* Working on an I/O error? */

   7952  1 013437   200030 470500                    LDP0    JDCB$,,AUTO
         1 013440   000102 236100                    LDQ     66,,PR0
         1 013441   140000 376003                    ANQ     49152,DU
         1 013442   040000 116003                    CMPQ    16384,DU
         1 013443   013553 601000 1                  TNZ     CHKNEWBLK

     4152     7953    5                          F$DCB.TYC.IOERR(1) = '1'B;
              7953                                   /* Yes, tell user we're at end of blk. */

   7953  1 013444   001000 236003                    LDQ     512,DU
         1 013445   000002 256100                    ORSQ    2,,PR0

     4153     7954    5                          B$JIT.ERR = '0'B; /* Clear error.                      */

   7954  1 013446   000000 471400 xsym               LDP1    B$JIT$
         1 013447   100012 450100                    STZ     10,,PR1

     4154     7955    5                          ALTRETURN;

   7955  1 013450   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013451   000000 702211                    TSX2  ! 0,X1

     4155     7956    5                          END;
     4156     7957    4                       ELSE
     4157     7958    4                          GOTO CHKNEWBLK;
     4158     7959    4                       END;
     4159     7960    3                    RETURN;

   7960  1 013452   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013453   000001 702211                    TSX2  ! 1,X1

     4160     7961    3                 CASE(1);                  /* Next record                        */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:565  

     4161     7962    3                    CALL FTW_PNRB ALTRET(CHKNEWBLK);

   7962  1 013454   013263 701000 1                  TSX1    FTW_PNRB
         1 013455   013553 702000 1                  TSX2    CHKNEWBLK

     4162     7963    3                    F$DCB.CRECNO = F$DCB.CRECNO + 1;

   7963  1 013456   200030 470500                    LDP0    JDCB$,,AUTO
         1 013457   000071 054100                    AOS     57,,PR0

     4163     7964    3                    IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# OR F$DCB.ORG = %
              7964                             RELATIVE#

   7964  1 013460   000032 236100                    LDQ     26,,PR0
         1 013461   777000 376003                    ANQ     -512,DU
         1 013462   002000 116003                    CMPQ    1024,DU
         1 013463   013470 600000 1                  TZE     s:7966
         1 013464   006000 116003                    CMPQ    3072,DU
         1 013465   013470 600000 1                  TZE     s:7966
         1 013466   005000 116003                    CMPQ    2560,DU
         1 013467   013504 601000 1                  TNZ     s:7969

     4164     7965    4                    THEN DO;

     4165     7966    4                      IF F$DCB.ACS = %SEQUEN# AND (F$DCB.FUN = %CREATE# OR F$DCB.FUN =
              7966                                %UPDATE#)

   7966  1 013470   000036 236100                    LDQ     30,,PR0
         1 013471   000777 376007                    ANQ     511,DL
         1 013472   000001 116007                    CMPQ    1,DL
         1 013473   013504 601000 1                  TNZ     s:7969
         1 013474   000032 236100                    LDQ     26,,PR0
         1 013475   000777 376003                    ANQ     511,DU
         1 013476   000003 116003                    CMPQ    3,DU
         1 013477   013502 600000 1                  TZE     s:7967
         1 013500   000001 116003                    CMPQ    1,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:566  
         1 013501   013504 601000 1                  TNZ     s:7969

     4166     7967    4                       THEN CALL FTW_SAVE_LAST_KEY;

   7967  1 013502   011716 701000 1                  TSX1    FTW_SAVE_LAST_KEY
         1 013503   000000 011000                    NOP     0

     4167     7968    4                       END;

     4168     7969    3                    F$DCB.RPOS = %YES#;

   7969  1 013504   200030 470500                    LDP0    JDCB$,,AUTO
         1 013505   010000 236007                    LDQ     4096,DL
         1 013506   000064 256100                    ORSQ    52,,PR0

     4169     7970    3                    RETURN;

   7970  1 013507   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013510   000001 702211                    TSX2  ! 1,X1

     4170     7971    3                 CASE(2);                  /* Current segment                    */

     4171     7972    3                   IF F$DCB.TRNC ~= FT_NOTRUNC# THEN CALL FTW_UNDOTRUNC ALTRET(JUSTALT
              7972                             );

   7972  1 013511   200030 471500                    LDP1    JDCB$,,AUTO
         1 013512   100064 236100                    LDQ     52,,PR1
         1 013513   000014 316007                    CANQ    12,DL
         1 013514   013517 600000 1                  TZE     s:7973

   7972  1 013515   012043 701000 1                  TSX1    FTW_UNDOTRUNC
         1 013516   014130 702000 1                  TSX2    JUSTALT

     4172     7973    3                    IF F$DCB.NEW_FSECT

   7973  1 013517   200030 470500                    LDP0    JDCB$,,AUTO
         1 013520   000064 236100                    LDQ     52,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:567  
         1 013521   000001 316003                    CANQ    1,DU
         1 013522   013534 600000 1                  TZE     s:7979

     4173     7974    4                    THEN DO; /* At beginning of file section...might not have FPOOL */

     4174     7975    4                       CALL FTW_GETAFPOOL$; /* Get FPOOL buffer (pointer)        */

   7975  1 013523   014132 701000 1                  TSX1    FTW_GETAFPOOL$
         1 013524   000000 011000                    NOP     0

     4175     7976    4                       IF F$DCB.FSECT = 1 THEN F$DCB.SPAN = %NO#; /* First seg   */

   7976  1 013525   200030 470500                    LDP0    JDCB$,,AUTO
         1 013526   000077 220100                    LDX0    63,,PR0
         1 013527   000001 100003                    CMPX0   1,DU
         1 013530   013553 601000 1                  TNZ     CHKNEWBLK

   7976  1 013531   000005 236000 2                  LDQ     5
         1 013532   000064 356100                    ANSQ    52,,PR0

     4176     7977    4                       END;

   7977  1 013533   013553 710000 1                  TRA     CHKNEWBLK

     4177     7978    4                    ELSE DO;               /* Not at beginning of file section   */

     4178     7979    4                       AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));

   7979  1 013534   000070 236100                    LDQ     56,,PR0
         1 013535   000041 772000                    QRL     33
         1 013536   000115 236106                    LDQ     77,QL,PR0
         1 013537   000033 772000                    QRL     27
         1 013540   000037 376007                    ANQ     31,DL
         1 013541   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 013542   200007 756100                    STQ     AFPOOL$,,AUTO

     4179     7980    4                       CALL FTW_CHKSEG ALTRET(CHKNEWBLK);
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:568  

   7980  1 013543   014373 701000 1                  TSX1    FTW_CHKSEG
         1 013544   013553 702000 1                  TSX2    CHKNEWBLK

     4180     7981    4                       CALL FTW_CHKSEGINFO ALTRET(JUSTALT);

   7981  1 013545   013410 701000 1                  TSX1    FTW_CHKSEGINFO
         1 013546   014130 702000 1                  TSX2    JUSTALT

     4181     7982    4                       B$JIT.ERR = '0'B;   /* No span errors on first segment    */

   7982  1 013547   000000 470400 xsym               LDP0    B$JIT$
         1 013550   000012 450100                    STZ     10,,PR0

     4182     7983    4                       RETURN;

   7983  1 013551   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013552   000001 702211                    TSX2  ! 1,X1

     4183     7984    4                       END;
     4184     7985    3                 END;

   7981  1 013553                       CHKNEWBLK    null
     4185     7986
     4186     7987
     4187     7988         /***
     4188     7989          *** If this is the last block of the file we're at file end.
     4189     7990          ***/
     4190     7991
     4191     7992    2   CHKNEWBLK: ;
     4192     7993    2              IF B$JIT.ERR THEN ALTRETURN;

   7993  1 013553   000000 470400 xsym               LDP0    B$JIT$
         1 013554   000012 235100                    LDA     10,,PR0
         1 013555   013560 600000 1                  TZE     s:7994

   7993  1 013556   200072 221300                    LDX1  ! @FP$+1,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:569  
         1 013557   000000 702211                    TSX2  ! 0,X1

     4193     7994    2              IF F$DCB.LSTBLK

   7994  1 013560   200030 471500                    LDP1    JDCB$,,AUTO
         1 013561   100064 236100                    LDQ     52,,PR1
         1 013562   000001 316007                    CANQ    1,DL
         1 013563   013604 600000 1                  TZE     NEEDNXTBLK

     4194     7995    3              THEN DO;                     /* Last block of file                 */

     4195     7996    3                 IF SEG = 1 AND NOT F$DCB.RPOS

   7996  1 013564   200073 473500                    LDP3    @SEG,,AUTO
         1 013565   300000 235100                    LDA     0,,PR3
         1 013566   000001 115007                    CMPA    1,DL
         1 013567   013600 601000 1                  TNZ     s:8002
         1 013570   010000 316007                    CANQ    4096,DL
         1 013571   013600 601000 1                  TNZ     s:8002

     4196     7997    4                 THEN DO;                 /* Encountered EOF...not already there */

     4197     7998    4                    F$DCB.CRECNO = F$DCB.CRECNO + 1;

   7998  1 013572   100071 054100                    AOS     57,,PR1

     4198     7999    4                    F$DCB.NRECX = F$DCB.NRECX + 1;

   7999  1 013573   100100 220100                    LDX0    64,,PR1
         1 013574   000001 621010                    EAX1    1,X0
         1 013575   100100 741100                    STX1    64,,PR1

     4199     8000    4                    F$DCB.RPOS = %YES#;

   8000  1 013576   010000 236007                    LDQ     4096,DL
         1 013577   100064 256100                    ORSQ    52,,PR1

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:570  
     4200     8001    4                    END;

     4201     8002    3                 B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF */

   8002  1 013600   000025 236000 0                  LDQ     E_EOF
         1 013601   000012 756100                    STQ     10,,PR0

     4202     8003    3                 ALTRETURN;

   8003  1 013602   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013603   000000 702211                    TSX2  ! 0,X1

     4203     8004    3                 END;
     4204     8005
     4205     8006         /***
     4206     8007          *** Not last block of file.  Read the next block.
     4207     8008          ***/
     4208     8009
     4209     8010    3              DO WHILE('1'B);             /* Until next record is found or error */

   8004  1 013604                       NEEDNXTBLK   null
     4210     8011    3   NEEDNXTBLK:   ;
     4211     8012    3                 IF B$JIT.ERR THEN

   8012  1 013604   000000 470400 xsym               LDP0    B$JIT$
         1 013605   000012 235100                    LDA     10,,PR0
         1 013606   013633 600000 1                  TZE     s:8022

     4212     8013    4                    IF F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2 THEN DO;

   8013  1 013607   200030 471500                    LDP1    JDCB$,,AUTO
         1 013610   100102 236100                    LDQ     66,,PR1
         1 013611   140000 376003                    ANQ     49152,DU
         1 013612   040000 116003                    CMPQ    16384,DU
         1 013613   013616 600000 1                  TZE     s:8014
         1 013614   100000 116003                    CMPQ    32768,DU
         1 013615   013631 601000 1                  TNZ     s:8021
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:571  

     4213     8014    4                       IF B$JIT.ERR.CODE = %E$LD THEN

   8014  1 013616   000012 236100                    LDQ     10,,PR0
         1 013617   377770 376007                    ANQ     131064,DL
         1 013620   000070 116007                    CMPQ    56,DL
         1 013621   013625 601000 1                  TNZ     s:8017

     4214     8015    4                          F$DCB.TYC.LD(1) = '1'B;

   8015  1 013622   002000 236003                    LDQ     1024,DU
         1 013623   100002 256100                    ORSQ    2,,PR1
         1 013624   013627 710000 1                  TRA     s:8018

     4215     8016    4                       ELSE
     4216     8017    4                          F$DCB.TYC.DI(1) = '1'B;

   8017  1 013625   000400 236003                    LDQ     256,DU
         1 013626   100002 256100                    ORSQ    2,,PR1

     4217     8018    4                       B$JIT.ERR = '0'B;

   8018  1 013627   000012 450100                    STZ     10,,PR0

     4218     8019    4                       END;

   8019  1 013630   013633 710000 1                  TRA     s:8022

     4219     8020    3                    ELSE
     4220     8021    3                       ALTRETURN;

   8021  1 013631   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013632   000000 702211                    TSX2  ! 0,X1

     4221     8022    4                 DO CASE(F$DCB.OLDIOERR);

   8022  1 013633   200030 471500                    LDP1    JDCB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:572  
         1 013634   100102 236100                    LDQ     66,,PR1
         1 013635   000040 772000                    QRL     32
         1 013636   000003 376007                    ANQ     3,DL
         1 013637   000003 116007                    CMPQ    3,DL
         1 013640   013642 602006 1                  TNC     s:8022+7,QL
         1 013641   013662 710000 1                  TRA     s:8030
         1 013642   013662 710000 1                  TRA     s:8030
         1 013643   013645 710000 1                  TRA     s:8024
         1 013644   013660 710000 1                  TRA     s:8028

     4222     8023    4                    CASE(1);               /* Last block got an I/O error.       */

     4223     8024    4                       F$DCB.ARS = 1;

   8024  1 013645   000001 235007                    LDA     1,DL
         1 013646   100000 755100                    STA     0,,PR1

     4224     8025    4                       CALL FTI$SPREC ALTRET(JUSTALT); /* Space past bad block.  */

   8025  1 013647   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 013650   000000 701000 xent               TSX1    FTI$SPREC
         1 013651   014130 702000 1                  TSX2    JUSTALT

     4225     8026    4                       F$DCB.OLDIOERR = 2;

   8026  1 013652   200030 470500                    LDP0    JDCB$,,AUTO
         1 013653   000102 236100                    LDQ     66,,PR0
         1 013654   000027 376000 2                  ANQ     23
         1 013655   100000 276003                    ORQ     32768,DU
         1 013656   000102 756100                    STQ     66,,PR0
         1 013657   013662 710000 1                  TRA     s:8030

     4226     8027    4                    CASE(2);               /* We're way past the error.          */

     4227     8028    4                       F$DCB.OLDIOERR = 3;

   8028  1 013660   140000 236003                    LDQ     49152,DU
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:573  
         1 013661   100102 256100                    ORSQ    66,,PR1

     4228     8029    4                    END;

     4229     8030    3                 F$DCB.ARS = F$DCB.BLKL;

   8030  1 013662   200030 470500                    LDP0    JDCB$,,AUTO
         1 013663   000033 236100                    LDQ     27,,PR0
         1 013664   000022 772000                    QRL     18
         1 013665   000000 756100                    STQ     0,,PR0

     4230     8031    4                 CALL FTW_RDFPOOL WHENALTRETURN DO;

   8031  1 013666   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 013667   013671 702000 1                  TSX2    s:8032
         1 013670   013750 710000 1                  TRA     s:8050

     4231     8032    4                    IF B$JIT.ERR.CODE ~= %E$IOERR THEN

   8032  1 013671   000000 470400 xsym               LDP0    B$JIT$
         1 013672   000012 236100                    LDQ     10,,PR0
         1 013673   377770 376007                    ANQ     131064,DL
         1 013674   000100 116007                    CMPQ    64,DL
         1 013675   013700 600000 1                  TZE     s:8034

     4232     8033    4                       ALTRETURN;

   8033  1 013676   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013677   000000 702211                    TSX2  ! 0,X1

     4233     8034    4                    FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                     */

   8034  1 013700   200016 471500                    LDP1    DDDT$,,AUTO
         1 013701   000030 236000 2                  LDQ     24
         1 013702   100006 356100                    ANSQ    6,,PR1

     4234     8035    5                    IF NOT F$DCB.IOERROK AND NOT IOERROK THEN DO;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:574  

   8035  1 013703   200030 473500                    LDP3    JDCB$,,AUTO
         1 013704   300031 236100                    LDQ     25,,PR3
         1 013705   020000 316003                    CANQ    8192,DU
         1 013706   013733 601000 1                  TNZ     s:8044
         1 013707   200027 234100                    SZN     IOERROK,,AUTO
         1 013710   013733 604000 1                  TMI     s:8044

     4235     8036    5                       ERRSAV = B$JIT.ERR; /* Save the error.                    */

   8036  1 013711   000012 236100                    LDQ     10,,PR0
         1 013712   200023 756100                    STQ     ERRSAV,,AUTO

     4236     8037    5                       F$DCB.ARS = -1;     /* Back up to the previous block.     */

   8037  1 013713   000001 335007                    LCA     1,DL
         1 013714   300000 755100                    STA     0,,PR3

     4237     8038    5                       CALL FTI$SPREC ALTRET(JUSTALT);

   8038  1 013715   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 013716   000000 701000 xent               TSX1    FTI$SPREC
         1 013717   014130 702000 1                  TSX2    JUSTALT

     4238     8039    5                       F$DCB.ARS = F$DCB.BLKL; /* Reread it.                     */

   8039  1 013720   200030 470500                    LDP0    JDCB$,,AUTO
         1 013721   000033 236100                    LDQ     27,,PR0
         1 013722   000022 772000                    QRL     18
         1 013723   000000 756100                    STQ     0,,PR0

     4239     8040    5                       CALL FTW_RDFPOOL ALTRET(JUSTALT);

   8040  1 013724   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 013725   014130 702000 1                  TSX2    JUSTALT

     4240     8041    5                       B$JIT.ERR = ERRSAV; /* Restore the error.                 */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:575  

   8041  1 013726   200023 236100                    LDQ     ERRSAV,,AUTO
         1 013727   000000 470400 xsym               LDP0    B$JIT$
         1 013730   000012 756100                    STQ     10,,PR0

     4241     8042    5                       ALTRETURN;

   8042  1 013731   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 013732   000000 702211                    TSX2  ! 0,X1

     4242     8043    5                       END;
     4243     8044    4                    CALL FTW_GETBLKLEN;    /* Get and check real block length.   */

   8044  1 013733   012171 701000 1                  TSX1    FTW_GETBLKLEN
         1 013734   000000 011000                    NOP     0

     4244     8045    4                    F$DCB.OLDIOERR = 1;    /* Remember we hit an I/O error.      */

   8045  1 013735   200030 470500                    LDP0    JDCB$,,AUTO
         1 013736   000102 236100                    LDQ     66,,PR0
         1 013737   000027 376000 2                  ANQ     23
         1 013740   040000 276003                    ORQ     16384,DU
         1 013741   000102 756100                    STQ     66,,PR0

     4245     8046    4                    F$DCB.BLKLEN = F$DCB.ARS; /* Save the size of the block.     */

   8046  1 013742   000000 720100                    LXL0    0,,PR0
         1 013743   000074 440100                    SXL0    60,,PR0

     4246     8047    4                    F$DCB.TYC.IOERR(1) = '1'B; /* Set IOERR in TYC.              */

   8047  1 013744   001000 236003                    LDQ     512,DU
         1 013745   000002 256100                    ORSQ    2,,PR0

     4247     8048    4                    B$JIT.ERR = '0'B;      /* Clear error.                       */

   8048  1 013746   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:576  
         1 013747   100012 450100                    STZ     10,,PR1

     4248     8049    4                    END;

     4249     8050    4                 IF NOT F$DCB.TYC.EOF(1) THEN DO; /* File mark not encountered   */

   8050  1 013750   200030 470500                    LDP0    JDCB$,,AUTO
         1 013751   000002 236100                    LDQ     2,,PR0
         1 013752   004000 316003                    CANQ    2048,DU
         1 013753   014060 601000 1                  TNZ     s:8083

     4250     8051    4                    F$DCB.NEW_FSECT = %NO#; /* Have block from section           */

   8051  1 013754   000034 236000 2                  LDQ     28
         1 013755   000064 356100                    ANSQ    52,,PR0

     4251     8052    4                    IF F$DCB.AFTRBLK THEN

   8052  1 013756   000064 236100                    LDQ     52,,PR0
         1 013757   000002 316007                    CANQ    2,DL
         1 013760   013763 600000 1                  TZE     s:8055

     4252     8053    4                       F$DCB.PRECNO = F$DCB.PRECNO + 1; /* Now after block       */

   8053  1 013761   000072 054100                    AOS     58,,PR0
         1 013762   013765 710000 1                  TRA     s:8056

     4253     8054    4                    ELSE
     4254     8055    4                       F$DCB.AFTRBLK = %YES#;

   8055  1 013763   000002 236007                    LDQ     2,DL
         1 013764   000064 256100                    ORSQ    52,,PR0

     4255     8056    5                    IF SEG ~= 1 THEN DO;   /* Position to first segment          */

   8056  1 013765   200073 471500                    LDP1    @SEG,,AUTO
         1 013766   100000 235100                    LDA     0,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:577  
         1 013767   000001 115007                    CMPA    1,DL
         1 013770   014026 600000 1                  TZE     s:8069

     4256     8057    5                       F$DCB.CRECX = F$DCB.BOL;

   8057  1 013771   000034 720100                    LXL0    28,,PR0
         1 013772   000777 360003                    ANX0    511,DU
         1 013773   000067 440100                    SXL0    55,,PR0

     4257     8058    5                       CALL FTW_CHKSEG ALTRET(NEEDNXTBLK);

   8058  1 013774   014373 701000 1                  TSX1    FTW_CHKSEG
         1 013775   013604 702000 1                  TSX2    NEEDNXTBLK

     4258     8059    5                       CALL FTW_CHKSEGINFO ALTRET(JUSTALT);

   8059  1 013776   013410 701000 1                  TSX1    FTW_CHKSEGINFO
         1 013777   014130 702000 1                  TSX2    JUSTALT

     4259     8060    6                      IF B$JIT.ERR AND (F$DCB.OLDIOERR = 1 OR F$DCB.OLDIOERR = 2) THEN
              8060                                DO;

   8060  1 014000   000000 470400 xsym               LDP0    B$JIT$
         1 014001   000012 235100                    LDA     10,,PR0
         1 014002   014015 600000 1                  TZE     s:8064
         1 014003   200030 471500                    LDP1    JDCB$,,AUTO
         1 014004   100102 236100                    LDQ     66,,PR1
         1 014005   140000 376003                    ANQ     49152,DU
         1 014006   040000 116003                    CMPQ    16384,DU
         1 014007   014012 600000 1                  TZE     s:8061
         1 014010   100000 116003                    CMPQ    32768,DU
         1 014011   014015 601000 1                  TNZ     s:8064

     4260     8061    6                          F$DCB.TYC.DI(1) = '1'B;

   8061  1 014012   000400 236003                    LDQ     256,DU
         1 014013   100002 256100                    ORSQ    2,,PR1
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:578  

     4261     8062    6                          B$JIT.ERR = '0'B;

   8062  1 014014   000012 450100                    STZ     10,,PR0

     4262     8063    6                          END;

     4263     8064    5                       F$DCB.GDISP = RCWSIZE;

   8064  1 014015   200036 235100                    LDA     RCWSIZE,,AUTO
         1 014016   200030 471500                    LDP1    JDCB$,,AUTO
         1 014017   100101 755100                    STA     65,,PR1

     4264     8065    5                       IF SEG = 0 THEN

   8065  1 014020   200073 473500                    LDP3    @SEG,,AUTO
         1 014021   300000 235100                    LDA     0,,PR3
         1 014022   014056 601000 1                  TNZ     s:8075

     4265     8066    5                          F$DCB.NRECX = 0;

   8066  1 014023   000000 220003                    LDX0    0,DU
         1 014024   100100 740100                    STX0    64,,PR1

     4266     8067    5                       END;

   8067  1 014025   014056 710000 1                  TRA     s:8075

     4267     8068    5                    ELSE DO;

     4268     8069    5                       CALL FTW_P1RB ALTRET(NEEDNXTBLK);
              8069                                /* Position to 1st record of block */

   8069  1 014026   013177 701000 1                  TSX1    FTW_P1RB
         1 014027   013604 702000 1                  TSX2    NEEDNXTBLK

     4269     8070    5                       F$DCB.CRECNO = F$DCB.CRECNO + 1;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:579  

   8070  1 014030   200030 470500                    LDP0    JDCB$,,AUTO
         1 014031   000071 054100                    AOS     57,,PR0

     4270     8071    5                      IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED# OR F$DCB.ORG = %
              8071                                RELATIVE# THEN

   8071  1 014032   000032 236100                    LDQ     26,,PR0
         1 014033   777000 376003                    ANQ     -512,DU
         1 014034   002000 116003                    CMPQ    1024,DU
         1 014035   014042 600000 1                  TZE     s:8072
         1 014036   006000 116003                    CMPQ    3072,DU
         1 014037   014042 600000 1                  TZE     s:8072
         1 014040   005000 116003                    CMPQ    2560,DU
         1 014041   014056 601000 1                  TNZ     s:8075

     4271     8072    5                          IF F$DCB.ACS = %SEQUEN# AND (F$DCB.FUN = %CREATE# OR F$DCB.
              8072                                   FUN = %UPDATE#) THEN

   8072  1 014042   000036 236100                    LDQ     30,,PR0
         1 014043   000777 376007                    ANQ     511,DL
         1 014044   000001 116007                    CMPQ    1,DL
         1 014045   014056 601000 1                  TNZ     s:8075
         1 014046   000032 236100                    LDQ     26,,PR0
         1 014047   000777 376003                    ANQ     511,DU
         1 014050   000003 116003                    CMPQ    3,DU
         1 014051   014054 600000 1                  TZE     s:8073
         1 014052   000001 116003                    CMPQ    1,DU
         1 014053   014056 601000 1                  TNZ     s:8075

     4272     8073    5                             CALL FTW_SAVE_LAST_KEY;

   8073  1 014054   011716 701000 1                  TSX1    FTW_SAVE_LAST_KEY
         1 014055   000000 011000                    NOP     0

     4273     8074    5                       END;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:580  
     4274     8075    4                    RETURN;

   8075  1 014056   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 014057   000001 702211                    TSX2  ! 1,X1

     4275     8076    4                    END;
     4276     8077
     4277     8078         /***
     4278     8079             *** A tape mark was encountered while trying to read the next
     4279     8080             *** block (tape record)--do end of file section processing.
     4280     8081             ***/
     4281     8082
     4282     8083    3                 CALL FTL$EOF(EOXL) ALTRET(CHKCVOLE); /* Handle following labels */

   8083  1 014060   200022 631500                    EPPR1   EOXL,,AUTO
         1 014061   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 014062   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 014063   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014064   000000 701000 xent               TSX1    FTL$EOF
         1 014065   014073 702000 1                  TSX2    CHKCVOLE

     4283     8084    3                 F$DCB.PRECNO = 0;         /* Before first block                 */

   8084  1 014066   200030 470500                    LDP0    JDCB$,,AUTO
         1 014067   000072 450100                    STZ     58,,PR0

     4284     8085    3                 F$DCB.AFTRBLK = %YES#;

   8085  1 014070   000002 236007                    LDQ     2,DL
         1 014071   000064 256100                    ORSQ    52,,PR0

     4285     8086    3                 END;

   8086  1 014072   013604 710000 1                  TRA     NEEDNXTBLK

   8072  1 014073                       CHKCVOLE     null
     4286     8087
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:581  
     4287     8088         /***
     4288     8089          *** If end of file, "position" to next (nonexistent) record.
     4289     8090          *** If nothing in this section, fake a block.
     4290     8091          ***/
     4291     8092
     4292     8093    2   CHKCVOLE:  ;
     4293     8094    2              IF B$JIT.ERR.CODE = %E$EOF

   8094  1 014073   000000 470400 xsym               LDP0    B$JIT$
         1 014074   000012 236100                    LDQ     10,,PR0
         1 014075   377770 376007                    ANQ     131064,DL
         1 014076   000060 116007                    CMPQ    48,DL
         1 014077   014107 601000 1                  TNZ     s:8101

     4294     8095    3              THEN DO;                  /* First eof encounter...position to eof */

     4295     8096    3                 F$DCB.CRECNO = F$DCB.CRECNO + 1;

   8096  1 014100   200030 471500                    LDP1    JDCB$,,AUTO
         1 014101   100071 054100                    AOS     57,,PR1

     4296     8097    3                 F$DCB.NRECX = F$DCB.NRECX + 1;

   8097  1 014102   100100 220100                    LDX0    64,,PR1
         1 014103   000001 621010                    EAX1    1,X0
         1 014104   100100 741100                    STX1    64,,PR1

     4297     8098    3                 F$DCB.RPOS = %YES#;

   8098  1 014105   010000 236007                    LDQ     4096,DL
         1 014106   100064 256100                    ORSQ    52,,PR1

     4298     8099    3                 END;

     4299     8100
     4300     8101    2              IF F$DCB.PRECNO <= 0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:582  
   8101  1 014107   200030 471500                    LDP1    JDCB$,,AUTO
         1 014110   100072 235100                    LDA     58,,PR1
         1 014111   014130 605400 1                  TPNZ    JUSTALT

     4301     8102    3              THEN DO;    /* No data blocks in this section...get ready to write */

     4302     8103    3                 F$DCB.PRECNO = 1;

   8103  1 014112   000001 236007                    LDQ     1,DL
         1 014113   100072 756100                    STQ     58,,PR1

     4303     8104    3                 F$DCB.AFTRBLK = %NO#;

   8104  1 014114   000035 236000 2                  LDQ     29
         1 014115   100064 356100                    ANSQ    52,,PR1

     4304     8105    3                 F$DCB.BLKLEN = F$DCB.BOL;

   8105  1 014116   100034 720100                    LXL0    28,,PR1
         1 014117   000777 360003                    ANX0    511,DU
         1 014120   100074 440100                    SXL0    60,,PR1

     4305     8106    3                 F$DCB.CRECX = F$DCB.BOL;

   8106  1 014121   100067 440100                    SXL0    55,,PR1

     4306     8107    3                 F$DCB.NRECX = 0;

   8107  1 014122   000000 221003                    LDX1    0,DU
         1 014123   100100 741100                    STX1    64,,PR1

     4307     8108    3                 F$DCB.GDISP = RCWSIZE;

   8108  1 014124   200036 235100                    LDA     RCWSIZE,,AUTO
         1 014125   100101 755100                    STA     65,,PR1

     4308     8109    3                 CALL FTW_SETBLKLEN;       /* Get ready to add records           */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:583  

   8109  1 014126   012232 701000 1                  TSX1    FTW_SETBLKLEN
         1 014127   000000 011000                    NOP     0

     4309     8110    3                 END;

   8110  1 014130                       JUSTALT      null
     4310     8111
     4311     8112    2   JUSTALT:   ;
     4312     8113    2              ALTRETURN;

   8113  1 014130   200072 221300                    LDX1  ! @FP$+1,,AUTO
         1 014131   000000 702211                    TSX2  ! 0,X1

     4313     8114    2      END FTW_PNRS;
     4314     8115        /*********************************************************************/
     4315     8116        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:584  
     4316     8117        /********************************************************************/
     4317     8118    1   FTW_GETAFPOOL$: PROC;

   8118  1 014132   200074 741300       FTW_GETAFPO* STX1  ! @SIZE+1,,AUTO

     4318     8119        /*F*     NAME: FTW_GETAFPOOL$
     4319     8120                 PURPOSE: Get (FPOOL and) pointer to current FPOOL buffer.
     4320     8121         ***/
     4321     8122
     4322     8123        /********************/
     4323     8124
     4324     8125    2              IF F$DCB.BFR.BUFX(F$DCB.CBUFNUM) = 0

   8125  1 014133   200030 470500                    LDP0    JDCB$,,AUTO
         1 014134   000070 236100                    LDQ     56,,PR0
         1 014135   000041 772000                    QRL     33
         1 014136   000115 236106                    LDQ     77,QL,PR0
         1 014137   037000 316003                    CANQ    15872,DU
         1 014140   014166 601000 1                  TNZ     s:8130

     4325     8126    3              THEN DO;                     /* Get FPOOL                          */

     4326     8127    3                 CALL FMD$GETBUF(FT_RBUF1,(F$DCB.BLKL+4095)/4096,AFPOOL$);

   8127  1 014141   000033 236100                    LDQ     27,,PR0
         1 014142   000022 772000                    QRL     18
         1 014143   007777 036007                    ADLQ    4095,DL
         1 014144   000014 772000                    QRL     12
         1 014145   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 014146   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 014147   200115 451500                    STP1    @FIELD_LENGTH+5,,AUTO
         1 014150   200112 633500                    EPPR3   @FIELD_LENGTH+2,,AUTO
         1 014151   200114 453500                    STP3    @FIELD_LENGTH+4,,AUTO
         1 014152   000020 236000 2                  LDQ     16
         1 014153   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 014154   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 014155   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:585  
         1 014156   000000 701000 xent               TSX1    FMD$GETBUF
         1 014157   000000 011000                    NOP     0

     4327     8128    3                 F$DCB.CBUFNUM = FT_RBUF1;

   8128  1 014160   200030 470500                    LDP0    JDCB$,,AUTO
         1 014161   000070 236100                    LDQ     56,,PR0
         1 014162   000022 376000 2                  ANQ     18
         1 014163   300000 276003                    ORQ     98304,DU
         1 014164   000070 756100                    STQ     56,,PR0

     4328     8129    3                 END;

   8129  1 014165   014175 710000 1                  TRA     s:8131

     4329     8130    2              ELSE AFPOOL$ = FM$BUF$(F$DCB.BFR.BUFX(F$DCB.CBUFNUM));

   8130  1 014166   000070 236100                    LDQ     56,,PR0
         1 014167   000041 772000                    QRL     33
         1 014170   000115 236106                    LDQ     77,QL,PR0
         1 014171   000033 772000                    QRL     27
         1 014172   000037 376007                    ANQ     31,DL
         1 014173   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 014174   200007 756100                    STQ     AFPOOL$,,AUTO

     4330     8131    2              RETURN;

   8131  1 014175   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 014176   000001 702211                    TSX2  ! 1,X1

     4331     8132
     4332     8133    2      END FTW_GETAFPOOL$;
     4333     8134        /********************************************************************/
     4334     8135        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:586  
     4335     8136        /********************************************************************/
     4336     8137    1   FTW_TMPFPOOL: PROC(FP$,FPNUM,SIZE) ALTRET;

   8137  1 014177   200070 741300       FTW_TMPFPOOL STX1  ! TEMP+1,,AUTO

     4337     8138        /*F*     NAME: FTW_TMPFPOOL
     4338     8139                 PURPOSE: Get an unused FPOOL to use as a temporary buffer.
     4339     8140         ***/
     4340     8141
     4341     8142    2     DCL FP$ PTR;
     4342     8143    2     DCL FPNUM UBIN;
     4343     8144    2     DCL SIZE UBIN;
     4344     8145
     4345     8146        /********************/
     4346     8147
     4347     8148    2              FP$ = ADDR(NIL);

   8148  1 014200   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 014201   200071 470500                    LDP0    @FP$,,AUTO
         1 014202   000000 756100                    STQ     0,,PR0

     4348     8149    2   GETFP:
     4349     8150    3              DO I = 0 TO 4;

   8150  1 014203   200026 450100       GETFP        STZ     I,,AUTO

     4350     8151    4                 IF F$DCB.BFR.BUFX(I) = 0 THEN DO; /* Find an unused FPOOL.      */

   8151  1 014204   200030 470500                    LDP0    JDCB$,,AUTO
         1 014205   200026 720100                    LXL0    I,,AUTO
         1 014206   000115 236110                    LDQ     77,X0,PR0
         1 014207   037000 316003                    CANQ    15872,DU
         1 014210   014231 601000 1                  TNZ     s:8155

     4351     8152    4                    CALL FMD$GETBUF(I,(SIZE+4095)/4096,FP$);

   8152  1 014211   200073 471500                    LDP1    @SIZE,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:587  
         1 014212   100000 236100                    LDQ     0,,PR1
         1 014213   007777 036007                    ADLQ    4095,DL
         1 014214   000014 772000                    QRL     12
         1 014215   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 014216   200071 236100                    LDQ     @FP$,,AUTO
         1 014217   200115 756100                    STQ     @FIELD_LENGTH+5,,AUTO
         1 014220   200112 633500                    EPPR3   @FIELD_LENGTH+2,,AUTO
         1 014221   200114 453500                    STP3    @FIELD_LENGTH+4,,AUTO
         1 014222   200026 634500                    EPPR4   I,,AUTO
         1 014223   200113 454500                    STP4    @FIELD_LENGTH+3,,AUTO
         1 014224   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 014225   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 014226   000000 701000 xent               TSX1    FMD$GETBUF
         1 014227   000000 011000                    NOP     0

     4352     8153    4                    EXIT GETFP;

   8153  1 014230   014236 710000 1                  TRA     s:8156

     4353     8154    4                    END;
     4354     8155    3                 END GETFP;

   8155  1 014231   200026 235100                    LDA     I,,AUTO
         1 014232   000001 035007                    ADLA    1,DL
         1 014233   200026 755100                    STA     I,,AUTO
         1 014234   000005 115007                    CMPA    5,DL
         1 014235   014204 602000 1                  TNC     s:8151

     4355     8156    3              IF FP$ = ADDR(NIL) THEN DO;

   8156  1 014236   200071 470500                    LDP0    @FP$,,AUTO
         1 014237   000000 236100                    LDQ     0,,PR0
         1 014240   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 014241   014247 601000 1                  TNZ     s:8160

     4356     8157    3                 B$JIT.ERR = E_NOFPOOL; /*E* ERROR:  FTW-E$NOFPOOL */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:588  
   8157  1 014242   000036 236000 0                  LDQ     E_NOFPOOL
         1 014243   000000 471400 xsym               LDP1    B$JIT$
         1 014244   100012 756100                    STQ     10,,PR1

     4357     8158    3                 ALTRETURN;

   8158  1 014245   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 014246   000000 702211                    TSX2  ! 0,X1

     4358     8159    3                 END;
     4359     8160    2              FPNUM = I;

   8160  1 014247   200072 471500                    LDP1    @FPNUM,,AUTO
         1 014250   200026 235100                    LDA     I,,AUTO
         1 014251   100000 755100                    STA     0,,PR1

     4360     8161    2              RETURN;

   8161  1 014252   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 014253   000001 702211                    TSX2  ! 1,X1

     4361     8162
     4362     8163    2      END FTW_TMPFPOOL;
     4363     8164        /********************************************************************/
     4364     8165        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:589  
     4365     8166        /*********************************************************************/
     4366     8167    1   FTW_PNUR:  PROC ALTRET;

   8167  1 014254   200072 741300       FTW_PNUR     STX1  ! @FPNUM,,AUTO

     4367     8168        /*F*     NAME: FTW_PNUR
     4368     8169                 PURPOSE: Position (read) next record of user buffer format file.
     4369     8170         ***/
     4370     8171
     4371     8172        /********************/
     4372     8173
     4373     8174    2              AFPOOL$ = ADDR(TEMP);        /* Pointer to input buffer            */

   8174  1 014255   200047 630500                    EPPR0   TEMP,,AUTO
         1 014256   200007 450500                    STP0    AFPOOL$,,AUTO

     4374     8175    3              IF F$DCB.LSTBLK THEN DO;     /* At end of file                     */

   8175  1 014257   200030 471500                    LDP1    JDCB$,,AUTO
         1 014260   100064 236100                    LDQ     52,,PR1
         1 014261   000001 316007                    CANQ    1,DL
         1 014262   014270 600000 1                  TZE     s:8180

     4375     8176    3                 B$JIT.ERR = E_EOF; /*E* ERROR: FTW-E$EOF       */

   8176  1 014263   000025 236000 0                  LDQ     E_EOF
         1 014264   000000 473400 xsym               LDP3    B$JIT$
         1 014265   300012 756100                    STQ     10,,PR3

     4376     8177    3                 ALTRETURN;

   8177  1 014266   200072 221300                    LDX1  ! @FPNUM,,AUTO
         1 014267   000000 702211                    TSX2  ! 0,X1

     4377     8178    3                 END;
     4378     8179    3              DO WHILE('1'B);

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:590  
     4379     8180    4                 IF F$DCB.OLDIOERR = 1 THEN DO;
              8180                          /* Had an I/O error on the last block. */

   8180  1 014270   200030 470500                    LDP0    JDCB$,,AUTO
         1 014271   000102 236100                    LDQ     66,,PR0
         1 014272   140000 376003                    ANQ     49152,DU
         1 014273   040000 116003                    CMPQ    16384,DU
         1 014274   014305 601000 1                  TNZ     s:8185

     4380     8181    4                    F$DCB.ARS = 1;

   8181  1 014275   000001 235007                    LDA     1,DL
         1 014276   000000 755100                    STA     0,,PR0

     4381     8182    4                    CALL FTI$SPREC ALTRET(JUSTALT); /* Space past bad block.     */

   8182  1 014277   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 014300   000000 701000 xent               TSX1    FTI$SPREC
         1 014301   014371 702000 1                  TSX2    JUSTALT

     4382     8183    4                    F$DCB.OLDIOERR = 3;

   8183  1 014302   200030 470500                    LDP0    JDCB$,,AUTO
         1 014303   140000 236003                    LDQ     49152,DU
         1 014304   000102 256100                    ORSQ    66,,PR0

     4383     8184    4                    END;

     4384     8185    3                 F$DCB.ARS = 4;

   8185  1 014305   000004 235007                    LDA     4,DL
         1 014306   000000 755100                    STA     0,,PR0

     4385     8186    4                 CALL FTW_RDFPOOL WHENALTRETURN DO;

   8186  1 014307   015135 701000 1                  TSX1    FTW_RDFPOOL
         1 014310   014312 702000 1                  TSX2    s:8187
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:591  
         1 014311   014343 710000 1                  TRA     s:8196

     4386     8187    4                    IF B$JIT.ERR.CODE ~= %E$IOERR THEN

   8187  1 014312   000000 470400 xsym               LDP0    B$JIT$
         1 014313   000012 236100                    LDQ     10,,PR0
         1 014314   377770 376007                    ANQ     131064,DL
         1 014315   000100 116007                    CMPQ    64,DL
         1 014316   014321 600000 1                  TZE     s:8189

     4387     8188    4                       ALTRETURN;

   8188  1 014317   200072 221300                    LDX1  ! @FPNUM,,AUTO
         1 014320   000000 702211                    TSX2  ! 0,X1

     4388     8189    4                    FT$DDT.POSLOST = %NO#; /* Clear POSLOST.                     */

   8189  1 014321   200016 471500                    LDP1    DDDT$,,AUTO
         1 014322   000030 236000 2                  LDQ     24
         1 014323   100006 356100                    ANSQ    6,,PR1

     4389     8190    4                    IF NOT F$DCB.IOERROK AND NOT IOERROK THEN

   8190  1 014324   200030 473500                    LDP3    JDCB$,,AUTO
         1 014325   300031 236100                    LDQ     25,,PR3
         1 014326   020000 316003                    CANQ    8192,DU
         1 014327   014334 601000 1                  TNZ     s:8192
         1 014330   200027 234100                    SZN     IOERROK,,AUTO
         1 014331   014334 604000 1                  TMI     s:8192

     4390     8191    4                       ALTRETURN;

   8191  1 014332   200072 221300                    LDX1  ! @FPNUM,,AUTO
         1 014333   000000 702211                    TSX2  ! 0,X1

     4391     8192    4                    F$DCB.OLDIOERR = 1;

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:592  
   8192  1 014334   300102 236100                    LDQ     66,,PR3
         1 014335   000027 376000 2                  ANQ     23
         1 014336   040000 276003                    ORQ     16384,DU
         1 014337   300102 756100                    STQ     66,,PR3

     4392     8193    4                    F$DCB.TYC.IOERR(1) = '1'B;

   8193  1 014340   001000 236003                    LDQ     512,DU
         1 014341   300002 256100                    ORSQ    2,,PR3

     4393     8194    4                    B$JIT.ERR = '0'B;

   8194  1 014342   000012 450100                    STZ     10,,PR0

     4394     8195    4                    END;

     4395     8196    3                 CALL HFC$CACHECLR;        /* Clear cache to access real buffer  */

   8196  1 014343   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 014344   000000 701000 xent               TSX1    HFC$CACHECLR
         1 014345   000000 011000                    NOP     0

     4396     8197    3                 IF F$DCB.TYC.EOF(1) THEN

   8197  1 014346   200030 470500                    LDP0    JDCB$,,AUTO
         1 014347   000002 236100                    LDQ     2,,PR0
         1 014350   004000 316003                    CANQ    2048,DU
         1 014351   014361 600000 1                  TZE     s:8200

     4397     8198    3                    CALL FTL$EOF(EOXL) ALTRET(JUSTALT);
              8198                             /* Handle labels following file mark */

   8198  1 014352   200022 631500                    EPPR1   EOXL,,AUTO
         1 014353   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 014354   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 014355   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014356   000000 701000 xent               TSX1    FTL$EOF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:593  
         1 014357   014371 702000 1                  TSX2    JUSTALT
         1 014360   014270 710000 1                  TRA     s:8180

     4398     8199    4                 ELSE DO;                  /* Read next record                   */

     4399     8200    4                    F$DCB.PRECNO = F$DCB.PRECNO + 1;

   8200  1 014361   000072 054100                    AOS     58,,PR0

     4400     8201    4                    F$DCB.CRECNO = F$DCB.CRECNO + 1;

   8201  1 014362   000071 054100                    AOS     57,,PR0

     4401     8202    4                    F$DCB.LASTKEY = TEMP;

   8202  1 014363   200047 235100                    LDA     TEMP,,AUTO
         1 014364   000065 755100                    STA     53,,PR0

     4402     8203    4                    F$DCB.TAPTYP.HAVLASTKEY = %YES#;

   8203  1 014365   000040 236003                    LDQ     32,DU
         1 014366   000067 256100                    ORSQ    55,,PR0

     4403     8204    4                    RETURN;

   8204  1 014367   200072 221300                    LDX1  ! @FPNUM,,AUTO
         1 014370   000001 702211                    TSX2  ! 1,X1

     4404     8205    4                    END;
     4405     8206    3                 END;

   8203  1 014371                       JUSTALT      null
     4406     8207
     4407     8208    2   JUSTALT:   ;
     4408     8209    2              ALTRETURN;

   8209  1 014371   200072 221300                    LDX1  ! @FPNUM,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:594  
         1 014372   000000 702211                    TSX2  ! 0,X1

     4409     8210
     4410     8211    2      END FTW_PNUR;
     4411     8212        /*********************************************************************/
     4412     8213        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:595  
     4413     8214        /*********************************************************************/
     4414     8215    1   FTW_CHKSEG: PROC ALTRET;

   8215  1 014373   200102 741300       FTW_CHKSEG   STX1  ! @SIZE+7,,AUTO

     4415     8216        /*F*     NAME: FTW_CHKSEG
     4416     8217                 PURPOSE: Check if current input segment can reside within block.
     4417     8218         ***/
     4418     8219
     4419     8220        /********************/
     4420     8221
     4421     8222         /***
     4422     8223          *** If no RCW can exist in the remaining block portion,
     4423     8224          *** altreturn.
     4424     8225          ***/
     4425     8226
     4426     8227    3              DO CASE(RCWTYPE);

   8227  1 014374   200037 235100                    LDA     RCWTYPE,,AUTO
         1 014375   000003 115007                    CMPA    3,DL
         1 014376   014400 602005 1                  TNC     s:8227+4,AL
         1 014377   014510 710000 1                  TRA     s:8250
         1 014400   014420 710000 1                  TRA     s:8232
         1 014401   014454 710000 1                  TRA     s:8238
         1 014402   014403 710000 1                  TRA     s:8229

     4427     8228    3                 CASE(RCWNONE#);

     4428     8229    3                    IF F$DCB.CRECX + F$DCB.RECL > F$DCB.BLKLEN THEN GOTO SETBLKLEN;

   8229  1 014403   200030 470500                    LDP0    JDCB$,,AUTO
         1 014404   000033 236100                    LDQ     27,,PR0
         1 014405   777777 376007                    ANQ     -1,DL
         1 014406   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 014407   000067 236100                    LDQ     55,,PR0
         1 014410   777777 376007                    ANQ     -1,DL
         1 014411   200112 036100                    ADLQ    @FIELD_LENGTH+2,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:596  
         1 014412   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 014413   000074 236100                    LDQ     60,,PR0
         1 014414   777777 376007                    ANQ     -1,DL
         1 014415   200113 116100                    CMPQ    @FIELD_LENGTH+3,,AUTO
         1 014416   014511 602000 1                  TNC     SETBLKLEN
         1 014417   014510 710000 1                  TRA     s:8250

     4429     8230                                                /* Must have room for record          */
     4430     8231    3                 CASE(RCWBIN#);

     4431     8232    3                    IF F$DCB.CRECX + RCWSIZE > F$DCB.BLKLEN THEN

   8232  1 014420   200030 470500                    LDP0    JDCB$,,AUTO
         1 014421   000067 236100                    LDQ     55,,PR0
         1 014422   777777 376007                    ANQ     -1,DL
         1 014423   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 014424   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 014425   000074 236100                    LDQ     60,,PR0
         1 014426   777777 376007                    ANQ     -1,DL
         1 014427   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 014430   014511 604000 1                  TMI     SETBLKLEN

     4432     8233    3                       GOTO SETBLKLEN;     /* Must have room for RCW             */
     4433     8234    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to next seg */

   8234  1 014431   000067 236100                    LDQ     55,,PR0
         1 014432   777777 376007                    ANQ     -1,DL
         1 014433   000020 736000                    QLS     16
         1 014434   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 014435   200050 756100                    STQ     TEMP$,,AUTO

     4434     8235    3                    IF TEMP$->FT$HDR.L1 = 0 AND TEMP$->FT$HDR.L2 < RCWSIZE THEN

   8235  1 014436   200050 471500                    LDP1    TEMP$,,AUTO
         1 014437   000100 101500                    MRL     fill='000'O
         1 014440   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 014441   200112 000004                    ADSC9   @FIELD_LENGTH+2,,AUTO    cn=0,n=4
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:597  
         1 014442   200112 236100                    LDQ     @FIELD_LENGTH+2,,AUTO
         1 014443   000000 116003                    CMPQ    0,DU
         1 014444   014453 601000 1                  TNZ     s:8235+13
         1 014445   000100 101500                    MRL     fill='000'O
         1 014446   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 014447   200113 000004                    ADSC9   @FIELD_LENGTH+3,,AUTO    cn=0,n=4
         1 014450   200113 236100                    LDQ     @FIELD_LENGTH+3,,AUTO
         1 014451   200036 116100                    CMPQ    RCWSIZE,,AUTO
         1 014452   014511 604000 1                  TMI     SETBLKLEN
         1 014453   014510 710000 1                  TRA     s:8250

     4435     8236    3                       GOTO SETBLKLEN;
              8236                                /* For binary RCW, must specify at least RCW size */
     4436     8237    3                 CASE(RCWDEC#);

     4437     8238    3                    IF F$DCB.CRECX + RCWSIZE > F$DCB.BLKLEN THEN GOTO SETBLKLEN;

   8238  1 014454   200030 470500                    LDP0    JDCB$,,AUTO
         1 014455   000067 236100                    LDQ     55,,PR0
         1 014456   777777 376007                    ANQ     -1,DL
         1 014457   200036 036100                    ADLQ    RCWSIZE,,AUTO
         1 014460   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 014461   000074 236100                    LDQ     60,,PR0
         1 014462   777777 376007                    ANQ     -1,DL
         1 014463   200112 116100                    CMPQ    @FIELD_LENGTH+2,,AUTO
         1 014464   014511 604000 1                  TMI     SETBLKLEN

     4438     8239                                                /* Must have room for RCW             */
     4439     8240    3                    TEMP$ = PINCRC( AFPOOL$, F$DCB.CRECX ); /* Point to next seg */

   8240  1 014465   000067 236100                    LDQ     55,,PR0
         1 014466   777777 376007                    ANQ     -1,DL
         1 014467   000020 736000                    QLS     16
         1 014470   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 014471   200050 756100                    STQ     TEMP$,,AUTO

     4440     8241    3                    IF F$DCB.SPANNED
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:598  

   8241  1 014472   000031 236100                    LDQ     25,,PR0
         1 014473   000004 316007                    CANQ    4,DL
         1 014474   014503 600000 1                  TZE     s:8245

     4441     8242    3                    THEN IF TEMP$->FT$ORGS.SIZE = '^^^^'

   8242  1 014475   200050 471500                    LDP1    TEMP$,,AUTO
         1 014476   040000 106500                    CMPC    fill='040'O
         1 014477   100000 200004                    ADSC9   0,,PR1                   cn=1,n=4
         1 014500   000057 000004 0                  ADSC9   E_VOLOUT+7               cn=0,n=4
         1 014501   014511 600000 1                  TZE     SETBLKLEN
         1 014502   014510 710000 1                  TRA     s:8250

     4442     8243    3                       THEN GOTO SETBLKLEN;
     4443     8244    3                       ELSE ;
     4444     8245    3                    ELSE IF TEMP$->FT$ORGD.SIZE = '^^^^'

   8245  1 014503   200050 471500                    LDP1    TEMP$,,AUTO
         1 014504   040000 106500                    CMPC    fill='040'O
         1 014505   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 014506   000057 000004 0                  ADSC9   E_VOLOUT+7               cn=0,n=4
         1 014507   014511 600000 1                  TZE     SETBLKLEN

     4445     8246    3                       THEN GOTO SETBLKLEN;
     4446     8247    3                       ELSE ;
     4447     8248                                             /* For decimal RCW, circumflex means end */
     4448     8249    3                 END;

     4449     8250    2              RETURN;

   8250  1 014510   000001 702211                    TSX2  ! 1,X1

   8240  1 014511                       SETBLKLEN    null
     4450     8251
     4451     8252    2   SETBLKLEN: ;
     4452     8253    2              F$DCB.BLKLEN = F$DCB.CRECX;  /* Set to actual size                 */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:599  

   8253  1 014511   000067 720100                    LXL0    55,,PR0
         1 014512   000074 440100                    SXL0    60,,PR0

     4453     8254    2              ALTRETURN;

   8254  1 014513   200102 221300                    LDX1  ! @SIZE+7,,AUTO
         1 014514   000000 702211                    TSX2  ! 0,X1

     4454     8255
     4455     8256    2      END FTW_CHKSEG;
     4456     8257        /*********************************************************************/
     4457     8258        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:600  
     4458     8259        /*********************************************************************/
     4459     8260    1   FTW$TRNCHLD: ENTRY ALTRET;

   8260  1 014515   000000 700200 xent  FTW$TRNCHLD  TSX0  ! X66_AUTO_3
         1 014516   000122 000003                    ZERO    82,3

     4460     8261        /*F*    NAME: FTW$TRNCHLD
     4461     8262                PURPOSE: Tape file trunc and hold buffer.
     4462     8263         ***/
     4463     8264
     4464     8265        /********************/
     4465     8266
     4466     8267    1              TRNCHLD = %YES#;

   8267  1 014517   400000 236003                    LDQ     -131072,DU
         1 014520   200025 756100                    STQ     TRNCHLD,,AUTO

     4467     8268    1              GOTO TRNC_COMMON;

   8268  1 014521   014525 710000 1                  TRA     TRNC_COMMON

     4468     8269
     4469     8270        /*********************************************************************/
     4470     8271    1   FTW$TRNCOD: ENTRY ALTRET;

   8271  1 014522   000000 700200 xent  FTW$TRNCOD   TSX0  ! X66_AUTO_3
         1 014523   000122 000003                    ZERO    82,3

     4471     8272        /*F*    NAME: FTW$TRNCOD
     4472     8273                PURPOSE: Does a local trunc for optical disk files.
     4473     8274         ***/
     4474     8275
     4475     8276        /********************/
     4476     8277
     4477     8278    1              TRNCHLD = %NO#;

   8278  1 014524   200025 450100                    STZ     TRNCHLD,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:601  

   8278  1 014525                       TRNC_COMMON  null
     4478     8279    1   TRNC_COMMON:;
     4479     8280
     4480     8281         /***
     4481     8282          *** Get truncing information from the DCB.
     4482     8283          ***/
     4483     8284
     4484     8285    1              JDCB$ = B$JIT.DCB$;

   8285  1 014525   000000 470400 xsym               LDP0    B$JIT$
         1 014526   000232 236100                    LDQ     154,,PR0
         1 014527   200030 756100                    STQ     JDCB$,,AUTO

     4485     8286    1              TEMP = F$DCB.BFR.BUFX(F$DCB.CBUFNUM); /* Buffer pointer index      */

   8286  1 014530   200030 471500                    LDP1    JDCB$,,AUTO
         1 014531   100070 236100                    LDQ     56,,PR1
         1 014532   000041 772000                    QRL     33
         1 014533   100115 236106                    LDQ     77,QL,PR1
         1 014534   000033 772000                    QRL     27
         1 014535   000037 376007                    ANQ     31,DL
         1 014536   200047 756100                    STQ     TEMP,,AUTO

     4486     8287    1              IF TEMP <= 0 THEN RETURN;    /* Nothing to trunc                   */

   8287  1 014537   014541 605400 1                  TPNZ    s:8293

   8287  1 014540   000000 702200 xent               TSX2  ! X66_ARET

     4487     8288
     4488     8289         /***
     4489     8290          *** If the buffer has been modified, write it.
     4490     8291          ***/
     4491     8292
     4492     8293    1              IF F$DCB.BFR.BUFUP(F$DCB.CBUFNUM)

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:602  
   8293  1 014541   100070 236100                    LDQ     56,,PR1
         1 014542   000041 772000                    QRL     33
         1 014543   100115 234106                    SZN     77,QL,PR1
         1 014544   014757 605000 1                  TPL     s:8328

     4493     8294    2              THEN DO;                     /* Buffer has been updated            */

     4494     8295    2                 DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;

   8295  1 014545   100051 720100                    LXL0    41,,PR1
         1 014546   000000 473400 xsym               LDP3    N$DCT$$
         1 014547   300000 474510                    LDP4    0,X0,PR3
         1 014550   400004 236100                    LDQ     4,,PR4
         1 014551   200016 756100                    STQ     DDDT$,,AUTO

     4495     8296    2                 AFPOOL$ = FM$BUF$(TEMP);

   8296  1 014552   200047 721100                    LXL1    TEMP,,AUTO
         1 014553   000000 236011 xsym               LDQ     FM$BUF$,X1
         1 014554   200007 756100                    STQ     AFPOOL$,,AUTO

     4496     8297                                                /* Calc number of filler bytes needed */
     4497     8298    2                 IF (F$DCB.TAPTYP.MANAGED AND F$DCB.ORG = %FIXED#)

   8298  1 014555   100067 236100                    LDQ     55,,PR1
         1 014556   000010 316003                    CANQ    8,DU
         1 014557   014564 600000 1                  TZE     s:8298+7
         1 014560   100032 236100                    LDQ     26,,PR1
         1 014561   777000 376003                    ANQ     -512,DU
         1 014562   017000 116003                    CMPQ    7680,DU
         1 014563   014567 600000 1                  TZE     s:8300
         1 014564   100031 236100                    LDQ     25,,PR1
         1 014565   100000 316007                    CANQ    32768,DL
         1 014566   014571 600000 1                  TZE     s:8301

     4498     8299    2                     OR F$DCB.EBCDIC
     4499     8300    2                 THEN CHARZLEN = 0;        /* No filler chars for managed or IBM */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:603  

   8300  1 014567   200013 450100                    STZ     CHARZLEN,,AUTO
         1 014570   014644 710000 1                  TRA     s:8308

     4500     8301    2                 ELSE IF F$DCB.BLKLEN < 20

   8301  1 014571   100074 722100                    LXL2    60,,PR1
         1 014572   000024 102003                    CMPX2   20,DU
         1 014573   014602 603000 1                  TRC     s:8303

     4501     8302    2                    THEN CHARZLEN = 20-F$DCB.BLKLEN; /* Pad out to 5 words       */

   8302  1 014574   100074 236100                    LDQ     60,,PR1
         1 014575   777777 376007                    ANQ     -1,DL
         1 014576   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 014577   000025 036007                    ADLQ    21,DL
         1 014600   200013 756100                    STQ     CHARZLEN,,AUTO
         1 014601   014644 710000 1                  TRA     s:8308

     4502     8303    2                    ELSE IF F$DCB.TAPTYP.CP6F

   8303  1 014602   100067 236100                    LDQ     55,,PR1
         1 014603   000200 316003                    CANQ    128,DU
         1 014604   014625 600000 1                  TZE     s:8306

     4503     8304    2                       THEN CHARZLEN = ((F$DCB.BLKLEN + 7) / 8) * 8 - F$DCB.BLKLEN;

   8304  1 014605   100074 236100                    LDQ     60,,PR1
         1 014606   777777 376007                    ANQ     -1,DL
         1 014607   000007 036007                    ADLQ    7,DL
         1 014610   000003 772000                    QRL     3
         1 014611   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 014612   100074 236100                    LDQ     60,,PR1
         1 014613   777777 376007                    ANQ     -1,DL
         1 014614   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 014615   000000 236003                    LDQ     0,DU
         1 014616   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:604  
         1 014617   000003 736000                    QLS     3
         1 014620   200113 036100                    ADLQ    @FIELD_LENGTH+3,,AUTO
         1 014621   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 014622   000001 036007                    ADLQ    1,DL
         1 014623   200013 756100                    STQ     CHARZLEN,,AUTO
         1 014624   014644 710000 1                  TRA     s:8308

     4504     8305                                                /* Write binary...pad to doubleword   */
     4505     8306    2                       ELSE CHARZLEN = ((F$DCB.BLKLEN + 3) / 4) * 4 - F$DCB.BLKLEN;

   8306  1 014625   100074 236100                    LDQ     60,,PR1
         1 014626   777777 376007                    ANQ     -1,DL
         1 014627   000003 036007                    ADLQ    3,DL
         1 014630   000002 772000                    QRL     2
         1 014631   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 014632   100074 236100                    LDQ     60,,PR1
         1 014633   777777 376007                    ANQ     -1,DL
         1 014634   200113 756100                    STQ     @FIELD_LENGTH+3,,AUTO
         1 014635   000000 236003                    LDQ     0,DU
         1 014636   200112 136100                    SBLQ    @FIELD_LENGTH+2,,AUTO
         1 014637   000002 736000                    QLS     2
         1 014640   200113 036100                    ADLQ    @FIELD_LENGTH+3,,AUTO
         1 014641   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 014642   000001 036007                    ADLQ    1,DL
         1 014643   200013 756100                    STQ     CHARZLEN,,AUTO

     4506     8307                                                /* Write ASCII...pad to word          */
     4507     8308    2                 ASEG$ = PINCRC( AFPOOL$, F$DCB.BLKLEN ); /* Point to filler     */

   8308  1 014644   100074 236100                    LDQ     60,,PR1
         1 014645   777777 376007                    ANQ     -1,DL
         1 014646   000020 736000                    QLS     16
         1 014647   200007 036100                    ADLQ    AFPOOL$,,AUTO
         1 014650   200011 756100                    STQ     ASEG$,,AUTO

     4508     8309    2                 IF F$DCB.TAPTYP.CP6F OR (F$DCB.ORG = %VARIABLE# AND F$DCB.EBCDIC)

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:605  
   8309  1 014651   100067 236100                    LDQ     55,,PR1
         1 014652   000200 316003                    CANQ    128,DU
         1 014653   014663 601000 1                  TNZ     s:8310
         1 014654   100032 236100                    LDQ     26,,PR1
         1 014655   777000 376003                    ANQ     -512,DU
         1 014656   020000 116003                    CMPQ    8192,DU
         1 014657   014671 601000 1                  TNZ     s:8311
         1 014660   100031 236100                    LDQ     25,,PR1
         1 014661   100000 316007                    CANQ    32768,DL
         1 014662   014671 600000 1                  TZE     s:8311

     4509     8310    2                 THEN ASEG$->CHARZ = NULPAD; /* Pad with zeros                   */

   8310  1 014663   200011 474500                    LDP4    ASEG$,,AUTO
         1 014664   200013 720100                    LXL0    CHARZLEN,,AUTO
         1 014665   040140 100400                    MLR     fill='040'O
         1 014666   000005 000024 0                  ADSC9   ZEROBITS                 cn=0,n=20
         1 014667   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 014670   014676 710000 1                  TRA     s:8312

     4510     8311    2                 ELSE ASEG$->CHARZ = ANSPAD; /* Pad with circumflex              */

   8311  1 014671   200011 474500                    LDP4    ASEG$,,AUTO
         1 014672   200013 720100                    LXL0    CHARZLEN,,AUTO
         1 014673   040140 100400                    MLR     fill='040'O
         1 014674   000000 000022 0                  ADSC9   ANSPAD                   cn=0,n=18
         1 014675   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0

     4511     8312    2                 F$DCB.BLKLEN = F$DCB.BLKLEN + CHARZLEN; /* Set # bytes to write */

   8312  1 014676   100074 236100                    LDQ     60,,PR1
         1 014677   777777 376007                    ANQ     -1,DL
         1 014700   200013 036100                    ADLQ    CHARZLEN,,AUTO
         1 014701   000000 621006                    EAX1    0,QL
         1 014702   100074 441100                    SXL1    60,,PR1

     4512     8313    2                 F$DCB.BFR.BUFUP(F$DCB.CBUFNUM) = %NO#; /* Reset block modified  */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:606  

   8313  1 014703   100070 236100                    LDQ     56,,PR1
         1 014704   000041 772000                    QRL     33
         1 014705   000000 622006                    EAX2    0,QL
         1 014706   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 014707   100115 356112                    ANSQ    77,X2,PR1

     4513     8314    2                 IF TRNCHLD AND F$DCB.AFTRBLK AND F$DCB.IASN ~= %OD#

   8314  1 014710   200025 234100                    SZN     TRNCHLD,,AUTO
         1 014711   014726 605000 1                  TPL     s:8319
         1 014712   100064 236100                    LDQ     52,,PR1
         1 014713   000002 316007                    CANQ    2,DL
         1 014714   014726 600000 1                  TZE     s:8319
         1 014715   100103 236100                    LDQ     67,,PR1
         1 014716   000777 376007                    ANQ     511,DL
         1 014717   000012 116007                    CMPQ    10,DL
         1 014720   014726 600000 1                  TZE     s:8319

     4514     8315    3                 THEN DO;                  /* Position before to write over      */

     4515     8316    3                    F$DCB.ARS = -1;

   8316  1 014721   000001 335007                    LCA     1,DL
         1 014722   100000 755100                    STA     0,,PR1

     4516     8317    3                    CALL FTI$SPREC ALTRET(JUSTALT);

   8317  1 014723   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 014724   000000 701000 xent               TSX1    FTI$SPREC
         1 014725   000203 702000 1                  TSX2    JUSTALT

     4517     8318    3                    END;

     4518     8319    2                 F$DCB.ARS = F$DCB.BLKLEN; /* Pass # bytes to write              */

   8319  1 014726   200030 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:607  
         1 014727   000074 236100                    LDQ     60,,PR0
         1 014730   777777 376007                    ANQ     -1,DL
         1 014731   000000 756100                    STQ     0,,PR0

     4519     8320    3                 IF TRNCHLD AND F$DCB.IASN = %OD# THEN DO;

   8320  1 014732   200025 234100                    SZN     TRNCHLD,,AUTO
         1 014733   014752 605000 1                  TPL     s:8325
         1 014734   000103 236100                    LDQ     67,,PR0
         1 014735   000777 376007                    ANQ     511,DL
         1 014736   000012 116007                    CMPQ    10,DL
         1 014737   014752 601000 1                  TNZ     s:8325

     4520     8321    3                    CALL FPO$TRUNC(AFPOOL$) ALTRET(JUSTALT);

   8321  1 014740   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 014741   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 014742   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 014743   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 014744   000000 701000 xent               TSX1    FPO$TRUNC
         1 014745   000203 702000 1                  TSX2    JUSTALT

     4521     8322    3                    FT$DDT.FMNEEDED = %YES#;

   8322  1 014746   200016 470500                    LDP0    DDDT$,,AUTO
         1 014747   000200 236007                    LDQ     128,DL
         1 014750   000006 256100                    ORSQ    6,,PR0

     4522     8323    3                    END;

   8323  1 014751   014754 710000 1                  TRA     s:8326

     4523     8324    2                 ELSE
     4524     8325    2                    CALL FTW_WRFPOOL ALTRET(JUSTALT);

   8325  1 014752   015071 701000 1                  TSX1    FTW_WRFPOOL
         1 014753   000203 702000 1                  TSX2    JUSTALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:608  

     4525     8326    2                 F$DCB.AFTRBLK = %YES#;

   8326  1 014754   200030 470500                    LDP0    JDCB$,,AUTO
         1 014755   000002 236007                    LDQ     2,DL
         1 014756   000064 256100                    ORSQ    52,,PR0

     4526     8327    2                 END;

     4527     8328    1              RETURN;

   8328  1 014757   000000 702200 xent               TSX2  ! X66_ARET

     4528     8329
     4529     8330        /*********************************************************************/
     4530     8331        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:609  
     4531     8332        /*********************************************************************/
     4532     8333    1   FTW_TRNCWEOF: PROC ALTRET;

   8333  1 014760   200074 741300       FTW_TRNCWEOF STX1  ! @SIZE+1,,AUTO

     4533     8334        /*F*    NAME: FTW_TRNCWEOF
     4534     8335                PURPOSE: Truncate file and write EOF labels if necessary.
     4535     8336         ***/
     4536     8337
     4537     8338        /********************/
     4538     8339
     4539     8340         /***
     4540     8341          *** Trunc file and hold buffer.
     4541     8342          ***/
     4542     8343
     4543     8344    2              IF NOT F$DCB.TAPTYP.USRBUF

   8344  1 014761   200030 470500                    LDP0    JDCB$,,AUTO
         1 014762   000067 236100                    LDQ     55,,PR0
         1 014763   000100 316003                    CANQ    64,DU
         1 014764   014770 601000 1                  TNZ     s:8346

     4544     8345    2              THEN CALL FTW$TRNCHLD ALTRET(JUSTALT); /* Trunc file, hold buffer  */

   8345  1 014765   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 014766   014515 701000 1                  TSX1    s:8260
         1 014767   015067 702000 1                  TSX2    JUSTALT

     4545     8346    2              IF F$DCB.NOEOF

   8346  1 014770   200030 470500                    LDP0    JDCB$,,AUTO
         1 014771   000064 236100                    LDQ     52,,PR0
         1 014772   400000 316007                    CANQ    -131072,DL
         1 014773   015065 600000 1                  TZE     s:8369

     4546     8347    3              THEN DO;                   /* File was modified...write EOF labels */

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:610  
     4547     8348    3                 IF F$DCB.ASN = %TAPE#

   8348  1 014774   000032 236100                    LDQ     26,,PR0
         1 014775   777000 376007                    ANQ     -512,DL
         1 014776   002000 116007                    CMPQ    1024,DL
         1 014777   015051 601000 1                  TNZ     s:8363

     4548     8349    4                 THEN DO;                  /* Labelled tape                      */

     4549     8350    4                    CALL FTI$WRFM ALTRET(JUSTALT);

   8350  1 015000   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 015001   000000 701000 xent               TSX1    FTI$WRFM
         1 015002   015067 702000 1                  TSX2    JUSTALT

     4550     8351    4                    CALL FTL$LBLS( 'EOF' ) ALTRET(JUSTALT);

   8351  1 015003   000041 630400 2                  EPPR0   33
         1 015004   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015005   000000 701000 xent               TSX1    FTL$LBLS
         1 015006   015067 702000 1                  TSX2    JUSTALT

     4551     8352    4                    CALL FMD$RELBUF(F$DCB.LPOOL - 1); /* Get rid of label FPOOL  */

   8352  1 015007   200030 470500                    LDP0    JDCB$,,AUTO
         1 015010   000067 236100                    LDQ     55,,PR0
         1 015011   000036 772000                    QRL     30
         1 015012   000007 376007                    ANQ     7,DL
         1 015013   000001 136007                    SBLQ    1,DL
         1 015014   200112 756100                    STQ     @FIELD_LENGTH+2,,AUTO
         1 015015   200112 631500                    EPPR1   @FIELD_LENGTH+2,,AUTO
         1 015016   200113 451500                    STP1    @FIELD_LENGTH+3,,AUTO
         1 015017   200113 630500                    EPPR0   @FIELD_LENGTH+3,,AUTO
         1 015020   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015021   000000 701000 xent               TSX1    FMD$RELBUF
         1 015022   000000 011000                    NOP     0

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:611  
     4552     8353    4                    F$DCB.LPOOL = 0;

   8353  1 015023   200030 470500                    LDP0    JDCB$,,AUTO
         1 015024   000001 236000 2                  LDQ     1
         1 015025   000067 356100                    ANSQ    55,,PR0

     4553     8354    4                    CALL FTI$WRFM ALTRET(JUSTALT);

   8354  1 015026   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 015027   000000 701000 xent               TSX1    FTI$WRFM
         1 015030   015067 702000 1                  TSX2    JUSTALT

     4554     8355    4                    CALL FTI$WRFM ALTRET(JUSTALT);

   8355  1 015031   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 015032   000000 701000 xent               TSX1    FTI$WRFM
         1 015033   015067 702000 1                  TSX2    JUSTALT

     4555     8356    4                    FT$DDT.FMNEEDED = %NO#; /* Don't need file marks             */

   8356  1 015034   200016 470500                    LDP0    DDDT$,,AUTO
         1 015035   000014 236000 2                  LDQ     12
         1 015036   000006 356100                    ANSQ    6,,PR0

     4556     8357    4                    F$DCB.ARS = -3;      /* Space before first file mark written */

   8357  1 015037   000003 335007                    LCA     3,DL
         1 015040   200030 471500                    LDP1    JDCB$,,AUTO
         1 015041   100000 755100                    STA     0,,PR1

     4557     8358    4                    CALL FTI$SPFILE ALTRET(JUSTALT);

   8358  1 015042   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 015043   000000 701000 xent               TSX1    FTI$SPFILE
         1 015044   015067 702000 1                  TSX2    JUSTALT

     4558     8359    4                    F$DCB.NOEOF = %NO#; /* No need for labels later if only reading */
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:612  

   8359  1 015045   200030 470500                    LDP0    JDCB$,,AUTO
         1 015046   000015 236000 2                  LDQ     13
         1 015047   000064 356100                    ANSQ    52,,PR0

     4559     8360                                                /*PS* (^ * EOF1 EOF2 * *)             */
     4560     8361    4                    END;

   8361  1 015050   015065 710000 1                  TRA     s:8369

     4561     8362    4                 ELSE DO;                  /* Managed free tape                  */

     4562     8363    4                    CALL FTI$WRFM ALTRET(JUSTALT);

   8363  1 015051   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 015052   000000 701000 xent               TSX1    FTI$WRFM
         1 015053   015067 702000 1                  TSX2    JUSTALT

     4563     8364    4                    CALL FTI$WRFM ALTRET(JUSTALT);

   8364  1 015054   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 015055   000000 701000 xent               TSX1    FTI$WRFM
         1 015056   015067 702000 1                  TSX2    JUSTALT

     4564     8365    4                    F$DCB.ARS = -2;

   8365  1 015057   000002 335007                    LCA     2,DL
         1 015060   200030 470500                    LDP0    JDCB$,,AUTO
         1 015061   000000 755100                    STA     0,,PR0

     4565     8366    4                    CALL FTI$SPFILE ALTRET(JUSTALT);

   8366  1 015062   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 015063   000000 701000 xent               TSX1    FTI$SPFILE
         1 015064   015067 702000 1                  TSX2    JUSTALT

     4566     8367    4                    END;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:613  

     4567     8368    3                 END;

     4568     8369    2              RETURN;

   8369  1 015065   200074 221300                    LDX1  ! @SIZE+1,,AUTO
         1 015066   000001 702211                    TSX2  ! 1,X1

     4569     8370
     4570     8371    2   JUSTALT:
     4571     8372    2              ALTRETURN;

   8372  1 015067   200074 221300       JUSTALT      LDX1  ! @SIZE+1,,AUTO
         1 015070   000000 702211                    TSX2  ! 0,X1

     4572     8373
     4573     8374    2      END FTW_TRNCWEOF;
     4574     8375        /*********************************************************************/
     4575     8376        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:614  
     4576     8377        /*********************************************************************/
     4577     8378    1   FTW_WRFPOOL: PROC ALTRET;

   8378  1 015071   200070 741300       FTW_WRFPOOL  STX1  ! TEMP+1,,AUTO

     4578     8379        /*F*     NAME: FTW_WRFPOOL
     4579     8380                 PURPOSE: Write FPOOL buffer.
     4580     8381         ***/
     4581     8382
     4582     8383        /********************/
     4583     8384
     4584     8385    2              IF F$DCB.IASN = %OD# THEN

   8385  1 015072   200030 470500                    LDP0    JDCB$,,AUTO
         1 015073   000103 236100                    LDQ     67,,PR0
         1 015074   000777 376007                    ANQ     511,DL
         1 015075   000012 116007                    CMPQ    10,DL
         1 015076   015106 601000 1                  TNZ     s:8388

     4585     8386    2                 CALL FPO$WRODBLK (AFPOOL$) ALTRET (JUSTALT);

   8386  1 015077   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 015100   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 015101   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 015102   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015103   000000 701000 xent               TSX1    FPO$WRODBLK
         1 015104   015133 702000 1                  TSX2    JUSTALT
         1 015105   015131 710000 1                  TRA     s:8394

     4586     8387    3              ELSE DO;

     4587     8388    3                 IF F$DCB.TAPTYP.RWASC THEN

   8388  1 015106   000067 236100                    LDQ     55,,PR0
         1 015107   000400 316003                    CANQ    256,DU
         1 015110   015120 600000 1                  TZE     s:8391

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:615  
     4588     8389    3                    CALL FTI$WRASC (AFPOOL$) ALTRET (JUSTALT);

   8389  1 015111   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 015112   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 015113   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 015114   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015115   000000 701000 xent               TSX1    FTI$WRASC
         1 015116   015133 702000 1                  TSX2    JUSTALT
         1 015117   015126 710000 1                  TRA     s:8392

     4589     8390    3                 ELSE
     4590     8391    3                    CALL FTI$WRBIN (AFPOOL$) ALTRET (JUSTALT);

   8391  1 015120   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 015121   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 015122   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 015123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015124   000000 701000 xent               TSX1    FTI$WRBIN
         1 015125   015133 702000 1                  TSX2    JUSTALT

     4591     8392    3                 FT$DDT.FMNEEDED = %YES#;  /* Needs file mark                    */

   8392  1 015126   200016 470500                    LDP0    DDDT$,,AUTO
         1 015127   000200 236007                    LDQ     128,DL
         1 015130   000006 256100                    ORSQ    6,,PR0

     4592     8393    3                 END;

     4593     8394    2              RETURN;

   8394  1 015131   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 015132   000001 702211                    TSX2  ! 1,X1

   8394  1 015133                       JUSTALT      null
     4594     8395
     4595     8396    2   JUSTALT:   ;
     4596     8397    2              ALTRETURN;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:616  

   8397  1 015133   200070 221300                    LDX1  ! TEMP+1,,AUTO
         1 015134   000000 702211                    TSX2  ! 0,X1

     4597     8398
     4598     8399    2      END FTW_WRFPOOL;
     4599     8400        /*********************************************************************/
     4600     8401        %EJECT;
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:617  
     4601     8402        /*********************************************************************/
     4602     8403    1   FTW_RDFPOOL: PROC ALTRET;

   8403  1 015135   200076 741300       FTW_RDFPOOL  STX1  ! @SIZE+3,,AUTO

     4603     8404        /*F*     NAME: FTW_RDFPOOL
     4604     8405                 PURPOSE: Read FPOOL buffer.
     4605     8406         ***/
     4606     8407
     4607     8408        /********************/
     4608     8409
     4609     8410    2              IF F$DCB.IASN = %OD# THEN

   8410  1 015136   200030 470500                    LDP0    JDCB$,,AUTO
         1 015137   000103 236100                    LDQ     67,,PR0
         1 015140   000777 376007                    ANQ     511,DL
         1 015141   000012 116007                    CMPQ    10,DL
         1 015142   015152 601000 1                  TNZ     s:8413

     4610     8411    2                 CALL FPO$RDODBLK (AFPOOL$) ALTRET (JUSTALT);

   8411  1 015143   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 015144   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 015145   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 015146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015147   000000 701000 xent               TSX1    FPO$RDODBLK
         1 015150   015207 702000 1                  TSX2    JUSTALT
         1 015151   015172 710000 1                  TRA     s:8418

     4611     8412    3              ELSE DO;

     4612     8413    3                 IF F$DCB.TAPTYP.RWASC THEN

   8413  1 015152   000067 236100                    LDQ     55,,PR0
         1 015153   000400 316003                    CANQ    256,DU
         1 015154   015164 600000 1                  TZE     s:8416

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:618  
     4613     8414    3                    CALL FTI$RDASC (AFPOOL$) ALTRET (JUSTALT);

   8414  1 015155   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 015156   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 015157   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 015160   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015161   000000 701000 xent               TSX1    FTI$RDASC
         1 015162   015207 702000 1                  TSX2    JUSTALT
         1 015163   015172 710000 1                  TRA     s:8418

     4614     8415    3                 ELSE
     4615     8416    3                    CALL FTI$RDBIN (AFPOOL$) ALTRET (JUSTALT);

   8416  1 015164   200007 631500                    EPPR1   AFPOOL$,,AUTO
         1 015165   200112 451500                    STP1    @FIELD_LENGTH+2,,AUTO
         1 015166   200112 630500                    EPPR0   @FIELD_LENGTH+2,,AUTO
         1 015167   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 015170   000000 701000 xent               TSX1    FTI$RDBIN
         1 015171   015207 702000 1                  TSX2    JUSTALT

     4616     8417    3                 END;

     4617     8418    2              IF NOT F$DCB.TAPTYP.USRBUF AND NOT F$DCB.TYC.EOF(1)

   8418  1 015172   200030 470500                    LDP0    JDCB$,,AUTO
         1 015173   000067 236100                    LDQ     55,,PR0
         1 015174   000100 316003                    CANQ    64,DU
         1 015175   015205 601000 1                  TNZ     s:8423
         1 015176   000002 236100                    LDQ     2,,PR0
         1 015177   004000 316003                    CANQ    2048,DU
         1 015200   015205 601000 1                  TNZ     s:8423

     4618     8419    3              THEN DO;

     4619     8420    3                 F$DCB.BLKLEN = F$DCB.ARS;

   8420  1 015201   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:619  
         1 015202   000074 440100                    SXL0    60,,PR0

     4620     8421    3                 CALL FTW_GETBLKLEN;

   8421  1 015203   012171 701000 1                  TSX1    FTW_GETBLKLEN
         1 015204   000000 011000                    NOP     0

     4621     8422    3                 END;

     4622     8423    2              RETURN;

   8423  1 015205   200076 221300                    LDX1  ! @SIZE+3,,AUTO
         1 015206   000001 702211                    TSX2  ! 1,X1

   8418  1 015207                       JUSTALT      null
     4623     8424
     4624     8425    2   JUSTALT:   ;
     4625     8426    2              ALTRETURN;

   8426  1 015207   200076 221300                    LDX1  ! @SIZE+3,,AUTO
         1 015210   000000 702211                    TSX2  ! 0,X1
     4626     8427
     4627     8428    2      END FTW_RDFPOOL;
     4628     8429        /*********************************************************************/
     4629     8430    1   END FTW$WRAT;
     4630     8431        /*********************************************************************/

PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:620  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   UE_CP6.:E05TOU  is referenced.
   UD_ERRORS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$RECS.:E05TOU  cannot be made into a system file and is referenced.
   FT$LBLS.:E05TOU  cannot be made into a system file and is referenced.
   FT$DDT.:E05TOU  is referenced.
   FM_BUF_R.:E05TOU  cannot be made into a system file and is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_FMTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FTW$WRAT.
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:621  

 **** Variables and constants ****

  ****  Section 000 RoData FTW$WRAT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(18)    r     1 ANSPAD                    12-0-0/b STRC        r     1 E_BADBLKL
    13-0-0/b STRC        r     1 E_BADKEY                  14-0-0/b STRC        r     1 E_BADRECL
    15-0-0/b STRC        r     1 E_BADSPAN                 16-0-0/b STRC        r     1 E_BOF
    17-0-0/b STRC        r     1 E_BOT                     20-0-0/b STRC        r     1 E_CANTIO
    21-0-0/b STRC        r     1 E_CANTTRANSLATE           22-0-0/b STRC        r     1 E_CVBOT
    23-0-0/b STRC        r     1 E_DI                      24-0-0/b STRC        r     1 E_DOMAIN
    25-0-0/b STRC        r     1 E_EOF                     26-0-0/b STRC        r     1 E_EOT
    27-0-0/b STRC        r     1 E_EOVOL                   30-0-0/b STRC        r     1 E_EOVOLS
    31-0-0/b STRC        r     1 E_FILLIM                  32-0-0/b STRC        r     1 E_INDBC
    33-0-0/b STRC        r     1 E_KEYORDER                34-0-0/b STRC        r     1 E_LD
    35-0-0/b STRC        r     1 E_NOCONT                  36-0-0/b STRC        r     1 E_NOFPOOL
    37-0-0/b STRC        r     1 E_NOKEY                   40-0-0/b STRC        r     1 E_NONDECRCW
    41-0-0/b STRC        r     1 E_NOTAUTH                 43-0-0/b STRC        r     1 E_NOTIMPLEMENTED
    44-0-0/b STRC        r     1 E_NOTJRNLOWNER            45-0-0/b STRC        r     1 E_PARTIALKEY
    46-0-0/b STRC        r     1 E_RANBADBLK               47-0-0/b STRC        r     1 E_SMALLRECL
    50-0-0/b STRC        r     1 E_VOLOUT                   5-0-0/w CHAR(20)    r     1 NULPAD
     5-0-0/w UBIN        r     1 ZEROBITS(0:4)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   107-0-0/w PTR         r     1 @FIELD_CHAR              110-0-0/w PTR         r     1 @FIELD_LENGTH
    71-0-0/w PTR         r     1 @FP$                      72-0-0/w PTR         r     1 @FPNUM
     4-0-0/w PTR         r     1 @FPT                       3-0-0/w PTR         r     1 @FPTCODE
    71-0-0/w PTR         r     1 @KEY                      73-0-0/w PTR         r     1 @SEG
    73-0-0/w PTR         r     1 @SIZE                      5-0-0/w PTR         r     1 @VFC
     7-0-0/w PTR         r     1 AFPOOL$                   10-0-0/w UBIN        r     1 ARECL
    11-0-0/w PTR         r     1 ASEG$                     56-0-0/w BIT         r     1 BOF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:622  
    12-0-0/w SBIN        r     1 BYTES_TO_GO               13-0-0/w SBIN        r     1 CHARZLEN
    63-0-0/w SBIN        r     1 CRNTKEY                    6-0-0/b BIT         r     1 CVOLFT
    64-0-0/b BIT         r     1 DATA_INCON                14-0-0/w SBIN        r     1 DCRECNO
    15-0-0/w BIT         r     1 DCVOL                     16-0-0/w PTR         r     1 DDDT$
    17-0-0/w PTR         r     1 DUB$                      20-0-0/w SBIN        r     1 DUBYTES
    21-0-0/w UBIN(9)     r     1 DVBYTE                    63-0-0/w SBIN        r     1 EOFCNT
    22-0-0/c CHAR(3)     r     1 EOXL                      23-0-0/b BIT         r     1 ERRSAV
    *0-0-0/c ACHR        r     1 FIELD_CHAR                *0-0-0/w SBIN        r     1 FIELD_LENGTH
    *0-0-0/w PTR         r     1 FP$                       *0-0-0/w UBIN        r     1 FPNUM
    *0-0-0/w UBIN        r     1 FPT                       24-0-0/w PTR         r     1 FPT$
    *0-0-0/w SBIN        r     1 FPTCODE                   65-0-0/w SBIN        r     1 FRSTKEY
    26-0-0/w UBIN        r     1 I                         27-0-0/b BIT         r     1 IOERROK
    30-0-0/w PTR         r     1 JDCB$                     *0-0-0/c ASTR(9)     r     1 KEY
    61-0-0/w BIT         r     1 KEYS                      33-0-0/w SBIN        r     1 KEYSIZE
    66-0-0/w SBIN        r     1 MAXMKEY                   34-0-0/w SBIN        r     1 MAXRECL
    35-0-0/w SBIN        r     1 N                         35-0-0/w CHAR(4)     r     1 NC
    67-0-0/w SBIN        r     1 NEXTKEY                   36-0-0/w SBIN        r     1 RCWSIZE
    37-0-0/w SBIN        r     1 RCWTYPE                   40-0-0/w SBIN        r     1 RECSIZE
    *0-0-0/w SBIN        r     1 SEG                       41-0-0/w SBIN        r     1 SEGSIZE
    42-0-0/c CHAR(6)     r     1 SIX_CHARS                 *0-0-0/w UBIN        r     1 SIZE
    44-0-0/w SBIN        r     1 SPANINFO                  46-0-0/w SBIN        r     1 SPAN_LAST
    45-0-0/w SBIN        r     1 SPAN_MID                  47-0-0/w SBIN        r     1 TEMP
    67-0-0/w UBIN        r     1 TEMP                      50-0-0/w PTR         r     1 TEMP$
    47-0-0/w CHAR(4)     r     1 TEMPC                     51-0-0/w PTR         r     1 TEMPFP$
    52-0-0/w UBIN        r     1 TEMPFPOOL                 25-0-0/b BIT         r     1 TRNCHLD
    53-0-0/w PTR         r     1 UKEY$                     54-0-0/w SBIN        r     1 UKEYLEN
    *0-0-0/b UBIN(9)     r     1 VFC                       55-0-0/w BIT         r     1 VFC_MOVED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS$(0:19)
     0-0-0/w PTR         r     1 B$SR_NON_DEC$              0-0-0/w PTR         r     1 B$XL_ASC_EBC$
     0-0-0/w PTR         r     1 B$XL_EBC_ASC$              0-0-0/w PTR         r     1 B$XL_MOD_256$
     0-0-0/w PTR         r     1 B$XL_UPPER_UR$             0-0-0/w PTR         r     1 B$XL_UR$
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:623  
     0-0-0/w PTR         r     1 FM$BUF$(0:31)              0-0-0/w PTR         r     1 N$DCT$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ALIGNED_BASED_WORD         0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/c UBIN        r     1 BASED_WORD                 0-0-0/c ACHR        r     1 CHARS
     0-0-0/c ACHR        r     1 CHARZ                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFUJ                    0-0-0/c CHAR(4)     r     1 FOUR_BASED_CHARS
     0-0-0/d STRC(72)    r     1 FPT$PFIL_V                 0-0-0/d STRC(108)   r     1 FPT$PRECORD_V
     0-0-0/d STRC(216)   r     1 FPT$READ_V                 0-0-0/d STRC(144)   r     1 FPT$WRITE_V
     0-0-0/w STRC        r     1 FT$BLKHDRE                 0-0-0/w STRC(288)   r     1 FT$DDT
     0-0-0/c STRC        r     1 FT$HDR                     0-0-0/c STRC        r     1 FT$HDRE
     0-0-0/c ASTR(9)     r     1 FT$KEY                     0-0-0/c STRC(720)   r     1 FT$LBL1
     0-0-0/c STRC(720)   r     1 FT$LBL2                    0-0-0/c STRC        r     1 FT$ORGD
     0-0-0/c STRC(45)    r     1 FT$ORGS                    0-0-0/d STRC(4608)  r     1 FT_NONDECIMAL_TABLE
     0-0-0/d STRC(4608)  r     1 F_ASC_ASC                  0-0-0/d STRC(4608)  r     1 F_ASC_EBC
     0-0-0/d STRC(4608)  r     1 F_EBC_ASC                  0-0-0/c ACHR        r     1 KEYCHARS
     0-0-0/c ACHR        r     1 NCHARS                     0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)
     0-0-0/d STRC(4608)  r     1 NK_URTBL                   0-0-0/d STRC(4608)  r     1 NK_URTBLUC


   Procedure FTW$WRAT requires 6793 words for executable code.
   Procedure FTW$WRAT requires 82 words of local(AUTO) storage.

    No errors detected in file FTW$WRAT.:E05TSI    .
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:624  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:625  
          MINI XREF LISTING

AFPOOL$
      3696**DCL      4856<<ASSIGN   5055<<ASSIGN   5523<<ASSIGN   5572>>CALLBLT  5572>>CALLBLT  5583>>ASSIGN
      5587>>ASSIGN   5609>>ASSIGN   5613>>ASSIGN   5618<<ASSIGN   5618>>ASSIGN   5619>>ASSIGN   5648>>ASSIGN
      5663<<ASSIGN   5663>>ASSIGN   5790<<ASSIGN   5809>>ASSIGN   5814>>ASSIGN   5844<<ASSIGN   5844>>ASSIGN
      6110>>ASSIGN   6116>>ASSIGN   6152>>ASSIGN   6210<<ASSIGN   6319>>ASSIGN   6328>>ASSIGN   6407>>ASSIGN
      6413>>ASSIGN   6491>>ASSIGN   6707<<ASSIGN   6709>>ASSIGN   6718>>ASSIGN   6722>>ASSIGN   6723>>ASSIGN
      6731>>ASSIGN   6738>>ASSIGN   6739<>CALL     6747<<ASSIGN   6747>>ASSIGN   6749<<ASSIGN   6749>>ASSIGN
      6753<<ASSIGN   6753>>ASSIGN   6755<<ASSIGN   6755>>ASSIGN   6756>>ASSIGN   6759>>CALLBLT  6763>>CALLBLT
      6765<<ASSIGN   6765>>ASSIGN   6766>>ASSIGN   6775<<ASSIGN   6775>>ASSIGN   6780>>CALLBLT  6781>>ASSIGN
      6782>>ASSIGN   6783>>ASSIGN   6786>>ASSIGN   6787>>ASSIGN   6788<<ASSIGN   6788>>ASSIGN   6789>>ASSIGN
      6792>>ASSIGN   6795<<ASSIGN   6795>>ASSIGN   6798<<ASSIGN   6798>>ASSIGN   6802<<ASSIGN   6802>>ASSIGN
      6805<<ASSIGN   6805>>ASSIGN   6810<<ASSIGN   6811>>ASSIGN   7155>>ASSIGN   7156>>ASSIGN   7262>>ASSIGN
      7266>>ASSIGN   7270>>ASSIGN   7337>>ASSIGN   7341>>ASSIGN   7345>>ASSIGN   7348>>ASSIGN   7392<>CALL
      7398<>CALL     7438>>ASSIGN   7471>>ASSIGN   7474>>ASSIGN   7478>>ASSIGN   7480>>CALLBLT  7505>>ASSIGN
      7512>>ASSIGN   7544>>ASSIGN   7561>>ASSIGN   7979<<ASSIGN   8127<>CALL     8130<<ASSIGN   8174<<ASSIGN
      8234>>ASSIGN   8240>>ASSIGN   8296<<ASSIGN   8308>>ASSIGN   8321<>CALL     8386<>CALL     8389<>CALL
      8391<>CALL     8411<>CALL     8414<>CALL     8416<>CALL
ALIGNED_BASED_WORD
      3697**DCL      5583>>ASSIGN   5587>>ASSIGN   5626<<ASSIGN   5809<<ASSIGN
ALLDECIMAL IN PROCEDURE FTW_CHKDEC
      7672**LABEL    7671--CALLALT
ANSPAD
      3763**DCL      8311>>ASSIGN
ARECL
      3698**DCL      6143<<ASSIGN   6144>>IF       6146>>ASSIGN   6447<<ASSIGN   6448>>IF       6450<<ASSIGN
      6453>>ASSIGN
ASEG$
      3699**DCL      5525<<ASSIGN   5610>>ASSIGN   5611>>ASSIGN   5619<<ASSIGN   5621<<ASSIGN   5621>>ASSIGN
      5623>>ASSIGN   5649>>ASSIGN   5664<<ASSIGN   5664>>ASSIGN   5792<<ASSIGN   5815>>ASSIGN   5846<<ASSIGN
      5846>>ASSIGN   6110<<ASSIGN   6112>>ASSIGN   6116<<ASSIGN   6117>>ASSIGN   6152<<ASSIGN   6156>>CALLBLT
      6157>>ASSIGN   6159>>ASSIGN   6245<<ASSIGN   6252<<ASSIGN   6265<<ASSIGN   6319<<ASSIGN   6321>>ASSIGN
      6323>>ASSIGN   6328<<ASSIGN   6330>>ASSIGN   6333>>ASSIGN   6335>>ASSIGN   6407<<ASSIGN   6409>>ASSIGN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:626  
      6413<<ASSIGN   6415>>ASSIGN   6491<<ASSIGN   6499>>CALLBLT  6500>>CALLBLT  6501>>ASSIGN   6503>>ASSIGN
      6507>>CALLBLT  6507>>CALLBLT  6508>>CALLBLT  6508>>CALLBLT  7155<<ASSIGN   7156<<ASSIGN   7215>>ASSIGN
      7225>>ASSIGN   7226<<ASSIGN   7226>>ASSIGN   7241>>IF       7243>>IF       7262<<ASSIGN   7263>>ASSIGN
      7264>>ASSIGN   7266<<ASSIGN   7268>>ASSIGN   7270<<ASSIGN   7271>>ASSIGN   7337<<ASSIGN   7338>>ASSIGN
      7339>>ASSIGN   7341<<ASSIGN   7343>>ASSIGN   7345<<ASSIGN   7346>>ASSIGN   8308<<ASSIGN   8310>>ASSIGN
      8311>>ASSIGN
B$JIT.DCB$
       433**DCL      4316>>ASSIGN   4390>>ASSIGN   4737>>IF       4755>>ASSIGN   5091>>ASSIGN   8285>>ASSIGN
B$JIT.ERR
       336**DCL      4357<<ASSIGN   4360>>IF       4370<<ASSIGN   4393<<ASSIGN   4399<<ASSIGN   4479<<ASSIGN
      4554<<ASSIGN   4634>>IF       4653<<ASSIGN   4720<<ASSIGN   4738<<ASSIGN   4769<<ASSIGN   4779<<ASSIGN
      4928<<ASSIGN   4949<<ASSIGN   4971<<ASSIGN   5010<<ASSIGN   5041<<ASSIGN   5064<<ASSIGN   5170<<ASSIGN
      5195<<ASSIGN   5224<<ASSIGN   5251<<ASSIGN   5259<<ASSIGN   5311<<ASSIGN   5315<<ASSIGN   5321<<ASSIGN
      5374<<ASSIGN   5428<<ASSIGN   5447<<ASSIGN   5452<<ASSIGN   5492<<ASSIGN   5542<<ASSIGN   5556<<ASSIGN
      5576<<ASSIGN   5603<<ASSIGN   5639<<ASSIGN   5670<<ASSIGN   5681<<ASSIGN   5682<<ASSIGN   5728<<ASSIGN
      5768<<ASSIGN   5775<<ASSIGN   5796<<ASSIGN   5834<<ASSIGN   5839<<ASSIGN   5860<<ASSIGN   5886<<ASSIGN
      5932<<ASSIGN   5971>>ASSIGN   5982<<ASSIGN   6123<<ASSIGN   6145<<ASSIGN   6176<<ASSIGN   6187<<ASSIGN
      6230<<ASSIGN   6262<<ASSIGN   6272<<ASSIGN   6457<<ASSIGN   6478<<ASSIGN   6647<<ASSIGN   6683<<ASSIGN
      6735<<ASSIGN   6743<<ASSIGN   6864<<ASSIGN   6880>>IF       6896>>IF       6930>>ASSIGN   6935<<ASSIGN
      6942<<ASSIGN   6971<<ASSIGN   7052<<ASSIGN   7091<<ASSIGN   7127>>IF       7132<<ASSIGN   7135<<ASSIGN
      7144<<ASSIGN   7173<<ASSIGN   7188<<ASSIGN   7304<<ASSIGN   7311<<ASSIGN   7388<<ASSIGN   7446<<ASSIGN
      7611<<ASSIGN   7642<<ASSIGN   7651<<ASSIGN   7672<<ASSIGN   7795<<ASSIGN   7803>>IF       7809<<ASSIGN
      7844>>IF       7850<<ASSIGN   7954<<ASSIGN   7982<<ASSIGN   7993>>IF       8002<<ASSIGN   8012>>IF
      8018<<ASSIGN   8036>>ASSIGN   8041<<ASSIGN   8048<<ASSIGN   8060>>IF       8062<<ASSIGN   8157<<ASSIGN
      8176<<ASSIGN   8194<<ASSIGN
B$JIT.ERR.CODE
       337**DCL      4719>>IF       4947>>IF       4947>>IF       4952>>IF       5062>>IF       5194>>IF
      5548>>IF       5674>>ASSIGN   5818>>IF       5911>>IF       5980>>IF       6010>>DOWHILE  6026>>IF
      6065>>IF       6065>>IF       6092>>IF       6175>>IF       6228>>IF       6585>>ASSIGN   6611>>IF
      6926>>IF       7050>>IF       7129>>IF       7132>>IF       7805>>IF       7846>>IF       8014>>IF
      8032>>IF       8094>>IF       8187>>IF
B$JIT.ERR.MID
       337**DCL       337--REDEF
B$JIT.FBUL
       425**DCL      7387>>IF
B$JIT.JRESPEAK
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:627  
       427**DCL       428--REDEF
B$JIT.PRIV.ACTIVE
       337**DCL      5451>>IF
B$JIT$
      3757**DCL       331--IMP-PTR  4316>>ASSIGN   4357>>ASSIGN   4360>>IF       4370>>ASSIGN   4390>>ASSIGN
      4393>>ASSIGN   4399>>ASSIGN   4479>>ASSIGN   4554>>ASSIGN   4634>>IF       4653>>ASSIGN   4719>>IF
      4720>>ASSIGN   4737>>IF       4738>>ASSIGN   4755>>ASSIGN   4769>>ASSIGN   4779>>ASSIGN   4928>>ASSIGN
      4947>>IF       4947>>IF       4949>>ASSIGN   4952>>IF       4971>>ASSIGN   5010>>ASSIGN   5041>>ASSIGN
      5062>>IF       5064>>ASSIGN   5091>>ASSIGN   5170>>ASSIGN   5194>>IF       5195>>ASSIGN   5224>>ASSIGN
      5251>>ASSIGN   5259>>ASSIGN   5311>>ASSIGN   5315>>ASSIGN   5321>>ASSIGN   5374>>ASSIGN   5428>>ASSIGN
      5447>>ASSIGN   5451>>IF       5452>>ASSIGN   5492>>ASSIGN   5542>>ASSIGN   5548>>IF       5556>>ASSIGN
      5576>>ASSIGN   5603>>ASSIGN   5639>>ASSIGN   5670>>ASSIGN   5674>>ASSIGN   5681>>ASSIGN   5682>>ASSIGN
      5728>>ASSIGN   5768>>ASSIGN   5775>>ASSIGN   5796>>ASSIGN   5818>>IF       5834>>ASSIGN   5839>>ASSIGN
      5860>>ASSIGN   5886>>ASSIGN   5911>>IF       5932>>ASSIGN   5971>>ASSIGN   5980>>IF       5982>>ASSIGN
      6010>>DOWHILE  6026>>IF       6065>>IF       6065>>IF       6092>>IF       6123>>ASSIGN   6145>>ASSIGN
      6175>>IF       6176>>ASSIGN   6187>>ASSIGN   6228>>IF       6230>>ASSIGN   6262>>ASSIGN   6272>>ASSIGN
      6457>>ASSIGN   6478>>ASSIGN   6585>>ASSIGN   6611>>IF       6647>>ASSIGN   6683>>ASSIGN   6735>>ASSIGN
      6743>>ASSIGN   6864>>ASSIGN   6880>>IF       6896>>IF       6926>>IF       6930>>ASSIGN   6935>>ASSIGN
      6942>>ASSIGN   6971>>ASSIGN   7050>>IF       7052>>ASSIGN   7091>>ASSIGN   7127>>IF       7129>>IF
      7132>>IF       7132>>ASSIGN   7135>>ASSIGN   7144>>ASSIGN   7173>>ASSIGN   7188>>ASSIGN   7304>>ASSIGN
      7311>>ASSIGN   7387>>IF       7388>>ASSIGN   7446>>ASSIGN   7611>>ASSIGN   7642>>ASSIGN   7651>>ASSIGN
      7672>>ASSIGN   7795>>ASSIGN   7803>>IF       7805>>IF       7809>>ASSIGN   7844>>IF       7846>>IF
      7850>>ASSIGN   7954>>ASSIGN   7982>>ASSIGN   7993>>IF       8002>>ASSIGN   8012>>IF       8014>>IF
      8018>>ASSIGN   8032>>IF       8036>>ASSIGN   8041>>ASSIGN   8048>>ASSIGN   8060>>IF       8062>>ASSIGN
      8094>>IF       8157>>ASSIGN   8176>>ASSIGN   8187>>IF       8194>>ASSIGN   8285>>ASSIGN
B$PS$
       538**DCL      4605>>CALL     4605>>CALL     4824>>ASSIGN   4832>>ASSIGN   4860>>CALL     4860>>CALL
      5502>>CALL     5765>>ASSIGN   6101>>CALL     6101>>CALL     6243>>ASSIGN   6244>>ASSIGN   6259>>ASSIGN
      6321>>ASSIGN   6330>>ASSIGN   7264>>ASSIGN   7268>>ASSIGN   7271>>ASSIGN   7274>>ASSIGN   7277>>ASSIGN
      7301>>ASSIGN
B$SR_NON_DEC$
      3616**DCL      3617--IMP-PTR  7671>>CALLBLT
B$XL_ASC_EBC$
      3624**DCL      3625--IMP-PTR  5238>>CALLBLT  5740>>CALLBLT  6507>>CALLBLT
B$XL_EBC_ASC$
      3628**DCL      3629--IMP-PTR  5186>>CALLBLT  5572>>CALLBLT  6156>>CALLBLT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:628  
B$XL_MOD_256$
      3620**DCL      3621--IMP-PTR  5239>>CALLBLT  5741>>CALLBLT  6508>>CALLBLT
B$XL_UPPER_UR$
      3632**DCL      3633--IMP-PTR  6500>>CALLBLT
B$XL_UR$
      3636**DCL      3637--IMP-PTR  6499>>CALLBLT
BASED_WORD
      3700**DCL      4824<<ASSIGN   4832<<ASSIGN   6117>>ASSIGN   6260>>IF       6333<<ASSIGN   6335>>ASSIGN
      7215>>ASSIGN   7346>>ASSIGN   7348>>ASSIGN
BLKEND IN PROCEDURE FTW_PR
      6950**LABEL    6948--CALLALT
BOF
      3751**DCL      4560<<ASSIGN   4561<<ASSIGN   4656<<ASSIGN   4690>>IF       5340>>IF
BYTES_TO_GO
      3701**DCL      6134<<ASSIGN   6137>>DOWHILE  6138>>ASSIGN   6161<<ASSIGN   6161>>ASSIGN   6165>>IF
      6181<<ASSIGN   6368<<ASSIGN   6372<<ASSIGN   6375<<ASSIGN   6377>>DOWHILE  6401>>IF       6423<<ASSIGN
      6447>>ASSIGN   6454<<ASSIGN   6454>>ASSIGN   6459<<ASSIGN   6463>>ASSIGN   6464<<ASSIGN   6480<<ASSIGN
      6517>>IF       6523>>IF       6556<<ASSIGN
CANTCONT IN PROCEDURE FTW_RNR
      6171**LABEL    6167--CALLALT
CHARS
      3702**DCL      5238<<CALLBLT  5238>>CALLBLT  5239<<CALLBLT  5239>>CALLBLT  5572<<CALLBLT  5572>>CALLBLT
      5740<<CALLBLT  5740>>CALLBLT  5741<<CALLBLT  5741>>CALLBLT  6156<<CALLBLT  6156>>CALLBLT  6157<<ASSIGN
      6157>>ASSIGN   6159<<ASSIGN   6159>>ASSIGN   6499>>CALLBLT  6500>>CALLBLT  6501>>ASSIGN   6503>>ASSIGN
      6709<<ASSIGN   6709>>ASSIGN   6722<<ASSIGN   6722>>ASSIGN   6731<<ASSIGN   6731>>ASSIGN
CHARZ
      3703**DCL      5186<<CALLBLT  5186>>CALLBLT  5815<<ASSIGN   5815>>ASSIGN   6409<<ASSIGN   6409>>ASSIGN
      6415<<ASSIGN   6415>>ASSIGN   6499<<CALLBLT  6500<<CALLBLT  6501<<ASSIGN   6503<<ASSIGN   6507<<CALLBLT
      6507>>CALLBLT  6508<<CALLBLT  6508>>CALLBLT  7241>>IF       7241>>IF       7243>>IF       7243>>IF
      7471<<ASSIGN   7478<<ASSIGN   8310<<ASSIGN   8311<<ASSIGN
CHARZLEN
      3704**DCL      3703--IMP-SIZ  5183<<ASSIGN   5184>>IF       5185<<ASSIGN   5186>>CALLBLT  5186>>CALLBLT
      5813<<ASSIGN   5815>>ASSIGN   5815>>ASSIGN   6408<<ASSIGN   6409>>ASSIGN   6409>>ASSIGN   6414<<ASSIGN
      6415>>ASSIGN   6415>>ASSIGN   6493<<ASSIGN   6494<<ASSIGN   6499>>CALLBLT  6500>>CALLBLT  6501>>ASSIGN
      6503>>ASSIGN   6507>>CALLBLT  6507>>CALLBLT  6508>>CALLBLT  6508>>CALLBLT  6530>>ASSIGN   6708<<ASSIGN
      6721<<ASSIGN   7225<<ASSIGN   7227>>IF       7229>>IF       7232<<ASSIGN   7237<<ASSIGN   7241>>IF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:629  
      7241>>IF       7243>>IF       7243>>IF       7467<<ASSIGN   7468>>IF       7471>>ASSIGN   7472>>IF
      7478>>ASSIGN   7479>>IF       8300<<ASSIGN   8302<<ASSIGN   8304<<ASSIGN   8306<<ASSIGN   8310>>ASSIGN
      8311>>ASSIGN   8312>>ASSIGN
CHKCVOLE IN PROCEDURE FTW_PNRS
      8072**LABEL    8083--CALLALT
CHKEOF IN PROCEDURE FTW_FNDKEY
      7108**LABEL    7109--CALLALT  7111--CALLALT
CHKEOF IN PROCEDURE FTW_PNRSNE
      7047**LABEL    7047--CALLALT
CHKEOF IN PROCEDURE FTW_WEOF
      5059**LABEL    5059--CALLALT
CHKEOF IN PROCEDURE FTW_WNR
      6225**LABEL    6225--CALLALT
CHKEOF2 IN PROCEDURE FTW_FNDKEY
      7182**LABEL    7183--CALLALT  7184--CALLALT
CHKEOFV IN PROCEDURE FTW_PFUSRBUF
      6019**LABEL    6017--CALLALT  6021--CALLALT
CHKEOFV IN PROCEDURE FTW_PRUSRBUF
      5905**LABEL    5903--CALLALT  5908--CALLALT
CHKEOFV IN PROCEDURE FTW_RUSRBUF
      5670**LABEL    5559--CALLALT
CHKEOFV2 IN PROCEDURE FTW_PRUSRBUF
      5974**LABEL    5972--CALLALT
CHKKEYE IN PROCEDURE FTW_RNR
      6063**LABEL    6062--CALLALT
CHKKEYE2 IN PROCEDURE FTW_RNR
      6088**LABEL    6089--CALLALT
CHKNEWBLK IN PROCEDURE FTW_PNRS
      7981**LABEL    7958--GOTO     7962--CALLALT  7980--CALLALT
CHKVOLOUT IN PROCEDURE FTW_RDEV
      5182**LABEL    5152--CALLALT
CRNTKEY IN PROCEDURE FTW_RUSRBUF
      5477**DCL      5583<<ASSIGN   5585>>ASSIGN   5597>>IF       5598>>IF       5614>>IF       5618>>ASSIGN
      5621>>ASSIGN   5625>>DOWHILE  5633>>IF       5652>>ASSIGN
CVOLALT
      4867**LABEL    4792--CALLALT  4826--CALLALT  4845--CALLALT  4850--CALLALT  4860--CALLALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:630  
CVOLFT
      3683**DCL      4741<<ASSIGN   4746<<ASSIGN   4819>>IF       4827>>IF
DATA_INCON IN PROCEDURE FTW_RUSRBUF
      5478**DCL      5528<<ASSIGN   5642<<ASSIGN   5670>>IF       5680>>IF
DCRECNO
      3705**DCL      5876<<ASSIGN   5916>>ASSIGN   5929>>IF       5932>>IF       5965>>ASSIGN   6846<<ASSIGN
      6849<<ASSIGN   6861>>IF       6866>>ASSIGN   6969>>ASSIGN   7124<<ASSIGN   7142>>IF       7186>>IF
DCVOL
      3706**DCL      4902<<ASSIGN   4945>>ASSIGN
DDDT$
      3707**DCL      1867--IMP-PTR  4397<<ASSIGN   4398>>IF       4398>>IF       4408>>IF       4428>>IF
      4437>>ASSIGN   5036>>ASSIGN   5168>>ASSIGN   5171>>ASSIGN   5171>>ASSIGN   5177>>ASSIGN   5243>>ASSIGN
      5298>>ASSIGN   5310>>ASSIGN   5312>>ASSIGN   5312>>ASSIGN   5316>>ASSIGN   5316>>ASSIGN   5322>>ASSIGN
      5352>>ASSIGN   5362>>ASSIGN   5364>>ASSIGN   5364>>ASSIGN   5368>>ASSIGN   5368>>ASSIGN   5375>>ASSIGN
      5551>>ASSIGN   5820>>ASSIGN   6615>>ASSIGN   6773<<ASSIGN   6928>>ASSIGN   8034>>ASSIGN   8189>>ASSIGN
      8295<<ASSIGN   8322>>ASSIGN   8356>>ASSIGN   8392>>ASSIGN
DUB$
      3708**DCL      5138<>CALL     5139<>CALL     5186>>CALLBLT  5186>>CALLBLT  5232<>CALL     5236<>CALL
      5238>>CALLBLT  5238>>CALLBLT  5239>>CALLBLT  5239>>CALLBLT  5241<>CALL     5432<>CALL     5456<>CALL
      5523>>ASSIGN   5525>>ASSIGN   5738<>CALL     5740>>CALLBLT  5740>>CALLBLT  5741>>CALLBLT  5741>>CALLBLT
      5790>>ASSIGN   5792>>ASSIGN   6156>>CALLBLT  6157>>ASSIGN   6159>>ASSIGN   6168<<ASSIGN   6168>>ASSIGN
      6250>>ASSIGN   6323>>ASSIGN   6367<<ASSIGN   6499>>CALLBLT  6500>>CALLBLT  6501>>ASSIGN   6503>>ASSIGN
      6544<<ASSIGN   6544>>ASSIGN   6557<<ASSIGN   7011<<ASSIGN
DUBYTES
      3709**DCL      3702--IMP-SIZ  5136>>ASSIGN   5184>>IF       5185>>ASSIGN   5222>>IF       5227>>ASSIGN
      5238>>CALLBLT  5238>>CALLBLT  5239>>CALLBLT  5239>>CALLBLT  5431>>ASSIGN   5530>>DOWHILE  5538>>ASSIGN
      5545>>IF       5546>>ASSIGN   5571<<ASSIGN   5572>>CALLBLT  5572>>CALLBLT  5590>>ASSIGN   5631<<ASSIGN
      5631>>ASSIGN   5658<<ASSIGN   5658>>ASSIGN   5659>>IF       5725>>IF       5729<<ASSIGN   5740>>CALLBLT
      5740>>CALLBLT  5741>>CALLBLT  5741>>CALLBLT  5794>>DOWHILE  5795>>IF       5804>>ASSIGN   5805<<ASSIGN
      5805>>ASSIGN   5833>>IF       5840<<ASSIGN   6134>>ASSIGN   6138<<ASSIGN   6144>>IF       6146<<ASSIGN
      6156>>CALLBLT  6156>>CALLBLT  6157>>ASSIGN   6157>>ASSIGN   6159>>ASSIGN   6159>>ASSIGN   6160>>ASSIGN
      6161>>ASSIGN   6168>>ASSIGN   6184>>ASSIGN   6301>>IF       6372>>ASSIGN   6375>>ASSIGN   6383>>IF
      6453<<ASSIGN   6454>>ASSIGN   6458<<ASSIGN   6463<<ASSIGN   6476>>IF       6479<<ASSIGN   6482>>ASSIGN
      6494>>ASSIGN   6499>>CALLBLT  6500>>CALLBLT  6501>>ASSIGN   6503>>ASSIGN   6534>>ASSIGN   6544>>ASSIGN
      6709>>ASSIGN   6709>>ASSIGN   6722>>ASSIGN   6722>>ASSIGN   6731>>ASSIGN   6731>>ASSIGN   7012<<ASSIGN
      7309>>IF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:631  
DVBYTE
      3710**DCL      4338<<ASSIGN   4506<<ASSIGN   7509>>ASSIGN
ENDCVOL IN PROCEDURE FTW_POSEOSECT
      4944**LABEL    4916--CALLALT  4919--CALLALT  4923--CALLALT  4933--CALLALT  4935--CALLALT
ENDENQUEUE
      4878**LABEL    4784--CALLALT
ENDFNDKEYX IN PROCEDURE FTW_FNDKEY
      7129**LABEL    7138--CALLALT  7140--CALLALT  7141--CALLALT
ENDPFIL IN PROCEDURE FTW_PFIL2
      4707**LABEL    4707--CALLALT  4710--CALLALT
ENDPRECORD IN PROCEDURE FTW_PRECORD
      4625**LABEL    4575--CALLALT  4588--CALLALT  4620--CALLALT  4621--CALLALT
EOFCNT IN PROCEDURE FTW_RDEV
      5121**DCL      5125<<ASSIGN   5143<<ASSIGN   5143>>ASSIGN   5144>>IF
EOXL
      3711**DCL      4860<>CALL     4919<>CALL     5559<>CALL     5801<>CALL     5908<>CALL     6017<>CALL
      6286<>CALL     6663<>CALL     6717<>CALL     8083<>CALL     8198<>CALL
ERRSAV
      3712**DCL      5971<<ASSIGN   5982>>ASSIGN   6930<<ASSIGN   6935>>ASSIGN   8036<<ASSIGN   8041>>ASSIGN
E_BADBLKL
      3781**DCL      7446>>ASSIGN
E_BADKEY
      3797**DCL      7091>>ASSIGN   7304>>ASSIGN
E_BADRECL
      3810**DCL      7642>>ASSIGN   7651>>ASSIGN
E_BADSPAN
      3825**DCL      6176>>ASSIGN   7611>>ASSIGN
E_BOF
      3843**DCL      5315>>ASSIGN   5932>>ASSIGN   6864>>ASSIGN
E_BOT
      3859**DCL      5321>>ASSIGN   5374>>ASSIGN
E_CANTIO
      3874**DCL      4393>>ASSIGN   4399>>ASSIGN
E_CANTTRANSLATE
      3888**DCL      5259>>ASSIGN   5860>>ASSIGN
E_CVBOT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:632  
      3903**DCL      6743>>ASSIGN
E_DI
      3918**DCL      5603>>ASSIGN   5639>>ASSIGN   5670>>ASSIGN   5681>>ASSIGN
E_DOMAIN
      3931**DCL      4769>>ASSIGN
E_EOF
      3946**DCL      4928>>ASSIGN   5170>>ASSIGN   5195>>ASSIGN   5311>>ASSIGN   5492>>ASSIGN   5886>>ASSIGN
      8002>>ASSIGN   8176>>ASSIGN
E_EOT
      3959**DCL      5041>>ASSIGN   5251>>ASSIGN
E_EOVOL
      3973**DCL      5834>>ASSIGN   6647>>ASSIGN   6683>>ASSIGN
E_EOVOLS
      3987**DCL      5839>>ASSIGN
E_FILLIM
      4003**DCL      6262>>ASSIGN
E_INDBC
      4015**DCL      7311>>ASSIGN
E_KEYORDER
      4029**DCL      5775>>ASSIGN   6272>>ASSIGN
E_LD
      4043**DCL      5576>>ASSIGN   5728>>ASSIGN   6145>>ASSIGN   6187>>ASSIGN   6457>>ASSIGN   6478>>ASSIGN
E_NOCONT
      4060**DCL      4479>>ASSIGN
E_NOFPOOL
      4076**DCL      7388>>ASSIGN   8157>>ASSIGN
E_NOKEY
      4105**DCL      7132>>ASSIGN   7144>>ASSIGN   7173>>ASSIGN   7188>>ASSIGN
E_NONDECRCW
      4117**DCL      7672>>ASSIGN
E_NOTAUTH
      4132**DCL      5452>>ASSIGN
E_NOTIMPLEMENTED
      4158**DCL      4554>>ASSIGN   4653>>ASSIGN   4738>>ASSIGN   4971>>ASSIGN   5010>>ASSIGN   5428>>ASSIGN
      5447>>ASSIGN
E_NOTJRNLOWNER
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:633  
      4174**DCL      4779>>ASSIGN
E_PARTIALKEY
      4186**DCL      6123>>ASSIGN
E_RANBADBLK
      4201**DCL      5768>>ASSIGN
E_SMALLRECL
      4215**DCL      5224>>ASSIGN   5542>>ASSIGN   5796>>ASSIGN
E_VOLOUT
      4230**DCL      6735>>ASSIGN
F$DCB.ACS
      1395**DCL      4326>>IF       4354>>IF       4367>>IF       4776>>IF       4861>>IF       4874>>IF
      5771>>IF       6239>>IF       6326>>IF       6336>>IF       6640>>IF       7129>>IF       7171>>IF
      7966>>IF       8072>>IF
F$DCB.ACTPOS
      1403**DCL      1403--REDEF
F$DCB.AFTRBLK
      1410**DCL      6631<<ASSIGN   6728<<ASSIGN   6815<<ASSIGN   6914<<ASSIGN   6917>>IF       6945<<ASSIGN
      7709>>IF       7772<<ASSIGN   8052>>IF       8055<<ASSIGN   8085<<ASSIGN   8104<<ASSIGN   8314>>IF
      8326<<ASSIGN
F$DCB.ARS
      1378**DCL      1378--REDEF    4430<<ASSIGN   4803<<ASSIGN   4811<<ASSIGN   4915<<ASSIGN   4917>>ASSIGN
      4918>>ASSIGN   5136<<ASSIGN   5146<<ASSIGN   5150<<ASSIGN   5156<<ASSIGN   5169<<ASSIGN   5183>>ASSIGN
      5227<<ASSIGN   5279<<ASSIGN   5283<<ASSIGN   5290>>IF       5291<<ASSIGN   5295<<ASSIGN   5343<<ASSIGN
      5343>>ASSIGN   5349<<ASSIGN   5402<<ASSIGN   5406<<ASSIGN   5411<<ASSIGN   5431<<ASSIGN   5532<<ASSIGN
      5538<<ASSIGN   5540<<ASSIGN   5541>>IF       5545>>IF       5546<<ASSIGN   5571>>ASSIGN   5600<<ASSIGN
      5608>>ASSIGN   5622>>ASSIGN   5636<<ASSIGN   5647>>ASSIGN   5657>>ASSIGN   5669<<ASSIGN   5676<<ASSIGN
      5699<<ASSIGN   5804<<ASSIGN   5805>>ASSIGN   5813>>ASSIGN   5837<<ASSIGN   5887<<ASSIGN   5894<<ASSIGN
      5896<<ASSIGN   5898>>ASSIGN   5899>>ASSIGN   5900>>ASSIGN   5916<<ASSIGN   5948<<ASSIGN   5951>>ASSIGN
      5952>>ASSIGN   5958<<ASSIGN   5965<<ASSIGN   5973<<ASSIGN   6013<<ASSIGN   6015>>ASSIGN   6016>>ASSIGN
      6082<<ASSIGN   6173<<ASSIGN   6183<<ASSIGN   6710<<ASSIGN   6714<<ASSIGN   6719<<ASSIGN   6724<<ASSIGN
      6740<<ASSIGN   6750<<ASSIGN   6757<<ASSIGN   6767<<ASSIGN   6784<<ASSIGN   6790<<ASSIGN   6796<<ASSIGN
      6799<<ASSIGN   6803<<ASSIGN   6806<<ASSIGN   6812<<ASSIGN   6866<<ASSIGN   6906<<ASSIGN   6909>>ASSIGN
      6911>>ASSIGN   6912<<ASSIGN   6918<<ASSIGN   6920<<ASSIGN   6924<<ASSIGN   6931<<ASSIGN   6933<<ASSIGN
      6940>>ASSIGN   6969<<ASSIGN   6970>>IF       6970<<ASSIGN   6970>>ASSIGN   7163<<ASSIGN   7397<<ASSIGN
      7400>>ASSIGN   7405<<ASSIGN   7407<<ASSIGN   7702<<ASSIGN   7719<<ASSIGN   7723<<ASSIGN   7727<<ASSIGN
      7732<<ASSIGN   8024<<ASSIGN   8030<<ASSIGN   8037<<ASSIGN   8039<<ASSIGN   8046>>ASSIGN   8181<<ASSIGN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:634  
      8185<<ASSIGN   8316<<ASSIGN   8319<<ASSIGN   8357<<ASSIGN   8365<<ASSIGN   8420>>ASSIGN
F$DCB.ASN
      1393**DCL      4362>>IF       4373>>IF       4428>>IF       4462>>IF       4513>>IF       4572>>IF
      4680>>IF       4798>>IF       4974>>IF       5024>>IF       8348>>IF
F$DCB.ATTR
      1396**DCL      1397--REDEF
F$DCB.BFR.BUFUP
      1422**DCL      5068<<ASSIGN   6291<<ASSIGN   6632<<ASSIGN   6668<<ASSIGN   6680<<ASSIGN   8293>>IF
      8313<<ASSIGN
F$DCB.BFR.BUFX
      1423**DCL      4854>>ASSIGN   5055>>ASSIGN   5093>>IF       5102<<ASSIGN   6210>>ASSIGN   6707>>ASSIGN
      7979>>ASSIGN   8125>>IF       8130>>ASSIGN   8151>>IF       8286>>ASSIGN
F$DCB.BLKL
      1393**DCL      5589>>ASSIGN   5618>>ASSIGN   5621>>ASSIGN   5628>>ASSIGN   5630>>ASSIGN   5631>>ASSIGN
      5658>>ASSIGN   5661>>ASSIGN   5663>>ASSIGN   5664>>ASSIGN   5725>>IF       5729>>ASSIGN   5804>>ASSIGN
      5844>>ASSIGN   5846>>ASSIGN   6186>>IF       6301>>IF       6301>>IF       6301>>IF       6382>>ASSIGN
      6390>>ASSIGN   6401>>IF       6420>>ASSIGN   6705>>ASSIGN   6708>>ASSIGN   6721>>ASSIGN   6924>>ASSIGN
      6933>>ASSIGN   7387>>IF       7392>>CALL     7397>>ASSIGN   7407>>ASSIGN   8030>>ASSIGN   8039>>ASSIGN
      8127>>CALL
F$DCB.BLKLEN
      1416**DCL      4853<<ASSIGN   5067<<ASSIGN   6120>>IF       6290<<ASSIGN   6301>>IF       6301>>IF
      6301>>IF       6410<<ASSIGN   6418<<ASSIGN   6533<<ASSIGN   6570>>ASSIGN   6628<<ASSIGN   6645<<ASSIGN
      6666<<ASSIGN   6681<<ASSIGN   6940<<ASSIGN   7400<<ASSIGN   7444>>IF       7448<<ASSIGN   7473>>ASSIGN
      7480>>CALLBLT  7481<<ASSIGN   7549>>IF       7551>>ASSIGN   7638>>IF       7640>>ASSIGN   7854<<ASSIGN
      8046<<ASSIGN   8105<<ASSIGN   8229>>IF       8232>>IF       8238>>IF       8253<<ASSIGN   8301>>IF
      8302>>ASSIGN   8304>>ASSIGN   8304>>ASSIGN   8306>>ASSIGN   8306>>ASSIGN   8308>>ASSIGN   8312<<ASSIGN
      8312>>ASSIGN   8319>>ASSIGN   8420<<ASSIGN
F$DCB.BLOCKED
      1392**DCL      6301>>IF       6545>>IF
F$DCB.BOL
      1394**DCL      4851>>ASSIGN   4853>>ASSIGN   6287>>ASSIGN   6299>>IF       6401>>IF       6626>>ASSIGN
      6628>>ASSIGN   6664>>ASSIGN   6666>>ASSIGN   7435>>IF       7467>>ASSIGN   7758>>ASSIGN   7792>>ASSIGN
      8057>>ASSIGN   8105>>ASSIGN   8106>>ASSIGN
F$DCB.BORROW
      1411**DCL      1411--REDEF    1411--REDEF    1411--REDEF
F$DCB.BYTESLEFT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:635  
      1414**DCL      6343<<ASSIGN   6476>>IF       6479>>ASSIGN   6482<<ASSIGN   6482>>ASSIGN
F$DCB.CBUFNUM
      1414**DCL      4854>>ASSIGN   5055>>ASSIGN   5068>>ASSIGN   5101<<ASSIGN   6210>>ASSIGN   6291>>ASSIGN
      6632>>ASSIGN   6668>>ASSIGN   6680>>ASSIGN   6707>>ASSIGN   7394<<ASSIGN   7979>>ASSIGN   8125>>IF
      8128<<ASSIGN   8130>>ASSIGN   8286>>ASSIGN   8293>>IF       8313>>ASSIGN
F$DCB.CFU$
      1412**DCL      4784<>CALL     4862>>ASSIGN   4868<>CALL     4880<>CALL     6651>>ASSIGN
F$DCB.CNVRT
      1390**DCL      5180>>IF       5234>>IF       5569>>IF       5736>>IF       6155>>IF       6504>>IF
F$DCB.CONT
      1410**DCL      4527<<ASSIGN   4849<<ASSIGN   5050<<ASSIGN   6216>>IF       6401>>IF       6575<<ASSIGN
      6577<<ASSIGN
F$DCB.CRECNO
      1415**DCL      4918<<ASSIGN   4918>>ASSIGN   5563<<ASSIGN   5563>>ASSIGN   5702<<ASSIGN   5702>>ASSIGN
      5829<<ASSIGN   5829>>ASSIGN   5876>>ASSIGN   5899<<ASSIGN   5899>>ASSIGN   5916>>ASSIGN   5943<<ASSIGN
      5943>>ASSIGN   5961<<ASSIGN   5961>>ASSIGN   5965>>ASSIGN   5976<<ASSIGN   5976>>ASSIGN   6016<<ASSIGN
      6016>>ASSIGN   6172<<ASSIGN   6172>>ASSIGN   6571<<ASSIGN   6571>>ASSIGN   6846>>ASSIGN   6849>>ASSIGN
      6876<<ASSIGN   6876>>ASSIGN   6950<<ASSIGN   6950>>ASSIGN   6969>>ASSIGN   7124>>ASSIGN   7142>>IF
      7166<<ASSIGN   7166>>ASSIGN   7186>>IF       7276>>ASSIGN   7757<<ASSIGN   7963<<ASSIGN   7963>>ASSIGN
      7998<<ASSIGN   7998>>ASSIGN   8070<<ASSIGN   8070>>ASSIGN   8096<<ASSIGN   8096>>ASSIGN   8201<<ASSIGN
      8201>>ASSIGN
F$DCB.CRECX
      1414**DCL      4851<<ASSIGN   5067>>ASSIGN   6110>>ASSIGN   6116>>ASSIGN   6120>>IF       6152>>ASSIGN
      6287<<ASSIGN   6290>>ASSIGN   6299>>IF       6319>>ASSIGN   6328>>ASSIGN   6382>>ASSIGN   6390>>ASSIGN
      6401>>IF       6401>>IF       6407>>ASSIGN   6410>>ASSIGN   6413>>ASSIGN   6418>>ASSIGN   6420>>ASSIGN
      6491>>ASSIGN   6533>>ASSIGN   6548<<ASSIGN   6548>>ASSIGN   6570<<ASSIGN   6626<<ASSIGN   6645>>ASSIGN
      6664<<ASSIGN   6681>>ASSIGN   7156>>ASSIGN   7262>>ASSIGN   7266>>ASSIGN   7270>>ASSIGN   7337>>ASSIGN
      7341>>ASSIGN   7345>>ASSIGN   7505>>ASSIGN   7512>>ASSIGN   7544>>ASSIGN   7549>>IF       7551>>ASSIGN
      7561>>ASSIGN   7638>>IF       7640>>ASSIGN   7758<<ASSIGN   7792<<ASSIGN   7854>>ASSIGN   7900<<ASSIGN
      7900>>ASSIGN   8057<<ASSIGN   8106<<ASSIGN   8229>>IF       8232>>IF       8234>>ASSIGN   8238>>IF
      8240>>ASSIGN   8253>>ASSIGN
F$DCB.CVOL
      1392**DCL      4902>>ASSIGN   4903<<ASSIGN   4945<<ASSIGN   5040>>IF       5140>>IF       5250>>IF
      5821>>IF       5832>>IF       6613>>IF       6660>>IF
F$DCB.DCBNAME.L
      1425**DCL      1425--IMP-SIZ
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:636  
F$DCB.DVBYTE
      1381**DCL      7559<<ASSIGN
F$DCB.EBCDIC
      1390**DCL      5180>>IF       5237>>IF       5569>>IF       5739>>IF       6153>>IF       6506>>IF
      6761>>IF       6776>>IF       7018>>IF       8298>>IF       8309>>IF
F$DCB.ENQF
      1410**DCL      4785<<ASSIGN   4867>>IF       4869<<ASSIGN   4878>>IF       4881<<ASSIGN
F$DCB.EOMCHAR
      1382**DCL      1382--REDEF
F$DCB.EOP
      1407**DCL      4469<<ASSIGN   4477>>IF       4491<<ASSIGN   4526>>IF       4537<<ASSIGN   4576<<ASSIGN
      4627<<ASSIGN   4631<<ASSIGN   4698<<ASSIGN   4713<<ASSIGN   4717<<ASSIGN   4843>>IF       4946<<ASSIGN
      5032<<ASSIGN   5072<<ASSIGN   5685<<ASSIGN   5856<<ASSIGN   6136<<ASSIGN   6581<<ASSIGN   6591<<ASSIGN
      6684<<ASSIGN   6968<<ASSIGN
F$DCB.FCD
      1391**DCL      4756>>IF       4761>>IF
F$DCB.FFLG.EXEC
      1383**DCL      4764>>IF
F$DCB.FLDID
      1406**DCL      1406--REDEF
F$DCB.FMOD
      1407**DCL      5030<<ASSIGN   5069<<ASSIGN   5228<<ASSIGN   5853<<ASSIGN   6293<<ASSIGN   6578<<ASSIGN
      6588<<ASSIGN
F$DCB.FORM$
      1400**DCL      1400--REDEF
F$DCB.FSECT
      1416**DCL      1416--REDEF    5946>>CALL     5950>>IF       6760<<ASSIGN   6762<<ASSIGN   6762>>ASSIGN
      6777<<ASSIGN   6779<<ASSIGN   6779>>ASSIGN   6780>>CALLBLT  6905>>CALL     6908>>IF       7696>>IF
      7976>>IF
F$DCB.FSN
      1393**DCL      1393--REDEF    1393--REDEF    1394--REDEF    6764<<ASSIGN
F$DCB.FUN
      1392**DCL      7966>>IF       7966>>IF       8072>>IF       8072>>IF
F$DCB.GDISP
      1417**DCL      6112<<ASSIGN   6115<<ASSIGN   6119<<ASSIGN   6120>>IF       6122<<ASSIGN   6143>>ASSIGN
      6152>>ASSIGN   6174<<ASSIGN   6184<<ASSIGN   6184>>ASSIGN   6186>>IF       6325<<ASSIGN   6337<<ASSIGN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:637  
      6339<<ASSIGN   6383>>IF       6401>>IF       6406<>CALL     6408>>ASSIGN   6414>>ASSIGN   6418>>ASSIGN
      6423>>ASSIGN   6447>>ASSIGN   6453>>ASSIGN   6458>>ASSIGN   6491>>ASSIGN   6493>>ASSIGN   6530>>ASSIGN
      6534<<ASSIGN   6534>>ASSIGN   6548>>ASSIGN   6549<<ASSIGN   7652<<ASSIGN   7759<<ASSIGN   7797<<ASSIGN
      7813<<ASSIGN   7903<<ASSIGN   8064<<ASSIGN   8108<<ASSIGN
F$DCB.HEADER$
      1399**DCL      1399--REDEF
F$DCB.IASN
      1419**DCL      4463>>IF       4514>>IF       4553>>IF       4652>>IF       4737>>IF       4970>>IF
      5009>>IF       5548>>IF       5574>>IF       5818>>IF       6100>>IF       6607>>IF       7396>>IF
      8314>>IF       8320>>IF       8385>>IF       8410>>IF
F$DCB.IFMT
      1418**DCL      4775>>IF
F$DCB.IGNOREFSN
      1389**DCL      7603>>IF       7607>>IF
F$DCB.IOERROK
      1390**DCL      4356>>IF       4369>>IF       5552>>IF       5821>>IF       6616>>IF       6929>>IF
      7603>>IF       8035>>IF       8190>>IF
F$DCB.IXTNSIZE
      1397**DCL      1397--REDEF
F$DCB.KEYL
      1395**DCL      6119>>ASSIGN   6251>>ASSIGN   7095>>ASSIGN   7237>>ASSIGN   7267>>ASSIGN   7308>>ASSIGN
      7342>>ASSIGN
F$DCB.KEYX
      1394**DCL      6250>>ASSIGN   6323>>ASSIGN   7309>>IF
F$DCB.LASTKEY
      1411**DCL      5585<<ASSIGN   5773>>IF       5779<<ASSIGN   5808<<ASSIGN   5808>>ASSIGN   5809>>ASSIGN
      6117<<ASSIGN   6265--ASSIGN   6333>>ASSIGN   6335<<ASSIGN   7273>>ASSIGN   7346<<ASSIGN   7348<<ASSIGN
      7766<<ASSIGN   7768<<ASSIGN   8202<<ASSIGN
F$DCB.LASTKEY$
      1411**DCL      6245>>ASSIGN   6252>>ASSIGN   7339>>ASSIGN   7343>>ASSIGN
F$DCB.LASTSTA$
      1387**DCL      1387--REDEF
F$DCB.LPOOL
      1412**DCL      4432>>IF       4434>>CALL     4435<<ASSIGN   5104>>IF       5105>>CALL     5106<<ASSIGN
      8352>>CALL     8353<<ASSIGN
F$DCB.LSTBLK
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:638  
      1410**DCL      4911>>IF       4952<<ASSIGN   5031<<ASSIGN   5071<<ASSIGN   5488>>IF       5855<<ASSIGN
      5884>>IF       5928<<ASSIGN   6004>>IF       6034<<ASSIGN   6580<<ASSIGN   6590<<ASSIGN   6887<<ASSIGN
      7705<<ASSIGN   7737<<ASSIGN   7994>>IF       8175>>IF
F$DCB.LVL
      1412**DCL      1412--REDEF
F$DCB.MAXVOL
      1398**DCL      6733>>IF
F$DCB.MUST_CVOL
      1408**DCL      4834<<ASSIGN   4844>>IF       4985<<ASSIGN   5017>>IF       5043<<ASSIGN   5215>>IF
      5253<<ASSIGN   5679<<ASSIGN   5799>>IF       5831<<ASSIGN   5935<<ASSIGN   6283>>IF       6659<<ASSIGN
      6704<<ASSIGN   6873<<ASSIGN   7695<<ASSIGN
F$DCB.NAME.C
      1387**DCL      1387--REDEF
F$DCB.NEW_FSECT
      1408**DCL      5098>>IF       6294<<ASSIGN   6944<<ASSIGN   7736<<ASSIGN   7973>>IF       8051<<ASSIGN
F$DCB.NOEOF
      1408**DCL      1408--REDEF    4799>>IF       4976>>IF       4980<<ASSIGN   5029<<ASSIGN   5037<<ASSIGN
      5070<<ASSIGN   5132>>IF       5229<<ASSIGN   5277>>IF       5346>>IF       5397>>IF       5408<<ASSIGN
      5800<<ASSIGN   5854<<ASSIGN   6285<<ASSIGN   6292<<ASSIGN   6579<<ASSIGN   6589<<ASSIGN   6662<<ASSIGN
      6716<<ASSIGN   8346>>IF       8359<<ASSIGN
F$DCB.NRECS
      1398**DCL      1398--REDEF
F$DCB.NRECX
      1417**DCL      1417--REDEF    4852<<ASSIGN   6171<<ASSIGN   6171>>ASSIGN   6288<<ASSIGN   6311<<ASSIGN
      6417<<ASSIGN   6572<<ASSIGN   6572>>ASSIGN   6627<<ASSIGN   6665<<ASSIGN   6875>>ASSIGN   6876>>ASSIGN
      6950>>ASSIGN   6951>>ASSIGN   7760<<ASSIGN   7798<<ASSIGN   7814<<ASSIGN   7840<<ASSIGN   7840>>ASSIGN
      7999<<ASSIGN   7999>>ASSIGN   8066<<ASSIGN   8097<<ASSIGN   8097>>ASSIGN   8107<<ASSIGN
F$DCB.OHDR
      1409**DCL      1409--REDEF
F$DCB.OLDIOERR
      1418**DCL      4356>>IF       4356>>IF       4369>>IF       4369>>IF       5531>>IF       5533<<ASSIGN
      5535<<ASSIGN   5554<<ASSIGN   5601>>IF       5637>>IF       6922>>IF       6923<<ASSIGN   6939<<ASSIGN
      7548>>IF       7603>>IF       7608<<ASSIGN   7804>>IF       7804>>IF       7845>>IF       7845>>IF
      7952>>IF       8013>>IF       8013>>IF       8022>>DOCASE   8026<<ASSIGN   8028<<ASSIGN   8045<<ASSIGN
      8060>>IF       8060>>IF       8180>>IF       8183<<ASSIGN   8192<<ASSIGN
F$DCB.ORG
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:639  
      1392**DCL      1392--REDEF    4614>>IF       4614>>IF       4614>>IF       4614>>IF       4614>>IF
      4614>>IF       4614>>IF       4614>>IF       4913>>IF       5488>>IF       5488>>IF       5500>>IF
      5500>>IF       5509>>IF       5509>>IF       5567>>IF       5567>>IF       5726>>IF       5726>>IF
      5748>>IF       5748>>IF       5759>>IF       5759>>IF       5806>>IF       5806>>IF       5892>>IF
      5969>>IF       6011>>IF       6108>>IF       6108>>IF       6108>>IF       6111>>IF       6113>>IF
      6236>>DOCASE   6241>>IF       6248>>IF       6301>>IF       6301>>IF       6317>>DOCASE   6320>>IF
      6364>>IF       6383>>IF       6383>>IF       6401>>IF       6492>>IF       6552>>IF       7013>>DOCASE
      7084>>DOCASE   7121>>IF       7213>>DOCASE   7223>>IF       7260>>DOCASE   7297>>DOCASE   7335>>DOCASE
      7764>>DOCASE   7964>>IF       7964>>IF       7964>>IF       8071>>IF       8071>>IF       8071>>IF
      8298>>IF       8309>>IF
F$DCB.OWNER
      1409**DCL      4777>>IF       6641>>IF
F$DCB.PRECNO
      1415**DCL      1415--REDEF    4917<<ASSIGN   4917>>ASSIGN   5562<<ASSIGN   5562>>ASSIGN   5701<<ASSIGN
      5701>>ASSIGN   5824<<ASSIGN   5824>>ASSIGN   5825>>ASSIGN   5828<<ASSIGN   5828>>ASSIGN   5898<<ASSIGN
      5898>>ASSIGN   5936<<ASSIGN   5936>>ASSIGN   5942>>DOWHILE  5943>>ASSIGN   5944>>ASSIGN   5951<<ASSIGN
      5952<<ASSIGN   5960<<ASSIGN   5960>>ASSIGN   5975<<ASSIGN   5975>>ASSIGN   6015<<ASSIGN   6015>>ASSIGN
      6630<<ASSIGN   6630>>ASSIGN   6727<<ASSIGN   6814<<ASSIGN   6902<<ASSIGN   6902>>ASSIGN   6903>>IF
      6904>>DOWHILE  6909<<ASSIGN   6911<<ASSIGN   7165<<ASSIGN   7165>>ASSIGN   7710<<ASSIGN   7710>>ASSIGN
      7712>>IF       7717>>IF       7719>>ASSIGN   7773<<ASSIGN   8053<<ASSIGN   8053>>ASSIGN   8084<<ASSIGN
      8101>>IF       8103<<ASSIGN   8200<<ASSIGN   8200>>ASSIGN
F$DCB.RCSZ
      1420**DCL      1420--REDEF
F$DCB.REALSPAN
      1418**DCL      4317>>IF
F$DCB.RECL
      1393**DCL      6301>>IF       6343>>ASSIGN   6383>>IF       6436>>IF       6437>>ASSIGN   6474>>IF
      6493>>ASSIGN   7541>>ASSIGN   8229>>IF
F$DCB.RES
      1388**DCL      1388--REDEF
F$DCB.RPOS
      1409**DCL      4864<<ASSIGN   4866<<ASSIGN   4936<<ASSIGN   5056>>IF       6080>>IF       6087>>IF
      6126<<ASSIGN   6170<<ASSIGN   6222>>IF       6342<<ASSIGN   6573<<ASSIGN   6844>>IF       6859>>IF
      6965<<ASSIGN   6973<<ASSIGN   6995<<ASSIGN   7110>>IF       7761<<ASSIGN   7799<<ASSIGN   7969<<ASSIGN
      7996>>IF       8000<<ASSIGN   8098<<ASSIGN
F$DCB.SETX
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:640  
      1400**DCL      1400--REDEF    4391>>ASSIGN   6773>>ASSIGN   8295>>ASSIGN
F$DCB.SEZ_OK
      1408**DCL      4814<<ASSIGN   4818<<ASSIGN   6771<<ASSIGN
F$DCB.SPAN
      1409**DCL      4813<<ASSIGN   4863>>IF       6219<<ASSIGN   6341<<ASSIGN   6516>>IF       6520<<ASSIGN
      6525<<ASSIGN   6542>>IF       6574<<ASSIGN   6642>>IF       6676>>IF       7601>>IF       7601>>IF
      7618<<ASSIGN   7620<<ASSIGN   7762<<ASSIGN   7976<<ASSIGN
F$DCB.SPANNED
      1392**DCL      6301>>IF       6383>>IF       6401>>IF       6431>>IF       6451>>IF       6472>>IF
      6515>>IF       7025>>IF       7513>>IF       7562>>IF       8241>>IF
F$DCB.STR
      1416**DCL      6762>>ASSIGN
F$DCB.TAB$
      1399**DCL      1400--REDEF
F$DCB.TAPTYP.CP6F
      1413**DCL      5950>>IF       6908>>IF       7508>>IF       7558>>IF       7700>>IF       7714>>IF
      7730>>IF       8303>>IF       8309>>IF
F$DCB.TAPTYP.HAVLASTKEY
      1413**DCL      5584<<ASSIGN   5771>>IF       5810<<ASSIGN   5836<<ASSIGN   5977<<ASSIGN   6239>>IF
      7167<<ASSIGN   7350<<ASSIGN   7763<<ASSIGN   8203<<ASSIGN
F$DCB.TAPTYP.MANAGED
      1413**DCL      4362>>IF       4373>>IF       4462>>IF       4513>>IF       4572>>IF       4680>>IF
      4800>>IF       4974>>IF       5026>>IF       8298>>IF
F$DCB.TAPTYP.NOCVOL
      1413**DCL      4329<<ASSIGN   4566<<ASSIGN   4674<<ASSIGN   5058<<ASSIGN   6224<<ASSIGN   7102<<ASSIGN
F$DCB.TAPTYP.PASTFM
      1413**DCL      4807>>IF       4978>>IF       4981<<ASSIGN   5038<<ASSIGN   5230<<ASSIGN   5400>>IF
      5409<<ASSIGN
F$DCB.TAPTYP.RWASC
      1413**DCL      8388>>IF       8413>>IF
F$DCB.TAPTYP.USRBUF
      1413**DCL      4461>>IF       4512>>IF       4585>>IF       4619>>IF       4692>>IF       4706>>IF
      4909>>IF       4989>>IF       5051>>IF       7108>>IF       7139>>IF       7154>>IF       7161>>IF
      7182>>IF       7399>>IF       8344>>IF       8418>>IF
F$DCB.TDA
      1414**DCL      1414--REDEF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:641  
F$DCB.TRNC
      1410**DCL      5053>>IF       5099<<ASSIGN   5100<<ASSIGN   6208>>IF       7395>>IF       7414<<ASSIGN
      7972>>IF
F$DCB.TYC
      1378**DCL      4363<<ASSIGN   4374<<ASSIGN   5174<<ASSIGN   5174>>ASSIGN   5296<<ASSIGN   5307<<ASSIGN
      5307>>ASSIGN   5370<<ASSIGN   5370>>ASSIGN   5891>>DOWHILE
F$DCB.TYC.BOF
      1378**DCL      5304>>IF       5358>>IF       5367<<ASSIGN   6712>>IF
F$DCB.TYC.BOT
      1378**DCL      4984<<ASSIGN   5319>>IF       5372>>IF       6742>>IF       7725>>IF
F$DCB.TYC.DI
      1379**DCL      5602<<ASSIGN   5638<<ASSIGN   7550<<ASSIGN   7606<<ASSIGN   7808<<ASSIGN   7849<<ASSIGN
      8017<<ASSIGN   8061<<ASSIGN
F$DCB.TYC.EOD
      1379**DCL      5173<<ASSIGN   5306<<ASSIGN
F$DCB.TYC.EOF
      1379**DCL      5133<<ASSIGN   5140>>IF       5142>>DOWHILE  5158<<ASSIGN   5166>>IF       5280<<ASSIGN
      5304>>IF       5308>>IF       5347<<ASSIGN   5358>>IF       5360>>IF       5363<<ASSIGN   5558>>IF
      5907>>IF       7399>>IF       8050>>IF       8197>>IF       8418>>IF
F$DCB.TYC.EOT
      1378**DCL      5039>>IF       5044<<ASSIGN   5249>>IF       5254<<ASSIGN   5830>>IF       6625>>IF
F$DCB.TYC.IOERR
      1379**DCL      5555<<ASSIGN   6941<<ASSIGN   7953<<ASSIGN   8047<<ASSIGN   8193<<ASSIGN
F$DCB.TYC.LD
      1379**DCL      5574>>IF       7806<<ASSIGN   7847<<ASSIGN   8015<<ASSIGN
F$DCB.UB$
      1416**DCL      6557>>ASSIGN   7011>>ASSIGN
F$DCB.UBYTES
      1416**DCL      6556>>ASSIGN   7012>>ASSIGN
F$DCB.VOL
      1398**DCL      4826>>CALL     6734>>CALL     6772>>CALL     6777>>ASSIGN
F$DCB.WSN
      1389**DCL      1389--REDEF
F$DCB.WSR
      1395**DCL      4759<<ASSIGN   4767>>IF
FIELD_CHAR IN PROCEDURE FTW_CHKDEC
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:642  
      7666**DCL      7661--PROC     7671>>CALLBLT
FIELD_LENGTH IN PROCEDURE FTW_CHKDEC
      7667**DCL      7661--PROC     7666--IMP-SIZ  7671>>CALLBLT
FM$BUF$
      1795**DCL      4856>>ASSIGN   5055>>ASSIGN   6210>>ASSIGN   6707>>ASSIGN   7979>>ASSIGN   8130>>ASSIGN
      8296>>ASSIGN
FM$CFUJ.ERR_WAIT
      1474**DCL      4862<<ASSIGN   6651<<ASSIGN
FMD$GETBUF
      3645**DCL-ENT  7392--CALL     8127--CALL     8152--CALL
FMD$RELBUF
      3646**DCL-ENT  4434--CALL     5097--CALL     5105--CALL     6416--CALL     6726--CALL     6732--CALL
      6809--CALL     6820--CALL     8352--CALL
FMM$DFLOPN
      3647**DCL-ENT  4760--CALL
FMO$GETDOMAIN
      3648**DCL-ENT  4758--CALL     4766--CALL
FOUR_BASED_CHARS
      3713**DCL      4860--CALL     4860--CALL     5502<>CALL     5765>>ASSIGN   6259--ASSIGN   6330<<ASSIGN
      6330>>ASSIGN   7216>>ASSIGN   7271<<ASSIGN   7271>>ASSIGN   7274<<ASSIGN   7277<<ASSIGN
FP$ IN PROCEDURE FTW_TMPFPOOL
      8142**DCL      8137--PROC     8148<<ASSIGN   8152<>CALL     8156>>IF
FPNUM IN PROCEDURE FTW_TMPFPOOL
      8143**DCL      8137--PROC     8160<<ASSIGN
FPO$COPYOD
      3651**DCL-ENT  5458--CALL
FPO$LABELOD
      3649**DCL-ENT  5456--CALL
FPO$RDODBLK
      3653**DCL-ENT  8411--CALL
FPO$RDODMAP
      3650**DCL-ENT  5432--CALL
FPO$TRUNC
      3654**DCL-ENT  8321--CALL
FPO$UNTRUNC
      3655**DCL-ENT  7398--CALL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:643  
FPO$WRODBLK
      3652**DCL-ENT  8386--CALL
FPT
      3689**DCL        10--PROC     4331--ASSIGN
FPT$
      3714**DCL      1306--IMP-PTR  1312--IMP-PTR  1319--IMP-PTR  1322--IMP-PTR  4331<<ASSIGN   4335>>ASSIGN
      4338>>ASSIGN   4339>>ASSIGN   4346>>ASSIGN   4477>>IF       4506>>ASSIGN   4557>>IF       4557>>IF
      4559>>IF       4574>>ASSIGN   4596>>ASSIGN   4597>>IF       4597>>IF       4613>>ASSIGN   4624>>IF
      4656>>ASSIGN   5137>>IF       5178>>IF       5180>>IF       5231>>IF       5234>>IF       5427>>IF
      5445>>IF       5445>>IF       5455>>IF       5488>>IF       5500>>IF       5509>>IF       5569>>IF
      5594>>IF       5736>>IF       5748>>IF       5926>>IF       6065>>IF       6078>>IF       6092>>IF
      6100>>IF       6103>>IF       6155>>IF       6504>>IF       6568>>IF       6616>>IF       6885>>IF
FPT$PFIL_V.BOF
      1319**DCL      4656>>ASSIGN
FPT$PRECORD_V.BOF
      1322**DCL      4557>>IF       4559>>IF       4597>>IF
FPT$PRECORD_V.EOF
      1322**DCL      4557>>IF       4597>>IF
FPT$PRECORD_V.IOERROK
      1323**DCL      4346>>ASSIGN
FPT$PRECORD_V.KEYR
      1322**DCL      4624>>IF
FPT$PRECORD_V.KEYS
      1322**DCL      4596>>ASSIGN
FPT$PRECORD_V.N
      1323**DCL      4574>>ASSIGN   4613>>ASSIGN
FPT$PRECORD_V.NOMARKS
      1323**DCL      5926>>IF       6885>>IF
FPT$READ_V.DVBYTE.BIN
      1315**DCL      5137>>IF       5178>>IF
FPT$READ_V.DVBYTE.CONT
      1315**DCL      4477>>IF       6078>>IF
FPT$READ_V.DVBYTE.REREAD
      1314**DCL      1315--REDEF
FPT$READ_V.DVBYTE.TRANS
      1315**DCL      5180>>IF       5569>>IF       5736>>IF       6155>>IF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:644  
FPT$READ_V.FULL
      1312**DCL      5509>>IF
FPT$READ_V.INDX
      1314**DCL      1314--REDEF
FPT$READ_V.IOERROK
      1313**DCL      4335>>ASSIGN
FPT$READ_V.KEYR
      1312**DCL      5594>>IF       6103>>IF
FPT$READ_V.KEYS
      1312**DCL      5488>>IF       5500>>IF       6065>>IF       6092>>IF       6100>>IF
FPT$WRITE_V.DVBYTE
      1307**DCL      4338>>ASSIGN   4506>>ASSIGN
FPT$WRITE_V.DVBYTE.BIN
      1308**DCL      5231>>IF
FPT$WRITE_V.DVBYTE.CONT
      1308**DCL      6568>>IF
FPT$WRITE_V.DVBYTE.TRANS
      1308**DCL      5234>>IF       6504>>IF
FPT$WRITE_V.DVBYTE.VFC
      1308**DCL      1308--REDEF
FPT$WRITE_V.FULL
      1306**DCL      5748>>IF
FPT$WRITE_V.IOERROK
      1307**DCL      4339>>ASSIGN   6616>>IF
FPT$WRITE_V.ODFNC
      1309**DCL      5427>>IF       5445>>IF       5445>>IF       5455>>IF
FPTCODE
      3688**DCL        10--PROC     4333>>DOCASE   6495>>IF       6495>>IF       6498>>IF
FRSTKEY IN PROCEDURE FTW_RUSRBUF
      5479**DCL      5529<<ASSIGN   5586>>IF       5587<<ASSIGN   5588>>ASSIGN   5590>>ASSIGN
FT$BLKHDRE.LS
      2223**DCL      6718>>ASSIGN   6723>>ASSIGN   6811>>ASSIGN   7438>>ASSIGN   7474<<ASSIGN
FT$DDT.FMCNT
      1881**DCL      5171<<ASSIGN   5171>>ASSIGN   5312<<ASSIGN   5312>>ASSIGN   5316<<ASSIGN   5316>>ASSIGN
      5364<<ASSIGN   5364>>ASSIGN   5368<<ASSIGN   5368>>ASSIGN
FT$DDT.FMNEEDED
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:645  
      1899**DCL      8322<<ASSIGN   8356<<ASSIGN   8392<<ASSIGN
FT$DDT.FUNNYPOS
      1906**DCL      4398>>IF
FT$DDT.POS
      1901**DCL      4408>>IF       4428>>IF       4437<<ASSIGN   5036<<ASSIGN   5168<<ASSIGN   5177<<ASSIGN
      5243<<ASSIGN   5298<<ASSIGN   5310<<ASSIGN   5322<<ASSIGN   5352<<ASSIGN   5362<<ASSIGN   5375<<ASSIGN
FT$DDT.POSLOST
      1894**DCL      4398>>IF       5551<<ASSIGN   5820<<ASSIGN   6615<<ASSIGN   6928<<ASSIGN   8034<<ASSIGN
      8189<<ASSIGN
FT$HDR.L1
      2213**DCL      8235>>IF
FT$HDR.L2
      2214**DCL      8235>>IF
FT$HDR.S1
      2215**DCL      7507<<ASSIGN   7547>>ASSIGN
FT$HDR.S2
      2216**DCL      7509<<ASSIGN   7510<<ASSIGN   7559>>ASSIGN
FT$HDRE.LS
      2231**DCL      7506<<ASSIGN   7545>>ASSIGN
FT$KEY
      2254**DCL      4605<>CALL     6101<>CALL     6244--ASSIGN
FT$KEY.KL
      2255**DCL      2256--IMP-SIZ  4605>>CALL     6101>>CALL     6112>>ASSIGN   6243>>ASSIGN   7225>>ASSIGN
      7263>>ASSIGN   7301>>ASSIGN   7338>>ASSIGN
FT$LBL1.BLK_CNT
      2009**DCL      6782>>ASSIGN   6783<<ASSIGN   6786<<ASSIGN
FT$LBL1.FSECT
      1998**DCL      6759>>CALLBLT  6780<<CALLBLT
FT$LBL1.FSEQU_NUM
      2000**DCL      6763>>CALLBLT
FT$LBL1.LABEL_ID
      1993**DCL      6756<<ASSIGN   6781<<ASSIGN   6787<<ASSIGN
FT$LBL1.SYSTEM_ID
      2011**DCL      2012--REDEF
FT$LBL2.CP6
      2084**DCL      2102--REDEF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:646  
FT$LBL2.LABEL_ID
      2075**DCL      6766<<ASSIGN   6789<<ASSIGN   6792<<ASSIGN
FT$ORGD.SIZE
      2248**DCL      7480<<CALLBLT  7518<<CALLBLT  7572<>CALL     7572--CALL     7574>>CALLBLT  8245>>IF
FT$ORGS.SIZE
      2240**DCL      7515<<CALLBLT  7564<>CALL     7564--CALL     7568>>CALLBLT  8242>>IF
FT$ORGS.SPAN
      2239**DCL      7516<<ASSIGN   7566<>CALL     7566--CALL     7569>>ASSIGN
FT$ULBL.LABEL_NBIN
      2178**DCL      2179--REDEF
FTI$RDASC
      3656**DCL-ENT  5139--CALL     5147--CALL     8414--CALL
FTI$RDBIN
      3657**DCL-ENT  5138--CALL     8416--CALL
FTI$REWIND
      3658**DCL-ENT  4983--CALL
FTI$SPFILE
      3659**DCL-ENT  4431--CALL     4804--CALL     4812--CALL     5151--CALL     5290--CALL     5344--CALL
      5350--CALL     6741--CALL     6751--CALL     6913--CALL     7724--CALL     7728--CALL     8358--CALL
      8366--CALL
FTI$SPREC
      3660**DCL-ENT  4916--CALL     5157--CALL     5284--CALL     5292--CALL     5534--CALL     5700--CALL
      5838--CALL     5897--CALL     5949--CALL     5959--CALL     5974--CALL     6014--CALL     6711--CALL
      6715--CALL     6907--CALL     6921--CALL     6932--CALL     7164--CALL     7406--CALL     7703--CALL
      7720--CALL     7733--CALL     8025--CALL     8038--CALL     8182--CALL     8317--CALL
FTI$WRASC
      3661**DCL-ENT  5241--CALL     8389--CALL
FTI$WRBIN
      3662**DCL-ENT  5232--CALL     8391--CALL
FTI$WRFM
      3663**DCL-ENT  4802--CALL     4808--CALL     4810--CALL     4978--CALL     4979--CALL     5035--CALL
      5399--CALL     5405--CALL     6769--CALL     6770--CALL     6793--CALL     6794--CALL     6801--CALL
      6808--CALL     7365--CALL     8350--CALL     8354--CALL     8355--CALL     8363--CALL     8364--CALL
FTL$CVOL
      3664**DCL-ENT  4860--CALL     5801--CALL     6286--CALL     6663--CALL     6717--CALL
FTL$EOF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:647  
      3665**DCL-ENT  4919--CALL     5559--CALL     5908--CALL     6017--CALL     8083--CALL     8198--CALL
FTL$LBLS
      3667**DCL-ENT  8351--CALL
FTL$PBSN
      3668**DCL-ENT  5946--CALL     6905--CALL     7699--CALL
FTL$VOL1
      3669**DCL-ENT  6774--CALL
FTR$CHNGVOL
      3670**DCL-ENT  4826--CALL     6772--CALL
FTR$GETSN
      3671**DCL-ENT  6734--CALL
FTR$JRNLDCB
      3672**DCL-ENT  4327--CALL     4783--CALL
FTR$UNJRNLDCB
      3673**DCL-ENT  4355--CALL     4368--CALL     4876--CALL
FTT$TRUNC
      5084**ENTRY    4351--CALL
FTW$CVOL
      4730**ENTRY    5018--CALL
FTW$CVOLFT
      4744**ENTRY    5152--CALL     5216--CALL
FTW$TRNCHLD
      8260**ENTRY    4850--CALL     5095--CALL     6610--CALL     7364--CALL     8345--CALL
FTW$TRNCOD
      8271**ENTRY    6608--CALL
FTWCVOLCONT
      4746**LABEL    4742--GOTO
FTW_BACKUSRBUF IN PROCEDURE FTW_RUSRBUF
      5692**PROC     5599--CALL     5635--CALL
FTW_BOF
      7682**PROC     4697--CALL     4991--CALL     5931--CALL     6863--CALL     7138--CALL
FTW_CHKDEC
      7661**PROC     7564--CALL     7566--CALL     7572--CALL
FTW_CHKIO
      4379**PROC     4328--CALL     4565--CALL     4673--CALL     4792--CALL
FTW_CHKSEG
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:648  
      8215**PROC     7793--CALL     7901--CALL     7980--CALL     8058--CALL
FTW_CHKSEGINFO
      7913**PROC     7794--CALL     7902--CALL     7981--CALL     8059--CALL
FTW_CHK_KEY_PS1
      7288**PROC     6238--CALL
FTW_COMPARE_KEYS
      7200**PROC     6246--CALL     6253--CALL     6266--CALL     7157--CALL
FTW_DEVBACK
      5386**PROC     5289--CALL     5342--CALL
FTW_END_MANAGED_FREE_SECT
      7357**PROC     4801--CALL     5028--CALL
FTW_FNDKEY
      7063**PROC     4605--CALL     5502--CALL     6101--CALL
FTW_GETAFPOOL$
      8118**PROC     5511--CALL     5750--CALL     7975--CALL
FTW_GETBLKLEN
      7423**PROC     6938--CALL     7401--CALL     8044--CALL     8421--CALL
FTW_GETSIZE
      7526**PROC     6218--CALL     7920--CALL
FTW_INIT
      7004**PROC     4455--CALL     4505--CALL     4587--CALL     4694--CALL     4709--CALL     4848--CALL
      4932--CALL     4988--CALL     5049--CALL
FTW_IOERRCVOL
      6693**PROC     5823--CALL     6618--CALL
FTW_NXTRB
      7861**PROC     7796--CALL     7839--CALL
FTW_ODRDEV
      5422**PROC     4466--CALL
FTW_ODWDEV
      5440**PROC     4517--CALL
FTW_P1RB
      7780**PROC     6877--CALL     6946--CALL     6953--CALL     8069--CALL
FTW_PFDEV
      5333**PROC     4682--CALL
FTW_PFIL
      4644**PROC     4349--CALL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:649  
FTW_PFIL2
      4666**PROC     4562--CALL     4657--CALL
FTW_PFL
      6983**PROC     4710--CALL
FTW_PFUSRBUF
      5993**PROC     4707--CALL
FTW_PNRB
      7821**PROC     6948--CALL     7962--CALL
FTW_PNRS
      7932**PROC     4933--CALL     4935--CALL     5059--CALL     6062--CALL     6089--CALL     6167--CALL
      6225--CALL     6963--CALL     6991--CALL     6994--CALL     7047--CALL     7111--CALL     7141--CALL
      7184--CALL
FTW_PNRSNE
      7039**PROC     4588--CALL     4695--CALL     4990--CALL     6837--CALL
FTW_PNSB
      7893**PROC     7837--CALL     7876--CALL     7882--CALL     7951--CALL
FTW_PNUR
      8167**PROC     4923--CALL     5903--CALL     5972--CALL     6021--CALL     7109--CALL     7140--CALL
      7183--CALL
FTW_POSEOSECT
      4891**PROC     4845--CALL
FTW_PR
      6828**PROC     4621--CALL     6644--CALL     6679--CALL
FTW_PRDEV
      5268**PROC     4575--CALL
FTW_PRECORD
      4544**PROC     4347--CALL
FTW_PRUSRBUF
      5869**PROC     4620--CALL
FTW_RDEV
      5112**PROC     4464--CALL
FTW_RDFPOOL
      8403**PROC     5547--CALL     6713--CALL     6746--CALL     6748--CALL     6752--CALL     6754--CALL
      6925--CALL     6934--CALL     7408--CALL     8031--CALL     8040--CALL     8186--CALL
FTW_READ
      4448**PROC     4336--CALL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:650  
FTW_RESTORE_POS
      4416**PROC     4409--CALL     5063--CALL     6068--CALL     6094--CALL     6229--CALL     7051--CALL
      7137--CALL
FTW_RETURN_KEY_PS1
      7253**PROC     4625--CALL     5595--CALL     6104--CALL
FTW_REW
      4959**PROC     4342--CALL
FTW_RNR
      6043**PROC     4487--CALL
FTW_RUSRBUF
      5468**PROC     4468--CALL
FTW_SAVE_LAST_KEY
      7323**PROC     6326--CALL     6336--CALL     7967--CALL     8073--CALL
FTW_SETBLKLEN
      7455**PROC     4857--CALL     6411--CALL     6419--CALL     6535--CALL     6629--CALL     6667--CALL
      7412--CALL     8109--CALL
FTW_SETSIZE
      7489**PROC     6532--CALL
FTW_SET_BOF_INDICATORS
      7750**PROC     7366--CALL     7740--CALL
FTW_SIZECHK
      7627**PROC     7922--CALL
FTW_SPANCHK
      7587**PROC     7921--CALL
FTW_TMPFPOOL
      8137**PROC     6406--CALL     6706--CALL     6739--CALL
FTW_TRNCWEOF
      8333**PROC     5927--CALL     6886--CALL     7136--CALL     7698--CALL     7708--CALL
FTW_TRUNCIT
      6600**PROC     6310--CALL     6389--CALL     6412--CALL     6546--CALL
FTW_UNDOTRUNC
      7376**PROC     5054--CALL     6209--CALL     7972--CALL
FTW_WDEV
      5204**PROC     4515--CALL
FTW_WEOF
      5002**PROC     4344--CALL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:651  
FTW_WNR
      6197**PROC     4533--CALL
FTW_WRFPOOL
      8378**PROC     5817--CALL     6720--CALL     6725--CALL     6758--CALL     6768--CALL     6785--CALL
      6791--CALL     6797--CALL     6800--CALL     6804--CALL     6807--CALL     6813--CALL     8325--CALL
FTW_WRITE
      4498**PROC     4340--CALL
FTW_WUSRBUF
      5714**PROC     4519--CALL
FT_NONDECIMAL_TABLE
      3617**DCL      7671>>CALLBLT
F_ASC_ASC
      3621**DCL      5239>>CALLBLT  5741>>CALLBLT  6508>>CALLBLT
F_ASC_EBC
      3625**DCL      5238>>CALLBLT  5740>>CALLBLT  6507>>CALLBLT
F_EBC_ASC
      3629**DCL      5186>>CALLBLT  5572>>CALLBLT  6156>>CALLBLT
GETFP IN PROCEDURE FTW_TMPFPOOL
      8150**LABEL    8153--EXIT
HFC$CACHECLR
      3674**DCL-ENT  5582--CALL     8196--CALL
HFF$DSIZ
      3675**DCL-ENT  4821--CALL     4829--CALL     5761--CALL     6256--CALL     7299--CALL
HFF$NILERASE
      3676**DCL-ENT  6329--CALL
HFF$WRITE1
      3677**DCL-ENT  5236--CALL     5738--CALL
HOPEKEYSIZE0 IN PROCEDURE FTW_CHK_KEY_PS1
      7299**LABEL    7299--CALLALT
HOPETEMP0 IN PROCEDURE FTW_WUSRBUF
      5761**LABEL    5761--CALLALT
HOPETEMP00 IN PROCEDURE FTW_WNR
      6257**LABEL    6256--CALLALT
I
      3716**DCL      6416<>CALL     8150<<DOINDEX  8151>>IF       8152<>CALL     8160>>ASSIGN
IOERROK
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:652  
      3717**DCL      4330<<ASSIGN   4335<<ASSIGN   4339<<ASSIGN   4346<<ASSIGN   4356>>IF       4369>>IF
      5552>>IF       5821>>IF       6929>>IF       8035>>IF       8190>>IF
JDCB$
      3718**DCL      1378--IMP-PTR  4316<<ASSIGN   4317>>IF       4326>>IF       4329>>ASSIGN   4354>>IF
      4356>>IF       4356>>IF       4356>>IF       4362>>IF       4362>>IF       4363>>ASSIGN   4367>>IF
      4369>>IF       4369>>IF       4369>>IF       4373>>IF       4373>>IF       4374>>ASSIGN   4390<<ASSIGN
      4391>>ASSIGN   4428>>IF       4430>>ASSIGN   4432>>IF       4434>>CALL     4435>>ASSIGN   4461>>IF
      4462>>IF       4462>>IF       4463>>IF       4469>>ASSIGN   4477>>IF       4491>>ASSIGN   4512>>IF
      4513>>IF       4513>>IF       4514>>IF       4526>>IF       4527>>ASSIGN   4537>>ASSIGN   4553>>IF
      4566>>ASSIGN   4572>>IF       4572>>IF       4576>>ASSIGN   4585>>IF       4614>>IF       4614>>IF
      4614>>IF       4614>>IF       4614>>IF       4614>>IF       4614>>IF       4614>>IF       4619>>IF
      4627>>ASSIGN   4631>>ASSIGN   4652>>IF       4674>>ASSIGN   4680>>IF       4680>>IF       4692>>IF
      4698>>ASSIGN   4706>>IF       4713>>ASSIGN   4717>>ASSIGN   4755<<ASSIGN   4756>>IF       4759>>ASSIGN
      4761>>IF       4764>>IF       4767>>IF       4775>>IF       4776>>IF       4777>>IF       4784>>CALL
      4785>>ASSIGN   4798>>IF       4799>>IF       4800>>IF       4803>>ASSIGN   4807>>IF       4811>>ASSIGN
      4813>>ASSIGN   4814>>ASSIGN   4818>>ASSIGN   4826>>CALL     4834>>ASSIGN   4843>>IF       4844>>IF
      4849>>ASSIGN   4851>>ASSIGN   4851>>ASSIGN   4852>>ASSIGN   4853>>ASSIGN   4853>>ASSIGN   4854>>ASSIGN
      4854>>ASSIGN   4861>>IF       4862>>ASSIGN   4863>>IF       4864>>ASSIGN   4866>>ASSIGN   4867>>IF
      4868>>CALL     4869>>ASSIGN   4874>>IF       4878>>IF       4880>>CALL     4881>>ASSIGN   4902>>ASSIGN
      4903>>ASSIGN   4909>>IF       4911>>IF       4913>>IF       4915>>ASSIGN   4917>>ASSIGN   4917>>ASSIGN
      4917>>ASSIGN   4918>>ASSIGN   4918>>ASSIGN   4918>>ASSIGN   4936>>ASSIGN   4945>>ASSIGN   4946>>ASSIGN
      4952>>ASSIGN   4970>>IF       4974>>IF       4974>>IF       4976>>IF       4978>>IF       4980>>ASSIGN
      4981>>ASSIGN   4984>>ASSIGN   4985>>ASSIGN   4989>>IF       5009>>IF       5017>>IF       5024>>IF
      5026>>IF       5029>>ASSIGN   5030>>ASSIGN   5031>>ASSIGN   5032>>ASSIGN   5037>>ASSIGN   5038>>ASSIGN
      5039>>IF       5040>>IF       5043>>ASSIGN   5044>>ASSIGN   5050>>ASSIGN   5051>>IF       5053>>IF
      5055>>ASSIGN   5055>>ASSIGN   5056>>IF       5058>>ASSIGN   5067>>ASSIGN   5067>>ASSIGN   5068>>ASSIGN
      5068>>ASSIGN   5069>>ASSIGN   5070>>ASSIGN   5071>>ASSIGN   5072>>ASSIGN   5091<<ASSIGN   5093>>IF
      5098>>IF       5099>>ASSIGN   5100>>ASSIGN   5101>>ASSIGN   5102>>ASSIGN   5104>>IF       5105>>CALL
      5106>>ASSIGN   5132>>IF       5133>>ASSIGN   5136>>ASSIGN   5140>>IF       5140>>IF       5142>>DOWHILE
      5146>>ASSIGN   5150>>ASSIGN   5156>>ASSIGN   5158>>ASSIGN   5166>>IF       5169>>ASSIGN   5173>>ASSIGN
      5174>>ASSIGN   5174>>ASSIGN   5180>>IF       5180>>IF       5183>>ASSIGN   5215>>IF       5227>>ASSIGN
      5228>>ASSIGN   5229>>ASSIGN   5230>>ASSIGN   5234>>IF       5237>>IF       5249>>IF       5250>>IF
      5253>>ASSIGN   5254>>ASSIGN   5277>>IF       5279>>ASSIGN   5280>>ASSIGN   5283>>ASSIGN   5290>>IF
      5291>>ASSIGN   5295>>ASSIGN   5296>>ASSIGN   5304>>IF       5304>>IF       5306>>ASSIGN   5307>>ASSIGN
      5307>>ASSIGN   5308>>IF       5319>>IF       5343>>ASSIGN   5343>>ASSIGN   5346>>IF       5347>>ASSIGN
      5349>>ASSIGN   5358>>IF       5358>>IF       5360>>IF       5363>>ASSIGN   5367>>ASSIGN   5370>>ASSIGN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:653  
      5370>>ASSIGN   5372>>IF       5397>>IF       5400>>IF       5402>>ASSIGN   5406>>ASSIGN   5408>>ASSIGN
      5409>>ASSIGN   5411>>ASSIGN   5431>>ASSIGN   5488>>IF       5488>>IF       5488>>IF       5500>>IF
      5500>>IF       5509>>IF       5509>>IF       5531>>IF       5532>>ASSIGN   5533>>ASSIGN   5535>>ASSIGN
      5538>>ASSIGN   5540>>ASSIGN   5541>>IF       5545>>IF       5546>>ASSIGN   5548>>IF       5552>>IF
      5554>>ASSIGN   5555>>ASSIGN   5558>>IF       5562>>ASSIGN   5562>>ASSIGN   5563>>ASSIGN   5563>>ASSIGN
      5567>>IF       5567>>IF       5569>>IF       5569>>IF       5571>>ASSIGN   5574>>IF       5574>>IF
      5584>>ASSIGN   5585>>ASSIGN   5589>>ASSIGN   5600>>ASSIGN   5601>>IF       5602>>ASSIGN   5608>>ASSIGN
      5618>>ASSIGN   5621>>ASSIGN   5622>>ASSIGN   5628>>ASSIGN   5630>>ASSIGN   5631>>ASSIGN   5636>>ASSIGN
      5637>>IF       5638>>ASSIGN   5647>>ASSIGN   5657>>ASSIGN   5658>>ASSIGN   5661>>ASSIGN   5663>>ASSIGN
      5664>>ASSIGN   5669>>ASSIGN   5676>>ASSIGN   5679>>ASSIGN   5685>>ASSIGN   5699>>ASSIGN   5701>>ASSIGN
      5701>>ASSIGN   5702>>ASSIGN   5702>>ASSIGN   5725>>IF       5726>>IF       5726>>IF       5729>>ASSIGN
      5736>>IF       5739>>IF       5748>>IF       5748>>IF       5759>>IF       5759>>IF       5771>>IF
      5771>>IF       5773>>IF       5779>>ASSIGN   5799>>IF       5800>>ASSIGN   5804>>ASSIGN   5804>>ASSIGN
      5805>>ASSIGN   5806>>IF       5806>>IF       5808>>ASSIGN   5808>>ASSIGN   5809>>ASSIGN   5810>>ASSIGN
      5813>>ASSIGN   5818>>IF       5821>>IF       5821>>IF       5824>>ASSIGN   5824>>ASSIGN   5825>>ASSIGN
      5828>>ASSIGN   5828>>ASSIGN   5829>>ASSIGN   5829>>ASSIGN   5830>>IF       5831>>ASSIGN   5832>>IF
      5836>>ASSIGN   5837>>ASSIGN   5844>>ASSIGN   5846>>ASSIGN   5853>>ASSIGN   5854>>ASSIGN   5855>>ASSIGN
      5856>>ASSIGN   5876>>ASSIGN   5884>>IF       5887>>ASSIGN   5891>>DOWHILE  5892>>IF       5894>>ASSIGN
      5896>>ASSIGN   5898>>ASSIGN   5898>>ASSIGN   5898>>ASSIGN   5899>>ASSIGN   5899>>ASSIGN   5899>>ASSIGN
      5900>>ASSIGN   5907>>IF       5916>>ASSIGN   5916>>ASSIGN   5928>>ASSIGN   5935>>ASSIGN   5936>>ASSIGN
      5936>>ASSIGN   5942>>DOWHILE  5943>>ASSIGN   5943>>ASSIGN   5943>>ASSIGN   5944>>ASSIGN   5946>>CALL
      5948>>ASSIGN   5950>>IF       5950>>IF       5951>>ASSIGN   5951>>ASSIGN   5952>>ASSIGN   5952>>ASSIGN
      5958>>ASSIGN   5960>>ASSIGN   5960>>ASSIGN   5961>>ASSIGN   5961>>ASSIGN   5965>>ASSIGN   5965>>ASSIGN
      5969>>IF       5973>>ASSIGN   5975>>ASSIGN   5975>>ASSIGN   5976>>ASSIGN   5976>>ASSIGN   5977>>ASSIGN
      6004>>IF       6011>>IF       6013>>ASSIGN   6015>>ASSIGN   6015>>ASSIGN   6015>>ASSIGN   6016>>ASSIGN
      6016>>ASSIGN   6016>>ASSIGN   6034>>ASSIGN   6080>>IF       6082>>ASSIGN   6087>>IF       6100>>IF
      6108>>IF       6108>>IF       6108>>IF       6110>>ASSIGN   6111>>IF       6112>>ASSIGN   6113>>IF
      6115>>ASSIGN   6116>>ASSIGN   6117>>ASSIGN   6119>>ASSIGN   6119>>ASSIGN   6120>>IF       6120>>IF
      6120>>IF       6122>>ASSIGN   6126>>ASSIGN   6136>>ASSIGN   6143>>ASSIGN   6152>>ASSIGN   6152>>ASSIGN
      6153>>IF       6155>>IF       6170>>ASSIGN   6171>>ASSIGN   6171>>ASSIGN   6172>>ASSIGN   6172>>ASSIGN
      6173>>ASSIGN   6174>>ASSIGN   6183>>ASSIGN   6184>>ASSIGN   6184>>ASSIGN   6186>>IF       6186>>IF
      6208>>IF       6210>>ASSIGN   6210>>ASSIGN   6216>>IF       6219>>ASSIGN   6222>>IF       6224>>ASSIGN
      6236>>DOCASE   6239>>IF       6239>>IF       6241>>IF       6245>>ASSIGN   6248>>IF       6250>>ASSIGN
      6251>>ASSIGN   6252>>ASSIGN   6265>>ASSIGN   6283>>IF       6285>>ASSIGN   6287>>ASSIGN   6287>>ASSIGN
      6288>>ASSIGN   6290>>ASSIGN   6290>>ASSIGN   6291>>ASSIGN   6291>>ASSIGN   6292>>ASSIGN   6293>>ASSIGN
      6294>>ASSIGN   6299>>IF       6299>>IF       6301>>IF       6301>>IF       6301>>IF       6301>>IF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:654  
      6301>>IF       6301>>IF       6301>>IF       6301>>IF       6301>>IF       6301>>IF       6301>>IF
      6311>>ASSIGN   6317>>DOCASE   6319>>ASSIGN   6320>>IF       6323>>ASSIGN   6325>>ASSIGN   6326>>IF
      6328>>ASSIGN   6333>>ASSIGN   6335>>ASSIGN   6336>>IF       6337>>ASSIGN   6339>>ASSIGN   6341>>ASSIGN
      6342>>ASSIGN   6343>>ASSIGN   6343>>ASSIGN   6364>>IF       6382>>ASSIGN   6382>>ASSIGN   6383>>IF
      6383>>IF       6383>>IF       6383>>IF       6383>>IF       6390>>ASSIGN   6390>>ASSIGN   6401>>IF
      6401>>IF       6401>>IF       6401>>IF       6401>>IF       6401>>IF       6401>>IF       6401>>IF
      6406>>CALL     6407>>ASSIGN   6408>>ASSIGN   6410>>ASSIGN   6410>>ASSIGN   6413>>ASSIGN   6414>>ASSIGN
      6417>>ASSIGN   6418>>ASSIGN   6418>>ASSIGN   6418>>ASSIGN   6420>>ASSIGN   6420>>ASSIGN   6423>>ASSIGN
      6431>>IF       6436>>IF       6437>>ASSIGN   6447>>ASSIGN   6451>>IF       6453>>ASSIGN   6458>>ASSIGN
      6472>>IF       6474>>IF       6476>>IF       6479>>ASSIGN   6482>>ASSIGN   6482>>ASSIGN   6491>>ASSIGN
      6491>>ASSIGN   6492>>IF       6493>>ASSIGN   6493>>ASSIGN   6504>>IF       6506>>IF       6515>>IF
      6516>>IF       6520>>ASSIGN   6525>>ASSIGN   6530>>ASSIGN   6533>>ASSIGN   6533>>ASSIGN   6534>>ASSIGN
      6534>>ASSIGN   6542>>IF       6545>>IF       6548>>ASSIGN   6548>>ASSIGN   6548>>ASSIGN   6549>>ASSIGN
      6552>>IF       6556>>ASSIGN   6557>>ASSIGN   6570>>ASSIGN   6570>>ASSIGN   6571>>ASSIGN   6571>>ASSIGN
      6572>>ASSIGN   6572>>ASSIGN   6573>>ASSIGN   6574>>ASSIGN   6575>>ASSIGN   6577>>ASSIGN   6578>>ASSIGN
      6579>>ASSIGN   6580>>ASSIGN   6581>>ASSIGN   6588>>ASSIGN   6589>>ASSIGN   6590>>ASSIGN   6591>>ASSIGN
      6607>>IF       6613>>IF       6616>>IF       6625>>IF       6626>>ASSIGN   6626>>ASSIGN   6627>>ASSIGN
      6628>>ASSIGN   6628>>ASSIGN   6630>>ASSIGN   6630>>ASSIGN   6631>>ASSIGN   6632>>ASSIGN   6632>>ASSIGN
      6640>>IF       6641>>IF       6642>>IF       6645>>ASSIGN   6645>>ASSIGN   6651>>ASSIGN   6659>>ASSIGN
      6660>>IF       6662>>ASSIGN   6664>>ASSIGN   6664>>ASSIGN   6665>>ASSIGN   6666>>ASSIGN   6666>>ASSIGN
      6668>>ASSIGN   6668>>ASSIGN   6676>>IF       6680>>ASSIGN   6680>>ASSIGN   6681>>ASSIGN   6681>>ASSIGN
      6684>>ASSIGN   6704>>ASSIGN   6705>>ASSIGN   6707>>ASSIGN   6707>>ASSIGN   6708>>ASSIGN   6710>>ASSIGN
      6712>>IF       6714>>ASSIGN   6716>>ASSIGN   6719>>ASSIGN   6721>>ASSIGN   6724>>ASSIGN   6727>>ASSIGN
      6728>>ASSIGN   6733>>IF       6734>>CALL     6740>>ASSIGN   6742>>IF       6750>>ASSIGN   6757>>ASSIGN
      6760>>ASSIGN   6761>>IF       6762>>ASSIGN   6762>>ASSIGN   6762>>ASSIGN   6764>>ASSIGN   6767>>ASSIGN
      6771>>ASSIGN   6772>>CALL     6773>>ASSIGN   6776>>IF       6777>>ASSIGN   6777>>ASSIGN   6779>>ASSIGN
      6779>>ASSIGN   6780>>CALLBLT  6784>>ASSIGN   6790>>ASSIGN   6796>>ASSIGN   6799>>ASSIGN   6803>>ASSIGN
      6806>>ASSIGN   6812>>ASSIGN   6814>>ASSIGN   6815>>ASSIGN   6844>>IF       6846>>ASSIGN   6849>>ASSIGN
      6859>>IF       6866>>ASSIGN   6873>>ASSIGN   6875>>ASSIGN   6876>>ASSIGN   6876>>ASSIGN   6876>>ASSIGN
      6887>>ASSIGN   6902>>ASSIGN   6902>>ASSIGN   6903>>IF       6904>>DOWHILE  6905>>CALL     6906>>ASSIGN
      6908>>IF       6908>>IF       6909>>ASSIGN   6909>>ASSIGN   6911>>ASSIGN   6911>>ASSIGN   6912>>ASSIGN
      6914>>ASSIGN   6917>>IF       6918>>ASSIGN   6920>>ASSIGN   6922>>IF       6923>>ASSIGN   6924>>ASSIGN
      6924>>ASSIGN   6929>>IF       6931>>ASSIGN   6933>>ASSIGN   6933>>ASSIGN   6939>>ASSIGN   6940>>ASSIGN
      6940>>ASSIGN   6941>>ASSIGN   6944>>ASSIGN   6945>>ASSIGN   6950>>ASSIGN   6950>>ASSIGN   6950>>ASSIGN
      6951>>ASSIGN   6965>>ASSIGN   6968>>ASSIGN   6969>>ASSIGN   6969>>ASSIGN   6970>>IF       6970>>ASSIGN
      6970>>ASSIGN   6973>>ASSIGN   6995>>ASSIGN   7011>>ASSIGN   7012>>ASSIGN   7013>>DOCASE   7018>>IF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:655  
      7025>>IF       7084>>DOCASE   7095>>ASSIGN   7102>>ASSIGN   7108>>IF       7110>>IF       7121>>IF
      7124>>ASSIGN   7129>>IF       7139>>IF       7142>>IF       7154>>IF       7156>>ASSIGN   7161>>IF
      7163>>ASSIGN   7165>>ASSIGN   7165>>ASSIGN   7166>>ASSIGN   7166>>ASSIGN   7167>>ASSIGN   7171>>IF
      7182>>IF       7186>>IF       7213>>DOCASE   7223>>IF       7237>>ASSIGN   7260>>DOCASE   7262>>ASSIGN
      7266>>ASSIGN   7267>>ASSIGN   7270>>ASSIGN   7273>>ASSIGN   7276>>ASSIGN   7297>>DOCASE   7308>>ASSIGN
      7309>>IF       7335>>DOCASE   7337>>ASSIGN   7339>>ASSIGN   7341>>ASSIGN   7342>>ASSIGN   7343>>ASSIGN
      7345>>ASSIGN   7346>>ASSIGN   7348>>ASSIGN   7350>>ASSIGN   7387>>IF       7392>>CALL     7394>>ASSIGN
      7395>>IF       7396>>IF       7397>>ASSIGN   7397>>ASSIGN   7399>>IF       7399>>IF       7400>>ASSIGN
      7400>>ASSIGN   7405>>ASSIGN   7407>>ASSIGN   7407>>ASSIGN   7414>>ASSIGN   7435>>IF       7444>>IF
      7448>>ASSIGN   7467>>ASSIGN   7473>>ASSIGN   7480>>CALLBLT  7481>>ASSIGN   7505>>ASSIGN   7508>>IF
      7512>>ASSIGN   7513>>IF       7541>>ASSIGN   7544>>ASSIGN   7548>>IF       7549>>IF       7549>>IF
      7550>>ASSIGN   7551>>ASSIGN   7551>>ASSIGN   7558>>IF       7559>>ASSIGN   7561>>ASSIGN   7562>>IF
      7601>>IF       7601>>IF       7603>>IF       7603>>IF       7603>>IF       7606>>ASSIGN   7607>>IF
      7608>>ASSIGN   7618>>ASSIGN   7620>>ASSIGN   7638>>IF       7638>>IF       7640>>ASSIGN   7640>>ASSIGN
      7652>>ASSIGN   7695>>ASSIGN   7696>>IF       7700>>IF       7702>>ASSIGN   7705>>ASSIGN   7709>>IF
      7710>>ASSIGN   7710>>ASSIGN   7712>>IF       7714>>IF       7717>>IF       7719>>ASSIGN   7719>>ASSIGN
      7723>>ASSIGN   7725>>IF       7727>>ASSIGN   7730>>IF       7732>>ASSIGN   7736>>ASSIGN   7737>>ASSIGN
      7757>>ASSIGN   7758>>ASSIGN   7758>>ASSIGN   7759>>ASSIGN   7760>>ASSIGN   7761>>ASSIGN   7762>>ASSIGN
      7763>>ASSIGN   7764>>DOCASE   7766>>ASSIGN   7768>>ASSIGN   7772>>ASSIGN   7773>>ASSIGN   7792>>ASSIGN
      7792>>ASSIGN   7797>>ASSIGN   7798>>ASSIGN   7799>>ASSIGN   7804>>IF       7804>>IF       7806>>ASSIGN
      7808>>ASSIGN   7813>>ASSIGN   7814>>ASSIGN   7840>>ASSIGN   7840>>ASSIGN   7845>>IF       7845>>IF
      7847>>ASSIGN   7849>>ASSIGN   7854>>ASSIGN   7854>>ASSIGN   7900>>ASSIGN   7900>>ASSIGN   7903>>ASSIGN
      7952>>IF       7953>>ASSIGN   7963>>ASSIGN   7963>>ASSIGN   7964>>IF       7964>>IF       7964>>IF
      7966>>IF       7966>>IF       7966>>IF       7969>>ASSIGN   7972>>IF       7973>>IF       7976>>IF
      7976>>ASSIGN   7979>>ASSIGN   7979>>ASSIGN   7994>>IF       7996>>IF       7998>>ASSIGN   7998>>ASSIGN
      7999>>ASSIGN   7999>>ASSIGN   8000>>ASSIGN   8013>>IF       8013>>IF       8015>>ASSIGN   8017>>ASSIGN
      8022>>DOCASE   8024>>ASSIGN   8026>>ASSIGN   8028>>ASSIGN   8030>>ASSIGN   8030>>ASSIGN   8035>>IF
      8037>>ASSIGN   8039>>ASSIGN   8039>>ASSIGN   8045>>ASSIGN   8046>>ASSIGN   8046>>ASSIGN   8047>>ASSIGN
      8050>>IF       8051>>ASSIGN   8052>>IF       8053>>ASSIGN   8053>>ASSIGN   8055>>ASSIGN   8057>>ASSIGN
      8057>>ASSIGN   8060>>IF       8060>>IF       8061>>ASSIGN   8064>>ASSIGN   8066>>ASSIGN   8070>>ASSIGN
      8070>>ASSIGN   8071>>IF       8071>>IF       8071>>IF       8072>>IF       8072>>IF       8072>>IF
      8084>>ASSIGN   8085>>ASSIGN   8096>>ASSIGN   8096>>ASSIGN   8097>>ASSIGN   8097>>ASSIGN   8098>>ASSIGN
      8101>>IF       8103>>ASSIGN   8104>>ASSIGN   8105>>ASSIGN   8105>>ASSIGN   8106>>ASSIGN   8106>>ASSIGN
      8107>>ASSIGN   8108>>ASSIGN   8125>>IF       8125>>IF       8127>>CALL     8128>>ASSIGN   8130>>ASSIGN
      8130>>ASSIGN   8151>>IF       8175>>IF       8180>>IF       8181>>ASSIGN   8183>>ASSIGN   8185>>ASSIGN
      8190>>IF       8192>>ASSIGN   8193>>ASSIGN   8197>>IF       8200>>ASSIGN   8200>>ASSIGN   8201>>ASSIGN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:656  
      8201>>ASSIGN   8202>>ASSIGN   8203>>ASSIGN   8229>>IF       8229>>IF       8229>>IF       8232>>IF
      8232>>IF       8234>>ASSIGN   8238>>IF       8238>>IF       8240>>ASSIGN   8241>>IF       8253>>ASSIGN
      8253>>ASSIGN   8285<<ASSIGN   8286>>ASSIGN   8286>>ASSIGN   8293>>IF       8293>>IF       8295>>ASSIGN
      8298>>IF       8298>>IF       8298>>IF       8301>>IF       8302>>ASSIGN   8303>>IF       8304>>ASSIGN
      8304>>ASSIGN   8306>>ASSIGN   8306>>ASSIGN   8308>>ASSIGN   8309>>IF       8309>>IF       8309>>IF
      8312>>ASSIGN   8312>>ASSIGN   8313>>ASSIGN   8313>>ASSIGN   8314>>IF       8314>>IF       8316>>ASSIGN
      8319>>ASSIGN   8319>>ASSIGN   8320>>IF       8326>>ASSIGN   8344>>IF       8346>>IF       8348>>IF
      8352>>CALL     8353>>ASSIGN   8357>>ASSIGN   8359>>ASSIGN   8365>>ASSIGN   8385>>IF       8388>>IF
      8410>>IF       8413>>IF       8418>>IF       8418>>IF       8420>>ASSIGN   8420>>ASSIGN
JUSTALT
      4367**LABEL    4328--CALLALT  4336--CALLALT  4340--CALLALT  4342--CALLALT  4344--CALLALT  4347--CALLALT
      4349--CALLALT  4351--CALLALT  4801--CALLALT  4802--CALLALT  4804--CALLALT  4808--CALLALT  4810--CALLALT
      4812--CALLALT  8317--CALLALT  8321--CALLALT  8325--CALLALT
JUSTALT IN PROCEDURE FTW_BACKUSRBUF
      5702**LABEL    5700--CALLALT
JUSTALT IN PROCEDURE FTW_BOF
      7733**LABEL    7698--CALLALT  7699--CALLALT  7703--CALLALT  7708--CALLALT  7720--CALLALT  7724--CALLALT
      7728--CALLALT  7733--CALLALT
JUSTALT IN PROCEDURE FTW_CHKIO
      4399**LABEL    4409--CALLALT
JUSTALT IN PROCEDURE FTW_CHKSEGINFO
      7920**LABEL    7920--CALLALT
JUSTALT IN PROCEDURE FTW_DEVBACK
      5408**LABEL    5399--CALLALT  5405--CALLALT
JUSTALT IN PROCEDURE FTW_END_MANAGED_FREE_SECT
      7364**LABEL    7364--CALLALT  7365--CALLALT
JUSTALT IN PROCEDURE FTW_FNDKEY
      7183**LABEL    7136--CALLALT  7137--CALLALT  7164--CALLALT
JUSTALT IN PROCEDURE FTW_GETSIZE
      7571**LABEL    7564--CALLALT  7566--CALLALT  7572--CALLALT
JUSTALT IN PROCEDURE FTW_IOERRCVOL
      6812**LABEL    6706--CALLALT  6739--CALLALT  6813--CALLALT
JUSTALT IN PROCEDURE FTW_NXTRB
      7874**LABEL    7876--CALLALT  7882--CALLALT
JUSTALT IN PROCEDURE FTW_ODRDEV
      5434**LABEL    5432--CALLALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:657  
JUSTALT IN PROCEDURE FTW_ODWDEV
      5455**LABEL    5456--CALLALT  5458--CALLALT
JUSTALT IN PROCEDURE FTW_PFDEV
      5371**LABEL    5342--CALLALT  5344--CALLALT  5350--CALLALT
JUSTALT IN PROCEDURE FTW_PFIL
      4656**LABEL    4657--CALLALT
JUSTALT IN PROCEDURE FTW_PFIL2
      4720**LABEL    4673--CALLALT  4682--CALLALT  4695--CALLALT  4697--CALLALT
JUSTALT IN PROCEDURE FTW_PFL
      6994**LABEL    6991--CALLALT  6994--CALLALT
JUSTALT IN PROCEDURE FTW_PFUSRBUF
      6034**LABEL    6014--CALLALT
JUSTALT IN PROCEDURE FTW_PNRS
      8110**LABEL    7972--CALLALT  7981--CALLALT  8025--CALLALT  8038--CALLALT  8040--CALLALT  8059--CALLALT
JUSTALT IN PROCEDURE FTW_PNRSNE
      7049**LABEL    7051--CALLALT
JUSTALT IN PROCEDURE FTW_PNSB
      7903**LABEL    7901--CALLALT  7902--CALLALT
JUSTALT IN PROCEDURE FTW_PNUR
      8203**LABEL    8182--CALLALT  8198--CALLALT
JUSTALT IN PROCEDURE FTW_PR
      6977**LABEL    6837--CALLALT  6863--CALLALT  6886--CALLALT  6905--CALLALT  6907--CALLALT  6913--CALLALT
      6921--CALLALT  6932--CALLALT  6934--CALLALT
JUSTALT IN PROCEDURE FTW_PRDEV
      5318**LABEL    5284--CALLALT  5289--CALLALT  5290--CALLALT  5292--CALLALT
JUSTALT IN PROCEDURE FTW_PRECORD
      4634**LABEL    4562--CALLALT  4565--CALLALT  4605--CALLALT
JUSTALT IN PROCEDURE FTW_PRUSRBUF
      5976**LABEL    5897--CALLALT  5927--CALLALT  5931--CALLALT  5946--CALLALT  5949--CALLALT  5959--CALLALT
      5974--CALLALT
JUSTALT IN PROCEDURE FTW_RDEV
      5194**LABEL    5138--CALLALT  5139--CALLALT  5147--CALLALT  5151--CALLALT  5157--CALLALT
JUSTALT IN PROCEDURE FTW_RDFPOOL
      8418**LABEL    8411--CALLALT  8414--CALLALT  8416--CALLALT
JUSTALT IN PROCEDURE FTW_READ
      4477**LABEL    4464--CALLALT  4466--CALLALT  4468--CALLALT  4487--CALLALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:658  
JUSTALT IN PROCEDURE FTW_RESTORE_POS
      4438**LABEL    4431--CALLALT
JUSTALT IN PROCEDURE FTW_REW
      4990**LABEL    4978--CALLALT  4979--CALLALT  4983--CALLALT  4990--CALLALT  4991--CALLALT
JUSTALT IN PROCEDURE FTW_RNR
      6186**LABEL    6068--CALLALT  6094--CALLALT  6101--CALLALT
JUSTALT IN PROCEDURE FTW_RUSRBUF
      5685**LABEL    5502--CALLALT  5534--CALLALT  5599--CALLALT  5635--CALLALT
JUSTALT IN PROCEDURE FTW_TRNCWEOF
      8372**LABEL    8345--CALLALT  8350--CALLALT  8351--CALLALT  8354--CALLALT  8355--CALLALT  8358--CALLALT
      8363--CALLALT  8364--CALLALT  8366--CALLALT
JUSTALT IN PROCEDURE FTW_TRUNCIT
      6684**LABEL    6608--CALLALT  6618--CALLALT  6644--CALLALT  6663--CALLALT  6679--CALLALT
JUSTALT IN PROCEDURE FTW_UNDOTRUNC
      7414**LABEL    7398--CALLALT  7406--CALLALT  7408--CALLALT
JUSTALT IN PROCEDURE FTW_WDEV
      5259**LABEL    5216--CALLALT  5232--CALLALT  5241--CALLALT
JUSTALT IN PROCEDURE FTW_WEOF
      5068**LABEL    5018--CALLALT  5028--CALLALT  5035--CALLALT  5054--CALLALT  5063--CALLALT
JUSTALT IN PROCEDURE FTW_WNR
      6581**LABEL    6209--CALLALT  6218--CALLALT  6229--CALLALT  6238--CALLALT  6286--CALLALT  6310--CALLALT
      6389--CALLALT  6412--CALLALT  6546--CALLALT
JUSTALT IN PROCEDURE FTW_WRFPOOL
      8394**LABEL    8386--CALLALT  8389--CALLALT  8391--CALLALT
JUSTALT IN PROCEDURE FTW_WRITE
      4537**LABEL    4515--CALLALT  4517--CALLALT  4519--CALLALT  4533--CALLALT
JUSTALT IN PROCEDURE FTW_WUSRBUF
      5860**LABEL    5801--CALLALT  5823--CALLALT  5838--CALLALT
KEY IN PROCEDURE FTW_FNDKEY
      7072**DCL      7063--PROC     7123--ASSIGN
KEY.C IN PROCEDURE FTW_FNDKEY
      7074**DCL      7122--ASSIGN
KEY.KL IN PROCEDURE FTW_FNDKEY
      7073**DCL      7074--IMP-SIZ  7088>>ASSIGN
KEYCHARS
      3729**DCL      6321<<ASSIGN   6321>>ASSIGN   6323<<ASSIGN   6323>>ASSIGN   7264<<ASSIGN   7264>>ASSIGN
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:659  
      7268<<ASSIGN   7268>>ASSIGN   7339<<ASSIGN   7339>>ASSIGN   7343<<ASSIGN   7343>>ASSIGN
KEYS IN PROCEDURE FTW_PRECORD
      4549**DCL      4596<<ASSIGN   4598<<ASSIGN   4603>>IF       4614>>IF
KEYSIZE
      3730**DCL      3729--IMP-SIZ  6277<<ASSIGN   6301>>IF       6321>>ASSIGN   6321>>ASSIGN   6323>>ASSIGN
      6323>>ASSIGN   6325>>ASSIGN   6337>>ASSIGN   7263<<ASSIGN   7264>>ASSIGN   7264>>ASSIGN   7267<<ASSIGN
      7268>>ASSIGN   7268>>ASSIGN   7299<>CALL     7301>>IF       7301<<ASSIGN   7302>>IF       7302>>IF
      7308<<ASSIGN   7309>>IF       7315<<ASSIGN   7338<<ASSIGN   7339>>ASSIGN   7339>>ASSIGN   7342<<ASSIGN
      7343>>ASSIGN   7343>>ASSIGN
MAXMKEY IN PROCEDURE FTW_RUSRBUF
      5480**DCL      5590<<ASSIGN   5614>>IF       5625>>DOWHILE  5633>>IF
MAXRECL
      3731**DCL      6382<<ASSIGN   6383>>IF       6383>>IF       6383>>IF       6390<<ASSIGN   6420<<ASSIGN
      6423>>ASSIGN   6432>>IF       6433<<ASSIGN   6436>>IF       6437<<ASSIGN   6438>>IF       6439<<ASSIGN
      6448>>IF       6450>>ASSIGN   6458>>ASSIGN
N
      3732**DCL      3733--REDEF    3734--IMP-SIZ  4391<<ASSIGN   4392>>IF       4397>>ASSIGN   4574<<ASSIGN
      4613<<ASSIGN   4614>>IF       4758<>CALL     4759>>ASSIGN   4766<>CALL     4767>>IF       4820<<ASSIGN
      4821<>CALL     4823>>IF       4828<<ASSIGN   4829<>CALL     4831>>IF       5275>>IF       5283>>ASSIGN
      5287>>IF       5291>>ASSIGN   5589<<ASSIGN   5590>>ASSIGN   5608<<ASSIGN   5610>>ASSIGN   5610>>ASSIGN
      5622<<ASSIGN   5623>>ASSIGN   5623>>ASSIGN   5647<<ASSIGN   5649>>ASSIGN   5649>>ASSIGN   5674<<ASSIGN
      5675>>IF       5675>>IF       5793<<ASSIGN   5802<<ASSIGN   5825<<ASSIGN   5827<<ASSIGN   5827>>ASSIGN
      5837>>ASSIGN   5882>>IF       5890>>DOWHILE  5891>>DOWHILE  5893>>IF       5896>>ASSIGN   5900<<ASSIGN
      5900>>ASSIGN   5904<<ASSIGN   5904>>ASSIGN   5912<<ASSIGN   5924>>IF       5929>>IF       5932>>IF
      5942>>DOWHILE  5944<<ASSIGN   5944>>ASSIGN   5958>>ASSIGN   5960>>ASSIGN   5961>>ASSIGN   6585<<ASSIGN
      6586>>IF       6586>>IF       6643<<ASSIGN   6678<<ASSIGN   6759<<CALLBLT  6760>>ASSIGN   6763<<CALLBLT
      6764>>ASSIGN   6847<<ASSIGN   6847>>ASSIGN   6859>>IF       6859>>IF       6861>>IF       6875<<ASSIGN
      6875>>ASSIGN   6883>>IF       6893>>DOWHILE  6951<<ASSIGN   6951>>ASSIGN   6962>>DOWHILE  6964<<ASSIGN
      6964>>ASSIGN   6971>>IF       7217>>IF       7219>>IF
N$DCT$$
      2492**DCL      2492--IMP-PTR  4397>>ASSIGN   6773>>ASSIGN   8295>>ASSIGN
NC
      3733**DCL      7216<<ASSIGN
NCHARS
      3734**DCL      5610<<ASSIGN   5610>>ASSIGN   5623<<ASSIGN   5623>>ASSIGN   5649<<ASSIGN   5649>>ASSIGN
NEEDNXTBLK IN PROCEDURE FTW_PNRS
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:660  
      8004**LABEL    8058--CALLALT  8069--CALLALT
NEXTKEY IN PROCEDURE FTW_RUSRBUF
      5481**DCL      5588<<ASSIGN   5597>>IF       5598>>IF       5618>>ASSIGN   5621>>ASSIGN   5625>>DOWHILE
      5625>>DOWHILE  5627<<ASSIGN   5627>>ASSIGN   5652<<ASSIGN
NK$LDCT.DDT$
      2454**DCL      2454--REDEF    4397>>ASSIGN   6773>>ASSIGN   8295>>ASSIGN
NK$LDCT.IOQ$
      2453**DCL      2454--REDEF
NK$LDCT.LDCTX
      2455**DCL      2455--REDEF
NK$LDCT.LKFLG.ABORTED
      2467**DCL      2468--REDEF
NK$LDCT.RLCID.LDCTX
      2477**DCL      2477--REDEF
NK$LDCT.STA$
      2473**DCL      2474--REDEF
NK$LDCT.SYMB$
      2452**DCL      2452--REDEF    2452--REDEF    2453--REDEF
NK$LDCT$
      2492**DCL      4397>>ASSIGN   6773>>ASSIGN   8295>>ASSIGN
NK_URTBL
      3637**DCL      6499>>CALLBLT
NK_URTBLUC
      3633**DCL      6500>>CALLBLT
NO1ST IN PROCEDURE FTW_PR
      6893**LABEL    6946--CALLALT  6953--CALLALT
NO1STREC IN PROCEDURE FTW_PR
      6877**LABEL    6877--CALLALT
NOKEYS IN PROCEDURE FTW_WNR
      6330**LABEL    6329--CALLALT
NONEBEGIN IN PROCEDURE FTW_P1RB
      7799**LABEL    7793--CALLALT  7794--CALLALT  7796--CALLALT
NOTRANSLATE IN PROCEDURE FTW_WDEV
      5249**LABEL    5236--CALLALT
NOTRANSLATE IN PROCEDURE FTW_WUSRBUF
      5856**LABEL    5738--CALLALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:661  
NOUHL
      4820**LABEL    4821--CALLALT
NOUTL
      4828**LABEL    4829--CALLALT
NULPAD
      3765**DCL      7471>>ASSIGN   8310>>ASSIGN
PPREDONE IN PROCEDURE FTW_PR
      6963**LABEL    6936--GOTO     6963--CALLALT
RCWSIZE
      3735**DCL      5512<<ASSIGN   5515<<ASSIGN   5522>>IF       5537>>IF       5545>>IF       5546>>ASSIGN
      5590>>ASSIGN   5606>>IF       5608>>ASSIGN   5609>>ASSIGN   5616>>IF       5621>>ASSIGN   5622>>ASSIGN
      5628>>ASSIGN   5630>>ASSIGN   5631>>ASSIGN   5645>>IF       5647>>ASSIGN   5648>>ASSIGN   5657>>ASSIGN
      5658>>ASSIGN   5661>>ASSIGN   5662>>IF       5664>>ASSIGN   5751<<ASSIGN   5753<<ASSIGN   5789>>IF
      5795>>IF       5804>>ASSIGN   5805>>ASSIGN   5812>>IF       5813>>ASSIGN   5814>>ASSIGN   5843>>IF
      5846>>ASSIGN   6110>>ASSIGN   6112>>ASSIGN   6115>>ASSIGN   6116>>ASSIGN   6119>>ASSIGN   6174>>ASSIGN
      6301>>IF       6301>>IF       6319>>ASSIGN   6325>>ASSIGN   6328>>ASSIGN   6337>>ASSIGN   6339>>ASSIGN
      6383>>IF       6383>>IF       6549>>ASSIGN   7015<<ASSIGN   7020<<ASSIGN   7026<<ASSIGN   7027<<ASSIGN
      7030<<ASSIGN   7156>>ASSIGN   7262>>ASSIGN   7266>>ASSIGN   7270>>ASSIGN   7337>>ASSIGN   7341>>ASSIGN
      7345>>ASSIGN   7549>>IF       7551>>ASSIGN   7649>>IF       7759>>ASSIGN   7797>>ASSIGN   7813>>ASSIGN
      7903>>ASSIGN   8064>>ASSIGN   8108>>ASSIGN   8232>>IF       8235>>IF       8238>>IF
RCWTYPE
      3736**DCL      6350>>DOCASE   7016<<ASSIGN   7021<<ASSIGN   7024<<ASSIGN   7031<<ASSIGN   7436>>IF
      7469>>IF       7501>>DOCASE   7539>>DOCASE   8227>>DOCASE
RECSIZE
      3737**DCL      5526<<ASSIGN   5600>>ASSIGN   5628<<ASSIGN   5628>>ASSIGN   5629>>ASSIGN   5636>>ASSIGN
      5657>>ASSIGN   5660<<ASSIGN   5661<<ASSIGN   5661>>ASSIGN   5669>>ASSIGN   5677>>IF       6135<<ASSIGN
      6160<<ASSIGN   6160>>ASSIGN   6173>>ASSIGN   6175>>IF       6183>>ASSIGN   6352<<ASSIGN   6354<<ASSIGN
      6383>>IF       6432>>IF       6433>>ASSIGN   6438>>IF       6439>>ASSIGN
RELBUF
      5095**LABEL    5095--CALLALT
RELFP IN PROCEDURE FTW_IOERRCVOL
      6812**LABEL    6711--CALLALT  6713--CALLALT  6715--CALLALT  6717--CALLALT  6720--CALLALT  6725--CALLALT
      6741--CALLALT  6744--GOTO     6746--CALLALT  6748--CALLALT  6751--CALLALT  6752--CALLALT  6754--CALLALT
      6758--CALLALT  6768--CALLALT  6769--CALLALT  6770--CALLALT  6772--CALLALT  6774--CALLALT  6785--CALLALT
      6791--CALLALT  6793--CALLALT  6794--CALLALT  6797--CALLALT  6800--CALLALT  6801--CALLALT  6804--CALLALT
      6807--CALLALT  6808--CALLALT
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:662  
SEG IN PROCEDURE FTW_PNRS
      7941**DCL      7932--PROC     7949>>DOCASE   7996>>IF       8056>>IF       8065>>IF
SEGBLKEND IN PROCEDURE FTW_PNRB
      7840**LABEL    7837--CALLALT  7839--CALLALT
SEGSIZE
      3738**DCL      5527<<ASSIGN   5629<<ASSIGN   5657<<ASSIGN   5660>>ASSIGN   5676>>ASSIGN   6122>>ASSIGN
      6143>>ASSIGN   6376<<ASSIGN   6377>>DOWHILE  6530<<ASSIGN   6533>>ASSIGN   7506>>ASSIGN   7506>>ASSIGN
      7515>>CALLBLT  7518>>CALLBLT  7541<<ASSIGN   7545<<ASSIGN   7546<<ASSIGN   7546>>ASSIGN   7546>>ASSIGN
      7549>>IF       7551<<ASSIGN   7568<<CALLBLT  7574<<CALLBLT  7638>>IF       7640<<ASSIGN   7649>>IF
      7652>>ASSIGN   7900>>ASSIGN
SETARSRET IN PROCEDURE FTW_RUSRBUF
      5664**LABEL    5543--GOTO
SETBLKLEN IN PROCEDURE FTW_CHKSEG
      8240**LABEL    8229--GOTO     8233--GOTO     8236--GOTO     8238--GOTO     8243--GOTO     8246--GOTO
SIX_CHARS
      3739**DCL      6734--CALL     6782<<ASSIGN   6786>>ASSIGN
SIZE IN PROCEDURE FTW_TMPFPOOL
      8144**DCL      8137--PROC     8152>>CALL
SPANINFO
      3740**DCL      6165>>IF       6165>>IF       6169>>IF       6186>>IF       6186>>IF       6219>>IF
      6518<<ASSIGN   6521<<ASSIGN   6526<<ASSIGN   6528<<ASSIGN   6529<<ASSIGN   6881<<ASSIGN   6883>>IF
      6893>>DOWHILE  7507>>ASSIGN   7516>>ASSIGN   7542<<ASSIGN   7547<<ASSIGN   7552>>IF       7553<<ASSIGN
      7554>>IF       7555<<ASSIGN   7569<<ASSIGN   7575<<ASSIGN   7601>>IF       7601>>IF       7617>>IF
      7617>>IF       7873>>DOWHILE  7874>>IF       7877>>IF       7878<<ASSIGN   7879>>IF       7880<<ASSIGN
SPAN_LAST
      3742**DCL      4320<<ASSIGN   4324<<ASSIGN   6521>>ASSIGN   7555>>ASSIGN   7617>>IF       7874>>IF
      7879>>IF
SPAN_MID
      3741**DCL      4319<<ASSIGN   4323<<ASSIGN   6165>>IF       6186>>IF       6518>>ASSIGN   7554>>IF
      7877>>IF
TEMP
      3743**DCL      3744--REDEF    4854<<ASSIGN   4855>>IF       4856>>ASSIGN   5147--CALL     5761<>CALL
      5763>>IF       5766>>IF       5773>>IF       5779>>ASSIGN   6256<>CALL     6257>>IF       6268<<ASSIGN
      6270>>IF       7159>>DOCASE   7215<<ASSIGN   7217>>IF       7218<<ASSIGN   7219>>IF       7220<<ASSIGN
      7221<<ASSIGN   7228<<ASSIGN   7230<<ASSIGN   7233<<ASSIGN   7238<<ASSIGN   7242<<ASSIGN   7244<<ASSIGN
      7273<<ASSIGN   7276<<ASSIGN   7438<<ASSIGN   7439<<ASSIGN   7439>>ASSIGN   7439>>ASSIGN   7444>>IF
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:663  
      7448>>ASSIGN   7473<<ASSIGN   7474>>ASSIGN   7474>>ASSIGN   7481>>ASSIGN   7671<<CALLBLT  7671<<CALLBLT
      7715<<ASSIGN   7716<<ASSIGN   7717>>IF       8174--ASSIGN   8202>>ASSIGN   8286<<ASSIGN   8287>>IF
      8296>>ASSIGN
TEMP IN PROCEDURE FTW_IOERRCVOL
      6700**DCL      6705<<ASSIGN   6706<>CALL     6718<<ASSIGN   6719>>ASSIGN   6719>>ASSIGN   6723<<ASSIGN
      6724>>ASSIGN   6724>>ASSIGN   6811<<ASSIGN   6812>>ASSIGN   6812>>ASSIGN
TEMP$
      3745**DCL      5609<<ASSIGN   5610>>ASSIGN   5611<<ASSIGN   5613<<ASSIGN   5623>>ASSIGN   5626>>ASSIGN
      5630<<ASSIGN   5630>>ASSIGN   5648<<ASSIGN   5649>>ASSIGN   5814<<ASSIGN   5815>>ASSIGN   6409>>ASSIGN
      6415>>ASSIGN   7505<<ASSIGN   7506>>ASSIGN   7507>>ASSIGN   7509>>ASSIGN   7510>>ASSIGN   7512<<ASSIGN
      7515>>CALLBLT  7516>>ASSIGN   7518>>CALLBLT  7544<<ASSIGN   7545>>ASSIGN   7547>>ASSIGN   7559>>ASSIGN
      7561<<ASSIGN   7564>>CALL     7564>>CALL     7566>>CALL     7566>>CALL     7568>>CALLBLT  7569>>ASSIGN
      7572>>CALL     7572>>CALL     7574>>CALLBLT  8234<<ASSIGN   8235>>IF       8235>>IF       8240<<ASSIGN
      8242>>IF       8245>>IF
TEMPC
      3744**DCL      5765<<ASSIGN   7274>>ASSIGN   7277>>ASSIGN
TEMPFP$
      3746**DCL      6406<>CALL     6706<>CALL     6709>>ASSIGN   6722>>ASSIGN   6731>>ASSIGN   6738<<ASSIGN
      6810>>ASSIGN
TEMPFPOOL
      3747**DCL      6406<>CALL     6706<>CALL     6726<>CALL     6732<>CALL     6739<>CALL     6809<>CALL
      6820<>CALL
TRNCHLD
      3715**DCL      8267<<ASSIGN   8278<<ASSIGN   8314>>IF       8320>>IF
TRNC_COMMON
      8278**LABEL    8268--GOTO
TRYAGAIN IN PROCEDURE FTW_RDEV
      5106**LABEL    5153--GOTO
UKEY$
      3748**DCL      6244<<ASSIGN   6250<<ASSIGN   6259<<ASSIGN   6260>>IF       7122<<ASSIGN   7123<<ASSIGN
      7216>>ASSIGN   7241>>IF       7243>>IF
UKEYLEN
      3749**DCL      6243<<ASSIGN   6251<<ASSIGN   7088<<ASSIGN   7089>>IF       7089>>IF       7095<<ASSIGN
      7097<<ASSIGN   7099<<ASSIGN   7227>>IF       7229>>IF       7232>>ASSIGN
UQB$MDEQ
      3680**DCL-ENT  4868--CALL     4880--CALL
PL6.E3A0      #001=FTW$WRAT File=FTW$WRAT.:E05TSI                                TUE 07/29/97 18:02 Page:664  
UQB$MENQXB
      3681**DCL-ENT  4784--CALL
VFC
      3690**DCL        10--PROC     6365--IF       6367--ASSIGN
VFC_MOVED
      3750**DCL      6369<<ASSIGN   6373<<ASSIGN   6497>>IF       6554>>IF       6558<<ASSIGN
ZEROBITS
      3764**DCL      3765--REDEF
