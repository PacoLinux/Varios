VERSION E05

PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:1    
        1        1        /*M* DDB$INTERP . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P*  NAME:   DDB$INTERP
        9        9              PURPOSE: TO LOCATE THE LENGTH AND TYPE OF INSTRUCTION,
       10       10                       GIVEN THE OP CODE.
       11       11                       */
       12       12        /*D*  NAME:   DDB$INTERP
       13       13              CALL: CALL DDB$INTERP(I$,TYPE,LENGTH)
       14       14              INPUT:  I$ POINTS TO THE INSTRUCTION WHICH IS TO BE ANALYZED.
       15       15              OUTPUT: TYPE IS
       16       16                      . EIS
       17       17                      . UNCONDITIONAL TRANSFER
       18       18                      . CONDITIONAL TRANSFER
       19       19                      . SPECIAL: XEC
       20       20                                 XED
       21       21                                 REPEAT
       22       22                      . INVALID
       23       23                      . OTHER
       24       24                      LENGTH IS THE WORD LENGTH OF THE INSTRUCTION (1,2,3OR 4)
       25       25                      */
       26       26        DDB$INTERP: PROC (I$,TYPE,LENGTH);
       27       27        %INCLUDE DD$BASED;
       28     1330        %OP$TAB (STCLASS=AUTO);
       29     1357        %INCLUDE DD_SUBS_C;
       30     1628    1   DCL I$ PTR;
       31     1629    1   DCL TYPE UBIN(36);
       32     1630    1   DCL LENGTH UBIN(36);
       33     1631    1   DCL INSTR SBIN BASED (I$);
       34     1632    1   DCL DDB$OCTAL_TO_INSTR ENTRY(2) ALTRET;
       35     1633    1        CALL DDB$OCTAL_TO_INSTR (INSTR,OP$TAB) ALTRET(NOTFOUND);
       36     1634    1        LENGTH = OP$TAB.LENGTH;
       37     1635    1        TYPE   = OP$TAB.TYPE;
PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:2    
       38     1636    1        RETURN;
       39     1637    1   NOTFOUND: ;
       40     1638    1        TYPE = T_INVALID;
       41     1639    1        LENGTH = 1;
       42     1640    1        RETURN;
       43     1641    1   END DDB$INTERP;

PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:3    
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$INTERP.

   Procedure DDB$INTERP requires 28 words for executable code.
   Procedure DDB$INTERP requires 12 words of local(AUTO) storage.

    No errors detected in file DDB$INTERP.:E05TSI    .

PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:4    

 Object Unit name= DDB$INTERP                                 File name= DDB$INTERP.:E05TOU
 UTS= JUL 29 '97 13:43:43.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    28     34  DDB$INTERP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  DDB$INTERP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDB$OCTAL_TO_INSTR
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:5    


        1        1        /*M* DDB$INTERP . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P*  NAME:   DDB$INTERP
        9        9              PURPOSE: TO LOCATE THE LENGTH AND TYPE OF INSTRUCTION,
       10       10                       GIVEN THE OP CODE.
       11       11                       */
       12       12        /*D*  NAME:   DDB$INTERP
       13       13              CALL: CALL DDB$INTERP(I$,TYPE,LENGTH)
       14       14              INPUT:  I$ POINTS TO THE INSTRUCTION WHICH IS TO BE ANALYZED.
       15       15              OUTPUT: TYPE IS
       16       16                      . EIS
       17       17                      . UNCONDITIONAL TRANSFER
       18       18                      . CONDITIONAL TRANSFER
       19       19                      . SPECIAL: XEC
       20       20                                 XED
       21       21                                 REPEAT
       22       22                      . INVALID
       23       23                      . OTHER
       24       24                      LENGTH IS THE WORD LENGTH OF THE INSTRUCTION (1,2,3OR 4)
       25       25                      */
       26       26        DDB$INTERP: PROC (I$,TYPE,LENGTH);

     26  0 000000   000000 700200 xent  DDB$INTERP   TSX0  ! X66_AUTO_3
         0 000001   000014 000003                    ZERO    12,3

       27       27        %INCLUDE DD$BASED;
       28     1330        %OP$TAB (STCLASS=AUTO);
       29     1357        %INCLUDE DD_SUBS_C;
       30     1628    1   DCL I$ PTR;
       31     1629    1   DCL TYPE UBIN(36);
       32     1630    1   DCL LENGTH UBIN(36);
PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:6    
       33     1631    1   DCL INSTR SBIN BASED (I$);
       34     1632    1   DCL DDB$OCTAL_TO_INSTR ENTRY(2) ALTRET;
       35     1633    1        CALL DDB$OCTAL_TO_INSTR (INSTR,OP$TAB) ALTRET(NOTFOUND);

   1633  0 000002   200003 470500                    LDP0    @I$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   200006 633500                    EPPR3   OP$TAB,,AUTO
         0 000005   200013 453500                    STP3    OP$TAB+5,,AUTO
         0 000006   200012 451500                    STP1    OP$TAB+4,,AUTO
         0 000007   200012 630500                    EPPR0   OP$TAB+4,,AUTO
         0 000010   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000011   000000 701000 xent               TSX1    DDB$OCTAL_TO_INSTR
         0 000012   000025 702000 0                  TSX2    NOTFOUND

       36     1634    1        LENGTH = OP$TAB.LENGTH;

   1634  0 000013   200005 470500                    LDP0    @LENGTH,,AUTO
         0 000014   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000015   000007 376007                    ANQ     7,DL
         0 000016   000000 756100                    STQ     0,,PR0

       37     1635    1        TYPE   = OP$TAB.TYPE;

   1635  0 000017   200004 471500                    LDP1    @TYPE,,AUTO
         0 000020   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000021   000003 772000                    QRL     3
         0 000022   000037 376007                    ANQ     31,DL
         0 000023   100000 756100                    STQ     0,,PR1

       38     1636    1        RETURN;

   1636  0 000024   000000 702200 xent               TSX2  ! X66_ARET

   1635  0 000025                       NOTFOUND     null
       39     1637    1   NOTFOUND: ;
       40     1638    1        TYPE = T_INVALID;

PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:7    
   1638  0 000025   000143 235007                    LDA     99,DL
         0 000026   200004 470500                    LDP0    @TYPE,,AUTO
         0 000027   000000 755100                    STA     0,,PR0

       41     1639    1        LENGTH = 1;

   1639  0 000030   000001 236007                    LDQ     1,DL
         0 000031   200005 471500                    LDP1    @LENGTH,,AUTO
         0 000032   100000 756100                    STQ     0,,PR1

       42     1640    1        RETURN;

   1640  0 000033   000000 702200 xent               TSX2  ! X66_ARET
       43     1641    1   END DDB$INTERP;

PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:8    
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$INTERP.

   Procedure DDB$INTERP requires 28 words for executable code.
   Procedure DDB$INTERP requires 12 words of local(AUTO) storage.

    No errors detected in file DDB$INTERP.:E05TSI    .
PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:9    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:10   
          MINI XREF LISTING

DDB$OCTAL_TO_INSTR
      1632**DCL-ENT  1633--CALL
I$
      1628**DCL        26--PROC     1631--IMP-PTR  1633>>CALL
INSTR
      1631**DCL      1633<>CALL
LENGTH
      1630**DCL        26--PROC     1634<<ASSIGN   1639<<ASSIGN
NOTFOUND
      1635**LABEL    1633--CALLALT
OP$TAB
      1331**DCL      1633<>CALL
OP$TAB.EIS
      1333**DCL      1341--REDEF
OP$TAB.LENGTH
      1350**DCL      1634>>ASSIGN
OP$TAB.TYPE
      1349**DCL      1635>>ASSIGN
TYPE
      1629**DCL        26--PROC     1635<<ASSIGN   1638<<ASSIGN
PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:11   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$INTERP File=DDB$INTERP.:E05TSI                            TUE 07/29/97 13:43 Page:12   
              MINI UREF LISTING

DDB$INTERP      26**PROC
