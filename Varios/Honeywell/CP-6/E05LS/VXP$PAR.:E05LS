VERSION E05

PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:1    
        1        1        /*M* VXP$PAR - interface with X$PARSE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,PLM=6,IND=4,SDI=2,CTI=8,DCI=4,CSU=2,ECU=2,ENI=4,
        8        8              THI=0,DTI=0,IAD=0,CCC                          */
        9        9        /*
       10       10              Type dcb  meaning
       11       11
       12       12              -1        tree card embedded in object file
       13       13               0   M$SI initial command line
       14       14               1   M$EI commands from file
       15       15               2   M$UC correcting file name
       16       16
       17       17        */
       18       18        VXP$PAR: PROC( TYPE, SYN_ROOT$, TEXT$, NCHARS, WKSZ ) ALTRET;
       19       19        /*
       20       20                  Include files
       21       21        */
       22       22        %INCLUDE VX_INC_C;
       23    10738        %INCLUDE B$JIT;
       24    11028        %INCLUDE XU_SUBS_C;
       25    11120        %INCLUDE XU_PERR_C;
       26    11311        %SET LISTMAC='1'B;
       27    11312        %P;
             11313        %LSET LISTDIR='0'B;

             11320    1   /*******************************************************************************
             11321    1   *                                                                              *
             11322    1   *                          PARAMETERS                                              *
             11323    1   *                                                                              *
             11324    1   *******************************************************************************/

       28    11328    1   DCL TYPE            SBIN WORD ALIGNED;
       29    11329    1   DCL SYN_ROOT$       PTR  ALIGNED;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:2    
       30    11330    1   DCL TEXT$           PTR  ALIGNED;
       31    11331    1   DCL NCHARS          SBIN WORD ALIGNED;
       32    11332    1   DCL WKSZ            SBIN WORD ALIGNED;
       33    11333        %E;
             11334        %LSET LISTDIR='0'B;

             11341    1   /*******************************************************************************
             11342    1   *                                                                              *
             11343    1   *                          ENTRY                                                 *
             11344    1   *                                                                              *
             11345    1   *******************************************************************************/

       34    11349        %ENTRIES;
             11350    1   DCL VXE$ERROR       ENTRY(4);
             11351    1   DCL VXE$ERR         ENTRY(3);
             11352    1   DCL VXE$MERC        ENTRY;
             11353    1   DCL VXE$ERRMSG      ENTRY(3);
             11354    1   DCL VXR$READ        ENTRY( 3 );
             11355    1   DCL VXW$WRITE       ENTRY( 3 );
             11356    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             11357    1   DCL VXD$B2C         ENTRY( 5 );
             11358    1   DCL VXD$C2B         ENTRY( 3 );
             11359    1   DCL VXA$GET         ENTRY( 3 );
             11360    1   DCL VXF$FREE        ENTRY( 3 );
             11361    1   DCL VXQ$SORT        ENTRY( 7 );
             11362    1   DCL VXY$YESNO       ENTRY( 1 );
       35    11364        %ENTRIES_IO;
             11365    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11366    1   DCL VXF$CLOSE       ENTRY(3);
             11367    1   DCL VXU$PREAD       ENTRY(12);
             11368    1   DCL VXK$KEY         ENTRY(4);
             11369    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             11370    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
       36    11372    1   DCL X$PARSE                   ENTRY(1)  ALTRET;
       37    11373        %PTR;
             11374        %LSET LISTDIR='0'B;

PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:3    
             11381    1   /*******************************************************************************
             11382    1   *                                                                              *
             11383    1   *                          PTR                                                 *
             11384    1   *                                                                              *
             11385    1   *******************************************************************************/

       38    11389        %POINTER;
             11390    1   DCL P$         PTR       ALIGNED AUTO;
             11391    1   DCL Q$         PTR       ALIGNED AUTO;
             11392    1   DCL R$         PTR       ALIGNED AUTO;
       39    11394    1   DCL WORK$           PTR  ALIGNED STATIC;
       40    11395    1   DCL NEXT$           PTR  ALIGNED STATIC;
       41    11396    1   DCL START$          PTR  ALIGNED STATIC;
       42    11397    1   DCL PARSE_PARAM$    PTR  ALIGNED STATIC;
       43    11398    1   DCL DUMMY$          PTR  ALIGNED STATIC;
       44    11399        %S;
             11400        %LSET LISTDIR='0'B;

             11407    1   /*******************************************************************************
             11408    1   *                                                                              *
             11409    1   *                          SBIN                                                 *
             11410    1   *                                                                              *
             11411    1   *******************************************************************************/

       45    11415    1   DCL I               SBIN WORD  ALIGNED AUTO;
       46    11416    1   DCL J               SBIN WORD  ALIGNED AUTO;
       47    11417    1   DCL K               SBIN WORD  ALIGNED AUTO;
       48    11418    1   DCL SEV             SBIN WORD  ALIGNED AUTO;
       49    11419    1   DCL GSIZE           SBIN WORD  ALIGNED STATIC;
       50    11420    1   DCL SIZE            SBIN WORD  ALIGNED STATIC;
       51    11421    1   DCL ALL_SIZE        SBIN WORD  ALIGNED STATIC;
       52    11422    1   DCL CPOS            SBIN WORD  ALIGNED STATIC;
       53    11423    1   DCL CHAR_COUNT      SBIN WORD  ALIGNED STATIC;
       54    11424    1   DCL PWKSZ           SBIN WORD  ALIGNED STATIC;
       55    11425    1   DCL DCB_TYPE        SBIN WORD  ALIGNED STATIC;
       56    11426        %BANNER( ARG=BASED );
             11427        %LSET LISTDIR='0'B;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:4    

             11434    1   /*******************************************************************************
             11435    1   *                                                                              *
             11436    1   *                          BASED                                                 *
             11437    1   *                                                                              *
             11438    1   *******************************************************************************/

       57    11442        %SET LISTSUB='1'B;
       58    11443    1   DCL C$CHAR    CHAR(256) BASED;
       59    11444    1   DCL CHAR$STR  CHAR(CHAR_COUNT) BASED(START$);
       60    11445        %SET LISTMAC='0'B;
       61    11446        %PARSE$PARAM( NAME=PARSE$PARAM, STCLASS="BASED(PARSE_PARAM$)" );
       62    11527        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:5    
       63    11528    1         DCB_TYPE = TYPE;
       64    11529    1         SEV = 4;
       65    11530    2         IF DCB_TYPE < 0 THEN DO;          /* Command line already in buffer */
       66    11531    2             GSIZE = 0;
       67    11532    2             START$ = TEXT$;
       68    11533    2             CHAR_COUNT = NCHARS;
       69    11534    2             END;
       70    11535    2         ELSE DO;
       71    11536    2             GSIZE = WKSZ;
       72    11537                  %ALLOCATE(PTR$=START$, TYPE=@GDP, SIZE=GSIZE);
       73    11544    3             DO CASE( DCB_TYPE );
       74    11545    3               CASE(0);                    /* Initial command stream */
       75    11546    3                 START$->C$CHAR = B$JIT$ -> B$JIT.CCBUF;
       76    11547    3                 CHAR_COUNT = B$JIT.CCARS;
       77    11548    3                 VX_LAST_LINE.SIZE = CHAR_COUNT + 1;
       78    11549    3                 VX_LAST_LINE.OFFSET = 1;
       79    11550    3                 CALL CONCAT(VX_LAST_LINE.TEXT, '!',  START$ -> C$CHAR);
       80    11551    3               CASE(1);                    /* Command stream from a file */
       81    11552    3                 CALL VXR$READ( START$ -> C$CHAR, CHAR_COUNT, DCB_TYPE );
       82    11553    3               CASE(2);                    /* New file name/correction */
       83    11554    3   READ_FILE_NAME:
       84    11555    3                 CALL VXR$READ( START$ -> C$CHAR, CHAR_COUNT, DCB_TYPE );
       85    11556    3                 SEV = -4;
       86    11557    3               END;                        /* End do case */
       87    11558    2             NEXT$ = START$;
       88    11559    2             END;                          /* End else do;      */
       89    11560    1         CPOS = 0;
       90    11561    1         SIZE = CHAR_COUNT;
       91    11562        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:6    
       92    11563    1         VX_P_PCB_MAIN.ROOT$ = SYN_ROOT$;
       93    11564    1         VX_P_PCB_MAIN.U$$ = ENTADDR(VXP$PAR_U);
       94    11565    1         VX_P_PCB_MAIN.TEXT$ = START$;
       95    11566    1         VX_P_PCB_MAIN.NCHARS = CHAR_COUNT;
       96    11567    1         ALL_SIZE = 7 * CHAR_COUNT + 100;  /* Compute work area ALL_SIZE */
       97    11568    1         PWKSZ = ALL_SIZE;                 /* Remember initial allocation */
       98    11569              %ALLOCATE( PTR$=WORK$, TYPE=@DS3, SIZE=ALL_SIZE);
       99    11576    1         VX_P_PCB_MAIN.WORK$ = WORK$;
      100    11577    1   AGAIN:
      101    11578    1         VX_P_PCB_MAIN.WKSZ = ALL_SIZE;
      102    11579    1         CALL X$PARSE( VX_P_PCB_MAIN )           ALTRET( PARSE_ERR );
      103    11580    1         WKSZ = ALL_SIZE;
      104    11581    1         CALL VXF$FREE( 8/*@GDP*/, GSIZE, 0 );
      105    11582    1         RETURN;
      106    11583
      107    11584        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:7    
      108    11585    1   PARSE_ERR:
      109    11586    2         DO CASE( VX_P_PCB_MAIN.ERROR.CODE );
      110    11587    2           CASE( %E$WKOVERFLOW, %E$SMALLWORK );
      111    11588    2             PWKSZ      = PWKSZ   + PWKSZ; /* Double and get */
      112    11589                  %ALLOCATE( PTR$=DUMMY$, TYPE=@DS3, SIZE=PWKSZ);
      113    11596    2             ALL_SIZE = ALL_SIZE + PWKSZ;  /* Correct for total allocated */
      114    11597    2             GOTO AGAIN;                   /* Go try again     */
      115    11598    2           CASE( %E$SYNERR );
      116    11599    2             IF VX_DO_ECHO AND DCB_TYPE >= 0 THEN
      117    11600    2                 CALL VXW$WRITE_DO( VX_LAST_LINE.TEXT, VX_LAST_LINE.SIZE );
      118    11601    2             J = VX_P_PCB_MAIN.HI_CHAR;
      119    11602    2             K = J + VX_LAST_LINE.OFFSET - CPOS + 1;
      120    11603    3             IF DCB_TYPE >= 0 AND J >= CPOS AND K <= 120 THEN DO;
      121    11604        /*E*  ERROR: VXP-E$SYNTAX_ERROR_VX-0
      122    11605              MESSAGE:     Syntax error.
      123    11606              DESCRIPTION: Self-explanatory.
      124    11607        */
      125    11608    3                 VX_FPT_ERRMSG.V.POINTER# = K;
      126    11609                      %SCREAM( ERR#=E$SYNTAX_ERROR_VX, MID="'P'", LEVEL=SEV );
      127    11612    3                 VX_FPT_ERRMSG.V.POINTER# = 0;
      128    11613    3                 END;
      129    11614    3             ELSE DO;
      130    11615        /*E*  ERROR: VXP-E$ILLEGAL_SYNTAX_VX-0
      131    11616              MESSAGE: Illegal syntax detected at: %U1<?>%U2
      132    11617              DESCRIPTION: Self-explanatory.
      133    11618        */
      134    11619    3                 K = MAXIMUM( 0, J - 16 );
      135    11620    3                 VX_EFIELD1.COUNT = J - K;
      136    11621    3                 VX_EFIELD1.CHARS = SUBSTR( CHAR$STR, K );
      137    11622    3                 VX_EFIELD2.COUNT = MINIMUM( 15, CHAR_COUNT - J );
      138    11623    3                 VX_EFIELD2.CHARS = SUBSTR( CHAR$STR, J );
      139    11624                      %SCREAM( ERR#=E$ILLEGAL_SYNTAX_VX, MID="'P'", LEVEL=SEV );
      140    11627    3                 END;
      141    11628    2             GOTO READ_FILE_NAME;
      142    11629    2           CASE( ELSE );                   /* Open question */
      143    11630    2             CALL VXE$ERRMSG( VX_P_PCB_MAIN.ERROR, 4 );
      144    11631    2           END;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:8    
      145    11632
      146    11633        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:9    
      147    11634    1   VXP$PAR_U: ENTRY(TYPE) ALTRET;
      148    11635
      149    11636    1         PARSE_PARAM$ = ADDR(TYPE);
      150    11637    2         IF PARSE$PARAM.TYPE = %INPUT# THEN DO;
      151    11638    2             CPOS = PARSE$PARAM.CHARPOS + 1;
      152    11639    2             CHAR_COUNT = CPOS;
      153    11640    2             NEXT$ = PINCRC(START$, CPOS);
      154    11641    3             IF CHAR_COUNT + 256 > GSIZE*4 THEN DO;
      155    11642                      %ALLOCATE( PTR$=DUMMY$, TYPE=@GDP, SIZE=@PAGE_SIZE );
      156    11649    3                 GSIZE = GSIZE + 1024/*@PAGE_SIZE*/;
      157    11650    3                 END;
      158    11651    2             CALL VXR$READ( NEXT$ -> C$CHAR, SIZE, DCB_TYPE );
      159    11652    2             CHAR_COUNT = CHAR_COUNT + SIZE;
      160    11653    2             VX_P_PCB_MAIN.NCHARS = CHAR_COUNT;
      161    11654    2             PARSE$PARAM.RETRY = '1'B;
      162    11655    2             END;
      163    11656
      164    11657    1         RETURN;
      165    11658
      166    11659
      167    11660    1   END VXP$PAR;

PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:10   
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXP$PAR.

   Procedure VXP$PAR requires 314 words for executable code.
   Procedure VXP$PAR requires 20 words of local(AUTO) storage.

    No errors detected in file VXP$PAR.:E05TSI    .

PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:11   

 Object Unit name= VXP$PAR                                    File name= VXP$PAR.:E05TOU
 UTS= JUL 30 '97 08:32:28.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Data  even  none    12     14  VXP$PAR
    3   Proc  even  none   314    472  VXP$PAR
    4  RoData even  none    31     37  VXP$PAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        5  VXP$PAR
     3    400          yes     yes      Std        1  VXP$PAR_U
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:12   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VXA$GET
         yes           Std       3 VXR$READ
 yes     yes           Std       1 X$PARSE
         yes           Std       3 VXF$FREE
         yes           Std       2 VXW$WRITE_DO
         yes           Std       4 VXE$ERROR
         yes           Std       3 VXE$ERRMSG
 yes     yes           Std       1 VXP$PAR_U
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_P_PCB_MAIN                         VX_FPT_ERRMSG
     B$JIT$                                VX_OU_HEAD                            VX_ERRORS
     VX_M_FREE                             VX_M_ALL                              VX_M_BASE_PTR
     VX_EFIELD1                            VX_EFIELD2                            VX_DO_ECHO
     VX_LAST_LINE                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:13   


        1        1        /*M* VXP$PAR - interface with X$PARSE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,PLM=6,IND=4,SDI=2,CTI=8,DCI=4,CSU=2,ECU=2,ENI=4,
        8        8              THI=0,DTI=0,IAD=0,CCC                          */
        9        9        /*
       10       10              Type dcb  meaning
       11       11
       12       12              -1        tree card embedded in object file
       13       13               0   M$SI initial command line
       14       14               1   M$EI commands from file
       15       15               2   M$UC correcting file name
       16       16
       17       17        */
       18       18        VXP$PAR: PROC( TYPE, SYN_ROOT$, TEXT$, NCHARS, WKSZ ) ALTRET;

     18  3 000000   000000 700200 xent  VXP$PAR      TSX0  ! X66_AUTO_5
         3 000001   000024 000005                    ZERO    20,5

       19       19        /*
       20       20                  Include files
       21       21        */
       22       22        %INCLUDE VX_INC_C;
       23    10738        %INCLUDE B$JIT;
       24    11028        %INCLUDE XU_SUBS_C;
       25    11120        %INCLUDE XU_PERR_C;
       26    11311        %SET LISTMAC='1'B;
       27    11312        %P;
             11313        %LSET LISTDIR='0'B;

             11320    1   /*******************************************************************************
             11321    1   *                                                                              *
             11322    1   *                          PARAMETERS                                             *
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:14   
             11323    1   *                                                                              *
             11324    1   *******************************************************************************/

       28    11328    1   DCL TYPE            SBIN WORD ALIGNED;
       29    11329    1   DCL SYN_ROOT$       PTR  ALIGNED;
       30    11330    1   DCL TEXT$           PTR  ALIGNED;
       31    11331    1   DCL NCHARS          SBIN WORD ALIGNED;
       32    11332    1   DCL WKSZ            SBIN WORD ALIGNED;
       33    11333        %E;
             11334        %LSET LISTDIR='0'B;

             11341    1   /*******************************************************************************
             11342    1   *                                                                              *
             11343    1   *                          ENTRY                                                 *
             11344    1   *                                                                              *
             11345    1   *******************************************************************************/

       34    11349        %ENTRIES;
             11350    1   DCL VXE$ERROR       ENTRY(4);
             11351    1   DCL VXE$ERR         ENTRY(3);
             11352    1   DCL VXE$MERC        ENTRY;
             11353    1   DCL VXE$ERRMSG      ENTRY(3);
             11354    1   DCL VXR$READ        ENTRY( 3 );
             11355    1   DCL VXW$WRITE       ENTRY( 3 );
             11356    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             11357    1   DCL VXD$B2C         ENTRY( 5 );
             11358    1   DCL VXD$C2B         ENTRY( 3 );
             11359    1   DCL VXA$GET         ENTRY( 3 );
             11360    1   DCL VXF$FREE        ENTRY( 3 );
             11361    1   DCL VXQ$SORT        ENTRY( 7 );
             11362    1   DCL VXY$YESNO       ENTRY( 1 );
       35    11364        %ENTRIES_IO;
             11365    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11366    1   DCL VXF$CLOSE       ENTRY(3);
             11367    1   DCL VXU$PREAD       ENTRY(12);
             11368    1   DCL VXK$KEY         ENTRY(4);
             11369    1   DCL VXI$READ        ENTRY(4)  ALTRET;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:15   
             11370    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
       36    11372    1   DCL X$PARSE                   ENTRY(1)  ALTRET;
       37    11373        %PTR;
             11374        %LSET LISTDIR='0'B;

             11381    1   /*******************************************************************************
             11382    1   *                                                                              *
             11383    1   *                          PTR                                                 *
             11384    1   *                                                                              *
             11385    1   *******************************************************************************/

       38    11389        %POINTER;
             11390    1   DCL P$         PTR       ALIGNED AUTO;
             11391    1   DCL Q$         PTR       ALIGNED AUTO;
             11392    1   DCL R$         PTR       ALIGNED AUTO;
       39    11394    1   DCL WORK$           PTR  ALIGNED STATIC;
       40    11395    1   DCL NEXT$           PTR  ALIGNED STATIC;
       41    11396    1   DCL START$          PTR  ALIGNED STATIC;
       42    11397    1   DCL PARSE_PARAM$    PTR  ALIGNED STATIC;
       43    11398    1   DCL DUMMY$          PTR  ALIGNED STATIC;
       44    11399        %S;
             11400        %LSET LISTDIR='0'B;

             11407    1   /*******************************************************************************
             11408    1   *                                                                              *
             11409    1   *                          SBIN                                                 *
             11410    1   *                                                                              *
             11411    1   *******************************************************************************/

       45    11415    1   DCL I               SBIN WORD  ALIGNED AUTO;
       46    11416    1   DCL J               SBIN WORD  ALIGNED AUTO;
       47    11417    1   DCL K               SBIN WORD  ALIGNED AUTO;
       48    11418    1   DCL SEV             SBIN WORD  ALIGNED AUTO;
       49    11419    1   DCL GSIZE           SBIN WORD  ALIGNED STATIC;
       50    11420    1   DCL SIZE            SBIN WORD  ALIGNED STATIC;
       51    11421    1   DCL ALL_SIZE        SBIN WORD  ALIGNED STATIC;
       52    11422    1   DCL CPOS            SBIN WORD  ALIGNED STATIC;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:16   
       53    11423    1   DCL CHAR_COUNT      SBIN WORD  ALIGNED STATIC;
       54    11424    1   DCL PWKSZ           SBIN WORD  ALIGNED STATIC;
       55    11425    1   DCL DCB_TYPE        SBIN WORD  ALIGNED STATIC;
       56    11426        %BANNER( ARG=BASED );
             11427        %LSET LISTDIR='0'B;

             11434    1   /*******************************************************************************
             11435    1   *                                                                              *
             11436    1   *                          BASED                                                 *
             11437    1   *                                                                              *
             11438    1   *******************************************************************************/

       57    11442        %SET LISTSUB='1'B;
       58    11443    1   DCL C$CHAR    CHAR(256) BASED;
       59    11444    1   DCL CHAR$STR  CHAR(CHAR_COUNT) BASED(START$);
       60    11445        %SET LISTMAC='0'B;
       61    11446        %PARSE$PARAM( NAME=PARSE$PARAM, STCLASS="BASED(PARSE_PARAM$)" );
       62    11527        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:17   
       63    11528    1         DCB_TYPE = TYPE;

  11528  3 000002   200003 470500                    LDP0    @TYPE,,AUTO
         3 000003   000000 235100                    LDA     0,,PR0
         3 000004   000013 755000 2                  STA     DCB_TYPE

       64    11529    1         SEV = 4;

  11529  3 000005   000004 236007                    LDQ     4,DL
         3 000006   200016 756100                    STQ     SEV,,AUTO

       65    11530    2         IF DCB_TYPE < 0 THEN DO;          /* Command line already in buffer */

  11530  3 000007   000000 115003                    CMPA    0,DU
         3 000010   000021 605000 3                  TPL     s:11536

       66    11531    2             GSIZE = 0;

  11531  3 000011   000005 450000 2                  STZ     GSIZE

       67    11532    2             START$ = TEXT$;

  11532  3 000012   200005 471500                    LDP1    @TEXT$,,AUTO
         3 000013   100000 236100                    LDQ     0,,PR1
         3 000014   000002 756000 2                  STQ     START$

       68    11533    2             CHAR_COUNT = NCHARS;

  11533  3 000015   200006 473500                    LDP3    @NCHARS,,AUTO
         3 000016   300000 235100                    LDA     0,,PR3
         3 000017   000011 755000 2                  STA     CHAR_COUNT

       69    11534    2             END;

  11534  3 000020   000126 710000 3                  TRA     s:11560

       70    11535    2         ELSE DO;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:18   

       71    11536    2             GSIZE = WKSZ;

  11536  3 000021   200007 471500                    LDP1    @WKSZ,,AUTO
         3 000022   100000 235100                    LDA     0,,PR1
         3 000023   000005 755000 2                  STA     GSIZE

       72    11537                  %ALLOCATE(PTR$=START$, TYPE=@GDP, SIZE=GSIZE);

  11538  3 000024   000010 236000 xsym               LDQ     VX_M_ALL+8
         3 000025   000010 136000 xsym               SBLQ    VX_M_FREE+8
         3 000026   000005 116000 2                  CMPQ    GSIZE
         3 000027   000040 604000 3                  TMI     s:11542

  11539  3 000030   000010 236000 xsym               LDQ     VX_M_FREE+8
         3 000031   000022 736000                    QLS     18
         3 000032   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         3 000033   000002 756000 2                  STQ     START$

  11540  3 000034   000010 236000 xsym               LDQ     VX_M_FREE+8
         3 000035   000005 036000 2                  ADLQ    GSIZE
         3 000036   000010 756000 xsym               STQ     VX_M_FREE+8

  11541  3 000037   000044 710000 3                  TRA     s:11544

  11542  3 000040   000000 630400 4                  EPPR0   0
         3 000041   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000042   000000 701000 xent               TSX1    VXA$GET
         3 000043   000000 011000                    NOP     0

       73    11544    3             DO CASE( DCB_TYPE );

  11544  3 000044   000013 235000 2                  LDA     DCB_TYPE
         3 000045   000003 115007                    CMPA    3,DL
         3 000046   000050 602005 3                  TNC     s:11544+4,AL
         3 000047   000124 710000 3                  TRA     s:11558
         3 000050   000053 710000 3                  TRA     s:11546
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:19   
         3 000051   000077 710000 3                  TRA     s:11552
         3 000052   000111 710000 3                  TRA     READ_FILE_NAME

       74    11545    3               CASE(0);                    /* Initial command stream */

       75    11546    3                 START$->C$CHAR = B$JIT$ -> B$JIT.CCBUF;

  11546  3 000053   000000 470400 xsym               LDP0    B$JIT$
         3 000054   000002 471400 2                  LDP1    START$
         3 000055   040100 100500                    MLR     fill='040'O
         3 000056   000033 000400                    ADSC9   27,,PR0                  cn=0,n=256
         3 000057   100000 000400                    ADSC9   0,,PR1                   cn=0,n=256

       76    11547    3                 CHAR_COUNT = B$JIT.CCARS;

  11547  3 000060   000000 470400 xsym               LDP0    B$JIT$
         3 000061   000032 236100                    LDQ     26,,PR0
         3 000062   000022 732000                    QRS     18
         3 000063   000011 756000 2                  STQ     CHAR_COUNT

       77    11548    3                 VX_LAST_LINE.SIZE = CHAR_COUNT + 1;

  11548  3 000064   000001 036007                    ADLQ    1,DL
         3 000065   000000 756000 xsym               STQ     VX_LAST_LINE

       78    11549    3                 VX_LAST_LINE.OFFSET = 1;

  11549  3 000066   000001 235007                    LDA     1,DL
         3 000067   000001 755000 xsym               STA     VX_LAST_LINE+1

       79    11550    3                 CALL CONCAT(VX_LAST_LINE.TEXT, '!',  START$ -> C$CHAR);

  11550  3 000070   041000 236003                    LDQ     16896,DU
         3 000071   000002 756000 xsym               STQ     VX_LAST_LINE+2
         3 000072   000002 471400 2                  LDP1    START$
         3 000073   040000 100500                    MLR     fill='040'O
         3 000074   100000 000400                    ADSC9   0,,PR1                   cn=0,n=256
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:20   
         3 000075   000002 200411 xsym               ADSC9   VX_LAST_LINE+2           cn=1,n=265
         3 000076   000124 710000 3                  TRA     s:11558

       80    11551    3               CASE(1);                    /* Command stream from a file */

       81    11552    3                 CALL VXR$READ( START$ -> C$CHAR, CHAR_COUNT, DCB_TYPE );

  11552  3 000077   000003 236000 4                  LDQ     3
         3 000100   200022 756100                    STQ     SEV+4,,AUTO
         3 000101   000004 236000 4                  LDQ     4
         3 000102   000002 235000 2                  LDA     START$
         3 000103   200020 757100                    STAQ    SEV+2,,AUTO
         3 000104   200020 630500                    EPPR0   SEV+2,,AUTO
         3 000105   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000106   000000 701000 xent               TSX1    VXR$READ
         3 000107   000000 011000                    NOP     0
         3 000110   000124 710000 3                  TRA     s:11558

       82    11553    3               CASE(2);                    /* New file name/correction */

       83    11554    3   READ_FILE_NAME:
       84    11555    3                 CALL VXR$READ( START$ -> C$CHAR, CHAR_COUNT, DCB_TYPE );

  11555  3 000111   000003 236000 4     READ_FILE_N* LDQ     3
         3 000112   200022 756100                    STQ     SEV+4,,AUTO
         3 000113   000004 236000 4                  LDQ     4
         3 000114   000002 235000 2                  LDA     START$
         3 000115   200020 757100                    STAQ    SEV+2,,AUTO
         3 000116   200020 630500                    EPPR0   SEV+2,,AUTO
         3 000117   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000120   000000 701000 xent               TSX1    VXR$READ
         3 000121   000000 011000                    NOP     0

       85    11556    3                 SEV = -4;

  11556  3 000122   000004 335007                    LCA     4,DL
         3 000123   200016 755100                    STA     SEV,,AUTO
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:21   

       86    11557    3               END;                        /* End do case */

       87    11558    2             NEXT$ = START$;

  11558  3 000124   000002 236000 2                  LDQ     START$
         3 000125   000001 756000 2                  STQ     NEXT$

       88    11559    2             END;                          /* End else do;      */

       89    11560    1         CPOS = 0;

  11560  3 000126   000010 450000 2                  STZ     CPOS

       90    11561    1         SIZE = CHAR_COUNT;

  11561  3 000127   000011 235000 2                  LDA     CHAR_COUNT
         3 000130   000006 755000 2                  STA     SIZE

       91    11562        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:22   
       92    11563    1         VX_P_PCB_MAIN.ROOT$ = SYN_ROOT$;

  11563  3 000131   200004 470500                    LDP0    @SYN_ROOT$,,AUTO
         3 000132   000000 236100                    LDQ     0,,PR0
         3 000133   000001 756000 xsym               STQ     VX_P_PCB_MAIN+1

       93    11564    1         VX_P_PCB_MAIN.U$$ = ENTADDR(VXP$PAR_U);

  11564  3 000134   000400 636000 3                  EAQ     s:11634
         3 000135   000004 756000 xsym               STQ     VX_P_PCB_MAIN+4

       94    11565    1         VX_P_PCB_MAIN.TEXT$ = START$;

  11565  3 000136   000002 236000 2                  LDQ     START$
         3 000137   000000 756000 xsym               STQ     VX_P_PCB_MAIN

       95    11566    1         VX_P_PCB_MAIN.NCHARS = CHAR_COUNT;

  11566  3 000140   000011 755000 xsym               STA     VX_P_PCB_MAIN+9

       96    11567    1         ALL_SIZE = 7 * CHAR_COUNT + 100;  /* Compute work area ALL_SIZE */

  11567  3 000141   000011 236000 2                  LDQ     CHAR_COUNT
         3 000142   000007 402007                    MPY     7,DL
         3 000143   000144 036007                    ADLQ    100,DL
         3 000144   000007 756000 2                  STQ     ALL_SIZE

       97    11568    1         PWKSZ = ALL_SIZE;                 /* Remember initial allocation */

  11568  3 000145   000012 756000 2                  STQ     PWKSZ

       98    11569              %ALLOCATE( PTR$=WORK$, TYPE=@DS3, SIZE=ALL_SIZE);

  11570  3 000146   000003 236000 xsym               LDQ     VX_M_ALL+3
         3 000147   000003 136000 xsym               SBLQ    VX_M_FREE+3
         3 000150   000007 116000 2                  CMPQ    ALL_SIZE
         3 000151   000162 604000 3                  TMI     s:11574
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:23   

  11571  3 000152   000003 236000 xsym               LDQ     VX_M_FREE+3
         3 000153   000022 736000                    QLS     18
         3 000154   000003 036000 xsym               ADLQ    VX_M_BASE_PTR+3
         3 000155   000000 756000 2                  STQ     WORK$

  11572  3 000156   000003 236000 xsym               LDQ     VX_M_FREE+3
         3 000157   000007 036000 2                  ADLQ    ALL_SIZE
         3 000160   000003 756000 xsym               STQ     VX_M_FREE+3

  11573  3 000161   000166 710000 3                  TRA     s:11576

  11574  3 000162   000005 630400 4                  EPPR0   5
         3 000163   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000164   000000 701000 xent               TSX1    VXA$GET
         3 000165   000000 011000                    NOP     0

       99    11576    1         VX_P_PCB_MAIN.WORK$ = WORK$;

  11576  3 000166   000000 236000 2                  LDQ     WORK$
         3 000167   000002 756000 xsym               STQ     VX_P_PCB_MAIN+2

      100    11577    1   AGAIN:
      101    11578    1         VX_P_PCB_MAIN.WKSZ = ALL_SIZE;

  11578  3 000170   000007 720000 2     AGAIN        LXL0    ALL_SIZE
         3 000171   000005 740000 xsym               STX0    VX_P_PCB_MAIN+5

      102    11579    1         CALL X$PARSE( VX_P_PCB_MAIN )           ALTRET( PARSE_ERR );

  11579  3 000172   000010 630400 4                  EPPR0   8
         3 000173   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000174   000000 701000 xent               TSX1    X$PARSE
         3 000175   000206 702000 3                  TSX2    PARSE_ERR

      103    11580    1         WKSZ = ALL_SIZE;

PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:24   
  11580  3 000176   200007 470500                    LDP0    @WKSZ,,AUTO
         3 000177   000007 235000 2                  LDA     ALL_SIZE
         3 000200   000000 755100                    STA     0,,PR0

      104    11581    1         CALL VXF$FREE( 8/*@GDP*/, GSIZE, 0 );

  11581  3 000201   000011 630400 4                  EPPR0   9
         3 000202   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000203   000000 701000 xent               TSX1    VXF$FREE
         3 000204   000000 011000                    NOP     0

      105    11582    1         RETURN;

  11582  3 000205   000000 702200 xent               TSX2  ! X66_ARET

      106    11583
      107    11584        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:25   
      108    11585    1   PARSE_ERR:
      109    11586    2         DO CASE( VX_P_PCB_MAIN.ERROR.CODE );

  11586  3 000206   000006 236000 xsym  PARSE_ERR    LDQ     VX_P_PCB_MAIN+6
         3 000207   000003 772000                    QRL     3
         3 000210   037777 376007                    ANQ     16383,DL
         3 000211   000006 116007                    CMPQ    6,DL
         3 000212   000214 602006 3                  TNC     PARSE_ERR+6,QL
         3 000213   000373 710000 3                  TRA     s:11630
         3 000214   000373 710000 3                  TRA     s:11630
         3 000215   000251 710000 3                  TRA     s:11599
         3 000216   000373 710000 3                  TRA     s:11630
         3 000217   000373 710000 3                  TRA     s:11630
         3 000220   000222 710000 3                  TRA     s:11588
         3 000221   000222 710000 3                  TRA     s:11588

      110    11587    2           CASE( %E$WKOVERFLOW, %E$SMALLWORK );

      111    11588    2             PWKSZ      = PWKSZ   + PWKSZ; /* Double and get */

  11588  3 000222   000012 236000 2                  LDQ     PWKSZ
         3 000223   000012 036000 2                  ADLQ    PWKSZ
         3 000224   000012 756000 2                  STQ     PWKSZ

      112    11589                  %ALLOCATE( PTR$=DUMMY$, TYPE=@DS3, SIZE=PWKSZ);

  11590  3 000225   000003 236000 xsym               LDQ     VX_M_ALL+3
         3 000226   000003 136000 xsym               SBLQ    VX_M_FREE+3
         3 000227   000012 116000 2                  CMPQ    PWKSZ
         3 000230   000241 604000 3                  TMI     s:11594

  11591  3 000231   000003 236000 xsym               LDQ     VX_M_FREE+3
         3 000232   000022 736000                    QLS     18
         3 000233   000003 036000 xsym               ADLQ    VX_M_BASE_PTR+3
         3 000234   000004 756000 2                  STQ     DUMMY$

  11592  3 000235   000003 236000 xsym               LDQ     VX_M_FREE+3
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:26   
         3 000236   000012 036000 2                  ADLQ    PWKSZ
         3 000237   000003 756000 xsym               STQ     VX_M_FREE+3

  11593  3 000240   000245 710000 3                  TRA     s:11596

  11594  3 000241   000014 630400 4                  EPPR0   12
         3 000242   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000243   000000 701000 xent               TSX1    VXA$GET
         3 000244   000000 011000                    NOP     0

      113    11596    2             ALL_SIZE = ALL_SIZE + PWKSZ;  /* Correct for total allocated */

  11596  3 000245   000007 236000 2                  LDQ     ALL_SIZE
         3 000246   000012 036000 2                  ADLQ    PWKSZ
         3 000247   000007 756000 2                  STQ     ALL_SIZE

      114    11597    2             GOTO AGAIN;                   /* Go try again     */

  11597  3 000250   000170 710000 3                  TRA     AGAIN

      115    11598    2           CASE( %E$SYNERR );

      116    11599    2             IF VX_DO_ECHO AND DCB_TYPE >= 0 THEN

  11599  3 000251   000000 234000 xsym               SZN     VX_DO_ECHO
         3 000252   000261 605000 3                  TPL     s:11601
         3 000253   000013 235000 2                  LDA     DCB_TYPE
         3 000254   000261 604000 3                  TMI     s:11601

      117    11600    2                 CALL VXW$WRITE_DO( VX_LAST_LINE.TEXT, VX_LAST_LINE.SIZE );

  11600  3 000255   000017 630400 4                  EPPR0   15
         3 000256   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000257   000000 701000 xent               TSX1    VXW$WRITE_DO
         3 000260   000000 011000                    NOP     0

      118    11601    2             J = VX_P_PCB_MAIN.HI_CHAR;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:27   

  11601  3 000261   000012 235000 xsym               LDA     VX_P_PCB_MAIN+10
         3 000262   200014 755100                    STA     J,,AUTO

      119    11602    2             K = J + VX_LAST_LINE.OFFSET - CPOS + 1;

  11602  3 000263   200014 236100                    LDQ     J,,AUTO
         3 000264   000001 036000 xsym               ADLQ    VX_LAST_LINE+1
         3 000265   000010 136000 2                  SBLQ    CPOS
         3 000266   000001 036007                    ADLQ    1,DL
         3 000267   200015 756100                    STQ     K,,AUTO

      120    11603    3             IF DCB_TYPE >= 0 AND J >= CPOS AND K <= 120 THEN DO;

  11603  3 000270   000013 235000 2                  LDA     DCB_TYPE
         3 000271   000320 604000 3                  TMI     s:11619
         3 000272   200014 236100                    LDQ     J,,AUTO
         3 000273   000010 116000 2                  CMPQ    CPOS
         3 000274   000320 604000 3                  TMI     s:11619
         3 000275   200015 235100                    LDA     K,,AUTO
         3 000276   000170 115007                    CMPA    120,DL
         3 000277   000320 605400 3                  TPNZ    s:11619

      121    11604        /*E*  ERROR: VXP-E$SYNTAX_ERROR_VX-0
      122    11605              MESSAGE:     Syntax error.
      123    11606              DESCRIPTION: Self-explanatory.
      124    11607        */
      125    11608    3                 VX_FPT_ERRMSG.V.POINTER# = K;

  11608  3 000300   200015 236100                    LDQ     K,,AUTO
         3 000301   000022 736000                    QLS     18
         3 000302   000030 552020 xsym               STBQ    VX_FPT_ERRMSG+24,'20'O

      126    11609                      %SCREAM( ERR#=E$SYNTAX_ERROR_VX, MID="'P'", LEVEL=SEV );

  11610  3 000303   000024 237000 4                  LDAQ    20
         3 000304   200022 757100                    STAQ    SEV+4,,AUTO
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:28   
         3 000305   200016 630500                    EPPR0   SEV,,AUTO
         3 000306   200021 450500                    STP0    SEV+3,,AUTO
         3 000307   000023 236000 4                  LDQ     19
         3 000310   200020 756100                    STQ     SEV+2,,AUTO
         3 000311   200020 630500                    EPPR0   SEV+2,,AUTO
         3 000312   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000313   000000 701000 xent               TSX1    VXE$ERROR
         3 000314   000000 011000                    NOP     0

      127    11612    3                 VX_FPT_ERRMSG.V.POINTER# = 0;

  11612  3 000315   000000 236003                    LDQ     0,DU
         3 000316   000030 552020 xsym               STBQ    VX_FPT_ERRMSG+24,'20'O

      128    11613    3                 END;

  11613  3 000317   000372 710000 3                  TRA     s:11628

      129    11614    3             ELSE DO;

      130    11615        /*E*  ERROR: VXP-E$ILLEGAL_SYNTAX_VX-0
      131    11616              MESSAGE: Illegal syntax detected at: %U1<?>%U2
      132    11617              DESCRIPTION: Self-explanatory.
      133    11618        */
      134    11619    3                 K = MAXIMUM( 0, J - 16 );

  11619  3 000320   200014 236100                    LDQ     J,,AUTO
         3 000321   000020 136007                    SBLQ    16,DL
         3 000322   000000 116003                    CMPQ    0,DU
         3 000323   000325 605000 3                  TPL     s:11619+5
         3 000324   000000 236003                    LDQ     0,DU
         3 000325   200015 756100                    STQ     K,,AUTO

      135    11620    3                 VX_EFIELD1.COUNT = J - K;

  11620  3 000326   200014 236100                    LDQ     J,,AUTO
         3 000327   200015 136100                    SBLQ    K,,AUTO
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:29   
         3 000330   000033 736000                    QLS     27
         3 000331   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      136    11621    3                 VX_EFIELD1.CHARS = SUBSTR( CHAR$STR, K );

  11621  3 000332   000011 236000 2                  LDQ     CHAR_COUNT
         3 000333   200015 136100                    SBLQ    K,,AUTO
         3 000334   000002 470400 2                  LDP0    START$
         3 000335   000000 620006                    EAX0    0,QL
         3 000336   200015 235100                    LDA     K,,AUTO
         3 000337   040000 100545                    MLR     fill='040'O
         3 000340   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
         3 000341   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      137    11622    3                 VX_EFIELD2.COUNT = MINIMUM( 15, CHAR_COUNT - J );

  11622  3 000342   000011 236000 2                  LDQ     CHAR_COUNT
         3 000343   200014 136100                    SBLQ    J,,AUTO
         3 000344   000017 116007                    CMPQ    15,DL
         3 000345   000347 604400 3                  TMOZ    s:11622+5
         3 000346   000017 236007                    LDQ     15,DL
         3 000347   000033 736000                    QLS     27
         3 000350   000000 552040 xsym               STBQ    VX_EFIELD2,'40'O

      138    11623    3                 VX_EFIELD2.CHARS = SUBSTR( CHAR$STR, J );

  11623  3 000351   000011 236000 2                  LDQ     CHAR_COUNT
         3 000352   200014 136100                    SBLQ    J,,AUTO
         3 000353   000000 620006                    EAX0    0,QL
         3 000354   200014 236100                    LDQ     J,,AUTO
         3 000355   040000 100546                    MLR     fill='040'O
         3 000356   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=*X0
         3 000357   000000 200117 xsym               ADSC9   VX_EFIELD2               cn=1,n=79

      139    11624                      %SCREAM( ERR#=E$ILLEGAL_SYNTAX_VX, MID="'P'", LEVEL=SEV );

  11625  3 000360   000024 237000 4                  LDAQ    20
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:30   
         3 000361   200022 757100                    STAQ    SEV+4,,AUTO
         3 000362   200016 631500                    EPPR1   SEV,,AUTO
         3 000363   200021 451500                    STP1    SEV+3,,AUTO
         3 000364   000027 236000 4                  LDQ     23
         3 000365   200020 756100                    STQ     SEV+2,,AUTO
         3 000366   200020 630500                    EPPR0   SEV+2,,AUTO
         3 000367   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000370   000000 701000 xent               TSX1    VXE$ERROR
         3 000371   000000 011000                    NOP     0

      140    11627    3                 END;

      141    11628    2             GOTO READ_FILE_NAME;

  11628  3 000372   000111 710000 3                  TRA     READ_FILE_NAME

      142    11629    2           CASE( ELSE );                   /* Open question */

      143    11630    2             CALL VXE$ERRMSG( VX_P_PCB_MAIN.ERROR, 4 );

  11630  3 000373   000030 630400 4                  EPPR0   24
         3 000374   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000375   000000 701000 xent               TSX1    VXE$ERRMSG
         3 000376   000000 011000                    NOP     0

      144    11631    2           END;

  11631  3 000377   000402 710000 3                  TRA     s:11636

      145    11632
      146    11633        %EJECT;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:31   
      147    11634    1   VXP$PAR_U: ENTRY(TYPE) ALTRET;

  11634  3 000400   000000 700200 xent  VXP$PAR_U    TSX0  ! X66_AUTO_5
         3 000401   000024 000005                    ZERO    20,5

      148    11635
      149    11636    1         PARSE_PARAM$ = ADDR(TYPE);

  11636  3 000402   200003 236100                    LDQ     @TYPE,,AUTO
         3 000403   000003 756000 2                  STQ     PARSE_PARAM$

      150    11637    2         IF PARSE$PARAM.TYPE = %INPUT# THEN DO;

  11637  3 000404   000003 470400 2                  LDP0    PARSE_PARAM$
         3 000405   000000 236100                    LDQ     0,,PR0
         3 000406   777000 376003                    ANQ     -512,DU
         3 000407   004000 116003                    CMPQ    2048,DU
         3 000410   000471 601000 3                  TNZ     s:11657

      151    11638    2             CPOS = PARSE$PARAM.CHARPOS + 1;

  11638  3 000411   000004 235100                    LDA     4,,PR0
         3 000412   000001 035007                    ADLA    1,DL
         3 000413   000010 755000 2                  STA     CPOS

      152    11639    2             CHAR_COUNT = CPOS;

  11639  3 000414   000011 755000 2                  STA     CHAR_COUNT

      153    11640    2             NEXT$ = PINCRC(START$, CPOS);

  11640  3 000415   000010 236000 2                  LDQ     CPOS
         3 000416   000020 736000                    QLS     16
         3 000417   000002 036000 2                  ADLQ    START$
         3 000420   000001 756000 2                  STQ     NEXT$

      154    11641    3             IF CHAR_COUNT + 256 > GSIZE*4 THEN DO;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:32   

  11641  3 000421   000005 235000 2                  LDA     GSIZE
         3 000422   000002 735000                    ALS     2
         3 000423   200020 755100                    STA     SEV+2,,AUTO
         3 000424   000011 236000 2                  LDQ     CHAR_COUNT
         3 000425   000400 036007                    ADLQ    256,DL
         3 000426   200020 116100                    CMPQ    SEV+2,,AUTO
         3 000427   000451 604400 3                  TMOZ    s:11651

      155    11642                      %ALLOCATE( PTR$=DUMMY$, TYPE=@GDP, SIZE=@PAGE_SIZE );

  11643  3 000430   000010 236000 xsym               LDQ     VX_M_ALL+8
         3 000431   000010 136000 xsym               SBLQ    VX_M_FREE+8
         3 000432   002000 116007                    CMPQ    1024,DL
         3 000433   000443 604000 3                  TMI     s:11647

  11644  3 000434   000010 236000 xsym               LDQ     VX_M_FREE+8
         3 000435   000022 736000                    QLS     18
         3 000436   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         3 000437   000004 756000 2                  STQ     DUMMY$

  11645  3 000440   002000 236007                    LDQ     1024,DL
         3 000441   000010 056000 xsym               ASQ     VX_M_FREE+8

  11646  3 000442   000447 710000 3                  TRA     s:11649

  11647  3 000443   000033 630400 4                  EPPR0   27
         3 000444   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000445   000000 701000 xent               TSX1    VXA$GET
         3 000446   000000 011000                    NOP     0

      156    11649    3                 GSIZE = GSIZE + 1024/*@PAGE_SIZE*/;

  11649  3 000447   002000 236007                    LDQ     1024,DL
         3 000450   000005 056000 2                  ASQ     GSIZE

      157    11650    3                 END;
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:33   

      158    11651    2             CALL VXR$READ( NEXT$ -> C$CHAR, SIZE, DCB_TYPE );

  11651  3 000451   000003 236000 4                  LDQ     3
         3 000452   200022 756100                    STQ     SEV+4,,AUTO
         3 000453   000036 236000 4                  LDQ     30
         3 000454   000001 235000 2                  LDA     NEXT$
         3 000455   200020 757100                    STAQ    SEV+2,,AUTO
         3 000456   200020 630500                    EPPR0   SEV+2,,AUTO
         3 000457   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000460   000000 701000 xent               TSX1    VXR$READ
         3 000461   000000 011000                    NOP     0

      159    11652    2             CHAR_COUNT = CHAR_COUNT + SIZE;

  11652  3 000462   000011 236000 2                  LDQ     CHAR_COUNT
         3 000463   000006 036000 2                  ADLQ    SIZE
         3 000464   000011 756000 2                  STQ     CHAR_COUNT

      160    11653    2             VX_P_PCB_MAIN.NCHARS = CHAR_COUNT;

  11653  3 000465   000011 756000 xsym               STQ     VX_P_PCB_MAIN+9

      161    11654    2             PARSE$PARAM.RETRY = '1'B;

  11654  3 000466   000003 470400 2                  LDP0    PARSE_PARAM$
         3 000467   000100 236003                    LDQ     64,DU
         3 000470   000000 256100                    ORSQ    0,,PR0

      162    11655    2             END;

      163    11656
      164    11657    1         RETURN;

  11657  3 000471   000000 702200 xent               TSX2  ! X66_ARET
      165    11658
      166    11659
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:34   
      167    11660    1   END VXP$PAR;

PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:35   
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXP$PAR.
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:36   

 **** Variables and constants ****

  ****  Section 002  Data  VXP$PAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w SBIN        r     1 ALL_SIZE                  11-0-0/w SBIN        r     1 CHAR_COUNT
    10-0-0/w SBIN        r     1 CPOS                      13-0-0/w SBIN        r     1 DCB_TYPE
     4-0-0/w PTR         r     1 DUMMY$                     5-0-0/w SBIN        r     1 GSIZE
     1-0-0/w PTR         r     1 NEXT$                      3-0-0/w PTR         r     1 PARSE_PARAM$
    12-0-0/w SBIN        r     1 PWKSZ                      6-0-0/w SBIN        r     1 SIZE
     2-0-0/w PTR         r     1 START$                     0-0-0/w PTR         r     1 WORK$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @NCHARS                    4-0-0/w PTR         r     1 @SYN_ROOT$
     5-0-0/w PTR         r     1 @TEXT$                     3-0-0/w PTR         r     1 @TYPE
     7-0-0/w PTR         r     1 @WKSZ                     14-0-0/w SBIN        r     1 J
    15-0-0/w SBIN        r     1 K                         *0-0-0/w SBIN        r     1 NCHARS
    16-0-0/w SBIN        r     1 SEV                       *0-0-0/w PTR         r     1 SYN_ROOT$
    *0-0-0/w PTR         r     1 TEXT$                     *0-0-0/w SBIN        r     1 TYPE
    *0-0-0/w SBIN        r     1 WKSZ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w BIT         r     1 VX_DO_ECHO
     0-0-0/w STRC(720)   r     1 VX_EFIELD1                 0-0-0/w STRC(720)   r     1 VX_EFIELD2
     0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG              0-0-0/w STRC(2466)  r     1 VX_LAST_LINE
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:37   
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w STRC(504)   r     1 VX_P_PCB_MAIN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/c CHAR(256)   r     1 C$CHAR
     0-0-0/c ACHR        r     1 CHAR$STR                   0-0-0/w STRC(270)   r     1 PARSE$PARAM


   Procedure VXP$PAR requires 314 words for executable code.
   Procedure VXP$PAR requires 20 words of local(AUTO) storage.

    No errors detected in file VXP$PAR.:E05TSI    .
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:39   
          MINI XREF LISTING

AGAIN
     11578**LABEL   11597--GOTO
ALL_SIZE
     11421**DCL     11567<<ASSIGN  11568>>ASSIGN  11570>>IF      11572>>ASSIGN  11574<>CALL    11578>>ASSIGN
     11580>>ASSIGN  11596<<ASSIGN  11596>>ASSIGN
B$JIT.CCARS
     10840**DCL     11547>>ASSIGN
B$JIT.CCBUF
     10840**DCL     11546>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
     10846**DCL     10846--REDEF
B$JIT.ERR.MID
     10753**DCL     10753--REDEF
B$JIT.JRESPEAK
     10914**DCL     10915--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
     11023**DCL     11023--REDEF   11024--REDEF
B$JIT.PNR
     10927**DCL     10927--REDEF
B$JIT.TSLINE
     11021**DCL     11022--REDEF
B$JIT$
      8922**DCL     10747--IMP-PTR 11546>>ASSIGN  11547>>ASSIGN
C$CHAR
     11443**DCL     11546<<ASSIGN  11550>>CALLBLT 11552<>CALL    11555<>CALL    11651<>CALL
CHAR$STR
     11444**DCL     11621>>ASSIGN  11623>>ASSIGN
CHAR_COUNT
     11423**DCL     11444--IMP-SIZ 11533<<ASSIGN  11547<<ASSIGN  11548>>ASSIGN  11552<>CALL    11555<>CALL
     11561>>ASSIGN  11566>>ASSIGN  11567>>ASSIGN  11621>>ASSIGN  11622>>ASSIGN  11623>>ASSIGN  11639<<ASSIGN
     11641>>IF      11652<<ASSIGN  11652>>ASSIGN  11653>>ASSIGN
CPOS
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:40   
     11422**DCL     11560<<ASSIGN  11602>>ASSIGN  11603>>IF      11638<<ASSIGN  11639>>ASSIGN  11640>>ASSIGN
DCB_TYPE
     11425**DCL     11528<<ASSIGN  11530>>IF      11544>>DOCASE  11552<>CALL    11555<>CALL    11599>>IF
     11603>>IF      11651<>CALL
DUMMY$
     11398**DCL     11591<<ASSIGN  11594<>CALL    11644<<ASSIGN  11647<>CALL
GSIZE
     11419**DCL     11531<<ASSIGN  11536<<ASSIGN  11538>>IF      11540>>ASSIGN  11542<>CALL    11581<>CALL
     11641>>IF      11649<<ASSIGN  11649>>ASSIGN
J
     11416**DCL     11601<<ASSIGN  11602>>ASSIGN  11603>>IF      11619>>ASSIGN  11620>>ASSIGN  11622>>ASSIGN
     11623>>ASSIGN
K
     11417**DCL     11602<<ASSIGN  11603>>IF      11608>>ASSIGN  11619<<ASSIGN  11620>>ASSIGN  11621>>ASSIGN
NCHARS
     11331**DCL        18--PROC    11533>>ASSIGN
NEXT$
     11395**DCL     11558<<ASSIGN  11640<<ASSIGN  11651>>CALL
PARSE$PARAM.CHARPOS
     11503**DCL     11638>>ASSIGN
PARSE$PARAM.RETRY
     11481**DCL     11654<<ASSIGN
PARSE$PARAM.TYPE
     11466**DCL     11637>>IF
PARSE_ERR
     11586**LABEL   11579--CALLALT
PARSE_PARAM$
     11397**DCL     11465--IMP-PTR 11636<<ASSIGN  11637>>IF      11638>>ASSIGN  11654>>ASSIGN
PWKSZ
     11424**DCL     11568<<ASSIGN  11588<<ASSIGN  11588>>ASSIGN  11588>>ASSIGN  11590>>IF      11592>>ASSIGN
     11594<>CALL    11596>>ASSIGN
READ_FILE_NAME
     11555**LABEL   11628--GOTO
SEV
     11418**DCL     11529<<ASSIGN  11556<<ASSIGN  11610<>CALL    11625<>CALL
SIZE
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:41   
     11420**DCL     11561<<ASSIGN  11651<>CALL    11652>>ASSIGN
START$
     11396**DCL     11444--IMP-PTR 11532<<ASSIGN  11539<<ASSIGN  11542<>CALL    11546>>ASSIGN  11550>>CALLBLT
     11552>>CALL    11555>>CALL    11558>>ASSIGN  11565>>ASSIGN  11621>>ASSIGN  11623>>ASSIGN  11640>>ASSIGN
SYN_ROOT$
     11329**DCL        18--PROC    11563>>ASSIGN
TEXT$
     11330**DCL        18--PROC    11532>>ASSIGN
TYPE
     11328**DCL        18--PROC    11528>>ASSIGN  11634--ENTRY   11636--ASSIGN
VXA$GET
     11359**DCL-ENT 11542--CALL    11574--CALL    11594--CALL    11647--CALL
VXE$ERRMSG
     11353**DCL-ENT 11630--CALL
VXE$ERROR
     11350**DCL-ENT 11610--CALL    11625--CALL
VXF$FREE
     11360**DCL-ENT 11581--CALL
VXP$PAR_U
     11634**ENTRY   11564--ASSIGN
VXR$READ
     11354**DCL-ENT 11552--CALL    11555--CALL    11651--CALL
VXW$WRITE_DO
     11356**DCL-ENT 11600--CALL
VX_BIAS.A
      9588**DCL      9589--REDEF
VX_CBUF.CHARS_A
      9522**DCL      9523--REDEF
VX_CONST_DCB.ACTPOS
     10704**DCL     10704--REDEF
VX_CONST_DCB.ARS#
     10663**DCL     10663--REDEF
VX_CONST_DCB.ATTR#
     10693**DCL     10693--REDEF   10695--REDEF
VX_CONST_DCB.BORROW
     10715**DCL     10715--REDEF   10715--REDEF   10715--REDEF
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:42   
VX_CONST_DCB.EOMCHAR#
     10670**DCL     10671--REDEF
VX_CONST_DCB.FLDID
     10707**DCL     10708--REDEF
VX_CONST_DCB.FORM$
     10699**DCL     10699--REDEF
VX_CONST_DCB.FSECT
     10722**DCL     10722--REDEF
VX_CONST_DCB.FSN#
     10689**DCL     10689--REDEF   10689--REDEF   10690--REDEF
VX_CONST_DCB.HEADER$
     10698**DCL     10699--REDEF
VX_CONST_DCB.IXTNSIZE#
     10695**DCL     10696--REDEF
VX_CONST_DCB.LASTSTA$
     10679**DCL     10679--REDEF
VX_CONST_DCB.LVL
     10716**DCL     10716--REDEF
VX_CONST_DCB.NAME#.C
     10679**DCL     10680--REDEF
VX_CONST_DCB.NOEOF
     10711**DCL     10711--REDEF
VX_CONST_DCB.NRECS#
     10696**DCL     10696--REDEF
VX_CONST_DCB.NRECX
     10723**DCL     10723--REDEF
VX_CONST_DCB.OHDR
     10712**DCL     10712--REDEF
VX_CONST_DCB.ORG#
     10687**DCL     10688--REDEF
VX_CONST_DCB.PRECNO
     10720**DCL     10720--REDEF
VX_CONST_DCB.RCSZ
     10728**DCL     10728--REDEF
VX_CONST_DCB.RES#
     10681**DCL     10681--REDEF
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:43   
VX_CONST_DCB.SETX
     10700**DCL     10700--REDEF
VX_CONST_DCB.TAB$
     10699**DCL     10699--REDEF
VX_CONST_DCB.TDA
     10719**DCL     10720--REDEF
VX_CONST_DCB.WSN#
     10681**DCL     10682--REDEF
VX_DO_ECHO
     10501**DCL     11599>>IF
VX_EBUF.CHARS_A
     10111**DCL     10112--REDEF
VX_EFIELD1.CHARS
     10120**DCL     10121--REDEF   11621<<ASSIGN
VX_EFIELD1.COUNT
     10119**DCL     11620<<ASSIGN
VX_EFIELD2.CHARS
     10124**DCL     10125--REDEF   11623<<ASSIGN
VX_EFIELD2.COUNT
     10123**DCL     11622<<ASSIGN
VX_EFIELD3.CHARS
     10128**DCL     10129--REDEF
VX_EI_KEY_BUF.KEY
     10504**DCL     10505--REDEF
VX_ERRORS
      9565**DCL      9576--REDEF
VX_ERRORS.CONFLICT_A
      9571**DCL      9572--REDEF
VX_ERRORS.UNSAT_A
      9567**DCL      9568--REDEF
VX_FPT_ERRMSG.V.POINTER#
      8519**DCL     11608<<ASSIGN  11612<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8702**DCL      8703--REDEF
VX_IMAGE_DATA.NODE_A$
      8714**DCL      8715--REDEF
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:44   
VX_IMAGE_DATA.START_A$
      8706**DCL      8707--REDEF
VX_IMAGE_DATA.STOP_A$
      8710**DCL      8711--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8771**DCL      8772--REDEF
VX_IMAGE_DS3.NODE_A$
      8783**DCL      8784--REDEF
VX_IMAGE_DS3.START_A$
      8775**DCL      8776--REDEF
VX_IMAGE_DS3.STOP_A$
      8779**DCL      8780--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8794**DCL      8795--REDEF
VX_IMAGE_DS4.NODE_A$
      8806**DCL      8807--REDEF
VX_IMAGE_DS4.START_A$
      8798**DCL      8799--REDEF
VX_IMAGE_DS4.STOP_A$
      8802**DCL      8803--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8817**DCL      8818--REDEF
VX_IMAGE_DS5.NODE_A$
      8829**DCL      8830--REDEF
VX_IMAGE_DS5.START_A$
      8821**DCL      8822--REDEF
VX_IMAGE_DS5.STOP_A$
      8825**DCL      8826--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8840**DCL      8841--REDEF
VX_IMAGE_DS6.NODE_A$
      8852**DCL      8853--REDEF
VX_IMAGE_DS6.START_A$
      8844**DCL      8845--REDEF
VX_IMAGE_DS6.STOP_A$
      8848**DCL      8849--REDEF
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:45   
VX_IMAGE_DS7.CPAGE#_A
      8863**DCL      8864--REDEF
VX_IMAGE_DS7.NODE_A$
      8875**DCL      8876--REDEF
VX_IMAGE_DS7.START_A$
      8867**DCL      8868--REDEF
VX_IMAGE_DS7.STOP_A$
      8871**DCL      8872--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8886**DCL      8887--REDEF
VX_IMAGE_DS8.NODE_A$
      8898**DCL      8899--REDEF
VX_IMAGE_DS8.START_A$
      8890**DCL      8891--REDEF
VX_IMAGE_DS8.STOP_A$
      8894**DCL      8895--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8725**DCL      8726--REDEF
VX_IMAGE_PROC.NODE_A$
      8737**DCL      8738--REDEF
VX_IMAGE_PROC.START_A$
      8729**DCL      8730--REDEF
VX_IMAGE_PROC.STOP_A$
      8733**DCL      8734--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8748**DCL      8749--REDEF
VX_IMAGE_ROS.NODE_A$
      8760**DCL      8761--REDEF
VX_IMAGE_ROS.START_A$
      8752**DCL      8753--REDEF
VX_IMAGE_ROS.STOP_A$
      8756**DCL      8757--REDEF
VX_LAST_LINE.OFFSET
     10510**DCL     11549<<ASSIGN  11602>>ASSIGN
VX_LAST_LINE.SIZE
     10509**DCL     11548<<ASSIGN  11600<>CALL
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:46   
VX_LAST_LINE.TEXT
     10511**DCL     11550<<CALLBLT 11600<>CALL
VX_M_ALL
      9599**DCL     11538>>IF      11570>>IF      11590>>IF      11643>>IF
VX_M_BASE_PTR
      9601**DCL     11539>>ASSIGN  11571>>ASSIGN  11591>>ASSIGN  11644>>ASSIGN
VX_M_FREE
      9597**DCL     11538>>IF      11539>>ASSIGN  11540<<ASSIGN  11540>>ASSIGN  11570>>IF      11571>>ASSIGN
     11572<<ASSIGN  11572>>ASSIGN  11590>>IF      11591>>ASSIGN  11592<<ASSIGN  11592>>ASSIGN  11643>>IF
     11644>>ASSIGN  11645<<ASSIGN  11645>>ASSIGN
VX_M_VECTOR.F
      8553**DCL      8557--REDEF
VX_M_VECTOR_DP.F
      8588**DCL      8592--REDEF
VX_O.ACCTN_A$
      9717**DCL      9718--REDEF
VX_O.DCB_MATCH_A$
      9726**DCL      9727--REDEF
VX_O.DCB_MATCH_HIT_A
      9732**DCL      9733--REDEF
VX_O.FIDN_A$
      9711**DCL      9712--REDEF
VX_O.FID_A$
      9703**DCL      9704--REDEF
VX_O.INCLUDE_A$
      9723**DCL      9724--REDEF
VX_O.MAP_A
      9697**DCL      9698--REDEF
VX_O.NODCB_A
      9754**DCL      9755--REDEF
VX_O.NUM_A
      9642**DCL      9644--REDEF
VX_O.OPT_A
      9742**DCL      9743--REDEF
VX_O.PRIV_A
      9658**DCL      9660--REDEF
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:47   
VX_O.SIN_A
      9611**DCL      9612--REDEF
VX_O.TCB_A
      9738**DCL      9739--REDEF
VX_OD.ACCTN_A$
      9915**DCL      9916--REDEF
VX_OD.DCB_MATCH_A$
      9924**DCL      9925--REDEF
VX_OD.FIDN_A$
      9909**DCL      9910--REDEF
VX_OD.FID_A$
      9901**DCL      9902--REDEF
VX_OD.INCLUDE_A$
      9921**DCL      9922--REDEF
VX_OD.MAP_A
      9895**DCL      9896--REDEF
VX_OD.NODCB_A
      9939**DCL      9940--REDEF
VX_OD.NUM_A
      9842**DCL      9843--REDEF
VX_OD.PRIV_A
      9857**DCL      9858--REDEF
VX_OD.SIN_A
      9811**DCL      9812--REDEF
VX_OD.VECTOR_A$
      9930**DCL      9931--REDEF
VX_OL.MAX_A
      9786**DCL      9788--REDEF
VX_OL.MIN_A
      9771**DCL      9772--REDEF
VX_ON.ACCTN_A$
     10060**DCL     10062--REDEF
VX_ON.DCB_MATCH_A$
     10071**DCL     10073--REDEF
VX_ON.FIDN_A$
     10053**DCL     10055--REDEF
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:48   
VX_ON.FID_A$
     10044**DCL     10046--REDEF
VX_ON.INCLUDE_A$
     10067**DCL     10069--REDEF
VX_ON.MAP_A
     10037**DCL     10039--REDEF
VX_ON.NODCB_A$
     10087**DCL     10088--REDEF
VX_ON.NUM_A
      9982**DCL      9984--REDEF
VX_ON.PRIV_A
      9998**DCL     10000--REDEF
VX_ON.SIN_A
      9950**DCL      9952--REDEF
VX_ON.VECTOR_A$
     10078**DCL     10079--REDEF
VX_OUHEAD.VERSION
      9397**DCL      9399--REDEF
VX_OU_HEAD
      9340**DCL      9379--REDEF
VX_OU_HEAD.REC_A
      9352**DCL      9355--REDEF
VX_O_KEY_BUF.FORM0
      8601**DCL      8604--REDEF    8611--REDEF
VX_O_KEY_BUF_L.FORM0
      8624**DCL      8627--REDEF    8634--REDEF
VX_PASS2_REF.OU.L_START
     10290**DCL     10295--REDEF
VX_PASS2_REF.OU.L_STOP
     10296**DCL     10301--REDEF
VX_PASS2_REF.OU.MAX
     10284**DCL     10289--REDEF
VX_PASS2_REF.OU.SIZE
     10302**DCL     10307--REDEF
VX_PASS2_REF.SAT.COUNT
     10329**DCL     10335--REDEF
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:49   
VX_PASS2_REF.SAT.ENT_SIZE
     10336**DCL     10342--REDEF
VX_PASS2_REF.SAT.L_START
     10315**DCL     10321--REDEF
VX_PASS2_REF.SAT.L_STOP
     10322**DCL     10328--REDEF
VX_PASS2_REF.SAT.MAX
     10309**DCL     10314--REDEF
VX_PASS2_REF.UNSAT.L_START
     10377**DCL     10382--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10383**DCL     10388--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10389**DCL     10394--REDEF
VX_PASS2_REF.UNSAT.MAX
     10371**DCL     10376--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10401**DCL     10406--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10395**DCL     10400--REDEF
VX_PHRASE.PHRASE
      9803**DCL      9805--REDEF
VX_PROGRAM_BIAS.A
      9581**DCL      9582--REDEF
VX_P_PCB_MAIN
      8315**DCL     11579<>CALL
VX_P_PCB_MAIN.ERROR
      8419**DCL     11630<>CALL
VX_P_PCB_MAIN.ERROR.CODE
      8427**DCL     11586>>DOCASE
VX_P_PCB_MAIN.HI_CHAR
      8466**DCL     11601>>ASSIGN
VX_P_PCB_MAIN.NCHARS
      8462**DCL     11566<<ASSIGN  11653<<ASSIGN
VX_P_PCB_MAIN.ROOT$
      8320**DCL     11563<<ASSIGN
PL6.E3A0      #001=VXP$PAR File=VXP$PAR.:E05TSI                                  WED 07/30/97 08:32 Page:50   
VX_P_PCB_MAIN.TEXT$
      8316**DCL     11565<<ASSIGN
VX_P_PCB_MAIN.U$$
      8333**DCL     11564<<ASSIGN
VX_P_PCB_MAIN.WKSZ
      8345**DCL     11578<<ASSIGN
VX_P_PCB_MAIN.WORK$
      8324**DCL     11576<<ASSIGN
VX_R_KEY_BUF.FORM0
      8650**DCL      8654--REDEF    8660--REDEF
VX_SD.A
      8278**DCL      8279--REDEF
VX_SPC.B$.MINE
     10472**DCL     10478--REDEF
VX_SPC.B$.NAME
     10451**DCL     10457--REDEF
VX_SPC.B$.SKIP
     10465**DCL     10471--REDEF
VX_SPC.B$.VALUE
     10458**DCL     10464--REDEF
VX_SPC.SEG.NAME
     10420**DCL     10426--REDEF
VX_SPC.SEG.VALUE
     10427**DCL     10433--REDEF
VX_TSX0_OVERLAY.H
     10195**DCL     10198--REDEF
WKSZ
     11332**DCL        18--PROC    11536>>ASSIGN  11580<<ASSIGN
WORK$
     11394**DCL     11571<<ASSIGN  11574<>CALL    11576>>ASSIGN
X$PARSE
     11372**DCL-ENT 11579--CALL
