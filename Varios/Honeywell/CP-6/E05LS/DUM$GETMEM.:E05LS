VERSION E05

PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:1    
        1        1        /*M* DUM$GETMEM Gets memory for User Delta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DUM$GETMEM
        9        9             PURPOSE: To get memory from the specified Dynamic Data Segment.
       10       10             DESCRIPTION: Obtains the requested number of words of memory from
       11       11                          the specified Dynamic Data Segment. RETURNs if requested
       12       12                          memory was obtained successfully, else ALTRETURNs. */
       13       13        /*D* NAME: DUM$GETMEM
       14       14             ENTRY: DDM$GETMEM
       15       15             CALL: CALL DDM$GETMEM( SEGID, SIZE ) ALTRET( no-memory );
       16       16             INTERFACE: M$GDS
       17       17                        DUE$ERRMSG
       18       18             ENVIRONMENT: User Delta
       19       19             INPUT: SEGID - Which Dynamic Data Segment to obtain memory from.
       20       20                            May be a PL-6 PTR, or UBIN WORD.
       21       21                    SIZE - Number of words of memory to obtain.
       22       22             OUTPUT:
       23       23             SCRATCH: Local AUTO only.
       24       24             DESCRIPTION: Obtains the requested number of words of memory from
       25       25                          the specified Dynamic Data Segment. RETURNs if requested
       26       26                          memory was obtained successfully, else ALTRETURNs. */
       27       27                                                /**/
       28       28        DDM$GETMEM: PROC( SEGID, SIZE, DSIZE ) ALTRET;
       29       29                                                /**/
       30       30        %INCLUDE CP_6;
       31      111                                                /**/
       32      112    1   DCL SEGID UBIN;
       33      113    1   DCL 1 SEG REDEF SEGID,
       34      114    1         2 * BIT(24) UNAL,
       35      115    1         2 ID BIT(12) UNAL;
       36      116    1   DCL SIZE UBIN;
       37      117    1   DCL DSIZE UBIN;
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:2    
       38      118    1   DCL FIRST_TIME BIT(1);
       39      119        %FPT_GDS (FPTN=FPTGDS,
       40      120                  STCLASS=);
       41      136        %FPT_FDS (FPTN=FPTFDS,
       42      137                  STCLASS=);
       43      152        %VLP_VECTOR (FPTN=VLPVECTOR,
       44      153                     STCLASS=);
       45      168                                                /**/
       46      169        %FPT_GDS (FPTN=FPT_GDS,
       47      170                  STCLASS=CONSTANT,
       48      171                  FREE=YES);
       49      187        %FPT_FDS (FPTN=FPT_FDS,
       50      188                  STCLASS=CONSTANT);
       51      203        %VLP_VECTOR (FPTN=VLP_VECTOR,
       52      204                     STCLASS=CONSTANT);
       53      219    1   DCL DUE$ERRMSG ENTRY(0);                /* Reports JIT.ERR */
       54      220                                                /**/
       55      221    1        FIRST_TIME = '0'B;
       56      222    1        GOTO L1;
       57      223
       58      224    1   DDM$GETMEM1: ENTRY(SEGID, SIZE, DSIZE) ALTRET;
       59      225
       60      226    1        FIRST_TIME = '1'B;
       61      227
       62      228    1   L1:  ;
       63      229    1        VLPVECTOR = VLP_VECTOR;
       64      230    1        VLPVECTOR.W2.SEGID# = SEG.ID;
       65      231    1        FPTGDS = FPT_GDS;
       66      232    1        FPTGDS.V_ = VECTOR( FPTGDS.V );
       67      233    1        FPTGDS.RESULTS_ = VECTOR( VLPVECTOR );
       68      234    1        FPTGDS.V.SEGSIZE# = SIZE;
       69      235    1        CALL M$GDS( FPTGDS ) ALTRET( ARETG );
       70      236                                                /**/
       71      237    1        IF ADDR(DSIZE) ~= ADDR(NIL)
       72      238    1        THEN DSIZE = VLPVECTOR.W1.VSIZE#/4;
       73      239                                                /**/
       74      240    1        RETURN;
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:3    
       75      241                                                /**/
       76      242    1   ARETG: ;
       77      243        /*N* Release memory obtained? */
       78      244    1   ARETF:
       79      245    1        IF NOT FIRST_TIME
       80      246    1        THEN CALL DUE$ERRMSG;
       81      247    1        ALTRETURN;
       82      248        %EJECT;
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:4    
       83      249        /*D* NAME: DUM$PUTMEM
       84      250             ENTRY: DDM$PUTMEM
       85      251             CALL: CALL DDM$PUTMEM( SEGID, SIZE ) ALTRET( error );
       86      252             INTERFACE: M$FDS
       87      253                        DUE$ERRMSG
       88      254             ENVIRONMENT: User Delta
       89      255             INPUT: SEGID - Which Dynamic Data Segment to release memory from.
       90      256                            May be a PL-6 PTR, or UBIN WORD.
       91      257                    SIZE - Number of words of memory to release.
       92      258             OUTPUT:
       93      259             SCRATCH: Local AUTO only.
       94      260             DESCRIPTION: Releases the requested number of words of memory from
       95      261                          the specified Dynamic Data Segment. RETURNs if requested
       96      262                          memory was released successfully, else ALTRETURNs. */
       97      263                                                /**/
       98      264    1   DDM$PUTMEM: ENTRY( SEGID, SIZE, DSIZE ) ALTRET;
       99      265                                                /**/
      100      266    1        FIRST_TIME = '0'B;
      101      267    1        VLPVECTOR = VLP_VECTOR;
      102      268    1        VLPVECTOR.W2.SEGID# = SEG.ID;
      103      269    1        FPTFDS = FPT_FDS;
      104      270    1        FPTFDS.V_ = VECTOR( FPTFDS.V );
      105      271    1        FPTFDS.RESULTS_ = VECTOR( VLPVECTOR );
      106      272    1        FPTFDS.V.SEGSIZE# = SIZE;
      107      273    1        CALL M$FDS( FPTFDS ) ALTRET( ARETF );
      108      274                                                /**/
      109      275    1        RETURN;
      110      276                                                /**/
      111      277    1   END DDM$GETMEM;

PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:5    
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDM$GETMEM.

   Procedure DDM$GETMEM requires 77 words for executable code.
   Procedure DDM$GETMEM requires 24 words of local(AUTO) storage.

    No errors detected in file DUM$GETMEM.:E05TSI    .

PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:6    

 Object Unit name= DDM$GETMEM                                 File name= DUM$GETMEM.:E05TOU
 UTS= JUL 29 '97 14:56:42.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     14     16  DDM$GETMEM
    2   Proc  even  none    77    115  DDM$GETMEM
    3  RoData even  none     1      1  DDM$GETMEM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        3  DDM$GETMEM
     2      4          yes     yes      Std        3  DDM$GETMEM1
     2     60          yes     yes      Std        3  DDM$PUTMEM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DUE$ERRMSG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:8    


        1        1        /*M* DUM$GETMEM Gets memory for User Delta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DUM$GETMEM
        9        9             PURPOSE: To get memory from the specified Dynamic Data Segment.
       10       10             DESCRIPTION: Obtains the requested number of words of memory from
       11       11                          the specified Dynamic Data Segment. RETURNs if requested
       12       12                          memory was obtained successfully, else ALTRETURNs. */
       13       13        /*D* NAME: DUM$GETMEM
       14       14             ENTRY: DDM$GETMEM
       15       15             CALL: CALL DDM$GETMEM( SEGID, SIZE ) ALTRET( no-memory );
       16       16             INTERFACE: M$GDS
       17       17                        DUE$ERRMSG
       18       18             ENVIRONMENT: User Delta
       19       19             INPUT: SEGID - Which Dynamic Data Segment to obtain memory from.
       20       20                            May be a PL-6 PTR, or UBIN WORD.
       21       21                    SIZE - Number of words of memory to obtain.
       22       22             OUTPUT:
       23       23             SCRATCH: Local AUTO only.
       24       24             DESCRIPTION: Obtains the requested number of words of memory from
       25       25                          the specified Dynamic Data Segment. RETURNs if requested
       26       26                          memory was obtained successfully, else ALTRETURNs. */
       27       27                                                /**/
       28       28        DDM$GETMEM: PROC( SEGID, SIZE, DSIZE ) ALTRET;

     28  2 000000   000000 700200 xent  DDM$GETMEM   TSX0  ! X66_AUTO_3
         2 000001   000030 000003                    ZERO    24,3

       29       29                                                /**/
       30       30        %INCLUDE CP_6;
       31      111                                                /**/
       32      112    1   DCL SEGID UBIN;
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:9    
       33      113    1   DCL 1 SEG REDEF SEGID,
       34      114    1         2 * BIT(24) UNAL,
       35      115    1         2 ID BIT(12) UNAL;
       36      116    1   DCL SIZE UBIN;
       37      117    1   DCL DSIZE UBIN;
       38      118    1   DCL FIRST_TIME BIT(1);
       39      119        %FPT_GDS (FPTN=FPTGDS,
       40      120                  STCLASS=);
       41      136        %FPT_FDS (FPTN=FPTFDS,
       42      137                  STCLASS=);
       43      152        %VLP_VECTOR (FPTN=VLPVECTOR,
       44      153                     STCLASS=);
       45      168                                                /**/
       46      169        %FPT_GDS (FPTN=FPT_GDS,
       47      170                  STCLASS=CONSTANT,
       48      171                  FREE=YES);
       49      187        %FPT_FDS (FPTN=FPT_FDS,
       50      188                  STCLASS=CONSTANT);
       51      203        %VLP_VECTOR (FPTN=VLP_VECTOR,
       52      204                     STCLASS=CONSTANT);
       53      219    1   DCL DUE$ERRMSG ENTRY(0);                /* Reports JIT.ERR */
       54      220                                                /**/
       55      221    1        FIRST_TIME = '0'B;

    221  2 000002   200006 450100                    STZ     FIRST_TIME,,AUTO

       56      222    1        GOTO L1;

    222  2 000003   000010 710000 2                  TRA     L1

       57      223
       58      224    1   DDM$GETMEM1: ENTRY(SEGID, SIZE, DSIZE) ALTRET;

    224  2 000004   000000 700200 xent  DDM$GETMEM1  TSX0  ! X66_AUTO_3
         2 000005   000030 000003                    ZERO    24,3

       59      225
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:10   
       60      226    1        FIRST_TIME = '1'B;

    226  2 000006   400000 236003                    LDQ     -131072,DU
         2 000007   200006 756100                    STQ     FIRST_TIME,,AUTO

    226  2 000010                       L1           null
       61      227
       62      228    1   L1:  ;
       63      229    1        VLPVECTOR = VLP_VECTOR;

    229  2 000010   000014 237000 1                  LDAQ    VLP_VECTOR
         2 000011   200024 757100                    STAQ    VLPVECTOR,,AUTO

       64      230    1        VLPVECTOR.W2.SEGID# = SEG.ID;

    230  2 000012   200003 470500                    LDP0    @SEGID,,AUTO
         2 000013   000000 236100                    LDQ     0,,PR0
         2 000014   200025 752103                    STCQ    VLPVECTOR+1,'03'O,AUTO

       65      231    1        FPTGDS = FPT_GDS;

    231  2 000015   000100 100400                    MLR     fill='000'O
         2 000016   000000 000030 1                  ADSC9   FPT_GDS                  cn=0,n=24
         2 000017   200010 000030                    ADSC9   FPTGDS,,AUTO             cn=0,n=24

       66      232    1        FPTGDS.V_ = VECTOR( FPTGDS.V );

    232  2 000020   000000 235000 3                  LDA     0
         2 000021   200026 452500                    STP2    VLPVECTOR+2,,AUTO
         2 000022   200026 236100                    LDQ     VLPVECTOR+2,,AUTO
         2 000023   000014 036003                    ADLQ    12,DU
         2 000024   200010 757100                    STAQ    FPTGDS,,AUTO

       67      233    1        FPTGDS.RESULTS_ = VECTOR( VLPVECTOR );

    233  2 000025   000000 235000 3                  LDA     0
         2 000026   200026 452500                    STP2    VLPVECTOR+2,,AUTO
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:11   
         2 000027   200026 236100                    LDQ     VLPVECTOR+2,,AUTO
         2 000030   000024 036003                    ADLQ    20,DU
         2 000031   200012 757100                    STAQ    FPTGDS+2,,AUTO

       68      234    1        FPTGDS.V.SEGSIZE# = SIZE;

    234  2 000032   200004 471500                    LDP1    @SIZE,,AUTO
         2 000033   100000 720100                    LXL0    0,,PR1
         2 000034   200014 440100                    SXL0    FPTGDS+4,,AUTO

       69      235    1        CALL M$GDS( FPTGDS ) ALTRET( ARETG );

    235  2 000035   200010 630500                    EPPR0   FPTGDS,,AUTO
         2 000036   430001 713400                    CLIMB   alt,gds
         2 000037   400400 401760                    pmme    nvectors=2
         2 000040   000052 702000 2                  TSX2    ARETG

       70      236                                                /**/
       71      237    1        IF ADDR(DSIZE) ~= ADDR(NIL)

    237  2 000041   200005 236100                    LDQ     @DSIZE,,AUTO
         2 000042   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000043   000051 600000 2                  TZE     s:240

       72      238    1        THEN DSIZE = VLPVECTOR.W1.VSIZE#/4;

    238  2 000044   200024 236100                    LDQ     VLPVECTOR,,AUTO
         2 000045   000020 772000                    QRL     16
         2 000046   000002 772000                    QRL     2
         2 000047   200005 470500                    LDP0    @DSIZE,,AUTO
         2 000050   000000 756100                    STQ     0,,PR0

       73      239                                                /**/
       74      240    1        RETURN;

    240  2 000051   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:12   
    237  2 000052                       ARETG        null
       75      241                                                /**/
       76      242    1   ARETG: ;
       77      243        /*N* Release memory obtained? */
       78      244    1   ARETF:
       79      245    1        IF NOT FIRST_TIME

    245  2 000052   200006 234100       ARETF        SZN     FIRST_TIME,,AUTO
         2 000053   000057 604000 2                  TMI     s:247

       80      246    1        THEN CALL DUE$ERRMSG;

    246  2 000054   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000055   000000 701000 xent               TSX1    DUE$ERRMSG
         2 000056   000000 011000                    NOP     0

       81      247    1        ALTRETURN;

    247  2 000057   000000 702200 xent               TSX2  ! X66_AALT

       82      248        %EJECT;
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:13   
       83      249        /*D* NAME: DUM$PUTMEM
       84      250             ENTRY: DDM$PUTMEM
       85      251             CALL: CALL DDM$PUTMEM( SEGID, SIZE ) ALTRET( error );
       86      252             INTERFACE: M$FDS
       87      253                        DUE$ERRMSG
       88      254             ENVIRONMENT: User Delta
       89      255             INPUT: SEGID - Which Dynamic Data Segment to release memory from.
       90      256                            May be a PL-6 PTR, or UBIN WORD.
       91      257                    SIZE - Number of words of memory to release.
       92      258             OUTPUT:
       93      259             SCRATCH: Local AUTO only.
       94      260             DESCRIPTION: Releases the requested number of words of memory from
       95      261                          the specified Dynamic Data Segment. RETURNs if requested
       96      262                          memory was released successfully, else ALTRETURNs. */
       97      263                                                /**/
       98      264    1   DDM$PUTMEM: ENTRY( SEGID, SIZE, DSIZE ) ALTRET;

    264  2 000060   000000 700200 xent  DDM$PUTMEM   TSX0  ! X66_AUTO_3
         2 000061   000030 000003                    ZERO    24,3

       99      265                                                /**/
      100      266    1        FIRST_TIME = '0'B;

    266  2 000062   200006 450100                    STZ     FIRST_TIME,,AUTO

      101      267    1        VLPVECTOR = VLP_VECTOR;

    267  2 000063   000014 237000 1                  LDAQ    VLP_VECTOR
         2 000064   200024 757100                    STAQ    VLPVECTOR,,AUTO

      102      268    1        VLPVECTOR.W2.SEGID# = SEG.ID;

    268  2 000065   200003 470500                    LDP0    @SEGID,,AUTO
         2 000066   000000 236100                    LDQ     0,,PR0
         2 000067   200025 752103                    STCQ    VLPVECTOR+1,'03'O,AUTO

      103      269    1        FPTFDS = FPT_FDS;
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:14   

    269  2 000070   000100 100400                    MLR     fill='000'O
         2 000071   000006 000030 1                  ADSC9   FPT_FDS                  cn=0,n=24
         2 000072   200016 000030                    ADSC9   FPTFDS,,AUTO             cn=0,n=24

      104      270    1        FPTFDS.V_ = VECTOR( FPTFDS.V );

    270  2 000073   000000 235000 3                  LDA     0
         2 000074   200026 452500                    STP2    VLPVECTOR+2,,AUTO
         2 000075   200026 236100                    LDQ     VLPVECTOR+2,,AUTO
         2 000076   000022 036003                    ADLQ    18,DU
         2 000077   200016 757100                    STAQ    FPTFDS,,AUTO

      105      271    1        FPTFDS.RESULTS_ = VECTOR( VLPVECTOR );

    271  2 000100   000000 235000 3                  LDA     0
         2 000101   200026 452500                    STP2    VLPVECTOR+2,,AUTO
         2 000102   200026 236100                    LDQ     VLPVECTOR+2,,AUTO
         2 000103   000024 036003                    ADLQ    20,DU
         2 000104   200020 757100                    STAQ    FPTFDS+2,,AUTO

      106      272    1        FPTFDS.V.SEGSIZE# = SIZE;

    272  2 000105   200004 471500                    LDP1    @SIZE,,AUTO
         2 000106   100000 720100                    LXL0    0,,PR1
         2 000107   200022 440100                    SXL0    FPTFDS+4,,AUTO

      107      273    1        CALL M$FDS( FPTFDS ) ALTRET( ARETF );

    273  2 000110   200016 630500                    EPPR0   FPTFDS,,AUTO
         2 000111   430002 713400                    CLIMB   alt,fds
         2 000112   400400 401760                    pmme    nvectors=2
         2 000113   000052 702000 2                  TSX2    ARETG

      108      274                                                /**/
      109      275    1        RETURN;

PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:15   
    275  2 000114   000000 702200 xent               TSX2  ! X66_ARET

FPT_GDS
 Sect OctLoc
   1     000   000001 777640   000004 006000   000000 177640   000000 006014    ................
   1     004   100600 000000   ****** ******                                    @.......

FPT_FDS
 Sect OctLoc
   1     006   000001 777640   000012 006000   000000 177640   000000 006014    ................
   1     012   000000 000000   ****** ******                                    ........

VLP_VECTOR
 Sect OctLoc
   1     014   000000 177640   000000 006014                                    ........

(unnamed)
 Sect OctLoc
   3     000   000001 777640                                                    ....
      110      276                                                /**/
      111      277    1   END DDM$GETMEM;

PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:16   
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDM$GETMEM.

   Procedure DDM$GETMEM requires 77 words for executable code.
   Procedure DDM$GETMEM requires 24 words of local(AUTO) storage.

    No errors detected in file DUM$GETMEM.:E05TSI    .
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:18   
          MINI XREF LISTING

ARETF
       245**LABEL     273--CALLALT
ARETG
       237**LABEL     235--CALLALT
DSIZE
       117**DCL        28--PROC      224--ENTRY     237--IF        238<<ASSIGN    264--ENTRY
DUE$ERRMSG
       219**DCL-ENT   246--CALL
FIRST_TIME
       118**DCL       221<<ASSIGN    226<<ASSIGN    245>>IF        266<<ASSIGN
FPTFDS
       148**DCL       269<<ASSIGN    273<>CALL
FPTFDS.RESULTS_
       148**DCL       271<<ASSIGN
FPTFDS.V
       148**DCL       270--ASSIGN
FPTFDS.V.SEGSIZE#
       150**DCL       272<<ASSIGN
FPTFDS.V_
       148**DCL       270<<ASSIGN
FPTGDS
       131**DCL       231<<ASSIGN    235<>CALL
FPTGDS.RESULTS_
       131**DCL       233<<ASSIGN
FPTGDS.V
       131**DCL       232--ASSIGN
FPTGDS.V.SEGSIZE#
       134**DCL       234<<ASSIGN
FPTGDS.V_
       131**DCL       232<<ASSIGN
FPT_FDS
       199**DCL       269>>ASSIGN
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:19   
FPT_FDS.V
       199**DCL       199--DCLINIT
FPT_GDS
       182**DCL       231>>ASSIGN
FPT_GDS.V
       182**DCL       182--DCLINIT
L1
       226**LABEL     222--GOTO
M$FDS
        74**DCL-ENT   273--CALL
M$GDS
        74**DCL-ENT   235--CALL
SEG.ID
       115**DCL       230>>ASSIGN    268>>ASSIGN
SEGID
       112**DCL        28--PROC      113--REDEF     224--ENTRY     264--ENTRY
SIZE
       116**DCL        28--PROC      224--ENTRY     234>>ASSIGN    264--ENTRY     272>>ASSIGN
VLPVECTOR
       164**DCL       229<<ASSIGN    233--ASSIGN    267<<ASSIGN    271--ASSIGN
VLPVECTOR.W1.VSIZE#
       164**DCL       238>>ASSIGN
VLPVECTOR.W2
       165**DCL       166--REDEF
VLPVECTOR.W2.SEGID#
       166**DCL       230<<ASSIGN    268<<ASSIGN
VLP_VECTOR
       215**DCL       229>>ASSIGN    267>>ASSIGN
VLP_VECTOR.W2
       216**DCL       217--REDEF
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:20   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:21   
              MINI UREF LISTING

DDM$GETMEM      28**PROC
DDM$GETMEM1     224**ENTRY
DDM$PUTMEM     264**ENTRY
M$ACCT      56**DCL-ENT
M$ACTIVATE      59**DCL-ENT
M$ALIB      52**DCL-ENT
M$ASUSER      54**DCL-ENT
M$ATTACH      61**DCL-ENT
M$BADPP      79**DCL-ENT
M$CGCTL      60**DCL-ENT
M$CGINFO      60**DCL-ENT
M$CHECK      41**DCL-ENT
M$CHGUNIT      99**DCL-ENT
M$CLOSE      39**DCL-ENT
M$CLRSTK      97**DCL-ENT
M$CMDVAR     108**DCL-ENT
M$CONFIG      69**DCL-ENT
M$CORRES      44**DCL-ENT
M$CPEXIT      53**DCL-ENT
M$CVM      77**DCL-ENT
M$CVOL      42**DCL-ENT
M$DCLFLD      69**DCL-ENT
M$DEACTIVATE      59**DCL-ENT
M$DELREC      41**DCL-ENT
M$DEQ     106**DCL-ENT
M$DETACH      61**DCL-ENT
M$DEVICE      43**DCL-ENT
M$DISPLAY     106**DCL-ENT
M$DISPRES      46**DCL-ENT
M$DLIB      52**DCL-ENT
M$DRIBBLE      69**DCL-ENT
M$DRTN      97**DCL-ENT
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:22   
M$DSUSER      54**DCL-ENT
M$ENQ     105**DCL-ENT
M$EOM      64**DCL-ENT
M$ERASE      70**DCL-ENT
M$ERR      51**DCL-ENT
M$ERRMSG     102**DCL-ENT
M$EVENT      94**DCL-ENT
M$EXHUME     103**DCL-ENT
M$EXIT      51**DCL-ENT
M$EXTEND      43**DCL-ENT
M$FDP      75**DCL-ENT
M$FEBOOT      67**DCL-ENT
M$FECTL      68**DCL-ENT
M$FEDUMP      67**DCL-ENT
M$FID     102**DCL-ENT
M$FINDPROC      56**DCL-ENT
M$FSUSER      54**DCL-ENT
M$FVP      76**DCL-ENT
M$FWCG      60**DCL-ENT
M$GBPL      80**DCL-ENT
M$GDDL      76**DCL-ENT
M$GDP      75**DCL-ENT
M$GETDCB      45**DCL-ENT
M$GETMOUSE      85**DCL-ENT
M$GETPM      86**DCL-ENT
M$GJOB     104**DCL-ENT
M$GLINEATTR      64**DCL-ENT
M$GOODPP      79**DCL-ENT
M$GPLATEN      72**DCL-ENT
M$GPROMPT      71**DCL-ENT
M$GTRMATTR      65**DCL-ENT
M$GTRMCTL      63**DCL-ENT
M$GTRMTAB      66**DCL-ENT
M$GVP      75**DCL-ENT
M$HELP     102**DCL-ENT
M$INT      94**DCL-ENT
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:23   
M$INTRTN      55**DCL-ENT
M$IOQ      90**DCL-ENT
M$JOBSTATS     104**DCL-ENT
M$KEYIN      44**DCL-ENT
M$LDEV      39**DCL-ENT
M$LDTRC      52**DCL-ENT
M$LIMIT      45**DCL-ENT
M$LINES      44**DCL-ENT
M$LINK      51**DCL-ENT
M$MADMUCK      47**DCL-ENT
M$MAKUSER      78**DCL-ENT
M$MBS      46**DCL-ENT
M$MDFFLD      70**DCL-ENT
M$MERC      95**DCL-ENT
M$MERCS      96**DCL-ENT
M$MIRROR      90**DCL-ENT
M$MONINFO     107**DCL-ENT
M$MPL      80**DCL-ENT
M$NODEINFO      71**DCL-ENT
M$NXTUSR     105**DCL-ENT
M$OCMSG     103**DCL-ENT
M$OLAY      51**DCL-ENT
M$OPEN      39**DCL-ENT
M$PAS      80**DCL-ENT
M$PATHCON     103**DCL-ENT
M$PDS      74**DCL-ENT
M$PFIL      41**DCL-ENT
M$PLATEN      65**DCL-ENT
M$PRECORD      43**DCL-ENT
M$PROCNAME      56**DCL-ENT
M$PROFILE      67**DCL-ENT
M$PROMPT      63**DCL-ENT
M$RACST      47**DCL-ENT
M$RDSYSLOG      88**DCL-ENT
M$READ      40**DCL-ENT
M$RELDCB      45**DCL-ENT
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:24   
M$RELRES      46**DCL-ENT
M$RELSTARF      48**DCL-ENT
M$REM      48**DCL-ENT
M$RENV      95**DCL-ENT
M$REQUIRE      47**DCL-ENT
M$RETRY      96**DCL-ENT
M$RETRYS      96**DCL-ENT
M$REW      42**DCL-ENT
M$RLSFLD      70**DCL-ENT
M$RPRIV      98**DCL-ENT
M$RSPP      77**DCL-ENT
M$RSWITCH      99**DCL-ENT
M$RUE     105**DCL-ENT
M$SAD      78**DCL-ENT
M$SAVE      54**DCL-ENT
M$SCON      55**DCL-ENT
M$SCREECH      53**DCL-ENT
M$SENV      95**DCL-ENT
M$SETFMA      39**DCL-ENT
M$SETFP      68**DCL-ENT
M$SINPUT      66**DCL-ENT
M$SLCFLD      71**DCL-ENT
M$SMOUSE      85**DCL-ENT
M$SMPRT      77**DCL-ENT
M$SPRIV      98**DCL-ENT
M$SSC      78**DCL-ENT
M$SSWITCH      98**DCL-ENT
M$STATE     107**DCL-ENT
M$STD      79**DCL-ENT
M$STIMER      93**DCL-ENT
M$STLPP      76**DCL-ENT
M$STRAP      93**DCL-ENT
M$STRMATTR      65**DCL-ENT
M$STRMCTL      63**DCL-ENT
M$STRMTAB      66**DCL-ENT
M$SYMBIO     104**DCL-ENT
PL6.E3A0      #001=DDM$GETMEM File=DUM$GETMEM.:E05TSI                            TUE 07/29/97 14:56 Page:25   
M$SYSCON      90**DCL-ENT
M$SYSID     108**DCL-ENT
M$TDCLOSE      89**DCL-ENT
M$TDIO      89**DCL-ENT
M$TDOPEN      88**DCL-ENT
M$TDREQCPU      89**DCL-ENT
M$TEMPWROC      83**DCL-ENT
M$TIME     106**DCL-ENT
M$TRAP      93**DCL-ENT
M$TRMISC      68**DCL-ENT
M$TRMPRG      64**DCL-ENT
M$TRTN      97**DCL-ENT
M$TRUNC      40**DCL-ENT
M$TTIMER      93**DCL-ENT
M$UC      63**DCL
M$UMPL      80**DCL-ENT
M$UNFID     102**DCL-ENT
M$UNLATCH      59**DCL-ENT
M$UNSHARE      56**DCL-ENT
M$USRFIELD      99**DCL-ENT
M$VIRTUAL      74**DCL-ENT
M$WAIT      97**DCL-ENT
M$WEOF      42**DCL-ENT
M$WRITE      40**DCL-ENT
M$WRSYSLOG      88**DCL-ENT
M$XCON      94**DCL-ENT
M$XCONRTN      55**DCL-ENT
M$XEQTIME     107**DCL-ENT
M$XFLUSH      48**DCL-ENT
M$XMOUSE      85**DCL-ENT
M$XXX      51**DCL-ENT
M$YC      53**DCL-ENT
