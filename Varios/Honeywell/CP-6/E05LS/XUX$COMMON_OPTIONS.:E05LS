VERSION E05

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:1    
        1        1        /*M* XUX$COMMON_OPTIONS - The common options parser routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
        8        8        /*P*
        9        9             NAME: XUX$COMMON_OPTIONS
       10       10             PURPOSE:
       11       11                  The common options parser is designed to read and optionally
       12       12                  parse command lines.
       13       13             DESCRIPTION:
       14       14                  The common options parser can be used to read command lines and
       15       15                  (if present) contination lines from *CONTINUED_COMMAND and
       16       16                  optionally parse them according to the CP-6 standard options.
       17       17                  Provision is made for non-standard options.
       18       18             REFERENCE:
       19       19                  See AF# 0765A-0
       20       20        */
       21       21        /*F*
       22       22             NAME:  XUX:  Processor Invocation Services
       23       23             ..::L1 "XUX Services\XUX\1"
       24       24             ..VA$M_FOOTER "\XUX Services"
       25       25                  The XUX services facilitate reading and parsing of a
       26       26                  processor invocation command.  The services can be used in
       27       27                  two ways:
       28       28                  ..::IX "processor invocation"
       29       29                  ..::IX "command, processor invocation"
       30       30                  ..::IX "parsing, processor invocation command"
       31       31                  ..::IX "options, processor invocation"
       32       32
       33       33                  o  The command line options are parsed using X$PARSE and a
       34       34                  data structure is returned to the caller indicating which of
       35       35                  the standard command line options were found, as well as any
       36       36                  non-standard options found.  This function is performed by
       37       37                  calling the XUX$COMMON_OPTIONS service.
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:2    
       38       38                  ..::IX "command line options, standard"
       39       39                  ..::IX "command line options, non-standard"
       40       40
       41       41                  o  The command lines found are returned to the calling
       42       42                  routine.  Continuation lines are automatically retrieved.
       43       43                  No parsing is performed.  This function is performed by
       44       44                  calling the XUX$GETLINE service for each line.  The
       45       45                  XUX$CLEANUP service must be called after reading a command.
       46       46
       47       47                        ..::HL "The XUX services are summarized in Table 15-1."
       48       48                        ..::HL "\For a brief description of each service, type"
       49       49                        ..::HL "\.spf"
       50       50                        ..::HL "\!HELP (HOSTLIB) XUX service"
       51       51                        ..::HL "\.spb"
       52       52                        ..::HL "\service may be XUX$CLEANUP, XUX$COMMON_OPTIONS, or "
       53       53                        ..::HL "\XUX$GETLINE."
       54       54                        ..::TB "XUX Service Summary\Service\#3\Description\#"
       55       55                        ..::IT "XUX$CLEANUP"
       56       56                        Performs internal housekeeping; required after a complete
       57       57                        command has been read via calls to XUX$GETLINE.
       58       58                        ..::IT "XUX$COMMON_OPTIONS"
       59       59                        Retrieves and parses a complete processor invocation
       60       60                        command.  Can parse the standard form of the processor
       61       61                        invocation, and, with user-supplied parse nodes, can parse
       62       62                        non-standard processor invocations.
       63       63                        ..::IT "XUX$GETLINE"
       64       64                        Facilitates reading command line options, but performs no
       65       65                        parsing.
       66       66                        ..::TB
       67       67        */
       68       68        /*F*
       69       69             NAME:  XUX_INCLUDE Files
       70       70             All of the INCLUDE files necessary to make use of the XUX services are
       71       71             located in the :LIBRARY account.  They are all PL-6 INCLUDE files
       72       72             and contain MACRO definitions and EQUs which are used to initialize
       73       73             interface to the services (see Table 14-1).
       74       74             ..::TB "XUX Include Files\File\#11\Contents\#"
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:3    
       75       75             ..::IT "XUX$INTERFACE_M"
       76       76             Macros for use with XUX services.
       77       77             ..::IT "XUX_ENTRY_M"
       78       78             Entry DCLs for entry points to the XUX services.
       79       79             ..::IT "XU_PERR_C"
       80       80             EQUs for all XUX service error messages.  Any EQUs of the form
       81       81             E$XUX#? are found in this file.
       82       82             ..::TB
       83       83        */
       84       84        /*F*
       85       85             NAME:  XUX$GETLINE Service
       86       86             ..::IT "Format:"
       87       87                  CALL XUX$GETLINE (name) ALTRET (label);
       88       88             ..::IT "Parameters:"
       89       89                  name^^^^can be generated by invoking the
       90       90                  macro %XUX$PARAM_NO_PARSE.
       91       91             ..::IT "Description:"
       92       92                  The XUX$GETLINE service retrieves a command line.
       93       93                  XUX$GETLINE can be called and re-called to obtain a
       94       94                  multi-line command; it obtains
       95       95                  continuation lines from the *CONTINUATION_COMMANDS file, if
       96       96                  they are present.  The caller may choose to receive the
       97       97                  entire command by default, or only the portion from
       98       98                  B$JIT.CCDISP on (i.e., starting at the processor options)
       99       99                  by setting XUX$PARAM_NO_PARSE.DISP_ONLY.
      100      100                  ..::IX "*CONTINUATION_COMMANDS file"
      101      101                  ..::IX "command, multi-line (processor invocation)"
      102      102                  ..::IX "multi-line command (processor invocation)"
      103      103
      104      104                  After a call to XUX$GETLINE, either the buffer framed by
      105      105                  XUX$PARAM_NO_PARSE.BUFFER_ contains a line of the command
      106      106                  with the length set in CMD_LEN, or
      107      107                  XUX$PARAM_NO_PARSE.CMD_COMPLETE is set indicating that
      108      108                  there is no command line left to return.  (It is illegal
      109      109                  to call XUX$GETLINE after CMD_COMPLETE is set.  The user
      110      110                  must first call XUX$CLEANUP before program termination
      111      111                  or before attempting to re-read or re-parse the command.)
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:4    
      112      112                  ..::IT "Error Conditions:"
      113      113                  If an error occurs, XUX$GETLINE ALTRETurns with
      114      114                  the error code set in XUX$PARAM_NO_PARSE.ERROR_CODE.
      115      115        */
      116      116        /*D*
      117      117             NAME: XUX$GETLINE
      118      118             CALL:
      119      119                  CALL XUX$GETLINE(PARAM_NO_PARSE) ALTRET;
      120      120             PARAMETERS:
      121      121                  PARAM_NO_PARSE is defined by the macro PARAM_NO_PARSE.
      122      122             INPUT:
      123      123                  B$JIT.CCBUF
      124      124                  *CONTINUATION_COMMAND  (if continued commands are present)
      125      125             DESCRIPTION:
      126      126                  On the first call to this routine, a DCB is allocated to
      127      127                  read *CONTINUATION_COMMAND if B$JIT.CONTINUED is set.  This
      128      128                  will be used for subsequent calls to read the continued lines
      129      129                  from.  If PARAM_NO_PARSE.DISP_ONLY is set, then only the portion
      130      130                  of the command line from B$JIT.CCDISP on (including any
      131      131                  continued lines).  Subsequent calls will return the continued
      132      132                  lines (if any) until XUX$CMD_COMPLETE gets set, indicating that
      133      133                  there is no more command input. If a call occurs after that
      134      134                  without an intervening call to XUX$CLEANUP, then an ALTRETURN
      135      135                  will occur.
      136      136        */
      137      137
      138      138        /*E*
      139      139             ERROR:   XUX-E$XUX#CANT_CALL_AGAIN-4
      140      140             MESSAGE: This call to XUX$GETLINE is illegal because of either a
      141      141                      previous error condition or a previous EOF condition.
      142      142             DESCRIPTION: XUX$GETLINE was called after EOF (or end of options
      143      143                          on B$JIT.CCBUF) or an error occurred without calling
      144      144                          XUX$CLEANUP in between.
      145      145        */
      146      146
      147      147
      148      148        /*E*
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:5    
      149      149             ERROR:   XUX-E$XUX#BUFFER_IS_NIL-4
      150      150             MESSAGE: No buffer was specified on a call to XUX$GETLINE.
      151      151        */
      152      152
      153      153        /*E* ERROR:XUX-E$XUX#NO_PARAM_SPECIFIED-4
      154      154             MESSAGE:Internal error: XUX$COMMON_OPTIONS was called with no parameters.
      155      155        */
      156      156
      157      157        /*E* ERROR:XUX-E$XUX#MUST_HAVE_LEGAL_OPTIONS-4
      158      158             MESSAGE:Internal error: No XUX$LEGAL_OPTIONS specified.
      159      159        */
      160      160
      161      161        /*E* ERROR:XUX-E$XUX#MUST_HAVE_STD_OPTIONS-4
      162      162             MESSAGE:Internal error: No XUX$STD_OPTIONS specified.
      163      163        */
      164      164
      165      165        /*E* ERROR:XUX-E$XUX#NO_BC_STRUCT-4
      166      166             MESSAGE:Internal error: No XUX$BC_UNIT structure specified.
      167      167        */
      168      168
      169      169        /*E* ERROR:XUX-E$XUX#NO_SRCH_LIST_STRUCT-4
      170      170             MESSAGE:Internal error: No XUX$SRCH_LIST structure specified.
      171      171        */
      172      172
      173      173        /*E* ERROR:XUX-E$XUX#NO_USER_ROUTINE-4
      174      174             MESSAGE:Internal error: Non-standard options have been allowed but
      175      175                     no user routine has been provided.
      176      176        */
      177      177
      178      178        /*E* ERROR:XUX-E$XUX#ILLEGAL_DCB_FOUND-2
      179      179             MESSAGE:A DCB was specified in the %U1 position, but is not legal
      180      180                     for this processor.
      181      181        */
      182      182
      183      183        /*E* ERROR:XUX-E$XUX#CANT_GET_MEM-4
      184      184             MESSAGE:Unable to allocate enough memory to process command line options.
      185      185        */
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:6    
      186      186
      187      187        /*E* ERROR:XUX-E$XUX#NO_MORE_BUFFER-4
      188      188             MESSAGE:The command line options specified were too long to process.
      189      189        */
      190      190
      191      191        /*E* ERROR:XUX-E$XUX#NO_MORE_INPUT-4
      192      192             MESSAGE:Internal error:Unexpected end-of-input from *CONTINUATION_COMMAND.
      193      193                     Please report this in STARLOG.
      194      194        */
      195      195
      196      196        /*E* ERROR:XUX-E$XUX#SYNTAX_ERROR-2
      197      197             MESSAGE:Syntax error.  Alternatives at this point are:
      198      198        */
      199      199
      200      200        /*E* ERROR:XUX-E$XUX#INTERNAL_ERROR-4
      201      201             MESSAGE:Internal error: Problem in XUX$COMMON_OPTIONS.
      202      202                     Please report this in STARLOG.
      203      203        */
      204      204
      205      205        /*E* ERROR:XUX-E$XUX#TOO_MANY_BC_UNITS-2
      206      206             MESSAGE:More than 8 BC units were specified.
      207      207        */
      208      208        /*E* ERROR:XUX-E$XUX#BAD_BC-2
      209      209             MESSAGE:The BC unit %U1 specified is not between 1 and 131071.
      210      210        */
      211      211        /*E* ERROR:XUX-E$XUX#DUPE_BC-2
      212      212             MESSAGE:Duplicate BC unit number %U1 found.
      213      213        */
      214      214        /*E* ERROR:XUX-E$XUX#DUPE_OPTION-2
      215      215             MESSAGE:%U2 was found but %U1 was already specified.
      216      216        */
      217      217        /*E* ERROR:XUX-E$XUX#ILLEGAL_OPTION-2
      218      218             MESSAGE:The standard option %U1 is not valid for this processor.
      219      219        */
      220      220        /*E* ERROR:XUX-E$XUX#TOO_MANY_SRCH_ACCTS-2
      221      221             MESSAGE:More than %U1 accounts were listed in the SRCH option.
      222      222        */
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:7    
      223      223        /*E* ERROR:XUX-E$XUX#BAD_SRCH_FID-2
      224      224             MESSAGE:"%U1" is not a valid SRCH account.
      225      225        */
      226      226        /*E* ERROR:XUX-E$XUX#CONFLICTING_DMAP_OPTS-2
      227      227             MESSAGE:Conflicting options for DMAP, NDMAP, MDMAP or NMDMAP.
      228      228        */
      229      229        /*E* ERROR:XUX-E$XUX#ILLEGAL_NSTD_OPT-4
      230      230             MESSAGE:Internal error: A non-standard option was found but
      231      231                     XUX$LEGAL_OPTIONS.NSTD was not set.
      232      232        */
      233      233        /*E* ERROR:XUX-E$XUX#BAD_PARSE_NODE-4
      234      234             MESSAGE:Internal error: Bad parse node #%U1 encountered.
      235      235        */
      236      236        /*E* ERROR:XUX-E$XUX#USER_ROUTINE_BUG-4
      237      237             MESSAGE:Internal error: The non-standard options user routine
      238      238                     ALTRETURNed indicating that it could not handle a
      239      239                     specified option.
      240      240        */
      241      241        /*E* ERROR:XUX-E$XUX#USER_ROUTINE_ALTRETURNED-2
      242      242             MESSAGE:The non-standard node handler ALTRETURNed.
      243      243             DESCRIPTION:This message will never be printed out by any XUX
      244      244                         routine. It is here only so that the user can test
      245      245                         XUX$PARAM.ERROR_CODE and handle these types of errors.
      246      246        */
      247      247        /*E* ERROR:XUX-E$XUX#BAD_INTERNAL_FID-4
      248      248             MESSAGE:Internal error: Bad internal FID for SRCH list.
      249      249                     Please report this in STARLOG.
      250      250        */
      251      251        /*E* ERROR:XUX-E$XUX#DMAP_SCHEMA_CONFLICT-2
      252      252        MESSAGE:NSCHEMA was requested with DMAP or MDMAP. MSCHEMA will be generated instead.
      253      253        */
      254      254
      255      255        /*E* ERROR:XUX-E$XUX#PMAP_SCHEMA_CONFLICT-2
      256      256        MESSAGE:NSCHEMA was requested with PMAP or MPMAP. MSCHEMA will be generated instead.
      257      257        */
      258      258        XUX$MAIN: PROC(P_PARAM) ALTRET;     /* Dummy main entry point */
      259      259
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:8    
      260      260        %INCLUDE CP_6;
      261     5819        %INCLUDE U$JIT_C;
      262     6318        %INCLUDE XUX$INTERFACE_M;
      263     7095        %INCLUDE XU_PERR_C;
      264     7286
      265     7287        /*
      266     7288             PARAMETERS
      267     7289        */
      268     7290        %XUX$PARAM_NO_PARSE(NAME=P_PARAM,STCLASS=);
      269     7401
      270     7402        /*
      271     7403             System interfaces
      272     7404        */
      273     7405
      274     7406        %FPT_GETDCB(FPTN=GET_DCB,STCLASS=CONSTANT);
      275     7421        %FPT_RELDCB(FPTN=REL_DCB,STCLASS=CONSTANT);
      276     7435        %FPT_OPEN(FPTN=OPEN_CMD,ASN=FILE,FUN=IN,NAME=CONT_FILE,STCLASS=CONSTANT);
      277     7544        %FPT_READ(FPTN=READ_CMD,STCLASS=CONSTANT);
      278     7583
      279     7584        %VLP_NAME(FPTN=CONT_FILE,NAME='*CONTINUATION_COMMANDS',STCLASS=CONSTANT);
      280     7611
      281     7612        %FPT_CLOSE(FPTN=CLOSE_CMD,STCLASS=CONSTANT);
      282     7654
      283     7655        /*
      284     7656             System data structures
      285     7657        */
      286     7658
      287     7659        %B$TCB;
      288     7662        %B$ALT;
      289     7670
      290     7671    1   DCL B$TCB$ PTR SYMREF;
      291     7672    1   DCL B$JIT$ PTR SYMREF;
      292     7673
      293     7674        /*
      294     7675             Internal data
      295     7676        */
      296     7677
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:9    
      297     7678    1   DCL 1 STATUS WALIGNED STATIC,
      298     7679    1         2 DONT_COME_BACK BIT(1) UNAL INIT('0'B),
      299     7680    1         2 NOT_CALLED BIT(1) UNAL INIT('1'B),
      300     7681    1         2 FIRST_TIME BIT(1) UNAL INIT('1'B),
      301     7682    1         2 * BIT(33) UNAL INIT ('0'B);
      302     7683
      303     7684    1   DCL  CONT_DCB#   UBIN WORD STATIC INIT(DCBNUM(NIL));
      304     7685    1   DCL  CONT_DCB$   PTR STATIC;
      305     7686        %F$DCB;
      306     7743
      307     7744        %VLP_ERRCODE(FPTN=XUX_ERR,FCG=XU,MID=X,STCLASS=CONSTANT);
      308     7789
      309     7790    1   DCL BUF CHAR(256) BASED;    /* P_PARAM.BUFFER_ will point here */
      310     7791
      311     7792    1   DCL RUNNING_ARS SBIN;
      312     7793    1   DCL I SBIN;
      313     7794
      314     7795        /*
      315     7796             Entries
      316     7797        */
      317     7798
      318     7799
      319     7800        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:10   
      320     7801    1   XUX$GETLINE: ENTRY(P_PARAM) ALTRET;
      321     7802    1       IF STATUS.DONT_COME_BACK
      322     7803    2       THEN DO;
      323     7804    2           P_PARAM.ERROR_CODE = XUX_ERR;
      324     7805    2           P_PARAM.ERROR_CODE.ERR# = %E$XUX#CANT_CALL_AGAIN;
      325     7806    2           ALTRETURN;
      326     7807    2       END;
      327     7808
      328     7809    1       IF P_PARAM.BUFFER_ = VECTOR(NIL)
      329     7810    2       THEN DO;
      330     7811    2           P_PARAM.ERROR_CODE = XUX_ERR;
      331     7812    2           P_PARAM.ERROR_CODE.ERR# = %E$XUX#BUFFER_IS_NIL;
      332     7813    2           STATUS.DONT_COME_BACK = '1'B;
      333     7814    2           ALTRETURN;
      334     7815    2       END;
      335     7816    1       IF STATUS.NOT_CALLED
      336     7817    1       THEN CALL INITIALIZE ALTRET(STD_ALTRET_CODE);
      337     7818
      338     7819    1       IF B$JIT.PRFLAGS.CONTINUED
      339     7820    2       THEN DO;
      340     7821
      341     7822        /*
      342     7823             The following code reads the next record from then
      343     7824             continuation file.  It is assumed that the file has been opened
      344     7825             by the initialization routine and that the DCB number has been
      345     7826             stuffed into the FPT for the read. If this winds up being the
      346     7827             EOF, then return with P_PARAM.CMD_COMPLETE set and indicate
      347     7828             internally that another call here is illegal. DCB cleanup will
      348     7829             occur in XUX$CLEANUP.
      349     7830        */
      350     7831
      351     7832    2           IF STATUS.FIRST_TIME
      352     7833    3           THEN DO;
      353     7834    3               CALL READ  ALTRET(STD_ALTRET_CODE);
      354     7835    3               RUNNING_ARS = CONT_DCB$->F$DCB.ARS#;
      355     7836    3               IF P_PARAM.DISP_ONLY#
      356     7837    4               THEN DO;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:11   
      357     7838    5                   DO WHILE RUNNING_ARS-1 < B$JIT.CCDISP;
      358     7839    5                       CALL READ ALTRET(STD_ALTRET_CODE);
      359     7840    5                       RUNNING_ARS = RUNNING_ARS+CONT_DCB$->F$DCB.ARS#;
      360     7841    5                   END;
      361     7842    4                   CALL INDEX(I,'(',SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,CONT_DCB$->
              7842                            F$DCB.ARS#));
      362     7843    4                   P_PARAM.CMD_LEN = CONT_DCB$->F$DCB.ARS#-I;
      363     7844    4                   SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,P_PARAM.CMD_LEN) = SUBSTR(VBASE
              7844                            (P_PARAM.BUFFER_)->BUF,I,P_PARAM.CMD_LEN);
      364     7845    4               END;
      365     7846    3               ELSE
      366     7847    3                   P_PARAM.CMD_LEN = B$JIT.CCDISP;
      367     7848
      368     7849    3               STATUS.FIRST_TIME = '0'B;
      369     7850    3           END;     /* Of first time only code */
      370     7851
      371     7852    3           ELSE DO;
      372     7853    3               CALL READ ALTRET(STD_ALTRET_CODE);
      373     7854    3               P_PARAM.CMD_LEN = CONT_DCB$->F$DCB.ARS#;
      374     7855    3           END;
      375     7856    2       END;   /* Of code for continued lines */
      376     7857
      377     7858    2       ELSE DO;
      378     7859
      379     7860
      380     7861    2           IF STATUS.FIRST_TIME
      381     7862    3           THEN DO;
      382     7863    3               IF P_PARAM.DISP_ONLY#
      383     7864    4               THEN DO;
      384     7865    4                   P_PARAM.CMD_LEN = B$JIT.CCARS-B$JIT.CCDISP;
      385     7866    4                   SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,P_PARAM.CMD_LEN) = SUBSTR(B$JIT
              7866                            .CCBUF,B$JIT.CCDISP,P_PARAM.CMD_LEN);
      386     7867    4               END;
      387     7868    4               ELSE DO;
      388     7869    4                   SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,B$JIT.CCARS) = B$JIT.CCBUF;
      389     7870    4                   P_PARAM.CMD_LEN = B$JIT.CCARS;
      390     7871    4               END;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:12   
      391     7872
      392     7873    3               STATUS.FIRST_TIME = '0'B;
      393     7874    3           END;
      394     7875
      395     7876    3           ELSE DO;
      396     7877    3               P_PARAM.CMD_COMPLETE = '1'B;
      397     7878    3               STATUS.DONT_COME_BACK = '1'B;
      398     7879    3               P_PARAM.CMD_LEN = 0;
      399     7880    3               ALTRETURN;
      400     7881    3           END;
      401     7882
      402     7883    2       END; /* Of non-continued stuff */
      403     7884
      404     7885    2       DO WHILE '0'B;
      405     7886    2   STD_ALTRET_CODE:
      406     7887    2           ALTRETURN;
      407     7888    2       END;
      408     7889
      409     7890        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:13   
      410     7891        /*
      411     7892             Internal routines for XUX$GETLINE
      412     7893        */
      413     7894
      414     7895
      415     7896        /*I*
      416     7897             NAME: INITIALIZE
      417     7898             PURPOSE:
      418     7899                  Performs initialization for XUX$GETLINE. Gets a dcb (if needed)
      419     7900                  and sets up some variables.
      420     7901             CALL:
      421     7902                  CALL INITIALIZE ALTRET;
      422     7903             PARAMETERS:
      423     7904                          Altret reason is returned in P_PARAM.ERROR_CODE.
      424     7905             DATA:
      425     7906                  B$JIT
      426     7907             DESCRIPTION:
      427     7908                 This module allocates a DCB to read the continuation file
      428     7909                 through if B$JIT.PRFLAGS.CONTINUED is set, and sets up a
      429     7910                 couple of useful variables.
      430     7911        */
      431     7912
      432     7913    1   INITIALIZE: PROC ALTRET;
      433     7914        %FPT_GETDCB(STCLASS=);
      434     7929        %FPT_OPEN(STCLASS=);
      435     8038
      436     8039    2       STATUS.FIRST_TIME = '1'B;
      437     8040    2       P_PARAM.CMD_COMPLETE = '0'B; /* In case the guy didn't do it himself */
      438     8041
      439     8042    2       STATUS.NOT_CALLED = '0'B;
      440     8043    2       IF B$JIT.PRFLAGS.CONTINUED
      441     8044    3       THEN DO;
      442     8045    3           FPT_GETDCB = GET_DCB;
      443     8046    3           FPT_GETDCB.V_ = VECTOR(FPT_GETDCB.V);
      444     8047
      445     8048    3           CALL M$GETDCB(FPT_GETDCB)
      446     8049    4           WHENALTRETURN DO;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:14   
      447     8050    4               P_PARAM.ERROR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      448     8051    4               STATUS.DONT_COME_BACK = '1'B;
      449     8052    4               ALTRETURN;
      450     8053    4           END;
      451     8054
      452     8055    3           CONT_DCB# = FPT_GETDCB.V.DCB#;
      453     8056    3           CONT_DCB$ = DCBADDR(CONT_DCB#);
      454     8057    3           FPT_OPEN = OPEN_CMD;
      455     8058    3           FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
      456     8059    3           FPT_OPEN.V.DCB# = CONT_DCB#;
      457     8060    3           CALL M$OPEN(FPT_OPEN)
      458     8061    4           WHENALTRETURN DO;
      459     8062    4               P_PARAM.ERROR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      460     8063    4               STATUS.DONT_COME_BACK = '1'B;
      461     8064    4               ALTRETURN;
      462     8065    4           END;
      463     8066    3       END;
      464     8067
      465     8068    2   END INITIALIZE;
      466     8069
      467     8070        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:15   
      468     8071        /*I*
      469     8072             NAME: READ
      470     8073             PURPOSE:
      471     8074                  Read a line from the continuation file.
      472     8075             CALL:
      473     8076                  CALL READ ALTRET;
      474     8077             PARAMETERS:
      475     8078                  On altreturn, error code is passed back in P_PARAM.ERROR_CODE.
      476     8079             DATA:
      477     8080                  P_PARAMS.BUFFER_
      478     8081                  CONT_DCB#
      479     8082             DESCRIPTION:
      480     8083                  This module will read a line from *CONTINUATION_COMMAND and
      481     8084                  return it in VBASE(P_BUFFER_)->BUF. Length will get pulled
      482     8085                  out in the calling routine, since on the first call we might have
      483     8086                  to get over to CCDISP. On EOF, the CMD_COMPLETE bit is set and
      484     8087                  the length is set to 0. Also the internal DONT_COME_BACK bit
      485     8088                  is set.
      486     8089        */
      487     8090    1   READ: PROC ALTRET;
      488     8091
      489     8092        %FPT_READ(STCLASS=);
      490     8131
      491     8132    2       FPT_READ = READ_CMD;
      492     8133    2       FPT_READ.V_ = VECTOR(FPT_READ.V);
      493     8134    2       FPT_READ.V.DCB# = CONT_DCB#;
      494     8135    2       FPT_READ.BUF_ = P_PARAM.BUFFER_;
      495     8136
      496     8137    2       CALL M$READ(FPT_READ)
      497     8138    3       WHENALTRETURN DO;
      498     8139    3           IF CONT_DCB$->F$DCB.TYC.EOF#
      499     8140    4           THEN DO;
      500     8141    4               P_PARAM.CMD_COMPLETE = '1'B;
      501     8142    4               P_PARAM.CMD_LEN     = 0;
      502     8143    4               STATUS.DONT_COME_BACK = '1'B;
      503     8144    4               ALTRETURN;
      504     8145    4           END;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:16   
      505     8146    4           ELSE DO;
      506     8147    4               P_PARAM.ERROR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      507     8148    4               P_PARAM.CMD_LEN = 0;
      508     8149    4               STATUS.DONT_COME_BACK = '1'B;
      509     8150    4               ALTRETURN;
      510     8151    4           END;
      511     8152    3       END;
      512     8153
      513     8154    2   END READ;
      514     8155
      515     8156    1       RETURN;
      516     8157        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:17   
      517     8158        /*F*
      518     8159             NAME:  XUX$CLEANUP Service
      519     8160             ..::IT "Format:"
      520     8161                  CALL XUX$CLEANUP;
      521     8162             ..::IT "Parameters:"
      522     8163                  None
      523     8164             ..::IT "Description:"
      524     8165                  The XUX$CLEANUP service should be called after a
      525     8166                  complete command has been read via calls to XUX$GETLINE.
      526     8167                  This service makes it appear that XUX$GETLINE was never
      527     8168                  called.  This is useful if the command line needs to be
      528     8169                  re-read, for instance.
      529     8170             ..::IT "Error Conditions:"
      530     8171                  None.
      531     8172        */
      532     8173        /*D*
      533     8174             NAME: XUX$CLEANUP
      534     8175             CALL:
      535     8176                  CALL XUX$CLEANUP ;
      536     8177             INTERFACE:
      537     8178                  M$CLOSE
      538     8179                  M$RELDCB
      539     8180             SCRATCH:
      540     8181                  STATUS.NOT_CALLED
      541     8182                  STATUS.FIRST_TIME
      542     8183                  STATUS.DONT_COME_BACK
      543     8184             DESCRIPTION:
      544     8185                  This module gets called after all the continuation lines have
      545     8186                  been read in. It closes the continuation file and releases the
      546     8187                  DCB (if needed), and resets the status flags to make it appear
      547     8188                  that the routines have never been called.
      548     8189        */
      549     8190
      550     8191    1   XUX$CLEANUP: ENTRY ALTRET;
      551     8192
      552     8193    1       IF CONT_DCB# ~= DCBNUM(NIL)
      553     8194    2       THEN DO;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:18   
      554     8195    2           CALL CLOSE;
      555     8196    2           CALL RELEASE;
      556     8197    2       END;
      557     8198
      558     8199    1       STATUS.NOT_CALLED = '1'B;
      559     8200    1       STATUS.FIRST_TIME = '1'B;
      560     8201    1       STATUS.DONT_COME_BACK = '0'B;
      561     8202
      562     8203    1       RETURN;
      563     8204
      564     8205        /*I*
      565     8206             NAME: RELEASE
      566     8207             PURPOSE:
      567     8208                  Release the continuation file DCB, if needed.
      568     8209             CALL:
      569     8210                  CALL RELEASE;
      570     8211             DATA:
      571     8212                  CONT_DCB#
      572     8213             DESCRIPTION:
      573     8214                  Releases the continuation DCB.
      574     8215                  Monitor call altrets are ignored.
      575     8216        */
      576     8217    1   RELEASE: PROC;
      577     8218        %FPT_RELDCB(STCLASS=);
      578     8232
      579     8233    2       FPT_RELDCB = REL_DCB;
      580     8234    2       FPT_RELDCB.V_ = VECTOR(FPT_RELDCB.V);
      581     8235    2       FPT_RELDCB.V.DCB# = CONT_DCB#;
      582     8236
      583     8237    2       CALL M$RELDCB(FPT_RELDCB)
      584     8238    3       WHENALTRETURN DO;
      585     8239             /* NOTHING */
      586     8240    3       END;
      587     8241
      588     8242    2       CONT_DCB# = DCBNUM(NIL);
      589     8243    2       CONT_DCB$ = DCBADDR(DCBNUM(NIL));
      590     8244
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:19   
      591     8245    2   END RELEASE;
      592     8246        /*I*
      593     8247             NAME: CLOSE
      594     8248             PURPOSE:
      595     8249                  Closes the continuation file.
      596     8250             CALL:
      597     8251                  CALL CLOSE;
      598     8252             DATA:
      599     8253                  CONT_DCB#
      600     8254             DESCRIPTION:
      601     8255                  Closes the continuation file.
      602     8256                  Monitor call ALTRETs are ignored.
      603     8257        */
      604     8258    1   CLOSE: PROC;
      605     8259
      606     8260        %FPT_CLOSE(STCLASS=);
      607     8302
      608     8303    2       FPT_CLOSE = CLOSE_CMD;
      609     8304    2       FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      610     8305    2       FPT_CLOSE.V.DCB# = CONT_DCB#;
      611     8306
      612     8307    2       CALL M$CLOSE(FPT_CLOSE)
      613     8308    3       WHENALTRETURN DO;
      614     8309             /* NOTHING */
      615     8310    3       END;
      616     8311
      617     8312    2       RETURN;
      618     8313
      619     8314    2   END CLOSE;
      620     8315
      621     8316    1   END XUX$MAIN;
      622     8317        %EOD;

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:20   
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XUX$MAIN.

   Procedure XUX$MAIN requires 299 words for executable code.
   Procedure XUX$MAIN requires 76 words of local(AUTO) storage.

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:21   

 Object Unit name= XUX$MAIN                                   File name= XUX$COMMON_OPTIONS.:E05TOU
 UTS= JUL 30 '97 09:46:15.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    121    171  XUX$MAIN
    2   Data  even  none     3      3  XUX$MAIN
    3   Proc  even  none   299    453  XUX$MAIN
    4  RoData even  none    11     13  XUX$MAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  XUX$MAIN
     3      3          yes     yes      Std        1  XUX$GETLINE
     3    363          yes     yes      Std        0  XUX$CLEANUP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:22   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                B$JIT$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:23   


        1        1        /*M* XUX$COMMON_OPTIONS - The common options parser routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
        8        8        /*P*
        9        9             NAME: XUX$COMMON_OPTIONS
       10       10             PURPOSE:
       11       11                  The common options parser is designed to read and optionally
       12       12                  parse command lines.
       13       13             DESCRIPTION:
       14       14                  The common options parser can be used to read command lines and
       15       15                  (if present) contination lines from *CONTINUED_COMMAND and
       16       16                  optionally parse them according to the CP-6 standard options.
       17       17                  Provision is made for non-standard options.
       18       18             REFERENCE:
       19       19                  See AF# 0765A-0
       20       20        */
       21       21        /*F*
       22       22             NAME:  XUX:  Processor Invocation Services
       23       23             ..::L1 "XUX Services\XUX\1"
       24       24             ..VA$M_FOOTER "\XUX Services"
       25       25                  The XUX services facilitate reading and parsing of a
       26       26                  processor invocation command.  The services can be used in
       27       27                  two ways:
       28       28                  ..::IX "processor invocation"
       29       29                  ..::IX "command, processor invocation"
       30       30                  ..::IX "parsing, processor invocation command"
       31       31                  ..::IX "options, processor invocation"
       32       32
       33       33                  o  The command line options are parsed using X$PARSE and a
       34       34                  data structure is returned to the caller indicating which of
       35       35                  the standard command line options were found, as well as any
       36       36                  non-standard options found.  This function is performed by
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:24   
       37       37                  calling the XUX$COMMON_OPTIONS service.
       38       38                  ..::IX "command line options, standard"
       39       39                  ..::IX "command line options, non-standard"
       40       40
       41       41                  o  The command lines found are returned to the calling
       42       42                  routine.  Continuation lines are automatically retrieved.
       43       43                  No parsing is performed.  This function is performed by
       44       44                  calling the XUX$GETLINE service for each line.  The
       45       45                  XUX$CLEANUP service must be called after reading a command.
       46       46
       47       47                        ..::HL "The XUX services are summarized in Table 15-1."
       48       48                        ..::HL "\For a brief description of each service, type"
       49       49                        ..::HL "\.spf"
       50       50                        ..::HL "\!HELP (HOSTLIB) XUX service"
       51       51                        ..::HL "\.spb"
       52       52                        ..::HL "\service may be XUX$CLEANUP, XUX$COMMON_OPTIONS, or "
       53       53                        ..::HL "\XUX$GETLINE."
       54       54                        ..::TB "XUX Service Summary\Service\#3\Description\#"
       55       55                        ..::IT "XUX$CLEANUP"
       56       56                        Performs internal housekeeping; required after a complete
       57       57                        command has been read via calls to XUX$GETLINE.
       58       58                        ..::IT "XUX$COMMON_OPTIONS"
       59       59                        Retrieves and parses a complete processor invocation
       60       60                        command.  Can parse the standard form of the processor
       61       61                        invocation, and, with user-supplied parse nodes, can parse
       62       62                        non-standard processor invocations.
       63       63                        ..::IT "XUX$GETLINE"
       64       64                        Facilitates reading command line options, but performs no
       65       65                        parsing.
       66       66                        ..::TB
       67       67        */
       68       68        /*F*
       69       69             NAME:  XUX_INCLUDE Files
       70       70             All of the INCLUDE files necessary to make use of the XUX services are
       71       71             located in the :LIBRARY account.  They are all PL-6 INCLUDE files
       72       72             and contain MACRO definitions and EQUs which are used to initialize
       73       73             interface to the services (see Table 14-1).
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:25   
       74       74             ..::TB "XUX Include Files\File\#11\Contents\#"
       75       75             ..::IT "XUX$INTERFACE_M"
       76       76             Macros for use with XUX services.
       77       77             ..::IT "XUX_ENTRY_M"
       78       78             Entry DCLs for entry points to the XUX services.
       79       79             ..::IT "XU_PERR_C"
       80       80             EQUs for all XUX service error messages.  Any EQUs of the form
       81       81             E$XUX#? are found in this file.
       82       82             ..::TB
       83       83        */
       84       84        /*F*
       85       85             NAME:  XUX$GETLINE Service
       86       86             ..::IT "Format:"
       87       87                  CALL XUX$GETLINE (name) ALTRET (label);
       88       88             ..::IT "Parameters:"
       89       89                  name^^^^can be generated by invoking the
       90       90                  macro %XUX$PARAM_NO_PARSE.
       91       91             ..::IT "Description:"
       92       92                  The XUX$GETLINE service retrieves a command line.
       93       93                  XUX$GETLINE can be called and re-called to obtain a
       94       94                  multi-line command; it obtains
       95       95                  continuation lines from the *CONTINUATION_COMMANDS file, if
       96       96                  they are present.  The caller may choose to receive the
       97       97                  entire command by default, or only the portion from
       98       98                  B$JIT.CCDISP on (i.e., starting at the processor options)
       99       99                  by setting XUX$PARAM_NO_PARSE.DISP_ONLY.
      100      100                  ..::IX "*CONTINUATION_COMMANDS file"
      101      101                  ..::IX "command, multi-line (processor invocation)"
      102      102                  ..::IX "multi-line command (processor invocation)"
      103      103
      104      104                  After a call to XUX$GETLINE, either the buffer framed by
      105      105                  XUX$PARAM_NO_PARSE.BUFFER_ contains a line of the command
      106      106                  with the length set in CMD_LEN, or
      107      107                  XUX$PARAM_NO_PARSE.CMD_COMPLETE is set indicating that
      108      108                  there is no command line left to return.  (It is illegal
      109      109                  to call XUX$GETLINE after CMD_COMPLETE is set.  The user
      110      110                  must first call XUX$CLEANUP before program termination
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:26   
      111      111                  or before attempting to re-read or re-parse the command.)
      112      112                  ..::IT "Error Conditions:"
      113      113                  If an error occurs, XUX$GETLINE ALTRETurns with
      114      114                  the error code set in XUX$PARAM_NO_PARSE.ERROR_CODE.
      115      115        */
      116      116        /*D*
      117      117             NAME: XUX$GETLINE
      118      118             CALL:
      119      119                  CALL XUX$GETLINE(PARAM_NO_PARSE) ALTRET;
      120      120             PARAMETERS:
      121      121                  PARAM_NO_PARSE is defined by the macro PARAM_NO_PARSE.
      122      122             INPUT:
      123      123                  B$JIT.CCBUF
      124      124                  *CONTINUATION_COMMAND  (if continued commands are present)
      125      125             DESCRIPTION:
      126      126                  On the first call to this routine, a DCB is allocated to
      127      127                  read *CONTINUATION_COMMAND if B$JIT.CONTINUED is set.  This
      128      128                  will be used for subsequent calls to read the continued lines
      129      129                  from.  If PARAM_NO_PARSE.DISP_ONLY is set, then only the portion
      130      130                  of the command line from B$JIT.CCDISP on (including any
      131      131                  continued lines).  Subsequent calls will return the continued
      132      132                  lines (if any) until XUX$CMD_COMPLETE gets set, indicating that
      133      133                  there is no more command input. If a call occurs after that
      134      134                  without an intervening call to XUX$CLEANUP, then an ALTRETURN
      135      135                  will occur.
      136      136        */
      137      137
      138      138        /*E*
      139      139             ERROR:   XUX-E$XUX#CANT_CALL_AGAIN-4
      140      140             MESSAGE: This call to XUX$GETLINE is illegal because of either a
      141      141                      previous error condition or a previous EOF condition.
      142      142             DESCRIPTION: XUX$GETLINE was called after EOF (or end of options
      143      143                          on B$JIT.CCBUF) or an error occurred without calling
      144      144                          XUX$CLEANUP in between.
      145      145        */
      146      146
      147      147
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:27   
      148      148        /*E*
      149      149             ERROR:   XUX-E$XUX#BUFFER_IS_NIL-4
      150      150             MESSAGE: No buffer was specified on a call to XUX$GETLINE.
      151      151        */
      152      152
      153      153        /*E* ERROR:XUX-E$XUX#NO_PARAM_SPECIFIED-4
      154      154             MESSAGE:Internal error: XUX$COMMON_OPTIONS was called with no parameters.
      155      155        */
      156      156
      157      157        /*E* ERROR:XUX-E$XUX#MUST_HAVE_LEGAL_OPTIONS-4
      158      158             MESSAGE:Internal error: No XUX$LEGAL_OPTIONS specified.
      159      159        */
      160      160
      161      161        /*E* ERROR:XUX-E$XUX#MUST_HAVE_STD_OPTIONS-4
      162      162             MESSAGE:Internal error: No XUX$STD_OPTIONS specified.
      163      163        */
      164      164
      165      165        /*E* ERROR:XUX-E$XUX#NO_BC_STRUCT-4
      166      166             MESSAGE:Internal error: No XUX$BC_UNIT structure specified.
      167      167        */
      168      168
      169      169        /*E* ERROR:XUX-E$XUX#NO_SRCH_LIST_STRUCT-4
      170      170             MESSAGE:Internal error: No XUX$SRCH_LIST structure specified.
      171      171        */
      172      172
      173      173        /*E* ERROR:XUX-E$XUX#NO_USER_ROUTINE-4
      174      174             MESSAGE:Internal error: Non-standard options have been allowed but
      175      175                     no user routine has been provided.
      176      176        */
      177      177
      178      178        /*E* ERROR:XUX-E$XUX#ILLEGAL_DCB_FOUND-2
      179      179             MESSAGE:A DCB was specified in the %U1 position, but is not legal
      180      180                     for this processor.
      181      181        */
      182      182
      183      183        /*E* ERROR:XUX-E$XUX#CANT_GET_MEM-4
      184      184             MESSAGE:Unable to allocate enough memory to process command line options.
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:28   
      185      185        */
      186      186
      187      187        /*E* ERROR:XUX-E$XUX#NO_MORE_BUFFER-4
      188      188             MESSAGE:The command line options specified were too long to process.
      189      189        */
      190      190
      191      191        /*E* ERROR:XUX-E$XUX#NO_MORE_INPUT-4
      192      192             MESSAGE:Internal error:Unexpected end-of-input from *CONTINUATION_COMMAND.
      193      193                     Please report this in STARLOG.
      194      194        */
      195      195
      196      196        /*E* ERROR:XUX-E$XUX#SYNTAX_ERROR-2
      197      197             MESSAGE:Syntax error.  Alternatives at this point are:
      198      198        */
      199      199
      200      200        /*E* ERROR:XUX-E$XUX#INTERNAL_ERROR-4
      201      201             MESSAGE:Internal error: Problem in XUX$COMMON_OPTIONS.
      202      202                     Please report this in STARLOG.
      203      203        */
      204      204
      205      205        /*E* ERROR:XUX-E$XUX#TOO_MANY_BC_UNITS-2
      206      206             MESSAGE:More than 8 BC units were specified.
      207      207        */
      208      208        /*E* ERROR:XUX-E$XUX#BAD_BC-2
      209      209             MESSAGE:The BC unit %U1 specified is not between 1 and 131071.
      210      210        */
      211      211        /*E* ERROR:XUX-E$XUX#DUPE_BC-2
      212      212             MESSAGE:Duplicate BC unit number %U1 found.
      213      213        */
      214      214        /*E* ERROR:XUX-E$XUX#DUPE_OPTION-2
      215      215             MESSAGE:%U2 was found but %U1 was already specified.
      216      216        */
      217      217        /*E* ERROR:XUX-E$XUX#ILLEGAL_OPTION-2
      218      218             MESSAGE:The standard option %U1 is not valid for this processor.
      219      219        */
      220      220        /*E* ERROR:XUX-E$XUX#TOO_MANY_SRCH_ACCTS-2
      221      221             MESSAGE:More than %U1 accounts were listed in the SRCH option.
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:29   
      222      222        */
      223      223        /*E* ERROR:XUX-E$XUX#BAD_SRCH_FID-2
      224      224             MESSAGE:"%U1" is not a valid SRCH account.
      225      225        */
      226      226        /*E* ERROR:XUX-E$XUX#CONFLICTING_DMAP_OPTS-2
      227      227             MESSAGE:Conflicting options for DMAP, NDMAP, MDMAP or NMDMAP.
      228      228        */
      229      229        /*E* ERROR:XUX-E$XUX#ILLEGAL_NSTD_OPT-4
      230      230             MESSAGE:Internal error: A non-standard option was found but
      231      231                     XUX$LEGAL_OPTIONS.NSTD was not set.
      232      232        */
      233      233        /*E* ERROR:XUX-E$XUX#BAD_PARSE_NODE-4
      234      234             MESSAGE:Internal error: Bad parse node #%U1 encountered.
      235      235        */
      236      236        /*E* ERROR:XUX-E$XUX#USER_ROUTINE_BUG-4
      237      237             MESSAGE:Internal error: The non-standard options user routine
      238      238                     ALTRETURNed indicating that it could not handle a
      239      239                     specified option.
      240      240        */
      241      241        /*E* ERROR:XUX-E$XUX#USER_ROUTINE_ALTRETURNED-2
      242      242             MESSAGE:The non-standard node handler ALTRETURNed.
      243      243             DESCRIPTION:This message will never be printed out by any XUX
      244      244                         routine. It is here only so that the user can test
      245      245                         XUX$PARAM.ERROR_CODE and handle these types of errors.
      246      246        */
      247      247        /*E* ERROR:XUX-E$XUX#BAD_INTERNAL_FID-4
      248      248             MESSAGE:Internal error: Bad internal FID for SRCH list.
      249      249                     Please report this in STARLOG.
      250      250        */
      251      251        /*E* ERROR:XUX-E$XUX#DMAP_SCHEMA_CONFLICT-2
      252      252       MESSAGE:NSCHEMA was requested with DMAP or MDMAP. MSCHEMA will be generated instead.
      253      253        */
      254      254
      255      255        /*E* ERROR:XUX-E$XUX#PMAP_SCHEMA_CONFLICT-2
      256      256       MESSAGE:NSCHEMA was requested with PMAP or MPMAP. MSCHEMA will be generated instead.
      257      257        */
      258      258        XUX$MAIN: PROC(P_PARAM) ALTRET;     /* Dummy main entry point */
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:30   

    258  3 000000   000000 700200 xent  XUX$MAIN     TSX0  ! X66_AUTO_1
         3 000001   000114 000001                    ZERO    76,1
         3 000002   000005 710000 3                  TRA     s:7802

      259      259
      260      260        %INCLUDE CP_6;
      261     5819        %INCLUDE U$JIT_C;
      262     6318        %INCLUDE XUX$INTERFACE_M;
      263     7095        %INCLUDE XU_PERR_C;
      264     7286
      265     7287        /*
      266     7288             PARAMETERS
      267     7289        */
      268     7290        %XUX$PARAM_NO_PARSE(NAME=P_PARAM,STCLASS=);
      269     7401
      270     7402        /*
      271     7403             System interfaces
      272     7404        */
      273     7405
      274     7406        %FPT_GETDCB(FPTN=GET_DCB,STCLASS=CONSTANT);
      275     7421        %FPT_RELDCB(FPTN=REL_DCB,STCLASS=CONSTANT);
      276     7435        %FPT_OPEN(FPTN=OPEN_CMD,ASN=FILE,FUN=IN,NAME=CONT_FILE,STCLASS=CONSTANT);
      277     7544        %FPT_READ(FPTN=READ_CMD,STCLASS=CONSTANT);
      278     7583
      279     7584        %VLP_NAME(FPTN=CONT_FILE,NAME='*CONTINUATION_COMMANDS',STCLASS=CONSTANT);
      280     7611
      281     7612        %FPT_CLOSE(FPTN=CLOSE_CMD,STCLASS=CONSTANT);
      282     7654
      283     7655        /*
      284     7656             System data structures
      285     7657        */
      286     7658
      287     7659        %B$TCB;
      288     7662        %B$ALT;
      289     7670
      290     7671    1   DCL B$TCB$ PTR SYMREF;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:31   
      291     7672    1   DCL B$JIT$ PTR SYMREF;
      292     7673
      293     7674        /*
      294     7675             Internal data
      295     7676        */
      296     7677
      297     7678    1   DCL 1 STATUS WALIGNED STATIC,
      298     7679    1         2 DONT_COME_BACK BIT(1) UNAL INIT('0'B),
      299     7680    1         2 NOT_CALLED BIT(1) UNAL INIT('1'B),
      300     7681    1         2 FIRST_TIME BIT(1) UNAL INIT('1'B),
      301     7682    1         2 * BIT(33) UNAL INIT ('0'B);
      302     7683
      303     7684    1   DCL  CONT_DCB#   UBIN WORD STATIC INIT(DCBNUM(NIL));
      304     7685    1   DCL  CONT_DCB$   PTR STATIC;
      305     7686        %F$DCB;
      306     7743
      307     7744        %VLP_ERRCODE(FPTN=XUX_ERR,FCG=XU,MID=X,STCLASS=CONSTANT);
      308     7789
      309     7790    1   DCL BUF CHAR(256) BASED;    /* P_PARAM.BUFFER_ will point here */
      310     7791
      311     7792    1   DCL RUNNING_ARS SBIN;
      312     7793    1   DCL I SBIN;
      313     7794
      314     7795        /*
      315     7796             Entries
      316     7797        */
      317     7798
      318     7799
      319     7800        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:32   
      320     7801    1   XUX$GETLINE: ENTRY(P_PARAM) ALTRET;

   7801  3 000003   000000 700200 xent  XUX$GETLINE  TSX0  ! X66_AUTO_1
         3 000004   000114 000001                    ZERO    76,1

      321     7802    1       IF STATUS.DONT_COME_BACK

   7802  3 000005   000000 234000 2                  SZN     STATUS
         3 000006   000016 605000 3                  TPL     s:7809

      322     7803    2       THEN DO;

      323     7804    2           P_PARAM.ERROR_CODE = XUX_ERR;

   7804  3 000007   000170 236000 1                  LDQ     XUX_ERR
         3 000010   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 000011   000003 756100                    STQ     3,,PR0

      324     7805    2           P_PARAM.ERROR_CODE.ERR# = %E$XUX#CANT_CALL_AGAIN;

   7805  3 000012   000000 376000 4                  ANQ     0
         3 000013   012750 276007                    ORQ     5608,DL
         3 000014   000003 756100                    STQ     3,,PR0

      325     7806    2           ALTRETURN;

   7806  3 000015   000000 702200 xent               TSX2  ! X66_AALT

      326     7807    2       END;
      327     7808
      328     7809    1       IF P_PARAM.BUFFER_ = VECTOR(NIL)

   7809  3 000016   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 000017   000000 237100                    LDAQ    0,,PR0
         3 000020   000002 117000 4                  CMPAQ   2
         3 000021   000032 601000 3                  TNZ     s:7816

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:33   
      329     7810    2       THEN DO;

      330     7811    2           P_PARAM.ERROR_CODE = XUX_ERR;

   7811  3 000022   000170 236000 1                  LDQ     XUX_ERR
         3 000023   000003 756100                    STQ     3,,PR0

      331     7812    2           P_PARAM.ERROR_CODE.ERR# = %E$XUX#BUFFER_IS_NIL;

   7812  3 000024   000000 376000 4                  ANQ     0
         3 000025   012760 276007                    ORQ     5616,DL
         3 000026   000003 756100                    STQ     3,,PR0

      332     7813    2           STATUS.DONT_COME_BACK = '1'B;

   7813  3 000027   400000 236003                    LDQ     -131072,DU
         3 000030   000000 256000 2                  ORSQ    STATUS

      333     7814    2           ALTRETURN;

   7814  3 000031   000000 702200 xent               TSX2  ! X66_AALT

      334     7815    2       END;
      335     7816    1       IF STATUS.NOT_CALLED

   7816  3 000032   000000 236000 2                  LDQ     STATUS
         3 000033   200000 316003                    CANQ    65536,DU
         3 000034   000037 600000 3                  TZE     s:7819

      336     7817    1       THEN CALL INITIALIZE ALTRET(STD_ALTRET_CODE);

   7817  3 000035   000205 701000 3                  TSX1    INITIALIZE
         3 000036   000203 702000 3                  TSX2    STD_ALTRET_CODE

      337     7818
      338     7819    1       IF B$JIT.PRFLAGS.CONTINUED

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:34   
   7819  3 000037   000000 470400 xsym               LDP0    B$JIT$
         3 000040   000030 430100                    FSZN    24,,PR0
         3 000041   000130 605000 3                  TPL     s:7861

      339     7820    2       THEN DO;

      340     7821
      341     7822        /*
      342     7823             The following code reads the next record from then
      343     7824             continuation file.  It is assumed that the file has been opened
      344     7825             by the initialization routine and that the DCB number has been
      345     7826             stuffed into the FPT for the read. If this winds up being the
      346     7827             EOF, then return with P_PARAM.CMD_COMPLETE set and indicate
      347     7828             internally that another call here is illegal. DCB cleanup will
      348     7829             occur in XUX$CLEANUP.
      349     7830        */
      350     7831
      351     7832    2           IF STATUS.FIRST_TIME

   7832  3 000042   000000 236000 2                  LDQ     STATUS
         3 000043   100000 316003                    CANQ    32768,DU
         3 000044   000121 600000 3                  TZE     s:7853

      352     7833    3           THEN DO;

      353     7834    3               CALL READ  ALTRET(STD_ALTRET_CODE);

   7834  3 000045   000306 701000 3                  TSX1    READ
         3 000046   000203 702000 3                  TSX2    STD_ALTRET_CODE

      354     7835    3               RUNNING_ARS = CONT_DCB$->F$DCB.ARS#;

   7835  3 000047   000002 470400 2                  LDP0    CONT_DCB$
         3 000050   000000 235100                    LDA     0,,PR0
         3 000051   200004 755100                    STA     RUNNING_ARS,,AUTO

      355     7836    3               IF P_PARAM.DISP_ONLY#
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:35   

   7836  3 000052   200003 471500                    LDP1    @P_PARAM,,AUTO
         3 000053   100005 234100                    SZN     5,,PR1
         3 000054   000113 605000 3                  TPL     s:7847

      356     7837    4               THEN DO;

      357     7838    5                   DO WHILE RUNNING_ARS-1 < B$JIT.CCDISP;

   7838  3 000055   000064 710000 3                  TRA     s:7841

      358     7839    5                       CALL READ ALTRET(STD_ALTRET_CODE);

   7839  3 000056   000306 701000 3                  TSX1    READ
         3 000057   000203 702000 3                  TSX2    STD_ALTRET_CODE

      359     7840    5                       RUNNING_ARS = RUNNING_ARS+CONT_DCB$->F$DCB.ARS#;

   7840  3 000060   000002 470400 2                  LDP0    CONT_DCB$
         3 000061   200004 236100                    LDQ     RUNNING_ARS,,AUTO
         3 000062   000000 036100                    ADLQ    0,,PR0
         3 000063   200004 756100                    STQ     RUNNING_ARS,,AUTO

      360     7841    5                   END;

   7841  3 000064   000000 471400 xsym               LDP1    B$JIT$
         3 000065   100032 236100                    LDQ     26,,PR1
         3 000066   000022 736000                    QLS     18
         3 000067   000022 732000                    QRS     18
         3 000070   200004 116100                    CMPQ    RUNNING_ARS,,AUTO
         3 000071   000056 605000 3                  TPL     s:7839

      361     7842    4                   CALL INDEX(I,'(',SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,CONT_DCB$->
              7842                            F$DCB.ARS#));

   7842  3 000072   200003 473500                    LDP3    @P_PARAM,,AUTO
         3 000073   300001 474500                    LDP4    1,,PR3
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:36   
         3 000074   000000 720100                    LXL0    0,,PR0
         3 000075   000000 124540                    SCM     mask='000'O
         3 000076   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         3 000077   000001 000001 4                  ADSC9   1                        cn=0,n=1
         3 000100   200005 000100                    ARG     I,,AUTO

      362     7843    4                   P_PARAM.CMD_LEN = CONT_DCB$->F$DCB.ARS#-I;

   7843  3 000101   000000 236100                    LDQ     0,,PR0
         3 000102   200005 136100                    SBLQ    I,,AUTO
         3 000103   000000 620006                    EAX0    0,QL
         3 000104   300002 740100                    STX0    2,,PR3

      363     7844    4                  SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,P_PARAM.CMD_LEN) = SUBSTR(VBASE
              7844                            (P_PARAM.BUFFER_)->BUF,I,P_PARAM.CMD_LEN);

   7844  3 000105   300002 221100                    LDX1    2,,PR3
         3 000106   200005 235100                    LDA     I,,AUTO
         3 000107   040140 100545                    MLR     fill='040'O
         3 000110   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1
         3 000111   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0

      364     7845    4               END;

   7845  3 000112   000116 710000 3                  TRA     s:7849

      365     7846    3               ELSE
      366     7847    3                   P_PARAM.CMD_LEN = B$JIT.CCDISP;

   7847  3 000113   000000 473400 xsym               LDP3    B$JIT$
         3 000114   300032 720100                    LXL0    26,,PR3
         3 000115   100002 740100                    STX0    2,,PR1

      367     7848
      368     7849    3               STATUS.FIRST_TIME = '0'B;

   7849  3 000116   000004 236000 4                  LDQ     4
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:37   
         3 000117   000000 356000 2                  ANSQ    STATUS

      369     7850    3           END;     /* Of first time only code */

   7850  3 000120   000202 710000 3                  TRA     s:7885

      370     7851
      371     7852    3           ELSE DO;

      372     7853    3               CALL READ ALTRET(STD_ALTRET_CODE);

   7853  3 000121   000306 701000 3                  TSX1    READ
         3 000122   000203 702000 3                  TSX2    STD_ALTRET_CODE

      373     7854    3               P_PARAM.CMD_LEN = CONT_DCB$->F$DCB.ARS#;

   7854  3 000123   000002 470400 2                  LDP0    CONT_DCB$
         3 000124   000000 720100                    LXL0    0,,PR0
         3 000125   200003 471500                    LDP1    @P_PARAM,,AUTO
         3 000126   100002 740100                    STX0    2,,PR1

      374     7855    3           END;

      375     7856    2       END;   /* Of code for continued lines */

   7856  3 000127   000202 710000 3                  TRA     s:7885

      376     7857
      377     7858    2       ELSE DO;

      378     7859
      379     7860
      380     7861    2           IF STATUS.FIRST_TIME

   7861  3 000130   000000 236000 2                  LDQ     STATUS
         3 000131   100000 316003                    CANQ    32768,DU
         3 000132   000173 600000 3                  TZE     s:7877
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:38   

      381     7862    3           THEN DO;

      382     7863    3               IF P_PARAM.DISP_ONLY#

   7863  3 000133   200003 471500                    LDP1    @P_PARAM,,AUTO
         3 000134   100005 234100                    SZN     5,,PR1
         3 000135   000160 605000 3                  TPL     s:7869

      383     7864    4               THEN DO;

      384     7865    4                   P_PARAM.CMD_LEN = B$JIT.CCARS-B$JIT.CCDISP;

   7865  3 000136   000032 236100                    LDQ     26,,PR0
         3 000137   000022 736000                    QLS     18
         3 000140   000022 732000                    QRS     18
         3 000141   200112 756100                    STQ     FPT_OPEN+58,,AUTO
         3 000142   000032 236100                    LDQ     26,,PR0
         3 000143   000022 732000                    QRS     18
         3 000144   200112 136100                    SBLQ    FPT_OPEN+58,,AUTO
         3 000145   000000 620006                    EAX0    0,QL
         3 000146   100002 740100                    STX0    2,,PR1

      385     7866    4                  SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,P_PARAM.CMD_LEN) = SUBSTR(B$JIT
              7866                            .CCBUF,B$JIT.CCDISP,P_PARAM.CMD_LEN);

   7866  3 000147   100001 473500                    LDP3    1,,PR1
         3 000150   000032 236100                    LDQ     26,,PR0
         3 000151   000022 736000                    QLS     18
         3 000152   000022 732000                    QRS     18
         3 000153   100002 221100                    LDX1    2,,PR1
         3 000154   040140 100546                    MLR     fill='040'O
         3 000155   000033 000011                    ADSC9   27,Q,PR0                 cn=0,n=*X1
         3 000156   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      386     7867    4               END;

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:39   
   7867  3 000157   000170 710000 3                  TRA     s:7873

      387     7868    4               ELSE DO;

      388     7869    4                   SUBSTR(VBASE(P_PARAM.BUFFER_)->BUF,0,B$JIT.CCARS) = B$JIT.CCBUF;

   7869  3 000160   100001 473500                    LDP3    1,,PR1
         3 000161   000032 220100                    LDX0    26,,PR0
         3 000162   040140 100500                    MLR     fill='040'O
         3 000163   000033 000400                    ADSC9   27,,PR0                  cn=0,n=256
         3 000164   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      389     7870    4                   P_PARAM.CMD_LEN = B$JIT.CCARS;

   7870  3 000165   000000 470400 xsym               LDP0    B$JIT$
         3 000166   000032 220100                    LDX0    26,,PR0
         3 000167   100002 740100                    STX0    2,,PR1

      390     7871    4               END;

      391     7872
      392     7873    3               STATUS.FIRST_TIME = '0'B;

   7873  3 000170   000004 236000 4                  LDQ     4
         3 000171   000000 356000 2                  ANSQ    STATUS

      393     7874    3           END;

   7874  3 000172   000202 710000 3                  TRA     s:7885

      394     7875
      395     7876    3           ELSE DO;

      396     7877    3               P_PARAM.CMD_COMPLETE = '1'B;

   7877  3 000173   400000 236003                    LDQ     -131072,DU
         3 000174   200003 471500                    LDP1    @P_PARAM,,AUTO
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:40   
         3 000175   100004 756100                    STQ     4,,PR1

      397     7878    3               STATUS.DONT_COME_BACK = '1'B;

   7878  3 000176   000000 256000 2                  ORSQ    STATUS

      398     7879    3               P_PARAM.CMD_LEN = 0;

   7879  3 000177   000000 220003                    LDX0    0,DU
         3 000200   100002 740100                    STX0    2,,PR1

      399     7880    3               ALTRETURN;

   7880  3 000201   000000 702200 xent               TSX2  ! X66_AALT

      400     7881    3           END;
      401     7882
      402     7883    2       END; /* Of non-continued stuff */
      403     7884
      404     7885    2       DO WHILE '0'B;

   7885  3 000202   000204 710000 3                  TRA     s:7888

      405     7886    2   STD_ALTRET_CODE:
      406     7887    2           ALTRETURN;

   7887  3 000203   000000 702200 xent  STD_ALTRET_* TSX2  ! X66_AALT

      407     7888    2       END;

   7888  3 000204   000362 710000 3                  TRA     s:8156

      408     7889
      409     7890        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:41   
      410     7891        /*
      411     7892             Internal routines for XUX$GETLINE
      412     7893        */
      413     7894
      414     7895
      415     7896        /*I*
      416     7897             NAME: INITIALIZE
      417     7898             PURPOSE:
      418     7899                  Performs initialization for XUX$GETLINE. Gets a dcb (if needed)
      419     7900                  and sets up some variables.
      420     7901             CALL:
      421     7902                  CALL INITIALIZE ALTRET;
      422     7903             PARAMETERS:
      423     7904                          Altret reason is returned in P_PARAM.ERROR_CODE.
      424     7905             DATA:
      425     7906                  B$JIT
      426     7907             DESCRIPTION:
      427     7908                 This module allocates a DCB to read the continuation file
      428     7909                 through if B$JIT.PRFLAGS.CONTINUED is set, and sets up a
      429     7910                 couple of useful variables.
      430     7911        */
      431     7912
      432     7913    1   INITIALIZE: PROC ALTRET;

   7913  3 000205   200006 741300       INITIALIZE   STX1  ! I+1,,AUTO

      433     7914        %FPT_GETDCB(STCLASS=);
      434     7929        %FPT_OPEN(STCLASS=);
      435     8038
      436     8039    2       STATUS.FIRST_TIME = '1'B;

   8039  3 000206   100000 236003                    LDQ     32768,DU
         3 000207   000000 256000 2                  ORSQ    STATUS

      437     8040    2       P_PARAM.CMD_COMPLETE = '0'B; /* In case the guy didn't do it himself */

   8040  3 000210   200003 470500                    LDP0    @P_PARAM,,AUTO
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:42   
         3 000211   000004 450100                    STZ     4,,PR0

      438     8041
      439     8042    2       STATUS.NOT_CALLED = '0'B;

   8042  3 000212   000005 236000 4                  LDQ     5
         3 000213   000000 356000 2                  ANSQ    STATUS

      440     8043    2       IF B$JIT.PRFLAGS.CONTINUED

   8043  3 000214   000000 471400 xsym               LDP1    B$JIT$
         3 000215   100030 430100                    FSZN    24,,PR1
         3 000216   000304 605000 3                  TPL     s:8068

      441     8044    3       THEN DO;

      442     8045    3           FPT_GETDCB = GET_DCB;

   8045  3 000217   000100 100400                    MLR     fill='000'O
         3 000220   000000 000040 1                  ADSC9   GET_DCB                  cn=0,n=32
         3 000221   200010 000040                    ADSC9   FPT_GETDCB,,AUTO         cn=0,n=32

      443     8046    3           FPT_GETDCB.V_ = VECTOR(FPT_GETDCB.V);

   8046  3 000222   000006 235000 4                  LDA     6
         3 000223   200112 452500                    STP2    FPT_OPEN+58,,AUTO
         3 000224   200112 236100                    LDQ     FPT_OPEN+58,,AUTO
         3 000225   000016 036003                    ADLQ    14,DU
         3 000226   200010 757100                    STAQ    FPT_GETDCB,,AUTO

      444     8047
      445     8048    3           CALL M$GETDCB(FPT_GETDCB)

   8048  3 000227   200010 630500                    EPPR0   FPT_GETDCB,,AUTO
         3 000230   460002 713400                    CLIMB   alt,+24578
         3 000231   401000 401760                    pmme    nvectors=3
         3 000232   000234 702000 3                  TSX2    s:8050
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:43   
         3 000233   000245 710000 3                  TRA     s:8055

      446     8049    4           WHENALTRETURN DO;

      447     8050    4               P_PARAM.ERROR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   8050  3 000234   000000 470400 xsym               LDP0    B$TCB$
         3 000235   000000 471500                    LDP1    0,,PR0
         3 000236   100102 236100                    LDQ     66,,PR1
         3 000237   200003 473500                    LDP3    @P_PARAM,,AUTO
         3 000240   300003 756100                    STQ     3,,PR3

      448     8051    4               STATUS.DONT_COME_BACK = '1'B;

   8051  3 000241   400000 236003                    LDQ     -131072,DU
         3 000242   000000 256000 2                  ORSQ    STATUS

      449     8052    4               ALTRETURN;

   8052  3 000243   200006 221300                    LDX1  ! I+1,,AUTO
         3 000244   000000 702211                    TSX2  ! 0,X1

      450     8053    4           END;
      451     8054
      452     8055    3           CONT_DCB# = FPT_GETDCB.V.DCB#;

   8055  3 000245   200016 235100                    LDA     FPT_CLOSE+6,,AUTO
         3 000246   000022 771000                    ARL     18
         3 000247   000001 755000 2                  STA     CONT_DCB#

      453     8056    3           CONT_DCB$ = DCBADDR(CONT_DCB#);

   8056  3 000250   000007 470400 4                  LDP0    7
         3 000251   000000 471500                    LDP1    0,,PR0
         3 000252   100000 236105                    LDQ     0,AL,PR1
         3 000253   000002 756000 2                  STQ     CONT_DCB$

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:44   
      454     8057    3           FPT_OPEN = OPEN_CMD;

   8057  3 000254   000100 100400                    MLR     fill='000'O
         3 000255   000014 000350 1                  ADSC9   OPEN_CMD                 cn=0,n=232
         3 000256   200020 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      455     8058    3           FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

   8058  3 000257   000010 235000 4                  LDA     8
         3 000260   200112 452500                    STP2    FPT_OPEN+58,,AUTO
         3 000261   200112 236100                    LDQ     FPT_OPEN+58,,AUTO
         3 000262   000064 036003                    ADLQ    52,DU
         3 000263   200020 757100                    STAQ    FPT_OPEN,,AUTO

      456     8059    3           FPT_OPEN.V.DCB# = CONT_DCB#;

   8059  3 000264   000001 720000 2                  LXL0    CONT_DCB#
         3 000265   200064 740100                    STX0    FPT_OPEN+36,,AUTO

      457     8060    3           CALL M$OPEN(FPT_OPEN)

   8060  3 000266   200020 630500                    EPPR0   FPT_OPEN,,AUTO
         3 000267   450000 713400                    CLIMB   alt,open
         3 000270   410400 401760                    pmme    nvectors=18
         3 000271   000273 702000 3                  TSX2    s:8062
         3 000272   000304 710000 3                  TRA     s:8068

      458     8061    4           WHENALTRETURN DO;

      459     8062    4               P_PARAM.ERROR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   8062  3 000273   000000 470400 xsym               LDP0    B$TCB$
         3 000274   000000 471500                    LDP1    0,,PR0
         3 000275   100102 236100                    LDQ     66,,PR1
         3 000276   200003 473500                    LDP3    @P_PARAM,,AUTO
         3 000277   300003 756100                    STQ     3,,PR3

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:45   
      460     8063    4               STATUS.DONT_COME_BACK = '1'B;

   8063  3 000300   400000 236003                    LDQ     -131072,DU
         3 000301   000000 256000 2                  ORSQ    STATUS

      461     8064    4               ALTRETURN;

   8064  3 000302   200006 221300                    LDX1  ! I+1,,AUTO
         3 000303   000000 702211                    TSX2  ! 0,X1

      462     8065    4           END;
      463     8066    3       END;

      464     8067
      465     8068    2   END INITIALIZE;

   8068  3 000304   200006 221300                    LDX1  ! I+1,,AUTO
         3 000305   000001 702211                    TSX2  ! 1,X1

      466     8069
      467     8070        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:46   
      468     8071        /*I*
      469     8072             NAME: READ
      470     8073             PURPOSE:
      471     8074                  Read a line from the continuation file.
      472     8075             CALL:
      473     8076                  CALL READ ALTRET;
      474     8077             PARAMETERS:
      475     8078                  On altreturn, error code is passed back in P_PARAM.ERROR_CODE.
      476     8079             DATA:
      477     8080                  P_PARAMS.BUFFER_
      478     8081                  CONT_DCB#
      479     8082             DESCRIPTION:
      480     8083                  This module will read a line from *CONTINUATION_COMMAND and
      481     8084                  return it in VBASE(P_BUFFER_)->BUF. Length will get pulled
      482     8085                  out in the calling routine, since on the first call we might have
      483     8086                  to get over to CCDISP. On EOF, the CMD_COMPLETE bit is set and
      484     8087                  the length is set to 0. Also the internal DONT_COME_BACK bit
      485     8088                  is set.
      486     8089        */
      487     8090    1   READ: PROC ALTRET;

   8090  3 000306   200006 741300       READ         STX1  ! I+1,,AUTO

      488     8091
      489     8092        %FPT_READ(STCLASS=);
      490     8131
      491     8132    2       FPT_READ = READ_CMD;

   8132  3 000307   000100 100400                    MLR     fill='000'O
         3 000310   000106 000070 1                  ADSC9   READ_CMD                 cn=0,n=56
         3 000311   200010 000070                    ADSC9   FPT_READ,,AUTO           cn=0,n=56

      492     8133    2       FPT_READ.V_ = VECTOR(FPT_READ.V);

   8133  3 000312   000011 235000 4                  LDA     9
         3 000313   200112 452500                    STP2    FPT_OPEN+58,,AUTO
         3 000314   200112 236100                    LDQ     FPT_OPEN+58,,AUTO
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:47   
         3 000315   000020 036003                    ADLQ    16,DU
         3 000316   200010 757100                    STAQ    FPT_READ,,AUTO

      493     8134    2       FPT_READ.V.DCB# = CONT_DCB#;

   8134  3 000317   000001 720000 2                  LXL0    CONT_DCB#
         3 000320   200020 740100                    STX0    FPT_OPEN,,AUTO

      494     8135    2       FPT_READ.BUF_ = P_PARAM.BUFFER_;

   8135  3 000321   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 000322   000000 237100                    LDAQ    0,,PR0
         3 000323   200014 757100                    STAQ    FPT_CLOSE+4,,AUTO

      495     8136
      496     8137    2       CALL M$READ(FPT_READ)

   8137  3 000324   200010 630500                    EPPR0   FPT_READ,,AUTO
         3 000325   440000 713400                    CLIMB   alt,read
         3 000326   401400 401760                    pmme    nvectors=4
         3 000327   000331 702000 3                  TSX2    s:8139
         3 000330   000360 710000 3                  TRA     s:8154

      497     8138    3       WHENALTRETURN DO;

      498     8139    3           IF CONT_DCB$->F$DCB.TYC.EOF#

   8139  3 000331   000002 470400 2                  LDP0    CONT_DCB$
         3 000332   000002 236100                    LDQ     2,,PR0
         3 000333   004000 316003                    CANQ    2048,DU
         3 000334   000345 600000 3                  TZE     s:8147

      499     8140    4           THEN DO;

      500     8141    4               P_PARAM.CMD_COMPLETE = '1'B;

   8141  3 000335   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:48   
         3 000336   200003 471500                    LDP1    @P_PARAM,,AUTO
         3 000337   100004 756100                    STQ     4,,PR1

      501     8142    4               P_PARAM.CMD_LEN     = 0;

   8142  3 000340   000000 220003                    LDX0    0,DU
         3 000341   100002 740100                    STX0    2,,PR1

      502     8143    4               STATUS.DONT_COME_BACK = '1'B;

   8143  3 000342   000000 256000 2                  ORSQ    STATUS

      503     8144    4               ALTRETURN;

   8144  3 000343   200006 221300                    LDX1  ! I+1,,AUTO
         3 000344   000000 702211                    TSX2  ! 0,X1

      504     8145    4           END;
      505     8146    4           ELSE DO;

      506     8147    4               P_PARAM.ERROR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   8147  3 000345   000000 471400 xsym               LDP1    B$TCB$
         3 000346   100000 473500                    LDP3    0,,PR1
         3 000347   300102 236100                    LDQ     66,,PR3
         3 000350   200003 474500                    LDP4    @P_PARAM,,AUTO
         3 000351   400003 756100                    STQ     3,,PR4

      507     8148    4               P_PARAM.CMD_LEN = 0;

   8148  3 000352   000000 220003                    LDX0    0,DU
         3 000353   400002 740100                    STX0    2,,PR4

      508     8149    4               STATUS.DONT_COME_BACK = '1'B;

   8149  3 000354   400000 236003                    LDQ     -131072,DU
         3 000355   000000 256000 2                  ORSQ    STATUS
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:49   

      509     8150    4               ALTRETURN;

   8150  3 000356   200006 221300                    LDX1  ! I+1,,AUTO
         3 000357   000000 702211                    TSX2  ! 0,X1

      510     8151    4           END;
      511     8152    3       END;
      512     8153
      513     8154    2   END READ;

   8154  3 000360   200006 221300                    LDX1  ! I+1,,AUTO
         3 000361   000001 702211                    TSX2  ! 1,X1

      514     8155
      515     8156    1       RETURN;

   8156  3 000362   000000 702200 xent               TSX2  ! X66_ARET

      516     8157        %EJECT;
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:50   
      517     8158        /*F*
      518     8159             NAME:  XUX$CLEANUP Service
      519     8160             ..::IT "Format:"
      520     8161                  CALL XUX$CLEANUP;
      521     8162             ..::IT "Parameters:"
      522     8163                  None
      523     8164             ..::IT "Description:"
      524     8165                  The XUX$CLEANUP service should be called after a
      525     8166                  complete command has been read via calls to XUX$GETLINE.
      526     8167                  This service makes it appear that XUX$GETLINE was never
      527     8168                  called.  This is useful if the command line needs to be
      528     8169                  re-read, for instance.
      529     8170             ..::IT "Error Conditions:"
      530     8171                  None.
      531     8172        */
      532     8173        /*D*
      533     8174             NAME: XUX$CLEANUP
      534     8175             CALL:
      535     8176                  CALL XUX$CLEANUP ;
      536     8177             INTERFACE:
      537     8178                  M$CLOSE
      538     8179                  M$RELDCB
      539     8180             SCRATCH:
      540     8181                  STATUS.NOT_CALLED
      541     8182                  STATUS.FIRST_TIME
      542     8183                  STATUS.DONT_COME_BACK
      543     8184             DESCRIPTION:
      544     8185                  This module gets called after all the continuation lines have
      545     8186                  been read in. It closes the continuation file and releases the
      546     8187                  DCB (if needed), and resets the status flags to make it appear
      547     8188                  that the routines have never been called.
      548     8189        */
      549     8190
      550     8191    1   XUX$CLEANUP: ENTRY ALTRET;

   8191  3 000363   000000 700200 xent  XUX$CLEANUP  TSX0  ! X66_AUTO_1
         3 000364   000114 000001                    ZERO    76,1
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:51   

      551     8192
      552     8193    1       IF CONT_DCB# ~= DCBNUM(NIL)

   8193  3 000365   000001 235000 2                  LDA     CONT_DCB#
         3 000366   000373 600000 3                  TZE     s:8199

      553     8194    2       THEN DO;

      554     8195    2           CALL CLOSE;

   8195  3 000367   000431 701000 3                  TSX1    CLOSE
         3 000370   000000 011000                    NOP     0

      555     8196    2           CALL RELEASE;

   8196  3 000371   000402 701000 3                  TSX1    RELEASE
         3 000372   000000 011000                    NOP     0

      556     8197    2       END;

      557     8198
      558     8199    1       STATUS.NOT_CALLED = '1'B;

   8199  3 000373   200000 236003                    LDQ     65536,DU
         3 000374   000000 256000 2                  ORSQ    STATUS

      559     8200    1       STATUS.FIRST_TIME = '1'B;

   8200  3 000375   100000 236003                    LDQ     32768,DU
         3 000376   000000 256000 2                  ORSQ    STATUS

      560     8201    1       STATUS.DONT_COME_BACK = '0'B;

   8201  3 000377   000031 236000 xsym               LDQ     B_VECTNIL+25
         3 000400   000000 356000 2                  ANSQ    STATUS

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:52   
      561     8202
      562     8203    1       RETURN;

   8203  3 000401   000000 702200 xent               TSX2  ! X66_ARET

      563     8204
      564     8205        /*I*
      565     8206             NAME: RELEASE
      566     8207             PURPOSE:
      567     8208                  Release the continuation file DCB, if needed.
      568     8209             CALL:
      569     8210                  CALL RELEASE;
      570     8211             DATA:
      571     8212                  CONT_DCB#
      572     8213             DESCRIPTION:
      573     8214                  Releases the continuation DCB.
      574     8215                  Monitor call altrets are ignored.
      575     8216        */
      576     8217    1   RELEASE: PROC;

   8217  3 000402   200006 741300       RELEASE      STX1  ! I+1,,AUTO

      577     8218        %FPT_RELDCB(STCLASS=);
      578     8232
      579     8233    2       FPT_RELDCB = REL_DCB;

   8233  3 000403   000100 100400                    MLR     fill='000'O
         3 000404   000010 000020 1                  ADSC9   REL_DCB                  cn=0,n=16
         3 000405   200010 000020                    ADSC9   FPT_RELDCB,,AUTO         cn=0,n=16

      580     8234    2       FPT_RELDCB.V_ = VECTOR(FPT_RELDCB.V);

   8234  3 000406   000006 235000 4                  LDA     6
         3 000407   200112 452500                    STP2    FPT_OPEN+58,,AUTO
         3 000410   200112 236100                    LDQ     FPT_OPEN+58,,AUTO
         3 000411   000012 036003                    ADLQ    10,DU
         3 000412   200010 757100                    STAQ    FPT_RELDCB,,AUTO
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:53   

      581     8235    2       FPT_RELDCB.V.DCB# = CONT_DCB#;

   8235  3 000413   000001 720000 2                  LXL0    CONT_DCB#
         3 000414   200012 740100                    STX0    FPT_CLOSE+2,,AUTO

      582     8236
      583     8237    2       CALL M$RELDCB(FPT_RELDCB)

   8237  3 000415   200010 630500                    EPPR0   FPT_RELDCB,,AUTO
         3 000416   460003 713400                    CLIMB   alt,+24579
         3 000417   400000 401760                    pmme    nvectors=1
         3 000420   000422 702000 3                  TSX2    s:8242
         3 000421   000422 710000 3                  TRA     s:8242

      584     8238    3       WHENALTRETURN DO;

      585     8239             /* NOTHING */
      586     8240    3       END;

      587     8241
      588     8242    2       CONT_DCB# = DCBNUM(NIL);

   8242  3 000422   000001 450000 2                  STZ     CONT_DCB#

      589     8243    2       CONT_DCB$ = DCBADDR(DCBNUM(NIL));

   8243  3 000423   000007 470400 4                  LDP0    7
         3 000424   000000 471500                    LDP1    0,,PR0
         3 000425   100000 236100                    LDQ     0,,PR1
         3 000426   000002 756000 2                  STQ     CONT_DCB$

      590     8244
      591     8245    2   END RELEASE;

   8245  3 000427   200006 221300                    LDX1  ! I+1,,AUTO
         3 000430   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:54   

      592     8246        /*I*
      593     8247             NAME: CLOSE
      594     8248             PURPOSE:
      595     8249                  Closes the continuation file.
      596     8250             CALL:
      597     8251                  CALL CLOSE;
      598     8252             DATA:
      599     8253                  CONT_DCB#
      600     8254             DESCRIPTION:
      601     8255                  Closes the continuation file.
      602     8256                  Monitor call ALTRETs are ignored.
      603     8257        */
      604     8258    1   CLOSE: PROC;

   8258  3 000431   200006 741300       CLOSE        STX1  ! I+1,,AUTO

      605     8259
      606     8260        %FPT_CLOSE(STCLASS=);
      607     8302
      608     8303    2       FPT_CLOSE = CLOSE_CMD;

   8303  3 000432   000100 100400                    MLR     fill='000'O
         3 000433   000132 000170 1                  ADSC9   CLOSE_CMD                cn=0,n=120
         3 000434   200010 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      609     8304    2       FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

   8304  3 000435   000012 235000 4                  LDA     10
         3 000436   200112 452500                    STP2    FPT_OPEN+58,,AUTO
         3 000437   200112 236100                    LDQ     FPT_OPEN+58,,AUTO
         3 000440   000042 036003                    ADLQ    34,DU
         3 000441   200010 757100                    STAQ    FPT_CLOSE,,AUTO

      610     8305    2       FPT_CLOSE.V.DCB# = CONT_DCB#;

   8305  3 000442   000001 720000 2                  LXL0    CONT_DCB#
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:55   
         3 000443   200042 740100                    STX0    FPT_OPEN+18,,AUTO

      611     8306
      612     8307    2       CALL M$CLOSE(FPT_CLOSE)

   8307  3 000444   200010 630500                    EPPR0   FPT_CLOSE,,AUTO
         3 000445   450001 713400                    CLIMB   alt,close
         3 000446   406000 401760                    pmme    nvectors=13
         3 000447   000451 702000 3                  TSX2    s:8312
         3 000450   000451 710000 3                  TRA     s:8312

      613     8308    3       WHENALTRETURN DO;

      614     8309             /* NOTHING */
      615     8310    3       END;

      616     8311
      617     8312    2       RETURN;

   8312  3 000451   200006 221300                    LDX1  ! I+1,,AUTO
         3 000452   000001 702211                    TSX2  ! 1,X1
      618     8313
      619     8314    2   END CLOSE;
      620     8315
      621     8316    1   END XUX$MAIN;
      622     8317        %EOD;

PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:56   
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XUX$MAIN.
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:57   

 **** Variables and constants ****

  ****  Section 001 RoData XUX$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   132-0-0/d STRC(1080)  r     1 CLOSE_CMD                124-0-0/c STRC(207)   r     1 CONT_FILE
     0-0-0/d STRC(288)   r     1 GET_DCB                   14-0-0/d STRC(2088)  r     1 OPEN_CMD
   106-0-0/d STRC(504)   r     1 READ_CMD                  10-0-0/d STRC(144)   r     1 REL_DCB
   170-0-0/w STRC        r     1 XUX_ERR

  ****  Section 002  Data  XUX$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w UBIN        r     1 CONT_DCB#                  2-0-0/w PTR         r     1 CONT_DCB$
     0-0-0/w STRC        r     1 STATUS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P_PARAM                  10-0-0/d STRC(1080)  r     1 FPT_CLOSE
    10-0-0/d STRC(288)   r     1 FPT_GETDCB                20-0-0/d STRC(2088)  r     1 FPT_OPEN
    10-0-0/d STRC(504)   r     1 FPT_READ                  10-0-0/d STRC(144)   r     1 FPT_RELDCB
     5-0-0/w SBIN        r     1 I                         *0-0-0/d STRC(360)   r     1 P_PARAM
     4-0-0/w SBIN        r     1 RUNNING_ARS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:58   

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/c CHAR(256)   r     1 BUF
     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure XUX$MAIN requires 299 words for executable code.
   Procedure XUX$MAIN requires 76 words of local(AUTO) storage.
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:59   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:60   
          MINI XREF LISTING

B$ALT.CODE
      7664**DCL      7664--REDEF    7665--REDEF    7665--REDEF
B$ALT.ERR
      7665**DCL      8050>>ASSIGN   8062>>ASSIGN   8147>>ASSIGN
B$ALT.ERR.ERR#
      7666**DCL      7666--REDEF
B$ALT.EVID
      7665**DCL      7665--REDEF    7665--REDEF
B$JIT.CCARS
      6234**DCL      7865>>ASSIGN   7869>>ASSIGN   7870>>ASSIGN
B$JIT.CCBUF
      6234**DCL      7866>>ASSIGN   7869>>ASSIGN
B$JIT.CCDISP
      6234**DCL      7838>>DOWHILE  7847>>ASSIGN   7865>>ASSIGN   7866>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      6240**DCL      6240--REDEF
B$JIT.ERR.MID
      6147**DCL      6147--REDEF
B$JIT.PRFLAGS.CONTINUED
      6230**DCL      7819>>IF       8043>>IF
B$JIT$
      7672**DCL      6141--IMP-PTR  7819>>IF       7838>>DOWHILE  7847>>ASSIGN   7865>>ASSIGN   7865>>ASSIGN
      7866>>ASSIGN   7866>>ASSIGN   7869>>ASSIGN   7869>>ASSIGN   7870>>ASSIGN   8043>>IF
B$TCB.ALT$
      7660**DCL      8050>>ASSIGN   8062>>ASSIGN   8147>>ASSIGN
B$TCB$
      7671**DCL      8050>>ASSIGN   8062>>ASSIGN   8147>>ASSIGN
BUF
      7790**DCL      7842>>CALLBLT  7844<<ASSIGN   7844>>ASSIGN   7866<<ASSIGN   7869<<ASSIGN
CLOSE
      8258**PROC     8195--CALL
CLOSE_CMD
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:61   
      7635**DCL      8303>>ASSIGN
CLOSE_CMD.SN_
      7635**DCL      7635--REDEF
CLOSE_CMD.UTL_
      7636**DCL      7636--REDEF
CLOSE_CMD.V
      7640**DCL      7635--DCLINIT
CLOSE_CMD.V.EXPIRE#
      7650**DCL      7650--REDEF
CLOSE_CMD.V.TYPE#
      7648**DCL      7648--REDEF
CLOSE_CMD.V.XTNSIZE#
      7645**DCL      7645--REDEF    7647--REDEF
CONT_DCB#
      7684**DCL      8055<<ASSIGN   8056--ASSIGN   8059>>ASSIGN   8134>>ASSIGN   8193>>IF       8235>>ASSIGN
      8242<<ASSIGN   8305>>ASSIGN
CONT_DCB$
      7685**DCL      7835>>ASSIGN   7840>>ASSIGN   7842>>CALLBLT  7843>>ASSIGN   7854>>ASSIGN   8056<<ASSIGN
      8139>>IF       8243<<ASSIGN
CONT_FILE
      7609**DCL      7501--DCLINIT
F$DCB.ACTPOS
      7719**DCL      7719--REDEF
F$DCB.ARS#
      7693**DCL      7693--REDEF    7835>>ASSIGN   7840>>ASSIGN   7842>>CALLBLT  7843>>ASSIGN   7854>>ASSIGN
F$DCB.ATTR
      7712**DCL      7713--REDEF
F$DCB.BORROW
      7727**DCL      7727--REDEF    7727--REDEF    7727--REDEF
F$DCB.DCBNAME.L
      7741**DCL      7741--IMP-SIZ
F$DCB.EOMCHAR#
      7697**DCL      7697--REDEF
F$DCB.FLDID
      7722**DCL      7722--REDEF
F$DCB.FORM$
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:62   
      7716**DCL      7716--REDEF
F$DCB.FSECT
      7732**DCL      7732--REDEF
F$DCB.FSN#
      7709**DCL      7709--REDEF    7709--REDEF    7710--REDEF
F$DCB.HEADER$
      7715**DCL      7715--REDEF
F$DCB.IXTNSIZE#
      7713**DCL      7713--REDEF
F$DCB.LASTSTA$
      7702**DCL      7702--REDEF
F$DCB.LVL
      7728**DCL      7728--REDEF
F$DCB.NAME#.C
      7703**DCL      7703--REDEF
F$DCB.NOEOF
      7725**DCL      7725--REDEF
F$DCB.NRECS#
      7714**DCL      7714--REDEF
F$DCB.NRECX
      7733**DCL      7733--REDEF
F$DCB.OHDR
      7725**DCL      7725--REDEF
F$DCB.ORG#
      7708**DCL      7708--REDEF
F$DCB.PRECNO
      7731**DCL      7731--REDEF
F$DCB.RCSZ
      7737**DCL      7737--REDEF
F$DCB.RES#
      7704**DCL      7704--REDEF
F$DCB.SETX
      7716**DCL      7716--REDEF
F$DCB.TAB$
      7716**DCL      7716--REDEF
F$DCB.TDA
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:63   
      7730**DCL      7731--REDEF
F$DCB.TYC.EOF#
      7694**DCL      8139>>IF
F$DCB.WSN#
      7704**DCL      7704--REDEF
FPT_CLOSE IN PROCEDURE CLOSE
      8283**DCL      8303<<ASSIGN   8307<>CALL
FPT_CLOSE.SN_ IN PROCEDURE CLOSE
      8283**DCL      8283--REDEF
FPT_CLOSE.UTL_ IN PROCEDURE CLOSE
      8284**DCL      8284--REDEF
FPT_CLOSE.V IN PROCEDURE CLOSE
      8288**DCL      8304--ASSIGN
FPT_CLOSE.V.DCB# IN PROCEDURE CLOSE
      8289**DCL      8305<<ASSIGN
FPT_CLOSE.V.EXPIRE# IN PROCEDURE CLOSE
      8298**DCL      8298--REDEF
FPT_CLOSE.V.TYPE# IN PROCEDURE CLOSE
      8296**DCL      8296--REDEF
FPT_CLOSE.V.XTNSIZE# IN PROCEDURE CLOSE
      8293**DCL      8293--REDEF    8295--REDEF
FPT_CLOSE.V_ IN PROCEDURE CLOSE
      8283**DCL      8304<<ASSIGN
FPT_GETDCB IN PROCEDURE INITIALIZE
      7925**DCL      8045<<ASSIGN   8048<>CALL
FPT_GETDCB.V IN PROCEDURE INITIALIZE
      7926**DCL      8046--ASSIGN
FPT_GETDCB.V.DCB# IN PROCEDURE INITIALIZE
      7926**DCL      8055>>ASSIGN
FPT_GETDCB.V_ IN PROCEDURE INITIALIZE
      7925**DCL      8046<<ASSIGN
FPT_OPEN IN PROCEDURE INITIALIZE
      7994**DCL      8057<<ASSIGN   8060<>CALL
FPT_OPEN.ACSVEH_ IN PROCEDURE INITIALIZE
      7996**DCL      7997--REDEF
FPT_OPEN.ALTKEYS_ IN PROCEDURE INITIALIZE
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:64   
      8002**DCL      8003--REDEF    8003--REDEF
FPT_OPEN.HDR_ IN PROCEDURE INITIALIZE
      8001**DCL      8002--REDEF
FPT_OPEN.TAB_ IN PROCEDURE INITIALIZE
      8000**DCL      8001--REDEF
FPT_OPEN.UHL_ IN PROCEDURE INITIALIZE
      7994**DCL      7995--REDEF    7995--REDEF
FPT_OPEN.V IN PROCEDURE INITIALIZE
      8003**DCL      8058--ASSIGN
FPT_OPEN.V.DCB# IN PROCEDURE INITIALIZE
      8003**DCL      8059<<ASSIGN
FPT_OPEN.V.FSN# IN PROCEDURE INITIALIZE
      8034**DCL      8034--REDEF    8034--REDEF
FPT_OPEN.V_ IN PROCEDURE INITIALIZE
      7994**DCL      8058<<ASSIGN
FPT_OPEN.WSN_ IN PROCEDURE INITIALIZE
      8000**DCL      8000--REDEF
FPT_READ IN PROCEDURE READ
      8109**DCL      8132<<ASSIGN   8137<>CALL
FPT_READ.BUF_ IN PROCEDURE READ
      8111**DCL      8135<<ASSIGN
FPT_READ.STATION_ IN PROCEDURE READ
      8112**DCL      8113--REDEF
FPT_READ.V IN PROCEDURE READ
      8113**DCL      8133--ASSIGN
FPT_READ.V.DCB# IN PROCEDURE READ
      8113**DCL      8134<<ASSIGN
FPT_READ.V.DVBYTE.REREAD# IN PROCEDURE READ
      8124**DCL      8124--REDEF
FPT_READ.V.INDX# IN PROCEDURE READ
      8122**DCL      8122--REDEF
FPT_READ.V_ IN PROCEDURE READ
      8109**DCL      8133<<ASSIGN
FPT_RELDCB IN PROCEDURE RELEASE
      8229**DCL      8233<<ASSIGN   8237<>CALL
FPT_RELDCB.V IN PROCEDURE RELEASE
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:65   
      8229**DCL      8234--ASSIGN
FPT_RELDCB.V.DCB# IN PROCEDURE RELEASE
      8229**DCL      8235<<ASSIGN
FPT_RELDCB.V_ IN PROCEDURE RELEASE
      8229**DCL      8234<<ASSIGN
GET_DCB
      7417**DCL      8045>>ASSIGN
GET_DCB.V
      7418**DCL      7417--DCLINIT
I
      7793**DCL      7842<<CALLBLT  7843>>ASSIGN   7844>>ASSIGN
INITIALIZE
      7913**PROC     7817--CALL
M$CLOSE
      5747**DCL-ENT  8307--CALL
M$GETDCB
      5753**DCL-ENT  8048--CALL
M$OPEN
      5747**DCL-ENT  8060--CALL
M$READ
      5748**DCL-ENT  8137--CALL
M$RELDCB
      5753**DCL-ENT  8237--CALL
OPEN_CMD
      7500**DCL      8057>>ASSIGN
OPEN_CMD.ACSVEH_
      7502**DCL      7503--REDEF
OPEN_CMD.ALTKEYS_
      7508**DCL      7509--REDEF    7509--REDEF
OPEN_CMD.HDR_
      7507**DCL      7508--REDEF
OPEN_CMD.TAB_
      7506**DCL      7507--REDEF
OPEN_CMD.UHL_
      7500**DCL      7501--REDEF    7501--REDEF
OPEN_CMD.V
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:66   
      7509**DCL      7500--DCLINIT
OPEN_CMD.V.FSN#
      7540**DCL      7540--REDEF    7540--REDEF
OPEN_CMD.WSN_
      7506**DCL      7506--REDEF
P_PARAM
      7318**DCL       258--PROC     7801--ENTRY
P_PARAM.BUFFER_
      7322**DCL      7809>>IF       7842>>CALLBLT  7844>>ASSIGN   7844>>ASSIGN   7866>>ASSIGN   7869>>ASSIGN
      8135>>ASSIGN
P_PARAM.CMD_COMPLETE
      7383**DCL      7877<<ASSIGN   8040<<ASSIGN   8141<<ASSIGN
P_PARAM.CMD_LEN
      7328**DCL      7843<<ASSIGN   7844>>ASSIGN   7844>>ASSIGN   7847<<ASSIGN   7854<<ASSIGN   7865<<ASSIGN
      7866>>ASSIGN   7866>>ASSIGN   7870<<ASSIGN   7879<<ASSIGN   8142<<ASSIGN   8148<<ASSIGN
P_PARAM.DISP_ONLY#
      7390**DCL      7836>>IF       7863>>IF
P_PARAM.ERROR_CODE
      7346**DCL      7804<<ASSIGN   7811<<ASSIGN   8050<<ASSIGN   8062<<ASSIGN   8147<<ASSIGN
P_PARAM.ERROR_CODE.ERR#
      7374**DCL      7805<<ASSIGN   7812<<ASSIGN
READ
      8090**PROC     7834--CALL     7839--CALL     7853--CALL
READ_CMD
      7561**DCL      8132>>ASSIGN
READ_CMD.STATION_
      7564**DCL      7565--REDEF
READ_CMD.V
      7565**DCL      7561--DCLINIT
READ_CMD.V.DVBYTE.REREAD#
      7576**DCL      7576--REDEF
READ_CMD.V.INDX#
      7574**DCL      7574--REDEF
RELEASE
      8217**PROC     8196--CALL
REL_DCB
PL6.E3A0      #001=XUX$MAIN File=XUX$COMMON_OPTIONS.:E05TSI                      WED 07/30/97 09:46 Page:67   
      7432**DCL      8233>>ASSIGN
REL_DCB.V
      7432**DCL      7432--DCLINIT
RUNNING_ARS
      7792**DCL      7835<<ASSIGN   7838>>DOWHILE  7840<<ASSIGN   7840>>ASSIGN
STATUS.DONT_COME_BACK
      7679**DCL      7802>>IF       7813<<ASSIGN   7878<<ASSIGN   8051<<ASSIGN   8063<<ASSIGN   8143<<ASSIGN
      8149<<ASSIGN   8201<<ASSIGN
STATUS.FIRST_TIME
      7681**DCL      7832>>IF       7849<<ASSIGN   7861>>IF       7873<<ASSIGN   8039<<ASSIGN   8200<<ASSIGN
STATUS.NOT_CALLED
      7680**DCL      7816>>IF       8042<<ASSIGN   8199<<ASSIGN
STD_ALTRET_CODE
      7887**LABEL    7817--CALLALT  7834--CALLALT  7839--CALLALT  7853--CALLALT
XUX_ERR
      7756**DCL      7804>>ASSIGN   7811>>ASSIGN

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:68   
      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
      629        7        /*F*
      630        8             NAME:  XUX$COMMON_OPTIONS Service
      631        9             ..::IT "Format:"
      632       10                  CALL XUX$COMMON_OPTIONS (name) ALTRET (label);
      633       11             ..::IT "Parameters:"
      634       12                  name^^^^can be generated by invoking the macro
      635       13                  %XUX$PARAM.  That structure points to a number of other
      636       14                  parameter blocks which may be generated by the following
      637       15                  macros:  XUX$LEGAL_OPTIONS, XUX$STD_OPTIONS, XUX$BC_UNIT,
      638       16                  XUX$SRCH_LIST.
      639       17             ..::IT "Description:"
      640       18                  The XUX$COMMON_OPTIONS service parses the processor
      641       19                  invocation, based on various parameters that the caller
      642       20                  supplies.  These parameters include which (if any) of the
      643       21                  standard options are to be considered legal.  Other
      644       22                  parameters are pointers to the parse results block, the
      645       23                  list of accounts to search (if this is legal), the BC
      646       24                  compile unit numbers, and the user's non-standard node
      647       25                  handler, if supplied.
      648       26
      649       27                  On return from XUX$COMMON_OPTIONS, the XUX$STD_OPTIONS block
      650       28                  bits are set corresponding to the options found on the
      651       29                  processor invocation.
      652       30                  If no options are specified, then the CP-6 system defaults
      653       31                  of UI, LS, OU, BC(ALL), MSCHEMA, and NWARN are set.
      654       32                  The UI, LS, and OU options are also set by examining
      655       33                  the JIT flags to determine if anything was
      656       34                  present in the UI, OU and/or LS DCB positions.  In
      657       35                  addition, MSCHEMA will be forced (and will override
      658       36                  user-specified NSCHEMA) if any of the following are
      659       37                  specified:  DMAP, MDMAP, PMAP, MPMAP.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:69   
      660       38
      661       39                  If non-standard options are to be used, then the proper bit
      662       40                  in XUX$LEGAL_OPTIONS must be set indicating this, and the
      663       41                  user-supplied nodes must be linked together with the
      664       42                  program.  The user nodes should be produced using
      665       43                  the PARTRGE processor to produce an object unit.
      666       44                  ..::HL "(See Appendix A\(Type !HELP (PARTRGE)"
      667       45                  for information on PARTRGE.)
      668       46                  The user sets XUX$PARAM.USER_NODES$ to ADDR(his_nodes).
      669       47                  When any non-standard option
      670       48                  is encountered, the user routine pointed to by
      671       49                  XUX$PARAM.USER_ROUTINE$$ is entered with a pointer to
      672       50                  the head of the non-standard node, and with a BIT(1)
      673       51                  variable as a parameter.  The user's routine should then
      674       52                  process this node and return, or ALTRETurn if the command
      675       53                  cannot be processed.  The BIT(1) variable should be set
      676       54                  to '1'B if the user's routine desires further processing by
      677       55                  XUX$COMMON_OPTIONS to cease and ALTRETurn to occur
      678       56                  immediately, or
      679       57                  '0'B if processing is to continue.  When the variable is
      680       58                  set to '1'B, XUX$COMMON_OPTIONS takes the ALTRETurn with
      681       59                  the XUX$PARAM.ERROR# flag set, and XUX$ERROR_CODE indicates
      682       60                  that an internal error occurred.
      683       61                  ..::IT "Error Conditions:"
      684       62                  If the XUX$COMMON_OPTIONS service encounters any errors
      685       63                  while parsing, one of several things may occur.  If the user
      686       64                  specified either DCB1 or DCB2 or both on the XUX$PARAM
      687       65                  macro, then if the error is a user error (such as a syntax
      688       66                  error), XUX$COMMON_OPTIONS writes an appropriate error
      689       67                  message through the DCB(s) and attempts to continue
      690       68                  processing.  If the error is internal (such as specifying
      691       69                  that BC is a valid option but failing to provide an
      692       70                  XUX$BC_UNIT structure) or if DCBs are specified for
      693       71                  neither DCB1 nor DCB2, the XUX$COMMON_OPTIONS service ALTRETurns
      694       72                  immediately upon encountering the error, with the error
      695       73                  code in XUX$PARAM.ERROR_CODE and with XUX$PARAM.ERROR# set
      696       74                  to '1'B indicating unprocessed errors.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:70   
      697       75
      698       76                  It is the calling
      699       77                  program's responsibility to handle and report these errors.
      700       78                  Note that in the case where no DCBs are specified and a
      701       79                  user error occurs, the error code returned may be of
      702       80                  little use since there is no way to supply the error
      703       81                  message substitution fields, nor is there any way to
      704       82                  determine exactly where the error occurred, since
      705       83                  continuation lines may have been involved.
      706       84
      707       85                  If any errors
      708       86                  occur at all, the XUX$COMMON_OPTIONS service ALTRETurns
      709       87                  after all processing is complete with the error code in
      710       88                  XUX$PARAM.ERROR_CODE regardless of whether DCB1/DCB2 are
      711       89                  used.
      712       90        */
      713       91        /*D*
      714       92             NAME: XUX$COMMON_OPTIONS
      715       93             CALL:
      716       94                  CALL XUX$COMMON_OPTIONS(XUX$PARAM) ALTRET;
      717       95             PARAMETERS:
      718       96                  XUX$PARAM  - a parameter block generated by the XUX$PARAM macro.
      719       97             INTERFACE:
      720       98                  XUX$GETLINE
      721       99                  XUX$CLEANUP
      722      100                  M$ERRMSG
      723      101             INPUT:
      724      102                  Parameters specified by XUX$PARAM.
      725      103             OUTPUT:
      726      104                  Parameters specified by XUX$PARAM.
      727      105             DESCRIPTION:
      728      106                  This the main routine of the common options parser. Basically,
      729      107                  the following things occur: Parameter checking is performed to
      730      108                  make sure that all parameter specified have been done so
      731      109                  correctly. XUX$GETLINE is called as necessary to fetch the
      732      110                  command line, which is then passed to X$PARSE. The returned
      733      111                  nodes are used to fill in XUX$STD_OPTIONS, in accordance
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:71   
      734      112                  with options specified in XUX$LEGAL_OPTIONS. Error checking
      735      113                  is provided for duplicate and conflicting options and the
      736      114                  user is informed of same. Finally, XUX$CLEANUP is called and
      737      115                  control returns to the caller.  See AF# 0765A-0 for more
      738      116                  information.
      739      117        */
      740      118
      741      119        XUX$COMMON_OPTIONS: PROC (P_PARAM) ALTRET;
      742      120
      743      121        /*
      744      122             Include files
      745      123        */
      746      124
      747      125        %INCLUDE XUX$INTERFACE_M;
      748      902        %INCLUDE XUX$NODESUBS_C;
      749      963        %INCLUDE CP_6;
      750     6522        %INCLUDE CP_6_SUBS;
      751     7062        %INCLUDE U$JIT_C;
      752     7561        %INCLUDE XU_MACRO_C;
      753    10667        %INCLUDE XU_PERR_C;
      754    10858        %INCLUDE XU_SUBS_C;
      755    10950
      756    10951        /*
      757    10952             Parameters
      758    10953        */
      759    10954
      760    10955        %XUX$PARAM(NAME=P_PARAM,STCLASS=PARAM);
      761    11096
      762    11097        /*
      763    11098             Entries
      764    11099        */
      765    11100
      766    11101    1   DCL XUX$GETLINE ENTRY(1) ALTRET;
      767    11102    1   DCL XUX$CLEANUP ENTRY ALTRET;
      768    11103    1   DCL X$PARSE ENTRY(1) ALTRET;
      769    11104    1   DCL XUX$ERROR ENTRY(8) ALTRET;
      770    11105    1   DCL XUX$ERROR1 ENTRY(8) ALTRET;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:72   
      771    11106    1   DCL XUX$MORE_INPUT ENTRY(1);
      772    11107
      773    11108
      774    11109        /*
      775    11110             Symref'd data
      776    11111        */
      777    11112    1   DCL XUX$NODES    UBIN  SYMREF;
      778    11113    1   DCL XUX$DEFAULT_NSTD_NODES UBIN SYMREF;
      779    11114        /*
      780    11115             System interface data
      781    11116        */
      782    11117
      783    11118        %B$TCB;
      784    11121        %B$ALT;
      785    11129
      786    11130    1   DCL B$JIT$ PTR SYMREF;
      787    11131    1   DCL B$TCB$ PTR SYMREF;
      788    11132
      789    11133        %FPT_ERRMSG(STCLASS=CONSTANT,NREAD=YES);
      790    11160        %FPT_ERRMSG(FPTN=PARSE_ERRMSG,STCLASS=AUTO);
      791    11187
      792    11188        %FPT_CORRES(STCLASS=CONSTANT);
      793    11202        %FPT_CORRES(FPTN=CORRES,STCLASS=AUTO);
      794    11216
      795    11217        %FPT_FID(STCLASS=CONSTANT);
      796    11240        %FPT_FID(FPTN=FID,STCLASS=AUTO);
      797    11263        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
      798    11282
      799    11283        /*
      800    11284             Parse Data
      801    11285        */
      802    11286
      803    11287        %P_PCB(
      804    11288                NAME=XUX$PCB,
      805    11289                R=XUX$NODES,
      806    11290                U$=XUX$MORE_INPUT,
      807    11291                STCLASS=STATIC SYMDEF);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:73   
      808    11490        %PARSE$OUT(NAME=OPT$OUT,STCLASS="BASED(BLK$)");
      809    11535        %PARSE$SYM(NAME=OPT$SYM,STCLASS="BASED(BLK$)");
      810    11573    1   DCL BLK$ PTR;
      811    11574    1   DCL NSUBLKS SBIN;
      812    11575        /*      CHANGE THE FOLLOWING TO USE THE NEW MACRO AND PARSER!!!!!  */
      813    11576        %P$NODE(NAME=XUX$NSTD,
      814    11577                STCLASS=STATIC SYMDEF,
      815    11578                NDTYPE=KONCAT,
      816    11579                #SUBNODES=1,
      817    11580                SUBNODES="ADDR(XUX$DEFAULT_NSTD_NODES)");
      818    11674        /*
      819    11675             Local Data
      820    11676        */
      821    11677
      822    11678        %XUX$LEGAL_OPTIONS(STCLASS=BASED);
      823    11805        %XUX$STD_OPTIONS(STCLASS=BASED);
      824    11969        %XUX$BC_UNIT(STCLASS=BASED);
      825    12006        %XUX$SRCH_LIST(STCLASS=BASED);
      826    12101        %XUX$SRCH_LIST(NAME=XUX$FID_ONLY,FID_ONLY=YES,STCLASS=);
      827    12196        %VLP_ERRCODE(FPTN=XUX_ERR,FCG=XU,MID=X,STCLASS=CONSTANT);
      828    12241
      829    12242        %XUX$PARAM(NAME=XUX,STCLASS=);
      830    12383        %XUX$STD_OPTIONS(NAME=STD,STCLASS=);
      831    12547        %XUX$LEGAL_OPTIONS(NAME=LEGAL,STCLASS=);
      832    12674        %XUX$SRCH_LIST(NAME=SEARCH_LIST,STCLASS="BASED(SEARCH_LIST$)");
      833    12769
      834    12770        %XUX$PARAM_NO_PARSE(STCLASS=CONSTANT);
      835    12881        %XUX$PARAM_NO_PARSE(NAME=GETLINE_PARAM,STCLASS=);
      836    12992
      837    12993    1   DCL XUX$MEM VECTOR STATIC SYMDEF INIT(VECTOR(NIL));  /* Vector for GDS mem */
      838    12994
      839    12995    1   DCL XUX$MEM$ PTR;
      840    12996
      841    12997        %XUX$INFO;
      842    13149
      843    13150    1   DCL REC_INDEX(0:1023) UBIN BASED;
      844    13151
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:74   
      845    13152    1   DCL BUF CHAR(256) ALIGNED BASED;
      846    13153
      847    13154    1   DCL I SBIN;
      848    13155    1   DCL J SBIN;
      849    13156    1   DCL K SBIN;
      850    13157    1   DCL TEMP SBIN WORD WALIGNED;
      851    13158    1   DCL LOOP SBIN;
      852    13159    1   DCL TEMP_OPT CHAR(20);
      853    13160    1   DCL TEMP_LEN SBIN;
      854    13161    1   DCL IND              SBIN;
      855    13162    1   DCL NUM_SRCH_ACCTS   SBIN  ALIGNED;
      856    13163    1   DCL SEARCH_LIST$     PTR;
      857    13164    1   DCL SRCH_LIST_SIZE   SBIN;
      858    13165    1   DCL SRCH_LIST_BUFFER CHAR(SRCH_LIST_SIZE) ALIGNED  BASED;
      859    13166
      860    13167    1   DCL BIT_VAL BIT(1) ALIGNED;
      861    13168
      862    13169    1   DCL DM_CHK(0:2) BIT(4) UNAL;
      863    13170    1   DCL 1 NDM,
      864    13171    1         2 BITS(0:3) BIT(1) UNAL;
      865    13172    1   DCL 1 NMDM,
      866    13173    1         2 BITS(0:3) BIT(1) UNAL;
      867    13174
      868    13175    1   DCL TEMP_BUF CHAR(256);
      869    13176
      870    13177
      871    13178    1   DCL TEMP_VECT VECTOR;  /* This is because PL6 won't allow BITVECT on
      872    13179                                  the left side of an expression */
      873    13180
      874    13181        %XUX$STD_OPTIONS(NAME=GOT_OPTIONS,STCLASS=AUTO);
      875    13345        %XUX$BC_UNIT(NAME=TEMP_BC,STCLASS=AUTO);
      876    13382
      877    13383    1   DCL 1 GOT,
      878    13384    1         2 BC UBIN HALF,
      879    13385    1         2 LS UBIN HALF,
      880    13386    1         2 OU UBIN HALF,
      881    13387    1         2 SO UBIN HALF,
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:75   
      882    13388    1         2 UI UBIN HALF,
      883    13389    1         2 WARN UBIN HALF,
      884    13390    1         2 PMAP UBIN HALF,
      885    13391    1         2 SCHEMA UBIN HALF,
      886    13392    1         2 UREF UBIN HALF,
      887    13393    1         2 XREF UBIN HALF,
      888    13394    1         2 LO UBIN HALF,
      889    13395    1         2 SRCH UBIN HALF,
      890    13396    1         2 DMAP UBIN HALF,
      891    13397    1         2 MDMAP UBIN HALF,
      892    13398    1         2 NSTD UBIN HALF;
      893    13399
      894    13400
      895    13401
      896    13402    1   DCL 1  SRCH_FID,
      897    13403    1         2  NAME  CHAR(32),
      898    13404    1         2  ACCT  CHAR(8),
      899    13405    1         2  PASS  CHAR(8),
      900    13406    1         2  SN    CHAR(10),
      901    13407    1         2  WSN   CHAR(8),
      902    13408    1         2  ASN   UBIN BYTE,
      903    13409    1         2  RES   CHAR(4);
      904    13410
      905    13411    1   DCL 1  TEMP_FID,
      906    13412    1         2  ACCT CHAR(8),
      907    13413    1         2  PASS CHAR(8),
      908    13414    1         2  SN   CHAR(10),
      909    13415    1         2  WSN CHAR(8),
      910    13416    1         2  ASN UBIN BYTE,
      911    13417    1         2  RES CHAR(4),
      912    13418    1         2  NAME CHAR(32);
      913    13419    1   DCL CURRENT_ACCOUNT_FID CHAR(0) CONSTANT INIT('.');
      914    13420    1   DCL DEFAULT_SRCH_ACCOUNT_FID CHAR(0) CONSTANT INIT ('.:LIBRARY');
      915    13421    1   DCL 1 OPT_MSG BASED(T$),
      916    13422    1         2 LEN UBIN BYTE CALIGNED,
      917    13423    1         2 TEXT CHAR(OPT_MSG.LEN);
      918    13424    1   DCL T$ PTR;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:76   
      919    13425
      920    13426    1   DCL 1 T ALIGNED CONSTANT,
      921    13427        %SET NEXT = 1;
      922    13428        %EQU OFF_DMAP = NEXT;
      923    13429    1         2 * UBIN BYTE CALIGNED INIT(4),
      924    13430    1         2 * CHAR(4) CALIGNED INIT('DMAP'),
      925    13431        %SET NEXT = NEXT + 5;
      926    13432        %EQU OFF_NDMAP = NEXT;
      927    13433    1         2 * UBIN BYTE CALIGNED INIT(5),
      928    13434    1         2 * CHAR(5) CALIGNED INIT('NDMAP'),
      929    13435        %SET NEXT = NEXT + 6;
      930    13436        %EQU OFF_MDMAP = NEXT;
      931    13437    1         2 * UBIN BYTE CALIGNED INIT(5),
      932    13438    1         2 * CHAR(5) CALIGNED INIT('MDMAP'),
      933    13439        %SET NEXT = NEXT + 6;
      934    13440        %EQU OFF_NMDMAP = NEXT;
      935    13441    1         2 * UBIN BYTE CALIGNED INIT(6),
      936    13442    1         2 * CHAR(6) CALIGNED INIT('NMDMAP'),
      937    13443        %SET NEXT = NEXT + 7;
      938    13444        %EQU OFF_LO = NEXT;
      939    13445    1         2 * UBIN BYTE CALIGNED INIT(2),
      940    13446    1         2 * CHAR(2) CALIGNED INIT('LO'),
      941    13447        %SET NEXT = NEXT + 3;
      942    13448        %EQU OFF_NLO = NEXT;
      943    13449    1         2 * UBIN BYTE CALIGNED INIT(3),
      944    13450    1         2 * CHAR(3) CALIGNED INIT('NLO'),
      945    13451        %SET NEXT = NEXT + 4;
      946    13452        %EQU OFF_LS = NEXT;
      947    13453    1         2 * UBIN BYTE CALIGNED INIT(2),
      948    13454    1         2 * CHAR(2) CALIGNED INIT('LS'),
      949    13455        %SET NEXT = NEXT + 3;
      950    13456        %EQU OFF_NLS = NEXT;
      951    13457    1         2 * UBIN BYTE CALIGNED INIT(3),
      952    13458    1         2 * CHAR(3) CALIGNED INIT('NLS'),
      953    13459        %SET NEXT = NEXT + 4;
      954    13460        %EQU OFF_OU = NEXT;
      955    13461    1         2 * UBIN BYTE CALIGNED INIT(2),
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:77   
      956    13462    1         2 * CHAR CALIGNED INIT('OU'),
      957    13463        %SET NEXT = NEXT + 3;
      958    13464        %EQU OFF_NOU = NEXT;
      959    13465    1         2 * UBIN BYTE CALIGNED INIT(3),
      960    13466    1         2 * CHAR(3) CALIGNED INIT('NOU'),
      961    13467        %SET NEXT = NEXT + 4;
      962    13468        %EQU OFF_PMAP = NEXT;
      963    13469    1         2 * UBIN BYTE CALIGNED INIT(4),
      964    13470    1         2 * CHAR(4) CALIGNED INIT('PMAP'),
      965    13471        %SET NEXT = NEXT + 5;
      966    13472        %EQU OFF_MPMAP = NEXT;
      967    13473    1         2 * UBIN BYTE CALIGNED INIT(5),
      968    13474    1         2 * CHAR(5) CALIGNED INIT('MPMAP'),
      969    13475        %SET NEXT = NEXT + 6;
      970    13476        %EQU OFF_NPMAP = NEXT;
      971    13477    1         2 * UBIN BYTE CALIGNED INIT(5),
      972    13478    1         2 * CHAR(5) CALIGNED INIT('NPMAP'),
      973    13479        %SET NEXT = NEXT + 6;
      974    13480        %EQU OFF_SCHEMA = NEXT;
      975    13481    1         2 * UBIN BYTE CALIGNED INIT(6),
      976    13482    1         2 * CHAR(6) CALIGNED INIT('SCHEMA'),
      977    13483        %SET NEXT = NEXT + 7;
      978    13484        %EQU OFF_NSCHEMA = NEXT;
      979    13485    1         2 * UBIN BYTE CALIGNED INIT(7),
      980    13486    1         2 * CHAR(7) CALIGNED INIT('NSCHEMA'),
      981    13487        %SET NEXT = NEXT + 8;
      982    13488        %EQU OFF_MSCHEMA = NEXT;
      983    13489    1         2 * UBIN BYTE CALIGNED INIT(7),
      984    13490    1         2 * CHAR(7) CALIGNED INIT('MSCHEMA'),
      985    13491        %SET NEXT = NEXT + 8;
      986    13492        %EQU OFF_SO = NEXT;
      987    13493    1         2 * UBIN BYTE CALIGNED INIT(2),
      988    13494    1         2 * CHAR(2) CALIGNED INIT('SO'),
      989    13495        %SET NEXT = NEXT + 3;
      990    13496        %EQU OFF_NSO = NEXT;
      991    13497    1         2 * UBIN BYTE CALIGNED INIT(3),
      992    13498    1         2 * CHAR(3) CALIGNED INIT('NSO'),
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:78   
      993    13499        %SET NEXT = NEXT + 4;
      994    13500        %EQU OFF_SRCH = NEXT;
      995    13501    1         2 * UBIN BYTE CALIGNED INIT(4),
      996    13502    1         2 * CHAR(4) CALIGNED INIT('SRCH'),
      997    13503        %SET NEXT = NEXT + 5;
      998    13504        %EQU OFF_UI = NEXT;
      999    13505    1         2 * UBIN BYTE CALIGNED INIT(2),
     1000    13506    1         2 * CHAR(2) CALIGNED INIT('UI'),
     1001    13507        %SET NEXT = NEXT + 3;
     1002    13508        %EQU OFF_NUI = NEXT;
     1003    13509    1         2 * UBIN BYTE CALIGNED INIT(3),
     1004    13510    1         2 * CHAR(3) CALIGNED INIT('NUI'),
     1005    13511        %SET NEXT = NEXT + 4;
     1006    13512        %EQU OFF_OPTUI = NEXT;
     1007    13513    1         2 * UBIN BYTE CALIGNED INIT(5),
     1008    13514    1         2 * CHAR(5) CALIGNED INIT('OPTUI'),
     1009    13515        %SET NEXT = NEXT + 6;
     1010    13516        %EQU OFF_UREF = NEXT;
     1011    13517    1         2 * UBIN BYTE CALIGNED INIT(4),
     1012    13518    1         2 * CHAR(4) CALIGNED INIT('UREF'),
     1013    13519        %SET NEXT = NEXT + 5;
     1014    13520        %EQU OFF_NUREF = NEXT;
     1015    13521    1         2 * UBIN BYTE CALIGNED INIT(5),
     1016    13522    1         2 * CHAR(5) CALIGNED INIT('NUREF'),
     1017    13523        %SET NEXT = NEXT + 6;
     1018    13524        %EQU OFF_MUREF = NEXT;
     1019    13525    1         2 * UBIN BYTE CALIGNED INIT(5),
     1020    13526    1         2 * CHAR(5) CALIGNED INIT('MUREF'),
     1021    13527        %SET NEXT = NEXT + 6;
     1022    13528        %EQU OFF_WARN = NEXT;
     1023    13529    1         2 * UBIN BYTE CALIGNED INIT(4),
     1024    13530    1         2 * CHAR(4) CALIGNED INIT('WARN'),
     1025    13531        %SET NEXT = NEXT + 5;
     1026    13532        %EQU OFF_NWARN = NEXT;
     1027    13533    1         2 * UBIN BYTE CALIGNED INIT(5),
     1028    13534    1         2 * CHAR(5) CALIGNED INIT('NWARN'),
     1029    13535        %SET NEXT = NEXT + 6;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:79   
     1030    13536        %EQU OFF_XREF = NEXT;
     1031    13537    1         2 * UBIN BYTE CALIGNED INIT(4),
     1032    13538    1         2 * CHAR(4) CALIGNED INIT('XREF'),
     1033    13539        %SET NEXT = NEXT + 5;
     1034    13540        %EQU OFF_NXREF = NEXT;
     1035    13541    1         2 * UBIN BYTE CALIGNED INIT(5),
     1036    13542    1         2 * CHAR(5) CALIGNED INIT('NXREF'),
     1037    13543        %SET NEXT = NEXT + 6;
     1038    13544        %EQU OFF_MXREF = NEXT;
     1039    13545    1         2 * UBIN BYTE CALIGNED INIT(5),
     1040    13546    1         2 * CHAR(5) CALIGNED INIT('MXREF'),
     1041    13547        %SET NEXT = NEXT + 6;
     1042    13548        %EQU OFF_BC = NEXT;
     1043    13549    1         2 * UBIN BYTE CALIGNED INIT(2),
     1044    13550    1         2 * CHAR(2) CALIGNED INIT('BC');
     1045    13551        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:80   
     1046    13552        /*
     1047    13553             First do some preliminary error checking of the parameters.
     1048    13554             i.e. Make sure that if LEGAL_OPTIONS.BC is specified that
     1049    13555             BC_UNIT is not nil in the param block.
     1050    13556        */
     1051    13557
     1052    13558    1       IF ADDR(P_PARAM) = ADDR(NIL)
     1053    13559    2       THEN DO;
     1054    13560    2           ALTRETURN; /* Can't even pass back a code, since we don't
     1055    13561                            know anything without the param block.   */
     1056    13562    2       END;
     1057    13563
     1058    13564    1       IF (P_PARAM.LEGAL_OPTIONS$->XUX$LEGAL_OPTIONS.SRCH_SIZ#)
     1059    13565    1       THEN NUM_SRCH_ACCTS = P_PARAM.SRCH_LIST$->XUX$SRCH_LIST.NUM - 2;
     1060    13566    1       ELSE NUM_SRCH_ACCTS = %(XUX$ACCT_MAX - 2);
     1061    13567    1       CALL GET_MEM(3072 + SIZEW(XUX$INFO) + (NUM_SRCH_ACCTS + 2) * SIZEW(XUX$FID_ONLY)
             13567                + 2)
     1062    13568    2       WHENALTRETURN DO;
     1063    13569             /* This is a very special case. We'll do all the error setup
     1064    13570                without calling the error routine since it can't do anything
     1065    13571                anyway.
     1066    13572             */
     1067    13573    2           P_PARAM.ERROR_CODE = XUX_ERR;
     1068    13574    2           P_PARAM.ERROR_CODE.ERR# = %E$XUX#CANT_GET_MEM;
     1069    13575    2           P_PARAM.ERROR# = '1'B;     /* Indicate that it can't be handled */
     1070    13576    2           ALTRETURN;
     1071    13577    2       END;
     1072    13578
     1073    13579        /*  GET_MEM returns the vector of the memory we got in XUX$MEM  */
     1074    13580
     1075    13581    1       XUX$MEM$ = VBASE(XUX$MEM);
     1076    13582
     1077    13583    1       XUX$INFO.XUX = P_PARAM;
     1078    13584
     1079    13585    1       IF XUX$INFO.XUX.LEGAL_OPTIONS$ = ADDR(NIL)
     1080    13586    2       THEN DO;
     1081    13587    2           CALL XUX$ERROR (%E$XUX#MUST_HAVE_LEGAL_OPTIONS,'0'B) ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:81   
     1082    13588    2           GOTO I_BLEW_IT_INTERNALLY;
     1083    13589    2       END;
     1084    13590
     1085    13591    1       LEGAL = XUX$INFO.XUX.LEGAL_OPTIONS$->XUX$LEGAL_OPTIONS;
     1086    13592    1       SEARCH_LIST$ = PINCRW (XUX$MEM$, 3072 + SIZEW(XUX$INFO));
     1087    13593
     1088    13594
     1089    13595    1       IF XUX$INFO.XUX.STD_OPTIONS$ = ADDR(NIL)
     1090    13596    2       THEN DO;
     1091    13597    2           CALL XUX$ERROR (%E$XUX#MUST_HAVE_STD_OPTIONS,'0'B) ALTRET (GO_AWAY);
     1092    13598    2           GOTO I_BLEW_IT_INTERNALLY;
     1093    13599    2       END;
     1094    13600
     1095    13601    1       STD = XUX$INFO.XUX.STD_OPTIONS$->XUX$STD_OPTIONS;
     1096    13602
     1097    13603
     1098    13604    1       IF LEGAL.BC#
     1099    13605    2       THEN DO;
     1100    13606    2           IF XUX$INFO.XUX.BC_UNIT$ = ADDR(NIL)
     1101    13607    3           THEN DO;
     1102    13608    3               CALL XUX$ERROR(%E$XUX#NO_BC_STRUCT,'0'B) ALTRET (GO_AWAY);
     1103    13609    3               GOTO I_BLEW_IT_INTERNALLY;
     1104    13610    3           END;
     1105    13611    2       END;
     1106    13612
     1107    13613    1       IF LEGAL.SRCH#
     1108    13614    2       THEN DO;
     1109    13615    2           IF XUX$INFO.XUX.SRCH_LIST$ = ADDR(NIL)
     1110    13616    3           THEN DO;
     1111    13617    3               CALL XUX$ERROR(%E$XUX#NO_SRCH_LIST_STRUCT,'0'B) ALTRET (GO_AWAY);
     1112    13618    3               GOTO I_BLEW_IT_INTERNALLY;
     1113    13619    3           END;
     1114    13620    2       END;
     1115    13621
     1116    13622    1       IF LEGAL.NSTD#
     1117    13623    2       THEN DO;
     1118    13624    2           IF XUX$INFO.XUX.USER_ROUTINE$$ = ENTADDR(NIL) OR
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:82   
     1119    13625    2             XUX$INFO.XUX.USER_NODES$ = ADDR(NIL)
     1120    13626    3           THEN DO;
     1121    13627    3               XUX$NSTD.SUBNDS$(0) = ADDR(XUX$DEFAULT_NSTD_NODES);
     1122    13628    3               CALL XUX$ERROR(%E$XUX#NO_USER_ROUTINE,'0'B) ALTRET (GO_AWAY);
     1123    13629    3               GOTO I_BLEW_IT_INTERNALLY;
     1124    13630    3           END;
     1125    13631    3           ELSE DO;
     1126    13632    3               XUX$NSTD.SUBNDS$(0) = XUX$INFO.XUX.USER_NODES$;
     1127    13633    3           END;
     1128    13634    2       END;
     1129    13635    2       ELSE DO;
     1130    13636    2           XUX$NSTD.SUBNDS$(0) = ADDR(XUX$DEFAULT_NSTD_NODES);
     1131    13637    2       END;
     1132    13638
     1133    13639        /*
     1134    13640             Now do some internal initialization
     1135    13641        */
     1136    13642
     1137    13643    1       GOT_OPTIONS = '0'B;
     1138    13644    1       SEARCH_LIST.NUM = 0;
     1139    13645    1       GETLINE_PARAM = XUX$PARAM_NO_PARSE;
     1140    13646    1       GETLINE_PARAM.DISP_ONLY# = '1'B;
     1141    13647
     1142    13648        /*
     1143    13649             Set up the flags for UI,OU, and LS dcbs if allowed.
     1144    13650        */
     1145    13651
     1146    13652    1       IF B$JIT.PRFLAGS.UI
     1147    13653    2       THEN DO;
     1148    13654    2           IF LEGAL.DCB_UI#
     1149    13655    2           THEN GOT_OPTIONS.UI = '1'B;
     1150    13656    3           ELSE DO;
     1151    13657    3               CALL XUX$ERROR (%E$XUX#ILLEGAL_DCB_FOUND,'1'B,2,'UI') ALTRET(GO_AWAY);
     1152    13658    3           END;
     1153    13659    2       END;
     1154    13660
     1155    13661    1       IF B$JIT.PRFLAGS.OU
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:83   
     1156    13662    2       THEN DO;
     1157    13663    2           IF LEGAL.DCB_OU#
     1158    13664    2           THEN GOT_OPTIONS.OU = '1'B;
     1159    13665    3           ELSE DO;
     1160    13666    3               CALL XUX$ERROR (%E$XUX#ILLEGAL_DCB_FOUND,'1'B,2,'OU') ALTRET(GO_AWAY);
     1161    13667    3           END;
     1162    13668    2       END;
     1163    13669
     1164    13670    1       IF B$JIT.PRFLAGS.LS
     1165    13671    2       THEN DO;
     1166    13672    2           IF LEGAL.DCB_LS#
     1167    13673    2           THEN GOT_OPTIONS.LS = '1'B;
     1168    13674    3           ELSE DO;
     1169    13675    3               CALL XUX$ERROR (%E$XUX#ILLEGAL_DCB_FOUND,'1'B,2,'LS') ALTRET(GO_AWAY);
     1170    13676    3           END;
     1171    13677    2       END;
     1172    13678
     1173    13679        /*
     1174    13680             Set up the rest of the default options
     1175    13681        */
     1176    13682
     1177    13683    1       IF LEGAL.BC#
     1178    13684    1       THEN GOT_OPTIONS.BC = %XUX$ALL;   /* BC(ALL) */
     1179    13685    1       IF LEGAL.SCHEMA#
     1180    13686    1       THEN GOT_OPTIONS.SCHEMA = %XUX$MINI;    /* MSCHEMA */
     1181    13687    1       IF LEGAL.WARN#
     1182    13688    1       THEN GOT_OPTIONS.WARN = '0'B;     /* NWARN */
     1183    13689    1       IF LEGAL.SRCH#
     1184    13690    1       THEN GOT_OPTIONS.SRCH = '1'B;  /* SRCH(.:LIBRARY, . ) */
     1185    13691        /*
     1186    13692             It's parsing time!
     1187    13693
     1188    13694             Initialize the XUX$PARAM_NO_PARSE structure, the PCB
     1189    13695             structure, and start parsing.
     1190    13696             Also, allocate buffer space and work space for the parser from
     1191    13697             a data segment.
     1192    13698
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:84   
     1193    13699             In future versions, buffer size will be determined by
     1194    13700             B$JIT.CCARS when that is accurate. For now, we'll just use
     1195    13701             1k words each for the buffer and the parser areas, and 1k words
     1196    13702             for the array containing the start indexes of each record into
     1197    13703             the buffer.
     1198    13704        */
     1199    13705
     1200    13706    1       XUX$PCB.WKSZ=1024;    /* Set up the parse work area */
     1201    13707    1       XUX$INFO.WORK$=PINCRW(XUX$MEM$,SIZEW(XUX$INFO)+2048);
     1202    13708    1       XUX$PCB.WORK$=XUX$INFO.WORK$;        /* Use upper 1k for work */
     1203    13709
     1204    13710    1       XUX$INFO.REC_INDEX$ = PINCRW(XUX$MEM$,SIZEW(XUX$INFO)+1024);
             13710                /* Array for indexes */
     1205    13711
     1206    13712    1       XUX$INFO.PARSE_BUF$ = PINCRW(XUX$MEM$,SIZEW(XUX$INFO));
     1207    13713    1       XUX$INFO.BUF_SIZE = 1024;   /* Parse size is fixed at 1k words for now */
     1208    13714    1       GETLINE_PARAM.BUFFER_=VECTOR(XUX$INFO.PARSE_BUF$->BUF); /* Set up read buffer */
     1209    13715
     1210    13716    1       CALL XUX$GETLINE(GETLINE_PARAM)
     1211    13717    2       WHENALTRETURN DO;
     1212    13718    2           CALL XUX$ERROR1(GETLINE_PARAM.ERROR_CODE,'0'B) ALTRET(GO_AWAY);
     1213    13719    2           GOTO I_BLEW_IT_INTERNALLY;
     1214    13720    2       END;
     1215    13721
     1216    13722    1       XUX$INFO.REC_INDEX$->REC_INDEX(0) = 0; /* First record always starts at 0 */
     1217    13723    1       XUX$INFO.RECNO = 1;
     1218    13724
     1219    13725    1       IF LEGAL.LS#
     1220    13726    1       THEN GOT_OPTIONS.LS = '1'B;
     1221    13727    1       IF LEGAL.OU#
     1222    13728    1       THEN GOT_OPTIONS.OU = '1'B;
     1223    13729    1       IF GETLINE_PARAM.CMD_LEN ~= 0
     1224    13730    2       THEN DO;
     1225    13731    2           XUX$PCB.NCHARS = GETLINE_PARAM.CMD_LEN;
     1226    13732    2           XUX$PCB.TEXT$ = XUX$INFO.PARSE_BUF$;
     1227    13733    2           XUX$PCB.USER$ = ADDR(LEGAL);
     1228    13734    2           CALL X$PARSE (XUX$PCB) ALTRET (PARSE_ALTRET);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:85   
     1229    13735
     1230    13736        /* Now do the fun stuff. A giant do case looks at each of the parse
     1231    13737           nodes as they come back and does interesting and useful stuff with
     1232    13738           each of them.
     1233    13739        */
     1234    13740
     1235    13741    2           GOT = '0'B; /* We ain't got nuthin' yet */
     1236    13742    2           NDM = '0'B;
     1237    13743    2           NMDM = '0'B;
     1238    13744    2           GOT_OPTIONS.DMAP = '0'B;
     1239    13745    2           GOT_OPTIONS.MDMAP = '0'B;
     1240    13746    2           NSUBLKS = XUX$PCB.OUT$->OPT$OUT.NSUBLKS;
     1241    13747    3           DO LOOP = 0 TO NSUBLKS-1;
     1242    13748    3               BLK$ = XUX$PCB.OUT$->OPT$OUT.SUBLK$(LOOP);
     1243    13749    4               DO CASE (OPT$OUT.CODE);
     1244    13750        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:86   
     1245    13751        /*
     1246    13752             BC
     1247    13753        */
     1248    13754
     1249    13755    4               CASE(%$BC);
     1250    13756    4                   IF LEGAL.BC#
     1251    13757    5                   THEN DO;
     1252    13758    5                       IF GOT.BC ~= 0
     1253    13759    6                       THEN DO;
     1254    13760    6                           T$ = PINCRC(ADDR(T),GOT.BC-1);
     1255    13761    6                           TEMP = OPT_MSG.LEN;
     1256    13762    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1257    13763    6                             2,'BC') ALTRET(GO_AWAY);
     1258    13764    6                       END;
     1259    13765    6                       ELSE DO;
     1260    13766    6                           IF OPT$OUT.NSUBLKS = 0
     1261    13767    7                           THEN DO; /* Got BC(ALL) */
     1262    13768    7                               GOT.BC = %OFF_BC;
     1263    13769    7                               GOT_OPTIONS.BC = %XUX$ALL;
     1264    13770    7                           END;
     1265    13771
     1266    13772    6                           ELSE IF OPT$OUT.NSUBLKS > 8
     1267    13773    7                               THEN DO;
     1268    13774    7                                   CALL XUX$ERROR(%E$XUX#TOO_MANY_BC_UNITS,'1'B) ALTRET
             13774                                            (GO_AWAY);
     1269    13775    7                               END;
     1270    13776
     1271    13777    7                               ELSE DO;
     1272    13778    7                                   GOT.BC = %OFF_BC;
     1273    13779    7                                   TEMP_BC = '0'B;
     1274    13780    8                                   DO I = 0 TO OPT$OUT.NSUBLKS - 1;
     1275    13781    8                                       CALL CHARBIN(TEMP,OPT$OUT.SUBLK$(I)->OPT$SYM.
             13781                                                TEXT);
     1276    13782    8                                       IF TEMP < 1 OR TEMP > 131071
     1277    13783    9                                       THEN DO;
     1278    13784    9                                           CALL XUX$ERROR(%E$XUX#BAD_BC,'1'B,TEMP)
             13784                                                    ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:87   
     1279    13785    9                                       END;
     1280    13786    9                                       ELSE DO;
     1281    13787   10   SETUP_BC:                               DO J = 1 TO TEMP_BC(0);
     1282    13788   10                                               IF TEMP < TEMP_BC(J)
     1283    13789   11                                               THEN DO;
     1284    13790   12                                                   DO K = TEMP_BC(0) DOWNTO J;
     1285    13791   12                                                       TEMP_BC(K+1) = TEMP_BC(K);
     1286    13792   12                                                   END; /* DO K */
     1287    13793   11                                                   EXIT SETUP_BC;
     1288    13794   11                                               END;
     1289    13795
     1290    13796   10                                               IF TEMP = TEMP_BC(J)
     1291    13797   11                                               THEN DO;
     1292    13798   11                                                   CALL XUX$ERROR(%E$XUX#DUPE_BC,'1'B,
             13798                                                            TEMP) ALTRET(GO_AWAY);
     1293    13799   11                                                   TEMP_BC(0) = TEMP_BC(0) - 1;
             13799                                                            /* Uggh */
     1294    13800   11                                                   EXIT SETUP_BC;
     1295    13801   11                                               END;
     1296    13802
     1297    13803   10                                           END SETUP_BC;
     1298    13804
     1299    13805             /* By this point, TEMP_BC(J) is the place to insert TEMP */
     1300    13806
     1301    13807    9                                           TEMP_BC(J) = TEMP;
     1302    13808    9                                           TEMP_BC(0) = TEMP_BC(0) + 1;
     1303    13809    9                                       END;
     1304    13810    8                                   END; /* DO I */
     1305    13811    7                                   GOT_OPTIONS.BC = TEMP_BC(0);
     1306    13812    7                               END;
     1307    13813    6                       END;
     1308    13814    5                   END;
     1309    13815    5                   ELSE DO;
     1310    13816    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,2,'BC') ALTRET(GO_AWAY
             13816                                );
     1311    13817    5                   END;
     1312    13818        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:88   
     1313    13819        /*
     1314    13820             LS, NLS
     1315    13821        */
     1316    13822
     1317    13823    4               CASE(%$LS,%$NLS);
     1318    13824    5                   DO CASE(OPT$OUT.CODE);
     1319    13825    5                   CASE(%$LS);
     1320    13826    5                       TEMP_OPT='LS';
     1321    13827    5                       TEMP_LEN=2;
     1322    13828    5                   CASE(%$NLS);
     1323    13829    5                       TEMP_OPT = 'NLS';
     1324    13830    5                       TEMP_LEN=3;
     1325    13831    5                   END;
     1326    13832    4                   IF LEGAL.LS#
     1327    13833    5                   THEN DO;
     1328    13834    5                       IF GOT.LS ~= 0
     1329    13835    6                       THEN DO;
     1330    13836    6                           T$ = PINCRC(ADDR(T),GOT.LS-1);
     1331    13837    6                           TEMP = OPT_MSG.LEN;
     1332    13838    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1333    13839    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1334    13840    6                       END;
     1335    13841    6                       ELSE DO;
     1336    13842    7                           DO CASE(OPT$OUT.CODE);
     1337    13843    7                           CASE(%$LS);
     1338    13844    7                               GOT_OPTIONS.LS = '1'B;
     1339    13845    7                               GOT.LS = %OFF_LS;
     1340    13846    7                           CASE(%$NLS);
     1341    13847    7                               GOT_OPTIONS.LS = '0'B;
     1342    13848    7                               GOT.LS = %OFF_NLS;
     1343    13849    7                           END;
     1344    13850
     1345    13851    6                       END;
     1346    13852    5                   END;
     1347    13853    5                   ELSE DO;
     1348    13854    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13854                                ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:89   
     1349    13855    5                   END;
     1350    13856        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:90   
     1351    13857        /*
     1352    13858             OU,NOU
     1353    13859        */
     1354    13860
     1355    13861    4               CASE(%$OU,%$NOU);
     1356    13862    5                   DO CASE(OPT$OUT.CODE);
     1357    13863    5                   CASE(%$OU);
     1358    13864    5                       TEMP_OPT='OU';
     1359    13865    5                       TEMP_LEN=2;
     1360    13866    5                   CASE(%$NOU);
     1361    13867    5                       TEMP_OPT = 'NOU';
     1362    13868    5                       TEMP_LEN=3;
     1363    13869    5                   END;
     1364    13870    4                   IF LEGAL.OU#
     1365    13871    5                   THEN DO;
     1366    13872    5                       IF GOT.OU ~= 0
     1367    13873    6                       THEN DO;
     1368    13874    6                           T$ = PINCRC(ADDR(T),GOT.OU-1);
     1369    13875    6                           TEMP = OPT_MSG.LEN;
     1370    13876    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1371    13877    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1372    13878    6                       END;
     1373    13879    6                       ELSE DO;
     1374    13880    7                           DO CASE(OPT$OUT.CODE);
     1375    13881    7                           CASE(%$OU);
     1376    13882    7                               GOT_OPTIONS.OU = '1'B;
     1377    13883    7                               GOT.OU = %OFF_OU;
     1378    13884    7                           CASE(%$NOU);
     1379    13885    7                               GOT_OPTIONS.OU = '0'B;
     1380    13886    7                               GOT.OU = %OFF_NOU;
     1381    13887    7                           END;
     1382    13888    6                       END;
     1383    13889    5                   END;
     1384    13890    5                   ELSE DO;
     1385    13891    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13891                                ALTRET(GO_AWAY);
     1386    13892    5                   END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:91   
     1387    13893        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:92   
     1388    13894        /*
     1389    13895             SO, NSO
     1390    13896        */
     1391    13897
     1392    13898    4               CASE(%$SO,%$NSO);
     1393    13899    5                   DO CASE(OPT$OUT.CODE);
     1394    13900    5                   CASE(%$SO);
     1395    13901    5                       TEMP_OPT='SO';
     1396    13902    5                       TEMP_LEN=2;
     1397    13903    5                   CASE(%$NSO);
     1398    13904    5                       TEMP_OPT = 'NSO';
     1399    13905    5                       TEMP_LEN=3;
     1400    13906    5                   END;
     1401    13907    4                   IF LEGAL.SO#
     1402    13908    5                   THEN DO;
     1403    13909    5                       IF GOT.SO ~= 0
     1404    13910    6                       THEN DO;
     1405    13911    6                           T$ = PINCRC(ADDR(T),GOT.SO-1);
     1406    13912    6                           TEMP = OPT_MSG.LEN;
     1407    13913    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1408    13914    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1409    13915    6                       END;
     1410    13916    6                       ELSE DO;
     1411    13917    7                           DO CASE(OPT$OUT.CODE);
     1412    13918    7                           CASE(%$SO);
     1413    13919    7                               GOT_OPTIONS.SO = '1'B;
     1414    13920    7                               GOT.SO = %OFF_SO;
     1415    13921    7                           CASE(%$NSO);
     1416    13922    7                               GOT_OPTIONS.SO = '0'B;
     1417    13923    7                               GOT.SO = %OFF_NSO;
     1418    13924    7                           END;
     1419    13925
     1420    13926    6                       END;
     1421    13927    5                   END;
     1422    13928    5                   ELSE DO;
     1423    13929    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13929                                ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:93   
     1424    13930    5                   END;
     1425    13931        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:94   
     1426    13932        /*
     1427    13933             UI, NUI, OPTUI
     1428    13934        */
     1429    13935
     1430    13936    4               CASE(%$UI,%$NUI,%$OPTUI);
     1431    13937    5                   DO CASE(OPT$OUT.CODE);
     1432    13938    5                   CASE(%$UI);
     1433    13939    5                       TEMP_OPT='UI';
     1434    13940    5                       TEMP_LEN=2;
     1435    13941    5                   CASE(%$NUI);
     1436    13942    5                       TEMP_OPT = 'NUI';
     1437    13943    5                       TEMP_LEN=3;
     1438    13944    5                   CASE(%$OPTUI);
     1439    13945    5                       TEMP_OPT = 'OPTUI';
     1440    13946    5                       TEMP_LEN = 5;
     1441    13947    5                   END;
     1442    13948    4                   IF LEGAL.UI#
     1443    13949    5                   THEN DO;
     1444    13950    5                       IF GOT.UI ~= 0
     1445    13951    6                       THEN DO;
     1446    13952    6                           T$ = PINCRC(ADDR(T),GOT.UI-1);
     1447    13953    6                           TEMP = OPT_MSG.LEN;
     1448    13954    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1449    13955    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1450    13956    6                       END;
     1451    13957    6                       ELSE DO;
     1452    13958    7                           DO CASE(OPT$OUT.CODE);
     1453    13959    7                           CASE(%$UI);
     1454    13960    7                               GOT_OPTIONS.UI = '1'B;
     1455    13961    7                               GOT.UI = %OFF_UI;
     1456    13962    7                           CASE(%$NUI);
     1457    13963    7                               GOT_OPTIONS.UI = '0'B;
     1458    13964    7                               GOT.UI = %OFF_NUI;
     1459    13965    7                           CASE(%$OPTUI);
     1460    13966    7                               GOT_OPTIONS.OPTUI = '1'B;
     1461    13967    7                               GOT_OPTIONS.UI = '1'B;
     1462    13968    7                               GOT.UI = %OFF_OPTUI;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:95   
     1463    13969    7                           END;
     1464    13970    6                       END;
     1465    13971    5                   END;
     1466    13972    5                   ELSE DO;
     1467    13973    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13973                                ALTRET(GO_AWAY);
     1468    13974    5                   END;
     1469    13975        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:96   
     1470    13976        /*
     1471    13977             WARN, NWARN
     1472    13978        */
     1473    13979
     1474    13980    4               CASE(%$WARN,%$NWARN);
     1475    13981    5                   DO CASE(OPT$OUT.CODE);
     1476    13982    5                   CASE(%$WARN);
     1477    13983    5                       TEMP_OPT='WARN';
     1478    13984    5                       TEMP_LEN=4;
     1479    13985    5                   CASE(%$NWARN);
     1480    13986    5                       TEMP_OPT = 'NWARN';
     1481    13987    5                       TEMP_LEN=5;
     1482    13988    5                   END;
     1483    13989    4                   IF LEGAL.WARN#
     1484    13990    5                   THEN DO;
     1485    13991    5                       IF GOT.WARN ~= 0
     1486    13992    6                       THEN DO;
     1487    13993    6                           T$ = PINCRC(ADDR(T),GOT.WARN-1);
     1488    13994    6                           TEMP = OPT_MSG.LEN;
     1489    13995    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1490    13996    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1491    13997    6                       END;
     1492    13998    6                       ELSE DO;
     1493    13999    7                           DO CASE(OPT$OUT.CODE);
     1494    14000    7                           CASE(%$WARN);
     1495    14001    7                               GOT_OPTIONS.WARN = '1'B;
     1496    14002    7                               GOT.WARN = %OFF_WARN;
     1497    14003    7                           CASE(%$NWARN);
     1498    14004    7                               GOT_OPTIONS.WARN = '0'B;
     1499    14005    7                               GOT.WARN = %OFF_NWARN;
     1500    14006    7                           END;
     1501    14007
     1502    14008    6                       END;
     1503    14009    5                   END;
     1504    14010    5                   ELSE DO;
     1505    14011    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14011                                ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:97   
     1506    14012    5                   END;
     1507    14013        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:98   
     1508    14014        /*
     1509    14015             PMAP,MPMAP,NPMAP
     1510    14016        */
     1511    14017
     1512    14018    4               CASE(%$PMAP,%$MPMAP,%$NPMAP);
     1513    14019    5                   DO CASE(OPT$OUT.CODE);
     1514    14020    5                   CASE(%$PMAP);
     1515    14021    5                       TEMP_OPT='PMAP';
     1516    14022    5                       TEMP_LEN=4;
     1517    14023    5                   CASE(%$MPMAP);
     1518    14024    5                       TEMP_OPT = 'MPMAP';
     1519    14025    5                       TEMP_LEN=5;
     1520    14026    5                   CASE(%$NPMAP);
     1521    14027    5                       TEMP_OPT = 'NPMAP';
     1522    14028    5                       TEMP_LEN = 5;
     1523    14029    5                   END;
     1524    14030    4                   IF LEGAL.PMAP#
     1525    14031    5                   THEN DO;
     1526    14032    5                       IF GOT.PMAP ~= 0
     1527    14033    6                       THEN DO;
     1528    14034    6                           T$ = PINCRC(ADDR(T),GOT.PMAP-1);
     1529    14035    6                           TEMP = OPT_MSG.LEN;
     1530    14036    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1531    14037    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1532    14038    6                       END;
     1533    14039    6                       ELSE DO;
     1534    14040    7                           DO CASE(OPT$OUT.CODE);
     1535    14041    7                           CASE(%$PMAP);
     1536    14042    7                               GOT_OPTIONS.PMAP.FULL = '1'B;
     1537    14043    7                               GOT_OPTIONS.PMAP.MINI = '0'B;
     1538    14044    7                               GOT.PMAP = %OFF_PMAP;
     1539    14045    7                           CASE(%$MPMAP);
     1540    14046    7                               GOT_OPTIONS.PMAP.FULL = '0'B;
     1541    14047    7                               GOT_OPTIONS.PMAP.MINI = '1'B;
     1542    14048    7                               GOT.PMAP = %OFF_MPMAP;
     1543    14049    7                           CASE(%$NPMAP);
     1544    14050    7                               GOT_OPTIONS.PMAP.FULL = '0'B;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:99   
     1545    14051    7                               GOT_OPTIONS.PMAP.MINI = '0'B;
     1546    14052    7                               GOT.PMAP = %OFF_NPMAP;
     1547    14053    7                           END;
     1548    14054
     1549    14055    6                       END;
     1550    14056    5                   END;
     1551    14057    5                   ELSE DO;
     1552    14058    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14058                                ALTRET(GO_AWAY);
     1553    14059    5                   END;
     1554    14060        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:100  
     1555    14061        /*
     1556    14062             SCHEMA,MSCHEMA,NSCHEMA
     1557    14063        */
     1558    14064
     1559    14065    4               CASE(%$SCHEMA,%$MSCHEMA,%$NSCHEMA);
     1560    14066    5                   DO CASE(OPT$OUT.CODE);
     1561    14067    5                   CASE(%$SCHEMA);
     1562    14068    5                       TEMP_OPT='SCHEMA';
     1563    14069    5                       TEMP_LEN=6;
     1564    14070    5                   CASE(%$MSCHEMA);
     1565    14071    5                       TEMP_OPT = 'MSCHEMA';
     1566    14072    5                       TEMP_LEN=7;
     1567    14073    5                   CASE(%$NSCHEMA);
     1568    14074    5                       TEMP_OPT = 'NSCHEMA';
     1569    14075    5                       TEMP_LEN = 7;
     1570    14076    5                   END;
     1571    14077    4                   IF LEGAL.SCHEMA#
     1572    14078    5                   THEN DO;
     1573    14079    5                       IF GOT.SCHEMA ~= 0
     1574    14080    6                       THEN DO;
     1575    14081    6                           T$ = PINCRC(ADDR(T),GOT.SCHEMA-1);
     1576    14082    6                           TEMP = OPT_MSG.LEN;
     1577    14083    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1578    14084    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1579    14085    6                       END;
     1580    14086    6                       ELSE DO;
     1581    14087    7                           DO CASE(OPT$OUT.CODE);
     1582    14088    7                           CASE(%$SCHEMA);
     1583    14089    7                               GOT_OPTIONS.SCHEMA = %XUX$FULL;
     1584    14090    7                               GOT.SCHEMA = %OFF_SCHEMA;
     1585    14091    7                           CASE(%$MSCHEMA);
     1586    14092    7                               GOT_OPTIONS.SCHEMA = %XUX$MINI;
     1587    14093    7                               GOT.SCHEMA = %OFF_MSCHEMA;
     1588    14094    7                           CASE(%$NSCHEMA);
     1589    14095    7                               GOT_OPTIONS.SCHEMA = %XUX$NONE;
     1590    14096    7                               GOT.SCHEMA = %OFF_NSCHEMA;
     1591    14097    7                           END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:101  
     1592    14098
     1593    14099    6                       END;
     1594    14100    5                   END;
     1595    14101    5                   ELSE DO;
     1596    14102    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14102                                ALTRET(GO_AWAY);
     1597    14103    5                   END;
     1598    14104        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:102  
     1599    14105        /*
     1600    14106             UREF,MUREF,NUREF
     1601    14107        */
     1602    14108
     1603    14109    4               CASE(%$UREF,%$MUREF,%$NUREF);
     1604    14110    5                   DO CASE(OPT$OUT.CODE);
     1605    14111    5                   CASE(%$UREF);
     1606    14112    5                       TEMP_OPT='UREF';
     1607    14113    5                       TEMP_LEN=4;
     1608    14114    5                   CASE(%$MUREF);
     1609    14115    5                       TEMP_OPT = 'MUREF';
     1610    14116    5                       TEMP_LEN=5;
     1611    14117    5                   CASE(%$NUREF);
     1612    14118    5                       TEMP_OPT = 'NUREF';
     1613    14119    5                       TEMP_LEN = 5;
     1614    14120    5                   END;
     1615    14121    4                   IF LEGAL.UREF#
     1616    14122    5                   THEN DO;
     1617    14123    5                       IF GOT.UREF ~= 0
     1618    14124    6                       THEN DO;
     1619    14125    6                           T$ = PINCRC(ADDR(T),GOT.UREF-1);
     1620    14126    6                           TEMP = OPT_MSG.LEN;
     1621    14127    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1622    14128    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1623    14129    6                       END;
     1624    14130    6                       ELSE DO;
     1625    14131    7                           DO CASE(OPT$OUT.CODE);
     1626    14132    7                           CASE(%$UREF);
     1627    14133    7                               GOT_OPTIONS.UREF = %XUX$FULL;
     1628    14134    7                               GOT.UREF = %OFF_UREF;
     1629    14135    7                           CASE(%$MUREF);
     1630    14136    7                               GOT_OPTIONS.UREF = %XUX$MINI;
     1631    14137    7                               GOT.UREF = %OFF_MUREF;
     1632    14138    7                           CASE(%$NUREF);
     1633    14139    7                               GOT_OPTIONS.UREF = %XUX$NONE;
     1634    14140    7                               GOT.UREF = %OFF_NUREF;
     1635    14141    7                           END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:103  
     1636    14142
     1637    14143    6                       END;
     1638    14144    5                   END;
     1639    14145    5                   ELSE DO;
     1640    14146    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14146                                ALTRET(GO_AWAY);
     1641    14147    5                   END;
     1642    14148        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:104  
     1643    14149        /*
     1644    14150             XREF,MXREF,NXREF
     1645    14151        */
     1646    14152
     1647    14153    4               CASE(%$XREF,%$MXREF,%$NXREF);
     1648    14154    5                   DO CASE(OPT$OUT.CODE);
     1649    14155    5                   CASE(%$XREF);
     1650    14156    5                       TEMP_OPT='XREF';
     1651    14157    5                       TEMP_LEN=4;
     1652    14158    5                   CASE(%$MXREF);
     1653    14159    5                       TEMP_OPT = 'MXREF';
     1654    14160    5                       TEMP_LEN=5;
     1655    14161    5                   CASE(%$NXREF);
     1656    14162    5                       TEMP_OPT = 'NXREF';
     1657    14163    5                       TEMP_LEN = 5;
     1658    14164    5                   END;
     1659    14165    4                   IF LEGAL.XREF#
     1660    14166    5                   THEN DO;
     1661    14167    5                       IF GOT.XREF ~= 0
     1662    14168    6                       THEN DO;
     1663    14169    6                           T$ = PINCRC(ADDR(T),GOT.XREF-1);
     1664    14170    6                           TEMP = OPT_MSG.LEN;
     1665    14171    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1666    14172    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1667    14173    6                       END;
     1668    14174    6                       ELSE DO;
     1669    14175    7                           DO CASE(OPT$OUT.CODE);
     1670    14176    7                           CASE(%$XREF);
     1671    14177    7                               GOT_OPTIONS.XREF = %XUX$FULL;
     1672    14178    7                               GOT.XREF = %OFF_XREF;
     1673    14179    7                           CASE(%$MXREF);
     1674    14180    7                               GOT_OPTIONS.XREF = %XUX$MINI;
     1675    14181    7                               GOT.XREF = %OFF_MXREF;
     1676    14182    7                           CASE(%$NXREF);
     1677    14183    7                               GOT_OPTIONS.XREF = %XUX$NONE;
     1678    14184    7                               GOT.XREF = %OFF_NXREF;
     1679    14185    7                           END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:105  
     1680    14186
     1681    14187    6                       END;
     1682    14188    5                   END;
     1683    14189    5                   ELSE DO;
     1684    14190    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14190                                ALTRET(GO_AWAY);
     1685    14191    5                   END;
     1686    14192        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:106  
     1687    14193        /*
     1688    14194             LO(CODE,DATA),NLO
     1689    14195        */
     1690    14196
     1691    14197    4               CASE(%$LO_CLASS);
     1692    14198    4                   BLK$=OPT$OUT.SUBLK$(0);
     1693    14199    5                   DO CASE(OPT$OUT.CODE);
     1694    14200    5                   CASE(%$LO);
     1695    14201    5                       TEMP_OPT = 'LO';
     1696    14202    5                       TEMP_LEN = 2;
     1697    14203    5                   CASE(%$NLO);
     1698    14204    5                       TEMP_OPT = 'NLO';
     1699    14205    5                       TEMP_LEN = 3;
     1700    14206    5                   END;
     1701    14207    4                   IF LEGAL.LO#
     1702    14208    5                   THEN DO;
     1703    14209    5                       IF GOT.LO ~= 0
     1704    14210    6                       THEN DO;
     1705    14211    6                           T$ = PINCRC(ADDR(T),GOT.LO-1);
     1706    14212    6                           TEMP = OPT_MSG.LEN;
     1707    14213    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1708    14214    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1709    14215    6                       END;
     1710    14216    6                       ELSE DO;
     1711    14217    6                           GOT_OPTIONS.LO = '0'B;
     1712    14218    6                           IF OPT$OUT.CODE = %$NLO
     1713    14219    7                           THEN DO;
     1714    14220    7                               GOT.LO = %OFF_LO;
     1715    14221    7                           END;
     1716    14222    7                           ELSE DO;
     1717    14223    7                               GOT.LO = %OFF_LO;
     1718    14224    7                               IF OPT$OUT.NSUBLKS = 0
     1719    14225    8                               THEN DO;
     1720    14226    8                                   GOT_OPTIONS.LO.CODE = '1'B;
     1721    14227    8                                   GOT_OPTIONS.LO.DATA = '1'B;
     1722    14228    8                               END;
     1723    14229    7                               ELSE
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:107  
     1724    14230    8                               DO I = 0 TO OPT$OUT.NSUBLKS - 1;
     1725    14231    9                                   DO CASE(OPT$OUT.SUBLK$(I)->OPT$OUT.CODE);
     1726    14232    9                                   CASE(%$CODE);
     1727    14233    9                                       GOT_OPTIONS.LO.CODE = '1'B;
     1728    14234    9                                   CASE(%$DATA);
     1729    14235    9                                       GOT_OPTIONS.LO.DATA = '1'B;
     1730    14236    9                                   END; /* DO CASE */
     1731    14237    8                               END; /* DO I */
     1732    14238    7                           END; /* LO  */
     1733    14239    6                       END;  /* First occurence */
     1734    14240    5                   END;   /* Valid option */
     1735    14241    5                   ELSE DO;
     1736    14242    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14242                                ALTRET(GO_AWAY);
     1737    14243    5                   END;
     1738    14244        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:108  
     1739    14245        /*
     1740    14246             SRCH(.fid[,.fid])
     1741    14247        */
     1742    14248
     1743    14249    4               CASE(%$SRCH);
     1744    14250    4                   IF LEGAL.SRCH#
     1745    14251    5                   THEN DO;
     1746    14252    5                       IF GOT.SRCH ~= 0
     1747    14253    6                       THEN DO;
     1748    14254    6                           T$ = PINCRC(ADDR(T),GOT.SRCH-1);
     1749    14255    6                           TEMP = OPT_MSG.LEN;
     1750    14256    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1751    14257    6                             4,'SRCH') ALTRET(GO_AWAY);
     1752    14258    6                       END;
     1753    14259    6                       ELSE DO;
     1754    14260    6                           GOT.SRCH = %OFF_SRCH;
     1755    14261    6                           GOT_OPTIONS.SRCH = '1'B;
     1756    14262    6                           FID = FPT_FID;
     1757    14263    6                           FID.V_ = VECTOR(FID.V);
     1758    14264    6                           FID.ACCT_ = VECTOR(SRCH_FID.ACCT);
     1759    14265    6                           FID.NAME_ = VECTOR(SRCH_FID.NAME);
     1760    14266    6                           FID.PASS_ = VECTOR(SRCH_FID.PASS);
     1761    14267    6                           FID.SN_ = VECTOR(SRCH_FID.SN);
     1762    14268    6                           FID.WSN_ = VECTOR(SRCH_FID.WSN);
     1763    14269    6                           FID.ASN_ = VECTOR(SRCH_FID.ASN);
     1764    14270    6                           FID.RES_ = VECTOR(SRCH_FID.RES);
     1765    14271    6                           FID.RESULTS_ = VECTOR(FID_RESULTS);
     1766    14272    6                           SEARCH_LIST.NUM = 0;
     1767    14273    7                           DO I = 0 TO OPT$OUT.NSUBLKS - 1;
     1768    14274    7                               IF SEARCH_LIST.NUM >= NUM_SRCH_ACCTS
     1769    14275    8                               THEN DO;
     1770    14276    8                                   CALL XUX$ERROR(%E$XUX#TOO_MANY_SRCH_ACCTS,'1'B,
     1771    14277    8                                     NUM_SRCH_ACCTS) ALTRET(GO_AWAY);
     1772    14278    8                               END;
     1773    14279    8                               ELSE DO;
     1774    14280    8                                   FID.TEXTFID_ = VECTOR(OPT$OUT.SUBLK$(I)->OPT$SYM.
             14280                                            TEXT);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:109  
     1775    14281    8                                   CALL M$FID(FID) ALTRET(BAD_FID);
     1776    14282
     1777    14283    8                                   IF FID_RESULTS.ACCT AND ((NOT FID_RESULTS.NAME) OR
             14283                                            LEGAL.SRCH_FIL#)
     1778    14284    8                                     AND (SRCH_FID.ASN = %FILE# OR SRCH_FID.ASN = %
             14284                                              TAPE#)
     1779    14285    9                                   THEN DO;
     1780    14286
     1781    14287        /*    If a filename has been given make sure that it contains
     1782    14288              only one wild card character ('?')                       */
     1783    14289
     1784    14290    9                                       IF FID_RESULTS.NAME
     1785    14291   10                                       THEN DO;
     1786    14292   10                                           CALL INDEX (IND, '?',SRCH_FID.NAME);
     1787    14293   10                                           IF (IND<LENGTHC(SRCH_FID.NAME))
     1788    14294   11                                           THEN DO;
     1789    14295   11                                               CALL INDEX (IND, '?',SRCH_FID.NAME,IND+1
             14295                                                        );
     1790    14296   11                                               IF (IND < LENGTHC(SRCH_FID.NAME))
     1791    14297   11                                               THEN GOTO BAD_FID;
     1792    14298   11                                           END; /* IF LENGTHC */
     1793    14299   10                                       END; /* IF FID_RESULTS */
     1794    14300    9                                       CALL INSERT_FID;
     1795    14301    9                                   END;
     1796    14302
     1797    14303    9                                   ELSE DO;
     1798    14304    9   BAD_FID:                            TEMP = OPT$OUT.SUBLK$(I)->OPT$SYM.COUNT;
     1799    14305    9                                       CALL XUX$ERROR(%E$XUX#BAD_SRCH_FID,'1'B,TEMP,
     1800    14306    9                                         OPT$OUT.SUBLK$(I)->OPT$SYM.TEXT) ALTRET(
             14306                                                  GO_AWAY);
     1801    14307    9                                   END;
     1802    14308    8                               END;
     1803    14309    7                           END; /* DO I */
     1804    14310    6                       END; /* First time for SRCH */
     1805    14311    5                   END; /* SRCH is valid option */
     1806    14312    5                   ELSE DO;
     1807    14313    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,4,'SRCH') ALTRET(
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:110  
             14313                                GO_AWAY);
     1808    14314    5                   END;
     1809    14315        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:111  
     1810    14316        /*
     1811    14317             DMAP, MDMAP
     1812    14318        */
     1813    14319
     1814    14320        /*   With thanks to ZW4$CTL_CARD, from whence this code has been
     1815    14321             stolen outright.  */
     1816    14322    4               CASE(%$DMAP_CLASS);
     1817    14323    4                   BLK$ = OPT$OUT.SUBLK$(0);
     1818    14324    5                   DO CASE(OPT$OUT.CODE);
     1819    14325    5                   CASE(%$DMAP);
     1820    14326    5                       TEMP_OPT = 'DMAP';
     1821    14327    5                       TEMP_LEN = 4;
     1822    14328    5                   CASE(%$NDMAP);
     1823    14329    5                       TEMP_OPT = 'NDMAP';
     1824    14330    5                       TEMP_LEN = 5;
     1825    14331    5                   CASE(%$MDMAP);
     1826    14332    5                       TEMP_OPT = 'MDMAP';
     1827    14333    5                       TEMP_LEN = 5;
     1828    14334    5                   CASE(%$NMDMAP);
     1829    14335    5                       TEMP_OPT = 'NMDMAP';
     1830    14336    5                       TEMP_LEN = 6;
     1831    14337    5                   END; /* DO CASE */
     1832    14338    4                   IF LEGAL.DMAP#
     1833    14339    5                   THEN DO;
     1834    14340    5                       IF (GOT.DMAP ~= 0 AND (OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE = %
             14340                                $NDMAP)) OR
     1835    14341    5                         (GOT.MDMAP ~= 0 AND (OPT$OUT.CODE = %$MDMAP OR OPT$OUT.CODE =
             14341                                  %$NMDMAP))
     1836    14342    6                       THEN DO;
     1837    14343    6                           IF OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE=%$NDMAP
     1838    14344    6                           THEN T$ = PINCRC(ADDR(T),GOT.DMAP-1);
     1839    14345    6                           ELSE T$ = PINCRC(ADDR(T),GOT.MDMAP-1);
     1840    14346    6                           TEMP = OPT_MSG.LEN;
     1841    14347    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
     1842    14348    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1843    14349    6                       END;     /* of Already got one of these */
     1844    14350    6                       ELSE DO;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:112  
     1845    14351    6                           IF OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE = %$MDMAP
     1846    14352    6                           THEN BIT_VAL = '1'B;
     1847    14353    6                           ELSE BIT_VAL = '0'B;
     1848    14354    6                           IF OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE = %$NDMAP
     1849    14355    7                           THEN DO;
     1850    14356    7                               IF OPT$OUT.NSUBLKS <= 0
     1851    14357    8                               THEN DO;
     1852    14358    8                                   GOT_OPTIONS.DMAP.STATIC# = BIT_VAL;
     1853    14359    8                                   GOT_OPTIONS.DMAP.AUTO# = BIT_VAL;
     1854    14360    8                                   GOT_OPTIONS.DMAP.SYMREF# = BIT_VAL;
     1855    14361    8                                   GOT_OPTIONS.DMAP.BASED# = BIT_VAL;
     1856    14362    8                                   IF NOT BIT_VAL
     1857    14363    8                                   THEN NDM.BITS='1111'B;
     1858    14364    8                               END;
     1859    14365    8                               ELSE DO;
     1860    14366    9                                   DO J = 0 TO OPT$OUT.NSUBLKS - 1;
     1861    14367   10                                       DO CASE(OPT$OUT.SUBLK$(J)->OPT$OUT.CODE);
     1862    14368   10                                       CASE(%$STATIC);
     1863    14369   10                                           GOT_OPTIONS.DMAP.STATIC# = BIT_VAL;
     1864    14370   10                                           IF NOT BIT_VAL
     1865    14371   10                                           THEN NDM.BITS(0) = '1'B;
     1866    14372   10                                       CASE(%$AUTO);
     1867    14373   10                                           GOT_OPTIONS.DMAP.AUTO# = BIT_VAL;
     1868    14374   10                                           IF NOT BIT_VAL
     1869    14375   10                                           THEN NDM.BITS(1) = '1'B;
     1870    14376   10                                       CASE(%$SYMREF);
     1871    14377   10                                           GOT_OPTIONS.DMAP.SYMREF# = BIT_VAL;
     1872    14378   10                                           IF NOT BIT_VAL
     1873    14379   10                                           THEN NDM.BITS(2) = '1'B;
     1874    14380   10                                       CASE(%$BASED);
     1875    14381   10                                           GOT_OPTIONS.DMAP.BASED# = BIT_VAL;
     1876    14382   10                                           IF NOT BIT_VAL
     1877    14383   10                                           THEN NDM.BITS(3) = '1'B;
     1878    14384   10                                       END;
     1879    14385    9                                   END;
     1880    14386    8                               END;
     1881    14387    7                           END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:113  
     1882    14388    7                           ELSE DO;
     1883    14389    7                               IF OPT$OUT.NSUBLKS <= 0
     1884    14390    8                               THEN DO;
     1885    14391    8                                   GOT_OPTIONS.MDMAP.STATIC# = BIT_VAL;
     1886    14392    8                                   GOT_OPTIONS.MDMAP.AUTO# = BIT_VAL;
     1887    14393    8                                   GOT_OPTIONS.MDMAP.SYMREF# = BIT_VAL;
     1888    14394    8                                   GOT_OPTIONS.MDMAP.BASED# = BIT_VAL;
     1889    14395    8                                   IF NOT BIT_VAL
     1890    14396    8                                   THEN NMDM.BITS = '1111'B;
     1891    14397    8                               END;
     1892    14398    8                               ELSE DO;
     1893    14399    9                                   DO J = 0 TO OPT$OUT.NSUBLKS - 1;
     1894    14400   10                                       DO CASE(OPT$OUT.SUBLK$(J)->OPT$OUT.CODE);
     1895    14401   10                                       CASE(%$STATIC);
     1896    14402   10                                           GOT_OPTIONS.MDMAP.STATIC# = BIT_VAL;
     1897    14403   10                                           IF NOT BIT_VAL
     1898    14404   10                                           THEN NMDM.BITS(0) = '1'B;
     1899    14405   10                                       CASE(%$AUTO);
     1900    14406   10                                           GOT_OPTIONS.MDMAP.AUTO# = BIT_VAL;
     1901    14407   10                                           IF NOT BIT_VAL
     1902    14408   10                                           THEN NMDM.BITS(1)='1'B;
     1903    14409   10                                       CASE(%$SYMREF);
     1904    14410   10                                           GOT_OPTIONS.MDMAP.SYMREF# = BIT_VAL;
     1905    14411   10                                           IF NOT BIT_VAL
     1906    14412   10                                           THEN NMDM.BITS(2) = '1'B;
     1907    14413   10                                       CASE(%$BASED);
     1908    14414   10                                           GOT_OPTIONS.MDMAP.BASED# = BIT_VAL;
     1909    14415   10                                           IF NOT BIT_VAL
     1910    14416   10                                           THEN NMDM.BITS(3) = '1'B;
     1911    14417   10                                       END;
     1912    14418    9                                   END;
     1913    14419    8                               END;
     1914    14420    7                           END;
     1915    14421
     1916    14422    6                           DM_CHK(0) = GOT_OPTIONS.DMAP & GOT_OPTIONS.MDMAP;
     1917    14423    6                           DM_CHK(1) = GOT_OPTIONS.DMAP & NDM;
     1918    14424    6                           DM_CHK(2) = GOT_OPTIONS.MDMAP & NMDM;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:114  
     1919    14425    6                           IF DM_CHK
     1920    14426    7                           THEN DO;
     1921    14427    7                               CALL XUX$ERROR(%E$XUX#CONFLICTING_DMAP_OPTS,'1'B) ALTRET
             14427                                        (GO_AWAY);
     1922    14428    7                               GOT_OPTIONS.DMAP = '0'B;
     1923    14429    7                               GOT_OPTIONS.MDMAP = '0'B;
     1924    14430    7                           END;
     1925    14431    7                           ELSE DO;
     1926    14432    8                               DO CASE(OPT$OUT.CODE);
     1927    14433    8                               CASE(%$DMAP);
     1928    14434    8                                   GOT.DMAP = %OFF_DMAP;
     1929    14435    8                               CASE(%$NDMAP);
     1930    14436    8                                   GOT.DMAP = %OFF_NDMAP;
     1931    14437    8                               CASE(%$MDMAP);
     1932    14438    8                                   GOT.MDMAP = %OFF_MDMAP;
     1933    14439    8                               CASE(%$NMDMAP);
     1934    14440    8                                   GOT.MDMAP = %OFF_NMDMAP;
     1935    14441    8                               END;
     1936    14442    7                           END;
     1937    14443    6                       END;
     1938    14444    5                   END;
     1939    14445    5                   ELSE DO;
     1940    14446    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14446                                ALTRET(GO_AWAY);
     1941    14447    5                   END;
     1942    14448        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:115  
     1943    14449        /*
     1944    14450             NSTD
     1945    14451        */
     1946    14452
     1947    14453        /*
     1948    14454             Non-standard options are handled a little differently than
     1949    14455             standard options. They are actually handled little here, the
     1950    14456             only validation being done is to verify that the user is allowing
     1951    14457             them. This takes care of the case where the guy forgot to set
     1952    14458             the NSTD bit in XUX$LEGAL_OPTIONS but went ahead and linked in
     1953    14459             his non_standard nodes anyway. We'll diagnose this as an internal
     1954    14460             error since it really means that the programmer screwed up.
     1955    14461        */
     1956    14462
     1957    14463    4               CASE(%$NSTD);
     1958    14464    4                   IF LEGAL.NSTD#
     1959    14465    5                   THEN DO;
     1960    14466    5                       GOT_OPTIONS.NSTD = '1'B;
     1961    14467    5                       BIT_VAL = '0'B;
     1962    14468    5                       CALL XUX$INFO.XUX.USER_ROUTINE$$(OPT$OUT.SUBLK$(0),BIT_VAL)
     1963    14469    6                       WHENALTRETURN DO;
     1964    14470    6                           IF BIT_VAL
     1965    14471    7                           THEN DO;
     1966    14472    7                               CALL XUX$ERROR(%E$XUX#USER_ROUTINE_BUG,'0'B) ALTRET(
             14472                                        GO_AWAY);
     1967    14473    7                               GOTO I_BLEW_IT_INTERNALLY;
     1968    14474    7                           END;
     1969    14475    7                           ELSE DO;
     1970    14476    7                               XUX$INFO.XUX.ERROR_CODE = XUX_ERR;
     1971    14477    7                               XUX$INFO.XUX.ERROR_CODE.ERR# = %
             14477                                        E$XUX#USER_ROUTINE_ALTRETURNED;
     1972    14478    7                           END;
     1973    14479    6                       END;  /* WHENALTRETURN */
     1974    14480    5                   END;
     1975    14481    5                   ELSE DO;
     1976    14482    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_NSTD_OPT,'0'B) ALTRET(GO_AWAY);
     1977    14483    5                       GOTO I_BLEW_IT_INTERNALLY;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:116  
     1978    14484    5                   END;
     1979    14485        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:117  
     1980    14486        /*
     1981    14487                CASE(ELSE)
     1982    14488        */
     1983    14489
     1984    14490        /*
     1985    14491             We should never really get here, but if we do, it means that
     1986    14492             X$PARSE returned a strange node code. We'll print a message then
     1987    14493             ALTRETURN.
     1988    14494        */
     1989    14495
     1990    14496    4               CASE(ELSE);
     1991    14497    4                   CALL XUX$ERROR(%E$XUX#BAD_PARSE_NODE,'0'B,OPT$OUT.CODE) ALTRET(
             14497                            GO_AWAY);
     1992    14498    4                   GOTO I_BLEW_IT_INTERNALLY;
     1993    14499
     1994    14500    4               END; /* DO CASE */
     1995    14501    3           END; /* DO LOOP */
     1996    14502    2       END;   /* of parsing options */
     1997    14503        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:118  
     1998    14504        /*
     1999    14505             All the parsing has been done, so now we need to fix up
     2000    14506             for any default conditions and put the options back into the
     2001    14507             the user's XUX$STD_OPTIONS structure.
     2002    14508        */
     2003    14509    1       IF LEGAL.SRCH#
     2004    14510    2       THEN DO;
     2005    14511    2           SEARCH_LIST.RCVD =SEARCH_LIST.NUM;
     2006    14512    2           FID = FPT_FID;
     2007    14513    2           FID.V_ = VECTOR(FID.V);
     2008    14514    2           FID.ACCT_ = VECTOR(SRCH_FID.ACCT);
     2009    14515    2           FID.NAME_ = VECTOR(SRCH_FID.NAME);
     2010    14516    2           FID.PASS_ = VECTOR(SRCH_FID.PASS);
     2011    14517    2           FID.SN_ = VECTOR(SRCH_FID.SN);
     2012    14518    2           FID.WSN_ = VECTOR(SRCH_FID.WSN);
     2013    14519    2           FID.ASN_ = VECTOR(SRCH_FID.ASN);
     2014    14520    2           FID.RES_ = VECTOR(SRCH_FID.RES);
     2015    14521    2           FID.RESULTS_ = VECTOR(FID_RESULTS);
     2016    14522    2           FID.TEXTFID_ = VECTOR(CURRENT_ACCOUNT_FID);
     2017    14523    2           CALL M$FID(FID)
     2018    14524    3           WHENALTRETURN DO;
     2019    14525    3               CALL XUX$ERROR(%E$XUX#BAD_INTERNAL_FID,'0'B) ALTRET(GO_AWAY);
     2020    14526    3               GOTO I_BLEW_IT_INTERNALLY;
     2021    14527    3           END;
     2022    14528    2           CALL INSERT_FID;
     2023    14529    2           FID.TEXTFID_ = VECTOR(DEFAULT_SRCH_ACCOUNT_FID);
     2024    14530    2           CALL M$FID(FID)
     2025    14531    3           WHENALTRETURN DO;
     2026    14532    3               CALL XUX$ERROR(%E$XUX#BAD_INTERNAL_FID,'0'B) ALTRET(GO_AWAY);
     2027    14533    3               GOTO I_BLEW_IT_INTERNALLY;
     2028    14534    3           END;
     2029    14535    2           CALL INSERT_FID;
     2030    14536    2       END;
     2031    14537
     2032    14538        /*  Now put the options into the user supplied structure */
     2033    14539
     2034    14540    1       IF LEGAL.SCHEMA# AND GOT_OPTIONS.SCHEMA = %XUX$NONE
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:119  
     2035    14541    2       THEN DO;  /* Some checks with PMAP & DMAP  */
     2036    14542    2           IF LEGAL.DMAP# AND GOT_OPTIONS.DMAP
     2037    14543    3           THEN DO;
     2038    14544    3               GOT_OPTIONS.SCHEMA = %XUX$MINI;
     2039    14545    3               CALL XUX$ERROR(%E$XUX#DMAP_SCHEMA_CONFLICT,'1'B) ALTRET(GO_AWAY);
     2040    14546    3           END;
     2041    14547
     2042    14548    2           IF LEGAL.PMAP# AND GOT_OPTIONS.PMAP
     2043    14549    3           THEN DO;
     2044    14550    3               GOT_OPTIONS.SCHEMA = %XUX$MINI;
     2045    14551    3               CALL XUX$ERROR(%E$XUX#PMAP_SCHEMA_CONFLICT,'1'B) ALTRET(GO_AWAY);
     2046    14552    3           END;
     2047    14553
     2048    14554    2       END;
     2049    14555    1       XUX$INFO.XUX.STD_OPTIONS$->XUX$STD_OPTIONS = GOT_OPTIONS;
     2050    14556    1       IF LEGAL.BC#
     2051    14557    1       THEN XUX$INFO.XUX.BC_UNIT$->XUX$BC_UNIT = TEMP_BC;
     2052    14558
     2053    14559    1       IF LEGAL.SRCH#
     2054    14560    2       THEN DO;
     2055    14561    2           SRCH_LIST_SIZE = (SEARCH_LIST.NUM * SIZEW(XUX$FID_ONLY) + 2) * 4;
     2056    14562    2           XUX$INFO.XUX.SRCH_LIST$ -> SRCH_LIST_BUFFER = SEARCH_LIST$ ->
             14562                    SRCH_LIST_BUFFER;
     2057    14563    2       END; /* IF LEGAL.SRCH# */
     2058    14564
     2059    14565    1       P_PARAM.ERROR_CODE = XUX$INFO.XUX.ERROR_CODE;
     2060    14566    1       P_PARAM.ERROR# = XUX$INFO.XUX.ERROR#;
     2061    14567
     2062    14568    1       CALL XUX$CLEANUP;
     2063    14569
     2064    14570    1       IF XUX$MEM ~= VECTOR(NIL)
     2065    14571    2       THEN DO;
     2066    14572    2           CALL FREE_MEM
     2067    14573    3           WHENALTRETURN DO;
     2068    14574    3               CALL XUX$ERROR1(B$TCB$->B$TCB.ALT$->B$ALT.ERR,'0'B);
     2069    14575    3           END;
     2070    14576    2       END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:120  
     2071    14577
     2072    14578    1       IF P_PARAM.ERROR_CODE ~= '0'B
     2073    14579    1       THEN ALTRETURN;
     2074    14580    1       ELSE
     2075    14581    1           RETURN;
     2076    14582
     2077    14583    1   PARSE_ALTRET: ;
     2078    14584    1       IF XUX$PCB.ERROR.CODE = %E$SYNERR
     2079    14585    2       THEN DO;
     2080    14586    2           CALL XUX$CLEANUP;    /* To reset the files */
     2081    14587
     2082    14588        /*   Reason for 1 to RECNO-1 is because REC_INDEX is always
     2083    14589             going to be 0, so first trip through will never exit.
     2084    14590        */
     2085    14591    3   FIND_REC: DO I= 1 TO XUX$INFO.RECNO - 1;
     2086    14592    3               IF XUX$INFO.REC_INDEX$->REC_INDEX(I) > XUX$PCB.HI_CHAR
     2087    14593    4               THEN DO;
     2088    14594    4                   EXIT FIND_REC;
     2089    14595    4               END;
     2090    14596    3           END FIND_REC;
     2091    14597
     2092    14598    2           I = I - 1;
     2093    14599    2           GETLINE_PARAM.BUFFER_ = VECTOR(TEMP_BUF);
     2094    14600    3           DO J = 0 TO I;
     2095    14601    3               CALL XUX$GETLINE(GETLINE_PARAM)
     2096    14602    4               WHENALTRETURN DO;
     2097    14603    4                   IF GETLINE_PARAM.CMD_COMPLETE
     2098    14604    5                   THEN DO;
     2099    14605    5                       CALL XUX$ERROR(%E$XUX#NO_MORE_INPUT,'0'B) ALTRET(GO_AWAY);
     2100    14606    5                       GOTO I_BLEW_IT_INTERNALLY;
     2101    14607    5                   END;
     2102    14608    5                   ELSE DO;
     2103    14609    5                       CALL XUX$ERROR1(GETLINE_PARAM.ERROR_CODE,'0'B) ALTRET(GO_AWAY);
     2104    14610    5                       GOTO I_BLEW_IT_INTERNALLY;
     2105    14611    5                   END;
     2106    14612    4               END;
     2107    14613    3           END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:121  
     2108    14614
     2109    14615    2           PARSE_ERRMSG = FPT_ERRMSG;
     2110    14616    2           PARSE_ERRMSG.V_ = VECTOR(PARSE_ERRMSG.V);
     2111    14617    2           CALL INSERT(TEMP_BUF,GETLINE_PARAM.CMD_LEN,,' ');
     2112    14618    2           PARSE_ERRMSG.BUF_ = VECTOR(TEMP_BUF);
     2113    14619    2           PARSE_ERRMSG.V.OUTDCB1# = XUX$INFO.XUX.DCB1#;
     2114    14620    2           PARSE_ERRMSG.V.OUTDCB2# = XUX$INFO.XUX.DCB2#;
     2115    14621        /*
     2116    14622             We'll now call M$ERRMSG to print out the bad line, a syntax
     2117    14623             error message, and a pointer to the error.
     2118    14624        */
     2119    14625
     2120    14626    2           CALL M$ERRMSG(PARSE_ERRMSG);
     2121    14627    2           PARSE_ERRMSG.BUF_ = VECTOR(TEMP_BUF);
     2122    14628    2           TEMP_BUF = ' ';
     2123    14629    2           SUBSTR(TEMP_BUF,XUX$PCB.HI_CHAR-XUX$INFO.REC_INDEX$->REC_INDEX(I),1) = '^';
     2124    14630    2           CALL M$ERRMSG(PARSE_ERRMSG);
     2125    14631
     2126    14632    2           CALL XUX$ERROR(%E$XUX#SYNTAX_ERROR,'1'B) ALTRET(GO_AWAY);
     2127    14633             /* Set the non-recover bit on "manually", since we can't set
     2128    14634                it in the call to XUX$ERROR1 because we wouldn't get the
     2129    14635                syntax errors out otherwise. This is Ugly, but effective. */
     2130    14636
     2131    14637    2           P_PARAM.ERROR# = '1'B;
     2132    14638
     2133    14639        /*
     2134    14640             Now let X$PARSE print out the list of syntax alternatives.
     2135    14641             We check for to see if the 2 dcbs the user specified are the
     2136    14642             same and make sure that we only print out 1 set of the
     2137    14643             alternatives if they are.
     2138    14644        */
     2139    14645
     2140    14646    2           XUX$PCB.NXT = '1'B;
     2141    14647    2           CORRES = FPT_CORRES;
     2142    14648    2           CORRES.V_ = VECTOR(CORRES.V);
     2143    14649    2           CORRES.V.DCB1# = XUX$INFO.XUX.DCB1#;
     2144    14650    2           CORRES.V.DCB2# = XUX$INFO.XUX.DCB2#;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:122  
     2145    14651    2           CALL M$CORRES(CORRES)
     2146    14652    3           WHENRETURN DO;
     2147    14653    3               XUX$PCB.OUTDCB# = XUX$INFO.XUX.DCB2#;
     2148    14654    3               CALL X$PARSE(XUX$PCB)
     2149    14655    4               WHENALTRETURN DO;
     2150    14656                            /* Nothing */
     2151    14657    4               END;
     2152    14658    3           END;
     2153    14659
     2154    14660    2           XUX$PCB.OUTDCB# = XUX$INFO.XUX.DCB1#;
     2155    14661    2           CALL X$PARSE(XUX$PCB)
     2156    14662    3           WHENALTRETURN DO;
     2157    14663                      /* Nothing */
     2158    14664    3           END;
     2159    14665
     2160    14666    2           XUX$INFO.XUX.ERROR_CODE = XUX_ERR;
     2161    14667    2           XUX$INFO.XUX.ERROR_CODE.ERR# = %E$XUX#SYNTAX_ERROR;
     2162    14668    2           GOTO GO_AWAY;
     2163    14669    2       END;     /* of syntax error processing */
     2164    14670    2       ELSE DO;
     2165    14671    2           CALL XUX$ERROR1(XUX$PCB.ERROR,'0'B) ALTRET(GO_AWAY);
     2166    14672    2           GOTO I_BLEW_IT_INTERNALLY;
     2167    14673    2       END;
     2168    14674    1   GO_AWAY: ;
     2169    14675             /* We come here when we're ready to return to the caller  */
     2170    14676
     2171    14677    1       CALL XUX$CLEANUP;
     2172    14678    1       IF XUX$MEM ~= VECTOR(NIL)
     2173    14679    2       THEN DO;
     2174    14680    2           CALL FREE_MEM
     2175    14681    3           WHENALTRETURN DO;
     2176    14682    3               CALL XUX$ERROR1(B$TCB$->B$TCB.ALT$->B$ALT.ERR,'0'B);
     2177    14683    3           END;
     2178    14684    2       END;
     2179    14685
     2180    14686    1       ALTRETURN;
     2181    14687
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:123  
     2182    14688    1   I_BLEW_IT_INTERNALLY: ;
     2183    14689    1       CALL XUX$ERROR(%E$XUX#INTERNAL_ERROR,'0'B);
     2184    14690    1       CALL M$ERR;
     2185    14691        /*I*
     2186    14692             NAME: GET_MEM
     2187    14693             PURPOSE:
     2188    14694                  Gets memory using M$GDS.
     2189    14695             CALL:
     2190    14696                  CALL GET_MEM(P_SIZE) ALTRET
     2191    14697             PARAMETERS:
     2192    14698                  P_SIZE  -  Amount of memory (in words) to get
     2193    14699             DESCRIPTION:
     2194    14700                  This routine call M$GDS and gets some memory. Altreturn if
     2195    14701                  errors occur.
     2196    14702        */
     2197    14703    1   GET_MEM:PROC (P_SIZE) ALTRET;
     2198    14704
     2199    14705    2   DCL P_SIZE UBIN PARAM;
     2200    14706
     2201    14707        %FPT_GDS(RESULTS=XUX$MEM,STCLASS=CONSTANT);
     2202    14723        %FPT_GDS(FPTN=GET_DS,STCLASS=AUTO);
     2203    14739
     2204    14740    2       GET_DS = FPT_GDS;
     2205    14741    2       GET_DS.V_ = VECTOR(GET_DS.V);
     2206    14742    2       GET_DS.V.SEGSIZE# = P_SIZE;
     2207    14743
     2208    14744    2       CALL M$GDS(GET_DS)
     2209    14745    3       WHENALTRETURN DO;
     2210    14746    3           ALTRETURN;     /* Don't worry about the error code */
     2211    14747    3       END;
     2212    14748
     2213    14749    2       RETURN;
     2214    14750    2   END GET_MEM;
     2215    14751        /*I*
     2216    14752             NAME: FREE_MEM
     2217    14753             PURPOSE:
     2218    14754                  Frees memory aquired by GET_MEM.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:124  
     2219    14755             CALL:
     2220    14756                  CALL FREE_MEM ALTRET;
     2221    14757             DATA:
     2222    14758                  XUX$MEM
     2223    14759             DESCRIPTION:
     2224    14760                  This routine calls M$FDS to free memory. The XUX$MEM vector
     2225    14761                  is used to decided what memory to free. Altreturn is taken
     2226    14762                  if any errors occur
     2227    14763        */
     2228    14764    1   FREE_MEM:PROC ALTRET;
     2229    14765
     2230    14766        %FPT_FDS(RESULTS=XUX$MEM,STCLASS=CONSTANT);
     2231    14781        %FPT_FDS(FPTN=FREE_DS,STCLASS=AUTO);
     2232    14796
     2233    14797    2       FREE_DS = FPT_FDS;
     2234    14798    2       FREE_DS.V_ = VECTOR(FREE_DS.V);
     2235    14799    2       FREE_DS.V.SEGSIZE# = (VBOUND(XUX$MEM)+1) / 4; /* Calc size in words */
     2236    14800
     2237    14801    2       CALL M$FDS(FREE_DS)
     2238    14802    3       WHENALTRETURN DO;
     2239    14803    3           ALTRETURN;
     2240    14804    3       END;
     2241    14805
     2242    14806    2       RETURN;
     2243    14807    2   END FREE_MEM;
     2244    14808        /*I*
     2245    14809             NAME: INSERT_FID
     2246    14810             PURPOSE:
     2247    14811                  Inserts a fid into the SRCH structure.
     2248    14812             CALL:
     2249    14813                  CALL INSERT_FID
     2250    14814             DATA:
     2251    14815                  SRCH_FID structure contains the important info.
     2252    14816             DESCRIPTION:
     2253    14817                  This internal proc inserts the passed account (FID) into
     2254    14818                  the SRCH structure after first checking to make sure that
     2255    14819                  no duplication of account, SN, and password would occur.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:125  
     2256    14820        */
     2257    14821
     2258    14822    1   INSERT_FID: PROC;
     2259    14823    2       TEMP_FID.ACCT = SRCH_FID.ACCT;
     2260    14824    2       TEMP_FID.NAME = SRCH_FID.NAME;
     2261    14825    2       TEMP_FID.PASS = SRCH_FID.PASS;
     2262    14826    2       TEMP_FID.SN = SRCH_FID.SN;
     2263    14827    2       TEMP_FID.WSN = SRCH_FID.WSN;
     2264    14828    2       TEMP_FID.ASN = SRCH_FID.ASN;
     2265    14829    2       TEMP_FID.RES = SRCH_FID.RES;
     2266    14830    3       DO J = 0 TO SEARCH_LIST.NUM - 1;
     2267    14831    3           IF TEMP_FID = SEARCH_LIST.ACCT_LIST(J)
     2268    14832    3           THEN RETURN;
     2269    14833    3       END;
     2270    14834    2       SEARCH_LIST.ACCT_LIST(J) = TEMP_FID;
     2271    14835    2       SEARCH_LIST.NUM =SEARCH_LIST.NUM + 1;
     2272    14836    2   END INSERT_FID;
     2273    14837    1   END XUX$COMMON_OPTIONS;
     2274    14838        %EOD;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:126  
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XUX$NODESUBS_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure XUX$COMMON_OPTIONS.

   Procedure XUX$COMMON_OPTIONS requires 2321 words for executable code.
   Procedure XUX$COMMON_OPTIONS requires 334 words of local(AUTO) storage.

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:127  

 Object Unit name= XUX$COMMON_OPTIONS                         File name= XUX$COMMON_OPTIONS.:E05TOU
 UTS= JUL 30 '97 09:46:44.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    167    247  XUX$COMMON_OPTIONS
    2   Data  even  none    18     22  XUX$COMMON_OPTIONS
    3   Proc  even  none  2321   4421  XUX$COMMON_OPTIONS
    4  RoData even  none   112    160  XUX$COMMON_OPTIONS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        1  XUX$COMMON_OPTIONS

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      0  XUX$PCB                            2     16  XUX$NSTD
    2     20  XUX$MEM
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:128  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 XUX$MORE_INPUT
 yes     yes           Std       8 XUX$ERROR
 yes     yes           Std       8 XUX$ERROR1
 yes     yes           Std       0 XUX$CLEANUP
 yes     yes           Std       1 XUX$GETLINE
 yes     yes           Std       1 X$PARSE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XUX$NODES                             XUX$DEFAULT_NSTD_NODES
     B$JIT$                                B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:129  


      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
      629        7        /*F*
      630        8             NAME:  XUX$COMMON_OPTIONS Service
      631        9             ..::IT "Format:"
      632       10                  CALL XUX$COMMON_OPTIONS (name) ALTRET (label);
      633       11             ..::IT "Parameters:"
      634       12                  name^^^^can be generated by invoking the macro
      635       13                  %XUX$PARAM.  That structure points to a number of other
      636       14                  parameter blocks which may be generated by the following
      637       15                  macros:  XUX$LEGAL_OPTIONS, XUX$STD_OPTIONS, XUX$BC_UNIT,
      638       16                  XUX$SRCH_LIST.
      639       17             ..::IT "Description:"
      640       18                  The XUX$COMMON_OPTIONS service parses the processor
      641       19                  invocation, based on various parameters that the caller
      642       20                  supplies.  These parameters include which (if any) of the
      643       21                  standard options are to be considered legal.  Other
      644       22                  parameters are pointers to the parse results block, the
      645       23                  list of accounts to search (if this is legal), the BC
      646       24                  compile unit numbers, and the user's non-standard node
      647       25                  handler, if supplied.
      648       26
      649       27                  On return from XUX$COMMON_OPTIONS, the XUX$STD_OPTIONS block
      650       28                  bits are set corresponding to the options found on the
      651       29                  processor invocation.
      652       30                  If no options are specified, then the CP-6 system defaults
      653       31                  of UI, LS, OU, BC(ALL), MSCHEMA, and NWARN are set.
      654       32                  The UI, LS, and OU options are also set by examining
      655       33                  the JIT flags to determine if anything was
      656       34                  present in the UI, OU and/or LS DCB positions.  In
      657       35                  addition, MSCHEMA will be forced (and will override
      658       36                  user-specified NSCHEMA) if any of the following are
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:130  
      659       37                  specified:  DMAP, MDMAP, PMAP, MPMAP.
      660       38
      661       39                  If non-standard options are to be used, then the proper bit
      662       40                  in XUX$LEGAL_OPTIONS must be set indicating this, and the
      663       41                  user-supplied nodes must be linked together with the
      664       42                  program.  The user nodes should be produced using
      665       43                  the PARTRGE processor to produce an object unit.
      666       44                  ..::HL "(See Appendix A\(Type !HELP (PARTRGE)"
      667       45                  for information on PARTRGE.)
      668       46                  The user sets XUX$PARAM.USER_NODES$ to ADDR(his_nodes).
      669       47                  When any non-standard option
      670       48                  is encountered, the user routine pointed to by
      671       49                  XUX$PARAM.USER_ROUTINE$$ is entered with a pointer to
      672       50                  the head of the non-standard node, and with a BIT(1)
      673       51                  variable as a parameter.  The user's routine should then
      674       52                  process this node and return, or ALTRETurn if the command
      675       53                  cannot be processed.  The BIT(1) variable should be set
      676       54                  to '1'B if the user's routine desires further processing by
      677       55                  XUX$COMMON_OPTIONS to cease and ALTRETurn to occur
      678       56                  immediately, or
      679       57                  '0'B if processing is to continue.  When the variable is
      680       58                  set to '1'B, XUX$COMMON_OPTIONS takes the ALTRETurn with
      681       59                  the XUX$PARAM.ERROR# flag set, and XUX$ERROR_CODE indicates
      682       60                  that an internal error occurred.
      683       61                  ..::IT "Error Conditions:"
      684       62                  If the XUX$COMMON_OPTIONS service encounters any errors
      685       63                  while parsing, one of several things may occur.  If the user
      686       64                  specified either DCB1 or DCB2 or both on the XUX$PARAM
      687       65                  macro, then if the error is a user error (such as a syntax
      688       66                  error), XUX$COMMON_OPTIONS writes an appropriate error
      689       67                  message through the DCB(s) and attempts to continue
      690       68                  processing.  If the error is internal (such as specifying
      691       69                  that BC is a valid option but failing to provide an
      692       70                  XUX$BC_UNIT structure) or if DCBs are specified for
      693       71                  neither DCB1 nor DCB2, the XUX$COMMON_OPTIONS service ALTRETurns
      694       72                  immediately upon encountering the error, with the error
      695       73                  code in XUX$PARAM.ERROR_CODE and with XUX$PARAM.ERROR# set
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:131  
      696       74                  to '1'B indicating unprocessed errors.
      697       75
      698       76                  It is the calling
      699       77                  program's responsibility to handle and report these errors.
      700       78                  Note that in the case where no DCBs are specified and a
      701       79                  user error occurs, the error code returned may be of
      702       80                  little use since there is no way to supply the error
      703       81                  message substitution fields, nor is there any way to
      704       82                  determine exactly where the error occurred, since
      705       83                  continuation lines may have been involved.
      706       84
      707       85                  If any errors
      708       86                  occur at all, the XUX$COMMON_OPTIONS service ALTRETurns
      709       87                  after all processing is complete with the error code in
      710       88                  XUX$PARAM.ERROR_CODE regardless of whether DCB1/DCB2 are
      711       89                  used.
      712       90        */
      713       91        /*D*
      714       92             NAME: XUX$COMMON_OPTIONS
      715       93             CALL:
      716       94                  CALL XUX$COMMON_OPTIONS(XUX$PARAM) ALTRET;
      717       95             PARAMETERS:
      718       96                  XUX$PARAM  - a parameter block generated by the XUX$PARAM macro.
      719       97             INTERFACE:
      720       98                  XUX$GETLINE
      721       99                  XUX$CLEANUP
      722      100                  M$ERRMSG
      723      101             INPUT:
      724      102                  Parameters specified by XUX$PARAM.
      725      103             OUTPUT:
      726      104                  Parameters specified by XUX$PARAM.
      727      105             DESCRIPTION:
      728      106                  This the main routine of the common options parser. Basically,
      729      107                  the following things occur: Parameter checking is performed to
      730      108                  make sure that all parameter specified have been done so
      731      109                  correctly. XUX$GETLINE is called as necessary to fetch the
      732      110                  command line, which is then passed to X$PARSE. The returned
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:132  
      733      111                  nodes are used to fill in XUX$STD_OPTIONS, in accordance
      734      112                  with options specified in XUX$LEGAL_OPTIONS. Error checking
      735      113                  is provided for duplicate and conflicting options and the
      736      114                  user is informed of same. Finally, XUX$CLEANUP is called and
      737      115                  control returns to the caller.  See AF# 0765A-0 for more
      738      116                  information.
      739      117        */
      740      118
      741      119        XUX$COMMON_OPTIONS: PROC (P_PARAM) ALTRET;

    119  3 000000   000000 700200 xent  XUX$COMMON_* TSX0  ! X66_AUTO_1
         3 000001   000516 000001                    ZERO    334,1

      742      120
      743      121        /*
      744      122             Include files
      745      123        */
      746      124
      747      125        %INCLUDE XUX$INTERFACE_M;
      748      902        %INCLUDE XUX$NODESUBS_C;
      749      963        %INCLUDE CP_6;
      750     6522        %INCLUDE CP_6_SUBS;
      751     7062        %INCLUDE U$JIT_C;
      752     7561        %INCLUDE XU_MACRO_C;
      753    10667        %INCLUDE XU_PERR_C;
      754    10858        %INCLUDE XU_SUBS_C;
      755    10950
      756    10951        /*
      757    10952             Parameters
      758    10953        */
      759    10954
      760    10955        %XUX$PARAM(NAME=P_PARAM,STCLASS=PARAM);
      761    11096
      762    11097        /*
      763    11098             Entries
      764    11099        */
      765    11100
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:133  
      766    11101    1   DCL XUX$GETLINE ENTRY(1) ALTRET;
      767    11102    1   DCL XUX$CLEANUP ENTRY ALTRET;
      768    11103    1   DCL X$PARSE ENTRY(1) ALTRET;
      769    11104    1   DCL XUX$ERROR ENTRY(8) ALTRET;
      770    11105    1   DCL XUX$ERROR1 ENTRY(8) ALTRET;
      771    11106    1   DCL XUX$MORE_INPUT ENTRY(1);
      772    11107
      773    11108
      774    11109        /*
      775    11110             Symref'd data
      776    11111        */
      777    11112    1   DCL XUX$NODES    UBIN  SYMREF;
      778    11113    1   DCL XUX$DEFAULT_NSTD_NODES UBIN SYMREF;
      779    11114        /*
      780    11115             System interface data
      781    11116        */
      782    11117
      783    11118        %B$TCB;
      784    11121        %B$ALT;
      785    11129
      786    11130    1   DCL B$JIT$ PTR SYMREF;
      787    11131    1   DCL B$TCB$ PTR SYMREF;
      788    11132
      789    11133        %FPT_ERRMSG(STCLASS=CONSTANT,NREAD=YES);
      790    11160        %FPT_ERRMSG(FPTN=PARSE_ERRMSG,STCLASS=AUTO);
      791    11187
      792    11188        %FPT_CORRES(STCLASS=CONSTANT);
      793    11202        %FPT_CORRES(FPTN=CORRES,STCLASS=AUTO);
      794    11216
      795    11217        %FPT_FID(STCLASS=CONSTANT);
      796    11240        %FPT_FID(FPTN=FID,STCLASS=AUTO);
      797    11263        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
      798    11282
      799    11283        /*
      800    11284             Parse Data
      801    11285        */
      802    11286
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:134  
      803    11287        %P_PCB(
      804    11288                NAME=XUX$PCB,
      805    11289                R=XUX$NODES,
      806    11290                U$=XUX$MORE_INPUT,
      807    11291                STCLASS=STATIC SYMDEF);
      808    11490        %PARSE$OUT(NAME=OPT$OUT,STCLASS="BASED(BLK$)");
      809    11535        %PARSE$SYM(NAME=OPT$SYM,STCLASS="BASED(BLK$)");
      810    11573    1   DCL BLK$ PTR;
      811    11574    1   DCL NSUBLKS SBIN;
      812    11575        /*      CHANGE THE FOLLOWING TO USE THE NEW MACRO AND PARSER!!!!!  */
      813    11576        %P$NODE(NAME=XUX$NSTD,
      814    11577                STCLASS=STATIC SYMDEF,
      815    11578                NDTYPE=KONCAT,
      816    11579                #SUBNODES=1,
      817    11580                SUBNODES="ADDR(XUX$DEFAULT_NSTD_NODES)");
      818    11674        /*
      819    11675             Local Data
      820    11676        */
      821    11677
      822    11678        %XUX$LEGAL_OPTIONS(STCLASS=BASED);
      823    11805        %XUX$STD_OPTIONS(STCLASS=BASED);
      824    11969        %XUX$BC_UNIT(STCLASS=BASED);
      825    12006        %XUX$SRCH_LIST(STCLASS=BASED);
      826    12101        %XUX$SRCH_LIST(NAME=XUX$FID_ONLY,FID_ONLY=YES,STCLASS=);
      827    12196        %VLP_ERRCODE(FPTN=XUX_ERR,FCG=XU,MID=X,STCLASS=CONSTANT);
      828    12241
      829    12242        %XUX$PARAM(NAME=XUX,STCLASS=);
      830    12383        %XUX$STD_OPTIONS(NAME=STD,STCLASS=);
      831    12547        %XUX$LEGAL_OPTIONS(NAME=LEGAL,STCLASS=);
      832    12674        %XUX$SRCH_LIST(NAME=SEARCH_LIST,STCLASS="BASED(SEARCH_LIST$)");
      833    12769
      834    12770        %XUX$PARAM_NO_PARSE(STCLASS=CONSTANT);
      835    12881        %XUX$PARAM_NO_PARSE(NAME=GETLINE_PARAM,STCLASS=);
      836    12992
      837    12993    1   DCL XUX$MEM VECTOR STATIC SYMDEF INIT(VECTOR(NIL));  /* Vector for GDS mem */
      838    12994
      839    12995    1   DCL XUX$MEM$ PTR;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:135  
      840    12996
      841    12997        %XUX$INFO;
      842    13149
      843    13150    1   DCL REC_INDEX(0:1023) UBIN BASED;
      844    13151
      845    13152    1   DCL BUF CHAR(256) ALIGNED BASED;
      846    13153
      847    13154    1   DCL I SBIN;
      848    13155    1   DCL J SBIN;
      849    13156    1   DCL K SBIN;
      850    13157    1   DCL TEMP SBIN WORD WALIGNED;
      851    13158    1   DCL LOOP SBIN;
      852    13159    1   DCL TEMP_OPT CHAR(20);
      853    13160    1   DCL TEMP_LEN SBIN;
      854    13161    1   DCL IND              SBIN;
      855    13162    1   DCL NUM_SRCH_ACCTS   SBIN  ALIGNED;
      856    13163    1   DCL SEARCH_LIST$     PTR;
      857    13164    1   DCL SRCH_LIST_SIZE   SBIN;
      858    13165    1   DCL SRCH_LIST_BUFFER CHAR(SRCH_LIST_SIZE) ALIGNED  BASED;
      859    13166
      860    13167    1   DCL BIT_VAL BIT(1) ALIGNED;
      861    13168
      862    13169    1   DCL DM_CHK(0:2) BIT(4) UNAL;
      863    13170    1   DCL 1 NDM,
      864    13171    1         2 BITS(0:3) BIT(1) UNAL;
      865    13172    1   DCL 1 NMDM,
      866    13173    1         2 BITS(0:3) BIT(1) UNAL;
      867    13174
      868    13175    1   DCL TEMP_BUF CHAR(256);
      869    13176
      870    13177
      871    13178    1   DCL TEMP_VECT VECTOR;  /* This is because PL6 won't allow BITVECT on
      872    13179                                  the left side of an expression */
      873    13180
      874    13181        %XUX$STD_OPTIONS(NAME=GOT_OPTIONS,STCLASS=AUTO);
      875    13345        %XUX$BC_UNIT(NAME=TEMP_BC,STCLASS=AUTO);
      876    13382
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:136  
      877    13383    1   DCL 1 GOT,
      878    13384    1         2 BC UBIN HALF,
      879    13385    1         2 LS UBIN HALF,
      880    13386    1         2 OU UBIN HALF,
      881    13387    1         2 SO UBIN HALF,
      882    13388    1         2 UI UBIN HALF,
      883    13389    1         2 WARN UBIN HALF,
      884    13390    1         2 PMAP UBIN HALF,
      885    13391    1         2 SCHEMA UBIN HALF,
      886    13392    1         2 UREF UBIN HALF,
      887    13393    1         2 XREF UBIN HALF,
      888    13394    1         2 LO UBIN HALF,
      889    13395    1         2 SRCH UBIN HALF,
      890    13396    1         2 DMAP UBIN HALF,
      891    13397    1         2 MDMAP UBIN HALF,
      892    13398    1         2 NSTD UBIN HALF;
      893    13399
      894    13400
      895    13401
      896    13402    1   DCL 1  SRCH_FID,
      897    13403    1         2  NAME  CHAR(32),
      898    13404    1         2  ACCT  CHAR(8),
      899    13405    1         2  PASS  CHAR(8),
      900    13406    1         2  SN    CHAR(10),
      901    13407    1         2  WSN   CHAR(8),
      902    13408    1         2  ASN   UBIN BYTE,
      903    13409    1         2  RES   CHAR(4);
      904    13410
      905    13411    1   DCL 1  TEMP_FID,
      906    13412    1         2  ACCT CHAR(8),
      907    13413    1         2  PASS CHAR(8),
      908    13414    1         2  SN   CHAR(10),
      909    13415    1         2  WSN CHAR(8),
      910    13416    1         2  ASN UBIN BYTE,
      911    13417    1         2  RES CHAR(4),
      912    13418    1         2  NAME CHAR(32);
      913    13419    1   DCL CURRENT_ACCOUNT_FID CHAR(0) CONSTANT INIT('.');
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:137  
      914    13420    1   DCL DEFAULT_SRCH_ACCOUNT_FID CHAR(0) CONSTANT INIT ('.:LIBRARY');
      915    13421    1   DCL 1 OPT_MSG BASED(T$),
      916    13422    1         2 LEN UBIN BYTE CALIGNED,
      917    13423    1         2 TEXT CHAR(OPT_MSG.LEN);
      918    13424    1   DCL T$ PTR;
      919    13425
      920    13426    1   DCL 1 T ALIGNED CONSTANT,
      921    13427        %SET NEXT = 1;
      922    13428        %EQU OFF_DMAP = NEXT;
      923    13429    1         2 * UBIN BYTE CALIGNED INIT(4),
      924    13430    1         2 * CHAR(4) CALIGNED INIT('DMAP'),
      925    13431        %SET NEXT = NEXT + 5;
      926    13432        %EQU OFF_NDMAP = NEXT;
      927    13433    1         2 * UBIN BYTE CALIGNED INIT(5),
      928    13434    1         2 * CHAR(5) CALIGNED INIT('NDMAP'),
      929    13435        %SET NEXT = NEXT + 6;
      930    13436        %EQU OFF_MDMAP = NEXT;
      931    13437    1         2 * UBIN BYTE CALIGNED INIT(5),
      932    13438    1         2 * CHAR(5) CALIGNED INIT('MDMAP'),
      933    13439        %SET NEXT = NEXT + 6;
      934    13440        %EQU OFF_NMDMAP = NEXT;
      935    13441    1         2 * UBIN BYTE CALIGNED INIT(6),
      936    13442    1         2 * CHAR(6) CALIGNED INIT('NMDMAP'),
      937    13443        %SET NEXT = NEXT + 7;
      938    13444        %EQU OFF_LO = NEXT;
      939    13445    1         2 * UBIN BYTE CALIGNED INIT(2),
      940    13446    1         2 * CHAR(2) CALIGNED INIT('LO'),
      941    13447        %SET NEXT = NEXT + 3;
      942    13448        %EQU OFF_NLO = NEXT;
      943    13449    1         2 * UBIN BYTE CALIGNED INIT(3),
      944    13450    1         2 * CHAR(3) CALIGNED INIT('NLO'),
      945    13451        %SET NEXT = NEXT + 4;
      946    13452        %EQU OFF_LS = NEXT;
      947    13453    1         2 * UBIN BYTE CALIGNED INIT(2),
      948    13454    1         2 * CHAR(2) CALIGNED INIT('LS'),
      949    13455        %SET NEXT = NEXT + 3;
      950    13456        %EQU OFF_NLS = NEXT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:138  
      951    13457    1         2 * UBIN BYTE CALIGNED INIT(3),
      952    13458    1         2 * CHAR(3) CALIGNED INIT('NLS'),
      953    13459        %SET NEXT = NEXT + 4;
      954    13460        %EQU OFF_OU = NEXT;
      955    13461    1         2 * UBIN BYTE CALIGNED INIT(2),
      956    13462    1         2 * CHAR CALIGNED INIT('OU'),
      957    13463        %SET NEXT = NEXT + 3;
      958    13464        %EQU OFF_NOU = NEXT;
      959    13465    1         2 * UBIN BYTE CALIGNED INIT(3),
      960    13466    1         2 * CHAR(3) CALIGNED INIT('NOU'),
      961    13467        %SET NEXT = NEXT + 4;
      962    13468        %EQU OFF_PMAP = NEXT;
      963    13469    1         2 * UBIN BYTE CALIGNED INIT(4),
      964    13470    1         2 * CHAR(4) CALIGNED INIT('PMAP'),
      965    13471        %SET NEXT = NEXT + 5;
      966    13472        %EQU OFF_MPMAP = NEXT;
      967    13473    1         2 * UBIN BYTE CALIGNED INIT(5),
      968    13474    1         2 * CHAR(5) CALIGNED INIT('MPMAP'),
      969    13475        %SET NEXT = NEXT + 6;
      970    13476        %EQU OFF_NPMAP = NEXT;
      971    13477    1         2 * UBIN BYTE CALIGNED INIT(5),
      972    13478    1         2 * CHAR(5) CALIGNED INIT('NPMAP'),
      973    13479        %SET NEXT = NEXT + 6;
      974    13480        %EQU OFF_SCHEMA = NEXT;
      975    13481    1         2 * UBIN BYTE CALIGNED INIT(6),
      976    13482    1         2 * CHAR(6) CALIGNED INIT('SCHEMA'),
      977    13483        %SET NEXT = NEXT + 7;
      978    13484        %EQU OFF_NSCHEMA = NEXT;
      979    13485    1         2 * UBIN BYTE CALIGNED INIT(7),
      980    13486    1         2 * CHAR(7) CALIGNED INIT('NSCHEMA'),
      981    13487        %SET NEXT = NEXT + 8;
      982    13488        %EQU OFF_MSCHEMA = NEXT;
      983    13489    1         2 * UBIN BYTE CALIGNED INIT(7),
      984    13490    1         2 * CHAR(7) CALIGNED INIT('MSCHEMA'),
      985    13491        %SET NEXT = NEXT + 8;
      986    13492        %EQU OFF_SO = NEXT;
      987    13493    1         2 * UBIN BYTE CALIGNED INIT(2),
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:139  
      988    13494    1         2 * CHAR(2) CALIGNED INIT('SO'),
      989    13495        %SET NEXT = NEXT + 3;
      990    13496        %EQU OFF_NSO = NEXT;
      991    13497    1         2 * UBIN BYTE CALIGNED INIT(3),
      992    13498    1         2 * CHAR(3) CALIGNED INIT('NSO'),
      993    13499        %SET NEXT = NEXT + 4;
      994    13500        %EQU OFF_SRCH = NEXT;
      995    13501    1         2 * UBIN BYTE CALIGNED INIT(4),
      996    13502    1         2 * CHAR(4) CALIGNED INIT('SRCH'),
      997    13503        %SET NEXT = NEXT + 5;
      998    13504        %EQU OFF_UI = NEXT;
      999    13505    1         2 * UBIN BYTE CALIGNED INIT(2),
     1000    13506    1         2 * CHAR(2) CALIGNED INIT('UI'),
     1001    13507        %SET NEXT = NEXT + 3;
     1002    13508        %EQU OFF_NUI = NEXT;
     1003    13509    1         2 * UBIN BYTE CALIGNED INIT(3),
     1004    13510    1         2 * CHAR(3) CALIGNED INIT('NUI'),
     1005    13511        %SET NEXT = NEXT + 4;
     1006    13512        %EQU OFF_OPTUI = NEXT;
     1007    13513    1         2 * UBIN BYTE CALIGNED INIT(5),
     1008    13514    1         2 * CHAR(5) CALIGNED INIT('OPTUI'),
     1009    13515        %SET NEXT = NEXT + 6;
     1010    13516        %EQU OFF_UREF = NEXT;
     1011    13517    1         2 * UBIN BYTE CALIGNED INIT(4),
     1012    13518    1         2 * CHAR(4) CALIGNED INIT('UREF'),
     1013    13519        %SET NEXT = NEXT + 5;
     1014    13520        %EQU OFF_NUREF = NEXT;
     1015    13521    1         2 * UBIN BYTE CALIGNED INIT(5),
     1016    13522    1         2 * CHAR(5) CALIGNED INIT('NUREF'),
     1017    13523        %SET NEXT = NEXT + 6;
     1018    13524        %EQU OFF_MUREF = NEXT;
     1019    13525    1         2 * UBIN BYTE CALIGNED INIT(5),
     1020    13526    1         2 * CHAR(5) CALIGNED INIT('MUREF'),
     1021    13527        %SET NEXT = NEXT + 6;
     1022    13528        %EQU OFF_WARN = NEXT;
     1023    13529    1         2 * UBIN BYTE CALIGNED INIT(4),
     1024    13530    1         2 * CHAR(4) CALIGNED INIT('WARN'),
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:140  
     1025    13531        %SET NEXT = NEXT + 5;
     1026    13532        %EQU OFF_NWARN = NEXT;
     1027    13533    1         2 * UBIN BYTE CALIGNED INIT(5),
     1028    13534    1         2 * CHAR(5) CALIGNED INIT('NWARN'),
     1029    13535        %SET NEXT = NEXT + 6;
     1030    13536        %EQU OFF_XREF = NEXT;
     1031    13537    1         2 * UBIN BYTE CALIGNED INIT(4),
     1032    13538    1         2 * CHAR(4) CALIGNED INIT('XREF'),
     1033    13539        %SET NEXT = NEXT + 5;
     1034    13540        %EQU OFF_NXREF = NEXT;
     1035    13541    1         2 * UBIN BYTE CALIGNED INIT(5),
     1036    13542    1         2 * CHAR(5) CALIGNED INIT('NXREF'),
     1037    13543        %SET NEXT = NEXT + 6;
     1038    13544        %EQU OFF_MXREF = NEXT;
     1039    13545    1         2 * UBIN BYTE CALIGNED INIT(5),
     1040    13546    1         2 * CHAR(5) CALIGNED INIT('MXREF'),
     1041    13547        %SET NEXT = NEXT + 6;
     1042    13548        %EQU OFF_BC = NEXT;
     1043    13549    1         2 * UBIN BYTE CALIGNED INIT(2),
     1044    13550    1         2 * CHAR(2) CALIGNED INIT('BC');
     1045    13551        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:141  
     1046    13552        /*
     1047    13553             First do some preliminary error checking of the parameters.
     1048    13554             i.e. Make sure that if LEGAL_OPTIONS.BC is specified that
     1049    13555             BC_UNIT is not nil in the param block.
     1050    13556        */
     1051    13557
     1052    13558    1       IF ADDR(P_PARAM) = ADDR(NIL)

  13558  3 000002   200003 236100                    LDQ     @P_PARAM,,AUTO
         3 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000004   000006 601000 3                  TNZ     s:13564

     1053    13559    2       THEN DO;

     1054    13560    2           ALTRETURN; /* Can't even pass back a code, since we don't

  13560  3 000005   000000 702200 xent               TSX2  ! X66_AALT

     1055    13561                            know anything without the param block.   */
     1056    13562    2       END;
     1057    13563
     1058    13564    1       IF (P_PARAM.LEGAL_OPTIONS$->XUX$LEGAL_OPTIONS.SRCH_SIZ#)

  13564  3 000006   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 000007   000000 471500                    LDP1    0,,PR0
         3 000010   100000 236100                    LDQ     0,,PR1
         3 000011   000001 316003                    CANQ    1,DU
         3 000012   000020 600000 3                  TZE     s:13566

     1059    13565    1       THEN NUM_SRCH_ACCTS = P_PARAM.SRCH_LIST$->XUX$SRCH_LIST.NUM - 2;

  13565  3 000013   000003 473500                    LDP3    3,,PR0
         3 000014   300000 235100                    LDA     0,,PR3
         3 000015   000002 135007                    SBLA    2,DL
         3 000016   200237 755100                    STA     NUM_SRCH_ACCTS,,AUTO
         3 000017   000022 710000 3                  TRA     s:13567

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:142  
     1060    13566    1       ELSE NUM_SRCH_ACCTS = %(XUX$ACCT_MAX - 2);

  13566  3 000020   000010 235007                    LDA     8,DL
         3 000021   200237 755100                    STA     NUM_SRCH_ACCTS,,AUTO

     1061    13567    1      CALL GET_MEM(3072 + SIZEW(XUX$INFO) + (NUM_SRCH_ACCTS + 2) * SIZEW(XUX$FID_ONLY)
             13567                + 2)

  13567  3 000022   200237 236100                    LDQ     NUM_SRCH_ACCTS,,AUTO
         3 000023   000023 402007                    MPY     19,DL
         3 000024   006076 036007                    ADLQ    3134,DL
         3 000025   200514 756100                    STQ     FREE_DS+12,,AUTO
         3 000026   200514 631500                    EPPR1   FREE_DS+12,,AUTO
         3 000027   200477 451500                    STP1    T$+2,,AUTO
         3 000030   004263 701000 3                  TSX1    GET_MEM
         3 000031   000033 702000 3                  TSX2    s:13573
         3 000032   000044 710000 3                  TRA     s:13581

     1062    13568    2       WHENALTRETURN DO;

     1063    13569             /* This is a very special case. We'll do all the error setup
     1064    13570                without calling the error routine since it can't do anything
     1065    13571                anyway.
     1066    13572             */
     1067    13573    2           P_PARAM.ERROR_CODE = XUX_ERR;

  13573  3 000033   000066 236000 1                  LDQ     XUX_ERR
         3 000034   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 000035   000006 756100                    STQ     6,,PR0

     1068    13574    2           P_PARAM.ERROR_CODE.ERR# = %E$XUX#CANT_GET_MEM;

  13574  3 000036   000000 376000 4                  ANQ     0
         3 000037   013060 276007                    ORQ     5680,DL
         3 000040   000006 756100                    STQ     6,,PR0

     1069    13575    2           P_PARAM.ERROR# = '1'B;     /* Indicate that it can't be handled */
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:143  

  13575  3 000041   400000 236003                    LDQ     -131072,DU
         3 000042   000007 756100                    STQ     7,,PR0

     1070    13576    2           ALTRETURN;

  13576  3 000043   000000 702200 xent               TSX2  ! X66_AALT

     1071    13577    2       END;
     1072    13578
     1073    13579        /*  GET_MEM returns the vector of the memory we got in XUX$MEM  */
     1074    13580
     1075    13581    1       XUX$MEM$ = VBASE(XUX$MEM);

  13581  3 000044   000021 236000 2                  LDQ     XUX$MEM+1
         3 000045   200222 756100                    STQ     XUX$MEM$,,AUTO

     1076    13582
     1077    13583    1       XUX$INFO.XUX = P_PARAM;

  13583  3 000046   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 000047   200222 471500                    LDP1    XUX$MEM$,,AUTO
         3 000050   000100 100500                    MLR     fill='000'O
         3 000051   000000 000104                    ADSC9   0,,PR0                   cn=0,n=68
         3 000052   100005 000104                    ADSC9   5,,PR1                   cn=0,n=68

     1078    13584
     1079    13585    1       IF XUX$INFO.XUX.LEGAL_OPTIONS$ = ADDR(NIL)

  13585  3 000053   100005 236100                    LDQ     5,,PR1
         3 000054   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000055   000063 601000 3                  TNZ     s:13591

     1080    13586    2       THEN DO;

     1081    13587    2           CALL XUX$ERROR (%E$XUX#MUST_HAVE_LEGAL_OPTIONS,'0'B) ALTRET(GO_AWAY);

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:144  
  13587  3 000056   000002 630400 4                  EPPR0   2
         3 000057   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000060   000000 701000 xent               TSX1    XUX$ERROR
         3 000061   004230 702000 3                  TSX2    GO_AWAY

     1082    13588    2           GOTO I_BLEW_IT_INTERNALLY;

  13588  3 000062   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1083    13589    2       END;
     1084    13590
     1085    13591    1       LEGAL = XUX$INFO.XUX.LEGAL_OPTIONS$->XUX$LEGAL_OPTIONS;

  13591  3 000063   100005 473500                    LDP3    5,,PR1
         3 000064   000100 100500                    MLR     fill='000'O
         3 000065   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         3 000066   200205 000010                    ADSC9   LEGAL,,AUTO              cn=0,n=8

     1086    13592    1       SEARCH_LIST$ = PINCRW (XUX$MEM$, 3072 + SIZEW(XUX$INFO));

  13592  3 000067   200222 236100                    LDQ     XUX$MEM$,,AUTO
         3 000070   006026 036003                    ADLQ    3094,DU
         3 000071   200240 756100                    STQ     SEARCH_LIST$,,AUTO

     1087    13593
     1088    13594
     1089    13595    1       IF XUX$INFO.XUX.STD_OPTIONS$ = ADDR(NIL)

  13595  3 000072   100006 236100                    LDQ     6,,PR1
         3 000073   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000074   000102 601000 3                  TNZ     s:13601

     1090    13596    2       THEN DO;

     1091    13597    2           CALL XUX$ERROR (%E$XUX#MUST_HAVE_STD_OPTIONS,'0'B) ALTRET (GO_AWAY);

  13597  3 000075   000005 630400 4                  EPPR0   5
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:145  
         3 000076   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000077   000000 701000 xent               TSX1    XUX$ERROR
         3 000100   004230 702000 3                  TSX2    GO_AWAY

     1092    13598    2           GOTO I_BLEW_IT_INTERNALLY;

  13598  3 000101   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1093    13599    2       END;
     1094    13600
     1095    13601    1       STD = XUX$INFO.XUX.STD_OPTIONS$->XUX$STD_OPTIONS;

  13601  3 000102   100006 473500                    LDP3    6,,PR1
         3 000103   000100 100500                    MLR     fill='000'O
         3 000104   300000 000154                    ADSC9   0,,PR3                   cn=0,n=108
         3 000105   200152 000154                    ADSC9   STD,,AUTO                cn=0,n=108

     1096    13602
     1097    13603
     1098    13604    1       IF LEGAL.BC#

  13604  3 000106   200205 234100                    SZN     LEGAL,,AUTO
         3 000107   000120 605000 3                  TPL     s:13613

     1099    13605    2       THEN DO;

     1100    13606    2           IF XUX$INFO.XUX.BC_UNIT$ = ADDR(NIL)

  13606  3 000110   100007 236100                    LDQ     7,,PR1
         3 000111   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000112   000120 601000 3                  TNZ     s:13613

     1101    13607    3           THEN DO;

     1102    13608    3               CALL XUX$ERROR(%E$XUX#NO_BC_STRUCT,'0'B) ALTRET (GO_AWAY);

  13608  3 000113   000010 630400 4                  EPPR0   8
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:146  
         3 000114   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000115   000000 701000 xent               TSX1    XUX$ERROR
         3 000116   004230 702000 3                  TSX2    GO_AWAY

     1103    13609    3               GOTO I_BLEW_IT_INTERNALLY;

  13609  3 000117   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1104    13610    3           END;
     1105    13611    2       END;
     1106    13612
     1107    13613    1       IF LEGAL.SRCH#

  13613  3 000120   200205 430100                    FSZN    LEGAL,,AUTO
         3 000121   000132 605000 3                  TPL     s:13622

     1108    13614    2       THEN DO;

     1109    13615    2           IF XUX$INFO.XUX.SRCH_LIST$ = ADDR(NIL)

  13615  3 000122   100010 236100                    LDQ     8,,PR1
         3 000123   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000124   000132 601000 3                  TNZ     s:13622

     1110    13616    3           THEN DO;

     1111    13617    3               CALL XUX$ERROR(%E$XUX#NO_SRCH_LIST_STRUCT,'0'B) ALTRET (GO_AWAY);

  13617  3 000125   000013 630400 4                  EPPR0   11
         3 000126   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000127   000000 701000 xent               TSX1    XUX$ERROR
         3 000130   004230 702000 3                  TSX2    GO_AWAY

     1112    13618    3               GOTO I_BLEW_IT_INTERNALLY;

  13618  3 000131   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:147  
     1113    13619    3           END;
     1114    13620    2       END;
     1115    13621
     1116    13622    1       IF LEGAL.NSTD#

  13622  3 000132   200205 236100                    LDQ     LEGAL,,AUTO
         3 000133   000020 316003                    CANQ    16,DU
         3 000134   000154 600000 3                  TZE     s:13636

     1117    13623    2       THEN DO;

     1118    13624    2           IF XUX$INFO.XUX.USER_ROUTINE$$ = ENTADDR(NIL) OR

  13624  3 000135   100011 236100                    LDQ     9,,PR1
         3 000136   000002 116000 xsym               CMPQ    B_VECTNIL+2
         3 000137   000143 600000 3                  TZE     s:13627
         3 000140   100012 236100                    LDQ     10,,PR1
         3 000141   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000142   000152 601000 3                  TNZ     s:13632

     1119    13625    2             XUX$INFO.XUX.USER_NODES$ = ADDR(NIL)
     1120    13626    3           THEN DO;

     1121    13627    3               XUX$NSTD.SUBNDS$(0) = ADDR(XUX$DEFAULT_NSTD_NODES);

  13627  3 000143   000015 236000 4                  LDQ     13
         3 000144   000017 756000 2                  STQ     XUX$NSTD+1

     1122    13628    3               CALL XUX$ERROR(%E$XUX#NO_USER_ROUTINE,'0'B) ALTRET (GO_AWAY);

  13628  3 000145   000017 630400 4                  EPPR0   15
         3 000146   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000147   000000 701000 xent               TSX1    XUX$ERROR
         3 000150   004230 702000 3                  TSX2    GO_AWAY

     1123    13629    3               GOTO I_BLEW_IT_INTERNALLY;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:148  
  13629  3 000151   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1124    13630    3           END;
     1125    13631    3           ELSE DO;

     1126    13632    3               XUX$NSTD.SUBNDS$(0) = XUX$INFO.XUX.USER_NODES$;

  13632  3 000152   000017 756000 2                  STQ     XUX$NSTD+1

     1127    13633    3           END;

     1128    13634    2       END;

  13634  3 000153   000156 710000 3                  TRA     s:13643

     1129    13635    2       ELSE DO;

     1130    13636    2           XUX$NSTD.SUBNDS$(0) = ADDR(XUX$DEFAULT_NSTD_NODES);

  13636  3 000154   000015 236000 4                  LDQ     13
         3 000155   000017 756000 2                  STQ     XUX$NSTD+1

     1131    13637    2       END;

     1132    13638
     1133    13639        /*
     1134    13640             Now do some internal initialization
     1135    13641        */
     1136    13642
     1137    13643    1       GOT_OPTIONS = '0'B;

  13643  3 000156   000100 100400                    MLR     fill='000'O
         3 000157   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000160   200350 000154                    ADSC9   GOT_OPTIONS,,AUTO        cn=0,n=108

     1138    13644    1       SEARCH_LIST.NUM = 0;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:149  
  13644  3 000161   200240 473500                    LDP3    SEARCH_LIST$,,AUTO
         3 000162   300000 450100                    STZ     0,,PR3

     1139    13645    1       GETLINE_PARAM = XUX$PARAM_NO_PARSE;

  13645  3 000163   000100 100400                    MLR     fill='000'O
         3 000164   000070 000050 1                  ADSC9   XUX$PARAM_NO_PARSE       cn=0,n=40
         3 000165   200210 000050                    ADSC9   GETLINE_PARAM,,AUTO      cn=0,n=40

     1140    13646    1       GETLINE_PARAM.DISP_ONLY# = '1'B;

  13646  3 000166   400000 236003                    LDQ     -131072,DU
         3 000167   200215 756100                    STQ     GETLINE_PARAM+5,,AUTO

     1141    13647
     1142    13648        /*
     1143    13649             Set up the flags for UI,OU, and LS dcbs if allowed.
     1144    13650        */
     1145    13651
     1146    13652    1       IF B$JIT.PRFLAGS.UI

  13652  3 000170   000000 474400 xsym               LDP4    B$JIT$
         3 000171   400030 236100                    LDQ     24,,PR4
         3 000172   200000 316003                    CANQ    65536,DU
         3 000173   000206 600000 3                  TZE     s:13661

     1147    13653    2       THEN DO;

     1148    13654    2           IF LEGAL.DCB_UI#

  13654  3 000174   200205 236100                    LDQ     LEGAL,,AUTO
         3 000175   000010 316003                    CANQ    8,DU
         3 000176   000202 600000 3                  TZE     s:13657

     1149    13655    2           THEN GOT_OPTIONS.UI = '1'B;

  13655  3 000177   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:150  
         3 000200   200362 756100                    STQ     GOT_OPTIONS+10,,AUTO
         3 000201   000206 710000 3                  TRA     s:13661

     1150    13656    3           ELSE DO;

     1151    13657    3               CALL XUX$ERROR (%E$XUX#ILLEGAL_DCB_FOUND,'1'B,2,'UI') ALTRET(GO_AWAY);

  13657  3 000202   000022 630400 4                  EPPR0   18
         3 000203   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000204   000000 701000 xent               TSX1    XUX$ERROR
         3 000205   004230 702000 3                  TSX2    GO_AWAY

     1152    13658    3           END;

     1153    13659    2       END;

     1154    13660
     1155    13661    1       IF B$JIT.PRFLAGS.OU

  13661  3 000206   000000 470400 xsym               LDP0    B$JIT$
         3 000207   000030 236100                    LDQ     24,,PR0
         3 000210   100000 316003                    CANQ    32768,DU
         3 000211   000224 600000 3                  TZE     s:13670

     1156    13662    2       THEN DO;

     1157    13663    2           IF LEGAL.DCB_OU#

  13663  3 000212   200205 236100                    LDQ     LEGAL,,AUTO
         3 000213   000004 316003                    CANQ    4,DU
         3 000214   000220 600000 3                  TZE     s:13666

     1158    13664    2           THEN GOT_OPTIONS.OU = '1'B;

  13664  3 000215   400000 236003                    LDQ     -131072,DU
         3 000216   200355 756100                    STQ     GOT_OPTIONS+5,,AUTO
         3 000217   000224 710000 3                  TRA     s:13670
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:151  

     1159    13665    3           ELSE DO;

     1160    13666    3               CALL XUX$ERROR (%E$XUX#ILLEGAL_DCB_FOUND,'1'B,2,'OU') ALTRET(GO_AWAY);

  13666  3 000220   000026 630400 4                  EPPR0   22
         3 000221   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000222   000000 701000 xent               TSX1    XUX$ERROR
         3 000223   004230 702000 3                  TSX2    GO_AWAY

     1161    13667    3           END;

     1162    13668    2       END;

     1163    13669
     1164    13670    1       IF B$JIT.PRFLAGS.LS

  13670  3 000224   000000 470400 xsym               LDP0    B$JIT$
         3 000225   000030 236100                    LDQ     24,,PR0
         3 000226   040000 316003                    CANQ    16384,DU
         3 000227   000242 600000 3                  TZE     s:13683

     1165    13671    2       THEN DO;

     1166    13672    2           IF LEGAL.DCB_LS#

  13672  3 000230   200205 236100                    LDQ     LEGAL,,AUTO
         3 000231   000002 316003                    CANQ    2,DU
         3 000232   000236 600000 3                  TZE     s:13675

     1167    13673    2           THEN GOT_OPTIONS.LS = '1'B;

  13673  3 000233   400000 236003                    LDQ     -131072,DU
         3 000234   200354 756100                    STQ     GOT_OPTIONS+4,,AUTO
         3 000235   000242 710000 3                  TRA     s:13683

     1168    13674    3           ELSE DO;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:152  

     1169    13675    3               CALL XUX$ERROR (%E$XUX#ILLEGAL_DCB_FOUND,'1'B,2,'LS') ALTRET(GO_AWAY);

  13675  3 000236   000032 630400 4                  EPPR0   26
         3 000237   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000240   000000 701000 xent               TSX1    XUX$ERROR
         3 000241   004230 702000 3                  TSX2    GO_AWAY

     1170    13676    3           END;

     1171    13677    2       END;

     1172    13678
     1173    13679        /*
     1174    13680             Set up the rest of the default options
     1175    13681        */
     1176    13682
     1177    13683    1       IF LEGAL.BC#

  13683  3 000242   200205 234100                    SZN     LEGAL,,AUTO
         3 000243   000245 605000 3                  TPL     s:13685

     1178    13684    1       THEN GOT_OPTIONS.BC = %XUX$ALL;   /* BC(ALL) */

  13684  3 000244   200350 450100                    STZ     GOT_OPTIONS,,AUTO

     1179    13685    1       IF LEGAL.SCHEMA#

  13685  3 000245   200205 236100                    LDQ     LEGAL,,AUTO
         3 000246   004000 316003                    CANQ    2048,DU
         3 000247   000252 600000 3                  TZE     s:13687

     1180    13686    1       THEN GOT_OPTIONS.SCHEMA = %XUX$MINI;    /* MSCHEMA */

  13686  3 000250   000002 235007                    LDA     2,DL
         3 000251   200357 755100                    STA     GOT_OPTIONS+7,,AUTO

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:153  
     1181    13687    1       IF LEGAL.WARN#

  13687  3 000252   000100 316003                    CANQ    64,DU
         3 000253   000255 600000 3                  TZE     s:13689

     1182    13688    1       THEN GOT_OPTIONS.WARN = '0'B;     /* NWARN */

  13688  3 000254   200365 450100                    STZ     GOT_OPTIONS+13,,AUTO

     1183    13689    1       IF LEGAL.SRCH#

  13689  3 000255   200205 430100                    FSZN    LEGAL,,AUTO
         3 000256   000261 605000 3                  TPL     s:13706

     1184    13690    1       THEN GOT_OPTIONS.SRCH = '1'B;  /* SRCH(.:LIBRARY, . ) */

  13690  3 000257   400000 236003                    LDQ     -131072,DU
         3 000260   200361 756100                    STQ     GOT_OPTIONS+9,,AUTO

     1185    13691        /*
     1186    13692             It's parsing time!
     1187    13693
     1188    13694             Initialize the XUX$PARAM_NO_PARSE structure, the PCB
     1189    13695             structure, and start parsing.
     1190    13696             Also, allocate buffer space and work space for the parser from
     1191    13697             a data segment.
     1192    13698
     1193    13699             In future versions, buffer size will be determined by
     1194    13700             B$JIT.CCARS when that is accurate. For now, we'll just use
     1195    13701             1k words each for the buffer and the parser areas, and 1k words
     1196    13702             for the array containing the start indexes of each record into
     1197    13703             the buffer.
     1198    13704        */
     1199    13705
     1200    13706    1       XUX$PCB.WKSZ=1024;    /* Set up the parse work area */

  13706  3 000261   002000 220003                    LDX0    1024,DU
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:154  
         3 000262   000005 740000 2                  STX0    XUX$PCB+5

     1201    13707    1       XUX$INFO.WORK$=PINCRW(XUX$MEM$,SIZEW(XUX$INFO)+2048);

  13707  3 000263   200222 236100                    LDQ     XUX$MEM$,,AUTO
         3 000264   004026 036003                    ADLQ    2070,DU
         3 000265   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 000266   000002 756100                    STQ     2,,PR0

     1202    13708    1       XUX$PCB.WORK$=XUX$INFO.WORK$;        /* Use upper 1k for work */

  13708  3 000267   000002 756000 2                  STQ     XUX$PCB+2

     1203    13709
     1204    13710    1       XUX$INFO.REC_INDEX$ = PINCRW(XUX$MEM$,SIZEW(XUX$INFO)+1024);
             13710                /* Array for indexes */

  13710  3 000270   200222 236100                    LDQ     XUX$MEM$,,AUTO
         3 000271   002026 036003                    ADLQ    1046,DU
         3 000272   000001 756100                    STQ     1,,PR0

     1205    13711
     1206    13712    1       XUX$INFO.PARSE_BUF$ = PINCRW(XUX$MEM$,SIZEW(XUX$INFO));

  13712  3 000273   200222 236100                    LDQ     XUX$MEM$,,AUTO
         3 000274   000026 036003                    ADLQ    22,DU
         3 000275   000000 756100                    STQ     0,,PR0

     1207    13713    1       XUX$INFO.BUF_SIZE = 1024;   /* Parse size is fixed at 1k words for now */

  13713  3 000276   002000 235007                    LDA     1024,DL
         3 000277   000004 755100                    STA     4,,PR0

     1208    13714    1      GETLINE_PARAM.BUFFER_=VECTOR(XUX$INFO.PARSE_BUF$->BUF); /* Set up read buffer */

  13714  3 000300   000000 471500                    LDP1    0,,PR0
         3 000301   000036 235000 4                  LDA     30
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:155  
         3 000302   200506 451500                    STP1    FREE_DS+6,,AUTO
         3 000303   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 000304   200210 757100                    STAQ    GETLINE_PARAM,,AUTO

     1209    13715
     1210    13716    1       CALL XUX$GETLINE(GETLINE_PARAM)

  13716  3 000305   200210 631500                    EPPR1   GETLINE_PARAM,,AUTO
         3 000306   200506 451500                    STP1    FREE_DS+6,,AUTO
         3 000307   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 000310   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000311   000000 701000 xent               TSX1    XUX$GETLINE
         3 000312   000314 702000 3                  TSX2    s:13718
         3 000313   000325 710000 3                  TRA     s:13722

     1211    13717    2       WHENALTRETURN DO;

     1212    13718    2           CALL XUX$ERROR1(GETLINE_PARAM.ERROR_CODE,'0'B) ALTRET(GO_AWAY);

  13718  3 000314   000003 236000 4                  LDQ     3
         3 000315   200507 756100                    STQ     FREE_DS+7,,AUTO
         3 000316   200213 630500                    EPPR0   GETLINE_PARAM+3,,AUTO
         3 000317   200506 450500                    STP0    FREE_DS+6,,AUTO
         3 000320   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 000321   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000322   000000 701000 xent               TSX1    XUX$ERROR1
         3 000323   004230 702000 3                  TSX2    GO_AWAY

     1213    13719    2           GOTO I_BLEW_IT_INTERNALLY;

  13719  3 000324   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1214    13720    2       END;
     1215    13721
     1216    13722    1       XUX$INFO.REC_INDEX$->REC_INDEX(0) = 0; /* First record always starts at 0 */

  13722  3 000325   200222 470500                    LDP0    XUX$MEM$,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:156  
         3 000326   000001 471500                    LDP1    1,,PR0
         3 000327   100000 450100                    STZ     0,,PR1

     1217    13723    1       XUX$INFO.RECNO = 1;

  13723  3 000330   000001 235007                    LDA     1,DL
         3 000331   000003 755100                    STA     3,,PR0

     1218    13724
     1219    13725    1       IF LEGAL.LS#

  13725  3 000332   200205 236100                    LDQ     LEGAL,,AUTO
         3 000333   040000 316003                    CANQ    16384,DU
         3 000334   000337 600000 3                  TZE     s:13727

     1220    13726    1       THEN GOT_OPTIONS.LS = '1'B;

  13726  3 000335   400000 236003                    LDQ     -131072,DU
         3 000336   200354 756100                    STQ     GOT_OPTIONS+4,,AUTO

     1221    13727    1       IF LEGAL.OU#

  13727  3 000337   200205 236100                    LDQ     LEGAL,,AUTO
         3 000340   020000 316003                    CANQ    8192,DU
         3 000341   000344 600000 3                  TZE     s:13729

     1222    13728    1       THEN GOT_OPTIONS.OU = '1'B;

  13728  3 000342   400000 236003                    LDQ     -131072,DU
         3 000343   200355 756100                    STQ     GOT_OPTIONS+5,,AUTO

     1223    13729    1       IF GETLINE_PARAM.CMD_LEN ~= 0

  13729  3 000344   200212 220100                    LDX0    GETLINE_PARAM+2,,AUTO
         3 000345   003522 600000 3                  TZE     s:14509

     1224    13730    2       THEN DO;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:157  

     1225    13731    2           XUX$PCB.NCHARS = GETLINE_PARAM.CMD_LEN;

  13731  3 000346   200212 236100                    LDQ     GETLINE_PARAM+2,,AUTO
         3 000347   000022 732000                    QRS     18
         3 000350   000011 756000 2                  STQ     XUX$PCB+9

     1226    13732    2           XUX$PCB.TEXT$ = XUX$INFO.PARSE_BUF$;

  13732  3 000351   000000 236100                    LDQ     0,,PR0
         3 000352   000000 756000 2                  STQ     XUX$PCB

     1227    13733    2           XUX$PCB.USER$ = ADDR(LEGAL);

  13733  3 000353   200205 631500                    EPPR1   LEGAL,,AUTO
         3 000354   000014 451400 2                  STP1    XUX$PCB+12

     1228    13734    2           CALL X$PARSE (XUX$PCB) ALTRET (PARSE_ALTRET);

  13734  3 000355   000037 630400 4                  EPPR0   31
         3 000356   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000357   000000 701000 xent               TSX1    X$PARSE
         3 000360   003763 702000 3                  TSX2    PARSE_ALTRET

     1229    13735
     1230    13736        /* Now do the fun stuff. A giant do case looks at each of the parse
     1231    13737           nodes as they come back and does interesting and useful stuff with
     1232    13738           each of them.
     1233    13739        */
     1234    13740
     1235    13741    2           GOT = '0'B; /* We ain't got nuthin' yet */

  13741  3 000361   000100 100400                    MLR     fill='000'O
         3 000362   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000363   200410 000074                    ADSC9   GOT,,AUTO                cn=0,n=60

     1236    13742    2           NDM = '0'B;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:158  

  13742  3 000364   200244 450100                    STZ     NDM,,AUTO

     1237    13743    2           NMDM = '0'B;

  13743  3 000365   200245 450100                    STZ     NMDM,,AUTO

     1238    13744    2           GOT_OPTIONS.DMAP = '0'B;

  13744  3 000366   200351 450100                    STZ     GOT_OPTIONS+1,,AUTO

     1239    13745    2           GOT_OPTIONS.MDMAP = '0'B;

  13745  3 000367   200352 450100                    STZ     GOT_OPTIONS+2,,AUTO

     1240    13746    2           NSUBLKS = XUX$PCB.OUT$->OPT$OUT.NSUBLKS;

  13746  3 000370   000003 470400 2                  LDP0    XUX$PCB+3
         3 000371   000001 236100                    LDQ     1,,PR0
         3 000372   000022 772000                    QRL     18
         3 000373   200105 756100                    STQ     NSUBLKS,,AUTO

     1241    13747    3           DO LOOP = 0 TO NSUBLKS-1;

  13747  3 000374   200227 450100                    STZ     LOOP,,AUTO
         3 000375   003517 710000 3                  TRA     s:14501+1

     1242    13748    3               BLK$ = XUX$PCB.OUT$->OPT$OUT.SUBLK$(LOOP);

  13748  3 000376   000003 470400 2                  LDP0    XUX$PCB+3
         3 000377   200227 720100                    LXL0    LOOP,,AUTO
         3 000400   000003 236110                    LDQ     3,X0,PR0
         3 000401   200104 756100                    STQ     BLK$,,AUTO

     1243    13749    4               DO CASE (OPT$OUT.CODE);

  13749  3 000402   200104 471500                    LDP1    BLK$,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:159  
         3 000403   100000 721100                    LXL1    0,,PR1
         3 000404   000051 101003                    CMPX1   41,DU
         3 000405   000407 602011 3                  TNC     s:13749+5,X1
         3 000406   003505 710000 3                  TRA     s:14497
         3 000407   003505 710000 3                  TRA     s:14497
         3 000410   000460 710000 3                  TRA     s:13756
         3 000411   002716 710000 3                  TRA     s:14323
         3 000412   003505 710000 3                  TRA     s:14497
         3 000413   003505 710000 3                  TRA     s:14497
         3 000414   003505 710000 3                  TRA     s:14497
         3 000415   003505 710000 3                  TRA     s:14497
         3 000416   003505 710000 3                  TRA     s:14497
         3 000417   003505 710000 3                  TRA     s:14497
         3 000420   003505 710000 3                  TRA     s:14497
         3 000421   003505 710000 3                  TRA     s:14497
         3 000422   002262 710000 3                  TRA     s:14198
         3 000423   003505 710000 3                  TRA     s:14497
         3 000424   003505 710000 3                  TRA     s:14497
         3 000425   003505 710000 3                  TRA     s:14497
         3 000426   003505 710000 3                  TRA     s:14497
         3 000427   000675 710000 3                  TRA     s:13824
         3 000430   000675 710000 3                  TRA     s:13824
         3 000431   001011 710000 3                  TRA     s:13862
         3 000432   001011 710000 3                  TRA     s:13862
         3 000433   001507 710000 3                  TRA     s:14019
         3 000434   001507 710000 3                  TRA     s:14019
         3 000435   001507 710000 3                  TRA     s:14019
         3 000436   001647 710000 3                  TRA     s:14066
         3 000437   001647 710000 3                  TRA     s:14066
         3 000440   001647 710000 3                  TRA     s:14066
         3 000441   001125 710000 3                  TRA     s:13899
         3 000442   001125 710000 3                  TRA     s:13899
         3 000443   002431 710000 3                  TRA     s:14250
         3 000444   001241 710000 3                  TRA     s:13937
         3 000445   001241 710000 3                  TRA     s:13937
         3 000446   001241 710000 3                  TRA     s:13937
         3 000447   002000 710000 3                  TRA     s:14110
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:160  
         3 000450   002000 710000 3                  TRA     s:14110
         3 000451   002000 710000 3                  TRA     s:14110
         3 000452   001373 710000 3                  TRA     s:13981
         3 000453   001373 710000 3                  TRA     s:13981
         3 000454   002131 710000 3                  TRA     s:14154
         3 000455   002131 710000 3                  TRA     s:14154
         3 000456   002131 710000 3                  TRA     s:14154
         3 000457   003440 710000 3                  TRA     s:14464

     1244    13750        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:161  
     1245    13751        /*
     1246    13752             BC
     1247    13753        */
     1248    13754
     1249    13755    4               CASE(%$BC);

     1250    13756    4                   IF LEGAL.BC#

  13756  3 000460   200205 234100                    SZN     LEGAL,,AUTO
         3 000461   000670 605000 3                  TPL     s:13816

     1251    13757    5                   THEN DO;

     1252    13758    5                       IF GOT.BC ~= 0

  13758  3 000462   200410 222100                    LDX2    GOT,,AUTO
         3 000463   000513 600000 3                  TZE     s:13766

     1253    13759    6                       THEN DO;

     1254    13760    6                           T$ = PINCRC(ADDR(T),GOT.BC-1);

  13760  3 000464   200410 236100                    LDQ     GOT,,AUTO
         3 000465   777777 376003                    ANQ     -1,DU
         3 000466   000002 772000                    QRL     2
         3 000467   000040 036000 4                  ADLQ    32
         3 000470   200475 756100                    STQ     T$,,AUTO

     1255    13761    6                           TEMP = OPT_MSG.LEN;

  13761  3 000471   200475 473500                    LDP3    T$,,AUTO
         3 000472   000100 101500                    MRL     fill='000'O
         3 000473   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 000474   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1256    13762    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:162  
  13762  3 000475   000042 237000 4                  LDAQ    34
         3 000476   200512 757100                    STAQ    FREE_DS+10,,AUTO
         3 000477   200475 236100                    LDQ     T$,,AUTO
         3 000500   200000 036007                    ADLQ    65536,DL
         3 000501   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 000502   200226 634500                    EPPR4   TEMP,,AUTO
         3 000503   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 000504   000044 237000 4                  LDAQ    36
         3 000505   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 000506   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 000507   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000510   000000 701000 xent               TSX1    XUX$ERROR
         3 000511   004230 702000 3                  TSX2    GO_AWAY

     1257    13763    6                             2,'BC') ALTRET(GO_AWAY);
     1258    13764    6                       END;

  13764  3 000512   003516 710000 3                  TRA     s:14501

     1259    13765    6                       ELSE DO;

     1260    13766    6                           IF OPT$OUT.NSUBLKS = 0

  13766  3 000513   100001 223100                    LDX3    1,,PR1
         3 000514   000521 601000 3                  TNZ     s:13772

     1261    13767    7                           THEN DO; /* Got BC(ALL) */

     1262    13768    7                               GOT.BC = %OFF_BC;

  13768  3 000515   000234 224003                    LDX4    156,DU
         3 000516   200410 744100                    STX4    GOT,,AUTO

     1263    13769    7                               GOT_OPTIONS.BC = %XUX$ALL;

  13769  3 000517   200350 450100                    STZ     GOT_OPTIONS,,AUTO

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:163  
     1264    13770    7                           END;

  13770  3 000520   003516 710000 3                  TRA     s:14501

     1265    13771
     1266    13772    6                           ELSE IF OPT$OUT.NSUBLKS > 8

  13772  3 000521   000011 103003                    CMPX3   9,DU
         3 000522   000530 602000 3                  TNC     s:13778

     1267    13773    7                               THEN DO;

     1268    13774    7                                  CALL XUX$ERROR(%E$XUX#TOO_MANY_BC_UNITS,'1'B) ALTRET
             13774                                            (GO_AWAY);

  13774  3 000523   000047 630400 4                  EPPR0   39
         3 000524   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000525   000000 701000 xent               TSX1    XUX$ERROR
         3 000526   004230 702000 3                  TSX2    GO_AWAY

     1269    13775    7                               END;

  13775  3 000527   003516 710000 3                  TRA     s:14501

     1270    13776
     1271    13777    7                               ELSE DO;

     1272    13778    7                                   GOT.BC = %OFF_BC;

  13778  3 000530   000234 224003                    LDX4    156,DU
         3 000531   200410 744100                    STX4    GOT,,AUTO

     1273    13779    7                                   TEMP_BC = '0'B;

  13779  3 000532   000100 100400                    MLR     fill='000'O
         3 000533   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000534   200403 000022                    ADSC9   TEMP_BC,,AUTO            cn=0,n=18
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:164  

     1274    13780    8                                   DO I = 0 TO OPT$OUT.NSUBLKS - 1;

  13780  3 000535   200223 450100                    STZ     I,,AUTO
         3 000536   000657 710000 3                  TRA     s:13810+1

     1275    13781    8                                       CALL CHARBIN(TEMP,OPT$OUT.SUBLK$(I)->OPT$SYM.
             13781                                                TEXT);

  13781  3 000537   200104 470500                    LDP0    BLK$,,AUTO
         3 000540   200223 720100                    LXL0    I,,AUTO
         3 000541   000003 471510                    LDP1    3,X0,PR0
         3 000542   100004 236100                    LDQ     4,,PR1
         3 000543   000033 772000                    QRL     27
         3 000544   000000 621006                    EAX1    0,QL
         3 000545   000100 305540                    DTB
         3 000546   100004 230011                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X1
         3 000547   200226 000004                    NDSC9   TEMP,,AUTO               cn=0,s=lsgnf,sf=0,n=4

     1276    13782    8                                       IF TEMP < 1 OR TEMP > 131071

  13782  3 000550   200226 235100                    LDA     TEMP,,AUTO
         3 000551   000554 604400 3                  TMOZ    s:13784
         3 000552   377777 115007                    CMPA    131071,DL
         3 000553   000565 604400 3                  TMOZ    SETUP_BC

     1277    13783    9                                       THEN DO;

     1278    13784    9                                           CALL XUX$ERROR(%E$XUX#BAD_BC,'1'B,TEMP)
             13784                                                    ALTRET(GO_AWAY);

  13784  3 000554   200226 631500                    EPPR1   TEMP,,AUTO
         3 000555   200510 451500                    STP1    FREE_DS+8,,AUTO
         3 000556   000052 237000 4                  LDAQ    42
         3 000557   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 000560   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 000561   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:165  
         3 000562   000000 701000 xent               TSX1    XUX$ERROR
         3 000563   004230 702000 3                  TSX2    GO_AWAY

     1279    13785    9                                       END;

  13785  3 000564   000656 710000 3                  TRA     s:13810

     1280    13786    9                                       ELSE DO;

     1281    13787   10   SETUP_BC:                               DO J = 1 TO TEMP_BC(0);

  13787  3 000565   000001 236007       SETUP_BC     LDQ     1,DL
         3 000566   200224 756100                    STQ     J,,AUTO
         3 000567   000642 710000 3                  TRA     s:13803+1

     1282    13788   10                                               IF TEMP < TEMP_BC(J)

  13788  3 000570   200224 235100                    LDA     J,,AUTO
         3 000571   000001 735000                    ALS     1
         3 000572   000100 101505                    MRL     fill='000'O
         3 000573   200403 000002                    ADSC9   TEMP_BC,A,AUTO           cn=0,n=2
         3 000574   200506 000004                    ADSC9   FREE_DS+6,,AUTO          cn=0,n=4
         3 000575   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 000576   200226 116100                    CMPQ    TEMP,,AUTO
         3 000577   000617 604400 3                  TMOZ    s:13796

     1283    13789   11                                               THEN DO;

     1284    13790   12                                                   DO K = TEMP_BC(0) DOWNTO J;

  13790  3 000600   200403 236100                    LDQ     TEMP_BC,,AUTO
         3 000601   000022 772000                    QRL     18
         3 000602   200225 756100                    STQ     K,,AUTO
         3 000603   000613 710000 3                  TRA     s:13792+2

     1285    13791   12                                                       TEMP_BC(K+1) = TEMP_BC(K);

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:166  
  13791  3 000604   200225 235100                    LDA     K,,AUTO
         3 000605   000001 735000                    ALS     1
         3 000606   000105 100505                    MLR     fill='000'O
         3 000607   200403 000002                    ADSC9   TEMP_BC,A,AUTO           cn=0,n=2
         3 000610   200403 400002                    ADSC9   TEMP_BC,A,AUTO           cn=2,n=2

     1286    13792   12                                                   END; /* DO K */

  13792  3 000611   000001 336007                    LCQ     1,DL
         3 000612   200225 056100                    ASQ     K,,AUTO
         3 000613   200225 236100                    LDQ     K,,AUTO
         3 000614   200224 116100                    CMPQ    J,,AUTO
         3 000615   000604 605000 3                  TPL     s:13791

     1287    13793   11                                                   EXIT SETUP_BC;

  13793  3 000616   000646 710000 3                  TRA     s:13807

     1288    13794   11                                               END;
     1289    13795
     1290    13796   10                                               IF TEMP = TEMP_BC(J)

  13796  3 000617   000100 101505                    MRL     fill='000'O
         3 000620   200403 000002                    ADSC9   TEMP_BC,A,AUTO           cn=0,n=2
         3 000621   200506 000004                    ADSC9   FREE_DS+6,,AUTO          cn=0,n=4
         3 000622   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 000623   200226 116100                    CMPQ    TEMP,,AUTO
         3 000624   000641 601000 3                  TNZ     s:13803

     1291    13797   11                                               THEN DO;

     1292    13798   11                                                   CALL XUX$ERROR(%E$XUX#DUPE_BC,'1'B,
             13798                                                            TEMP) ALTRET(GO_AWAY);

  13798  3 000625   200226 630500                    EPPR0   TEMP,,AUTO
         3 000626   200510 450500                    STP0    FREE_DS+8,,AUTO
         3 000627   000056 237000 4                  LDAQ    46
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:167  
         3 000630   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 000631   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 000632   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000633   000000 701000 xent               TSX1    XUX$ERROR
         3 000634   004230 702000 3                  TSX2    GO_AWAY

     1293    13799   11                                                   TEMP_BC(0) = TEMP_BC(0) - 1;
             13799                                                            /* Uggh */

  13799  3 000635   200403 220100                    LDX0    TEMP_BC,,AUTO
         3 000636   777777 621010                    EAX1    -1,X0
         3 000637   200403 741100                    STX1    TEMP_BC,,AUTO

     1294    13800   11                                                   EXIT SETUP_BC;

  13800  3 000640   000646 710000 3                  TRA     s:13807

     1295    13801   11                                               END;
     1296    13802
     1297    13803   10                                           END SETUP_BC;

  13803  3 000641   200224 054100                    AOS     J,,AUTO
         3 000642   200403 236100                    LDQ     TEMP_BC,,AUTO
         3 000643   000022 772000                    QRL     18
         3 000644   200224 116100                    CMPQ    J,,AUTO
         3 000645   000570 605000 3                  TPL     s:13788

     1298    13804
     1299    13805             /* By this point, TEMP_BC(J) is the place to insert TEMP */
     1300    13806
     1301    13807    9                                           TEMP_BC(J) = TEMP;

  13807  3 000646   200224 235100                    LDA     J,,AUTO
         3 000647   000001 735000                    ALS     1
         3 000650   000105 101500                    MRL     fill='000'O
         3 000651   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         3 000652   200403 000002                    ADSC9   TEMP_BC,A,AUTO           cn=0,n=2
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:168  

     1302    13808    9                                           TEMP_BC(0) = TEMP_BC(0) + 1;

  13808  3 000653   200403 220100                    LDX0    TEMP_BC,,AUTO
         3 000654   000001 621010                    EAX1    1,X0
         3 000655   200403 741100                    STX1    TEMP_BC,,AUTO

     1303    13809    9                                       END;

     1304    13810    8                                   END; /* DO I */

  13810  3 000656   200223 054100                    AOS     I,,AUTO
         3 000657   200104 470500                    LDP0    BLK$,,AUTO
         3 000660   000001 236100                    LDQ     1,,PR0
         3 000661   000022 772000                    QRL     18
         3 000662   200223 116100                    CMPQ    I,,AUTO
         3 000663   000537 605400 3                  TPNZ    s:13781

     1305    13811    7                                   GOT_OPTIONS.BC = TEMP_BC(0);

  13811  3 000664   200403 235100                    LDA     TEMP_BC,,AUTO
         3 000665   000022 771000                    ARL     18
         3 000666   200350 755100                    STA     GOT_OPTIONS,,AUTO

     1306    13812    7                               END;

     1307    13813    6                       END;

     1308    13814    5                   END;

  13814  3 000667   003516 710000 3                  TRA     s:14501

     1309    13815    5                   ELSE DO;

     1310    13816    5                      CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,2,'BC') ALTRET(GO_AWAY
             13816                                );

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:169  
  13816  3 000670   000060 630400 4                  EPPR0   48
         3 000671   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000672   000000 701000 xent               TSX1    XUX$ERROR
         3 000673   004230 702000 3                  TSX2    GO_AWAY

     1311    13817    5                   END;

  13817  3 000674   003516 710000 3                  TRA     s:14501

     1312    13818        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:170  
     1313    13819        /*
     1314    13820             LS, NLS
     1315    13821        */
     1316    13822
     1317    13823    4               CASE(%$LS,%$NLS);

     1318    13824    5                   DO CASE(OPT$OUT.CODE);

  13824  3 000675   100000 236100                    LDQ     0,,PR1
         3 000676   777777 376007                    ANQ     -1,DL
         3 000677   000020 136007                    SBLQ    16,DL
         3 000700   000002 116007                    CMPQ    2,DL
         3 000701   000703 602006 3                  TNC     s:13824+6,QL
         3 000702   000720 710000 3                  TRA     s:13832
         3 000703   000705 710000 3                  TRA     s:13826
         3 000704   000713 710000 3                  TRA     s:13829

     1319    13825    5                   CASE(%$LS);

     1320    13826    5                       TEMP_OPT='LS';

  13826  3 000705   040100 100400                    MLR     fill='040'O
         3 000706   000174 000002 1                  ADSC9   FPT_FDS+8                cn=0,n=2
         3 000707   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1321    13827    5                       TEMP_LEN=2;

  13827  3 000710   000002 235007                    LDA     2,DL
         3 000711   200235 755100                    STA     TEMP_LEN,,AUTO
         3 000712   000720 710000 3                  TRA     s:13832

     1322    13828    5                   CASE(%$NLS);

     1323    13829    5                       TEMP_OPT = 'NLS';

  13829  3 000713   040100 100400                    MLR     fill='040'O
         3 000714   000176 000003 1                  ADSC9   FPT_FDS+10               cn=0,n=3
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:171  
         3 000715   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1324    13830    5                       TEMP_LEN=3;

  13830  3 000716   000003 235007                    LDA     3,DL
         3 000717   200235 755100                    STA     TEMP_LEN,,AUTO

     1325    13831    5                   END;

     1326    13832    4                   IF LEGAL.LS#

  13832  3 000720   200205 236100                    LDQ     LEGAL,,AUTO
         3 000721   040000 316003                    CANQ    16384,DU
         3 000722   000776 600000 3                  TZE     s:13854

     1327    13833    5                   THEN DO;

     1328    13834    5                       IF GOT.LS ~= 0

  13834  3 000723   200411 221100                    LDX1    GOT+1,,AUTO
         3 000724   000755 600000 3                  TZE     s:13842

     1329    13835    6                       THEN DO;

     1330    13836    6                           T$ = PINCRC(ADDR(T),GOT.LS-1);

  13836  3 000725   200411 236100                    LDQ     GOT+1,,AUTO
         3 000726   777777 376003                    ANQ     -1,DU
         3 000727   000002 772000                    QRL     2
         3 000730   000040 036000 4                  ADLQ    32
         3 000731   200475 756100                    STQ     T$,,AUTO

     1331    13837    6                           TEMP = OPT_MSG.LEN;

  13837  3 000732   200475 473500                    LDP3    T$,,AUTO
         3 000733   000100 101500                    MRL     fill='000'O
         3 000734   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:172  
         3 000735   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1332    13838    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  13838  3 000736   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 000737   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 000740   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 000741   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 000742   200000 036007                    ADLQ    65536,DL
         3 000743   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 000744   200226 636500                    EPPR6   TEMP,,AUTO
         3 000745   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 000746   000044 237000 4                  LDAQ    36
         3 000747   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 000750   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 000751   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000752   000000 701000 xent               TSX1    XUX$ERROR
         3 000753   004230 702000 3                  TSX2    GO_AWAY

     1333    13839    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1334    13840    6                       END;

  13840  3 000754   003516 710000 3                  TRA     s:14501

     1335    13841    6                       ELSE DO;

     1336    13842    7                           DO CASE(OPT$OUT.CODE);

  13842  3 000755   100000 236100                    LDQ     0,,PR1
         3 000756   777777 376007                    ANQ     -1,DL
         3 000757   000020 136007                    SBLQ    16,DL
         3 000760   000002 116007                    CMPQ    2,DL
         3 000761   000763 602006 3                  TNC     s:13842+6,QL
         3 000762   003516 710000 3                  TRA     s:14501
         3 000763   000765 710000 3                  TRA     s:13844
         3 000764   000772 710000 3                  TRA     s:13847

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:173  
     1337    13843    7                           CASE(%$LS);

     1338    13844    7                               GOT_OPTIONS.LS = '1'B;

  13844  3 000765   400000 236003                    LDQ     -131072,DU
         3 000766   200354 756100                    STQ     GOT_OPTIONS+4,,AUTO

     1339    13845    7                               GOT.LS = %OFF_LS;

  13845  3 000767   000040 222003                    LDX2    32,DU
         3 000770   200411 742100                    STX2    GOT+1,,AUTO
         3 000771   003516 710000 3                  TRA     s:14501

     1340    13846    7                           CASE(%$NLS);

     1341    13847    7                               GOT_OPTIONS.LS = '0'B;

  13847  3 000772   200354 450100                    STZ     GOT_OPTIONS+4,,AUTO

     1342    13848    7                               GOT.LS = %OFF_NLS;

  13848  3 000773   000043 222003                    LDX2    35,DU
         3 000774   200411 742100                    STX2    GOT+1,,AUTO

     1343    13849    7                           END;

     1344    13850
     1345    13851    6                       END;

     1346    13852    5                   END;

  13852  3 000775   003516 710000 3                  TRA     s:14501

     1347    13853    5                   ELSE DO;

     1348    13854    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13854                                ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:174  

  13854  3 000776   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 000777   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 001000   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 001001   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 001002   000060 237000 4                  LDAQ    48
         3 001003   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001004   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001005   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001006   000000 701000 xent               TSX1    XUX$ERROR
         3 001007   004230 702000 3                  TSX2    GO_AWAY

     1349    13855    5                   END;

  13855  3 001010   003516 710000 3                  TRA     s:14501

     1350    13856        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:175  
     1351    13857        /*
     1352    13858             OU,NOU
     1353    13859        */
     1354    13860
     1355    13861    4               CASE(%$OU,%$NOU);

     1356    13862    5                   DO CASE(OPT$OUT.CODE);

  13862  3 001011   100000 236100                    LDQ     0,,PR1
         3 001012   777777 376007                    ANQ     -1,DL
         3 001013   000022 136007                    SBLQ    18,DL
         3 001014   000002 116007                    CMPQ    2,DL
         3 001015   001017 602006 3                  TNC     s:13862+6,QL
         3 001016   001034 710000 3                  TRA     s:13870
         3 001017   001021 710000 3                  TRA     s:13864
         3 001020   001027 710000 3                  TRA     s:13867

     1357    13863    5                   CASE(%$OU);

     1358    13864    5                       TEMP_OPT='OU';

  13864  3 001021   040100 100400                    MLR     fill='040'O
         3 001022   000173 000002 1                  ADSC9   FPT_FDS+7                cn=0,n=2
         3 001023   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1359    13865    5                       TEMP_LEN=2;

  13865  3 001024   000002 235007                    LDA     2,DL
         3 001025   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001026   001034 710000 3                  TRA     s:13870

     1360    13866    5                   CASE(%$NOU);

     1361    13867    5                       TEMP_OPT = 'NOU';

  13867  3 001027   040100 100400                    MLR     fill='040'O
         3 001030   000177 000003 1                  ADSC9   FPT_FDS+11               cn=0,n=3
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:176  
         3 001031   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1362    13868    5                       TEMP_LEN=3;

  13868  3 001032   000003 235007                    LDA     3,DL
         3 001033   200235 755100                    STA     TEMP_LEN,,AUTO

     1363    13869    5                   END;

     1364    13870    4                   IF LEGAL.OU#

  13870  3 001034   200205 236100                    LDQ     LEGAL,,AUTO
         3 001035   020000 316003                    CANQ    8192,DU
         3 001036   001112 600000 3                  TZE     s:13891

     1365    13871    5                   THEN DO;

     1366    13872    5                       IF GOT.OU ~= 0

  13872  3 001037   200412 221100                    LDX1    GOT+2,,AUTO
         3 001040   001071 600000 3                  TZE     s:13880

     1367    13873    6                       THEN DO;

     1368    13874    6                           T$ = PINCRC(ADDR(T),GOT.OU-1);

  13874  3 001041   200412 236100                    LDQ     GOT+2,,AUTO
         3 001042   777777 376003                    ANQ     -1,DU
         3 001043   000002 772000                    QRL     2
         3 001044   000040 036000 4                  ADLQ    32
         3 001045   200475 756100                    STQ     T$,,AUTO

     1369    13875    6                           TEMP = OPT_MSG.LEN;

  13875  3 001046   200475 473500                    LDP3    T$,,AUTO
         3 001047   000100 101500                    MRL     fill='000'O
         3 001050   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:177  
         3 001051   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1370    13876    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  13876  3 001052   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 001053   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 001054   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 001055   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 001056   200000 036007                    ADLQ    65536,DL
         3 001057   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 001060   200226 636500                    EPPR6   TEMP,,AUTO
         3 001061   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 001062   000044 237000 4                  LDAQ    36
         3 001063   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001064   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001065   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 001066   000000 701000 xent               TSX1    XUX$ERROR
         3 001067   004230 702000 3                  TSX2    GO_AWAY

     1371    13877    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1372    13878    6                       END;

  13878  3 001070   003516 710000 3                  TRA     s:14501

     1373    13879    6                       ELSE DO;

     1374    13880    7                           DO CASE(OPT$OUT.CODE);

  13880  3 001071   100000 236100                    LDQ     0,,PR1
         3 001072   777777 376007                    ANQ     -1,DL
         3 001073   000022 136007                    SBLQ    18,DL
         3 001074   000002 116007                    CMPQ    2,DL
         3 001075   001077 602006 3                  TNC     s:13880+6,QL
         3 001076   003516 710000 3                  TRA     s:14501
         3 001077   001101 710000 3                  TRA     s:13882
         3 001100   001106 710000 3                  TRA     s:13885

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:178  
     1375    13881    7                           CASE(%$OU);

     1376    13882    7                               GOT_OPTIONS.OU = '1'B;

  13882  3 001101   400000 236003                    LDQ     -131072,DU
         3 001102   200355 756100                    STQ     GOT_OPTIONS+5,,AUTO

     1377    13883    7                               GOT.OU = %OFF_OU;

  13883  3 001103   000047 222003                    LDX2    39,DU
         3 001104   200412 742100                    STX2    GOT+2,,AUTO
         3 001105   003516 710000 3                  TRA     s:14501

     1378    13884    7                           CASE(%$NOU);

     1379    13885    7                               GOT_OPTIONS.OU = '0'B;

  13885  3 001106   200355 450100                    STZ     GOT_OPTIONS+5,,AUTO

     1380    13886    7                               GOT.OU = %OFF_NOU;

  13886  3 001107   000052 222003                    LDX2    42,DU
         3 001110   200412 742100                    STX2    GOT+2,,AUTO

     1381    13887    7                           END;

     1382    13888    6                       END;

     1383    13889    5                   END;

  13889  3 001111   003516 710000 3                  TRA     s:14501

     1384    13890    5                   ELSE DO;

     1385    13891    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13891                                ALTRET(GO_AWAY);

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:179  
  13891  3 001112   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 001113   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 001114   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 001115   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 001116   000060 237000 4                  LDAQ    48
         3 001117   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001120   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001121   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001122   000000 701000 xent               TSX1    XUX$ERROR
         3 001123   004230 702000 3                  TSX2    GO_AWAY

     1386    13892    5                   END;

  13892  3 001124   003516 710000 3                  TRA     s:14501

     1387    13893        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:180  
     1388    13894        /*
     1389    13895             SO, NSO
     1390    13896        */
     1391    13897
     1392    13898    4               CASE(%$SO,%$NSO);

     1393    13899    5                   DO CASE(OPT$OUT.CODE);

  13899  3 001125   100000 236100                    LDQ     0,,PR1
         3 001126   777777 376007                    ANQ     -1,DL
         3 001127   000032 136007                    SBLQ    26,DL
         3 001130   000002 116007                    CMPQ    2,DL
         3 001131   001133 602006 3                  TNC     s:13899+6,QL
         3 001132   001150 710000 3                  TRA     s:13907
         3 001133   001135 710000 3                  TRA     s:13901
         3 001134   001143 710000 3                  TRA     s:13904

     1394    13900    5                   CASE(%$SO);

     1395    13901    5                       TEMP_OPT='SO';

  13901  3 001135   040100 100400                    MLR     fill='040'O
         3 001136   000200 000002 1                  ADSC9   FPT_FDS+12               cn=0,n=2
         3 001137   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1396    13902    5                       TEMP_LEN=2;

  13902  3 001140   000002 235007                    LDA     2,DL
         3 001141   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001142   001150 710000 3                  TRA     s:13907

     1397    13903    5                   CASE(%$NSO);

     1398    13904    5                       TEMP_OPT = 'NSO';

  13904  3 001143   040100 100400                    MLR     fill='040'O
         3 001144   000201 000003 1                  ADSC9   FPT_FDS+13               cn=0,n=3
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:181  
         3 001145   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1399    13905    5                       TEMP_LEN=3;

  13905  3 001146   000003 235007                    LDA     3,DL
         3 001147   200235 755100                    STA     TEMP_LEN,,AUTO

     1400    13906    5                   END;

     1401    13907    4                   IF LEGAL.SO#

  13907  3 001150   200205 236100                    LDQ     LEGAL,,AUTO
         3 001151   002000 316003                    CANQ    1024,DU
         3 001152   001226 600000 3                  TZE     s:13929

     1402    13908    5                   THEN DO;

     1403    13909    5                       IF GOT.SO ~= 0

  13909  3 001153   200413 221100                    LDX1    GOT+3,,AUTO
         3 001154   001205 600000 3                  TZE     s:13917

     1404    13910    6                       THEN DO;

     1405    13911    6                           T$ = PINCRC(ADDR(T),GOT.SO-1);

  13911  3 001155   200413 236100                    LDQ     GOT+3,,AUTO
         3 001156   777777 376003                    ANQ     -1,DU
         3 001157   000002 772000                    QRL     2
         3 001160   000040 036000 4                  ADLQ    32
         3 001161   200475 756100                    STQ     T$,,AUTO

     1406    13912    6                           TEMP = OPT_MSG.LEN;

  13912  3 001162   200475 473500                    LDP3    T$,,AUTO
         3 001163   000100 101500                    MRL     fill='000'O
         3 001164   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:182  
         3 001165   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1407    13913    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  13913  3 001166   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 001167   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 001170   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 001171   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 001172   200000 036007                    ADLQ    65536,DL
         3 001173   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 001174   200226 636500                    EPPR6   TEMP,,AUTO
         3 001175   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 001176   000044 237000 4                  LDAQ    36
         3 001177   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001200   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001201   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 001202   000000 701000 xent               TSX1    XUX$ERROR
         3 001203   004230 702000 3                  TSX2    GO_AWAY

     1408    13914    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1409    13915    6                       END;

  13915  3 001204   003516 710000 3                  TRA     s:14501

     1410    13916    6                       ELSE DO;

     1411    13917    7                           DO CASE(OPT$OUT.CODE);

  13917  3 001205   100000 236100                    LDQ     0,,PR1
         3 001206   777777 376007                    ANQ     -1,DL
         3 001207   000032 136007                    SBLQ    26,DL
         3 001210   000002 116007                    CMPQ    2,DL
         3 001211   001213 602006 3                  TNC     s:13917+6,QL
         3 001212   003516 710000 3                  TRA     s:14501
         3 001213   001215 710000 3                  TRA     s:13919
         3 001214   001222 710000 3                  TRA     s:13922

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:183  
     1412    13918    7                           CASE(%$SO);

     1413    13919    7                               GOT_OPTIONS.SO = '1'B;

  13919  3 001215   400000 236003                    LDQ     -131072,DU
         3 001216   200360 756100                    STQ     GOT_OPTIONS+8,,AUTO

     1414    13920    7                               GOT.SO = %OFF_SO;

  13920  3 001217   000126 222003                    LDX2    86,DU
         3 001220   200413 742100                    STX2    GOT+3,,AUTO
         3 001221   003516 710000 3                  TRA     s:14501

     1415    13921    7                           CASE(%$NSO);

     1416    13922    7                               GOT_OPTIONS.SO = '0'B;

  13922  3 001222   200360 450100                    STZ     GOT_OPTIONS+8,,AUTO

     1417    13923    7                               GOT.SO = %OFF_NSO;

  13923  3 001223   000131 222003                    LDX2    89,DU
         3 001224   200413 742100                    STX2    GOT+3,,AUTO

     1418    13924    7                           END;

     1419    13925
     1420    13926    6                       END;

     1421    13927    5                   END;

  13927  3 001225   003516 710000 3                  TRA     s:14501

     1422    13928    5                   ELSE DO;

     1423    13929    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13929                                ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:184  

  13929  3 001226   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 001227   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 001230   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 001231   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 001232   000060 237000 4                  LDAQ    48
         3 001233   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001234   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001235   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001236   000000 701000 xent               TSX1    XUX$ERROR
         3 001237   004230 702000 3                  TSX2    GO_AWAY

     1424    13930    5                   END;

  13930  3 001240   003516 710000 3                  TRA     s:14501

     1425    13931        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:185  
     1426    13932        /*
     1427    13933             UI, NUI, OPTUI
     1428    13934        */
     1429    13935
     1430    13936    4               CASE(%$UI,%$NUI,%$OPTUI);

     1431    13937    5                   DO CASE(OPT$OUT.CODE);

  13937  3 001241   100000 236100                    LDQ     0,,PR1
         3 001242   777777 376007                    ANQ     -1,DL
         3 001243   000035 136007                    SBLQ    29,DL
         3 001244   000003 116007                    CMPQ    3,DL
         3 001245   001247 602006 3                  TNC     s:13937+6,QL
         3 001246   001273 710000 3                  TRA     s:13948
         3 001247   001252 710000 3                  TRA     s:13939
         3 001250   001260 710000 3                  TRA     s:13942
         3 001251   001266 710000 3                  TRA     s:13945

     1432    13938    5                   CASE(%$UI);

     1433    13939    5                       TEMP_OPT='UI';

  13939  3 001252   040100 100400                    MLR     fill='040'O
         3 001253   000172 000002 1                  ADSC9   FPT_FDS+6                cn=0,n=2
         3 001254   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1434    13940    5                       TEMP_LEN=2;

  13940  3 001255   000002 235007                    LDA     2,DL
         3 001256   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001257   001273 710000 3                  TRA     s:13948

     1435    13941    5                   CASE(%$NUI);

     1436    13942    5                       TEMP_OPT = 'NUI';

  13942  3 001260   040100 100400                    MLR     fill='040'O
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:186  
         3 001261   000202 000003 1                  ADSC9   FPT_FDS+14               cn=0,n=3
         3 001262   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1437    13943    5                       TEMP_LEN=3;

  13943  3 001263   000003 235007                    LDA     3,DL
         3 001264   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001265   001273 710000 3                  TRA     s:13948

     1438    13944    5                   CASE(%$OPTUI);

     1439    13945    5                       TEMP_OPT = 'OPTUI';

  13945  3 001266   040100 100400                    MLR     fill='040'O
         3 001267   000203 000005 1                  ADSC9   FPT_FDS+15               cn=0,n=5
         3 001270   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1440    13946    5                       TEMP_LEN = 5;

  13946  3 001271   000005 235007                    LDA     5,DL
         3 001272   200235 755100                    STA     TEMP_LEN,,AUTO

     1441    13947    5                   END;

     1442    13948    4                   IF LEGAL.UI#

  13948  3 001273   200205 236100                    LDQ     LEGAL,,AUTO
         3 001274   000400 316003                    CANQ    256,DU
         3 001275   001360 600000 3                  TZE     s:13973

     1443    13949    5                   THEN DO;

     1444    13950    5                       IF GOT.UI ~= 0

  13950  3 001276   200414 221100                    LDX1    GOT+4,,AUTO
         3 001277   001330 600000 3                  TZE     s:13958

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:187  
     1445    13951    6                       THEN DO;

     1446    13952    6                           T$ = PINCRC(ADDR(T),GOT.UI-1);

  13952  3 001300   200414 236100                    LDQ     GOT+4,,AUTO
         3 001301   777777 376003                    ANQ     -1,DU
         3 001302   000002 772000                    QRL     2
         3 001303   000040 036000 4                  ADLQ    32
         3 001304   200475 756100                    STQ     T$,,AUTO

     1447    13953    6                           TEMP = OPT_MSG.LEN;

  13953  3 001305   200475 473500                    LDP3    T$,,AUTO
         3 001306   000100 101500                    MRL     fill='000'O
         3 001307   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 001310   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1448    13954    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  13954  3 001311   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 001312   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 001313   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 001314   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 001315   200000 036007                    ADLQ    65536,DL
         3 001316   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 001317   200226 636500                    EPPR6   TEMP,,AUTO
         3 001320   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 001321   000044 237000 4                  LDAQ    36
         3 001322   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001323   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001324   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 001325   000000 701000 xent               TSX1    XUX$ERROR
         3 001326   004230 702000 3                  TSX2    GO_AWAY

     1449    13955    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1450    13956    6                       END;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:188  
  13956  3 001327   003516 710000 3                  TRA     s:14501

     1451    13957    6                       ELSE DO;

     1452    13958    7                           DO CASE(OPT$OUT.CODE);

  13958  3 001330   100000 236100                    LDQ     0,,PR1
         3 001331   777777 376007                    ANQ     -1,DL
         3 001332   000035 136007                    SBLQ    29,DL
         3 001333   000003 116007                    CMPQ    3,DL
         3 001334   001336 602006 3                  TNC     s:13958+6,QL
         3 001335   003516 710000 3                  TRA     s:14501
         3 001336   001341 710000 3                  TRA     s:13960
         3 001337   001346 710000 3                  TRA     s:13963
         3 001340   001352 710000 3                  TRA     s:13966

     1453    13959    7                           CASE(%$UI);

     1454    13960    7                               GOT_OPTIONS.UI = '1'B;

  13960  3 001341   400000 236003                    LDQ     -131072,DU
         3 001342   200362 756100                    STQ     GOT_OPTIONS+10,,AUTO

     1455    13961    7                               GOT.UI = %OFF_UI;

  13961  3 001343   000142 222003                    LDX2    98,DU
         3 001344   200414 742100                    STX2    GOT+4,,AUTO
         3 001345   003516 710000 3                  TRA     s:14501

     1456    13962    7                           CASE(%$NUI);

     1457    13963    7                               GOT_OPTIONS.UI = '0'B;

  13963  3 001346   200362 450100                    STZ     GOT_OPTIONS+10,,AUTO

     1458    13964    7                               GOT.UI = %OFF_NUI;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:189  
  13964  3 001347   000145 222003                    LDX2    101,DU
         3 001350   200414 742100                    STX2    GOT+4,,AUTO
         3 001351   003516 710000 3                  TRA     s:14501

     1459    13965    7                           CASE(%$OPTUI);

     1460    13966    7                               GOT_OPTIONS.OPTUI = '1'B;

  13966  3 001352   400000 236003                    LDQ     -131072,DU
         3 001353   200363 756100                    STQ     GOT_OPTIONS+11,,AUTO

     1461    13967    7                               GOT_OPTIONS.UI = '1'B;

  13967  3 001354   200362 756100                    STQ     GOT_OPTIONS+10,,AUTO

     1462    13968    7                               GOT.UI = %OFF_OPTUI;

  13968  3 001355   000151 222003                    LDX2    105,DU
         3 001356   200414 742100                    STX2    GOT+4,,AUTO

     1463    13969    7                           END;

     1464    13970    6                       END;

     1465    13971    5                   END;

  13971  3 001357   003516 710000 3                  TRA     s:14501

     1466    13972    5                   ELSE DO;

     1467    13973    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             13973                                ALTRET(GO_AWAY);

  13973  3 001360   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 001361   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 001362   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 001363   200510 454500                    STP4    FREE_DS+8,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:190  
         3 001364   000060 237000 4                  LDAQ    48
         3 001365   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001366   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001367   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001370   000000 701000 xent               TSX1    XUX$ERROR
         3 001371   004230 702000 3                  TSX2    GO_AWAY

     1468    13974    5                   END;

  13974  3 001372   003516 710000 3                  TRA     s:14501

     1469    13975        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:191  
     1470    13976        /*
     1471    13977             WARN, NWARN
     1472    13978        */
     1473    13979
     1474    13980    4               CASE(%$WARN,%$NWARN);

     1475    13981    5                   DO CASE(OPT$OUT.CODE);

  13981  3 001373   100000 236100                    LDQ     0,,PR1
         3 001374   777777 376007                    ANQ     -1,DL
         3 001375   000043 136007                    SBLQ    35,DL
         3 001376   000002 116007                    CMPQ    2,DL
         3 001377   001401 602006 3                  TNC     s:13981+6,QL
         3 001400   001416 710000 3                  TRA     s:13989
         3 001401   001403 710000 3                  TRA     s:13983
         3 001402   001411 710000 3                  TRA     s:13986

     1476    13982    5                   CASE(%$WARN);

     1477    13983    5                       TEMP_OPT='WARN';

  13983  3 001403   040100 100400                    MLR     fill='040'O
         3 001404   000205 000004 1                  ADSC9   FPT_FDS+17               cn=0,n=4
         3 001405   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1478    13984    5                       TEMP_LEN=4;

  13984  3 001406   000004 235007                    LDA     4,DL
         3 001407   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001410   001416 710000 3                  TRA     s:13989

     1479    13985    5                   CASE(%$NWARN);

     1480    13986    5                       TEMP_OPT = 'NWARN';

  13986  3 001411   040100 100400                    MLR     fill='040'O
         3 001412   000206 000005 1                  ADSC9   FPT_FDS+18               cn=0,n=5
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:192  
         3 001413   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1481    13987    5                       TEMP_LEN=5;

  13987  3 001414   000005 235007                    LDA     5,DL
         3 001415   200235 755100                    STA     TEMP_LEN,,AUTO

     1482    13988    5                   END;

     1483    13989    4                   IF LEGAL.WARN#

  13989  3 001416   200205 236100                    LDQ     LEGAL,,AUTO
         3 001417   000100 316003                    CANQ    64,DU
         3 001420   001474 600000 3                  TZE     s:14011

     1484    13990    5                   THEN DO;

     1485    13991    5                       IF GOT.WARN ~= 0

  13991  3 001421   200415 221100                    LDX1    GOT+5,,AUTO
         3 001422   001453 600000 3                  TZE     s:13999

     1486    13992    6                       THEN DO;

     1487    13993    6                           T$ = PINCRC(ADDR(T),GOT.WARN-1);

  13993  3 001423   200415 236100                    LDQ     GOT+5,,AUTO
         3 001424   777777 376003                    ANQ     -1,DU
         3 001425   000002 772000                    QRL     2
         3 001426   000040 036000 4                  ADLQ    32
         3 001427   200475 756100                    STQ     T$,,AUTO

     1488    13994    6                           TEMP = OPT_MSG.LEN;

  13994  3 001430   200475 473500                    LDP3    T$,,AUTO
         3 001431   000100 101500                    MRL     fill='000'O
         3 001432   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:193  
         3 001433   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1489    13995    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  13995  3 001434   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 001435   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 001436   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 001437   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 001440   200000 036007                    ADLQ    65536,DL
         3 001441   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 001442   200226 636500                    EPPR6   TEMP,,AUTO
         3 001443   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 001444   000044 237000 4                  LDAQ    36
         3 001445   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001446   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001447   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 001450   000000 701000 xent               TSX1    XUX$ERROR
         3 001451   004230 702000 3                  TSX2    GO_AWAY

     1490    13996    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1491    13997    6                       END;

  13997  3 001452   003516 710000 3                  TRA     s:14501

     1492    13998    6                       ELSE DO;

     1493    13999    7                           DO CASE(OPT$OUT.CODE);

  13999  3 001453   100000 236100                    LDQ     0,,PR1
         3 001454   777777 376007                    ANQ     -1,DL
         3 001455   000043 136007                    SBLQ    35,DL
         3 001456   000002 116007                    CMPQ    2,DL
         3 001457   001461 602006 3                  TNC     s:13999+6,QL
         3 001460   003516 710000 3                  TRA     s:14501
         3 001461   001463 710000 3                  TRA     s:14001
         3 001462   001470 710000 3                  TRA     s:14004

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:194  
     1494    14000    7                           CASE(%$WARN);

     1495    14001    7                               GOT_OPTIONS.WARN = '1'B;

  14001  3 001463   400000 236003                    LDQ     -131072,DU
         3 001464   200365 756100                    STQ     GOT_OPTIONS+13,,AUTO

     1496    14002    7                               GOT.WARN = %OFF_WARN;

  14002  3 001465   000200 222003                    LDX2    128,DU
         3 001466   200415 742100                    STX2    GOT+5,,AUTO
         3 001467   003516 710000 3                  TRA     s:14501

     1497    14003    7                           CASE(%$NWARN);

     1498    14004    7                               GOT_OPTIONS.WARN = '0'B;

  14004  3 001470   200365 450100                    STZ     GOT_OPTIONS+13,,AUTO

     1499    14005    7                               GOT.WARN = %OFF_NWARN;

  14005  3 001471   000205 222003                    LDX2    133,DU
         3 001472   200415 742100                    STX2    GOT+5,,AUTO

     1500    14006    7                           END;

     1501    14007
     1502    14008    6                       END;

     1503    14009    5                   END;

  14009  3 001473   003516 710000 3                  TRA     s:14501

     1504    14010    5                   ELSE DO;

     1505    14011    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14011                                ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:195  

  14011  3 001474   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 001475   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 001476   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 001477   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 001500   000060 237000 4                  LDAQ    48
         3 001501   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001502   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001503   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001504   000000 701000 xent               TSX1    XUX$ERROR
         3 001505   004230 702000 3                  TSX2    GO_AWAY

     1506    14012    5                   END;

  14012  3 001506   003516 710000 3                  TRA     s:14501

     1507    14013        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:196  
     1508    14014        /*
     1509    14015             PMAP,MPMAP,NPMAP
     1510    14016        */
     1511    14017
     1512    14018    4               CASE(%$PMAP,%$MPMAP,%$NPMAP);

     1513    14019    5                   DO CASE(OPT$OUT.CODE);

  14019  3 001507   100000 236100                    LDQ     0,,PR1
         3 001510   777777 376007                    ANQ     -1,DL
         3 001511   000024 136007                    SBLQ    20,DL
         3 001512   000003 116007                    CMPQ    3,DL
         3 001513   001515 602006 3                  TNC     s:14019+6,QL
         3 001514   001541 710000 3                  TRA     s:14030
         3 001515   001520 710000 3                  TRA     s:14021
         3 001516   001534 710000 3                  TRA     s:14027
         3 001517   001526 710000 3                  TRA     s:14024

     1514    14020    5                   CASE(%$PMAP);

     1515    14021    5                       TEMP_OPT='PMAP';

  14021  3 001520   040100 100400                    MLR     fill='040'O
         3 001521   000210 000004 1                  ADSC9   FPT_FDS+20               cn=0,n=4
         3 001522   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1516    14022    5                       TEMP_LEN=4;

  14022  3 001523   000004 235007                    LDA     4,DL
         3 001524   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001525   001541 710000 3                  TRA     s:14030

     1517    14023    5                   CASE(%$MPMAP);

     1518    14024    5                       TEMP_OPT = 'MPMAP';

  14024  3 001526   040100 100400                    MLR     fill='040'O
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:197  
         3 001527   000211 000005 1                  ADSC9   FPT_FDS+21               cn=0,n=5
         3 001530   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1519    14025    5                       TEMP_LEN=5;

  14025  3 001531   000005 235007                    LDA     5,DL
         3 001532   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001533   001541 710000 3                  TRA     s:14030

     1520    14026    5                   CASE(%$NPMAP);

     1521    14027    5                       TEMP_OPT = 'NPMAP';

  14027  3 001534   040100 100400                    MLR     fill='040'O
         3 001535   000213 000005 1                  ADSC9   FPT_FDS+23               cn=0,n=5
         3 001536   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1522    14028    5                       TEMP_LEN = 5;

  14028  3 001537   000005 235007                    LDA     5,DL
         3 001540   200235 755100                    STA     TEMP_LEN,,AUTO

     1523    14029    5                   END;

     1524    14030    4                   IF LEGAL.PMAP#

  14030  3 001541   200205 236100                    LDQ     LEGAL,,AUTO
         3 001542   010000 316003                    CANQ    4096,DU
         3 001543   001634 600000 3                  TZE     s:14058

     1525    14031    5                   THEN DO;

     1526    14032    5                       IF GOT.PMAP ~= 0

  14032  3 001544   200416 221100                    LDX1    GOT+6,,AUTO
         3 001545   001576 600000 3                  TZE     s:14040

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:198  
     1527    14033    6                       THEN DO;

     1528    14034    6                           T$ = PINCRC(ADDR(T),GOT.PMAP-1);

  14034  3 001546   200416 236100                    LDQ     GOT+6,,AUTO
         3 001547   777777 376003                    ANQ     -1,DU
         3 001550   000002 772000                    QRL     2
         3 001551   000040 036000 4                  ADLQ    32
         3 001552   200475 756100                    STQ     T$,,AUTO

     1529    14035    6                           TEMP = OPT_MSG.LEN;

  14035  3 001553   200475 473500                    LDP3    T$,,AUTO
         3 001554   000100 101500                    MRL     fill='000'O
         3 001555   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 001556   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1530    14036    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  14036  3 001557   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 001560   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 001561   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 001562   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 001563   200000 036007                    ADLQ    65536,DL
         3 001564   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 001565   200226 636500                    EPPR6   TEMP,,AUTO
         3 001566   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 001567   000044 237000 4                  LDAQ    36
         3 001570   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001571   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001572   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 001573   000000 701000 xent               TSX1    XUX$ERROR
         3 001574   004230 702000 3                  TSX2    GO_AWAY

     1531    14037    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1532    14038    6                       END;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:199  
  14038  3 001575   003516 710000 3                  TRA     s:14501

     1533    14039    6                       ELSE DO;

     1534    14040    7                           DO CASE(OPT$OUT.CODE);

  14040  3 001576   100000 236100                    LDQ     0,,PR1
         3 001577   777777 376007                    ANQ     -1,DL
         3 001600   000024 136007                    SBLQ    20,DL
         3 001601   000003 116007                    CMPQ    3,DL
         3 001602   001604 602006 3                  TNC     s:14040+6,QL
         3 001603   003516 710000 3                  TRA     s:14501
         3 001604   001607 710000 3                  TRA     s:14042
         3 001605   001625 710000 3                  TRA     s:14050
         3 001606   001616 710000 3                  TRA     s:14046

     1535    14041    7                           CASE(%$PMAP);

     1536    14042    7                               GOT_OPTIONS.PMAP.FULL = '1'B;

  14042  3 001607   400000 236003                    LDQ     -131072,DU
         3 001610   200356 256100                    ORSQ    GOT_OPTIONS+6,,AUTO

     1537    14043    7                               GOT_OPTIONS.PMAP.MINI = '0'B;

  14043  3 001611   000064 236000 4                  LDQ     52
         3 001612   200356 356100                    ANSQ    GOT_OPTIONS+6,,AUTO

     1538    14044    7                               GOT.PMAP = %OFF_PMAP;

  14044  3 001613   000056 222003                    LDX2    46,DU
         3 001614   200416 742100                    STX2    GOT+6,,AUTO
         3 001615   003516 710000 3                  TRA     s:14501

     1539    14045    7                           CASE(%$MPMAP);

     1540    14046    7                               GOT_OPTIONS.PMAP.FULL = '0'B;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:200  

  14046  3 001616   000031 236000 xsym               LDQ     B_VECTNIL+25
         3 001617   200356 356100                    ANSQ    GOT_OPTIONS+6,,AUTO

     1541    14047    7                               GOT_OPTIONS.PMAP.MINI = '1'B;

  14047  3 001620   200000 236003                    LDQ     65536,DU
         3 001621   200356 256100                    ORSQ    GOT_OPTIONS+6,,AUTO

     1542    14048    7                               GOT.PMAP = %OFF_MPMAP;

  14048  3 001622   000063 222003                    LDX2    51,DU
         3 001623   200416 742100                    STX2    GOT+6,,AUTO
         3 001624   003516 710000 3                  TRA     s:14501

     1543    14049    7                           CASE(%$NPMAP);

     1544    14050    7                               GOT_OPTIONS.PMAP.FULL = '0'B;

  14050  3 001625   000031 236000 xsym               LDQ     B_VECTNIL+25
         3 001626   200356 356100                    ANSQ    GOT_OPTIONS+6,,AUTO

     1545    14051    7                               GOT_OPTIONS.PMAP.MINI = '0'B;

  14051  3 001627   000064 236000 4                  LDQ     52
         3 001630   200356 356100                    ANSQ    GOT_OPTIONS+6,,AUTO

     1546    14052    7                               GOT.PMAP = %OFF_NPMAP;

  14052  3 001631   000071 222003                    LDX2    57,DU
         3 001632   200416 742100                    STX2    GOT+6,,AUTO

     1547    14053    7                           END;

     1548    14054
     1549    14055    6                       END;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:201  
     1550    14056    5                   END;

  14056  3 001633   003516 710000 3                  TRA     s:14501

     1551    14057    5                   ELSE DO;

     1552    14058    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14058                                ALTRET(GO_AWAY);

  14058  3 001634   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 001635   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 001636   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 001637   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 001640   000060 237000 4                  LDAQ    48
         3 001641   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001642   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001643   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001644   000000 701000 xent               TSX1    XUX$ERROR
         3 001645   004230 702000 3                  TSX2    GO_AWAY

     1553    14059    5                   END;

  14059  3 001646   003516 710000 3                  TRA     s:14501

     1554    14060        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:202  
     1555    14061        /*
     1556    14062             SCHEMA,MSCHEMA,NSCHEMA
     1557    14063        */
     1558    14064
     1559    14065    4               CASE(%$SCHEMA,%$MSCHEMA,%$NSCHEMA);

     1560    14066    5                   DO CASE(OPT$OUT.CODE);

  14066  3 001647   100000 236100                    LDQ     0,,PR1
         3 001650   777777 376007                    ANQ     -1,DL
         3 001651   000027 136007                    SBLQ    23,DL
         3 001652   000003 116007                    CMPQ    3,DL
         3 001653   001655 602006 3                  TNC     s:14066+6,QL
         3 001654   001701 710000 3                  TRA     s:14077
         3 001655   001660 710000 3                  TRA     s:14068
         3 001656   001674 710000 3                  TRA     s:14074
         3 001657   001666 710000 3                  TRA     s:14071

     1561    14067    5                   CASE(%$SCHEMA);

     1562    14068    5                       TEMP_OPT='SCHEMA';

  14068  3 001660   040100 100400                    MLR     fill='040'O
         3 001661   000215 000006 1                  ADSC9   FPT_FDS+25               cn=0,n=6
         3 001662   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1563    14069    5                       TEMP_LEN=6;

  14069  3 001663   000006 235007                    LDA     6,DL
         3 001664   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001665   001701 710000 3                  TRA     s:14077

     1564    14070    5                   CASE(%$MSCHEMA);

     1565    14071    5                       TEMP_OPT = 'MSCHEMA';

  14071  3 001666   040100 100400                    MLR     fill='040'O
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:203  
         3 001667   000217 000007 1                  ADSC9   FPT_FDS+27               cn=0,n=7
         3 001670   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1566    14072    5                       TEMP_LEN=7;

  14072  3 001671   000007 235007                    LDA     7,DL
         3 001672   200235 755100                    STA     TEMP_LEN,,AUTO
         3 001673   001701 710000 3                  TRA     s:14077

     1567    14073    5                   CASE(%$NSCHEMA);

     1568    14074    5                       TEMP_OPT = 'NSCHEMA';

  14074  3 001674   040100 100400                    MLR     fill='040'O
         3 001675   000221 000007 1                  ADSC9   FPT_FDS+29               cn=0,n=7
         3 001676   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1569    14075    5                       TEMP_LEN = 7;

  14075  3 001677   000007 235007                    LDA     7,DL
         3 001700   200235 755100                    STA     TEMP_LEN,,AUTO

     1570    14076    5                   END;

     1571    14077    4                   IF LEGAL.SCHEMA#

  14077  3 001701   200205 236100                    LDQ     LEGAL,,AUTO
         3 001702   004000 316003                    CANQ    2048,DU
         3 001703   001765 600000 3                  TZE     s:14102

     1572    14078    5                   THEN DO;

     1573    14079    5                       IF GOT.SCHEMA ~= 0

  14079  3 001704   200417 221100                    LDX1    GOT+7,,AUTO
         3 001705   001736 600000 3                  TZE     s:14087

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:204  
     1574    14080    6                       THEN DO;

     1575    14081    6                           T$ = PINCRC(ADDR(T),GOT.SCHEMA-1);

  14081  3 001706   200417 236100                    LDQ     GOT+7,,AUTO
         3 001707   777777 376003                    ANQ     -1,DU
         3 001710   000002 772000                    QRL     2
         3 001711   000040 036000 4                  ADLQ    32
         3 001712   200475 756100                    STQ     T$,,AUTO

     1576    14082    6                           TEMP = OPT_MSG.LEN;

  14082  3 001713   200475 473500                    LDP3    T$,,AUTO
         3 001714   000100 101500                    MRL     fill='000'O
         3 001715   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 001716   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1577    14083    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  14083  3 001717   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 001720   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 001721   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 001722   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 001723   200000 036007                    ADLQ    65536,DL
         3 001724   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 001725   200226 636500                    EPPR6   TEMP,,AUTO
         3 001726   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 001727   000044 237000 4                  LDAQ    36
         3 001730   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001731   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 001732   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 001733   000000 701000 xent               TSX1    XUX$ERROR
         3 001734   004230 702000 3                  TSX2    GO_AWAY

     1578    14084    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1579    14085    6                       END;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:205  
  14085  3 001735   003516 710000 3                  TRA     s:14501

     1580    14086    6                       ELSE DO;

     1581    14087    7                           DO CASE(OPT$OUT.CODE);

  14087  3 001736   100000 236100                    LDQ     0,,PR1
         3 001737   777777 376007                    ANQ     -1,DL
         3 001740   000027 136007                    SBLQ    23,DL
         3 001741   000003 116007                    CMPQ    3,DL
         3 001742   001744 602006 3                  TNC     s:14087+6,QL
         3 001743   003516 710000 3                  TRA     s:14501
         3 001744   001747 710000 3                  TRA     s:14089
         3 001745   001761 710000 3                  TRA     s:14095
         3 001746   001754 710000 3                  TRA     s:14092

     1582    14088    7                           CASE(%$SCHEMA);

     1583    14089    7                               GOT_OPTIONS.SCHEMA = %XUX$FULL;

  14089  3 001747   000001 235007                    LDA     1,DL
         3 001750   200357 755100                    STA     GOT_OPTIONS+7,,AUTO

     1584    14090    7                               GOT.SCHEMA = %OFF_SCHEMA;

  14090  3 001751   000077 222003                    LDX2    63,DU
         3 001752   200417 742100                    STX2    GOT+7,,AUTO
         3 001753   003516 710000 3                  TRA     s:14501

     1585    14091    7                           CASE(%$MSCHEMA);

     1586    14092    7                               GOT_OPTIONS.SCHEMA = %XUX$MINI;

  14092  3 001754   000002 235007                    LDA     2,DL
         3 001755   200357 755100                    STA     GOT_OPTIONS+7,,AUTO

     1587    14093    7                               GOT.SCHEMA = %OFF_MSCHEMA;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:206  

  14093  3 001756   000116 222003                    LDX2    78,DU
         3 001757   200417 742100                    STX2    GOT+7,,AUTO
         3 001760   003516 710000 3                  TRA     s:14501

     1588    14094    7                           CASE(%$NSCHEMA);

     1589    14095    7                               GOT_OPTIONS.SCHEMA = %XUX$NONE;

  14095  3 001761   200357 450100                    STZ     GOT_OPTIONS+7,,AUTO

     1590    14096    7                               GOT.SCHEMA = %OFF_NSCHEMA;

  14096  3 001762   000106 222003                    LDX2    70,DU
         3 001763   200417 742100                    STX2    GOT+7,,AUTO

     1591    14097    7                           END;

     1592    14098
     1593    14099    6                       END;

     1594    14100    5                   END;

  14100  3 001764   003516 710000 3                  TRA     s:14501

     1595    14101    5                   ELSE DO;

     1596    14102    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14102                                ALTRET(GO_AWAY);

  14102  3 001765   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 001766   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 001767   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 001770   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 001771   000060 237000 4                  LDAQ    48
         3 001772   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 001773   200506 630500                    EPPR0   FREE_DS+6,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:207  
         3 001774   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 001775   000000 701000 xent               TSX1    XUX$ERROR
         3 001776   004230 702000 3                  TSX2    GO_AWAY

     1597    14103    5                   END;

  14103  3 001777   003516 710000 3                  TRA     s:14501

     1598    14104        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:208  
     1599    14105        /*
     1600    14106             UREF,MUREF,NUREF
     1601    14107        */
     1602    14108
     1603    14109    4               CASE(%$UREF,%$MUREF,%$NUREF);

     1604    14110    5                   DO CASE(OPT$OUT.CODE);

  14110  3 002000   100000 236100                    LDQ     0,,PR1
         3 002001   777777 376007                    ANQ     -1,DL
         3 002002   000040 136007                    SBLQ    32,DL
         3 002003   000003 116007                    CMPQ    3,DL
         3 002004   002006 602006 3                  TNC     s:14110+6,QL
         3 002005   002032 710000 3                  TRA     s:14121
         3 002006   002011 710000 3                  TRA     s:14112
         3 002007   002017 710000 3                  TRA     s:14115
         3 002010   002025 710000 3                  TRA     s:14118

     1605    14111    5                   CASE(%$UREF);

     1606    14112    5                       TEMP_OPT='UREF';

  14112  3 002011   040100 100400                    MLR     fill='040'O
         3 002012   000223 000004 1                  ADSC9   FPT_FDS+31               cn=0,n=4
         3 002013   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1607    14113    5                       TEMP_LEN=4;

  14113  3 002014   000004 235007                    LDA     4,DL
         3 002015   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002016   002032 710000 3                  TRA     s:14121

     1608    14114    5                   CASE(%$MUREF);

     1609    14115    5                       TEMP_OPT = 'MUREF';

  14115  3 002017   040100 100400                    MLR     fill='040'O
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:209  
         3 002020   000224 000005 1                  ADSC9   FPT_FDS+32               cn=0,n=5
         3 002021   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1610    14116    5                       TEMP_LEN=5;

  14116  3 002022   000005 235007                    LDA     5,DL
         3 002023   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002024   002032 710000 3                  TRA     s:14121

     1611    14117    5                   CASE(%$NUREF);

     1612    14118    5                       TEMP_OPT = 'NUREF';

  14118  3 002025   040100 100400                    MLR     fill='040'O
         3 002026   000226 000005 1                  ADSC9   FPT_FDS+34               cn=0,n=5
         3 002027   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1613    14119    5                       TEMP_LEN = 5;

  14119  3 002030   000005 235007                    LDA     5,DL
         3 002031   200235 755100                    STA     TEMP_LEN,,AUTO

     1614    14120    5                   END;

     1615    14121    4                   IF LEGAL.UREF#

  14121  3 002032   200205 236100                    LDQ     LEGAL,,AUTO
         3 002033   000200 316003                    CANQ    128,DU
         3 002034   002116 600000 3                  TZE     s:14146

     1616    14122    5                   THEN DO;

     1617    14123    5                       IF GOT.UREF ~= 0

  14123  3 002035   200420 221100                    LDX1    GOT+8,,AUTO
         3 002036   002067 600000 3                  TZE     s:14131

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:210  
     1618    14124    6                       THEN DO;

     1619    14125    6                           T$ = PINCRC(ADDR(T),GOT.UREF-1);

  14125  3 002037   200420 236100                    LDQ     GOT+8,,AUTO
         3 002040   777777 376003                    ANQ     -1,DU
         3 002041   000002 772000                    QRL     2
         3 002042   000040 036000 4                  ADLQ    32
         3 002043   200475 756100                    STQ     T$,,AUTO

     1620    14126    6                           TEMP = OPT_MSG.LEN;

  14126  3 002044   200475 473500                    LDP3    T$,,AUTO
         3 002045   000100 101500                    MRL     fill='000'O
         3 002046   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 002047   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1621    14127    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  14127  3 002050   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 002051   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 002052   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 002053   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 002054   200000 036007                    ADLQ    65536,DL
         3 002055   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 002056   200226 636500                    EPPR6   TEMP,,AUTO
         3 002057   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 002060   000044 237000 4                  LDAQ    36
         3 002061   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002062   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 002063   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 002064   000000 701000 xent               TSX1    XUX$ERROR
         3 002065   004230 702000 3                  TSX2    GO_AWAY

     1622    14128    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1623    14129    6                       END;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:211  
  14129  3 002066   003516 710000 3                  TRA     s:14501

     1624    14130    6                       ELSE DO;

     1625    14131    7                           DO CASE(OPT$OUT.CODE);

  14131  3 002067   100000 236100                    LDQ     0,,PR1
         3 002070   777777 376007                    ANQ     -1,DL
         3 002071   000040 136007                    SBLQ    32,DL
         3 002072   000003 116007                    CMPQ    3,DL
         3 002073   002075 602006 3                  TNC     s:14131+6,QL
         3 002074   003516 710000 3                  TRA     s:14501
         3 002075   002100 710000 3                  TRA     s:14133
         3 002076   002105 710000 3                  TRA     s:14136
         3 002077   002112 710000 3                  TRA     s:14139

     1626    14132    7                           CASE(%$UREF);

     1627    14133    7                               GOT_OPTIONS.UREF = %XUX$FULL;

  14133  3 002100   000001 235007                    LDA     1,DL
         3 002101   200364 755100                    STA     GOT_OPTIONS+12,,AUTO

     1628    14134    7                               GOT.UREF = %OFF_UREF;

  14134  3 002102   000157 222003                    LDX2    111,DU
         3 002103   200420 742100                    STX2    GOT+8,,AUTO
         3 002104   003516 710000 3                  TRA     s:14501

     1629    14135    7                           CASE(%$MUREF);

     1630    14136    7                               GOT_OPTIONS.UREF = %XUX$MINI;

  14136  3 002105   000002 235007                    LDA     2,DL
         3 002106   200364 755100                    STA     GOT_OPTIONS+12,,AUTO

     1631    14137    7                               GOT.UREF = %OFF_MUREF;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:212  

  14137  3 002107   000172 222003                    LDX2    122,DU
         3 002110   200420 742100                    STX2    GOT+8,,AUTO
         3 002111   003516 710000 3                  TRA     s:14501

     1632    14138    7                           CASE(%$NUREF);

     1633    14139    7                               GOT_OPTIONS.UREF = %XUX$NONE;

  14139  3 002112   200364 450100                    STZ     GOT_OPTIONS+12,,AUTO

     1634    14140    7                               GOT.UREF = %OFF_NUREF;

  14140  3 002113   000164 222003                    LDX2    116,DU
         3 002114   200420 742100                    STX2    GOT+8,,AUTO

     1635    14141    7                           END;

     1636    14142
     1637    14143    6                       END;

     1638    14144    5                   END;

  14144  3 002115   003516 710000 3                  TRA     s:14501

     1639    14145    5                   ELSE DO;

     1640    14146    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14146                                ALTRET(GO_AWAY);

  14146  3 002116   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 002117   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 002120   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 002121   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 002122   000060 237000 4                  LDAQ    48
         3 002123   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002124   200506 630500                    EPPR0   FREE_DS+6,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:213  
         3 002125   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002126   000000 701000 xent               TSX1    XUX$ERROR
         3 002127   004230 702000 3                  TSX2    GO_AWAY

     1641    14147    5                   END;

  14147  3 002130   003516 710000 3                  TRA     s:14501

     1642    14148        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:214  
     1643    14149        /*
     1644    14150             XREF,MXREF,NXREF
     1645    14151        */
     1646    14152
     1647    14153    4               CASE(%$XREF,%$MXREF,%$NXREF);

     1648    14154    5                   DO CASE(OPT$OUT.CODE);

  14154  3 002131   100000 236100                    LDQ     0,,PR1
         3 002132   777777 376007                    ANQ     -1,DL
         3 002133   000045 136007                    SBLQ    37,DL
         3 002134   000003 116007                    CMPQ    3,DL
         3 002135   002137 602006 3                  TNC     s:14154+6,QL
         3 002136   002163 710000 3                  TRA     s:14165
         3 002137   002142 710000 3                  TRA     s:14156
         3 002140   002156 710000 3                  TRA     s:14162
         3 002141   002150 710000 3                  TRA     s:14159

     1649    14155    5                   CASE(%$XREF);

     1650    14156    5                       TEMP_OPT='XREF';

  14156  3 002142   040100 100400                    MLR     fill='040'O
         3 002143   000230 000004 1                  ADSC9   FPT_FDS+36               cn=0,n=4
         3 002144   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1651    14157    5                       TEMP_LEN=4;

  14157  3 002145   000004 235007                    LDA     4,DL
         3 002146   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002147   002163 710000 3                  TRA     s:14165

     1652    14158    5                   CASE(%$MXREF);

     1653    14159    5                       TEMP_OPT = 'MXREF';

  14159  3 002150   040100 100400                    MLR     fill='040'O
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:215  
         3 002151   000231 000005 1                  ADSC9   FPT_FDS+37               cn=0,n=5
         3 002152   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1654    14160    5                       TEMP_LEN=5;

  14160  3 002153   000005 235007                    LDA     5,DL
         3 002154   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002155   002163 710000 3                  TRA     s:14165

     1655    14161    5                   CASE(%$NXREF);

     1656    14162    5                       TEMP_OPT = 'NXREF';

  14162  3 002156   040100 100400                    MLR     fill='040'O
         3 002157   000233 000005 1                  ADSC9   FPT_FDS+39               cn=0,n=5
         3 002160   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1657    14163    5                       TEMP_LEN = 5;

  14163  3 002161   000005 235007                    LDA     5,DL
         3 002162   200235 755100                    STA     TEMP_LEN,,AUTO

     1658    14164    5                   END;

     1659    14165    4                   IF LEGAL.XREF#

  14165  3 002163   200205 236100                    LDQ     LEGAL,,AUTO
         3 002164   000040 316003                    CANQ    32,DU
         3 002165   002247 600000 3                  TZE     s:14190

     1660    14166    5                   THEN DO;

     1661    14167    5                       IF GOT.XREF ~= 0

  14167  3 002166   200421 221100                    LDX1    GOT+9,,AUTO
         3 002167   002220 600000 3                  TZE     s:14175

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:216  
     1662    14168    6                       THEN DO;

     1663    14169    6                           T$ = PINCRC(ADDR(T),GOT.XREF-1);

  14169  3 002170   200421 236100                    LDQ     GOT+9,,AUTO
         3 002171   777777 376003                    ANQ     -1,DU
         3 002172   000002 772000                    QRL     2
         3 002173   000040 036000 4                  ADLQ    32
         3 002174   200475 756100                    STQ     T$,,AUTO

     1664    14170    6                           TEMP = OPT_MSG.LEN;

  14170  3 002175   200475 473500                    LDP3    T$,,AUTO
         3 002176   000100 101500                    MRL     fill='000'O
         3 002177   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 002200   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1665    14171    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  14171  3 002201   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 002202   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 002203   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 002204   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 002205   200000 036007                    ADLQ    65536,DL
         3 002206   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 002207   200226 636500                    EPPR6   TEMP,,AUTO
         3 002210   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 002211   000044 237000 4                  LDAQ    36
         3 002212   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002213   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 002214   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 002215   000000 701000 xent               TSX1    XUX$ERROR
         3 002216   004230 702000 3                  TSX2    GO_AWAY

     1666    14172    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1667    14173    6                       END;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:217  
  14173  3 002217   003516 710000 3                  TRA     s:14501

     1668    14174    6                       ELSE DO;

     1669    14175    7                           DO CASE(OPT$OUT.CODE);

  14175  3 002220   100000 236100                    LDQ     0,,PR1
         3 002221   777777 376007                    ANQ     -1,DL
         3 002222   000045 136007                    SBLQ    37,DL
         3 002223   000003 116007                    CMPQ    3,DL
         3 002224   002226 602006 3                  TNC     s:14175+6,QL
         3 002225   003516 710000 3                  TRA     s:14501
         3 002226   002231 710000 3                  TRA     s:14177
         3 002227   002243 710000 3                  TRA     s:14183
         3 002230   002236 710000 3                  TRA     s:14180

     1670    14176    7                           CASE(%$XREF);

     1671    14177    7                               GOT_OPTIONS.XREF = %XUX$FULL;

  14177  3 002231   000001 235007                    LDA     1,DL
         3 002232   200366 755100                    STA     GOT_OPTIONS+14,,AUTO

     1672    14178    7                               GOT.XREF = %OFF_XREF;

  14178  3 002233   000213 222003                    LDX2    139,DU
         3 002234   200421 742100                    STX2    GOT+9,,AUTO
         3 002235   003516 710000 3                  TRA     s:14501

     1673    14179    7                           CASE(%$MXREF);

     1674    14180    7                               GOT_OPTIONS.XREF = %XUX$MINI;

  14180  3 002236   000002 235007                    LDA     2,DL
         3 002237   200366 755100                    STA     GOT_OPTIONS+14,,AUTO

     1675    14181    7                               GOT.XREF = %OFF_MXREF;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:218  

  14181  3 002240   000226 222003                    LDX2    150,DU
         3 002241   200421 742100                    STX2    GOT+9,,AUTO
         3 002242   003516 710000 3                  TRA     s:14501

     1676    14182    7                           CASE(%$NXREF);

     1677    14183    7                               GOT_OPTIONS.XREF = %XUX$NONE;

  14183  3 002243   200366 450100                    STZ     GOT_OPTIONS+14,,AUTO

     1678    14184    7                               GOT.XREF = %OFF_NXREF;

  14184  3 002244   000220 222003                    LDX2    144,DU
         3 002245   200421 742100                    STX2    GOT+9,,AUTO

     1679    14185    7                           END;

     1680    14186
     1681    14187    6                       END;

     1682    14188    5                   END;

  14188  3 002246   003516 710000 3                  TRA     s:14501

     1683    14189    5                   ELSE DO;

     1684    14190    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14190                                ALTRET(GO_AWAY);

  14190  3 002247   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 002250   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 002251   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 002252   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 002253   000060 237000 4                  LDAQ    48
         3 002254   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002255   200506 630500                    EPPR0   FREE_DS+6,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:219  
         3 002256   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002257   000000 701000 xent               TSX1    XUX$ERROR
         3 002260   004230 702000 3                  TSX2    GO_AWAY

     1685    14191    5                   END;

  14191  3 002261   003516 710000 3                  TRA     s:14501

     1686    14192        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:220  
     1687    14193        /*
     1688    14194             LO(CODE,DATA),NLO
     1689    14195        */
     1690    14196
     1691    14197    4               CASE(%$LO_CLASS);

     1692    14198    4                   BLK$=OPT$OUT.SUBLK$(0);

  14198  3 002262   100003 236100                    LDQ     3,,PR1
         3 002263   200104 756100                    STQ     BLK$,,AUTO

     1693    14199    5                   DO CASE(OPT$OUT.CODE);

  14199  3 002264   200104 471500                    LDP1    BLK$,,AUTO
         3 002265   100000 236100                    LDQ     0,,PR1
         3 002266   777777 376007                    ANQ     -1,DL
         3 002267   000014 136007                    SBLQ    12,DL
         3 002270   000002 116007                    CMPQ    2,DL
         3 002271   002273 602006 3                  TNC     s:14199+7,QL
         3 002272   002310 710000 3                  TRA     s:14207
         3 002273   002275 710000 3                  TRA     s:14201
         3 002274   002303 710000 3                  TRA     s:14204

     1694    14200    5                   CASE(%$LO);

     1695    14201    5                       TEMP_OPT = 'LO';

  14201  3 002275   040100 100400                    MLR     fill='040'O
         3 002276   000235 000002 1                  ADSC9   FPT_FDS+41               cn=0,n=2
         3 002277   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1696    14202    5                       TEMP_LEN = 2;

  14202  3 002300   000002 235007                    LDA     2,DL
         3 002301   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002302   002310 710000 3                  TRA     s:14207

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:221  
     1697    14203    5                   CASE(%$NLO);

     1698    14204    5                       TEMP_OPT = 'NLO';

  14204  3 002303   040100 100400                    MLR     fill='040'O
         3 002304   000236 000003 1                  ADSC9   FPT_FDS+42               cn=0,n=3
         3 002305   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1699    14205    5                       TEMP_LEN = 3;

  14205  3 002306   000003 235007                    LDA     3,DL
         3 002307   200235 755100                    STA     TEMP_LEN,,AUTO

     1700    14206    5                   END;

     1701    14207    4                   IF LEGAL.LO#

  14207  3 002310   200205 236100                    LDQ     LEGAL,,AUTO
         3 002311   100000 316003                    CANQ    32768,DU
         3 002312   002416 600000 3                  TZE     s:14242

     1702    14208    5                   THEN DO;

     1703    14209    5                       IF GOT.LO ~= 0

  14209  3 002313   200422 221100                    LDX1    GOT+10,,AUTO
         3 002314   002345 600000 3                  TZE     s:14217

     1704    14210    6                       THEN DO;

     1705    14211    6                           T$ = PINCRC(ADDR(T),GOT.LO-1);

  14211  3 002315   200422 236100                    LDQ     GOT+10,,AUTO
         3 002316   777777 376003                    ANQ     -1,DU
         3 002317   000002 772000                    QRL     2
         3 002320   000040 036000 4                  ADLQ    32
         3 002321   200475 756100                    STQ     T$,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:222  

     1706    14212    6                           TEMP = OPT_MSG.LEN;

  14212  3 002322   200475 473500                    LDP3    T$,,AUTO
         3 002323   000100 101500                    MRL     fill='000'O
         3 002324   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 002325   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1707    14213    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

  14213  3 002326   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 002327   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 002330   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 002331   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 002332   200000 036007                    ADLQ    65536,DL
         3 002333   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 002334   200226 636500                    EPPR6   TEMP,,AUTO
         3 002335   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 002336   000044 237000 4                  LDAQ    36
         3 002337   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002340   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 002341   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 002342   000000 701000 xent               TSX1    XUX$ERROR
         3 002343   004230 702000 3                  TSX2    GO_AWAY

     1708    14214    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1709    14215    6                       END;

  14215  3 002344   003516 710000 3                  TRA     s:14501

     1710    14216    6                       ELSE DO;

     1711    14217    6                           GOT_OPTIONS.LO = '0'B;

  14217  3 002345   200353 450100                    STZ     GOT_OPTIONS+3,,AUTO

     1712    14218    6                           IF OPT$OUT.CODE = %$NLO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:223  

  14218  3 002346   100000 722100                    LXL2    0,,PR1
         3 002347   000015 102003                    CMPX2   13,DU
         3 002350   002354 601000 3                  TNZ     s:14223

     1713    14219    7                           THEN DO;

     1714    14220    7                               GOT.LO = %OFF_LO;

  14220  3 002351   000031 223003                    LDX3    25,DU
         3 002352   200422 743100                    STX3    GOT+10,,AUTO

     1715    14221    7                           END;

  14221  3 002353   003516 710000 3                  TRA     s:14501

     1716    14222    7                           ELSE DO;

     1717    14223    7                               GOT.LO = %OFF_LO;

  14223  3 002354   000031 223003                    LDX3    25,DU
         3 002355   200422 743100                    STX3    GOT+10,,AUTO

     1718    14224    7                               IF OPT$OUT.NSUBLKS = 0

  14224  3 002356   100001 221100                    LDX1    1,,PR1
         3 002357   002365 601000 3                  TNZ     s:14230

     1719    14225    8                               THEN DO;

     1720    14226    8                                   GOT_OPTIONS.LO.CODE = '1'B;

  14226  3 002360   400000 236003                    LDQ     -131072,DU
         3 002361   200353 256100                    ORSQ    GOT_OPTIONS+3,,AUTO

     1721    14227    8                                   GOT_OPTIONS.LO.DATA = '1'B;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:224  
  14227  3 002362   200000 236003                    LDQ     65536,DU
         3 002363   200353 256100                    ORSQ    GOT_OPTIONS+3,,AUTO

     1722    14228    8                               END;

  14228  3 002364   003516 710000 3                  TRA     s:14501

     1723    14229    7                               ELSE
     1724    14230    8                               DO I = 0 TO OPT$OUT.NSUBLKS - 1;

  14230  3 002365   200223 450100                    STZ     I,,AUTO
         3 002366   002410 710000 3                  TRA     s:14237+1

     1725    14231    9                                   DO CASE(OPT$OUT.SUBLK$(I)->OPT$OUT.CODE);

  14231  3 002367   200104 470500                    LDP0    BLK$,,AUTO
         3 002370   200223 720100                    LXL0    I,,AUTO
         3 002371   000003 471510                    LDP1    3,X0,PR0
         3 002372   100000 236100                    LDQ     0,,PR1
         3 002373   777777 376007                    ANQ     -1,DL
         3 002374   000016 136007                    SBLQ    14,DL
         3 002375   000002 116007                    CMPQ    2,DL
         3 002376   002400 602006 3                  TNC     s:14231+9,QL
         3 002377   002407 710000 3                  TRA     s:14237
         3 002400   002402 710000 3                  TRA     s:14233
         3 002401   002405 710000 3                  TRA     s:14235

     1726    14232    9                                   CASE(%$CODE);

     1727    14233    9                                       GOT_OPTIONS.LO.CODE = '1'B;

  14233  3 002402   400000 236003                    LDQ     -131072,DU
         3 002403   200353 256100                    ORSQ    GOT_OPTIONS+3,,AUTO
         3 002404   002407 710000 3                  TRA     s:14237

     1728    14234    9                                   CASE(%$DATA);

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:225  
     1729    14235    9                                       GOT_OPTIONS.LO.DATA = '1'B;

  14235  3 002405   200000 236003                    LDQ     65536,DU
         3 002406   200353 256100                    ORSQ    GOT_OPTIONS+3,,AUTO

     1730    14236    9                                   END; /* DO CASE */

     1731    14237    8                               END; /* DO I */

  14237  3 002407   200223 054100                    AOS     I,,AUTO
         3 002410   200104 470500                    LDP0    BLK$,,AUTO
         3 002411   000001 236100                    LDQ     1,,PR0
         3 002412   000022 772000                    QRL     18
         3 002413   200223 116100                    CMPQ    I,,AUTO
         3 002414   002367 605400 3                  TPNZ    s:14231

     1732    14238    7                           END; /* LO  */

     1733    14239    6                       END;  /* First occurence */

     1734    14240    5                   END;   /* Valid option */

  14240  3 002415   003516 710000 3                  TRA     s:14501

     1735    14241    5                   ELSE DO;

     1736    14242    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14242                                ALTRET(GO_AWAY);

  14242  3 002416   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 002417   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 002420   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 002421   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 002422   000060 237000 4                  LDAQ    48
         3 002423   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002424   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 002425   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:226  
         3 002426   000000 701000 xent               TSX1    XUX$ERROR
         3 002427   004230 702000 3                  TSX2    GO_AWAY

     1737    14243    5                   END;

  14243  3 002430   003516 710000 3                  TRA     s:14501

     1738    14244        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:227  
     1739    14245        /*
     1740    14246             SRCH(.fid[,.fid])
     1741    14247        */
     1742    14248
     1743    14249    4               CASE(%$SRCH);

     1744    14250    4                   IF LEGAL.SRCH#

  14250  3 002431   200205 430100                    FSZN    LEGAL,,AUTO
         3 002432   002711 605000 3                  TPL     s:14313

     1745    14251    5                   THEN DO;

     1746    14252    5                       IF GOT.SRCH ~= 0

  14252  3 002433   200423 222100                    LDX2    GOT+11,,AUTO
         3 002434   002464 600000 3                  TZE     s:14260

     1747    14253    6                       THEN DO;

     1748    14254    6                           T$ = PINCRC(ADDR(T),GOT.SRCH-1);

  14254  3 002435   200423 236100                    LDQ     GOT+11,,AUTO
         3 002436   777777 376003                    ANQ     -1,DU
         3 002437   000002 772000                    QRL     2
         3 002440   000040 036000 4                  ADLQ    32
         3 002441   200475 756100                    STQ     T$,,AUTO

     1749    14255    6                           TEMP = OPT_MSG.LEN;

  14255  3 002442   200475 473500                    LDP3    T$,,AUTO
         3 002443   000100 101500                    MRL     fill='000'O
         3 002444   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 002445   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1750    14256    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:228  
  14256  3 002446   000066 237000 4                  LDAQ    54
         3 002447   200512 757100                    STAQ    FREE_DS+10,,AUTO
         3 002450   200475 236100                    LDQ     T$,,AUTO
         3 002451   200000 036007                    ADLQ    65536,DL
         3 002452   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 002453   200226 634500                    EPPR4   TEMP,,AUTO
         3 002454   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 002455   000044 237000 4                  LDAQ    36
         3 002456   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002457   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 002460   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 002461   000000 701000 xent               TSX1    XUX$ERROR
         3 002462   004230 702000 3                  TSX2    GO_AWAY

     1751    14257    6                             4,'SRCH') ALTRET(GO_AWAY);
     1752    14258    6                       END;

  14258  3 002463   003516 710000 3                  TRA     s:14501

     1753    14259    6                       ELSE DO;

     1754    14260    6                           GOT.SRCH = %OFF_SRCH;

  14260  3 002464   000135 223003                    LDX3    93,DU
         3 002465   200423 743100                    STX3    GOT+11,,AUTO

     1755    14261    6                           GOT_OPTIONS.SRCH = '1'B;

  14261  3 002466   400000 236003                    LDQ     -131072,DU
         3 002467   200361 756100                    STQ     GOT_OPTIONS+9,,AUTO

     1756    14262    6                           FID = FPT_FID;

  14262  3 002470   000100 100400                    MLR     fill='000'O
         3 002471   000036 000140 1                  ADSC9   FPT_FID                  cn=0,n=96
         3 002472   200042 000140                    ADSC9   FID,,AUTO                cn=0,n=96

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:229  
     1757    14263    6                           FID.V_ = VECTOR(FID.V);

  14263  3 002473   000065 235000 4                  LDA     53
         3 002474   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002475   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002476   000066 036003                    ADLQ    54,DU
         3 002477   200042 757100                    STAQ    FID,,AUTO

     1758    14264    6                           FID.ACCT_ = VECTOR(SRCH_FID.ACCT);

  14264  3 002500   000070 235000 4                  LDA     56
         3 002501   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002502   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002503   000437 036003                    ADLQ    287,DU
         3 002504   200050 757100                    STAQ    FID+6,,AUTO

     1759    14265    6                           FID.NAME_ = VECTOR(SRCH_FID.NAME);

  14265  3 002505   000071 235000 4                  LDA     57
         3 002506   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002507   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002510   000427 036003                    ADLQ    279,DU
         3 002511   200046 757100                    STAQ    FID+4,,AUTO

     1760    14266    6                           FID.PASS_ = VECTOR(SRCH_FID.PASS);

  14266  3 002512   000070 235000 4                  LDA     56
         3 002513   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002514   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002515   000441 036003                    ADLQ    289,DU
         3 002516   200052 757100                    STAQ    FID+8,,AUTO

     1761    14267    6                           FID.SN_ = VECTOR(SRCH_FID.SN);

  14267  3 002517   000072 235000 4                  LDA     58
         3 002520   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002521   200506 236100                    LDQ     FREE_DS+6,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:230  
         3 002522   000443 036003                    ADLQ    291,DU
         3 002523   200054 757100                    STAQ    FID+10,,AUTO

     1762    14268    6                           FID.WSN_ = VECTOR(SRCH_FID.WSN);

  14268  3 002524   000070 235000 4                  LDA     56
         3 002525   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002526   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002527   000073 036000 4                  ADLQ    59
         3 002530   200056 757100                    STAQ    FID+12,,AUTO

     1763    14269    6                           FID.ASN_ = VECTOR(SRCH_FID.ASN);

  14269  3 002531   777640 235007                    LDA     -96,DL
         3 002532   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002533   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002534   000450 036003                    ADLQ    296,DU
         3 002535   200060 757100                    STAQ    FID+14,,AUTO

     1764    14270    6                           FID.RES_ = VECTOR(SRCH_FID.RES);

  14270  3 002536   777640 235007                    LDA     -96,DL
         3 002537   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002540   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002541   000451 036003                    ADLQ    297,DU
         3 002542   200062 757100                    STAQ    FID+16,,AUTO

     1765    14271    6                           FID.RESULTS_ = VECTOR(FID_RESULTS);

  14271  3 002543   000074 235000 4                  LDA     60
         3 002544   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 002545   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002546   000072 036003                    ADLQ    58,DU
         3 002547   200064 757100                    STAQ    FID+18,,AUTO

     1766    14272    6                           SEARCH_LIST.NUM = 0;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:231  
  14272  3 002550   200240 473500                    LDP3    SEARCH_LIST$,,AUTO
         3 002551   300000 450100                    STZ     0,,PR3

     1767    14273    7                           DO I = 0 TO OPT$OUT.NSUBLKS - 1;

  14273  3 002552   200223 450100                    STZ     I,,AUTO
         3 002553   002703 710000 3                  TRA     s:14309+1

     1768    14274    7                               IF SEARCH_LIST.NUM >= NUM_SRCH_ACCTS

  14274  3 002554   200240 470500                    LDP0    SEARCH_LIST$,,AUTO
         3 002555   000000 236100                    LDQ     0,,PR0
         3 002556   002561 604000 3                  TMI     s:14276
         3 002557   200237 116100                    CMPQ    NUM_SRCH_ACCTS,,AUTO
         3 002560   002572 604000 3                  TMI     s:14280

     1769    14275    8                               THEN DO;

     1770    14276    8                                   CALL XUX$ERROR(%E$XUX#TOO_MANY_SRCH_ACCTS,'1'B,

  14276  3 002561   200237 631500                    EPPR1   NUM_SRCH_ACCTS,,AUTO
         3 002562   200510 451500                    STP1    FREE_DS+8,,AUTO
         3 002563   000076 237000 4                  LDAQ    62
         3 002564   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002565   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 002566   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 002567   000000 701000 xent               TSX1    XUX$ERROR
         3 002570   004230 702000 3                  TSX2    GO_AWAY

     1771    14277    8                                     NUM_SRCH_ACCTS) ALTRET(GO_AWAY);
     1772    14278    8                               END;

  14278  3 002571   002702 710000 3                  TRA     s:14309

     1773    14279    8                               ELSE DO;

     1774    14280    8                                   FID.TEXTFID_ = VECTOR(OPT$OUT.SUBLK$(I)->OPT$SYM.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:232  
             14280                                            TEXT);

  14280  3 002572   200104 471500                    LDP1    BLK$,,AUTO
         3 002573   200223 720100                    LXL0    I,,AUTO
         3 002574   100003 473510                    LDP3    3,X0,PR1
         3 002575   300004 236100                    LDQ     4,,PR3
         3 002576   000033 772000                    QRL     27
         3 002577   000064 737000                    LLS     52
         3 002600   000140 135007                    SBLA    96,DL
         3 002601   200506 453500                    STP3    FREE_DS+6,,AUTO
         3 002602   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 002603   000100 036000 4                  ADLQ    64
         3 002604   200044 757100                    STAQ    FID+2,,AUTO

     1775    14281    8                                   CALL M$FID(FID) ALTRET(BAD_FID);

  14281  3 002605   200042 630500                    EPPR0   FID,,AUTO
         3 002606   420001 713400                    CLIMB   alt,+8193
         3 002607   404400 401760                    pmme    nvectors=10
         3 002610   002657 702000 3                  TSX2    BAD_FID

     1776    14282
     1777    14283    8                                   IF FID_RESULTS.ACCT AND ((NOT FID_RESULTS.NAME) OR
             14283                                            LEGAL.SRCH_FIL#)

  14283  3 002611   200072 236100                    LDQ     FID_RESULTS,,AUTO
         3 002612   200000 316003                    CANQ    65536,DU
         3 002613   002657 600000 3                  TZE     BAD_FID
         3 002614   200072 234100                    SZN     FID_RESULTS,,AUTO
         3 002615   002621 605000 3                  TPL     s:14283+8
         3 002616   200205 236100                    LDQ     LEGAL,,AUTO
         3 002617   400000 316007                    CANQ    -131072,DL
         3 002620   002657 600000 3                  TZE     BAD_FID
         3 002621   200450 236100                    LDQ     SRCH_FID+17,,AUTO
         3 002622   777000 376003                    ANQ     -512,DU
         3 002623   001000 116003                    CMPQ    512,DU
         3 002624   002627 600000 3                  TZE     s:14290
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:233  
         3 002625   002000 116003                    CMPQ    1024,DU
         3 002626   002657 601000 3                  TNZ     BAD_FID

     1778    14284    8                                     AND (SRCH_FID.ASN = %FILE# OR SRCH_FID.ASN = %
             14284                                              TAPE#)
     1779    14285    9                                   THEN DO;

     1780    14286
     1781    14287        /*    If a filename has been given make sure that it contains
     1782    14288              only one wild card character ('?')                       */
     1783    14289
     1784    14290    9                                       IF FID_RESULTS.NAME

  14290  3 002627   200072 234100                    SZN     FID_RESULTS,,AUTO
         3 002630   002654 605000 3                  TPL     s:14300

     1785    14291   10                                       THEN DO;

     1786    14292   10                                           CALL INDEX (IND, '?',SRCH_FID.NAME);

  14292  3 002631   000000 124500                    SCM     mask='000'O
         3 002632   200427 000040                    ADSC9   SRCH_FID,,AUTO           cn=0,n=32
         3 002633   000101 000001 4                  ADSC9   65                       cn=0,n=1
         3 002634   200236 000100                    ARG     IND,,AUTO

     1787    14293   10                                           IF (IND<LENGTHC(SRCH_FID.NAME))

  14293  3 002635   200236 235100                    LDA     IND,,AUTO
         3 002636   000040 115007                    CMPA    32,DL
         3 002637   002654 605000 3                  TPL     s:14300

     1788    14294   11                                           THEN DO;

     1789    14295   11                                              CALL INDEX (IND, '?',SRCH_FID.NAME,IND+1
             14295                                                        );

  14295  3 002640   777740 620005                    EAX0    -32,AL
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:234  
         3 002641   777777 660003                    ERX0    -1,DU
         3 002642   200236 236100                    LDQ     IND,,AUTO
         3 002643   000001 036007                    ADLQ    1,DL
         3 002644   000000 124545                    SCM     mask='000'O
         3 002645   200427 200010                    ADSC9   SRCH_FID,A,AUTO          cn=1,n=*X0
         3 002646   000101 000001 4                  ADSC9   65                       cn=0,n=1
         3 002647   200236 000100                    ARG     IND,,AUTO
         3 002650   200236 056100                    ASQ     IND,,AUTO

     1790    14296   11                                               IF (IND < LENGTHC(SRCH_FID.NAME))

  14296  3 002651   200236 235100                    LDA     IND,,AUTO
         3 002652   000040 115007                    CMPA    32,DL
         3 002653   002657 604000 3                  TMI     BAD_FID

     1791    14297   11                                               THEN GOTO BAD_FID;
     1792    14298   11                                           END; /* IF LENGTHC */

     1793    14299   10                                       END; /* IF FID_RESULTS */

     1794    14300    9                                       CALL INSERT_FID;

  14300  3 002654   004340 701000 3                  TSX1    INSERT_FID
         3 002655   000000 011000                    NOP     0

     1795    14301    9                                   END;

  14301  3 002656   002702 710000 3                  TRA     s:14309

     1796    14302
     1797    14303    9                                   ELSE DO;

     1798    14304    9   BAD_FID:                            TEMP = OPT$OUT.SUBLK$(I)->OPT$SYM.COUNT;

  14304  3 002657   200104 470500       BAD_FID      LDP0    BLK$,,AUTO
         3 002660   200223 720100                    LXL0    I,,AUTO
         3 002661   000003 471510                    LDP1    3,X0,PR0
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:235  
         3 002662   100004 236100                    LDQ     4,,PR1
         3 002663   000033 772000                    QRL     27
         3 002664   200226 756100                    STQ     TEMP,,AUTO

     1799    14305    9                                       CALL XUX$ERROR(%E$XUX#BAD_SRCH_FID,'1'B,TEMP,

  14305  3 002665   000003 471510                    LDP1    3,X0,PR0
         3 002666   200512 451500                    STP1    FREE_DS+10,,AUTO
         3 002667   200512 236100                    LDQ     FREE_DS+10,,AUTO
         3 002670   000100 036000 4                  ADLQ    64
         3 002671   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 002672   200226 633500                    EPPR3   TEMP,,AUTO
         3 002673   200510 453500                    STP3    FREE_DS+8,,AUTO
         3 002674   000104 237000 4                  LDAQ    68
         3 002675   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 002676   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 002677   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002700   000000 701000 xent               TSX1    XUX$ERROR
         3 002701   004230 702000 3                  TSX2    GO_AWAY

     1800    14306    9                                         OPT$OUT.SUBLK$(I)->OPT$SYM.TEXT) ALTRET(
             14306                                                  GO_AWAY);
     1801    14307    9                                   END;

     1802    14308    8                               END;

     1803    14309    7                           END; /* DO I */

  14309  3 002702   200223 054100                    AOS     I,,AUTO
         3 002703   200104 470500                    LDP0    BLK$,,AUTO
         3 002704   000001 236100                    LDQ     1,,PR0
         3 002705   000022 772000                    QRL     18
         3 002706   200223 116100                    CMPQ    I,,AUTO
         3 002707   002554 605400 3                  TPNZ    s:14274

     1804    14310    6                       END; /* First time for SRCH */

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:236  
     1805    14311    5                   END; /* SRCH is valid option */

  14311  3 002710   003516 710000 3                  TRA     s:14501

     1806    14312    5                   ELSE DO;

     1807    14313    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,4,'SRCH') ALTRET(
             14313                                GO_AWAY);

  14313  3 002711   000106 630400 4                  EPPR0   70
         3 002712   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 002713   000000 701000 xent               TSX1    XUX$ERROR
         3 002714   004230 702000 3                  TSX2    GO_AWAY

     1808    14314    5                   END;

  14314  3 002715   003516 710000 3                  TRA     s:14501

     1809    14315        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:237  
     1810    14316        /*
     1811    14317             DMAP, MDMAP
     1812    14318        */
     1813    14319
     1814    14320        /*   With thanks to ZW4$CTL_CARD, from whence this code has been
     1815    14321             stolen outright.  */
     1816    14322    4               CASE(%$DMAP_CLASS);

     1817    14323    4                   BLK$ = OPT$OUT.SUBLK$(0);

  14323  3 002716   100003 236100                    LDQ     3,,PR1
         3 002717   200104 756100                    STQ     BLK$,,AUTO

     1818    14324    5                   DO CASE(OPT$OUT.CODE);

  14324  3 002720   200104 471500                    LDP1    BLK$,,AUTO
         3 002721   100000 721100                    LXL1    0,,PR1
         3 002722   000007 101003                    CMPX1   7,DU
         3 002723   002725 602011 3                  TNC     s:14324+5,X1
         3 002724   002763 710000 3                  TRA     s:14338
         3 002725   002763 710000 3                  TRA     s:14338
         3 002726   002763 710000 3                  TRA     s:14338
         3 002727   002763 710000 3                  TRA     s:14338
         3 002730   002734 710000 3                  TRA     s:14326
         3 002731   002750 710000 3                  TRA     s:14332
         3 002732   002742 710000 3                  TRA     s:14329
         3 002733   002756 710000 3                  TRA     s:14335

     1819    14325    5                   CASE(%$DMAP);

     1820    14326    5                       TEMP_OPT = 'DMAP';

  14326  3 002734   040100 100400                    MLR     fill='040'O
         3 002735   000240 000004 1                  ADSC9   FPT_FDS+44               cn=0,n=4
         3 002736   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1821    14327    5                       TEMP_LEN = 4;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:238  

  14327  3 002737   000004 235007                    LDA     4,DL
         3 002740   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002741   002763 710000 3                  TRA     s:14338

     1822    14328    5                   CASE(%$NDMAP);

     1823    14329    5                       TEMP_OPT = 'NDMAP';

  14329  3 002742   040100 100400                    MLR     fill='040'O
         3 002743   000241 000005 1                  ADSC9   FPT_FDS+45               cn=0,n=5
         3 002744   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1824    14330    5                       TEMP_LEN = 5;

  14330  3 002745   000005 235007                    LDA     5,DL
         3 002746   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002747   002763 710000 3                  TRA     s:14338

     1825    14331    5                   CASE(%$MDMAP);

     1826    14332    5                       TEMP_OPT = 'MDMAP';

  14332  3 002750   040100 100400                    MLR     fill='040'O
         3 002751   000243 000005 1                  ADSC9   FPT_FDS+47               cn=0,n=5
         3 002752   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1827    14333    5                       TEMP_LEN = 5;

  14333  3 002753   000005 235007                    LDA     5,DL
         3 002754   200235 755100                    STA     TEMP_LEN,,AUTO
         3 002755   002763 710000 3                  TRA     s:14338

     1828    14334    5                   CASE(%$NMDMAP);

     1829    14335    5                       TEMP_OPT = 'NMDMAP';

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:239  
  14335  3 002756   040100 100400                    MLR     fill='040'O
         3 002757   000245 000006 1                  ADSC9   FPT_FDS+49               cn=0,n=6
         3 002760   200230 000024                    ADSC9   TEMP_OPT,,AUTO           cn=0,n=20

     1830    14336    5                       TEMP_LEN = 6;

  14336  3 002761   000006 235007                    LDA     6,DL
         3 002762   200235 755100                    STA     TEMP_LEN,,AUTO

     1831    14337    5                   END; /* DO CASE */

     1832    14338    4                   IF LEGAL.DMAP#

  14338  3 002763   200205 236100                    LDQ     LEGAL,,AUTO
         3 002764   200000 316003                    CANQ    65536,DU
         3 002765   003425 600000 3                  TZE     s:14446

     1833    14339    5                   THEN DO;

     1834    14340    5                      IF (GOT.DMAP ~= 0 AND (OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE = %
             14340                                $NDMAP)) OR

  14340  3 002766   200424 221100                    LDX1    GOT+12,,AUTO
         3 002767   002775 600000 3                  TZE     s:14340+7
         3 002770   100000 722100                    LXL2    0,,PR1
         3 002771   000003 102003                    CMPX2   3,DU
         3 002772   003004 600000 3                  TZE     s:14343
         3 002773   000005 102003                    CMPX2   5,DU
         3 002774   003004 600000 3                  TZE     s:14343
         3 002775   200425 222100                    LDX2    GOT+13,,AUTO
         3 002776   003047 600000 3                  TZE     s:14351
         3 002777   100000 723100                    LXL3    0,,PR1
         3 003000   000004 103003                    CMPX3   4,DU
         3 003001   003004 600000 3                  TZE     s:14343
         3 003002   000006 103003                    CMPX3   6,DU
         3 003003   003047 601000 3                  TNZ     s:14351

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:240  
     1835    14341    5                         (GOT.MDMAP ~= 0 AND (OPT$OUT.CODE = %$MDMAP OR OPT$OUT.CODE =
             14341                                  %$NMDMAP))
     1836    14342    6                       THEN DO;

     1837    14343    6                           IF OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE=%$NDMAP

  14343  3 003004   100000 722100                    LXL2    0,,PR1
         3 003005   000003 102003                    CMPX2   3,DU
         3 003006   003011 600000 3                  TZE     s:14344
         3 003007   000005 102003                    CMPX2   5,DU
         3 003010   003017 601000 3                  TNZ     s:14345

     1838    14344    6                           THEN T$ = PINCRC(ADDR(T),GOT.DMAP-1);

  14344  3 003011   200424 236100                    LDQ     GOT+12,,AUTO
         3 003012   777777 376003                    ANQ     -1,DU
         3 003013   000002 772000                    QRL     2
         3 003014   000040 036000 4                  ADLQ    32
         3 003015   200475 756100                    STQ     T$,,AUTO
         3 003016   003024 710000 3                  TRA     s:14346

     1839    14345    6                           ELSE T$ = PINCRC(ADDR(T),GOT.MDMAP-1);

  14345  3 003017   200425 236100                    LDQ     GOT+13,,AUTO
         3 003020   777777 376003                    ANQ     -1,DU
         3 003021   000002 772000                    QRL     2
         3 003022   000040 036000 4                  ADLQ    32
         3 003023   200475 756100                    STQ     T$,,AUTO

     1840    14346    6                           TEMP = OPT_MSG.LEN;

  14346  3 003024   200475 473500                    LDP3    T$,,AUTO
         3 003025   000100 101500                    MRL     fill='000'O
         3 003026   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         3 003027   200226 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

     1841    14347    6                           CALL XUX$ERROR(%E$XUX#DUPE_OPTION,'1'B,TEMP,OPT_MSG.TEXT,
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:241  

  14347  3 003030   200230 634500                    EPPR4   TEMP_OPT,,AUTO
         3 003031   200513 454500                    STP4    FREE_DS+11,,AUTO
         3 003032   200235 635500                    EPPR5   TEMP_LEN,,AUTO
         3 003033   200512 455500                    STP5    FREE_DS+10,,AUTO
         3 003034   200000 036007                    ADLQ    65536,DL
         3 003035   200511 756100                    STQ     FREE_DS+9,,AUTO
         3 003036   200226 636500                    EPPR6   TEMP,,AUTO
         3 003037   200510 456500                    STP6    FREE_DS+8,,AUTO
         3 003040   000044 237000 4                  LDAQ    36
         3 003041   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 003042   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 003043   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 003044   000000 701000 xent               TSX1    XUX$ERROR
         3 003045   004230 702000 3                  TSX2    GO_AWAY

     1842    14348    6                             TEMP_LEN,TEMP_OPT) ALTRET(GO_AWAY);
     1843    14349    6                       END;     /* of Already got one of these */

  14349  3 003046   003516 710000 3                  TRA     s:14501

     1844    14350    6                       ELSE DO;

     1845    14351    6                           IF OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE = %$MDMAP

  14351  3 003047   100000 723100                    LXL3    0,,PR1
         3 003050   000003 103003                    CMPX3   3,DU
         3 003051   003054 600000 3                  TZE     s:14352
         3 003052   000004 103003                    CMPX3   4,DU
         3 003053   003057 601000 3                  TNZ     s:14353

     1846    14352    6                           THEN BIT_VAL = '1'B;

  14352  3 003054   400000 236003                    LDQ     -131072,DU
         3 003055   200242 756100                    STQ     BIT_VAL,,AUTO
         3 003056   003060 710000 3                  TRA     s:14354

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:242  
     1847    14353    6                           ELSE BIT_VAL = '0'B;

  14353  3 003057   200242 450100                    STZ     BIT_VAL,,AUTO

     1848    14354    6                           IF OPT$OUT.CODE = %$DMAP OR OPT$OUT.CODE = %$NDMAP

  14354  3 003060   100000 723100                    LXL3    0,,PR1
         3 003061   000003 103003                    CMPX3   3,DU
         3 003062   003065 600000 3                  TZE     s:14356
         3 003063   000005 103003                    CMPX3   5,DU
         3 003064   003213 601000 3                  TNZ     s:14389

     1849    14355    7                           THEN DO;

     1850    14356    7                               IF OPT$OUT.NSUBLKS <= 0

  14356  3 003065   100001 224100                    LDX4    1,,PR1
         3 003066   003117 601000 3                  TNZ     s:14366

     1851    14357    8                               THEN DO;

     1852    14358    8                                   GOT_OPTIONS.DMAP.STATIC# = BIT_VAL;

  14358  3 003067   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003070   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003071   400000 376003                    ANQ     -131072,DU
         3 003072   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1853    14359    8                                   GOT_OPTIONS.DMAP.AUTO# = BIT_VAL;

  14359  3 003073   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003074   000001 772000                    QRL     1
         3 003075   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003076   200000 376003                    ANQ     65536,DU
         3 003077   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1854    14360    8                                   GOT_OPTIONS.DMAP.SYMREF# = BIT_VAL;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:243  

  14360  3 003100   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003101   000002 772000                    QRL     2
         3 003102   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003103   100000 376003                    ANQ     32768,DU
         3 003104   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1855    14361    8                                   GOT_OPTIONS.DMAP.BASED# = BIT_VAL;

  14361  3 003105   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003106   000003 772000                    QRL     3
         3 003107   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003110   040000 376003                    ANQ     16384,DU
         3 003111   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1856    14362    8                                   IF NOT BIT_VAL

  14362  3 003112   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003113   003340 604000 3                  TMI     s:14422

     1857    14363    8                                   THEN NDM.BITS='1111'B;

  14363  3 003114   740000 236003                    LDQ     -16384,DU
         3 003115   200244 256100                    ORSQ    NDM,,AUTO

     1858    14364    8                               END;

  14364  3 003116   003340 710000 3                  TRA     s:14422

     1859    14365    8                               ELSE DO;

     1860    14366    9                                   DO J = 0 TO OPT$OUT.NSUBLKS - 1;

  14366  3 003117   200224 450100                    STZ     J,,AUTO
         3 003120   003205 710000 3                  TRA     s:14385+1

     1861    14367   10                                       DO CASE(OPT$OUT.SUBLK$(J)->OPT$OUT.CODE);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:244  

  14367  3 003121   200104 470500                    LDP0    BLK$,,AUTO
         3 003122   200224 720100                    LXL0    J,,AUTO
         3 003123   000003 471510                    LDP1    3,X0,PR0
         3 003124   100000 236100                    LDQ     0,,PR1
         3 003125   777777 376007                    ANQ     -1,DL
         3 003126   000007 136007                    SBLQ    7,DL
         3 003127   000004 116007                    CMPQ    4,DL
         3 003130   003132 602006 3                  TNC     s:14367+9,QL
         3 003131   003204 710000 3                  TRA     s:14385
         3 003132   003136 710000 3                  TRA     s:14369
         3 003133   003147 710000 3                  TRA     s:14373
         3 003134   003161 710000 3                  TRA     s:14377
         3 003135   003173 710000 3                  TRA     s:14381

     1862    14368   10                                       CASE(%$STATIC);

     1863    14369   10                                           GOT_OPTIONS.DMAP.STATIC# = BIT_VAL;

  14369  3 003136   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003137   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003140   400000 376003                    ANQ     -131072,DU
         3 003141   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1864    14370   10                                           IF NOT BIT_VAL

  14370  3 003142   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003143   003204 604000 3                  TMI     s:14385

     1865    14371   10                                           THEN NDM.BITS(0) = '1'B;

  14371  3 003144   400000 236003                    LDQ     -131072,DU
         3 003145   200244 256100                    ORSQ    NDM,,AUTO
         3 003146   003204 710000 3                  TRA     s:14385

     1866    14372   10                                       CASE(%$AUTO);

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:245  
     1867    14373   10                                           GOT_OPTIONS.DMAP.AUTO# = BIT_VAL;

  14373  3 003147   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003150   000001 772000                    QRL     1
         3 003151   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003152   200000 376003                    ANQ     65536,DU
         3 003153   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1868    14374   10                                           IF NOT BIT_VAL

  14374  3 003154   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003155   003204 604000 3                  TMI     s:14385

     1869    14375   10                                           THEN NDM.BITS(1) = '1'B;

  14375  3 003156   200000 236003                    LDQ     65536,DU
         3 003157   200244 256100                    ORSQ    NDM,,AUTO
         3 003160   003204 710000 3                  TRA     s:14385

     1870    14376   10                                       CASE(%$SYMREF);

     1871    14377   10                                           GOT_OPTIONS.DMAP.SYMREF# = BIT_VAL;

  14377  3 003161   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003162   000002 772000                    QRL     2
         3 003163   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003164   100000 376003                    ANQ     32768,DU
         3 003165   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1872    14378   10                                           IF NOT BIT_VAL

  14378  3 003166   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003167   003204 604000 3                  TMI     s:14385

     1873    14379   10                                           THEN NDM.BITS(2) = '1'B;

  14379  3 003170   100000 236003                    LDQ     32768,DU
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:246  
         3 003171   200244 256100                    ORSQ    NDM,,AUTO
         3 003172   003204 710000 3                  TRA     s:14385

     1874    14380   10                                       CASE(%$BASED);

     1875    14381   10                                           GOT_OPTIONS.DMAP.BASED# = BIT_VAL;

  14381  3 003173   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003174   000003 772000                    QRL     3
         3 003175   200351 676100                    ERQ     GOT_OPTIONS+1,,AUTO
         3 003176   040000 376003                    ANQ     16384,DU
         3 003177   200351 656100                    ERSQ    GOT_OPTIONS+1,,AUTO

     1876    14382   10                                           IF NOT BIT_VAL

  14382  3 003200   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003201   003204 604000 3                  TMI     s:14385

     1877    14383   10                                           THEN NDM.BITS(3) = '1'B;

  14383  3 003202   040000 236003                    LDQ     16384,DU
         3 003203   200244 256100                    ORSQ    NDM,,AUTO

     1878    14384   10                                       END;

     1879    14385    9                                   END;

  14385  3 003204   200224 054100                    AOS     J,,AUTO
         3 003205   200104 470500                    LDP0    BLK$,,AUTO
         3 003206   000001 236100                    LDQ     1,,PR0
         3 003207   000022 772000                    QRL     18
         3 003210   200224 116100                    CMPQ    J,,AUTO
         3 003211   003121 605400 3                  TPNZ    s:14367

     1880    14386    8                               END;

     1881    14387    7                           END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:247  

  14387  3 003212   003340 710000 3                  TRA     s:14422

     1882    14388    7                           ELSE DO;

     1883    14389    7                               IF OPT$OUT.NSUBLKS <= 0

  14389  3 003213   100001 224100                    LDX4    1,,PR1
         3 003214   003245 601000 3                  TNZ     s:14399

     1884    14390    8                               THEN DO;

     1885    14391    8                                   GOT_OPTIONS.MDMAP.STATIC# = BIT_VAL;

  14391  3 003215   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003216   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003217   400000 376003                    ANQ     -131072,DU
         3 003220   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1886    14392    8                                   GOT_OPTIONS.MDMAP.AUTO# = BIT_VAL;

  14392  3 003221   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003222   000001 772000                    QRL     1
         3 003223   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003224   200000 376003                    ANQ     65536,DU
         3 003225   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1887    14393    8                                   GOT_OPTIONS.MDMAP.SYMREF# = BIT_VAL;

  14393  3 003226   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003227   000002 772000                    QRL     2
         3 003230   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003231   100000 376003                    ANQ     32768,DU
         3 003232   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1888    14394    8                                   GOT_OPTIONS.MDMAP.BASED# = BIT_VAL;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:248  
  14394  3 003233   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003234   000003 772000                    QRL     3
         3 003235   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003236   040000 376003                    ANQ     16384,DU
         3 003237   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1889    14395    8                                   IF NOT BIT_VAL

  14395  3 003240   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003241   003340 604000 3                  TMI     s:14422

     1890    14396    8                                   THEN NMDM.BITS = '1111'B;

  14396  3 003242   740000 236003                    LDQ     -16384,DU
         3 003243   200245 256100                    ORSQ    NMDM,,AUTO

     1891    14397    8                               END;

  14397  3 003244   003340 710000 3                  TRA     s:14422

     1892    14398    8                               ELSE DO;

     1893    14399    9                                   DO J = 0 TO OPT$OUT.NSUBLKS - 1;

  14399  3 003245   200224 450100                    STZ     J,,AUTO
         3 003246   003333 710000 3                  TRA     s:14418+1

     1894    14400   10                                       DO CASE(OPT$OUT.SUBLK$(J)->OPT$OUT.CODE);

  14400  3 003247   200104 470500                    LDP0    BLK$,,AUTO
         3 003250   200224 720100                    LXL0    J,,AUTO
         3 003251   000003 471510                    LDP1    3,X0,PR0
         3 003252   100000 236100                    LDQ     0,,PR1
         3 003253   777777 376007                    ANQ     -1,DL
         3 003254   000007 136007                    SBLQ    7,DL
         3 003255   000004 116007                    CMPQ    4,DL
         3 003256   003260 602006 3                  TNC     s:14400+9,QL
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:249  
         3 003257   003332 710000 3                  TRA     s:14418
         3 003260   003264 710000 3                  TRA     s:14402
         3 003261   003275 710000 3                  TRA     s:14406
         3 003262   003307 710000 3                  TRA     s:14410
         3 003263   003321 710000 3                  TRA     s:14414

     1895    14401   10                                       CASE(%$STATIC);

     1896    14402   10                                           GOT_OPTIONS.MDMAP.STATIC# = BIT_VAL;

  14402  3 003264   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003265   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003266   400000 376003                    ANQ     -131072,DU
         3 003267   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1897    14403   10                                           IF NOT BIT_VAL

  14403  3 003270   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003271   003332 604000 3                  TMI     s:14418

     1898    14404   10                                           THEN NMDM.BITS(0) = '1'B;

  14404  3 003272   400000 236003                    LDQ     -131072,DU
         3 003273   200245 256100                    ORSQ    NMDM,,AUTO
         3 003274   003332 710000 3                  TRA     s:14418

     1899    14405   10                                       CASE(%$AUTO);

     1900    14406   10                                           GOT_OPTIONS.MDMAP.AUTO# = BIT_VAL;

  14406  3 003275   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003276   000001 772000                    QRL     1
         3 003277   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003300   200000 376003                    ANQ     65536,DU
         3 003301   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1901    14407   10                                           IF NOT BIT_VAL
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:250  

  14407  3 003302   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003303   003332 604000 3                  TMI     s:14418

     1902    14408   10                                           THEN NMDM.BITS(1)='1'B;

  14408  3 003304   200000 236003                    LDQ     65536,DU
         3 003305   200245 256100                    ORSQ    NMDM,,AUTO
         3 003306   003332 710000 3                  TRA     s:14418

     1903    14409   10                                       CASE(%$SYMREF);

     1904    14410   10                                           GOT_OPTIONS.MDMAP.SYMREF# = BIT_VAL;

  14410  3 003307   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003310   000002 772000                    QRL     2
         3 003311   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003312   100000 376003                    ANQ     32768,DU
         3 003313   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1905    14411   10                                           IF NOT BIT_VAL

  14411  3 003314   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003315   003332 604000 3                  TMI     s:14418

     1906    14412   10                                           THEN NMDM.BITS(2) = '1'B;

  14412  3 003316   100000 236003                    LDQ     32768,DU
         3 003317   200245 256100                    ORSQ    NMDM,,AUTO
         3 003320   003332 710000 3                  TRA     s:14418

     1907    14413   10                                       CASE(%$BASED);

     1908    14414   10                                           GOT_OPTIONS.MDMAP.BASED# = BIT_VAL;

  14414  3 003321   200242 236100                    LDQ     BIT_VAL,,AUTO
         3 003322   000003 772000                    QRL     3
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:251  
         3 003323   200352 676100                    ERQ     GOT_OPTIONS+2,,AUTO
         3 003324   040000 376003                    ANQ     16384,DU
         3 003325   200352 656100                    ERSQ    GOT_OPTIONS+2,,AUTO

     1909    14415   10                                           IF NOT BIT_VAL

  14415  3 003326   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003327   003332 604000 3                  TMI     s:14418

     1910    14416   10                                           THEN NMDM.BITS(3) = '1'B;

  14416  3 003330   040000 236003                    LDQ     16384,DU
         3 003331   200245 256100                    ORSQ    NMDM,,AUTO

     1911    14417   10                                       END;

     1912    14418    9                                   END;

  14418  3 003332   200224 054100                    AOS     J,,AUTO
         3 003333   200104 470500                    LDP0    BLK$,,AUTO
         3 003334   000001 236100                    LDQ     1,,PR0
         3 003335   000022 772000                    QRL     18
         3 003336   200224 116100                    CMPQ    J,,AUTO
         3 003337   003247 605400 3                  TPNZ    s:14400

     1913    14419    8                               END;

     1914    14420    7                           END;

     1915    14421
     1916    14422    6                           DM_CHK(0) = GOT_OPTIONS.DMAP & GOT_OPTIONS.MDMAP;

  14422  3 003340   200351 236100                    LDQ     GOT_OPTIONS+1,,AUTO
         3 003341   200352 376100                    ANQ     GOT_OPTIONS+2,,AUTO
         3 003342   200243 676100                    ERQ     DM_CHK,,AUTO
         3 003343   740000 376003                    ANQ     -16384,DU
         3 003344   200243 656100                    ERSQ    DM_CHK,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:252  

     1917    14423    6                           DM_CHK(1) = GOT_OPTIONS.DMAP & NDM;

  14423  3 003345   200244 236100                    LDQ     NDM,,AUTO
         3 003346   740000 376003                    ANQ     -16384,DU
         3 003347   200351 376100                    ANQ     GOT_OPTIONS+1,,AUTO
         3 003350   000004 772000                    QRL     4
         3 003351   200243 676100                    ERQ     DM_CHK,,AUTO
         3 003352   036000 376003                    ANQ     15360,DU
         3 003353   200243 656100                    ERSQ    DM_CHK,,AUTO

     1918    14424    6                           DM_CHK(2) = GOT_OPTIONS.MDMAP & NMDM;

  14424  3 003354   200245 236100                    LDQ     NMDM,,AUTO
         3 003355   740000 376003                    ANQ     -16384,DU
         3 003356   200352 376100                    ANQ     GOT_OPTIONS+2,,AUTO
         3 003357   000010 772000                    QRL     8
         3 003360   200243 676100                    ERQ     DM_CHK,,AUTO
         3 003361   001700 376003                    ANQ     960,DU
         3 003362   200243 656100                    ERSQ    DM_CHK,,AUTO

     1919    14425    6                           IF DM_CHK

  14425  3 003363   200243 236100                    LDQ     DM_CHK,,AUTO
         3 003364   777700 316003                    CANQ    -64,DU
         3 003365   003375 600000 3                  TZE     s:14432

     1920    14426    7                           THEN DO;

     1921    14427    7                              CALL XUX$ERROR(%E$XUX#CONFLICTING_DMAP_OPTS,'1'B) ALTRET
             14427                                        (GO_AWAY);

  14427  3 003366   000112 630400 4                  EPPR0   74
         3 003367   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003370   000000 701000 xent               TSX1    XUX$ERROR
         3 003371   004230 702000 3                  TSX2    GO_AWAY

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:253  
     1922    14428    7                               GOT_OPTIONS.DMAP = '0'B;

  14428  3 003372   200351 450100                    STZ     GOT_OPTIONS+1,,AUTO

     1923    14429    7                               GOT_OPTIONS.MDMAP = '0'B;

  14429  3 003373   200352 450100                    STZ     GOT_OPTIONS+2,,AUTO

     1924    14430    7                           END;

  14430  3 003374   003516 710000 3                  TRA     s:14501

     1925    14431    7                           ELSE DO;

     1926    14432    8                               DO CASE(OPT$OUT.CODE);

  14432  3 003375   200104 470500                    LDP0    BLK$,,AUTO
         3 003376   000000 720100                    LXL0    0,,PR0
         3 003377   000007 100003                    CMPX0   7,DU
         3 003400   003402 602010 3                  TNC     s:14432+5,X0
         3 003401   003516 710000 3                  TRA     s:14501
         3 003402   003424 710000 3                  TRA     s:14444
         3 003403   003424 710000 3                  TRA     s:14444
         3 003404   003424 710000 3                  TRA     s:14444
         3 003405   003411 710000 3                  TRA     s:14434
         3 003406   003417 710000 3                  TRA     s:14438
         3 003407   003414 710000 3                  TRA     s:14436
         3 003410   003422 710000 3                  TRA     s:14440

     1927    14433    8                               CASE(%$DMAP);

     1928    14434    8                                   GOT.DMAP = %OFF_DMAP;

  14434  3 003411   000001 221003                    LDX1    1,DU
         3 003412   200424 741100                    STX1    GOT+12,,AUTO
         3 003413   003516 710000 3                  TRA     s:14501

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:254  
     1929    14435    8                               CASE(%$NDMAP);

     1930    14436    8                                   GOT.DMAP = %OFF_NDMAP;

  14436  3 003414   000006 221003                    LDX1    6,DU
         3 003415   200424 741100                    STX1    GOT+12,,AUTO
         3 003416   003516 710000 3                  TRA     s:14501

     1931    14437    8                               CASE(%$MDMAP);

     1932    14438    8                                   GOT.MDMAP = %OFF_MDMAP;

  14438  3 003417   000014 221003                    LDX1    12,DU
         3 003420   200425 741100                    STX1    GOT+13,,AUTO
         3 003421   003516 710000 3                  TRA     s:14501

     1933    14439    8                               CASE(%$NMDMAP);

     1934    14440    8                                   GOT.MDMAP = %OFF_NMDMAP;

  14440  3 003422   000022 221003                    LDX1    18,DU
         3 003423   200425 741100                    STX1    GOT+13,,AUTO

     1935    14441    8                               END;

     1936    14442    7                           END;

     1937    14443    6                       END;

     1938    14444    5                   END;

  14444  3 003424   003516 710000 3                  TRA     s:14501

     1939    14445    5                   ELSE DO;

     1940    14446    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_OPTION,'1'B,TEMP_LEN,TEMP_OPT)
             14446                                ALTRET(GO_AWAY);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:255  

  14446  3 003425   200230 633500                    EPPR3   TEMP_OPT,,AUTO
         3 003426   200511 453500                    STP3    FREE_DS+9,,AUTO
         3 003427   200235 634500                    EPPR4   TEMP_LEN,,AUTO
         3 003430   200510 454500                    STP4    FREE_DS+8,,AUTO
         3 003431   000060 237000 4                  LDAQ    48
         3 003432   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 003433   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 003434   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 003435   000000 701000 xent               TSX1    XUX$ERROR
         3 003436   004230 702000 3                  TSX2    GO_AWAY

     1941    14447    5                   END;

  14447  3 003437   003516 710000 3                  TRA     s:14501

     1942    14448        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:256  
     1943    14449        /*
     1944    14450             NSTD
     1945    14451        */
     1946    14452
     1947    14453        /*
     1948    14454             Non-standard options are handled a little differently than
     1949    14455             standard options. They are actually handled little here, the
     1950    14456             only validation being done is to verify that the user is allowing
     1951    14457             them. This takes care of the case where the guy forgot to set
     1952    14458             the NSTD bit in XUX$LEGAL_OPTIONS but went ahead and linked in
     1953    14459             his non_standard nodes anyway. We'll diagnose this as an internal
     1954    14460             error since it really means that the programmer screwed up.
     1955    14461        */
     1956    14462
     1957    14463    4               CASE(%$NSTD);

     1958    14464    4                   IF LEGAL.NSTD#

  14464  3 003440   200205 236100                    LDQ     LEGAL,,AUTO
         3 003441   000020 316003                    CANQ    16,DU
         3 003442   003500 600000 3                  TZE     s:14482

     1959    14465    5                   THEN DO;

     1960    14466    5                       GOT_OPTIONS.NSTD = '1'B;

  14466  3 003443   400000 236003                    LDQ     -131072,DU
         3 003444   200367 756100                    STQ     GOT_OPTIONS+15,,AUTO

     1961    14467    5                       BIT_VAL = '0'B;

  14467  3 003445   200242 450100                    STZ     BIT_VAL,,AUTO

     1962    14468    5                       CALL XUX$INFO.XUX.USER_ROUTINE$$(OPT$OUT.SUBLK$(0),BIT_VAL)

  14468  3 003446   200242 633500                    EPPR3   BIT_VAL,,AUTO
         3 003447   200507 453500                    STP3    FREE_DS+7,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:257  
         3 003450   200104 236100                    LDQ     BLK$,,AUTO
         3 003451   000003 036003                    ADLQ    3,DU
         3 003452   200506 756100                    STQ     FREE_DS+6,,AUTO
         3 003453   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 003454   200222 474500                    LDP4    XUX$MEM$,,AUTO
         3 003455   400011 221100                    LDX1    9,,PR4
         3 003456   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003457   000000 701011                    TSX1    0,X1
         3 003460   003462 702000 3                  TSX2    s:14470
         3 003461   003477 710000 3                  TRA     s:14480

     1963    14469    6                       WHENALTRETURN DO;

     1964    14470    6                           IF BIT_VAL

  14470  3 003462   200242 234100                    SZN     BIT_VAL,,AUTO
         3 003463   003471 605000 3                  TPL     s:14476

     1965    14471    7                           THEN DO;

     1966    14472    7                               CALL XUX$ERROR(%E$XUX#USER_ROUTINE_BUG,'0'B) ALTRET(
             14472                                        GO_AWAY);

  14472  3 003464   000115 630400 4                  EPPR0   77
         3 003465   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003466   000000 701000 xent               TSX1    XUX$ERROR
         3 003467   004230 702000 3                  TSX2    GO_AWAY

     1967    14473    7                               GOTO I_BLEW_IT_INTERNALLY;

  14473  3 003470   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1968    14474    7                           END;
     1969    14475    7                           ELSE DO;

     1970    14476    7                               XUX$INFO.XUX.ERROR_CODE = XUX_ERR;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:258  
  14476  3 003471   000066 236000 1                  LDQ     XUX_ERR
         3 003472   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 003473   000013 756100                    STQ     11,,PR0

     1971    14477    7                               XUX$INFO.XUX.ERROR_CODE.ERR# = %
             14477                                        E$XUX#USER_ROUTINE_ALTRETURNED;

  14477  3 003474   000000 376000 4                  ANQ     0
         3 003475   013260 276007                    ORQ     5808,DL
         3 003476   000013 756100                    STQ     11,,PR0

     1972    14478    7                           END;

     1973    14479    6                       END;  /* WHENALTRETURN */

     1974    14480    5                   END;

  14480  3 003477   003516 710000 3                  TRA     s:14501

     1975    14481    5                   ELSE DO;

     1976    14482    5                       CALL XUX$ERROR(%E$XUX#ILLEGAL_NSTD_OPT,'0'B) ALTRET(GO_AWAY);

  14482  3 003500   000120 630400 4                  EPPR0   80
         3 003501   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003502   000000 701000 xent               TSX1    XUX$ERROR
         3 003503   004230 702000 3                  TSX2    GO_AWAY

     1977    14483    5                       GOTO I_BLEW_IT_INTERNALLY;

  14483  3 003504   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1978    14484    5                   END;
     1979    14485        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:259  
     1980    14486        /*
     1981    14487                CASE(ELSE)
     1982    14488        */
     1983    14489
     1984    14490        /*
     1985    14491             We should never really get here, but if we do, it means that
     1986    14492             X$PARSE returned a strange node code. We'll print a message then
     1987    14493             ALTRETURN.
     1988    14494        */
     1989    14495
     1990    14496    4               CASE(ELSE);

     1991    14497    4                   CALL XUX$ERROR(%E$XUX#BAD_PARSE_NODE,'0'B,OPT$OUT.CODE) ALTRET(
             14497                            GO_AWAY);

  14497  3 003505   400000 036007                    ADLQ    -131072,DL
         3 003506   200510 756100                    STQ     FREE_DS+8,,AUTO
         3 003507   000124 237000 4                  LDAQ    84
         3 003510   200506 757100                    STAQ    FREE_DS+6,,AUTO
         3 003511   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 003512   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 003513   000000 701000 xent               TSX1    XUX$ERROR
         3 003514   004230 702000 3                  TSX2    GO_AWAY

     1992    14498    4                   GOTO I_BLEW_IT_INTERNALLY;

  14498  3 003515   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     1993    14499
     1994    14500    4               END; /* DO CASE */

     1995    14501    3           END; /* DO LOOP */

  14501  3 003516   200227 054100                    AOS     LOOP,,AUTO
         3 003517   200227 236100                    LDQ     LOOP,,AUTO
         3 003520   200105 116100                    CMPQ    NSUBLKS,,AUTO
         3 003521   000376 604000 3                  TMI     s:13748
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:260  

     1996    14502    2       END;   /* of parsing options */

     1997    14503        %EJECT;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:261  
     1998    14504        /*
     1999    14505             All the parsing has been done, so now we need to fix up
     2000    14506             for any default conditions and put the options back into the
     2001    14507             the user's XUX$STD_OPTIONS structure.
     2002    14508        */
     2003    14509    1       IF LEGAL.SRCH#

  14509  3 003522   200205 430100                    FSZN    LEGAL,,AUTO
         3 003523   003643 605000 3                  TPL     s:14540

     2004    14510    2       THEN DO;

     2005    14511    2           SEARCH_LIST.RCVD =SEARCH_LIST.NUM;

  14511  3 003524   200240 470500                    LDP0    SEARCH_LIST$,,AUTO
         3 003525   000000 235100                    LDA     0,,PR0
         3 003526   000001 755100                    STA     1,,PR0

     2006    14512    2           FID = FPT_FID;

  14512  3 003527   000100 100400                    MLR     fill='000'O
         3 003530   000036 000140 1                  ADSC9   FPT_FID                  cn=0,n=96
         3 003531   200042 000140                    ADSC9   FID,,AUTO                cn=0,n=96

     2007    14513    2           FID.V_ = VECTOR(FID.V);

  14513  3 003532   000065 235000 4                  LDA     53
         3 003533   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003534   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003535   000066 036003                    ADLQ    54,DU
         3 003536   200042 757100                    STAQ    FID,,AUTO

     2008    14514    2           FID.ACCT_ = VECTOR(SRCH_FID.ACCT);

  14514  3 003537   000070 235000 4                  LDA     56
         3 003540   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003541   200506 236100                    LDQ     FREE_DS+6,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:262  
         3 003542   000437 036003                    ADLQ    287,DU
         3 003543   200050 757100                    STAQ    FID+6,,AUTO

     2009    14515    2           FID.NAME_ = VECTOR(SRCH_FID.NAME);

  14515  3 003544   000071 235000 4                  LDA     57
         3 003545   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003546   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003547   000427 036003                    ADLQ    279,DU
         3 003550   200046 757100                    STAQ    FID+4,,AUTO

     2010    14516    2           FID.PASS_ = VECTOR(SRCH_FID.PASS);

  14516  3 003551   000070 235000 4                  LDA     56
         3 003552   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003553   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003554   000441 036003                    ADLQ    289,DU
         3 003555   200052 757100                    STAQ    FID+8,,AUTO

     2011    14517    2           FID.SN_ = VECTOR(SRCH_FID.SN);

  14517  3 003556   000072 235000 4                  LDA     58
         3 003557   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003560   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003561   000443 036003                    ADLQ    291,DU
         3 003562   200054 757100                    STAQ    FID+10,,AUTO

     2012    14518    2           FID.WSN_ = VECTOR(SRCH_FID.WSN);

  14518  3 003563   000070 235000 4                  LDA     56
         3 003564   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003565   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003566   000073 036000 4                  ADLQ    59
         3 003567   200056 757100                    STAQ    FID+12,,AUTO

     2013    14519    2           FID.ASN_ = VECTOR(SRCH_FID.ASN);

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:263  
  14519  3 003570   777640 235007                    LDA     -96,DL
         3 003571   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003572   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003573   000450 036003                    ADLQ    296,DU
         3 003574   200060 757100                    STAQ    FID+14,,AUTO

     2014    14520    2           FID.RES_ = VECTOR(SRCH_FID.RES);

  14520  3 003575   777640 235007                    LDA     -96,DL
         3 003576   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003577   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003600   000451 036003                    ADLQ    297,DU
         3 003601   200062 757100                    STAQ    FID+16,,AUTO

     2015    14521    2           FID.RESULTS_ = VECTOR(FID_RESULTS);

  14521  3 003602   000074 235000 4                  LDA     60
         3 003603   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 003604   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 003605   000072 036003                    ADLQ    58,DU
         3 003606   200064 757100                    STAQ    FID+18,,AUTO

     2016    14522    2           FID.TEXTFID_ = VECTOR(CURRENT_ACCOUNT_FID);

  14522  3 003607   000126 237000 4                  LDAQ    86
         3 003610   200044 757100                    STAQ    FID+2,,AUTO

     2017    14523    2           CALL M$FID(FID)

  14523  3 003611   200042 630500                    EPPR0   FID,,AUTO
         3 003612   420001 713400                    CLIMB   alt,+8193
         3 003613   404400 401760                    pmme    nvectors=10
         3 003614   003616 702000 3                  TSX2    s:14525
         3 003615   003623 710000 3                  TRA     s:14528

     2018    14524    3           WHENALTRETURN DO;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:264  
     2019    14525    3               CALL XUX$ERROR(%E$XUX#BAD_INTERNAL_FID,'0'B) ALTRET(GO_AWAY);

  14525  3 003616   000130 630400 4                  EPPR0   88
         3 003617   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003620   000000 701000 xent               TSX1    XUX$ERROR
         3 003621   004230 702000 3                  TSX2    GO_AWAY

     2020    14526    3               GOTO I_BLEW_IT_INTERNALLY;

  14526  3 003622   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     2021    14527    3           END;
     2022    14528    2           CALL INSERT_FID;

  14528  3 003623   004340 701000 3                  TSX1    INSERT_FID
         3 003624   000000 011000                    NOP     0

     2023    14529    2           FID.TEXTFID_ = VECTOR(DEFAULT_SRCH_ACCOUNT_FID);

  14529  3 003625   000132 237000 4                  LDAQ    90
         3 003626   200044 757100                    STAQ    FID+2,,AUTO

     2024    14530    2           CALL M$FID(FID)

  14530  3 003627   200042 630500                    EPPR0   FID,,AUTO
         3 003630   420001 713400                    CLIMB   alt,+8193
         3 003631   404400 401760                    pmme    nvectors=10
         3 003632   003634 702000 3                  TSX2    s:14532
         3 003633   003641 710000 3                  TRA     s:14535

     2025    14531    3           WHENALTRETURN DO;

     2026    14532    3               CALL XUX$ERROR(%E$XUX#BAD_INTERNAL_FID,'0'B) ALTRET(GO_AWAY);

  14532  3 003634   000130 630400 4                  EPPR0   88
         3 003635   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003636   000000 701000 xent               TSX1    XUX$ERROR
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:265  
         3 003637   004230 702000 3                  TSX2    GO_AWAY

     2027    14533    3               GOTO I_BLEW_IT_INTERNALLY;

  14533  3 003640   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     2028    14534    3           END;
     2029    14535    2           CALL INSERT_FID;

  14535  3 003641   004340 701000 3                  TSX1    INSERT_FID
         3 003642   000000 011000                    NOP     0

     2030    14536    2       END;

     2031    14537
     2032    14538        /*  Now put the options into the user supplied structure */
     2033    14539
     2034    14540    1       IF LEGAL.SCHEMA# AND GOT_OPTIONS.SCHEMA = %XUX$NONE

  14540  3 003643   200205 236100                    LDQ     LEGAL,,AUTO
         3 003644   004000 316003                    CANQ    2048,DU
         3 003645   003675 600000 3                  TZE     s:14555
         3 003646   200357 235100                    LDA     GOT_OPTIONS+7,,AUTO
         3 003647   003675 601000 3                  TNZ     s:14555

     2035    14541    2       THEN DO;  /* Some checks with PMAP & DMAP  */

     2036    14542    2           IF LEGAL.DMAP# AND GOT_OPTIONS.DMAP

  14542  3 003650   200000 316003                    CANQ    65536,DU
         3 003651   003662 600000 3                  TZE     s:14548
         3 003652   200351 235100                    LDA     GOT_OPTIONS+1,,AUTO
         3 003653   003662 600000 3                  TZE     s:14548

     2037    14543    3           THEN DO;

     2038    14544    3               GOT_OPTIONS.SCHEMA = %XUX$MINI;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:266  

  14544  3 003654   000002 235007                    LDA     2,DL
         3 003655   200357 755100                    STA     GOT_OPTIONS+7,,AUTO

     2039    14545    3               CALL XUX$ERROR(%E$XUX#DMAP_SCHEMA_CONFLICT,'1'B) ALTRET(GO_AWAY);

  14545  3 003656   000135 630400 4                  EPPR0   93
         3 003657   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003660   000000 701000 xent               TSX1    XUX$ERROR
         3 003661   004230 702000 3                  TSX2    GO_AWAY

     2040    14546    3           END;

     2041    14547
     2042    14548    2           IF LEGAL.PMAP# AND GOT_OPTIONS.PMAP

  14548  3 003662   200205 236100                    LDQ     LEGAL,,AUTO
         3 003663   010000 316003                    CANQ    4096,DU
         3 003664   003675 600000 3                  TZE     s:14555
         3 003665   200356 235100                    LDA     GOT_OPTIONS+6,,AUTO
         3 003666   003675 600000 3                  TZE     s:14555

     2043    14549    3           THEN DO;

     2044    14550    3               GOT_OPTIONS.SCHEMA = %XUX$MINI;

  14550  3 003667   000002 235007                    LDA     2,DL
         3 003670   200357 755100                    STA     GOT_OPTIONS+7,,AUTO

     2045    14551    3               CALL XUX$ERROR(%E$XUX#PMAP_SCHEMA_CONFLICT,'1'B) ALTRET(GO_AWAY);

  14551  3 003671   000140 630400 4                  EPPR0   96
         3 003672   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003673   000000 701000 xent               TSX1    XUX$ERROR
         3 003674   004230 702000 3                  TSX2    GO_AWAY

     2046    14552    3           END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:267  

     2047    14553
     2048    14554    2       END;

     2049    14555    1       XUX$INFO.XUX.STD_OPTIONS$->XUX$STD_OPTIONS = GOT_OPTIONS;

  14555  3 003675   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 003676   000006 471500                    LDP1    6,,PR0
         3 003677   000100 100500                    MLR     fill='000'O
         3 003700   200350 000154                    ADSC9   GOT_OPTIONS,,AUTO        cn=0,n=108
         3 003701   100000 000154                    ADSC9   0,,PR1                   cn=0,n=108

     2050    14556    1       IF LEGAL.BC#

  14556  3 003702   200205 234100                    SZN     LEGAL,,AUTO
         3 003703   003710 605000 3                  TPL     s:14559

     2051    14557    1       THEN XUX$INFO.XUX.BC_UNIT$->XUX$BC_UNIT = TEMP_BC;

  14557  3 003704   000007 471500                    LDP1    7,,PR0
         3 003705   000100 100500                    MLR     fill='000'O
         3 003706   200403 000022                    ADSC9   TEMP_BC,,AUTO            cn=0,n=18
         3 003707   100000 000022                    ADSC9   0,,PR1                   cn=0,n=18

     2052    14558
     2053    14559    1       IF LEGAL.SRCH#

  14559  3 003710   200205 430100                    FSZN    LEGAL,,AUTO
         3 003711   003725 605000 3                  TPL     s:14565

     2054    14560    2       THEN DO;

     2055    14561    2           SRCH_LIST_SIZE = (SEARCH_LIST.NUM * SIZEW(XUX$FID_ONLY) + 2) * 4;

  14561  3 003712   200240 471500                    LDP1    SEARCH_LIST$,,AUTO
         3 003713   100000 236100                    LDQ     0,,PR1
         3 003714   000114 402007                    MPY     76,DL
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:268  
         3 003715   000010 036007                    ADLQ    8,DL
         3 003716   200241 756100                    STQ     SRCH_LIST_SIZE,,AUTO

     2056    14562    2           XUX$INFO.XUX.SRCH_LIST$ -> SRCH_LIST_BUFFER = SEARCH_LIST$ ->
             14562                    SRCH_LIST_BUFFER;

  14562  3 003717   000010 473500                    LDP3    8,,PR0
         3 003720   000000 620006                    EAX0    0,QL
         3 003721   200241 721100                    LXL1    SRCH_LIST_SIZE,,AUTO
         3 003722   040140 100540                    MLR     fill='040'O
         3 003723   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         3 003724   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     2057    14563    2       END; /* IF LEGAL.SRCH# */

     2058    14564
     2059    14565    1       P_PARAM.ERROR_CODE = XUX$INFO.XUX.ERROR_CODE;

  14565  3 003725   000013 236100                    LDQ     11,,PR0
         3 003726   200003 471500                    LDP1    @P_PARAM,,AUTO
         3 003727   100006 756100                    STQ     6,,PR1

     2060    14566    1       P_PARAM.ERROR# = XUX$INFO.XUX.ERROR#;

  14566  3 003730   000014 236100                    LDQ     12,,PR0
         3 003731   400000 376003                    ANQ     -131072,DU
         3 003732   100007 756100                    STQ     7,,PR1

     2061    14567
     2062    14568    1       CALL XUX$CLEANUP;

  14568  3 003733   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003734   000000 701000 xent               TSX1    XUX$CLEANUP
         3 003735   000000 011000                    NOP     0

     2063    14569
     2064    14570    1       IF XUX$MEM ~= VECTOR(NIL)
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:269  

  14570  3 003736   000020 237000 2                  LDAQ    XUX$MEM
         3 003737   000142 117000 4                  CMPAQ   98
         3 003740   003756 600000 3                  TZE     s:14578

     2065    14571    2       THEN DO;

     2066    14572    2           CALL FREE_MEM

  14572  3 003741   004310 701000 3                  TSX1    FREE_MEM
         3 003742   003744 702000 3                  TSX2    s:14574
         3 003743   003756 710000 3                  TRA     s:14578

     2067    14573    3           WHENALTRETURN DO;

     2068    14574    3               CALL XUX$ERROR1(B$TCB$->B$TCB.ALT$->B$ALT.ERR,'0'B);

  14574  3 003744   000000 470400 xsym               LDP0    B$TCB$
         3 003745   000000 471500                    LDP1    0,,PR0
         3 003746   000003 236000 4                  LDQ     3
         3 003747   200507 756100                    STQ     FREE_DS+7,,AUTO
         3 003750   100102 633500                    EPPR3   66,,PR1
         3 003751   200506 453500                    STP3    FREE_DS+6,,AUTO
         3 003752   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 003753   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 003754   000000 701000 xent               TSX1    XUX$ERROR1
         3 003755   000000 011000                    NOP     0

     2069    14575    3           END;

     2070    14576    2       END;

     2071    14577
     2072    14578    1       IF P_PARAM.ERROR_CODE ~= '0'B

  14578  3 003756   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 003757   000006 235100                    LDA     6,,PR0
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:270  
         3 003760   003762 600000 3                  TZE     s:14581

     2073    14579    1       THEN ALTRETURN;

  14579  3 003761   000000 702200 xent               TSX2  ! X66_AALT

     2074    14580    1       ELSE
     2075    14581    1           RETURN;

  14581  3 003762   000000 702200 xent               TSX2  ! X66_ARET

  14578  3 003763                       PARSE_ALTRET null
     2076    14582
     2077    14583    1   PARSE_ALTRET: ;
     2078    14584    1       IF XUX$PCB.ERROR.CODE = %E$SYNERR

  14584  3 003763   000006 236000 2                  LDQ     XUX$PCB+6
         3 003764   377770 376007                    ANQ     131064,DL
         3 003765   000010 116007                    CMPQ    8,DL
         3 003766   004223 601000 3                  TNZ     s:14671

     2079    14585    2       THEN DO;

     2080    14586    2           CALL XUX$CLEANUP;    /* To reset the files */

  14586  3 003767   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 003770   000000 701000 xent               TSX1    XUX$CLEANUP
         3 003771   000000 011000                    NOP     0

     2081    14587
     2082    14588        /*   Reason for 1 to RECNO-1 is because REC_INDEX is always
     2083    14589             going to be 0, so first trip through will never exit.
     2084    14590        */
     2085    14591    3   FIND_REC: DO I= 1 TO XUX$INFO.RECNO - 1;

  14591  3 003772   000001 235007       FIND_REC     LDA     1,DL
         3 003773   200223 755100                    STA     I,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:271  
         3 003774   004005 710000 3                  TRA     s:14596+1

     2086    14592    3               IF XUX$INFO.REC_INDEX$->REC_INDEX(I) > XUX$PCB.HI_CHAR

  14592  3 003775   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 003776   000001 471500                    LDP1    1,,PR0
         3 003777   200223 720100                    LXL0    I,,AUTO
         3 004000   000012 236000 2                  LDQ     XUX$PCB+10
         3 004001   100000 116110                    CMPQ    0,X0,PR1
         3 004002   004004 603000 3                  TRC     s:14596

     2087    14593    4               THEN DO;

     2088    14594    4                   EXIT FIND_REC;

  14594  3 004003   004012 710000 3                  TRA     s:14598

     2089    14595    4               END;
     2090    14596    3           END FIND_REC;

  14596  3 004004   200223 054100                    AOS     I,,AUTO
         3 004005   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 004006   200223 236100                    LDQ     I,,AUTO
         3 004007   003775 604000 3                  TMI     s:14592
         3 004010   000003 116100                    CMPQ    3,,PR0
         3 004011   003775 602000 3                  TNC     s:14592

     2091    14597
     2092    14598    2           I = I - 1;

  14598  3 004012   000001 336007                    LCQ     1,DL
         3 004013   200223 056100                    ASQ     I,,AUTO

     2093    14599    2           GETLINE_PARAM.BUFFER_ = VECTOR(TEMP_BUF);

  14599  3 004014   000036 235000 4                  LDA     30
         3 004015   200506 452500                    STP2    FREE_DS+6,,AUTO
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:272  
         3 004016   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 004017   000246 036003                    ADLQ    166,DU
         3 004020   200210 757100                    STAQ    GETLINE_PARAM,,AUTO

     2094    14600    3           DO J = 0 TO I;

  14600  3 004021   200224 450100                    STZ     J,,AUTO
         3 004022   004053 710000 3                  TRA     s:14613+1

     2095    14601    3               CALL XUX$GETLINE(GETLINE_PARAM)

  14601  3 004023   200210 630500                    EPPR0   GETLINE_PARAM,,AUTO
         3 004024   200506 450500                    STP0    FREE_DS+6,,AUTO
         3 004025   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 004026   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004027   000000 701000 xent               TSX1    XUX$GETLINE
         3 004030   004032 702000 3                  TSX2    s:14603
         3 004031   004052 710000 3                  TRA     s:14613

     2096    14602    4               WHENALTRETURN DO;

     2097    14603    4                   IF GETLINE_PARAM.CMD_COMPLETE

  14603  3 004032   200214 234100                    SZN     GETLINE_PARAM+4,,AUTO
         3 004033   004041 605000 3                  TPL     s:14609

     2098    14604    5                   THEN DO;

     2099    14605    5                       CALL XUX$ERROR(%E$XUX#NO_MORE_INPUT,'0'B) ALTRET(GO_AWAY);

  14605  3 004034   000145 630400 4                  EPPR0   101
         3 004035   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004036   000000 701000 xent               TSX1    XUX$ERROR
         3 004037   004230 702000 3                  TSX2    GO_AWAY

     2100    14606    5                       GOTO I_BLEW_IT_INTERNALLY;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:273  
  14606  3 004040   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     2101    14607    5                   END;
     2102    14608    5                   ELSE DO;

     2103    14609    5                       CALL XUX$ERROR1(GETLINE_PARAM.ERROR_CODE,'0'B) ALTRET(GO_AWAY);

  14609  3 004041   000003 236000 4                  LDQ     3
         3 004042   200507 756100                    STQ     FREE_DS+7,,AUTO
         3 004043   200213 630500                    EPPR0   GETLINE_PARAM+3,,AUTO
         3 004044   200506 450500                    STP0    FREE_DS+6,,AUTO
         3 004045   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 004046   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004047   000000 701000 xent               TSX1    XUX$ERROR1
         3 004050   004230 702000 3                  TSX2    GO_AWAY

     2104    14610    5                       GOTO I_BLEW_IT_INTERNALLY;

  14610  3 004051   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

     2105    14611    5                   END;
     2106    14612    4               END;
     2107    14613    3           END;

  14613  3 004052   200224 054100                    AOS     J,,AUTO
         3 004053   200224 236100                    LDQ     J,,AUTO
         3 004054   200223 116100                    CMPQ    I,,AUTO
         3 004055   004023 604400 3                  TMOZ    s:14601

     2108    14614
     2109    14615    2           PARSE_ERRMSG = FPT_ERRMSG;

  14615  3 004056   000100 100400                    MLR     fill='000'O
         3 004057   000000 000150 1                  ADSC9   FPT_ERRMSG               cn=0,n=104
         3 004060   200004 000150                    ADSC9   PARSE_ERRMSG,,AUTO       cn=0,n=104

     2110    14616    2           PARSE_ERRMSG.V_ = VECTOR(PARSE_ERRMSG.V);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:274  

  14616  3 004061   000065 235000 4                  LDA     53
         3 004062   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 004063   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 004064   000032 036003                    ADLQ    26,DU
         3 004065   200004 757100                    STAQ    PARSE_ERRMSG,,AUTO

     2111    14617    2           CALL INSERT(TEMP_BUF,GETLINE_PARAM.CMD_LEN,,' ');

  14617  3 004066   000400 220003                    LDX0    256,DU
         3 004067   200212 120100                    SBLX0   GETLINE_PARAM+2,,AUTO
         3 004070   200212 235100                    LDA     GETLINE_PARAM+2,,AUTO
         3 004071   000022 731000                    ARS     18
         3 004072   040145 100400                    MLR     fill='040'O
         3 004073   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 004074   200246 000010                    ADSC9   TEMP_BUF,A,AUTO          cn=0,n=*X0

     2112    14618    2           PARSE_ERRMSG.BUF_ = VECTOR(TEMP_BUF);

  14618  3 004075   000036 235000 4                  LDA     30
         3 004076   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 004077   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 004100   000246 036003                    ADLQ    166,DU
         3 004101   200010 757100                    STAQ    PARSE_ERRMSG+4,,AUTO

     2113    14619    2           PARSE_ERRMSG.V.OUTDCB1# = XUX$INFO.XUX.DCB1#;

  14619  3 004102   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 004103   000015 220100                    LDX0    13,,PR0
         3 004104   200032 440100                    SXL0    PARSE_ERRMSG+22,,AUTO

     2114    14620    2           PARSE_ERRMSG.V.OUTDCB2# = XUX$INFO.XUX.DCB2#;

  14620  3 004105   000015 721100                    LXL1    13,,PR0
         3 004106   200033 741100                    STX1    PARSE_ERRMSG+23,,AUTO

     2115    14621        /*
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:275  
     2116    14622             We'll now call M$ERRMSG to print out the bad line, a syntax
     2117    14623             error message, and a pointer to the error.
     2118    14624        */
     2119    14625
     2120    14626    2           CALL M$ERRMSG(PARSE_ERRMSG);

  14626  3 004107   200004 630500                    EPPR0   PARSE_ERRMSG,,AUTO
         3 004110   020000 713400                    CLIMB   8192
         3 004111   405000 401760                    pmme    nvectors=11

     2121    14627    2           PARSE_ERRMSG.BUF_ = VECTOR(TEMP_BUF);

  14627  3 004112   000036 235000 4                  LDA     30
         3 004113   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 004114   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 004115   000246 036003                    ADLQ    166,DU
         3 004116   200010 757100                    STAQ    PARSE_ERRMSG+4,,AUTO

     2122    14628    2           TEMP_BUF = ' ';

  14628  3 004117   040100 100400                    MLR     fill='040'O
         3 004120   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 004121   200246 000400                    ADSC9   TEMP_BUF,,AUTO           cn=0,n=256

     2123    14629    2           SUBSTR(TEMP_BUF,XUX$PCB.HI_CHAR-XUX$INFO.REC_INDEX$->REC_INDEX(I),1) = '^';

  14629  3 004122   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 004123   000001 471500                    LDP1    1,,PR0
         3 004124   200223 720100                    LXL0    I,,AUTO
         3 004125   000012 236000 2                  LDQ     XUX$PCB+10
         3 004126   100000 136110                    SBLQ    0,X0,PR1
         3 004127   040106 100400                    MLR     fill='040'O
         3 004130   000147 000001 4                  ADSC9   103                      cn=0,n=1
         3 004131   200246 000001                    ADSC9   TEMP_BUF,Q,AUTO          cn=0,n=1

     2124    14630    2           CALL M$ERRMSG(PARSE_ERRMSG);

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:276  
  14630  3 004132   200004 630500                    EPPR0   PARSE_ERRMSG,,AUTO
         3 004133   020000 713400                    CLIMB   8192
         3 004134   405000 401760                    pmme    nvectors=11

     2125    14631
     2126    14632    2           CALL XUX$ERROR(%E$XUX#SYNTAX_ERROR,'1'B) ALTRET(GO_AWAY);

  14632  3 004135   000151 630400 4                  EPPR0   105
         3 004136   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004137   000000 701000 xent               TSX1    XUX$ERROR
         3 004140   004230 702000 3                  TSX2    GO_AWAY

     2127    14633             /* Set the non-recover bit on "manually", since we can't set
     2128    14634                it in the call to XUX$ERROR1 because we wouldn't get the
     2129    14635                syntax errors out otherwise. This is Ugly, but effective. */
     2130    14636
     2131    14637    2           P_PARAM.ERROR# = '1'B;

  14637  3 004141   400000 236003                    LDQ     -131072,DU
         3 004142   200003 470500                    LDP0    @P_PARAM,,AUTO
         3 004143   000007 756100                    STQ     7,,PR0

     2132    14638
     2133    14639        /*
     2134    14640             Now let X$PARSE print out the list of syntax alternatives.
     2135    14641             We check for to see if the 2 dcbs the user specified are the
     2136    14642             same and make sure that we only print out 1 set of the
     2137    14643             alternatives if they are.
     2138    14644        */
     2139    14645
     2140    14646    2           XUX$PCB.NXT = '1'B;

  14646  3 004144   040000 236007                    LDQ     16384,DL
         3 004145   000005 256000 2                  ORSQ    XUX$PCB+5

     2141    14647    2           CORRES = FPT_CORRES;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:277  
  14647  3 004146   000100 100400                    MLR     fill='000'O
         3 004147   000032 000020 1                  ADSC9   FPT_CORRES               cn=0,n=16
         3 004150   200036 000020                    ADSC9   CORRES,,AUTO             cn=0,n=16

     2142    14648    2           CORRES.V_ = VECTOR(CORRES.V);

  14648  3 004151   000070 235000 4                  LDA     56
         3 004152   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 004153   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 004154   000040 036003                    ADLQ    32,DU
         3 004155   200036 757100                    STAQ    CORRES,,AUTO

     2143    14649    2           CORRES.V.DCB1# = XUX$INFO.XUX.DCB1#;

  14649  3 004156   200222 471500                    LDP1    XUX$MEM$,,AUTO
         3 004157   100015 220100                    LDX0    13,,PR1
         3 004160   200040 740100                    STX0    CORRES+2,,AUTO

     2144    14650    2           CORRES.V.DCB2# = XUX$INFO.XUX.DCB2#;

  14650  3 004161   100015 721100                    LXL1    13,,PR1
         3 004162   200040 441100                    SXL1    CORRES+2,,AUTO

     2145    14651    2           CALL M$CORRES(CORRES)

  14651  3 004163   200036 630500                    EPPR0   CORRES,,AUTO
         3 004164   460000 713400                    CLIMB   alt,+24576
         3 004165   400000 401760                    pmme    nvectors=1
         3 004166   004201 702000 3                  TSX2    s:14660

     2146    14652    3           WHENRETURN DO;

     2147    14653    3               XUX$PCB.OUTDCB# = XUX$INFO.XUX.DCB2#;

  14653  3 004167   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 004170   000015 236100                    LDQ     13,,PR0
         3 004171   000010 676000 2                  ERQ     XUX$PCB+8
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:278  
         3 004172   037777 376007                    ANQ     16383,DL
         3 004173   000010 656000 2                  ERSQ    XUX$PCB+8

     2148    14654    3               CALL X$PARSE(XUX$PCB)

  14654  3 004174   000037 630400 4                  EPPR0   31
         3 004175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004176   000000 701000 xent               TSX1    X$PARSE
         3 004177   004201 702000 3                  TSX2    s:14660
         3 004200   004201 710000 3                  TRA     s:14660

     2149    14655    4               WHENALTRETURN DO;

     2150    14656                            /* Nothing */
     2151    14657    4               END;

     2152    14658    3           END;

     2153    14659
     2154    14660    2           XUX$PCB.OUTDCB# = XUX$INFO.XUX.DCB1#;

  14660  3 004201   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 004202   000015 236100                    LDQ     13,,PR0
         3 004203   000022 772000                    QRL     18
         3 004204   000010 676000 2                  ERQ     XUX$PCB+8
         3 004205   037777 376007                    ANQ     16383,DL
         3 004206   000010 656000 2                  ERSQ    XUX$PCB+8

     2155    14661    2           CALL X$PARSE(XUX$PCB)

  14661  3 004207   000037 630400 4                  EPPR0   31
         3 004210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 004211   000000 701000 xent               TSX1    X$PARSE
         3 004212   004214 702000 3                  TSX2    s:14666
         3 004213   004214 710000 3                  TRA     s:14666

     2156    14662    3           WHENALTRETURN DO;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:279  

     2157    14663                      /* Nothing */
     2158    14664    3           END;

     2159    14665
     2160    14666    2           XUX$INFO.XUX.ERROR_CODE = XUX_ERR;

  14666  3 004214   000066 236000 1                  LDQ     XUX_ERR
         3 004215   200222 470500                    LDP0    XUX$MEM$,,AUTO
         3 004216   000013 756100                    STQ     11,,PR0

     2161    14667    2           XUX$INFO.XUX.ERROR_CODE.ERR# = %E$XUX#SYNTAX_ERROR;

  14667  3 004217   000000 376000 4                  ANQ     0
         3 004220   013110 276007                    ORQ     5704,DL
         3 004221   000013 756100                    STQ     11,,PR0

     2162    14668    2           GOTO GO_AWAY;

  14668  3 004222   004230 710000 3                  TRA     GO_AWAY

     2163    14669    2       END;     /* of syntax error processing */
     2164    14670    2       ELSE DO;

     2165    14671    2           CALL XUX$ERROR1(XUX$PCB.ERROR,'0'B) ALTRET(GO_AWAY);

  14671  3 004223   000153 630400 4                  EPPR0   107
         3 004224   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004225   000000 701000 xent               TSX1    XUX$ERROR1
         3 004226   004230 702000 3                  TSX2    GO_AWAY

     2166    14672    2           GOTO I_BLEW_IT_INTERNALLY;

  14672  3 004227   004254 710000 3                  TRA     I_BLEW_IT_INTERNALLY

  14666  3 004230                       GO_AWAY      null
     2167    14673    2       END;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:280  
     2168    14674    1   GO_AWAY: ;
     2169    14675             /* We come here when we're ready to return to the caller  */
     2170    14676
     2171    14677    1       CALL XUX$CLEANUP;

  14677  3 004230   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 004231   000000 701000 xent               TSX1    XUX$CLEANUP
         3 004232   000000 011000                    NOP     0

     2172    14678    1       IF XUX$MEM ~= VECTOR(NIL)

  14678  3 004233   000020 237000 2                  LDAQ    XUX$MEM
         3 004234   000142 117000 4                  CMPAQ   98
         3 004235   004253 600000 3                  TZE     s:14686

     2173    14679    2       THEN DO;

     2174    14680    2           CALL FREE_MEM

  14680  3 004236   004310 701000 3                  TSX1    FREE_MEM
         3 004237   004241 702000 3                  TSX2    s:14682
         3 004240   004253 710000 3                  TRA     s:14686

     2175    14681    3           WHENALTRETURN DO;

     2176    14682    3               CALL XUX$ERROR1(B$TCB$->B$TCB.ALT$->B$ALT.ERR,'0'B);

  14682  3 004241   000000 470400 xsym               LDP0    B$TCB$
         3 004242   000000 471500                    LDP1    0,,PR0
         3 004243   000003 236000 4                  LDQ     3
         3 004244   200507 756100                    STQ     FREE_DS+7,,AUTO
         3 004245   100102 633500                    EPPR3   66,,PR1
         3 004246   200506 453500                    STP3    FREE_DS+6,,AUTO
         3 004247   200506 630500                    EPPR0   FREE_DS+6,,AUTO
         3 004250   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004251   000000 701000 xent               TSX1    XUX$ERROR1
         3 004252   000000 011000                    NOP     0
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:281  

     2177    14683    3           END;

     2178    14684    2       END;

     2179    14685
     2180    14686    1       ALTRETURN;

  14686  3 004253   000000 702200 xent               TSX2  ! X66_AALT

  14678  3 004254                       I_BLEW_IT_I* null
     2181    14687
     2182    14688    1   I_BLEW_IT_INTERNALLY: ;
     2183    14689    1       CALL XUX$ERROR(%E$XUX#INTERNAL_ERROR,'0'B);

  14689  3 004254   000156 630400 4                  EPPR0   110
         3 004255   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 004256   000000 701000 xent               TSX1    XUX$ERROR
         3 004257   000000 011000                    NOP     0

     2184    14690    1       CALL M$ERR;

  14690  3 004260   000002 713400                    CLIMB   err
         3 004261   000000 401760                    pmme    nvectors=0
         3 004262   004420 710000 3                  TRA     s:14837

     2185    14691        /*I*
     2186    14692             NAME: GET_MEM
     2187    14693             PURPOSE:
     2188    14694                  Gets memory using M$GDS.
     2189    14695             CALL:
     2190    14696                  CALL GET_MEM(P_SIZE) ALTRET
     2191    14697             PARAMETERS:
     2192    14698                  P_SIZE  -  Amount of memory (in words) to get
     2193    14699             DESCRIPTION:
     2194    14700                  This routine call M$GDS and gets some memory. Altreturn if
     2195    14701                  errors occur.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:282  
     2196    14702        */
     2197    14703    1   GET_MEM:PROC (P_SIZE) ALTRET;

  14703  3 004263   200476 741300       GET_MEM      STX1  ! T$+1,,AUTO

     2198    14704
     2199    14705    2   DCL P_SIZE UBIN PARAM;
     2200    14706
     2201    14707        %FPT_GDS(RESULTS=XUX$MEM,STCLASS=CONSTANT);
     2202    14723        %FPT_GDS(FPTN=GET_DS,STCLASS=AUTO);
     2203    14739
     2204    14740    2       GET_DS = FPT_GDS;

  14740  3 004264   000100 100400                    MLR     fill='000'O
         3 004265   000156 000030 1                  ADSC9   FPT_GDS                  cn=0,n=24
         3 004266   200500 000030                    ADSC9   GET_DS,,AUTO             cn=0,n=24

     2205    14741    2       GET_DS.V_ = VECTOR(GET_DS.V);

  14741  3 004267   000070 235000 4                  LDA     56
         3 004270   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 004271   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 004272   000504 036003                    ADLQ    324,DU
         3 004273   200500 757100                    STAQ    GET_DS,,AUTO

     2206    14742    2       GET_DS.V.SEGSIZE# = P_SIZE;

  14742  3 004274   200477 470500                    LDP0    @P_SIZE,,AUTO
         3 004275   000000 720100                    LXL0    0,,PR0
         3 004276   200504 440100                    SXL0    FREE_DS+4,,AUTO

     2207    14743
     2208    14744    2       CALL M$GDS(GET_DS)

  14744  3 004277   200500 630500                    EPPR0   GET_DS,,AUTO
         3 004300   430001 713400                    CLIMB   alt,gds
         3 004301   400400 401760                    pmme    nvectors=2
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:283  
         3 004302   004304 702000 3                  TSX2    s:14746
         3 004303   004306 710000 3                  TRA     s:14749

     2209    14745    3       WHENALTRETURN DO;

     2210    14746    3           ALTRETURN;     /* Don't worry about the error code */

  14746  3 004304   200476 221300                    LDX1  ! T$+1,,AUTO
         3 004305   000000 702211                    TSX2  ! 0,X1

     2211    14747    3       END;
     2212    14748
     2213    14749    2       RETURN;

  14749  3 004306   200476 221300                    LDX1  ! T$+1,,AUTO
         3 004307   000001 702211                    TSX2  ! 1,X1

     2214    14750    2   END GET_MEM;
     2215    14751        /*I*
     2216    14752             NAME: FREE_MEM
     2217    14753             PURPOSE:
     2218    14754                  Frees memory aquired by GET_MEM.
     2219    14755             CALL:
     2220    14756                  CALL FREE_MEM ALTRET;
     2221    14757             DATA:
     2222    14758                  XUX$MEM
     2223    14759             DESCRIPTION:
     2224    14760                  This routine calls M$FDS to free memory. The XUX$MEM vector
     2225    14761                  is used to decided what memory to free. Altreturn is taken
     2226    14762                  if any errors occur
     2227    14763        */
     2228    14764    1   FREE_MEM:PROC ALTRET;

  14764  3 004310   200476 741300       FREE_MEM     STX1  ! T$+1,,AUTO

     2229    14765
     2230    14766        %FPT_FDS(RESULTS=XUX$MEM,STCLASS=CONSTANT);
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:284  
     2231    14781        %FPT_FDS(FPTN=FREE_DS,STCLASS=AUTO);
     2232    14796
     2233    14797    2       FREE_DS = FPT_FDS;

  14797  3 004311   000100 100400                    MLR     fill='000'O
         3 004312   000164 000030 1                  ADSC9   FPT_FDS                  cn=0,n=24
         3 004313   200500 000030                    ADSC9   FREE_DS,,AUTO            cn=0,n=24

     2234    14798    2       FREE_DS.V_ = VECTOR(FREE_DS.V);

  14798  3 004314   000070 235000 4                  LDA     56
         3 004315   200506 452500                    STP2    FREE_DS+6,,AUTO
         3 004316   200506 236100                    LDQ     FREE_DS+6,,AUTO
         3 004317   000504 036003                    ADLQ    324,DU
         3 004320   200500 757100                    STAQ    FREE_DS,,AUTO

     2235    14799    2       FREE_DS.V.SEGSIZE# = (VBOUND(XUX$MEM)+1) / 4; /* Calc size in words */

  14799  3 004321   000020 236000 2                  LDQ     XUX$MEM
         3 004322   000020 772000                    QRL     16
         3 004323   000001 036007                    ADLQ    1,DL
         3 004324   000002 772000                    QRL     2
         3 004325   000000 620006                    EAX0    0,QL
         3 004326   200504 440100                    SXL0    FREE_DS+4,,AUTO

     2236    14800
     2237    14801    2       CALL M$FDS(FREE_DS)

  14801  3 004327   200500 630500                    EPPR0   FREE_DS,,AUTO
         3 004330   430002 713400                    CLIMB   alt,fds
         3 004331   400400 401760                    pmme    nvectors=2
         3 004332   004334 702000 3                  TSX2    s:14803
         3 004333   004336 710000 3                  TRA     s:14806

     2238    14802    3       WHENALTRETURN DO;

     2239    14803    3           ALTRETURN;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:285  

  14803  3 004334   200476 221300                    LDX1  ! T$+1,,AUTO
         3 004335   000000 702211                    TSX2  ! 0,X1

     2240    14804    3       END;
     2241    14805
     2242    14806    2       RETURN;

  14806  3 004336   200476 221300                    LDX1  ! T$+1,,AUTO
         3 004337   000001 702211                    TSX2  ! 1,X1

     2243    14807    2   END FREE_MEM;
     2244    14808        /*I*
     2245    14809             NAME: INSERT_FID
     2246    14810             PURPOSE:
     2247    14811                  Inserts a fid into the SRCH structure.
     2248    14812             CALL:
     2249    14813                  CALL INSERT_FID
     2250    14814             DATA:
     2251    14815                  SRCH_FID structure contains the important info.
     2252    14816             DESCRIPTION:
     2253    14817                  This internal proc inserts the passed account (FID) into
     2254    14818                  the SRCH structure after first checking to make sure that
     2255    14819                  no duplication of account, SN, and password would occur.
     2256    14820        */
     2257    14821
     2258    14822    1   INSERT_FID: PROC;

  14822  3 004340   200476 741300       INSERT_FID   STX1  ! T$+1,,AUTO

     2259    14823    2       TEMP_FID.ACCT = SRCH_FID.ACCT;

  14823  3 004341   040100 100500                    MLR     fill='040'O
         3 004342   200437 000010                    ADSC9   SRCH_FID+8,,AUTO         cn=0,n=8
         3 004343   200452 000010                    ADSC9   TEMP_FID,,AUTO           cn=0,n=8

     2260    14824    2       TEMP_FID.NAME = SRCH_FID.NAME;
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:286  

  14824  3 004344   040100 100500                    MLR     fill='040'O
         3 004345   200427 000040                    ADSC9   SRCH_FID,,AUTO           cn=0,n=32
         3 004346   200465 000040                    ADSC9   TEMP_FID+11,,AUTO        cn=0,n=32

     2261    14825    2       TEMP_FID.PASS = SRCH_FID.PASS;

  14825  3 004347   040100 100500                    MLR     fill='040'O
         3 004350   200441 000010                    ADSC9   SRCH_FID+10,,AUTO        cn=0,n=8
         3 004351   200454 000010                    ADSC9   TEMP_FID+2,,AUTO         cn=0,n=8

     2262    14826    2       TEMP_FID.SN = SRCH_FID.SN;

  14826  3 004352   040100 100500                    MLR     fill='040'O
         3 004353   200443 000012                    ADSC9   SRCH_FID+12,,AUTO        cn=0,n=10
         3 004354   200456 000012                    ADSC9   TEMP_FID+4,,AUTO         cn=0,n=10

     2263    14827    2       TEMP_FID.WSN = SRCH_FID.WSN;

  14827  3 004355   040100 100500                    MLR     fill='040'O
         3 004356   200445 400010                    ADSC9   SRCH_FID+14,,AUTO        cn=2,n=8
         3 004357   200460 400010                    ADSC9   TEMP_FID+6,,AUTO         cn=2,n=8

     2264    14828    2       TEMP_FID.ASN = SRCH_FID.ASN;

  14828  3 004360   200450 236100                    LDQ     SRCH_FID+17,,AUTO
         3 004361   000033 772000                    QRL     27
         3 004362   000033 736000                    QLS     27
         3 004363   200463 756100                    STQ     TEMP_FID+9,,AUTO

     2265    14829    2       TEMP_FID.RES = SRCH_FID.RES;

  14829  3 004364   200451 236100                    LDQ     SRCH_FID+18,,AUTO
         3 004365   200464 756100                    STQ     TEMP_FID+10,,AUTO

     2266    14830    3       DO J = 0 TO SEARCH_LIST.NUM - 1;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:287  
  14830  3 004366   200224 450100                    STZ     J,,AUTO
         3 004367   004402 710000 3                  TRA     s:14833+1

     2267    14831    3           IF TEMP_FID = SEARCH_LIST.ACCT_LIST(J)

  14831  3 004370   200224 236100                    LDQ     J,,AUTO
         3 004371   000114 402007                    MPY     76,DL
         3 004372   200240 470500                    LDP0    SEARCH_LIST$,,AUTO
         3 004373   000106 106500                    CMPC    fill='000'O
         3 004374   200452 000114                    ADSC9   TEMP_FID,,AUTO           cn=0,n=76
         3 004375   000002 000114                    ADSC9   2,Q,PR0                  cn=0,n=76
         3 004376   004401 601000 3                  TNZ     s:14833

     2268    14832    3           THEN RETURN;

  14832  3 004377   200476 221300                    LDX1  ! T$+1,,AUTO
         3 004400   000001 702211                    TSX2  ! 1,X1

     2269    14833    3       END;

  14833  3 004401   200224 054100                    AOS     J,,AUTO
         3 004402   200240 470500                    LDP0    SEARCH_LIST$,,AUTO
         3 004403   200224 236100                    LDQ     J,,AUTO
         3 004404   004370 604000 3                  TMI     s:14831
         3 004405   000000 116100                    CMPQ    0,,PR0
         3 004406   004370 602000 3                  TNC     s:14831

     2270    14834    2       SEARCH_LIST.ACCT_LIST(J) = TEMP_FID;

  14834  3 004407   000114 402007                    MPY     76,DL
         3 004410   000106 100500                    MLR     fill='000'O
         3 004411   200452 000114                    ADSC9   TEMP_FID,,AUTO           cn=0,n=76
         3 004412   000002 000114                    ADSC9   2,Q,PR0                  cn=0,n=76

     2271    14835    2       SEARCH_LIST.NUM =SEARCH_LIST.NUM + 1;

  14835  3 004413   000000 235100                    LDA     0,,PR0
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:288  
         3 004414   000001 035007                    ADLA    1,DL
         3 004415   000000 755100                    STA     0,,PR0

     2272    14836    2   END INSERT_FID;

  14836  3 004416   200476 221300                    LDX1  ! T$+1,,AUTO
         3 004417   000001 702211                    TSX2  ! 1,X1

     2273    14837    1   END XUX$COMMON_OPTIONS;

  14837  3 004420   000000 702200 xent               TSX2  ! X66_ARET
     2274    14838        %EOD;

PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:289  
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XUX$NODESUBS_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure XUX$COMMON_OPTIONS.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:290  

 **** Variables and constants ****

  ****  Section 001 RoData XUX$COMMON_OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   102-0-0/c CHAR        r     1 CURRENT_ACCOUNT_FID
   103-0-0/c CHAR(9)     r     1 DEFAULT_SRCH_ACCOUNT_FID
    32-0-0/d STRC(144)   r     1 FPT_CORRES                 0-0-0/d STRC(936)   r     1 FPT_ERRMSG
   164-0-0/d STRC(216)   r     1 FPT_FDS                   36-0-0/d STRC(864)   r     1 FPT_FID
   156-0-0/d STRC(216)   r     1 FPT_GDS                  106-0-0/w STRC(1422)  r     1 T
    70-0-0/d STRC(360)   r     1 XUX$PARAM_NO_PARSE        66-0-0/w STRC        r     1 XUX_ERR

  ****  Section 002  Data  XUX$COMMON_OPTIONS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    20-0-0/d VECT        r     1 XUX$MEM                   16-0-0/w STRC(72)    r     1 XUX$NSTD
     0-0-0/w STRC(504)   r     1 XUX$PCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P_PARAM                 477-0-0/w PTR         r     1 @P_SIZE
   242-0-0/w BIT         r     1 BIT_VAL                  104-0-0/w PTR         r     1 BLK$
    36-0-0/d STRC(144)   r     1 CORRES                   243-0-0/b BIT (4)     r     1 DM_CHK(0:2)
    42-0-0/d STRC(864)   r     1 FID                       72-0-0/d STRC(324)   r     1 FID_RESULTS
   500-0-0/d STRC(216)   r     1 FREE_DS                  210-0-0/d STRC(360)   r     1 GETLINE_PARAM
   500-0-0/d STRC(216)   r     1 GET_DS                   410-0-0/w STRC(540)   r     1 GOT
   350-0-0/w STRC(972)   r     1 GOT_OPTIONS              223-0-0/w SBIN        r     1 I
   236-0-0/w SBIN        r     1 IND                      224-0-0/w SBIN        r     1 J
   225-0-0/w SBIN        r     1 K                        205-0-0/w STRC(72)    r     1 LEGAL
   227-0-0/w SBIN        r     1 LOOP                     244-0-0/b STRC(4)     r     1 NDM
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:291  
   245-0-0/b STRC(4)     r     1 NMDM                     105-0-0/w SBIN        r     1 NSUBLKS
   237-0-0/w SBIN        r     1 NUM_SRCH_ACCTS             4-0-0/d STRC(936)   r     1 PARSE_ERRMSG
    *0-0-0/w STRC(612)   r     1 P_PARAM                   *0-0-0/w UBIN        r     1 P_SIZE
   240-0-0/w PTR         r     1 SEARCH_LIST$             427-0-0/w STRC(684)   r     1 SRCH_FID
   241-0-0/w SBIN        r     1 SRCH_LIST_SIZE           152-0-0/w STRC(972)   r     1 STD
   475-0-0/w PTR         r     1 T$                       226-0-0/w SBIN        r     1 TEMP
   403-0-0/h UBIN(18)    r     1 TEMP_BC(0:8)
   246-0-0/c CHAR(256)   r     1 TEMP_BUF                 452-0-0/w STRC(684)   r     1 TEMP_FID
   235-0-0/w SBIN        r     1 TEMP_LEN                 230-0-0/c CHAR(20)    r     1 TEMP_OPT
   106-0-0/w STRC(684)   r     1 XUX$FID_ONLY             222-0-0/w PTR         r     1 XUX$MEM$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w UBIN        r     1 XUX$DEFAULT_NSTD_NODES
     0-0-0/w UBIN        r     1 XUX$NODES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w CHAR(256)   r     1 BUF
     0-0-0/w STRC(144)   r     1 OPT$OUT                    0-0-0/w ASTR(153)   r     1 OPT$SYM
     0-0-0/c ASTR(9)     r     1 OPT_MSG                    0-0-0/w UBIN        r     1 REC_INDEX(0:1023)
     0-0-0/w STRC(6912)  r     1 SEARCH_LIST                0-0-0/w ACHR        r     1 SRCH_LIST_BUFFER
     0-0-0/h UBIN(18)    r     1 XUX$BC_UNIT(0:8)
     0-0-0/w STRC(792)   r     1 XUX$INFO                   0-0-0/w STRC(72)    r     1 XUX$LEGAL_OPTIONS
     0-0-0/w STRC(6912)  r     1 XUX$SRCH_LIST              0-0-0/w STRC(972)   r     1 XUX$STD_OPTIONS


   Procedure XUX$COMMON_OPTIONS requires 2321 words for executable code.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:292  
   Procedure XUX$COMMON_OPTIONS requires 334 words of local(AUTO) storage.
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:293  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:294  
          MINI XREF LISTING

B$ALT.CODE
     11123**DCL     11123--REDEF   11124--REDEF   11124--REDEF
B$ALT.ERR
     11124**DCL     14574<>CALL    14682<>CALL
B$ALT.ERR.ERR#
     11125**DCL     11125--REDEF
B$ALT.EVID
     11124**DCL     11124--REDEF   11124--REDEF
B$JIT.CPFLAGS1.SLEAZE
      7483**DCL      7483--REDEF
B$JIT.ERR.MID
      7390**DCL      7390--REDEF
B$JIT.PRFLAGS.LS
      7473**DCL     13670>>IF
B$JIT.PRFLAGS.OU
      7473**DCL     13661>>IF
B$JIT.PRFLAGS.UI
      7473**DCL     13652>>IF
B$JIT$
     11130**DCL      7384--IMP-PTR 13652>>IF      13661>>IF      13670>>IF
B$TCB.ALT$
     11119**DCL     14574>>CALL    14682>>CALL
B$TCB$
     11131**DCL     14574>>CALL    14682>>CALL
BAD_FID
     14304**LABEL   14281--CALLALT 14297--GOTO
BIT_VAL
     13167**DCL     14352<<ASSIGN  14353<<ASSIGN  14358>>ASSIGN  14359>>ASSIGN  14360>>ASSIGN  14361>>ASSIGN
     14362>>IF      14369>>ASSIGN  14370>>IF      14373>>ASSIGN  14374>>IF      14377>>ASSIGN  14378>>IF
     14381>>ASSIGN  14382>>IF      14391>>ASSIGN  14392>>ASSIGN  14393>>ASSIGN  14394>>ASSIGN  14395>>IF
     14402>>ASSIGN  14403>>IF      14406>>ASSIGN  14407>>IF      14410>>ASSIGN  14411>>IF      14414>>ASSIGN
     14415>>IF      14467<<ASSIGN  14468<>CALL    14470>>IF
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:295  
BLK$
     11573**DCL     11496--IMP-PTR 11542--IMP-PTR 13748<<ASSIGN  13749>>DOCASE  13766>>IF      13772>>IF
     13780>>DOINDEX 13781>>CALLBLT 13781>>CALLBLT 13824>>DOCASE  13842>>DOCASE  13862>>DOCASE  13880>>DOCASE
     13899>>DOCASE  13917>>DOCASE  13937>>DOCASE  13958>>DOCASE  13981>>DOCASE  13999>>DOCASE  14019>>DOCASE
     14040>>DOCASE  14066>>DOCASE  14087>>DOCASE  14110>>DOCASE  14131>>DOCASE  14154>>DOCASE  14175>>DOCASE
     14198<<ASSIGN  14198>>ASSIGN  14199>>DOCASE  14218>>IF      14224>>IF      14230>>DOINDEX 14231>>DOCASE
     14273>>DOINDEX 14280>>ASSIGN  14280>>ASSIGN  14304>>ASSIGN  14305>>CALL    14305>>CALL    14323<<ASSIGN
     14323>>ASSIGN  14324>>DOCASE  14340>>IF      14340>>IF      14340>>IF      14340>>IF      14343>>IF
     14343>>IF      14351>>IF      14351>>IF      14354>>IF      14354>>IF      14356>>IF      14366>>DOINDEX
     14367>>DOCASE  14389>>IF      14399>>DOINDEX 14400>>DOCASE  14432>>DOCASE  14468>>CALL    14497>>CALL
BUF
     13152**DCL     13714--ASSIGN
CORRES
     11213**DCL     14647<<ASSIGN  14651<>CALL
CORRES.V
     11213**DCL     14648--ASSIGN
CORRES.V.DCB1#
     11213**DCL     14649<<ASSIGN
CORRES.V.DCB2#
     11214**DCL     14650<<ASSIGN
CORRES.V_
     11213**DCL     14648<<ASSIGN
CURRENT_ACCOUNT_FID
     13419**DCL     14522--ASSIGN
DEFAULT_SRCH_ACCOUNT_FID
     13420**DCL     14529--ASSIGN
DM_CHK
     13169**DCL     14422<<ASSIGN  14423<<ASSIGN  14424<<ASSIGN  14425>>IF
FID
     11251**DCL     14262<<ASSIGN  14281<>CALL    14512<<ASSIGN  14523<>CALL    14530<>CALL
FID.ACCT_
     11252**DCL     14264<<ASSIGN  14514<<ASSIGN
FID.ASN_
     11254**DCL     14269<<ASSIGN  14519<<ASSIGN
FID.NAME_
     11252**DCL     14265<<ASSIGN  14515<<ASSIGN
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:296  
FID.PASS_
     11252**DCL     14266<<ASSIGN  14516<<ASSIGN
FID.RESULTS_
     11254**DCL     14271<<ASSIGN  14521<<ASSIGN
FID.RES_
     11254**DCL     14270<<ASSIGN  14520<<ASSIGN
FID.SN_
     11253**DCL     14267<<ASSIGN  14517<<ASSIGN
FID.TEXTFID_
     11251**DCL     14280<<ASSIGN  14522<<ASSIGN  14529<<ASSIGN
FID.V
     11255**DCL     14263--ASSIGN  14513--ASSIGN
FID.V_
     11251**DCL     14263<<ASSIGN  14513<<ASSIGN
FID.WSN_
     11253**DCL     14268<<ASSIGN  14518<<ASSIGN
FID_RESULTS
     11274**DCL     14271--ASSIGN  14521--ASSIGN
FID_RESULTS.ACCT
     11274**DCL     14283>>IF
FID_RESULTS.NAME
     11274**DCL     14283>>IF      14290>>IF
FIND_REC
     14591**LABEL   14594--EXIT
FPT_CORRES
     11199**DCL     14647>>ASSIGN
FPT_CORRES.V
     11199**DCL     11199--DCLINIT
FPT_ERRMSG
     11144**DCL     14615>>ASSIGN
FPT_ERRMSG.V
     11148**DCL     11144--DCLINIT
FPT_FDS IN PROCEDURE FREE_MEM
     14777**DCL     14797>>ASSIGN
FPT_FDS.V IN PROCEDURE FREE_MEM
     14777**DCL     14777--DCLINIT
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:297  
FPT_FID
     11228**DCL     14262>>ASSIGN  14512>>ASSIGN
FPT_FID.V
     11232**DCL     11228--DCLINIT
FPT_GDS IN PROCEDURE GET_MEM
     14718**DCL     14740>>ASSIGN
FPT_GDS.V IN PROCEDURE GET_MEM
     14718**DCL     14718--DCLINIT
FREE_DS IN PROCEDURE FREE_MEM
     14792**DCL     14797<<ASSIGN  14801<>CALL
FREE_DS.V IN PROCEDURE FREE_MEM
     14792**DCL     14798--ASSIGN
FREE_DS.V.SEGSIZE# IN PROCEDURE FREE_MEM
     14794**DCL     14799<<ASSIGN
FREE_DS.V_ IN PROCEDURE FREE_MEM
     14792**DCL     14798<<ASSIGN
FREE_MEM
     14764**PROC    14572--CALL    14680--CALL
GETLINE_PARAM
     12909**DCL     13645<<ASSIGN  13716<>CALL    14601<>CALL
GETLINE_PARAM.BUFFER_
     12913**DCL     13714<<ASSIGN  14599<<ASSIGN
GETLINE_PARAM.CMD_COMPLETE
     12974**DCL     14603>>IF
GETLINE_PARAM.CMD_LEN
     12919**DCL     13729>>IF      13731>>ASSIGN  14617>>CALLBLT
GETLINE_PARAM.DISP_ONLY#
     12981**DCL     13646<<ASSIGN
GETLINE_PARAM.ERROR_CODE
     12937**DCL     13718<>CALL    14609<>CALL
GET_DS IN PROCEDURE GET_MEM
     14734**DCL     14740<<ASSIGN  14744<>CALL
GET_DS.V IN PROCEDURE GET_MEM
     14734**DCL     14741--ASSIGN
GET_DS.V.SEGSIZE# IN PROCEDURE GET_MEM
     14737**DCL     14742<<ASSIGN
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:298  
GET_DS.V_ IN PROCEDURE GET_MEM
     14734**DCL     14741<<ASSIGN
GET_MEM
     14703**PROC    13567--CALL
GOT
     13383**DCL     13741<<ASSIGN
GOT.BC
     13384**DCL     13758>>IF      13760>>ASSIGN  13768<<ASSIGN  13778<<ASSIGN
GOT.DMAP
     13396**DCL     14340>>IF      14344>>ASSIGN  14434<<ASSIGN  14436<<ASSIGN
GOT.LO
     13394**DCL     14209>>IF      14211>>ASSIGN  14220<<ASSIGN  14223<<ASSIGN
GOT.LS
     13385**DCL     13834>>IF      13836>>ASSIGN  13845<<ASSIGN  13848<<ASSIGN
GOT.MDMAP
     13397**DCL     14340>>IF      14345>>ASSIGN  14438<<ASSIGN  14440<<ASSIGN
GOT.OU
     13386**DCL     13872>>IF      13874>>ASSIGN  13883<<ASSIGN  13886<<ASSIGN
GOT.PMAP
     13390**DCL     14032>>IF      14034>>ASSIGN  14044<<ASSIGN  14048<<ASSIGN  14052<<ASSIGN
GOT.SCHEMA
     13391**DCL     14079>>IF      14081>>ASSIGN  14090<<ASSIGN  14093<<ASSIGN  14096<<ASSIGN
GOT.SO
     13387**DCL     13909>>IF      13911>>ASSIGN  13920<<ASSIGN  13923<<ASSIGN
GOT.SRCH
     13395**DCL     14252>>IF      14254>>ASSIGN  14260<<ASSIGN
GOT.UI
     13388**DCL     13950>>IF      13952>>ASSIGN  13961<<ASSIGN  13964<<ASSIGN  13968<<ASSIGN
GOT.UREF
     13392**DCL     14123>>IF      14125>>ASSIGN  14134<<ASSIGN  14137<<ASSIGN  14140<<ASSIGN
GOT.WARN
     13389**DCL     13991>>IF      13993>>ASSIGN  14002<<ASSIGN  14005<<ASSIGN
GOT.XREF
     13393**DCL     14167>>IF      14169>>ASSIGN  14178<<ASSIGN  14181<<ASSIGN  14184<<ASSIGN
GOT_OPTIONS
     13218**DCL     13643<<ASSIGN  14555>>ASSIGN
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:299  
GOT_OPTIONS.BC
     13222**DCL     13684<<ASSIGN  13769<<ASSIGN  13811<<ASSIGN
GOT_OPTIONS.DMAP
     13237**DCL     13744<<ASSIGN  14422>>ASSIGN  14423>>ASSIGN  14428<<ASSIGN  14542>>IF
GOT_OPTIONS.DMAP.AUTO#
     13239**DCL     14359<<ASSIGN  14373<<ASSIGN
GOT_OPTIONS.DMAP.BASED#
     13241**DCL     14361<<ASSIGN  14381<<ASSIGN
GOT_OPTIONS.DMAP.STATIC#
     13238**DCL     14358<<ASSIGN  14369<<ASSIGN
GOT_OPTIONS.DMAP.SYMREF#
     13240**DCL     14360<<ASSIGN  14377<<ASSIGN
GOT_OPTIONS.LO
     13261**DCL     14217<<ASSIGN
GOT_OPTIONS.LO.CODE
     13262**DCL     14226<<ASSIGN  14233<<ASSIGN
GOT_OPTIONS.LO.DATA
     13263**DCL     14227<<ASSIGN  14235<<ASSIGN
GOT_OPTIONS.LS
     13272**DCL     13673<<ASSIGN  13726<<ASSIGN  13844<<ASSIGN  13847<<ASSIGN
GOT_OPTIONS.MDMAP
     13249**DCL     13745<<ASSIGN  14422>>ASSIGN  14424>>ASSIGN  14429<<ASSIGN
GOT_OPTIONS.MDMAP.AUTO#
     13251**DCL     14392<<ASSIGN  14406<<ASSIGN
GOT_OPTIONS.MDMAP.BASED#
     13253**DCL     14394<<ASSIGN  14414<<ASSIGN
GOT_OPTIONS.MDMAP.STATIC#
     13250**DCL     14391<<ASSIGN  14402<<ASSIGN
GOT_OPTIONS.MDMAP.SYMREF#
     13252**DCL     14393<<ASSIGN  14410<<ASSIGN
GOT_OPTIONS.NSTD
     13337**DCL     14466<<ASSIGN
GOT_OPTIONS.OPTUI
     13314**DCL     13966<<ASSIGN
GOT_OPTIONS.OU
     13276**DCL     13664<<ASSIGN  13728<<ASSIGN  13882<<ASSIGN  13885<<ASSIGN
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:300  
GOT_OPTIONS.PMAP
     13280**DCL     14548>>IF
GOT_OPTIONS.PMAP.FULL
     13281**DCL     14042<<ASSIGN  14046<<ASSIGN  14050<<ASSIGN
GOT_OPTIONS.PMAP.MINI
     13282**DCL     14043<<ASSIGN  14047<<ASSIGN  14051<<ASSIGN
GOT_OPTIONS.SCHEMA
     13289**DCL     13686<<ASSIGN  14089<<ASSIGN  14092<<ASSIGN  14095<<ASSIGN  14540>>IF      14544<<ASSIGN
     14550<<ASSIGN
GOT_OPTIONS.SO
     13295**DCL     13919<<ASSIGN  13922<<ASSIGN
GOT_OPTIONS.SRCH
     13299**DCL     13690<<ASSIGN  14261<<ASSIGN
GOT_OPTIONS.UI
     13308**DCL     13655<<ASSIGN  13960<<ASSIGN  13963<<ASSIGN  13967<<ASSIGN
GOT_OPTIONS.UREF
     13321**DCL     14133<<ASSIGN  14136<<ASSIGN  14139<<ASSIGN
GOT_OPTIONS.WARN
     13327**DCL     13688<<ASSIGN  14001<<ASSIGN  14004<<ASSIGN
GOT_OPTIONS.XREF
     13331**DCL     14177<<ASSIGN  14180<<ASSIGN  14183<<ASSIGN
GO_AWAY
     14666**LABEL   13587--CALLALT 13597--CALLALT 13608--CALLALT 13617--CALLALT 13628--CALLALT 13657--CALLALT
     13666--CALLALT 13675--CALLALT 13718--CALLALT 13762--CALLALT 13774--CALLALT 13784--CALLALT 13798--CALLALT
     13816--CALLALT 13838--CALLALT 13854--CALLALT 13876--CALLALT 13891--CALLALT 13913--CALLALT 13929--CALLALT
     13954--CALLALT 13973--CALLALT 13995--CALLALT 14011--CALLALT 14036--CALLALT 14058--CALLALT 14083--CALLALT
     14102--CALLALT 14127--CALLALT 14146--CALLALT 14171--CALLALT 14190--CALLALT 14213--CALLALT 14242--CALLALT
     14256--CALLALT 14276--CALLALT 14305--CALLALT 14313--CALLALT 14347--CALLALT 14427--CALLALT 14446--CALLALT
     14472--CALLALT 14482--CALLALT 14497--CALLALT 14525--CALLALT 14532--CALLALT 14545--CALLALT 14551--CALLALT
     14605--CALLALT 14609--CALLALT 14632--CALLALT 14668--GOTO    14671--CALLALT
I
     13154**DCL     13780<<DOINDEX 13781>>CALLBLT 13781>>CALLBLT 14230<<DOINDEX 14231>>DOCASE  14273<<DOINDEX
     14280>>ASSIGN  14280>>ASSIGN  14304>>ASSIGN  14305>>CALL    14305>>CALL    14591<<DOINDEX 14592>>IF
     14598<<ASSIGN  14598>>ASSIGN  14600>>DOINDEX 14629>>ASSIGN
IND
     13161**DCL     14292<<CALLBLT 14293>>IF      14295<<CALLBLT 14295>>CALLBLT 14296>>IF
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:301  
INSERT_FID
     14822**PROC    14300--CALL    14528--CALL    14535--CALL
I_BLEW_IT_INTERNALLY
     14678**LABEL   13588--GOTO    13598--GOTO    13609--GOTO    13618--GOTO    13629--GOTO    13719--GOTO
     14473--GOTO    14483--GOTO    14498--GOTO    14526--GOTO    14533--GOTO    14606--GOTO    14610--GOTO
     14672--GOTO
J
     13155**DCL     13787<<DOINDEX 13788>>IF      13790>>DOINDEX 13796>>IF      13807>>ASSIGN  14366<<DOINDEX
     14367>>DOCASE  14399<<DOINDEX 14400>>DOCASE  14600<<DOINDEX 14830<<DOINDEX 14831>>IF      14834>>ASSIGN
K
     13156**DCL     13790<<DOINDEX 13791>>ASSIGN  13791>>ASSIGN
LEGAL
     12582**DCL     13591<<ASSIGN  13733--ASSIGN
LEGAL.BC#
     12586**DCL     13604>>IF      13683>>IF      13756>>IF      14556>>IF
LEGAL.DCB_LS#
     12658**DCL     13672>>IF
LEGAL.DCB_OU#
     12654**DCL     13663>>IF
LEGAL.DCB_UI#
     12650**DCL     13654>>IF
LEGAL.DMAP#
     12590**DCL     14338>>IF      14542>>IF
LEGAL.LO#
     12595**DCL     14207>>IF
LEGAL.LS#
     12599**DCL     13725>>IF      13832>>IF
LEGAL.NSTD#
     12646**DCL     13622>>IF      14464>>IF
LEGAL.OU#
     12603**DCL     13727>>IF      13870>>IF
LEGAL.PMAP#
     12608**DCL     14030>>IF      14548>>IF
LEGAL.SCHEMA#
     12613**DCL     13685>>IF      14077>>IF      14540>>IF
LEGAL.SO#
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:302  
     12618**DCL     13907>>IF
LEGAL.SRCH#
     12623**DCL     13613>>IF      13689>>IF      14250>>IF      14509>>IF      14559>>IF
LEGAL.SRCH_FIL#
     12666**DCL     14283>>IF
LEGAL.UI#
     12627**DCL     13948>>IF
LEGAL.UREF#
     12632**DCL     14121>>IF
LEGAL.WARN#
     12636**DCL     13687>>IF      13989>>IF
LEGAL.XREF#
     12641**DCL     14165>>IF
LOOP
     13158**DCL     13747<<DOINDEX 13748>>ASSIGN
M$CORRES
      6455**DCL-ENT 14651--CALL
M$ERR
      6462**DCL-ENT 14690--CALL
M$ERRMSG
      6513**DCL-ENT 14626--CALL    14630--CALL
M$FDS
      6485**DCL-ENT 14801--CALL
M$FID
      6513**DCL-ENT 14281--CALL    14523--CALL    14530--CALL
M$GDS
      6485**DCL-ENT 14744--CALL
NDM
     13170**DCL     13742<<ASSIGN  14423>>ASSIGN
NDM.BITS
     13171**DCL     14363<<ASSIGN  14371<<ASSIGN  14375<<ASSIGN  14379<<ASSIGN  14383<<ASSIGN
NMDM
     13172**DCL     13743<<ASSIGN  14424>>ASSIGN
NMDM.BITS
     13173**DCL     14396<<ASSIGN  14404<<ASSIGN  14408<<ASSIGN  14412<<ASSIGN  14416<<ASSIGN
NSUBLKS
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:303  
     11574**DCL     13746<<ASSIGN  13747>>DOINDEX
NUM_SRCH_ACCTS
     13162**DCL     13565<<ASSIGN  13566<<ASSIGN  13567>>CALL    14274>>IF      14276<>CALL
OPT$OUT.CODE
     11504**DCL     13749>>DOCASE  13824>>DOCASE  13842>>DOCASE  13862>>DOCASE  13880>>DOCASE  13899>>DOCASE
     13917>>DOCASE  13937>>DOCASE  13958>>DOCASE  13981>>DOCASE  13999>>DOCASE  14019>>DOCASE  14040>>DOCASE
     14066>>DOCASE  14087>>DOCASE  14110>>DOCASE  14131>>DOCASE  14154>>DOCASE  14175>>DOCASE  14199>>DOCASE
     14218>>IF      14231>>DOCASE  14324>>DOCASE  14340>>IF      14340>>IF      14340>>IF      14340>>IF
     14343>>IF      14343>>IF      14351>>IF      14351>>IF      14354>>IF      14354>>IF      14367>>DOCASE
     14400>>DOCASE  14432>>DOCASE  14497<>CALL
OPT$OUT.NSUBLKS
     11508**DCL     13746>>ASSIGN  13766>>IF      13772>>IF      13780>>DOINDEX 14224>>IF      14230>>DOINDEX
     14273>>DOINDEX 14356>>IF      14366>>DOINDEX 14389>>IF      14399>>DOINDEX
OPT$OUT.SUBLK$
     11529**DCL     13748>>ASSIGN  13781>>CALLBLT 13781>>CALLBLT 14198>>ASSIGN  14231>>DOCASE  14280>>ASSIGN
     14280>>ASSIGN  14304>>ASSIGN  14305>>CALL    14305>>CALL    14323>>ASSIGN  14367>>DOCASE  14400>>DOCASE
     14468<>CALL
OPT$SYM.COUNT
     11565**DCL     11568--IMP-SIZ 13781>>CALLBLT 14280>>ASSIGN  14304>>ASSIGN  14305>>CALL
OPT$SYM.TEXT
     11568**DCL     13781>>CALLBLT 14280--ASSIGN  14305<>CALL
OPT_MSG.LEN
     13422**DCL     13423--IMP-SIZ 13761>>ASSIGN  13762>>CALL    13837>>ASSIGN  13838>>CALL    13875>>ASSIGN
     13876>>CALL    13912>>ASSIGN  13913>>CALL    13953>>ASSIGN  13954>>CALL    13994>>ASSIGN  13995>>CALL
     14035>>ASSIGN  14036>>CALL    14082>>ASSIGN  14083>>CALL    14126>>ASSIGN  14127>>CALL    14170>>ASSIGN
     14171>>CALL    14212>>ASSIGN  14213>>CALL    14255>>ASSIGN  14256>>CALL    14346>>ASSIGN  14347>>CALL
OPT_MSG.TEXT
     13423**DCL     13762<>CALL    13838<>CALL    13876<>CALL    13913<>CALL    13954<>CALL    13995<>CALL
     14036<>CALL    14083<>CALL    14127<>CALL    14171<>CALL    14213<>CALL    14256<>CALL    14347<>CALL
PARSE_ALTRET
     14578**LABEL   13734--CALLALT
PARSE_ERRMSG
     11171**DCL     14615<<ASSIGN  14626<>CALL    14630<>CALL
PARSE_ERRMSG.BUF_
     11171**DCL     14618<<ASSIGN  14627<<ASSIGN
PARSE_ERRMSG.V
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:304  
     11175**DCL     14616--ASSIGN
PARSE_ERRMSG.V.OUTDCB1#
     11176**DCL     14619<<ASSIGN
PARSE_ERRMSG.V.OUTDCB2#
     11176**DCL     14620<<ASSIGN
PARSE_ERRMSG.V_
     11171**DCL     14616<<ASSIGN
P_PARAM
     10979**DCL       119--PROC    13558--IF      13583>>ASSIGN
P_PARAM.ERROR#
     11071**DCL     13575<<ASSIGN  14566<<ASSIGN  14637<<ASSIGN
P_PARAM.ERROR_CODE
     11033**DCL     13573<<ASSIGN  14565<<ASSIGN  14578>>IF
P_PARAM.ERROR_CODE.ERR#
     11061**DCL     13574<<ASSIGN
P_PARAM.LEGAL_OPTIONS$
     10983**DCL     13564>>IF
P_PARAM.SRCH_LIST$
     10995**DCL     13565>>ASSIGN
P_SIZE IN PROCEDURE GET_MEM
     14705**DCL     14703--PROC    14742>>ASSIGN
REC_INDEX
     13150**DCL     13722<<ASSIGN  14592>>IF      14629>>ASSIGN
SEARCH_LIST.ACCT_LIST
     12724**DCL     14831>>IF      14834<<ASSIGN
SEARCH_LIST.NUM
     12712**DCL     13644<<ASSIGN  14272<<ASSIGN  14274>>IF      14511>>ASSIGN  14561>>ASSIGN  14830>>DOINDEX
     14835<<ASSIGN  14835>>ASSIGN
SEARCH_LIST.RCVD
     12718**DCL     14511<<ASSIGN
SEARCH_LIST$
     13163**DCL     12707--IMP-PTR 13592<<ASSIGN  13644>>ASSIGN  14272>>ASSIGN  14274>>IF      14511>>ASSIGN
     14511>>ASSIGN  14561>>ASSIGN  14562>>ASSIGN  14830>>DOINDEX 14831>>IF      14834>>ASSIGN  14835>>ASSIGN
     14835>>ASSIGN
SETUP_BC
     13787**LABEL   13793--EXIT    13800--EXIT
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:305  
SRCH_FID.ACCT
     13404**DCL     14264--ASSIGN  14514--ASSIGN  14823>>ASSIGN
SRCH_FID.ASN
     13408**DCL     14269--ASSIGN  14283>>IF      14283>>IF      14519--ASSIGN  14828>>ASSIGN
SRCH_FID.NAME
     13403**DCL     14265--ASSIGN  14292>>CALLBLT 14293--IF      14295>>CALLBLT 14296--IF      14515--ASSIGN
     14824>>ASSIGN
SRCH_FID.PASS
     13405**DCL     14266--ASSIGN  14516--ASSIGN  14825>>ASSIGN
SRCH_FID.RES
     13409**DCL     14270--ASSIGN  14520--ASSIGN  14829>>ASSIGN
SRCH_FID.SN
     13406**DCL     14267--ASSIGN  14517--ASSIGN  14826>>ASSIGN
SRCH_FID.WSN
     13407**DCL     14268--ASSIGN  14518--ASSIGN  14827>>ASSIGN
SRCH_LIST_BUFFER
     13165**DCL     14562<<ASSIGN  14562>>ASSIGN
SRCH_LIST_SIZE
     13164**DCL     13165--IMP-SIZ 14561<<ASSIGN  14562>>ASSIGN  14562>>ASSIGN
STD
     12420**DCL     13601<<ASSIGN
T
     13426**DCL     13760--ASSIGN  13836--ASSIGN  13874--ASSIGN  13911--ASSIGN  13952--ASSIGN  13993--ASSIGN
     14034--ASSIGN  14081--ASSIGN  14125--ASSIGN  14169--ASSIGN  14211--ASSIGN  14254--ASSIGN  14344--ASSIGN
     14345--ASSIGN
T$
     13424**DCL     13421--IMP-PTR 13760<<ASSIGN  13761>>ASSIGN  13762>>CALL    13762>>CALL    13836<<ASSIGN
     13837>>ASSIGN  13838>>CALL    13838>>CALL    13874<<ASSIGN  13875>>ASSIGN  13876>>CALL    13876>>CALL
     13911<<ASSIGN  13912>>ASSIGN  13913>>CALL    13913>>CALL    13952<<ASSIGN  13953>>ASSIGN  13954>>CALL
     13954>>CALL    13993<<ASSIGN  13994>>ASSIGN  13995>>CALL    13995>>CALL    14034<<ASSIGN  14035>>ASSIGN
     14036>>CALL    14036>>CALL    14081<<ASSIGN  14082>>ASSIGN  14083>>CALL    14083>>CALL    14125<<ASSIGN
     14126>>ASSIGN  14127>>CALL    14127>>CALL    14169<<ASSIGN  14170>>ASSIGN  14171>>CALL    14171>>CALL
     14211<<ASSIGN  14212>>ASSIGN  14213>>CALL    14213>>CALL    14254<<ASSIGN  14255>>ASSIGN  14256>>CALL
     14256>>CALL    14344<<ASSIGN  14345<<ASSIGN  14346>>ASSIGN  14347>>CALL    14347>>CALL
TEMP
     13157**DCL     13761<<ASSIGN  13762<>CALL    13781<<CALLBLT 13782>>IF      13782>>IF      13784<>CALL
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:306  
     13788>>IF      13796>>IF      13798<>CALL    13807>>ASSIGN  13837<<ASSIGN  13838<>CALL    13875<<ASSIGN
     13876<>CALL    13912<<ASSIGN  13913<>CALL    13953<<ASSIGN  13954<>CALL    13994<<ASSIGN  13995<>CALL
     14035<<ASSIGN  14036<>CALL    14082<<ASSIGN  14083<>CALL    14126<<ASSIGN  14127<>CALL    14170<<ASSIGN
     14171<>CALL    14212<<ASSIGN  14213<>CALL    14255<<ASSIGN  14256<>CALL    14304<<ASSIGN  14305<>CALL
     14346<<ASSIGN  14347<>CALL
TEMP_BC
     13372**DCL     13779<<ASSIGN  13787>>DOINDEX 13788>>IF      13790>>DOINDEX 13791<<ASSIGN  13791>>ASSIGN
     13796>>IF      13799<<ASSIGN  13799>>ASSIGN  13807<<ASSIGN  13808<<ASSIGN  13808>>ASSIGN  13811>>ASSIGN
     14557>>ASSIGN
TEMP_BUF
     13175**DCL     14599--ASSIGN  14617<<CALLBLT 14618--ASSIGN  14627--ASSIGN  14628<<ASSIGN  14629<<ASSIGN
TEMP_FID
     13411**DCL     14831>>IF      14834>>ASSIGN
TEMP_FID.ACCT
     13412**DCL     14823<<ASSIGN
TEMP_FID.ASN
     13416**DCL     14828<<ASSIGN
TEMP_FID.NAME
     13418**DCL     14824<<ASSIGN
TEMP_FID.PASS
     13413**DCL     14825<<ASSIGN
TEMP_FID.RES
     13417**DCL     14829<<ASSIGN
TEMP_FID.SN
     13414**DCL     14826<<ASSIGN
TEMP_FID.WSN
     13415**DCL     14827<<ASSIGN
TEMP_LEN
     13160**DCL     13827<<ASSIGN  13830<<ASSIGN  13838<>CALL    13854<>CALL    13865<<ASSIGN  13868<<ASSIGN
     13876<>CALL    13891<>CALL    13902<<ASSIGN  13905<<ASSIGN  13913<>CALL    13929<>CALL    13940<<ASSIGN
     13943<<ASSIGN  13946<<ASSIGN  13954<>CALL    13973<>CALL    13984<<ASSIGN  13987<<ASSIGN  13995<>CALL
     14011<>CALL    14022<<ASSIGN  14025<<ASSIGN  14028<<ASSIGN  14036<>CALL    14058<>CALL    14069<<ASSIGN
     14072<<ASSIGN  14075<<ASSIGN  14083<>CALL    14102<>CALL    14113<<ASSIGN  14116<<ASSIGN  14119<<ASSIGN
     14127<>CALL    14146<>CALL    14157<<ASSIGN  14160<<ASSIGN  14163<<ASSIGN  14171<>CALL    14190<>CALL
     14202<<ASSIGN  14205<<ASSIGN  14213<>CALL    14242<>CALL    14327<<ASSIGN  14330<<ASSIGN  14333<<ASSIGN
     14336<<ASSIGN  14347<>CALL    14446<>CALL
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:307  
TEMP_OPT
     13159**DCL     13826<<ASSIGN  13829<<ASSIGN  13838<>CALL    13854<>CALL    13864<<ASSIGN  13867<<ASSIGN
     13876<>CALL    13891<>CALL    13901<<ASSIGN  13904<<ASSIGN  13913<>CALL    13929<>CALL    13939<<ASSIGN
     13942<<ASSIGN  13945<<ASSIGN  13954<>CALL    13973<>CALL    13983<<ASSIGN  13986<<ASSIGN  13995<>CALL
     14011<>CALL    14021<<ASSIGN  14024<<ASSIGN  14027<<ASSIGN  14036<>CALL    14058<>CALL    14068<<ASSIGN
     14071<<ASSIGN  14074<<ASSIGN  14083<>CALL    14102<>CALL    14112<<ASSIGN  14115<<ASSIGN  14118<<ASSIGN
     14127<>CALL    14146<>CALL    14156<<ASSIGN  14159<<ASSIGN  14162<<ASSIGN  14171<>CALL    14190<>CALL
     14201<<ASSIGN  14204<<ASSIGN  14213<>CALL    14242<>CALL    14326<<ASSIGN  14329<<ASSIGN  14332<<ASSIGN
     14335<<ASSIGN  14347<>CALL    14446<>CALL
X$PARSE
     11103**DCL-ENT 13734--CALL    14654--CALL    14661--CALL
XUX$BC_UNIT
     11996**DCL     14557<<ASSIGN
XUX$CLEANUP
     11102**DCL-ENT 14568--CALL    14586--CALL    14677--CALL
XUX$DEFAULT_NSTD_NODES
     11113**DCL     11664--DCLINIT 13627--ASSIGN  13636--ASSIGN
XUX$ERROR
     11104**DCL-ENT 13587--CALL    13597--CALL    13608--CALL    13617--CALL    13628--CALL    13657--CALL
     13666--CALL    13675--CALL    13762--CALL    13774--CALL    13784--CALL    13798--CALL    13816--CALL
     13838--CALL    13854--CALL    13876--CALL    13891--CALL    13913--CALL    13929--CALL    13954--CALL
     13973--CALL    13995--CALL    14011--CALL    14036--CALL    14058--CALL    14083--CALL    14102--CALL
     14127--CALL    14146--CALL    14171--CALL    14190--CALL    14213--CALL    14242--CALL    14256--CALL
     14276--CALL    14305--CALL    14313--CALL    14347--CALL    14427--CALL    14446--CALL    14472--CALL
     14482--CALL    14497--CALL    14525--CALL    14532--CALL    14545--CALL    14551--CALL    14605--CALL
     14632--CALL    14689--CALL
XUX$ERROR1
     11105**DCL-ENT 13718--CALL    14574--CALL    14609--CALL    14671--CALL    14682--CALL
XUX$FID_ONLY
     12134**DCL     13567--CALL    14561--ASSIGN
XUX$GETLINE
     11101**DCL-ENT 13716--CALL    14601--CALL
XUX$INFO
     13001**DCL     13567--CALL    13592--ASSIGN  13707--ASSIGN  13710--ASSIGN  13712--ASSIGN
XUX$INFO.BUF_SIZE
     13006**DCL     13713<<ASSIGN
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:308  
XUX$INFO.PARSE_BUF$
     13002**DCL     13712<<ASSIGN  13714>>ASSIGN  13732>>ASSIGN
XUX$INFO.RECNO
     13005**DCL     13723<<ASSIGN  14591>>DOINDEX
XUX$INFO.REC_INDEX$
     13003**DCL     13710<<ASSIGN  13722>>ASSIGN  14592>>IF      14629>>ASSIGN
XUX$INFO.WORK$
     13004**DCL     13707<<ASSIGN  13708>>ASSIGN
XUX$INFO.XUX
     13033**DCL     13583<<ASSIGN
XUX$INFO.XUX.BC_UNIT$
     13043**DCL     13606>>IF      14557>>ASSIGN
XUX$INFO.XUX.DCB1#
     13130**DCL     14619>>ASSIGN  14649>>ASSIGN  14660>>ASSIGN
XUX$INFO.XUX.DCB2#
     13139**DCL     14620>>ASSIGN  14650>>ASSIGN  14653>>ASSIGN
XUX$INFO.XUX.ERROR#
     13123**DCL     14566>>ASSIGN
XUX$INFO.XUX.ERROR_CODE
     13085**DCL     14476<<ASSIGN  14565>>ASSIGN  14666<<ASSIGN
XUX$INFO.XUX.ERROR_CODE.ERR#
     13113**DCL     14477<<ASSIGN  14667<<ASSIGN
XUX$INFO.XUX.LEGAL_OPTIONS$
     13035**DCL     13585>>IF      13591>>ASSIGN
XUX$INFO.XUX.SRCH_LIST$
     13047**DCL     13615>>IF      14562>>ASSIGN
XUX$INFO.XUX.STD_OPTIONS$
     13039**DCL     13595>>IF      13601>>ASSIGN  14555>>ASSIGN
XUX$INFO.XUX.USER_NODES$
     13066**DCL     13624>>IF      13632>>ASSIGN
XUX$INFO.XUX.USER_ROUTINE$$
     13051**DCL     13624>>IF      14468>>CALL
XUX$LEGAL_OPTIONS
     11713**DCL     13591>>ASSIGN
XUX$LEGAL_OPTIONS.SRCH_SIZ#
     11793**DCL     13564>>IF
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:309  
XUX$MEM
     12993**DCL     13581>>ASSIGN  14570>>IF      14678>>IF      14718--DCLINIT 14777--DCLINIT 14799>>ASSIGN
XUX$MEM$
     12995**DCL     13001--IMP-PTR 13581<<ASSIGN  13583>>ASSIGN  13585>>IF      13591>>ASSIGN  13592>>ASSIGN
     13595>>IF      13601>>ASSIGN  13606>>IF      13615>>IF      13624>>IF      13624>>IF      13632>>ASSIGN
     13707>>ASSIGN  13707>>ASSIGN  13708>>ASSIGN  13710>>ASSIGN  13710>>ASSIGN  13712>>ASSIGN  13712>>ASSIGN
     13713>>ASSIGN  13714>>ASSIGN  13722>>ASSIGN  13723>>ASSIGN  13732>>ASSIGN  14468>>CALL    14476>>ASSIGN
     14477>>ASSIGN  14555>>ASSIGN  14557>>ASSIGN  14562>>ASSIGN  14565>>ASSIGN  14566>>ASSIGN  14591>>DOINDEX
     14592>>IF      14619>>ASSIGN  14620>>ASSIGN  14629>>ASSIGN  14649>>ASSIGN  14650>>ASSIGN  14653>>ASSIGN
     14660>>ASSIGN  14666>>ASSIGN  14667>>ASSIGN
XUX$MORE_INPUT
     11106**DCL-ENT 11327--DCLINIT
XUX$NODES
     11112**DCL     11314--DCLINIT
XUX$NSTD.SUBNDS$
     11664**DCL     13627<<ASSIGN  13632<<ASSIGN  13636<<ASSIGN
XUX$PARAM_NO_PARSE
     12798**DCL     13645>>ASSIGN
XUX$PCB
     11309**DCL     13734<>CALL    14654<>CALL    14661<>CALL
XUX$PCB.ERROR
     11413**DCL     14671<>CALL
XUX$PCB.ERROR.CODE
     11421**DCL     14584>>IF
XUX$PCB.HI_CHAR
     11460**DCL     14592>>IF      14629>>ASSIGN
XUX$PCB.NCHARS
     11456**DCL     13731<<ASSIGN
XUX$PCB.NXT
     11359**DCL     14646<<ASSIGN
XUX$PCB.OUT$
     11322**DCL     13746>>ASSIGN  13748>>ASSIGN
XUX$PCB.OUTDCB#
     11451**DCL     14653<<ASSIGN  14660<<ASSIGN
XUX$PCB.TEXT$
     11310**DCL     13732<<ASSIGN
PL6.E3A0      #002=XUX$COMMON_OPTIONS File=XUX$COMMON_OPTIONS.:E05TSI            WED 07/30/97 09:46 Page:310  
XUX$PCB.USER$
     11476**DCL     13733<<ASSIGN
XUX$PCB.WKSZ
     11339**DCL     13706<<ASSIGN
XUX$PCB.WORK$
     11318**DCL     13708<<ASSIGN
XUX$SRCH_LIST.NUM
     12044**DCL     13565>>ASSIGN
XUX$STD_OPTIONS
     11842**DCL     13601>>ASSIGN  14555<<ASSIGN
XUX_ERR
     12208**DCL     13573>>ASSIGN  14476>>ASSIGN  14666>>ASSIGN

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:311  
     2275        1        /*T***********************************************************/
     2276        2        /*T*                                                         */
     2277        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2278        4        /*T*                                                         */
     2279        5        /*T***********************************************************/
     2280        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2281        7        /*F*
     2282        8             NAME: XUX$MORE_INPUT
     2283        9             PURPOSE:
     2284       10                  User routine for X$PARSE.
     2285       11             DESCRIPTION:
     2286       12                  This module gets called by X$PARSE when more input is needed
     2287       13                  in order to complete a parse. It can also get called if
     2288       14                  any special nodes handling is needed, but since we don't have
     2289       15                  any of that, we'll just return if we got here for that reason.
     2290       16                  Basically, this routine just calls XUX$GETLINE to get
     2291       17                  another line of input and sets up the XUX$PCB.
     2292       18        */
     2293       19        /*D*
     2294       20             NAME: XUX$MORE_INPUT
     2295       21             CALL:
     2296       22                  Used as a User routine from X$PARSE. Not called directly by any
     2297       23                  XUX routines.
     2298       24             PARAMETERS:
     2299       25                  P_PARAM  - the PARSE$PARAM structure from X$PARSE
     2300       26             INTERFACE:
     2301       27                  XUX$GETLINE
     2302       28                  XUX$ERROR
     2303       29             DESCRIPTION:
     2304       30                  This module get called when input is needed by X$PARSE. A call
     2305       31                  is made to XUX$GETLINE to get the next line of input from
     2306       32                  *CONTINUATION_COMMANDS (better not need more input if this
     2307       33                  came from the CCBUF). The buffer that GETLINE writes into is
     2308       34                  actually the end of the parse buffer, so before returning
     2309       35                  to X$PARSE all that needs doing is to change PARAM$PCB.NCHARS
     2310       36                  to reflect the new buffer length.
     2311       37        */
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:312  
     2312       38        %EJECT;
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:313  
     2313       39        XUX$MORE_INPUT: PROC(P_PARAM);
     2314       40
     2315       41        %INCLUDE XU_MACRO_C;
     2316     3147        %INCLUDE XU_SUBS_C;
     2317     3239        %INCLUDE XUX$INTERFACE_M;
     2318     4016        %INCLUDE XUX$NODESUBS_C;
     2319     4077        %INCLUDE XU_PERR_C;
     2320     4268        %INCLUDE CP_6;
     2321     9827
     2322     9828        /*
     2323     9829             Parameters
     2324     9830        */
     2325     9831
     2326     9832        %PARSE$PARAM(NAME=P_PARAM,STCLASS=);
     2327     9913
     2328     9914        /*
     2329     9915             Parse data
     2330     9916        */
     2331     9917
     2332     9918        %P_PCB(NAME=PARAM$PCB,STCLASS="BASED(P_PARAM.PCB$)");
     2333    10117    1   DCL BUF CHAR(256) ALIGNED BASED;
     2334    10118
     2335    10119        /*
     2336    10120             Global data
     2337    10121        */
     2338    10122
     2339    10123    1   DCL XUX$NODES ENTRY CONV (5);           /* force LINK to include the nodes OU */
     2340    10124    1   DCL XUX$MEM VECTOR SYMREF;
     2341    10125    1   DCL XUX$MEM$ PTR;
     2342    10126
     2343    10127        %XUX$INFO;
     2344    10279        %XUX$LEGAL_OPTIONS(NAME=LEGAL,STCLASS="BASED(P_PARAM.USER$)");
     2345    10406
     2346    10407    1   DCL REC_INDEX(0:1023) UBIN BASED;
     2347    10408
     2348    10409        /*
     2349    10410             Entries
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:314  
     2350    10411        */
     2351    10412
     2352    10413    1   DCL XUX$GETLINE ENTRY(1) ALTRET;
     2353    10414    1   DCL XUX$ERROR ENTRY(8) ALTRET;
     2354    10415    1   DCL XUX$ERROR1 ENTRY(8) ALTRET;
     2355    10416
     2356    10417        /*
     2357    10418             Local data
     2358    10419        */
     2359    10420
     2360    10421        %XUX$PARAM_NO_PARSE(STCLASS=CONSTANT,DISP_ONLY=YES);
     2361    10532        %XUX$PARAM_NO_PARSE(NAME=GETLINE_PARAM,STCLASS=AUTO);
     2362    10643
     2363    10644        %EJECT;
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:315  
     2364    10645
     2365    10646    1       XUX$MEM$ = VBASE(XUX$MEM);
     2366    10647
     2367    10648    2       DO CASE(P_PARAM.TYPE);
     2368    10649    2       CASE(%INPUT#);
     2369    10650
     2370    10651    2           IF P_PARAM.CHARPOS + 256 > XUX$INFO.BUF_SIZE
     2371    10652    3           THEN DO;
     2372    10653    3               CALL XUX$ERROR(%E$XUX#NO_MORE_BUFFER,'0'B)
     2373    10654    4               WHENALTRETURN DO;
     2374    10655                   /* Nothing  */
     2375    10656    4               END;
     2376    10657    3               RETURN;
     2377    10658    3           END;
     2378    10659
     2379    10660    2           GETLINE_PARAM = XUX$PARAM_NO_PARSE;
     2380    10661    2           GETLINE_PARAM.BUFFER_ = VECTOR(PINCRC(PARAM$PCB.TEXT$,P_PARAM.CHARPOS)->BUF)
             10661                    ;
     2381    10662
     2382    10663    2           CALL XUX$GETLINE(GETLINE_PARAM)
     2383    10664    3           WHENALTRETURN DO;
     2384    10665    3               IF GETLINE_PARAM.CMD_COMPLETE
     2385    10666    4               THEN DO;
     2386    10667                   /*    We'll handle this as a special case, but it really
     2387    10668                         indicates that IBEX screwed up and didn't get the
     2388    10669                         amount of input that it should have.
     2389    10670                   */
     2390    10671    4                   CALL XUX$ERROR(%E$XUX#NO_MORE_INPUT,'0'B)
     2391    10672    5                   WHENALTRETURN DO;
     2392    10673                         /*  Nothing */
     2393    10674    5                   END;
     2394    10675    4                   RETURN;
     2395    10676    4               END;
     2396    10677    4               ELSE DO;
     2397    10678    4                   CALL XUX$ERROR1(GETLINE_PARAM.ERROR_CODE,'0'B)
     2398    10679    5                   WHENALTRETURN DO;
     2399    10680                      /* Nothing */
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:316  
     2400    10681    5                   END;
     2401    10682    4                   RETURN;
     2402    10683    4               END;
     2403    10684    3           END;
     2404    10685
     2405    10686        /* Now indicate that the buffer has been extended and return */
     2406    10687
     2407    10688    2           PARAM$PCB.NCHARS = PARAM$PCB.NCHARS + GETLINE_PARAM.CMD_LEN - 1;
     2408    10689    2           XUX$INFO.REC_INDEX$->REC_INDEX(XUX$INFO.RECNO) = P_PARAM.CHARPOS;
     2409    10690    2           XUX$INFO.RECNO = XUX$INFO.RECNO + 1;
     2410    10691        %EJECT;
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:317  
     2411    10692        /*
     2412    10693              Reject illegal options when generating the alternative list
     2413    10694              after a syntax error.
     2414    10695        */
     2415    10696    2       CASE(%PRE#);
     2416    10697    2           IF PARAM$PCB.NXT
     2417    10698    3           THEN DO;
     2418    10699    4               DO CASE(P_PARAM.CODE);
     2419    10700    4               CASE(%$BC);
     2420    10701    4                   P_PARAM.REJECT = ~ LEGAL.BC#;
     2421    10702    4               CASE(%$LS,%$NLS);
     2422    10703    4                   P_PARAM.REJECT = ~ LEGAL.LS#;
     2423    10704    4               CASE(%$OU,%$NOU);
     2424    10705    4                   P_PARAM.REJECT = ~ LEGAL.OU#;
     2425    10706    4               CASE(%$SO,%$NSO);
     2426    10707    4                   P_PARAM.REJECT = ~ LEGAL.SO#;
     2427    10708    4               CASE(%$UI,%$NUI,%$OPTUI);
     2428    10709    4                   P_PARAM.REJECT = ~ LEGAL.UI#;
     2429    10710    4               CASE(%$WARN,%$NWARN);
     2430    10711    4                   P_PARAM.REJECT = ~ LEGAL.WARN#;
     2431    10712    4               CASE(%$PMAP,%$MPMAP,%$NPMAP);
     2432    10713    4                   P_PARAM.REJECT = ~ LEGAL.PMAP#;
     2433    10714    4               CASE(%$SCHEMA,%$MSCHEMA,%$NSCHEMA);
     2434    10715    4                   P_PARAM.REJECT = ~ LEGAL.SCHEMA#;
     2435    10716    4               CASE(%$UREF,%$MUREF,%$NUREF);
     2436    10717    4                   P_PARAM.REJECT = ~ LEGAL.UREF#;
     2437    10718    4               CASE(%$XREF,%$MXREF,%$NXREF);
     2438    10719    4                   P_PARAM.REJECT = ~ LEGAL.XREF#;
     2439    10720    4               CASE(%$LO_CLASS);
     2440    10721    4                   P_PARAM.REJECT = ~ LEGAL.LO#;
     2441    10722    4               CASE(%$SRCH);
     2442    10723    4                   P_PARAM.REJECT = ~ LEGAL.SRCH#;
     2443    10724    4               CASE(%$DMAP_CLASS);
     2444    10725    4                   P_PARAM.REJECT = ~ LEGAL.DMAP#;
     2445    10726    4               END;
     2446    10727    3           END;
     2447    10728    2       END;
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:318  
     2448    10729    1       RETURN;  /* To X$PARSE */
     2449    10730
     2450    10731    1   END XUX$MORE_INPUT;
     2451    10732        %EOD;

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:319  
--  Include file information  --

   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUX$NODESUBS_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure XUX$MORE_INPUT.

   Procedure XUX$MORE_INPUT requires 256 words for executable code.
   Procedure XUX$MORE_INPUT requires 18 words of local(AUTO) storage.

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:320  

 Object Unit name= XUX$MORE_INPUT                             File name= XUX$COMMON_OPTIONS.:E05TOU
 UTS= JUL 30 '97 09:47:52.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     10     12  XUX$MORE_INPUT
    2   Proc  even  none   256    400  XUX$MORE_INPUT
    3  RoData even  none     7      7  XUX$MORE_INPUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  XUX$MORE_INPUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XUX$NODES
 yes     yes           Std       8 XUX$ERROR
 yes     yes           Std       8 XUX$ERROR1
 yes     yes           Std       1 XUX$GETLINE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:321  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XUX$MEM                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:322  


     2275        1        /*T***********************************************************/
     2276        2        /*T*                                                         */
     2277        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2278        4        /*T*                                                         */
     2279        5        /*T***********************************************************/
     2280        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2281        7        /*F*
     2282        8             NAME: XUX$MORE_INPUT
     2283        9             PURPOSE:
     2284       10                  User routine for X$PARSE.
     2285       11             DESCRIPTION:
     2286       12                  This module gets called by X$PARSE when more input is needed
     2287       13                  in order to complete a parse. It can also get called if
     2288       14                  any special nodes handling is needed, but since we don't have
     2289       15                  any of that, we'll just return if we got here for that reason.
     2290       16                  Basically, this routine just calls XUX$GETLINE to get
     2291       17                  another line of input and sets up the XUX$PCB.
     2292       18        */
     2293       19        /*D*
     2294       20             NAME: XUX$MORE_INPUT
     2295       21             CALL:
     2296       22                  Used as a User routine from X$PARSE. Not called directly by any
     2297       23                  XUX routines.
     2298       24             PARAMETERS:
     2299       25                  P_PARAM  - the PARSE$PARAM structure from X$PARSE
     2300       26             INTERFACE:
     2301       27                  XUX$GETLINE
     2302       28                  XUX$ERROR
     2303       29             DESCRIPTION:
     2304       30                  This module get called when input is needed by X$PARSE. A call
     2305       31                  is made to XUX$GETLINE to get the next line of input from
     2306       32                  *CONTINUATION_COMMANDS (better not need more input if this
     2307       33                  came from the CCBUF). The buffer that GETLINE writes into is
     2308       34                  actually the end of the parse buffer, so before returning
     2309       35                  to X$PARSE all that needs doing is to change PARAM$PCB.NCHARS
     2310       36                  to reflect the new buffer length.
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:323  
     2311       37        */
     2312       38        %EJECT;
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:324  
     2313       39        XUX$MORE_INPUT: PROC(P_PARAM);

     39  2 000000   000000 700200 xent  XUX$MORE_IN* TSX0  ! X66_AUTO_1
         2 000001   000022 000001                    ZERO    18,1

     2314       40
     2315       41        %INCLUDE XU_MACRO_C;
     2316     3147        %INCLUDE XU_SUBS_C;
     2317     3239        %INCLUDE XUX$INTERFACE_M;
     2318     4016        %INCLUDE XUX$NODESUBS_C;
     2319     4077        %INCLUDE XU_PERR_C;
     2320     4268        %INCLUDE CP_6;
     2321     9827
     2322     9828        /*
     2323     9829             Parameters
     2324     9830        */
     2325     9831
     2326     9832        %PARSE$PARAM(NAME=P_PARAM,STCLASS=);
     2327     9913
     2328     9914        /*
     2329     9915             Parse data
     2330     9916        */
     2331     9917
     2332     9918        %P_PCB(NAME=PARAM$PCB,STCLASS="BASED(P_PARAM.PCB$)");
     2333    10117    1   DCL BUF CHAR(256) ALIGNED BASED;
     2334    10118
     2335    10119        /*
     2336    10120             Global data
     2337    10121        */
     2338    10122
     2339    10123    1   DCL XUX$NODES ENTRY CONV (5);           /* force LINK to include the nodes OU */
     2340    10124    1   DCL XUX$MEM VECTOR SYMREF;
     2341    10125    1   DCL XUX$MEM$ PTR;
     2342    10126
     2343    10127        %XUX$INFO;
     2344    10279        %XUX$LEGAL_OPTIONS(NAME=LEGAL,STCLASS="BASED(P_PARAM.USER$)");
     2345    10406
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:325  
     2346    10407    1   DCL REC_INDEX(0:1023) UBIN BASED;
     2347    10408
     2348    10409        /*
     2349    10410             Entries
     2350    10411        */
     2351    10412
     2352    10413    1   DCL XUX$GETLINE ENTRY(1) ALTRET;
     2353    10414    1   DCL XUX$ERROR ENTRY(8) ALTRET;
     2354    10415    1   DCL XUX$ERROR1 ENTRY(8) ALTRET;
     2355    10416
     2356    10417        /*
     2357    10418             Local data
     2358    10419        */
     2359    10420
     2360    10421        %XUX$PARAM_NO_PARSE(STCLASS=CONSTANT,DISP_ONLY=YES);
     2361    10532        %XUX$PARAM_NO_PARSE(NAME=GETLINE_PARAM,STCLASS=AUTO);
     2362    10643
     2363    10644        %EJECT;
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:326  
     2364    10645
     2365    10646    1       XUX$MEM$ = VBASE(XUX$MEM);

  10646  2 000002   000001 236000 xsym               LDQ     XUX$MEM+1
         2 000003   200004 756100                    STQ     XUX$MEM$,,AUTO

     2366    10647
     2367    10648    2       DO CASE(P_PARAM.TYPE);

  10648  2 000004   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000005   000000 236100                    LDQ     0,,PR0
         2 000006   000033 772000                    QRL     27
         2 000007   000005 116007                    CMPQ    5,DL
         2 000010   000012 602006 2                  TNC     s:10648+6,QL
         2 000011   000377 710000 2                  TRA     s:10729
         2 000012   000377 710000 2                  TRA     s:10729
         2 000013   000117 710000 2                  TRA     s:10697
         2 000014   000377 710000 2                  TRA     s:10729
         2 000015   000377 710000 2                  TRA     s:10729
         2 000016   000017 710000 2                  TRA     s:10651

     2368    10649    2       CASE(%INPUT#);

     2369    10650
     2370    10651    2           IF P_PARAM.CHARPOS + 256 > XUX$INFO.BUF_SIZE

  10651  2 000017   200004 471500                    LDP1    XUX$MEM$,,AUTO
         2 000020   000004 236100                    LDQ     4,,PR0
         2 000021   000400 036007                    ADLQ    256,DL
         2 000022   100004 116100                    CMPQ    4,,PR1
         2 000023   000033 602000 2                  TNC     s:10660
         2 000024   000033 600000 2                  TZE     s:10660

     2371    10652    3           THEN DO;

     2372    10653    3               CALL XUX$ERROR(%E$XUX#NO_MORE_BUFFER,'0'B)

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:327  
  10653  2 000025   000001 630400 3                  EPPR0   1
         2 000026   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000027   000000 701000 xent               TSX1    XUX$ERROR
         2 000030   000032 702000 2                  TSX2    s:10657
         2 000031   000032 710000 2                  TRA     s:10657

     2373    10654    4               WHENALTRETURN DO;

     2374    10655                   /* Nothing  */
     2375    10656    4               END;

     2376    10657    3               RETURN;

  10657  2 000032   000000 702200 xent               TSX2  ! X66_ARET

     2377    10658    3           END;
     2378    10659
     2379    10660    2           GETLINE_PARAM = XUX$PARAM_NO_PARSE;

  10660  2 000033   000100 100400                    MLR     fill='000'O
         2 000034   000000 000050 1                  ADSC9   XUX$PARAM_NO_PARSE       cn=0,n=40
         2 000035   200006 000050                    ADSC9   GETLINE_PARAM,,AUTO      cn=0,n=40

     2380    10661    2          GETLINE_PARAM.BUFFER_ = VECTOR(PINCRC(PARAM$PCB.TEXT$,P_PARAM.CHARPOS)->BUF)
             10661                    ;

  10661  2 000036   000005 473500                    LDP3    5,,PR0
         2 000037   000004 236100                    LDQ     4,,PR0
         2 000040   300000 474500                    LDP4    0,,PR3
         2 000041   000003 235000 3                  LDA     3
         2 000042   400000 500506                    A9BD    0,QL,PR4
         2 000043   200020 454500                    STP4    GETLINE_PARAM+10,,AUTO
         2 000044   200020 236100                    LDQ     GETLINE_PARAM+10,,AUTO
         2 000045   200006 757100                    STAQ    GETLINE_PARAM,,AUTO

     2381    10662
     2382    10663    2           CALL XUX$GETLINE(GETLINE_PARAM)
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:328  

  10663  2 000046   200006 633500                    EPPR3   GETLINE_PARAM,,AUTO
         2 000047   200020 453500                    STP3    GETLINE_PARAM+10,,AUTO
         2 000050   200020 630500                    EPPR0   GETLINE_PARAM+10,,AUTO
         2 000051   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000052   000000 701000 xent               TSX1    XUX$GETLINE
         2 000053   000055 702000 2                  TSX2    s:10665
         2 000054   000077 710000 2                  TRA     s:10688

     2383    10664    3           WHENALTRETURN DO;

     2384    10665    3               IF GETLINE_PARAM.CMD_COMPLETE

  10665  2 000055   200012 234100                    SZN     GETLINE_PARAM+4,,AUTO
         2 000056   000065 605000 2                  TPL     s:10678

     2385    10666    4               THEN DO;

     2386    10667                   /*    We'll handle this as a special case, but it really
     2387    10668                         indicates that IBEX screwed up and didn't get the
     2388    10669                         amount of input that it should have.
     2389    10670                   */
     2390    10671    4                   CALL XUX$ERROR(%E$XUX#NO_MORE_INPUT,'0'B)

  10671  2 000057   000005 630400 3                  EPPR0   5
         2 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000061   000000 701000 xent               TSX1    XUX$ERROR
         2 000062   000064 702000 2                  TSX2    s:10675
         2 000063   000064 710000 2                  TRA     s:10675

     2391    10672    5                   WHENALTRETURN DO;

     2392    10673                         /*  Nothing */
     2393    10674    5                   END;

     2394    10675    4                   RETURN;

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:329  
  10675  2 000064   000000 702200 xent               TSX2  ! X66_ARET

     2395    10676    4               END;
     2396    10677    4               ELSE DO;

     2397    10678    4                   CALL XUX$ERROR1(GETLINE_PARAM.ERROR_CODE,'0'B)

  10678  2 000065   000002 236000 3                  LDQ     2
         2 000066   200021 756100                    STQ     GETLINE_PARAM+11,,AUTO
         2 000067   200011 630500                    EPPR0   GETLINE_PARAM+3,,AUTO
         2 000070   200020 450500                    STP0    GETLINE_PARAM+10,,AUTO
         2 000071   200020 630500                    EPPR0   GETLINE_PARAM+10,,AUTO
         2 000072   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000073   000000 701000 xent               TSX1    XUX$ERROR1
         2 000074   000076 702000 2                  TSX2    s:10682
         2 000075   000076 710000 2                  TRA     s:10682

     2398    10679    5                   WHENALTRETURN DO;

     2399    10680                      /* Nothing */
     2400    10681    5                   END;

     2401    10682    4                   RETURN;

  10682  2 000076   000000 702200 xent               TSX2  ! X66_ARET

     2402    10683    4               END;
     2403    10684    3           END;
     2404    10685
     2405    10686        /* Now indicate that the buffer has been extended and return */
     2406    10687
     2407    10688    2           PARAM$PCB.NCHARS = PARAM$PCB.NCHARS + GETLINE_PARAM.CMD_LEN - 1;

  10688  2 000077   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000100   000005 471500                    LDP1    5,,PR0
         2 000101   200010 236100                    LDQ     GETLINE_PARAM+2,,AUTO
         2 000102   000022 732000                    QRS     18
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:330  
         2 000103   100011 036100                    ADLQ    9,,PR1
         2 000104   000001 136007                    SBLQ    1,DL
         2 000105   100011 756100                    STQ     9,,PR1

     2408    10689    2           XUX$INFO.REC_INDEX$->REC_INDEX(XUX$INFO.RECNO) = P_PARAM.CHARPOS;

  10689  2 000106   200004 471500                    LDP1    XUX$MEM$,,AUTO
         2 000107   100001 473500                    LDP3    1,,PR1
         2 000110   100003 720100                    LXL0    3,,PR1
         2 000111   000004 235100                    LDA     4,,PR0
         2 000112   300000 755110                    STA     0,X0,PR3

     2409    10690    2           XUX$INFO.RECNO = XUX$INFO.RECNO + 1;

  10690  2 000113   100003 235100                    LDA     3,,PR1
         2 000114   000001 035007                    ADLA    1,DL
         2 000115   100003 755100                    STA     3,,PR1
         2 000116   000377 710000 2                  TRA     s:10729

     2410    10691        %EJECT;
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:331  
     2411    10692        /*
     2412    10693              Reject illegal options when generating the alternative list
     2413    10694              after a syntax error.
     2414    10695        */
     2415    10696    2       CASE(%PRE#);

     2416    10697    2           IF PARAM$PCB.NXT

  10697  2 000117   000005 471500                    LDP1    5,,PR0
         2 000120   100005 236100                    LDQ     5,,PR1
         2 000121   040000 316007                    CANQ    16384,DL
         2 000122   000377 600000 2                  TZE     s:10729

     2417    10698    3           THEN DO;

     2418    10699    4               DO CASE(P_PARAM.CODE);

  10699  2 000123   000000 720100                    LXL0    0,,PR0
         2 000124   000050 100003                    CMPX0   40,DU
         2 000125   000127 602010 2                  TNC     s:10699+4,X0
         2 000126   000377 710000 2                  TRA     s:10729
         2 000127   000377 710000 2                  TRA     s:10729
         2 000130   000177 710000 2                  TRA     s:10701
         2 000131   000366 710000 2                  TRA     s:10725
         2 000132   000377 710000 2                  TRA     s:10729
         2 000133   000377 710000 2                  TRA     s:10729
         2 000134   000377 710000 2                  TRA     s:10729
         2 000135   000377 710000 2                  TRA     s:10729
         2 000136   000377 710000 2                  TRA     s:10729
         2 000137   000377 710000 2                  TRA     s:10729
         2 000140   000377 710000 2                  TRA     s:10729
         2 000141   000377 710000 2                  TRA     s:10729
         2 000142   000342 710000 2                  TRA     s:10721
         2 000143   000377 710000 2                  TRA     s:10729
         2 000144   000377 710000 2                  TRA     s:10729
         2 000145   000377 710000 2                  TRA     s:10729
         2 000146   000377 710000 2                  TRA     s:10729
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:332  
         2 000147   000210 710000 2                  TRA     s:10703
         2 000150   000210 710000 2                  TRA     s:10703
         2 000151   000222 710000 2                  TRA     s:10705
         2 000152   000222 710000 2                  TRA     s:10705
         2 000153   000272 710000 2                  TRA     s:10713
         2 000154   000272 710000 2                  TRA     s:10713
         2 000155   000272 710000 2                  TRA     s:10713
         2 000156   000304 710000 2                  TRA     s:10715
         2 000157   000304 710000 2                  TRA     s:10715
         2 000160   000304 710000 2                  TRA     s:10715
         2 000161   000234 710000 2                  TRA     s:10707
         2 000162   000234 710000 2                  TRA     s:10707
         2 000163   000354 710000 2                  TRA     s:10723
         2 000164   000246 710000 2                  TRA     s:10709
         2 000165   000246 710000 2                  TRA     s:10709
         2 000166   000246 710000 2                  TRA     s:10709
         2 000167   000316 710000 2                  TRA     s:10717
         2 000170   000316 710000 2                  TRA     s:10717
         2 000171   000316 710000 2                  TRA     s:10717
         2 000172   000260 710000 2                  TRA     s:10711
         2 000173   000260 710000 2                  TRA     s:10711
         2 000174   000330 710000 2                  TRA     s:10719
         2 000175   000330 710000 2                  TRA     s:10719
         2 000176   000330 710000 2                  TRA     s:10719

     2419    10700    4               CASE(%$BC);

     2420    10701    4                   P_PARAM.REJECT = ~ LEGAL.BC#;

  10701  2 000177   000006 473500                    LDP3    6,,PR0
         2 000200   300000 236100                    LDQ     0,,PR3
         2 000201   400000 376003                    ANQ     -131072,DU
         2 000202   400000 676003                    ERQ     -131072,DU
         2 000203   000012 772000                    QRL     10
         2 000204   000000 676100                    ERQ     0,,PR0
         2 000205   000200 376003                    ANQ     128,DU
         2 000206   000000 656100                    ERSQ    0,,PR0
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:333  
         2 000207   000377 710000 2                  TRA     s:10729

     2421    10702    4               CASE(%$LS,%$NLS);

     2422    10703    4                   P_PARAM.REJECT = ~ LEGAL.LS#;

  10703  2 000210   000006 473500                    LDP3    6,,PR0
         2 000211   300000 236100                    LDQ     0,,PR3
         2 000212   000003 736000                    QLS     3
         2 000213   400000 376003                    ANQ     -131072,DU
         2 000214   400000 676003                    ERQ     -131072,DU
         2 000215   000012 772000                    QRL     10
         2 000216   000000 676100                    ERQ     0,,PR0
         2 000217   000200 376003                    ANQ     128,DU
         2 000220   000000 656100                    ERSQ    0,,PR0
         2 000221   000377 710000 2                  TRA     s:10729

     2423    10704    4               CASE(%$OU,%$NOU);

     2424    10705    4                   P_PARAM.REJECT = ~ LEGAL.OU#;

  10705  2 000222   000006 473500                    LDP3    6,,PR0
         2 000223   300000 236100                    LDQ     0,,PR3
         2 000224   000004 736000                    QLS     4
         2 000225   400000 376003                    ANQ     -131072,DU
         2 000226   400000 676003                    ERQ     -131072,DU
         2 000227   000012 772000                    QRL     10
         2 000230   000000 676100                    ERQ     0,,PR0
         2 000231   000200 376003                    ANQ     128,DU
         2 000232   000000 656100                    ERSQ    0,,PR0
         2 000233   000377 710000 2                  TRA     s:10729

     2425    10706    4               CASE(%$SO,%$NSO);

     2426    10707    4                   P_PARAM.REJECT = ~ LEGAL.SO#;

  10707  2 000234   000006 473500                    LDP3    6,,PR0
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:334  
         2 000235   300000 236100                    LDQ     0,,PR3
         2 000236   000007 736000                    QLS     7
         2 000237   400000 376003                    ANQ     -131072,DU
         2 000240   400000 676003                    ERQ     -131072,DU
         2 000241   000012 772000                    QRL     10
         2 000242   000000 676100                    ERQ     0,,PR0
         2 000243   000200 376003                    ANQ     128,DU
         2 000244   000000 656100                    ERSQ    0,,PR0
         2 000245   000377 710000 2                  TRA     s:10729

     2427    10708    4               CASE(%$UI,%$NUI,%$OPTUI);

     2428    10709    4                   P_PARAM.REJECT = ~ LEGAL.UI#;

  10709  2 000246   000006 473500                    LDP3    6,,PR0
         2 000247   300000 236100                    LDQ     0,,PR3
         2 000250   000011 736000                    QLS     9
         2 000251   400000 376003                    ANQ     -131072,DU
         2 000252   400000 676003                    ERQ     -131072,DU
         2 000253   000012 772000                    QRL     10
         2 000254   000000 676100                    ERQ     0,,PR0
         2 000255   000200 376003                    ANQ     128,DU
         2 000256   000000 656100                    ERSQ    0,,PR0
         2 000257   000377 710000 2                  TRA     s:10729

     2429    10710    4               CASE(%$WARN,%$NWARN);

     2430    10711    4                   P_PARAM.REJECT = ~ LEGAL.WARN#;

  10711  2 000260   000006 473500                    LDP3    6,,PR0
         2 000261   300000 236100                    LDQ     0,,PR3
         2 000262   000013 736000                    QLS     11
         2 000263   400000 376003                    ANQ     -131072,DU
         2 000264   400000 676003                    ERQ     -131072,DU
         2 000265   000012 772000                    QRL     10
         2 000266   000000 676100                    ERQ     0,,PR0
         2 000267   000200 376003                    ANQ     128,DU
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:335  
         2 000270   000000 656100                    ERSQ    0,,PR0
         2 000271   000377 710000 2                  TRA     s:10729

     2431    10712    4               CASE(%$PMAP,%$MPMAP,%$NPMAP);

     2432    10713    4                   P_PARAM.REJECT = ~ LEGAL.PMAP#;

  10713  2 000272   000006 473500                    LDP3    6,,PR0
         2 000273   300000 236100                    LDQ     0,,PR3
         2 000274   000005 736000                    QLS     5
         2 000275   400000 376003                    ANQ     -131072,DU
         2 000276   400000 676003                    ERQ     -131072,DU
         2 000277   000012 772000                    QRL     10
         2 000300   000000 676100                    ERQ     0,,PR0
         2 000301   000200 376003                    ANQ     128,DU
         2 000302   000000 656100                    ERSQ    0,,PR0
         2 000303   000377 710000 2                  TRA     s:10729

     2433    10714    4               CASE(%$SCHEMA,%$MSCHEMA,%$NSCHEMA);

     2434    10715    4                   P_PARAM.REJECT = ~ LEGAL.SCHEMA#;

  10715  2 000304   000006 473500                    LDP3    6,,PR0
         2 000305   300000 236100                    LDQ     0,,PR3
         2 000306   000006 736000                    QLS     6
         2 000307   400000 376003                    ANQ     -131072,DU
         2 000310   400000 676003                    ERQ     -131072,DU
         2 000311   000012 772000                    QRL     10
         2 000312   000000 676100                    ERQ     0,,PR0
         2 000313   000200 376003                    ANQ     128,DU
         2 000314   000000 656100                    ERSQ    0,,PR0
         2 000315   000377 710000 2                  TRA     s:10729

     2435    10716    4               CASE(%$UREF,%$MUREF,%$NUREF);

     2436    10717    4                   P_PARAM.REJECT = ~ LEGAL.UREF#;

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:336  
  10717  2 000316   000006 473500                    LDP3    6,,PR0
         2 000317   300000 236100                    LDQ     0,,PR3
         2 000320   000012 736000                    QLS     10
         2 000321   400000 376003                    ANQ     -131072,DU
         2 000322   400000 676003                    ERQ     -131072,DU
         2 000323   000012 772000                    QRL     10
         2 000324   000000 676100                    ERQ     0,,PR0
         2 000325   000200 376003                    ANQ     128,DU
         2 000326   000000 656100                    ERSQ    0,,PR0
         2 000327   000377 710000 2                  TRA     s:10729

     2437    10718    4               CASE(%$XREF,%$MXREF,%$NXREF);

     2438    10719    4                   P_PARAM.REJECT = ~ LEGAL.XREF#;

  10719  2 000330   000006 473500                    LDP3    6,,PR0
         2 000331   300000 236100                    LDQ     0,,PR3
         2 000332   000014 736000                    QLS     12
         2 000333   400000 376003                    ANQ     -131072,DU
         2 000334   400000 676003                    ERQ     -131072,DU
         2 000335   000012 772000                    QRL     10
         2 000336   000000 676100                    ERQ     0,,PR0
         2 000337   000200 376003                    ANQ     128,DU
         2 000340   000000 656100                    ERSQ    0,,PR0
         2 000341   000377 710000 2                  TRA     s:10729

     2439    10720    4               CASE(%$LO_CLASS);

     2440    10721    4                   P_PARAM.REJECT = ~ LEGAL.LO#;

  10721  2 000342   000006 473500                    LDP3    6,,PR0
         2 000343   300000 236100                    LDQ     0,,PR3
         2 000344   000002 736000                    QLS     2
         2 000345   400000 376003                    ANQ     -131072,DU
         2 000346   400000 676003                    ERQ     -131072,DU
         2 000347   000012 772000                    QRL     10
         2 000350   000000 676100                    ERQ     0,,PR0
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:337  
         2 000351   000200 376003                    ANQ     128,DU
         2 000352   000000 656100                    ERSQ    0,,PR0
         2 000353   000377 710000 2                  TRA     s:10729

     2441    10722    4               CASE(%$SRCH);

     2442    10723    4                   P_PARAM.REJECT = ~ LEGAL.SRCH#;

  10723  2 000354   000006 473500                    LDP3    6,,PR0
         2 000355   300000 236100                    LDQ     0,,PR3
         2 000356   000010 736000                    QLS     8
         2 000357   400000 376003                    ANQ     -131072,DU
         2 000360   400000 676003                    ERQ     -131072,DU
         2 000361   000012 772000                    QRL     10
         2 000362   000000 676100                    ERQ     0,,PR0
         2 000363   000200 376003                    ANQ     128,DU
         2 000364   000000 656100                    ERSQ    0,,PR0
         2 000365   000377 710000 2                  TRA     s:10729

     2443    10724    4               CASE(%$DMAP_CLASS);

     2444    10725    4                   P_PARAM.REJECT = ~ LEGAL.DMAP#;

  10725  2 000366   000006 473500                    LDP3    6,,PR0
         2 000367   300000 236100                    LDQ     0,,PR3
         2 000370   000001 736000                    QLS     1
         2 000371   400000 376003                    ANQ     -131072,DU
         2 000372   400000 676003                    ERQ     -131072,DU
         2 000373   000012 772000                    QRL     10
         2 000374   000000 676100                    ERQ     0,,PR0
         2 000375   000200 376003                    ANQ     128,DU
         2 000376   000000 656100                    ERSQ    0,,PR0

     2445    10726    4               END;

     2446    10727    3           END;

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:338  
     2447    10728    2       END;

     2448    10729    1       RETURN;  /* To X$PARSE */

  10729  2 000377   000000 702200 xent               TSX2  ! X66_ARET
     2449    10730
     2450    10731    1   END XUX$MORE_INPUT;
     2451    10732        %EOD;

PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:339  
--  Include file information  --

   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XUX$NODESUBS_C.:E05TOU  is referenced.
   XUX$INTERFACE_M.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure XUX$MORE_INPUT.
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:340  

 **** Variables and constants ****

  ****  Section 001 RoData XUX$MORE_INPUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(360)   r     1 XUX$PARAM_NO_PARSE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P_PARAM                   6-0-0/d STRC(360)   r     1 GETLINE_PARAM
    *0-0-0/w STRC(270)   r     1 P_PARAM                    4-0-0/w PTR         r     1 XUX$MEM$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d VECT        r     1 XUX$MEM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(256)   r     1 BUF                        0-0-0/w STRC(72)    r     1 LEGAL
     0-0-0/w STRC(504)   r     1 PARAM$PCB                  0-0-0/w UBIN        r     1 REC_INDEX(0:1023)
     0-0-0/w STRC(792)   r     1 XUX$INFO


   Procedure XUX$MORE_INPUT requires 256 words for executable code.
   Procedure XUX$MORE_INPUT requires 18 words of local(AUTO) storage.
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:341  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:342  
          MINI XREF LISTING

BUF
     10117**DCL     10661--ASSIGN
GETLINE_PARAM
     10560**DCL     10660<<ASSIGN  10663<>CALL
GETLINE_PARAM.BUFFER_
     10564**DCL     10661<<ASSIGN
GETLINE_PARAM.CMD_COMPLETE
     10625**DCL     10665>>IF
GETLINE_PARAM.CMD_LEN
     10570**DCL     10688>>ASSIGN
GETLINE_PARAM.ERROR_CODE
     10588**DCL     10678<>CALL
LEGAL.BC#
     10318**DCL     10701>>ASSIGN
LEGAL.DMAP#
     10322**DCL     10725>>ASSIGN
LEGAL.LO#
     10327**DCL     10721>>ASSIGN
LEGAL.LS#
     10331**DCL     10703>>ASSIGN
LEGAL.OU#
     10335**DCL     10705>>ASSIGN
LEGAL.PMAP#
     10340**DCL     10713>>ASSIGN
LEGAL.SCHEMA#
     10345**DCL     10715>>ASSIGN
LEGAL.SO#
     10350**DCL     10707>>ASSIGN
LEGAL.SRCH#
     10355**DCL     10723>>ASSIGN
LEGAL.UI#
     10359**DCL     10709>>ASSIGN
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:343  
LEGAL.UREF#
     10364**DCL     10717>>ASSIGN
LEGAL.WARN#
     10368**DCL     10711>>ASSIGN
LEGAL.XREF#
     10373**DCL     10719>>ASSIGN
PARAM$PCB.NCHARS
     10083**DCL     10688<<ASSIGN  10688>>ASSIGN
PARAM$PCB.NXT
      9986**DCL     10697>>IF
PARAM$PCB.TEXT$
      9937**DCL     10661>>ASSIGN
P_PARAM
      9851**DCL        39--PROC
P_PARAM.CHARPOS
      9889**DCL     10651>>IF      10661>>ASSIGN  10689>>ASSIGN
P_PARAM.CODE
      9872**DCL     10699>>DOCASE
P_PARAM.PCB$
      9895**DCL      9936--IMP-PTR 10661>>ASSIGN  10688>>ASSIGN  10688>>ASSIGN  10697>>IF
P_PARAM.REJECT
      9863**DCL     10701<<ASSIGN  10703<<ASSIGN  10705<<ASSIGN  10707<<ASSIGN  10709<<ASSIGN  10711<<ASSIGN
     10713<<ASSIGN  10715<<ASSIGN  10717<<ASSIGN  10719<<ASSIGN  10721<<ASSIGN  10723<<ASSIGN  10725<<ASSIGN
P_PARAM.TYPE
      9852**DCL     10648>>DOCASE
P_PARAM.USER$
      9899**DCL     10314--IMP-PTR 10701>>ASSIGN  10703>>ASSIGN  10705>>ASSIGN  10707>>ASSIGN  10709>>ASSIGN
     10711>>ASSIGN  10713>>ASSIGN  10715>>ASSIGN  10717>>ASSIGN  10719>>ASSIGN  10721>>ASSIGN  10723>>ASSIGN
     10725>>ASSIGN
REC_INDEX
     10407**DCL     10689<<ASSIGN
XUX$ERROR
     10414**DCL-ENT 10653--CALL    10671--CALL
XUX$ERROR1
     10415**DCL-ENT 10678--CALL
XUX$GETLINE
PL6.E3A0      #003=XUX$MORE_INPUT File=XUX$COMMON_OPTIONS.:E05TSI                WED 07/30/97 09:47 Page:344  
     10413**DCL-ENT 10663--CALL
XUX$INFO.BUF_SIZE
     10136**DCL     10651>>IF
XUX$INFO.RECNO
     10135**DCL     10689>>ASSIGN  10690<<ASSIGN  10690>>ASSIGN
XUX$INFO.REC_INDEX$
     10133**DCL     10689>>ASSIGN
XUX$MEM
     10124**DCL     10646>>ASSIGN
XUX$MEM$
     10125**DCL     10131--IMP-PTR 10646<<ASSIGN  10651>>IF      10689>>ASSIGN  10689>>ASSIGN  10690>>ASSIGN
     10690>>ASSIGN
XUX$PARAM_NO_PARSE
     10449**DCL     10660>>ASSIGN

PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:345  
     2452        1        /*T***********************************************************/
     2453        2        /*T*                                                         */
     2454        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2455        4        /*T*                                                         */
     2456        5        /*T***********************************************************/
     2457        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2458        7        /*F*
     2459        8             NAME: XUX$ERROR
     2460        9             PURPOSE:
     2461       10                  This module takes care of errors that occur.
     2462       11             CALL:
     2463       12                  CALL XUX$ERROR (error_code,recoverable,l1,t1,l2,t2,l3,t3) ALTRET
     2464       13             PARAMETERS:
     2465       14                  error_code   - The XUX error code for the error (or the full
     2466       15                                 error code when called at ERROR1.
     2467       16                  recoverable  - '1'B means to return if the message for this
     2468       17                                 error can be printed, altreturn if not. '0'B
     2469       18                                 means always altreturn.
     2470       19                  l1,l2,l3     - lengths for text (t) fields or just numbers if
     2471       20                                 no text field.
     2472       21                  t1,t2,t3     - text fields as above.
     2473       22
     2474       23             DATA:
     2475       24                  The XUX$PARAM structure.
     2476       25             DESCRIPTION:
     2477       26                  This module gets passed an error code which it attempts to
     2478       27                  print through DCB1 and/or DCB2 if present. If an error
     2479       28                  condition occurs, or neither DCB is specified, or
     2480       29                  recoverable is set to '0'B, then ERROR will altreturn.
     2481       30        */
     2482       31
     2483       32        XUX$ERROR:PROC (P_CODE,P_RECOV,P_L1,P_T1,P_L2,P_T2,P_L3,P_T3) ALTRET;
     2484       33
     2485       34        %INCLUDE B_MICROPS_C;
     2486      206        %INCLUDE CP_6;
     2487     5765        %INCLUDE XUX$INTERFACE_M;
     2488     6542
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:346  
     2489     6543    1   DCL P_CODE UBIN PARAM;
     2490     6544        %VLP_ERRCODE(FPTN=P_MON_ERROR_CODE,STCLASS=REDEF P_CODE);
     2491     6589    1   DCL P_RECOV BIT(1) ALIGNED PARAM;
     2492     6590    1   DCL P_L1 SBIN PARAM;
     2493     6591    1   DCL P_L2 SBIN PARAM;
     2494     6592    1   DCL P_L3 SBIN PARAM;
     2495     6593    1   DCL P_T1 CHAR(P_L1) PARAM;
     2496     6594    1   DCL P_T2 CHAR(P_L2) PARAM;
     2497     6595    1   DCL P_T3 CHAR(P_L3) PARAM;
     2498     6596
     2499     6597        %VLP_ERRCODE(FCG=XU,MID=X,STCLASS=CONSTANT);
     2500     6642        %VLP_ERRCODE(FPTN=XUX_ERR,STCLASS=AUTO);
     2501     6687
     2502     6688        %FPT_ERRMSG(FILEACCT=XUX_VLP_ACCT,FILENAME=VLP_NAME,STCLASS=CONSTANT);
     2503     6715        %FPT_ERRMSG(FPTN=ERR,STCLASS=AUTO);
     2504     6742
     2505     6743        %VLP_ACCT(FPTN=XUX_VLP_ACCT,ACCT=':SYS',STCLASS=CONSTANT SYMDEF);
     2506     6756        %VLP_NAME(NAME=':XUERRMSG',STCLASS=CONSTANT);
     2507     6783
     2508     6784    1   DCL 1  U1_FIELD,
     2509     6785    1         2  SIZE UBIN BYTE UNAL,
     2510     6786    1         2  TEXT CHAR(31);
     2511     6787
     2512     6788    1   DCL 1  U2_FIELD,
     2513     6789    1         2  SIZE UBIN BYTE UNAL,
     2514     6790    1         2  TEXT CHAR(31);
     2515     6791
     2516     6792    1   DCL 1  U3_FIELD,
     2517     6793    1         2  SIZE UBIN BYTE UNAL,
     2518     6794    1         2  TEXT CHAR(31);
     2519     6795
     2520     6796    1   DCL ERROR_TEXT CHAR(480);
     2521     6797
     2522     6798    1   DCL TEMP_CHAR CHAR(13);
     2523     6799    1   DCL TEMP_EDIT_CHAR CHAR(13);
     2524     6800    1   DCL TEMP_UBIN UBIN;
     2525     6801
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:347  
     2526     6802        /* Zero suppress with floating - */
     2527     6803    1   DCL MOPSTR(0:3) BIT(9) CONSTANT INIT (%LTE3,ASCBIT(' '),%MFLS12,%INSM1);
     2528     6804
     2529     6805    1   DCL 1 ZERO_FIELD CONSTANT,
     2530     6806    1         2 * UBIN BYTE UNAL INIT (SIZEC('0')),
     2531     6807    1         2 * CHAR(0) INIT ('0');
     2532     6808
     2533     6809        /*
     2534     6810             Global data
     2535     6811        */
     2536     6812
     2537     6813    1   DCL XUX$MEM VECTOR SYMREF;
     2538     6814    1   DCL XUX$MEM$ PTR;
     2539     6815        %XUX$INFO;
     2540     6967        %EJECT;
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:348  
     2541     6968    1       XUX_ERR=VLP_ERRCODE;
     2542     6969
     2543     6970    1       XUX_ERR.ERR# = P_CODE;
     2544     6971    1       GOTO CONTINUE;
     2545     6972
     2546     6973    1   XUX$ERROR1: ENTRY (P_CODE,P_RECOV,P_L1,P_T1,P_L2,P_T2,P_L3,P_T3) ALTRET;
     2547     6974
     2548     6975    1       XUX_ERR = P_MON_ERROR_CODE;
     2549     6976
     2550     6977    1   CONTINUE: ;
     2551     6978
     2552     6979    1       XUX$MEM$ = VBASE(XUX$MEM);
     2553     6980    1       ERR = FPT_ERRMSG;
     2554     6981    1       ERR.V_ = VECTOR(ERR.V);
     2555     6982    1       ERR.CODE_ = VECTOR(XUX_ERR);
     2556     6983    1       ERR.BUF_ = VECTOR(ERROR_TEXT);
     2557     6984    1       ERROR_TEXT = ' ';
     2558     6985    1       ERR.FIELD1_ = VECTOR(NIL);
     2559     6986    1       ERR.FIELD2_ = VECTOR(NIL);
     2560     6987    1       ERR.FIELD3_ = VECTOR(NIL);
     2561     6988    1       ERR.V.OUTDCB1# = XUX$INFO.XUX.DCB1#;
     2562     6989    1       ERR.V.OUTDCB2# = XUX$INFO.XUX.DCB2#;
     2563     6990
     2564     6991    1       XUX$INFO.XUX.ERROR_CODE = XUX_ERR;
     2565     6992
     2566     6993        /*
     2567     6994             At this point, if no DCBs are set, there is no point in
     2568     6995             any further processing, so we'll just alreturn here.
     2569     6996        */
     2570     6997
     2571     6998    1       IF XUX$INFO.XUX.DCB1# = DCBNUM(NIL) AND XUX$INFO.XUX.DCB2# = DCBNUM(NIL)
     2572     6999    2       THEN DO;
     2573     7000    2           XUX$INFO.XUX.ERROR# = '1'B; /* Indicate unprocessed errors */
     2574     7001    2           ALTRETURN;
     2575     7002    2       END;
     2576     7003
     2577     7004        /*  Set up fields for error message */
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:349  
     2578     7005
     2579     7006    1       IF ADDR(P_L1) ~= ADDR(NIL)
     2580     7007    2       THEN DO;
     2581     7008    2           ERR.FIELD1_ = VECTOR(U1_FIELD);
     2582     7009    2           CALL CONVERT_FIELDS(P_T1,P_L1,U1_FIELD);
     2583     7010    2       END;
     2584     7011
     2585     7012    1       IF ADDR(P_L2) ~= ADDR(NIL)
     2586     7013    2       THEN DO;
     2587     7014    2           ERR.FIELD2_ = VECTOR(U2_FIELD);
     2588     7015    2           CALL CONVERT_FIELDS(P_T2,P_L2,U2_FIELD);
     2589     7016    2       END;
     2590     7017
     2591     7018    1       IF ADDR(P_L3) ~= ADDR(NIL)
     2592     7019    2       THEN DO;
     2593     7020    2           ERR.FIELD3_ = VECTOR(U3_FIELD);
     2594     7021    2           CALL CONVERT_FIELDS(P_T3,P_L3,U3_FIELD);
     2595     7022    2       END;
     2596     7023
     2597     7024    1       CALL M$ERRMSG(ERR)
     2598     7025    2       WHENALTRETURN DO;
     2599     7026    2           XUX$INFO.XUX.ERROR# = '1'B;
     2600     7027    2           ALTRETURN;
     2601     7028    2       END;
     2602     7029
     2603     7030    1       IF NOT P_RECOV
     2604     7031    2       THEN DO;
     2605     7032    2           ALTRETURN;
     2606     7033    2       END;
     2607     7034
     2608     7035
     2609     7036        %EJECT;
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:350  
     2610     7037        /*I*
     2611     7038             NAME: CONVERT_FIELDS
     2612     7039             PURPOSE:
     2613     7040                  This procedure converts the fields supplied by calls to the error
     2614     7041                  message routines into the proper form and puts them into the proper
     2615     7042                  location.
     2616     7043             CALL:
     2617     7044                  CALL CONVERT_FIELDS (TEXT,SBIN,FIELD)
     2618     7045             PARAMETERS:
     2619     7046                  TEXT    - The text field to be used
     2620     7047                  SBIN    - the count field to be used
     2621     7048                  FIELD   - The place in which to store the reults
     2622     7049        */
     2623     7050    1   CONVERT_FIELDS: PROC(P_TEXT,P_SBIN,P_FIELD);
     2624     7051
     2625     7052    2   DCL P_TEXT CHAR(P_FIELD.SIZE);
     2626     7053    2   DCL P_SBIN SBIN;
     2627     7054    2   DCL 1 P_FIELD,
     2628     7055    2         2 SIZE UBIN BYTE UNAL,
     2629     7056    2         2 TEXT CHAR(31);
     2630     7057
     2631     7058         /*Check for text being passed*/
     2632     7059    2       IF ADDR(P_TEXT) ~= ADDR(NIL)
     2633     7060    3       THEN DO;
     2634     7061    3           IF P_SBIN > 31
     2635     7062    3           THEN
     2636     7063    3               P_FIELD.SIZE = 31;
     2637     7064    4           ELSE DO;
     2638     7065    4               IF P_SBIN < 0
     2639     7066    4               THEN
     2640     7067    4                   P_FIELD.SIZE = 0;
     2641     7068    4               ELSE
     2642     7069    4                   P_FIELD.SIZE = P_SBIN;
     2643     7070    4           END;
     2644     7071    3           P_FIELD.TEXT = P_TEXT;
     2645     7072    3       END;
     2646     7073         /*Handle no text*/
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:351  
     2647     7074    3       ELSE DO;
     2648     7075    3           CALL BINXCHAR( TEMP_CHAR, P_SBIN );
     2649     7076    3           CALL EDITXCHAR( TEMP_EDIT_CHAR, , , MOPSTR, TEMP_CHAR );
     2650     7077    3           CALL INDEX1R( TEMP_UBIN, ' ', TEMP_EDIT_CHAR );
     2651     7078    3           IF TEMP_UBIN = LENGTHV(TEMP_EDIT_CHAR)
     2652     7079    3           THEN
     2653     7080    3               P_FIELD = ZERO_FIELD;
     2654     7081    4           ELSE DO;
     2655     7082    4               P_FIELD.SIZE = LENGTHV(TEMP_EDIT_CHAR) - TEMP_UBIN;
     2656     7083    4               P_FIELD.TEXT = SUBSTR(TEMP_EDIT_CHAR, TEMP_UBIN + 1);
     2657     7084    4           END;
     2658     7085    3       END;
     2659     7086    2   END CONVERT_FIELDS;
     2660     7087    1   END XUX$ERROR;
     2661     7088        /*F*
     2662     7089                   NAME:  XUX_Linking Information
     2663     7090                        The XUX services reside in the following places:
     2664     7091                        .spf
     2665     7092                        .fif
     2666     7093                        ^^^^LEMUR library:    :ETC_SYSTEM.:SYS
     2667     7094                        .spf 0
     2668     7095                        ^^^^^^^^^^^^^^^^^^^^^^:LIB_SYSTEM.:SYS
     2669     7096                        .fin
     2670     7097
     2671     7098                        ..::IX "Linker"
     2672     7099                        If the program using the XUX services is all
     2673     7100                        written in PL6 and does not make use of a shared
     2674     7101                        library other than :SHARED_SYSTEM, then no
     2675     7102                        special linking information is necessary.
     2676     7103                        The linker will automatically associate
     2677     7104                        :SHARED_SYSTEM with the program and will
     2678     7105                        load the XUX services from the unshared library
     2679     7106                        :ETC_SYSTEM.:SYS.
     2680     7107
     2681     7108                        If the program uses a different shared library,
     2682     7109                        the user should use UNSAT=(:LIB_SYSTEM.:SYS) as an
     2683     7110                        option on the link command.  The linker will
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:352  
     2684     7111                        associate any required modules from the
     2685     7112                        library file.
     2686     7113        */
     2687     7114        /*F*
     2688     7115             NAME:  XUX_DCB Usage
     2689     7116                  The XUX services dynamically acquire any DCBs they need to
     2690     7117                  read and parse the command line.  Optionally, the user may
     2691     7118                  supply DCBs through which any error messages are written
     2692     7119                  by using the DCB1 and DCB2 parameters of the XUX$PARAM
     2693     7120                  macro.
     2694     7121        */
     2695     7122        /*F*
     2696     7123             NAME:  XUX_Error Codes
     2697     7124        The following error conditions can be returned from an XUX service.
     2698     7125        The error will always be returned to the user in standard CP-6
     2699     7126        error code format (VLP_ERRCODE).  If the user of the XUX service
     2700     7127        wishes to report the text of the message, M$ERRMSG should be passed
     2701     7128        the error code returned by XUX.
     2702     7129        ..::L2 "XUX Monitor Errors\\X"
     2703     7130        ..VA$M_FOOTER "\XUX Monitor Errors"
     2704     7131        Any monitor error returned by a monitor service called by XUX will
     2705     7132        be returned by the XUX service that received the error.  These
     2706     7133        should be reported to the user of the program.
     2707     7134        ..::L2 "XUX Normal Errors\\X"
     2708     7135        ..VA$M_FOOTER "\XUX Normal Errors"
     2709     7136        These errors indicate that there is something wrong with the command
     2710     7137        line being parsed, a resource allocation limit was reached, or an
     2711     7138        XUX limit was reached.  In the case of a memory limit being reached,
     2712     7139        the XUX service can be invoked successfully after more memory is
     2713     7140        acquired.
     2714     7141
     2715     7142        From XUX$COMMON_OPTIONS:
     2716     7143
     2717     7144        .inl 4
     2718     7145        E$XUX#BAD_BC^^^^
     2719     7146        The BC unit %U1 specified is not between 1 and 131071.
     2720     7147
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:353  
     2721     7148        E$XUX#BAD_SRCH_FID^^^^
     2722     7149        "%U1" is not a valid SRCH account.
     2723     7150
     2724     7151        E$XUX#CANT_GET_MEM^^^^
     2725     7152        Unable to allocate enough memory to process command line options.
     2726     7153
     2727     7154        E$XUX#CONFLICTING_DMAP_OPTS^^^^
     2728     7155        Conflicting options for DMAP, NDMAP, MDMAP or NMDMAP.
     2729     7156
     2730     7157        E$XUX#DMAP_SCHEMA_CONFLICT^^^^
     2731     7158        NSCHEMA was requested with DMAP or MDMAP.  MSCHEMA will be
     2732     7159        generated instead.
     2733     7160
     2734     7161        E$XUX#DUPE_BC^^^^
     2735     7162        Duplicate BC unit number %U1 found.
     2736     7163
     2737     7164        E$XUX#DUPE_OPTION^^^^
     2738     7165        %U2 was found but %U1 was already specified.
     2739     7166
     2740     7167        E$XUX#ILLEGAL_DCB_FOUND^^^^
     2741     7168        A DCB was specified in the %U1 position, but is not legal
     2742     7169        for this processor.
     2743     7170
     2744     7171        E$XUX#ILLEGAL_OPTION^^^^
     2745     7172        The standard option %U1 is not valid for this processor.
     2746     7173
     2747     7174        E$XUX#NO_MORE_BUFFER^^^^
     2748     7175        The command line options specified were too long to process.
     2749     7176
     2750     7177        E$XUX#PMAP_SCHEMA_CONFLICT^^^^
     2751     7178        NSCHEMA was requested with PMAP or MPMAP.  MSCHEMA will be
     2752     7179        generated instead.
     2753     7180
     2754     7181        E$XUX#SYNTAX_ERROR^^^^
     2755     7182        Syntax error.  Alternatives at this point are:
     2756     7183
     2757     7184        E$XUX#TOO_MANY_BC_UNITS^^^^
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:354  
     2758     7185        More than 8 BC units were specified.
     2759     7186
     2760     7187        E$XUX#TOO_MANY_SRCH_ACCTS^^^^
     2761     7188        More than %U1 accounts were listed in the SRCH option.
     2762     7189        ..::L2 "XUX Programmer Errors\\X"
     2763     7190        ..VA$M_FOOTER "\XUX Programmer Errors"
     2764     7191        These errors arise, for the most part, when a required structure
     2765     7192        or routine is not present.  An exception is E$XUX#BAD_PARSE_NODE
     2766     7193        which indicates that XUX$COMMON_OPTIONS found a node it was not
     2767     7194        prepared for.  This may occur if non-standard nodes are used
     2768     7195        incorrectly.
     2769     7196
     2770     7197        From  XUX$COMMON_OPTIONS:
     2771     7198
     2772     7199        .inl 4
     2773     7200        E$XUX#BAD_PARSE_NODE^^^^
     2774     7201        Internal error: Bad parse node #%U1 encountered.
     2775     7202
     2776     7203        E$XUX#ILLEGAL_NSTD_OPT^^^^
     2777     7204        Internal error: A non-standard option was found but
     2778     7205        XUX$LEGAL_OPTIONS.NSTD was not set.
     2779     7206
     2780     7207        E$XUX#MUST_HAVE_LEGAL_OPTIONS^^^^
     2781     7208        Internal error: No XUX$LEGAL_OPTIONS specified.
     2782     7209
     2783     7210        E$XUX#MUST_HAVE_STD_OPTIONS^^^^
     2784     7211        Internal error: No XUX$STD_OPTIONS specified.
     2785     7212
     2786     7213        E$XUX#NO_BC_STRUCT^^^^
     2787     7214        Internal error: No XUX$BC_UNIT structure specified.
     2788     7215
     2789     7216        E$XUX#NO_PARAM_SPECIFIED^^^^
     2790     7217        Internal error: XUX$COMMON_OPTIONS was called with no parameters.
     2791     7218
     2792     7219        E$XUX#NO_SRCH_LIST_STRUCT^^^^
     2793     7220        Internal error: No XUX$SRCH_LIST structure specified.
     2794     7221
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:355  
     2795     7222        E$XUX#NO_USER_ROUTINE^^^^
     2796     7223        Internal error: Non-standard options have been allowed but
     2797     7224        no user routine has been provided.
     2798     7225
     2799     7226        .inl 0
     2800     7227        From XUX$GETLINE:
     2801     7228
     2802     7229        .inl 4
     2803     7230        E$XUX#BUFFER_IS_NIL^^^^
     2804     7231        No buffer was specified on a call to XUX$GETLINE.
     2805     7232
     2806     7233        E$XUX#CANT_CALL_AGAIN^^^^
     2807     7234        This call to XUX$GETLINE is illegal because of either a
     2808     7235        previous error condition or a previous EOF condition.
     2809     7236        XUX$GETLINE was called after EOF (or end of options
     2810     7237        on B$JIT.CCBUF) or an error occurred without calling
     2811     7238        XUX$CLEANUP in between.
     2812     7239        ..::L2 "XUX User Routine Errors\\X"
     2813     7240        ..VA$M_FOOTER "\XUX User Routine Errors"
     2814     7241        These errors only appear if non-standard nodes are used, as they
     2815     7242        indicate that the user's non-standard node handler
     2816     7243        ALTRETURNed. E$XUX#USER_ROUTINE_BUG is returned when the
     2817     7244        user routine ALTRETURNed to XUX$COMMON_OPTIONS indicating that
     2818     7245        no further processing should be done.
     2819     7246        E$XUX#USER_ROUTINE_ALTRETURNED is returned when the user routine
     2820     7247        ALTRETURNs but indicates that processing is to continue.
     2821     7248
     2822     7249        From XUX$COMMON_OPTIONS:
     2823     7250
     2824     7251        .inl 4
     2825     7252        E$XUX#USER_ROUTINE_ALTRETURNED^^^^
     2826     7253        The non-standard node handler ALTRETURNed.
     2827     7254        .spf 0
     2828     7255        Note:  This message will never be printed out by any XUX
     2829     7256        routine. It is here only so that the user can test
     2830     7257        XUX$PARAM.ERROR_CODE and handle these types of errors.
     2831     7258
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:356  
     2832     7259        E$XUX#USER_ROUTINE_BUG^^^^
     2833     7260        Internal error: The non-standard options user routine
     2834     7261        ALTRETURNed indicating that it could not handle a
     2835     7262        specified option.
     2836     7263        ..::L2 "XUX Internal Errors\\X"
     2837     7264        ..VA$M_FOOTER "\XUX Internal Errors"
     2838     7265        These errors are reported when an internal error occurs within one
     2839     7266        of the XUX routines.  If any of these errors occurs, please
     2840     7267        report it in STARLOG.
     2841     7268
     2842     7269        .inl 4
     2843     7270        E$XUX#BAD_INTERNAL_FID^^^^
     2844     7271        Internal error: Bad internal FID for SRCH list.
     2845     7272        Please report this in STARLOG.
     2846     7273
     2847     7274        E$XUX#INTERNAL_ERROR^^^^
     2848     7275        Internal error: Problem in XUX$COMMON_OPTIONS.
     2849     7276        Please report this in STARLOG.
     2850     7277
     2851     7278        E$XUX#NO_MORE_INPUT^^^^
     2852     7279        Internal error: Unexpected end-of-input from *CONTINUATION_COMMAND.
     2853     7280        Please report this in STARLOG.
     2854     7281        */

PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:357  
--  Include file information  --

   XUX$INTERFACE_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure XUX$ERROR.

   Procedure XUX$ERROR requires 191 words for executable code.
   Procedure XUX$ERROR requires 198 words of local(AUTO) storage.

    No errors detected in file XUX$COMMON_OPTIONS.:E05TSI    .

PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:358  

 Object Unit name= XUX$ERROR                                  File name= XUX$COMMON_OPTIONS.:E05TOU
 UTS= JUL 30 '97 09:48:08.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     35     43  XUX$ERROR
    2   Proc  even  none   191    277  XUX$ERROR
    3  RoData even  none     6      6  XUX$ERROR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        8  XUX$ERROR
     2     13          yes     yes      Std        8  XUX$ERROR1

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1     34  XUX_VLP_ACCT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:359  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XUX$MEM                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:360  


     2452        1        /*T***********************************************************/
     2453        2        /*T*                                                         */
     2454        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2455        4        /*T*                                                         */
     2456        5        /*T***********************************************************/
     2457        6        /*X* DMC,PLM=4,IND=4,CTI=2,DTI=0,ENI=0,ECI=0,CSI=0,MCI,DCI=4 */
     2458        7        /*F*
     2459        8             NAME: XUX$ERROR
     2460        9             PURPOSE:
     2461       10                  This module takes care of errors that occur.
     2462       11             CALL:
     2463       12                  CALL XUX$ERROR (error_code,recoverable,l1,t1,l2,t2,l3,t3) ALTRET
     2464       13             PARAMETERS:
     2465       14                  error_code   - The XUX error code for the error (or the full
     2466       15                                 error code when called at ERROR1.
     2467       16                  recoverable  - '1'B means to return if the message for this
     2468       17                                 error can be printed, altreturn if not. '0'B
     2469       18                                 means always altreturn.
     2470       19                  l1,l2,l3     - lengths for text (t) fields or just numbers if
     2471       20                                 no text field.
     2472       21                  t1,t2,t3     - text fields as above.
     2473       22
     2474       23             DATA:
     2475       24                  The XUX$PARAM structure.
     2476       25             DESCRIPTION:
     2477       26                  This module gets passed an error code which it attempts to
     2478       27                  print through DCB1 and/or DCB2 if present. If an error
     2479       28                  condition occurs, or neither DCB is specified, or
     2480       29                  recoverable is set to '0'B, then ERROR will altreturn.
     2481       30        */
     2482       31
     2483       32        XUX$ERROR:PROC (P_CODE,P_RECOV,P_L1,P_T1,P_L2,P_T2,P_L3,P_T3) ALTRET;

     32  2 000000   000000 700200 xent  XUX$ERROR    TSX0  ! X66_AUTO_N
         2 000001   000306 000010                    ZERO    198,8

PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:361  
     2484       33
     2485       34        %INCLUDE B_MICROPS_C;
     2486      206        %INCLUDE CP_6;
     2487     5765        %INCLUDE XUX$INTERFACE_M;
     2488     6542
     2489     6543    1   DCL P_CODE UBIN PARAM;
     2490     6544        %VLP_ERRCODE(FPTN=P_MON_ERROR_CODE,STCLASS=REDEF P_CODE);
     2491     6589    1   DCL P_RECOV BIT(1) ALIGNED PARAM;
     2492     6590    1   DCL P_L1 SBIN PARAM;
     2493     6591    1   DCL P_L2 SBIN PARAM;
     2494     6592    1   DCL P_L3 SBIN PARAM;
     2495     6593    1   DCL P_T1 CHAR(P_L1) PARAM;
     2496     6594    1   DCL P_T2 CHAR(P_L2) PARAM;
     2497     6595    1   DCL P_T3 CHAR(P_L3) PARAM;
     2498     6596
     2499     6597        %VLP_ERRCODE(FCG=XU,MID=X,STCLASS=CONSTANT);
     2500     6642        %VLP_ERRCODE(FPTN=XUX_ERR,STCLASS=AUTO);
     2501     6687
     2502     6688        %FPT_ERRMSG(FILEACCT=XUX_VLP_ACCT,FILENAME=VLP_NAME,STCLASS=CONSTANT);
     2503     6715        %FPT_ERRMSG(FPTN=ERR,STCLASS=AUTO);
     2504     6742
     2505     6743        %VLP_ACCT(FPTN=XUX_VLP_ACCT,ACCT=':SYS',STCLASS=CONSTANT SYMDEF);
     2506     6756        %VLP_NAME(NAME=':XUERRMSG',STCLASS=CONSTANT);
     2507     6783
     2508     6784    1   DCL 1  U1_FIELD,
     2509     6785    1         2  SIZE UBIN BYTE UNAL,
     2510     6786    1         2  TEXT CHAR(31);
     2511     6787
     2512     6788    1   DCL 1  U2_FIELD,
     2513     6789    1         2  SIZE UBIN BYTE UNAL,
     2514     6790    1         2  TEXT CHAR(31);
     2515     6791
     2516     6792    1   DCL 1  U3_FIELD,
     2517     6793    1         2  SIZE UBIN BYTE UNAL,
     2518     6794    1         2  TEXT CHAR(31);
     2519     6795
     2520     6796    1   DCL ERROR_TEXT CHAR(480);
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:362  
     2521     6797
     2522     6798    1   DCL TEMP_CHAR CHAR(13);
     2523     6799    1   DCL TEMP_EDIT_CHAR CHAR(13);
     2524     6800    1   DCL TEMP_UBIN UBIN;
     2525     6801
     2526     6802        /* Zero suppress with floating - */
     2527     6803    1   DCL MOPSTR(0:3) BIT(9) CONSTANT INIT (%LTE3,ASCBIT(' '),%MFLS12,%INSM1);
     2528     6804
     2529     6805    1   DCL 1 ZERO_FIELD CONSTANT,
     2530     6806    1         2 * UBIN BYTE UNAL INIT (SIZEC('0')),
     2531     6807    1         2 * CHAR(0) INIT ('0');
     2532     6808
     2533     6809        /*
     2534     6810             Global data
     2535     6811        */
     2536     6812
     2537     6813    1   DCL XUX$MEM VECTOR SYMREF;
     2538     6814    1   DCL XUX$MEM$ PTR;
     2539     6815        %XUX$INFO;
     2540     6967        %EJECT;
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:363  
     2541     6968    1       XUX_ERR=VLP_ERRCODE;

   6968  2 000002   000000 236000 1                  LDQ     VLP_ERRCODE
         2 000003   200013 756100                    STQ     XUX_ERR,,AUTO

     2542     6969
     2543     6970    1       XUX_ERR.ERR# = P_CODE;

   6970  2 000004   200003 470500                    LDP0    @P_CODE,,AUTO
         2 000005   000000 236100                    LDQ     0,,PR0
         2 000006   000003 736000                    QLS     3
         2 000007   200013 676100                    ERQ     XUX_ERR,,AUTO
         2 000010   377770 376007                    ANQ     131064,DL
         2 000011   200013 656100                    ERSQ    XUX_ERR,,AUTO

     2544     6971    1       GOTO CONTINUE;

   6971  2 000012   000020 710000 2                  TRA     CONTINUE

     2545     6972
     2546     6973    1   XUX$ERROR1: ENTRY (P_CODE,P_RECOV,P_L1,P_T1,P_L2,P_T2,P_L3,P_T3) ALTRET;

   6973  2 000013   000000 700200 xent  XUX$ERROR1   TSX0  ! X66_AUTO_N
         2 000014   000306 000010                    ZERO    198,8

     2547     6974
     2548     6975    1       XUX_ERR = P_MON_ERROR_CODE;

   6975  2 000015   200003 470500                    LDP0    @P_CODE,,AUTO
         2 000016   000000 236100                    LDQ     0,,PR0
         2 000017   200013 756100                    STQ     XUX_ERR,,AUTO

   6975  2 000020                       CONTINUE     null
     2549     6976
     2550     6977    1   CONTINUE: ;
     2551     6978
     2552     6979    1       XUX$MEM$ = VBASE(XUX$MEM);
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:364  

   6979  2 000020   000001 236000 xsym               LDQ     XUX$MEM+1
         2 000021   200277 756100                    STQ     XUX$MEM$,,AUTO

     2553     6980    1       ERR = FPT_ERRMSG;

   6980  2 000022   000100 100400                    MLR     fill='000'O
         2 000023   000002 000150 1                  ADSC9   FPT_ERRMSG               cn=0,n=104
         2 000024   200014 000150                    ADSC9   ERR,,AUTO                cn=0,n=104

     2554     6981    1       ERR.V_ = VECTOR(ERR.V);

   6981  2 000025   000000 235000 3                  LDA     0
         2 000026   200304 452500                    STP2    @P_FIELD+1,,AUTO
         2 000027   200304 236100                    LDQ     @P_FIELD+1,,AUTO
         2 000030   000042 036003                    ADLQ    34,DU
         2 000031   200014 757100                    STAQ    ERR,,AUTO

     2555     6982    1       ERR.CODE_ = VECTOR(XUX_ERR);

   6982  2 000032   777640 235007                    LDA     -96,DL
         2 000033   200304 452500                    STP2    @P_FIELD+1,,AUTO
         2 000034   200304 236100                    LDQ     @P_FIELD+1,,AUTO
         2 000035   000013 036003                    ADLQ    11,DU
         2 000036   200016 757100                    STAQ    ERR+2,,AUTO

     2556     6983    1       ERR.BUF_ = VECTOR(ERROR_TEXT);

   6983  2 000037   000001 235000 3                  LDA     1
         2 000040   200304 452500                    STP2    @P_FIELD+1,,AUTO
         2 000041   200304 236100                    LDQ     @P_FIELD+1,,AUTO
         2 000042   000076 036003                    ADLQ    62,DU
         2 000043   200020 757100                    STAQ    ERR+4,,AUTO

     2557     6984    1       ERROR_TEXT = ' ';

   6984  2 000044   040100 100400                    MLR     fill='040'O
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:365  
         2 000045   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000046   200076 000740                    ADSC9   ERROR_TEXT,,AUTO         cn=0,n=480

     2558     6985    1       ERR.FIELD1_ = VECTOR(NIL);

   6985  2 000047   000002 237000 3                  LDAQ    2
         2 000050   200030 757100                    STAQ    ERR+12,,AUTO

     2559     6986    1       ERR.FIELD2_ = VECTOR(NIL);

   6986  2 000051   000002 237000 3                  LDAQ    2
         2 000052   200032 757100                    STAQ    ERR+14,,AUTO

     2560     6987    1       ERR.FIELD3_ = VECTOR(NIL);

   6987  2 000053   000002 237000 3                  LDAQ    2
         2 000054   200034 757100                    STAQ    ERR+16,,AUTO

     2561     6988    1       ERR.V.OUTDCB1# = XUX$INFO.XUX.DCB1#;

   6988  2 000055   200277 471500                    LDP1    XUX$MEM$,,AUTO
         2 000056   100015 220100                    LDX0    13,,PR1
         2 000057   200042 440100                    SXL0    ERR+22,,AUTO

     2562     6989    1       ERR.V.OUTDCB2# = XUX$INFO.XUX.DCB2#;

   6989  2 000060   100015 721100                    LXL1    13,,PR1
         2 000061   200043 741100                    STX1    ERR+23,,AUTO

     2563     6990
     2564     6991    1       XUX$INFO.XUX.ERROR_CODE = XUX_ERR;

   6991  2 000062   200013 236100                    LDQ     XUX_ERR,,AUTO
         2 000063   100013 756100                    STQ     11,,PR1

     2565     6992
     2566     6993        /*
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:366  
     2567     6994             At this point, if no DCBs are set, there is no point in
     2568     6995             any further processing, so we'll just alreturn here.
     2569     6996        */
     2570     6997
     2571     6998    1       IF XUX$INFO.XUX.DCB1# = DCBNUM(NIL) AND XUX$INFO.XUX.DCB2# = DCBNUM(NIL)

   6998  2 000064   100015 220100                    LDX0    13,,PR1
         2 000065   000073 601000 2                  TNZ     s:7006
         2 000066   100015 721100                    LXL1    13,,PR1
         2 000067   000073 601000 2                  TNZ     s:7006

     2572     6999    2       THEN DO;

     2573     7000    2           XUX$INFO.XUX.ERROR# = '1'B; /* Indicate unprocessed errors */

   7000  2 000070   400000 236003                    LDQ     -131072,DU
         2 000071   100014 756100                    STQ     12,,PR1

     2574     7001    2           ALTRETURN;

   7001  2 000072   000000 702200 xent               TSX2  ! X66_AALT

     2575     7002    2       END;
     2576     7003
     2577     7004        /*  Set up fields for error message */
     2578     7005
     2579     7006    1       IF ADDR(P_L1) ~= ADDR(NIL)

   7006  2 000073   200005 236100                    LDQ     @P_L1,,AUTO
         2 000074   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000075   000113 600000 2                  TZE     s:7012

     2580     7007    2       THEN DO;

     2581     7008    2           ERR.FIELD1_ = VECTOR(U1_FIELD);

   7008  2 000076   000004 235000 3                  LDA     4
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:367  
         2 000077   200304 452500                    STP2    @P_FIELD+1,,AUTO
         2 000100   200304 236100                    LDQ     @P_FIELD+1,,AUTO
         2 000101   000046 036003                    ADLQ    38,DU
         2 000102   200030 757100                    STAQ    ERR+12,,AUTO

     2582     7009    2           CALL CONVERT_FIELDS(P_T1,P_L1,U1_FIELD);

   7009  2 000103   200046 633500                    EPPR3   U1_FIELD,,AUTO
         2 000104   200303 453500                    STP3    @P_SBIN+1,,AUTO
         2 000105   200005 236100                    LDQ     @P_L1,,AUTO
         2 000106   200302 756100                    STQ     @P_TEXT+1,,AUTO
         2 000107   200006 236100                    LDQ     @P_T1,,AUTO
         2 000110   200301 756100                    STQ     XUX$MEM$+2,,AUTO
         2 000111   000171 701000 2                  TSX1    CONVERT_FIELDS
         2 000112   000000 011000                    NOP     0

     2583     7010    2       END;

     2584     7011
     2585     7012    1       IF ADDR(P_L2) ~= ADDR(NIL)

   7012  2 000113   200007 236100                    LDQ     @P_L2,,AUTO
         2 000114   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000115   000133 600000 2                  TZE     s:7018

     2586     7013    2       THEN DO;

     2587     7014    2           ERR.FIELD2_ = VECTOR(U2_FIELD);

   7014  2 000116   000004 235000 3                  LDA     4
         2 000117   200304 452500                    STP2    @P_FIELD+1,,AUTO
         2 000120   200304 236100                    LDQ     @P_FIELD+1,,AUTO
         2 000121   000056 036003                    ADLQ    46,DU
         2 000122   200032 757100                    STAQ    ERR+14,,AUTO

     2588     7015    2           CALL CONVERT_FIELDS(P_T2,P_L2,U2_FIELD);

PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:368  
   7015  2 000123   200056 630500                    EPPR0   U2_FIELD,,AUTO
         2 000124   200303 450500                    STP0    @P_SBIN+1,,AUTO
         2 000125   200007 236100                    LDQ     @P_L2,,AUTO
         2 000126   200302 756100                    STQ     @P_TEXT+1,,AUTO
         2 000127   200010 236100                    LDQ     @P_T2,,AUTO
         2 000130   200301 756100                    STQ     XUX$MEM$+2,,AUTO
         2 000131   000171 701000 2                  TSX1    CONVERT_FIELDS
         2 000132   000000 011000                    NOP     0

     2589     7016    2       END;

     2590     7017
     2591     7018    1       IF ADDR(P_L3) ~= ADDR(NIL)

   7018  2 000133   200011 236100                    LDQ     @P_L3,,AUTO
         2 000134   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000135   000153 600000 2                  TZE     s:7024

     2592     7019    2       THEN DO;

     2593     7020    2           ERR.FIELD3_ = VECTOR(U3_FIELD);

   7020  2 000136   000004 235000 3                  LDA     4
         2 000137   200304 452500                    STP2    @P_FIELD+1,,AUTO
         2 000140   200304 236100                    LDQ     @P_FIELD+1,,AUTO
         2 000141   000066 036003                    ADLQ    54,DU
         2 000142   200034 757100                    STAQ    ERR+16,,AUTO

     2594     7021    2           CALL CONVERT_FIELDS(P_T3,P_L3,U3_FIELD);

   7021  2 000143   200066 630500                    EPPR0   U3_FIELD,,AUTO
         2 000144   200303 450500                    STP0    @P_SBIN+1,,AUTO
         2 000145   200011 236100                    LDQ     @P_L3,,AUTO
         2 000146   200302 756100                    STQ     @P_TEXT+1,,AUTO
         2 000147   200012 236100                    LDQ     @P_T3,,AUTO
         2 000150   200301 756100                    STQ     XUX$MEM$+2,,AUTO
         2 000151   000171 701000 2                  TSX1    CONVERT_FIELDS
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:369  
         2 000152   000000 011000                    NOP     0

     2595     7022    2       END;

     2596     7023
     2597     7024    1       CALL M$ERRMSG(ERR)

   7024  2 000153   200014 630500                    EPPR0   ERR,,AUTO
         2 000154   420000 713400                    CLIMB   alt,+8192
         2 000155   405000 401760                    pmme    nvectors=11
         2 000156   000160 702000 2                  TSX2    s:7026
         2 000157   000164 710000 2                  TRA     s:7030

     2598     7025    2       WHENALTRETURN DO;

     2599     7026    2           XUX$INFO.XUX.ERROR# = '1'B;

   7026  2 000160   400000 236003                    LDQ     -131072,DU
         2 000161   200277 470500                    LDP0    XUX$MEM$,,AUTO
         2 000162   000014 756100                    STQ     12,,PR0

     2600     7027    2           ALTRETURN;

   7027  2 000163   000000 702200 xent               TSX2  ! X66_AALT

     2601     7028    2       END;
     2602     7029
     2603     7030    1       IF NOT P_RECOV

   7030  2 000164   200004 470500                    LDP0    @P_RECOV,,AUTO
         2 000165   000000 234100                    SZN     0,,PR0
         2 000166   000170 604000 2                  TMI     s:7032+1

     2604     7031    2       THEN DO;

     2605     7032    2           ALTRETURN;

PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:370  
   7032  2 000167   000000 702200 xent               TSX2  ! X66_AALT
         2 000170   000276 710000 2                  TRA     s:7087

     2606     7033    2       END;
     2607     7034
     2608     7035
     2609     7036        %EJECT;
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:371  
     2610     7037        /*I*
     2611     7038             NAME: CONVERT_FIELDS
     2612     7039             PURPOSE:
     2613     7040                  This procedure converts the fields supplied by calls to the error
     2614     7041                  message routines into the proper form and puts them into the proper
     2615     7042                  location.
     2616     7043             CALL:
     2617     7044                  CALL CONVERT_FIELDS (TEXT,SBIN,FIELD)
     2618     7045             PARAMETERS:
     2619     7046                  TEXT    - The text field to be used
     2620     7047                  SBIN    - the count field to be used
     2621     7048                  FIELD   - The place in which to store the reults
     2622     7049        */
     2623     7050    1   CONVERT_FIELDS: PROC(P_TEXT,P_SBIN,P_FIELD);

   7050  2 000171   200300 741300       CONVERT_FIE* STX1  ! XUX$MEM$+1,,AUTO

     2624     7051
     2625     7052    2   DCL P_TEXT CHAR(P_FIELD.SIZE);
     2626     7053    2   DCL P_SBIN SBIN;
     2627     7054    2   DCL 1 P_FIELD,
     2628     7055    2         2 SIZE UBIN BYTE UNAL,
     2629     7056    2         2 TEXT CHAR(31);
     2630     7057
     2631     7058         /*Check for text being passed*/
     2632     7059    2       IF ADDR(P_TEXT) ~= ADDR(NIL)

   7059  2 000172   200301 236100                    LDQ     @P_TEXT,,AUTO
         2 000173   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000174   000232 600000 2                  TZE     s:7075

     2633     7060    3       THEN DO;

     2634     7061    3           IF P_SBIN > 31

   7061  2 000175   200302 470500                    LDP0    @P_SBIN,,AUTO
         2 000176   000000 235100                    LDA     0,,PR0
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:372  
         2 000177   000037 115007                    CMPA    31,DL
         2 000200   000206 604400 2                  TMOZ    s:7065

     2635     7062    3           THEN
     2636     7063    3               P_FIELD.SIZE = 31;

   7063  2 000201   200303 471500                    LDP1    @P_FIELD,,AUTO
         2 000202   000100 101400                    MRL     fill='000'O
         2 000203   000005 000004 3                  ADSC9   5                        cn=0,n=4
         2 000204   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000205   000221 710000 2                  TRA     s:7071

     2637     7064    4           ELSE DO;

     2638     7065    4               IF P_SBIN < 0

   7065  2 000206   000000 115003                    CMPA    0,DU
         2 000207   000215 605000 2                  TPL     s:7069

     2639     7066    4               THEN
     2640     7067    4                   P_FIELD.SIZE = 0;

   7067  2 000210   200303 471500                    LDP1    @P_FIELD,,AUTO
         2 000211   000100 101400                    MRL     fill='000'O
         2 000212   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         2 000213   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000214   000221 710000 2                  TRA     s:7071

     2641     7068    4               ELSE
     2642     7069    4                   P_FIELD.SIZE = P_SBIN;

   7069  2 000215   200303 471500                    LDP1    @P_FIELD,,AUTO
         2 000216   000100 101500                    MRL     fill='000'O
         2 000217   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 000220   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2643     7070    4           END;
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:373  

     2644     7071    3           P_FIELD.TEXT = P_TEXT;

   7071  2 000221   000100 101500                    MRL     fill='000'O
         2 000222   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000223   200304 000002                    ADSC9   @P_FIELD+1,,AUTO         cn=0,n=2
         2 000224   200304 220100                    LDX0    @P_FIELD+1,,AUTO
         2 000225   200301 473500                    LDP3    @P_TEXT,,AUTO
         2 000226   040100 100540                    MLR     fill='040'O
         2 000227   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         2 000230   100000 200037                    ADSC9   0,,PR1                   cn=1,n=31

     2645     7072    3       END;

   7072  2 000231   000274 710000 2                  TRA     s:7086

     2646     7073         /*Handle no text*/
     2647     7074    3       ELSE DO;

     2648     7075    3           CALL BINXCHAR( TEMP_CHAR, P_SBIN );

   7075  2 000232   200302 470500                    LDP0    @P_SBIN,,AUTO
         2 000233   000100 301500                    BTD
         2 000234   000000 000004                    NDSC9   0,,PR0                   cn=0,s=lsgnf,sf=0,n=4
         2 000235   200266 010015                    NDSC9   TEMP_CHAR,,AUTO          cn=0,s=lsgns,sf=0,n=13

     2649     7076    3           CALL EDITXCHAR( TEMP_EDIT_CHAR, , , MOPSTR, TEMP_CHAR );

   7076  2 000236   100000 024500                    MVNE
         2 000237   200266 010015                    NDSC9   TEMP_CHAR,,AUTO          cn=0,s=lsgns,sf=0,n=13
         2 000240   000041 000004 1                  ADSC9   MOPSTR                   cn=0,n=4
         2 000241   200272 000015                    ADSC9   TEMP_EDIT_CHAR,,AUTO     cn=0,n=13

     2650     7077    3           CALL INDEX1R( TEMP_UBIN, ' ', TEMP_EDIT_CHAR );

   7077  2 000242   000000 125500                    SCMR    mask='000'O
         2 000243   200272 000015                    ADSC9   TEMP_EDIT_CHAR,,AUTO     cn=0,n=13
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:374  
         2 000244   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000245   200276 000100                    ARG     TEMP_UBIN,,AUTO
         2 000246   000251 606400 2                  TTN     s:7078
         2 000247   000014 236007                    LDQ     12,DL
         2 000250   200276 156100                    SSQ     TEMP_UBIN,,AUTO

     2651     7078    3           IF TEMP_UBIN = LENGTHV(TEMP_EDIT_CHAR)

   7078  2 000251   200276 235100                    LDA     TEMP_UBIN,,AUTO
         2 000252   000014 115007                    CMPA    12,DL
         2 000253   000261 601000 2                  TNZ     s:7082

     2652     7079    3           THEN
     2653     7080    3               P_FIELD = ZERO_FIELD;

   7080  2 000254   200303 471500                    LDP1    @P_FIELD,,AUTO
         2 000255   000100 100400                    MLR     fill='000'O
         2 000256   000042 000002 1                  ADSC9   ZERO_FIELD               cn=0,n=2
         2 000257   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         2 000260   000274 710000 2                  TRA     s:7086

     2654     7081    4           ELSE DO;

     2655     7082    4               P_FIELD.SIZE = LENGTHV(TEMP_EDIT_CHAR) - TEMP_UBIN;

   7082  2 000261   000014 236007                    LDQ     12,DL
         2 000262   200276 136100                    SBLQ    TEMP_UBIN,,AUTO
         2 000263   200304 756100                    STQ     @P_FIELD+1,,AUTO
         2 000264   200303 471500                    LDP1    @P_FIELD,,AUTO
         2 000265   000100 101500                    MRL     fill='000'O
         2 000266   200304 000004                    ADSC9   @P_FIELD+1,,AUTO         cn=0,n=4
         2 000267   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2656     7083    4               P_FIELD.TEXT = SUBSTR(TEMP_EDIT_CHAR, TEMP_UBIN + 1);

   7083  2 000270   000000 620006                    EAX0    0,QL
         2 000271   040100 100545                    MLR     fill='040'O
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:375  
         2 000272   200272 200010                    ADSC9   TEMP_EDIT_CHAR,A,AUTO    cn=1,n=*X0
         2 000273   100000 200037                    ADSC9   0,,PR1                   cn=1,n=31

     2657     7084    4           END;

     2658     7085    3       END;

     2659     7086    2   END CONVERT_FIELDS;

   7086  2 000274   200300 221300                    LDX1  ! XUX$MEM$+1,,AUTO
         2 000275   000001 702211                    TSX2  ! 1,X1

     2660     7087    1   END XUX$ERROR;

   7087  2 000276   000000 702200 xent               TSX2  ! X66_ARET
     2661     7088        /*F*
     2662     7089                   NAME:  XUX_Linking Information
     2663     7090                        The XUX services reside in the following places:
     2664     7091                        .spf
     2665     7092                        .fif
     2666     7093                        ^^^^LEMUR library:    :ETC_SYSTEM.:SYS
     2667     7094                        .spf 0
     2668     7095                        ^^^^^^^^^^^^^^^^^^^^^^:LIB_SYSTEM.:SYS
     2669     7096                        .fin
     2670     7097
     2671     7098                        ..::IX "Linker"
     2672     7099                        If the program using the XUX services is all
     2673     7100                        written in PL6 and does not make use of a shared
     2674     7101                        library other than :SHARED_SYSTEM, then no
     2675     7102                        special linking information is necessary.
     2676     7103                        The linker will automatically associate
     2677     7104                        :SHARED_SYSTEM with the program and will
     2678     7105                        load the XUX services from the unshared library
     2679     7106                        :ETC_SYSTEM.:SYS.
     2680     7107
     2681     7108                        If the program uses a different shared library,
     2682     7109                        the user should use UNSAT=(:LIB_SYSTEM.:SYS) as an
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:376  
     2683     7110                        option on the link command.  The linker will
     2684     7111                        associate any required modules from the
     2685     7112                        library file.
     2686     7113        */
     2687     7114        /*F*
     2688     7115             NAME:  XUX_DCB Usage
     2689     7116                  The XUX services dynamically acquire any DCBs they need to
     2690     7117                  read and parse the command line.  Optionally, the user may
     2691     7118                  supply DCBs through which any error messages are written
     2692     7119                  by using the DCB1 and DCB2 parameters of the XUX$PARAM
     2693     7120                  macro.
     2694     7121        */
     2695     7122        /*F*
     2696     7123             NAME:  XUX_Error Codes
     2697     7124        The following error conditions can be returned from an XUX service.
     2698     7125        The error will always be returned to the user in standard CP-6
     2699     7126        error code format (VLP_ERRCODE).  If the user of the XUX service
     2700     7127        wishes to report the text of the message, M$ERRMSG should be passed
     2701     7128        the error code returned by XUX.
     2702     7129        ..::L2 "XUX Monitor Errors\\X"
     2703     7130        ..VA$M_FOOTER "\XUX Monitor Errors"
     2704     7131        Any monitor error returned by a monitor service called by XUX will
     2705     7132        be returned by the XUX service that received the error.  These
     2706     7133        should be reported to the user of the program.
     2707     7134        ..::L2 "XUX Normal Errors\\X"
     2708     7135        ..VA$M_FOOTER "\XUX Normal Errors"
     2709     7136        These errors indicate that there is something wrong with the command
     2710     7137        line being parsed, a resource allocation limit was reached, or an
     2711     7138        XUX limit was reached.  In the case of a memory limit being reached,
     2712     7139        the XUX service can be invoked successfully after more memory is
     2713     7140        acquired.
     2714     7141
     2715     7142        From XUX$COMMON_OPTIONS:
     2716     7143
     2717     7144        .inl 4
     2718     7145        E$XUX#BAD_BC^^^^
     2719     7146        The BC unit %U1 specified is not between 1 and 131071.
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:377  
     2720     7147
     2721     7148        E$XUX#BAD_SRCH_FID^^^^
     2722     7149        "%U1" is not a valid SRCH account.
     2723     7150
     2724     7151        E$XUX#CANT_GET_MEM^^^^
     2725     7152        Unable to allocate enough memory to process command line options.
     2726     7153
     2727     7154        E$XUX#CONFLICTING_DMAP_OPTS^^^^
     2728     7155        Conflicting options for DMAP, NDMAP, MDMAP or NMDMAP.
     2729     7156
     2730     7157        E$XUX#DMAP_SCHEMA_CONFLICT^^^^
     2731     7158        NSCHEMA was requested with DMAP or MDMAP.  MSCHEMA will be
     2732     7159        generated instead.
     2733     7160
     2734     7161        E$XUX#DUPE_BC^^^^
     2735     7162        Duplicate BC unit number %U1 found.
     2736     7163
     2737     7164        E$XUX#DUPE_OPTION^^^^
     2738     7165        %U2 was found but %U1 was already specified.
     2739     7166
     2740     7167        E$XUX#ILLEGAL_DCB_FOUND^^^^
     2741     7168        A DCB was specified in the %U1 position, but is not legal
     2742     7169        for this processor.
     2743     7170
     2744     7171        E$XUX#ILLEGAL_OPTION^^^^
     2745     7172        The standard option %U1 is not valid for this processor.
     2746     7173
     2747     7174        E$XUX#NO_MORE_BUFFER^^^^
     2748     7175        The command line options specified were too long to process.
     2749     7176
     2750     7177        E$XUX#PMAP_SCHEMA_CONFLICT^^^^
     2751     7178        NSCHEMA was requested with PMAP or MPMAP.  MSCHEMA will be
     2752     7179        generated instead.
     2753     7180
     2754     7181        E$XUX#SYNTAX_ERROR^^^^
     2755     7182        Syntax error.  Alternatives at this point are:
     2756     7183
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:378  
     2757     7184        E$XUX#TOO_MANY_BC_UNITS^^^^
     2758     7185        More than 8 BC units were specified.
     2759     7186
     2760     7187        E$XUX#TOO_MANY_SRCH_ACCTS^^^^
     2761     7188        More than %U1 accounts were listed in the SRCH option.
     2762     7189        ..::L2 "XUX Programmer Errors\\X"
     2763     7190        ..VA$M_FOOTER "\XUX Programmer Errors"
     2764     7191        These errors arise, for the most part, when a required structure
     2765     7192        or routine is not present.  An exception is E$XUX#BAD_PARSE_NODE
     2766     7193        which indicates that XUX$COMMON_OPTIONS found a node it was not
     2767     7194        prepared for.  This may occur if non-standard nodes are used
     2768     7195        incorrectly.
     2769     7196
     2770     7197        From  XUX$COMMON_OPTIONS:
     2771     7198
     2772     7199        .inl 4
     2773     7200        E$XUX#BAD_PARSE_NODE^^^^
     2774     7201        Internal error: Bad parse node #%U1 encountered.
     2775     7202
     2776     7203        E$XUX#ILLEGAL_NSTD_OPT^^^^
     2777     7204        Internal error: A non-standard option was found but
     2778     7205        XUX$LEGAL_OPTIONS.NSTD was not set.
     2779     7206
     2780     7207        E$XUX#MUST_HAVE_LEGAL_OPTIONS^^^^
     2781     7208        Internal error: No XUX$LEGAL_OPTIONS specified.
     2782     7209
     2783     7210        E$XUX#MUST_HAVE_STD_OPTIONS^^^^
     2784     7211        Internal error: No XUX$STD_OPTIONS specified.
     2785     7212
     2786     7213        E$XUX#NO_BC_STRUCT^^^^
     2787     7214        Internal error: No XUX$BC_UNIT structure specified.
     2788     7215
     2789     7216        E$XUX#NO_PARAM_SPECIFIED^^^^
     2790     7217        Internal error: XUX$COMMON_OPTIONS was called with no parameters.
     2791     7218
     2792     7219        E$XUX#NO_SRCH_LIST_STRUCT^^^^
     2793     7220        Internal error: No XUX$SRCH_LIST structure specified.
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:379  
     2794     7221
     2795     7222        E$XUX#NO_USER_ROUTINE^^^^
     2796     7223        Internal error: Non-standard options have been allowed but
     2797     7224        no user routine has been provided.
     2798     7225
     2799     7226        .inl 0
     2800     7227        From XUX$GETLINE:
     2801     7228
     2802     7229        .inl 4
     2803     7230        E$XUX#BUFFER_IS_NIL^^^^
     2804     7231        No buffer was specified on a call to XUX$GETLINE.
     2805     7232
     2806     7233        E$XUX#CANT_CALL_AGAIN^^^^
     2807     7234        This call to XUX$GETLINE is illegal because of either a
     2808     7235        previous error condition or a previous EOF condition.
     2809     7236        XUX$GETLINE was called after EOF (or end of options
     2810     7237        on B$JIT.CCBUF) or an error occurred without calling
     2811     7238        XUX$CLEANUP in between.
     2812     7239        ..::L2 "XUX User Routine Errors\\X"
     2813     7240        ..VA$M_FOOTER "\XUX User Routine Errors"
     2814     7241        These errors only appear if non-standard nodes are used, as they
     2815     7242        indicate that the user's non-standard node handler
     2816     7243        ALTRETURNed. E$XUX#USER_ROUTINE_BUG is returned when the
     2817     7244        user routine ALTRETURNed to XUX$COMMON_OPTIONS indicating that
     2818     7245        no further processing should be done.
     2819     7246        E$XUX#USER_ROUTINE_ALTRETURNED is returned when the user routine
     2820     7247        ALTRETURNs but indicates that processing is to continue.
     2821     7248
     2822     7249        From XUX$COMMON_OPTIONS:
     2823     7250
     2824     7251        .inl 4
     2825     7252        E$XUX#USER_ROUTINE_ALTRETURNED^^^^
     2826     7253        The non-standard node handler ALTRETURNed.
     2827     7254        .spf 0
     2828     7255        Note:  This message will never be printed out by any XUX
     2829     7256        routine. It is here only so that the user can test
     2830     7257        XUX$PARAM.ERROR_CODE and handle these types of errors.
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:380  
     2831     7258
     2832     7259        E$XUX#USER_ROUTINE_BUG^^^^
     2833     7260        Internal error: The non-standard options user routine
     2834     7261        ALTRETURNed indicating that it could not handle a
     2835     7262        specified option.
     2836     7263        ..::L2 "XUX Internal Errors\\X"
     2837     7264        ..VA$M_FOOTER "\XUX Internal Errors"
     2838     7265        These errors are reported when an internal error occurs within one
     2839     7266        of the XUX routines.  If any of these errors occurs, please
     2840     7267        report it in STARLOG.
     2841     7268
     2842     7269        .inl 4
     2843     7270        E$XUX#BAD_INTERNAL_FID^^^^
     2844     7271        Internal error: Bad internal FID for SRCH list.
     2845     7272        Please report this in STARLOG.
     2846     7273
     2847     7274        E$XUX#INTERNAL_ERROR^^^^
     2848     7275        Internal error: Problem in XUX$COMMON_OPTIONS.
     2849     7276        Please report this in STARLOG.
     2850     7277
     2851     7278        E$XUX#NO_MORE_INPUT^^^^
     2852     7279        Internal error: Unexpected end-of-input from *CONTINUATION_COMMAND.
     2853     7280        Please report this in STARLOG.
     2854     7281        */

PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:381  
--  Include file information  --

   XUX$INTERFACE_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure XUX$ERROR.
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:382  

 **** Variables and constants ****

  ****  Section 001 RoData XUX$ERROR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/d STRC(936)   r     1 FPT_ERRMSG                41-0-0/b BIT (9)     r     1 MOPSTR(0:3)
     0-0-0/w STRC        r     1 VLP_ERRCODE               36-0-0/c STRC(90)    r     1 VLP_NAME
    34-0-0/c STRC(72)    r     1 XUX_VLP_ACCT              42-0-0/c STRC(18)    r     1 ZERO_FIELD

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P_CODE                  303-0-0/w PTR         r     1 @P_FIELD
     5-0-0/w PTR         r     1 @P_L1                      7-0-0/w PTR         r     1 @P_L2
    11-0-0/w PTR         r     1 @P_L3                      4-0-0/w PTR         r     1 @P_RECOV
   302-0-0/w PTR         r     1 @P_SBIN                    6-0-0/w PTR         r     1 @P_T1
    10-0-0/w PTR         r     1 @P_T2                     12-0-0/w PTR         r     1 @P_T3
   301-0-0/w PTR         r     1 @P_TEXT                   14-0-0/d STRC(936)   r     1 ERR
    76-0-0/c CHAR(480)   r     1 ERROR_TEXT                *0-0-0/w UBIN        r     1 P_CODE
    *0-0-0/c STRC(288)   r     1 P_FIELD                   *0-0-0/w SBIN        r     1 P_L1
    *0-0-0/w SBIN        r     1 P_L2                      *0-0-0/w SBIN        r     1 P_L3
    *0-0-0/w STRC        r     1 P_MON_ERROR_CODE          *0-0-0/w BIT         r     1 P_RECOV
    *0-0-0/w SBIN        r     1 P_SBIN                    *0-0-0/c ACHR        r     1 P_T1
    *0-0-0/c ACHR        r     1 P_T2                      *0-0-0/c ACHR        r     1 P_T3
    *0-0-0/c ACHR        r     1 P_TEXT                   266-0-0/c CHAR(13)    r     1 TEMP_CHAR
   272-0-0/c CHAR(13)    r     1 TEMP_EDIT_CHAR           276-0-0/w UBIN        r     1 TEMP_UBIN
    46-0-0/c STRC(288)   r     1 U1_FIELD                  56-0-0/c STRC(288)   r     1 U2_FIELD
    66-0-0/c STRC(288)   r     1 U3_FIELD                 277-0-0/w PTR         r     1 XUX$MEM$
    13-0-0/w STRC        r     1 XUX_ERR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:383  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d VECT        r     1 XUX$MEM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(792)   r     1 XUX$INFO


   Procedure XUX$ERROR requires 191 words for executable code.
   Procedure XUX$ERROR requires 198 words of local(AUTO) storage.

    No errors detected in file XUX$COMMON_OPTIONS.:E05TSI    .
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:384  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:385  
          MINI XREF LISTING

CONTINUE
      6975**LABEL    6971--GOTO
CONVERT_FIELDS
      7050**PROC     7009--CALL     7015--CALL     7021--CALL
ERR
      6726**DCL      6980<<ASSIGN   7024<>CALL
ERR.BUF_
      6726**DCL      6983<<ASSIGN
ERR.CODE_
      6726**DCL      6982<<ASSIGN
ERR.FIELD1_
      6728**DCL      6985<<ASSIGN   7008<<ASSIGN
ERR.FIELD2_
      6729**DCL      6986<<ASSIGN   7014<<ASSIGN
ERR.FIELD3_
      6729**DCL      6987<<ASSIGN   7020<<ASSIGN
ERR.V
      6730**DCL      6981--ASSIGN
ERR.V.OUTDCB1#
      6731**DCL      6988<<ASSIGN
ERR.V.OUTDCB2#
      6731**DCL      6989<<ASSIGN
ERR.V_
      6726**DCL      6981<<ASSIGN
ERROR_TEXT
      6796**DCL      6983--ASSIGN   6984<<ASSIGN
FPT_ERRMSG
      6699**DCL      6980>>ASSIGN
FPT_ERRMSG.V
      6703**DCL      6699--DCLINIT
M$ERRMSG
      5756**DCL-ENT  7024--CALL
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:386  
MOPSTR
      6803**DCL      7076>>CALLBLT
P_CODE
      6543**DCL        32--PROC     6556--REDEF    6970>>ASSIGN   6973--ENTRY
P_FIELD IN PROCEDURE CONVERT_FIELDS
      7054**DCL      7050--PROC     7080<<ASSIGN
P_FIELD.SIZE IN PROCEDURE CONVERT_FIELDS
      7055**DCL      7052--IMP-SIZ  7063<<ASSIGN   7067<<ASSIGN   7069<<ASSIGN   7071>>ASSIGN   7082<<ASSIGN
P_FIELD.TEXT IN PROCEDURE CONVERT_FIELDS
      7056**DCL      7071<<ASSIGN   7083<<ASSIGN
P_L1
      6590**DCL        32--PROC     6593--IMP-SIZ  6973--ENTRY    7006--IF       7009>>CALL     7009<>CALL
P_L2
      6591**DCL        32--PROC     6594--IMP-SIZ  6973--ENTRY    7012--IF       7015>>CALL     7015<>CALL
P_L3
      6592**DCL        32--PROC     6595--IMP-SIZ  6973--ENTRY    7018--IF       7021>>CALL     7021<>CALL
P_MON_ERROR_CODE
      6556**DCL      6975>>ASSIGN
P_RECOV
      6589**DCL        32--PROC     6973--ENTRY    7030>>IF
P_SBIN IN PROCEDURE CONVERT_FIELDS
      7053**DCL      7050--PROC     7061>>IF       7065>>IF       7069>>ASSIGN   7075>>CALLBLT
P_T1
      6593**DCL        32--PROC     6973--ENTRY    7009<>CALL
P_T2
      6594**DCL        32--PROC     6973--ENTRY    7015<>CALL
P_T3
      6595**DCL        32--PROC     6973--ENTRY    7021<>CALL
P_TEXT IN PROCEDURE CONVERT_FIELDS
      7052**DCL      7050--PROC     7059--IF       7071>>ASSIGN
TEMP_CHAR
      6798**DCL      7075<<CALLBLT  7076>>CALLBLT
TEMP_EDIT_CHAR
      6799**DCL      7076<<CALLBLT  7077>>CALLBLT  7078--IF       7082--ASSIGN   7083>>ASSIGN
TEMP_UBIN
      6800**DCL      7077<<CALLBLT  7078>>IF       7082>>ASSIGN   7083>>ASSIGN
PL6.E3A0      #004=XUX$ERROR File=XUX$COMMON_OPTIONS.:E05TSI                     WED 07/30/97 09:48 Page:387  
U1_FIELD
      6784**DCL      7008--ASSIGN   7009<>CALL
U2_FIELD
      6788**DCL      7014--ASSIGN   7015<>CALL
U3_FIELD
      6792**DCL      7020--ASSIGN   7021<>CALL
VLP_ERRCODE
      6609**DCL      6968>>ASSIGN
VLP_NAME
      6781**DCL      6700--DCLINIT
XUX$INFO.XUX.DCB1#
      6948**DCL      6988>>ASSIGN   6998>>IF
XUX$INFO.XUX.DCB2#
      6957**DCL      6989>>ASSIGN   6998>>IF
XUX$INFO.XUX.ERROR#
      6941**DCL      7000<<ASSIGN   7026<<ASSIGN
XUX$INFO.XUX.ERROR_CODE
      6903**DCL      6991<<ASSIGN
XUX$MEM
      6813**DCL      6979>>ASSIGN
XUX$MEM$
      6814**DCL      6819--IMP-PTR  6979<<ASSIGN   6988>>ASSIGN   6989>>ASSIGN   6991>>ASSIGN   6998>>IF
      6998>>IF       7000>>ASSIGN   7026>>ASSIGN
XUX_ERR
      6654**DCL      6968<<ASSIGN   6975<<ASSIGN   6982--ASSIGN   6991>>ASSIGN
XUX_ERR.ERR#
      6684**DCL      6970<<ASSIGN
XUX_VLP_ACCT
      6754**DCL      6700--DCLINIT
ZERO_FIELD
      6805**DCL      7080>>ASSIGN
