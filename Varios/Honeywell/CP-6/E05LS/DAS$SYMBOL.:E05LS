VERSION E05

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:1    
        1        1        /*M* DAS$SYMBOL - SYMBOL SEARCH ROUTINES FOR ANLZ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /*D*    NAME: DAS$SYMSRCH
        9        9                CALL: CALL DAS$SDSRCH(SYM,OUT$) ALTRET;
       10       10                      CALL DAS$EDSRCH(SYM,OUT$) ALTRET;
       11       11                INPUT:   SYM - TEXTC SYMBOL TO FIND.
       12       12                         OUT$ - POINTER TO B$SDEF OR B$EDEF BLOCK IS
       13       13                                RETURNED IN OUT$.
       14       14                DESCRIPTION:
       15       15                   DAS$SDSRCH is called to search for a SYMDEF.  DAS$EDSRCH
       16       16                is called to search for an ENTDEF.  If the search is
       17       17                successful OUT$ points to the B$SDEF or B$EDEF block.  If
       18       18                the alternate return is taken the error code is in DA_SYMERR.
       19       19                                                                           */
       20       20        /**/
       21       21        /**/
       22       22        /*D*    NAME: DAS$SYMINIT
       23       23                CALL: CALL DAS$SYMINIT(FID, NODENUM) ALTRET;
       24       24                INPUT:   FID - RUN UNIT CONTAINING SYMBOLS.
       25       25                         NODENUM - OVERLAY NODE TO INCLUDE SYMBOLS FOR.
       26       26                DESCRIPTION:
       27       27                   DAS$SYMINIT initializes symbol search data to obtain
       28       28                SYMDEFs and ENTDEFs from the specified run unit.  If the
       29       29                alternate return is taken the error code is in DA_SYMERR.
       30       30
       31       31                DA_SYMBOLS_D is the static data module associated with these
       32       32                routines.
       33       33                                                                           */
       34       34        /*D*    NAME: DAS$SYMSRCHPTR
       35       35                CALL: CALL DAS$SDSRCHPTR(SYM,OUT$) ALTRET;
       36       36                      CALL DAS$EDSRCHPTR(SYM,OUT$) ALTRET;
       37       37                DESCRIPTION:
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:2    
       38       38                   These calls are the same as DAS$SDSRCH and DAS$EDSRCH
       39       39                except the pointer returned in OUT$ is the IS pointer to the
       40       40                location of the requested SYMDEF or ENTDEF.
       41       41                                                                           */
       42       42        /*D*    NAME: DAS$IC2PED
       43       43                CALL: CALL DAS$IC2PED(IC,OUT$) ALTRET;
       44       44                DESCRIPTION:
       45       45                   DAS$IC2PED is called to search for the PRIMARY ENTDEF that
       46       46                is closest to IC.  If the search is successful OUT$ points to
       47       47                the B$EDEF block. No error code is set if the alternate return
       48       48                is taken.
       49       49                                                                           */
       50       50        /*D* NAME:        DAS$IC2ED
       51       51             CALL:        CALL DAS$IC2ED(IC,OUT$) ALTRET(ERR);
       52       52             DESCRIPTION: Just like DAS$IC2PED except the search is for
       53       53                          ANY ENTDEF, not just a PRIMARY ENTDEF. */
       54       54        /*D* NAME:        DAS$IC2PEDOFS, DAS$IC2EDOFS
       55       55             CALL:        CALL DAS$IC2xEDOFS(IC,OUT$,OFFSET) ALTRET(ERR);
       56       56             DESCRIPTION: Just like DAS$IC2xED except the OFFSET parameter
       57       57                          specifies the maximum offset allowed on input, and
       58       58                          returns the actual offset on successful return.
       59       59                          Also, OUT$ points to the name text (TEXTC with a
       60       60                          halfword count field. */
       61       61        DAS$SYMSRCH: PROC(SYM,OUT$,OFFSET) ALTRET;
       62       62    1   DCL 1 SYM,
       63       63    1         2 L UBIN BYTE UNAL,
       64       64    1         2 C CHAR(SYM.L);
       65       65    1   DCL OUT$ PTR;
       66       66    1   DCL OFFSET SBIN;
       67       67        /**/
       68       68        %INCLUDE DA_SYMBOLS_R;
       69       81        %INCLUDE B$OBJECT_C;
       70     3511        %INCLUDE DA_PERR_C;
       71     3575        /**/
       72     3576        /* LOCAL DATA */
       73     3577        /**/
       74     3578    1   DCL HIGH SBIN;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:3    
       75     3579    1   DCL LOW SBIN;
       76     3580    1   DCL MID SBIN;
       77     3581    1   DCL LASTMID SBIN;
       78     3582    1   DCL DNAME$ PTR;
       79     3583    1   DCL SYMX SBIN;
       80     3584    1   DCL PFLG BIT(1) ALIGNED;
       81     3585    1   DCL IC UBIN;
       82     3586    1   DCL ICB UBIN BASED ALIGNED;
       83     3587        /**/
       84     3588        %B$SDEF (NAME="B$SDEF(0:0)",STCLASS="BASED(DA_SYMDEF$)");
       85     3642        %B$EDEF (NAME="B$EDEF(0:0)",STCLASS="BASED(DA_ENTDEF$)");
       86     3712        %B$DNAME (NAME=DNAME,STCLASS="BASED(DNAME$)");
       87     3731        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:4    
       88     3732    1   DAS$SDSRCH: ENTRY(SYM,OUT$) ALTRET;
       89     3733    1           DA_SYMBOL=SYM;
       90     3734    1           IF DA_SYMDEF$=ADDR(NIL) THEN
       91     3735    1              CALL SETERR(%E$DA_NO_SYMBOLS) ALTRET(ALT);
       92     3736        /*E*    ERROR:   DAS-E$DA_NO_SYMBOLS
       93     3737                MESSAGE: SYMDEFS/ENTDEFS are not available
       94     3738                                                                           */
       95     3739    1           SYMX=0;
       96     3740    1   SDSRCH: HIGH=DA_SDCTL.STOP(SYMX);
       97     3741    1           LOW=DA_SDCTL.START(SYMX);
       98     3742    1           MID=LOW;
       99     3743    1           LASTMID=HIGH;
      100     3744    2           DO WHILE(MID~=LASTMID);
      101     3745    2              LASTMID=MID;
      102     3746    2              MID=(LOW+HIGH)/2;
      103     3747    2              DNAME$=PINCRW(DA_DNAME$,B$SDEF.NPOINTER(MID));
      104     3748    2              IF DNAME.TEXT<SYM.C THEN LOW=MID;
      105     3749    2              ELSE IF DNAME.TEXT>SYM.C THEN HIGH=MID;
      106     3750    3                 ELSE DO;
      107     3751    3                    OUT$=ADDR(B$SDEF(MID));
      108     3752    3                    RETURN;
      109     3753    3                    END;
      110     3754    2              END;
      111     3755    2           IF SYMX<DA_ALTSYM AND DA_ALTSYM<DA_ALTSHI THEN DO;
      112     3756    2              SYMX=DA_ALTSYM;
      113     3757    2              GOTO SDSRCH;
      114     3758    2              END;
      115     3759    1           CALL SETERR(%E$DA_SYM_NOT_FOUND) ALTRET(ALT);
      116     3760        /*E*    ERROR:   DAS-E$DA_SYM_NOT_FOUND
      117     3761                MESSAGE: Symbol %%U1 %not found.
      118     3762                                                                           */
      119     3763        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:5    
      120     3764    1   DAS$EDSRCH: ENTRY(SYM,OUT$) ALTRET;
      121     3765    1           DA_SYMBOL=SYM;
      122     3766    1           IF DA_ENTDEF$=ADDR(NIL) THEN
      123     3767    1              CALL SETERR(%E$DA_NO_SYMBOLS) ALTRET(ALT);
      124     3768    1           SYMX=0;
      125     3769    1   EDSRCH: HIGH=DA_EDCTL.STOP(SYMX);
      126     3770    1           LOW=DA_EDCTL.START(SYMX);
      127     3771    1           MID=LOW;
      128     3772    1           LASTMID=HIGH;
      129     3773    2           DO WHILE(MID~=LASTMID);
      130     3774    2              LASTMID=MID;
      131     3775    2              MID=(LOW+HIGH)/2;
      132     3776    2              DNAME$=PINCRW(DA_DNAME$,B$EDEF.NPOINTER(MID));
      133     3777    2              IF DNAME.TEXT<SYM.C THEN LOW=MID;
      134     3778    2              ELSE IF DNAME.TEXT>SYM.C THEN HIGH=MID;
      135     3779    3                 ELSE DO;
      136     3780    3                    OUT$=ADDR(B$EDEF(MID));
      137     3781    3                    RETURN;
      138     3782    3                    END;
      139     3783    2              END;
      140     3784    2           IF SYMX<DA_ALTSYM AND DA_ALTSYM<DA_ALTSHI THEN DO;
      141     3785    2              SYMX=DA_ALTSYM;
      142     3786    2              GOTO EDSRCH;
      143     3787    2              END;
      144     3788    1           CALL SETERR(%E$DA_SYM_NOT_FOUND) ALTRET(ALT);
      145     3789    1   ALT:    ALTRETURN;
      146     3790        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:6    
      147     3791    1   DAS$IC2PED: ENTRY(SYM,OUT$) ALTRET;
      148     3792    1   DAS$IC2PEDOFS: ENTRY(SYM,OUT$,OFFSET) ALTRET;
      149     3793    1           PFLG = '1'B;
      150     3794    1           GOTO ICCMN;
      151     3795
      152     3796    1   DAS$IC2ED: ENTRY(SYM,OUT$) ALTRET;
      153     3797    1   DAS$IC2EDOFS: ENTRY(SYM,OUT$,OFFSET) ALTRET;
      154     3798    1           PFLG = '0'B;
      155     3799
      156     3800    1   ICCMN:  IF DA_ENTDEF$=ADDR(NIL) THEN
      157     3801    1              ALTRETURN;
      158     3802    1           LOW=-1;
      159     3803    1           IC=ADDR(SYM)->ICB;
      160     3804    1           SYMX=0;
      161     3805    1   ICSRCH: HIGH=DA_EDCTL.STOP(SYMX);
      162     3806    2           DO MID=DA_EDCTL.START(SYMX) TO HIGH-1;
      163     3807    2              IF B$EDEF.PRI(MID) OR NOT PFLG THEN
      164     3808    2                 IF IC>=B$EDEF.ISADDR(MID) THEN
      165     3809    3                    IF B$EDEF.ISADDR(MID)>LOW THEN DO;
      166     3810    3                       LOW=B$EDEF.ISADDR(MID);
      167     3811    3                       OUT$=ADDR(B$EDEF(MID));
      168     3812    3                       IF LOW=IC THEN GOTO IC2EDONE;
      169     3813    3                       END;
      170     3814    2              END;
      171     3815    1           HIGH=DA_SDCTL.STOP(SYMX);
      172     3816    1           IF DA_SYMDEF$~=ADDR(NIL)
      173     3817    2           THEN DO MID=DA_SDCTL.START(SYMX) TO HIGH-1;
      174     3818    2              IF NOT B$SDEF.CONSTNT(MID) AND /*B$SDEF.AD.LFLAGS.DEFINED(MID) AND*/
      175     3819    3                IC>=B$SDEF.AD.ISADDR(MID) AND B$SDEF.AD.ISADDR(MID)>LOW THEN DO;
      176     3820    3                 LOW=B$SDEF.AD.ISADDR(MID);
      177     3821    3                 OUT$=ADDR(B$SDEF(MID));
      178     3822    3                 IF LOW=IC THEN GOTO IC2EDONE;
      179     3823    3                 END;
      180     3824    2              END;
      181     3825    2           IF SYMX<DA_ALTSYM AND DA_ALTSYM<DA_ALTSHI THEN DO;
      182     3826    2              SYMX=DA_ALTSYM;
      183     3827    2              GOTO ICSRCH;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:7    
      184     3828    2              END;
      185     3829    1           IF LOW<0 THEN ALTRETURN;
      186     3830    1   IC2EDONE:;
      187     3831    1           IF ADDR(OFFSET)=ADDR(NIL) THEN RETURN;
      188     3832    1           IF OFFSET>0 AND IC-LOW>OFFSET THEN ALTRETURN;
      189     3833    1           OFFSET=IC-LOW;
      190     3834    1           OUT$=PINCRW(DA_DNAME$,OUT$->B$EDEF.NPOINTER(0));
      191     3835    1           RETURN;
      192     3836        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:8    
      193     3837    1   SETERR: PROC(CODE) ALTRET;
      194     3838    2   DCL CODE SBIN;
      195     3839        /**/
      196     3840    2           DA_SYMERR='040123000000'O;
      197     3841    2           DA_SYMERR.CODE=CODE;
      198     3842    2           ALTRETURN;
      199     3843    2   END SETERR;
      200     3844    1   END DAS$SYMSRCH;
      201     3845        %EOD;

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:9    
--  Include file information  --

   DA_PERR_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DA_SYMBOLS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAS$SYMSRCH.

   Procedure DAS$SYMSRCH requires 333 words for executable code.
   Procedure DAS$SYMSRCH requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:10   

 Object Unit name= DAS$SYMSRCH                                File name= DAS$SYMBOL.:E05TOU
 UTS= JUL 29 '97 12:53:37.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  DAS$SYMSRCH
    1   Proc  even  none   333    515  DAS$SYMSRCH
    2  RoData even  none     4      4  DAS$SYMSRCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  DAS$SYMSRCH
     1      3          yes     yes      Std        2  DAS$SDSRCH
     1    140          yes     yes      Std        2  DAS$EDSRCH
     1    275          yes     yes      Std        2  DAS$IC2PED
     1    300          yes     yes      Std        3  DAS$IC2PEDOFS
     1    305          yes     yes      Std        2  DAS$IC2ED
     1    310          yes     yes      Std        3  DAS$IC2EDOFS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_ENTDEF$                            DA_SYMDEF$                            DA_DNAME$
     DA_SYMERR                             DA_SYMBOL                             DA_SDCTL
     DA_EDCTL                              DA_ALTSYM                             DA_ALTSHI
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:12   


        1        1        /*M* DAS$SYMBOL - SYMBOL SEARCH ROUTINES FOR ANLZ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        /*D*    NAME: DAS$SYMSRCH
        9        9                CALL: CALL DAS$SDSRCH(SYM,OUT$) ALTRET;
       10       10                      CALL DAS$EDSRCH(SYM,OUT$) ALTRET;
       11       11                INPUT:   SYM - TEXTC SYMBOL TO FIND.
       12       12                         OUT$ - POINTER TO B$SDEF OR B$EDEF BLOCK IS
       13       13                                RETURNED IN OUT$.
       14       14                DESCRIPTION:
       15       15                   DAS$SDSRCH is called to search for a SYMDEF.  DAS$EDSRCH
       16       16                is called to search for an ENTDEF.  If the search is
       17       17                successful OUT$ points to the B$SDEF or B$EDEF block.  If
       18       18                the alternate return is taken the error code is in DA_SYMERR.
       19       19                                                                           */
       20       20        /**/
       21       21        /**/
       22       22        /*D*    NAME: DAS$SYMINIT
       23       23                CALL: CALL DAS$SYMINIT(FID, NODENUM) ALTRET;
       24       24                INPUT:   FID - RUN UNIT CONTAINING SYMBOLS.
       25       25                         NODENUM - OVERLAY NODE TO INCLUDE SYMBOLS FOR.
       26       26                DESCRIPTION:
       27       27                   DAS$SYMINIT initializes symbol search data to obtain
       28       28                SYMDEFs and ENTDEFs from the specified run unit.  If the
       29       29                alternate return is taken the error code is in DA_SYMERR.
       30       30
       31       31                DA_SYMBOLS_D is the static data module associated with these
       32       32                routines.
       33       33                                                                           */
       34       34        /*D*    NAME: DAS$SYMSRCHPTR
       35       35                CALL: CALL DAS$SDSRCHPTR(SYM,OUT$) ALTRET;
       36       36                      CALL DAS$EDSRCHPTR(SYM,OUT$) ALTRET;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:13   
       37       37                DESCRIPTION:
       38       38                   These calls are the same as DAS$SDSRCH and DAS$EDSRCH
       39       39                except the pointer returned in OUT$ is the IS pointer to the
       40       40                location of the requested SYMDEF or ENTDEF.
       41       41                                                                           */
       42       42        /*D*    NAME: DAS$IC2PED
       43       43                CALL: CALL DAS$IC2PED(IC,OUT$) ALTRET;
       44       44                DESCRIPTION:
       45       45                   DAS$IC2PED is called to search for the PRIMARY ENTDEF that
       46       46                is closest to IC.  If the search is successful OUT$ points to
       47       47                the B$EDEF block. No error code is set if the alternate return
       48       48                is taken.
       49       49                                                                           */
       50       50        /*D* NAME:        DAS$IC2ED
       51       51             CALL:        CALL DAS$IC2ED(IC,OUT$) ALTRET(ERR);
       52       52             DESCRIPTION: Just like DAS$IC2PED except the search is for
       53       53                          ANY ENTDEF, not just a PRIMARY ENTDEF. */
       54       54        /*D* NAME:        DAS$IC2PEDOFS, DAS$IC2EDOFS
       55       55             CALL:        CALL DAS$IC2xEDOFS(IC,OUT$,OFFSET) ALTRET(ERR);
       56       56             DESCRIPTION: Just like DAS$IC2xED except the OFFSET parameter
       57       57                          specifies the maximum offset allowed on input, and
       58       58                          returns the actual offset on successful return.
       59       59                          Also, OUT$ points to the name text (TEXTC with a
       60       60                          halfword count field. */
       61       61        DAS$SYMSRCH: PROC(SYM,OUT$,OFFSET) ALTRET;

     61  1 000000   000000 700200 xent  DAS$SYMSRCH  TSX0  ! X66_AUTO_3
         1 000001   000022 000003                    ZERO    18,3
         1 000002   000005 710000 1                  TRA     s:3733

       62       62    1   DCL 1 SYM,
       63       63    1         2 L UBIN BYTE UNAL,
       64       64    1         2 C CHAR(SYM.L);
       65       65    1   DCL OUT$ PTR;
       66       66    1   DCL OFFSET SBIN;
       67       67        /**/
       68       68        %INCLUDE DA_SYMBOLS_R;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:14   
       69       81        %INCLUDE B$OBJECT_C;
       70     3511        %INCLUDE DA_PERR_C;
       71     3575        /**/
       72     3576        /* LOCAL DATA */
       73     3577        /**/
       74     3578    1   DCL HIGH SBIN;
       75     3579    1   DCL LOW SBIN;
       76     3580    1   DCL MID SBIN;
       77     3581    1   DCL LASTMID SBIN;
       78     3582    1   DCL DNAME$ PTR;
       79     3583    1   DCL SYMX SBIN;
       80     3584    1   DCL PFLG BIT(1) ALIGNED;
       81     3585    1   DCL IC UBIN;
       82     3586    1   DCL ICB UBIN BASED ALIGNED;
       83     3587        /**/
       84     3588        %B$SDEF (NAME="B$SDEF(0:0)",STCLASS="BASED(DA_SYMDEF$)");
       85     3642        %B$EDEF (NAME="B$EDEF(0:0)",STCLASS="BASED(DA_ENTDEF$)");
       86     3712        %B$DNAME (NAME=DNAME,STCLASS="BASED(DNAME$)");
       87     3731        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:15   
       88     3732    1   DAS$SDSRCH: ENTRY(SYM,OUT$) ALTRET;

   3732  1 000003   000000 700200 xent  DAS$SDSRCH   TSX0  ! X66_AUTO_3
         1 000004   000022 000003                    ZERO    18,3

       89     3733    1           DA_SYMBOL=SYM;

   3733  1 000005   200003 470500                    LDP0    @SYM,,AUTO
         1 000006   000100 101500                    MRL     fill='000'O
         1 000007   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000010   200020 000002                    ADSC9   @CODE+1,,AUTO            cn=0,n=2
         1 000011   200020 220100                    LDX0    @CODE+1,,AUTO
         1 000012   000001 621010                    EAX1    1,X0
         1 000013   000000 100540                    MLR     fill='000'O
         1 000014   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         1 000015   000000 000040 xsym               ADSC9   DA_SYMBOL                cn=0,n=32

       90     3734    1           IF DA_SYMDEF$=ADDR(NIL) THEN

   3734  1 000016   000000 236000 xsym               LDQ     DA_SYMDEF$
         1 000017   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000020   000025 601000 1                  TNZ     s:3739

       91     3735    1              CALL SETERR(%E$DA_NO_SYMBOLS) ALTRET(ALT);

   3735  1 000021   000001 236000 2                  LDQ     1
         1 000022   200017 756100                    STQ     IC+2,,AUTO
         1 000023   000503 701000 1                  TSX1    SETERR
         1 000024   000274 702000 1                  TSX2    ALT

       92     3736        /*E*    ERROR:   DAS-E$DA_NO_SYMBOLS
       93     3737                MESSAGE: SYMDEFS/ENTDEFS are not available
       94     3738                                                                           */
       95     3739    1           SYMX=0;

   3739  1 000025   200013 450100                    STZ     SYMX,,AUTO

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:16   
       96     3740    1   SDSRCH: HIGH=DA_SDCTL.STOP(SYMX);

   3740  1 000026   200013 720100       SDSRCH       LXL0    SYMX,,AUTO
         1 000027   000000 236010 xsym               LDQ     DA_SDCTL,X0
         1 000030   000022 736000                    QLS     18
         1 000031   000022 732000                    QRS     18
         1 000032   200006 756100                    STQ     HIGH,,AUTO

       97     3741    1           LOW=DA_SDCTL.START(SYMX);

   3741  1 000033   000000 236010 xsym               LDQ     DA_SDCTL,X0
         1 000034   000022 732000                    QRS     18
         1 000035   200007 756100                    STQ     LOW,,AUTO

       98     3742    1           MID=LOW;

   3742  1 000036   200010 756100                    STQ     MID,,AUTO

       99     3743    1           LASTMID=HIGH;

   3743  1 000037   200006 235100                    LDA     HIGH,,AUTO
         1 000040   200011 755100                    STA     LASTMID,,AUTO

      100     3744    2           DO WHILE(MID~=LASTMID);

   3744  1 000041   200011 116100                    CMPQ    LASTMID,,AUTO
         1 000042   000123 600000 1                  TZE     s:3755

      101     3745    2              LASTMID=MID;

   3745  1 000043   200010 235100                    LDA     MID,,AUTO
         1 000044   200011 755100                    STA     LASTMID,,AUTO

      102     3746    2              MID=(LOW+HIGH)/2;

   3746  1 000045   200007 236100                    LDQ     LOW,,AUTO
         1 000046   200006 036100                    ADLQ    HIGH,,AUTO
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:17   
         1 000047   000002 506007                    DIV     2,DL
         1 000050   200010 756100                    STQ     MID,,AUTO

      103     3747    2              DNAME$=PINCRW(DA_DNAME$,B$SDEF.NPOINTER(MID));

   3747  1 000051   200010 235100                    LDA     MID,,AUTO
         1 000052   000001 735000                    ALS     1
         1 000053   000000 470400 xsym               LDP0    DA_SYMDEF$
         1 000054   000001 220105                    LDX0    1,AL,PR0
         1 000055   000000 636010                    EAQ     0,X0
         1 000056   000000 036000 xsym               ADLQ    DA_DNAME$
         1 000057   200012 756100                    STQ     DNAME$,,AUTO

      104     3748    2              IF DNAME.TEXT<SYM.C THEN LOW=MID;

   3748  1 000060   200012 471500                    LDP1    DNAME$,,AUTO
         1 000061   100000 221100                    LDX1    0,,PR1
         1 000062   200003 473500                    LDP3    @SYM,,AUTO
         1 000063   000100 101500                    MRL     fill='000'O
         1 000064   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000065   200020 000002                    ADSC9   @CODE+1,,AUTO            cn=0,n=2
         1 000066   200020 220100                    LDX0    @CODE+1,,AUTO
         1 000067   040140 106540                    CMPC    fill='040'O
         1 000070   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         1 000071   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000072   000076 603000 1                  TRC     s:3749

   3748  1 000073   200010 235100                    LDA     MID,,AUTO
         1 000074   200007 755100                    STA     LOW,,AUTO
         1 000075   000120 710000 1                  TRA     s:3754

      105     3749    2              ELSE IF DNAME.TEXT>SYM.C THEN HIGH=MID;

   3749  1 000076   100000 221100                    LDX1    0,,PR1
         1 000077   000100 101500                    MRL     fill='000'O
         1 000100   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000101   200020 000002                    ADSC9   @CODE+1,,AUTO            cn=0,n=2
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:18   
         1 000102   200020 220100                    LDX0    @CODE+1,,AUTO
         1 000103   040140 106540                    CMPC    fill='040'O
         1 000104   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000105   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         1 000106   000112 603000 1                  TRC     s:3751

   3749  1 000107   200010 235100                    LDA     MID,,AUTO
         1 000110   200006 755100                    STA     HIGH,,AUTO
         1 000111   000120 710000 1                  TRA     s:3754

      106     3750    3                 ELSE DO;

      107     3751    3                    OUT$=ADDR(B$SDEF(MID));

   3751  1 000112   200010 236100                    LDQ     MID,,AUTO
         1 000113   000023 736000                    QLS     19
         1 000114   000000 036000 xsym               ADLQ    DA_SYMDEF$
         1 000115   200004 474500                    LDP4    @OUT$,,AUTO
         1 000116   400000 756100                    STQ     0,,PR4

      108     3752    3                    RETURN;

   3752  1 000117   000000 702200 xent               TSX2  ! X66_ARET

      109     3753    3                    END;
      110     3754    2              END;

   3754  1 000120   200010 236100                    LDQ     MID,,AUTO
         1 000121   200011 116100                    CMPQ    LASTMID,,AUTO
         1 000122   000043 601000 1                  TNZ     s:3745

      111     3755    2           IF SYMX<DA_ALTSYM AND DA_ALTSYM<DA_ALTSHI THEN DO;

   3755  1 000123   200013 236100                    LDQ     SYMX,,AUTO
         1 000124   000000 116000 xsym               CMPQ    DA_ALTSYM
         1 000125   000133 605000 1                  TPL     s:3759
         1 000126   000000 236000 xsym               LDQ     DA_ALTSYM
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:19   
         1 000127   000000 116000 xsym               CMPQ    DA_ALTSHI
         1 000130   000133 605000 1                  TPL     s:3759

      112     3756    2              SYMX=DA_ALTSYM;

   3756  1 000131   200013 756100                    STQ     SYMX,,AUTO

      113     3757    2              GOTO SDSRCH;

   3757  1 000132   000026 710000 1                  TRA     SDSRCH

      114     3758    2              END;
      115     3759    1           CALL SETERR(%E$DA_SYM_NOT_FOUND) ALTRET(ALT);

   3759  1 000133   000003 236000 2                  LDQ     3
         1 000134   200017 756100                    STQ     IC+2,,AUTO
         1 000135   000503 701000 1                  TSX1    SETERR
         1 000136   000274 702000 1                  TSX2    ALT
         1 000137   000142 710000 1                  TRA     s:3765

      116     3760        /*E*    ERROR:   DAS-E$DA_SYM_NOT_FOUND
      117     3761                MESSAGE: Symbol %%U1 %not found.
      118     3762                                                                           */
      119     3763        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:20   
      120     3764    1   DAS$EDSRCH: ENTRY(SYM,OUT$) ALTRET;

   3764  1 000140   000000 700200 xent  DAS$EDSRCH   TSX0  ! X66_AUTO_3
         1 000141   000022 000003                    ZERO    18,3

      121     3765    1           DA_SYMBOL=SYM;

   3765  1 000142   200003 470500                    LDP0    @SYM,,AUTO
         1 000143   000100 101500                    MRL     fill='000'O
         1 000144   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000145   200020 000002                    ADSC9   @CODE+1,,AUTO            cn=0,n=2
         1 000146   200020 220100                    LDX0    @CODE+1,,AUTO
         1 000147   000001 621010                    EAX1    1,X0
         1 000150   000000 100540                    MLR     fill='000'O
         1 000151   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         1 000152   000000 000040 xsym               ADSC9   DA_SYMBOL                cn=0,n=32

      122     3766    1           IF DA_ENTDEF$=ADDR(NIL) THEN

   3766  1 000153   000000 236000 xsym               LDQ     DA_ENTDEF$
         1 000154   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000155   000162 601000 1                  TNZ     s:3768

      123     3767    1              CALL SETERR(%E$DA_NO_SYMBOLS) ALTRET(ALT);

   3767  1 000156   000001 236000 2                  LDQ     1
         1 000157   200017 756100                    STQ     IC+2,,AUTO
         1 000160   000503 701000 1                  TSX1    SETERR
         1 000161   000274 702000 1                  TSX2    ALT

      124     3768    1           SYMX=0;

   3768  1 000162   200013 450100                    STZ     SYMX,,AUTO

      125     3769    1   EDSRCH: HIGH=DA_EDCTL.STOP(SYMX);

   3769  1 000163   200013 720100       EDSRCH       LXL0    SYMX,,AUTO
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:21   
         1 000164   000000 236010 xsym               LDQ     DA_EDCTL,X0
         1 000165   000022 736000                    QLS     18
         1 000166   000022 732000                    QRS     18
         1 000167   200006 756100                    STQ     HIGH,,AUTO

      126     3770    1           LOW=DA_EDCTL.START(SYMX);

   3770  1 000170   000000 236010 xsym               LDQ     DA_EDCTL,X0
         1 000171   000022 732000                    QRS     18
         1 000172   200007 756100                    STQ     LOW,,AUTO

      127     3771    1           MID=LOW;

   3771  1 000173   200010 756100                    STQ     MID,,AUTO

      128     3772    1           LASTMID=HIGH;

   3772  1 000174   200006 235100                    LDA     HIGH,,AUTO
         1 000175   200011 755100                    STA     LASTMID,,AUTO

      129     3773    2           DO WHILE(MID~=LASTMID);

   3773  1 000176   200011 116100                    CMPQ    LASTMID,,AUTO
         1 000177   000260 600000 1                  TZE     s:3784

      130     3774    2              LASTMID=MID;

   3774  1 000200   200010 235100                    LDA     MID,,AUTO
         1 000201   200011 755100                    STA     LASTMID,,AUTO

      131     3775    2              MID=(LOW+HIGH)/2;

   3775  1 000202   200007 236100                    LDQ     LOW,,AUTO
         1 000203   200006 036100                    ADLQ    HIGH,,AUTO
         1 000204   000002 506007                    DIV     2,DL
         1 000205   200010 756100                    STQ     MID,,AUTO

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:22   
      132     3776    2              DNAME$=PINCRW(DA_DNAME$,B$EDEF.NPOINTER(MID));

   3776  1 000206   200010 235100                    LDA     MID,,AUTO
         1 000207   000001 735000                    ALS     1
         1 000210   000000 470400 xsym               LDP0    DA_ENTDEF$
         1 000211   000001 220105                    LDX0    1,AL,PR0
         1 000212   000000 636010                    EAQ     0,X0
         1 000213   000000 036000 xsym               ADLQ    DA_DNAME$
         1 000214   200012 756100                    STQ     DNAME$,,AUTO

      133     3777    2              IF DNAME.TEXT<SYM.C THEN LOW=MID;

   3777  1 000215   200012 471500                    LDP1    DNAME$,,AUTO
         1 000216   100000 221100                    LDX1    0,,PR1
         1 000217   200003 473500                    LDP3    @SYM,,AUTO
         1 000220   000100 101500                    MRL     fill='000'O
         1 000221   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000222   200020 000002                    ADSC9   @CODE+1,,AUTO            cn=0,n=2
         1 000223   200020 220100                    LDX0    @CODE+1,,AUTO
         1 000224   040140 106540                    CMPC    fill='040'O
         1 000225   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         1 000226   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000227   000233 603000 1                  TRC     s:3778

   3777  1 000230   200010 235100                    LDA     MID,,AUTO
         1 000231   200007 755100                    STA     LOW,,AUTO
         1 000232   000255 710000 1                  TRA     s:3783

      134     3778    2              ELSE IF DNAME.TEXT>SYM.C THEN HIGH=MID;

   3778  1 000233   100000 221100                    LDX1    0,,PR1
         1 000234   000100 101500                    MRL     fill='000'O
         1 000235   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000236   200020 000002                    ADSC9   @CODE+1,,AUTO            cn=0,n=2
         1 000237   200020 220100                    LDX0    @CODE+1,,AUTO
         1 000240   040140 106540                    CMPC    fill='040'O
         1 000241   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:23   
         1 000242   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         1 000243   000247 603000 1                  TRC     s:3780

   3778  1 000244   200010 235100                    LDA     MID,,AUTO
         1 000245   200006 755100                    STA     HIGH,,AUTO
         1 000246   000255 710000 1                  TRA     s:3783

      135     3779    3                 ELSE DO;

      136     3780    3                    OUT$=ADDR(B$EDEF(MID));

   3780  1 000247   200010 236100                    LDQ     MID,,AUTO
         1 000250   000023 736000                    QLS     19
         1 000251   000000 036000 xsym               ADLQ    DA_ENTDEF$
         1 000252   200004 474500                    LDP4    @OUT$,,AUTO
         1 000253   400000 756100                    STQ     0,,PR4

      137     3781    3                    RETURN;

   3781  1 000254   000000 702200 xent               TSX2  ! X66_ARET

      138     3782    3                    END;
      139     3783    2              END;

   3783  1 000255   200010 236100                    LDQ     MID,,AUTO
         1 000256   200011 116100                    CMPQ    LASTMID,,AUTO
         1 000257   000200 601000 1                  TNZ     s:3774

      140     3784    2           IF SYMX<DA_ALTSYM AND DA_ALTSYM<DA_ALTSHI THEN DO;

   3784  1 000260   200013 236100                    LDQ     SYMX,,AUTO
         1 000261   000000 116000 xsym               CMPQ    DA_ALTSYM
         1 000262   000270 605000 1                  TPL     s:3788
         1 000263   000000 236000 xsym               LDQ     DA_ALTSYM
         1 000264   000000 116000 xsym               CMPQ    DA_ALTSHI
         1 000265   000270 605000 1                  TPL     s:3788

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:24   
      141     3785    2              SYMX=DA_ALTSYM;

   3785  1 000266   200013 756100                    STQ     SYMX,,AUTO

      142     3786    2              GOTO EDSRCH;

   3786  1 000267   000163 710000 1                  TRA     EDSRCH

      143     3787    2              END;
      144     3788    1           CALL SETERR(%E$DA_SYM_NOT_FOUND) ALTRET(ALT);

   3788  1 000270   000003 236000 2                  LDQ     3
         1 000271   200017 756100                    STQ     IC+2,,AUTO
         1 000272   000503 701000 1                  TSX1    SETERR
         1 000273   000274 702000 1                  TSX2    ALT

      145     3789    1   ALT:    ALTRETURN;

   3789  1 000274   000000 702200 xent  ALT          TSX2  ! X66_AALT

      146     3790        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:25   
      147     3791    1   DAS$IC2PED: ENTRY(SYM,OUT$) ALTRET;

   3791  1 000275   000000 700200 xent  DAS$IC2PED   TSX0  ! X66_AUTO_3
         1 000276   000022 000003                    ZERO    18,3
         1 000277   000302 710000 1                  TRA     s:3793

      148     3792    1   DAS$IC2PEDOFS: ENTRY(SYM,OUT$,OFFSET) ALTRET;

   3792  1 000300   000000 700200 xent  DAS$IC2PEDO* TSX0  ! X66_AUTO_3
         1 000301   000022 000003                    ZERO    18,3

      149     3793    1           PFLG = '1'B;

   3793  1 000302   400000 236003                    LDQ     -131072,DU
         1 000303   200014 756100                    STQ     PFLG,,AUTO

      150     3794    1           GOTO ICCMN;

   3794  1 000304   000313 710000 1                  TRA     ICCMN

      151     3795
      152     3796    1   DAS$IC2ED: ENTRY(SYM,OUT$) ALTRET;

   3796  1 000305   000000 700200 xent  DAS$IC2ED    TSX0  ! X66_AUTO_3
         1 000306   000022 000003                    ZERO    18,3
         1 000307   000312 710000 1                  TRA     s:3798

      153     3797    1   DAS$IC2EDOFS: ENTRY(SYM,OUT$,OFFSET) ALTRET;

   3797  1 000310   000000 700200 xent  DAS$IC2EDOFS TSX0  ! X66_AUTO_3
         1 000311   000022 000003                    ZERO    18,3

      154     3798    1           PFLG = '0'B;

   3798  1 000312   200014 450100                    STZ     PFLG,,AUTO

      155     3799
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:26   
      156     3800    1   ICCMN:  IF DA_ENTDEF$=ADDR(NIL) THEN

   3800  1 000313   000000 236000 xsym  ICCMN        LDQ     DA_ENTDEF$
         1 000314   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000315   000317 601000 1                  TNZ     s:3802

      157     3801    1              ALTRETURN;

   3801  1 000316   000000 702200 xent               TSX2  ! X66_AALT

      158     3802    1           LOW=-1;

   3802  1 000317   000001 335007                    LCA     1,DL
         1 000320   200007 755100                    STA     LOW,,AUTO

      159     3803    1           IC=ADDR(SYM)->ICB;

   3803  1 000321   200003 470500                    LDP0    @SYM,,AUTO
         1 000322   000000 235100                    LDA     0,,PR0
         1 000323   200015 755100                    STA     IC,,AUTO

      160     3804    1           SYMX=0;

   3804  1 000324   200013 450100                    STZ     SYMX,,AUTO

      161     3805    1   ICSRCH: HIGH=DA_EDCTL.STOP(SYMX);

   3805  1 000325   200013 720100       ICSRCH       LXL0    SYMX,,AUTO
         1 000326   000000 236010 xsym               LDQ     DA_EDCTL,X0
         1 000327   000022 736000                    QLS     18
         1 000330   000022 732000                    QRS     18
         1 000331   200006 756100                    STQ     HIGH,,AUTO

      162     3806    2           DO MID=DA_EDCTL.START(SYMX) TO HIGH-1;

   3806  1 000332   000000 236010 xsym               LDQ     DA_EDCTL,X0
         1 000333   000022 732000                    QRS     18
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:27   
         1 000334   200010 756100                    STQ     MID,,AUTO
         1 000335   000370 710000 1                  TRA     s:3814+1

      163     3807    2              IF B$EDEF.PRI(MID) OR NOT PFLG THEN

   3807  1 000336   200010 235100                    LDA     MID,,AUTO
         1 000337   000001 735000                    ALS     1
         1 000340   000000 470400 xsym               LDP0    DA_ENTDEF$
         1 000341   000001 236105                    LDQ     1,AL,PR0
         1 000342   400000 316007                    CANQ    -131072,DL
         1 000343   000346 601000 1                  TNZ     s:3808
         1 000344   200014 234100                    SZN     PFLG,,AUTO
         1 000345   000367 604000 1                  TMI     s:3814

      164     3808    2                 IF IC>=B$EDEF.ISADDR(MID) THEN

   3808  1 000346   000000 236105                    LDQ     0,AL,PR0
         1 000347   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000350   200015 116100                    CMPQ    IC,,AUTO
         1 000351   000353 600000 1                  TZE     s:3809
         1 000352   000367 603000 1                  TRC     s:3814

      165     3809    3                    IF B$EDEF.ISADDR(MID)>LOW THEN DO;

   3809  1 000353   200007 116100                    CMPQ    LOW,,AUTO
         1 000354   000367 604400 1                  TMOZ    s:3814

      166     3810    3                       LOW=B$EDEF.ISADDR(MID);

   3810  1 000355   200007 756100                    STQ     LOW,,AUTO

      167     3811    3                       OUT$=ADDR(B$EDEF(MID));

   3811  1 000356   200010 236100                    LDQ     MID,,AUTO
         1 000357   000023 736000                    QLS     19
         1 000360   000000 036000 xsym               ADLQ    DA_ENTDEF$
         1 000361   200004 471500                    LDP1    @OUT$,,AUTO
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:28   
         1 000362   100000 756100                    STQ     0,,PR1

      168     3812    3                       IF LOW=IC THEN GOTO IC2EDONE;

   3812  1 000363   200007 236100                    LDQ     LOW,,AUTO
         1 000364   000367 604000 1                  TMI     s:3814
         1 000365   200015 116100                    CMPQ    IC,,AUTO
         1 000366   000455 600000 1                  TZE     IC2EDONE

      169     3813    3                       END;

      170     3814    2              END;

   3814  1 000367   200010 054100                    AOS     MID,,AUTO
         1 000370   200010 236100                    LDQ     MID,,AUTO
         1 000371   200006 116100                    CMPQ    HIGH,,AUTO
         1 000372   000336 604000 1                  TMI     s:3807

      171     3815    1           HIGH=DA_SDCTL.STOP(SYMX);

   3815  1 000373   200013 720100                    LXL0    SYMX,,AUTO
         1 000374   000000 236010 xsym               LDQ     DA_SDCTL,X0
         1 000375   000022 736000                    QLS     18
         1 000376   000022 732000                    QRS     18
         1 000377   200006 756100                    STQ     HIGH,,AUTO

      172     3816    1           IF DA_SYMDEF$~=ADDR(NIL)

   3816  1 000400   000000 236000 xsym               LDQ     DA_SYMDEF$
         1 000401   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000402   000442 600000 1                  TZE     s:3825

      173     3817    2           THEN DO MID=DA_SDCTL.START(SYMX) TO HIGH-1;

   3817  1 000403   000000 236010 xsym               LDQ     DA_SDCTL,X0
         1 000404   000022 732000                    QRS     18
         1 000405   200010 756100                    STQ     MID,,AUTO
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:29   
         1 000406   000437 710000 1                  TRA     s:3824+1

      174     3818    2              IF NOT B$SDEF.CONSTNT(MID) AND /*B$SDEF.AD.LFLAGS.DEFINED(MID) AND*/

   3818  1 000407   200010 235100                    LDA     MID,,AUTO
         1 000410   000001 735000                    ALS     1
         1 000411   000000 470400 xsym               LDP0    DA_SYMDEF$
         1 000412   000001 236105                    LDQ     1,AL,PR0
         1 000413   400000 316007                    CANQ    -131072,DL
         1 000414   000436 601000 1                  TNZ     s:3824
         1 000415   000000 236105                    LDQ     0,AL,PR0
         1 000416   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000417   200015 116100                    CMPQ    IC,,AUTO
         1 000420   000422 600000 1                  TZE     s:3818+11
         1 000421   000436 603000 1                  TRC     s:3824
         1 000422   200007 116100                    CMPQ    LOW,,AUTO
         1 000423   000436 604400 1                  TMOZ    s:3824

      175     3819    3                IC>=B$SDEF.AD.ISADDR(MID) AND B$SDEF.AD.ISADDR(MID)>LOW THEN DO;

      176     3820    3                 LOW=B$SDEF.AD.ISADDR(MID);

   3820  1 000424   200007 756100                    STQ     LOW,,AUTO

      177     3821    3                 OUT$=ADDR(B$SDEF(MID));

   3821  1 000425   200010 236100                    LDQ     MID,,AUTO
         1 000426   000023 736000                    QLS     19
         1 000427   000000 036000 xsym               ADLQ    DA_SYMDEF$
         1 000430   200004 471500                    LDP1    @OUT$,,AUTO
         1 000431   100000 756100                    STQ     0,,PR1

      178     3822    3                 IF LOW=IC THEN GOTO IC2EDONE;

   3822  1 000432   200007 236100                    LDQ     LOW,,AUTO
         1 000433   000436 604000 1                  TMI     s:3824
         1 000434   200015 116100                    CMPQ    IC,,AUTO
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:30   
         1 000435   000455 600000 1                  TZE     IC2EDONE

      179     3823    3                 END;

      180     3824    2              END;

   3824  1 000436   200010 054100                    AOS     MID,,AUTO
         1 000437   200010 236100                    LDQ     MID,,AUTO
         1 000440   200006 116100                    CMPQ    HIGH,,AUTO
         1 000441   000407 604000 1                  TMI     s:3818

      181     3825    2           IF SYMX<DA_ALTSYM AND DA_ALTSYM<DA_ALTSHI THEN DO;

   3825  1 000442   200013 236100                    LDQ     SYMX,,AUTO
         1 000443   000000 116000 xsym               CMPQ    DA_ALTSYM
         1 000444   000452 605000 1                  TPL     s:3829
         1 000445   000000 236000 xsym               LDQ     DA_ALTSYM
         1 000446   000000 116000 xsym               CMPQ    DA_ALTSHI
         1 000447   000452 605000 1                  TPL     s:3829

      182     3826    2              SYMX=DA_ALTSYM;

   3826  1 000450   200013 756100                    STQ     SYMX,,AUTO

      183     3827    2              GOTO ICSRCH;

   3827  1 000451   000325 710000 1                  TRA     ICSRCH

      184     3828    2              END;
      185     3829    1           IF LOW<0 THEN ALTRETURN;

   3829  1 000452   200007 235100                    LDA     LOW,,AUTO
         1 000453   000455 605000 1                  TPL     IC2EDONE

   3829  1 000454   000000 702200 xent               TSX2  ! X66_AALT

   3829  1 000455                       IC2EDONE     null
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:31   
      186     3830    1   IC2EDONE:;
      187     3831    1           IF ADDR(OFFSET)=ADDR(NIL) THEN RETURN;

   3831  1 000455   200005 236100                    LDQ     @OFFSET,,AUTO
         1 000456   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000457   000461 601000 1                  TNZ     s:3832

   3831  1 000460   000000 702200 xent               TSX2  ! X66_ARET

      188     3832    1           IF OFFSET>0 AND IC-LOW>OFFSET THEN ALTRETURN;

   3832  1 000461   200005 470500                    LDP0    @OFFSET,,AUTO
         1 000462   000000 235100                    LDA     0,,PR0
         1 000463   000471 604400 1                  TMOZ    s:3833
         1 000464   200015 236100                    LDQ     IC,,AUTO
         1 000465   200007 136100                    SBLQ    LOW,,AUTO
         1 000466   000000 116100                    CMPQ    0,,PR0
         1 000467   000471 604400 1                  TMOZ    s:3833

   3832  1 000470   000000 702200 xent               TSX2  ! X66_AALT

      189     3833    1           OFFSET=IC-LOW;

   3833  1 000471   200015 236100                    LDQ     IC,,AUTO
         1 000472   200007 136100                    SBLQ    LOW,,AUTO
         1 000473   000000 756100                    STQ     0,,PR0

      190     3834    1           OUT$=PINCRW(DA_DNAME$,OUT$->B$EDEF.NPOINTER(0));

   3834  1 000474   200004 471500                    LDP1    @OUT$,,AUTO
         1 000475   100000 473500                    LDP3    0,,PR1
         1 000476   300001 220100                    LDX0    1,,PR3
         1 000477   000000 636010                    EAQ     0,X0
         1 000500   000000 036000 xsym               ADLQ    DA_DNAME$
         1 000501   100000 756100                    STQ     0,,PR1

      191     3835    1           RETURN;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:32   

   3835  1 000502   000000 702200 xent               TSX2  ! X66_ARET

      192     3836        %EJECT;
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:33   
      193     3837    1   SETERR: PROC(CODE) ALTRET;

   3837  1 000503   200016 741300       SETERR       STX1  ! IC+1,,AUTO

      194     3838    2   DCL CODE SBIN;
      195     3839        /**/
      196     3840    2           DA_SYMERR='040123000000'O;

   3840  1 000504   000000 236000 0                  LDQ     0
         1 000505   000000 756000 xsym               STQ     DA_SYMERR

      197     3841    2           DA_SYMERR.CODE=CODE;

   3841  1 000506   200017 470500                    LDP0    @CODE,,AUTO
         1 000507   000000 236100                    LDQ     0,,PR0
         1 000510   000003 736000                    QLS     3
         1 000511   000000 676000 xsym               ERQ     DA_SYMERR
         1 000512   377770 376007                    ANQ     131064,DL
         1 000513   000000 656000 xsym               ERSQ    DA_SYMERR

      198     3842    2           ALTRETURN;

   3842  1 000514   000000 702211                    TSX2  ! 0,X1
      199     3843    2   END SETERR;
      200     3844    1   END DAS$SYMSRCH;
      201     3845        %EOD;

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:34   
--  Include file information  --

   DA_PERR_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DA_SYMBOLS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAS$SYMSRCH.
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:35   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    17-0-0/w PTR         r     1 @CODE                      5-0-0/w PTR         r     1 @OFFSET
     4-0-0/w PTR         r     1 @OUT$                      3-0-0/w PTR         r     1 @SYM
    *0-0-0/w SBIN        r     1 CODE                      12-0-0/w PTR         r     1 DNAME$
     6-0-0/w SBIN        r     1 HIGH                      15-0-0/w UBIN        r     1 IC
    11-0-0/w SBIN        r     1 LASTMID                    7-0-0/w SBIN        r     1 LOW
    10-0-0/w SBIN        r     1 MID                       *0-0-0/w SBIN        r     1 OFFSET
    *0-0-0/w PTR         r     1 OUT$                      14-0-0/w BIT         r     1 PFLG
    *0-0-0/c ASTR(9)     r     1 SYM                       13-0-0/w SBIN        r     1 SYMX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 DA_ALTSHI                  0-0-0/w SBIN        r     1 DA_ALTSYM
     0-0-0/w PTR         r     1 DA_DNAME$
     0-0-0/b STRC        r     1 DA_EDCTL(0:15)
     0-0-0/w PTR         r     1 DA_ENTDEF$
     0-0-0/b STRC        r     1 DA_SDCTL(0:15)
     0-0-0/w STRC(288)   r     1 DA_SYMBOL                  0-0-0/w PTR         r     1 DA_SYMDEF$
     0-0-0/b STRC        r     1 DA_SYMERR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$EDEF(0:0)                0-0-0/w STRC(72)    r     1 B$SDEF(0:0)
     0-0-0/w ASTR(18)    r     1 DNAME                      0-0-0/w UBIN        r     1 ICB

PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:36   

   Procedure DAS$SYMSRCH requires 333 words for executable code.
   Procedure DAS$SYMSRCH requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:37   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:38   
          MINI XREF LISTING

ALT
      3789**LABEL    3735--CALLALT  3759--CALLALT  3767--CALLALT  3788--CALLALT
B$EDEF
      3643**DCL      3780--ASSIGN   3811--ASSIGN
B$EDEF.ISADDR
      3666**DCL      3808>>IF       3809>>IF       3810>>ASSIGN
B$EDEF.NPOINTER
      3668**DCL      3776>>ASSIGN   3834>>ASSIGN
B$EDEF.OU
      3660**DCL      3666--REDEF
B$EDEF.PRI
      3671**DCL      3807>>IF
B$SDEF
      3589**DCL      3751--ASSIGN   3821--ASSIGN
B$SDEF.AD.ISADDR
      3615**DCL      3818>>IF       3818>>IF       3820>>ASSIGN
B$SDEF.AD.OU
      3609**DCL      3615--REDEF
B$SDEF.CONSTNT
      3620**DCL      3818>>IF
B$SDEF.NPOINTER
      3617**DCL      3747>>ASSIGN
B$SDEF.VALUE
      3590**DCL      3593--REDEF
CODE IN PROCEDURE SETERR
      3838**DCL      3837--PROC     3841>>ASSIGN
DA_ALTSHI
        80**DCL      3755>>IF       3784>>IF       3825>>IF
DA_ALTSYM
        80**DCL      3755>>IF       3755>>IF       3756>>ASSIGN   3784>>IF       3784>>IF       3785>>ASSIGN
      3825>>IF       3825>>IF       3826>>ASSIGN
DA_DNAME$
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:39   
        77**DCL      3747>>ASSIGN   3776>>ASSIGN   3834>>ASSIGN
DA_EDCTL.START
        80**DCL      3770>>ASSIGN   3806>>DOINDEX
DA_EDCTL.STOP
        80**DCL      3769>>ASSIGN   3805>>ASSIGN
DA_ENTDEF$
        77**DCL      3643--IMP-PTR  3766>>IF       3776>>ASSIGN   3780>>ASSIGN   3800>>IF       3807>>IF
      3808>>IF       3809>>IF       3810>>ASSIGN   3811>>ASSIGN
DA_SDCTL.START
        79**DCL      3741>>ASSIGN   3817>>DOINDEX
DA_SDCTL.STOP
        79**DCL      3740>>ASSIGN   3815>>ASSIGN
DA_SYMBOL
        78**DCL      3733<<ASSIGN   3765<<ASSIGN
DA_SYMDEF$
        77**DCL      3589--IMP-PTR  3734>>IF       3747>>ASSIGN   3751>>ASSIGN   3816>>IF       3818>>IF
      3818>>IF       3818>>IF       3820>>ASSIGN   3821>>ASSIGN
DA_SYMERR
        77**DCL      3840<<ASSIGN
DA_SYMERR.CODE
        78**DCL      3841<<ASSIGN
DA_SYMSEG.P
        76**DCL        77--REDEF
DNAME.COUNT
      3721**DCL      3728--IMP-SIZ  3748>>IF       3749>>IF       3777>>IF       3778>>IF
DNAME.TEXT
      3728**DCL      3748>>IF       3749>>IF       3777>>IF       3778>>IF
DNAME$
      3582**DCL      3720--IMP-PTR  3747<<ASSIGN   3748>>IF       3748>>IF       3749>>IF       3749>>IF
      3776<<ASSIGN   3777>>IF       3777>>IF       3778>>IF       3778>>IF
EDSRCH
      3769**LABEL    3786--GOTO
HIGH
      3578**DCL      3740<<ASSIGN   3743>>ASSIGN   3746>>ASSIGN   3749<<ASSIGN   3769<<ASSIGN   3772>>ASSIGN
      3775>>ASSIGN   3778<<ASSIGN   3805<<ASSIGN   3806>>DOINDEX  3815<<ASSIGN   3817>>DOINDEX
IC
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:40   
      3585**DCL      3803<<ASSIGN   3808>>IF       3812>>IF       3818>>IF       3822>>IF       3832>>IF
      3833>>ASSIGN
IC2EDONE
      3829**LABEL    3812--GOTO     3822--GOTO
ICB
      3586**DCL      3803>>ASSIGN
ICCMN
      3800**LABEL    3794--GOTO
ICSRCH
      3805**LABEL    3827--GOTO
LASTMID
      3581**DCL      3743<<ASSIGN   3744>>DOWHILE  3745<<ASSIGN   3772<<ASSIGN   3773>>DOWHILE  3774<<ASSIGN
LOW
      3579**DCL      3741<<ASSIGN   3742>>ASSIGN   3746>>ASSIGN   3748<<ASSIGN   3770<<ASSIGN   3771>>ASSIGN
      3775>>ASSIGN   3777<<ASSIGN   3802<<ASSIGN   3809>>IF       3810<<ASSIGN   3812>>IF       3818>>IF
      3820<<ASSIGN   3822>>IF       3829>>IF       3832>>IF       3833>>ASSIGN
MID
      3580**DCL      3742<<ASSIGN   3744>>DOWHILE  3745>>ASSIGN   3746<<ASSIGN   3747>>ASSIGN   3748>>ASSIGN
      3749>>ASSIGN   3751>>ASSIGN   3771<<ASSIGN   3773>>DOWHILE  3774>>ASSIGN   3775<<ASSIGN   3776>>ASSIGN
      3777>>ASSIGN   3778>>ASSIGN   3780>>ASSIGN   3806<<DOINDEX  3807>>IF       3808>>IF       3809>>IF
      3810>>ASSIGN   3811>>ASSIGN   3817<<DOINDEX  3818>>IF       3818>>IF       3818>>IF       3820>>ASSIGN
      3821>>ASSIGN
OFFSET
        66**DCL        61--PROC     3792--ENTRY    3797--ENTRY    3831--IF       3832>>IF       3832>>IF
      3833<<ASSIGN
OUT$
        65**DCL        61--PROC     3732--ENTRY    3751<<ASSIGN   3764--ENTRY    3780<<ASSIGN   3791--ENTRY
      3792--ENTRY    3796--ENTRY    3797--ENTRY    3811<<ASSIGN   3821<<ASSIGN   3834<<ASSIGN   3834>>ASSIGN
PFLG
      3584**DCL      3793<<ASSIGN   3798<<ASSIGN   3807>>IF
SDSRCH
      3740**LABEL    3757--GOTO
SETERR
      3837**PROC     3735--CALL     3759--CALL     3767--CALL     3788--CALL
SYM
        62**DCL        61--PROC     3732--ENTRY    3733>>ASSIGN   3764--ENTRY    3765>>ASSIGN   3791--ENTRY
PL6.E3A0      #001=DAS$SYMSRCH File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:41   
      3792--ENTRY    3796--ENTRY    3797--ENTRY    3803--ASSIGN
SYM.C
        64**DCL      3748>>IF       3749>>IF       3777>>IF       3778>>IF
SYM.L
        63**DCL        64--IMP-SIZ  3733>>ASSIGN   3748>>IF       3749>>IF       3765>>ASSIGN   3777>>IF
      3778>>IF
SYMX
      3583**DCL      3739<<ASSIGN   3740>>ASSIGN   3741>>ASSIGN   3755>>IF       3756<<ASSIGN   3768<<ASSIGN
      3769>>ASSIGN   3770>>ASSIGN   3784>>IF       3785<<ASSIGN   3804<<ASSIGN   3805>>ASSIGN   3806>>DOINDEX
      3815>>ASSIGN   3817>>DOINDEX  3825>>IF       3826<<ASSIGN

PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:42   
      202        1        /*T***********************************************************/
      203        2        /*T*                                                         */
      204        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      205        4        /*T*                                                         */
      206        5        /*T***********************************************************/
      207        6        DAS$SYMSRCHPTR: PROC(SYM,OUT$) ALTRET;
      208        7    1   DCL SYM UBIN BYTE CALIGNED;
      209        8    1   DCL OUT$ PTR;
      210        9    1   DCL OUT REDEF OUT$ UBIN;
      211       10
      212       11    1   DCL DA_DFLT_RADIX SBIN SYMREF;
      213       12        /**/
      214       13    1   DCL DAS$SDSRCH ENTRY(2) ALTRET;
      215       14    1   DCL DAS$EDSRCH ENTRY(2) ALTRET;
      216       15        /**/
      217       16        %INCLUDE B$OBJECT_C;
      218     3446    1   DCL O$ PTR;
      219     3447    1   DCL O REDEF O$ UBIN;
      220     3448        %B$EDEF (NAME=B$EDEF,STCLASS="BASED(O$)");
      221     3518        %B$SDEF (NAME=B$SDEF,STCLASS="BASED(O$)");
      222     3572    1   DCL B$IS$ PTR SYMREF;
      223     3573        %EJECT;
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:43   
      224     3574    1   DAS$SDSRCHPTR: ENTRY(SYM,OUT$) ALTRET;
      225     3575    1           CALL DAS$SDSRCH(SYM,O$) ALTRET(ALT);
      226     3576    1           O=B$SDEF.AD.ISADDR;
      227     3577    1           GOTO MAKE_PTR;
      228     3578    1   DAS$EDSRCHPTR: ENTRY(SYM,OUT$) ALTRET;
      229     3579    1           CALL DAS$EDSRCH(SYM,O$) ALTRET(ALT);
      230     3580    1           O=B$EDEF.ISADDR;
      231     3581    1   MAKE_PTR:;
      232     3582    1           IF DA_DFLT_RADIX>8 THEN OUT = O;
      233     3583    1           ELSE OUT$=PINCRW(B$IS$,O);
      234     3584    1           RETURN;
      235     3585    1   ALT:    ALTRETURN;
      236     3586    1   END DAS$SYMSRCHPTR;
      237     3587        %EOD;

PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:44   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAS$SYMSRCHPTR.

   Procedure DAS$SYMSRCHPTR requires 44 words for executable code.
   Procedure DAS$SYMSRCHPTR requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:45   

 Object Unit name= DAS$SYMSRCHPTR                             File name= DAS$SYMBOL.:E05TOU
 UTS= JUL 29 '97 12:53:45.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    44     54  DAS$SYMSRCHPTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DAS$SYMSRCHPTR
     0      3          yes     yes      Std        2  DAS$SDSRCHPTR
     0     22          yes     yes      Std        2  DAS$EDSRCHPTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DAS$SDSRCH
 yes     yes           Std       2 DAS$EDSRCH
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_DFLT_RADIX                         B$IS$                                 B_VECTNIL
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:46   


      202        1        /*T***********************************************************/
      203        2        /*T*                                                         */
      204        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      205        4        /*T*                                                         */
      206        5        /*T***********************************************************/
      207        6        DAS$SYMSRCHPTR: PROC(SYM,OUT$) ALTRET;

      6  0 000000   000000 700200 xent  DAS$SYMSRCH* TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2
         0 000002   000005 710000 0                  TRA     s:3575

      208        7    1   DCL SYM UBIN BYTE CALIGNED;
      209        8    1   DCL OUT$ PTR;
      210        9    1   DCL OUT REDEF OUT$ UBIN;
      211       10
      212       11    1   DCL DA_DFLT_RADIX SBIN SYMREF;
      213       12        /**/
      214       13    1   DCL DAS$SDSRCH ENTRY(2) ALTRET;
      215       14    1   DCL DAS$EDSRCH ENTRY(2) ALTRET;
      216       15        /**/
      217       16        %INCLUDE B$OBJECT_C;
      218     3446    1   DCL O$ PTR;
      219     3447    1   DCL O REDEF O$ UBIN;
      220     3448        %B$EDEF (NAME=B$EDEF,STCLASS="BASED(O$)");
      221     3518        %B$SDEF (NAME=B$SDEF,STCLASS="BASED(O$)");
      222     3572    1   DCL B$IS$ PTR SYMREF;
      223     3573        %EJECT;
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:47   
      224     3574    1   DAS$SDSRCHPTR: ENTRY(SYM,OUT$) ALTRET;

   3574  0 000003   000000 700200 xent  DAS$SDSRCHP* TSX0  ! X66_AUTO_2
         0 000004   000010 000002                    ZERO    8,2

      225     3575    1           CALL DAS$SDSRCH(SYM,O$) ALTRET(ALT);

   3575  0 000005   200005 630500                    EPPR0   O$,,AUTO
         0 000006   200007 450500                    STP0    O$+2,,AUTO
         0 000007   200003 236100                    LDQ     @SYM,,AUTO
         0 000010   200006 756100                    STQ     O$+1,,AUTO
         0 000011   200006 630500                    EPPR0   O$+1,,AUTO
         0 000012   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000013   000000 701000 xent               TSX1    DAS$SDSRCH
         0 000014   000053 702000 0                  TSX2    ALT

      226     3576    1           O=B$SDEF.AD.ISADDR;

   3576  0 000015   200005 470500                    LDP0    O$,,AUTO
         0 000016   000000 236100                    LDQ     0,,PR0
         0 000017   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000020   200005 756100                    STQ     O$,,AUTO

      227     3577    1           GOTO MAKE_PTR;

   3577  0 000021   000040 710000 0                  TRA     MAKE_PTR

      228     3578    1   DAS$EDSRCHPTR: ENTRY(SYM,OUT$) ALTRET;

   3578  0 000022   000000 700200 xent  DAS$EDSRCHP* TSX0  ! X66_AUTO_2
         0 000023   000010 000002                    ZERO    8,2

      229     3579    1           CALL DAS$EDSRCH(SYM,O$) ALTRET(ALT);

   3579  0 000024   200005 630500                    EPPR0   O$,,AUTO
         0 000025   200007 450500                    STP0    O$+2,,AUTO
         0 000026   200003 236100                    LDQ     @SYM,,AUTO
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:48   
         0 000027   200006 756100                    STQ     O$+1,,AUTO
         0 000030   200006 630500                    EPPR0   O$+1,,AUTO
         0 000031   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000032   000000 701000 xent               TSX1    DAS$EDSRCH
         0 000033   000053 702000 0                  TSX2    ALT

      230     3580    1           O=B$EDEF.ISADDR;

   3580  0 000034   200005 470500                    LDP0    O$,,AUTO
         0 000035   000000 236100                    LDQ     0,,PR0
         0 000036   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000037   200005 756100                    STQ     O$,,AUTO

   3580  0 000040                       MAKE_PTR     null
      231     3581    1   MAKE_PTR:;
      232     3582    1           IF DA_DFLT_RADIX>8 THEN OUT = O;

   3582  0 000040   000000 235000 xsym               LDA     DA_DFLT_RADIX
         0 000041   000010 115007                    CMPA    8,DL
         0 000042   000046 604400 0                  TMOZ    s:3583

   3582  0 000043   200004 470500                    LDP0    @OUT$,,AUTO
         0 000044   000000 756100                    STQ     0,,PR0
         0 000045   000052 710000 0                  TRA     s:3584

      233     3583    1           ELSE OUT$=PINCRW(B$IS$,O);

   3583  0 000046   000022 736000                    QLS     18
         0 000047   000000 036000 xsym               ADLQ    B$IS$
         0 000050   200004 470500                    LDP0    @OUT$,,AUTO
         0 000051   000000 756100                    STQ     0,,PR0

      234     3584    1           RETURN;

   3584  0 000052   000000 702200 xent               TSX2  ! X66_ARET

      235     3585    1   ALT:    ALTRETURN;
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:49   

   3585  0 000053   000000 702200 xent  ALT          TSX2  ! X66_AALT
      236     3586    1   END DAS$SYMSRCHPTR;
      237     3587        %EOD;

PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:50   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAS$SYMSRCHPTR.
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:51   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @OUT$                      3-0-0/w PTR         r     1 @SYM
     5-0-0/w UBIN        r     1 O                          5-0-0/w PTR         r     1 O$
    *0-0-0/w UBIN        r     1 OUT                       *0-0-0/w PTR         r     1 OUT$
    *0-0-0/c UBIN(9)     r     1 SYM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IS$                      0-0-0/w SBIN        r     1 DA_DFLT_RADIX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$EDEF                     0-0-0/w STRC(72)    r     1 B$SDEF


   Procedure DAS$SYMSRCHPTR requires 44 words for executable code.
   Procedure DAS$SYMSRCHPTR requires 8 words of local(AUTO) storage.
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:52   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:53   
          MINI XREF LISTING

ALT
      3585**LABEL    3575--CALLALT  3579--CALLALT
B$EDEF.ISADDR
      3472**DCL      3580>>ASSIGN
B$EDEF.OU
      3466**DCL      3472--REDEF
B$IS$
      3572**DCL      3583>>ASSIGN
B$SDEF.AD.ISADDR
      3545**DCL      3576>>ASSIGN
B$SDEF.AD.OU
      3539**DCL      3545--REDEF
B$SDEF.VALUE
      3520**DCL      3523--REDEF
DAS$EDSRCH
        14**DCL-ENT  3579--CALL
DAS$SDSRCH
        13**DCL-ENT  3575--CALL
DA_DFLT_RADIX
        11**DCL      3582>>IF
MAKE_PTR
      3580**LABEL    3577--GOTO
O
      3447**DCL      3576<<ASSIGN   3580<<ASSIGN   3582>>ASSIGN   3583>>ASSIGN
O$
      3446**DCL      3447--REDEF    3449--IMP-PTR  3519--IMP-PTR  3575<>CALL     3576>>ASSIGN   3579<>CALL
      3580>>ASSIGN
OUT
         9**DCL      3582<<ASSIGN
OUT$
         8**DCL         6--PROC        9--REDEF    3574--ENTRY    3578--ENTRY    3583<<ASSIGN
SYM
PL6.E3A0      #002=DAS$SYMSRCHPTR File=DAS$SYMBOL.:E05TSI                        TUE 07/29/97 12:53 Page:54   
         7**DCL         6--PROC     3574--ENTRY    3575<>CALL     3578--ENTRY    3579<>CALL

PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:55   
      238        1        /*T***********************************************************/
      239        2        /*T*                                                         */
      240        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      241        4        /*T*                                                         */
      242        5        /*T***********************************************************/
      243        6        DAS$SDMONPTR: PROC(SYM,OUT$) ALTRET;
      244        7    1   DCL SYM UBIN;
      245        8    1   DCL OUT$ PTR;
      246        9        /**/
      247       10        %INCLUDE DA_SYMBOLS_R;
      248       23        %INCLUDE DA_PERR_C;
      249       87
      250       88    2           IF DA_MONPTR$(SYM)=ADDR(NIL) THEN DO;
      251       89    2              DA_SYMERR = '040123000000'O;
      252       90    2              DA_SYMERR.CODE = %E$DA_NO_MON_SYM;
      253       91        /*E*  ERROR: DAS-E$DA_NO_MON_SYM
      254       92              MESSAGE: Monitor symbol table not initialized.
      255       93              MESSAGE1: Before you can issue that command, you must SYMBOL
      256       94                        an M:MON-like file
      257       95        */
      258       96    2              ALTRETURN;
      259       97    2              END;
      260       98    1           ELSE
      261       99    1              OUT$ = DA_MONPTR$(SYM);
      262      100    1           RETURN;
      263      101
      264      102    1   END DAS$SDMONPTR;
      265      103        %EOD;

PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:56   
--  Include file information  --

   DA_PERR_C.:E05TOU  is referenced.
   DA_SYMBOLS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAS$SDMONPTR.

   Procedure DAS$SDMONPTR requires 16 words for executable code.
   Procedure DAS$SDMONPTR requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:57   

 Object Unit name= DAS$SDMONPTR                               File name= DAS$SYMBOL.:E05TOU
 UTS= JUL 29 '97 12:53:50.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  DAS$SDMONPTR
    1   Proc  even  none    16     20  DAS$SDMONPTR
    2  RoData even  none     1      1  DAS$SDMONPTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  DAS$SDMONPTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_SYMERR                             DA_MONPTR$                            B_VECTNIL
PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:58   


      238        1        /*T***********************************************************/
      239        2        /*T*                                                         */
      240        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      241        4        /*T*                                                         */
      242        5        /*T***********************************************************/
      243        6        DAS$SDMONPTR: PROC(SYM,OUT$) ALTRET;

      6  1 000000   000000 700200 xent  DAS$SDMONPTR TSX0  ! X66_AUTO_2
         1 000001   000006 000002                    ZERO    6,2

      244        7    1   DCL SYM UBIN;
      245        8    1   DCL OUT$ PTR;
      246        9        /**/
      247       10        %INCLUDE DA_SYMBOLS_R;
      248       23        %INCLUDE DA_PERR_C;
      249       87
      250       88    2           IF DA_MONPTR$(SYM)=ADDR(NIL) THEN DO;

     88  1 000002   200003 470500                    LDP0    @SYM,,AUTO
         1 000003   000000 720100                    LXL0    0,,PR0
         1 000004   000000 236010 xsym               LDQ     DA_MONPTR$,X0
         1 000005   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000006   000015 601000 1                  TNZ     s:99

      251       89    2              DA_SYMERR = '040123000000'O;

     89  1 000007   000000 236000 0                  LDQ     0
         1 000010   000000 756000 xsym               STQ     DA_SYMERR

      252       90    2              DA_SYMERR.CODE = %E$DA_NO_MON_SYM;

     90  1 000011   000000 376000 2                  ANQ     0
         1 000012   003120 276007                    ORQ     1616,DL
         1 000013   000000 756000 xsym               STQ     DA_SYMERR

      253       91        /*E*  ERROR: DAS-E$DA_NO_MON_SYM
PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:59   
      254       92              MESSAGE: Monitor symbol table not initialized.
      255       93              MESSAGE1: Before you can issue that command, you must SYMBOL
      256       94                        an M:MON-like file
      257       95        */
      258       96    2              ALTRETURN;

     96  1 000014   000000 702200 xent               TSX2  ! X66_AALT

      259       97    2              END;
      260       98    1           ELSE
      261       99    1              OUT$ = DA_MONPTR$(SYM);

     99  1 000015   200004 471500                    LDP1    @OUT$,,AUTO
         1 000016   100000 756100                    STQ     0,,PR1

      262      100    1           RETURN;

    100  1 000017   000000 702200 xent               TSX2  ! X66_ARET
      263      101
      264      102    1   END DAS$SDMONPTR;
      265      103        %EOD;

PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:60   
--  Include file information  --

   DA_PERR_C.:E05TOU  is referenced.
   DA_SYMBOLS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAS$SDMONPTR.
PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:61   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @OUT$                      3-0-0/w PTR         r     1 @SYM
    *0-0-0/w PTR         r     1 OUT$                      *0-0-0/w UBIN        r     1 SYM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DA_MONPTR$(0:50)
     0-0-0/b STRC        r     1 DA_SYMERR


   Procedure DAS$SDMONPTR requires 16 words for executable code.
   Procedure DAS$SDMONPTR requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:62   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DAS$SDMONPTR File=DAS$SYMBOL.:E05TSI                          TUE 07/29/97 12:53 Page:63   
          MINI XREF LISTING

DA_MONPTR$
        21**DCL        88>>IF         99>>ASSIGN
DA_SYMERR
        19**DCL        89<<ASSIGN
DA_SYMERR.CODE
        20**DCL        90<<ASSIGN
DA_SYMSEG.P
        18**DCL        19--REDEF
OUT$
         8**DCL         6--PROC       99<<ASSIGN
SYM
         7**DCL         6--PROC       88>>IF         99>>ASSIGN

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:64   
      266        1        /*T***********************************************************/
      267        2        /*T*                                                         */
      268        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      269        4        /*T*                                                         */
      270        5        /*T***********************************************************/
      271        6        DAS$SYMINIT: PROC(FID, NODENUM) ALTRET;
      272        7    1   DCL NODENUM SBIN ALIGNED;
      273        8    1   DCL 1 FID,
      274        9    1         2 L UBIN BYTE UNAL,
      275       10    1         2 C CHAR(FID.L);
      276       11        /**/
      277       12        %INCLUDE DA_SYMBOLS_R;
      278       25        %INCLUDE B$OBJECT_C;
      279     3455        %INCLUDE CP_6;
      280     3536        %INCLUDE DA_MAP_R;
      281     3566        %INCLUDE F_ERRORS_C;
      282     3806    1   DCL F$SYMBOL DCB;
      283     3807        /**/
      284     3808        /* LOCAL DATA */
      285     3809        /**/
      286     3810    1   DCL SEGSIZE SBIN;
      287     3811    1   DCL I SBIN;
      288     3812    1   DCL CSIZE SBIN;
      289     3813    1   DCL CBASE CHAR(CSIZE) BASED;
      290     3814    1   DCL CNODE UBIN BASED ALIGNED;
      291     3815    1   DCL ARS UBIN;
      292     3816    1   DCL NODE SBIN;
      293     3817        /**/
      294     3818        /* STATIC, CONSTANT, FPTS */
      295     3819        /**/
      296     3820        %VLP_NAME;
      297     3847        %VLP_ACCT;
      298     3860        %VLP_PASS;
      299     3873        %VLP_SN;
      300     3886        %VLP_WSN;
      301     3899        %VLR_FID;
      302     3918        %FPT_OPEN (DCB=F$SYMBOL,
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:65   
      303     3919                   NAME=VLP_NAME,
      304     3920                   ACCT=VLP_ACCT,
      305     3921                   PASS=VLP_PASS,
      306     3922                   SN=VLP_SN,
      307     3923                   WSN=VLP_WSN,
      308     3924                   FUN=IN);
      309     4033        %FPT_READ (DCB=F$SYMBOL,KEYS=YES);
      310     4072        %FPT_CLOSE (DCB=F$SYMBOL);
      311     4114        %F$DCB;
      312     4171        %FPT_FID (ASN="FPT_OPEN.V.ASN#",
      313     4172                  NAME=VLP_NAME,
      314     4173                  PASS=VLP_PASS,
      315     4174                  ACCT=VLP_ACCT,
      316     4175                  SN=VLP_SN,
      317     4176                  RES="FPT_OPEN.V.RES#",
      318     4177                  RESULTS=VLR_FID,
      319     4178                  WSN=VLP_WSN);
      320     4201        %FPT_GDS (RESULTS=DA_SYMSEG);
      321     4217    1   DCL B$TCB$ PTR SYMREF;
      322     4218        %B$TCB;
      323     4221        %B$ALT;
      324     4229        %B$HEAD (NAME=DA_HEADREC,STCLASS="STATIC SYMDEF");
      325     4429        %B$SDEF(NAME="B$SDEF(0:0)");
      326     4483        %B$EDEF(NAME="B$EDEF(0:0)");
      327     4553        %B$RUHEADKEY (NAME=HEADKEY,STCLASS=CONSTANT);
      328     4560        %B$RECORDSUBS;
      329     4588    1   DCL 1 KEY,
      330     4589    1         2 L UBIN BYTE UNAL,
      331     4590    1         2 T UBIN BYTE UNAL,
      332     4591    1         2 O UBIN HALF UNAL,
      333     4592    1         2 * UBIN HALF UNAL;
      334     4593    1   DCL P$ PTR;
      335     4594        %EJECT;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:66   
      336     4595        %INCLUDE DA_TEXTC_C;
      337     4626        %INCLUDE DA_MONSYM_C;
      338     4677        %INCLUDE M_INFO_C;
      339     4817        %INCLUDE B_STRINGS_C;
      340     4946        %INCLUDE B_LSDATA_C;
      341     8152
      342     8153    1   DCL DAM$VPAGE ENTRY(5) ALTRET;
      343     8154    1   DCL DAM$USECPU ENTRY(1) ALTRET;
      344     8155    1   DCL DAS$SDSRCHPTR ENTRY(2) ALTRET;
      345     8156    1   DCL DA_DFLT_RADIX UBIN SYMREF;
      346     8157
      347     8158        %TEXTC (NAME=S_WSPTD, TEXT='S_WSPTD');
      348     8182        %TEXTC (NAME=P_LAST_AUTO, TEXT='P_LAST_AUTO');
      349     8206        %TEXTC (NAME=B$P$, TEXT='B$P$');
      350     8230        %TEXTC (NAME=S_HQ, TEXT='S_HQ');
      351     8254        %TEXTC (NAME=S_TQ, TEXT='S_TQ');
      352     8278        %TEXTC (NAME=S_RQH, TEXT='S_RQH');
      353     8302        %TEXTC (NAME=S_EVX, TEXT='S_EVX');
      354     8326        %TEXTC (NAME=S_EVBF, TEXT='S_EVBF');
      355     8350        %TEXTC (NAME=H_CNCTEVX, TEXT='H_CNCTEVX');
      356     8374        %TEXTC (NAME=H_CNCTEVBF, TEXT='H_CNCTEVBF');
      357     8398        %TEXTC (NAME=S_PTYPE, TEXT='S_PTYPE');
      358     8422        %TEXTC (NAME=KI_NODES, TEXT='KI_NODES');
      359     8446        %TEXTC (NAME=KI_MXFE, TEXT='KI_MXFE');
      360     8470        %TEXTC (NAME=KI_ROUTE$$, TEXT='KI_ROUTE$$');
      361     8494        %TEXTC (NAME=KI_FEI$$, TEXT='KI_FEI$$');
      362     8518        %TEXTC (NAME=FMC_CACHESIZ, TEXT='FMC_CACHESIZ');
      363     8542        %TEXTC (NAME=FMC_TYPTBL$, TEXT='FMC_TYPTBL$');
      364     8566        %TEXTC (NAME=FMC_STATS$, TEXT='FMC_STATS$');
      365     8590        %TEXTC (NAME=FMC_CACHE$, TEXT='FMC_CACHE$');
      366     8614        %TEXTC (NAME=N$DCT$$, TEXT='N$DCT$$');
      367     8638        %TEXTC (NAME=NK_MXLOCAL, TEXT='NK_MXLOCAL');
      368     8662        %TEXTC (NAME=NK_MXTOTAL, TEXT='NK_MXTOTAL');
      369     8686        %TEXTC (NAME=NI_IOMS, TEXT='NI_IOMS');
      370     8710        %TEXTC (NAME=NI$CHT$, TEXT='NI$CHT$');
      371     8734        %TEXTC (NAME=FR$HD$, TEXT='FR$HD$');
      372     8758        %TEXTC (NAME=NI$IOQ$, TEXT='NI$IOQ$');
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:67   
      373     8782        %TEXTC (NAME=NI_NUMIOQ, TEXT='NI_NUMIOQ');
      374     8806        %TEXTC (NAME=S_MPSTATE, TEXT='S_MPSTATE');
      375     8830        %TEXTC (NAME=S_PORTNR, TEXT='S_PORTNR');
      376     8854        %TEXTC (NAME=S_PCU, TEXT='S_PCU');
      377     8878        %TEXTC (NAME=S_NSCPU, TEXT='S_NSCPU');
      378     8902        %TEXTC (NAME=KQ_HDLOG$, TEXT='KQ_HDLOG$');
      379     8926        %TEXTC (NAME=KQ_CURLOG$, TEXT='KQ_CURLOG$');
      380     8950        %TEXTC (NAME=B_SITEINFO, TEXT='B_SITEINFO');
      381     8974        %TEXTC (NAME=KQ_MMSD, TEXT='KQ_MMSD');
      382     8998        %TEXTC (NAME=F$CFU$, TEXT='F$CFU$');
      383     9022        %TEXTC (NAME=NI$IOM$, TEXT='NI$IOM$');
      384     9046        %TEXTC (NAME=S_CNODE, TEXT='S_CNODE');
      385     9070        %TEXTC (NAME=KI_TCTX_MAX#, TEXT='KI_TCTX_MAX#');
      386     9094        %TEXTC (NAME=KIS_MAJOR$, TEXT='KIS_MAJOR$');
      387     9118        %TEXTC (NAME=KIS_MINOR$, TEXT='KIS_MINOR$');
      388     9142        %TEXTC (NAME=KIS_SSN_CLIENTS, TEXT='KIS_SSN_CLIENTS');
      389     9166        %TEXTC (NAME=KIS_SSN_SERVERS, TEXT='KIS_SSN_SERVERS');
      390     9190        %TEXTC (NAME=KIS_SSN_MAX, TEXT='KIS_SSN_MAX');
      391     9214        %EJECT;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:68   
      392     9215    1           IF FID.L>0 THEN FPT_FID.TEXTFID_=VECTOR(FID.C);
      393     9216    1           ELSE FPT_FID.TEXTFID_=VECTOR(NIL);
      394     9217    1           DA_SDCTL(0)='0'B;
      395     9218    1           DA_EDCTL(0)='0'B;
      396     9219    1           DA_ENTDEF$=ADDR(NIL);
      397     9220    1           DA_SYMDEF$=ADDR(NIL);
      398     9221    1           DA_ALTSHI=0;
      399     9222    1           DA_ALTSYM=0;
      400     9223    1   GETLIB: KEY='005'O;
      401     9224    1           CALL M$FID(FPT_FID) ALTRET(PMMEALT);
      402     9225    1           IF NOT VLR_FID.ACCT THEN VLP_ACCT.ACCT#=DA_DFLTACCT;
      403     9226    1           IF DCBADDR(DCBNUM(F$SYMBOL))->F$DCB.FCD# THEN
      404     9227    1              CALL M$CLOSE(FPT_CLOSE) ALTRET(PMMEALT);
      405     9228    1           CALL M$OPEN(FPT_OPEN) ALTRET(PMMEALT);
      406     9229    1           CALL READ_KEYED(HEADKEY,VECTOR(DA_HEADREC)) ALTRET(PMMEALT);
      407     9230    1           SEGSIZE=DA_HEADREC.NRECSIZE;
      408     9231    1           SEGSIZE=SEGSIZE+DA_HEADREC.EPRECSIZE;
      409     9232    1           SEGSIZE=SEGSIZE+DA_HEADREC.EDRECSIZE;
      410     9233    1           IF DA_ENTDEF$~=ADDR(NIL)
      411     9234    1           THEN SEGSIZE=SEGSIZE+POFFW(P$,DA_DNAME$);
      412     9235    1           SEGSIZE=((SEGSIZE+1023)/1024)*1024;
      413     9236    1           I=SEGSIZE-((DA_SYMSEG.BOUND+1)/4);
      414     9237    2           IF I>0 THEN DO;
      415     9238    2              FPT_GDS.V.SEGSIZE#=I;
      416     9239    2              CALL M$GDS(FPT_GDS) ALTRET(PMMEALT);
      417     9240    2              END;
      418     9241    2           ELSE IF I<0 THEN DO;
      419     9242    2                 FPT_GDS.V.SEGSIZE#=-I;
      420     9243    2                 CALL M$FDS(FPT_GDS) ALTRET(PMMEALT);
      421     9244    2                 END;
      422     9245    1           DA_DNAME$=DA_SYMSEG.P$;
      423     9246    2           IF DA_ENTDEF$=ADDR(NIL) THEN DO;
      424     9247    2              P$=DA_DNAME$;
      425     9248    2              CSIZE=DA_SYMSEG.BOUND+1;
      426     9249    2              END;
      427     9250    1           ELSE CSIZE=CSIZE+I*4;
      428     9251    1           FPT_GDS.V.SEGSIZE#=1024;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:69   
      429     9252    1           NODE=0;
      430     9253    2           DO WHILE '1'B;
      431     9254    2              KEY.T=%TYPDNAM;
      432     9255    2              SEGSIZE=POFFW(P$,DA_DNAME$);
      433     9256    2              CALL READ_KEYED(KEY,VECTOR(P$->CBASE)) ALTRET(PMMEALT);
      434     9257    2              KEY.T=%TYPSDEF;
      435     9258    2              IF DA_ENTDEF$=ADDR(NIL) THEN DA_SYMDEF$=P$;
      436     9259    2              ELSE DA_SDCTL.START(NODE)=POFFW(P$,DA_SYMDEF$)/2;
      437     9260    2              CALL READ_KEYED(KEY,VECTOR(P$->CBASE)) ALTRET(PMMEALT);
      438     9261    3              IF SEGSIZE>0 THEN DO I=-ARS TO -1;
      439     9262    3                 P$->B$SDEF.NPOINTER(I)=P$->B$SDEF.NPOINTER(I)+SEGSIZE;
      440     9263    3                 END;
      441     9264    2   NOSDEF:    DA_SDCTL.STOP(NODE)=ARS+DA_SDCTL.START(NODE);
      442     9265    2              KEY.T=%TYPEDEF;
      443     9266    2              IF DA_ENTDEF$=ADDR(NIL) THEN DA_ENTDEF$=P$;
      444     9267    2              ELSE DA_EDCTL.START(NODE)=POFFW(P$,DA_ENTDEF$)/2;
      445     9268    2              CALL READ_KEYED(KEY,VECTOR(P$->CBASE)) ALTRET(PMMEALT);
      446     9269    3              IF SEGSIZE>0 THEN DO I=-ARS TO -1;
      447     9270    3                 P$->B$EDEF.NPOINTER(I)=P$->B$EDEF.NPOINTER(I)+SEGSIZE;
      448     9271    3                 END;
      449     9272    2              DA_EDCTL.STOP(NODE)=ARS+DA_EDCTL.START(NODE);
      450     9273    2              IF DA_ALTSYM~=0 OR NODE=15 THEN EXIT;
      451     9274    2              NODE=NODE+1;
      452     9275    2              IF ADDR(NODENUM)=ADDR(NIL) OR NODENUM=0 THEN KEY.O=NODE;
      453     9276    3              ELSE DO;
      454     9277    3                 KEY.O=NODENUM;
      455     9278    3                 DA_ALTSYM=1;
      456     9279    3                 DA_ALTSHI=2;
      457     9280    3                 END;
      458     9281    2              END;
      459     9282    1   ODON:   ;
      460     9283    2           CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO; END;
      461     9284    1           IF DA_DFLT_RADIX>8              /* This screws up in Fep mode */
      462     9285    1             OR DA_ALTSYM~=0 THEN GOTO RET; /* or if linked with M:MON */
      463     9286    1           CALL DAS$SDSRCHPTR (S_WSPTD,I) ALTRET (RET);
      464     9287                       /* WE HAVE A M:MON FILE, LOAD COMMON SYMBOLS FOR DAS$SDMONPTR */
      465     9288    1           CALL DAS$SDSRCHPTR (P_LAST_AUTO, DA_MONPTR$(%M#P_LAST_AUTO));
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:70   
      466     9289    1           CALL DAS$SDSRCHPTR (B$P$, DA_MONPTR$(%M#B$P$));
      467     9290    1           CALL DAS$SDSRCHPTR (S_HQ, DA_MONPTR$(%M#S_HQ));
      468     9291    1           CALL DAS$SDSRCHPTR (S_TQ, DA_MONPTR$(%M#S_TQ));
      469     9292    1           CALL DAS$SDSRCHPTR (S_RQH, DA_MONPTR$(%M#S_RQH));
      470     9293    1           CALL DAS$SDSRCHPTR (S_EVX, DA_MONPTR$(%M#S_EVX));
      471     9294    1           CALL DAS$SDSRCHPTR (S_EVBF, DA_MONPTR$(%M#S_EVBF));
      472     9295    1           CALL DAS$SDSRCHPTR (H_CNCTEVX, DA_MONPTR$(%M#H_CNCTEVX));
      473     9296    1           CALL DAS$SDSRCHPTR (H_CNCTEVBF, DA_MONPTR$(%M#H_CNCTEVBF));
      474     9297    1           CALL DAS$SDSRCHPTR (S_PTYPE, DA_MONPTR$(%M#S_PTYPE));
      475     9298    1           CALL DAS$SDSRCHPTR (KI_NODES, DA_MONPTR$(%M#KI_NODES));
      476     9299    1           CALL DAS$SDSRCHPTR (KI_MXFE, DA_MONPTR$(%M#KI_MXFE));
      477     9300    1           CALL DAS$SDSRCHPTR (KI_ROUTE$$, DA_MONPTR$(%M#KI_ROUTE$$));
      478     9301    1           CALL DAS$SDSRCHPTR (KI_FEI$$, DA_MONPTR$(%M#KI_FEI$$));
      479     9302    1           CALL DAS$SDSRCHPTR (FMC_CACHESIZ, DA_MONPTR$(%M#FMC_CACHESIZ));
      480     9303    1           CALL DAS$SDSRCHPTR (FMC_TYPTBL$, DA_MONPTR$(%M#FMC_TYPTBL$));
      481     9304    1           CALL DAS$SDSRCHPTR (FMC_STATS$, DA_MONPTR$(%M#FMC_STATS$));
      482     9305    1           CALL DAS$SDSRCHPTR (FMC_CACHE$, DA_MONPTR$(%M#FMC_CACHE$));
      483     9306    1           CALL DAS$SDSRCHPTR (N$DCT$$, DA_MONPTR$(%M#N$DCT$$));
      484     9307    1           CALL DAS$SDSRCHPTR (NK_MXLOCAL, DA_MONPTR$(%M#NK_MXLOCAL));
      485     9308    1           CALL DAS$SDSRCHPTR (NK_MXTOTAL, DA_MONPTR$(%M#NK_MXTOTAL));
      486     9309    1           CALL DAS$SDSRCHPTR (NI_IOMS, DA_MONPTR$(%M#NI_IOMS));
      487     9310    1           CALL DAS$SDSRCHPTR (NI$CHT$, DA_MONPTR$(%M#NI$CHT$));
      488     9311    1           CALL DAS$SDSRCHPTR (FR$HD$, DA_MONPTR$(%M#FR$HD$));
      489     9312    1           CALL DAS$SDSRCHPTR (NI$IOQ$, DA_MONPTR$(%M#NI$IOQ$));
      490     9313    1           CALL DAS$SDSRCHPTR (NI_NUMIOQ, DA_MONPTR$(%M#NI_NUMIOQ));
      491     9314    1           CALL DAS$SDSRCHPTR (S_MPSTATE, DA_MONPTR$(%M#S_MPSTATE));
      492     9315    1           CALL DAS$SDSRCHPTR (S_PORTNR, DA_MONPTR$(%M#S_PORTNR));
      493     9316    1           CALL DAS$SDSRCHPTR (S_PCU, DA_MONPTR$(%M#S_PCU));
      494     9317    1           CALL DAS$SDSRCHPTR (S_NSCPU, DA_MONPTR$(%M#S_NSCPU));
      495     9318    1           CALL DAS$SDSRCHPTR (KQ_HDLOG$, DA_MONPTR$(%M#KQ_HDLOG$));
      496     9319    1           CALL DAS$SDSRCHPTR (KQ_CURLOG$, DA_MONPTR$(%M#KQ_CURLOG$));
      497     9320    1           CALL DAS$SDSRCHPTR (B_SITEINFO, DA_MONPTR$(%M#B_SITEINFO));
      498     9321    1           CALL DAS$SDSRCHPTR (KQ_MMSD, DA_MONPTR$(%M#KQ_MMSD));
      499     9322    1           CALL DAS$SDSRCHPTR (F$CFU$, DA_MONPTR$(%M#F$CFU$));
      500     9323    1           CALL DAS$SDSRCHPTR (NI$IOM$, DA_MONPTR$(%M#NI$IOM$));
      501     9324    1           CALL DAS$SDSRCHPTR (KI_TCTX_MAX#, DA_MONPTR$(%M#KI_TCTX_MAX#));
      502     9325    1           CALL DAS$SDSRCHPTR (KIS_MAJOR$, DA_MONPTR$(%M#KIS_MAJOR$));
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:71   
      503     9326    1           CALL DAS$SDSRCHPTR (KIS_MINOR$, DA_MONPTR$(%M#KIS_MINOR$));
      504     9327    1           CALL DAS$SDSRCHPTR (KIS_SSN_CLIENTS, DA_MONPTR$(%M#KIS_SSN_CLIENTS));
      505     9328    1           CALL DAS$SDSRCHPTR (KIS_SSN_SERVERS, DA_MONPTR$(%M#KIS_SSN_SERVERS));
      506     9329    1           CALL DAS$SDSRCHPTR (KIS_SSN_MAX, DA_MONPTR$(%M#KIS_SSN_MAX));
      507     9330    1   DAS$SETNODE: ENTRY ALTRET;
      508     9331    1           CALL DAS$SDSRCHPTR (S_CNODE, DA_MONPTR$(%M#S_CNODE)) ALTRET(RET);
      509     9332    1           IF DA_INITIALIZED OR ADDR(FID)=ADDR(NIL)
      510     9333    1           THEN CALL DAM$VPAGE(%(IS_BASE%/4096),%MSCPG3#,0,%MONWSQ)
      511     9334    2              WHENRETURN DO;
      512     9335    2                 DA_ALTSYM=PINCRW(DA_MONPTR$(%M#S_CNODE),DA_MSCPG3*1024)->CNODE;
      513     9336    2                 END;
      514     9337    1   RET:    DA_SYMERR = '0'B;
      515     9338    2           IF DA_ALTSYM=0 AND DA_HEADREC.LIBNAME.CNT>0 THEN DO;
      516     9339    2              IF DA_WINDOWBASE=0 THEN EXIT; /* Only do this in ANLZ */
      517     9340    2              DA_ALTSHI=2;
      518     9341    2              DA_SDCTL(1)=DA_SDCTL(0);
      519     9342    2              DA_EDCTL(1)=DA_EDCTL(0);
      520     9343    2              DA_ALTSYM=1;
      521     9344    2              FPT_FID.TEXTFID_=VECTOR(DA_HEADREC.LIBNAME.TXT);
      522     9345    2              GOTO GETLIB;
      523     9346    2              END;
      524     9347    1           RETURN;
      525     9348    1   PMMEALT: ;
      526     9349    2           IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD THEN DO;
      527     9350    2              CALL M$GDS (FPT_GDS) ALTRET (PMMEALT);
      528     9351    2              CSIZE=CSIZE+4096;
      529     9352    2              FPT_READ.BUF_.BOUND=CSIZE-1;
      530     9353    2              CALL M$RETRY;
      531     9354    2              END;
      532     9355    2           ELSE IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$NOKEY AND KEY.O>0 THEN DO;
      533     9356    3                 IF KEY.T=%TYPSDEF THEN DO;
      534     9357    3                    ARS=0;
      535     9358    3                    GOTO NOSDEF;
      536     9359    3                    END;
      537     9360    2                 IF DA_ALTSHI>0 THEN EXIT;
      538     9361    2                 DA_ALTSHI=KEY.O;
      539     9362    2                 GOTO ODON;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:72   
      540     9363    2                 END;
      541     9364    1           IF DA_ALTSYM>0 THEN GOTO RET;
      542     9365    1           DA_SYMERR=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      543     9366    2           IF DCBADDR(DCBNUM(F$SYMBOL))->F$DCB.FCD# THEN DO;
      544     9367    3              CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO; END;
      545     9368    2              END;
      546     9369    1           ALTRETURN;
      547     9370        %EJECT;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:73   
      548     9371    1   READ_KEYED: PROC(KEY,BUF) ALTRET;
      549     9372    2   DCL 1 KEY,
      550     9373    2         2 L UBIN BYTE UNAL,
      551     9374    2         2 C CHAR(KEY.L);
      552     9375    2   DCL BUF BIT(72) ALIGNED;
      553     9376        /**/
      554     9377    2           FPT_READ.BUF_=BUF;
      555     9378    3           IF FPT_READ.BUF_.BOUND=%BITBIN('3777777'O) THEN DO;
      556     9379    3              CALL M$GDS (FPT_GDS) ALTRET (ALT);
      557     9380    3              CSIZE=4096;
      558     9381    3              FPT_READ.BUF_.BOUND=4095;
      559     9382    3              END;
      560     9383    2           FPT_READ.KEY_=VECTOR(KEY);
      561     9384    2           CALL M$READ(FPT_READ) ALTRET(ALT);
      562     9385    2           ARS=(DCBADDR(DCBNUM(F$SYMBOL))->F$DCB.ARS#+7)/8;
      563     9386    2           P$=PINCRW(P$,ARS*2);
      564     9387    2           CSIZE=CSIZE-ARS*8;
      565     9388    2           RETURN;
      566     9389    2   ALT:    ALTRETURN;
      567     9390    2   END READ_KEYED;
      568     9391    1   END DAS$SYMINIT;

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:74   
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   DA_MONSYM_C.:E05TOU  is referenced.
   DA_TEXTC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DA_SYMBOLS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DAS$SYMINIT.

   Procedure DAS$SYMINIT requires 615 words for executable code.
   Procedure DAS$SYMINIT requires 26 words of local(AUTO) storage.

    No errors detected in file DAS$SYMBOL.:E05TSI    .

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:75   

 Object Unit name= DAS$SYMINIT                                File name= DAS$SYMBOL.:E05TOU
 UTS= JUL 29 '97 12:53:51.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  F$SYMBOL
    2   Data  even  none   316    474  DAS$SYMINIT
    3  RoData even  UTS      2      2  DAS$SYMINIT
    4   Proc  even  none   615   1147  DAS$SYMINIT
    5  RoData even  none   103    147  DAS$SYMINIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        2  DAS$SYMINIT
     4    721          yes     yes      Std        0  DAS$SETNODE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2    240  DA_HEADREC
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:76   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DAS$SDSRCHPTR
 yes     yes           Std       5 DAM$VPAGE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_SYMSEG                             DA_ENTDEF$                            DA_SYMDEF$
     DA_DNAME$                             DA_SYMERR                        r    DA_DFLTACCT
     DA_MONPTR$                            DA_SDCTL                              DA_EDCTL
     DA_ALTSYM                             DA_ALTSHI                             M$UC
     DA_WINDOWBASE                         DA_INITIALIZED                        DA_MSCPG3
     F$SYMBOL                              B$TCB$                                DA_DFLT_RADIX
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:77   


      266        1        /*T***********************************************************/
      267        2        /*T*                                                         */
      268        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      269        4        /*T*                                                         */
      270        5        /*T***********************************************************/
      271        6        DAS$SYMINIT: PROC(FID, NODENUM) ALTRET;

      6  4 000000   000000 700200 xent  DAS$SYMINIT  TSX0  ! X66_AUTO_2
         4 000001   000032 000002                    ZERO    26,2

      272        7    1   DCL NODENUM SBIN ALIGNED;
      273        8    1   DCL 1 FID,
      274        9    1         2 L UBIN BYTE UNAL,
      275       10    1         2 C CHAR(FID.L);
      276       11        /**/
      277       12        %INCLUDE DA_SYMBOLS_R;
      278       25        %INCLUDE B$OBJECT_C;
      279     3455        %INCLUDE CP_6;
      280     3536        %INCLUDE DA_MAP_R;
      281     3566        %INCLUDE F_ERRORS_C;
      282     3806    1   DCL F$SYMBOL DCB;
      283     3807        /**/
      284     3808        /* LOCAL DATA */
      285     3809        /**/
      286     3810    1   DCL SEGSIZE SBIN;
      287     3811    1   DCL I SBIN;
      288     3812    1   DCL CSIZE SBIN;
      289     3813    1   DCL CBASE CHAR(CSIZE) BASED;
      290     3814    1   DCL CNODE UBIN BASED ALIGNED;
      291     3815    1   DCL ARS UBIN;
      292     3816    1   DCL NODE SBIN;
      293     3817        /**/
      294     3818        /* STATIC, CONSTANT, FPTS */
      295     3819        /**/
      296     3820        %VLP_NAME;
      297     3847        %VLP_ACCT;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:78   
      298     3860        %VLP_PASS;
      299     3873        %VLP_SN;
      300     3886        %VLP_WSN;
      301     3899        %VLR_FID;
      302     3918        %FPT_OPEN (DCB=F$SYMBOL,
      303     3919                   NAME=VLP_NAME,
      304     3920                   ACCT=VLP_ACCT,
      305     3921                   PASS=VLP_PASS,
      306     3922                   SN=VLP_SN,
      307     3923                   WSN=VLP_WSN,
      308     3924                   FUN=IN);
      309     4033        %FPT_READ (DCB=F$SYMBOL,KEYS=YES);
      310     4072        %FPT_CLOSE (DCB=F$SYMBOL);
      311     4114        %F$DCB;
      312     4171        %FPT_FID (ASN="FPT_OPEN.V.ASN#",
      313     4172                  NAME=VLP_NAME,
      314     4173                  PASS=VLP_PASS,
      315     4174                  ACCT=VLP_ACCT,
      316     4175                  SN=VLP_SN,
      317     4176                  RES="FPT_OPEN.V.RES#",
      318     4177                  RESULTS=VLR_FID,
      319     4178                  WSN=VLP_WSN);
      320     4201        %FPT_GDS (RESULTS=DA_SYMSEG);
      321     4217    1   DCL B$TCB$ PTR SYMREF;
      322     4218        %B$TCB;
      323     4221        %B$ALT;
      324     4229        %B$HEAD (NAME=DA_HEADREC,STCLASS="STATIC SYMDEF");
      325     4429        %B$SDEF(NAME="B$SDEF(0:0)");
      326     4483        %B$EDEF(NAME="B$EDEF(0:0)");
      327     4553        %B$RUHEADKEY (NAME=HEADKEY,STCLASS=CONSTANT);
      328     4560        %B$RECORDSUBS;
      329     4588    1   DCL 1 KEY,
      330     4589    1         2 L UBIN BYTE UNAL,
      331     4590    1         2 T UBIN BYTE UNAL,
      332     4591    1         2 O UBIN HALF UNAL,
      333     4592    1         2 * UBIN HALF UNAL;
      334     4593    1   DCL P$ PTR;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:79   
      335     4594        %EJECT;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:80   
      336     4595        %INCLUDE DA_TEXTC_C;
      337     4626        %INCLUDE DA_MONSYM_C;
      338     4677        %INCLUDE M_INFO_C;
      339     4817        %INCLUDE B_STRINGS_C;
      340     4946        %INCLUDE B_LSDATA_C;
      341     8152
      342     8153    1   DCL DAM$VPAGE ENTRY(5) ALTRET;
      343     8154    1   DCL DAM$USECPU ENTRY(1) ALTRET;
      344     8155    1   DCL DAS$SDSRCHPTR ENTRY(2) ALTRET;
      345     8156    1   DCL DA_DFLT_RADIX UBIN SYMREF;
      346     8157
      347     8158        %TEXTC (NAME=S_WSPTD, TEXT='S_WSPTD');
      348     8182        %TEXTC (NAME=P_LAST_AUTO, TEXT='P_LAST_AUTO');
      349     8206        %TEXTC (NAME=B$P$, TEXT='B$P$');
      350     8230        %TEXTC (NAME=S_HQ, TEXT='S_HQ');
      351     8254        %TEXTC (NAME=S_TQ, TEXT='S_TQ');
      352     8278        %TEXTC (NAME=S_RQH, TEXT='S_RQH');
      353     8302        %TEXTC (NAME=S_EVX, TEXT='S_EVX');
      354     8326        %TEXTC (NAME=S_EVBF, TEXT='S_EVBF');
      355     8350        %TEXTC (NAME=H_CNCTEVX, TEXT='H_CNCTEVX');
      356     8374        %TEXTC (NAME=H_CNCTEVBF, TEXT='H_CNCTEVBF');
      357     8398        %TEXTC (NAME=S_PTYPE, TEXT='S_PTYPE');
      358     8422        %TEXTC (NAME=KI_NODES, TEXT='KI_NODES');
      359     8446        %TEXTC (NAME=KI_MXFE, TEXT='KI_MXFE');
      360     8470        %TEXTC (NAME=KI_ROUTE$$, TEXT='KI_ROUTE$$');
      361     8494        %TEXTC (NAME=KI_FEI$$, TEXT='KI_FEI$$');
      362     8518        %TEXTC (NAME=FMC_CACHESIZ, TEXT='FMC_CACHESIZ');
      363     8542        %TEXTC (NAME=FMC_TYPTBL$, TEXT='FMC_TYPTBL$');
      364     8566        %TEXTC (NAME=FMC_STATS$, TEXT='FMC_STATS$');
      365     8590        %TEXTC (NAME=FMC_CACHE$, TEXT='FMC_CACHE$');
      366     8614        %TEXTC (NAME=N$DCT$$, TEXT='N$DCT$$');
      367     8638        %TEXTC (NAME=NK_MXLOCAL, TEXT='NK_MXLOCAL');
      368     8662        %TEXTC (NAME=NK_MXTOTAL, TEXT='NK_MXTOTAL');
      369     8686        %TEXTC (NAME=NI_IOMS, TEXT='NI_IOMS');
      370     8710        %TEXTC (NAME=NI$CHT$, TEXT='NI$CHT$');
      371     8734        %TEXTC (NAME=FR$HD$, TEXT='FR$HD$');
      372     8758        %TEXTC (NAME=NI$IOQ$, TEXT='NI$IOQ$');
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:81   
      373     8782        %TEXTC (NAME=NI_NUMIOQ, TEXT='NI_NUMIOQ');
      374     8806        %TEXTC (NAME=S_MPSTATE, TEXT='S_MPSTATE');
      375     8830        %TEXTC (NAME=S_PORTNR, TEXT='S_PORTNR');
      376     8854        %TEXTC (NAME=S_PCU, TEXT='S_PCU');
      377     8878        %TEXTC (NAME=S_NSCPU, TEXT='S_NSCPU');
      378     8902        %TEXTC (NAME=KQ_HDLOG$, TEXT='KQ_HDLOG$');
      379     8926        %TEXTC (NAME=KQ_CURLOG$, TEXT='KQ_CURLOG$');
      380     8950        %TEXTC (NAME=B_SITEINFO, TEXT='B_SITEINFO');
      381     8974        %TEXTC (NAME=KQ_MMSD, TEXT='KQ_MMSD');
      382     8998        %TEXTC (NAME=F$CFU$, TEXT='F$CFU$');
      383     9022        %TEXTC (NAME=NI$IOM$, TEXT='NI$IOM$');
      384     9046        %TEXTC (NAME=S_CNODE, TEXT='S_CNODE');
      385     9070        %TEXTC (NAME=KI_TCTX_MAX#, TEXT='KI_TCTX_MAX#');
      386     9094        %TEXTC (NAME=KIS_MAJOR$, TEXT='KIS_MAJOR$');
      387     9118        %TEXTC (NAME=KIS_MINOR$, TEXT='KIS_MINOR$');
      388     9142        %TEXTC (NAME=KIS_SSN_CLIENTS, TEXT='KIS_SSN_CLIENTS');
      389     9166        %TEXTC (NAME=KIS_SSN_SERVERS, TEXT='KIS_SSN_SERVERS');
      390     9190        %TEXTC (NAME=KIS_SSN_MAX, TEXT='KIS_SSN_MAX');
      391     9214        %EJECT;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:82   
      392     9215    1           IF FID.L>0 THEN FPT_FID.TEXTFID_=VECTOR(FID.C);

   9215  4 000002   200003 470500                    LDP0    @FID,,AUTO
         4 000003   000100 101500                    MRL     fill='000'O
         4 000004   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 000005   200022 000004                    ADSC9   @BUF+2,,AUTO             cn=0,n=4
         4 000006   200022 236100                    LDQ     @BUF+2,,AUTO
         4 000007   000000 116003                    CMPQ    0,DU
         4 000010   000024 600000 4                  TZE     s:9216

   9215  4 000011   000100 101500                    MRL     fill='000'O
         4 000012   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 000013   200022 000002                    ADSC9   @BUF+2,,AUTO             cn=0,n=2
         4 000014   200022 220100                    LDX0    @BUF+2,,AUTO
         4 000015   000000 635010                    EAA     0,X0
         4 000016   000002 771000                    ARL     2
         4 000017   000140 135007                    SBLA    96,DL
         4 000020   200003 236100                    LDQ     @FID,,AUTO
         4 000021   200000 036007                    ADLQ    65536,DL
         4 000022   000204 757000 2                  STAQ    FPT_FID+2
         4 000023   000026 710000 4                  TRA     s:9217

      393     9216    1           ELSE FPT_FID.TEXTFID_=VECTOR(NIL);

   9216  4 000024   000000 237000 5                  LDAQ    0
         4 000025   000204 757000 2                  STAQ    FPT_FID+2

      394     9217    1           DA_SDCTL(0)='0'B;

   9217  4 000026   000000 450000 xsym               STZ     DA_SDCTL

      395     9218    1           DA_EDCTL(0)='0'B;

   9218  4 000027   000000 450000 xsym               STZ     DA_EDCTL

      396     9219    1           DA_ENTDEF$=ADDR(NIL);

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:83   
   9219  4 000030   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000031   000000 756000 xsym               STQ     DA_ENTDEF$

      397     9220    1           DA_SYMDEF$=ADDR(NIL);

   9220  4 000032   000000 756000 xsym               STQ     DA_SYMDEF$

      398     9221    1           DA_ALTSHI=0;

   9221  4 000033   000000 450000 xsym               STZ     DA_ALTSHI

      399     9222    1           DA_ALTSYM=0;

   9222  4 000034   000000 450000 xsym               STZ     DA_ALTSYM

      400     9223    1   GETLIB: KEY='005'O;

   9223  4 000035   000100 100400       GETLIB       MLR     fill='000'O
         4 000036   000002 000001 5                  ADSC9   2                        cn=0,n=1
         4 000037   200012 000006                    ADSC9   KEY,,AUTO                cn=0,n=6

      401     9224    1           CALL M$FID(FPT_FID) ALTRET(PMMEALT);

   9224  4 000040   000202 630400 2                  EPPR0   FPT_FID
         4 000041   420001 713400                    CLIMB   alt,+8193
         4 000042   404400 401760                    pmme    nvectors=10
         4 000043   000771 702000 4                  TSX2    PMMEALT

      402     9225    1           IF NOT VLR_FID.ACCT THEN VLP_ACCT.ACCT#=DA_DFLTACCT;

   9225  4 000044   000022 236000 2                  LDQ     VLR_FID
         4 000045   200000 316003                    CANQ    65536,DU
         4 000046   000052 601000 4                  TNZ     s:9226

   9225  4 000047   040000 100400                    MLR     fill='040'O
         4 000050   000000 000010 xsym               ADSC9   DA_DFLTACCT              cn=0,n=8
         4 000051   000010 000010 2                  ADSC9   VLP_ACCT                 cn=0,n=8
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:84   

      403     9226    1           IF DCBADDR(DCBNUM(F$SYMBOL))->F$DCB.FCD# THEN

   9226  4 000052   000000 236007 xsym               LDQ     F$SYMBOL,DL
         4 000053   000003 470400 5                  LDP0    3
         4 000054   000000 471500                    LDP1    0,,PR0
         4 000055   100000 473506                    LDP3    0,QL,PR1
         4 000056   300031 236100                    LDQ     25,,PR3
         4 000057   020000 316007                    CANQ    8192,DL
         4 000060   000065 600000 4                  TZE     s:9228

      404     9227    1              CALL M$CLOSE(FPT_CLOSE) ALTRET(PMMEALT);

   9227  4 000061   000144 630400 2                  EPPR0   FPT_CLOSE
         4 000062   450001 713400                    CLIMB   alt,close
         4 000063   406000 401760                    pmme    nvectors=13
         4 000064   000771 702000 4                  TSX2    PMMEALT

      405     9228    1           CALL M$OPEN(FPT_OPEN) ALTRET(PMMEALT);

   9228  4 000065   000034 630400 2                  EPPR0   FPT_OPEN
         4 000066   450000 713400                    CLIMB   alt,open
         4 000067   410400 401760                    pmme    nvectors=18
         4 000070   000771 702000 4                  TSX2    PMMEALT

      406     9229    1           CALL READ_KEYED(HEADKEY,VECTOR(DA_HEADREC)) ALTRET(PMMEALT);

   9229  4 000071   000006 236000 5                  LDQ     6
         4 000072   200020 756100                    STQ     @KEY+1,,AUTO
         4 000073   000007 236000 5                  LDQ     7
         4 000074   200017 756100                    STQ     P$+3,,AUTO
         4 000075   001061 701000 4                  TSX1    READ_KEYED
         4 000076   000771 702000 4                  TSX2    PMMEALT

      407     9230    1           SEGSIZE=DA_HEADREC.NRECSIZE;

   9230  4 000077   000246 236000 2                  LDQ     DA_HEADREC+6
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:85   
         4 000100   777777 376007                    ANQ     -1,DL
         4 000101   200005 756100                    STQ     SEGSIZE,,AUTO

      408     9231    1           SEGSIZE=SEGSIZE+DA_HEADREC.EPRECSIZE;

   9231  4 000102   000247 236000 2                  LDQ     DA_HEADREC+7
         4 000103   000022 772000                    QRL     18
         4 000104   200005 036100                    ADLQ    SEGSIZE,,AUTO
         4 000105   200005 756100                    STQ     SEGSIZE,,AUTO

      409     9232    1           SEGSIZE=SEGSIZE+DA_HEADREC.EDRECSIZE;

   9232  4 000106   000247 236000 2                  LDQ     DA_HEADREC+7
         4 000107   777777 376007                    ANQ     -1,DL
         4 000110   200005 036100                    ADLQ    SEGSIZE,,AUTO
         4 000111   200005 756100                    STQ     SEGSIZE,,AUTO

      410     9233    1           IF DA_ENTDEF$~=ADDR(NIL)

   9233  4 000112   000000 236000 xsym               LDQ     DA_ENTDEF$
         4 000113   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000114   000125 600000 4                  TZE     s:9235

      411     9234    1           THEN SEGSIZE=SEGSIZE+POFFW(P$,DA_DNAME$);

   9234  4 000115   000000 235000 xsym               LDA     DA_DNAME$
         4 000116   000022 771000                    ARL     18
         4 000117   200022 755100                    STA     @BUF+2,,AUTO
         4 000120   200014 236100                    LDQ     P$,,AUTO
         4 000121   000022 772000                    QRL     18
         4 000122   200022 136100                    SBLQ    @BUF+2,,AUTO
         4 000123   200005 036100                    ADLQ    SEGSIZE,,AUTO
         4 000124   200005 756100                    STQ     SEGSIZE,,AUTO

      412     9235    1           SEGSIZE=((SEGSIZE+1023)/1024)*1024;

   9235  4 000125   200005 236100                    LDQ     SEGSIZE,,AUTO
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:86   
         4 000126   001777 036007                    ADLQ    1023,DL
         4 000127   002000 506007                    DIV     1024,DL
         4 000130   000012 736000                    QLS     10
         4 000131   200005 756100                    STQ     SEGSIZE,,AUTO

      413     9236    1           I=SEGSIZE-((DA_SYMSEG.BOUND+1)/4);

   9236  4 000132   000000 236000 xsym               LDQ     DA_SYMSEG
         4 000133   000020 772000                    QRL     16
         4 000134   000001 036007                    ADLQ    1,DL
         4 000135   000002 772000                    QRL     2
         4 000136   200022 756100                    STQ     @BUF+2,,AUTO
         4 000137   200005 236100                    LDQ     SEGSIZE,,AUTO
         4 000140   200022 136100                    SBLQ    @BUF+2,,AUTO
         4 000141   200006 756100                    STQ     I,,AUTO

      414     9237    2           IF I>0 THEN DO;

   9237  4 000142   000152 604400 4                  TMOZ    s:9241

      415     9238    2              FPT_GDS.V.SEGSIZE#=I;

   9238  4 000143   000000 620006                    EAX0    0,QL
         4 000144   000236 440000 2                  SXL0    FPT_GDS+4

      416     9239    2              CALL M$GDS(FPT_GDS) ALTRET(PMMEALT);

   9239  4 000145   000232 630400 2                  EPPR0   FPT_GDS
         4 000146   430001 713400                    CLIMB   alt,gds
         4 000147   400400 401760                    pmme    nvectors=2
         4 000150   000771 702000 4                  TSX2    PMMEALT

      417     9240    2              END;

   9240  4 000151   000162 710000 4                  TRA     s:9245

      418     9241    2           ELSE IF I<0 THEN DO;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:87   

   9241  4 000152   000162 605000 4                  TPL     s:9245

      419     9242    2                 FPT_GDS.V.SEGSIZE#=-I;

   9242  4 000153   777777 620006                    EAX0    -1,QL
         4 000154   777777 660003                    ERX0    -1,DU
         4 000155   000236 440000 2                  SXL0    FPT_GDS+4

      420     9243    2                 CALL M$FDS(FPT_GDS) ALTRET(PMMEALT);

   9243  4 000156   000232 630400 2                  EPPR0   FPT_GDS
         4 000157   430002 713400                    CLIMB   alt,fds
         4 000160   400400 401760                    pmme    nvectors=2
         4 000161   000771 702000 4                  TSX2    PMMEALT

      421     9244    2                 END;

      422     9245    1           DA_DNAME$=DA_SYMSEG.P$;

   9245  4 000162   000001 236000 xsym               LDQ     DA_SYMSEG+1
         4 000163   000000 756000 xsym               STQ     DA_DNAME$

      423     9246    2           IF DA_ENTDEF$=ADDR(NIL) THEN DO;

   9246  4 000164   000000 236000 xsym               LDQ     DA_ENTDEF$
         4 000165   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000166   000176 601000 4                  TNZ     s:9250

      424     9247    2              P$=DA_DNAME$;

   9247  4 000167   000000 236000 xsym               LDQ     DA_DNAME$
         4 000170   200014 756100                    STQ     P$,,AUTO

      425     9248    2              CSIZE=DA_SYMSEG.BOUND+1;

   9248  4 000171   000000 236000 xsym               LDQ     DA_SYMSEG
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:88   
         4 000172   000020 772000                    QRL     16
         4 000173   000001 036007                    ADLQ    1,DL
         4 000174   200007 756100                    STQ     CSIZE,,AUTO

      426     9249    2              END;

   9249  4 000175   000202 710000 4                  TRA     s:9251

      427     9250    1           ELSE CSIZE=CSIZE+I*4;

   9250  4 000176   200006 236100                    LDQ     I,,AUTO
         4 000177   000002 736000                    QLS     2
         4 000200   200007 036100                    ADLQ    CSIZE,,AUTO
         4 000201   200007 756100                    STQ     CSIZE,,AUTO

      428     9251    1           FPT_GDS.V.SEGSIZE#=1024;

   9251  4 000202   002000 220003                    LDX0    1024,DU
         4 000203   000236 440000 2                  SXL0    FPT_GDS+4

      429     9252    1           NODE=0;

   9252  4 000204   200011 450100                    STZ     NODE,,AUTO

      430     9253    2           DO WHILE '1'B;

      431     9254    2              KEY.T=%TYPDNAM;

   9254  4 000205   000001 236003                    LDQ     1,DU
         4 000206   200012 552120                    STBQ    KEY,'20'O,AUTO

      432     9255    2              SEGSIZE=POFFW(P$,DA_DNAME$);

   9255  4 000207   000000 235000 xsym               LDA     DA_DNAME$
         4 000210   000022 771000                    ARL     18
         4 000211   200022 755100                    STA     @BUF+2,,AUTO
         4 000212   200014 236100                    LDQ     P$,,AUTO
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:89   
         4 000213   000022 772000                    QRL     18
         4 000214   200022 136100                    SBLQ    @BUF+2,,AUTO
         4 000215   200005 756100                    STQ     SEGSIZE,,AUTO

      433     9256    2              CALL READ_KEYED(KEY,VECTOR(P$->CBASE)) ALTRET(PMMEALT);

   9256  4 000216   200007 235100                    LDA     CSIZE,,AUTO
         4 000217   000020 735000                    ALS     16
         4 000220   000140 135007                    SBLA    96,DL
         4 000221   200014 236100                    LDQ     P$,,AUTO
         4 000222   200024 757100                    STAQ    @BUF+4,,AUTO
         4 000223   200024 630500                    EPPR0   @BUF+4,,AUTO
         4 000224   200020 450500                    STP0    @KEY+1,,AUTO
         4 000225   200012 631500                    EPPR1   KEY,,AUTO
         4 000226   200017 451500                    STP1    P$+3,,AUTO
         4 000227   001061 701000 4                  TSX1    READ_KEYED
         4 000230   000771 702000 4                  TSX2    PMMEALT

      434     9257    2              KEY.T=%TYPSDEF;

   9257  4 000231   000006 236003                    LDQ     6,DU
         4 000232   200012 552120                    STBQ    KEY,'20'O,AUTO

      435     9258    2              IF DA_ENTDEF$=ADDR(NIL) THEN DA_SYMDEF$=P$;

   9258  4 000233   000000 236000 xsym               LDQ     DA_ENTDEF$
         4 000234   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000235   000241 601000 4                  TNZ     s:9259

   9258  4 000236   200014 236100                    LDQ     P$,,AUTO
         4 000237   000000 756000 xsym               STQ     DA_SYMDEF$
         4 000240   000253 710000 4                  TRA     s:9260

      436     9259    2              ELSE DA_SDCTL.START(NODE)=POFFW(P$,DA_SYMDEF$)/2;

   9259  4 000241   000000 235000 xsym               LDA     DA_SYMDEF$
         4 000242   000022 771000                    ARL     18
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:90   
         4 000243   200022 755100                    STA     @BUF+2,,AUTO
         4 000244   200014 236100                    LDQ     P$,,AUTO
         4 000245   000022 772000                    QRL     18
         4 000246   200022 136100                    SBLQ    @BUF+2,,AUTO
         4 000247   000002 506007                    DIV     2,DL
         4 000250   000000 620006                    EAX0    0,QL
         4 000251   200011 721100                    LXL1    NODE,,AUTO
         4 000252   000000 740011 xsym               STX0    DA_SDCTL,X1

      437     9260    2              CALL READ_KEYED(KEY,VECTOR(P$->CBASE)) ALTRET(PMMEALT);

   9260  4 000253   200007 235100                    LDA     CSIZE,,AUTO
         4 000254   000020 735000                    ALS     16
         4 000255   000140 135007                    SBLA    96,DL
         4 000256   200014 236100                    LDQ     P$,,AUTO
         4 000257   200026 757100                    STAQ    @BUF+6,,AUTO
         4 000260   200026 630500                    EPPR0   @BUF+6,,AUTO
         4 000261   200020 450500                    STP0    @KEY+1,,AUTO
         4 000262   200012 631500                    EPPR1   KEY,,AUTO
         4 000263   200017 451500                    STP1    P$+3,,AUTO
         4 000264   001061 701000 4                  TSX1    READ_KEYED
         4 000265   000771 702000 4                  TSX2    PMMEALT

      438     9261    3              IF SEGSIZE>0 THEN DO I=-ARS TO -1;

   9261  4 000266   200005 235100                    LDA     SEGSIZE,,AUTO
         4 000267   000307 604400 4                  TMOZ    NOSDEF

   9261  4 000270   000000 236003                    LDQ     0,DU
         4 000271   200010 136100                    SBLQ    ARS,,AUTO
         4 000272   200006 756100                    STQ     I,,AUTO
         4 000273   000305 710000 4                  TRA     s:9263+1

      439     9262    3                 P$->B$SDEF.NPOINTER(I)=P$->B$SDEF.NPOINTER(I)+SEGSIZE;

   9262  4 000274   200006 235100                    LDA     I,,AUTO
         4 000275   000001 735000                    ALS     1
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:91   
         4 000276   200014 470500                    LDP0    P$,,AUTO
         4 000277   000001 236105                    LDQ     1,AL,PR0
         4 000300   000022 732000                    QRS     18
         4 000301   200005 036100                    ADLQ    SEGSIZE,,AUTO
         4 000302   000000 620006                    EAX0    0,QL
         4 000303   000001 740105                    STX0    1,AL,PR0

      440     9263    3                 END;

   9263  4 000304   200006 054100                    AOS     I,,AUTO
         4 000305   200006 235100                    LDA     I,,AUTO
         4 000306   000274 604000 4                  TMI     s:9262

      441     9264    2   NOSDEF:    DA_SDCTL.STOP(NODE)=ARS+DA_SDCTL.START(NODE);

   9264  4 000307   200011 720100       NOSDEF       LXL0    NODE,,AUTO
         4 000310   000000 236010 xsym               LDQ     DA_SDCTL,X0
         4 000311   000022 732000                    QRS     18
         4 000312   200010 036100                    ADLQ    ARS,,AUTO
         4 000313   000000 621006                    EAX1    0,QL
         4 000314   000000 441010 xsym               SXL1    DA_SDCTL,X0

      442     9265    2              KEY.T=%TYPEDEF;

   9265  4 000315   000004 236003                    LDQ     4,DU
         4 000316   200012 552120                    STBQ    KEY,'20'O,AUTO

      443     9266    2              IF DA_ENTDEF$=ADDR(NIL) THEN DA_ENTDEF$=P$;

   9266  4 000317   000000 236000 xsym               LDQ     DA_ENTDEF$
         4 000320   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000321   000325 601000 4                  TNZ     s:9267

   9266  4 000322   200014 236100                    LDQ     P$,,AUTO
         4 000323   000000 756000 xsym               STQ     DA_ENTDEF$
         4 000324   000336 710000 4                  TRA     s:9268

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:92   
      444     9267    2              ELSE DA_EDCTL.START(NODE)=POFFW(P$,DA_ENTDEF$)/2;

   9267  4 000325   000000 235000 xsym               LDA     DA_ENTDEF$
         4 000326   000022 771000                    ARL     18
         4 000327   200022 755100                    STA     @BUF+2,,AUTO
         4 000330   200014 236100                    LDQ     P$,,AUTO
         4 000331   000022 772000                    QRL     18
         4 000332   200022 136100                    SBLQ    @BUF+2,,AUTO
         4 000333   000002 506007                    DIV     2,DL
         4 000334   000000 622006                    EAX2    0,QL
         4 000335   000000 742010 xsym               STX2    DA_EDCTL,X0

      445     9268    2              CALL READ_KEYED(KEY,VECTOR(P$->CBASE)) ALTRET(PMMEALT);

   9268  4 000336   200007 235100                    LDA     CSIZE,,AUTO
         4 000337   000020 735000                    ALS     16
         4 000340   000140 135007                    SBLA    96,DL
         4 000341   200014 236100                    LDQ     P$,,AUTO
         4 000342   200030 757100                    STAQ    @BUF+8,,AUTO
         4 000343   200030 630500                    EPPR0   @BUF+8,,AUTO
         4 000344   200020 450500                    STP0    @KEY+1,,AUTO
         4 000345   200012 631500                    EPPR1   KEY,,AUTO
         4 000346   200017 451500                    STP1    P$+3,,AUTO
         4 000347   001061 701000 4                  TSX1    READ_KEYED
         4 000350   000771 702000 4                  TSX2    PMMEALT

      446     9269    3              IF SEGSIZE>0 THEN DO I=-ARS TO -1;

   9269  4 000351   200005 235100                    LDA     SEGSIZE,,AUTO
         4 000352   000372 604400 4                  TMOZ    s:9272

   9269  4 000353   000000 236003                    LDQ     0,DU
         4 000354   200010 136100                    SBLQ    ARS,,AUTO
         4 000355   200006 756100                    STQ     I,,AUTO
         4 000356   000370 710000 4                  TRA     s:9271+1

      447     9270    3                 P$->B$EDEF.NPOINTER(I)=P$->B$EDEF.NPOINTER(I)+SEGSIZE;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:93   

   9270  4 000357   200006 235100                    LDA     I,,AUTO
         4 000360   000001 735000                    ALS     1
         4 000361   200014 470500                    LDP0    P$,,AUTO
         4 000362   000001 236105                    LDQ     1,AL,PR0
         4 000363   000022 732000                    QRS     18
         4 000364   200005 036100                    ADLQ    SEGSIZE,,AUTO
         4 000365   000000 620006                    EAX0    0,QL
         4 000366   000001 740105                    STX0    1,AL,PR0

      448     9271    3                 END;

   9271  4 000367   200006 054100                    AOS     I,,AUTO
         4 000370   200006 235100                    LDA     I,,AUTO
         4 000371   000357 604000 4                  TMI     s:9270

      449     9272    2              DA_EDCTL.STOP(NODE)=ARS+DA_EDCTL.START(NODE);

   9272  4 000372   200011 720100                    LXL0    NODE,,AUTO
         4 000373   000000 236010 xsym               LDQ     DA_EDCTL,X0
         4 000374   000022 732000                    QRS     18
         4 000375   200010 036100                    ADLQ    ARS,,AUTO
         4 000376   000000 621006                    EAX1    0,QL
         4 000377   000000 441010 xsym               SXL1    DA_EDCTL,X0

      450     9273    2              IF DA_ALTSYM~=0 OR NODE=15 THEN EXIT;

   9273  4 000400   000000 235000 xsym               LDA     DA_ALTSYM
         4 000401   000426 601000 4                  TNZ     ODON
         4 000402   200011 236100                    LDQ     NODE,,AUTO
         4 000403   000017 116007                    CMPQ    15,DL
         4 000404   000426 600000 4                  TZE     ODON

      451     9274    2              NODE=NODE+1;

   9274  4 000405   200011 054100                    AOS     NODE,,AUTO

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:94   
      452     9275    2              IF ADDR(NODENUM)=ADDR(NIL) OR NODENUM=0 THEN KEY.O=NODE;

   9275  4 000406   200004 236100                    LDQ     @NODENUM,,AUTO
         4 000407   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000410   000414 600000 4                  TZE     s:9275+6
         4 000411   200004 470500                    LDP0    @NODENUM,,AUTO
         4 000412   000000 235100                    LDA     0,,PR0
         4 000413   000417 601000 4                  TNZ     s:9277

   9275  4 000414   200011 720100                    LXL0    NODE,,AUTO
         4 000415   200012 440100                    SXL0    KEY,,AUTO
         4 000416   000205 710000 4                  TRA     s:9254

      453     9276    3              ELSE DO;

      454     9277    3                 KEY.O=NODENUM;

   9277  4 000417   000000 720100                    LXL0    0,,PR0
         4 000420   200012 440100                    SXL0    KEY,,AUTO

      455     9278    3                 DA_ALTSYM=1;

   9278  4 000421   000001 235007                    LDA     1,DL
         4 000422   000000 755000 xsym               STA     DA_ALTSYM

      456     9279    3                 DA_ALTSHI=2;

   9279  4 000423   000002 235007                    LDA     2,DL
         4 000424   000000 755000 xsym               STA     DA_ALTSHI

      457     9280    3                 END;

      458     9281    2              END;

   9281  4 000425   000205 710000 4                  TRA     s:9254

   9274  4 000426                       ODON         null
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:95   
      459     9282    1   ODON:   ;
      460     9283    2           CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO; END;

   9283  4 000426   000144 630400 2                  EPPR0   FPT_CLOSE
         4 000427   450001 713400                    CLIMB   alt,close
         4 000430   406000 401760                    pmme    nvectors=13
         4 000431   000433 702000 4                  TSX2    s:9284
         4 000432   000433 710000 4                  TRA     s:9284

      461     9284    1           IF DA_DFLT_RADIX>8              /* This screws up in Fep mode */

   9284  4 000433   000000 235000 xsym               LDA     DA_DFLT_RADIX
         4 000434   000011 115007                    CMPA    9,DL
         4 000435   000745 603000 4                  TRC     RET
         4 000436   000000 236000 xsym               LDQ     DA_ALTSYM
         4 000437   000745 601000 4                  TNZ     RET

      462     9285    1             OR DA_ALTSYM~=0 THEN GOTO RET; /* or if linked with M:MON */
      463     9286    1           CALL DAS$SDSRCHPTR (S_WSPTD,I) ALTRET (RET);

   9286  4 000440   200006 630500                    EPPR0   I,,AUTO
         4 000441   200023 450500                    STP0    @BUF+3,,AUTO
         4 000442   000010 236000 5                  LDQ     8
         4 000443   200022 756100                    STQ     @BUF+2,,AUTO
         4 000444   200022 630500                    EPPR0   @BUF+2,,AUTO
         4 000445   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000446   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000447   000745 702000 4                  TSX2    RET

      464     9287                       /* WE HAVE A M:MON FILE, LOAD COMMON SYMBOLS FOR DAS$SDMONPTR */
      465     9288    1           CALL DAS$SDSRCHPTR (P_LAST_AUTO, DA_MONPTR$(%M#P_LAST_AUTO));

   9288  4 000450   000011 630400 5                  EPPR0   9
         4 000451   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000452   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000453   000000 011000                    NOP     0

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:96   
      466     9289    1           CALL DAS$SDSRCHPTR (B$P$, DA_MONPTR$(%M#B$P$));

   9289  4 000454   000013 630400 5                  EPPR0   11
         4 000455   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000456   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000457   000000 011000                    NOP     0

      467     9290    1           CALL DAS$SDSRCHPTR (S_HQ, DA_MONPTR$(%M#S_HQ));

   9290  4 000460   000015 630400 5                  EPPR0   13
         4 000461   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000462   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000463   000000 011000                    NOP     0

      468     9291    1           CALL DAS$SDSRCHPTR (S_TQ, DA_MONPTR$(%M#S_TQ));

   9291  4 000464   000017 630400 5                  EPPR0   15
         4 000465   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000466   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000467   000000 011000                    NOP     0

      469     9292    1           CALL DAS$SDSRCHPTR (S_RQH, DA_MONPTR$(%M#S_RQH));

   9292  4 000470   000021 630400 5                  EPPR0   17
         4 000471   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000472   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000473   000000 011000                    NOP     0

      470     9293    1           CALL DAS$SDSRCHPTR (S_EVX, DA_MONPTR$(%M#S_EVX));

   9293  4 000474   000023 630400 5                  EPPR0   19
         4 000475   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000476   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000477   000000 011000                    NOP     0

      471     9294    1           CALL DAS$SDSRCHPTR (S_EVBF, DA_MONPTR$(%M#S_EVBF));

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:97   
   9294  4 000500   000025 630400 5                  EPPR0   21
         4 000501   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000502   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000503   000000 011000                    NOP     0

      472     9295    1           CALL DAS$SDSRCHPTR (H_CNCTEVX, DA_MONPTR$(%M#H_CNCTEVX));

   9295  4 000504   000027 630400 5                  EPPR0   23
         4 000505   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000506   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000507   000000 011000                    NOP     0

      473     9296    1           CALL DAS$SDSRCHPTR (H_CNCTEVBF, DA_MONPTR$(%M#H_CNCTEVBF));

   9296  4 000510   000031 630400 5                  EPPR0   25
         4 000511   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000512   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000513   000000 011000                    NOP     0

      474     9297    1           CALL DAS$SDSRCHPTR (S_PTYPE, DA_MONPTR$(%M#S_PTYPE));

   9297  4 000514   000033 630400 5                  EPPR0   27
         4 000515   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000516   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000517   000000 011000                    NOP     0

      475     9298    1           CALL DAS$SDSRCHPTR (KI_NODES, DA_MONPTR$(%M#KI_NODES));

   9298  4 000520   000035 630400 5                  EPPR0   29
         4 000521   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000522   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000523   000000 011000                    NOP     0

      476     9299    1           CALL DAS$SDSRCHPTR (KI_MXFE, DA_MONPTR$(%M#KI_MXFE));

   9299  4 000524   000037 630400 5                  EPPR0   31
         4 000525   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:98   
         4 000526   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000527   000000 011000                    NOP     0

      477     9300    1           CALL DAS$SDSRCHPTR (KI_ROUTE$$, DA_MONPTR$(%M#KI_ROUTE$$));

   9300  4 000530   000041 630400 5                  EPPR0   33
         4 000531   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000532   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000533   000000 011000                    NOP     0

      478     9301    1           CALL DAS$SDSRCHPTR (KI_FEI$$, DA_MONPTR$(%M#KI_FEI$$));

   9301  4 000534   000043 630400 5                  EPPR0   35
         4 000535   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000536   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000537   000000 011000                    NOP     0

      479     9302    1           CALL DAS$SDSRCHPTR (FMC_CACHESIZ, DA_MONPTR$(%M#FMC_CACHESIZ));

   9302  4 000540   000045 630400 5                  EPPR0   37
         4 000541   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000542   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000543   000000 011000                    NOP     0

      480     9303    1           CALL DAS$SDSRCHPTR (FMC_TYPTBL$, DA_MONPTR$(%M#FMC_TYPTBL$));

   9303  4 000544   000047 630400 5                  EPPR0   39
         4 000545   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000546   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000547   000000 011000                    NOP     0

      481     9304    1           CALL DAS$SDSRCHPTR (FMC_STATS$, DA_MONPTR$(%M#FMC_STATS$));

   9304  4 000550   000051 630400 5                  EPPR0   41
         4 000551   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000552   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000553   000000 011000                    NOP     0
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:99   

      482     9305    1           CALL DAS$SDSRCHPTR (FMC_CACHE$, DA_MONPTR$(%M#FMC_CACHE$));

   9305  4 000554   000053 630400 5                  EPPR0   43
         4 000555   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000556   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000557   000000 011000                    NOP     0

      483     9306    1           CALL DAS$SDSRCHPTR (N$DCT$$, DA_MONPTR$(%M#N$DCT$$));

   9306  4 000560   000055 630400 5                  EPPR0   45
         4 000561   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000562   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000563   000000 011000                    NOP     0

      484     9307    1           CALL DAS$SDSRCHPTR (NK_MXLOCAL, DA_MONPTR$(%M#NK_MXLOCAL));

   9307  4 000564   000057 630400 5                  EPPR0   47
         4 000565   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000566   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000567   000000 011000                    NOP     0

      485     9308    1           CALL DAS$SDSRCHPTR (NK_MXTOTAL, DA_MONPTR$(%M#NK_MXTOTAL));

   9308  4 000570   000061 630400 5                  EPPR0   49
         4 000571   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000572   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000573   000000 011000                    NOP     0

      486     9309    1           CALL DAS$SDSRCHPTR (NI_IOMS, DA_MONPTR$(%M#NI_IOMS));

   9309  4 000574   000063 630400 5                  EPPR0   51
         4 000575   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000576   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000577   000000 011000                    NOP     0

      487     9310    1           CALL DAS$SDSRCHPTR (NI$CHT$, DA_MONPTR$(%M#NI$CHT$));
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:100  

   9310  4 000600   000065 630400 5                  EPPR0   53
         4 000601   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000602   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000603   000000 011000                    NOP     0

      488     9311    1           CALL DAS$SDSRCHPTR (FR$HD$, DA_MONPTR$(%M#FR$HD$));

   9311  4 000604   000067 630400 5                  EPPR0   55
         4 000605   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000606   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000607   000000 011000                    NOP     0

      489     9312    1           CALL DAS$SDSRCHPTR (NI$IOQ$, DA_MONPTR$(%M#NI$IOQ$));

   9312  4 000610   000071 630400 5                  EPPR0   57
         4 000611   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000612   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000613   000000 011000                    NOP     0

      490     9313    1           CALL DAS$SDSRCHPTR (NI_NUMIOQ, DA_MONPTR$(%M#NI_NUMIOQ));

   9313  4 000614   000073 630400 5                  EPPR0   59
         4 000615   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000616   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000617   000000 011000                    NOP     0

      491     9314    1           CALL DAS$SDSRCHPTR (S_MPSTATE, DA_MONPTR$(%M#S_MPSTATE));

   9314  4 000620   000075 630400 5                  EPPR0   61
         4 000621   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000622   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000623   000000 011000                    NOP     0

      492     9315    1           CALL DAS$SDSRCHPTR (S_PORTNR, DA_MONPTR$(%M#S_PORTNR));

   9315  4 000624   000077 630400 5                  EPPR0   63
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:101  
         4 000625   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000626   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000627   000000 011000                    NOP     0

      493     9316    1           CALL DAS$SDSRCHPTR (S_PCU, DA_MONPTR$(%M#S_PCU));

   9316  4 000630   000101 630400 5                  EPPR0   65
         4 000631   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000632   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000633   000000 011000                    NOP     0

      494     9317    1           CALL DAS$SDSRCHPTR (S_NSCPU, DA_MONPTR$(%M#S_NSCPU));

   9317  4 000634   000103 630400 5                  EPPR0   67
         4 000635   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000636   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000637   000000 011000                    NOP     0

      495     9318    1           CALL DAS$SDSRCHPTR (KQ_HDLOG$, DA_MONPTR$(%M#KQ_HDLOG$));

   9318  4 000640   000105 630400 5                  EPPR0   69
         4 000641   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000642   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000643   000000 011000                    NOP     0

      496     9319    1           CALL DAS$SDSRCHPTR (KQ_CURLOG$, DA_MONPTR$(%M#KQ_CURLOG$));

   9319  4 000644   000107 630400 5                  EPPR0   71
         4 000645   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000646   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000647   000000 011000                    NOP     0

      497     9320    1           CALL DAS$SDSRCHPTR (B_SITEINFO, DA_MONPTR$(%M#B_SITEINFO));

   9320  4 000650   000111 630400 5                  EPPR0   73
         4 000651   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000652   000000 701000 xent               TSX1    DAS$SDSRCHPTR
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:102  
         4 000653   000000 011000                    NOP     0

      498     9321    1           CALL DAS$SDSRCHPTR (KQ_MMSD, DA_MONPTR$(%M#KQ_MMSD));

   9321  4 000654   000113 630400 5                  EPPR0   75
         4 000655   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000656   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000657   000000 011000                    NOP     0

      499     9322    1           CALL DAS$SDSRCHPTR (F$CFU$, DA_MONPTR$(%M#F$CFU$));

   9322  4 000660   000115 630400 5                  EPPR0   77
         4 000661   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000662   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000663   000000 011000                    NOP     0

      500     9323    1           CALL DAS$SDSRCHPTR (NI$IOM$, DA_MONPTR$(%M#NI$IOM$));

   9323  4 000664   000117 630400 5                  EPPR0   79
         4 000665   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000666   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000667   000000 011000                    NOP     0

      501     9324    1           CALL DAS$SDSRCHPTR (KI_TCTX_MAX#, DA_MONPTR$(%M#KI_TCTX_MAX#));

   9324  4 000670   000121 630400 5                  EPPR0   81
         4 000671   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000672   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000673   000000 011000                    NOP     0

      502     9325    1           CALL DAS$SDSRCHPTR (KIS_MAJOR$, DA_MONPTR$(%M#KIS_MAJOR$));

   9325  4 000674   000123 630400 5                  EPPR0   83
         4 000675   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000676   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000677   000000 011000                    NOP     0

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:103  
      503     9326    1           CALL DAS$SDSRCHPTR (KIS_MINOR$, DA_MONPTR$(%M#KIS_MINOR$));

   9326  4 000700   000125 630400 5                  EPPR0   85
         4 000701   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000702   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000703   000000 011000                    NOP     0

      504     9327    1           CALL DAS$SDSRCHPTR (KIS_SSN_CLIENTS, DA_MONPTR$(%M#KIS_SSN_CLIENTS));

   9327  4 000704   000127 630400 5                  EPPR0   87
         4 000705   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000706   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000707   000000 011000                    NOP     0

      505     9328    1           CALL DAS$SDSRCHPTR (KIS_SSN_SERVERS, DA_MONPTR$(%M#KIS_SSN_SERVERS));

   9328  4 000710   000131 630400 5                  EPPR0   89
         4 000711   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000712   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000713   000000 011000                    NOP     0

      506     9329    1           CALL DAS$SDSRCHPTR (KIS_SSN_MAX, DA_MONPTR$(%M#KIS_SSN_MAX));

   9329  4 000714   000133 630400 5                  EPPR0   91
         4 000715   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000716   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000717   000000 011000                    NOP     0
         4 000720   000723 710000 4                  TRA     s:9331

      507     9330    1   DAS$SETNODE: ENTRY ALTRET;

   9330  4 000721   000000 700200 xent  DAS$SETNODE  TSX0  ! X66_AUTO_2
         4 000722   000032 000002                    ZERO    26,2

      508     9331    1           CALL DAS$SDSRCHPTR (S_CNODE, DA_MONPTR$(%M#S_CNODE)) ALTRET(RET);

   9331  4 000723   000135 630400 5                  EPPR0   93
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:104  
         4 000724   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000725   000000 701000 xent               TSX1    DAS$SDSRCHPTR
         4 000726   000745 702000 4                  TSX2    RET

      509     9332    1           IF DA_INITIALIZED OR ADDR(FID)=ADDR(NIL)

   9332  4 000727   000000 234000 xsym               SZN     DA_INITIALIZED
         4 000730   000734 604000 4                  TMI     s:9333
         4 000731   200003 236100                    LDQ     @FID,,AUTO
         4 000732   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000733   000745 601000 4                  TNZ     RET

      510     9333    1           THEN CALL DAM$VPAGE(%(IS_BASE%/4096),%MSCPG3#,0,%MONWSQ)

   9333  4 000734   000140 630400 5                  EPPR0   96
         4 000735   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000736   000000 701000 xent               TSX1    DAM$VPAGE
         4 000737   000745 702000 4                  TSX2    RET

      511     9334    2              WHENRETURN DO;

      512     9335    2                 DA_ALTSYM=PINCRW(DA_MONPTR$(%M#S_CNODE),DA_MSCPG3*1024)->CNODE;

   9335  4 000740   000000 235000 xsym               LDA     DA_MSCPG3
         4 000741   000012 735000                    ALS     10
         4 000742   000045 470400 xsym               LDP0    DA_MONPTR$+37
         4 000743   000000 235105                    LDA     0,AL,PR0
         4 000744   000000 755000 xsym               STA     DA_ALTSYM

      513     9336    2                 END;

      514     9337    1   RET:    DA_SYMERR = '0'B;

   9337  4 000745   000000 450000 xsym  RET          STZ     DA_SYMERR

      515     9338    2           IF DA_ALTSYM=0 AND DA_HEADREC.LIBNAME.CNT>0 THEN DO;

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:105  
   9338  4 000746   000000 235000 xsym               LDA     DA_ALTSYM
         4 000747   000770 601000 4                  TNZ     s:9347
         4 000750   000270 236000 2                  LDQ     DA_HEADREC+24
         4 000751   777000 316003                    CANQ    -512,DU
         4 000752   000770 600000 4                  TZE     s:9347

      516     9339    2              IF DA_WINDOWBASE=0 THEN EXIT; /* Only do this in ANLZ */

   9339  4 000753   000000 235000 xsym               LDA     DA_WINDOWBASE
         4 000754   000770 600000 4                  TZE     s:9347

      517     9340    2              DA_ALTSHI=2;

   9340  4 000755   000002 235007                    LDA     2,DL
         4 000756   000000 755000 xsym               STA     DA_ALTSHI

      518     9341    2              DA_SDCTL(1)=DA_SDCTL(0);

   9341  4 000757   000000 236000 xsym               LDQ     DA_SDCTL
         4 000760   000001 756000 xsym               STQ     DA_SDCTL+1

      519     9342    2              DA_EDCTL(1)=DA_EDCTL(0);

   9342  4 000761   000000 236000 xsym               LDQ     DA_EDCTL
         4 000762   000001 756000 xsym               STQ     DA_EDCTL+1

      520     9343    2              DA_ALTSYM=1;

   9343  4 000763   000001 235007                    LDA     1,DL
         4 000764   000000 755000 xsym               STA     DA_ALTSYM

      521     9344    2              FPT_FID.TEXTFID_=VECTOR(DA_HEADREC.LIBNAME.TXT);

   9344  4 000765   000144 237000 5                  LDAQ    100
         4 000766   000204 757000 2                  STAQ    FPT_FID+2

      522     9345    2              GOTO GETLIB;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:106  

   9345  4 000767   000035 710000 4                  TRA     GETLIB

      523     9346    2              END;
      524     9347    1           RETURN;

   9347  4 000770   000000 702200 xent               TSX2  ! X66_ARET

   9344  4 000771                       PMMEALT      null
      525     9348    1   PMMEALT: ;
      526     9349    2           IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD THEN DO;

   9349  4 000771   000000 470400 xsym               LDP0    B$TCB$
         4 000772   000000 471500                    LDP1    0,,PR0
         4 000773   100102 236100                    LDQ     66,,PR1
         4 000774   377770 376007                    ANQ     131064,DL
         4 000775   000070 116007                    CMPQ    56,DL
         4 000776   001016 601000 4                  TNZ     s:9355

      527     9350    2              CALL M$GDS (FPT_GDS) ALTRET (PMMEALT);

   9350  4 000777   000232 630400 2                  EPPR0   FPT_GDS
         4 001000   430001 713400                    CLIMB   alt,gds
         4 001001   400400 401760                    pmme    nvectors=2
         4 001002   000771 702000 4                  TSX2    PMMEALT

      528     9351    2              CSIZE=CSIZE+4096;

   9351  4 001003   010000 236007                    LDQ     4096,DL
         4 001004   200007 056100                    ASQ     CSIZE,,AUTO

      529     9352    2              FPT_READ.BUF_.BOUND=CSIZE-1;

   9352  4 001005   200007 236100                    LDQ     CSIZE,,AUTO
         4 001006   000001 136007                    SBLQ    1,DL
         4 001007   000020 736000                    QLS     16
         4 001010   000132 676000 2                  ERQ     FPT_READ+4
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:107  
         4 001011   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 001012   000132 656000 2                  ERSQ    FPT_READ+4

      530     9353    2              CALL M$RETRY;

   9353  4 001013   010010 713400                    CLIMB   4104
         4 001014   000000 401760                    pmme    nvectors=0

      531     9354    2              END;

   9354  4 001015   001036 710000 4                  TRA     s:9364

      532     9355    2           ELSE IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$NOKEY AND KEY.O>0 THEN DO;

   9355  4 001016   001020 116007                    CMPQ    528,DL
         4 001017   001036 601000 4                  TNZ     s:9364
         4 001020   200012 720100                    LXL0    KEY,,AUTO
         4 001021   001036 600000 4                  TZE     s:9364

      533     9356    3                 IF KEY.T=%TYPSDEF THEN DO;

   9356  4 001022   200012 236100                    LDQ     KEY,,AUTO
         4 001023   000777 376003                    ANQ     511,DU
         4 001024   000006 116003                    CMPQ    6,DU
         4 001025   001030 601000 4                  TNZ     s:9360

      534     9357    3                    ARS=0;

   9357  4 001026   200010 450100                    STZ     ARS,,AUTO

      535     9358    3                    GOTO NOSDEF;

   9358  4 001027   000307 710000 4                  TRA     NOSDEF

      536     9359    3                    END;
      537     9360    2                 IF DA_ALTSHI>0 THEN EXIT;

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:108  
   9360  4 001030   000000 235000 xsym               LDA     DA_ALTSHI
         4 001031   001036 605400 4                  TPNZ    s:9364

      538     9361    2                 DA_ALTSHI=KEY.O;

   9361  4 001032   200012 236100                    LDQ     KEY,,AUTO
         4 001033   777777 376007                    ANQ     -1,DL
         4 001034   000000 756000 xsym               STQ     DA_ALTSHI

      539     9362    2                 GOTO ODON;

   9362  4 001035   000426 710000 4                  TRA     ODON

      540     9363    2                 END;
      541     9364    1           IF DA_ALTSYM>0 THEN GOTO RET;

   9364  4 001036   000000 235000 xsym               LDA     DA_ALTSYM
         4 001037   000745 605400 4                  TPNZ    RET

      542     9365    1           DA_SYMERR=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   9365  4 001040   000000 470400 xsym               LDP0    B$TCB$
         4 001041   000000 471500                    LDP1    0,,PR0
         4 001042   100102 236100                    LDQ     66,,PR1
         4 001043   000000 756000 xsym               STQ     DA_SYMERR

      543     9366    2           IF DCBADDR(DCBNUM(F$SYMBOL))->F$DCB.FCD# THEN DO;

   9366  4 001044   000000 236007 xsym               LDQ     F$SYMBOL,DL
         4 001045   000003 471400 5                  LDP1    3
         4 001046   100000 473500                    LDP3    0,,PR1
         4 001047   300000 474506                    LDP4    0,QL,PR3
         4 001050   400031 236100                    LDQ     25,,PR4
         4 001051   020000 316007                    CANQ    8192,DL
         4 001052   001060 600000 4                  TZE     s:9369

      544     9367    3              CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO; END;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:109  

   9367  4 001053   000144 630400 2                  EPPR0   FPT_CLOSE
         4 001054   450001 713400                    CLIMB   alt,close
         4 001055   406000 401760                    pmme    nvectors=13
         4 001056   001060 702000 4                  TSX2    s:9369
         4 001057   001060 710000 4                  TRA     s:9369

      545     9368    2              END;

      546     9369    1           ALTRETURN;

   9369  4 001060   000000 702200 xent               TSX2  ! X66_AALT

      547     9370        %EJECT;
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:110  
      548     9371    1   READ_KEYED: PROC(KEY,BUF) ALTRET;

   9371  4 001061   200016 741300       READ_KEYED   STX1  ! P$+2,,AUTO

      549     9372    2   DCL 1 KEY,
      550     9373    2         2 L UBIN BYTE UNAL,
      551     9374    2         2 C CHAR(KEY.L);
      552     9375    2   DCL BUF BIT(72) ALIGNED;
      553     9376        /**/
      554     9377    2           FPT_READ.BUF_=BUF;

   9377  4 001062   200020 470500                    LDP0    @BUF,,AUTO
         4 001063   000000 100500                    MLR     fill='000'O
         4 001064   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         4 001065   000132 000010 2                  ADSC9   FPT_READ+4               cn=0,n=8

      555     9378    3           IF FPT_READ.BUF_.BOUND=%BITBIN('3777777'O) THEN DO;

   9378  4 001066   000132 236000 2                  LDQ     FPT_READ+4
         4 001067   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 001070   000034 116000 xsym               CMPQ    B_VECTNIL+28
         4 001071   001104 601000 4                  TNZ     s:9383

      556     9379    3              CALL M$GDS (FPT_GDS) ALTRET (ALT);

   9379  4 001072   000232 630400 2                  EPPR0   FPT_GDS
         4 001073   430001 713400                    CLIMB   alt,gds
         4 001074   400400 401760                    pmme    nvectors=2
         4 001075   001145 702000 4                  TSX2    ALT

      557     9380    3              CSIZE=4096;

   9380  4 001076   010000 235007                    LDA     4096,DL
         4 001077   200007 755100                    STA     CSIZE,,AUTO

      558     9381    3              FPT_READ.BUF_.BOUND=4095;

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:111  
   9381  4 001100   000132 236000 2                  LDQ     FPT_READ+4
         4 001101   177777 376007                    ANQ     65535,DL
         4 001102   000146 276000 5                  ORQ     102
         4 001103   000132 756000 2                  STQ     FPT_READ+4

      559     9382    3              END;

      560     9383    2           FPT_READ.KEY_=VECTOR(KEY);

   9383  4 001104   200017 470500                    LDP0    @KEY,,AUTO
         4 001105   000100 101500                    MRL     fill='000'O
         4 001106   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001107   200022 000002                    ADSC9   @BUF+2,,AUTO             cn=0,n=2
         4 001110   200022 220100                    LDX0    @BUF+2,,AUTO
         4 001111   000001 621010                    EAX1    1,X0
         4 001112   000000 635011                    EAA     0,X1
         4 001113   000002 771000                    ARL     2
         4 001114   000140 135007                    SBLA    96,DL
         4 001115   200017 236100                    LDQ     @KEY,,AUTO
         4 001116   000130 757000 2                  STAQ    FPT_READ+2

      561     9384    2           CALL M$READ(FPT_READ) ALTRET(ALT);

   9384  4 001117   000126 630400 2                  EPPR0   FPT_READ
         4 001120   440000 713400                    CLIMB   alt,read
         4 001121   401400 401760                    pmme    nvectors=4
         4 001122   001145 702000 4                  TSX2    ALT

      562     9385    2           ARS=(DCBADDR(DCBNUM(F$SYMBOL))->F$DCB.ARS#+7)/8;

   9385  4 001123   000000 236007 xsym               LDQ     F$SYMBOL,DL
         4 001124   000003 470400 5                  LDP0    3
         4 001125   000000 471500                    LDP1    0,,PR0
         4 001126   100000 473506                    LDP3    0,QL,PR1
         4 001127   300000 236100                    LDQ     0,,PR3
         4 001130   000007 036007                    ADLQ    7,DL
         4 001131   000010 506007                    DIV     8,DL
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:112  
         4 001132   200010 756100                    STQ     ARS,,AUTO

      563     9386    2           P$=PINCRW(P$,ARS*2);

   9386  4 001133   000023 736000                    QLS     19
         4 001134   200014 036100                    ADLQ    P$,,AUTO
         4 001135   200014 756100                    STQ     P$,,AUTO

      564     9387    2           CSIZE=CSIZE-ARS*8;

   9387  4 001136   000000 236003                    LDQ     0,DU
         4 001137   200010 136100                    SBLQ    ARS,,AUTO
         4 001140   000003 736000                    QLS     3
         4 001141   200007 036100                    ADLQ    CSIZE,,AUTO
         4 001142   200007 756100                    STQ     CSIZE,,AUTO

      565     9388    2           RETURN;

   9388  4 001143   200016 221300                    LDX1  ! P$+2,,AUTO
         4 001144   000001 702211                    TSX2  ! 1,X1

      566     9389    2   ALT:    ALTRETURN;

   9389  4 001145   200016 221300       ALT          LDX1  ! P$+2,,AUTO
         4 001146   000000 702211                    TSX2  ! 0,X1
      567     9390    2   END READ_KEYED;
      568     9391    1   END DAS$SYMINIT;

PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:113  
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   DA_MONSYM_C.:E05TOU  is referenced.
   DA_TEXTC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DA_SYMBOLS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DAS$SYMINIT.
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:114  

 **** Variables and constants ****

  ****  Section 002  Data  DAS$SYMINIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   315-0-0/w STRC(45)    r     1 B$P$                     434-0-0/w STRC(99)    r     1 B_SITEINFO
   240-0-0/w STRC(1440)  r     1 DA_HEADREC               441-0-0/w STRC(63)    r     1 F$CFU$
   366-0-0/w STRC(99)    r     1 FMC_CACHE$               354-0-0/w STRC(117)   r     1 FMC_CACHESIZ
   363-0-0/w STRC(99)    r     1 FMC_STATS$               360-0-0/w STRC(108)   r     1 FMC_TYPTBL$
   144-0-0/d STRC(1080)  r     1 FPT_CLOSE                202-0-0/d STRC(864)   r     1 FPT_FID
   232-0-0/d STRC(216)   r     1 FPT_GDS                   34-0-0/d STRC(2088)  r     1 FPT_OPEN
   126-0-0/d STRC(504)   r     1 FPT_READ                 405-0-0/w STRC(63)    r     1 FR$HD$
   334-0-0/w STRC(99)    r     1 H_CNCTEVBF               331-0-0/w STRC(90)    r     1 H_CNCTEVX
   453-0-0/w STRC(99)    r     1 KIS_MAJOR$               456-0-0/w STRC(99)    r     1 KIS_MINOR$
   461-0-0/w STRC(144)   r     1 KIS_SSN_CLIENTS          471-0-0/w STRC(108)   r     1 KIS_SSN_MAX
   465-0-0/w STRC(144)   r     1 KIS_SSN_SERVERS          351-0-0/w STRC(81)    r     1 KI_FEI$$
   344-0-0/w STRC(72)    r     1 KI_MXFE                  341-0-0/w STRC(81)    r     1 KI_NODES
   346-0-0/w STRC(99)    r     1 KI_ROUTE$$               447-0-0/w STRC(117)   r     1 KI_TCTX_MAX#
   431-0-0/w STRC(99)    r     1 KQ_CURLOG$               426-0-0/w STRC(90)    r     1 KQ_HDLOG$
   437-0-0/w STRC(72)    r     1 KQ_MMSD                  371-0-0/w STRC(72)    r     1 N$DCT$$
   403-0-0/w STRC(72)    r     1 NI$CHT$                  443-0-0/w STRC(72)    r     1 NI$IOM$
   407-0-0/w STRC(72)    r     1 NI$IOQ$                  401-0-0/w STRC(72)    r     1 NI_IOMS
   411-0-0/w STRC(90)    r     1 NI_NUMIOQ                373-0-0/w STRC(99)    r     1 NK_MXLOCAL
   376-0-0/w STRC(99)    r     1 NK_MXTOTAL               312-0-0/w STRC(108)   r     1 P_LAST_AUTO
   445-0-0/w STRC(72)    r     1 S_CNODE                  327-0-0/w STRC(63)    r     1 S_EVBF
   325-0-0/w STRC(54)    r     1 S_EVX                    317-0-0/w STRC(45)    r     1 S_HQ
   414-0-0/w STRC(90)    r     1 S_MPSTATE                424-0-0/w STRC(72)    r     1 S_NSCPU
   422-0-0/w STRC(54)    r     1 S_PCU                    417-0-0/w STRC(81)    r     1 S_PORTNR
   337-0-0/w STRC(72)    r     1 S_PTYPE                  323-0-0/w STRC(54)    r     1 S_RQH
   321-0-0/w STRC(45)    r     1 S_TQ                     310-0-0/w STRC(72)    r     1 S_WSPTD
    10-0-0/c STRC(72)    r     1 VLP_ACCT                   0-0-0/c STRC(288)   r     1 VLP_NAME
    12-0-0/c STRC(72)    r     1 VLP_PASS                  14-0-0/d STRC(90)    r     1 VLP_SN
    20-0-0/c STRC(72)    r     1 VLP_WSN                   22-0-0/d STRC(324)   r     1 VLR_FID

  ****  Section 003 RoData DAS$SYMINIT
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:115  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(45)    r     1 HEADKEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    20-0-0/w PTR         r     1 @BUF                       3-0-0/w PTR         r     1 @FID
    17-0-0/w PTR         r     1 @KEY                       4-0-0/w PTR         r     1 @NODENUM
    10-0-0/w UBIN        r     1 ARS                       *0-0-0/w BIT (72)    r     1 BUF
     7-0-0/w SBIN        r     1 CSIZE                     *0-0-0/c ASTR(9)     r     1 FID
     6-0-0/w SBIN        r     1 I                         12-0-0/b STRC(54)    r     1 KEY
    *0-0-0/c ASTR(9)     r     1 KEY                       11-0-0/w SBIN        r     1 NODE
    *0-0-0/w SBIN        r     1 NODENUM                   14-0-0/w PTR         r     1 P$
     5-0-0/w SBIN        r     1 SEGSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w SBIN        r     1 DA_ALTSHI
     0-0-0/w SBIN        r     1 DA_ALTSYM                  0-0-0/c CHAR(8)     r     1 DA_DFLTACCT
     0-0-0/w UBIN        r     1 DA_DFLT_RADIX              0-0-0/w PTR         r     1 DA_DNAME$
     0-0-0/b STRC        r     1 DA_EDCTL(0:15)
     0-0-0/w PTR         r     1 DA_ENTDEF$                 0-0-0/w BIT         r     1 DA_INITIALIZED
     0-0-0/w PTR         r     1 DA_MONPTR$(0:50)
     0-0-0/w SBIN        r     1 DA_MSCPG3
     0-0-0/b STRC        r     1 DA_SDCTL(0:15)
     0-0-0/w PTR         r     1 DA_SYMDEF$                 0-0-0/b STRC        r     1 DA_SYMERR
     0-0-0/w STRC(72)    r     1 DA_SYMSEG                  0-0-0/w SBIN        r     1 DA_WINDOWBASE

  ****  BASED and DCB variables  ****
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:116  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(72)    r     1 B$EDEF(0:0)
     0-0-0/w STRC(72)    r     1 B$SDEF(0:0)                0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c ACHR        r     1 CBASE                      0-0-0/w UBIN        r     1 CNODE
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 F$SYMBOL


   Procedure DAS$SYMINIT requires 615 words for executable code.
   Procedure DAS$SYMINIT requires 26 words of local(AUTO) storage.

    No errors detected in file DAS$SYMBOL.:E05TSI    .
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:117  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:118  
          MINI XREF LISTING

ALT IN PROCEDURE READ_KEYED
      9389**LABEL    9379--CALLALT  9384--CALLALT
ARS
      3815**DCL      9261>>DOINDEX  9264>>ASSIGN   9269>>DOINDEX  9272>>ASSIGN   9357<<ASSIGN   9385<<ASSIGN
      9386>>ASSIGN   9387>>ASSIGN
B$ALT.CODE
      4223**DCL      4223--REDEF    4224--REDEF    4224--REDEF
B$ALT.ERR
      4224**DCL      9365>>ASSIGN
B$ALT.ERR.CODE
      4225**DCL      9349>>IF       9355>>IF
B$ALT.ERR.ERR#
      4225**DCL      4225--REDEF
B$ALT.EVID
      4224**DCL      4224--REDEF    4224--REDEF
B$EDEF.NPOINTER
      4509**DCL      9270<<ASSIGN   9270>>ASSIGN
B$EDEF.OU
      4501**DCL      4507--REDEF
B$P$
      8226**DCL      9289<>CALL
B$SDEF.AD.OU
      4450**DCL      4456--REDEF
B$SDEF.NPOINTER
      4458**DCL      9262<<ASSIGN   9262>>ASSIGN
B$SDEF.VALUE
      4431**DCL      4434--REDEF
B$TCB.ALT$
      4219**DCL      9349>>IF       9355>>IF       9365>>ASSIGN
B$TCB$
      4217**DCL      9349>>IF       9355>>IF       9365>>ASSIGN
BUF IN PROCEDURE READ_KEYED
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:119  
      9375**DCL      9371--PROC     9377>>ASSIGN
B_SITEINFO
      8970**DCL      9320<>CALL
CBASE
      3813**DCL      9256--CALL     9260--CALL     9268--CALL
CNODE
      3814**DCL      9335>>ASSIGN
CSIZE
      3812**DCL      3813--IMP-SIZ  9248<<ASSIGN   9250<<ASSIGN   9250>>ASSIGN   9256>>CALL     9260>>CALL
      9268>>CALL     9351<<ASSIGN   9351>>ASSIGN   9352>>ASSIGN   9380<<ASSIGN   9387<<ASSIGN   9387>>ASSIGN
DAM$VPAGE
      8153**DCL-ENT  9333--CALL
DAS$SDSRCHPTR
      8155**DCL-ENT  9286--CALL     9288--CALL     9289--CALL     9290--CALL     9291--CALL     9292--CALL
      9293--CALL     9294--CALL     9295--CALL     9296--CALL     9297--CALL     9298--CALL     9299--CALL
      9300--CALL     9301--CALL     9302--CALL     9303--CALL     9304--CALL     9305--CALL     9306--CALL
      9307--CALL     9308--CALL     9309--CALL     9310--CALL     9311--CALL     9312--CALL     9313--CALL
      9314--CALL     9315--CALL     9316--CALL     9317--CALL     9318--CALL     9319--CALL     9320--CALL
      9321--CALL     9322--CALL     9323--CALL     9324--CALL     9325--CALL     9326--CALL     9327--CALL
      9328--CALL     9329--CALL     9331--CALL
DA_ALTSHI
        24**DCL      9221<<ASSIGN   9279<<ASSIGN   9340<<ASSIGN   9360>>IF       9361<<ASSIGN
DA_ALTSYM
        24**DCL      9222<<ASSIGN   9273>>IF       9278<<ASSIGN   9284>>IF       9335<<ASSIGN   9338>>IF
      9343<<ASSIGN   9364>>IF
DA_DFLTACCT
        22**DCL      9225>>ASSIGN
DA_DFLT_RADIX
      8156**DCL      9284>>IF
DA_DNAME$
        21**DCL      9234>>ASSIGN   9245<<ASSIGN   9247>>ASSIGN   9255>>ASSIGN
DA_EDCTL
        24**DCL      9218<<ASSIGN   9342<<ASSIGN   9342>>ASSIGN
DA_EDCTL.START
        24**DCL      9267<<ASSIGN   9272>>ASSIGN
DA_EDCTL.STOP
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:120  
        24**DCL      9272<<ASSIGN
DA_ENTDEF$
        21**DCL      9219<<ASSIGN   9233>>IF       9246>>IF       9258>>IF       9266>>IF       9266<<ASSIGN
      9267>>ASSIGN
DA_HEADREC
      4230**DCL      9229--CALL
DA_HEADREC.EDRECSIZE
      4302**DCL      9232>>ASSIGN
DA_HEADREC.EPRECSIZE
      4299**DCL      9231>>ASSIGN
DA_HEADREC.LIBNAME.CNT
      4407**DCL      9338>>IF
DA_HEADREC.LIBNAME.TXT
      4410**DCL      9344--ASSIGN
DA_HEADREC.NRECSIZE
      4296**DCL      9230>>ASSIGN
DA_INITIALIZED
      3551**DCL      9332>>IF
DA_MAPSEG.P
      3561**DCL      3562--REDEF
DA_MONPTR$
        23**DCL      9288<>CALL     9289<>CALL     9290<>CALL     9291<>CALL     9292<>CALL     9293<>CALL
      9294<>CALL     9295<>CALL     9296<>CALL     9297<>CALL     9298<>CALL     9299<>CALL     9300<>CALL
      9301<>CALL     9302<>CALL     9303<>CALL     9304<>CALL     9305<>CALL     9306<>CALL     9307<>CALL
      9308<>CALL     9309<>CALL     9310<>CALL     9311<>CALL     9312<>CALL     9313<>CALL     9314<>CALL
      9315<>CALL     9316<>CALL     9317<>CALL     9318<>CALL     9319<>CALL     9320<>CALL     9321<>CALL
      9322<>CALL     9323<>CALL     9324<>CALL     9325<>CALL     9326<>CALL     9327<>CALL     9328<>CALL
      9329<>CALL     9331<>CALL     9335>>ASSIGN
DA_MSCPG3
      3558**DCL      9335>>ASSIGN
DA_SDASN.DESC.TYPE0
      3546**DCL      3546--REDEF
DA_SDCTL
        23**DCL      9217<<ASSIGN   9341<<ASSIGN   9341>>ASSIGN
DA_SDCTL.START
        23**DCL      9259<<ASSIGN   9264>>ASSIGN
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:121  
DA_SDCTL.STOP
        23**DCL      9264<<ASSIGN
DA_SYMDEF$
        21**DCL      9220<<ASSIGN   9258<<ASSIGN   9259>>ASSIGN
DA_SYMERR
        21**DCL      9337<<ASSIGN   9365<<ASSIGN
DA_SYMSEG
        20**DCL      4212--DCLINIT
DA_SYMSEG.BOUND
        20**DCL      9236>>ASSIGN   9248>>ASSIGN
DA_SYMSEG.P
        20**DCL        21--REDEF
DA_SYMSEG.P$
        21**DCL      9245>>ASSIGN
DA_TIGRSEG.P
      3562**DCL      3563--REDEF
DA_WINDOWBASE
      3550**DCL      9339>>IF
F$CFU$
      9018**DCL      9322<>CALL
F$DCB.ACTPOS
      4147**DCL      4147--REDEF
F$DCB.ARS#
      4121**DCL      4121--REDEF    9385>>ASSIGN
F$DCB.ATTR
      4140**DCL      4141--REDEF
F$DCB.BORROW
      4155**DCL      4155--REDEF    4155--REDEF    4155--REDEF
F$DCB.DCBNAME.L
      4169**DCL      4169--IMP-SIZ
F$DCB.EOMCHAR#
      4125**DCL      4125--REDEF
F$DCB.FCD#
      4134**DCL      9226>>IF       9366>>IF
F$DCB.FLDID
      4150**DCL      4150--REDEF
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:122  
F$DCB.FORM$
      4144**DCL      4144--REDEF
F$DCB.FSECT
      4160**DCL      4160--REDEF
F$DCB.FSN#
      4137**DCL      4137--REDEF    4137--REDEF    4138--REDEF
F$DCB.HEADER$
      4143**DCL      4143--REDEF
F$DCB.IXTNSIZE#
      4141**DCL      4141--REDEF
F$DCB.LASTSTA$
      4130**DCL      4130--REDEF
F$DCB.LVL
      4156**DCL      4156--REDEF
F$DCB.NAME#.C
      4131**DCL      4131--REDEF
F$DCB.NOEOF
      4153**DCL      4153--REDEF
F$DCB.NRECS#
      4142**DCL      4142--REDEF
F$DCB.NRECX
      4161**DCL      4161--REDEF
F$DCB.OHDR
      4153**DCL      4153--REDEF
F$DCB.ORG#
      4136**DCL      4136--REDEF
F$DCB.PRECNO
      4159**DCL      4159--REDEF
F$DCB.RCSZ
      4165**DCL      4165--REDEF
F$DCB.RES#
      4132**DCL      4132--REDEF
F$DCB.SETX
      4144**DCL      4144--REDEF
F$DCB.TAB$
      4144**DCL      4144--REDEF
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:123  
F$DCB.TDA
      4158**DCL      4159--REDEF
F$DCB.WSN#
      4132**DCL      4132--REDEF
F$SYMBOL
      3806**DCL      9226--IF       9366--IF       9385--ASSIGN
FID
         8**DCL         6--PROC     9332--IF
FID.C
        10**DCL      9215--ASSIGN
FID.L
         9**DCL        10--IMP-SIZ  9215>>IF       9215>>ASSIGN
FMC_CACHE$
      8610**DCL      9305<>CALL
FMC_CACHESIZ
      8538**DCL      9302<>CALL
FMC_STATS$
      8586**DCL      9304<>CALL
FMC_TYPTBL$
      8562**DCL      9303<>CALL
FPT_CLOSE
      4095**DCL      9227<>CALL     9283<>CALL     9367<>CALL
FPT_CLOSE.SN_
      4095**DCL      4095--REDEF
FPT_CLOSE.UTL_
      4096**DCL      4096--REDEF
FPT_CLOSE.V
      4100**DCL      4095--DCLINIT
FPT_CLOSE.V.EXPIRE#
      4110**DCL      4110--REDEF
FPT_CLOSE.V.TYPE#
      4108**DCL      4108--REDEF
FPT_CLOSE.V.XTNSIZE#
      4105**DCL      4105--REDEF    4107--REDEF
FPT_FID
      4189**DCL      9224<>CALL
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:124  
FPT_FID.TEXTFID_
      4189**DCL      9215<<ASSIGN   9216<<ASSIGN   9344<<ASSIGN
FPT_FID.V
      4193**DCL      4189--DCLINIT
FPT_GDS
      4212**DCL      9239<>CALL     9243<>CALL     9350<>CALL     9379<>CALL
FPT_GDS.V
      4212**DCL      4212--DCLINIT
FPT_GDS.V.SEGSIZE#
      4215**DCL      9238<<ASSIGN   9242<<ASSIGN   9251<<ASSIGN
FPT_OPEN
      3989**DCL      9228<>CALL
FPT_OPEN.ACSVEH_
      3991**DCL      3992--REDEF
FPT_OPEN.ALTKEYS_
      3997**DCL      3998--REDEF    3998--REDEF
FPT_OPEN.HDR_
      3996**DCL      3997--REDEF
FPT_OPEN.TAB_
      3995**DCL      3996--REDEF
FPT_OPEN.UHL_
      3989**DCL      3990--REDEF    3990--REDEF
FPT_OPEN.V
      3998**DCL      3989--DCLINIT
FPT_OPEN.V.ASN#
      4008**DCL      4192--DCLINIT
FPT_OPEN.V.FSN#
      4029**DCL      4029--REDEF    4029--REDEF
FPT_OPEN.V.RES#
      4013**DCL      4192--DCLINIT
FPT_OPEN.WSN_
      3995**DCL      3995--REDEF
FPT_READ
      4050**DCL      9384<>CALL
FPT_READ.BUF_
      4052**DCL      9377<<ASSIGN
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:125  
FPT_READ.BUF_.BOUND
      4052**DCL      9352<<ASSIGN   9378>>IF       9381<<ASSIGN
FPT_READ.KEY_
      4050**DCL      9383<<ASSIGN
FPT_READ.STATION_
      4053**DCL      4054--REDEF
FPT_READ.V
      4054**DCL      4050--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
      4065**DCL      4065--REDEF
FPT_READ.V.INDX#
      4063**DCL      4063--REDEF
FR$HD$
      8754**DCL      9311<>CALL
GETLIB
      9223**LABEL    9345--GOTO
HEADKEY
      4554**DCL      9229<>CALL
H_CNCTEVBF
      8394**DCL      9296<>CALL
H_CNCTEVX
      8370**DCL      9295<>CALL
I
      3811**DCL      9236<<ASSIGN   9237>>IF       9238>>ASSIGN   9241>>IF       9242>>ASSIGN   9250>>ASSIGN
      9261<<DOINDEX  9262>>ASSIGN   9262>>ASSIGN   9269<<DOINDEX  9270>>ASSIGN   9270>>ASSIGN   9286<>CALL
KEY
      4588**DCL      9223<<ASSIGN   9256<>CALL     9260<>CALL     9268<>CALL
KEY.O
      4591**DCL      9275<<ASSIGN   9277<<ASSIGN   9355>>IF       9361>>ASSIGN
KEY.T
      4590**DCL      9254<<ASSIGN   9257<<ASSIGN   9265<<ASSIGN   9356>>IF
KEY IN PROCEDURE READ_KEYED
      9372**DCL      9371--PROC     9383--ASSIGN
KEY.L IN PROCEDURE READ_KEYED
      9373**DCL      9374--IMP-SIZ  9383>>ASSIGN
KIS_MAJOR$
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:126  
      9114**DCL      9325<>CALL
KIS_MINOR$
      9138**DCL      9326<>CALL
KIS_SSN_CLIENTS
      9162**DCL      9327<>CALL
KIS_SSN_MAX
      9210**DCL      9329<>CALL
KIS_SSN_SERVERS
      9186**DCL      9328<>CALL
KI_FEI$$
      8514**DCL      9301<>CALL
KI_MXFE
      8466**DCL      9299<>CALL
KI_NODES
      8442**DCL      9298<>CALL
KI_ROUTE$$
      8490**DCL      9300<>CALL
KI_TCTX_MAX#
      9090**DCL      9324<>CALL
KQ_CURLOG$
      8946**DCL      9319<>CALL
KQ_HDLOG$
      8922**DCL      9318<>CALL
KQ_MMSD
      8994**DCL      9321<>CALL
M$CLOSE
      3464**DCL-ENT  9227--CALL     9283--CALL     9367--CALL
M$FDS
      3499**DCL-ENT  9243--CALL
M$FID
      3527**DCL-ENT  9224--CALL
M$GDS
      3499**DCL-ENT  9239--CALL     9350--CALL     9379--CALL
M$OPEN
      3464**DCL-ENT  9228--CALL
M$READ
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:127  
      3465**DCL-ENT  9384--CALL
M$RETRY
      3521**DCL-ENT  9353--CALL
N$DCT$$
      8634**DCL      9306<>CALL
NI$CHT$
      8730**DCL      9310<>CALL
NI$IOM$
      9042**DCL      9323<>CALL
NI$IOQ$
      8778**DCL      9312<>CALL
NI_IOMS
      8706**DCL      9309<>CALL
NI_NUMIOQ
      8802**DCL      9313<>CALL
NK_MXLOCAL
      8658**DCL      9307<>CALL
NK_MXTOTAL
      8682**DCL      9308<>CALL
NODE
      3816**DCL      9252<<ASSIGN   9259>>ASSIGN   9264>>ASSIGN   9264>>ASSIGN   9267>>ASSIGN   9272>>ASSIGN
      9272>>ASSIGN   9273>>IF       9274<<ASSIGN   9274>>ASSIGN   9275>>ASSIGN
NODENUM
         7**DCL         6--PROC     9275--IF       9275>>IF       9277>>ASSIGN
NOSDEF
      9264**LABEL    9358--GOTO
ODON
      9274**LABEL    9362--GOTO
P$
      4593**DCL      9234>>ASSIGN   9247<<ASSIGN   9255>>ASSIGN   9256>>CALL     9258>>ASSIGN   9259>>ASSIGN
      9260>>CALL     9262>>ASSIGN   9262>>ASSIGN   9266>>ASSIGN   9267>>ASSIGN   9268>>CALL     9270>>ASSIGN
      9270>>ASSIGN   9386<<ASSIGN   9386>>ASSIGN
PMMEALT
      9344**LABEL    9224--CALLALT  9227--CALLALT  9228--CALLALT  9229--CALLALT  9239--CALLALT  9243--CALLALT
      9256--CALLALT  9260--CALLALT  9268--CALLALT  9350--CALLALT
P_LAST_AUTO
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:128  
      8202**DCL      9288<>CALL
READ_KEYED
      9371**PROC     9229--CALL     9256--CALL     9260--CALL     9268--CALL
RET
      9337**LABEL    9285--GOTO     9286--CALLALT  9331--CALLALT  9364--GOTO
SEGSIZE
      3810**DCL      9230<<ASSIGN   9231<<ASSIGN   9231>>ASSIGN   9232<<ASSIGN   9232>>ASSIGN   9234<<ASSIGN
      9234>>ASSIGN   9235<<ASSIGN   9235>>ASSIGN   9236>>ASSIGN   9255<<ASSIGN   9261>>IF       9262>>ASSIGN
      9269>>IF       9270>>ASSIGN
S_CNODE
      9066**DCL      9331<>CALL
S_EVBF
      8346**DCL      9294<>CALL
S_EVX
      8322**DCL      9293<>CALL
S_HQ
      8250**DCL      9290<>CALL
S_MPSTATE
      8826**DCL      9314<>CALL
S_NSCPU
      8898**DCL      9317<>CALL
S_PCU
      8874**DCL      9316<>CALL
S_PORTNR
      8850**DCL      9315<>CALL
S_PTYPE
      8418**DCL      9297<>CALL
S_RQH
      8298**DCL      9292<>CALL
S_TQ
      8274**DCL      9291<>CALL
S_WSPTD
      8178**DCL      9286<>CALL
VLP_ACCT
      3858**DCL      3994--DCLINIT  4190--DCLINIT
VLP_ACCT.ACCT#
PL6.E3A0      #004=DAS$SYMINIT File=DAS$SYMBOL.:E05TSI                           TUE 07/29/97 12:53 Page:129  
      3858**DCL      9225<<ASSIGN
VLP_NAME
      3845**DCL      3990--DCLINIT  4190--DCLINIT
VLP_PASS
      3871**DCL      3991--DCLINIT  4191--DCLINIT
VLP_SN
      3884**DCL      3989--DCLINIT  4191--DCLINIT
VLP_WSN
      3897**DCL      3995--DCLINIT  4191--DCLINIT
VLR_FID
      3910**DCL      4193--DCLINIT
VLR_FID.ACCT
      3910**DCL      9225>>IF
