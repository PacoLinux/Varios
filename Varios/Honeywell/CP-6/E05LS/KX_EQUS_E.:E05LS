

14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          1    
    1      /*M*  KX_EQUS_E - X.25 Handler Equates */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /**/
    8      /*X*   PLM=4,IND=3,CTI=3,DCI=6,IAD=3,DTI=3,AND=Y,CSI=3,THI=3,STI=3,DMC=Y */
    9      /**/
   10      /*P*  NAME:     KX_EQUS_E */
   11      /*P*  PURPOSE:  This system file contains the equates */
   12      /*P*            for the X.25 handler. */
   13      /*  Device class id */
   14      /**/
   15      %EQU KX_DVCID_NORMAL# = '2140'X;
   16      /**/
   17      /*  KXF$FRAME events */
   18      /**/
   19      %EQU KX_F_EV_MIN# = 0;
   20      %EQU KX_F_EV_START# = 0;
   21      %EQU KX_F_EV_DIED# = 2;
   22      %EQU KX_F_EV_TO# = 3;
   23      /*  leave one slot for time-out conversion */
   24      %EQU KX_F_EV_CL_BUSY# = 5;
   25      %EQU KX_F_EV_CL_REJ# = 6;
   26      %EQU KX_F_EV_DATA_OUT# = 7;
   27      %EQU KX_F_EV_DATA_IN# = 8;
   28      %EQU KX_F_EV_DATAVL#  =  9;
   29      %EQU KX_F_EV_GETDAT#  = 10;
   30      %EQU KX_F_EV_ENB#    = 11;
   31      %EQU KX_F_EV_DSB#    = 12;
   32      %EQU KX_F_EV_KLL#    = 13;
   33      %EQU KX_F_EV_BLDCTX# = 14;
   34      %EQU KX_F_EV_DSC#    = 15;
   35      %EQU KX_F_EV_HNDINT# = 16;
   36      %EQU KX_F_EV_T20#    = 17;
   37      %EQU KX_F_EV_ERRLOGKLL#= 18;  /* kill line for LINERRDSCLMT */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          2    
   38      %EQU KX_F_EV_TERMACK#= 19;
   39      %EQU KX_F_EV_SP1#    = 20;
   40      %EQU KX_F_EV_SP2#    = 21;
   41      %EQU KX_F_EV_SP3#    = 22;
   42      /**/
   43      /*  KXN$CMND request types */
   44      /**/
   45      %EQU KX_N_MIN# = 0;
   46      %EQU KX_N_INIT_CTR# = 0;
   47      %EQU KX_N_INIT# = 1;
   48      %EQU KX_N_START# = 2;
   49      %EQU KX_N_START_RCV# = 3;
   50      %EQU KX_N_START_TRN# = 4;
   51      %EQU KX_N_STOP# = 5;
   52      %EQU KX_N_SUSPEND# = 6;
   53      %EQU KX_N_RESUME# = 7;
   54      %EQU KX_N_SEND_Q# = 8;
   55      %EQU KX_N_UPDATE_TRN_CCB# = 9;
   56      %EQU KX_N_UPDATE_RCV_CCB# = 10;
   57      %EQU KX_N_SUPV_Q# = 11;
   58      %EQU KX_N_ABR# = 12;
   59      %EQU KX_N_MAX# = 12;
   60      /**/
   61      /*  KXP$PACKET events */
   62      /**/
   63      %EQU KX_P_EV_MIN# = 0;
   64      %EQU KX_P_EV_INIT# = 0;
   65      %EQU KX_P_EV_START# = 1;
   66      %EQU KX_P_EV_STOP# = 2;
   67      %EQU KX_P_EV_DIED# = 3;
   68      %EQU KX_P_EV_VCUP# = 4;
   69      %EQU KX_P_EV_VCDWN# = 5;
   70      %EQU KX_P_EV_DATIN#    = 7;
   71      %EQU KX_P_EV_TO#       =  8;
   72      %EQU KX_P_EV_VCLST#    =  9;
   73      %EQU KX_P_EV_VCRST#    = 10;
   74      %EQU KX_P_EV_DATAVL#   = 11;
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          3    
   75      %EQU KX_P_EV_ENB#      = 12;
   76      %EQU KX_P_EV_DSB#      = 13;
   77      %EQU KX_P_EV_DSC#      = 14;
   78      %EQU KX_P_EV_KLL#      = 15;
   79      %EQU KX_P_EV_BLDCTX#   = 16;
   80      %EQU KX_P_EV_GETDAT#   = 17;
   81      %EQU KX_P_EV_SNDINT#   = 18;
   82      %EQU KX_P_EV_UPDCHN#   = 19;
   83      %EQU KX_P_EV_DATTMR#   = 20;
   84      %EQU KX_P_EV_REDRQS#   = 21;
   85      %EQU KX_P_EV_INTTMR#   = 22;
   86      %EQU KX_P_EV_IDLCLK#   = 23;
   87      %EQU KX_P_EV_STOP_ALL# = 24;
   88      %EQU KX_P_EV_DIED_ALL# = 25;
   89      %EQU KX_P_EV_SP1#      = 26;
   90      %EQU KX_P_EV_SP2#      = 27;
   91      %EQU KX_P_EV_SP3#      = 28;
   92      /**/
   93      /*  Buffer size equates */
   94      /**/
   95      %EQU KX_S_BUF_MIN# = 0;
   96      %EQU KX_S_BUF_128# = 0;
   97      %EQU KX_S_BUF_256# = 1;
   98      %EQU KX_S_BUF_512# = 2;
   99      %EQU KX_S_BUF_1024# = 3;
  100      %EQU KX_S_BUF_2048# = 4;
  101      %EQU KX_S_BUF_4096# = 5;
  102      %EQU KX_S_BUF_MAX# = 5;
  103      /**/
  104      /*  KXT$TIMER request types */
  105      /**/
  106      %EQU KX_T_MIN# = 1;
  107      %EQU KX_T_CLOCK_ON# = 1;
  108      %EQU KX_T_CLOCK_OFF# = 2;
  109      %EQU KX_T_SET_UP# = 3;
  110      %EQU KX_T_RELEASE# = 4;
  111      %EQU KX_T_START# = 5;
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          4    
  112      %EQU KX_T_RESET# = 6;
  113      %EQU KX_T_STOP# = 7;
  114      %EQU KX_T_MAX# = 7;
  115      /**/
  116      /*  Equate for safe release of buffers  */
  117      /**/
  118      %EQU KX_BFR_RLS_OK# = 7;
  119      /**/
  120      /*  Equates for protocol types  */
  121      /**/
  122      %EQU KX_PROTOCOL_MIN# = 1;
  123      %EQU KX_PROTOCOL_TELENET# = 1;
  124      %EQU KX_PROTOCOL_TYMNET# = 2;
  125      %EQU KX_PROTOCOL_HARDWIRE# = 3;
  126      %EQU KX_PROTOCOL_DATAPAC# = 4;
  127      %EQU KX_PROTOCOL_BPO# = 5;
  128      %EQU KX_PROTOCOL_MAX# = 5;
  129      /*
  130                                           Connection manager events
  131      */
  132      %EQU KX_CM_EV_DCL#     =  1;
  133      %EQU KX_CM_EV_RMTDCL#  =  2;
  134      %EQU KX_CM_EV_VCUP#    =  3;
  135      %EQU KX_CM_EV_VCLST#   =  4;
  136      %EQU KX_CM_EV_VCDWN#   =  5;
  137      %EQU KX_CM_EV_VCRST#   =  6;
  138      %EQU KX_CM_EV_INT#     =  7;  /* interrupt packet indication from L3 */
  139      %EQU KX_CM_EV_INTRQS#  =  8;  /* interrupt packet request from Network */
  140      %EQU KX_CM_EV_DATIN#   =  9;  /* data indication from L3 */
  141      %EQU KX_CM_EV_INTACK#  = 10;  /* ack of our previous interrupt packet */
  142      %EQU KX_CM_EV_INTNAK#  = 11;  /* negative ack of our previous interrupt packet */
  143      %EQU KX_CM_EV_DATRQS#  = 12;  /* L3 asking for output */
  144      %EQU KX_CM_EV_RSTRQS#  = 13;  /* VC reset request from Network */
  145      %EQU KX_CM_EV_RLSL3#   = 14;
  146      %EQU KX_CM_EV_VCLST_PRM# =15; /* only from a locally defined VC */
  147      %EQU KX_CM_EV_RSTIND#  = 16;  /* reset indication from L3 */
  148      %EQU KX_CM_EV_DATA_TO# = 17;  /* a data packet was not ack'd in due time */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          5    
  149      %EQU KX_CM_EV_DATOUT#  = 18;
  150      %EQU KX_CM_EV_INITACK# = 19;
  151      %EQU KX_CM_EV_TERMACK# = 20;
  152      %EQU KX_CM_EV_CQSCN_XIT#=21;
  153      %EQU KX_CM_EV_CHKSCQ#  = 22;  /* wake up SL to retry sending messages to SCQ */
  154      %EQU KX_CM_EV_CNCRQS#  = 23;  /* request from Network to start a VC */
  155      %EQU KX_CM_EV_DSCRQS#  = 24;  /* request from Network to stop a VC */
  156      /*
  157         X29 message type.
  158      */
  159      %EQU KX_X29MSGTYP_SETX3# = 2;        /* set X.3 params */
  160      %EQU KX_X29MSGTYP_REDX3# = 4;        /* read X.3 params */
  161      %EQU KX_X29MSGTYP_SETREDX3# = 6;     /* set and read X.3 params */
  162      %EQU KX_X29MSGTYP_PRMIND# = 0;       /* param indication */
  163      %EQU KX_X29MSGTYP_INV2CLR# = 1;      /* invitation to clear */
  164      %EQU KX_X29MSGTYP_BRKIND# = 3;       /* indication of break */
  165      %EQU KX_X29MSGTYP_ERRPAD# = 5;       /* error PAD */
  166      %EQU KX_X29MSGTYP_RSMOTP# = 7;       /* set discard output to 0 */
  167      %EQU KX_X29MSGTYP_1ST_SETREDX3# = 8; /* initial set and read X.3 */
  168      %EQU KX_X29MSGTYP_HLTMRK# = 9;  /* user a read x.3 parm 2 as a marker  */
  169                                     /*  for the pagehalt condition.  */
  170      %EQU KX_X29MSGTYP_HI# = 9;
  171      /*
  172          Equates for ERR_PAD x.29 message.
  173      */
  174      %EQU KX_X29_ERRPADTYP_SHR# = 0;  /*  Shorter than 8 bits */
  175      %EQU KX_X29_ERRPADTYP_BADCOD# = 1;  /*  bad message code  */
  176      %EQU KX_X29_ERRPADTYP_INC# = 2;  /* incompatible parm field and code */
  177      %EQU KX_X29_ERRPADTYP_NIN# = 3;  /* non-integral #bytes  */
  178      /*
  179         X.3 parameter index.
  180      */
  181      %EQU KX_X3PRMX_PADRCL# = 0;           /* PAD recall */
  182      %EQU KX_X3PRMX_PADECH# = 1;           /* PAD echo */
  183      %EQU KX_X3PRMX_DATFRWSGN# = 2;        /* data forwarding signal */
  184      %EQU KX_X3PRMX_IDLTMRDLY# = 3;        /* idle timer delay */
  185      %EQU KX_X3PRMX_ANCDVCCTR# = 4;        /* ancillary device control */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          6    
  186      %EQU KX_X3PRMX_PADSRVSGN# = 5;        /* control of PAD service signal */
  187      %EQU KX_X3PRMX_HLTMRK# = 6;            /* an artificial one for marking  */
  188                                             /*  pagehelt.            */
  189      %EQU KX_X3PRMX_ACTBRK# = 6;           /* PAD action on break */
  190      %EQU KX_X3PRMX_DSCOTP# = 7;           /* discard output */
  191      %EQU KX_X3PRMX_CRPADD# = 8;           /* padding after CR */
  192      %EQU KX_X3PRMX_LINFLD# = 9;           /* padding after LF */
  193      %EQU KX_X3PRMX_LINSPD# = 10;          /* line speed */
  194      %EQU KX_X3PRMX_FLWCTRPAD# = 11;       /* flow control of PAD */
  195      %EQU KX_X3PRMX_LFAFTCR# = 12;         /* LF after CR */
  196      %EQU KX_X3PRMX_LFPADD# = 13;          /* padding after LF */
  197      %EQU KX_X3PRMX_EDT# = 14;             /* PAD editing */
  198      %EQU KX_X3PRMX_CHRDLT# = 15;          /* char delete character */
  199      %EQU KX_X3PRMX_LINDLT# = 16;          /* line delete character */
  200      %EQU KX_X3PRMX_LINDSP# = 17;          /* line display */
  201      %EQU KX_X3PRMX_HI# = 21;
  202      /*
  203         X.29 states
  204      */
  205      %EQU KX_X29_ST_VCUP# = 1;
  206      %EQU KX_X29_ST_INIT_RED# = 2;
  207      %EQU KX_X29_ST_SETRED# = 3;
  208      %EQU KX_X29_ST_NRM# = 4;
  209      %EQU KX_X29_ST_BGNPHSDSC# = 5;
  210      %EQU KX_X29_ST_ENDPHSDSC# = 6;
  211      /*
  212         X.28 states. Note that states 4, 5, and 6 are kept same as x.29
  213      */
  214      %EQU KX_X28_ST_NULL# = 2;
  215      %EQU KX_X28_ST_CALLING# = 3;
  216      %EQU KX_X28_ST_NRM# = 4;
  217      %EQU KX_X28_ST_BGNPHSDSC# = 5;
  218      %EQU KX_X28_ST_ENDPHSDSC# = 6;
  219      %EQU KX_X28_ST_INV2CLR# = 7;
  220      /*
  221        Colour book connection states.
  222      */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          7    
  223      %EQU KX_VC_ST_DCL# = 1;
  224      %EQU KX_VC_ST_RMTDCL# = 2;
  225      %EQU KX_VC_ST_READY# = 3;
  226      %EQU KX_VC_ST_WCC# = 4;       /* waiting call confirm */
  227      %EQU KX_VC_ST_WCA# = 5;       /* waiting call accept */
  228      %EQU KX_VC_ST_NRM# = 6;       /* data transfer state */
  229      %EQU KX_VC_ST_BGNPHSDSC# = 7;
  230      %EQU KX_VC_ST_ENDPHSDSC# = 8;
  231      %EQU KX_VC_ST_WATDCL# = 13;   /* waiting for DCL from L3 */
  232      /*
  233                                           Diagnostic codes for packets
  234      */
  235      %EQU KX_DIAG_NON#        =   0;      /*  No further information  */
  236      /* packet type invalid */
  237      %EQU KX_DIAG_P1#         =  20;      /*  Packet type invalid for state P1  */
  238      %EQU KX_DIAG_P2#         =  21;      /*  Invalid packet for DTE waiting state  */
  239      %EQU KX_DIAG_P3#         =  22;      /*  Packet type invalid for state P3  */
  240      %EQU KX_DIAG_P4#         =  23;      /*  Invalid packet for DCE waiting state  */
  241      %EQU KX_DIAG_P5#         =  24;      /*  Invalid packet for data transfer state  */
  242      %EQU KX_DIAG_P6#         =  25;      /*  Packet type invalid for state P6  */
  243      %EQU KX_DIAG_P7#         =  26;      /*  Packet type invalid for state P7  */
  244      /* packet not allowed */
  245      %EQU KX_DIAG_UNKPCK#     =  33;      /*  Unknown packet type  */
  246      %EQU KX_DIAG_ONEWAY#     =  34;      /*  Call on one-way LCN  */
  247      %EQU KX_DIAG_UNKLCN#     =  36;      /*  Packet on assigned LCN  */
  248      %EQU KX_DIAG_SHR#        =  38;      /*  packet too short */
  249      %EQU KX_DIAG_LNG#        =  39;      /*  packet too long */
  250      %EQU KX_DIAG_INVGFI#     =  40;      /*  Invalid GFI  */
  251      %EQU KX_DIAG_INVRST#     =  41;      /*  Restart on LCN not equal to 0 */
  252      %EQU KX_DIAG_INCFCL#     =  42;      /*  packet type not compatible with facility */
  253      /* timer expired */
  254      %EQU KX_DIAG_TO_CAL#     =  49;      /*  Time-out while awaiting Call Confirm  */
  255      %EQU KX_DIAG_TO_CLR#     =  50;      /*  Timer expired on clear indication */
  256      %EQU KX_DIAG_TO_RST#     =  51;      /*  Time-out while awaiting Reset Confirm  */
  257      %EQU KX_DIAG_CALPRB#     =  64;      /*  Call setup problem     */
  258      %EQU KX_DIAG_INVFCLCOD#  =  65;      /*  Facility code not allowed */
  259      %EQU KX_DIAG_INVFCLPRM#  =  66;      /*  Facility parameter not allowed */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          8    
  260      %EQU KX_DIAG_INVCLDADR#  =  67;      /*  Invalid CALLED address */
  261      %EQU KX_DIAG_INVCLNADR#  =  68;      /*  Invalid CALLING address */
  262      %EQU KX_DIAG_INVFCLLNG#  =  69;      /*  invalid facility length */
  263      %EQU KX_DIAG_INCBAR#     =  70;      /*  incoming call barred */
  264      %EQU KX_DIAG_NOLCN#      =  71;      /*  no LCN available */
  265      %EQU KX_DIAG_CC#         =  72;      /*  call collision */
  266      %EQU KX_DIAG_DUPFCL#     =  73;      /*  duplicate facility request */
  267      %EQU KX_DIAG_NZRADRLNG#  =  74;      /*  non-zero address length */
  268      %EQU KX_DIAG_NZRFCLLNG#  =  75;      /*  non-zero facility length */
  269      %EQU KX_DIAG_FCLNOTPRV#  =  76;      /*  facility not provided when expected */
  270      %EQU KX_DIAG_INVDTEFCL#  =  77;      /*  invalid CCITT-specified DTE faclity */
  271      /* Miscellaneous */
  272      %EQU KX_DIAG_DTECAUSE#   =  81;      /*  improper cause code from DTE */
  273      %EQU KX_DIAG_ALG#        =  82;      /*  nonoctet aligned */
  274      /* International problem */
  275      %EQU KX_DIAG_RMT#        = 113;      /*  remote network problem */
  276      %EQU KX_DIAG_PRT#        = 114;      /*  int'l protocol problem */
  277      %EQU KX_DIAG_LNKOUT#     = 115;      /*  int'l link out of order */
  278      %EQU KX_DIAG_LNKBSY#     = 116;      /*  int'l link busy */
  279      %EQU KX_DIAG_TRNNTWFCL#  = 117;      /*  transit network facility problem */
  280      %EQU KX_DIAG_RMTNTWFCL#  = 118;      /*  remote network facility problem */
  281      %EQU KX_DIAG_INTROUTE#   = 119;      /*  int'l routing problem */
  282      %EQU KX_DIAG_TMPROUTE#   = 120;      /*  temporary routing problem */
  283      %EQU KX_DIAG_DNIC#       = 121;      /*  unknown called DNIC */
  284      %EQU KX_DIAG_MNT#        = 122;      /*  maintenance action */
  285      /* DTE specific signals */
  286      %EQU KX_DIAG_NOTOPR#     = 162;      /*  DTE not operational */
  287      %EQU KX_DIAG_DTERSC#     = 163;      /*  DTE resource constraint */
  288      %EQU KX_DIAG_FSTSLC#     = 164;      /*  fast select not subscribed */
  289      %EQU KX_DIAG_DBIT#       = 166;      /*  D-bit procedure not supported */
  290      %EQU KX_DIAG_INVPKTFRM#  = 182;      /*  Pactket format invalid */
  291      %EQU KX_DIAG_UNBFCLCNT#  = 183;      /*  Facility count > balance of packet */
  292      %EQU KX_DIAG_INVPKTDTC#  = 184;      /*  Invalid packet detected */
  293      %EQU KX_DIAG_LRGFCLCNT#  = 185;      /*  Facility octet count > 63 */
  294      %EQU KX_DIAG_OUTCLLBAR#  = 186;      /*  Outgoing calls barred */
  295      %EQU KX_DIAG_INCCLLBAR#  = 187;      /*  Incoming calls barred */
  296      %EQU KX_DIAG_LNGCLDADR#  = 189;      /*  CALLED address too long */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          9    
  297      %EQU KX_DIAG_SHRCLDADR#  = 190;      /*  CALLED address too short */
  298      %EQU KX_DIAG_LNGCLNADR#  = 191;      /*  CALLING address too long */
  299      %EQU KX_DIAG_SHRCLNADR#  = 192;      /*  CALLING address too short */
  300      %EQU KX_DIAG_BCDCLDADR#  = 193;      /*  BCD error - CALLED address */
  301      %EQU KX_DIAG_BCDCLGADR#  = 194;      /*  BCD error - CALLING address */
  302      %EQU KX_DIAG_LRGUSRDAT#  = 195;      /*  User data field too large */
  303      %EQU KX_DIAG_INVFCLNGT#  = 196;      /*  Facility negotiation invalid */
  304      %EQU KX_DIAG_NOX29#      = 203;      /*  This link does not accept X.29 calls */
  305      %EQU KX_DIAG_NOX25#      = 204;      /*  This link does not accept X.25 calls */
  306      %EQU KX_DIAG_DSC#        = 200;      /*  Handler common disconnect request  */
  307      %EQU KX_DIAG_NO_USRDAT#  = 201;      /*  No user data in call packet  */
  308      %EQU KX_DIAG_UNKPRTID#   = 202;      /*  Unknown protocol id  */
  309      /* OSI network service problem */
  310      %EQU KX_DIAG_OSIDSCTRN#  = 225;      /*  disconnection (transient condition) */
  311      %EQU KX_DIAG_OSIDSCPRM#  = 226;      /*  disconnection (permanent condition) */
  312      %EQU KX_DIAG_OSIREJTRN#  = 227;      /*  connection rejection - reason     */
  313                                           /*  unspecified (transient condition) */
  314      %EQU KX_DIAG_OSIREJPRM#  = 228;      /*  same as above (permanent condition) */
  315      %EQU KX_DIAG_OSIREJQOSTRN#  = 229;   /*  connection rejection - QOS not */
  316                                           /*  available (transient condition) */
  317      %EQU KX_DIAG_OSIREJQOSPRM#  = 230;   /*  connection rejection - QOS not */
  318                                           /*  available (permanent condition) */
  319      %EQU KX_DIAG_OSIREJNSAPTRN# = 231;   /*  NSAP unreachable (transient condition) */
  320      %EQU KX_DIAG_OSIREJNSAPPRM# = 232;   /*  same as above (permanent condition) */
  321      %EQU KX_DIAG_OSIREJNSAPUNK# = 235;   /*  NSAP address unknown (permanent cond) */
  322      /* higher level initiated */
  323      %EQU KX_DIAG_DSCNRM#     = 241;      /*  disconnection - normal */
  324      %EQU KX_DIAG_DSCABN#     = 242;      /*  disconnection - abnormal */
  325      %EQU KX_DIAG_DSCINF#     = 243;      /*  disconnection - incompatible */
  326                                           /*  information in user data */
  327      %EQU KX_DIAG_REJTRN#     = 244;      /*  connection rejection - reason */
  328                                           /*  unspecified (transient condition) */
  329      %EQU KX_DIAG_REJPRM#     = 245;      /*  same as above (permanent condition) */
  330      %EQU KX_DIAG_REJQOSTRN#  = 246;      /*  QOS not available (transient) */
  331      %EQU KX_DIAG_REJQOSPRM#  = 247;      /*  QOS not available (permanent) */
  332      %EQU KX_DIAG_REJINF#     = 248;      /*  connection rejection - incompatible */
  333                                           /*  information in user data */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          10   
  334      %EQU KX_DIAG_REJPID#     = 249;      /*  connection rejection - unrecognizable */
  335                                           /*  protocol id in user data */
  336      /*
  337        Circuit clearing causes.
  338      */
  339      %EQU KX_CAUSE_DTE#       = 0;           /*  DTE clearing  */
  340      %EQU KX_CAUSE_BSY#       = 1;           /*  Number busy  */
  341      %EQU KX_CAUSE_INV#       = 3;           /*  Invalid call */
  342      %EQU KX_CAUSE_NTWCGS#    = 5;           /*  Network congested  */
  343      %EQU KX_CAUSE_LNKDWN#    = 9;           /*  Out of order; called DTE link level down. */
  344      %EQU KX_CAUSE_BAR#       = 11;          /*  Access barred  */
  345      %EQU KX_CAUSE_PTH#       = 13;          /*  No path  */
  346      %EQU KX_CAUSE_RMT#       = 17;          /*  Remote procedure error  */
  347      %EQU KX_CAUSE_LCL#       = 19;          /*  Local procedure error  */
  348      %EQU KX_CAUSE_RVS#       = 25;          /*  Reverse charging not subscribed to */
  349      %EQU KX_CAUSE_INC#       = 33;          /*  DTE incompatable call  */
  350      %EQU KX_CAUSE_FST#       = 41;          /*  Fast select not subscribed to  */
  351      /*
  352                                           Equates for X.25 Call Facilities
  353      */
  354      %EQU KX_FCL_CUG#    = BITBIN('00000011'B);
  355      %EQU KX_FCL_CUG_EXT#=BITBIN('01000111'B);
  356      %EQU KX_FCL_CUG_OUT#=BITBIN('00001001'B);
  357      %EQU KX_FCL_CUG_OUT_EXT#=BITBIN('01001000'B);
  358      %EQU KX_FCL_CUG_BIL#=BITBIN('01000001'B);     /* bilateral closed user group */
  359      %EQU KX_FCL_CHR_RQS#=BITBIN('00000100'B);
  360      %EQU KX_FCL_CHR_$$$#=BITBIN('11000101'B);     /* charging info indicating monetary unit */
  361      %EQU KX_FCL_CHR_SEG#=BITBIN('11000010'B);     /* charging info indicating segment count */
  362      %EQU KX_FCL_CHR_DUR#=BITBIN('11000001'B);     /* charging info indicating call duration */
  363      %EQU KX_FCL_ADR_MOD#=BITBIN('00001000'B);     /* called line address modified Notification */
  364      %EQU KX_FCL_RED#   = BITBIN('11000011'B);     /* call redirection notification */
  365      %EQU KX_FCL_DLY#   = BITBIN('01001001'B);     /* transit delay selection and indication */
  366      %EQU KX_FCL_NUID#  = BITBIN('11000110'B);     /* network user identification */
  367      %EQU KX_FCL_RPOA#  = BITBIN('01000100'B);     /* ROPA selection */
  368      %EQU KX_FCL_RPOA_EXT# = BITBIN('11000100'B);  /* ROPA selection extended format */
  369      %EQU KX_FCL_CLGADREXT#= BITBIN('11001011'B);  /* calling address extension */
  370      %EQU KX_FCL_CLDADREXT#= BITBIN('11001001'B);  /* called address extension */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          11   
  371      %EQU KX_FCL_THRCLSNGT#= BITBIN('00001010'B);  /* throughput class negotiation */
  372      %EQU KX_FCL_TRNDLYNGT#= BITBIN('11001010'B);  /* transit delay negotiation */
  373      %EQU KX_FCL_XPDDATNGT#= BITBIN('00001011'B);  /* expedited data negotiation */
  374      /*
  375         Equates for calling/called address extension
  376      */
  377      %EQU KX_ADREXT_FLLNSAP# = 0;
  378      %EQU KX_ADREXT_PRTNSAP# = 1;
  379      %EQU KX_ADREXT_NONOSI#  = 2;
  380      %EQU KX_ADREXT_RESERVED#= 3;
  381      %EQU KX_FCL_RVS#    = BITBIN('00000001'B);
  382      %EQU KX_FCL_PCKSIZ# = BITBIN('01000010'B);
  383      %EQU KX_FCL_WNDSIZ# = BITBIN('01000011'B);
  384      %EQU KX_FCL_THRCLS# = BITBIN('00000010'B);
  385      %EQU KX_FCL_MRK#    = 0;
  386      %EQU KX_FCL_MRK_CLGDTE#   = 0;      /* facility parameter field */
  387      %EQU KX_FCL_MRK_CLDDTE#   = 255;
  388      %EQU KX_FCL_MRK_CCITT#    = 15;    /* CCITT specified DTE facilities  */
  389      /*
  390         Equate for address modification reasons.
  391      */
  392      %EQU KX_ADRMODRSN_NON# = 0;    /* No redirection */
  393      %EQU KX_ADRMODRSN_HNT# = 7;    /* call redirection within a Hunt Group */
  394      %EQU KX_ADRMODRSN_BSY# = 1;    /* call redirection due to DTE busy */
  395      %EQU KX_ADRMODRSN_DWN# = 9;    /* call redirection due to DTE out of order */
  396      %EQU KX_ADRMODRSN_SYS# = 15;   /* systematic call redirection */
  397      /*
  398         Equates for fast select facility types.
  399      */
  400      %EQU KX_FSTSLC_NON#    = 0;    /* fast select not used */
  401      %EQU KX_FSTSLC_RST#    = 3;    /* fast select with restriction on response */
  402      %EQU KX_FSTSLC_UNR#    = 2;    /* fast select with no restriction on response */
  403      /*
  404                                           Equate for the device id for
  405                                           baseband HDLC CLAs.
  406      */
  407      %EQU KX_DVCID_BASBND# = BITBIN('2140'X);
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          12   
  408      /*
  409                                           Equates for the different X.25
  410                                           protocols used.
  411      */
  412      %EQU KX_PRTID_NON# = 0;
  413      %EQU KX_PRTID_X29# = BITBIN('00000001'B);
  414      %EQU KX_PRTID_X28# = 2;
  415      %EQU KX_PRTID_OSI# = 3;  /*TPDU_UN.LI - see ISO 8073/DAD 1 8.3  */
  416      %EQU KX_PRTID_SL#  = BITBIN('11000001'B);
  417      %EQU KX_PRTID_CB# = BITBIN('7F'X);
  418      /*
  419                                           Interrupt packet definitions.
  420      */
  421      %EQU KX_INT_DATACK# = %BITBIN('00000001'B);
  422      %EQU KX_INT_CLRRQS# = %BITBIN('10000000'B);
  423      /*
  424         MLC type definitions.
  425         These equ's have to be aligned with the arrays
  426         KX$ML.ASC_MLC_ARY & KX$ML.CNC_MLC_ARY.
  427         VC types are the same numbers as MLC types.
  428      */
  429      %EQU KX_MLC_TYP_PRM# = 0;
  430      %EQU KX_MLC_TYP_SCN# = 1;
  431      %EQU KX_MLC_TYP_BCK# = 2;
  432      %EQU KX_MLC_TYP_RMT# = 3;
  433
  434      %EQU KX_VC_TYP_PRM# = 0;
  435      %EQU KX_VC_TYP_SCN# = 1;
  436      %EQU KX_VC_TYP_BCK# = 2;
  437      %EQU KX_VC_TYP_RMT# = 3;
  438      %EQU KX_VC_TYP_OUTBOUND# = 4;
  439      %EQU KX_VC_TYP_INBOUND#  = 5;
  440      %EQU KX_VC_TYP_CL4# = 6;
  441      %EQU KX_VC_TYP_CL0# = 7;
  442      /*
  443         Following equates for the 4 types of level 4 entities that log on
  444         through VDH.
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          13   
  445      */
  446      %EQU KXX_TYP_X29# = 1;      /* plain old x.29 */
  447      %EQU KXX_TYP_CNTL# = 2;     /* control connection for LINKDEV */
  448      %EQU KXX_TYP_LINKDEV# = 3;  /* LINKDEV, including x.28 circuits */
  449      %EQU KXX_TYP_X28# = 4;      /* further distinguishes x.28 circuits */
  450
  451      /*
  452         Equates for packet level timers and counters.
  453         The timer values are 20 seconds instead of 180 seconds recommended.
  454      */
  455      %EQU KX_X25TMR_RESTART_PRD# = 20;      /* T20   */
  456      %EQU KX_X25TMR_CALL_PRD#    = 20;      /* T21   */
  457      %EQU KX_X25TMR_RESET_PRD#   = 20;      /* T22   */
  458      %EQU KX_X25TMR_CLEAR_PRD#   = 20;      /* T23   */
  459      %EQU KX_X25TMR_DATA_PRD#    =  0;      /* T25   */
  460      %EQU KX_X25TMR_INTERRUPT_PRD#=20;      /* T26   */
  461      %EQU KX_X25RCNT_RESTART#    = 1;       /* R20   */
  462      %EQU KX_X25RCNT_CALL#       = 0;       /* R21   */
  463      %EQU KX_X25RCNT_RESET#      = 1;       /* R22   */
  464      %EQU KX_X25RCNT_CLEAR#      = 1;       /* R23   */
  465      %EQU KX_X25RCNT_DATA#       = 0;       /* R25   */
  466      %EQU KX_X25TMR_IDL_PRD#     = 4;       /* link idle timer  */
  467      /*
  468          Equates for packet level action on data time out
  469      */
  470      %EQU KX_L3_TOACT_NULL#  = 0;
  471      %EQU KX_L3_TOACT_CALLCM#  = 1;  /* inform higher layer */
  472      %EQU KX_L3_TOACT_RST#  = 2;  /* Reset VC. Most likely losing data */
  473      %EQU KX_L3_TOACT_RSTRTR#  = 3;  /* Reset VC and retransmit packets */
  474      %EQU KX_L3_TOACT_CLR#  = 4;  /* Clear the circuit */
  475      /*
  476          Equates for packet reset causes and diagnostics.
  477      */
  478      %EQU KX_RST_CAUSE_DTE# = 0;
  479      %EQU KX_RST_CAUSE_OOO# = 1;   /* out of order */
  480      %EQU KX_RST_CAUSE_RPE# = 3;   /* remote procedure error */
  481      %EQU KX_RST_CAUSE_LPE# = 5;   /* local procedure error */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          14   
  482      %EQU KX_RST_CAUSE_NC#  = 7;   /* network congestion */
  483      %EQU KX_RST_CAUSE_RDO# = 9;   /* remote DTE operational */
  484      %EQU KX_RST_CAUSE_NO#  =15;   /* network operational */
  485      %EQU KX_RST_CAUSE_ID#  =17;   /* incompatible destination */
  486      /*
  487      */
  488      /* no additional information */
  489      %EQU KX_RST_DIAG_PS#   = 1;   /* invalid P(S) */
  490      %EQU KX_RST_DIAG_PR#   = 2;   /* invalid P(R) */
  491      /* packet type invalid */
  492      %EQU KX_RST_DIAG_R1#   =17;   /* packet type invalid for state r1 */
  493      %EQU KX_RST_DIAG_R2#   =18;   /* packet type invalid for state r2 */
  494      %EQU KX_RST_DIAG_R3#   =19;   /* packet type invalid for state r3 */
  495      %EQU KX_RST_DIAG_D1#   =27;   /* packet type invalid for state d1 */
  496      %EQU KX_RST_DIAG_D2#   =28;   /* packet type invalid for state d2 */
  497      %EQU KX_RST_DIAG_D3#   =29;   /* packet type invalid for state d3 */
  498      /* packet not allowed */
  499      %EQU KX_RST_DIAG_UNID# =33;   /* unidentifiable packet */
  500      %EQU KX_RST_DIAG_INVPVC#=35;  /* invalid packet on a pvc */
  501      %EQU KX_RST_DIAG_REJ#  =37;   /* reject not subscribed to */
  502      %EQU KX_RST_DIAG_SHR#  =38;   /* packet too short */
  503      %EQU KX_RST_DIAG_LNG#  =39;   /* packet too long */
  504      %EQU KX_RST_DIAG_LCN0# =41;   /* restart or reg pkt with non-zero LCN */
  505      %EQU KX_RST_DIAG_UIC#  =43;   /* unsolicited interrupt conf */
  506      %EQU KX_RST_DIAG_UI#   =44;   /* unauthorized interrupt */
  507      %EQU KX_RST_DIAG_UREJ# =45;   /* unauthorized reject */
  508      /* timer expired */
  509      %EQU KX_RST_DIAG_RSTEXP#=51;  /* timer expired for reset indication */
  510      /* miscellaneous */
  511      %EQU KX_RST_DIAG_CAUSE#=81;   /* improper cause code from DTE */
  512      %EQU KX_RST_DIAG_ALG#  =82;   /* nonoctet aligned */
  513      %EQU KX_RST_DIAG_QBIT# =83;   /* inconsistent Q-bit settings */
  514      /* international problem */
  515      %EQU KX_RST_DIAG_RMT# =113;   /* remote network problem */
  516      %EQU KX_RST_DIAG_PRT# =114;   /* int'l protocol oroblem */
  517      %EQU KX_RST_DIAG_LNK# =115;   /* int'l link out of order */
  518      %EQU KX_RST_DIAG_MNT# =122;   /* maintenance action */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          15   
  519      /* timer expired or retransmission count surpassed */
  520      %EQU KX_RST_DIAG_INTEXP#=145; /* for interrupt */
  521      %EQU KX_RST_DIAG_DATEXP#=146; /* for data packet */
  522      %EQU KX_RST_DIAG_REJEXT#=147; /* for reject */
  523      /* DTE specific signal */
  524      %EQU KX_RST_DIAG_OPR# =161;   /* DTE operational */
  525      %EQU KX_RST_DIAG_NOPR#=162;   /* DTE not operational */
  526      %EQU KX_RST_DIAG_RSC# =163;   /* DTE resource constraint */
  527      %EQU KX_RST_DIAG_PFD# =165;   /* invalid partially full data packet */
  528      %EQU KX_RST_DIAG_DBIT#=166;   /* D-bit procedure not supported */
  529      %EQU KX_RST_DIAG_RL#  =167;   /* reset too long */
  530      %EQU KX_RST_DIAG_RCL# =168;   /* reset conf too long */
  531      %EQU KX_RST_DIAG_IQB# =169;   /* invalide Q bit in packet */
  532      %EQU KX_RST_DIAG_WRE# =170;   /* packet window range exceeded */
  533      %EQU KX_RST_DIAG_UTP# =171;   /* unable to transmit packet */
  534      %EQU KX_RST_DIAG_QND# =172;   /* Q bit set in non-data packet */
  535      %EQU KX_RST_DIAG_PRW# =173;   /* received P(R) exceeded window size */
  536      %EQU KX_RST_DIAG_NIE# =174;   /* network internal error */
  537      %EQU KX_RST_DIAG_RS#  =175;   /* reset packet too short (no cause field) */
  538      %EQU KX_RST_DIAG_RJL# =176;   /* reject packet too long */
  539      %EQU KX_RST_DIAG_PID# =177;   /* invalid packet ID */
  540      /* OSI Network service problem */
  541      %EQU KX_RST_DIAG_OSIUNS#=233; /* reset - reason unspecified */
  542      %EQU KX_RST_DIAG_OSICNG#=234; /* reset - congestion */
  543      /* higher level initiated */
  544      %EQU KX_RST_DIAG_RESYNC#=250; /* reset - user resynchronization */
  545      /*
  546         Equates of FPT type for packet level service interface
  547      */
  548      %EQU KX_VCFNC_CAL_RQS# = 1;   /* requesting outgoing call */
  549      %EQU KX_VCFNC_CAL_IND# = 2;   /* indicating incoming call */
  550      %EQU KX_VCFNC_CAL_RSP# = 3;   /* accepting incoming call */
  551      %EQU KX_VCFNC_CAL_CNF# = 4;   /* outgoing call confirmed */
  552      %EQU KX_VCFNC_DAT_RQS# = 5;   /* request transmission of data  */
  553      %EQU KX_VCFNC_DAT_IND# = 6;   /* indicating received data */
  554      %EQU KX_VCFNC_INT_RQS# = 7;   /* request transmission of interrupt */
  555      %EQU KX_VCFNC_INT_IND# = 8;   /* indicating interrupt received */
14:57 JUL 28 '97 KX_EQUS_E.:E05SI                                          16   
  556      %EQU KX_VCFNC_INT_CNF# = 9;   /* indicate receipt of interrupt confirm */
  557      %EQU KX_VCFNC_RST_RQS# = 10;  /* request transmission of reset */
  558      %EQU KX_VCFNC_RST_IND# = 11;  /* indicate receipt of reset */
  559      %EQU KX_VCFNC_RST_CNF# = 12;  /* previous reset request confirmed */
  560      %EQU KX_VCFNC_CLR_RQS# = 13;  /* request transmission of clear */
  561      %EQU KX_VCFNC_CLR_IND# = 14;  /* indicate receipt of clear */
  562      %EQU KX_VCFNC_CLR_CNF# = 15;  /* indicate receipt of clear confirm */
  563      %EQU KX_VCFNC_CLR_RSP# = 16;  /* respond to clear with clear confirm */
  564      %EQU KX_VCFNC_BRK_RQS# = 17;  /* request to send a break on an x.28 vc */
  565      %EQU KX_VCFNC_SETX3#   = 18;  /* host user sets x.3 parameters */
  566      %EQU KX_VCFNC_REDX3#   = 19;  /* host user reads x.3 parameters */
  567      %EQU KX_VCFNC_INDX3#   = 20;  /* fep's response to a read x.3 */
  568      /* Restart diagnostics codes */
  569      %EQU KX_RES_DIAG_R1#     = 17;  /* invalid pkt for state R1 */
  570      %EQU KX_RES_DIAG_R2#     = 18;  /* invalid pkt for state R2 */
  571      %EQU KX_RES_DIAG_R3#     = 19;  /* invalid pkt for state R3 */
  572      %EQU KX_RES_DIAG_INV#    =249;  /* invalid restart request */
  573      %EQU KX_RES_DIAG_LIN#    =250;  /* line status change from down to up */

