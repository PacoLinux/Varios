VERSION E05

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:1    
        1        1        /*M* VXA$ND - allocates and initializes a VX$NODE structure. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=3,MOC,DCI=4,CRT=4,CTI=8,CCC     */
        8        8        VXA$ND:
        9        9              PROC( ALL$, FATHER$ );
       10       10        /*
       11       11                          Include files
       12       12        */
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE B$OBJECT_C;
       15     3524        %INCLUDE XU_MACRO_C;
       16     6630        %INCLUDE VX_SUBS_C;
       17     6848        %INCLUDE VX_MACRO_C;
       18     7985        %INCLUDE VX_DATA_R;
       19     9604        %INCLUDE VX_FIXED_R;
       20    10266        %SET LISTDIR='0'B;
       21    10267        %P;

             10275    1   /*******************************************************************************
             10276    1   *                                                                              *
             10277    1   *                          PARAMETERS                                              *
             10278    1   *                                                                              *
             10279    1   *******************************************************************************/

       22    10283    1   DCL ALL$            PTR       ALIGNED;
       23    10284    1   DCL FATHER$         PTR       ALIGNED;
       24    10285        %VX$NODE;

             10297    1   /*******************************************************************************
             10298    1   *                                                                              *
             10299    1   *                          VX$NODE                                                 *
             10300    1   *                                                                              *
             10301    1   *******************************************************************************/
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:2    

             10317    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10318    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10319    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10320    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10321    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10322    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10323                              to list of file nodes for this node            */
             10324    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10325    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10325                  /* Head pointer to shared library list */
             10326    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10326                  /* Head pointer to list of shared libraries
             10327                                          which have been mapped to included libraries */
             10328    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10329    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10330    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10331    1         2 ADDR_START REDEF  ADDR_START_A,
             10332    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10333    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10334    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10335    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10336    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10337    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10338    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10339    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10340    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10341    1         2 START_PAGE# REDEF START_PAGE#_A,
             10342    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10343    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10344    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10345    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10346    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10347    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10348    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10349    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10350    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:3    
             10350                  /* Starting pointer for common sections for this node */
             10351    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10351                  /* Stopping pointer for common sections for this node */
             10352    1         2 L_START,
             10353    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10354    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10355    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10356    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10357    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10358    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10359    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10360    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10361    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10362    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10363    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10364    1         2 L_STOP,
             10365    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10366    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10367    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10368    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10369    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10370    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10371    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10372    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10373    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10374    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10375    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10376    1         2 L_SIZE,
             10377    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10378    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10379    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10380    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10381    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10382    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10383    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10384    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10385    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:4    
             10386    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10387    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10388    1         2 L_PREV_SIZE,
             10389    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10390    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10391    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10392    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10393    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10394    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10395    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10396    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10397    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10398    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10399    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10400    1         2 BIT_MAP                ALIGNED,
             10401    1           3 DATA                  ALIGNED,
             10402    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10403    1           3 RPROC                 ALIGNED,
             10404    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10405    1           3 ROS                   ALIGNED,
             10406    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10407    1         2 L_SC_START,
             10408    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10409    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10410    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10411    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10412    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10413    1         2 L_SC_STOP,
             10414    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10415    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10416    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10417    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10418    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10419    1         2 PROMOTE_HEAD,
             10420    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10421    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10422    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:5    
             10423    1         2 PROMOTE_TAIL,
             10424    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10425    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10426    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10427    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10428    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10429    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10430    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10431    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       25    10435        %VX$NODE(NAME=INITIALIZED_NODE,STCLASS= CONSTANT);

             10447    1   /*******************************************************************************
             10448    1   *                                                                              *
             10449    1   *                          INITIALIZED_NODE                                        *
             10450    1   *                                                                              *
             10451    1   *******************************************************************************/

             10467    1   DCL 1 INITIALIZED_NODE      ALIGNED    CONSTANT,
             10468    1         2 SON$ PTR INIT(ADDR(NIL)) , /* Son pointer                      */
             10469    1         2 BROTHER$ PTR INIT(ADDR(NIL)) , /* Brother pointer              */
             10470    1         2 FATHER$ PTR INIT(ADDR(NIL)) , /* Father pointer                */
             10471    1         2 PATH$ PTR INIT(ADDR(NIL)) , /* Path   pointer                  */
             10472    1         2 HEAD$       PTR INIT(ADDR(NIL)) , /* Head pointer to
             10473                              to list of file nodes for this node            */
             10474    1         2 TAIL$ PTR INIT(ADDR(NIL)) , /* Tail pointer to list            */
             10475    1         2 SHARED_LIB_HEAD$ PTR INIT(ADDR(NIL)) ,
             10475                  /* Head pointer to shared library list */
             10476    1         2 LIB_HEAD$         PTR INIT(ADDR(NIL)) ,
             10476                  /* Head pointer to list of shared libraries
             10477                                          which have been mapped to included libraries */
             10478    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10479    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10480    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD INIT(0*3) , /* Array            */
             10481    1         2 ADDR_START REDEF  ADDR_START_A,
             10482    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10483    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:6    
             10484    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10485    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD INIT(-1*3) , /* Array            */
             10486    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10487    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10488    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10489    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10490    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD INIT(0*3) , /* Array           */
             10491    1         2 START_PAGE# REDEF START_PAGE#_A,
             10492    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10493    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10494    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10495    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD INIT(-1*3) , /* Array*/
             10496    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10497    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10498    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10499    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10500    1         2 START_SC_ALL$ PTR INIT(ADDR(NIL)) ,
             10500                  /* Starting pointer for common sections for this node */
             10501    1         2 STOP_SC_ALL$ PTR INIT(ADDR(NIL)) ,
             10501                  /* Stopping pointer for common sections for this node */
             10502    1         2 L_START,
             10503    1           3 SN$ PTR INIT(ADDR(NIL)) , /* Segment definition names        */
             10504    1           3 DN$ PTR INIT(ADDR(NIL)) , /* Def names                       */
             10505    1           3 RN$ PTR INIT(ADDR(NIL)) , /* Ref names                       */
             10506    1           3 SC$ PTR INIT(ADDR(NIL)) , /* Sections                        */
             10507    1           3 ED$ PTR INIT(ADDR(NIL)) , /* Entry defs*/
             10508    1           3 ER$ PTR INIT(ADDR(NIL)) , /* Entry refs*/
             10509    1           3 DD$ PTR INIT(ADDR(NIL)) , /* Data defs                       */
             10510    1           3 DR$ PTR INIT(ADDR(NIL)) , /* Data refs                       */
             10511    1           3 SD$ PTR INIT(ADDR(NIL)) , /* Seg defs                        */
             10512    1           3 SR$ PTR INIT(ADDR(NIL)) , /* Seg refs                        */
             10513    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10514    1         2 L_STOP,
             10515    1           3 SN$ PTR INIT(ADDR(NIL)) , /* Segment definition names        */
             10516    1           3 DN$ PTR INIT(ADDR(NIL)) , /* Def names                       */
             10517    1           3 RN$ PTR INIT(ADDR(NIL)) , /* Ref names                       */
             10518    1           3 SC$ PTR INIT(ADDR(NIL)) , /* Sections                        */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:7    
             10519    1           3 ED$ PTR INIT(ADDR(NIL)) , /* Entry defs*/
             10520    1           3 ER$ PTR INIT(ADDR(NIL)) , /* Entry refs*/
             10521    1           3 DD$ PTR INIT(ADDR(NIL)) , /* Data defs                       */
             10522    1           3 DR$ PTR INIT(ADDR(NIL)) , /* Data refs                       */
             10523    1           3 SD$ PTR INIT(ADDR(NIL)) , /* Seg defs                        */
             10524    1           3 SR$ PTR INIT(ADDR(NIL)) , /* Seg refs                        */
             10525    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10526    1         2 L_SIZE,
             10527    1           3 SN      UBIN INIT(0) , /* Segment definition names           */
             10528    1           3 DN      UBIN INIT(0) , /* Def names                          */
             10529    1           3 RN      UBIN INIT(0) , /* Ref names                          */
             10530    1           3 SC      UBIN INIT(0) , /* Sections                           */
             10531    1           3 ED      UBIN INIT(0) , /* Entry defs*/
             10532    1           3 ER      UBIN INIT(0) , /* Entry refs*/
             10533    1           3 DD      UBIN INIT(0) , /* Data defs                          */
             10534    1           3 DR      UBIN INIT(0) , /* Data refs                          */
             10535    1           3 SD      UBIN INIT(0) , /* Seg defs                           */
             10536    1           3 SR      UBIN INIT(0) , /* Seg refs                           */
             10537    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10538    1         2 L_PREV_SIZE,
             10539    1           3 SN      UBIN INIT(0) , /* Segment definition names           */
             10540    1           3 DN      UBIN INIT(0) , /* Def names                          */
             10541    1           3 RN      UBIN INIT(0) , /* Ref names                          */
             10542    1           3 SC      UBIN INIT(0) , /* Sections                           */
             10543    1           3 ED      UBIN INIT(0) , /* Entry defs*/
             10544    1           3 ER      UBIN INIT(0) , /* Entry refs*/
             10545    1           3 DD      UBIN INIT(0) , /* Data defs                          */
             10546    1           3 DR      UBIN INIT(0) , /* Data refs                          */
             10547    1           3 SD      UBIN INIT(0) , /* Seg defs                           */
             10548    1           3 SR      UBIN INIT(0) , /* Seg refs                           */
             10549    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10550    1         2 BIT_MAP                ALIGNED,
             10551    1           3 DATA                  ALIGNED,
             10552    1             4 BITS(0:255)          BIT(1)    UNAL INIT('0'B*256) ,
             10553    1           3 RPROC                 ALIGNED,
             10554    1             4 BITS(0:255)          BIT(1)    UNAL INIT('0'B*256) ,
             10555    1           3 ROS                   ALIGNED,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:8    
             10556    1             4 BITS(0:255)          BIT(1)    UNAL INIT('0'B*256) ,
             10557    1         2 L_SC_START,
             10558    1           3 SC_BLK_COM$ PTR INIT(ADDR(NIL)) , /* Blank common            */
             10559    1           3 SC_ROOT_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Root labelled common */
             10560    1           3 SC_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Labelled common         */
             10561    1           3 SC_DCB$ PTR INIT(ADDR(NIL)) , /* Dcbs                        */
             10562    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10563    1         2 L_SC_STOP,
             10564    1           3 SC_BLK_COM$ PTR INIT(ADDR(NIL)) , /* Blank common            */
             10565    1           3 SC_ROOT_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Root labelled common */
             10566    1           3 SC_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Labelled common         */
             10567    1           3 SC_DCB$ PTR INIT(ADDR(NIL)) , /* Dcbs                        */
             10568    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10569    1         2 PROMOTE_HEAD,
             10570    1           3 BLK_COM$              PTR INIT(ADDR(NIL)) ,
             10571    1           3 LBL_COM$              PTR INIT(ADDR(NIL)) ,
             10572    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10573    1         2 PROMOTE_TAIL,
             10574    1           3 BLK_COM$              PTR INIT(ADDR(NIL)) ,
             10575    1           3 LBL_COM$              PTR INIT(ADDR(NIL)) ,
             10576    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10577    1         2 HAVE_ASL          BIT(1)    UNAL INIT('0'B) ,
             10578    1         2 ALL_BLK_COM          BIT(1)    UNAL INIT('0'B) ,
             10579    1         2 USE_NODE          BIT(1)    UNAL INIT('0'B) ,
             10580    1         2 *                 BIT(33)   UNAL INIT('0'B) ,
             10581    1         2 BLANK_COMMON$     PTR       ALIGNED INIT(ADDR(NIL)) ;

       26    10585        %VX$SC;

             10598    1   /*******************************************************************************
             10599    1   *                                                                              *
             10600    1   *                          VX$SC                                                 *
             10601    1   *                                                                              *
             10602    1   *******************************************************************************/

             10607    1   DCL 1 VX$SC BASED ALIGNED,
             10608    1         2 SEG UBIN(3) UNAL,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:9    
             10609                /*K*  SEG - The segment number of this section */
             10610    1         2 TYPE UBIN(6) UNAL,
             10611                /*K*  TYPE -
             10612                      Type code      Section type
             10613                      ---------      ------------
             10614                          0          Data control section with write access.
             10615                          1          Procedure control section.
             10616                          2          Unlabeled common, name pointer must be zero.
             10617                          3          Labeled common, with mandatory name pointer.
             10618                                     This is for labeled common which must be
             10619                                     in the root.
             10620                          4          Labeled common, with mandatory name pointer.
             10621                                     This is for labeled common which need not
             10622                                     be in the root.
             10623                          5          DCB, word 1 is name pointer.
             10624                          6          Data control section with read only access,
             10625                                     word 1 = 0 or name pointer.      */
             10626    1         2 EMPTY BIT(1) UNAL,
             10627                /*K*  EMPTY is the empty bit.  This bit is set if the control
             10628                      section is of size zero.  */
             10629    1         2 ATTR UNAL,
             10630    1           3 INT  UBIN(2) UNAL,
             10631                  /*K*  INT is the Section initialization.  */
             10632    1           3 SEGMENT BIT(1) UNAL,
             10633                  /*K* SEGMENT is set if the Section is defined in a data
             10634                       segment.  */
             10635    1           3 ALL BIT(1) UNAL,
             10636                  /*K*  ALL is set if the Section is allocated.  */
             10637    1           3 PRE_DCB BIT(1) UNAL,
             10638                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             10639    1           3 MES_INIT BIT(1) UNAL,
             10640    1           3 ALIGN UBIN(2) UNAL,
             10641                  /*K*  ALIGN is the Section alignment.  */
             10642    1         2 ADDRESS UBIN HALF UNAL,
             10643                /*K*  ADDRESS is the address within the Instruction Segment of
             10644                      the entry point of the external procedure.  */
             10645    1         2 NAME_DISP SBIN HALF UNAL,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:10   
             10646                /*K*  NAME_DISP is the Name index.  */
             10647    1         2 SIZE UBIN HALF UNAL,
             10648                /*K*  SIZE is the size, in words, of the section.  */
             10649    1         2 NODE# UBIN HALF UNAL,
             10650                /*K*  NODE# is the Node number of section.  */
             10651    1         2 COM_LINK UBIN HALF UNAL;
             10652                /*K*  COM_LINK is used internally by linker to link common sections */

             10662    1   /*******************************************************************************
             10663    1   *                                                                              *
             10664    1   *                          VX$SECT                                                 *
             10665    1   *                                                                              *
             10666    1   *******************************************************************************/

             10671    1   DCL 1 VX$SECT BASED ALIGNED,
             10672    1         2 TYPE UBIN BYTE UNAL,
             10673                /*K*  TYPE -
             10674                      Type code      Section type
             10675                      ---------      ------------
             10676                          0          Data control section with write access.
             10677                          1          Procedure control section.
             10678                          2          Unlabeled common, name pointer must be zero.
             10679                          3          Labeled common, with mandatory name pointer.
             10680                                     This is for labeled common which must be
             10681                                     in the root.
             10682                          4          Labeled common, with mandatory name pointer.
             10683                                     This is for labeled common which need not
             10684                                     be in the root.
             10685                          5          DCB, word 1 is name pointer.
             10686                          6          Data control section with read only access,
             10687                                     word 1 = 0 or name pointer.
             10688                          7          Constant labeled common, with mandatory name pointer.
             10689                                     This is for labeled common which must be
             10690                                     in the root.
             10691                          8          Constant labeled common, with mandatory name pointer.
             10692                                     This is for labeled common which need not
             10693                                     be in the root.                        */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:11   
             10694    1         2 * BIT(1),
             10695                /*K*  * is reserved for future use and must be zero. */
             10696    1         2 INITZERO BIT(1),
             10697                /*K*  INITZERO - if 1, initialize with zero.  */
             10698    1         2 INITUTS BIT(1),
             10699                /*K*  INITUTS - if 1, initialize with UTS.  */
             10700    1         2 SEGMENT BIT(1),
             10701                /*K*  SEGMENT - if 1, specifies that this section is
             10702                                to be placed in the segment specified by
             10703                                SEG_NPOINTER.  */
             10704    1         2 * BIT(3),
             10705                /*K*  * is reserved for future use and must be zero. */
             10706    1         2 BOUND UBIN(2) UNAL,
             10707                /*K*  BOUND - bits 6-7 - defines starting location.
             10708                              00 - starts on even word
             10709                              01 - starts on odd word
             10710                              10 - starts on multiple of 8
             10711                              11 - starts on page boundary     */
             10712    1         2 SIZE UBIN HALF UNAL,
             10713                /*K*  SIZE is the size, in words, of the section.  */
             10714    1         2 NPOINTER SBIN HALF UNAL,
             10715                /*K*  NPOINTER is the word displacement into the name record
             10716                      (TYPE 1) locating the name of this section.  If the
             10717                      field is negative, the section has no name.  */
             10718    1         2 MBZ UBIN HALF UNAL,
             10719                /*K*  MBZ is reserved for future expansion and must be zero. */
             10720    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             10721                /*K*  SEG_NPOINTER locates a name in the Definition Names
             10722                      Section.  The name must be a valid segment name
             10723                      recognized by the linker.  */
             10724    1         2 G66 REDEF MBZ,
             10725                /*K*  G66 is not used on CP-6. */
             10726    1           3 * BIT(9),
             10727    1           3 NSAB BIT(9);
       27    10730        %PTR;

             10738    1   /*******************************************************************************
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:12   
             10739    1   *                                                                              *
             10740    1   *                          PTR                                                 *
             10741    1   *                                                                              *
             10742    1   *******************************************************************************/

       28    10746    1   DCL GOT$            PTR       ALIGNED   STATIC;
       29    10747    1   DCL SC$             PTR       ALIGNED   STATIC;
       30    10748        %E;

             10756    1   /*******************************************************************************
             10757    1   *                                                                              *
             10758    1   *                          ENTRY                                                 *
             10759    1   *                                                                              *
             10760    1   *******************************************************************************/

       31    10764    1   DCL VXA$GET         ENTRY(3);

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:13   
       33    10766        %BANNER(ARG=Begin  VXA$ND);

             10774    1   /*******************************************************************************
             10775    1   *                                                                              *
             10776    1   *                          Begin  VXA$ND                                           *
             10777    1   *                                                                              *
             10778    1   *******************************************************************************/

       34    10782              %ALLOCATE( PTR$=GOT$, TYPE=@GDP, SIZE="SIZEW(VX$NODE)" );
       35    10789    1         GOT$ -> VX$NODE = INITIALIZED_NODE;
       36    10790    1         GOT$ -> VX$NODE.FATHER$       = FATHER$;
       37    10791    1         GOT$ -> VX$NODE.TAIL$         =  ADDR( GOT$ -> VX$NODE.HEAD$ );
       38    10792    1         VX_NODE_NUMBER = VX_NODE_NUMBER + 1;
       39    10793    1         GOT$ -> VX$NODE.NUM           = VX_NODE_NUMBER;
       40    10794    1         IF FATHER$ = ADDR(NIL) THEN GOT$ -> VX$NODE.DEPTH = 0;
       41    10795    1         ELSE GOT$ -> VX$NODE.DEPTH = FATHER$ -> VX$NODE.DEPTH + 1;
       42    10796              %ALLOCATE( PTR$=SC$, TYPE=@GDP, SIZE="SIZEW(VX$SC)" );
       43    10803    1         GOT$ -> VX$NODE.BLANK_COMMON$ = SC$;
       44    10804    1         SC$ -> VX$SC = '0'B;
       45    10805    1         ALL$ = GOT$;
       46    10806    1   END VXA$ND;

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:14   
--  Include file information  --

   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXA$ND.

   Procedure VXA$ND requires 66 words for executable code.
   Procedure VXA$ND requires 6 words of local(AUTO) storage.

    No errors detected in file VXA$ND.:E05TSI    .

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:15   

 Object Unit name= VXA$ND                                     File name= VXA$ND.:E05TOU
 UTS= JUL 30 '97 08:05:01.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    102    146  VXA$ND
    2   Data  even  none     2      2  VXA$ND
    3   Proc  even  none    66    102  VXA$ND
    4  RoData even  none     7      7  VXA$ND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        2  VXA$ND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VXA$GET
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:16   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_OU_HEAD                            VX_NODE_NUMBER
     VX_ERRORS                             VX_M_FREE                             VX_M_ALL
     VX_M_BASE_PTR                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:17   


        1        1        /*M* VXA$ND - allocates and initializes a VX$NODE structure. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=3,MOC,DCI=4,CRT=4,CTI=8,CCC     */
        8        8        VXA$ND:
        9        9              PROC( ALL$, FATHER$ );

      9  3 000000   000000 700200 xent  VXA$ND       TSX0  ! X66_AUTO_2
         3 000001   000006 000002                    ZERO    6,2

       10       10        /*
       11       11                          Include files
       12       12        */
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE B$OBJECT_C;
       15     3524        %INCLUDE XU_MACRO_C;
       16     6630        %INCLUDE VX_SUBS_C;
       17     6848        %INCLUDE VX_MACRO_C;
       18     7985        %INCLUDE VX_DATA_R;
       19     9604        %INCLUDE VX_FIXED_R;
       20    10266        %SET LISTDIR='0'B;
       21    10267        %P;

             10275    1   /*******************************************************************************
             10276    1   *                                                                              *
             10277    1   *                          PARAMETERS                                             *
             10278    1   *                                                                              *
             10279    1   *******************************************************************************/

       22    10283    1   DCL ALL$            PTR       ALIGNED;
       23    10284    1   DCL FATHER$         PTR       ALIGNED;
       24    10285        %VX$NODE;

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:18   
             10297    1   /*******************************************************************************
             10298    1   *                                                                              *
             10299    1   *                          VX$NODE                                                *
             10300    1   *                                                                              *
             10301    1   *******************************************************************************/

             10317    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10318    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10319    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10320    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10321    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10322    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10323                              to list of file nodes for this node            */
             10324    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10325    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10325                  /* Head pointer to shared library list */
             10326    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10326                  /* Head pointer to list of shared libraries
             10327                                          which have been mapped to included libraries */
             10328    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10329    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10330    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10331    1         2 ADDR_START REDEF  ADDR_START_A,
             10332    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10333    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10334    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10335    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10336    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10337    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10338    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10339    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10340    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10341    1         2 START_PAGE# REDEF START_PAGE#_A,
             10342    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10343    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10344    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10345    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:19   
             10346    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10347    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10348    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10349    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10350    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10350                  /* Starting pointer for common sections for this node */
             10351    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10351                  /* Stopping pointer for common sections for this node */
             10352    1         2 L_START,
             10353    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10354    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10355    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10356    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10357    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10358    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10359    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10360    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10361    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10362    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10363    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10364    1         2 L_STOP,
             10365    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10366    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10367    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10368    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10369    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10370    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10371    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10372    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10373    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10374    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10375    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10376    1         2 L_SIZE,
             10377    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10378    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10379    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10380    1           3 SC      UBIN /*(0)*/, /* Sections                           */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:20   
             10381    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10382    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10383    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10384    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10385    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10386    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10387    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10388    1         2 L_PREV_SIZE,
             10389    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10390    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10391    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10392    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10393    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10394    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10395    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10396    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10397    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10398    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10399    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10400    1         2 BIT_MAP                ALIGNED,
             10401    1           3 DATA                  ALIGNED,
             10402    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10403    1           3 RPROC                 ALIGNED,
             10404    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10405    1           3 ROS                   ALIGNED,
             10406    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10407    1         2 L_SC_START,
             10408    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10409    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10410    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10411    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10412    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10413    1         2 L_SC_STOP,
             10414    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10415    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10416    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10417    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:21   
             10418    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10419    1         2 PROMOTE_HEAD,
             10420    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10421    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10422    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10423    1         2 PROMOTE_TAIL,
             10424    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10425    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10426    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10427    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10428    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10429    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10430    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10431    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       25    10435        %VX$NODE(NAME=INITIALIZED_NODE,STCLASS= CONSTANT);

             10447    1   /*******************************************************************************
             10448    1   *                                                                              *
             10449    1   *                          INITIALIZED_NODE                                       *
             10450    1   *                                                                              *
             10451    1   *******************************************************************************/

             10467    1   DCL 1 INITIALIZED_NODE      ALIGNED    CONSTANT,
             10468    1         2 SON$ PTR INIT(ADDR(NIL)) , /* Son pointer                      */
             10469    1         2 BROTHER$ PTR INIT(ADDR(NIL)) , /* Brother pointer              */
             10470    1         2 FATHER$ PTR INIT(ADDR(NIL)) , /* Father pointer                */
             10471    1         2 PATH$ PTR INIT(ADDR(NIL)) , /* Path   pointer                  */
             10472    1         2 HEAD$       PTR INIT(ADDR(NIL)) , /* Head pointer to
             10473                              to list of file nodes for this node            */
             10474    1         2 TAIL$ PTR INIT(ADDR(NIL)) , /* Tail pointer to list            */
             10475    1         2 SHARED_LIB_HEAD$ PTR INIT(ADDR(NIL)) ,
             10475                  /* Head pointer to shared library list */
             10476    1         2 LIB_HEAD$         PTR INIT(ADDR(NIL)) ,
             10476                  /* Head pointer to list of shared libraries
             10477                                          which have been mapped to included libraries */
             10478    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:22   
             10479    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10480    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD INIT(0*3) , /* Array            */
             10481    1         2 ADDR_START REDEF  ADDR_START_A,
             10482    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10483    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10484    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10485    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD INIT(-1*3) , /* Array            */
             10486    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10487    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10488    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10489    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10490    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD INIT(0*3) , /* Array           */
             10491    1         2 START_PAGE# REDEF START_PAGE#_A,
             10492    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10493    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10494    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10495    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD INIT(-1*3) , /* Array*/
             10496    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10497    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10498    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10499    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10500    1         2 START_SC_ALL$ PTR INIT(ADDR(NIL)) ,
             10500                  /* Starting pointer for common sections for this node */
             10501    1         2 STOP_SC_ALL$ PTR INIT(ADDR(NIL)) ,
             10501                  /* Stopping pointer for common sections for this node */
             10502    1         2 L_START,
             10503    1           3 SN$ PTR INIT(ADDR(NIL)) , /* Segment definition names        */
             10504    1           3 DN$ PTR INIT(ADDR(NIL)) , /* Def names                       */
             10505    1           3 RN$ PTR INIT(ADDR(NIL)) , /* Ref names                       */
             10506    1           3 SC$ PTR INIT(ADDR(NIL)) , /* Sections                        */
             10507    1           3 ED$ PTR INIT(ADDR(NIL)) , /* Entry defs*/
             10508    1           3 ER$ PTR INIT(ADDR(NIL)) , /* Entry refs*/
             10509    1           3 DD$ PTR INIT(ADDR(NIL)) , /* Data defs                       */
             10510    1           3 DR$ PTR INIT(ADDR(NIL)) , /* Data refs                       */
             10511    1           3 SD$ PTR INIT(ADDR(NIL)) , /* Seg defs                        */
             10512    1           3 SR$ PTR INIT(ADDR(NIL)) , /* Seg refs                        */
             10513    1         2 L_START_A$(0:9)     REDEF L_START PTR,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:23   
             10514    1         2 L_STOP,
             10515    1           3 SN$ PTR INIT(ADDR(NIL)) , /* Segment definition names        */
             10516    1           3 DN$ PTR INIT(ADDR(NIL)) , /* Def names                       */
             10517    1           3 RN$ PTR INIT(ADDR(NIL)) , /* Ref names                       */
             10518    1           3 SC$ PTR INIT(ADDR(NIL)) , /* Sections                        */
             10519    1           3 ED$ PTR INIT(ADDR(NIL)) , /* Entry defs*/
             10520    1           3 ER$ PTR INIT(ADDR(NIL)) , /* Entry refs*/
             10521    1           3 DD$ PTR INIT(ADDR(NIL)) , /* Data defs                       */
             10522    1           3 DR$ PTR INIT(ADDR(NIL)) , /* Data refs                       */
             10523    1           3 SD$ PTR INIT(ADDR(NIL)) , /* Seg defs                        */
             10524    1           3 SR$ PTR INIT(ADDR(NIL)) , /* Seg refs                        */
             10525    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10526    1         2 L_SIZE,
             10527    1           3 SN      UBIN INIT(0) , /* Segment definition names           */
             10528    1           3 DN      UBIN INIT(0) , /* Def names                          */
             10529    1           3 RN      UBIN INIT(0) , /* Ref names                          */
             10530    1           3 SC      UBIN INIT(0) , /* Sections                           */
             10531    1           3 ED      UBIN INIT(0) , /* Entry defs*/
             10532    1           3 ER      UBIN INIT(0) , /* Entry refs*/
             10533    1           3 DD      UBIN INIT(0) , /* Data defs                          */
             10534    1           3 DR      UBIN INIT(0) , /* Data refs                          */
             10535    1           3 SD      UBIN INIT(0) , /* Seg defs                           */
             10536    1           3 SR      UBIN INIT(0) , /* Seg refs                           */
             10537    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10538    1         2 L_PREV_SIZE,
             10539    1           3 SN      UBIN INIT(0) , /* Segment definition names           */
             10540    1           3 DN      UBIN INIT(0) , /* Def names                          */
             10541    1           3 RN      UBIN INIT(0) , /* Ref names                          */
             10542    1           3 SC      UBIN INIT(0) , /* Sections                           */
             10543    1           3 ED      UBIN INIT(0) , /* Entry defs*/
             10544    1           3 ER      UBIN INIT(0) , /* Entry refs*/
             10545    1           3 DD      UBIN INIT(0) , /* Data defs                          */
             10546    1           3 DR      UBIN INIT(0) , /* Data refs                          */
             10547    1           3 SD      UBIN INIT(0) , /* Seg defs                           */
             10548    1           3 SR      UBIN INIT(0) , /* Seg refs                           */
             10549    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10550    1         2 BIT_MAP                ALIGNED,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:24   
             10551    1           3 DATA                  ALIGNED,
             10552    1             4 BITS(0:255)          BIT(1)    UNAL INIT('0'B*256) ,
             10553    1           3 RPROC                 ALIGNED,
             10554    1             4 BITS(0:255)          BIT(1)    UNAL INIT('0'B*256) ,
             10555    1           3 ROS                   ALIGNED,
             10556    1             4 BITS(0:255)          BIT(1)    UNAL INIT('0'B*256) ,
             10557    1         2 L_SC_START,
             10558    1           3 SC_BLK_COM$ PTR INIT(ADDR(NIL)) , /* Blank common            */
             10559    1           3 SC_ROOT_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Root labelled common */
             10560    1           3 SC_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Labelled common         */
             10561    1           3 SC_DCB$ PTR INIT(ADDR(NIL)) , /* Dcbs                        */
             10562    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10563    1         2 L_SC_STOP,
             10564    1           3 SC_BLK_COM$ PTR INIT(ADDR(NIL)) , /* Blank common            */
             10565    1           3 SC_ROOT_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Root labelled common */
             10566    1           3 SC_LBL_COM$ PTR INIT(ADDR(NIL)) , /* Labelled common         */
             10567    1           3 SC_DCB$ PTR INIT(ADDR(NIL)) , /* Dcbs                        */
             10568    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10569    1         2 PROMOTE_HEAD,
             10570    1           3 BLK_COM$              PTR INIT(ADDR(NIL)) ,
             10571    1           3 LBL_COM$              PTR INIT(ADDR(NIL)) ,
             10572    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10573    1         2 PROMOTE_TAIL,
             10574    1           3 BLK_COM$              PTR INIT(ADDR(NIL)) ,
             10575    1           3 LBL_COM$              PTR INIT(ADDR(NIL)) ,
             10576    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10577    1         2 HAVE_ASL          BIT(1)    UNAL INIT('0'B) ,
             10578    1         2 ALL_BLK_COM          BIT(1)    UNAL INIT('0'B) ,
             10579    1         2 USE_NODE          BIT(1)    UNAL INIT('0'B) ,
             10580    1         2 *                 BIT(33)   UNAL INIT('0'B) ,
             10581    1         2 BLANK_COMMON$     PTR       ALIGNED INIT(ADDR(NIL)) ;

       26    10585        %VX$SC;

             10598    1   /*******************************************************************************
             10599    1   *                                                                              *
             10600    1   *                          VX$SC                                                 *
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:25   
             10601    1   *                                                                              *
             10602    1   *******************************************************************************/

             10607    1   DCL 1 VX$SC BASED ALIGNED,
             10608    1         2 SEG UBIN(3) UNAL,
             10609                /*K*  SEG - The segment number of this section */
             10610    1         2 TYPE UBIN(6) UNAL,
             10611                /*K*  TYPE -
             10612                      Type code      Section type
             10613                      ---------      ------------
             10614                          0          Data control section with write access.
             10615                          1          Procedure control section.
             10616                          2          Unlabeled common, name pointer must be zero.
             10617                          3          Labeled common, with mandatory name pointer.
             10618                                     This is for labeled common which must be
             10619                                     in the root.
             10620                          4          Labeled common, with mandatory name pointer.
             10621                                     This is for labeled common which need not
             10622                                     be in the root.
             10623                          5          DCB, word 1 is name pointer.
             10624                          6          Data control section with read only access,
             10625                                     word 1 = 0 or name pointer.      */
             10626    1         2 EMPTY BIT(1) UNAL,
             10627                /*K*  EMPTY is the empty bit.  This bit is set if the control
             10628                      section is of size zero.  */
             10629    1         2 ATTR UNAL,
             10630    1           3 INT  UBIN(2) UNAL,
             10631                  /*K*  INT is the Section initialization.  */
             10632    1           3 SEGMENT BIT(1) UNAL,
             10633                  /*K* SEGMENT is set if the Section is defined in a data
             10634                       segment.  */
             10635    1           3 ALL BIT(1) UNAL,
             10636                  /*K*  ALL is set if the Section is allocated.  */
             10637    1           3 PRE_DCB BIT(1) UNAL,
             10638                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             10639    1           3 MES_INIT BIT(1) UNAL,
             10640    1           3 ALIGN UBIN(2) UNAL,
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:26   
             10641                  /*K*  ALIGN is the Section alignment.  */
             10642    1         2 ADDRESS UBIN HALF UNAL,
             10643                /*K*  ADDRESS is the address within the Instruction Segment of
             10644                      the entry point of the external procedure.  */
             10645    1         2 NAME_DISP SBIN HALF UNAL,
             10646                /*K*  NAME_DISP is the Name index.  */
             10647    1         2 SIZE UBIN HALF UNAL,
             10648                /*K*  SIZE is the size, in words, of the section.  */
             10649    1         2 NODE# UBIN HALF UNAL,
             10650                /*K*  NODE# is the Node number of section.  */
             10651    1         2 COM_LINK UBIN HALF UNAL;
             10652                /*K*  COM_LINK is used internally by linker to link common sections */

             10662    1   /*******************************************************************************
             10663    1   *                                                                              *
             10664    1   *                          VX$SECT                                                *
             10665    1   *                                                                              *
             10666    1   *******************************************************************************/

             10671    1   DCL 1 VX$SECT BASED ALIGNED,
             10672    1         2 TYPE UBIN BYTE UNAL,
             10673                /*K*  TYPE -
             10674                      Type code      Section type
             10675                      ---------      ------------
             10676                          0          Data control section with write access.
             10677                          1          Procedure control section.
             10678                          2          Unlabeled common, name pointer must be zero.
             10679                          3          Labeled common, with mandatory name pointer.
             10680                                     This is for labeled common which must be
             10681                                     in the root.
             10682                          4          Labeled common, with mandatory name pointer.
             10683                                     This is for labeled common which need not
             10684                                     be in the root.
             10685                          5          DCB, word 1 is name pointer.
             10686                          6          Data control section with read only access,
             10687                                     word 1 = 0 or name pointer.
             10688                          7          Constant labeled common, with mandatory name pointer.
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:27   
             10689                                     This is for labeled common which must be
             10690                                     in the root.
             10691                          8          Constant labeled common, with mandatory name pointer.
             10692                                     This is for labeled common which need not
             10693                                     be in the root.                        */
             10694    1         2 * BIT(1),
             10695                /*K*  * is reserved for future use and must be zero. */
             10696    1         2 INITZERO BIT(1),
             10697                /*K*  INITZERO - if 1, initialize with zero.  */
             10698    1         2 INITUTS BIT(1),
             10699                /*K*  INITUTS - if 1, initialize with UTS.  */
             10700    1         2 SEGMENT BIT(1),
             10701                /*K*  SEGMENT - if 1, specifies that this section is
             10702                                to be placed in the segment specified by
             10703                                SEG_NPOINTER.  */
             10704    1         2 * BIT(3),
             10705                /*K*  * is reserved for future use and must be zero. */
             10706    1         2 BOUND UBIN(2) UNAL,
             10707                /*K*  BOUND - bits 6-7 - defines starting location.
             10708                              00 - starts on even word
             10709                              01 - starts on odd word
             10710                              10 - starts on multiple of 8
             10711                              11 - starts on page boundary     */
             10712    1         2 SIZE UBIN HALF UNAL,
             10713                /*K*  SIZE is the size, in words, of the section.  */
             10714    1         2 NPOINTER SBIN HALF UNAL,
             10715                /*K*  NPOINTER is the word displacement into the name record
             10716                      (TYPE 1) locating the name of this section.  If the
             10717                      field is negative, the section has no name.  */
             10718    1         2 MBZ UBIN HALF UNAL,
             10719                /*K*  MBZ is reserved for future expansion and must be zero. */
             10720    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             10721                /*K*  SEG_NPOINTER locates a name in the Definition Names
             10722                      Section.  The name must be a valid segment name
             10723                      recognized by the linker.  */
             10724    1         2 G66 REDEF MBZ,
             10725                /*K*  G66 is not used on CP-6. */
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:28   
             10726    1           3 * BIT(9),
             10727    1           3 NSAB BIT(9);
       27    10730        %PTR;

             10738    1   /*******************************************************************************
             10739    1   *                                                                              *
             10740    1   *                          PTR                                                 *
             10741    1   *                                                                              *
             10742    1   *******************************************************************************/

       28    10746    1   DCL GOT$            PTR       ALIGNED   STATIC;
       29    10747    1   DCL SC$             PTR       ALIGNED   STATIC;
       30    10748        %E;

             10756    1   /*******************************************************************************
             10757    1   *                                                                              *
             10758    1   *                          ENTRY                                                 *
             10759    1   *                                                                              *
             10760    1   *******************************************************************************/

       31    10764    1   DCL VXA$GET         ENTRY(3);

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:29   
       33    10766        %BANNER(ARG=Begin  VXA$ND);

             10774    1   /*******************************************************************************
             10775    1   *                                                                              *
             10776    1   *                          Begin  VXA$ND                                          *
             10777    1   *                                                                              *
             10778    1   *******************************************************************************/

       34    10782              %ALLOCATE( PTR$=GOT$, TYPE=@GDP, SIZE="SIZEW(VX$NODE)" );

  10783  3 000002   000010 236000 xsym               LDQ     VX_M_ALL+8
         3 000003   000010 136000 xsym               SBLQ    VX_M_FREE+8
         3 000004   000146 116007                    CMPQ    102,DL
         3 000005   000015 604000 3                  TMI     s:10787

  10784  3 000006   000010 236000 xsym               LDQ     VX_M_FREE+8
         3 000007   000022 736000                    QLS     18
         3 000010   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         3 000011   000000 756000 2                  STQ     GOT$

  10785  3 000012   000146 236007                    LDQ     102,DL
         3 000013   000010 056000 xsym               ASQ     VX_M_FREE+8

  10786  3 000014   000021 710000 3                  TRA     s:10789

  10787  3 000015   000001 630400 4                  EPPR0   1
         3 000016   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000017   000000 701000 xent               TSX1    VXA$GET
         3 000020   000000 011000                    NOP     0

       35    10789    1         GOT$ -> VX$NODE = INITIALIZED_NODE;

  10789  3 000021   000000 470400 2                  LDP0    GOT$
         3 000022   000100 100400                    MLR     fill='000'O
         3 000023   000000 000630 1                  ADSC9   INITIALIZED_NODE         cn=0,n=408
         3 000024   000000 000630                    ADSC9   0,,PR0                   cn=0,n=408

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:30   
       36    10790    1         GOT$ -> VX$NODE.FATHER$       = FATHER$;

  10790  3 000025   200004 470500                    LDP0    @FATHER$,,AUTO
         3 000026   000000 236100                    LDQ     0,,PR0
         3 000027   000000 471400 2                  LDP1    GOT$
         3 000030   100002 756100                    STQ     2,,PR1

       37    10791    1         GOT$ -> VX$NODE.TAIL$         =  ADDR( GOT$ -> VX$NODE.HEAD$ );

  10791  3 000031   000000 236000 2                  LDQ     GOT$
         3 000032   000004 036003                    ADLQ    4,DU
         3 000033   100005 756100                    STQ     5,,PR1

       38    10792    1         VX_NODE_NUMBER = VX_NODE_NUMBER + 1;

  10792  3 000034   000000 054000 xsym               AOS     VX_NODE_NUMBER

       39    10793    1         GOT$ -> VX$NODE.NUM           = VX_NODE_NUMBER;

  10793  3 000035   000000 235000 xsym               LDA     VX_NODE_NUMBER
         3 000036   100010 755100                    STA     8,,PR1

       40    10794    1         IF FATHER$ = ADDR(NIL) THEN GOT$ -> VX$NODE.DEPTH = 0;

  10794  3 000037   000000 236100                    LDQ     0,,PR0
         3 000040   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000041   000044 601000 3                  TNZ     s:10795

  10794  3 000042   100011 450100                    STZ     9,,PR1
         3 000043   000050 710000 3                  TRA     s:10797

       41    10795    1         ELSE GOT$ -> VX$NODE.DEPTH = FATHER$ -> VX$NODE.DEPTH + 1;

  10795  3 000044   000000 473500                    LDP3    0,,PR0
         3 000045   300011 235100                    LDA     9,,PR3
         3 000046   000001 035007                    ADLA    1,DL
         3 000047   100011 755100                    STA     9,,PR1
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:31   

       42    10796              %ALLOCATE( PTR$=SC$, TYPE=@GDP, SIZE="SIZEW(VX$SC)" );

  10797  3 000050   000010 236000 xsym               LDQ     VX_M_ALL+8
         3 000051   000010 136000 xsym               SBLQ    VX_M_FREE+8
         3 000052   000003 116007                    CMPQ    3,DL
         3 000053   000063 604000 3                  TMI     s:10801

  10798  3 000054   000010 236000 xsym               LDQ     VX_M_FREE+8
         3 000055   000022 736000                    QLS     18
         3 000056   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         3 000057   000001 756000 2                  STQ     SC$

  10799  3 000060   000003 236007                    LDQ     3,DL
         3 000061   000010 056000 xsym               ASQ     VX_M_FREE+8

  10800  3 000062   000067 710000 3                  TRA     s:10803

  10801  3 000063   000004 630400 4                  EPPR0   4
         3 000064   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000065   000000 701000 xent               TSX1    VXA$GET
         3 000066   000000 011000                    NOP     0

       43    10803    1         GOT$ -> VX$NODE.BLANK_COMMON$ = SC$;

  10803  3 000067   000001 236000 2                  LDQ     SC$
         3 000070   000000 470400 2                  LDP0    GOT$
         3 000071   000145 756100                    STQ     101,,PR0

       44    10804    1         SC$ -> VX$SC = '0'B;

  10804  3 000072   000001 471400 2                  LDP1    SC$
         3 000073   000100 100400                    MLR     fill='000'O
         3 000074   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000075   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

       45    10805    1         ALL$ = GOT$;
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:32   

  10805  3 000076   000000 236000 2                  LDQ     GOT$
         3 000077   200003 470500                    LDP0    @ALL$,,AUTO
         3 000100   000000 756100                    STQ     0,,PR0

       46    10806    1   END VXA$ND;

  10806  3 000101   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:33   
--  Include file information  --

   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXA$ND.
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:34   

 **** Variables and constants ****

  ****  Section 001 RoData VXA$ND

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3672)  r     1 INITIALIZED_NODE

  ****  Section 002  Data  VXA$ND

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GOT$                       1-0-0/w PTR         r     1 SC$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ALL$                      4-0-0/w PTR         r     1 @FATHER$
    *0-0-0/w PTR         r     1 ALL$                      *0-0-0/w PTR         r     1 FATHER$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w SBIN        r     1 VX_NODE_NUMBER

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:35   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3672)  r     1 VX$NODE                    0-0-0/w STRC(108)   r     1 VX$SC


   Procedure VXA$ND requires 66 words for executable code.
   Procedure VXA$ND requires 6 words of local(AUTO) storage.

    No errors detected in file VXA$ND.:E05TSI    .
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:36   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:37   
          MINI XREF LISTING

ALL$
     10283**DCL         8--PROC    10805<<ASSIGN
FATHER$
     10284**DCL         8--PROC    10790>>ASSIGN  10794>>IF      10795>>ASSIGN
GOT$
     10746**DCL     10784<<ASSIGN  10787<>CALL    10789>>ASSIGN  10790>>ASSIGN  10791>>ASSIGN  10791>>ASSIGN
     10793>>ASSIGN  10794>>ASSIGN  10795>>ASSIGN  10803>>ASSIGN  10805>>ASSIGN
INITIALIZED_NODE
     10467**DCL     10789>>ASSIGN
INITIALIZED_NODE.ADDR_START_A
     10480**DCL     10481--REDEF
INITIALIZED_NODE.ADDR_STOP_A
     10485**DCL     10486--REDEF
INITIALIZED_NODE.L_PREV_SIZE
     10538**DCL     10549--REDEF
INITIALIZED_NODE.L_SC_START
     10557**DCL     10562--REDEF
INITIALIZED_NODE.L_SC_STOP
     10563**DCL     10568--REDEF
INITIALIZED_NODE.L_SIZE
     10526**DCL     10537--REDEF
INITIALIZED_NODE.L_START
     10502**DCL     10513--REDEF
INITIALIZED_NODE.L_STOP
     10514**DCL     10525--REDEF
INITIALIZED_NODE.PROMOTE_HEAD
     10569**DCL     10572--REDEF
INITIALIZED_NODE.PROMOTE_TAIL
     10573**DCL     10576--REDEF
INITIALIZED_NODE.START_PAGE#_A
     10490**DCL     10491--REDEF
INITIALIZED_NODE.STOP_PAGE#_A
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:38   
     10495**DCL     10496--REDEF
SC$
     10747**DCL     10798<<ASSIGN  10801<>CALL    10803>>ASSIGN  10804>>ASSIGN
VX$NODE
     10317**DCL     10783--IF      10785--ASSIGN  10787--CALL    10789<<ASSIGN
VX$NODE.ADDR_START_A
     10330**DCL     10331--REDEF
VX$NODE.ADDR_STOP_A
     10335**DCL     10336--REDEF
VX$NODE.BLANK_COMMON$
     10431**DCL     10803<<ASSIGN
VX$NODE.DEPTH
     10329**DCL     10794<<ASSIGN  10795<<ASSIGN  10795>>ASSIGN
VX$NODE.FATHER$
     10320**DCL     10790<<ASSIGN
VX$NODE.HEAD$
     10322**DCL     10791--ASSIGN
VX$NODE.L_PREV_SIZE
     10388**DCL     10399--REDEF
VX$NODE.L_SC_START
     10407**DCL     10412--REDEF
VX$NODE.L_SC_STOP
     10413**DCL     10418--REDEF
VX$NODE.L_SIZE
     10376**DCL     10387--REDEF
VX$NODE.L_START
     10352**DCL     10363--REDEF
VX$NODE.L_STOP
     10364**DCL     10375--REDEF
VX$NODE.NUM
     10328**DCL     10793<<ASSIGN
VX$NODE.PROMOTE_HEAD
     10419**DCL     10422--REDEF
VX$NODE.PROMOTE_TAIL
     10423**DCL     10426--REDEF
VX$NODE.START_PAGE#_A
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:39   
     10340**DCL     10341--REDEF
VX$NODE.STOP_PAGE#_A
     10345**DCL     10346--REDEF
VX$NODE.TAIL$
     10324**DCL     10791<<ASSIGN
VX$SC
     10607**DCL     10797--IF      10799--ASSIGN  10801--CALL    10804<<ASSIGN
VX$SECT.MBZ
     10718**DCL     10720--REDEF   10724--REDEF
VXA$GET
     10764**DCL-ENT 10787--CALL    10801--CALL
VX_BIAS.A
      8648**DCL      8649--REDEF
VX_CBUF.CHARS_A
      8582**DCL      8583--REDEF
VX_EBUF.CHARS_A
      9171**DCL      9172--REDEF
VX_EFIELD1.CHARS
      9180**DCL      9181--REDEF
VX_EFIELD2.CHARS
      9184**DCL      9185--REDEF
VX_EFIELD3.CHARS
      9188**DCL      9189--REDEF
VX_EI_KEY_BUF.KEY
      9564**DCL      9565--REDEF
VX_ERRORS
      8625**DCL      8636--REDEF
VX_ERRORS.CONFLICT_A
      8631**DCL      8632--REDEF
VX_ERRORS.UNSAT_A
      8627**DCL      8628--REDEF
VX_IMAGE_DATA.CPAGE#_A
     10043**DCL     10044--REDEF
VX_IMAGE_DATA.NODE_A$
     10055**DCL     10056--REDEF
VX_IMAGE_DATA.START_A$
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:40   
     10047**DCL     10048--REDEF
VX_IMAGE_DATA.STOP_A$
     10051**DCL     10052--REDEF
VX_IMAGE_DS3.CPAGE#_A
     10112**DCL     10113--REDEF
VX_IMAGE_DS3.NODE_A$
     10124**DCL     10125--REDEF
VX_IMAGE_DS3.START_A$
     10116**DCL     10117--REDEF
VX_IMAGE_DS3.STOP_A$
     10120**DCL     10121--REDEF
VX_IMAGE_DS4.CPAGE#_A
     10135**DCL     10136--REDEF
VX_IMAGE_DS4.NODE_A$
     10147**DCL     10148--REDEF
VX_IMAGE_DS4.START_A$
     10139**DCL     10140--REDEF
VX_IMAGE_DS4.STOP_A$
     10143**DCL     10144--REDEF
VX_IMAGE_DS5.CPAGE#_A
     10158**DCL     10159--REDEF
VX_IMAGE_DS5.NODE_A$
     10170**DCL     10171--REDEF
VX_IMAGE_DS5.START_A$
     10162**DCL     10163--REDEF
VX_IMAGE_DS5.STOP_A$
     10166**DCL     10167--REDEF
VX_IMAGE_DS6.CPAGE#_A
     10181**DCL     10182--REDEF
VX_IMAGE_DS6.NODE_A$
     10193**DCL     10194--REDEF
VX_IMAGE_DS6.START_A$
     10185**DCL     10186--REDEF
VX_IMAGE_DS6.STOP_A$
     10189**DCL     10190--REDEF
VX_IMAGE_DS7.CPAGE#_A
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:41   
     10204**DCL     10205--REDEF
VX_IMAGE_DS7.NODE_A$
     10216**DCL     10217--REDEF
VX_IMAGE_DS7.START_A$
     10208**DCL     10209--REDEF
VX_IMAGE_DS7.STOP_A$
     10212**DCL     10213--REDEF
VX_IMAGE_DS8.CPAGE#_A
     10227**DCL     10228--REDEF
VX_IMAGE_DS8.NODE_A$
     10239**DCL     10240--REDEF
VX_IMAGE_DS8.START_A$
     10231**DCL     10232--REDEF
VX_IMAGE_DS8.STOP_A$
     10235**DCL     10236--REDEF
VX_IMAGE_PROC.CPAGE#_A
     10066**DCL     10067--REDEF
VX_IMAGE_PROC.NODE_A$
     10078**DCL     10079--REDEF
VX_IMAGE_PROC.START_A$
     10070**DCL     10071--REDEF
VX_IMAGE_PROC.STOP_A$
     10074**DCL     10075--REDEF
VX_IMAGE_ROS.CPAGE#_A
     10089**DCL     10090--REDEF
VX_IMAGE_ROS.NODE_A$
     10101**DCL     10102--REDEF
VX_IMAGE_ROS.START_A$
     10093**DCL     10094--REDEF
VX_IMAGE_ROS.STOP_A$
     10097**DCL     10098--REDEF
VX_M_ALL
      8659**DCL     10783>>IF      10797>>IF
VX_M_BASE_PTR
      8661**DCL     10784>>ASSIGN  10798>>ASSIGN
VX_M_FREE
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:42   
      8657**DCL     10783>>IF      10784>>ASSIGN  10785<<ASSIGN  10785>>ASSIGN  10797>>IF      10798>>ASSIGN
     10799<<ASSIGN  10799>>ASSIGN
VX_M_VECTOR.F
      9894**DCL      9898--REDEF
VX_M_VECTOR_DP.F
      9929**DCL      9933--REDEF
VX_NODE_NUMBER
      8608**DCL     10792<<ASSIGN  10792>>ASSIGN  10793>>ASSIGN
VX_O.ACCTN_A$
      8777**DCL      8778--REDEF
VX_O.DCB_MATCH_A$
      8786**DCL      8787--REDEF
VX_O.DCB_MATCH_HIT_A
      8792**DCL      8793--REDEF
VX_O.FIDN_A$
      8771**DCL      8772--REDEF
VX_O.FID_A$
      8763**DCL      8764--REDEF
VX_O.INCLUDE_A$
      8783**DCL      8784--REDEF
VX_O.MAP_A
      8757**DCL      8758--REDEF
VX_O.NODCB_A
      8814**DCL      8815--REDEF
VX_O.NUM_A
      8702**DCL      8704--REDEF
VX_O.OPT_A
      8802**DCL      8803--REDEF
VX_O.PRIV_A
      8718**DCL      8720--REDEF
VX_O.SIN_A
      8671**DCL      8672--REDEF
VX_O.TCB_A
      8798**DCL      8799--REDEF
VX_OD.ACCTN_A$
      8975**DCL      8976--REDEF
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:43   
VX_OD.DCB_MATCH_A$
      8984**DCL      8985--REDEF
VX_OD.FIDN_A$
      8969**DCL      8970--REDEF
VX_OD.FID_A$
      8961**DCL      8962--REDEF
VX_OD.INCLUDE_A$
      8981**DCL      8982--REDEF
VX_OD.MAP_A
      8955**DCL      8956--REDEF
VX_OD.NODCB_A
      8999**DCL      9000--REDEF
VX_OD.NUM_A
      8902**DCL      8903--REDEF
VX_OD.PRIV_A
      8917**DCL      8918--REDEF
VX_OD.SIN_A
      8871**DCL      8872--REDEF
VX_OD.VECTOR_A$
      8990**DCL      8991--REDEF
VX_OL.MAX_A
      8846**DCL      8848--REDEF
VX_OL.MIN_A
      8831**DCL      8832--REDEF
VX_ON.ACCTN_A$
      9120**DCL      9122--REDEF
VX_ON.DCB_MATCH_A$
      9131**DCL      9133--REDEF
VX_ON.FIDN_A$
      9113**DCL      9115--REDEF
VX_ON.FID_A$
      9104**DCL      9106--REDEF
VX_ON.INCLUDE_A$
      9127**DCL      9129--REDEF
VX_ON.MAP_A
      9097**DCL      9099--REDEF
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:44   
VX_ON.NODCB_A$
      9147**DCL      9148--REDEF
VX_ON.NUM_A
      9042**DCL      9044--REDEF
VX_ON.PRIV_A
      9058**DCL      9060--REDEF
VX_ON.SIN_A
      9010**DCL      9012--REDEF
VX_ON.VECTOR_A$
      9138**DCL      9139--REDEF
VX_OUHEAD.VERSION
      8457**DCL      8459--REDEF
VX_OU_HEAD
      8400**DCL      8439--REDEF
VX_OU_HEAD.REC_A
      8412**DCL      8415--REDEF
VX_O_KEY_BUF.FORM0
      9942**DCL      9945--REDEF    9952--REDEF
VX_O_KEY_BUF_L.FORM0
      9965**DCL      9968--REDEF    9975--REDEF
VX_PASS2_REF.OU.L_START
      9350**DCL      9355--REDEF
VX_PASS2_REF.OU.L_STOP
      9356**DCL      9361--REDEF
VX_PASS2_REF.OU.MAX
      9344**DCL      9349--REDEF
VX_PASS2_REF.OU.SIZE
      9362**DCL      9367--REDEF
VX_PASS2_REF.SAT.COUNT
      9389**DCL      9395--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
      9396**DCL      9402--REDEF
VX_PASS2_REF.SAT.L_START
      9375**DCL      9381--REDEF
VX_PASS2_REF.SAT.L_STOP
      9382**DCL      9388--REDEF
PL6.E3A0      #001=VXA$ND File=VXA$ND.:E05TSI                                    WED 07/30/97 08:05 Page:45   
VX_PASS2_REF.SAT.MAX
      9369**DCL      9374--REDEF
VX_PASS2_REF.UNSAT.L_START
      9437**DCL      9442--REDEF
VX_PASS2_REF.UNSAT.L_STOP
      9443**DCL      9448--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
      9449**DCL      9454--REDEF
VX_PASS2_REF.UNSAT.MAX
      9431**DCL      9436--REDEF
VX_PASS2_REF.UNSAT.PAGE#
      9461**DCL      9466--REDEF
VX_PASS2_REF.UNSAT.SIZE
      9455**DCL      9460--REDEF
VX_PHRASE.PHRASE
      8863**DCL      8865--REDEF
VX_PROGRAM_BIAS.A
      8641**DCL      8642--REDEF
VX_R_KEY_BUF.FORM0
      9991**DCL      9995--REDEF   10001--REDEF
VX_SD.A
      9619**DCL      9620--REDEF
VX_SPC.B$.MINE
      9532**DCL      9538--REDEF
VX_SPC.B$.NAME
      9511**DCL      9517--REDEF
VX_SPC.B$.SKIP
      9525**DCL      9531--REDEF
VX_SPC.B$.VALUE
      9518**DCL      9524--REDEF
VX_SPC.SEG.NAME
      9480**DCL      9486--REDEF
VX_SPC.SEG.VALUE
      9487**DCL      9493--REDEF
VX_TSX0_OVERLAY.H
      9255**DCL      9258--REDEF
