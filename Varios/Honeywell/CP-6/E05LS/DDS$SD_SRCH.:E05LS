VERSION E05

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:1    
        1        1        /*M* DDS$SD_SRCH Program DEFs search routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$SD_SRCH
        9        9             PURPOSE: To search for the specified SYMDEF.
       10       10             DESCRIPTION: Searches the SYMDEFs record for the specified SYMDEF
       11       11                          name using a binary search. */
       12       12        /*D* NAME: DDS$SD_SRCH
       13       13             ENTRY: DDS$SD_SRCH
       14       14             CALL: CALL DDS$SD_SRCH( SYM$, ENTRY$ ) ALTRET( found );
       15       15             INPUT: SYM$ - Pointer to TEXTC name of desired SYMDEF.
       16       16             OUTPUT: ENTRY$ - Pointer to SYMDEF entry if found.
       17       17             SCRATCH: Local AUTO only.
       18       18             DESCRIPTION: Searches for the specified SYMDEF name using a binary
       19       19                          search. The SYMDEF entries have been ordered by name
       20       20                          by the LINKER. This binary search algorithm was ripped
       21       21                          off from RIT BARAN. ALTRETURNs if successful, else RETURNS. */
       22       22                                                /**/
       23       23        DDS$SD_SRCH: PROC( SYM$, ENTRY$ ) ALTRET;
       24       24                                                /**/
       25       25    1   DCL SYM$ PTR;
       26       26    1   DCL ENTRY$ PTR;
       27       27    1   DCL LOW UBIN;
       28       28    1   DCL HIGH UBIN;
       29       29    1   DCL MID UBIN;
       30       30    1   DCL TSYM$ PTR;
       31       31    1   DCL TENTRY$ PTR;
       32       32    1   DCL START1$ PTR;
       33       33    1   DCL DNAME$ PTR;
       34       34    1   DCL TNAME$ PTR;
       35       35    1   DCL NODE SBIN;
       36       36    1   DCL START SBIN;
       37       37    1   DCL INC SBIN;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:2    
       38       38    1   DCL TTENTRY$ PTR;
       39       39    1   DCL TTNAME$ PTR;
       40       40    1   DCL SOURCE UBIN;
       41       41    1   DCL I SBIN;
       42       42        /*D* NODE & START must be SBIN */
       43       43    1   DCL PATH UBIN;
       44       44    1   DCL NODE$ PTR;
       45       45    1   DCL TREE$ PTR;
       46       46        %INCLUDE DD$BASED;
       47     1349        %DU$NODE;
       48     1359        %DU$TREE;
       49     1365        %TEXT$C;
       50     1370    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;
       51     1371    1   DCL DEFDIR$ PTR SYMREF;
       52     1372        %B$DEF;
       53     1384        %INCLUDE B$OBJECT_C;
       54     4814        %B$SDEF;
       55     4868        %B$EDEF;
       56     4938        %SUB_LINKFLAGS;
       57     4947        %B$DNAME;
       58     4966        %INCLUDE XUH_MACRO_C;
       59     5050        %INCLUDE DD_SD_M;
       60     6386        %S_D;
       61     7704    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       62     7705        %INCLUDE DD_ERR_C;
       63     8102        %INCLUDE DD_SUBS_C;
       64     8373    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
       65     8374    1   DCL DDE$ERROR ENTRY(0);
       66     8375                                                /**/
       67     8376    1        IF NOT D_SYMBOLS
       68     8377    1        THEN RETURN;
       69     8378    1        IF S_D.OVERLAID
       70     8379    1        THEN IF D_XDELTA
       71     8380    2             THEN DO;
       72     8381    2                  IF S_D.UNODE.USENODE ~= 0
       73     8382    3                  THEN DO;
       74     8383    3                       CALL SETNODE(S_D.UNODE.USENODE);
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:3    
       75     8384    3                       CALL SDSRCH ALTRET(GOTIT);
       76     8385    3                     END;
       77     8386    2                  CALL SETNODE(0);
       78     8387    2                  CALL SDSRCH ALTRET(GOTIT);
       79     8388    2                  GOTO NOMORE;
       80     8389    2                END;
       81     8390    2             ELSE DO;
       82     8391    2                  CALL PATH_INIT;
       83     8392    3                  DO WHILE ( '1'B );
       84     8393    3                       CALL PATH_NEXT ALTRET( NOMORE );
       85     8394    3                       CALL SDSRCH ALTRET( GOTIT );
       86     8395    3                     END;
       87     8396    2                END;
       88     8397    2        ELSE DO;
       89     8398    2             CALL SDSRCH ALTRET( GOTIT );
       90     8399    2             GOTO NOMORE;
       91     8400    2           END;
       92     8401    1   GOTIT:
       93     8402    1        ENTRY$ = TENTRY$;
       94     8403    1        ALTRETURN;
       95     8404                                                /**/
       96     8405    1   NOMORE:
       97     8406    1        RETURN;
       98     8407                                                /**/
       99     8408        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:4    
      100     8409        /*F* NAME: DDS$ED_SRCH
      101     8410             PURPOSE: To search for the specified ENTDEF.
      102     8411             DESCRIPTION: Searches the ENTDEFs record for the specified ENTDEF
      103     8412                          name using a binary search. */
      104     8413        /*D* NAME: DDS$ED_SRCH
      105     8414             ENTRY: DDS$ED_SRCH
      106     8415             CALL: CALL DDS$ED_SRCH( SYM$, ENTRY$ ) ALTRET( found );
      107     8416             INPUT: SYM$ - Pointer to TEXTC name of desired ENTDEF.
      108     8417             OUTPUT: ENTRY$ - Pointer to ENTDEF entry if found.
      109     8418             SCRATCH: Local AUTO only.
      110     8419             DESCRIPTION: Searches for the specified ENTDEF name using a binary
      111     8420                          search. The ENTDEF entries have been ordered by name
      112     8421                          by the LINKER. This binary search algorithm was ripped
      113     8422                          off from RIT BARAN. ALTRETURNs if successful, else RETURNS. */
      114     8423                                                /**/
      115     8424    1   DDS$ED_SRCH: ENTRY( SYM$, ENTRY$ ) ALTRET;
      116     8425                                                /**/
      117     8426    1        IF NOT D_SYMBOLS
      118     8427    1        THEN RETURN;
      119     8428    1        IF S_D.OVERLAID
      120     8429    1        THEN IF D_XDELTA
      121     8430    2             THEN DO;
      122     8431    2                  IF S_D.UNODE.USENODE ~= 0
      123     8432    3                  THEN DO;
      124     8433    3                       CALL SETNODE(S_D.UNODE.USENODE);
      125     8434    3                       CALL EDSRCH ALTRET(GOTIT);
      126     8435    3                     END;
      127     8436    2                  CALL SETNODE(0);
      128     8437    2                  CALL EDSRCH ALTRET(GOTIT);
      129     8438    2                  GOTO NOMORE;
      130     8439    2                END;
      131     8440    2             ELSE DO;
      132     8441    2                  CALL PATH_INIT;
      133     8442    3                  DO WHILE ( '1'B );
      134     8443    3                       CALL PATH_NEXT ALTRET( NOMORE );
      135     8444    3                       CALL EDSRCH ALTRET( GOTIT );
      136     8445    3                     END;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:5    
      137     8446    2                END;
      138     8447    2        ELSE DO;
      139     8448    2             CALL EDSRCH ALTRET( GOTIT );
      140     8449    2             GOTO NOMORE;
      141     8450    2           END;
      142     8451                                                /**/
      143     8452        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:6    
      144     8453        /*F* NAME: DDS$PD_SRCH
      145     8454             PURPOSE: To search for the specified primary ENTDEF.
      146     8455             DESCRIPTION: Searches the ENTDEFs record for the specified ENTDEF
      147     8456                          name using a binary search. If the ENTDEF was found but
      148     8457                          it was not primary, then DDF$FIND_PEDEF is called to
      149     8458                          locate the primary ENTDEF. */
      150     8459        /*D* NAME: DDS$PD_SRCH
      151     8460             ENTRY: DDS$PD_SRCH
      152     8461             CALL: CALL DDS$PD_SRCH( SYM$, ENTRY$ ) ALTRET( found );
      153     8462             INPUT: SYM$ - Pointer to TEXTC name of desired ENTDEF.
      154     8463             OUTPUT: ENTRY$ - Pointer to ENTDEF entry if found.
      155     8464             SCRATCH: Local AUTO only.
      156     8465             DESCRIPTION: This routine is identical to DDS$SD_SRCH except that
      157     8466                          once the desired ENTDEF has been located, a check is made
      158     8467                          to see if it is the primary ENTDEF. If not, then the
      159     8468                          routine DDF$FIND_ENTDEF is called to get the desired
      160     8469                          primary ENTDEF. ALTRETURNs if successful, else RETURNs */
      161     8470                                                /**/
      162     8471    1   DDS$PD_SRCH: ENTRY( SYM$, ENTRY$ ) ALTRET;
      163     8472                                                /**/
      164     8473    1        IF NOT D_SYMBOLS
      165     8474    1        THEN RETURN;
      166     8475    1        IF S_D.OVERLAID
      167     8476    1        THEN IF D_XDELTA
      168     8477    2             THEN DO;
      169     8478    2                  IF S_D.UNODE.USENODE ~= 0
      170     8479    3                  THEN DO;
      171     8480    3                       CALL SETNODE(S_D.UNODE.USENODE);
      172     8481    3                       CALL EDSRCH ALTRET(GOTIT);
      173     8482    3                     END;
      174     8483    2                  CALL SETNODE(0);
      175     8484    2                  CALL EDSRCH ALTRET(GOTIT);
      176     8485    2                  GOTO NOMORE;
      177     8486    2                END;
      178     8487    2             ELSE DO;
      179     8488    2                  CALL PATH_INIT;
      180     8489    3                  DO WHILE ( '1'B );
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:7    
      181     8490    3                       CALL PATH_NEXT ALTRET( NOMORE );
      182     8491    3                       CALL EDSRCH ALTRET( GOTIT1 );
      183     8492    3                     END;
      184     8493    2                END;
      185     8494    2        ELSE DO;
      186     8495    2             CALL EDSRCH ALTRET( GOTIT1 );
      187     8496    2             GOTO NOMORE;
      188     8497    2           END;
      189     8498    1   GOTIT1:
      190     8499    1        IF NOT TENTRY$ -> B$EDEF.PRI
      191     8500    2        THEN DO;
      192     8501    2             LOW = TENTRY$ -> B$EDEF.ISADDR;
      193     8502    2             CALL DDF$FIND_PEDEF( LOW, TENTRY$ ) ALTRET( BADNEWS );
      194     8503    2           END;
      195     8504    1        GOTO GOTIT;
      196     8505                                                /**/
      197     8506    1   BADNEWS:
      198     8507    1        S_D.ERROR = E@UERR11;              /* E@UERR11 */
      199     8508    1        CALL DDE$ERROR;
      200     8509    1        RETURN;
      201     8510                                                /**/
      202     8511        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:8    
      203     8512                                                /**/
      204     8513    1   PATH_INIT: PROC ALTRET;
      205     8514                                                /**/
      206     8515    2        PATH = 0;
      207     8516        /* Initialize traversal path */
      208     8517    2        START = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * ( S_D.NODE#M1 + 1 ) ) -> DU$TREE.
              8517                 NEXT#;
      209     8518    2        NODE = START;
      210     8519    3        DO WHILE ( NODE >= 0 );
      211     8520    3             TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );
      212     8521    3             TREE$ -> DU$TREE.WAS_HERE = '0'B;
      213     8522    3             NODE = TREE$ -> DU$TREE.NEXT#;
      214     8523    3           END;
      215     8524    2        RETURN;
      216     8525                                                /**/
      217     8526    2   PATH_NEXT: ENTRY ALTRET;
      218     8527                                                /**/
      219     8528    3        DO CASE ( PATH );
      220     8529    3          CASE ( 0 );
      221     8530        /* Try current node first */
      222     8531    3             PATH = PATH + 1;
      223     8532    3             NODE = S_D.NODE;
      224     8533    3             TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );
      225     8534    3             IF TREE$ -> DU$TREE.NOW_IN
      226     8535    3             THEN GOTO GOTNODE;
      227     8536    3             ELSE GOTO CASE1;
      228     8537    3          CASE ( 1 );
      229     8538        /* Try root next */
      230     8539    3   CASE1:
      231     8540    3             PATH = PATH + 1;
      232     8541    3             NODE = 0;
      233     8542    3             TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );
      234     8543    3             IF NOT TREE$ -> DU$TREE.WAS_HERE
      235     8544    3             THEN GOTO GOTNODE;
      236     8545    3             ELSE GOTO CASE2;
      237     8546    3          CASE ( 2 );
      238     8547        /* Try next available node */
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:9    
      239     8548    3   CASE2:
      240     8549    3             NODE = START;
      241     8550    4             DO WHILE ( NODE >= 0 );
      242     8551    4                  TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );
      243     8552    4                  IF NOT TREE$ -> DU$TREE.WAS_HERE
      244     8553    5                  THEN DO;
      245     8554    5                       TREE$ -> DU$TREE.WAS_HERE = '1'B;
      246     8555    5                       START = NODE;       /* Remember for next time */
      247     8556    5                       GOTO GOTNODE;
      248     8557    5                     END;
      249     8558    4                  NODE = TREE$ -> DU$TREE.NEXT#;
      250     8559    4                END;
      251     8560    3          END;
      252     8561        /* No nodes left */
      253     8562    2        ALTRETURN;
      254     8563        /* Got one */
      255     8564    2   GOTNODE:
      256     8565    2        TREE$ -> DU$TREE.WAS_HERE = '1'B;
      257     8566    2        NODE$ = PINCRW( S_D.NODESEG$, SIZEW( DU$NODE ) * NODE );
      258     8567    2        S_D.EDEF$ = NODE$ -> DU$NODE.EDEF$;
      259     8568    2        S_D.EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$;
      260     8569    2        S_D.SDEF$ = NODE$ -> DU$NODE.SDEF$;
      261     8570    2        S_D.SDEF_END$ = NODE$ -> DU$NODE.SDEF_END$;
      262     8571    2        S_D.DNAME$ = NODE$ -> DU$NODE.DNAME$;
      263     8572    2        S_D.NODE = NODE;
      264     8573    2        RETURN;
      265     8574                                                /**/
      266     8575    2   END PATH_INIT;
      267     8576
      268     8577    1   SETNODE: PROC(N);
      269     8578    2   DCL N UBIN;
      270     8579    2        S_D.EDEF$ = B$DEF.NINFO.EDEF$(N);
      271     8580    2        S_D.EDEF_END$ = PINCRW(B$DEF.NINFO.EDEF$(N+1), -SIZEW(B$EDEF));
      272     8581    2        S_D.SDEF$ = B$DEF.NINFO.SDEF$(N);
      273     8582    2        S_D.SDEF_END$ = PINCRW(B$DEF.NINFO.SDEF$(N+1), -SIZEW(B$SDEF));
      274     8583    2        S_D.NODE = N;
      275     8584    2        RETURN;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:10   
      276     8585    2   END SETNODE;
      277     8586        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:11   
      278     8587                                                /**/
      279     8588    1   EDSRCH: PROC ALTRET;
      280     8589                                                /**/
      281     8590    2        IF S_D.EDEF$ = ADDR( NIL )
      282     8591    2        THEN RETURN;
      283     8592    2        HIGH = ( POFFW( S_D.EDEF_END$, S_D.EDEF$ ) / SIZEW( B$EDEF ) ) + 2;
      284     8593    2        START1$ = PINCRW( S_D.EDEF$, -SIZEW( B$EDEF ) );
      285     8594    2        LOW = 0;
      286     8595    2        DNAME$ = S_D.DNAME$;
      287     8596    3        DO WHILE ( LOW + 1 < HIGH );
      288     8597    3             MID = ( LOW + HIGH ) / 2;
      289     8598    3             TENTRY$ = PINCRW( START1$, MID * SIZEW( B$EDEF ) );
      290     8599    3             TNAME$ = PINCRW( DNAME$, TENTRY$ -> B$EDEF.NPOINTER );
      291     8600    3             IF TNAME$ -> B$DNAME.TEXT < SYM$ -> TEXT$C.TXT
      292     8601    3             THEN LOW = MID;
      293     8602    3             ELSE IF TNAME$ -> B$DNAME.TEXT > SYM$ -> TEXT$C.TXT
      294     8603    3                  THEN HIGH = MID;
      295     8604    4                  ELSE DO;
      296     8605    4                       IF TENTRY$ -> B$EDEF.LFLAGS.SOURCE = %SOURCE_RLIB#
      297     8606    5                       THEN DO;
      298     8607                                           /* Have EDEF from RU - don't use it.  Look
      299     8608                                              before and after this EDEF for one to use.
      300     8609                                              Try before first.  */
      301     8610    5                            INC = -1;
      302     8611    6                            DO I = 0 TO 1;
      303     8612    6                                 TTENTRY$ = TENTRY$;
      304     8613    6                                 TTNAME$ = TNAME$;
      305     8614    7                                 DO WHILE (SYM$ -> TEXT$C.TXT = TTNAME$ -> B$DNAME.TEXT
              8614                                          );
      306     8615    7                                      SOURCE = TTENTRY$ -> B$EDEF.LFLAGS.SOURCE;
      307     8616    7                                      IF SOURCE = %SOURCE_OBJECT# OR
      308     8617    7                                        SOURCE = %SOURCE_ULIB# OR
      309     8618    7                                        (SOURCE = %SOURCE_REMOVED# AND
      310     8619    7                                        S_D.HEAD_LIB)
      311     8620    8                                      THEN DO;
      312     8621    8                                           TENTRY$ = TTENTRY$;
      313     8622    8                                           GOTO GOTEDEF;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:12   
      314     8623    8                                         END;
      315     8624    7                                      TTENTRY$ = PINCRW( TTENTRY$, INC * SIZEW( B$EDEF
              8624                                               ));
      316     8625    7                                      IF (TTENTRY$ < S_D.EDEF$ AND INC < 0) OR
      317     8626    7                                        (TTENTRY$ > S_D.EDEF_END$ AND INC > 0)
      318     8627    7                                      THEN GOTO NOEDEF;
      319     8628    7                                      TTNAME$ = PINCRW( DNAME$, TTENTRY$ -> B$EDEF.
              8628                                               NPOINTER );
      320     8629    7                                    END;
      321     8630                                                /* Try after */
      322     8631    6                                 INC = 1;
      323     8632    6                               END;
      324     8633    5                            LOW = HIGH;
      325     8634    5                          END;
      326     8635    5                       ELSE DO;            /* Got it */
      327     8636    5   GOTEDEF:                 ;
      328     8637    5                            ENTRY$ = TENTRY$;
      329     8638    5                            ALTRETURN;
      330     8639    5                          END;
      331     8640    4                     END;
      332     8641    3           END;
      333     8642    2   NOEDEF:                                 /* Can't find it */
      334     8643                                                /* Can't find it */
      335     8644    2        RETURN;
      336     8645                                                /**/
      337     8646    2   SDSRCH: ENTRY ALTRET;
      338     8647                                                /**/
      339     8648    2        IF S_D.SDEF$ = ADDR( NIL )
      340     8649    2        THEN RETURN;
      341     8650    2        HIGH = ( POFFW( S_D.SDEF_END$, S_D.SDEF$ ) / SIZEW( B$SDEF ) ) + 2;
      342     8651    2        START1$ = PINCRW( S_D.SDEF$, -SIZEW( B$SDEF ) );
      343     8652    2        LOW = 0;
      344     8653    2        DNAME$ = S_D.DNAME$;
      345     8654    3        DO WHILE ( LOW + 1 < HIGH );
      346     8655    3             MID = ( LOW + HIGH ) / 2;
      347     8656    3             TENTRY$ = PINCRW( START1$, MID * SIZEW( B$SDEF ) );
      348     8657    3             TNAME$ = PINCRW( DNAME$, TENTRY$ -> B$SDEF.NPOINTER );
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:13   
      349     8658    3             IF TNAME$ -> B$DNAME.TEXT < SYM$ -> TEXT$C.TXT
      350     8659    3             THEN LOW = MID;
      351     8660    3             ELSE IF TNAME$ -> B$DNAME.TEXT > SYM$ -> TEXT$C.TXT
      352     8661    3                  THEN HIGH = MID;
      353     8662    4                  ELSE DO;
      354     8663    4                       IF TENTRY$ -> B$SDEF.AD.LFLAGS.SOURCE = %SOURCE_RLIB#
      355     8664    5                       THEN DO;
      356     8665                                           /* Have SDEF from RU - don't use it.  Look
      357     8666                                              before and after this SDEF for one to use.
      358     8667                                              Try before first.  */
      359     8668    5                            INC = -1;
      360     8669    6                            DO I = 0 TO 1;
      361     8670    6                                 TTENTRY$ = TENTRY$;
      362     8671    6                                 TTNAME$ = TNAME$;
      363     8672    7                                 DO WHILE (SYM$ -> TEXT$C.TXT = TTNAME$ -> B$DNAME.TEXT
              8672                                          );
      364     8673    7                                      SOURCE = TTENTRY$ -> B$SDEF.AD.LFLAGS.SOURCE;
      365     8674    7                                      IF SOURCE = %SOURCE_OBJECT# OR
      366     8675    7                                        SOURCE = %SOURCE_ULIB# OR
      367     8676    7                                        (SOURCE = %SOURCE_REMOVED# AND
      368     8677    7                                        S_D.HEAD_LIB)
      369     8678    8                                      THEN DO;
      370     8679    8                                           TENTRY$ = TTENTRY$;
      371     8680    8                                           GOTO GOTSDEF;
      372     8681    8                                         END;
      373     8682    7                                      TTENTRY$ = PINCRW( TTENTRY$, INC * SIZEW( B$SDEF
              8682                                               ));
      374     8683    7                                      IF (TTENTRY$ < S_D.SDEF$ AND INC < 0) OR
      375     8684    7                                        (TTENTRY$ > S_D.SDEF_END$ AND INC > 0)
      376     8685    7                                      THEN GOTO NOSDEF;
      377     8686    7                                      TTNAME$ = PINCRW( DNAME$, TTENTRY$ -> B$SDEF.
              8686                                               NPOINTER );
      378     8687    7                                    END;
      379     8688                                                /* Try after */
      380     8689    6                                 INC = 1;
      381     8690    6                               END;
      382     8691    5                            LOW = HIGH;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:14   
      383     8692    5                          END;
      384     8693    5                       ELSE DO;            /* Got it */
      385     8694    5   GOTSDEF:                 ;
      386     8695    5                            ENTRY$ = TENTRY$;
      387     8696    5                            ALTRETURN;
      388     8697    5                          END;
      389     8698    4                     END;
      390     8699    3           END;
      391     8700    2   NOSDEF:                                 /* Can't find it */
      392     8701    2        RETURN;
      393     8702                                                /**/
      394     8703    2   END EDSRCH;
      395     8704                                                /**/
      396     8705    1   END DDS$SD_SRCH;

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:15   
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SD_SRCH.

   Procedure DDS$SD_SRCH requires 541 words for executable code.
   Procedure DDS$SD_SRCH requires 28 words of local(AUTO) storage.

    No errors detected in file DDS$SD_SRCH.:E05TSI    .

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:16   

 Object Unit name= DDS$SD_SRCH                                File name= DDS$SD_SRCH.:E05TOU
 UTS= JUL 29 '97 14:21:33.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   541   1035  DDS$SD_SRCH
    1  RoData even  none     1      1  DDS$SD_SRCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$SD_SRCH
     0     51          yes     yes      Std        2  DDS$ED_SRCH
     0    115          yes     yes      Std        2  DDS$PD_SRCH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDF$FIND_PEDEF
         yes           Std       0 DDE$ERROR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:17   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     D_XDELTA                              DEFDIR$                          r    S_D$
     D_SYMBOLS                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:18   


        1        1        /*M* DDS$SD_SRCH Program DEFs search routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$SD_SRCH
        9        9             PURPOSE: To search for the specified SYMDEF.
       10       10             DESCRIPTION: Searches the SYMDEFs record for the specified SYMDEF
       11       11                          name using a binary search. */
       12       12        /*D* NAME: DDS$SD_SRCH
       13       13             ENTRY: DDS$SD_SRCH
       14       14             CALL: CALL DDS$SD_SRCH( SYM$, ENTRY$ ) ALTRET( found );
       15       15             INPUT: SYM$ - Pointer to TEXTC name of desired SYMDEF.
       16       16             OUTPUT: ENTRY$ - Pointer to SYMDEF entry if found.
       17       17             SCRATCH: Local AUTO only.
       18       18             DESCRIPTION: Searches for the specified SYMDEF name using a binary
       19       19                          search. The SYMDEF entries have been ordered by name
       20       20                          by the LINKER. This binary search algorithm was ripped
       21       21                          off from RIT BARAN. ALTRETURNs if successful, else RETURNS. */
       22       22                                                /**/
       23       23        DDS$SD_SRCH: PROC( SYM$, ENTRY$ ) ALTRET;

     23  0 000000   000000 700200 xent  DDS$SD_SRCH  TSX0  ! X66_AUTO_2
         0 000001   000034 000002                    ZERO    28,2

       24       24                                                /**/
       25       25    1   DCL SYM$ PTR;
       26       26    1   DCL ENTRY$ PTR;
       27       27    1   DCL LOW UBIN;
       28       28    1   DCL HIGH UBIN;
       29       29    1   DCL MID UBIN;
       30       30    1   DCL TSYM$ PTR;
       31       31    1   DCL TENTRY$ PTR;
       32       32    1   DCL START1$ PTR;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:19   
       33       33    1   DCL DNAME$ PTR;
       34       34    1   DCL TNAME$ PTR;
       35       35    1   DCL NODE SBIN;
       36       36    1   DCL START SBIN;
       37       37    1   DCL INC SBIN;
       38       38    1   DCL TTENTRY$ PTR;
       39       39    1   DCL TTNAME$ PTR;
       40       40    1   DCL SOURCE UBIN;
       41       41    1   DCL I SBIN;
       42       42        /*D* NODE & START must be SBIN */
       43       43    1   DCL PATH UBIN;
       44       44    1   DCL NODE$ PTR;
       45       45    1   DCL TREE$ PTR;
       46       46        %INCLUDE DD$BASED;
       47     1349        %DU$NODE;
       48     1359        %DU$TREE;
       49     1365        %TEXT$C;
       50     1370    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;
       51     1371    1   DCL DEFDIR$ PTR SYMREF;
       52     1372        %B$DEF;
       53     1384        %INCLUDE B$OBJECT_C;
       54     4814        %B$SDEF;
       55     4868        %B$EDEF;
       56     4938        %SUB_LINKFLAGS;
       57     4947        %B$DNAME;
       58     4966        %INCLUDE XUH_MACRO_C;
       59     5050        %INCLUDE DD_SD_M;
       60     6386        %S_D;
       61     7704    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       62     7705        %INCLUDE DD_ERR_C;
       63     8102        %INCLUDE DD_SUBS_C;
       64     8373    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
       65     8374    1   DCL DDE$ERROR ENTRY(0);
       66     8375                                                /**/
       67     8376    1        IF NOT D_SYMBOLS

   8376  0 000002   000000 234000 xsym               SZN     D_SYMBOLS
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:20   
         0 000003   000005 604000 0                  TMI     s:8378

       68     8377    1        THEN RETURN;

   8377  0 000004   000000 702200 xent               TSX2  ! X66_ARET

       69     8378    1        IF S_D.OVERLAID

   8378  0 000005   000000 470400 xsym               LDP0    S_D$
         0 000006   004764 234100                    SZN     2548,,PR0
         0 000007   000041 605000 0                  TPL     s:8398

       70     8379    1        THEN IF D_XDELTA

   8379  0 000010   000000 234000 xsym               SZN     D_XDELTA
         0 000011   000032 605000 0                  TPL     s:8391

       71     8380    2             THEN DO;

       72     8381    2                  IF S_D.UNODE.USENODE ~= 0

   8381  0 000012   004760 235100                    LDA     2544,,PR0
         0 000013   000023 600000 0                  TZE     s:8386

       73     8382    3                  THEN DO;

       74     8383    3                       CALL SETNODE(S_D.UNODE.USENODE);

   8383  0 000014   000000 236000 xsym               LDQ     S_D$
         0 000015   004760 036003                    ADLQ    2544,DU
         0 000016   200031 756100                    STQ     TREE$+3,,AUTO
         0 000017   000354 701000 0                  TSX1    SETNODE
         0 000020   000000 011000                    NOP     0

       75     8384    3                       CALL SDSRCH ALTRET(GOTIT);

   8384  0 000021   000621 701000 0                  TSX1    SDSRCH
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:21   
         0 000022   000044 702000 0                  TSX2    GOTIT

       76     8385    3                     END;

       77     8386    2                  CALL SETNODE(0);

   8386  0 000023   000000 236000 1                  LDQ     0
         0 000024   200031 756100                    STQ     TREE$+3,,AUTO
         0 000025   000354 701000 0                  TSX1    SETNODE
         0 000026   000000 011000                    NOP     0

       78     8387    2                  CALL SDSRCH ALTRET(GOTIT);

   8387  0 000027   000621 701000 0                  TSX1    SDSRCH
         0 000030   000044 702000 0                  TSX2    GOTIT

       79     8388    2                  GOTO NOMORE;

   8388  0 000031   000050 710000 0                  TRA     NOMORE

       80     8389    2                END;
       81     8390    2             ELSE DO;

       82     8391    2                  CALL PATH_INIT;

   8391  0 000032   000210 701000 0                  TSX1    PATH_INIT
         0 000033   000000 011000                    NOP     0

       83     8392    3                  DO WHILE ( '1'B );

       84     8393    3                       CALL PATH_NEXT ALTRET( NOMORE );

   8393  0 000034   000240 701000 0                  TSX1    PATH_NEXT
         0 000035   000050 702000 0                  TSX2    NOMORE

       85     8394    3                       CALL SDSRCH ALTRET( GOTIT );

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:22   
   8394  0 000036   000621 701000 0                  TSX1    SDSRCH
         0 000037   000044 702000 0                  TSX2    GOTIT

       86     8395    3                     END;

   8395  0 000040   000034 710000 0                  TRA     s:8393

       87     8396    2                END;
       88     8397    2        ELSE DO;

       89     8398    2             CALL SDSRCH ALTRET( GOTIT );

   8398  0 000041   000621 701000 0                  TSX1    SDSRCH
         0 000042   000044 702000 0                  TSX2    GOTIT

       90     8399    2             GOTO NOMORE;

   8399  0 000043   000050 710000 0                  TRA     NOMORE

       91     8400    2           END;
       92     8401    1   GOTIT:
       93     8402    1        ENTRY$ = TENTRY$;

   8402  0 000044   200011 236100       GOTIT        LDQ     TENTRY$,,AUTO
         0 000045   200004 470500                    LDP0    @ENTRY$,,AUTO
         0 000046   000000 756100                    STQ     0,,PR0

       94     8403    1        ALTRETURN;

   8403  0 000047   000000 702200 xent               TSX2  ! X66_AALT

       95     8404                                                /**/
       96     8405    1   NOMORE:
       97     8406    1        RETURN;

   8406  0 000050   000000 702200 xent  NOMORE       TSX2  ! X66_ARET

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:23   
       98     8407                                                /**/
       99     8408        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:24   
      100     8409        /*F* NAME: DDS$ED_SRCH
      101     8410             PURPOSE: To search for the specified ENTDEF.
      102     8411             DESCRIPTION: Searches the ENTDEFs record for the specified ENTDEF
      103     8412                          name using a binary search. */
      104     8413        /*D* NAME: DDS$ED_SRCH
      105     8414             ENTRY: DDS$ED_SRCH
      106     8415             CALL: CALL DDS$ED_SRCH( SYM$, ENTRY$ ) ALTRET( found );
      107     8416             INPUT: SYM$ - Pointer to TEXTC name of desired ENTDEF.
      108     8417             OUTPUT: ENTRY$ - Pointer to ENTDEF entry if found.
      109     8418             SCRATCH: Local AUTO only.
      110     8419             DESCRIPTION: Searches for the specified ENTDEF name using a binary
      111     8420                          search. The ENTDEF entries have been ordered by name
      112     8421                          by the LINKER. This binary search algorithm was ripped
      113     8422                          off from RIT BARAN. ALTRETURNs if successful, else RETURNS. */
      114     8423                                                /**/
      115     8424    1   DDS$ED_SRCH: ENTRY( SYM$, ENTRY$ ) ALTRET;

   8424  0 000051   000000 700200 xent  DDS$ED_SRCH  TSX0  ! X66_AUTO_2
         0 000052   000034 000002                    ZERO    28,2

      116     8425                                                /**/
      117     8426    1        IF NOT D_SYMBOLS

   8426  0 000053   000000 234000 xsym               SZN     D_SYMBOLS
         0 000054   000056 604000 0                  TMI     s:8428

      118     8427    1        THEN RETURN;

   8427  0 000055   000000 702200 xent               TSX2  ! X66_ARET

      119     8428    1        IF S_D.OVERLAID

   8428  0 000056   000000 470400 xsym               LDP0    S_D$
         0 000057   004764 234100                    SZN     2548,,PR0
         0 000060   000112 605000 0                  TPL     s:8448

      120     8429    1        THEN IF D_XDELTA
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:25   

   8429  0 000061   000000 234000 xsym               SZN     D_XDELTA
         0 000062   000103 605000 0                  TPL     s:8441

      121     8430    2             THEN DO;

      122     8431    2                  IF S_D.UNODE.USENODE ~= 0

   8431  0 000063   004760 235100                    LDA     2544,,PR0
         0 000064   000074 600000 0                  TZE     s:8436

      123     8432    3                  THEN DO;

      124     8433    3                       CALL SETNODE(S_D.UNODE.USENODE);

   8433  0 000065   000000 236000 xsym               LDQ     S_D$
         0 000066   004760 036003                    ADLQ    2544,DU
         0 000067   200031 756100                    STQ     TREE$+3,,AUTO
         0 000070   000354 701000 0                  TSX1    SETNODE
         0 000071   000000 011000                    NOP     0

      125     8434    3                       CALL EDSRCH ALTRET(GOTIT);

   8434  0 000072   000405 701000 0                  TSX1    EDSRCH
         0 000073   000044 702000 0                  TSX2    GOTIT

      126     8435    3                     END;

      127     8436    2                  CALL SETNODE(0);

   8436  0 000074   000000 236000 1                  LDQ     0
         0 000075   200031 756100                    STQ     TREE$+3,,AUTO
         0 000076   000354 701000 0                  TSX1    SETNODE
         0 000077   000000 011000                    NOP     0

      128     8437    2                  CALL EDSRCH ALTRET(GOTIT);

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:26   
   8437  0 000100   000405 701000 0                  TSX1    EDSRCH
         0 000101   000044 702000 0                  TSX2    GOTIT

      129     8438    2                  GOTO NOMORE;

   8438  0 000102   000050 710000 0                  TRA     NOMORE

      130     8439    2                END;
      131     8440    2             ELSE DO;

      132     8441    2                  CALL PATH_INIT;

   8441  0 000103   000210 701000 0                  TSX1    PATH_INIT
         0 000104   000000 011000                    NOP     0

      133     8442    3                  DO WHILE ( '1'B );

      134     8443    3                       CALL PATH_NEXT ALTRET( NOMORE );

   8443  0 000105   000240 701000 0                  TSX1    PATH_NEXT
         0 000106   000050 702000 0                  TSX2    NOMORE

      135     8444    3                       CALL EDSRCH ALTRET( GOTIT );

   8444  0 000107   000405 701000 0                  TSX1    EDSRCH
         0 000110   000044 702000 0                  TSX2    GOTIT

      136     8445    3                     END;

   8445  0 000111   000105 710000 0                  TRA     s:8443

      137     8446    2                END;
      138     8447    2        ELSE DO;

      139     8448    2             CALL EDSRCH ALTRET( GOTIT );

   8448  0 000112   000405 701000 0                  TSX1    EDSRCH
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:27   
         0 000113   000044 702000 0                  TSX2    GOTIT

      140     8449    2             GOTO NOMORE;

   8449  0 000114   000050 710000 0                  TRA     NOMORE

      141     8450    2           END;
      142     8451                                                /**/
      143     8452        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:28   
      144     8453        /*F* NAME: DDS$PD_SRCH
      145     8454             PURPOSE: To search for the specified primary ENTDEF.
      146     8455             DESCRIPTION: Searches the ENTDEFs record for the specified ENTDEF
      147     8456                          name using a binary search. If the ENTDEF was found but
      148     8457                          it was not primary, then DDF$FIND_PEDEF is called to
      149     8458                          locate the primary ENTDEF. */
      150     8459        /*D* NAME: DDS$PD_SRCH
      151     8460             ENTRY: DDS$PD_SRCH
      152     8461             CALL: CALL DDS$PD_SRCH( SYM$, ENTRY$ ) ALTRET( found );
      153     8462             INPUT: SYM$ - Pointer to TEXTC name of desired ENTDEF.
      154     8463             OUTPUT: ENTRY$ - Pointer to ENTDEF entry if found.
      155     8464             SCRATCH: Local AUTO only.
      156     8465             DESCRIPTION: This routine is identical to DDS$SD_SRCH except that
      157     8466                          once the desired ENTDEF has been located, a check is made
      158     8467                          to see if it is the primary ENTDEF. If not, then the
      159     8468                          routine DDF$FIND_ENTDEF is called to get the desired
      160     8469                          primary ENTDEF. ALTRETURNs if successful, else RETURNs */
      161     8470                                                /**/
      162     8471    1   DDS$PD_SRCH: ENTRY( SYM$, ENTRY$ ) ALTRET;

   8471  0 000115   000000 700200 xent  DDS$PD_SRCH  TSX0  ! X66_AUTO_2
         0 000116   000034 000002                    ZERO    28,2

      163     8472                                                /**/
      164     8473    1        IF NOT D_SYMBOLS

   8473  0 000117   000000 234000 xsym               SZN     D_SYMBOLS
         0 000120   000122 604000 0                  TMI     s:8475

      165     8474    1        THEN RETURN;

   8474  0 000121   000000 702200 xent               TSX2  ! X66_ARET

      166     8475    1        IF S_D.OVERLAID

   8475  0 000122   000000 470400 xsym               LDP0    S_D$
         0 000123   004764 234100                    SZN     2548,,PR0
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:29   
         0 000124   000156 605000 0                  TPL     s:8495

      167     8476    1        THEN IF D_XDELTA

   8476  0 000125   000000 234000 xsym               SZN     D_XDELTA
         0 000126   000147 605000 0                  TPL     s:8488

      168     8477    2             THEN DO;

      169     8478    2                  IF S_D.UNODE.USENODE ~= 0

   8478  0 000127   004760 235100                    LDA     2544,,PR0
         0 000130   000140 600000 0                  TZE     s:8483

      170     8479    3                  THEN DO;

      171     8480    3                       CALL SETNODE(S_D.UNODE.USENODE);

   8480  0 000131   000000 236000 xsym               LDQ     S_D$
         0 000132   004760 036003                    ADLQ    2544,DU
         0 000133   200031 756100                    STQ     TREE$+3,,AUTO
         0 000134   000354 701000 0                  TSX1    SETNODE
         0 000135   000000 011000                    NOP     0

      172     8481    3                       CALL EDSRCH ALTRET(GOTIT);

   8481  0 000136   000405 701000 0                  TSX1    EDSRCH
         0 000137   000044 702000 0                  TSX2    GOTIT

      173     8482    3                     END;

      174     8483    2                  CALL SETNODE(0);

   8483  0 000140   000000 236000 1                  LDQ     0
         0 000141   200031 756100                    STQ     TREE$+3,,AUTO
         0 000142   000354 701000 0                  TSX1    SETNODE
         0 000143   000000 011000                    NOP     0
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:30   

      175     8484    2                  CALL EDSRCH ALTRET(GOTIT);

   8484  0 000144   000405 701000 0                  TSX1    EDSRCH
         0 000145   000044 702000 0                  TSX2    GOTIT

      176     8485    2                  GOTO NOMORE;

   8485  0 000146   000050 710000 0                  TRA     NOMORE

      177     8486    2                END;
      178     8487    2             ELSE DO;

      179     8488    2                  CALL PATH_INIT;

   8488  0 000147   000210 701000 0                  TSX1    PATH_INIT
         0 000150   000000 011000                    NOP     0

      180     8489    3                  DO WHILE ( '1'B );

      181     8490    3                       CALL PATH_NEXT ALTRET( NOMORE );

   8490  0 000151   000240 701000 0                  TSX1    PATH_NEXT
         0 000152   000050 702000 0                  TSX2    NOMORE

      182     8491    3                       CALL EDSRCH ALTRET( GOTIT1 );

   8491  0 000153   000405 701000 0                  TSX1    EDSRCH
         0 000154   000161 702000 0                  TSX2    GOTIT1

      183     8492    3                     END;

   8492  0 000155   000151 710000 0                  TRA     s:8490

      184     8493    2                END;
      185     8494    2        ELSE DO;

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:31   
      186     8495    2             CALL EDSRCH ALTRET( GOTIT1 );

   8495  0 000156   000405 701000 0                  TSX1    EDSRCH
         0 000157   000161 702000 0                  TSX2    GOTIT1

      187     8496    2             GOTO NOMORE;

   8496  0 000160   000050 710000 0                  TRA     NOMORE

      188     8497    2           END;
      189     8498    1   GOTIT1:
      190     8499    1        IF NOT TENTRY$ -> B$EDEF.PRI

   8499  0 000161   200011 470500       GOTIT1       LDP0    TENTRY$,,AUTO
         0 000162   000001 236100                    LDQ     1,,PR0
         0 000163   400000 316007                    CANQ    -131072,DL
         0 000164   000200 601000 0                  TNZ     s:8504

      191     8500    2        THEN DO;

      192     8501    2             LOW = TENTRY$ -> B$EDEF.ISADDR;

   8501  0 000165   000000 236100                    LDQ     0,,PR0
         0 000166   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000167   200005 756100                    STQ     LOW,,AUTO

      193     8502    2             CALL DDF$FIND_PEDEF( LOW, TENTRY$ ) ALTRET( BADNEWS );

   8502  0 000170   200011 631500                    EPPR1   TENTRY$,,AUTO
         0 000171   200033 451500                    STP1    @N+2,,AUTO
         0 000172   200005 633500                    EPPR3   LOW,,AUTO
         0 000173   200032 453500                    STP3    @N+1,,AUTO
         0 000174   200032 630500                    EPPR0   @N+1,,AUTO
         0 000175   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000176   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         0 000177   000201 702000 0                  TSX2    BADNEWS

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:32   
      194     8503    2           END;

      195     8504    1        GOTO GOTIT;

   8504  0 000200   000044 710000 0                  TRA     GOTIT

      196     8505                                                /**/
      197     8506    1   BADNEWS:
      198     8507    1        S_D.ERROR = E@UERR11;              /* E@UERR11 */

   8507  0 000201   000026 235007       BADNEWS      LDA     22,DL
         0 000202   000000 470400 xsym               LDP0    S_D$
         0 000203   000013 755100                    STA     11,,PR0

      199     8508    1        CALL DDE$ERROR;

   8508  0 000204   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000205   000000 701000 xent               TSX1    DDE$ERROR
         0 000206   000000 011000                    NOP     0

      200     8509    1        RETURN;

   8509  0 000207   000000 702200 xent               TSX2  ! X66_ARET

      201     8510                                                /**/
      202     8511        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:33   
      203     8512                                                /**/
      204     8513    1   PATH_INIT: PROC ALTRET;

   8513  0 000210   200030 741300       PATH_INIT    STX1  ! TREE$+2,,AUTO

      205     8514                                                /**/
      206     8515    2        PATH = 0;

   8515  0 000211   200024 450100                    STZ     PATH,,AUTO

      207     8516        /* Initialize traversal path */
      208     8517    2       START = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * ( S_D.NODE#M1 + 1 ) ) -> DU$TREE.
              8517                 NEXT#;

   8517  0 000212   000000 470400 xsym               LDP0    S_D$
         0 000213   004766 720100                    LXL0    2550,,PR0
         0 000214   004761 471500                    LDP1    2545,,PR0
         0 000215   000000 636010                    EAQ     0,X0
         0 000216   000022 772000                    QRL     18
         0 000217   000003 402007                    MPY     3,DL
         0 000220   100003 235106                    LDA     3,QL,PR1
         0 000221   200016 755100                    STA     START,,AUTO

      209     8518    2        NODE = START;

   8518  0 000222   200015 755100                    STA     NODE,,AUTO

      210     8519    3        DO WHILE ( NODE >= 0 );

   8519  0 000223   000236 604000 0                  TMI     s:8524

      211     8520    3             TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );

   8520  0 000224   000000 470400 xsym               LDP0    S_D$
         0 000225   004761 471500                    LDP1    2545,,PR0
         0 000226   200015 236100                    LDQ     NODE,,AUTO
         0 000227   000003 402007                    MPY     3,DL
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:34   
         0 000230   100000 633506                    EPPR3   0,QL,PR1
         0 000231   200026 453500                    STP3    TREE$,,AUTO

      212     8521    3             TREE$ -> DU$TREE.WAS_HERE = '0'B;

   8521  0 000232   300001 450100                    STZ     1,,PR3

      213     8522    3             NODE = TREE$ -> DU$TREE.NEXT#;

   8522  0 000233   300000 235100                    LDA     0,,PR3
         0 000234   200015 755100                    STA     NODE,,AUTO

      214     8523    3           END;

   8523  0 000235   000224 605000 0                  TPL     s:8520

      215     8524    2        RETURN;

   8524  0 000236   200030 221300                    LDX1  ! TREE$+2,,AUTO
         0 000237   000001 702211                    TSX2  ! 1,X1

      216     8525                                                /**/
      217     8526    2   PATH_NEXT: ENTRY ALTRET;

   8526  0 000240   200030 741300       PATH_NEXT    STX1  ! TREE$+2,,AUTO

      218     8527                                                /**/
      219     8528    3        DO CASE ( PATH );

   8528  0 000241   200024 235100                    LDA     PATH,,AUTO
         0 000242   000003 115007                    CMPA    3,DL
         0 000243   000245 602005 0                  TNC     s:8528+4,AL
         0 000244   000325 710000 0                  TRA     s:8562
         0 000245   000250 710000 0                  TRA     s:8531
         0 000246   000265 710000 0                  TRA     CASE1
         0 000247   000302 710000 0                  TRA     CASE2

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:35   
      220     8529    3          CASE ( 0 );

      221     8530        /* Try current node first */
      222     8531    3             PATH = PATH + 1;

   8531  0 000250   000001 035007                    ADLA    1,DL
         0 000251   200024 755100                    STA     PATH,,AUTO

      223     8532    3             NODE = S_D.NODE;

   8532  0 000252   000000 470400 xsym               LDP0    S_D$
         0 000253   004706 235100                    LDA     2502,,PR0
         0 000254   200015 755100                    STA     NODE,,AUTO

      224     8533    3             TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );

   8533  0 000255   004761 471500                    LDP1    2545,,PR0
         0 000256   200015 236100                    LDQ     NODE,,AUTO
         0 000257   000003 402007                    MPY     3,DL
         0 000260   100000 633506                    EPPR3   0,QL,PR1
         0 000261   200026 453500                    STP3    TREE$,,AUTO

      225     8534    3             IF TREE$ -> DU$TREE.NOW_IN

   8534  0 000262   300002 234100                    SZN     2,,PR3
         0 000263   000327 604000 0                  TMI     GOTNODE

      226     8535    3             THEN GOTO GOTNODE;
      227     8536    3             ELSE GOTO CASE1;

   8536  0 000264   000265 710000 0                  TRA     CASE1

      228     8537    3          CASE ( 1 );

      229     8538        /* Try root next */
      230     8539    3   CASE1:
      231     8540    3             PATH = PATH + 1;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:36   

   8540  0 000265   200024 235100       CASE1        LDA     PATH,,AUTO
         0 000266   000001 035007                    ADLA    1,DL
         0 000267   200024 755100                    STA     PATH,,AUTO

      232     8541    3             NODE = 0;

   8541  0 000270   200015 450100                    STZ     NODE,,AUTO

      233     8542    3             TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );

   8542  0 000271   000000 470400 xsym               LDP0    S_D$
         0 000272   004761 471500                    LDP1    2545,,PR0
         0 000273   200015 236100                    LDQ     NODE,,AUTO
         0 000274   000003 402007                    MPY     3,DL
         0 000275   100000 633506                    EPPR3   0,QL,PR1
         0 000276   200026 453500                    STP3    TREE$,,AUTO

      234     8543    3             IF NOT TREE$ -> DU$TREE.WAS_HERE

   8543  0 000277   300001 234100                    SZN     1,,PR3
         0 000300   000327 605000 0                  TPL     GOTNODE

      235     8544    3             THEN GOTO GOTNODE;
      236     8545    3             ELSE GOTO CASE2;

   8545  0 000301   000302 710000 0                  TRA     CASE2

      237     8546    3          CASE ( 2 );

      238     8547        /* Try next available node */
      239     8548    3   CASE2:
      240     8549    3             NODE = START;

   8549  0 000302   200016 235100       CASE2        LDA     START,,AUTO
         0 000303   200015 755100                    STA     NODE,,AUTO

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:37   
      241     8550    4             DO WHILE ( NODE >= 0 );

   8550  0 000304   000325 604000 0                  TMI     s:8562

      242     8551    4                  TREE$ = PINCRW( S_D.TREE$, SIZEW( DU$TREE ) * NODE );

   8551  0 000305   000000 470400 xsym               LDP0    S_D$
         0 000306   004761 471500                    LDP1    2545,,PR0
         0 000307   200015 236100                    LDQ     NODE,,AUTO
         0 000310   000003 402007                    MPY     3,DL
         0 000311   100000 633506                    EPPR3   0,QL,PR1
         0 000312   200026 453500                    STP3    TREE$,,AUTO

      243     8552    4                  IF NOT TREE$ -> DU$TREE.WAS_HERE

   8552  0 000313   300001 234100                    SZN     1,,PR3
         0 000314   000322 604000 0                  TMI     s:8558

      244     8553    5                  THEN DO;

      245     8554    5                       TREE$ -> DU$TREE.WAS_HERE = '1'B;

   8554  0 000315   400000 236003                    LDQ     -131072,DU
         0 000316   300001 756100                    STQ     1,,PR3

      246     8555    5                       START = NODE;       /* Remember for next time */

   8555  0 000317   200015 235100                    LDA     NODE,,AUTO
         0 000320   200016 755100                    STA     START,,AUTO

      247     8556    5                       GOTO GOTNODE;

   8556  0 000321   000327 710000 0                  TRA     GOTNODE

      248     8557    5                     END;
      249     8558    4                  NODE = TREE$ -> DU$TREE.NEXT#;

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:38   
   8558  0 000322   300000 235100                    LDA     0,,PR3
         0 000323   200015 755100                    STA     NODE,,AUTO

      250     8559    4                END;

   8559  0 000324   000305 605000 0                  TPL     s:8551

      251     8560    3          END;

      252     8561        /* No nodes left */
      253     8562    2        ALTRETURN;

   8562  0 000325   200030 221300                    LDX1  ! TREE$+2,,AUTO
         0 000326   000000 702211                    TSX2  ! 0,X1

      254     8563        /* Got one */
      255     8564    2   GOTNODE:
      256     8565    2        TREE$ -> DU$TREE.WAS_HERE = '1'B;

   8565  0 000327   400000 236003       GOTNODE      LDQ     -131072,DU
         0 000330   300001 756100                    STQ     1,,PR3

      257     8566    2        NODE$ = PINCRW( S_D.NODESEG$, SIZEW( DU$NODE ) * NODE );

   8566  0 000331   005003 471500                    LDP1    2563,,PR0
         0 000332   200015 236100                    LDQ     NODE,,AUTO
         0 000333   000007 402007                    MPY     7,DL
         0 000334   100000 634506                    EPPR4   0,QL,PR1
         0 000335   200025 454500                    STP4    NODE$,,AUTO

      258     8567    2        S_D.EDEF$ = NODE$ -> DU$NODE.EDEF$;

   8567  0 000336   400002 236100                    LDQ     2,,PR4
         0 000337   001042 756100                    STQ     546,,PR0

      259     8568    2        S_D.EDEF_END$ = NODE$ -> DU$NODE.EDEF_END$;

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:39   
   8568  0 000340   400003 236100                    LDQ     3,,PR4
         0 000341   001044 756100                    STQ     548,,PR0

      260     8569    2        S_D.SDEF$ = NODE$ -> DU$NODE.SDEF$;

   8569  0 000342   400004 236100                    LDQ     4,,PR4
         0 000343   001043 756100                    STQ     547,,PR0

      261     8570    2        S_D.SDEF_END$ = NODE$ -> DU$NODE.SDEF_END$;

   8570  0 000344   400005 236100                    LDQ     5,,PR4
         0 000345   001045 756100                    STQ     549,,PR0

      262     8571    2        S_D.DNAME$ = NODE$ -> DU$NODE.DNAME$;

   8571  0 000346   400006 236100                    LDQ     6,,PR4
         0 000347   001041 756100                    STQ     545,,PR0

      263     8572    2        S_D.NODE = NODE;

   8572  0 000350   200015 235100                    LDA     NODE,,AUTO
         0 000351   004706 755100                    STA     2502,,PR0

      264     8573    2        RETURN;

   8573  0 000352   200030 221300                    LDX1  ! TREE$+2,,AUTO
         0 000353   000001 702211                    TSX2  ! 1,X1

      265     8574                                                /**/
      266     8575    2   END PATH_INIT;
      267     8576
      268     8577    1   SETNODE: PROC(N);

   8577  0 000354   200030 741300       SETNODE      STX1  ! TREE$+2,,AUTO

      269     8578    2   DCL N UBIN;
      270     8579    2        S_D.EDEF$ = B$DEF.NINFO.EDEF$(N);
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:40   

   8579  0 000355   200031 470500                    LDP0    @N,,AUTO
         0 000356   000000 236100                    LDQ     0,,PR0
         0 000357   000013 402007                    MPY     11,DL
         0 000360   000000 471400 xsym               LDP1    DEFDIR$
         0 000361   100012 236106                    LDQ     10,QL,PR1
         0 000362   000000 473400 xsym               LDP3    S_D$
         0 000363   301042 756100                    STQ     546,,PR3

      271     8580    2        S_D.EDEF_END$ = PINCRW(B$DEF.NINFO.EDEF$(N+1), -SIZEW(B$EDEF));

   8580  0 000364   000000 236100                    LDQ     0,,PR0
         0 000365   000013 402007                    MPY     11,DL
         0 000366   100025 236106                    LDQ     21,QL,PR1
         0 000367   777776 036003                    ADLQ    -2,DU
         0 000370   301044 756100                    STQ     548,,PR3

      272     8581    2        S_D.SDEF$ = B$DEF.NINFO.SDEF$(N);

   8581  0 000371   000000 236100                    LDQ     0,,PR0
         0 000372   000013 402007                    MPY     11,DL
         0 000373   100013 236106                    LDQ     11,QL,PR1
         0 000374   301043 756100                    STQ     547,,PR3

      273     8582    2        S_D.SDEF_END$ = PINCRW(B$DEF.NINFO.SDEF$(N+1), -SIZEW(B$SDEF));

   8582  0 000375   000000 236100                    LDQ     0,,PR0
         0 000376   000013 402007                    MPY     11,DL
         0 000377   100026 236106                    LDQ     22,QL,PR1
         0 000400   777776 036003                    ADLQ    -2,DU
         0 000401   301045 756100                    STQ     549,,PR3

      274     8583    2        S_D.NODE = N;

   8583  0 000402   000000 235100                    LDA     0,,PR0
         0 000403   304706 755100                    STA     2502,,PR3

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:41   
      275     8584    2        RETURN;

   8584  0 000404   000001 702211                    TSX2  ! 1,X1

      276     8585    2   END SETNODE;
      277     8586        %EJECT;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:42   
      278     8587                                                /**/
      279     8588    1   EDSRCH: PROC ALTRET;

   8588  0 000405   200030 741300       EDSRCH       STX1  ! TREE$+2,,AUTO

      280     8589                                                /**/
      281     8590    2        IF S_D.EDEF$ = ADDR( NIL )

   8590  0 000406   000000 470400 xsym               LDP0    S_D$
         0 000407   001042 236100                    LDQ     546,,PR0
         0 000410   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000411   000413 601000 0                  TNZ     s:8592

      282     8591    2        THEN RETURN;

   8591  0 000412   000001 702211                    TSX2  ! 1,X1

      283     8592    2        HIGH = ( POFFW( S_D.EDEF_END$, S_D.EDEF$ ) / SIZEW( B$EDEF ) ) + 2;

   8592  0 000413   001042 236100                    LDQ     546,,PR0
         0 000414   000022 772000                    QRL     18
         0 000415   200032 756100                    STQ     @N+1,,AUTO
         0 000416   001044 236100                    LDQ     548,,PR0
         0 000417   000022 772000                    QRL     18
         0 000420   200032 136100                    SBLQ    @N+1,,AUTO
         0 000421   000002 506007                    DIV     2,DL
         0 000422   000002 036007                    ADLQ    2,DL
         0 000423   200006 756100                    STQ     HIGH,,AUTO

      284     8593    2        START1$ = PINCRW( S_D.EDEF$, -SIZEW( B$EDEF ) );

   8593  0 000424   001042 236100                    LDQ     546,,PR0
         0 000425   777776 036003                    ADLQ    -2,DU
         0 000426   200012 756100                    STQ     START1$,,AUTO

      285     8594    2        LOW = 0;

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:43   
   8594  0 000427   200005 450100                    STZ     LOW,,AUTO

      286     8595    2        DNAME$ = S_D.DNAME$;

   8595  0 000430   001041 236100                    LDQ     545,,PR0
         0 000431   200013 756100                    STQ     DNAME$,,AUTO

      287     8596    3        DO WHILE ( LOW + 1 < HIGH );

   8596  0 000432   000613 710000 0                  TRA     s:8641

      288     8597    3             MID = ( LOW + HIGH ) / 2;

   8597  0 000433   200005 236100                    LDQ     LOW,,AUTO
         0 000434   200006 036100                    ADLQ    HIGH,,AUTO
         0 000435   000001 772000                    QRL     1
         0 000436   200007 756100                    STQ     MID,,AUTO

      289     8598    3             TENTRY$ = PINCRW( START1$, MID * SIZEW( B$EDEF ) );

   8598  0 000437   000023 736000                    QLS     19
         0 000440   200012 036100                    ADLQ    START1$,,AUTO
         0 000441   200011 756100                    STQ     TENTRY$,,AUTO

      290     8599    3             TNAME$ = PINCRW( DNAME$, TENTRY$ -> B$EDEF.NPOINTER );

   8599  0 000442   200011 470500                    LDP0    TENTRY$,,AUTO
         0 000443   000001 220100                    LDX0    1,,PR0
         0 000444   000000 636010                    EAQ     0,X0
         0 000445   200013 036100                    ADLQ    DNAME$,,AUTO
         0 000446   200014 756100                    STQ     TNAME$,,AUTO

      291     8600    3             IF TNAME$ -> B$DNAME.TEXT < SYM$ -> TEXT$C.TXT

   8600  0 000447   200014 471500                    LDP1    TNAME$,,AUTO
         0 000450   100000 221100                    LDX1    0,,PR1
         0 000451   200003 473500                    LDP3    @SYM$,,AUTO
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:44   
         0 000452   300000 474500                    LDP4    0,,PR3
         0 000453   400000 236100                    LDQ     0,,PR4
         0 000454   000033 772000                    QRL     27
         0 000455   000000 622006                    EAX2    0,QL
         0 000456   040140 106540                    CMPC    fill='040'O
         0 000457   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         0 000460   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         0 000461   000465 603000 0                  TRC     s:8602

      292     8601    3             THEN LOW = MID;

   8601  0 000462   200007 235100                    LDA     MID,,AUTO
         0 000463   200005 755100                    STA     LOW,,AUTO
         0 000464   000613 710000 0                  TRA     s:8641

      293     8602    3             ELSE IF TNAME$ -> B$DNAME.TEXT > SYM$ -> TEXT$C.TXT

   8602  0 000465   000472 602000 0                  TNC     s:8605
         0 000466   000472 600000 0                  TZE     s:8605

      294     8603    3                  THEN HIGH = MID;

   8603  0 000467   200007 235100                    LDA     MID,,AUTO
         0 000470   200006 755100                    STA     HIGH,,AUTO
         0 000471   000613 710000 0                  TRA     s:8641

      295     8604    4                  ELSE DO;

      296     8605    4                       IF TENTRY$ -> B$EDEF.LFLAGS.SOURCE = %SOURCE_RLIB#

   8605  0 000472   000000 236100                    LDQ     0,,PR0
         0 000473   700000 376003                    ANQ     -32768,DU
         0 000474   400000 116003                    CMPQ    -131072,DU
         0 000475   000606 601000 0                  TNZ     GOTEDEF

      297     8606    5                       THEN DO;

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:45   
      298     8607                                           /* Have EDEF from RU - don't use it.  Look
      299     8608                                              before and after this EDEF for one to use.
      300     8609                                              Try before first.  */
      301     8610    5                            INC = -1;

   8610  0 000476   000001 335007                    LCA     1,DL
         0 000477   200017 755100                    STA     INC,,AUTO

      302     8611    6                            DO I = 0 TO 1;

   8611  0 000500   200023 450100                    STZ     I,,AUTO

      303     8612    6                                 TTENTRY$ = TENTRY$;

   8612  0 000501   200011 236100                    LDQ     TENTRY$,,AUTO
         0 000502   200020 756100                    STQ     TTENTRY$,,AUTO

      304     8613    6                                 TTNAME$ = TNAME$;

   8613  0 000503   200014 236100                    LDQ     TNAME$,,AUTO
         0 000504   200021 756100                    STQ     TTNAME$,,AUTO

      305     8614    7                                DO WHILE (SYM$ -> TEXT$C.TXT = TTNAME$ -> B$DNAME.TEXT
              8614                                          );

   8614  0 000505   200003 470500                    LDP0    @SYM$,,AUTO
         0 000506   000000 471500                    LDP1    0,,PR0
         0 000507   100000 236100                    LDQ     0,,PR1
         0 000510   000033 772000                    QRL     27
         0 000511   200021 473500                    LDP3    TTNAME$,,AUTO
         0 000512   300000 220100                    LDX0    0,,PR3
         0 000513   000000 621006                    EAX1    0,QL
         0 000514   040140 106540                    CMPC    fill='040'O
         0 000515   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         0 000516   300000 400010                    ADSC9   0,,PR3                   cn=2,n=*X0
         0 000517   000575 601000 0                  TNZ     s:8631

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:46   
      306     8615    7                                      SOURCE = TTENTRY$ -> B$EDEF.LFLAGS.SOURCE;

   8615  0 000520   200020 470500                    LDP0    TTENTRY$,,AUTO
         0 000521   000000 236100                    LDQ     0,,PR0
         0 000522   000041 772000                    QRL     33
         0 000523   200022 756100                    STQ     SOURCE,,AUTO

      307     8616    7                                      IF SOURCE = %SOURCE_OBJECT# OR

   8616  0 000524   000534 600000 0                  TZE     s:8621
         0 000525   000003 116007                    CMPQ    3,DL
         0 000526   000534 600000 0                  TZE     s:8621
         0 000527   000005 116007                    CMPQ    5,DL
         0 000530   000537 601000 0                  TNZ     s:8624
         0 000531   000000 471400 xsym               LDP1    S_D$
         0 000532   100071 234100                    SZN     57,,PR1
         0 000533   000537 605000 0                  TPL     s:8624

      308     8617    7                                        SOURCE = %SOURCE_ULIB# OR
      309     8618    7                                        (SOURCE = %SOURCE_REMOVED# AND
      310     8619    7                                        S_D.HEAD_LIB)
      311     8620    8                                      THEN DO;

      312     8621    8                                           TENTRY$ = TTENTRY$;

   8621  0 000534   200020 236100                    LDQ     TTENTRY$,,AUTO
         0 000535   200011 756100                    STQ     TENTRY$,,AUTO

      313     8622    8                                           GOTO GOTEDEF;

   8622  0 000536   000606 710000 0                  TRA     GOTEDEF

      314     8623    8                                         END;
      315     8624    7                                      TTENTRY$ = PINCRW( TTENTRY$, INC * SIZEW( B$EDEF
              8624                                               ));

   8624  0 000537   200017 236100                    LDQ     INC,,AUTO
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:47   
         0 000540   000023 736000                    QLS     19
         0 000541   200020 036100                    ADLQ    TTENTRY$,,AUTO
         0 000542   200020 756100                    STQ     TTENTRY$,,AUTO

      316     8625    7                                      IF (TTENTRY$ < S_D.EDEF$ AND INC < 0) OR

   8625  0 000543   000000 470400 xsym               LDP0    S_D$
         0 000544   001042 116100                    CMPQ    546,,PR0
         0 000545   000550 603000 0                  TRC     s:8625+5
         0 000546   200017 235100                    LDA     INC,,AUTO
         0 000547   000617 604000 0                  TMI     NOEDEF
         0 000550   001044 116100                    CMPQ    548,,PR0
         0 000551   000555 602000 0                  TNC     s:8628
         0 000552   000555 600000 0                  TZE     s:8628
         0 000553   200017 235100                    LDA     INC,,AUTO
         0 000554   000617 605400 0                  TPNZ    NOEDEF

      317     8626    7                                        (TTENTRY$ > S_D.EDEF_END$ AND INC > 0)
      318     8627    7                                      THEN GOTO NOEDEF;
      319     8628    7                                      TTNAME$ = PINCRW( DNAME$, TTENTRY$ -> B$EDEF.
              8628                                               NPOINTER );

   8628  0 000555   200020 471500                    LDP1    TTENTRY$,,AUTO
         0 000556   100001 220100                    LDX0    1,,PR1
         0 000557   000000 636010                    EAQ     0,X0
         0 000560   200013 036100                    ADLQ    DNAME$,,AUTO
         0 000561   200021 756100                    STQ     TTNAME$,,AUTO

      320     8629    7                                    END;

   8629  0 000562   200003 473500                    LDP3    @SYM$,,AUTO
         0 000563   300000 474500                    LDP4    0,,PR3
         0 000564   400000 236100                    LDQ     0,,PR4
         0 000565   000033 772000                    QRL     27
         0 000566   200021 475500                    LDP5    TTNAME$,,AUTO
         0 000567   500000 221100                    LDX1    0,,PR5
         0 000570   000000 622006                    EAX2    0,QL
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:48   
         0 000571   040140 106540                    CMPC    fill='040'O
         0 000572   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         0 000573   500000 400011                    ADSC9   0,,PR5                   cn=2,n=*X1
         0 000574   000520 600000 0                  TZE     s:8615

      321     8630                                                /* Try after */
      322     8631    6                                 INC = 1;

   8631  0 000575   000001 235007                    LDA     1,DL
         0 000576   200017 755100                    STA     INC,,AUTO

      323     8632    6                               END;

   8632  0 000577   200023 054100                    AOS     I,,AUTO
         0 000600   200023 236100                    LDQ     I,,AUTO
         0 000601   000001 116007                    CMPQ    1,DL
         0 000602   000501 604400 0                  TMOZ    s:8612

      324     8633    5                            LOW = HIGH;

   8633  0 000603   200006 235100                    LDA     HIGH,,AUTO
         0 000604   200005 755100                    STA     LOW,,AUTO

      325     8634    5                          END;

   8634  0 000605   000613 710000 0                  TRA     s:8641

      326     8635    5                       ELSE DO;            /* Got it */

   8632  0 000606                       GOTEDEF      null
      327     8636    5   GOTEDEF:                 ;
      328     8637    5                            ENTRY$ = TENTRY$;

   8637  0 000606   200011 236100                    LDQ     TENTRY$,,AUTO
         0 000607   200004 470500                    LDP0    @ENTRY$,,AUTO
         0 000610   000000 756100                    STQ     0,,PR0

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:49   
      329     8638    5                            ALTRETURN;

   8638  0 000611   200030 221300                    LDX1  ! TREE$+2,,AUTO
         0 000612   000000 702211                    TSX2  ! 0,X1

      330     8639    5                          END;
      331     8640    4                     END;
      332     8641    3           END;

   8641  0 000613   200005 236100                    LDQ     LOW,,AUTO
         0 000614   000001 036007                    ADLQ    1,DL
         0 000615   200006 116100                    CMPQ    HIGH,,AUTO
         0 000616   000433 602000 0                  TNC     s:8597

      333     8642    2   NOEDEF:                                 /* Can't find it */
      334     8643                                                /* Can't find it */
      335     8644    2        RETURN;

   8644  0 000617   200030 221300       NOEDEF       LDX1  ! TREE$+2,,AUTO
         0 000620   000001 702211                    TSX2  ! 1,X1

      336     8645                                                /**/
      337     8646    2   SDSRCH: ENTRY ALTRET;

   8646  0 000621   200030 741300       SDSRCH       STX1  ! TREE$+2,,AUTO

      338     8647                                                /**/
      339     8648    2        IF S_D.SDEF$ = ADDR( NIL )

   8648  0 000622   000000 470400 xsym               LDP0    S_D$
         0 000623   001043 236100                    LDQ     547,,PR0
         0 000624   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000625   000627 601000 0                  TNZ     s:8650

      340     8649    2        THEN RETURN;

   8649  0 000626   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:50   

      341     8650    2        HIGH = ( POFFW( S_D.SDEF_END$, S_D.SDEF$ ) / SIZEW( B$SDEF ) ) + 2;

   8650  0 000627   001043 236100                    LDQ     547,,PR0
         0 000630   000022 772000                    QRL     18
         0 000631   200032 756100                    STQ     @N+1,,AUTO
         0 000632   001045 236100                    LDQ     549,,PR0
         0 000633   000022 772000                    QRL     18
         0 000634   200032 136100                    SBLQ    @N+1,,AUTO
         0 000635   000002 506007                    DIV     2,DL
         0 000636   000002 036007                    ADLQ    2,DL
         0 000637   200006 756100                    STQ     HIGH,,AUTO

      342     8651    2        START1$ = PINCRW( S_D.SDEF$, -SIZEW( B$SDEF ) );

   8651  0 000640   001043 236100                    LDQ     547,,PR0
         0 000641   777776 036003                    ADLQ    -2,DU
         0 000642   200012 756100                    STQ     START1$,,AUTO

      343     8652    2        LOW = 0;

   8652  0 000643   200005 450100                    STZ     LOW,,AUTO

      344     8653    2        DNAME$ = S_D.DNAME$;

   8653  0 000644   001041 236100                    LDQ     545,,PR0
         0 000645   200013 756100                    STQ     DNAME$,,AUTO

      345     8654    3        DO WHILE ( LOW + 1 < HIGH );

   8654  0 000646   001027 710000 0                  TRA     s:8699

      346     8655    3             MID = ( LOW + HIGH ) / 2;

   8655  0 000647   200005 236100                    LDQ     LOW,,AUTO
         0 000650   200006 036100                    ADLQ    HIGH,,AUTO
         0 000651   000001 772000                    QRL     1
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:51   
         0 000652   200007 756100                    STQ     MID,,AUTO

      347     8656    3             TENTRY$ = PINCRW( START1$, MID * SIZEW( B$SDEF ) );

   8656  0 000653   000023 736000                    QLS     19
         0 000654   200012 036100                    ADLQ    START1$,,AUTO
         0 000655   200011 756100                    STQ     TENTRY$,,AUTO

      348     8657    3             TNAME$ = PINCRW( DNAME$, TENTRY$ -> B$SDEF.NPOINTER );

   8657  0 000656   200011 470500                    LDP0    TENTRY$,,AUTO
         0 000657   000001 220100                    LDX0    1,,PR0
         0 000660   000000 636010                    EAQ     0,X0
         0 000661   200013 036100                    ADLQ    DNAME$,,AUTO
         0 000662   200014 756100                    STQ     TNAME$,,AUTO

      349     8658    3             IF TNAME$ -> B$DNAME.TEXT < SYM$ -> TEXT$C.TXT

   8658  0 000663   200014 471500                    LDP1    TNAME$,,AUTO
         0 000664   100000 221100                    LDX1    0,,PR1
         0 000665   200003 473500                    LDP3    @SYM$,,AUTO
         0 000666   300000 474500                    LDP4    0,,PR3
         0 000667   400000 236100                    LDQ     0,,PR4
         0 000670   000033 772000                    QRL     27
         0 000671   000000 622006                    EAX2    0,QL
         0 000672   040140 106540                    CMPC    fill='040'O
         0 000673   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         0 000674   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         0 000675   000701 603000 0                  TRC     s:8660

      350     8659    3             THEN LOW = MID;

   8659  0 000676   200007 235100                    LDA     MID,,AUTO
         0 000677   200005 755100                    STA     LOW,,AUTO
         0 000700   001027 710000 0                  TRA     s:8699

      351     8660    3             ELSE IF TNAME$ -> B$DNAME.TEXT > SYM$ -> TEXT$C.TXT
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:52   

   8660  0 000701   000706 602000 0                  TNC     s:8663
         0 000702   000706 600000 0                  TZE     s:8663

      352     8661    3                  THEN HIGH = MID;

   8661  0 000703   200007 235100                    LDA     MID,,AUTO
         0 000704   200006 755100                    STA     HIGH,,AUTO
         0 000705   001027 710000 0                  TRA     s:8699

      353     8662    4                  ELSE DO;

      354     8663    4                       IF TENTRY$ -> B$SDEF.AD.LFLAGS.SOURCE = %SOURCE_RLIB#

   8663  0 000706   000000 236100                    LDQ     0,,PR0
         0 000707   700000 376003                    ANQ     -32768,DU
         0 000710   400000 116003                    CMPQ    -131072,DU
         0 000711   001022 601000 0                  TNZ     GOTSDEF

      355     8664    5                       THEN DO;

      356     8665                                           /* Have SDEF from RU - don't use it.  Look
      357     8666                                              before and after this SDEF for one to use.
      358     8667                                              Try before first.  */
      359     8668    5                            INC = -1;

   8668  0 000712   000001 335007                    LCA     1,DL
         0 000713   200017 755100                    STA     INC,,AUTO

      360     8669    6                            DO I = 0 TO 1;

   8669  0 000714   200023 450100                    STZ     I,,AUTO

      361     8670    6                                 TTENTRY$ = TENTRY$;

   8670  0 000715   200011 236100                    LDQ     TENTRY$,,AUTO
         0 000716   200020 756100                    STQ     TTENTRY$,,AUTO
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:53   

      362     8671    6                                 TTNAME$ = TNAME$;

   8671  0 000717   200014 236100                    LDQ     TNAME$,,AUTO
         0 000720   200021 756100                    STQ     TTNAME$,,AUTO

      363     8672    7                                DO WHILE (SYM$ -> TEXT$C.TXT = TTNAME$ -> B$DNAME.TEXT
              8672                                          );

   8672  0 000721   200003 470500                    LDP0    @SYM$,,AUTO
         0 000722   000000 471500                    LDP1    0,,PR0
         0 000723   100000 236100                    LDQ     0,,PR1
         0 000724   000033 772000                    QRL     27
         0 000725   200021 473500                    LDP3    TTNAME$,,AUTO
         0 000726   300000 220100                    LDX0    0,,PR3
         0 000727   000000 621006                    EAX1    0,QL
         0 000730   040140 106540                    CMPC    fill='040'O
         0 000731   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         0 000732   300000 400010                    ADSC9   0,,PR3                   cn=2,n=*X0
         0 000733   001011 601000 0                  TNZ     s:8689

      364     8673    7                                      SOURCE = TTENTRY$ -> B$SDEF.AD.LFLAGS.SOURCE;

   8673  0 000734   200020 470500                    LDP0    TTENTRY$,,AUTO
         0 000735   000000 236100                    LDQ     0,,PR0
         0 000736   000041 772000                    QRL     33
         0 000737   200022 756100                    STQ     SOURCE,,AUTO

      365     8674    7                                      IF SOURCE = %SOURCE_OBJECT# OR

   8674  0 000740   000750 600000 0                  TZE     s:8679
         0 000741   000003 116007                    CMPQ    3,DL
         0 000742   000750 600000 0                  TZE     s:8679
         0 000743   000005 116007                    CMPQ    5,DL
         0 000744   000753 601000 0                  TNZ     s:8682
         0 000745   000000 471400 xsym               LDP1    S_D$
         0 000746   100071 234100                    SZN     57,,PR1
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:54   
         0 000747   000753 605000 0                  TPL     s:8682

      366     8675    7                                        SOURCE = %SOURCE_ULIB# OR
      367     8676    7                                        (SOURCE = %SOURCE_REMOVED# AND
      368     8677    7                                        S_D.HEAD_LIB)
      369     8678    8                                      THEN DO;

      370     8679    8                                           TENTRY$ = TTENTRY$;

   8679  0 000750   200020 236100                    LDQ     TTENTRY$,,AUTO
         0 000751   200011 756100                    STQ     TENTRY$,,AUTO

      371     8680    8                                           GOTO GOTSDEF;

   8680  0 000752   001022 710000 0                  TRA     GOTSDEF

      372     8681    8                                         END;
      373     8682    7                                      TTENTRY$ = PINCRW( TTENTRY$, INC * SIZEW( B$SDEF
              8682                                               ));

   8682  0 000753   200017 236100                    LDQ     INC,,AUTO
         0 000754   000023 736000                    QLS     19
         0 000755   200020 036100                    ADLQ    TTENTRY$,,AUTO
         0 000756   200020 756100                    STQ     TTENTRY$,,AUTO

      374     8683    7                                      IF (TTENTRY$ < S_D.SDEF$ AND INC < 0) OR

   8683  0 000757   000000 470400 xsym               LDP0    S_D$
         0 000760   001043 116100                    CMPQ    547,,PR0
         0 000761   000764 603000 0                  TRC     s:8683+5
         0 000762   200017 235100                    LDA     INC,,AUTO
         0 000763   001033 604000 0                  TMI     NOSDEF
         0 000764   001045 116100                    CMPQ    549,,PR0
         0 000765   000771 602000 0                  TNC     s:8686
         0 000766   000771 600000 0                  TZE     s:8686
         0 000767   200017 235100                    LDA     INC,,AUTO
         0 000770   001033 605400 0                  TPNZ    NOSDEF
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:55   

      375     8684    7                                        (TTENTRY$ > S_D.SDEF_END$ AND INC > 0)
      376     8685    7                                      THEN GOTO NOSDEF;
      377     8686    7                                      TTNAME$ = PINCRW( DNAME$, TTENTRY$ -> B$SDEF.
              8686                                               NPOINTER );

   8686  0 000771   200020 471500                    LDP1    TTENTRY$,,AUTO
         0 000772   100001 220100                    LDX0    1,,PR1
         0 000773   000000 636010                    EAQ     0,X0
         0 000774   200013 036100                    ADLQ    DNAME$,,AUTO
         0 000775   200021 756100                    STQ     TTNAME$,,AUTO

      378     8687    7                                    END;

   8687  0 000776   200003 473500                    LDP3    @SYM$,,AUTO
         0 000777   300000 474500                    LDP4    0,,PR3
         0 001000   400000 236100                    LDQ     0,,PR4
         0 001001   000033 772000                    QRL     27
         0 001002   200021 475500                    LDP5    TTNAME$,,AUTO
         0 001003   500000 221100                    LDX1    0,,PR5
         0 001004   000000 622006                    EAX2    0,QL
         0 001005   040140 106540                    CMPC    fill='040'O
         0 001006   400000 200012                    ADSC9   0,,PR4                   cn=1,n=*X2
         0 001007   500000 400011                    ADSC9   0,,PR5                   cn=2,n=*X1
         0 001010   000734 600000 0                  TZE     s:8673

      379     8688                                                /* Try after */
      380     8689    6                                 INC = 1;

   8689  0 001011   000001 235007                    LDA     1,DL
         0 001012   200017 755100                    STA     INC,,AUTO

      381     8690    6                               END;

   8690  0 001013   200023 054100                    AOS     I,,AUTO
         0 001014   200023 236100                    LDQ     I,,AUTO
         0 001015   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:56   
         0 001016   000715 604400 0                  TMOZ    s:8670

      382     8691    5                            LOW = HIGH;

   8691  0 001017   200006 235100                    LDA     HIGH,,AUTO
         0 001020   200005 755100                    STA     LOW,,AUTO

      383     8692    5                          END;

   8692  0 001021   001027 710000 0                  TRA     s:8699

      384     8693    5                       ELSE DO;            /* Got it */

   8690  0 001022                       GOTSDEF      null
      385     8694    5   GOTSDEF:                 ;
      386     8695    5                            ENTRY$ = TENTRY$;

   8695  0 001022   200011 236100                    LDQ     TENTRY$,,AUTO
         0 001023   200004 470500                    LDP0    @ENTRY$,,AUTO
         0 001024   000000 756100                    STQ     0,,PR0

      387     8696    5                            ALTRETURN;

   8696  0 001025   200030 221300                    LDX1  ! TREE$+2,,AUTO
         0 001026   000000 702211                    TSX2  ! 0,X1

      388     8697    5                          END;
      389     8698    4                     END;
      390     8699    3           END;

   8699  0 001027   200005 236100                    LDQ     LOW,,AUTO
         0 001030   000001 036007                    ADLQ    1,DL
         0 001031   200006 116100                    CMPQ    HIGH,,AUTO
         0 001032   000647 602000 0                  TNC     s:8655

      391     8700    2   NOSDEF:                                 /* Can't find it */
      392     8701    2        RETURN;
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:57   

   8701  0 001033   200030 221300       NOSDEF       LDX1  ! TREE$+2,,AUTO
         0 001034   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000002 006000                                                    ....
      393     8702                                                /**/
      394     8703    2   END EDSRCH;
      395     8704                                                /**/
      396     8705    1   END DDS$SD_SRCH;

PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:58   
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SD_SRCH.

   Procedure DDS$SD_SRCH requires 541 words for executable code.
   Procedure DDS$SD_SRCH requires 28 words of local(AUTO) storage.

    No errors detected in file DDS$SD_SRCH.:E05TSI    .
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:59   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:60   
          MINI XREF LISTING

B$DEF.NINFO.EDEF$
      1380**DCL      8579>>ASSIGN   8580>>ASSIGN
B$DEF.NINFO.SDEF$
      1381**DCL      8581>>ASSIGN   8582>>ASSIGN
B$DNAME.COUNT
      4956**DCL      4963--IMP-SIZ  8600>>IF       8602>>IF       8614>>DOWHILE  8658>>IF       8660>>IF
      8672>>DOWHILE
B$DNAME.TEXT
      4963**DCL      8600>>IF       8602>>IF       8614>>DOWHILE  8658>>IF       8660>>IF       8672>>DOWHILE
B$EDEF
      4869**DCL      8580--ASSIGN   8592--ASSIGN   8593--ASSIGN   8598--ASSIGN   8624--ASSIGN
B$EDEF.ISADDR
      4892**DCL      8501>>ASSIGN
B$EDEF.LFLAGS.SOURCE
      4874**DCL      8605>>IF       8615>>ASSIGN
B$EDEF.NPOINTER
      4894**DCL      8599>>ASSIGN   8628>>ASSIGN
B$EDEF.OU
      4886**DCL      4892--REDEF
B$EDEF.PRI
      4897**DCL      8499>>IF
B$SDEF
      4815**DCL      8582--ASSIGN   8650--ASSIGN   8651--ASSIGN   8656--ASSIGN   8682--ASSIGN
B$SDEF.AD.LFLAGS.SOURCE
      4825**DCL      8663>>IF       8673>>ASSIGN
B$SDEF.AD.OU
      4835**DCL      4841--REDEF
B$SDEF.NPOINTER
      4843**DCL      8657>>ASSIGN   8686>>ASSIGN
B$SDEF.VALUE
      4816**DCL      4819--REDEF
BADNEWS
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:61   
      8507**LABEL    8502--CALLALT
CASE1 IN PROCEDURE PATH_INIT
      8540**LABEL    8536--GOTO
CASE2 IN PROCEDURE PATH_INIT
      8549**LABEL    8545--GOTO
DDE$ERROR
      8374**DCL-ENT  8508--CALL
DDF$FIND_PEDEF
      8373**DCL-ENT  8502--CALL
DEFDIR$
      1371**DCL      1373--IMP-PTR  8579>>ASSIGN   8580>>ASSIGN   8581>>ASSIGN   8582>>ASSIGN
DNAME$
        33**DCL      8595<<ASSIGN   8599>>ASSIGN   8628>>ASSIGN   8653<<ASSIGN   8657>>ASSIGN   8686>>ASSIGN
DU$NODE
      1350**DCL      8566--ASSIGN
DU$NODE.DNAME$
      1357**DCL      8571>>ASSIGN
DU$NODE.EDEF$
      1353**DCL      8567>>ASSIGN
DU$NODE.EDEF_END$
      1354**DCL      8568>>ASSIGN
DU$NODE.SDEF$
      1355**DCL      8569>>ASSIGN
DU$NODE.SDEF_END$
      1356**DCL      8570>>ASSIGN
DU$TREE
      1360**DCL      8517--ASSIGN   8520--ASSIGN   8533--ASSIGN   8542--ASSIGN   8551--ASSIGN
DU$TREE.NEXT#
      1361**DCL      8517>>ASSIGN   8522>>ASSIGN   8558>>ASSIGN
DU$TREE.NOW_IN
      1363**DCL      8534>>IF
DU$TREE.WAS_HERE
      1362**DCL      8521<<ASSIGN   8543>>IF       8552>>IF       8554<<ASSIGN   8565<<ASSIGN
D_SYMBOLS
      7704**DCL      8376>>IF       8426>>IF       8473>>IF
D_XDELTA
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:62   
      1370**DCL      8379>>IF       8429>>IF       8476>>IF
EDSRCH
      8588**PROC     8434--CALL     8437--CALL     8444--CALL     8448--CALL     8481--CALL     8484--CALL
      8491--CALL     8495--CALL
ENTRY$
        26**DCL        23--PROC     8402<<ASSIGN   8424--ENTRY    8471--ENTRY    8637<<ASSIGN   8695<<ASSIGN
GOTEDEF IN PROCEDURE EDSRCH
      8632**LABEL    8622--GOTO
GOTIT
      8402**LABEL    8384--CALLALT  8387--CALLALT  8394--CALLALT  8398--CALLALT  8434--CALLALT  8437--CALLALT
      8444--CALLALT  8448--CALLALT  8481--CALLALT  8484--CALLALT  8504--GOTO
GOTIT1
      8499**LABEL    8491--CALLALT  8495--CALLALT
GOTNODE IN PROCEDURE PATH_INIT
      8565**LABEL    8535--GOTO     8544--GOTO     8556--GOTO
GOTSDEF IN PROCEDURE EDSRCH
      8690**LABEL    8680--GOTO
HIGH
        28**DCL      8592<<ASSIGN   8596>>DOWHILE  8597>>ASSIGN   8603<<ASSIGN   8633>>ASSIGN   8650<<ASSIGN
      8654>>DOWHILE  8655>>ASSIGN   8661<<ASSIGN   8691>>ASSIGN
I
        41**DCL      8611<<DOINDEX  8669<<DOINDEX
INC
        37**DCL      8610<<ASSIGN   8624>>ASSIGN   8625>>IF       8625>>IF       8631<<ASSIGN   8668<<ASSIGN
      8682>>ASSIGN   8683>>IF       8683>>IF       8689<<ASSIGN
LOW
        27**DCL      8501<<ASSIGN   8502<>CALL     8594<<ASSIGN   8596>>DOWHILE  8597>>ASSIGN   8601<<ASSIGN
      8633<<ASSIGN   8652<<ASSIGN   8654>>DOWHILE  8655>>ASSIGN   8659<<ASSIGN   8691<<ASSIGN
MID
        29**DCL      8597<<ASSIGN   8598>>ASSIGN   8601>>ASSIGN   8603>>ASSIGN   8655<<ASSIGN   8656>>ASSIGN
      8659>>ASSIGN   8661>>ASSIGN
N IN PROCEDURE SETNODE
      8578**DCL      8577--PROC     8579>>ASSIGN   8580>>ASSIGN   8581>>ASSIGN   8582>>ASSIGN   8583>>ASSIGN
NODE
        35**DCL      8518<<ASSIGN   8519>>DOWHILE  8520>>ASSIGN   8522<<ASSIGN   8532<<ASSIGN   8533>>ASSIGN
      8541<<ASSIGN   8542>>ASSIGN   8549<<ASSIGN   8550>>DOWHILE  8551>>ASSIGN   8555>>ASSIGN   8558<<ASSIGN
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:63   
      8566>>ASSIGN   8572>>ASSIGN
NODE$
        44**DCL      8566<<ASSIGN   8567>>ASSIGN   8568>>ASSIGN   8569>>ASSIGN   8570>>ASSIGN   8571>>ASSIGN
NOEDEF IN PROCEDURE EDSRCH
      8644**LABEL    8627--GOTO
NOMORE
      8406**LABEL    8388--GOTO     8393--CALLALT  8399--GOTO     8438--GOTO     8443--CALLALT  8449--GOTO
      8485--GOTO     8490--CALLALT  8496--GOTO
NOSDEF IN PROCEDURE EDSRCH
      8701**LABEL    8685--GOTO
PATH
        43**DCL      8515<<ASSIGN   8528>>DOCASE   8531<<ASSIGN   8531>>ASSIGN   8540<<ASSIGN   8540>>ASSIGN
PATH_INIT
      8513**PROC     8391--CALL     8441--CALL     8488--CALL
PATH_NEXT IN PROCEDURE PATH_INIT
      8526**ENTRY    8393--CALL     8443--CALL     8490--CALL
SDSRCH IN PROCEDURE EDSRCH
      8646**ENTRY    8384--CALL     8387--CALL     8394--CALL     8398--CALL
SETNODE
      8577**PROC     8383--CALL     8386--CALL     8433--CALL     8436--CALL     8480--CALL     8483--CALL
SOURCE
        40**DCL      8615<<ASSIGN   8616>>IF       8616>>IF       8616>>IF       8673<<ASSIGN   8674>>IF
      8674>>IF       8674>>IF
START
        36**DCL      8517<<ASSIGN   8518>>ASSIGN   8549>>ASSIGN   8555<<ASSIGN
START1$
        32**DCL      8593<<ASSIGN   8598>>ASSIGN   8651<<ASSIGN   8656>>ASSIGN
SYM$
        25**DCL        23--PROC     8424--ENTRY    8471--ENTRY    8600>>IF       8600>>IF       8602>>IF
      8602>>IF       8614>>DOWHILE  8614>>DOWHILE  8658>>IF       8658>>IF       8660>>IF       8660>>IF
      8672>>DOWHILE  8672>>DOWHILE
S_D.CURRENT_CHANNEL
      7338**DCL      7340--REDEF
S_D.DEBUGA
      6490**DCL      6492--REDEF
S_D.DNAME$
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:64   
      6832**DCL      8571<<ASSIGN   8595>>ASSIGN   8653>>ASSIGN
S_D.EDEF$
      6834**DCL      8567<<ASSIGN   8579<<ASSIGN   8590>>IF       8592>>ASSIGN   8593>>ASSIGN   8625>>IF
S_D.EDEF_END$
      6838**DCL      8568<<ASSIGN   8580<<ASSIGN   8592>>ASSIGN   8625>>IF
S_D.EIS
      7448**DCL      7477--REDEF
S_D.ERROR
      6419**DCL      8507<<ASSIGN
S_D.HEAD_LIB
      6520**DCL      8616>>IF       8674>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      7381**DCL      7382--REDEF    7396--REDEF
S_D.JDE
      6995**DCL      6996--REDEF
S_D.L$.VALUE
      6548**DCL      6554--REDEF    6562--REDEF    6565--REDEF    6568--REDEF    6571--REDEF
S_D.L$.VALUE.L
      6549**DCL      6550--REDEF    6551--REDEF
S_D.L6_MESSAGE_BUF
      7402**DCL      7404--REDEF
S_D.NODE
      6947**DCL      8532>>ASSIGN   8572<<ASSIGN   8583<<ASSIGN
S_D.NODE#M1
      7056**DCL      8517>>ASSIGN
S_D.NODESEG$
      7082**DCL      8566>>ASSIGN
S_D.OUTPUT
      7368**DCL      7370--REDEF
S_D.OVERLAID
      7052**DCL      8378>>IF       8428>>IF       8475>>IF
S_D.REMOTE_MSG.FNCC
      7387**DCL      7388--REDEF
S_D.REMOTE_MSG.STXC
      7383**DCL      7384--REDEF
S_D.REMOTE_MSG.SUBFNCC
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:65   
      7391**DCL      7392--REDEF
S_D.SDEF$
      6836**DCL      8569<<ASSIGN   8581<<ASSIGN   8648>>IF       8650>>ASSIGN   8651>>ASSIGN   8683>>IF
S_D.SDEF_END$
      6840**DCL      8570<<ASSIGN   8582<<ASSIGN   8650>>ASSIGN   8683>>IF
S_D.SV
      6447**DCL      6468--REDEF
S_D.TREE$
      7046**DCL      8517>>ASSIGN   8520>>ASSIGN   8533>>ASSIGN   8542>>ASSIGN   8551>>ASSIGN
S_D.UNODE.USENODE
      7044**DCL      8381>>IF       8383<>CALL     8431>>IF       8433<>CALL     8478>>IF       8480<>CALL
S_D$
      7699**DCL      6395--IMP-PTR  8378>>IF       8381>>IF       8383>>CALL     8428>>IF       8431>>IF
      8433>>CALL     8475>>IF       8478>>IF       8480>>CALL     8507>>ASSIGN   8517>>ASSIGN   8517>>ASSIGN
      8520>>ASSIGN   8532>>ASSIGN   8533>>ASSIGN   8542>>ASSIGN   8551>>ASSIGN   8566>>ASSIGN   8567>>ASSIGN
      8568>>ASSIGN   8569>>ASSIGN   8570>>ASSIGN   8571>>ASSIGN   8572>>ASSIGN   8579>>ASSIGN   8580>>ASSIGN
      8581>>ASSIGN   8582>>ASSIGN   8583>>ASSIGN   8590>>IF       8592>>ASSIGN   8592>>ASSIGN   8593>>ASSIGN
      8595>>ASSIGN   8616>>IF       8625>>IF       8625>>IF       8648>>IF       8650>>ASSIGN   8650>>ASSIGN
      8651>>ASSIGN   8653>>ASSIGN   8674>>IF       8683>>IF       8683>>IF
TENTRY$
        31**DCL      8402>>ASSIGN   8499>>IF       8501>>ASSIGN   8502<>CALL     8598<<ASSIGN   8599>>ASSIGN
      8605>>IF       8612>>ASSIGN   8621<<ASSIGN   8637>>ASSIGN   8656<<ASSIGN   8657>>ASSIGN   8663>>IF
      8670>>ASSIGN   8679<<ASSIGN   8695>>ASSIGN
TEXT$C.SIZE
      1367**DCL      1368--IMP-SIZ  8600>>IF       8602>>IF       8614>>DOWHILE  8658>>IF       8660>>IF
      8672>>DOWHILE
TEXT$C.TXT
      1368**DCL      8600>>IF       8602>>IF       8614>>DOWHILE  8658>>IF       8660>>IF       8672>>DOWHILE
TNAME$
        34**DCL      8599<<ASSIGN   8600>>IF       8600>>IF       8602>>IF       8602>>IF       8613>>ASSIGN
      8657<<ASSIGN   8658>>IF       8658>>IF       8660>>IF       8660>>IF       8671>>ASSIGN
TREE$
        45**DCL      8520<<ASSIGN   8521>>ASSIGN   8522>>ASSIGN   8533<<ASSIGN   8534>>IF       8542<<ASSIGN
      8543>>IF       8551<<ASSIGN   8552>>IF       8554>>ASSIGN   8558>>ASSIGN   8565>>ASSIGN
TTENTRY$
        38**DCL      8612<<ASSIGN   8615>>ASSIGN   8621>>ASSIGN   8624<<ASSIGN   8624>>ASSIGN   8625>>IF
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:66   
      8625>>IF       8628>>ASSIGN   8670<<ASSIGN   8673>>ASSIGN   8679>>ASSIGN   8682<<ASSIGN   8682>>ASSIGN
      8683>>IF       8683>>IF       8686>>ASSIGN
TTNAME$
        39**DCL      8613<<ASSIGN   8614>>DOWHILE  8614>>DOWHILE  8628<<ASSIGN   8671<<ASSIGN   8672>>DOWHILE
      8672>>DOWHILE  8686<<ASSIGN
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:67   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SD_SRCH File=DDS$SD_SRCH.:E05TSI                          TUE 07/29/97 14:21 Page:68   
              MINI UREF LISTING

DDS$ED_SRCH    8424**ENTRY
DDS$PD_SRCH    8471**ENTRY
DDS$SD_SRCH      23**PROC
TSYM$      30**DCL
