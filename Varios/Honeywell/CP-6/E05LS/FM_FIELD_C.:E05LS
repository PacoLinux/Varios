

14:26 JUL 28 '97 FM_FIELD_C.:E05SI                                         1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      %EQU FMD_CHKTYP_REC=0;
    7      %EQU FMD_CHKTYP_KEY=1;
    8      %EQU FMG_KEYLEN_MAX=4000; /* All keys in an indexed or IREL file */
    9                                /* must be contained in the first 4000 */
   10                                /* bytes of the record.                */
   11
   12      %MACRO FMG$IRKEYS(FPTN=IRKEYS, STCLASS=BASED);
   13      /*F*   NAME: FMG$IRKEYS
   14
   15             This structure frames information about keys for IREL files.
   16             When an IREL file is open, F$DCB.ALTKEYX contains the word
   17             offset into the read-only segment of the start of this
   18             structure.  E.g., IRKEY$=PINCRW(B$ROSEG$,F$DCB.ALTKEYX).
   19      */
   20
   21      DCL 1 FPTN STCLASS ALIGNED,
   22            2 NWORDS UBIN(9) CALIGNED,
   23            /*B* NWORDS - Size of the structure in words. */
   24
   25            2 NKEYS UBIN(27) CALIGNED,
   26            /*B* NKEYS - Number of indexes */
   27
   28            2 MINSIZE UBIN,
   29            /*B* MINSIZE - Minimum size of a user buffer on a write */
   30
   31            2 ALTBLD BIT(1) UNAL,
   32            /*B* ALTBLD - Whether or not alternate indexes need to be
   33            rebuilt. */
   34
   35            2 UNIQUEBLD BIT(1) UNAL,
   36            /*B* UNIQUEBLD - Whether or not unique indexes need to be
   37            rebuilt. */
14:26 JUL 28 '97 FM_FIELD_C.:E05SI                                         2    
   38
   39            2 * BIT(34) UNAL,
   40
   41            2 K(0:0) ALIGNED,
   42              3 TDALVL UBIN(9) CALIGNED,
   43              /*B* TDALVL - Level of topmost upper level. */
   44
   45              3 TDA UBIN(27) CALIGNED,
   46              /*B* TDA - Address of topmost level. */
   47
   48              3 FIRSTFIELD UBIN(18) CALIGNED,
   49              /*B* FIRSTFIELD - Index into FMG$KFIELD of the start of this
   50              key definition. */
   51
   52              3 NFIELDS UBIN(18) CALIGNED,
   53              /*B* NFIELDS - Number of fields in this key definition. */
   54
   55              3 KEYL UBIN(18) CALIGNED,
   56              /*B* KEYL - Length of user key. */
   57
   58              3 SEGX UBIN(18) CALIGNED,
   59              /*B* SEGX - Index to next segment in buffer */
   60
   61              3 CRECX UBIN(18) CALIGNED,
   62              /*B* CRECX - Current record index. */
   63
   64              3 UNIQUE BIT(1) UNAL,
   65              /*B* UNIQUE - Keys must be unique for this index. */
   66
   67              3 RPOS BIT(1) UNAL,
   68              /*B* RPOS - Current position is actually 1 ahead of CRECX or
   69              SEGX. */
   70
   71              3 INDXCHNG BIT(1) UNAL,
   72              /*B* INDXCHNG - Used to indicate that the key changed for this
   73              index when a user rewrote a record. */
   74
14:26 JUL 28 '97 FM_FIELD_C.:E05SI                                         3    
   75              3 DEGENERATE BIT(1) UNAL,
   76              /*B* DEGENERATE - Indicates that this key is entirely composed of
   77              fields whose data types allow them to be compared using a normal
   78              ASCII compare, rather than needing special effort. */
   79
   80              3 CONTIGUOUS BIT(1) UNAL,
   81              /*B* CONTIGUOUS - Indicates that this key is entirely composed of
   82              fields that are contiguous within the data record, allowing them
   83              to be compared as a unit, rather than field-by-field. */
   84
   85              3 * BIT(13) UNAL,
   86
   87              3 * UBIN(9) CALIGNED,
   88
   89              3 FDA UBIN(27) CALIGNED,
   90              /*B* FDA - First DA for this index. */
   91
   92              3 * UBIN(9) CALIGNED,
   93
   94              3 CDA UBIN(27) CALIGNED,
   95              /*B* CDA - Current DA for this index. */
   96
   97              3 * UBIN(9) CALIGNED,
   98
   99              3 LDA UBIN(27) CALIGNED;
  100              /*B* LDA - Last DA for this index. */
  101      %MEND;
  102
  103      %MACRO FMG$KFIELD(FPTN=KFIELD, STCLASS=BASED);
  104      /*F*   NAME:  FMG$KFIELD
  105
  106             List of fields that define keys.  This is used via FMG$IRKEYS
  107             to point to entries in VLP_RECFIELD. If an IREL file is open,
  108             F$DCB.KFIELDX contains the word offset into the read-only
  109             segment of the start of this structure.  E.g.,
  110             KFIELD$=PINCRW(B$ROSEG$,F$DCB.KFIELDX).
  111      */
14:26 JUL 28 '97 FM_FIELD_C.:E05SI                                         4    
  112      DCL 1 FPTN STCLASS ALIGNED,
  113            2 NWORDS UBIN,
  114            /*B* NWORDS - Number of words in this structure. */
  115
  116            2 NFIELDS UBIN,
  117            /*B* NFIELDS - Number of fields in this structure. */
  118
  119            2 FIELD(0:0) UBIN(9) CALIGNED;
  120            /*B* FIELD - Index into the VLP_RECFIELD field array of this
  121                         key field.                                     */
  122      %MEND;
  123
  124      /* ! C ! */
  125      %MACRO FM$FIELD_START(FPTN=FM$FIELD_START, STCLASS=BASED);
  126      /*F*  NAME:  FM$FIELD_START
  127
  128            Array of bit offsets from the start of a record to the start of
  129            fields in the record.  The index into an FM$FIELD_START element
  130            is the same as its index in the VLP_RECFIELD field array.
  131            FM$FIELD_START offsets take into account any slack bits present
  132            in the record to ensure that fields begin on legal boundaries
  133            for their various data types.  If a file containing defined
  134            fields (VLP_RECFIELD or CODE18 associated) is open, F$DCB.STARTX
  135            contains the word offset into the read-only segment of the start
  136            of this structure.  E.g., START$=PINCRW(B$ROSEG$,F$DCB.STARTX).
  137            If F$DCB.STARTX=0, then no such structure exists in the ROSEG.
  138      */
  139      DCL 1 FPTN STCLASS ALIGNED,
  140            2 NWORDS UBIN,
  141              /*B* NWORDS - The size of the structure in words. */
  142            2 OFFSET(0:0) SBIN WORD;
  143              /*B* OFFSET -  Array of bit offsets. Each array element
  144                             contains a bit offset from the start of the
  145                             record to the start of the corresponding field
  146                             in the VLP_RECFIELD field array.            */
  147      %MEND;
  148      /* ! ! */

