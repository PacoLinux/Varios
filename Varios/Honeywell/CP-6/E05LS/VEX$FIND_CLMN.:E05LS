VERSION E05

PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:1    
        1        1        /*M*    VEX$FIND_CLMN - FIND CLMN DESIRED BY EDIT INTRA-RECORD OPERATION */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$FIND_CLMN: PROC (P$,CLMN) ALTRET;
        9        9        /**/
       10       10        /*F*     NAME:     VEX$FIND_CLMN
       11       11                 PURPOSE:  TO RESOLVE AN SSE_PARAM INTO A STARTING COLUMN */
       12       12        /**/
       13       13        /*D*     NAME:     VEX$FIND_CLMN
       14       14                 PARAMETERS: P$ - POINTER TO AN SSE_PARAM WHICH CONTAINS EITHER
       15       15                                A COLUMN NUMBER OR DESCRIBES A STRING FOR WHICH
       16       16                                THE STARTING COLUMN NUMBER IS TO BE FOUND.
       17       17                           CLMN - THE COLUMN NUMBER THAT IS RETURNED TO THE CALLER
       18       18                 DESCRIPTION: IF THE SSE_PARAM CONTAINS A COLUMN NUMBER IT IS
       19       19                           RETURNED IN CLMN. IF COLUMN ZERO WAS SPECIFIED THEN
       20       20                           THE LAST COLUMN IN THE CURRENT RECORD IS RETURNED.
       21       21                                IF THE SSE_PARAM SPECIFIES A STRING THEN
       22       22                           VEX$FIND_MATCH IS CALLED TO GET THE STARTING COLUMN.
       23       23                           VEX$FIND_CLMN RETURNS UNLESS NO STRING IS FOUND BY
       24       24                           VEX$FIND_MATCH THEN IT ALTRETURNS.      */
       25       25        /**/
       26       26        /**********************************************************************/
       27       27        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       28       28        /**********************************************************************/
       29       29    1   DCL P$ PTR;
       30       30    1   DCL CLMN SBIN WORD ;
       31       31        /*****************************************************************/
       32       32        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       33       33        /*****************************************************************/
       34       34    1   DCL LO_EXEC_CLMN UBIN(36) SYMREF;
       35       35    1   DCL HI_EXEC_CLMN UBIN(36) SYMREF;
       36       36    1   DCL MAX_CLMN UBIN(36) SYMREF;
       37       37    1   DCL REC_SIZE UBIN(36) SYMREF;
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:2    
       38       38    1   DCL VEX$FIND_MATCH ENTRY(4) ALTRET;
       39       39        /**********************************************************************/
       40       40        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       41       41        /**********************************************************************/
       42       42    1   DCL 1 SSE$PARAM BASED ALIGNED,          /*SSE TABLE ENTRY                     */
       43       43    1         2 FLAGS,
       44       44    1           3 CLMNFLAG BIT(1) UNAL,                      /* IF TRUE NEXT WORD IS CLMN#
       45       45                                                                   ELSE PTR$ */
       46       46    1           3 NOTFLAG BIT(1) UNAL,          /* LOG. OP. IS NOT                    */
       47       47    1           3 ANDFLAG BIT(1) UNAL,          /* LOG. OP. IS AND                    */
       48       48    1           3 ORFLAG BIT(1) UNAL,           /* LOG. OP. IS OR                     */
       49       49    1           3 EORFLAG BIT(1) UNAL,          /* LOG. OP. IS EOR*/
       50       50    1           3 * BIT(13) UNAL,
       51       51    1         2 J SBIN HALF UNAL,               /* OCCURANCE NUMBER                   */
       52       52    1         2 PTR$ PTR UNAL,                  /* POINTER TO STRING                  */
       53       53    1         2 CLMN# REDEF PTR$ UBIN(36) UNAL;
       54       54        /**/
       55       55        /*****************************************************************************/
       56       56        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       57       57        /*****************************************************************************/
       58       58        /**/
       59       59    2           IF (P$ -> SSE$PARAM.FLAGS.CLMNFLAG = '1'B) THEN DO;
       60       60    2              CLMN = P$ -> SSE$PARAM.CLMN#;
       61       61    3              IF (CLMN > MAX_CLMN) THEN DO; /* CLMN '0' SPECIFIED                */
       62       62    3                 CLMN = REC_SIZE - 1;
       63       63    3                 IF CLMN < 0 THEN CLMN = 0 ;
       64       64    3                 IF (CLMN > HI_EXEC_CLMN)OR
       65       65    3                   (CLMN < LO_EXEC_CLMN) THEN ALTRETURN;
       66       66    3                 END;
       67       67    2              END;
       68       68    1           ELSE CALL VEX$FIND_MATCH(P$,LO_EXEC_CLMN,HI_EXEC_CLMN,CLMN)
       69       69    1                ALTRET (FC_ALT);
       70       70    1           RETURN;
       71       71        /**/
       72       72    1   FC_ALT:
       73       73    1           ALTRETURN;
       74       74    1   END;                                    /* END VEX$FIND_CLMN                  */
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:3    

PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:4    
      No diagnostics issued in procedure VEX$FIND_CLMN.

   Procedure VEX$FIND_CLMN requires 39 words for executable code.
   Procedure VEX$FIND_CLMN requires 10 words of local(AUTO) storage.

    No errors detected in file VEX$FIND_CLMN.:E05TSI    .

PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:5    

 Object Unit name= VEX$FIND_CLMN                              File name= VEX$FIND_CLMN.:E05TOU
 UTS= JUL 30 '97 07:12:38.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    39     47  VEX$FIND_CLMN
    1  RoData even  none     2      2  VEX$FIND_CLMN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  VEX$FIND_CLMN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 VEX$FIND_MATCH
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     LO_EXEC_CLMN                          HI_EXEC_CLMN                          MAX_CLMN
     REC_SIZE                              B_VECTNIL
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:6    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:7    


        1        1        /*M*    VEX$FIND_CLMN - FIND CLMN DESIRED BY EDIT INTRA-RECORD OPERATION */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$FIND_CLMN: PROC (P$,CLMN) ALTRET;

      8  0 000000   000000 700200 xent  VEX$FIND_CL* TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2

        9        9        /**/
       10       10        /*F*     NAME:     VEX$FIND_CLMN
       11       11                 PURPOSE:  TO RESOLVE AN SSE_PARAM INTO A STARTING COLUMN */
       12       12        /**/
       13       13        /*D*     NAME:     VEX$FIND_CLMN
       14       14                 PARAMETERS: P$ - POINTER TO AN SSE_PARAM WHICH CONTAINS EITHER
       15       15                                A COLUMN NUMBER OR DESCRIBES A STRING FOR WHICH
       16       16                                THE STARTING COLUMN NUMBER IS TO BE FOUND.
       17       17                           CLMN - THE COLUMN NUMBER THAT IS RETURNED TO THE CALLER
       18       18                 DESCRIPTION: IF THE SSE_PARAM CONTAINS A COLUMN NUMBER IT IS
       19       19                           RETURNED IN CLMN. IF COLUMN ZERO WAS SPECIFIED THEN
       20       20                           THE LAST COLUMN IN THE CURRENT RECORD IS RETURNED.
       21       21                                IF THE SSE_PARAM SPECIFIES A STRING THEN
       22       22                           VEX$FIND_MATCH IS CALLED TO GET THE STARTING COLUMN.
       23       23                           VEX$FIND_CLMN RETURNS UNLESS NO STRING IS FOUND BY
       24       24                           VEX$FIND_MATCH THEN IT ALTRETURNS.      */
       25       25        /**/
       26       26        /**********************************************************************/
       27       27        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       28       28        /**********************************************************************/
       29       29    1   DCL P$ PTR;
       30       30    1   DCL CLMN SBIN WORD ;
       31       31        /*****************************************************************/
       32       32        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:8    
       33       33        /*****************************************************************/
       34       34    1   DCL LO_EXEC_CLMN UBIN(36) SYMREF;
       35       35    1   DCL HI_EXEC_CLMN UBIN(36) SYMREF;
       36       36    1   DCL MAX_CLMN UBIN(36) SYMREF;
       37       37    1   DCL REC_SIZE UBIN(36) SYMREF;
       38       38    1   DCL VEX$FIND_MATCH ENTRY(4) ALTRET;
       39       39        /**********************************************************************/
       40       40        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       41       41        /**********************************************************************/
       42       42    1   DCL 1 SSE$PARAM BASED ALIGNED,          /*SSE TABLE ENTRY                     */
       43       43    1         2 FLAGS,
       44       44    1           3 CLMNFLAG BIT(1) UNAL,                      /* IF TRUE NEXT WORD IS CLMN#
       45       45                                                                   ELSE PTR$ */
       46       46    1           3 NOTFLAG BIT(1) UNAL,          /* LOG. OP. IS NOT                    */
       47       47    1           3 ANDFLAG BIT(1) UNAL,          /* LOG. OP. IS AND                    */
       48       48    1           3 ORFLAG BIT(1) UNAL,           /* LOG. OP. IS OR                     */
       49       49    1           3 EORFLAG BIT(1) UNAL,          /* LOG. OP. IS EOR*/
       50       50    1           3 * BIT(13) UNAL,
       51       51    1         2 J SBIN HALF UNAL,               /* OCCURANCE NUMBER                   */
       52       52    1         2 PTR$ PTR UNAL,                  /* POINTER TO STRING                  */
       53       53    1         2 CLMN# REDEF PTR$ UBIN(36) UNAL;
       54       54        /**/
       55       55        /*****************************************************************************/
       56       56        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       57       57        /*****************************************************************************/
       58       58        /**/
       59       59    2           IF (P$ -> SSE$PARAM.FLAGS.CLMNFLAG = '1'B) THEN DO;

     59  0 000002   200003 470500                    LDP0    @P$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   100000 234100                    SZN     0,,PR1
         0 000005   000033 605000 0                  TPL     s:68

       60       60    2              CLMN = P$ -> SSE$PARAM.CLMN#;

     60  0 000006   100001 235100                    LDA     1,,PR1
         0 000007   200004 473500                    LDP3    @CLMN,,AUTO
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:9    
         0 000010   300000 755100                    STA     0,,PR3

       61       61    3              IF (CLMN > MAX_CLMN) THEN DO; /* CLMN '0' SPECIFIED                */

     61  0 000011   000000 236000 xsym               LDQ     MAX_CLMN
         0 000012   000045 604000 0                  TMI     s:70
         0 000013   300000 116100                    CMPQ    0,,PR3
         0 000014   000045 605000 0                  TPL     s:70

       62       62    3                 CLMN = REC_SIZE - 1;

     62  0 000015   000000 235000 xsym               LDA     REC_SIZE
         0 000016   000001 135007                    SBLA    1,DL
         0 000017   300000 755100                    STA     0,,PR3

       63       63    3                 IF CLMN < 0 THEN CLMN = 0 ;

     63  0 000020   000022 605000 0                  TPL     s:64

     63  0 000021   300000 450100                    STZ     0,,PR3

       64       64    3                 IF (CLMN > HI_EXEC_CLMN)OR

     64  0 000022   000000 236000 xsym               LDQ     HI_EXEC_CLMN
         0 000023   000026 604000 0                  TMI     s:64+4
         0 000024   300000 116100                    CMPQ    0,,PR3
         0 000025   000032 604000 0                  TMI     s:65
         0 000026   300000 236100                    LDQ     0,,PR3
         0 000027   000032 604000 0                  TMI     s:65
         0 000030   000000 116000 xsym               CMPQ    LO_EXEC_CLMN
         0 000031   000045 603000 0                  TRC     s:70

       65       65    3                   (CLMN < LO_EXEC_CLMN) THEN ALTRETURN;

     65  0 000032   000000 702200 xent               TSX2  ! X66_AALT

       66       66    3                 END;
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:10   
       67       67    2              END;
       68       68    1           ELSE CALL VEX$FIND_MATCH(P$,LO_EXEC_CLMN,HI_EXEC_CLMN,CLMN)

     68  0 000033   200004 236100                    LDQ     @CLMN,,AUTO
         0 000034   000000 235000 1                  LDA     0
         0 000035   200010 757100                    STAQ    @CLMN+4,,AUTO
         0 000036   000001 236000 1                  LDQ     1
         0 000037   200003 235100                    LDA     @P$,,AUTO
         0 000040   200006 757100                    STAQ    @CLMN+2,,AUTO
         0 000041   200006 630500                    EPPR0   @CLMN+2,,AUTO
         0 000042   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000043   000000 701000 xent               TSX1    VEX$FIND_MATCH
         0 000044   000046 702000 0                  TSX2    FC_ALT

       69       69    1                ALTRET (FC_ALT);
       70       70    1           RETURN;

     70  0 000045   000000 702200 xent               TSX2  ! X66_ARET

       71       71        /**/
       72       72    1   FC_ALT:
       73       73    1           ALTRETURN;

     73  0 000046   000000 702200 xent  FC_ALT       TSX2  ! X66_AALT
       74       74    1   END;                                    /* END VEX$FIND_CLMN                  */

PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:11   
      No diagnostics issued in procedure VEX$FIND_CLMN.
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:12   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CLMN                      3-0-0/w PTR         r     1 @P$
    *0-0-0/w SBIN        r     1 CLMN                      *0-0-0/w PTR         r     1 P$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 HI_EXEC_CLMN               0-0-0/w UBIN        r     1 LO_EXEC_CLMN
     0-0-0/w UBIN        r     1 MAX_CLMN                   0-0-0/w UBIN        r     1 REC_SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 SSE$PARAM


   Procedure VEX$FIND_CLMN requires 39 words for executable code.
   Procedure VEX$FIND_CLMN requires 10 words of local(AUTO) storage.

    No errors detected in file VEX$FIND_CLMN.:E05TSI    .
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$FIND_CLMN File=VEX$FIND_CLMN.:E05TSI                      WED 07/30/97 07:12 Page:14   
          MINI XREF LISTING

CLMN
        30**DCL         8--PROC       60<<ASSIGN     61>>IF         62<<ASSIGN     63>>IF         63<<ASSIGN
        64>>IF         64>>IF         68<>CALL
FC_ALT
        73**LABEL      68--CALLALT
HI_EXEC_CLMN
        35**DCL        64>>IF         68<>CALL
LO_EXEC_CLMN
        34**DCL        64>>IF         68<>CALL
MAX_CLMN
        36**DCL        61>>IF
P$
        29**DCL         8--PROC       59>>IF         60>>ASSIGN     68<>CALL
REC_SIZE
        37**DCL        62>>ASSIGN
SSE$PARAM.CLMN#
        53**DCL        60>>ASSIGN
SSE$PARAM.FLAGS.CLMNFLAG
        44**DCL        59>>IF
SSE$PARAM.PTR$
        52**DCL        53--REDEF
VEX$FIND_MATCH
        38**DCL-ENT    68--CALL
