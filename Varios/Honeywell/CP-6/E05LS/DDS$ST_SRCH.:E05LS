VERSION E05

PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:1    
        1        1        /*M* DDS$ST_SRCH Statement label search routine for Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$ST_SRCH
        9        9             PURPOSE: To resolve an executable statement reference.
       10       10             DESCRIPTION: Searches through the executable statements record
       11       11             within the current logical block for the given statement label. */
       12       12        /*D* NAME: DDS$ST_SRCH
       13       13             CALL: CALL DDS$ST_SRCH(SYM$,ENTRY$) ALTRET(found);
       14       14             INTERFACE: "STATIC DATA" schema access variables.
       15       15             ENVIRONMENT: Delta.
       16       16             INPUT: SYM$ - Pointer to statement label (TEXTC).
       17       17             OUTPUT: ENTRY$ - Pointer to entry in executable statements table.
       18       18             SCRATCH: Local auto only.
       19       19             DESCRIPTION: Searches through the executable statements record
       20       20             within the current logical block for the given statement label.
       21       21             ALTRETURNs if the statement was found, else RETURNs. */
       22       22                                                /**/
       23       23        DDS$ST_SRCH: PROC(SYM$,ENTRY$) ALTRET;
       24       24                                                /**/
       25       25    1   DCL SYM$ PTR;                           /* Pointer to label */
       26       26    1   DCL ENTRY$ PTR;                         /* Pointer to found entry */
       27       27    1   DCL EXST$ PTR;                          /* Pointer to current entry */
       28       28    1   DCL TSYM$ PTR;                          /* Temp name pointer */
       29       29    1   DCL EXSTART SBIN;                       /* Table start index */
       30       30    1   DCL EXSTEND SBIN;                       /* Table end index */
       31       31    1   DCL IX SBIN;                            /* Temp for DO loop index */
       32       32    1   DCL NP# SBIN;                           /* Temp for name pointer */
       33       33        /*D* EXSTART, EXSTEND, IX, & NP# must be SBIN */
       34       34    1   DCL CLB$ PTR;                           /* Temp for current logical block */
       35       35                                                /**/
       36       36        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       37     3466        %B$DNAME (STCLASS="BASED(TSYM$)");
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:2    
       38     3485        %B$EXST (STCLASS="BASED(EXST$)");
       39     3592        %B$LOGBLK;
       40     3623        %INCLUDE DD$BASED;                      /* Common(ly) used structures */
       41     4926        %TEXT$C (STCLASS="BASED(SYM$)");
       42     4931        %INCLUDE XUH_MACRO_C;
       43     5015        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       44     6351        %S_D;
       45     7669    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
       46     7670    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       47     7671    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       48     7672                                                /**/
       49     7673                                                /* Make sure we can access the schema */
       50     7674    1        IF ( NOT S_D.SCHEMA ) OR ( NOT S_D.QSCH.OK ) OR ( S_D.DBG$ = ADDR( NIL ) ) OR (
              7674                 S_D.EXST$ = ADDR( NIL ) )
       51     7675    1        THEN GOTO RETN;                    /* We can't */
       52     7676    1        CLB$ = PINCRW( S_D.LB$, S_D.QSCH.LB# * SIZEW( B$LOGBLK ) );
       53     7677    1        EXSTART = CLB$ -> B$LOGBLK.STOFFST / SIZEW( B$EXST );
       54     7678    1        EXSTEND = EXSTART + CLB$ -> B$LOGBLK.STSIZE - 1;
       55     7679    1        CALL DDF$EXST_#( EXSTART, EXST$ ) ALTRET( RETN );
       56     7680    2        DO IX = EXSTART TO EXSTEND;        /* Search through the table */
       57     7681    2             NP# = B$EXST.NPOINTER;
       58     7682    2             IF ( NP# >= 0 ) AND ( B$EXST.LBE = S_D.QSCH.LB# )
       59     7683    3             THEN DO;                      /* Logical block entry is cool */
       60     7684    3                  CALL DDF$DBG_#( NP#, TSYM$ ) ALTRET( RETN );
       61     7685    3                  IF TEXT$C.TXT = B$DNAME.TEXT
       62     7686    4                  THEN DO;                 /* Got it */
       63     7687    4                       ENTRY$ = EXST$;
       64     7688    4                       ALTRETURN;          /* Split */
       65     7689    4                     END;
       66     7690    3                END;
       67     7691    2             CALL DDF$N_EXST( EXST$ ) ALTRET( RETN ); /* Try next entry */
       68     7692    2           END;                            /* "DO IX" */
       69     7693    1   RETN:                                   /* Couldn't find specified label */
       70     7694    1        RETURN;
       71     7695                                                /**/
       72     7696    1   END DDS$ST_SRCH;

PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:3    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$ST_SRCH.

   Procedure DDS$ST_SRCH requires 83 words for executable code.
   Procedure DDS$ST_SRCH requires 14 words of local(AUTO) storage.

    No errors detected in file DDS$ST_SRCH.:E05TSI    .

PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:4    

 Object Unit name= DDS$ST_SRCH                                File name= DDS$ST_SRCH.:E05TOU
 UTS= JUL 29 '97 14:23:19.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    83    123  DDS$ST_SRCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$ST_SRCH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDF$EXST_#
 yes     yes           Std       1 DDF$N_EXST
 yes     yes           Std       2 DDF$DBG_#
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:5    


        1        1        /*M* DDS$ST_SRCH Statement label search routine for Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$ST_SRCH
        9        9             PURPOSE: To resolve an executable statement reference.
       10       10             DESCRIPTION: Searches through the executable statements record
       11       11             within the current logical block for the given statement label. */
       12       12        /*D* NAME: DDS$ST_SRCH
       13       13             CALL: CALL DDS$ST_SRCH(SYM$,ENTRY$) ALTRET(found);
       14       14             INTERFACE: "STATIC DATA" schema access variables.
       15       15             ENVIRONMENT: Delta.
       16       16             INPUT: SYM$ - Pointer to statement label (TEXTC).
       17       17             OUTPUT: ENTRY$ - Pointer to entry in executable statements table.
       18       18             SCRATCH: Local auto only.
       19       19             DESCRIPTION: Searches through the executable statements record
       20       20             within the current logical block for the given statement label.
       21       21             ALTRETURNs if the statement was found, else RETURNs. */
       22       22                                                /**/
       23       23        DDS$ST_SRCH: PROC(SYM$,ENTRY$) ALTRET;

     23  0 000000   000000 700200 xent  DDS$ST_SRCH  TSX0  ! X66_AUTO_2
         0 000001   000016 000002                    ZERO    14,2

       24       24                                                /**/
       25       25    1   DCL SYM$ PTR;                           /* Pointer to label */
       26       26    1   DCL ENTRY$ PTR;                         /* Pointer to found entry */
       27       27    1   DCL EXST$ PTR;                          /* Pointer to current entry */
       28       28    1   DCL TSYM$ PTR;                          /* Temp name pointer */
       29       29    1   DCL EXSTART SBIN;                       /* Table start index */
       30       30    1   DCL EXSTEND SBIN;                       /* Table end index */
       31       31    1   DCL IX SBIN;                            /* Temp for DO loop index */
       32       32    1   DCL NP# SBIN;                           /* Temp for name pointer */
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:6    
       33       33        /*D* EXSTART, EXSTEND, IX, & NP# must be SBIN */
       34       34    1   DCL CLB$ PTR;                           /* Temp for current logical block */
       35       35                                                /**/
       36       36        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       37     3466        %B$DNAME (STCLASS="BASED(TSYM$)");
       38     3485        %B$EXST (STCLASS="BASED(EXST$)");
       39     3592        %B$LOGBLK;
       40     3623        %INCLUDE DD$BASED;                      /* Common(ly) used structures */
       41     4926        %TEXT$C (STCLASS="BASED(SYM$)");
       42     4931        %INCLUDE XUH_MACRO_C;
       43     5015        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       44     6351        %S_D;
       45     7669    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
       46     7670    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       47     7671    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       48     7672                                                /**/
       49     7673                                                /* Make sure we can access the schema */
       50     7674    1       IF ( NOT S_D.SCHEMA ) OR ( NOT S_D.QSCH.OK ) OR ( S_D.DBG$ = ADDR( NIL ) ) OR (
              7674                 S_D.EXST$ = ADDR( NIL ) )

   7674  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000052 234100                    SZN     42,,PR0
         0 000004   000122 605000 0                  TPL     RETN
         0 000005   000733 234100                    SZN     475,,PR0
         0 000006   000122 605000 0                  TPL     RETN
         0 000007   001005 236100                    LDQ     517,,PR0
         0 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000011   000122 600000 0                  TZE     RETN
         0 000012   001010 236100                    LDQ     520,,PR0
         0 000013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000014   000122 600000 0                  TZE     RETN

       51     7675    1        THEN GOTO RETN;                    /* We can't */
       52     7676    1        CLB$ = PINCRW( S_D.LB$, S_D.QSCH.LB# * SIZEW( B$LOGBLK ) );

   7676  0 000015   000740 720100                    LXL0    480,,PR0
         0 000016   001037 471500                    LDP1    543,,PR0
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:7    
         0 000017   000000 635010                    EAA     0,X0
         0 000020   000020 771000                    ARL     16
         0 000021   100000 633505                    EPPR3   0,AL,PR1
         0 000022   200013 453500                    STP3    CLB$,,AUTO

       53     7677    1        EXSTART = CLB$ -> B$LOGBLK.STOFFST / SIZEW( B$EXST );

   7677  0 000023   300002 236100                    LDQ     2,,PR3
         0 000024   000022 772000                    QRL     18
         0 000025   000003 506007                    DIV     3,DL
         0 000026   200007 756100                    STQ     EXSTART,,AUTO

       54     7678    1        EXSTEND = EXSTART + CLB$ -> B$LOGBLK.STSIZE - 1;

   7678  0 000027   300002 236100                    LDQ     2,,PR3
         0 000030   777777 376007                    ANQ     -1,DL
         0 000031   200007 036100                    ADLQ    EXSTART,,AUTO
         0 000032   000001 136007                    SBLQ    1,DL
         0 000033   200010 756100                    STQ     EXSTEND,,AUTO

       55     7679    1        CALL DDF$EXST_#( EXSTART, EXST$ ) ALTRET( RETN );

   7679  0 000034   200005 634500                    EPPR4   EXST$,,AUTO
         0 000035   200015 454500                    STP4    CLB$+2,,AUTO
         0 000036   200007 635500                    EPPR5   EXSTART,,AUTO
         0 000037   200014 455500                    STP5    CLB$+1,,AUTO
         0 000040   200014 630500                    EPPR0   CLB$+1,,AUTO
         0 000041   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000042   000000 701000 xent               TSX1    DDF$EXST_#
         0 000043   000122 702000 0                  TSX2    RETN

       56     7680    2        DO IX = EXSTART TO EXSTEND;        /* Search through the table */

   7680  0 000044   200007 235100                    LDA     EXSTART,,AUTO
         0 000045   200011 755100                    STA     IX,,AUTO
         0 000046   000117 710000 0                  TRA     s:7692+1

PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:8    
       57     7681    2             NP# = B$EXST.NPOINTER;

   7681  0 000047   200005 470500                    LDP0    EXST$,,AUTO
         0 000050   000001 236100                    LDQ     1,,PR0
         0 000051   000022 732000                    QRS     18
         0 000052   200012 756100                    STQ     NP#,,AUTO

       58     7682    2             IF ( NP# >= 0 ) AND ( B$EXST.LBE = S_D.QSCH.LB# )

   7682  0 000053   000110 604000 0                  TMI     s:7691
         0 000054   000000 471400 xsym               LDP1    S_D$
         0 000055   000001 236100                    LDQ     1,,PR0
         0 000056   777777 376007                    ANQ     -1,DL
         0 000057   100740 116100                    CMPQ    480,,PR1
         0 000060   000110 601000 0                  TNZ     s:7691

       59     7683    3             THEN DO;                      /* Logical block entry is cool */

       60     7684    3                  CALL DDF$DBG_#( NP#, TSYM$ ) ALTRET( RETN );

   7684  0 000061   200006 633500                    EPPR3   TSYM$,,AUTO
         0 000062   200015 453500                    STP3    CLB$+2,,AUTO
         0 000063   200012 634500                    EPPR4   NP#,,AUTO
         0 000064   200014 454500                    STP4    CLB$+1,,AUTO
         0 000065   200014 630500                    EPPR0   CLB$+1,,AUTO
         0 000066   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000067   000000 701000 xent               TSX1    DDF$DBG_#
         0 000070   000122 702000 0                  TSX2    RETN

       61     7685    3                  IF TEXT$C.TXT = B$DNAME.TEXT

   7685  0 000071   200003 470500                    LDP0    @SYM$,,AUTO
         0 000072   000000 471500                    LDP1    0,,PR0
         0 000073   100000 236100                    LDQ     0,,PR1
         0 000074   000033 772000                    QRL     27
         0 000075   200006 473500                    LDP3    TSYM$,,AUTO
         0 000076   300000 220100                    LDX0    0,,PR3
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:9    
         0 000077   000000 621006                    EAX1    0,QL
         0 000100   040140 106540                    CMPC    fill='040'O
         0 000101   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         0 000102   300000 400010                    ADSC9   0,,PR3                   cn=2,n=*X0
         0 000103   000110 601000 0                  TNZ     s:7691

       62     7686    4                  THEN DO;                 /* Got it */

       63     7687    4                       ENTRY$ = EXST$;

   7687  0 000104   200005 236100                    LDQ     EXST$,,AUTO
         0 000105   200004 474500                    LDP4    @ENTRY$,,AUTO
         0 000106   400000 756100                    STQ     0,,PR4

       64     7688    4                       ALTRETURN;          /* Split */

   7688  0 000107   000000 702200 xent               TSX2  ! X66_AALT

       65     7689    4                     END;
       66     7690    3                END;
       67     7691    2             CALL DDF$N_EXST( EXST$ ) ALTRET( RETN ); /* Try next entry */

   7691  0 000110   200005 630500                    EPPR0   EXST$,,AUTO
         0 000111   200014 450500                    STP0    CLB$+1,,AUTO
         0 000112   200014 630500                    EPPR0   CLB$+1,,AUTO
         0 000113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000114   000000 701000 xent               TSX1    DDF$N_EXST
         0 000115   000122 702000 0                  TSX2    RETN

       68     7692    2           END;                            /* "DO IX" */

   7692  0 000116   200011 054100                    AOS     IX,,AUTO
         0 000117   200011 236100                    LDQ     IX,,AUTO
         0 000120   200010 116100                    CMPQ    EXSTEND,,AUTO
         0 000121   000047 604400 0                  TMOZ    s:7681

       69     7693    1   RETN:                                   /* Couldn't find specified label */
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:10   
       70     7694    1        RETURN;

   7694  0 000122   000000 702200 xent  RETN         TSX2  ! X66_ARET
       71     7695                                                /**/
       72     7696    1   END DDS$ST_SRCH;

PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:11   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$ST_SRCH.

   Procedure DDS$ST_SRCH requires 83 words for executable code.
   Procedure DDS$ST_SRCH requires 14 words of local(AUTO) storage.

    No errors detected in file DDS$ST_SRCH.:E05TSI    .
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:13   
          MINI XREF LISTING

B$DNAME.COUNT
      3475**DCL      3482--IMP-SIZ  7685>>IF
B$DNAME.TEXT
      3482**DCL      7685>>IF
B$EXST
      3486**DCL      7677--ASSIGN
B$EXST.LBE
      3507**DCL      7682>>IF
B$EXST.NPOINTER
      3503**DCL      7681>>ASSIGN
B$EXST.OU
      3495**DCL      3501--REDEF
B$LOGBLK
      3593**DCL      7676--ASSIGN
B$LOGBLK.STOFFST
      3608**DCL      7677>>ASSIGN
B$LOGBLK.STSIZE
      3612**DCL      7678>>ASSIGN
CLB$
        34**DCL      7676<<ASSIGN   7677>>ASSIGN   7678>>ASSIGN
DDF$DBG_#
      7669**DCL-ENT  7684--CALL
DDF$EXST_#
      7670**DCL-ENT  7679--CALL
DDF$N_EXST
      7671**DCL-ENT  7691--CALL
ENTRY$
        26**DCL        23--PROC     7687<<ASSIGN
EXST$
        27**DCL      3486--IMP-PTR  7679<>CALL     7681>>ASSIGN   7682>>IF       7687>>ASSIGN   7691<>CALL
EXSTART
        29**DCL      7677<<ASSIGN   7678>>ASSIGN   7679<>CALL     7680>>DOINDEX
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:14   
EXSTEND
        30**DCL      7678<<ASSIGN   7680>>DOINDEX
IX
        31**DCL      7680<<DOINDEX
NP#
        32**DCL      7681<<ASSIGN   7682>>IF       7684<>CALL
RETN
      7694**LABEL    7675--GOTO     7679--CALLALT  7684--CALLALT  7691--CALLALT
SYM$
        25**DCL        23--PROC     4927--IMP-PTR  7685>>IF       7685>>IF
S_D.CURRENT_CHANNEL
      7303**DCL      7305--REDEF
S_D.DBG$
      6753**DCL      7674>>IF
S_D.DEBUGA
      6455**DCL      6457--REDEF
S_D.EIS
      7413**DCL      7442--REDEF
S_D.EXST$
      6759**DCL      7674>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      7346**DCL      7347--REDEF    7361--REDEF
S_D.JDE
      6960**DCL      6961--REDEF
S_D.L$.VALUE
      6513**DCL      6519--REDEF    6527--REDEF    6530--REDEF    6533--REDEF    6536--REDEF
S_D.L$.VALUE.L
      6514**DCL      6515--REDEF    6516--REDEF
S_D.L6_MESSAGE_BUF
      7367**DCL      7369--REDEF
S_D.LB$
      6793**DCL      7676>>ASSIGN
S_D.OUTPUT
      7333**DCL      7335--REDEF
S_D.QSCH.LB#
      6669**DCL      7676>>ASSIGN   7682>>IF
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:15   
S_D.QSCH.OK
      6659**DCL      7674>>IF
S_D.REMOTE_MSG.FNCC
      7352**DCL      7353--REDEF
S_D.REMOTE_MSG.STXC
      7348**DCL      7349--REDEF
S_D.REMOTE_MSG.SUBFNCC
      7356**DCL      7357--REDEF
S_D.SCHEMA
      6453**DCL      7674>>IF
S_D.SV
      6412**DCL      6433--REDEF
S_D$
      7664**DCL      6360--IMP-PTR  7674>>IF       7674>>IF       7674>>IF       7674>>IF       7676>>ASSIGN
      7676>>ASSIGN   7682>>IF
TEXT$C.SIZE
      4928**DCL      4929--IMP-SIZ  7685>>IF
TEXT$C.TXT
      4929**DCL      7685>>IF
TSYM$
        28**DCL      3474--IMP-PTR  7684<>CALL     7685>>IF       7685>>IF
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:16   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$ST_SRCH File=DDS$ST_SRCH.:E05TSI                          TUE 07/29/97 14:23 Page:17   
              MINI UREF LISTING

DDS$ST_SRCH      23**PROC
