VERSION E05

CALF.D00   OU Name=KVQ$FAST                File=KVQ$FAST.:E05TSI                WED JUL 30 '97 02:13 Page:2
                                     1  *M* KVQ$FAST - Assembly language routines for internal use by VDH.
                                     2  *T***********************************************************
                                     3  *T*                                                         *
                                     4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5  *T*                                                         *
                                     6  *T***********************************************************
                                     7      OUNAME    KVQ$FAST
                                     8      ENTDEF    KVQ$FAST
         000000(0)                   9      SECT      PROC
         000000(0)                  10  KVQ$FAST ALIGN
                                    11  *
                                    12      ENTDEF    KVQ$CPYDAT
                                    13      INCLUDE   KVQ_FAST_E,NOLIST

CALF.D00   KVQ$CPYDAT - fast transparent input                                  WED JUL 30 '97 02:13 Page:3
                                    15  *F* NAME:     KVQ$CPYDAT
                                    16  *,* DESCRIPTION: KVQ$CPYDAT is called with two parameters, KV$PTR and
                                    17  *,* KV$VDH_DAT.  It returns only if it copies all remaining input to
                                    18  *,* the read buffer.  It assumes that the first input character has
                                    19  *,* been accounted for in KV$VDH_DAT (i.e., a call to KVI$INPCHR woul
                                      ::d
                                    20  *,* be properly interfaced).
                                    21  *
 00000   DC83                       22  KVQ$CPYDAT ;
                                    23      LDB,B5    ,B3                           PTR to KV$PTR
 00001   BCC3 0002                  24      LDB,B3    2,B3                          PTR to KV$VDH_DAT
 00003   CCC5 0006                  25      LDB,B4    KV$PTR_MVD$#,B5               First get INPCTRSTRINTCHR
 00005   D2C4 0015                  26      LLH,R5    KV$MVD_ORG#,B4                After first checking
 00007   5D01                       27      CMV,R5    1                             that ORG is compatible
 00008   0981 0053                  28      BNE       GOINPCHR,PREL
 0000A   CCC4 000E                  29      LDB,B4    KV$MVD_TRNTBL$#,B4            from the translate table
 0000C   2C3D                       30      LDV,R2    KV$TRNTBL_INPCTRSTRINTCHR#*2+;
                                    31                (KV$TRNTBL_INPCTRSTRINTCHR#M#&1)
 0000D   90A4                       32      LDH,R1    ,B4,R2
 0000E   CCC5 0004                  33      LDB,B4    KV$PTR_STR$#,B5
 00010   DCC5 0002                  34      LDB,B5    KV$PTR_SSN$#,B5
 00012   C844 0015                  35      LDR,R4    KV$STR_MAXRCRBYTSIZ#,B4
 00014   4EFF                       36      ADV,R4    -1                            Use INPCHR to activate
 00015   C945 0034                  37      CMR,R4    KV$SSN_REDBFR___BFRBYTSIZ#,B5 and get a bigger buffer
 00017   0383                       38      BLE       BFROK,SPREL
 00018   C845 0034                  39      LDR,R4    KV$SSN_REDBFR___BFRBYTSIZ#,B5
 0001A   C245 0033                  40  BFROK ;
                                    41      SUB,R4    KV$SSN_REDBFR___DATBYTSIZ#,B5 Compute how many to move
 0001C   4EFF                       42      ADV,R4    -1                            BDEC branches one too man
                                      ::y
 0001D   8CC3 0003                  43      LDI       KV$VDH_DAT_DAT___BYTX#,B3     Load up BYTX and BYTSIZ
 0001F   C957                       44      CMR,R4    R7
 00020   0802                       45      BAL       BYTSIZOK,SPREL
 00021   C857                       46      LDR,R4    R7                            Only move real data
 00022   483A                       47  BYTSIZOK ;
                                    48      BLZ,R4    GOINPCHR,SPREL                Nothing to do here
CALF.D00   KVQ$CPYDAT - fast transparent input                                  WED JUL 30 '97 02:13 Page:4
 00023   ACC3 0001                  49      LDB,B2    KV$VDH_DAT_DAT___ADR$#,B3
 00025   6EFF                       50      ADV,R6    -1                            Look at the first one too
                                      ::.
 00026   A856                       51      LDR,R2    R6
 00027   82C4 001C 0080             52      LB,KV$STR_ACTONTRN#M# KV$STR_ACTONTRN#,B4
 0002A   058E                       53      BBF       LITTLELOOP,SPREL
 0002B   D2D1                       54      LLH,R5    R1                            Scrub the sign bits out
 0002C   CCC4 000A                  55      LDB,B4    KV$STR_ACTCHRTBL$#,B4
 0002E   CBC4 0004                  56      LAB,B4    KV$SHRBFR_DAT#,B4             Point to the bitmap.
 00030   92A2                       57  BIGLOOP ;
                                    58      LLH,R1    ,B2,R2
 00031   D951                       59      CMR,R5    R1
 00032   090B                       60      BE        BIGLOOPDONE,SPREL             Found a CTRSTRINTCHR
 00033   8294                       61      LB        ,B4,R1
 00034   0509                       62      BBT       BIGLOOPDONE,SPREL             Found activation
 00035   2E01                       63      ADV,R2    1
 00036   477A                       64      BDEC,R4   BIGLOOP,SPREL
 00037   0F85                       65      B         LOOPDONELOAD,SPREL
 00038   91A2                       66  LITTLELOOP ;
                                    67      CMH,R1    ,B2,R2
 00039   0904                       68      BE        BIGLOOPDONE,SPREL             Found a CTRSTRINTCHR
 0003A   2E01                       69      ADV,R2    1
 0003B   477D                       70      BDEC,R4   LITTLELOOP,SPREL
 0003C   92A2                       71  LOOPDONELOAD ;
                                    72      LLH,R1    ,B2,R2                        Get next char for KVI to
                                      ::see
 0003D   AE56                       73  BIGLOOPDONE ;
                                    74      SWR,R2    R6
 0003E   E252                       75      SUB,R6    R2                            How many can buffer?
 0003F   6A9D                       76      BLEZ,R6   GOINPCHR,SPREL                None, all set to return
 00040   F256                       77      SUB,R7    R6                            New bytsiz
 00041   8D55                       78      SDI       R5                            Save R6-R7 in R4-R5
 00042   7883                       79      BGEZ,R7   NOTDONE,SPREL                 R7 is -1 if nothings left
 00043   7E01                       80      ADV,R7    1
 00044   6EFF                       81      ADV,R6    -1
 00045   EA43 0003                  82  NOTDONE ;
CALF.D00   KVQ$CPYDAT - fast transparent input                                  WED JUL 30 '97 02:13 Page:5
                                    83      ADD,R6    KV$VDH_DAT_DAT___BYTX#,B3
 00047   8D43 0003                  84      SDI       KV$VDH_DAT_DAT___BYTX#,B3
 00049   E854                       85      LDR,R6    R4
 0004A   BCC5 0030                  86      LDB,B3    KV$SSN_REDBFR___ADR$#,B5
 0004C   B845 002A                  87      LDR,R3    KV$SSN_REDBFR_NXTX#,B5
 0004E   0008                       88      MMM
 0004F   BF45 002A                  89      STR,R3    KV$SSN_REDBFR_NXTX#,B5
 00051   BF45 002E                  90      STR,R3    KV$SSN_REDBFR_INSMODX#,B5
 00053   BF45 002B                  91      STR,R3    KV$SSN_REDBFR_EDTLOWX#,B5
 00055   BF45 002C                  92      STR,R3    KV$SSN_REDBFR_EDTHI_X#,B5
 00057   BF45 0033                  93      STR,R3    KV$SSN_REDBFR___DATBYTSIZ#,B5
 00059   5805                       94      BLZ,R5    NRMRET,SPREL                  Used all the data, return
 0005A   97C5 0029                  95      STH,R1    KV$SSN_INPCHR#,B5
 0005C   B806                       96  GOINPCHR ;
                                    97      LDR,R3    ,B6
 0005D   C3B6                       98      LNJ,B4    ,B6,R3
 0005E   C3C6 0001                  99  NRMRET ;
                                   100      LNJ,B4    1,B6
                                   101      END
      No Errors in this assembly.
