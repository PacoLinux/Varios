VERSION E05

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:1    
        1        1        /*M* GJA$SUBS.  Misc. node admin routines                                     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        /*P* NAME:   GJA$SUBS
        9        9             PURPOSE: This module contains various Node Administrator utility
       10       10                      routines.
       11       11        */
       12       12
       13       13        /*F* NAME:   GJA$Q_MSG
       14       14
       15       15             PURPOSE: This routine builds messages from passed parameters and
       16       16                      places them into the node administrators send circular queue.
       17       17
       18       18             DESCRIPTION: This routine first determines how much space is
       19       19                          available in the send circular queue.  If the
       20       20                          queue needs to be wrapped (there is not enough space
       21       21                          at the end of the queue to hold the message), a NOP
       22       22                          is inserted at the end of the queue and the available
       23       23                          size is recalculated.  If there is still not enough
       24       24                          space to hold the message, we altreturn.  If the
       25       25                          message will fit in, we use the passed parameters to
       26       26                          build the message in the queue, then we update the
       27       27                          send queue insert pointer and exit.
       28       28
       29       29             CALL: CALL GJA$Q_MSG(UID, PMSGSIZ, MSG, PFPTSIZ, FPT, PFUNCTION)
       30       30                   ALTRET(label);
       31       31
       32       32             INPUTS: FUNCTION - The message function code
       33       33                     UID -      User I.D.
       34       34                     RECTYPE -  The record type or subfunction
       35       35                     MSGSIZ -   Byte size of the message body (if any)
       36       36                     MSG -      The message itself (if any)
       37       37                     FPTSIZ -   Byte size of the FPT (if any)
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:2    
       38       38                     FPT -      The FPT (if any)
       39       39        */
       40       40        %EJECT;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:3    
       41       41
       42       42        GJA$Q_MSG: PROC(UID,PMSGSIZ,MSG,PFPTSIZ,FPT,PFUNCTION);
       43       43
       44       44                                                /* INCLUDES                 */
       45       45        %INCLUDE LCP_6;
       46     4324        %INCLUDE GJA_MSG_M;
       47     4563        %INCLUDE KL_MACRO_C;
       48     7915        %INCLUDE KNH_MACRO_C;
       49     8198        %INCLUDE KV$VDO;
       50     9213
       51     9214                                                /* Input Parameters         */
       52     9215    1   DCL PFUNCTION UBIN;                     /* Message function code    */
       53     9216    1   DCL UID UBIN(32);                       /* User I.D. of other end   */
       54     9217    1   DCL UID$ REDEF UID PTR;
       55     9218    1   DCL RECTYPE UBIN;                       /* Record type code         */
       56     9219    1   DCL PMSGSIZ UBIN;                       /* Message byte size        */
       57     9220    1   DCL MSG CHAR(MSGSIZ);                   /* Message                  */
       58     9221    1   DCL PFPTSIZ UBIN;                       /* Byte size of FPT         */
       59     9222    1   DCL FPT CHAR(FPTSIZ);                   /* FPT (if any)             */
       60     9223                                                /* EQUs and SUBs            */
       61     9224        %GJA_UID_EQUS;
       62     9232        %KV_VDO_ALL_E;
       63     9311
       64     9312                                                /* BASED Structures         */
       65     9313        %GJA$HAND_CTX (STCLASS="BASED(CTX$)");
       66     9362        %GJA$LGNCTX(STCLASS="BASED(CTX$)");
       67     9447        %KNH$MESS(STCLASS="BASED(MSG$)");
       68     9496        %KNH$QHDR(FPTN=NA_QHDR,STCLASS="BASED(G$HAND_Q$)");
       69     9509        %KV$VDO_DAT (LAST=",",STCLASS="BASED(MSG$)");
       70     9554             %KV$VDOVLP_DAT2(LVL=2);
       71     9604
       72     9605    1   DCL THEFPT CHAR(FPTSIZ) BASED;          /* A template for the FPT   */
       73     9606    1   DCL MESSAGE CHAR(MSGSIZ) BASED;         /* A template for the message    */
       74     9607
       75     9608
       76     9609                                                /* SYMREF                   */
       77     9610    1   DCL G$HAND_Q$ PTR SYMREF;               /* Points to the base of the CQ seg   */
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:4    
       78     9611        %KV$VDO_DAT(NAME=GJA_VDO_DAT_DAT2,STCLASS=SYMREF,LAST=",");
       79     9656             %KV$VDOVLP_DAT2(LVL=2);
       80     9706    1   DCL GJA_LDCT_NM UBIN SYMREF;            /* Network Manager LDCT index    */
       81     9707    1   DCL GJA_LDCT_BABOON UBIN SYMREF;
       82     9708    1   DCL GJA_HAND_HEAD$ PTR SYMREF;
       83     9709    1   DCL GJA_USRLGN_HEAD$ PTR SYMREF;
       84     9710    1   DCL GJA_ONE_WAIT_UNIT UBIN SYMREF;
       85     9711
       86     9712                                                /* DCBs                     */
       87     9713    1   DCL M$CQ DCB;
       88     9714                                                /* AUTO                     */
       89     9715    1   DCL FUNCTION UBIN;
       90     9716    1   DCL MSGSIZ UBIN;
       91     9717    1   DCL FPTSIZ UBIN;
       92     9718    1   DCL MSG$ PTR;                           /* Pointer into CQ for new message    */
       93     9719    1   DCL NEWMSGSIZ UBIN;                     /* Actual size of message (DW size    */
       94     9720    1   DCL QSIZ UBIN;                          /* Available space in queue */
       95     9721    1   DCL WRTFLG BIT(1);
       96     9722    1   DCL CTX$ PTR;
       97     9723    1   DCL NOSPACE BIT(1) ALIGNED;
       98     9724                                                /* FPTs                     */
       99     9725        %FPT_WRTMLT(DCB=M$CQ);
      100     9745        %FPT_WAIT(UNITS=GJA_ONE_WAIT_UNIT);
      101     9769        %KNH$MESS (FPTN=KNH_MESS,STCLASS=CONSTANT);
      102     9818                                                /* Entrys                   */
      103     9819    1   DCL KHD$SCREECH ENTRY(1);
      104     9820
      105     9821
      106     9822        %EJECT;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:5    
      107     9823
      108     9824    1        WRTFLG = '0'B;
      109     9825    1        GOTO COMMON;
      110     9826
      111     9827    1   GJA$WRITE: ENTRY(UID,PMSGSIZ,MSG,PFPTSIZ,FPT,PFUNCTION);
      112     9828
      113     9829    1        IF UID$->GJA$HAND_CTX.WHO = %GJA_UID_BABOON
      114     9830    1        THEN WRTFLG = '0'B;
      115     9831    1        ELSE WRTFLG = '1'B;
      116     9832    1   COMMON: ;
      117     9833    1        IF ADDR(PFUNCTION) = ADDR(NIL)
      118     9834    1        THEN
      119     9835    1             FUNCTION = %KN_FCN_DATA;
      120     9836    1        ELSE
      121     9837    1             FUNCTION = PFUNCTION;
      122     9838    1        IF ADDR(PMSGSIZ) = ADDR(NIL)
      123     9839    1        THEN
      124     9840    1             MSGSIZ = 0;
      125     9841    1        ELSE
      126     9842    1             MSGSIZ = PMSGSIZ;
      127     9843    1        IF ADDR(PFPTSIZ) = ADDR(NIL)
      128     9844    1        THEN
      129     9845    1             FPTSIZ = 0;
      130     9846    1        ELSE
      131     9847    1             FPTSIZ = PFPTSIZ;
      132     9848        /*
      133     9849          Calculate the size of the entire message including the FPT portion
      134     9850          and the header.  This is a doubleword size
      135     9851        */
      136     9852    1        NEWMSGSIZ=(MSGSIZ+1)/2 + SIZEW(KNH$MESS) + (FPTSIZ+1)/2;
      137     9853    1        IF NEWMSGSIZ > NA_QHDR.SCQ.SZ
      138     9854    1        THEN
      139     9855    1             CALL M$XXX;
      140     9856    1        IF WRTFLG
      141     9857    1        THEN NEWMSGSIZ = NEWMSGSIZ + SIZEW(KV$VDO_DAT);
      142     9858    1        NEWMSGSIZ = (NEWMSGSIZ + 1) / 2;
      143     9859
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:6    
      144     9860        /*
      145     9861          If the insert pointer is greater than the removal pointer, the amount
      146     9862          of space in the queue is equal to the amount of space left between
      147     9863          the insert pointer and the end of the queue, minus the space needed
      148     9864          for a NOP, which is allways there.  If the insert pointer is less than
      149     9865          the removal pointer, the amount of space left for a message is equal
      150     9866          to the difference between the two.
      151     9867        */
      152     9868    1        NOSPACE='1'B;
      153     9869    2        DO WHILE (NOSPACE);
      154     9870    2             IF NA_QHDR.SCQ.IPTR >= NA_QHDR.SCQ.RPTR
      155     9871    2             THEN QSIZ=NA_QHDR.SCQ.SZ - NA_QHDR.SCQ.IPTR - SIZEW(KNH$MESS)/2;
      156     9872    2             ELSE QSIZ=NA_QHDR.SCQ.RPTR - NA_QHDR.SCQ.IPTR - 1;
      157     9873        /*
      158     9874          If there isn't enough room for the message and we are at the end of
      159     9875          the send queue, put a NOP at the end and wrap the queue.
      160     9876        */
      161     9877    2             IF NEWMSGSIZ > QSIZ AND NA_QHDR.SCQ.IPTR >= NA_QHDR.SCQ.RPTR
      162     9878    2                  AND NA_QHDR.SCQ.RPTR ~= 0
      163     9879    3             THEN DO;                      /* WRAP                     */
      164     9880    3                  MSG$ = PINCRW(G$HAND_Q$,NA_QHDR.SCQ.OFFSET+NA_QHDR.SCQ.IPTR*2);
      165     9881    3                  KNH$MESS.FUNCTION=%KN_FCN_NOP;
      166     9882    3                  KNH$MESS.FPTSZ=0;
      167     9883    3                  KNH$MESS.MSGSZ=QSIZ*4;
      168     9884    3                  NA_QHDR.SCQ.IPTR=0;
      169     9885    3                  QSIZ=NA_QHDR.SCQ.RPTR - NA_QHDR.SCQ.IPTR - 1;
      170     9886    3                END;
      171     9887        /*
      172     9888          If theres still no space for the message, the ballgames over
      173     9889        */
      174     9890    2             IF NEWMSGSIZ > QSIZ
      175     9891    3             THEN DO;
      176     9892    3                  CALL M$WRTMLT(FPT_WRTMLT);
      177     9893    3                  CALL M$WAIT(FPT_WAIT);
      178     9894    3                END;
      179     9895    2             ELSE NOSPACE='0'B;
      180     9896    2           END;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:7    
      181     9897        /*
      182     9898          Calculate where the message will fit and then fill it in from the
      183     9899          passed parameters.
      184     9900        */
      185     9901    1        MSG$ = PINCRW(G$HAND_Q$,NA_QHDR.SCQ.OFFSET+NA_QHDR.SCQ.IPTR*2);
      186     9902    1        KNH$MESS = KNH_MESS;
      187     9903    1        KNH$MESS.FUNCTION=FUNCTION;
      188     9904    1        KNH$MESS.UID=UID;
      189     9905    1        IF UID$ ~= ADDR(NIL)
      190     9906    1        THEN
      191     9907    1             KNH$MESS.LDCTX = UID$->GJA$HAND_CTX.LDCTX;
      192     9908    1        KNH$MESS.LAST_PTR = NA_QHDR.LAST_SCQPTR;
      193     9909    1        NA_QHDR.LAST_SCQPTR = NA_QHDR.SCQ.IPTR;
      194     9910    1        KNH$MESS.FPTSZ=FPTSIZ;
      195     9911    1        KNH$MESS.RECTYPE=RECTYPE;
      196     9912    1        IF WRTFLG
      197     9913    1        THEN KNH$MESS.MSGSZ = MSGSIZ + SIZEC(KV$VDO_DAT);
      198     9914    1        ELSE KNH$MESS.MSGSZ=MSGSIZ;
      199     9915
      200     9916    1        MSG$=PINCRW(MSG$,SIZEW(KNH$MESS));
      201     9917        /*
      202     9918          If theres an FPT, move it in
      203     9919        */
      204     9920    1        IF FPTSIZ ~= 0
      205     9921    2        THEN DO;
      206     9922    2             MSG$->THEFPT=FPT;
      207     9923    2             MSG$=PINCRW(MSG$,SIZEW(FPT));
      208     9924    2           END;
      209     9925
      210     9926        /* If write move in VDO_DAT and VDOVLP_DAT1 */
      211     9927
      212     9928    1        IF WRTFLG
      213     9929    2        THEN DO;
      214     9930    2             KV$VDO_DAT = GJA_VDO_DAT_DAT2;
      215     9931    2             KV$VDO_DAT.KV$VDOVLP_DAT2.BYTSIZ = MSGSIZ;
      216     9932    2             MSG$ = PINCRW(MSG$,SIZEW(KV$VDO_DAT));
      217     9933    2           END;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:8    
      218     9934        /*
      219     9935          If theres a MSG body, move it in
      220     9936        */
      221     9937    1        IF MSGSIZ ~= 0
      222     9938    1        THEN MSG$->MESSAGE=MSG;
      223     9939        /*
      224     9940          Update the send queue receive pointer
      225     9941        */
      226     9942    1        NA_QHDR.SCQ.IPTR = NA_QHDR.SCQ.IPTR + NEWMSGSIZ;
      227     9943
      228     9944    1        RETURN;
      229     9945    1   END GJA$Q_MSG;
      230     9946        %EOD;

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:9    
--  Include file information  --

   KV$VDO.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$Q_MSG.

   Procedure GJA$Q_MSG requires 375 words for executable code.
   Procedure GJA$Q_MSG requires 30 words of local(AUTO) storage.

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:10   

 Object Unit name= GJA$Q_MSG                                  File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:54:04.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   DCB   even  none     0      0  M$CQ
    1   Data  even  none    23     17  GJA$Q_MSG
    2  RoData even  UTS      8      8  GJA$Q_MSG
    3   Proc  even  none   375    177  GJA$Q_MSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        6  GJA$Q_MSG
     3      9                  yes      Std        6  GJA$WRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$HAND_Q$                             GJA_VDO_DAT_DAT2                      GJA_ONE_WAIT_UNIT
     M$CQ                             r    G$ROS$
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:11   


        1        1        /*M* GJA$SUBS.  Misc. node admin routines                                     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        /*P* NAME:   GJA$SUBS
        9        9             PURPOSE: This module contains various Node Administrator utility
       10       10                      routines.
       11       11        */
       12       12
       13       13        /*F* NAME:   GJA$Q_MSG
       14       14
       15       15             PURPOSE: This routine builds messages from passed parameters and
       16       16                      places them into the node administrators send circular queue.
       17       17
       18       18             DESCRIPTION: This routine first determines how much space is
       19       19                          available in the send circular queue.  If the
       20       20                          queue needs to be wrapped (there is not enough space
       21       21                          at the end of the queue to hold the message), a NOP
       22       22                          is inserted at the end of the queue and the available
       23       23                          size is recalculated.  If there is still not enough
       24       24                          space to hold the message, we altreturn.  If the
       25       25                          message will fit in, we use the passed parameters to
       26       26                          build the message in the queue, then we update the
       27       27                          send queue insert pointer and exit.
       28       28
       29       29             CALL: CALL GJA$Q_MSG(UID, PMSGSIZ, MSG, PFPTSIZ, FPT, PFUNCTION)
       30       30                   ALTRET(label);
       31       31
       32       32             INPUTS: FUNCTION - The message function code
       33       33                     UID -      User I.D.
       34       34                     RECTYPE -  The record type or subfunction
       35       35                     MSGSIZ -   Byte size of the message body (if any)
       36       36                     MSG -      The message itself (if any)
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:12   
       37       37                     FPTSIZ -   Byte size of the FPT (if any)
       38       38                     FPT -      The FPT (if any)
       39       39        */
       40       40        %EJECT;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:13   
       41       41
       42       42        GJA$Q_MSG: PROC(UID,PMSGSIZ,MSG,PFPTSIZ,FPT,PFUNCTION);

     42   3 000000  D380 0000 0000  xent GJA$Q_MSG       LNJ,B5   X6A_AUTO_N
          3 000003       001E 0006                       DC       30,6

       43       43
       44       44                                                /* INCLUDES                 */
       45       45        %INCLUDE LCP_6;
       46     4324        %INCLUDE GJA_MSG_M;
       47     4563        %INCLUDE KL_MACRO_C;
       48     7915        %INCLUDE KNH_MACRO_C;
       49     8198        %INCLUDE KV$VDO;
       50     9213
       51     9214                                                /* Input Parameters         */
       52     9215    1   DCL PFUNCTION UBIN;                     /* Message function code    */
       53     9216    1   DCL UID UBIN(32);                       /* User I.D. of other end   */
       54     9217    1   DCL UID$ REDEF UID PTR;
       55     9218    1   DCL RECTYPE UBIN;                       /* Record type code         */
       56     9219    1   DCL PMSGSIZ UBIN;                       /* Message byte size        */
       57     9220    1   DCL MSG CHAR(MSGSIZ);                   /* Message                  */
       58     9221    1   DCL PFPTSIZ UBIN;                       /* Byte size of FPT         */
       59     9222    1   DCL FPT CHAR(FPTSIZ);                   /* FPT (if any)             */
       60     9223                                                /* EQUs and SUBs            */
       61     9224        %GJA_UID_EQUS;
       62     9232        %KV_VDO_ALL_E;
       63     9311
       64     9312                                                /* BASED Structures         */
       65     9313        %GJA$HAND_CTX (STCLASS="BASED(CTX$)");
       66     9362        %GJA$LGNCTX(STCLASS="BASED(CTX$)");
       67     9447        %KNH$MESS(STCLASS="BASED(MSG$)");
       68     9496        %KNH$QHDR(FPTN=NA_QHDR,STCLASS="BASED(G$HAND_Q$)");
       69     9509        %KV$VDO_DAT (LAST=",",STCLASS="BASED(MSG$)");
       70     9554             %KV$VDOVLP_DAT2(LVL=2);
       71     9604
       72     9605    1   DCL THEFPT CHAR(FPTSIZ) BASED;          /* A template for the FPT   */
       73     9606    1   DCL MESSAGE CHAR(MSGSIZ) BASED;         /* A template for the message    */
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:14   
       74     9607
       75     9608
       76     9609                                                /* SYMREF                   */
       77     9610    1   DCL G$HAND_Q$ PTR SYMREF;               /* Points to the base of the CQ seg   */
       78     9611        %KV$VDO_DAT(NAME=GJA_VDO_DAT_DAT2,STCLASS=SYMREF,LAST=",");
       79     9656             %KV$VDOVLP_DAT2(LVL=2);
       80     9706    1   DCL GJA_LDCT_NM UBIN SYMREF;            /* Network Manager LDCT index    */
       81     9707    1   DCL GJA_LDCT_BABOON UBIN SYMREF;
       82     9708    1   DCL GJA_HAND_HEAD$ PTR SYMREF;
       83     9709    1   DCL GJA_USRLGN_HEAD$ PTR SYMREF;
       84     9710    1   DCL GJA_ONE_WAIT_UNIT UBIN SYMREF;
       85     9711
       86     9712                                                /* DCBs                     */
       87     9713    1   DCL M$CQ DCB;
       88     9714                                                /* AUTO                     */
       89     9715    1   DCL FUNCTION UBIN;
       90     9716    1   DCL MSGSIZ UBIN;
       91     9717    1   DCL FPTSIZ UBIN;
       92     9718    1   DCL MSG$ PTR;                           /* Pointer into CQ for new message    */
       93     9719    1   DCL NEWMSGSIZ UBIN;                     /* Actual size of message (DW size    */
       94     9720    1   DCL QSIZ UBIN;                          /* Available space in queue */
       95     9721    1   DCL WRTFLG BIT(1);
       96     9722    1   DCL CTX$ PTR;
       97     9723    1   DCL NOSPACE BIT(1) ALIGNED;
       98     9724                                                /* FPTs                     */
       99     9725        %FPT_WRTMLT(DCB=M$CQ);
      100     9745        %FPT_WAIT(UNITS=GJA_ONE_WAIT_UNIT);
      101     9769        %KNH$MESS (FPTN=KNH_MESS,STCLASS=CONSTANT);
      102     9818                                                /* Entrys                   */
      103     9819    1   DCL KHD$SCREECH ENTRY(1);
      104     9820
      105     9821
      106     9822        %EJECT;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:15   
      107     9823
      108     9824    1        WRTFLG = '0'B;

   9824   3 000005  8747 0018                            CL       WRTFLG,AUTO

      109     9825    1        GOTO COMMON;

   9825   3 000007  0F81 0015                            B        s:9829,PREL

      110     9826
      111     9827    1   GJA$WRITE: ENTRY(UID,PMSGSIZ,MSG,PFPTSIZ,FPT,PFUNCTION);

   9827   3 000009  D380 0000 0000  xent GJA$WRITE       LNJ,B5   X6A_AUTO_N
          3 00000C       001E 0006                       DC       30,6

      112     9828
      113     9829    1        IF UID$->GJA$HAND_CTX.WHO = %GJA_UID_BABOON

   9829   3 00000E  ECC7 0004                            LDB,B6   @UID,AUTO
          3 000010  DC86                                 LDB,B5   ,B6
          3 000011  E805                                 LDR,R6   ,B5
          3 000012  604D                                 SOR,R6   13
          3 000013  6D02                                 CMV,R6   2
          3 000014  0981 0005                            BNE      s:9831,PREL

      114     9830    1        THEN WRTFLG = '0'B;

   9830   3 000016  8747 0018                            CL       WRTFLG,AUTO
          3 000018  0F81 0004                            B        s:9829,PREL

      115     9831    1        ELSE WRTFLG = '1'B;

   9831   3 00001A  8947 0018                            LBT,'8000'X       WRTFLG,AUTO
   9831   3 00001C       8000

   9829   3                              COMMON          null
      116     9832    1   COMMON: ;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:16   
      117     9833    1        IF ADDR(PFUNCTION) = ADDR(NIL)

   9833   3 00001D  ECC7 000E            COMMON          LDB,B6   @PFUNCTION,AUTO
          3 00001F  8DD6                                 CMN      B6
          3 000020  0981 0006                            BNE      s:9837,PREL

      118     9834    1        THEN
      119     9835    1             FUNCTION = %KN_FCN_DATA;

   9835   3 000022  6C05                                 LDV,R6   5
          3 000023  EF47 0011                            STR,R6   FUNCTION,AUTO
          3 000025  0F81 0004                            B        s:9838,PREL

      120     9836    1        ELSE
      121     9837    1             FUNCTION = PFUNCTION;

   9837   3 000027  E806                                 LDR,R6   ,B6
          3 000028  EF47 0011                            STR,R6   FUNCTION,AUTO

      122     9838    1        IF ADDR(PMSGSIZ) = ADDR(NIL)

   9838   3 00002A  DCC7 0006                            LDB,B5   @PMSGSIZ,AUTO
          3 00002C  8DD5                                 CMN      B5
          3 00002D  0981 0005                            BNE      s:9842,PREL

      123     9839    1        THEN
      124     9840    1             MSGSIZ = 0;

   9840   3 00002F  8747 0012                            CL       MSGSIZ,AUTO
          3 000031  0F81 0004                            B        s:9843,PREL

      125     9841    1        ELSE
      126     9842    1             MSGSIZ = PMSGSIZ;

   9842   3 000033  D805                                 LDR,R5   ,B5
          3 000034  DF47 0012                            STR,R5   MSGSIZ,AUTO

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:17   
      127     9843    1        IF ADDR(PFPTSIZ) = ADDR(NIL)

   9843   3 000036  CCC7 000A                            LDB,B4   @PFPTSIZ,AUTO
          3 000038  8DD4                                 CMN      B4
          3 000039  0981 0005                            BNE      s:9847,PREL

      128     9844    1        THEN
      129     9845    1             FPTSIZ = 0;

   9845   3 00003B  8747 0013                            CL       FPTSIZ,AUTO
          3 00003D  0F81 0004                            B        s:9852,PREL

      130     9846    1        ELSE
      131     9847    1             FPTSIZ = PFPTSIZ;

   9847   3 00003F  D804                                 LDR,R5   ,B4
          3 000040  DF47 0013                            STR,R5   FPTSIZ,AUTO

      132     9848        /*
      133     9849          Calculate the size of the entire message including the FPT portion
      134     9850          and the header.  This is a doubleword size
      135     9851        */
      136     9852    1        NEWMSGSIZ=(MSGSIZ+1)/2 + SIZEW(KNH$MESS) + (FPTSIZ+1)/2;

   9852   3 000042  D847 0012                            LDR,R5   MSGSIZ,AUTO
          3 000044  5E01                                 ADV,R5   1
          3 000045  5041                                 SOR,R5   1
          3 000046  C847 0013                            LDR,R4   FPTSIZ,AUTO
          3 000048  4E01                                 ADV,R4   1
          3 000049  4041                                 SOR,R4   1
          3 00004A  DA54                                 ADD,R5   R4
          3 00004B  5E08                                 ADV,R5   8
          3 00004C  DF47 0016                            STR,R5   NEWMSGSIZ,AUTO

      137     9853    1        IF NEWMSGSIZ > NA_QHDR.SCQ.SZ

   9853   3 00004E  BC80 0000 0000  xsym                 LDB,B3   G$HAND_Q$
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:18   
          3 000051  D943 0006                            CMR,R5   6,B3
          3 000053  0381 0005                            BLE      s:9856,PREL

      138     9854    1        THEN
      139     9855    1             CALL M$XXX;

   9855   3 000055  B870 0082                            LDR,R3   130,IMO
          3 000057  0001                                 MCL
          3 000058       0000                            DC       s:9855+3,PREL

      140     9856    1        IF WRTFLG

   9856   3 000059  89C7 0018                            CMZ      WRTFLG,AUTO
          3 00005B  0881 0006                            BAGE     s:9858,PREL

      141     9857    1        THEN NEWMSGSIZ = NEWMSGSIZ + SIZEW(KV$VDO_DAT);

   9857   3 00005D  E847 0016                            LDR,R6   NEWMSGSIZ,AUTO
          3 00005F  6E04                                 ADV,R6   4
          3 000060  EF47 0016                            STR,R6   NEWMSGSIZ,AUTO

      142     9858    1        NEWMSGSIZ = (NEWMSGSIZ + 1) / 2;

   9858   3 000062  E847 0016                            LDR,R6   NEWMSGSIZ,AUTO
          3 000064  6E01                                 ADV,R6   1
          3 000065  6041                                 SOR,R6   1
          3 000066  EF47 0016                            STR,R6   NEWMSGSIZ,AUTO

      143     9859
      144     9860        /*
      145     9861          If the insert pointer is greater than the removal pointer, the amount
      146     9862          of space in the queue is equal to the amount of space left between
      147     9863          the insert pointer and the end of the queue, minus the space needed
      148     9864          for a NOP, which is allways there.  If the insert pointer is less than
      149     9865          the removal pointer, the amount of space left for a message is equal
      150     9866          to the difference between the two.
      151     9867        */
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:19   
      152     9868    1        NOSPACE='1'B;

   9868   3 000068  8947 001B                            LBT,'8000'X       NOSPACE,AUTO
   9868   3 00006A       8000

      153     9869    2        DO WHILE (NOSPACE);

   9869   3 00006B  89C7 001B                            CMZ      NOSPACE,AUTO
          3 00006D  0881 0062                            BAGE     s:9901,PREL

      154     9870    2             IF NA_QHDR.SCQ.IPTR >= NA_QHDR.SCQ.RPTR

   9870   3 00006F  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          3 000072  E846 0004                            LDR,R6   4,B6
          3 000074  E946 0005                            CMR,R6   5,B6
          3 000076  0201 0009                            BL       s:9872,PREL

      155     9871    2             THEN QSIZ=NA_QHDR.SCQ.SZ - NA_QHDR.SCQ.IPTR - SIZEW(KNH$MESS)/2;

   9871   3 000078  E246 0006                            SUB,R6   6,B6
          3 00007A  8256                                 NEG      R6
          3 00007B  6EFC                                 ADV,R6   -4
          3 00007C  EF47 0017                            STR,R6   QSIZ,AUTO
          3 00007E  0F81 0006                            B        s:9877,PREL

      156     9872    2             ELSE QSIZ=NA_QHDR.SCQ.RPTR - NA_QHDR.SCQ.IPTR - 1;

   9872   3 000080  E246 0005                            SUB,R6   5,B6
          3 000082  8656                                 CPL      R6
          3 000083  EF47 0017                            STR,R6   QSIZ,AUTO

      157     9873        /*
      158     9874          If there isn't enough room for the message and we are at the end of
      159     9875          the send queue, put a NOP at the end and wrap the queue.
      160     9876        */
      161     9877    2             IF NEWMSGSIZ > QSIZ AND NA_QHDR.SCQ.IPTR >= NA_QHDR.SCQ.RPTR

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:20   
   9877   3 000085  E947 0016                            CMR,R6   NEWMSGSIZ,AUTO
          3 000087  0281 002C                            BGE      s:9890,PREL
          3 000089  D846 0004                            LDR,R5   4,B6
          3 00008B  D946 0005                            CMR,R5   5,B6
          3 00008D  0201 0026                            BL       s:9890,PREL
          3 00008F  C846 0005                            LDR,R4   5,B6
          3 000091  4901 0022                            BEZ,R4   s:9890,PREL

      162     9878    2                  AND NA_QHDR.SCQ.RPTR ~= 0
      163     9879    3             THEN DO;                      /* WRAP                     */

      164     9880    3                  MSG$ = PINCRW(G$HAND_Q$,NA_QHDR.SCQ.OFFSET+NA_QHDR.SCQ.IPTR*2);

   9880   3 000093  5001                                 SOL,R5   1
          3 000094  DA46 0007                            ADD,R5   7,B6
          3 000096  F855                                 LDR,R7   R5
          3 000097  6C00                                 LDV,R6   0
          3 000098  8400 0000 0000  xsym                 AID      G$HAND_Q$
          3 00009B  8D47 0014                            SDI      MSG$,AUTO

      165     9881    3                  KNH$MESS.FUNCTION=%KN_FCN_NOP;

   9881   3 00009D  DCC7 0014                            LDB,B5   MSG$,AUTO
          3 00009F  5C06                                 LDV,R5   6
          3 0000A0  DF05                                 STR,R5   ,B5

      166     9882    3                  KNH$MESS.FPTSZ=0;

   9882   3 0000A1  8745 0006                            CL       6,B5

      167     9883    3                  KNH$MESS.MSGSZ=QSIZ*4;

   9883   3 0000A3  C847 0017                            LDR,R4   QSIZ,AUTO
          3 0000A5  4002                                 SOL,R4   2
          3 0000A6  CF45 0007                            STR,R4   7,B5

      168     9884    3                  NA_QHDR.SCQ.IPTR=0;
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:21   

   9884   3 0000A8  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          3 0000AB  8746 0004                            CL       4,B6

      169     9885    3                  QSIZ=NA_QHDR.SCQ.RPTR - NA_QHDR.SCQ.IPTR - 1;

   9885   3 0000AD  B846 0005                            LDR,R3   5,B6
          3 0000AF  B246 0004                            SUB,R3   4,B6
          3 0000B1  3EFF                                 ADV,R3   -1
          3 0000B2  BF47 0017                            STR,R3   QSIZ,AUTO

      170     9886    3                END;

      171     9887        /*
      172     9888          If theres still no space for the message, the ballgames over
      173     9889        */
      174     9890    2             IF NEWMSGSIZ > QSIZ

   9890   3 0000B4  E847 0016                            LDR,R6   NEWMSGSIZ,AUTO
          3 0000B6  E947 0017                            CMR,R6   QSIZ,AUTO
          3 0000B8  0381 0011                            BLE      s:9895,PREL

      175     9891    3             THEN DO;

      176     9892    3                  CALL M$WRTMLT(FPT_WRTMLT);

   9892   3 0000BA  BB80 0000 0000  01                   LAB,B3   FPT_WRTMLT
          3 0000BD  B870 1144                            LDR,R3   4420,IMO
          3 0000BF  0001                                 MCL
          3 0000C0       0000                            DC       s:9892+6,PREL

      177     9893    3                  CALL M$WAIT(FPT_WAIT);

   9893   3 0000C1  BB80 0000 000D  01                   LAB,B3   FPT_WAIT
          3 0000C4  B870 0CC5                            LDR,R3   3269,IMO
          3 0000C6  0001                                 MCL
          3 0000C7       0000                            DC       s:9893+6,PREL
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:22   

      178     9894    3                END;

   9894   3 0000C8  0F81 0003                            B        s:9896,PREL

      179     9895    2             ELSE NOSPACE='0'B;

   9895   3 0000CA  8747 001B                            CL       NOSPACE,AUTO

      180     9896    2           END;

   9896   3 0000CC  89C7 001B                            CMZ      NOSPACE,AUTO
          3 0000CE  0801 FFA0                            BAL      s:9870,PREL

      181     9897        /*
      182     9898          Calculate where the message will fit and then fill it in from the
      183     9899          passed parameters.
      184     9900        */
      185     9901    1        MSG$ = PINCRW(G$HAND_Q$,NA_QHDR.SCQ.OFFSET+NA_QHDR.SCQ.IPTR*2);

   9901   3 0000D0  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          3 0000D3  E846 0004                            LDR,R6   4,B6
          3 0000D5  6001                                 SOL,R6   1
          3 0000D6  EA46 0007                            ADD,R6   7,B6
          3 0000D8  F856                                 LDR,R7   R6
          3 0000D9  6C00                                 LDV,R6   0
          3 0000DA  8400 0000 0000  xsym                 AID      G$HAND_Q$
          3 0000DD  8D47 0014                            SDI      MSG$,AUTO

      186     9902    1        KNH$MESS = KNH_MESS;

   9902   3 0000DF  AB80 0000 0000  02                   LAB,B2   KNH_MESS
          3 0000E2  2C00                                 LDV,R2   0
          3 0000E3  6C10                                 LDV,R6   16
          3 0000E4  BCC7 0014                            LDB,B3   MSG$,AUTO
          3 0000E6  3C00                                 LDV,R3   0
          3 0000E7  0008                                 MMM
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:23   

      187     9903    1        KNH$MESS.FUNCTION=FUNCTION;

   9903   3 0000E8  ECC7 0014                            LDB,B6   MSG$,AUTO
          3 0000EA  E847 0011                            LDR,R6   FUNCTION,AUTO
          3 0000EC  EF06                                 STR,R6   ,B6

      188     9904    1        KNH$MESS.UID=UID;

   9904   3 0000ED  DCC7 0004                            LDB,B5   @UID,AUTO
          3 0000EF  8C85                                 LDI      ,B5
          3 0000F0  8D46 0002                            SDI      2,B6

      189     9905    1        IF UID$ ~= ADDR(NIL)

   9905   3 0000F2  8D85                                 CMN      ,B5
          3 0000F3  0901 0007                            BE       s:9908,PREL

      190     9906    1        THEN
      191     9907    1             KNH$MESS.LDCTX = UID$->GJA$HAND_CTX.LDCTX;

   9907   3 0000F5  CC85                                 LDB,B4   ,B5
          3 0000F6  D804                                 LDR,R5   ,B4
          3 0000F7  D570 1FFF                            AND,R5   8191,IMO
          3 0000F9  DF46 0001                            STR,R5   1,B6

      192     9908    1        KNH$MESS.LAST_PTR = NA_QHDR.LAST_SCQPTR;

   9908   3 0000FB  CC80 0000 0000  xsym                 LDB,B4   G$HAND_Q$
          3 0000FE  D844 0017                            LDR,R5   23,B4
          3 000100  DF46 0005                            STR,R5   5,B6

      193     9909    1        NA_QHDR.LAST_SCQPTR = NA_QHDR.SCQ.IPTR;

   9909   3 000102  C844 0004                            LDR,R4   4,B4
          3 000104  CF44 0017                            STR,R4   23,B4

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:24   
      194     9910    1        KNH$MESS.FPTSZ=FPTSIZ;

   9910   3 000106  E847 0013                            LDR,R6   FPTSIZ,AUTO
          3 000108  EF46 0006                            STR,R6   6,B6

      195     9911    1        KNH$MESS.RECTYPE=RECTYPE;

   9911   3 00010A  D847 0010                            LDR,R5   RECTYPE,AUTO
          3 00010C  DF46 0004                            STR,R5   4,B6

      196     9912    1        IF WRTFLG

   9912   3 00010E  89C7 0018                            CMZ      WRTFLG,AUTO
          3 000110  0881 0008                            BAGE     s:9914,PREL

      197     9913    1        THEN KNH$MESS.MSGSZ = MSGSIZ + SIZEC(KV$VDO_DAT);

   9913   3 000112  C847 0012                            LDR,R4   MSGSIZ,AUTO
          3 000114  4E08                                 ADV,R4   8
          3 000115  CF46 0007                            STR,R4   7,B6
          3 000117  0F81 0005                            B        s:9916,PREL

      198     9914    1        ELSE KNH$MESS.MSGSZ=MSGSIZ;

   9914   3 000119  C847 0012                            LDR,R4   MSGSIZ,AUTO
          3 00011B  CF46 0007                            STR,R4   7,B6

      199     9915
      200     9916    1        MSG$=PINCRW(MSG$,SIZEW(KNH$MESS));

   9916   3 00011D  BBC6 0008                            LAB,B3   8,B6
          3 00011F  BFC7 0014                            STB,B3   MSG$,AUTO

      201     9917        /*
      202     9918          If theres an FPT, move it in
      203     9919        */
      204     9920    1        IF FPTSIZ ~= 0
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:25   

   9920   3 000121  6901 001C                            BEZ,R6   s:9928,PREL

      205     9921    2        THEN DO;

      206     9922    2             MSG$->THEFPT=FPT;

   9922   3 000123  8CC7 000C                            LDI      @FPT,AUTO
          3 000125  B856                                 LDR,R3   R6
          3 000126  E570 7FFF                            AND,R6   32767,IMO
          3 000128  8D47 001C                            SDI      NOSPACE+1,AUTO
          3 00012A  ECC7 001C                            LDB,B6   NOSPACE+1,AUTO
          3 00012C  304F                                 SOR,R3   15
          3 00012D  AB86                                 LAB,B2   ,B6
          3 00012E  A853                                 LDR,R2   R3
          3 00012F  E847 0013                            LDR,R6   FPTSIZ,AUTO
          3 000131  3C00                                 LDV,R3   0
          3 000132  0008                                 MMM

      207     9923    2             MSG$=PINCRW(MSG$,SIZEW(FPT));

   9923   3 000133  E847 0013                            LDR,R6   FPTSIZ,AUTO
          3 000135  6003                                 SOL,R6   3
          3 000136  6E0F                                 ADV,R6   15
          3 000137  6044                                 SOR,R6   4
          3 000138  F856                                 LDR,R7   R6
          3 000139  6C00                                 LDV,R6   0
          3 00013A  8447 0014                            AID      MSG$,AUTO
          3 00013C  8D47 0014                            SDI      MSG$,AUTO

      208     9924    2           END;

      209     9925
      210     9926        /* If write move in VDO_DAT and VDOVLP_DAT1 */
      211     9927
      212     9928    1        IF WRTFLG

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:26   
   9928   3 00013E  89C7 0018                            CMZ      WRTFLG,AUTO
          3 000140  0881 0014                            BAGE     s:9937,PREL

      213     9929    2        THEN DO;

      214     9930    2             KV$VDO_DAT = GJA_VDO_DAT_DAT2;

   9930   3 000142  AB80 0000 0000  xsym                 LAB,B2   GJA_VDO_DAT_DAT2
          3 000145  2C00                                 LDV,R2   0
          3 000146  6C08                                 LDV,R6   8
          3 000147  BCC7 0014                            LDB,B3   MSG$,AUTO
          3 000149  3C00                                 LDV,R3   0
          3 00014A  0008                                 MMM

      215     9931    2             KV$VDO_DAT.KV$VDOVLP_DAT2.BYTSIZ = MSGSIZ;

   9931   3 00014B  ECC7 0014                            LDB,B6   MSG$,AUTO
          3 00014D  E847 0012                            LDR,R6   MSGSIZ,AUTO
          3 00014F  EF46 0003                            STR,R6   3,B6

      216     9932    2             MSG$ = PINCRW(MSG$,SIZEW(KV$VDO_DAT));

   9932   3 000151  CBC6 0004                            LAB,B4   4,B6
          3 000153  CFC7 0014                            STB,B4   MSG$,AUTO

      217     9933    2           END;

      218     9934        /*
      219     9935          If theres a MSG body, move it in
      220     9936        */
      221     9937    1        IF MSGSIZ ~= 0

   9937   3 000155  E847 0012                            LDR,R6   MSGSIZ,AUTO
          3 000157  6901 0013                            BEZ,R6   s:9942,PREL

      222     9938    1        THEN MSG$->MESSAGE=MSG;

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:27   
   9938   3 000159  8CC7 0008                            LDI      @MSG,AUTO
          3 00015B  B856                                 LDR,R3   R6
          3 00015C  E570 7FFF                            AND,R6   32767,IMO
          3 00015E  8D47 001C                            SDI      NOSPACE+1,AUTO
          3 000160  ECC7 001C                            LDB,B6   NOSPACE+1,AUTO
          3 000162  304F                                 SOR,R3   15
          3 000163  AB86                                 LAB,B2   ,B6
          3 000164  A853                                 LDR,R2   R3
          3 000165  E847 0012                            LDR,R6   MSGSIZ,AUTO
          3 000167  BCC7 0014                            LDB,B3   MSG$,AUTO
          3 000169  3C00                                 LDV,R3   0
          3 00016A  0008                                 MMM

      223     9939        /*
      224     9940          Update the send queue receive pointer
      225     9941        */
      226     9942    1        NA_QHDR.SCQ.IPTR = NA_QHDR.SCQ.IPTR + NEWMSGSIZ;

   9942   3 00016B  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          3 00016E  E846 0004                            LDR,R6   4,B6
          3 000170  EA47 0016                            ADD,R6   NEWMSGSIZ,AUTO
          3 000172  EF46 0004                            STR,R6   4,B6

      227     9943
      228     9944    1        RETURN;

   9944   3 000174  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      229     9945    1   END GJA$Q_MSG;
      230     9946        %EOD;

PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:28   
--  Include file information  --

   KV$VDO.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$Q_MSG.
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:29   

 **** Variables and constants ****

  ****  Section 001  Data  GJA$Q_MSG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     D-0-0/w STRC(160)   r     1 FPT_WAIT                   0-0-0/w STRC(207)   r     1 FPT_WRTMLT

  ****  Section 002 RoData GJA$Q_MSG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(128)   r     1 KNH_MESS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     C-0-0/w PTR         r     1 @FPT                       8-0-0/w PTR         r     1 @MSG
     A-0-0/w PTR         r     1 @PFPTSIZ                   E-0-0/w PTR         r     1 @PFUNCTION
     6-0-0/w PTR         r     1 @PMSGSIZ                   4-0-0/w PTR         r     1 @UID
    19-0-0/w PTR         r     1 CTX$                      *0-0-0/c ACHR        r     1 FPT
    13-0-0/w UBIN(16)    r     1 FPTSIZ                    11-0-0/w UBIN(16)    r     1 FUNCTION
    *0-0-0/c ACHR        r     1 MSG                       14-0-0/w PTR         r     1 MSG$
    12-0-0/w UBIN(16)    r     1 MSGSIZ                    16-0-0/w UBIN(16)    r     1 NEWMSGSIZ
    1B-0-0/w BIT         r     1 NOSPACE                   *0-0-0/w UBIN(16)    r     1 PFPTSIZ
    *0-0-0/w UBIN(16)    r     1 PFUNCTION                 *0-0-0/w UBIN(16)    r     1 PMSGSIZ
    17-0-0/w UBIN(16)    r     1 QSIZ                      10-0-0/w UBIN(16)    r     1 RECTYPE
    *0-0-0/w UBIN(32)    r     1 UID                       *0-0-0/w PTR         r     1 UID$
    18-0-0/b BIT         r     1 WRTFLG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:30   
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$HAND_Q$                  0-0-0/w UBIN(16)    r     1 GJA_ONE_WAIT_UNIT
     0-0-0/w STRC(64)    r     1 GJA_VDO_DAT_DAT2

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(272)   r     1 GJA$HAND_CTX               0-0-0/c STRC(128)   r     1 KNH$MESS
     0-0-0/w STRC(64)    r     1 KV$VDO_DAT                 0-0-0N  NULL        r     1 M$CQ
     0-0-0/c ACHR        r     1 MESSAGE                    0-0-0/w STRC(384)   r     1 NA_QHDR
     0-0-0/c ACHR        r     1 THEFPT


   Procedure GJA$Q_MSG requires 375 words for executable code.
   Procedure GJA$Q_MSG requires 30 words of local(AUTO) storage.
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:32   
          MINI XREF LISTING

COMMON
      9829**LABEL    9825--GOTO
CTX$
      9722**DCL      9314--IMP-PTR  9363--IMP-PTR
FPT
      9222**DCL        42--PROC     9827--ENTRY    9922>>ASSIGN   9923--ASSIGN
FPTSIZ
      9717**DCL      9222--IMP-SIZ  9605--IMP-SIZ  9845<<ASSIGN   9847<<ASSIGN   9852>>ASSIGN   9910>>ASSIGN
      9920>>IF       9922>>ASSIGN   9922>>ASSIGN   9923>>ASSIGN
FPT_WAIT
      9758**DCL      9893<>CALL
FPT_WAIT.V
      9762**DCL      9761--DCLINIT
FPT_WRTMLT
      9738**DCL      9892<>CALL
FPT_WRTMLT.V
      9743**DCL      9740--DCLINIT
FUNCTION
      9715**DCL      9835<<ASSIGN   9837<<ASSIGN   9903>>ASSIGN
G$HAND_Q$
      9610**DCL      9497--IMP-PTR  9853>>IF       9870>>IF       9870>>IF       9871>>ASSIGN   9871>>ASSIGN
      9872>>ASSIGN   9872>>ASSIGN   9877>>IF       9877>>IF       9877>>IF       9880>>ASSIGN   9880>>ASSIGN
      9880>>ASSIGN   9884>>ASSIGN   9885>>ASSIGN   9885>>ASSIGN   9901>>ASSIGN   9901>>ASSIGN   9901>>ASSIGN
      9908>>ASSIGN   9909>>ASSIGN   9909>>ASSIGN   9942>>ASSIGN   9942>>ASSIGN
GJA$HAND_CTX.LDCTX
      9320**DCL      9907>>ASSIGN
GJA$HAND_CTX.WHO
      9319**DCL      9829>>IF
GJA$LGNCTX.TERMINAL_ID.TERM
      9414**DCL      9423--REDEF
GJA_ONE_WAIT_UNIT
      9710**DCL      9761--DCLINIT
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:33   
GJA_VDO_DAT_DAT2
      9644**DCL      9930>>ASSIGN
KNH$MESS
      9460**DCL      9852--ASSIGN   9871--ASSIGN   9902<<ASSIGN   9916--ASSIGN
KNH$MESS.FPTSZ
      9493**DCL      9882<<ASSIGN   9910<<ASSIGN
KNH$MESS.FUNCTION
      9460**DCL      9460--REDEF    9881<<ASSIGN   9903<<ASSIGN
KNH$MESS.LAST_PTR
      9493**DCL      9908<<ASSIGN
KNH$MESS.LDCTX
      9465**DCL      9907<<ASSIGN
KNH$MESS.MSGSZ
      9494**DCL      9883<<ASSIGN   9913<<ASSIGN   9914<<ASSIGN
KNH$MESS.RECTYPE
      9493**DCL      9911<<ASSIGN
KNH$MESS.UID
      9490**DCL      9490--REDEF    9490--REDEF    9904<<ASSIGN
KNH_MESS
      9782**DCL      9902>>ASSIGN
KNH_MESS.FUNCTION
      9782**DCL      9782--REDEF
KNH_MESS.UID
      9812**DCL      9812--REDEF    9812--REDEF
KV$VDO_DAT
      9542**DCL      9857--ASSIGN   9913--ASSIGN   9930<<ASSIGN   9932--ASSIGN
KV$VDO_DAT.KV$VDOVLP_DAT2.BYTSIZ
      9597**DCL      9931<<ASSIGN
M$WAIT
      4289**DCL-ENT  9893--CALL
M$WRTMLT
      4306**DCL-ENT  9892--CALL
M$XXX
      4283**DCL-ENT  9855--CALL
MESSAGE
      9606**DCL      9938<<ASSIGN
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:34   
MSG
      9220**DCL        42--PROC     9827--ENTRY    9938>>ASSIGN
MSG$
      9718**DCL      9460--IMP-PTR  9542--IMP-PTR  9880<<ASSIGN   9881>>ASSIGN   9882>>ASSIGN   9883>>ASSIGN
      9901<<ASSIGN   9902>>ASSIGN   9903>>ASSIGN   9904>>ASSIGN   9907>>ASSIGN   9908>>ASSIGN   9910>>ASSIGN
      9911>>ASSIGN   9913>>ASSIGN   9914>>ASSIGN   9916<<ASSIGN   9916>>ASSIGN   9922>>ASSIGN   9923<<ASSIGN
      9923>>ASSIGN   9930>>ASSIGN   9931>>ASSIGN   9932<<ASSIGN   9932>>ASSIGN   9938>>ASSIGN
MSGSIZ
      9716**DCL      9220--IMP-SIZ  9606--IMP-SIZ  9840<<ASSIGN   9842<<ASSIGN   9852>>ASSIGN   9913>>ASSIGN
      9914>>ASSIGN   9931>>ASSIGN   9937>>IF       9938>>ASSIGN   9938>>ASSIGN
NA_QHDR.LAST_SCQPTR
      9506**DCL      9908>>ASSIGN   9909<<ASSIGN
NA_QHDR.RCQ
      9497**DCL      9497--REDEF
NA_QHDR.SCQ.IPTR
      9498**DCL      9870>>IF       9871>>ASSIGN   9872>>ASSIGN   9877>>IF       9880>>ASSIGN   9884<<ASSIGN
      9885>>ASSIGN   9901>>ASSIGN   9909>>ASSIGN   9942<<ASSIGN   9942>>ASSIGN
NA_QHDR.SCQ.OFFSET
      9498**DCL      9880>>ASSIGN   9901>>ASSIGN
NA_QHDR.SCQ.RPTR
      9498**DCL      9870>>IF       9872>>ASSIGN   9877>>IF       9877>>IF       9885>>ASSIGN
NA_QHDR.SCQ.SZ
      9498**DCL      9853>>IF       9871>>ASSIGN
NEWMSGSIZ
      9719**DCL      9852<<ASSIGN   9853>>IF       9857<<ASSIGN   9857>>ASSIGN   9858<<ASSIGN   9858>>ASSIGN
      9877>>IF       9890>>IF       9942>>ASSIGN
NOSPACE
      9723**DCL      9868<<ASSIGN   9869>>DOWHILE  9895<<ASSIGN
PFPTSIZ
      9221**DCL        42--PROC     9827--ENTRY    9843--IF       9847>>ASSIGN
PFUNCTION
      9215**DCL        42--PROC     9827--ENTRY    9833--IF       9837>>ASSIGN
PMSGSIZ
      9219**DCL        42--PROC     9827--ENTRY    9838--IF       9842>>ASSIGN
QSIZ
      9720**DCL      9871<<ASSIGN   9872<<ASSIGN   9877>>IF       9883>>ASSIGN   9885<<ASSIGN   9890>>IF
PL6.E3A0      #001=GJA$Q_MSG File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:54 Page:35   
RECTYPE
      9218**DCL      9911>>ASSIGN
THEFPT
      9605**DCL      9922<<ASSIGN
UID
      9216**DCL        42--PROC     9217--REDEF    9827--ENTRY    9904>>ASSIGN
UID$
      9217**DCL      9829>>IF       9905>>IF       9907>>ASSIGN
WRTFLG
      9721**DCL      9824<<ASSIGN   9830<<ASSIGN   9831<<ASSIGN   9856>>IF       9912>>IF       9928>>IF

PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:36   
      231        1        /*T***********************************************************/
      232        2        /*T*                                                         */
      233        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      234        4        /*T*                                                         */
      235        5        /*T***********************************************************/
      236        6        /*F* NAME:     GJA$GET_CHNTBL_PTR
      237        7
      238        8             PURPOSE:  To take as input a TERMINAL_ID structure and to
      239        9                       return a pointer to the associated NA context block.
      240       10
      241       11             DESCRIPTION:  This routine follows the following general steps:
      242       12                           1).  Using LEV, we figure out how much of the
      243       13                                TERMINAL_ID structure we need to identify the
      244       14                                channel.  We first do a search to derive a
      245       15                                pointer to the base channel table entry.
      246       16                           2).  If LEV indicates there is a SUBDEVICE, we
      247       17                                then do a search down the linked list of sub context
      248       18                                pointed to by CHNTBL.SUB$.
      249       19                           3).  IF LEV indicates there is a SUBSUBDEVICE, we
      250       20                                then do a search down the linked list pointed to
      251       21                                by the SUB$ entry located in step 2 above.
      252       22                           4).  If the entry cannot be found, we ALTRETURN with
      253       23                                CHAN$ = ADDR(NIL).
      254       24
      255       25             CALL:   CALL GJA$GET_CHNTBL_PTR(TERMID,CHN$) ALTRET(label);
      256       26
      257       27             INPUTS: TERMINAL_ID - A structure completly describing the
      258       28                                   channel we are searching for.
      259       29
      260       30             OUTPUTS: CHN$ - A pointer to the associated context block. If none
      261       31                             found, CHN$ = ADDR(NIL).
      262       32        */
      263       33        GJA$GET_CHNTBL_PTR: PROC(TERMID,CTX$) ALTRET;
      264       34
      265       35        %INCLUDE GJA_MSG_M;
      266      274        %INCLUDE CP_6_SUBS;
      267      814        %INCLUDE KH$CHN;
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:37   
      268      936        %INCLUDE KL_MACRO_C;
      269     4288        %INCLUDE LCP_6;
      270     8567                                                /* Args                     */
      271     8568        %B$TERMINAL_ID (FPTN=TERMID,STCLASS="",LAST=";",ALGN=ALIGNED);
      272     8597    1   DCL CTX$ PTR;
      273     8598                                                /* Symrefs                  */
      274     8599    1   DCL GJA_CHNLOW$ PTR SYMREF;
      275     8600    1   DCL GJA_CHNLOW UBIN SYMREF;
      276     8601    1   DCL GJA_CHNHI UBIN SYMREF;
      277     8602                                                /* Based                    */
      278     8603        %KH$CHN (NAME=CHANCTX,STCLASS="BASED(LVL1$)");
      279     8727        %KH$CHN (NAME=LVL2CTX,STCLASS="BASED(LVL2$)");
      280     8851        %KH$CHN (NAME=LVL3CTX,STCLASS="BASED(LVL3$)");
      281     8975                                                /* Local                    */
      282     8976    1   DCL LVL1$ PTR;
      283     8977    1   DCL LVL2$ PTR;
      284     8978    1   DCL LVL3$ PTR;
      285     8979    1   DCL CHAN UBIN;
      286     8980    1   DCL TEMP$ PTR;
      287     8981        %EJECT;
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:38   
      288     8982
      289     8983        /* Validate the channel passed */
      290     8984
      291     8985    1        CTX$ = ADDR(NIL);
      292     8986    1        CHAN = TERMID.TERM.CHANNEL;
      293     8987    1        IF CHAN > GJA_CHNHI OR CHAN < GJA_CHNLOW OR
      294     8988    1             TERMID.LEV < %TERMINAL_ID_LEV_CHAN# OR
      295     8989    2             TERMID.LEV > %TERMINAL_ID_LEV_SUBSUBCHAN# THEN DO;
      296     8990    2             ALTRETURN;
      297     8991    2           END;                            /* IF                       */
      298     8992    1        LVL1$ = PINCRW(GJA_CHNLOW$,SIZEW(CHANCTX)*(CHAN/128));
      299     8993    1        CTX$ = LVL1$;
      300     8994    2        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN# THEN DO;
      301     8995    2             LVL2$ = CHANCTX.SUB$;
      302     8996    3             DO WHILE(LVL2$ ~= ADDR(NIL) AND TERMID.TERM.SUBDEVICE ~= LVL2CTX.TERMID.
              8996                      TERM.SUBDEVICE);
      303     8997    3                  LVL2$ = LVL2CTX.LNK$;
      304     8998    3                END;                       /* DO WHILE                 */
      305     8999    2             CTX$ = LVL2$;
      306     9000    3             IF LVL2$ = ADDR(NIL) THEN DO;
      307     9001    3                  ALTRETURN;
      308     9002    3                END;                       /* IF                       */
      309     9003    3             IF TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN# THEN DO;
      310     9004    3                  LVL3$ = LVL2CTX.SUB$;
      311     9005    4                  DO WHILE(LVL3$ ~= ADDR(NIL) AND TERMID.TERM.SUBSUBDEVICE ~= LVL3CTX.
              9005                           TERMID.TERM.SUBSUBDEVICE);
      312     9006    4                       LVL3$ = LVL3CTX.LNK$;
      313     9007    4                     END;                  /* DO WHILE                 */
      314     9008    3                  CTX$ = LVL3$;
      315     9009    4                  IF LVL3$ = ADDR(NIL) THEN DO;
      316     9010    4                       ALTRETURN;
      317     9011    4                     END;                  /* IF                       */
      318     9012    3                END;                       /* IF SUBSUBCHAN            */
      319     9013    2           END;                            /* IF LEV ~= CHAN           */
      320     9014    1        RETURN;
      321     9015    1   END GJA$GET_CHNTBL_PTR;
      322     9016        %EOD;
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:39   

PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:40   
--  Include file information  --

   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$GET_CHNTBL_PTR.

   Procedure GJA$GET_CHNTBL_PTR requires 142 words for executable code.
   Procedure GJA$GET_CHNTBL_PTR requires 18 words of local(AUTO) storage.

PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:41   

 Object Unit name= GJA$GET_CHNTBL_PTR                         File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:54:36.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   142     8E  GJA$GET_CHNTBL_PTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  GJA$GET_CHNTBL_PTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_CHNLOW$                           GJA_CHNLOW                            GJA_CHNHI
r    G$ROS$
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:42   


      231        1        /*T***********************************************************/
      232        2        /*T*                                                         */
      233        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      234        4        /*T*                                                         */
      235        5        /*T***********************************************************/
      236        6        /*F* NAME:     GJA$GET_CHNTBL_PTR
      237        7
      238        8             PURPOSE:  To take as input a TERMINAL_ID structure and to
      239        9                       return a pointer to the associated NA context block.
      240       10
      241       11             DESCRIPTION:  This routine follows the following general steps:
      242       12                           1).  Using LEV, we figure out how much of the
      243       13                                TERMINAL_ID structure we need to identify the
      244       14                                channel.  We first do a search to derive a
      245       15                                pointer to the base channel table entry.
      246       16                           2).  If LEV indicates there is a SUBDEVICE, we
      247       17                                then do a search down the linked list of sub context
      248       18                                pointed to by CHNTBL.SUB$.
      249       19                           3).  IF LEV indicates there is a SUBSUBDEVICE, we
      250       20                                then do a search down the linked list pointed to
      251       21                                by the SUB$ entry located in step 2 above.
      252       22                           4).  If the entry cannot be found, we ALTRETURN with
      253       23                                CHAN$ = ADDR(NIL).
      254       24
      255       25             CALL:   CALL GJA$GET_CHNTBL_PTR(TERMID,CHN$) ALTRET(label);
      256       26
      257       27             INPUTS: TERMINAL_ID - A structure completly describing the
      258       28                                   channel we are searching for.
      259       29
      260       30             OUTPUTS: CHN$ - A pointer to the associated context block. If none
      261       31                             found, CHN$ = ADDR(NIL).
      262       32        */
      263       33        GJA$GET_CHNTBL_PTR: PROC(TERMID,CTX$) ALTRET;

     33   0 000000  D380 0000 0000  xent GJA$GET_CHNTBL_*LNJ,B5   X6A_AUTO_2
          0 000003       0012 0002                       DC       18,2
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:43   

      264       34
      265       35        %INCLUDE GJA_MSG_M;
      266      274        %INCLUDE CP_6_SUBS;
      267      814        %INCLUDE KH$CHN;
      268      936        %INCLUDE KL_MACRO_C;
      269     4288        %INCLUDE LCP_6;
      270     8567                                                /* Args                     */
      271     8568        %B$TERMINAL_ID (FPTN=TERMID,STCLASS="",LAST=";",ALGN=ALIGNED);
      272     8597    1   DCL CTX$ PTR;
      273     8598                                                /* Symrefs                  */
      274     8599    1   DCL GJA_CHNLOW$ PTR SYMREF;
      275     8600    1   DCL GJA_CHNLOW UBIN SYMREF;
      276     8601    1   DCL GJA_CHNHI UBIN SYMREF;
      277     8602                                                /* Based                    */
      278     8603        %KH$CHN (NAME=CHANCTX,STCLASS="BASED(LVL1$)");
      279     8727        %KH$CHN (NAME=LVL2CTX,STCLASS="BASED(LVL2$)");
      280     8851        %KH$CHN (NAME=LVL3CTX,STCLASS="BASED(LVL3$)");
      281     8975                                                /* Local                    */
      282     8976    1   DCL LVL1$ PTR;
      283     8977    1   DCL LVL2$ PTR;
      284     8978    1   DCL LVL3$ PTR;
      285     8979    1   DCL CHAN UBIN;
      286     8980    1   DCL TEMP$ PTR;
      287     8981        %EJECT;
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:44   
      288     8982
      289     8983        /* Validate the channel passed */
      290     8984
      291     8985    1        CTX$ = ADDR(NIL);

   8985   0 000005  EB80 0000 0000                       LAB,B6   0
          0 000008  DCC7 0006                            LDB,B5   @CTX$,AUTO
          0 00000A  EF85                                 STB,B6   ,B5

      292     8986    1        CHAN = TERMID.TERM.CHANNEL;

   8986   0 00000B  CCC7 0004                            LDB,B4   @TERMID,AUTO
          0 00000D  E844 0001                            LDR,R6   1,B4
          0 00000F  EF47 000E                            STR,R6   CHAN,AUTO

      293     8987    1        IF CHAN > GJA_CHNHI OR CHAN < GJA_CHNLOW OR

   8987   0 000011  E900 0000 0000  xsym                 CMR,R6   GJA_CHNHI
          0 000014  0301 000F                            BG       s:8990,PREL
          0 000016  E900 0000 0000  xsym                 CMR,R6   GJA_CHNLOW
          0 000019  0201 000A                            BL       s:8990,PREL
          0 00001B  D804                                 LDR,R5   ,B4
          0 00001C  D570 00FF                            AND,R5   255,IMO
          0 00001E  5D01                                 CMV,R5   1
          0 00001F  0201 0004                            BL       s:8990,PREL
          0 000021  5D03                                 CMV,R5   3
          0 000022  0381 0004                            BLE      s:8992,PREL

      294     8988    1             TERMID.LEV < %TERMINAL_ID_LEV_CHAN# OR
      295     8989    2             TERMID.LEV > %TERMINAL_ID_LEV_SUBSUBCHAN# THEN DO;

      296     8990    2             ALTRETURN;

   8990   0 000024  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      297     8991    2           END;                            /* IF                       */
      298     8992    1        LVL1$ = PINCRW(GJA_CHNLOW$,SIZEW(CHANCTX)*(CHAN/128));
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:45   

   8992   0 000027  6047                                 SOR,R6   7
          0 000028  F856                                 LDR,R7   R6
          0 000029  6C00                                 LDV,R6   0
          0 00002A  7085                                 DOL,R7   5
          0 00002B  8400 0000 0000  xsym                 AID      GJA_CHNLOW$
          0 00002E  8D47 0008                            SDI      LVL1$,AUTO

      299     8993    1        CTX$ = LVL1$;

   8993   0 000030  BCC7 0008                            LDB,B3   LVL1$,AUTO
          0 000032  BF85                                 STB,B3   ,B5

      300     8994    2        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN# THEN DO;

   8994   0 000033  D804                                 LDR,R5   ,B4
          0 000034  D570 00FF                            AND,R5   255,IMO
          0 000036  5D01                                 CMV,R5   1
          0 000037  0901 0053                            BE       s:9014,PREL

      301     8995    2             LVL2$ = CHANCTX.SUB$;

   8995   0 000039  ECC3 001A                            LDB,B6   26,B3
          0 00003B  EFC7 000A                            STB,B6   LVL2$,AUTO

      302     8996    3             DO WHILE(LVL2$ ~= ADDR(NIL) AND TERMID.TERM.SUBDEVICE ~= LVL2CTX.TERMID.
              8996                      TERM.SUBDEVICE);

   8996   0 00003D  0F81 0007                            B        s:8998,PREL

      303     8997    3                  LVL2$ = LVL2CTX.LNK$;

   8997   0 00003F  ECC7 000A                            LDB,B6   LVL2$,AUTO
          0 000041  DCC6 001C                            LDB,B5   28,B6
          0 000043  DFC7 000A                            STB,B5   LVL2$,AUTO

      304     8998    3                END;                       /* DO WHILE                 */
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:46   

   8998   0 000045  8DC7 000A                            CMN      LVL2$,AUTO
          0 000047  0901 000A                            BE       s:8999,PREL
          0 000049  ECC7 0004                            LDB,B6   @TERMID,AUTO
          0 00004B  DCC7 000A                            LDB,B5   LVL2$,AUTO
          0 00004D  E846 0002                            LDR,R6   2,B6
          0 00004F  E945 0014                            CMR,R6   20,B5
          0 000051  09EE                                 BNE      s:8997,SPREL

      305     8999    2             CTX$ = LVL2$;

   8999   0 000052  ECC7 000A                            LDB,B6   LVL2$,AUTO
          0 000054  DCC7 0006                            LDB,B5   @CTX$,AUTO
          0 000056  EF85                                 STB,B6   ,B5

      306     9000    3             IF LVL2$ = ADDR(NIL) THEN DO;

   9000   0 000057  8DC7 000A                            CMN      LVL2$,AUTO
          0 000059  0981 0004                            BNE      s:9003,PREL

      307     9001    3                  ALTRETURN;

   9001   0 00005B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      308     9002    3                END;                       /* IF                       */
      309     9003    3             IF TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN# THEN DO;

   9003   0 00005E  CCC7 0004                            LDB,B4   @TERMID,AUTO
          0 000060  E804                                 LDR,R6   ,B4
          0 000061  E570 00FF                            AND,R6   255,IMO
          0 000063  6D03                                 CMV,R6   3
          0 000064  0981 0026                            BNE      s:9014,PREL

      310     9004    3                  LVL3$ = LVL2CTX.SUB$;

   9004   0 000066  BCC6 001A                            LDB,B3   26,B6
          0 000068  BFC7 000C                            STB,B3   LVL3$,AUTO
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:47   

      311     9005    4                  DO WHILE(LVL3$ ~= ADDR(NIL) AND TERMID.TERM.SUBSUBDEVICE ~= LVL3CTX.
              9005                           TERMID.TERM.SUBSUBDEVICE);

   9005   0 00006A  0F81 0007                            B        s:9007,PREL

      312     9006    4                       LVL3$ = LVL3CTX.LNK$;

   9006   0 00006C  ECC7 000C                            LDB,B6   LVL3$,AUTO
          0 00006E  DCC6 001C                            LDB,B5   28,B6
          0 000070  DFC7 000C                            STB,B5   LVL3$,AUTO

      313     9007    4                     END;                  /* DO WHILE                 */

   9007   0 000072  8DC7 000C                            CMN      LVL3$,AUTO
          0 000074  0901 000A                            BE       s:9008,PREL
          0 000076  ECC7 0004                            LDB,B6   @TERMID,AUTO
          0 000078  DCC7 000C                            LDB,B5   LVL3$,AUTO
          0 00007A  E846 0003                            LDR,R6   3,B6
          0 00007C  E945 0015                            CMR,R6   21,B5
          0 00007E  09EE                                 BNE      s:9006,SPREL

      314     9008    3                  CTX$ = LVL3$;

   9008   0 00007F  ECC7 000C                            LDB,B6   LVL3$,AUTO
          0 000081  DCC7 0006                            LDB,B5   @CTX$,AUTO
          0 000083  EF85                                 STB,B6   ,B5

      315     9009    4                  IF LVL3$ = ADDR(NIL) THEN DO;

   9009   0 000084  8DC7 000C                            CMN      LVL3$,AUTO
          0 000086  0981 0004                            BNE      s:9014,PREL

      316     9010    4                       ALTRETURN;

   9010   0 000088  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:48   
      317     9011    4                     END;                  /* IF                       */
      318     9012    3                END;                       /* IF SUBSUBCHAN            */
      319     9013    2           END;                            /* IF LEV ~= CHAN           */
      320     9014    1        RETURN;

   9014   0 00008B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      321     9015    1   END GJA$GET_CHNTBL_PTR;
      322     9016        %EOD;

PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:49   
--  Include file information  --

   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$GET_CHNTBL_PTR.
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:50   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CTX$                      4-0-0/w PTR         r     1 @TERMID
     E-0-0/w UBIN(16)    r     1 CHAN                      *0-0-0/w PTR         r     1 CTX$
     8-0-0/w PTR         r     1 LVL1$                      A-0-0/w PTR         r     1 LVL2$
     C-0-0/w PTR         r     1 LVL3$                     *0-0-0/w STRC(128)   r     1 TERMID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 GJA_CHNHI                  0-0-0/w UBIN(16)    r     1 GJA_CHNLOW
     0-0-0/w PTR         r     1 GJA_CHNLOW$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 CHANCTX                    0-0-0/w STRC(512)   r     1 LVL2CTX
     0-0-0/w STRC(512)   r     1 LVL3CTX


   Procedure GJA$GET_CHNTBL_PTR requires 142 words for executable code.
   Procedure GJA$GET_CHNTBL_PTR requires 18 words of local(AUTO) storage.
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:51   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:52   
          MINI XREF LISTING

CHAN
      8979**DCL      8986<<ASSIGN   8987>>IF       8987>>IF       8992>>ASSIGN
CHANCTX
      8618**DCL      8992--ASSIGN
CHANCTX.SUB$
      8725**DCL      8995>>ASSIGN
CHANCTX.TERMID.TERM
      8714**DCL      8723--REDEF
CTX$
      8597**DCL        33--PROC     8985<<ASSIGN   8993<<ASSIGN   8999<<ASSIGN   9008<<ASSIGN
GJA_CHNHI
      8601**DCL      8987>>IF
GJA_CHNLOW
      8600**DCL      8987>>IF
GJA_CHNLOW$
      8599**DCL      8992>>ASSIGN
LVL1$
      8976**DCL      8618--IMP-PTR  8992<<ASSIGN   8993>>ASSIGN   8995>>ASSIGN
LVL2$
      8977**DCL      8742--IMP-PTR  8995<<ASSIGN   8996>>DOWHILE  8996>>DOWHILE  8997<<ASSIGN   8997>>ASSIGN
      8999>>ASSIGN   9000>>IF       9004>>ASSIGN
LVL2CTX.LNK$
      8849**DCL      8997>>ASSIGN
LVL2CTX.SUB$
      8849**DCL      9004>>ASSIGN
LVL2CTX.TERMID.TERM
      8838**DCL      8847--REDEF
LVL2CTX.TERMID.TERM.SUBDEVICE
      8844**DCL      8996>>DOWHILE
LVL3$
      8978**DCL      8866--IMP-PTR  9004<<ASSIGN   9005>>DOWHILE  9005>>DOWHILE  9006<<ASSIGN   9006>>ASSIGN
      9008>>ASSIGN   9009>>IF
PL6.E3A0      #002=GJA$GET_CHNTBL_PTR File=GJA$SUBS.:E05TSI                      TUE 07/29/97 21:54 Page:53   
LVL3CTX.LNK$
      8973**DCL      9006>>ASSIGN
LVL3CTX.TERMID.TERM
      8962**DCL      8971--REDEF
LVL3CTX.TERMID.TERM.SUBSUBDEVICE
      8968**DCL      9005>>DOWHILE
TERMID
      8582**DCL        33--PROC
TERMID.LEV
      8586**DCL      8987>>IF       8987>>IF       8994>>IF       9003>>IF
TERMID.TERM
      8586**DCL      8595--REDEF
TERMID.TERM.CHANNEL
      8592**DCL      8986>>ASSIGN
TERMID.TERM.SUBDEVICE
      8592**DCL      8996>>DOWHILE
TERMID.TERM.SUBSUBDEVICE
      8592**DCL      9005>>DOWHILE

PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:54   
      323        1        /*T***********************************************************/
      324        2        /*T*                                                         */
      325        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      326        4        /*T*                                                         */
      327        5        /*T***********************************************************/
      328        6        /*F*   NAME:    GJA$GET_CONFIG_INFO
      329        7
      330        8               PURPOSE: This routine is called when we have established a
      331        9                        connection to the network manager.  It sends an
      332       10                        KL_RQSCHN message to the network manager.
      333       11               CALL:   CALL GJA$GET_CONFIG_INFO
      334       12        */
      335       13        GJA$GET_CONFIG_INFO: PROC (CTX$);
      336       14
      337       15        %INCLUDE LCP_6;
      338     4294        %INCLUDE GJA_MSG_M;
      339     4533        %INCLUDE KL_MACRO_C;
      340     7885        %INCLUDE KL_AFCN_C;                     /* 'IGA' Function Codes     */
      341     7986        %INCLUDE KNN_NETWORK_M;
      342     8349        %INCLUDE K_ADDRESS_M;
      343     8852        %INCLUDE KNH_MACRO_C;
      344     9135
      345     9136                                                /* Parameters               */
      346     9137    1   DCL CTX$ PTR;
      347     9138
      348     9139                                                /* Equates                  */
      349     9140        %GJA_UID_EQUS;
      350     9148
      351     9149                                                /* Symrefs                  */
      352     9150    1   DCL GJA_HOPCOST UBIN SYMREF;
      353     9151    1   DCL GJA_ROUTE$ PTR SYMREF;
      354     9152    1   DCL GJA_NODE# UBIN SYMREF;
      355     9153    1   DCL GJA_NODENAME CHAR(8) SYMREF;
      356     9154    1   DCL GJA_MAXNODE UBIN SYMREF;
      357     9155    1   DCL GJA_UID_NM UBIN(32) SYMREF;
      358     9156    1   DCL GJA_LINKS UBIN SYMREF;
      359     9157    1   DCL GJA_LINK$ PTR SYMREF;
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:55   
      360     9158        %KL_RQSCHN (FPTN=GJA_RQSCHN,STCLASS=SYMREF);
      361     9261
      362     9262        %GJA$HAND_CTX (STCLASS="BASED(CTX$)");
      363     9311                                                /* Based                    */
      364     9312        %KNN$LINK(STCLASS="BASED(LINK$)");
      365     9563        %KNN$ROUTE (STCLASS="BASED(ROUTE$)");
      366     9635    1   DCL KNN$ROUTE$(0:0) PTR BASED(GJA_ROUTE$);
      367     9636    1   DCL KNN$LINK$(0:0) PTR BASED(GJA_LINK$);
      368     9637
      369     9638                                                /* Auto                     */
      370     9639        %KL_NODECHG (FPTN=NODECHG,STCLASS=AUTO);
      371     9663        %KL_NODEINFO (FPTN=NODEINFO,STCLASS=AUTO);
      372     9687        %KL_OSILINKCHG(FPTN=OSILINKCHG,STCLASS=AUTO);
      373     9810    1   DCL J UBIN;
      374     9811    1   DCL ROUTE$ PTR;
      375     9812    1   DCL LINK$ PTR;
      376     9813    1   DCL I SBIN;
      377     9814
      378     9815                                                /* Entrys                   */
      379     9816    1   DCL GJA$SEND_MSG ENTRY(4) ALTRET;
      380     9817
      381     9818
      382     9819        /* Constant */
      383     9820        %KL_CONTROL_INIT(FPTN=CONTROL_INIT,HNDLR='BABOON',NUM_FIXED=1,NUM_INDXD=1);
      384     9946
      385     9947        %EJECT;
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:56   
      386     9948
      387     9949    1        CALL GJA$SEND_MSG(GJA_UID_NM,CONTROL_INIT,SIZEC(CONTROL_INIT));
      388     9950    1        CALL GJA$SEND_MSG(GJA_UID_NM,GJA_RQSCHN,SIZEC(GJA_RQSCHN));
      389     9951    1        RETURN;
      390     9952        %EJECT;
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:57   
      391     9953    1   GJA$NODEINFO: ENTRY(CTX$);
      392     9954
      393     9955    1        NODEINFO = '0'B;
      394     9956    1        NODEINFO.FCN = IGA_NODEINFO;
      395     9957    1        NODEINFO.MYNODE = GJA_NODE#;
      396     9958    1        NODEINFO.MYNAME = GJA_NODENAME;
      397     9959    1        CALL GJA$SEND_MSG(CTX$,NODEINFO,SIZEC(NODEINFO));
      398     9960
      399     9961        /* Send NODECHG for each node we can talk to */
      400     9962
      401     9963    1        IF GJA$HAND_CTX.LINK_CONNECTED
      402     9964    1        THEN
      403     9965    2        DO I = 0 TO GJA_MAXNODE;
      404     9966    2             ROUTE$ = KNN$ROUTE$(I);
      405     9967    2             LINK$ = KNN$ROUTE.LINK$;
      406     9968    2             IF LINK$ ~= ADDR(NIL)         /* We can talk to this node */
      407     9969    2                  AND GJA_NODE# ~= I
      408     9970    2                  AND I ~= GJA$HAND_CTX.NODE
      409     9971    3             THEN DO;
      410     9972    3                  NODECHG.FCN = IGA_NODECHG;
      411     9973    3                  NODECHG.MYNODE = GJA_NODE#;
      412     9974    3                  NODECHG.NODE = I;
      413     9975    3                  IF KNN$LINK.NODE# = GJA$HAND_CTX.NODE
      414     9976    3                  THEN
      415     9977    3                       IF KNN$ROUTE.ALT_QOS = 255
      416     9978    3                       THEN
      417     9979    3                            NODECHG.QOS = 255;
      418     9980    3                       ELSE
      419     9981    3                            NODECHG.QOS = MINIMUM(KNN$ROUTE.ALT_QOS+GJA_HOPCOST,254);
      420     9982    3                  ELSE
      421     9983    3                       IF KNN$ROUTE.CURRENT_QOS = 255
      422     9984    3                       THEN
      423     9985    3                            NODECHG.QOS = 255;
      424     9986    3                       ELSE
      425     9987    3                            NODECHG.QOS = MINIMUM(KNN$ROUTE.CURRENT_QOS+GJA_HOPCOST,254
              9987                                     );
      426     9988    3                  IF KNN$ROUTE.FLAGS.HOST_NODE
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:58   
      427     9989    3                  THEN
      428     9990    3                       NODECHG.HOSTNODE = 1;
      429     9991    3                  ELSE
      430     9992    3                       NODECHG.HOSTNODE = 0;
      431     9993    3                  CALL GJA$SEND_MSG(CTX$,NODECHG,SIZEC(NODECHG));
      432     9994    3                END;
      433     9995    2           END;                            /* do i = 0 to maxnodes */
      434     9996    1        IF GJA$HAND_CTX.LINK_CONNECTED
      435     9997    2             OR GJA$HAND_CTX.HOST_NODE THEN DO;
      436     9998    2             OSILINKCHG = '0'B;
      437     9999    2             OSILINKCHG.FCN = IGA_OSILINKCHG;
      438    10000    2             OSILINKCHG.TYPE = IGA_OSILINKUP;
      439    10001    2             OSILINKCHG.MYNODE# = GJA_NODE#;
      440    10002    2             OSILINKCHG.NODE# = GJA_NODE#;
      441    10003    3             DO J = 0 TO GJA_LINKS-1;
      442    10004    3                  LINK$ = KNN$LINK$(J);
      443    10005                         /*
      444    10006                            this is and osi link tell the distant node about it.
      445    10007                            tell the default host also.
      446    10008                         */
      447    10009    4                  IF KNN$LINK.SNPA.LEN ~= 0 THEN DO;
      448    10010    4                       OSILINKCHG.QOS = KNN$LINK.QOS;
      449    10011    4                       OSILINKCHG.SNPA = KNN$LINK.SNPA;
      450    10012    4                       OSILINKCHG.TERMID.TERM.CHANNEL = KNN$LINK.CHAN#;
      451    10013    4                       CALL GJA$SEND_MSG(CTX$,OSILINKCHG,SIZEC(OSILINKCHG));
      452    10014    4                     END;
      453    10015    3                END;
      454    10016    2           END;                            /* if link connected */
      455    10017
      456    10018    1        RETURN;
      457    10019    1   END;
      458    10020        %EOD;

PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:59   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KNN_NETWORK_M.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$GET_CONFIG_INFO.

   Procedure GJA$GET_CONFIG_INFO requires 360 words for executable code.
   Procedure GJA$GET_CONFIG_INFO requires 47 words of local(AUTO) storage.

PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:60   

 Object Unit name= GJA$GET_CONFIG_INFO                        File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:55:01.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    23     17  GJA$GET_CONFIG_INFO
    1   Proc  even  none   360    168  GJA$GET_CONFIG_INFO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GJA$GET_CONFIG_INFO
     1     3E                  yes      Std        1  GJA$NODEINFO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 GJA$SEND_MSG
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_HOPCOST                           GJA_ROUTE$                            GJA_NODE#
     GJA_NODENAME                          GJA_MAXNODE                           GJA_UID_NM
     GJA_LINKS                             GJA_LINK$                             GJA_RQSCHN
r    G$ROS$
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:61   


      323        1        /*T***********************************************************/
      324        2        /*T*                                                         */
      325        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      326        4        /*T*                                                         */
      327        5        /*T***********************************************************/
      328        6        /*F*   NAME:    GJA$GET_CONFIG_INFO
      329        7
      330        8               PURPOSE: This routine is called when we have established a
      331        9                        connection to the network manager.  It sends an
      332       10                        KL_RQSCHN message to the network manager.
      333       11               CALL:   CALL GJA$GET_CONFIG_INFO
      334       12        */
      335       13        GJA$GET_CONFIG_INFO: PROC (CTX$);

     13   1 000000  D380 0000 0000  xent GJA$GET_CONFIG_*LNJ,B5   X6A_AUTO_1
          1 000003       002F 0001                       DC       47,1

      336       14
      337       15        %INCLUDE LCP_6;
      338     4294        %INCLUDE GJA_MSG_M;
      339     4533        %INCLUDE KL_MACRO_C;
      340     7885        %INCLUDE KL_AFCN_C;                     /* 'IGA' Function Codes     */
      341     7986        %INCLUDE KNN_NETWORK_M;
      342     8349        %INCLUDE K_ADDRESS_M;
      343     8852        %INCLUDE KNH_MACRO_C;
      344     9135
      345     9136                                                /* Parameters               */
      346     9137    1   DCL CTX$ PTR;
      347     9138
      348     9139                                                /* Equates                  */
      349     9140        %GJA_UID_EQUS;
      350     9148
      351     9149                                                /* Symrefs                  */
      352     9150    1   DCL GJA_HOPCOST UBIN SYMREF;
      353     9151    1   DCL GJA_ROUTE$ PTR SYMREF;
      354     9152    1   DCL GJA_NODE# UBIN SYMREF;
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:62   
      355     9153    1   DCL GJA_NODENAME CHAR(8) SYMREF;
      356     9154    1   DCL GJA_MAXNODE UBIN SYMREF;
      357     9155    1   DCL GJA_UID_NM UBIN(32) SYMREF;
      358     9156    1   DCL GJA_LINKS UBIN SYMREF;
      359     9157    1   DCL GJA_LINK$ PTR SYMREF;
      360     9158        %KL_RQSCHN (FPTN=GJA_RQSCHN,STCLASS=SYMREF);
      361     9261
      362     9262        %GJA$HAND_CTX (STCLASS="BASED(CTX$)");
      363     9311                                                /* Based                    */
      364     9312        %KNN$LINK(STCLASS="BASED(LINK$)");
      365     9563        %KNN$ROUTE (STCLASS="BASED(ROUTE$)");
      366     9635    1   DCL KNN$ROUTE$(0:0) PTR BASED(GJA_ROUTE$);
      367     9636    1   DCL KNN$LINK$(0:0) PTR BASED(GJA_LINK$);
      368     9637
      369     9638                                                /* Auto                     */
      370     9639        %KL_NODECHG (FPTN=NODECHG,STCLASS=AUTO);
      371     9663        %KL_NODEINFO (FPTN=NODEINFO,STCLASS=AUTO);
      372     9687        %KL_OSILINKCHG(FPTN=OSILINKCHG,STCLASS=AUTO);
      373     9810    1   DCL J UBIN;
      374     9811    1   DCL ROUTE$ PTR;
      375     9812    1   DCL LINK$ PTR;
      376     9813    1   DCL I SBIN;
      377     9814
      378     9815                                                /* Entrys                   */
      379     9816    1   DCL GJA$SEND_MSG ENTRY(4) ALTRET;
      380     9817
      381     9818
      382     9819        /* Constant */
      383     9820        %KL_CONTROL_INIT(FPTN=CONTROL_INIT,HNDLR='BABOON',NUM_FIXED=1,NUM_INDXD=1);
      384     9946
      385     9947        %EJECT;
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:63   
      386     9948
      387     9949    1        CALL GJA$SEND_MSG(GJA_UID_NM,CONTROL_INIT,SIZEC(CONTROL_INIT));

   9949   1 000005  EBF0 002E                            LAB,B6   46,IMO
          1 000007  EFC7 002C                            STB,B6   I+6,AUTO
          1 000009  DB80 0000 0000  00                   LAB,B5   CONTROL_INIT
          1 00000C  DFC7 002A                            STB,B5   I+4,AUTO
          1 00000E  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NM
          1 000011  CFC7 0028                            STB,B4   I+2,AUTO
          1 000013  BBC7 0028                            LAB,B3   I+2,AUTO
          1 000015  CBF0 0300                            LAB,B4   768,IMO
          1 000017  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 00001A       0001                            DC       s:9950,PREL

      388     9950    1        CALL GJA$SEND_MSG(GJA_UID_NM,GJA_RQSCHN,SIZEC(GJA_RQSCHN));

   9950   1 00001B  E280 0000 000D  xsym                 LLH,R6   GJA_RQSCHN+13
          1 00001E  6003                                 SOL,R6   3
          1 00001F  EA70 00E7                            ADD,R6   231,IMO
          1 000021  6044                                 SOR,R6   4
          1 000022  6001                                 SOL,R6   1
          1 000023  EF47 0028                            STR,R6   I+2,AUTO
          1 000025  EBC7 0028                            LAB,B6   I+2,AUTO
          1 000027  EFC7 002D                            STB,B6   I+7,AUTO
          1 000029  DB80 0000 0000  xsym                 LAB,B5   GJA_RQSCHN
          1 00002C  DFC7 002B                            STB,B5   I+5,AUTO
          1 00002E  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NM
          1 000031  CFC7 0029                            STB,B4   I+3,AUTO
          1 000033  BBC7 0029                            LAB,B3   I+3,AUTO
          1 000035  CBF0 0300                            LAB,B4   768,IMO
          1 000037  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 00003A       0001                            DC       s:9951,PREL

      389     9951    1        RETURN;

   9951   1 00003B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:64   
      390     9952        %EJECT;
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:65   
      391     9953    1   GJA$NODEINFO: ENTRY(CTX$);

   9953   1 00003E  D380 0000 0000  xent GJA$NODEINFO    LNJ,B5   X6A_AUTO_1
          1 000041       002F 0001                       DC       47,1

      392     9954
      393     9955    1        NODEINFO = '0'B;

   9955   1 000043  5C0D                                 LDV,R5   13
          1 000044  0021                                 ALR      ;
          1 000045       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000047       4007 000A                                ALPHANUM(NODEINFO,AUTO,,R5,FILL)

      394     9956    1        NODEINFO.FCN = IGA_NODEINFO;

   9956   1 000049  6C28                                 LDV,R6   40
          1 00004A  437F                                 CSYNC    s:9956,SPREL
          1 00004B  E7C7 000A                            STH,R6   NODEINFO,AUTO

      395     9957    1        NODEINFO.MYNODE = GJA_NODE#;

   9957   1 00004D  C800 0000 0000  xsym                 LDR,R4   GJA_NODE#
          1 000050  C7C7 000C                            STH,R4   NODEINFO+2,AUTO

      396     9958    1        NODEINFO.MYNAME = GJA_NODENAME;

   9958   1 000052  AB80 0000 0000  xsym                 LAB,B2   GJA_NODENAME
          1 000055  2C00                                 LDV,R2   0
          1 000056  6C08                                 LDV,R6   8
          1 000057  BB87                                 LAB,B3   ,AUTO
          1 000058  3C19                                 LDV,R3   25
          1 000059  0008                                 MMM

      397     9959    1        CALL GJA$SEND_MSG(CTX$,NODEINFO,SIZEC(NODEINFO));

   9959   1 00005A  EBF0 000E                            LAB,B6   14,IMO
          1 00005C  EFC7 002C                            STB,B6   I+6,AUTO
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:66   
          1 00005E  DBC7 000A                            LAB,B5   NODEINFO,AUTO
          1 000060  DFC7 002A                            STB,B5   I+4,AUTO
          1 000062  CCC7 0004                            LDB,B4   @CTX$,AUTO
          1 000064  CFC7 0028                            STB,B4   I+2,AUTO
          1 000066  BBC7 0028                            LAB,B3   I+2,AUTO
          1 000068  CBF0 0300                            LAB,B4   768,IMO
          1 00006A  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 00006D       0001                            DC       s:9963,PREL

      398     9960
      399     9961        /* Send NODECHG for each node we can talk to */
      400     9962
      401     9963    1        IF GJA$HAND_CTX.LINK_CONNECTED

   9963   1 00006E  ECC7 0004                            LDB,B6   @CTX$,AUTO
          1 000070  DC86                                 LDB,B5   ,B6
          1 000071  82C5 000D                            LB,'4000'X        13,B5
          1 000073       4000
          1 000074  0581 0091                            BBF      s:9996,PREL

      402     9964    1        THEN
      403     9965    2        DO I = 0 TO GJA_MAXNODE;

   9965   1 000076  8747 0026                            CL       I,AUTO
          1 000078  0F81 0084                            B        s:9995+2,PREL

      404     9966    2             ROUTE$ = KNN$ROUTE$(I);

   9966   1 00007A  EC80 0000 0000  xsym                 LDB,B6   GJA_ROUTE$
          1 00007D  B847 0026                            LDR,R3   I,AUTO
          1 00007F  DCB6                                 LDB,B5   ,B6,R3
          1 000080  DFC7 0022                            STB,B5   ROUTE$,AUTO

      405     9967    2             LINK$ = KNN$ROUTE.LINK$;

   9967   1 000082  CC85                                 LDB,B4   ,B5
          1 000083  CFC7 0024                            STB,B4   LINK$,AUTO
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:67   

      406     9968    2             IF LINK$ ~= ADDR(NIL)         /* We can talk to this node */

   9968   1 000085  8DC7 0024                            CMN      LINK$,AUTO
          1 000087  0901 0073                            BE       s:9995,PREL
          1 000089  3801 0006                            BLZ,R3   s:9968+11,PREL
          1 00008B  B900 0000 0000  xsym                 CMR,R3   GJA_NODE#
          1 00008E  0901 006C                            BE       s:9995,PREL
          1 000090  BCC7 0004                            LDB,B3   @CTX$,AUTO
          1 000092  AC83                                 LDB,B2   ,B3
          1 000093  E842 000D                            LDR,R6   13,B2
          1 000095  E570 00FF                            AND,R6   255,IMO
          1 000097  E953                                 CMR,R6   R3
          1 000098  0901 0062                            BE       s:9995,PREL

      407     9969    2                  AND GJA_NODE# ~= I
      408     9970    2                  AND I ~= GJA$HAND_CTX.NODE
      409     9971    3             THEN DO;

      410     9972    3                  NODECHG.FCN = IGA_NODECHG;

   9972   1 00009A  5C29                                 LDV,R5   41
          1 00009B  D7C7 0006                            STH,R5   NODECHG,AUTO

      411     9973    3                  NODECHG.MYNODE = GJA_NODE#;

   9973   1 00009D  E800 0000 0000  xsym                 LDR,R6   GJA_NODE#
          1 0000A0  EAC7 0007                            SRM,R6,'00FF'X    NODECHG+1,AUTO
          1 0000A2       00FF

      412     9974    3                  NODECHG.NODE = I;

   9974   1 0000A3  B7C7 0008                            STH,R3   NODECHG+2,AUTO

      413     9975    3                  IF KNN$LINK.NODE# = GJA$HAND_CTX.NODE

   9975   1 0000A5  AC83                                 LDB,B2   ,B3
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:68   
          1 0000A6  C842 000D                            LDR,R4   13,B2
          1 0000A8  C570 00FF                            AND,R4   255,IMO
          1 0000AA  C944 0002                            CMR,R4   2,B4
          1 0000AC  0981 0019                            BNE      s:9983,PREL

      414     9976    3                  THEN
      415     9977    3                       IF KNN$ROUTE.ALT_QOS = 255

   9977   1 0000AE  A845 0006                            LDR,R2   6,B5
          1 0000B0  A970 00FF                            CMR,R2   255,IMO
          1 0000B2  0981 0006                            BNE      s:9981,PREL

      416     9978    3                       THEN
      417     9979    3                            NODECHG.QOS = 255;

   9979   1 0000B4  8947 0009                            LBT,'FF00'X       NODECHG+3,AUTO
   9979   1 0000B6       FF00
          1 0000B7  0F81 0024                            B        s:9988,PREL

      418     9980    3                       ELSE
      419     9981    3                            NODECHG.QOS = MINIMUM(KNN$ROUTE.ALT_QOS+GJA_HOPCOST,254);

   9981   1 0000B9  AA00 0000 0000  xsym                 ADD,R2   GJA_HOPCOST
          1 0000BC  A970 00FE                            CMR,R2   254,IMO
          1 0000BE  0381 0003                            BLE      s:9981+9,PREL
          1 0000C0  A870 00FE                            LDR,R2   254,IMO
          1 0000C2  A7C7 0009                            STH,R2   NODECHG+3,AUTO
          1 0000C4  0F81 0017                            B        s:9988,PREL

      420     9982    3                  ELSE
      421     9983    3                       IF KNN$ROUTE.CURRENT_QOS = 255

   9983   1 0000C6  A845 0005                            LDR,R2   5,B5
          1 0000C8  A970 00FF                            CMR,R2   255,IMO
          1 0000CA  0981 0006                            BNE      s:9987,PREL

      422     9984    3                       THEN
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:69   
      423     9985    3                            NODECHG.QOS = 255;

   9985   1 0000CC  8947 0009                            LBT,'FF00'X       NODECHG+3,AUTO
   9985   1 0000CE       FF00
          1 0000CF  0F81 000C                            B        s:9988,PREL

      424     9986    3                       ELSE
      425     9987    3                           NODECHG.QOS = MINIMUM(KNN$ROUTE.CURRENT_QOS+GJA_HOPCOST,254
              9987                                     );

   9987   1 0000D1  AA00 0000 0000  xsym                 ADD,R2   GJA_HOPCOST
          1 0000D4  A970 00FE                            CMR,R2   254,IMO
          1 0000D6  0381 0003                            BLE      s:9987+9,PREL
          1 0000D8  A870 00FE                            LDR,R2   254,IMO
          1 0000DA  A7C7 0009                            STH,R2   NODECHG+3,AUTO

      426     9988    3                  IF KNN$ROUTE.FLAGS.HOST_NODE

   9988   1 0000DC  89C5 0007                            CMZ      7,B5
          1 0000DE  0881 0007                            BAGE     s:9992,PREL

      427     9989    3                  THEN
      428     9990    3                       NODECHG.HOSTNODE = 1;

   9990   1 0000E0  4C01                                 LDV,R4   1
          1 0000E1  CAC7 0008                            SRM,R4,'00FF'X    NODECHG+2,AUTO
          1 0000E3       00FF
          1 0000E4  0F81 0004                            B        s:9993,PREL

      429     9991    3                  ELSE
      430     9992    3                       NODECHG.HOSTNODE = 0;

   9992   1 0000E6  8847 0008                            LBF,'00FF'X       NODECHG+2,AUTO
   9992   1 0000E8       00FF

      431     9993    3                  CALL GJA$SEND_MSG(CTX$,NODECHG,SIZEC(NODECHG));

PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:70   
   9993   1 0000E9  ABF0 0008                            LAB,B2   8,IMO
          1 0000EB  AFC7 002C                            STB,B2   I+6,AUTO
          1 0000ED  9BC7 0006                            LAB,B1   NODECHG,AUTO
          1 0000EF  9FC7 002A                            STB,B1   I+4,AUTO
          1 0000F1  BFC7 0028                            STB,B3   I+2,AUTO
          1 0000F3  BBC7 0028                            LAB,B3   I+2,AUTO
          1 0000F5  CBF0 0300                            LAB,B4   768,IMO
          1 0000F7  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 0000FA       0001                            DC       s:9995,PREL

      432     9994    3                END;

      433     9995    2           END;                            /* do i = 0 to maxnodes */

   9995   1 0000FB  8AC7 0026                            INC      I,AUTO
          1 0000FD  E847 0026                            LDR,R6   I,AUTO
          1 0000FF  6801 FF7A                            BLZ,R6   s:9966,PREL
          1 000101  E900 0000 0000  xsym                 CMR,R6   GJA_MAXNODE
          1 000104  0381 FF75                            BLE      s:9966,PREL

      434     9996    1        IF GJA$HAND_CTX.LINK_CONNECTED

   9996   1 000106  ECC7 0004                            LDB,B6   @CTX$,AUTO
          1 000108  DC86                                 LDB,B5   ,B6
          1 000109  82C5 000D                            LB,'4000'X        13,B5
          1 00010B       4000
          1 00010C  0501 0006                            BBT      s:9998,PREL
          1 00010E  82C5 000D                            LB,'2000'X        13,B5
          1 000110       2000
          1 000111  0581 0053                            BBF      s:10018,PREL

      435     9997    2             OR GJA$HAND_CTX.HOST_NODE THEN DO;

      436     9998    2             OSILINKCHG = '0'B;

   9998   1 000113  5C20                                 LDV,R5   32
          1 000114  0021                                 ALR      ;
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:71   
          1 000115       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000117       4007 0011                                ALPHANUM(OSILINKCHG,AUTO,,R5,FILL)

      437     9999    2             OSILINKCHG.FCN = IGA_OSILINKCHG;

   9999   1 000119  6C5A                                 LDV,R6   90
          1 00011A  437F                                 CSYNC    s:9999,SPREL
          1 00011B  E7C7 0011                            STH,R6   OSILINKCHG,AUTO

      438    10000    2             OSILINKCHG.TYPE = IGA_OSILINKUP;

  10000   1 00011D  4C58                                 LDV,R4   88
          1 00011E  CAC7 0011                            SRM,R4,'00FF'X    OSILINKCHG,AUTO
          1 000120       00FF

      439    10001    2             OSILINKCHG.MYNODE# = GJA_NODE#;

  10001   1 000121  B800 0000 0000  xsym                 LDR,R3   GJA_NODE#
          1 000124  B7C7 0012                            STH,R3   OSILINKCHG+1,AUTO

      440    10002    2             OSILINKCHG.NODE# = GJA_NODE#;

  10002   1 000126  BAC7 0012                            SRM,R3,'00FF'X    OSILINKCHG+1,AUTO
  10002   1 000128       00FF

      441    10003    3             DO J = 0 TO GJA_LINKS-1;

  10003   1 000129  8747 0021                            CL       J,AUTO
          1 00012B  0F81 0033                            B        s:10015+2,PREL

      442    10004    3                  LINK$ = KNN$LINK$(J);

  10004   1 00012D  EC80 0000 0000  xsym                 LDB,B6   GJA_LINK$
          1 000130  B847 0021                            LDR,R3   J,AUTO
          1 000132  DCB6                                 LDB,B5   ,B6,R3
          1 000133  DFC7 0024                            STB,B5   LINK$,AUTO

PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:72   
      443    10005                         /*
      444    10006                            this is and osi link tell the distant node about it.
      445    10007                            tell the default host also.
      446    10008                         */
      447    10009    4                  IF KNN$LINK.SNPA.LEN ~= 0 THEN DO;

  10009   1 000135  E2C5 001F                            LLH,R6   31,B5
          1 000137  6901 0025                            BEZ,R6   s:10015,PREL

      448    10010    4                       OSILINKCHG.QOS = KNN$LINK.QOS;

  10010   1 000139  D845 0004                            LDR,R5   4,B5
          1 00013B  D7C7 0013                            STH,R5   OSILINKCHG+2,AUTO

      449    10011    4                       OSILINKCHG.SNPA = KNN$LINK.SNPA;

  10011   1 00013D  AB85                                 LAB,B2   ,B5
          1 00013E  2C3E                                 LDV,R2   62
          1 00013F  6C08                                 LDV,R6   8
          1 000140  BB87                                 LAB,B3   ,AUTO
          1 000141  3C2A                                 LDV,R3   42
          1 000142  0008                                 MMM

      450    10012    4                       OSILINKCHG.TERMID.TERM.CHANNEL = KNN$LINK.CHAN#;

  10012   1 000143  ECC7 0024                            LDB,B6   LINK$,AUTO
          1 000145  E846 0023                            LDR,R6   35,B6
          1 000147  EF47 001A                            STR,R6   OSILINKCHG+9,AUTO

      451    10013    4                       CALL GJA$SEND_MSG(CTX$,OSILINKCHG,SIZEC(OSILINKCHG));

  10013   1 000149  CBF0 0020                            LAB,B4   32,IMO
          1 00014B  CFC7 002C                            STB,B4   I+6,AUTO
          1 00014D  9BC7 0011                            LAB,B1   OSILINKCHG,AUTO
          1 00014F  9FC7 002A                            STB,B1   I+4,AUTO
          1 000151  ECC7 0004                            LDB,B6   @CTX$,AUTO
          1 000153  EFC7 0028                            STB,B6   I+2,AUTO
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:73   
          1 000155  BBC7 0028                            LAB,B3   I+2,AUTO
          1 000157  CBF0 0300                            LAB,B4   768,IMO
          1 000159  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 00015C       0001                            DC       s:10015,PREL

      452    10014    4                     END;

      453    10015    3                END;

  10015   1 00015D  8AC7 0021                            INC      J,AUTO
          1 00015F  E847 0021                            LDR,R6   J,AUTO
          1 000161  E900 0000 0000  xsym                 CMR,R6   GJA_LINKS
          1 000164  0249                                 BL       s:10004,SPREL

      454    10016    2           END;                            /* if link connected */

      455    10017
      456    10018    1        RETURN;

  10018   1 000165  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      457    10019    1   END;
      458    10020        %EOD;

PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:74   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KNN_NETWORK_M.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$GET_CONFIG_INFO.
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:75   

 **** Variables and constants ****

  ****  Section 000  Data  GJA$GET_CONFIG_INFO

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(368)   r     1 CONTROL_INIT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CTX$                     *0-0-0/w PTR         r     1 CTX$
    26-0-0/w SBIN(16)    r     1 I                         21-0-0/w UBIN(16)    r     1 J
    24-0-0/w PTR         r     1 LINK$                      6-0-0/w STRC(56)    r     1 NODECHG
     A-0-0/w STRC(104)   r     1 NODEINFO                  11-0-0/w STRC(256)   r     1 OSILINKCHG
    22-0-0/w PTR         r     1 ROUTE$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 GJA_HOPCOST                0-0-0/w PTR         r     1 GJA_LINK$
     0-0-0/w UBIN(16)    r     1 GJA_LINKS                  0-0-0/w UBIN(16)    r     1 GJA_MAXNODE
     0-0-0/w UBIN(16)    r     1 GJA_NODE#                  0-0-0/c CHAR(8)     r     1 GJA_NODENAME
     0-0-0/w PTR         r     1 GJA_ROUTE$                 0-0-0/w ASTR(216)   r     1 GJA_RQSCHN
     0-0-0/w UBIN(32)    r     1 GJA_UID_NM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(272)   r     1 GJA$HAND_CTX               0-0-0/c STRC(608)   r     1 KNN$LINK
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:76   
     0-0-0/w PTR         r     1 KNN$LINK$(0:0)
     0-0-0/w STRC(208)   r     1 KNN$ROUTE
     0-0-0/w PTR         r     1 KNN$ROUTE$(0:0)


   Procedure GJA$GET_CONFIG_INFO requires 360 words for executable code.
   Procedure GJA$GET_CONFIG_INFO requires 47 words of local(AUTO) storage.
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:77   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:78   
          MINI XREF LISTING

CONTROL_INIT
      9853**DCL      9949<>CALL     9949--CALL
CTX$
      9137**DCL        13--PROC     9263--IMP-PTR  9953--ENTRY    9959<>CALL     9963>>IF       9968>>IF
      9975>>IF       9993<>CALL     9996>>IF       9996>>IF      10013<>CALL
GJA$HAND_CTX.HOST_NODE
      9293**DCL      9996>>IF
GJA$HAND_CTX.LINK_CONNECTED
      9292**DCL      9963>>IF       9996>>IF
GJA$HAND_CTX.NODE
      9298**DCL      9968>>IF       9975>>IF
GJA$SEND_MSG
      9816**DCL-ENT  9949--CALL     9950--CALL     9959--CALL     9993--CALL    10013--CALL
GJA_HOPCOST
      9150**DCL      9981>>ASSIGN   9987>>ASSIGN
GJA_LINK$
      9157**DCL      9636--IMP-PTR 10004>>ASSIGN
GJA_LINKS
      9156**DCL     10003>>DOINDEX
GJA_MAXNODE
      9154**DCL      9965>>DOINDEX
GJA_NODE#
      9152**DCL      9957>>ASSIGN   9968>>IF       9973>>ASSIGN  10001>>ASSIGN  10002>>ASSIGN
GJA_NODENAME
      9153**DCL      9958>>ASSIGN
GJA_ROUTE$
      9151**DCL      9635--IMP-PTR  9966>>ASSIGN
GJA_RQSCHN
      9173**DCL      9950<>CALL     9950--CALL
GJA_RQSCHN.SGN.L
      9247**DCL      9255--IMP-SIZ  9950>>CALL     9950>>CALL
GJA_RQSCHN.TERMINAL_ID.TERM
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:79   
      9227**DCL      9236--REDEF
GJA_UID_NM
      9155**DCL      9949<>CALL     9950<>CALL
I
      9813**DCL      9965<<DOINDEX  9966>>ASSIGN   9968>>IF       9968>>IF       9974>>ASSIGN
J
      9810**DCL     10003<<DOINDEX 10004>>ASSIGN
KNN$LINK.CHAN#
      9547**DCL     10012>>ASSIGN
KNN$LINK.DEST.ADDRESS_N
      9500**DCL      9501--REDEF
KNN$LINK.LADR.ADDRESS_N
      9443**DCL      9444--REDEF
KNN$LINK.LDCT$
      9314**DCL      9321--REDEF
KNN$LINK.NODE#
      9329**DCL      9975>>IF
KNN$LINK.QOS
      9373**DCL     10010>>ASSIGN
KNN$LINK.SNPA
      9529**DCL     10011>>ASSIGN
KNN$LINK.SNPA.LEN
      9531**DCL     10009>>IF
KNN$LINK$
      9636**DCL     10004>>ASSIGN
KNN$ROUTE.ALT_QOS
      9585**DCL      9977>>IF       9981>>ASSIGN
KNN$ROUTE.CURRENT_QOS
      9582**DCL      9983>>IF       9987>>ASSIGN
KNN$ROUTE.FLAGS.HOST_NODE
      9592**DCL      9988>>IF
KNN$ROUTE.LINK$
      9565**DCL      9967>>ASSIGN
KNN$ROUTE$
      9635**DCL      9966>>ASSIGN
LINK$
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:80   
      9812**DCL      9313--IMP-PTR  9967<<ASSIGN   9968>>IF       9975>>IF      10004<<ASSIGN  10009>>IF
     10010>>ASSIGN  10011>>ASSIGN  10012>>ASSIGN
NODECHG
      9654**DCL      9993<>CALL     9993--CALL
NODECHG.FCN
      9655**DCL      9972<<ASSIGN
NODECHG.HOSTNODE
      9660**DCL      9990<<ASSIGN   9992<<ASSIGN
NODECHG.MYNODE
      9658**DCL      9973<<ASSIGN
NODECHG.NODE
      9659**DCL      9974<<ASSIGN
NODECHG.QOS
      9661**DCL      9979<<ASSIGN   9981<<ASSIGN   9985<<ASSIGN   9987<<ASSIGN
NODEINFO
      9678**DCL      9955<<ASSIGN   9959<>CALL     9959--CALL
NODEINFO.FCN
      9679**DCL      9956<<ASSIGN
NODEINFO.MYNAME
      9685**DCL      9958<<ASSIGN
NODEINFO.MYNODE
      9684**DCL      9957<<ASSIGN
OSILINKCHG
      9704**DCL      9998<<ASSIGN  10013<>CALL    10013--CALL
OSILINKCHG.FCN
      9715**DCL      9999<<ASSIGN
OSILINKCHG.MYNODE#
      9735**DCL     10001<<ASSIGN
OSILINKCHG.NODE#
      9737**DCL     10002<<ASSIGN
OSILINKCHG.QOS
      9739**DCL     10010<<ASSIGN
OSILINKCHG.SNPA
      9765**DCL     10011<<ASSIGN
OSILINKCHG.TERMID.TERM
      9796**DCL      9805--REDEF
PL6.E3A0      #003=GJA$GET_CONFIG_INFO File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:55 Page:81   
OSILINKCHG.TERMID.TERM.CHANNEL
      9802**DCL     10012<<ASSIGN
OSILINKCHG.TYPE
      9726**DCL     10000<<ASSIGN
ROUTE$
      9811**DCL      9564--IMP-PTR  9966<<ASSIGN   9967>>ASSIGN   9977>>IF       9981>>ASSIGN   9983>>IF
      9987>>ASSIGN   9988>>IF

PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:82   
      459        1        /*T***********************************************************/
      460        2        /*T*                                                         */
      461        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      462        4        /*T*                                                         */
      463        5        /*T***********************************************************/
      464        6        /*F*    NAME:    GJA$UPDATE_CHNTBL
      465        7
      466        8                PURPOSE: This routine is called when node admin receives
      467        9                         a message from the network manager containing config
      468       10                         info for Node Admin.  The associated GJA$CHNTBL entry
      469       11                         is updated with the new information.
      470       12
      471       13                DESCRIPTION: This routine moves info from KL_NA_INFO into
      472       14                             the GJA$CHNTBL structure.
      473       15
      474       16                CALL: CALL GJA$UPDATE_CHNTBL(KL_NA_INFO,TERMID,KL_HNDCMN_INFO);
      475       17
      476       18                INPUT: KL_NA_INFO - The info from the network manager.
      477       19                       TERMID - Which termid this info is for.
      478       20        */
      479       21        GJA$UPDATE_CHNTBL: PROC(NA_INFO,TERMID,HNDCMN_INFO) ALTRET;
      480       22
      481       23        %INCLUDE GJA_MSG_M;
      482      262        %INCLUDE KH$CHN;
      483      384        %INCLUDE KL_MACRO_C;
      484     3736        %INCLUDE KL_AFCN_C;                     /* 'IGA' Function Codes     */
      485     3837        %INCLUDE LCP_6;
      486     8116        %INCLUDE CP_6_SUBS;
      487     8656        %INCLUDE KHA_FNC_E;
      488     8756                                                /* Args                     */
      489     8757        %KL_NA_INFO (FPTN=NA_INFO,STCLASS=PARAM,ALGN=ALIGNED);
      490     8806        %KL_HNDCMN_INFO(FPTN=HNDCMN_INFO,STCLASS=PARAM,LVL=1,LAST=";",ALGN=ALIGNED);
      491     8886        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      492     8915
      493     8916                                                /* AUTO                     */
      494     8917    1   DCL CHN$ PTR;
      495     8918
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:83   
      496     8919                                                /* BASED Structures         */
      497     8920        %KH$CHN (STCLASS="BASED(CHN$)");
      498     9044
      499     9045                                                /* Entrys                   */
      500     9046    1   DCL GJA$GET_CHNTBL_PTR ENTRY(2) ALTRET;
      501     9047    1   DCL KHA$UPD_CHN ENTRY(2);
      502     9048
      503     9049        %EJECT;
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:84   
      504     9050        /*
      505     9051          Start by calling a routine to get you a pointer to the channel table
      506     9052          entry you will be didling.
      507     9053        */
      508     9054    2        CALL GJA$GET_CHNTBL_PTR(TERMID,CHN$) WHENALTRETURN DO;
      509     9055    2             ALTRETURN;
      510     9056    2           END;
      511     9057        /*
      512     9058          Next just move in whatever information was specified in the
      513     9059          KL_NA_INFO structure.
      514     9060        */
      515     9061    1        IF NA_INFO.ATTRPRES
      516     9062    1        THEN KH$CHN.ATTR=NA_INFO.ATTR;
      517     9063    1        IF NA_INFO.RESPRES
      518     9064    1        THEN KH$CHN.RESOURCE=NA_INFO.RES;
      519     9065    1        IF NA_INFO.SNDSLT ~= '01'B
      520     9066    1        THEN KH$CHN.SNDSLT=NA_INFO.SNDSLT;
      521     9067    1        IF NA_INFO.ECHLGN ~= '01'B
      522     9068    1        THEN KH$CHN.ECHLGN=NA_INFO.ECHLGN;
      523     9069    1        IF NA_INFO.AUTLGN ~= '01'B
      524     9070    1        THEN KH$CHN.AUTLGN=NA_INFO.AUTLGN;
      525     9071    1        IF NA_INFO.PROFILE ~= '01'B
      526     9072    1        THEN KH$CHN.PROFILE = NA_INFO.PROFILE;
      527     9073    1        IF NA_INFO.LGNTIMOUT ~= -1
      528     9074    1        THEN KH$CHN.LGNTIMOUTPRD = NA_INFO.LGNTIMOUT;
      529     9075    1        CALL KHA$UPD_CHN (HNDCMN_INFO,KH$CHN);
      530     9076    1        IF KH$CHN.STT = %KH#CHN_STT_NTRDY
      531     9077    1        THEN
      532     9078    1             KH$CHN.STT = %KH#CHN_STT_UN_INT;
      533     9079    1        RETURN;
      534     9080    1   END GJA$UPDATE_CHNTBL;
      535     9081        %EOD;

PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:85   
--  Include file information  --

   KHA_FNC_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$UPDATE_CHNTBL.

   Procedure GJA$UPDATE_CHNTBL requires 135 words for executable code.
   Procedure GJA$UPDATE_CHNTBL requires 16 words of local(AUTO) storage.

PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:86   

 Object Unit name= GJA$UPDATE_CHNTBL                          File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:55:27.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   135     87  GJA$UPDATE_CHNTBL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  GJA$UPDATE_CHNTBL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GJA$GET_CHNTBL_PTR
         yes           Std       2 KHA$UPD_CHN
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:87   


      459        1        /*T***********************************************************/
      460        2        /*T*                                                         */
      461        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      462        4        /*T*                                                         */
      463        5        /*T***********************************************************/
      464        6        /*F*    NAME:    GJA$UPDATE_CHNTBL
      465        7
      466        8                PURPOSE: This routine is called when node admin receives
      467        9                         a message from the network manager containing config
      468       10                         info for Node Admin.  The associated GJA$CHNTBL entry
      469       11                         is updated with the new information.
      470       12
      471       13                DESCRIPTION: This routine moves info from KL_NA_INFO into
      472       14                             the GJA$CHNTBL structure.
      473       15
      474       16                CALL: CALL GJA$UPDATE_CHNTBL(KL_NA_INFO,TERMID,KL_HNDCMN_INFO);
      475       17
      476       18                INPUT: KL_NA_INFO - The info from the network manager.
      477       19                       TERMID - Which termid this info is for.
      478       20        */
      479       21        GJA$UPDATE_CHNTBL: PROC(NA_INFO,TERMID,HNDCMN_INFO) ALTRET;

     21   0 000000  D380 0000 0000  xent GJA$UPDATE_CHNT*LNJ,B5   X6A_AUTO_3
          0 000003       0010 0003                       DC       16,3

      480       22
      481       23        %INCLUDE GJA_MSG_M;
      482      262        %INCLUDE KH$CHN;
      483      384        %INCLUDE KL_MACRO_C;
      484     3736        %INCLUDE KL_AFCN_C;                     /* 'IGA' Function Codes     */
      485     3837        %INCLUDE LCP_6;
      486     8116        %INCLUDE CP_6_SUBS;
      487     8656        %INCLUDE KHA_FNC_E;
      488     8756                                                /* Args                     */
      489     8757        %KL_NA_INFO (FPTN=NA_INFO,STCLASS=PARAM,ALGN=ALIGNED);
      490     8806        %KL_HNDCMN_INFO(FPTN=HNDCMN_INFO,STCLASS=PARAM,LVL=1,LAST=";",ALGN=ALIGNED);
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:88   
      491     8886        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      492     8915
      493     8916                                                /* AUTO                     */
      494     8917    1   DCL CHN$ PTR;
      495     8918
      496     8919                                                /* BASED Structures         */
      497     8920        %KH$CHN (STCLASS="BASED(CHN$)");
      498     9044
      499     9045                                                /* Entrys                   */
      500     9046    1   DCL GJA$GET_CHNTBL_PTR ENTRY(2) ALTRET;
      501     9047    1   DCL KHA$UPD_CHN ENTRY(2);
      502     9048
      503     9049        %EJECT;
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:89   
      504     9050        /*
      505     9051          Start by calling a routine to get you a pointer to the channel table
      506     9052          entry you will be didling.
      507     9053        */
      508     9054    2        CALL GJA$GET_CHNTBL_PTR(TERMID,CHN$) WHENALTRETURN DO;

   9054   0 000005  EBC7 000A                            LAB,B6   CHN$,AUTO
          0 000007  EFC7 000E                            STB,B6   CHN$+4,AUTO
          0 000009  DCC7 0006                            LDB,B5   @TERMID,AUTO
          0 00000B  DFC7 000C                            STB,B5   CHN$+2,AUTO
          0 00000D  BBC7 000C                            LAB,B3   CHN$+2,AUTO
          0 00000F  CBF0 0200                            LAB,B4   512,IMO
          0 000011  E380 0000 0000  xent                 LNJ,B6   GJA$GET_CHNTBL_PTR
          0 000014       0003                            DC       s:9055,PREL
          0 000015  0F81 0004                            B        s:9061,PREL

      509     9055    2             ALTRETURN;

   9055   0 000017  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      510     9056    2           END;
      511     9057        /*
      512     9058          Next just move in whatever information was specified in the
      513     9059          KL_NA_INFO structure.
      514     9060        */
      515     9061    1        IF NA_INFO.ATTRPRES

   9061   0 00001A  ECC7 0004                            LDB,B6   @NA_INFO,AUTO
          0 00001C  8286                                 LB,'0040'X        ,B6
          0 00001D       0040
          0 00001E  0581 0007                            BBF      s:9063,PREL

      516     9062    1        THEN KH$CHN.ATTR=NA_INFO.ATTR;

   9062   0 000020  DCC7 000A                            LDB,B5   CHN$,AUTO
          0 000022  E846 0002                            LDR,R6   2,B6
          0 000024  EF45 0005                            STR,R6   5,B5
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:90   

      517     9063    1        IF NA_INFO.RESPRES

   9063   0 000026  8286                                 LB,'0080'X        ,B6
   9063   0 000027       0080
          0 000028  0581 0008                            BBF      s:9065,PREL

      518     9064    1        THEN KH$CHN.RESOURCE=NA_INFO.RES;

   9064   0 00002A  AB86                                 LAB,B2   ,B6
          0 00002B  2C06                                 LDV,R2   6
          0 00002C  6C02                                 LDV,R6   2
          0 00002D  BCC7 000A                            LDB,B3   CHN$,AUTO
          0 00002F  3C08                                 LDV,R3   8
          0 000030  0008                                 MMM

      519     9065    1        IF NA_INFO.SNDSLT ~= '01'B

   9065   0 000031  E806                                 LDR,R6   ,B6
          0 000032  E570 C000                            AND,R6   -16384,IMO
          0 000034  E970 4000                            CMR,R6   16384,IMO
          0 000036  0901 0008                            BE       s:9067,PREL

      520     9066    1        THEN KH$CHN.SNDSLT=NA_INFO.SNDSLT;

   9066   0 000038  D806                                 LDR,R5   ,B6
          0 000039  5045                                 SOR,R5   5
          0 00003A  DCC7 000A                            LDB,B5   CHN$,AUTO
          0 00003C  DAC5 0009                            SRM,R5,'0400'X    9,B5
          0 00003E       0400

      521     9067    1        IF NA_INFO.ECHLGN ~= '01'B

   9067   0 00003F  E806                                 LDR,R6   ,B6
          0 000040  6002                                 SOL,R6   2
          0 000041  E570 C000                            AND,R6   -16384,IMO
          0 000043  E970 4000                            CMR,R6   16384,IMO
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:91   
          0 000045  0901 0008                            BE       s:9069,PREL

      522     9068    1        THEN KH$CHN.ECHLGN=NA_INFO.ECHLGN;

   9068   0 000047  D806                                 LDR,R5   ,B6
          0 000048  5044                                 SOR,R5   4
          0 000049  DCC7 000A                            LDB,B5   CHN$,AUTO
          0 00004B  DAC5 0009                            SRM,R5,'0200'X    9,B5
          0 00004D       0200

      523     9069    1        IF NA_INFO.AUTLGN ~= '01'B

   9069   0 00004E  E806                                 LDR,R6   ,B6
          0 00004F  6004                                 SOL,R6   4
          0 000050  E570 C000                            AND,R6   -16384,IMO
          0 000052  E970 4000                            CMR,R6   16384,IMO
          0 000054  0901 0007                            BE       s:9071,PREL

      524     9070    1        THEN KH$CHN.AUTLGN=NA_INFO.AUTLGN;

   9070   0 000056  D806                                 LDR,R5   ,B6
          0 000057  5049                                 SOR,R5   9
          0 000058  DCC7 000A                            LDB,B5   CHN$,AUTO
          0 00005A  DA85                                 SRM,R5,'0004'X    ,B5
          0 00005B       0004

      525     9071    1        IF NA_INFO.PROFILE ~= '01'B

   9071   0 00005C  E806                                 LDR,R6   ,B6
          0 00005D  600C                                 SOL,R6   12
          0 00005E  E570 C000                            AND,R6   -16384,IMO
          0 000060  E970 4000                            CMR,R6   16384,IMO
          0 000062  0901 0007                            BE       s:9073,PREL

      526     9072    1        THEN KH$CHN.PROFILE = NA_INFO.PROFILE;

   9072   0 000064  D806                                 LDR,R5   ,B6
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:92   
          0 000065  5043                                 SOR,R5   3
          0 000066  DCC7 000A                            LDB,B5   CHN$,AUTO
          0 000068  DA85                                 SRM,R5,'0001'X    ,B5
          0 000069       0001

      527     9073    1        IF NA_INFO.LGNTIMOUT ~= -1

   9073   0 00006A  E846 0001                            LDR,R6   1,B6
          0 00006C  6DFF                                 CMV,R6   -1
          0 00006D  0901 0005                            BE       s:9075,PREL

      528     9074    1        THEN KH$CHN.LGNTIMOUTPRD = NA_INFO.LGNTIMOUT;

   9074   0 00006F  DCC7 000A                            LDB,B5   CHN$,AUTO
          0 000071  E7C5 000A                            STH,R6   10,B5

      529     9075    1        CALL KHA$UPD_CHN (HNDCMN_INFO,KH$CHN);

   9075   0 000073  BBC7 0008                            LAB,B3   @HNDCMN_INFO,AUTO
          0 000075  CBF0 0200                            LAB,B4   512,IMO
          0 000077  E380 0000 0000  xent                 LNJ,B6   KHA$UPD_CHN
          0 00007A       0001                            DC       s:9076,PREL

      530     9076    1        IF KH$CHN.STT = %KH#CHN_STT_NTRDY

   9076   0 00007B  ECC7 000A                            LDB,B6   CHN$,AUTO
          0 00007D  E2C6 0001                            LLH,R6   1,B6
          0 00007F  6D0A                                 CMV,R6   10
          0 000080  0981 0003                            BNE      s:9079,PREL

      531     9077    1        THEN
      532     9078    1             KH$CHN.STT = %KH#CHN_STT_UN_INT;

   9078   0 000082  87C6 0001                            CLH      1,B6

      533     9079    1        RETURN;

PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:93   
   9079   0 000084  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      534     9080    1   END GJA$UPDATE_CHNTBL;
      535     9081        %EOD;

PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:94   
--  Include file information  --

   KHA_FNC_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$UPDATE_CHNTBL.
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:95   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w PTR         r     1 @HNDCMN_INFO               4-0-0/w PTR         r     1 @NA_INFO
     6-0-0/w PTR         r     1 @TERMID                    A-0-0/w PTR         r     1 CHN$
    *0-0-0/w STRC(144)   r     1 HNDCMN_INFO               *0-0-0/w STRC(64)    r     1 NA_INFO
    *0-0-0/w STRC(128)   r     1 TERMID

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN


   Procedure GJA$UPDATE_CHNTBL requires 135 words for executable code.
   Procedure GJA$UPDATE_CHNTBL requires 16 words of local(AUTO) storage.
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:96   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:97   
          MINI XREF LISTING

CHN$
      8917**DCL      8935--IMP-PTR  9054<>CALL     9062>>ASSIGN   9064>>ASSIGN   9066>>ASSIGN   9068>>ASSIGN
      9070>>ASSIGN   9072>>ASSIGN   9074>>ASSIGN   9075>>CALL     9076>>IF       9078>>ASSIGN
GJA$GET_CHNTBL_PTR
      9046**DCL-ENT  9054--CALL
HNDCMN_INFO
      8822**DCL        21--PROC     9075<>CALL
KH$CHN
      8935**DCL      9075<>CALL
KH$CHN.ATTR
      8968**DCL      9062<<ASSIGN
KH$CHN.AUTLGN
      8946**DCL      9070<<ASSIGN
KH$CHN.ECHLGN
      8994**DCL      9068<<ASSIGN
KH$CHN.LGNTIMOUTPRD
      9002**DCL      9074<<ASSIGN
KH$CHN.PROFILE
      8947**DCL      9072<<ASSIGN
KH$CHN.RESOURCE
      8963**DCL      9064<<ASSIGN
KH$CHN.SNDSLT
      8994**DCL      9066<<ASSIGN
KH$CHN.STT
      8951**DCL      9076>>IF       9078<<ASSIGN
KH$CHN.TERMID.TERM
      9031**DCL      9040--REDEF
KHA$UPD_CHN
      9047**DCL-ENT  9075--CALL
NA_INFO
      8773**DCL        21--PROC
NA_INFO.ATTR
PL6.E3A0      #004=GJA$UPDATE_CHNTBL File=GJA$SUBS.:E05TSI                       TUE 07/29/97 21:55 Page:98   
      8802**DCL      9062>>ASSIGN
NA_INFO.ATTRPRES
      8788**DCL      9061>>IF
NA_INFO.AUTLGN
      8782**DCL      9069>>IF       9070>>ASSIGN
NA_INFO.ECHLGN
      8781**DCL      9067>>IF       9068>>ASSIGN
NA_INFO.LGNTIMOUT
      8801**DCL      9073>>IF       9074>>ASSIGN
NA_INFO.PROFILE
      8790**DCL      9071>>IF       9072>>ASSIGN
NA_INFO.RES
      8804**DCL      9064>>ASSIGN
NA_INFO.RESPRES
      8787**DCL      9063>>IF
NA_INFO.SNDSLT
      8780**DCL      9065>>IF       9066>>ASSIGN
TERMID
      8900**DCL        21--PROC     9054<>CALL
TERMID.TERM
      8904**DCL      8913--REDEF

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:99   
      536        1        /*T***********************************************************/
      537        2        /*T*                                                         */
      538        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      539        4        /*T*                                                         */
      540        5        /*T***********************************************************/
      541        6        /*F* NAME:  GJA$BLD_CTX
      542        7             PURPOSE: This routine is called to build a new context block for
      543        8                      a specified terminal id.  The new context block is linked
      544        9                      into the context chains.  Then we send a KL_LINPROINFO
      545       10                      message to Node Admin to inform him of the new element.
      546       11             DESCRIPTION:  This routine uses the info in the TERMID portion
      547       12                           of the message to determine where to hang the new
      548       13                           context block.  Then we do a RQSCNFG to get the CONFIG
      549       14                           info for the specified termid.
      550       15             CALL:   CALL GJA$BLD_CTX(TERMID,CTX$,DORQSCHN) ALTRET(label);
      551       16             INPUT:  TERMID - The termid we want to build context for.  See the
      552       17                              B$TERMINAL_ID macro in KL_MACRO_C.
      553       18             OUTPUT: CTX$ - The pointer to the KH$CHN structure that was just inserted
      554       19                            into the chains.
      555       20                                                                                      */
      556       21        GJA$BLD_CTX: PROC(TERMID,CTX$,DORQSCHN) ALTRET;
      557       22        /**/
      558       23        %INCLUDE LCP_6;
      559     4302        %INCLUDE CP_6_SUBS;
      560     4842        %INCLUDE KH$CHN;
      561     4964        %INCLUDE KL_MACRO_C;
      562     8316        %INCLUDE KL_AFCN_C;
      563     8417        /**/
      564     8418        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      565     8447    1   DCL CTX$ PTR;
      566     8448    1   DCL DORQSCHN BIT(1) ALIGNED;
      567     8449        /**/
      568     8450    1   DCL GJA$GET_CHNTBL_PTR ENTRY(2) ALTRET;
      569     8451    1   DCL GJA$NETWORK_MANAGER ENTRY(2) ALTRET;
      570     8452        /**/
      571     8453        %KH$CHN (NAME=CHANCTX,STCLASS="BASED(LVL1$)");
      572     8577        %KH$CHN (NAME=LVL2CTX,STCLASS="BASED(LVL2$)");
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:100  
      573     8701        %KH$CHN (NAME=LVL3CTX,STCLASS="BASED(LVL3$)");
      574     8825        %KH$CHN (NAME=NEWCTX,STCLASS="BASED(NEW$)");
      575     8949        %KH$CHN (NAME=CTX_C,STCLASS=CONSTANT);
      576     9073        /**/
      577     9074    1   DCL NEW$ PTR;
      578     9075    1   DCL NEW BIT(1);
      579     9076    1   DCL INIT$ PTR;
      580     9077    1   DCL SVLNK$ PTR;
      581     9078    1   DCL SVSUB$ PTR;
      582     9079        %B$TERMINAL_ID (FPTN=TERMINAL_ID,STCLASS=AUTO,ALGN=ALIGNED);
      583     9108    1   DCL LVL1$ PTR;
      584     9109    1   DCL LVL2$ PTR;
      585     9110    1   DCL LVL3$ PTR;
      586     9111    1   DCL CHAN UBIN;
      587     9112    1   DCL NUM UBIN;
      588     9113        %KL_RQSCHN (FPTN=RQSCHN,STCLASS=AUTO);
      589     9216        /**/
      590     9217        /**/
      591     9218        %KL_RQSCHN (FPTN=GJA_RQSCHN,STCLASS=SYMREF);
      592     9321    1   DCL GJA_CHNFREE$ PTR SYMREF;
      593     9322    1   DCL GJA_CHNLOW UBIN SYMREF;
      594     9323    1   DCL GJA_CHNHI UBIN SYMREF;
      595     9324    1   DCL GJA_CHNLOW$ PTR SYMREF;
      596     9325    1   DCL GJA_UID_NM UBIN(32) SYMREF;
      597     9326
      598     9327        %EJECT;
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:101  
      599     9328    1        CTX$ = ADDR(NIL);
      600     9329    1        IF TERMID.LEV = %TERMINAL_ID_LEV_CHAN#
      601     9330    1        THEN ALTRETURN;
      602     9331    1        CHAN = TERMID.TERM.CHANNEL;
      603     9332    2        IF CHAN > GJA_CHNHI OR CHAN < GJA_CHNLOW THEN DO;
      604     9333    2             ALTRETURN;
      605     9334    2           END;                            /* IF OUT OF RANGE          */
      606     9335    1        LVL1$ = PINCRW(GJA_CHNLOW$,SIZEW(CHANCTX)*(CHAN/128));
      607     9336    2        IF CHANCTX.CHNBIT0_9 = 0 THEN DO;
      608     9337    2             ALTRETURN;
      609     9338    2           END;                            /* IF NUM = 0               */
      610     9339    1        IF TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN#
      611     9340    2        THEN DO;
      612     9341    2             TERMINAL_ID = TERMID;
      613     9342    2             TERMINAL_ID.TERM.SUBSUBDEVICE = 0;
      614     9343    2             TERMINAL_ID.LEV = %TERMINAL_ID_LEV_SUBCHAN#;
      615     9344    2             CALL GJA$GET_CHNTBL_PTR(TERMINAL_ID,LVL2$)
      616     9345    3             WHENALTRETURN DO;
      617     9346    4                  CALL GJA$BLD_CTX(TERMINAL_ID,LVL2$,'0'B) WHENALTRETURN DO;
      618     9347    4                       ALTRETURN;
      619     9348    4                     END;
      620     9349    3                END;
      621     9350    2           END;
      622     9351
      623     9352    1        SVLNK$ = ADDR(NIL);
      624     9353    1        SVSUB$ = ADDR(NIL);
      625     9354    1        CALL GJA$GET_CHNTBL_PTR(TERMID,NEW$)
      626     9355    2        WHENRETURN DO;
      627     9356    2             NEW = '0'B;
      628     9357    2             SVLNK$ = NEWCTX.LNK$;
      629     9358    2             SVSUB$ = NEWCTX.SUB$;
      630     9359    2           END;
      631     9360    2        WHENALTRETURN DO;
      632     9361    2             IF GJA_CHNFREE$ = ADDR(NIL) THEN
      633     9362    2                  ALTRETURN;
      634     9363    2             NEW = '1'B;
      635     9364    2             NEW$ = GJA_CHNFREE$;
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:102  
      636     9365    2             GJA_CHNFREE$ = NEWCTX.LNK$;
      637     9366    2           END;
      638     9367    1        NEWCTX = CTX_C;
      639     9368    1        TERMINAL_ID = TERMID;
      640     9369    1        IF TERMINAL_ID.LEV = %TERMINAL_ID_LEV_SUBCHAN#
      641     9370    1        THEN
      642     9371    1             TERMINAL_ID.TERM.SUBDEVICE = 0;
      643     9372    1        ELSE
      644     9373    1             TERMINAL_ID.TERM.SUBSUBDEVICE = 0;
      645     9374    1        CALL GJA$GET_CHNTBL_PTR(TERMINAL_ID,INIT$)
      646     9375    2        WHENRETURN DO;
      647     9376    2             NEWCTX = INIT$->CHANCTX;
      648     9377    2           END;
      649     9378    1        NEWCTX.LNK$ = SVLNK$;
      650     9379    1        NEWCTX.SUB$ = SVSUB$;
      651     9380    1        NEWCTX.HAND$ = CHANCTX.HAND$;
      652     9381    1        NEWCTX.SYSID = CHANCTX.SYSID;
      653     9382    1        NEWCTX.LINSPD = CHANCTX.LINSPD;
      654     9383    1        NEWCTX.AUTBAD = CHANCTX.AUTBAD;
      655     9384    1        NEWCTX.DRPDTR = CHANCTX.DRPDTR;
      656     9385    1        NEWCTX.BLOCK = CHANCTX.BLOCK;
      657     9386    1        NEWCTX.UNBLOCK = CHANCTX.UNBLOCK;
      658     9387    1        NEWCTX.TPTIMOUTPRD = CHANCTX.TPTIMOUTPRD;
      659     9388    1        NEWCTX.REDTIMOUTPRD = CHANCTX.REDTIMOUTPRD;
      660     9389    1        NEWCTX.LGNTIMOUTPRD = CHANCTX.LGNTIMOUTPRD;
      661     9390    1        IF NEW
      662     9391    2        THEN DO;
      663     9392
      664     9393                                           /* Figure out where to hang this block     */
      665     9394    3             IF TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN# THEN DO;
      666     9395    4                  IF CHANCTX.SUB$ = ADDR(NIL) THEN DO;
      667     9396    4                       CHANCTX.SUB$ = NEW$;
      668     9397    4                     END;                  /* IF SUB$ = ADDR(NIL)      */
      669     9398    4                  ELSE DO;                 /* Run the chain            */
      670     9399    4                       LVL2$ = CHANCTX.SUB$;
      671     9400    5                       DO WHILE(LVL2CTX.LNK$ ~= ADDR(NIL));
      672     9401    5                            LVL2$ = LVL2CTX.LNK$;
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:103  
      673     9402    5                          END;             /* DO WHILE                 */
      674     9403    4                       LVL2CTX.LNK$ = NEW$;
      675     9404    4                     END;                  /* ELSE                     */
      676     9405    3                  NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBDEVICE;
      677     9406    3                END;                       /* IF LEV = SUBCHAN#        */
      678     9407    3             ELSE DO;                      /* It's a level 3           */
      679     9408    3                  LVL2$ = CHANCTX.SUB$;
      680     9409    3                  IF LVL2$ ~= ADDR(NIL)
      681     9410    3                  THEN NUM = LVL2CTX.TERMID.TERM.SUBDEVICE;
      682     9411    4                  DO WHILE(NUM ~= TERMID.TERM.SUBDEVICE AND LVL2$ ~= ADDR(NIL));
      683     9412    4                       LVL2$ = LVL2CTX.LNK$;
      684     9413    4                       IF LVL2$ ~= ADDR(NIL)
      685     9414    4                       THEN NUM = LVL2CTX.TERMID.TERM.SUBDEVICE;
      686     9415    4                     END;                  /* DO WHILE                 */
      687     9416    4                  IF LVL2$ = ADDR(NIL) THEN DO;
      688     9417    4                       ALTRETURN;
      689     9418    4                     END;                  /* IF LVL2$ = ADDR(NIL)     */
      690     9419    4                  IF LVL2CTX.SUB$ = ADDR(NIL) THEN DO;
      691     9420    4                       LVL2CTX.SUB$ = NEW$;
      692     9421    4                     END;                  /* IF SUB$ = ADDR(NIL)      */
      693     9422    4                  ELSE DO;                 /* Run the chain            */
      694     9423    4                       LVL3$ = LVL2CTX.SUB$;
      695     9424    5                       DO WHILE(LVL3CTX.LNK$ ~= ADDR(NIL));
      696     9425    5                            LVL3$ = LVL3CTX.LNK$;
      697     9426    5                          END;             /* DO WHILE                 */
      698     9427    4                       LVL3CTX.LNK$ = NEW$;
      699     9428    4                     END;                  /* ELSE                     */
      700     9429    3                  NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBSUBDEVICE;
      701     9430    3                END;                       /* ELSE level 3             */
      702     9431    2           END;
      703     9432    1   DO_RQSCHN: ;
      704     9433    2        DO CASE (TERMID.LEV);
      705     9434
      706     9435    2        CASE (%TERMINAL_ID_LEV_SUBCHAN#);
      707     9436    2           NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBDEVICE;
      708     9437
      709     9438    2        CASE (%TERMINAL_ID_LEV_SUBSUBCHAN#);
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:104  
      710     9439    2           NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBSUBDEVICE;
      711     9440
      712     9441    2        END;
      713     9442    1        NEWCTX.TERMID = TERMID;
      714     9443    1        NEWCTX.STT = %KH#CHN_STT_DSB;
      715     9444    1        CTX$ = NEW$;
      716     9445
      717     9446    1        IF DORQSCHN
      718     9447    2        THEN DO;
      719     9448    2             RQSCHN = GJA_RQSCHN;
      720     9449    2             IF TERMID.TERM.TERM_NAME ~= ' ' THEN
      721     9450    3             DO;
      722     9451    3                  RQSCHN.TERMINAL_ID = TERMID;
      723     9452    3                  RQSCHN.TERMINAL_ID.TERM.TERM_NAME = ' ';
      724     9453    3                  RQSCHN.SCNDCNFG = '1'B;
      725     9454    3                  CALL GJA$NETWORK_MANAGER (RQSCHN,SIZEC(RQSCHN));
      726     9455    3                END;
      727     9456    2             RQSCHN = GJA_RQSCHN;
      728     9457    2             RQSCHN.TERMINAL_ID = TERMID;
      729     9458    2             RQSCHN.CONFIG = '1'B;
      730     9459    2             CALL GJA$NETWORK_MANAGER (RQSCHN,SIZEC(RQSCHN));
      731     9460    2           END;
      732     9461
      733     9462    1        RETURN;
      734     9463    1   END GJA$BLD_CTX;
      735     9464        %EOD;

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:105  
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$BLD_CTX.

   Procedure GJA$BLD_CTX requires 597 words for executable code.
   Procedure GJA$BLD_CTX requires 56 words of local(AUTO) storage.

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:106  

 Object Unit name= GJA$BLD_CTX                                File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:55:49.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     32     20  GJA$BLD_CTX
    1   Proc  even  none   597    255  GJA$BLD_CTX
    2  RoData even  none     1      1  GJA$BLD_CTX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  GJA$BLD_CTX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GJA$GET_CHNTBL_PTR
 yes     yes           Std       2 GJA$NETWORK_MANAGER
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_AALT
                       nStd      0 X6C_ALRZ
                       nStd      0 X6A_ARET
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:107  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_RQSCHN                            GJA_CHNFREE$                          GJA_CHNLOW
     GJA_CHNHI                             GJA_CHNLOW$                      r    G$ROS$
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:108  


      536        1        /*T***********************************************************/
      537        2        /*T*                                                         */
      538        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      539        4        /*T*                                                         */
      540        5        /*T***********************************************************/
      541        6        /*F* NAME:  GJA$BLD_CTX
      542        7             PURPOSE: This routine is called to build a new context block for
      543        8                      a specified terminal id.  The new context block is linked
      544        9                      into the context chains.  Then we send a KL_LINPROINFO
      545       10                      message to Node Admin to inform him of the new element.
      546       11             DESCRIPTION:  This routine uses the info in the TERMID portion
      547       12                           of the message to determine where to hang the new
      548       13                           context block.  Then we do a RQSCNFG to get the CONFIG
      549       14                           info for the specified termid.
      550       15             CALL:   CALL GJA$BLD_CTX(TERMID,CTX$,DORQSCHN) ALTRET(label);
      551       16             INPUT:  TERMID - The termid we want to build context for.  See the
      552       17                              B$TERMINAL_ID macro in KL_MACRO_C.
      553       18             OUTPUT: CTX$ - The pointer to the KH$CHN structure that was just inserted
      554       19                            into the chains.
      555       20                                                                                      */
      556       21        GJA$BLD_CTX: PROC(TERMID,CTX$,DORQSCHN) ALTRET;

     21   1 000000  D380 0000 0000  xent GJA$BLD_CTX     LNJ,B5   X6A_AUTO_3
          1 000003       0038 0003                       DC       56,3

      557       22        /**/
      558       23        %INCLUDE LCP_6;
      559     4302        %INCLUDE CP_6_SUBS;
      560     4842        %INCLUDE KH$CHN;
      561     4964        %INCLUDE KL_MACRO_C;
      562     8316        %INCLUDE KL_AFCN_C;
      563     8417        /**/
      564     8418        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      565     8447    1   DCL CTX$ PTR;
      566     8448    1   DCL DORQSCHN BIT(1) ALIGNED;
      567     8449        /**/
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:109  
      568     8450    1   DCL GJA$GET_CHNTBL_PTR ENTRY(2) ALTRET;
      569     8451    1   DCL GJA$NETWORK_MANAGER ENTRY(2) ALTRET;
      570     8452        /**/
      571     8453        %KH$CHN (NAME=CHANCTX,STCLASS="BASED(LVL1$)");
      572     8577        %KH$CHN (NAME=LVL2CTX,STCLASS="BASED(LVL2$)");
      573     8701        %KH$CHN (NAME=LVL3CTX,STCLASS="BASED(LVL3$)");
      574     8825        %KH$CHN (NAME=NEWCTX,STCLASS="BASED(NEW$)");
      575     8949        %KH$CHN (NAME=CTX_C,STCLASS=CONSTANT);
      576     9073        /**/
      577     9074    1   DCL NEW$ PTR;
      578     9075    1   DCL NEW BIT(1);
      579     9076    1   DCL INIT$ PTR;
      580     9077    1   DCL SVLNK$ PTR;
      581     9078    1   DCL SVSUB$ PTR;
      582     9079        %B$TERMINAL_ID (FPTN=TERMINAL_ID,STCLASS=AUTO,ALGN=ALIGNED);
      583     9108    1   DCL LVL1$ PTR;
      584     9109    1   DCL LVL2$ PTR;
      585     9110    1   DCL LVL3$ PTR;
      586     9111    1   DCL CHAN UBIN;
      587     9112    1   DCL NUM UBIN;
      588     9113        %KL_RQSCHN (FPTN=RQSCHN,STCLASS=AUTO);
      589     9216        /**/
      590     9217        /**/
      591     9218        %KL_RQSCHN (FPTN=GJA_RQSCHN,STCLASS=SYMREF);
      592     9321    1   DCL GJA_CHNFREE$ PTR SYMREF;
      593     9322    1   DCL GJA_CHNLOW UBIN SYMREF;
      594     9323    1   DCL GJA_CHNHI UBIN SYMREF;
      595     9324    1   DCL GJA_CHNLOW$ PTR SYMREF;
      596     9325    1   DCL GJA_UID_NM UBIN(32) SYMREF;
      597     9326
      598     9327        %EJECT;
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:110  
      599     9328    1        CTX$ = ADDR(NIL);

   9328   1 000005  EB80 0000 0000                       LAB,B6   0
          1 000008  DCC7 0006                            LDB,B5   @CTX$,AUTO
          1 00000A  EF85                                 STB,B6   ,B5

      600     9329    1        IF TERMID.LEV = %TERMINAL_ID_LEV_CHAN#

   9329   1 00000B  CCC7 0004                            LDB,B4   @TERMID,AUTO
          1 00000D  E804                                 LDR,R6   ,B4
          1 00000E  E570 00FF                            AND,R6   255,IMO
          1 000010  6D01                                 CMV,R6   1
          1 000011  0981 0004                            BNE      s:9331,PREL

      601     9330    1        THEN ALTRETURN;

   9330   1 000013  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      602     9331    1        CHAN = TERMID.TERM.CHANNEL;

   9331   1 000016  D844 0001                            LDR,R5   1,B4
          1 000018  DF47 0021                            STR,R5   CHAN,AUTO

      603     9332    2        IF CHAN > GJA_CHNHI OR CHAN < GJA_CHNLOW THEN DO;

   9332   1 00001A  D900 0000 0000  xsym                 CMR,R5   GJA_CHNHI
          1 00001D  0301 0006                            BG       s:9333,PREL
          1 00001F  D900 0000 0000  xsym                 CMR,R5   GJA_CHNLOW
          1 000022  0281 0004                            BGE      s:9335,PREL

      604     9333    2             ALTRETURN;

   9333   1 000024  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      605     9334    2           END;                            /* IF OUT OF RANGE          */
      606     9335    1        LVL1$ = PINCRW(GJA_CHNLOW$,SIZEW(CHANCTX)*(CHAN/128));

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:111  
   9335   1 000027  5047                                 SOR,R5   7
          1 000028  F855                                 LDR,R7   R5
          1 000029  6C00                                 LDV,R6   0
          1 00002A  7085                                 DOL,R7   5
          1 00002B  8400 0000 0000  xsym                 AID      GJA_CHNLOW$
          1 00002E  8D47 001B                            SDI      LVL1$,AUTO

      607     9336    2        IF CHANCTX.CHNBIT0_9 = 0 THEN DO;

   9336   1 000030  BCC7 001B                            LDB,B3   LVL1$,AUTO
          1 000032  8283                                 LB,'FFC0'X        ,B3
          1 000033       FFC0
          1 000034  0501 0004                            BBT      s:9339,PREL

      608     9337    2             ALTRETURN;

   9337   1 000036  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      609     9338    2           END;                            /* IF NUM = 0               */
      610     9339    1        IF TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN#

   9339   1 000039  D804                                 LDR,R5   ,B4
          1 00003A  D570 00FF                            AND,R5   255,IMO
          1 00003C  5D03                                 CMV,R5   3
          1 00003D  0981 0037                            BNE      s:9352,PREL

      611     9340    2        THEN DO;

      612     9341    2             TERMINAL_ID = TERMID;

   9341   1 00003F  AB84                                 LAB,B2   ,B4
          1 000040  2C00                                 LDV,R2   0
          1 000041  6C10                                 LDV,R6   16
          1 000042  BB87                                 LAB,B3   ,AUTO
          1 000043  3C26                                 LDV,R3   38
          1 000044  0008                                 MMM

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:112  
      613     9342    2             TERMINAL_ID.TERM.SUBSUBDEVICE = 0;

   9342   1 000045  8747 0016                            CL       TERMINAL_ID+3,AUTO

      614     9343    2             TERMINAL_ID.LEV = %TERMINAL_ID_LEV_SUBCHAN#;

   9343   1 000047  6C02                                 LDV,R6   2
          1 000048  EAC7 0013                            SRM,R6,'00FF'X    TERMINAL_ID,AUTO
          1 00004A       00FF

      615     9344    2             CALL GJA$GET_CHNTBL_PTR(TERMINAL_ID,LVL2$)

   9344   1 00004B  EBC7 001D                            LAB,B6   LVL2$,AUTO
          1 00004D  EFC7 0034                            STB,B6   RQSCHN+17,AUTO
          1 00004F  9BC7 0013                            LAB,B1   TERMINAL_ID,AUTO
          1 000051  9FC7 0032                            STB,B1   RQSCHN+15,AUTO
          1 000053  BBC7 0032                            LAB,B3   RQSCHN+15,AUTO
          1 000055  CBF0 0200                            LAB,B4   512,IMO
          1 000057  E380 0000 0000  xent                 LNJ,B6   GJA$GET_CHNTBL_PTR
          1 00005A       0003                            DC       s:9346,PREL
          1 00005B  0F81 0019                            B        s:9352,PREL

      616     9345    3             WHENALTRETURN DO;

      617     9346    4                  CALL GJA$BLD_CTX(TERMINAL_ID,LVL2$,'0'B) WHENALTRETURN DO;

   9346   1 00005D  EBF0 0000                            LAB,B6   0,IMO
          1 00005F  EFC7 0036                            STB,B6   RQSCHN+19,AUTO
          1 000061  DBC7 001D                            LAB,B5   LVL2$,AUTO
          1 000063  DFC7 0034                            STB,B5   RQSCHN+17,AUTO
          1 000065  CBC7 0013                            LAB,B4   TERMINAL_ID,AUTO
          1 000067  CFC7 0032                            STB,B4   RQSCHN+15,AUTO
          1 000069  BBC7 0032                            LAB,B3   RQSCHN+15,AUTO
          1 00006B  CBF0 0300                            LAB,B4   768,IMO
          1 00006D  E3C0 FF92                            LNJ,B6   s:21,PREL
          1 00006F       0003                            DC       s:9347,PREL
          1 000070  0F81 0004                            B        s:9352,PREL
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:113  

      618     9347    4                       ALTRETURN;

   9347   1 000072  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      619     9348    4                     END;
      620     9349    3                END;

      621     9350    2           END;

      622     9351
      623     9352    1        SVLNK$ = ADDR(NIL);

   9352   1 000075  EB80 0000 0000                       LAB,B6   0
          1 000078  EFC7 000F                            STB,B6   SVLNK$,AUTO

      624     9353    1        SVSUB$ = ADDR(NIL);

   9353   1 00007A  DB80 0000 0000                       LAB,B5   0
          1 00007D  DFC7 0011                            STB,B5   SVSUB$,AUTO

      625     9354    1        CALL GJA$GET_CHNTBL_PTR(TERMID,NEW$)

   9354   1 00007F  CBC7 000A                            LAB,B4   NEW$,AUTO
          1 000081  CFC7 0034                            STB,B4   RQSCHN+17,AUTO
          1 000083  BCC7 0004                            LDB,B3   @TERMID,AUTO
          1 000085  BFC7 0032                            STB,B3   RQSCHN+15,AUTO
          1 000087  BBC7 0032                            LAB,B3   RQSCHN+15,AUTO
          1 000089  CBF0 0200                            LAB,B4   512,IMO
          1 00008B  E380 0000 0000  xent                 LNJ,B6   GJA$GET_CHNTBL_PTR
          1 00008E       000F                            DC       s:9361,PREL

      626     9355    2        WHENRETURN DO;

      627     9356    2             NEW = '0'B;

   9356   1 00008F  8747 000C                            CL       NEW,AUTO
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:114  

      628     9357    2             SVLNK$ = NEWCTX.LNK$;

   9357   1 000091  ECC7 000A                            LDB,B6   NEW$,AUTO
          1 000093  DCC6 001C                            LDB,B5   28,B6
          1 000095  DFC7 000F                            STB,B5   SVLNK$,AUTO

      629     9358    2             SVSUB$ = NEWCTX.SUB$;

   9358   1 000097  CCC6 001A                            LDB,B4   26,B6
          1 000099  CFC7 0011                            STB,B4   SVSUB$,AUTO

      630     9359    2           END;

   9359   1 00009B  0F81 0016                            B        s:9367,PREL

      631     9360    2        WHENALTRETURN DO;

      632     9361    2             IF GJA_CHNFREE$ = ADDR(NIL) THEN

   9361   1 00009D  8D80 0000 0000  xsym                 CMN      GJA_CHNFREE$
          1 0000A0  0981 0004                            BNE      s:9363,PREL

      633     9362    2                  ALTRETURN;

   9362   1 0000A2  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      634     9363    2             NEW = '1'B;

   9363   1 0000A5  8947 000C                            LBT,'8000'X       NEW,AUTO
   9363   1 0000A7       8000

      635     9364    2             NEW$ = GJA_CHNFREE$;

   9364   1 0000A8  EC80 0000 0000  xsym                 LDB,B6   GJA_CHNFREE$
          1 0000AB  EFC7 000A                            STB,B6   NEW$,AUTO

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:115  
      636     9365    2             GJA_CHNFREE$ = NEWCTX.LNK$;

   9365   1 0000AD  DCC6 001C                            LDB,B5   28,B6
          1 0000AF  DF80 0000 0000  xsym                 STB,B5   GJA_CHNFREE$

      637     9366    2           END;

      638     9367    1        NEWCTX = CTX_C;

   9367   1 0000B2  AB80 0000 0000  00                   LAB,B2   CTX_C
          1 0000B5  2C00                                 LDV,R2   0
          1 0000B6  6C40                                 LDV,R6   64
          1 0000B7  BB86                                 LAB,B3   ,B6
          1 0000B8  3C00                                 LDV,R3   0
          1 0000B9  0008                                 MMM

      639     9368    1        TERMINAL_ID = TERMID;

   9368   1 0000BA  ACC7 0004                            LDB,B2   @TERMID,AUTO
          1 0000BC  2C00                                 LDV,R2   0
          1 0000BD  6C10                                 LDV,R6   16
          1 0000BE  BB87                                 LAB,B3   ,AUTO
          1 0000BF  3C26                                 LDV,R3   38
          1 0000C0  0008                                 MMM

      640     9369    1        IF TERMINAL_ID.LEV = %TERMINAL_ID_LEV_SUBCHAN#

   9369   1 0000C1  E847 0013                            LDR,R6   TERMINAL_ID,AUTO
          1 0000C3  E570 00FF                            AND,R6   255,IMO
          1 0000C5  6D02                                 CMV,R6   2
          1 0000C6  0981 0005                            BNE      s:9373,PREL

      641     9370    1        THEN
      642     9371    1             TERMINAL_ID.TERM.SUBDEVICE = 0;

   9371   1 0000C8  8747 0015                            CL       TERMINAL_ID+2,AUTO
          1 0000CA  0F81 0003                            B        s:9374,PREL
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:116  

      643     9372    1        ELSE
      644     9373    1             TERMINAL_ID.TERM.SUBSUBDEVICE = 0;

   9373   1 0000CC  8747 0016                            CL       TERMINAL_ID+3,AUTO

      645     9374    1        CALL GJA$GET_CHNTBL_PTR(TERMINAL_ID,INIT$)

   9374   1 0000CE  DBC7 000D                            LAB,B5   INIT$,AUTO
          1 0000D0  DFC7 0034                            STB,B5   RQSCHN+17,AUTO
          1 0000D2  CBC7 0013                            LAB,B4   TERMINAL_ID,AUTO
          1 0000D4  CFC7 0032                            STB,B4   RQSCHN+15,AUTO
          1 0000D6  BBC7 0032                            LAB,B3   RQSCHN+15,AUTO
          1 0000D8  CBF0 0200                            LAB,B4   512,IMO
          1 0000DA  E380 0000 0000  xent                 LNJ,B6   GJA$GET_CHNTBL_PTR
          1 0000DD       0009                            DC       s:9378,PREL

      646     9375    2        WHENRETURN DO;

      647     9376    2             NEWCTX = INIT$->CHANCTX;

   9376   1 0000DE  ACC7 000D                            LDB,B2   INIT$,AUTO
          1 0000E0  2C00                                 LDV,R2   0
          1 0000E1  6C40                                 LDV,R6   64
          1 0000E2  BCC7 000A                            LDB,B3   NEW$,AUTO
          1 0000E4  3C00                                 LDV,R3   0
          1 0000E5  0008                                 MMM

      648     9377    2           END;

      649     9378    1        NEWCTX.LNK$ = SVLNK$;

   9378   1 0000E6  ECC7 000F                            LDB,B6   SVLNK$,AUTO
          1 0000E8  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0000EA  EFC5 001C                            STB,B6   28,B5

      650     9379    1        NEWCTX.SUB$ = SVSUB$;
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:117  

   9379   1 0000EC  CCC7 0011                            LDB,B4   SVSUB$,AUTO
          1 0000EE  CFC5 001A                            STB,B4   26,B5

      651     9380    1        NEWCTX.HAND$ = CHANCTX.HAND$;

   9380   1 0000F0  BCC7 001B                            LDB,B3   LVL1$,AUTO
          1 0000F2  ACC3 001E                            LDB,B2   30,B3
          1 0000F4  AFC5 001E                            STB,B2   30,B5

      652     9381    1        NEWCTX.SYSID = CHANCTX.SYSID;

   9381   1 0000F6  E843 0006                            LDR,R6   6,B3
          1 0000F8  EF45 0006                            STR,R6   6,B5

      653     9382    1        NEWCTX.LINSPD = CHANCTX.LINSPD;

   9382   1 0000FA  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0000FC  E843 0008                            LDR,R6   8,B3
          1 0000FE  EAC5 0008                            SRM,R6,'000F'X    8,B5
          1 000100       000F

      654     9383    1        NEWCTX.AUTBAD = CHANCTX.AUTBAD;

   9383   1 000101  E843 0008                            LDR,R6   8,B3
          1 000103  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 000105  EAC5 0008                            SRM,R6,'0010'X    8,B5
          1 000107       0010

      655     9384    1        NEWCTX.DRPDTR = CHANCTX.DRPDTR;

   9384   1 000108  E843 0008                            LDR,R6   8,B3
          1 00010A  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 00010C  EAC5 0008                            SRM,R6,'0020'X    8,B5
          1 00010E       0020

      656     9385    1        NEWCTX.BLOCK = CHANCTX.BLOCK;
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:118  

   9385   1 00010F  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 000111  E843 0010                            LDR,R6   16,B3
          1 000113  EF45 0010                            STR,R6   16,B5

      657     9386    1        NEWCTX.UNBLOCK = CHANCTX.UNBLOCK;

   9386   1 000115  D843 0011                            LDR,R5   17,B3
          1 000117  DF45 0011                            STR,R5   17,B5

      658     9387    1        NEWCTX.TPTIMOUTPRD = CHANCTX.TPTIMOUTPRD;

   9387   1 000119  C843 000A                            LDR,R4   10,B3
          1 00011B  CAC5 000A                            SRM,R4,'00FF'X    10,B5
          1 00011D       00FF

      659     9388    1        NEWCTX.REDTIMOUTPRD = CHANCTX.REDTIMOUTPRD;

   9388   1 00011E  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 000120  E843 0009                            LDR,R6   9,B3
          1 000122  EAC5 0009                            SRM,R6,'00FF'X    9,B5
          1 000124       00FF

      660     9389    1        NEWCTX.LGNTIMOUTPRD = CHANCTX.LGNTIMOUTPRD;

   9389   1 000125  E2C3 000A                            LLH,R6   10,B3
          1 000127  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 000129  E7C5 000A                            STH,R6   10,B5

      661     9390    1        IF NEW

   9390   1 00012B  89C7 000C                            CMZ      NEW,AUTO
          1 00012D  0881 008B                            BAGE     s:9431,PREL

      662     9391    2        THEN DO;

      663     9392
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:119  
      664     9393                                           /* Figure out where to hang this block     */
      665     9394    3             IF TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN# THEN DO;

   9394   1 00012F  DCC7 0004                            LDB,B5   @TERMID,AUTO
          1 000131  E805                                 LDR,R6   ,B5
          1 000132  E570 00FF                            AND,R6   255,IMO
          1 000134  6D02                                 CMV,R6   2
          1 000135  0981 002B                            BNE      s:9408,PREL

      666     9395    4                  IF CHANCTX.SUB$ = ADDR(NIL) THEN DO;

   9395   1 000137  8DC3 001A                            CMN      26,B3
          1 000139  0981 0007                            BNE      s:9399,PREL

      667     9396    4                       CHANCTX.SUB$ = NEW$;

   9396   1 00013B  ACC7 000A                            LDB,B2   NEW$,AUTO
          1 00013D  AFC3 001A                            STB,B2   26,B3

      668     9397    4                     END;                  /* IF SUB$ = ADDR(NIL)      */

   9397   1 00013F  0F81 0016                            B        s:9405,PREL

      669     9398    4                  ELSE DO;                 /* Run the chain            */

      670     9399    4                       LVL2$ = CHANCTX.SUB$;

   9399   1 000141  ACC3 001A                            LDB,B2   26,B3
          1 000143  AFC7 001D                            STB,B2   LVL2$,AUTO

      671     9400    5                       DO WHILE(LVL2CTX.LNK$ ~= ADDR(NIL));

   9400   1 000145  0F81 0007                            B        s:9402,PREL

      672     9401    5                            LVL2$ = LVL2CTX.LNK$;

   9401   1 000147  ECC7 001D                            LDB,B6   LVL2$,AUTO
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:120  
          1 000149  DCC6 001C                            LDB,B5   28,B6
          1 00014B  DFC7 001D                            STB,B5   LVL2$,AUTO

      673     9402    5                          END;             /* DO WHILE                 */

   9402   1 00014D  ECC7 001D                            LDB,B6   LVL2$,AUTO
          1 00014F  8DC6 001C                            CMN      28,B6
          1 000151  09F6                                 BNE      s:9401,SPREL

      674     9403    4                       LVL2CTX.LNK$ = NEW$;

   9403   1 000152  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 000154  DFC6 001C                            STB,B5   28,B6

      675     9404    4                     END;                  /* ELSE                     */

      676     9405    3                  NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBDEVICE;

   9405   1 000156  ECC7 0004                            LDB,B6   @TERMID,AUTO
          1 000158  E846 0002                            LDR,R6   2,B6
          1 00015A  6006                                 SOL,R6   6
          1 00015B  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 00015D  EA85                                 SRM,R6,'FFC0'X    ,B5
          1 00015E       FFC0

      677     9406    3                END;                       /* IF LEV = SUBCHAN#        */

   9406   1 00015F  0F81 0059                            B        s:9431,PREL

      678     9407    3             ELSE DO;                      /* It's a level 3           */

      679     9408    3                  LVL2$ = CHANCTX.SUB$;

   9408   1 000161  ACC3 001A                            LDB,B2   26,B3
          1 000163  AFC7 001D                            STB,B2   LVL2$,AUTO

      680     9409    3                  IF LVL2$ ~= ADDR(NIL)
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:121  

   9409   1 000165  8DC7 001D                            CMN      LVL2$,AUTO
          1 000167  0901 0005                            BE       s:9411,PREL

      681     9410    3                  THEN NUM = LVL2CTX.TERMID.TERM.SUBDEVICE;

   9410   1 000169  E842 0014                            LDR,R6   20,B2
          1 00016B  EF47 0022                            STR,R6   NUM,AUTO

      682     9411    4                  DO WHILE(NUM ~= TERMID.TERM.SUBDEVICE AND LVL2$ ~= ADDR(NIL));

   9411   1 00016D  0F81 000F                            B        s:9415,PREL

      683     9412    4                       LVL2$ = LVL2CTX.LNK$;

   9412   1 00016F  ECC7 001D                            LDB,B6   LVL2$,AUTO
          1 000171  DCC6 001C                            LDB,B5   28,B6
          1 000173  DFC7 001D                            STB,B5   LVL2$,AUTO

      684     9413    4                       IF LVL2$ ~= ADDR(NIL)

   9413   1 000175  8DC7 001D                            CMN      LVL2$,AUTO
          1 000177  0901 0005                            BE       s:9415,PREL

      685     9414    4                       THEN NUM = LVL2CTX.TERMID.TERM.SUBDEVICE;

   9414   1 000179  E845 0014                            LDR,R6   20,B5
          1 00017B  EF47 0022                            STR,R6   NUM,AUTO

      686     9415    4                     END;                  /* DO WHILE                 */

   9415   1 00017D  ECC7 0004                            LDB,B6   @TERMID,AUTO
          1 00017F  E847 0022                            LDR,R6   NUM,AUTO
          1 000181  E946 0002                            CMR,R6   2,B6
          1 000183  0901 0004                            BE       s:9416,PREL
          1 000185  8DC7 001D                            CMN      LVL2$,AUTO
          1 000187  09E8                                 BNE      s:9412,SPREL
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:122  

      687     9416    4                  IF LVL2$ = ADDR(NIL) THEN DO;

   9416   1 000188  8DC7 001D                            CMN      LVL2$,AUTO
          1 00018A  0981 0004                            BNE      s:9419,PREL

      688     9417    4                       ALTRETURN;

   9417   1 00018C  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      689     9418    4                     END;                  /* IF LVL2$ = ADDR(NIL)     */
      690     9419    4                  IF LVL2CTX.SUB$ = ADDR(NIL) THEN DO;

   9419   1 00018F  DCC7 001D                            LDB,B5   LVL2$,AUTO
          1 000191  8DC5 001A                            CMN      26,B5
          1 000193  0981 0007                            BNE      s:9423,PREL

      691     9420    4                       LVL2CTX.SUB$ = NEW$;

   9420   1 000195  CCC7 000A                            LDB,B4   NEW$,AUTO
          1 000197  CFC5 001A                            STB,B4   26,B5

      692     9421    4                     END;                  /* IF SUB$ = ADDR(NIL)      */

   9421   1 000199  0F81 0016                            B        s:9429,PREL

      693     9422    4                  ELSE DO;                 /* Run the chain            */

      694     9423    4                       LVL3$ = LVL2CTX.SUB$;

   9423   1 00019B  CCC5 001A                            LDB,B4   26,B5
          1 00019D  CFC7 001F                            STB,B4   LVL3$,AUTO

      695     9424    5                       DO WHILE(LVL3CTX.LNK$ ~= ADDR(NIL));

   9424   1 00019F  0F81 0007                            B        s:9426,PREL

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:123  
      696     9425    5                            LVL3$ = LVL3CTX.LNK$;

   9425   1 0001A1  ECC7 001F                            LDB,B6   LVL3$,AUTO
          1 0001A3  DCC6 001C                            LDB,B5   28,B6
          1 0001A5  DFC7 001F                            STB,B5   LVL3$,AUTO

      697     9426    5                          END;             /* DO WHILE                 */

   9426   1 0001A7  ECC7 001F                            LDB,B6   LVL3$,AUTO
          1 0001A9  8DC6 001C                            CMN      28,B6
          1 0001AB  09F6                                 BNE      s:9425,SPREL

      698     9427    4                       LVL3CTX.LNK$ = NEW$;

   9427   1 0001AC  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0001AE  DFC6 001C                            STB,B5   28,B6

      699     9428    4                     END;                  /* ELSE                     */

      700     9429    3                  NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBSUBDEVICE;

   9429   1 0001B0  ECC7 0004                            LDB,B6   @TERMID,AUTO
          1 0001B2  E846 0003                            LDR,R6   3,B6
          1 0001B4  6006                                 SOL,R6   6
          1 0001B5  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0001B7  EA85                                 SRM,R6,'FFC0'X    ,B5
          1 0001B8       FFC0

      701     9430    3                END;                       /* ELSE level 3             */

      702     9431    2           END;

   9424   1                              DO_RQSCHN       null
      703     9432    1   DO_RQSCHN: ;
      704     9433    2        DO CASE (TERMID.LEV);

   9433   1 0001B9  ECC7 0004            DO_RQSCHN       LDB,B6   @TERMID,AUTO
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:124  
          1 0001BB  B806                                 LDR,R3   ,B6
          1 0001BC  B570 00FF                            AND,R3   255,IMO
          1 0001BE  3D04                                 CMV,R3   4
          1 0001BF  0281 001B                            BGE      s:9442,PREL
          1 0001C1  A830 0000 01C7  01                   LDR,R2   DO_RQSCHN+14,R3
          1 0001C4  83A0 0000 01CB  01                   JMP      s:9436,R2
          1 0001C7       0010                            DC       s:9442,PREL
          1 0001C8       0010                            DC       s:9442,PREL
          1 0001C9       0000                            DC       s:9436,PREL
          1 0001CA       0009                            DC       s:9439,PREL

      705     9434
      706     9435    2        CASE (%TERMINAL_ID_LEV_SUBCHAN#);

      707     9436    2           NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBDEVICE;

   9436   1 0001CB  E846 0002                            LDR,R6   2,B6
          1 0001CD  6006                                 SOL,R6   6
          1 0001CE  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0001D0  EA85                                 SRM,R6,'FFC0'X    ,B5
          1 0001D1       FFC0
          1 0001D2  0F81 0008                            B        s:9442,PREL

      708     9437
      709     9438    2        CASE (%TERMINAL_ID_LEV_SUBSUBCHAN#);

      710     9439    2           NEWCTX.CHNBIT0_9 = TERMID.TERM.SUBSUBDEVICE;

   9439   1 0001D4  E846 0003                            LDR,R6   3,B6
          1 0001D6  6006                                 SOL,R6   6
          1 0001D7  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0001D9  EA85                                 SRM,R6,'FFC0'X    ,B5
          1 0001DA       FFC0

      711     9440
      712     9441    2        END;

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:125  
      713     9442    1        NEWCTX.TERMID = TERMID;

   9442   1 0001DB  AB86                                 LAB,B2   ,B6
          1 0001DC  2C00                                 LDV,R2   0
          1 0001DD  6C10                                 LDV,R6   16
          1 0001DE  BCC7 000A                            LDB,B3   NEW$,AUTO
          1 0001E0  3C24                                 LDV,R3   36
          1 0001E1  0008                                 MMM

      714     9443    1        NEWCTX.STT = %KH#CHN_STT_DSB;

   9443   1 0001E2  6C04                                 LDV,R6   4
          1 0001E3  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0001E5  E7C5 0001                            STH,R6   1,B5

      715     9444    1        CTX$ = NEW$;

   9444   1 0001E7  DCC7 000A                            LDB,B5   NEW$,AUTO
          1 0001E9  CCC7 0006                            LDB,B4   @CTX$,AUTO
          1 0001EB  DF84                                 STB,B5   ,B4

      716     9445
      717     9446    1        IF DORQSCHN

   9446   1 0001EC  BCC7 0008                            LDB,B3   @DORQSCHN,AUTO
          1 0001EE  8983                                 CMZ      ,B3
          1 0001EF  0881 0062                            BAGE     s:9462,PREL

      718     9447    2        THEN DO;

      719     9448    2             RQSCHN = GJA_RQSCHN;

   9448   1 0001F1  AB80 0000 0000  xsym                 LAB,B2   GJA_RQSCHN
          1 0001F4  2C00                                 LDV,R2   0
          1 0001F5  E280 0000 000D  xsym                 LLH,R6   GJA_RQSCHN+13
          1 0001F8  6E1B                                 ADV,R6   27
          1 0001F9  BB87                                 LAB,B3   ,AUTO
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:126  
          1 0001FA  3C46                                 LDV,R3   70
          1 0001FB  7C1C                                 LDV,R7   28
          1 0001FC  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      720     9449    2             IF TERMID.TERM.TERM_NAME ~= ' ' THEN

   9449   1 0001FF  ECC7 0004                            LDB,B6   @TERMID,AUTO
          1 000201  DB80 0000 0000  02                   LAB,B5   0
          1 000204  0022                                 ACM      ;
          1 000205       4806 0004                                ALPHANUM(4,B6,,8,FILL),;
          1 000207       4105 0000                                ALPHANUM(0,B5,,1,FILL)
          1 000209  5381 0020                            CBE      s:9456,PREL

      721     9450    3             DO;

      722     9451    3                  RQSCHN.TERMINAL_ID = TERMID;

   9451   1 00020B  AB86                                 LAB,B2   ,B6
          1 00020C  2C00                                 LDV,R2   0
          1 00020D  6C10                                 LDV,R6   16
          1 00020E  BB87                                 LAB,B3   ,AUTO
          1 00020F  3C50                                 LDV,R3   80
          1 000210  0008                                 MMM

      723     9452    3                  RQSCHN.TERMINAL_ID.TERM.TERM_NAME = ' ';

   9452   1 000211  0021                                 ALR      ;
          1 000212       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 000214       4807 002C                                ALPHANUM(RQSCHN+9,AUTO,,8,FILL)

      724     9453    3                  RQSCHN.SCNDCNFG = '1'B;

   9453   1 000216  8947 0023                            LBT,'0008'X       RQSCHN,AUTO
   9453   1 000218       0008

      725     9454    3                  CALL GJA$NETWORK_MANAGER (RQSCHN,SIZEC(RQSCHN));

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:127  
   9454   1 000219  DBF0 001C                            LAB,B5   28,IMO
          1 00021B  DFC7 0034                            STB,B5   RQSCHN+17,AUTO
          1 00021D  CBC7 0023                            LAB,B4   RQSCHN,AUTO
          1 00021F  CFC7 0032                            STB,B4   RQSCHN+15,AUTO
          1 000221  BBC7 0032                            LAB,B3   RQSCHN+15,AUTO
          1 000223  CBF0 0200                            LAB,B4   512,IMO
          1 000225  437F                                 CSYNC    s:9454+11,SPREL
          1 000226  E380 0000 0000  xent                 LNJ,B6   GJA$NETWORK_MANAGER
          1 000229       0001                            DC       s:9456,PREL

      726     9455    3                END;

      727     9456    2             RQSCHN = GJA_RQSCHN;

   9456   1 00022A  AB80 0000 0000  xsym                 LAB,B2   GJA_RQSCHN
          1 00022D  2C00                                 LDV,R2   0
          1 00022E  E280 0000 000D  xsym                 LLH,R6   GJA_RQSCHN+13
          1 000231  6E1B                                 ADV,R6   27
          1 000232  BB87                                 LAB,B3   ,AUTO
          1 000233  3C46                                 LDV,R3   70
          1 000234  7C1C                                 LDV,R7   28
          1 000235  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      728     9457    2             RQSCHN.TERMINAL_ID = TERMID;

   9457   1 000238  ACC7 0004                            LDB,B2   @TERMID,AUTO
          1 00023A  2C00                                 LDV,R2   0
          1 00023B  6C10                                 LDV,R6   16
          1 00023C  BB87                                 LAB,B3   ,AUTO
          1 00023D  3C50                                 LDV,R3   80
          1 00023E  0008                                 MMM

      729     9458    2             RQSCHN.CONFIG = '1'B;

   9458   1 00023F  8947 0023                            LBT,'0040'X       RQSCHN,AUTO
   9458   1 000241       0040

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:128  
      730     9459    2             CALL GJA$NETWORK_MANAGER (RQSCHN,SIZEC(RQSCHN));

   9459   1 000242  EBF0 001C                            LAB,B6   28,IMO
          1 000244  EFC7 0034                            STB,B6   RQSCHN+17,AUTO
          1 000246  DBC7 0023                            LAB,B5   RQSCHN,AUTO
          1 000248  DFC7 0032                            STB,B5   RQSCHN+15,AUTO
          1 00024A  BBC7 0032                            LAB,B3   RQSCHN+15,AUTO
          1 00024C  CBF0 0200                            LAB,B4   512,IMO
          1 00024E  E380 0000 0000  xent                 LNJ,B6   GJA$NETWORK_MANAGER
          1 000251       0001                            DC       s:9462,PREL

      731     9460    2           END;

      732     9461
      733     9462    1        RETURN;

   9462   1 000252  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      734     9463    1   END GJA$BLD_CTX;
      735     9464        %EOD;

PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:129  
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$BLD_CTX.
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:130  

 **** Variables and constants ****

  ****  Section 000 RoData GJA$BLD_CTX

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 CTX_C

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CTX$                      8-0-0/w PTR         r     1 @DORQSCHN
     4-0-0/w PTR         r     1 @TERMID                   21-0-0/w UBIN(16)    r     1 CHAN
    *0-0-0/w PTR         r     1 CTX$                      *0-0-0/w BIT         r     1 DORQSCHN
     D-0-0/w PTR         r     1 INIT$                     1B-0-0/w PTR         r     1 LVL1$
    1D-0-0/w PTR         r     1 LVL2$                     1F-0-0/w PTR         r     1 LVL3$
     C-0-0/b BIT         r     1 NEW                        A-0-0/w PTR         r     1 NEW$
    22-0-0/w UBIN(16)    r     1 NUM                       23-0-0/w STRC(224)   r     1 RQSCHN
     F-0-0/w PTR         r     1 SVLNK$                    11-0-0/w PTR         r     1 SVSUB$
    *0-0-0/w STRC(128)   r     1 TERMID                    13-0-0/w STRC(128)   r     1 TERMINAL_ID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GJA_CHNFREE$               0-0-0/w UBIN(16)    r     1 GJA_CHNHI
     0-0-0/w UBIN(16)    r     1 GJA_CHNLOW                 0-0-0/w PTR         r     1 GJA_CHNLOW$
     0-0-0/w ASTR(216)   r     1 GJA_RQSCHN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:131  

     0-0-0/w STRC(512)   r     1 CHANCTX                    0-0-0/w STRC(512)   r     1 LVL2CTX
     0-0-0/w STRC(512)   r     1 LVL3CTX                    0-0-0/w STRC(512)   r     1 NEWCTX


   Procedure GJA$BLD_CTX requires 597 words for executable code.
   Procedure GJA$BLD_CTX requires 56 words of local(AUTO) storage.
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:132  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:133  
          MINI XREF LISTING

CHAN
      9111**DCL      9331<<ASSIGN   9332>>IF       9332>>IF       9335>>ASSIGN
CHANCTX
      8468**DCL      9335--ASSIGN   9376>>ASSIGN
CHANCTX.AUTBAD
      8522**DCL      9383>>ASSIGN
CHANCTX.BLOCK
      8544**DCL      9385>>ASSIGN
CHANCTX.CHNBIT0_9
      8475**DCL      9336>>IF
CHANCTX.DRPDTR
      8521**DCL      9384>>ASSIGN
CHANCTX.HAND$
      8575**DCL      9380>>ASSIGN
CHANCTX.LGNTIMOUTPRD
      8535**DCL      9389>>ASSIGN
CHANCTX.LINSPD
      8522**DCL      9382>>ASSIGN
CHANCTX.REDTIMOUTPRD
      8535**DCL      9388>>ASSIGN
CHANCTX.SUB$
      8575**DCL      9395>>IF       9396<<ASSIGN   9399>>ASSIGN   9408>>ASSIGN
CHANCTX.SYSID
      8501**DCL      9381>>ASSIGN
CHANCTX.TERMID.TERM
      8564**DCL      8573--REDEF
CHANCTX.TPTIMOUTPRD
      8535**DCL      9387>>ASSIGN
CHANCTX.UNBLOCK
      8544**DCL      9386>>ASSIGN
CTX$
      8447**DCL        21--PROC     9328<<ASSIGN   9444<<ASSIGN
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:134  
CTX_C
      8964**DCL      9367>>ASSIGN
CTX_C.TERMID.TERM
      9060**DCL      9069--REDEF
DORQSCHN
      8448**DCL        21--PROC     9446>>IF
GJA$BLD_CTX
        21**PROC     9346--CALL
GJA$GET_CHNTBL_PTR
      8450**DCL-ENT  9344--CALL     9354--CALL     9374--CALL
GJA$NETWORK_MANAGER
      8451**DCL-ENT  9454--CALL     9459--CALL
GJA_CHNFREE$
      9321**DCL      9361>>IF       9364>>ASSIGN   9365<<ASSIGN
GJA_CHNHI
      9323**DCL      9332>>IF
GJA_CHNLOW
      9322**DCL      9332>>IF
GJA_CHNLOW$
      9324**DCL      9335>>ASSIGN
GJA_RQSCHN
      9233**DCL      9448>>ASSIGN   9456>>ASSIGN
GJA_RQSCHN.SGN.L
      9307**DCL      9315--IMP-SIZ  9448>>ASSIGN   9456>>ASSIGN
GJA_RQSCHN.TERMINAL_ID.TERM
      9287**DCL      9296--REDEF
INIT$
      9076**DCL      9374<>CALL     9376>>ASSIGN
LVL1$
      9108**DCL      8468--IMP-PTR  9335<<ASSIGN   9336>>IF       9380>>ASSIGN   9381>>ASSIGN   9382>>ASSIGN
      9383>>ASSIGN   9384>>ASSIGN   9385>>ASSIGN   9386>>ASSIGN   9387>>ASSIGN   9388>>ASSIGN   9389>>ASSIGN
      9395>>IF       9396>>ASSIGN   9399>>ASSIGN   9408>>ASSIGN
LVL2$
      9109**DCL      8592--IMP-PTR  9344<>CALL     9346<>CALL     9399<<ASSIGN   9400>>DOWHILE  9401<<ASSIGN
      9401>>ASSIGN   9403>>ASSIGN   9408<<ASSIGN   9409>>IF       9410>>ASSIGN   9411>>DOWHILE  9412<<ASSIGN
      9412>>ASSIGN   9413>>IF       9414>>ASSIGN   9416>>IF       9419>>IF       9420>>ASSIGN   9423>>ASSIGN
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:135  
LVL2CTX.LNK$
      8699**DCL      9400>>DOWHILE  9401>>ASSIGN   9403<<ASSIGN   9412>>ASSIGN
LVL2CTX.SUB$
      8699**DCL      9419>>IF       9420<<ASSIGN   9423>>ASSIGN
LVL2CTX.TERMID.TERM
      8688**DCL      8697--REDEF
LVL2CTX.TERMID.TERM.SUBDEVICE
      8694**DCL      9410>>ASSIGN   9414>>ASSIGN
LVL3$
      9110**DCL      8716--IMP-PTR  9423<<ASSIGN   9424>>DOWHILE  9425<<ASSIGN   9425>>ASSIGN   9427>>ASSIGN
LVL3CTX.LNK$
      8823**DCL      9424>>DOWHILE  9425>>ASSIGN   9427<<ASSIGN
LVL3CTX.TERMID.TERM
      8812**DCL      8821--REDEF
NEW
      9075**DCL      9356<<ASSIGN   9363<<ASSIGN   9390>>IF
NEW$
      9074**DCL      8840--IMP-PTR  9354<>CALL     9357>>ASSIGN   9358>>ASSIGN   9364<<ASSIGN   9365>>ASSIGN
      9367>>ASSIGN   9376>>ASSIGN   9378>>ASSIGN   9379>>ASSIGN   9380>>ASSIGN   9381>>ASSIGN   9382>>ASSIGN
      9383>>ASSIGN   9384>>ASSIGN   9385>>ASSIGN   9386>>ASSIGN   9387>>ASSIGN   9388>>ASSIGN   9389>>ASSIGN
      9396>>ASSIGN   9403>>ASSIGN   9405>>ASSIGN   9420>>ASSIGN   9427>>ASSIGN   9429>>ASSIGN   9436>>ASSIGN
      9439>>ASSIGN   9442>>ASSIGN   9443>>ASSIGN   9444>>ASSIGN
NEWCTX
      8840**DCL      9367<<ASSIGN   9376<<ASSIGN
NEWCTX.AUTBAD
      8894**DCL      9383<<ASSIGN
NEWCTX.BLOCK
      8916**DCL      9385<<ASSIGN
NEWCTX.CHNBIT0_9
      8847**DCL      9405<<ASSIGN   9429<<ASSIGN   9436<<ASSIGN   9439<<ASSIGN
NEWCTX.DRPDTR
      8893**DCL      9384<<ASSIGN
NEWCTX.HAND$
      8947**DCL      9380<<ASSIGN
NEWCTX.LGNTIMOUTPRD
      8907**DCL      9389<<ASSIGN
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:136  
NEWCTX.LINSPD
      8894**DCL      9382<<ASSIGN
NEWCTX.LNK$
      8947**DCL      9357>>ASSIGN   9365>>ASSIGN   9378<<ASSIGN
NEWCTX.REDTIMOUTPRD
      8907**DCL      9388<<ASSIGN
NEWCTX.STT
      8856**DCL      9443<<ASSIGN
NEWCTX.SUB$
      8947**DCL      9358>>ASSIGN   9379<<ASSIGN
NEWCTX.SYSID
      8873**DCL      9381<<ASSIGN
NEWCTX.TERMID
      8934**DCL      9442<<ASSIGN
NEWCTX.TERMID.TERM
      8936**DCL      8945--REDEF
NEWCTX.TPTIMOUTPRD
      8907**DCL      9387<<ASSIGN
NEWCTX.UNBLOCK
      8916**DCL      9386<<ASSIGN
NUM
      9112**DCL      9410<<ASSIGN   9411>>DOWHILE  9414<<ASSIGN
RQSCHN
      9128**DCL      9448<<ASSIGN   9454<>CALL     9454--CALL     9456<<ASSIGN   9459<>CALL     9459--CALL
RQSCHN.CONFIG
      9139**DCL      9458<<ASSIGN
RQSCHN.SCNDCNFG
      9152**DCL      9453<<ASSIGN
RQSCHN.TERMINAL_ID
      9180**DCL      9451<<ASSIGN   9457<<ASSIGN
RQSCHN.TERMINAL_ID.TERM
      9182**DCL      9191--REDEF
RQSCHN.TERMINAL_ID.TERM.TERM_NAME
      9191**DCL      9452<<ASSIGN
SVLNK$
      9077**DCL      9352<<ASSIGN   9357<<ASSIGN   9378>>ASSIGN
PL6.E3A0      #005=GJA$BLD_CTX File=GJA$SUBS.:E05TSI                             TUE 07/29/97 21:55 Page:137  
SVSUB$
      9078**DCL      9353<<ASSIGN   9358<<ASSIGN   9379>>ASSIGN
TERMID
      8432**DCL        21--PROC     9341>>ASSIGN   9354<>CALL     9368>>ASSIGN   9442>>ASSIGN   9451>>ASSIGN
      9457>>ASSIGN
TERMID.LEV
      8436**DCL      9329>>IF       9339>>IF       9394>>IF       9433>>DOCASE
TERMID.TERM
      8436**DCL      8445--REDEF
TERMID.TERM.CHANNEL
      8442**DCL      9331>>ASSIGN
TERMID.TERM.SUBDEVICE
      8442**DCL      9405>>ASSIGN   9411>>DOWHILE  9436>>ASSIGN
TERMID.TERM.SUBSUBDEVICE
      8442**DCL      9429>>ASSIGN   9439>>ASSIGN
TERMID.TERM.TERM_NAME
      8445**DCL      9449>>IF
TERMINAL_ID
      9093**DCL      9341<<ASSIGN   9344<>CALL     9346<>CALL     9368<<ASSIGN   9374<>CALL
TERMINAL_ID.LEV
      9097**DCL      9343<<ASSIGN   9369>>IF
TERMINAL_ID.TERM
      9097**DCL      9106--REDEF
TERMINAL_ID.TERM.SUBDEVICE
      9103**DCL      9371<<ASSIGN
TERMINAL_ID.TERM.SUBSUBDEVICE
      9103**DCL      9342<<ASSIGN   9373<<ASSIGN

PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:138  
      736        1        /*T***********************************************************/
      737        2        /*T*                                                         */
      738        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      739        4        /*T*                                                         */
      740        5        /*T***********************************************************/
      741        6        /*F* NAME: GJA$LINEPROFILE
      742        7             PURPOSE: This routine is called by GJA$DVCADM when it receives a line
      743        8                      profile message from the host.  This routine breaks apart
      744        9                      the message into its component pieces and does the following
      745       10                      for each piece:
      746       11
      747       12                         1. Call GJA$BLD_CTX to get the sub-context built for this
      748       13                            termid.
      749       14
      750       15                         2. Call handler admin routine with FNC=BLDCTX, and passing
      751       16                            the appropriate piece of the line profile message.
      752       17             DESCRIPTION: This routine uses the information in the KL_BLKHDR structure
      753       18                          which is at the beginning of every piece of line profile
      754       19                          to determine the level of this item, how many sub-devices
      755       20                          there are, etc.  This information is used to set up
      756       21             CALL: CALL GJA$LINEPROFILE(TERMID,PRO$);
      757       22             INPUT: TERMID - the terminal id of the line which this line profile
      758       23                             corresponds to.  See the B$TERMINAL_ID macro in LCP_6.
      759       24                    PRO$ - a pointer to the line profile message received
      760       25                           from the host.
      761       26        */
      762       27        GJA$LINEPROFILE: PROC(TERMID,PRO$) ALTRET;
      763       28        /**/
      764       29        %INCLUDE LCP_6;
      765     4308        %INCLUDE CP_6_SUBS;
      766     4848        %INCLUDE KL_SUPER_C;
      767     7750        %INCLUDE K_SCODE_C;
      768     7835        %INCLUDE KL_MACRO_C;
      769    11187        /**/
      770    11188        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      771    11217    1   DCL PRO$ PTR;
      772    11218        /**/
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:139  
      773    11219    1   DCL GJA$GET_CHNTBL_PTR ENTRY(2) ALTRET;
      774    11220    1   DCL GJA$NETWORK_MANAGER ENTRY(2);
      775    11221    1   DCL GJA$BLD_CTX ENTRY(3) ALTRET;
      776    11222        /**/
      777    11223    1   DCL I UBIN;
      778    11224    1   DCL J UBIN;
      779    11225        %KL_BLKHDR (NAME=LVL1BLK,STCLASS="BASED(LVL1$)");
      780    11320        %KL_BLKHDR (NAME=LVL2BLK,STCLASS="BASED(LVL2$)");
      781    11415        %KL_BLKHDR (NAME=LVL3BLK,STCLASS="BASED(LVL3$)");
      782    11510        %KL_LNKVC(STCLASS="BASED(LVL2$)");
      783    11734    1   DCL LVL1$ PTR;
      784    11735    1   DCL LVL2$ PTR;
      785    11736    1   DCL LVL3$ PTR;
      786    11737        %KL_RQSCHN (FPTN=GJA_RQSCHN,STCLASS=SYMREF);
      787    11840        %KL_RQSCHN (FPTN=RQSCHN,STCLASS=AUTO);
      788    11943        %B$TERMINAL_ID (FPTN=TERMID_LCL,STCLASS=AUTO);
      789    11972    1   DCL CHN$ PTR;
      790    11973    1   DCL LIN$ PTR;
      791    11974        /**/
      792    11975        %VLP_SCODE(FPTN=NODEDEV,ERR#=%S$NODEDEV,FCG=GJ,MID=A,SEV=G_SEV_SCREECH#);
      793    12036        %EJECT;
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:140  
      794    12037    1        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN#
      795    12038    1        THEN GOTO SEND_RJC;
      796    12039    1        LVL1$ = PRO$;
      797    12040    1        TERMID_LCL = TERMID;
      798    12041    1        CALL GJA$GET_CHNTBL_PTR(TERMID_LCL,LIN$);
      799    12042    1        LVL2$ = PINCRC(LVL1$,LVL1BLK.LEN);
      800    12043    2        DO I = 0 TO LVL1BLK.NSUBS - 1;
      801    12044    2             TERMID_LCL.LEV = LVL2BLK.LEV;
      802    12045    2             IF LVL2BLK.BLKTYP = %KLTY_VIRCIR# THEN
      803    12046    2                  TERMID_LCL.TERM.SUBDEVICE = KL_LNKVC.VIRCIR#;
      804    12047    2             ELSE
      805    12048    2                  TERMID_LCL.TERM.SUBDEVICE = LVL2BLK.DEVNUM;
      806    12049    2             CALL GJA$BLD_CTX(TERMID_LCL,CHN$,'1'B) WHENALTRETURN
      807    12050    3             DO;
      808    12051    3                  CALL M$SCREECH(NODEDEV);
      809    12052    3                END;
      810    12053    2             LVL3$ = PINCRC(LVL2$,LVL2BLK.LEN);
      811    12054    3             DO J = 0 TO LVL2BLK.NSUBS - 1;
      812    12055    3                  TERMID_LCL.LEV = LVL3BLK.LEV;
      813    12056    3                  TERMID_LCL.TERM.SUBSUBDEVICE = LVL3BLK.DEVNUM;
      814    12057    3                  CALL GJA$BLD_CTX(TERMID_LCL,CHN$,'1'B) WHENALTRETURN
      815    12058    4                  DO;
      816    12059    4                       CALL M$SCREECH(NODEDEV);
      817    12060    4                     END;
      818    12061    3                  LVL3$ = PINCRC(LVL3$,LVL3BLK.LEN);
      819    12062    3                END;                       /* DO J                     */
      820    12063    2             LVL2$ = LVL3$;
      821    12064    2           END;                            /* DO I                     */
      822    12065    1        RETURN;
      823    12066    1   SEND_RJC:;
      824    12067             /*N* WHAT DO WE DO??? */
      825    12068    1        ALTRETURN;
      826    12069    1   END GJA$LINEPROFILE;
      827    12070        %EOD;

PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:141  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$LINEPROFILE.

   Procedure GJA$LINEPROFILE requires 216 words for executable code.
   Procedure GJA$LINEPROFILE requires 48 words of local(AUTO) storage.

PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:142  

 Object Unit name= GJA$LINEPROFILE                            File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:56:18.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     3      3  GJA$LINEPROFILE
    1   Proc  even  none   216     D8  GJA$LINEPROFILE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  GJA$LINEPROFILE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GJA$GET_CHNTBL_PTR
 yes     yes           Std       3 GJA$BLD_CTX
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_RQSCHN                       r    G$ROS$
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:143  


      736        1        /*T***********************************************************/
      737        2        /*T*                                                         */
      738        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      739        4        /*T*                                                         */
      740        5        /*T***********************************************************/
      741        6        /*F* NAME: GJA$LINEPROFILE
      742        7             PURPOSE: This routine is called by GJA$DVCADM when it receives a line
      743        8                      profile message from the host.  This routine breaks apart
      744        9                      the message into its component pieces and does the following
      745       10                      for each piece:
      746       11
      747       12                         1. Call GJA$BLD_CTX to get the sub-context built for this
      748       13                            termid.
      749       14
      750       15                         2. Call handler admin routine with FNC=BLDCTX, and passing
      751       16                            the appropriate piece of the line profile message.
      752       17             DESCRIPTION: This routine uses the information in the KL_BLKHDR structure
      753       18                          which is at the beginning of every piece of line profile
      754       19                          to determine the level of this item, how many sub-devices
      755       20                          there are, etc.  This information is used to set up
      756       21             CALL: CALL GJA$LINEPROFILE(TERMID,PRO$);
      757       22             INPUT: TERMID - the terminal id of the line which this line profile
      758       23                             corresponds to.  See the B$TERMINAL_ID macro in LCP_6.
      759       24                    PRO$ - a pointer to the line profile message received
      760       25                           from the host.
      761       26        */
      762       27        GJA$LINEPROFILE: PROC(TERMID,PRO$) ALTRET;

     27   1 000000  D380 0000 0000  xent GJA$LINEPROFILE LNJ,B5   X6A_AUTO_2
          1 000003       0030 0002                       DC       48,2

      763       28        /**/
      764       29        %INCLUDE LCP_6;
      765     4308        %INCLUDE CP_6_SUBS;
      766     4848        %INCLUDE KL_SUPER_C;
      767     7750        %INCLUDE K_SCODE_C;
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:144  
      768     7835        %INCLUDE KL_MACRO_C;
      769    11187        /**/
      770    11188        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      771    11217    1   DCL PRO$ PTR;
      772    11218        /**/
      773    11219    1   DCL GJA$GET_CHNTBL_PTR ENTRY(2) ALTRET;
      774    11220    1   DCL GJA$NETWORK_MANAGER ENTRY(2);
      775    11221    1   DCL GJA$BLD_CTX ENTRY(3) ALTRET;
      776    11222        /**/
      777    11223    1   DCL I UBIN;
      778    11224    1   DCL J UBIN;
      779    11225        %KL_BLKHDR (NAME=LVL1BLK,STCLASS="BASED(LVL1$)");
      780    11320        %KL_BLKHDR (NAME=LVL2BLK,STCLASS="BASED(LVL2$)");
      781    11415        %KL_BLKHDR (NAME=LVL3BLK,STCLASS="BASED(LVL3$)");
      782    11510        %KL_LNKVC(STCLASS="BASED(LVL2$)");
      783    11734    1   DCL LVL1$ PTR;
      784    11735    1   DCL LVL2$ PTR;
      785    11736    1   DCL LVL3$ PTR;
      786    11737        %KL_RQSCHN (FPTN=GJA_RQSCHN,STCLASS=SYMREF);
      787    11840        %KL_RQSCHN (FPTN=RQSCHN,STCLASS=AUTO);
      788    11943        %B$TERMINAL_ID (FPTN=TERMID_LCL,STCLASS=AUTO);
      789    11972    1   DCL CHN$ PTR;
      790    11973    1   DCL LIN$ PTR;
      791    11974        /**/
      792    11975        %VLP_SCODE(FPTN=NODEDEV,ERR#=%S$NODEDEV,FCG=GJ,MID=A,SEV=G_SEV_SCREECH#);
      793    12036        %EJECT;
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:145  
      794    12037    1        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN#

  12037   1 000005  ECC7 0004                            LDB,B6   @TERMID,AUTO
          1 000007  E806                                 LDR,R6   ,B6
          1 000008  E570 00FF                            AND,R6   255,IMO
          1 00000A  6D01                                 CMV,R6   1
          1 00000B  0981 00C9                            BNE      s:12057,PREL

      795    12038    1        THEN GOTO SEND_RJC;
      796    12039    1        LVL1$ = PRO$;

  12039   1 00000D  DCC7 0006                            LDB,B5   @PRO$,AUTO
          1 00000F  CC85                                 LDB,B4   ,B5
          1 000010  CFC7 000A                            STB,B4   LVL1$,AUTO

      797    12040    1        TERMID_LCL = TERMID;

  12040   1 000012  AB86                                 LAB,B2   ,B6
          1 000013  2C00                                 LDV,R2   0
          1 000014  6C10                                 LDV,R6   16
          1 000015  BB87                                 LAB,B3   ,AUTO
          1 000016  3C3C                                 LDV,R3   60
          1 000017  0008                                 MMM

      798    12041    1        CALL GJA$GET_CHNTBL_PTR(TERMID_LCL,LIN$);

  12041   1 000018  CBC7 0028                            LAB,B4   LIN$,AUTO
          1 00001A  CFC7 002C                            STB,B4   LIN$+4,AUTO
          1 00001C  9BC7 001E                            LAB,B1   TERMID_LCL,AUTO
          1 00001E  9FC7 002A                            STB,B1   LIN$+2,AUTO
          1 000020  BBC7 002A                            LAB,B3   LIN$+2,AUTO
          1 000022  CBF0 0200                            LAB,B4   512,IMO
          1 000024  E380 0000 0000  xent                 LNJ,B6   GJA$GET_CHNTBL_PTR
          1 000027       0001                            DC       s:12042,PREL

      799    12042    1        LVL2$ = PINCRC(LVL1$,LVL1BLK.LEN);

PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:146  
  12042   1 000028  ECC7 000A                            LDB,B6   LVL1$,AUTO
          1 00002A  B846 0001                            LDR,R3   1,B6
          1 00002C  8CC7 000A                            LDI      LVL1$,AUTO
          1 00002E  7031                                 DCL,R7   1
          1 00002F  8D47 002A                            SDI      LIN$+2,AUTO
          1 000031  F853                                 LDR,R7   R3
          1 000032  6C00                                 LDV,R6   0
          1 000033  8447 002A                            AID      LIN$+2,AUTO
          1 000035  7071                                 DCR,R7   1
          1 000036  8D47 000C                            SDI      LVL2$,AUTO

      800    12043    2        DO I = 0 TO LVL1BLK.NSUBS - 1;

  12043   1 000038  8747 0008                            CL       I,AUTO
          1 00003A  0F81 008E                            B        s:12064+2,PREL

      801    12044    2             TERMID_LCL.LEV = LVL2BLK.LEV;

  12044   1 00003C  ECC7 000C                            LDB,B6   LVL2$,AUTO
          1 00003E  E286                                 LLH,R6   ,B6
          1 00003F  EAC7 001E                            SRM,R6,'00FF'X    TERMID_LCL,AUTO
          1 000041       00FF

      802    12045    2             IF LVL2BLK.BLKTYP = %KLTY_VIRCIR# THEN

  12045   1 000042  E2C6 0002                            LLH,R6   2,B6
          1 000044  6D08                                 CMV,R6   8
          1 000045  0981 0007                            BNE      s:12048,PREL

      803    12046    2                  TERMID_LCL.TERM.SUBDEVICE = KL_LNKVC.VIRCIR#;

  12046   1 000047  D846 0015                            LDR,R5   21,B6
          1 000049  DF47 0020                            STR,R5   TERMID_LCL+2,AUTO
          1 00004B  0F81 0005                            B        s:12049,PREL

      804    12047    2             ELSE
      805    12048    2                  TERMID_LCL.TERM.SUBDEVICE = LVL2BLK.DEVNUM;
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:147  

  12048   1 00004D  D2C6 0003                            LLH,R5   3,B6
          1 00004F  DF47 0020                            STR,R5   TERMID_LCL+2,AUTO

      806    12049    2             CALL GJA$BLD_CTX(TERMID_LCL,CHN$,'1'B) WHENALTRETURN

  12049   1 000051  DBF0 8000                            LAB,B5   -32768,IMO
          1 000053  DFC7 002E                            STB,B5   LIN$+6,AUTO
          1 000055  CBC7 0026                            LAB,B4   CHN$,AUTO
          1 000057  CFC7 002C                            STB,B4   LIN$+4,AUTO
          1 000059  BBC7 001E                            LAB,B3   TERMID_LCL,AUTO
          1 00005B  BFC7 002A                            STB,B3   LIN$+2,AUTO
          1 00005D  BBC7 002A                            LAB,B3   LIN$+2,AUTO
          1 00005F  CBF0 0300                            LAB,B4   768,IMO
          1 000061  E380 0000 0000  xent                 LNJ,B6   GJA$BLD_CTX
          1 000064       0003                            DC       s:12051,PREL
          1 000065  0F81 0008                            B        s:12053,PREL

      807    12050    3             DO;

      808    12051    3                  CALL M$SCREECH(NODEDEV);

  12051   1 000067  BB80 0000 0000  00                   LAB,B3   NODEDEV
          1 00006A  B870 0485                            LDR,R3   1157,IMO
          1 00006C  0001                                 MCL
          1 00006D       0000                            DC       s:12051+6,PREL

      809    12052    3                END;

      810    12053    2             LVL3$ = PINCRC(LVL2$,LVL2BLK.LEN);

  12053   1 00006E  ECC7 000C                            LDB,B6   LVL2$,AUTO
          1 000070  B846 0001                            LDR,R3   1,B6
          1 000072  8CC7 000C                            LDI      LVL2$,AUTO
          1 000074  7031                                 DCL,R7   1
          1 000075  8D47 002A                            SDI      LIN$+2,AUTO
          1 000077  F853                                 LDR,R7   R3
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:148  
          1 000078  6C00                                 LDV,R6   0
          1 000079  8447 002A                            AID      LIN$+2,AUTO
          1 00007B  7071                                 DCR,R7   1
          1 00007C  8D47 000E                            SDI      LVL3$,AUTO

      811    12054    3             DO J = 0 TO LVL2BLK.NSUBS - 1;

  12054   1 00007E  8747 0009                            CL       J,AUTO
          1 000080  0F81 003A                            B        s:12062+2,PREL

      812    12055    3                  TERMID_LCL.LEV = LVL3BLK.LEV;

  12055   1 000082  ECC7 000E                            LDB,B6   LVL3$,AUTO
          1 000084  E286                                 LLH,R6   ,B6
          1 000085  EAC7 001E                            SRM,R6,'00FF'X    TERMID_LCL,AUTO
          1 000087       00FF

      813    12056    3                  TERMID_LCL.TERM.SUBSUBDEVICE = LVL3BLK.DEVNUM;

  12056   1 000088  E2C6 0003                            LLH,R6   3,B6
          1 00008A  EF47 0021                            STR,R6   TERMID_LCL+3,AUTO

      814    12057    3                  CALL GJA$BLD_CTX(TERMID_LCL,CHN$,'1'B) WHENALTRETURN

  12057   1 00008C  DBF0 8000                            LAB,B5   -32768,IMO
          1 00008E  DFC7 002E                            STB,B5   LIN$+6,AUTO
          1 000090  CBC7 0026                            LAB,B4   CHN$,AUTO
          1 000092  CFC7 002C                            STB,B4   LIN$+4,AUTO
          1 000094  BBC7 001E                            LAB,B3   TERMID_LCL,AUTO
          1 000096  BFC7 002A                            STB,B3   LIN$+2,AUTO
          1 000098  BBC7 002A                            LAB,B3   LIN$+2,AUTO
          1 00009A  CBF0 0300                            LAB,B4   768,IMO
          1 00009C  E380 0000 0000  xent                 LNJ,B6   GJA$BLD_CTX
          1 00009F       0003                            DC       s:12059,PREL
          1 0000A0  0F81 0008                            B        s:12061,PREL

      815    12058    4                  DO;
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:149  

      816    12059    4                       CALL M$SCREECH(NODEDEV);

  12059   1 0000A2  BB80 0000 0000  00                   LAB,B3   NODEDEV
          1 0000A5  B870 0485                            LDR,R3   1157,IMO
          1 0000A7  0001                                 MCL
          1 0000A8       0000                            DC       s:12059+6,PREL

      817    12060    4                     END;

      818    12061    3                  LVL3$ = PINCRC(LVL3$,LVL3BLK.LEN);

  12061   1 0000A9  ECC7 000E                            LDB,B6   LVL3$,AUTO
          1 0000AB  B846 0001                            LDR,R3   1,B6
          1 0000AD  8CC7 000E                            LDI      LVL3$,AUTO
          1 0000AF  7031                                 DCL,R7   1
          1 0000B0  8D47 002A                            SDI      LIN$+2,AUTO
          1 0000B2  F853                                 LDR,R7   R3
          1 0000B3  6C00                                 LDV,R6   0
          1 0000B4  8447 002A                            AID      LIN$+2,AUTO
          1 0000B6  7071                                 DCR,R7   1
          1 0000B7  8D47 000E                            SDI      LVL3$,AUTO

      819    12062    3                END;                       /* DO J                     */

  12062   1 0000B9  8AC7 0009                            INC      J,AUTO
          1 0000BB  ECC7 000C                            LDB,B6   LVL2$,AUTO
          1 0000BD  D806                                 LDR,R5   ,B6
          1 0000BE  D570 00FF                            AND,R5   255,IMO
          1 0000C0  D947 0009                            CMR,R5   J,AUTO
          1 0000C2  0340                                 BG       s:12055,SPREL

      820    12063    2             LVL2$ = LVL3$;

  12063   1 0000C3  DCC7 000E                            LDB,B5   LVL3$,AUTO
          1 0000C5  DFC7 000C                            STB,B5   LVL2$,AUTO

PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:150  
      821    12064    2           END;                            /* DO I                     */

  12064   1 0000C7  8AC7 0008                            INC      I,AUTO
          1 0000C9  ECC7 000A                            LDB,B6   LVL1$,AUTO
          1 0000CB  E806                                 LDR,R6   ,B6
          1 0000CC  E570 00FF                            AND,R6   255,IMO
          1 0000CE  E947 0008                            CMR,R6   I,AUTO
          1 0000D0  0301 FF6B                            BG       s:12044,PREL

      822    12065    1        RETURN;

  12065   1 0000D2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

  12057   1                              SEND_RJC        null
      823    12066    1   SEND_RJC:;
      824    12067             /*N* WHAT DO WE DO??? */
      825    12068    1        ALTRETURN;

  12068   1 0000D5  C380 0000 0000  xent SEND_RJC        LNJ,B4   X6A_AALT
      826    12069    1   END GJA$LINEPROFILE;
      827    12070        %EOD;

PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:151  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$LINEPROFILE.
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:152  

 **** Variables and constants ****

  ****  Section 000  Data  GJA$LINEPROFILE

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 NODEDEV

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @PRO$                      4-0-0/w PTR         r     1 @TERMID
    26-0-0/w PTR         r     1 CHN$                       8-0-0/w UBIN(16)    r     1 I
     9-0-0/w UBIN(16)    r     1 J                         28-0-0/w PTR         r     1 LIN$
     A-0-0/w PTR         r     1 LVL1$                      C-0-0/w PTR         r     1 LVL2$
     E-0-0/w PTR         r     1 LVL3$                     *0-0-0/w PTR         r     1 PRO$
    *0-0-0/w STRC(128)   r     1 TERMID                    1E-0-0/c STRC(128)   r     1 TERMID_LCL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(216)   r     1 GJA_RQSCHN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(384)   r     1 KL_LNKVC                   0-0-0/w STRC(64)    r     1 LVL1BLK
     0-0-0/w STRC(64)    r     1 LVL2BLK                    0-0-0/w STRC(64)    r     1 LVL3BLK

PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:153  

   Procedure GJA$LINEPROFILE requires 216 words for executable code.
   Procedure GJA$LINEPROFILE requires 48 words of local(AUTO) storage.
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:154  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:155  
          MINI XREF LISTING

CHN$
     11972**DCL     12049<>CALL    12057<>CALL
GJA$BLD_CTX
     11221**DCL-ENT 12049--CALL    12057--CALL
GJA$GET_CHNTBL_PTR
     11219**DCL-ENT 12041--CALL
GJA_RQSCHN.SGN.L
     11826**DCL     11834--IMP-SIZ
GJA_RQSCHN.TERMINAL_ID.TERM
     11806**DCL     11815--REDEF
I
     11223**DCL     12043<<DOINDEX
J
     11224**DCL     12054<<DOINDEX
KL_LNKVC.CUG
     11624**DCL     11668--REDEF
KL_LNKVC.VIRCIR#
     11718**DCL     12046>>ASSIGN
LIN$
     11973**DCL     12041<>CALL
LVL1$
     11734**DCL     11239--IMP-PTR 12039<<ASSIGN  12042>>ASSIGN  12042>>ASSIGN  12043>>DOINDEX
LVL1BLK.LEN
     11262**DCL     12042>>ASSIGN
LVL1BLK.NSUBS
     11254**DCL     12043>>DOINDEX
LVL2$
     11735**DCL     11334--IMP-PTR 11525--IMP-PTR 12042<<ASSIGN  12044>>ASSIGN  12045>>IF      12046>>ASSIGN
     12048>>ASSIGN  12053>>ASSIGN  12053>>ASSIGN  12054>>DOINDEX 12063<<ASSIGN
LVL2BLK.BLKTYP
     11362**DCL     12045>>IF
LVL2BLK.DEVNUM
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:156  
     11389**DCL     12048>>ASSIGN
LVL2BLK.LEN
     11357**DCL     12053>>ASSIGN
LVL2BLK.LEV
     11338**DCL     12044>>ASSIGN
LVL2BLK.NSUBS
     11349**DCL     12054>>DOINDEX
LVL3$
     11736**DCL     11429--IMP-PTR 12053<<ASSIGN  12055>>ASSIGN  12056>>ASSIGN  12061<<ASSIGN  12061>>ASSIGN
     12061>>ASSIGN  12063>>ASSIGN
LVL3BLK.DEVNUM
     11484**DCL     12056>>ASSIGN
LVL3BLK.LEN
     11452**DCL     12061>>ASSIGN
LVL3BLK.LEV
     11433**DCL     12055>>ASSIGN
M$SCREECH
      4269**DCL-ENT 12051--CALL    12059--CALL
NODEDEV
     12002**DCL     12051<>CALL    12059<>CALL
PRO$
     11217**DCL        27--PROC    12039>>ASSIGN
RQSCHN.TERMINAL_ID.TERM
     11909**DCL     11918--REDEF
SEND_RJC
     12057**LABEL   12038--GOTO
TERMID
     11202**DCL        27--PROC    12040>>ASSIGN
TERMID.LEV
     11206**DCL     12037>>IF
TERMID.TERM
     11206**DCL     11215--REDEF
TERMID_LCL
     11957**DCL     12040<<ASSIGN  12041<>CALL    12049<>CALL    12057<>CALL
TERMID_LCL.LEV
     11961**DCL     12044<<ASSIGN  12055<<ASSIGN
PL6.E3A0      #006=GJA$LINEPROFILE File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:157  
TERMID_LCL.TERM
     11961**DCL     11970--REDEF
TERMID_LCL.TERM.SUBDEVICE
     11967**DCL     12046<<ASSIGN  12048<<ASSIGN
TERMID_LCL.TERM.SUBSUBDEVICE
     11967**DCL     12056<<ASSIGN

PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:158  
      828        1        /*T***********************************************************/
      829        2        /*T*                                                         */
      830        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      831        4        /*T*                                                         */
      832        5        /*T***********************************************************/
      833        6        /*F* NAME: GJA$CHK_TRM_RNG
      834        7
      835        8             PURPOSE: This routine is called when Node Admin receives a range of
      836        9                      termid specs.  This routine validates that the two termids
      837       10                      constitute a valid range according to the rules defined
      838       11                      below.
      839       12
      840       13             DESCRIPTION: This routine validates that the two termids passed
      841       14                          constitute a valid range according to the following
      842       15                          rules:
      843       16
      844       17                         1. TERMLO.LEV = TERMHI.LEV
      845       18
      846       19                         2. IF LEV = 1
      847       20                               TERMLO.CHAN <= TERMHI.CHAN
      848       21
      849       22                         3. IF LEV = 2
      850       23                               TERMLO.CHAN = TERMHI.CHAN
      851       24                               TERMLO.SUB <= TERMHI.SUB
      852       25
      853       26                         4. IF LEV = 3
      854       27                               TERMLO.CHAN = TERMHI.CHAN
      855       28                               TERMLO.SUB = TERMHI.SUB
      856       29                               TERMLO.SUBSUB <= TERMHI.SUBSUB
      857       30
      858       31                         If any of the specified conditions are not met, the
      859       32                         altreturn is taken.  Else, return.
      860       33
      861       34             CALL: CALL GJA$CHK_TRM_RNG(TERMLO,TERMHI) ALTRET(label);
      862       35             INPUT: TERMLO, TERMHI - the two termids making up the range.  See
      863       36                    the B$TERMINAL_ID macro in CP_6.
      864       37             OUTPUT: None.  If the range is valid we return, else altreturn.
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:159  
      865       38        */
      866       39        GJA$CHK_TRM_RNG: PROC(TERMLO,TERMHI) ALTRET;
      867       40
      868       41        %INCLUDE LCP_6;
      869     4320        %INCLUDE CP_6_SUBS;
      870     4860        %INCLUDE KL_MACRO_C;
      871     8212
      872     8213        %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM,ALGN=ALIGNED);
      873     8242        %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM,ALGN=ALIGNED);
      874     8271        %EJECT;
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:160  
      875     8272    1        IF TERMLO.LEV ~= TERMHI.LEV
      876     8273    1        THEN ALTRETURN;
      877     8274    2        DO CASE(TERMLO.LEV);
      878     8275    2        CASE(%TERMINAL_ID_LEV_CHAN#);
      879     8276    2           IF TERMLO.TERM.CHANNEL > TERMHI.TERM.CHANNEL
      880     8277    2           THEN ALTRETURN;
      881     8278    2        CASE(%TERMINAL_ID_LEV_SUBCHAN#);
      882     8279    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR
      883     8280    2                TERMLO.TERM.SUBDEVICE > TERMHI.TERM.SUBDEVICE
      884     8281    2           THEN ALTRETURN;
      885     8282    2        CASE(%TERMINAL_ID_LEV_SUBSUBCHAN#);
      886     8283    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR
      887     8284    2                TERMLO.TERM.SUBDEVICE ~= TERMHI.TERM.SUBDEVICE OR
      888     8285    2                TERMLO.TERM.SUBSUBDEVICE > TERMHI.TERM.SUBSUBDEVICE
      889     8286    2           THEN ALTRETURN;
      890     8287    2        END;                               /* DO CASE                  */
      891     8288    1        RETURN;
      892     8289    1   END GJA$CHK_TRM_RNG;
      893     8290        %EOD;

PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:161  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$CHK_TRM_RNG.

   Procedure GJA$CHK_TRM_RNG requires 83 words for executable code.
   Procedure GJA$CHK_TRM_RNG requires 8 words of local(AUTO) storage.

PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:162  

 Object Unit name= GJA$CHK_TRM_RNG                            File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:56:48.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    83     53  GJA$CHK_TRM_RNG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  GJA$CHK_TRM_RNG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:163  


      828        1        /*T***********************************************************/
      829        2        /*T*                                                         */
      830        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      831        4        /*T*                                                         */
      832        5        /*T***********************************************************/
      833        6        /*F* NAME: GJA$CHK_TRM_RNG
      834        7
      835        8             PURPOSE: This routine is called when Node Admin receives a range of
      836        9                      termid specs.  This routine validates that the two termids
      837       10                      constitute a valid range according to the rules defined
      838       11                      below.
      839       12
      840       13             DESCRIPTION: This routine validates that the two termids passed
      841       14                          constitute a valid range according to the following
      842       15                          rules:
      843       16
      844       17                         1. TERMLO.LEV = TERMHI.LEV
      845       18
      846       19                         2. IF LEV = 1
      847       20                               TERMLO.CHAN <= TERMHI.CHAN
      848       21
      849       22                         3. IF LEV = 2
      850       23                               TERMLO.CHAN = TERMHI.CHAN
      851       24                               TERMLO.SUB <= TERMHI.SUB
      852       25
      853       26                         4. IF LEV = 3
      854       27                               TERMLO.CHAN = TERMHI.CHAN
      855       28                               TERMLO.SUB = TERMHI.SUB
      856       29                               TERMLO.SUBSUB <= TERMHI.SUBSUB
      857       30
      858       31                         If any of the specified conditions are not met, the
      859       32                         altreturn is taken.  Else, return.
      860       33
      861       34             CALL: CALL GJA$CHK_TRM_RNG(TERMLO,TERMHI) ALTRET(label);
      862       35             INPUT: TERMLO, TERMHI - the two termids making up the range.  See
      863       36                    the B$TERMINAL_ID macro in CP_6.
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:164  
      864       37             OUTPUT: None.  If the range is valid we return, else altreturn.
      865       38        */
      866       39        GJA$CHK_TRM_RNG: PROC(TERMLO,TERMHI) ALTRET;

     39   0 000000  D380 0000 0000  xent GJA$CHK_TRM_RNG LNJ,B5   X6A_AUTO_2
          0 000003       0008 0002                       DC       8,2

      867       40
      868       41        %INCLUDE LCP_6;
      869     4320        %INCLUDE CP_6_SUBS;
      870     4860        %INCLUDE KL_MACRO_C;
      871     8212
      872     8213        %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM,ALGN=ALIGNED);
      873     8242        %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM,ALGN=ALIGNED);
      874     8271        %EJECT;
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:165  
      875     8272    1        IF TERMLO.LEV ~= TERMHI.LEV

   8272   0 000005  ECC7 0004                            LDB,B6   @TERMLO,AUTO
          0 000007  E806                                 LDR,R6   ,B6
          0 000008  E570 00FF                            AND,R6   255,IMO
          0 00000A  DCC7 0006                            LDB,B5   @TERMHI,AUTO
          0 00000C  D805                                 LDR,R5   ,B5
          0 00000D  D570 00FF                            AND,R5   255,IMO
          0 00000F  E955                                 CMR,R6   R5
          0 000010  0901 0004                            BE       s:8274,PREL

      876     8273    1        THEN ALTRETURN;

   8273   0 000012  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      877     8274    2        DO CASE(TERMLO.LEV);

   8274   0 000015  B856                                 LDR,R3   R6
          0 000016  3D04                                 CMV,R3   4
          0 000017  0281 0038                            BGE      s:8288,PREL
          0 000019  A830 0000 001F  00                   LDR,R2   s:8274+10,R3
          0 00001C  83A0 0000 0023  00                   JMP      s:8276,R2
          0 00001F       002D                            DC       s:8288,PREL
          0 000020       0000                            DC       s:8276,PREL
          0 000021       0009                            DC       s:8279,PREL
          0 000022       0018                            DC       s:8283,PREL

      878     8275    2        CASE(%TERMINAL_ID_LEV_CHAN#);

      879     8276    2           IF TERMLO.TERM.CHANNEL > TERMHI.TERM.CHANNEL

   8276   0 000023  C846 0001                            LDR,R4   1,B6
          0 000025  C945 0001                            CMR,R4   1,B5
          0 000027  0381 0028                            BLE      s:8288,PREL

      880     8277    2           THEN ALTRETURN;

PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:166  
   8277   0 000029  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      881     8278    2        CASE(%TERMINAL_ID_LEV_SUBCHAN#);

      882     8279    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR

   8279   0 00002C  C846 0001                            LDR,R4   1,B6
          0 00002E  C945 0001                            CMR,R4   1,B5
          0 000030  0981 0007                            BNE      s:8281,PREL
          0 000032  9846 0002                            LDR,R1   2,B6
          0 000034  9945 0002                            CMR,R1   2,B5
          0 000036  0381 0019                            BLE      s:8288,PREL

      883     8280    2                TERMLO.TERM.SUBDEVICE > TERMHI.TERM.SUBDEVICE
      884     8281    2           THEN ALTRETURN;

   8281   0 000038  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      885     8282    2        CASE(%TERMINAL_ID_LEV_SUBSUBCHAN#);

      886     8283    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR

   8283   0 00003B  C846 0001                            LDR,R4   1,B6
          0 00003D  C945 0001                            CMR,R4   1,B5
          0 00003F  0981 000D                            BNE      s:8286,PREL
          0 000041  9846 0002                            LDR,R1   2,B6
          0 000043  9945 0002                            CMR,R1   2,B5
          0 000045  0981 0007                            BNE      s:8286,PREL
          0 000047  E846 0003                            LDR,R6   3,B6
          0 000049  E945 0003                            CMR,R6   3,B5
          0 00004B  0381 0004                            BLE      s:8288,PREL

      887     8284    2                TERMLO.TERM.SUBDEVICE ~= TERMHI.TERM.SUBDEVICE OR
      888     8285    2                TERMLO.TERM.SUBSUBDEVICE > TERMHI.TERM.SUBSUBDEVICE
      889     8286    2           THEN ALTRETURN;

   8286   0 00004D  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:167  

      890     8287    2        END;                               /* DO CASE                  */

      891     8288    1        RETURN;

   8288   0 000050  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      892     8289    1   END GJA$CHK_TRM_RNG;
      893     8290        %EOD;

PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:168  
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$CHK_TRM_RNG.
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:169  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @TERMHI                    4-0-0/w PTR         r     1 @TERMLO
    *0-0-0/w STRC(128)   r     1 TERMHI                    *0-0-0/w STRC(128)   r     1 TERMLO


   Procedure GJA$CHK_TRM_RNG requires 83 words for executable code.
   Procedure GJA$CHK_TRM_RNG requires 8 words of local(AUTO) storage.
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:170  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=GJA$CHK_TRM_RNG File=GJA$SUBS.:E05TSI                         TUE 07/29/97 21:56 Page:171  
          MINI XREF LISTING

TERMHI
      8256**DCL        39--PROC
TERMHI.LEV
      8260**DCL      8272>>IF
TERMHI.TERM
      8260**DCL      8269--REDEF
TERMHI.TERM.CHANNEL
      8266**DCL      8276>>IF       8279>>IF       8283>>IF
TERMHI.TERM.SUBDEVICE
      8266**DCL      8279>>IF       8283>>IF
TERMHI.TERM.SUBSUBDEVICE
      8266**DCL      8283>>IF
TERMLO
      8227**DCL        39--PROC
TERMLO.LEV
      8231**DCL      8272>>IF       8274>>DOCASE
TERMLO.TERM
      8231**DCL      8240--REDEF
TERMLO.TERM.CHANNEL
      8237**DCL      8276>>IF       8279>>IF       8283>>IF
TERMLO.TERM.SUBDEVICE
      8237**DCL      8279>>IF       8283>>IF
TERMLO.TERM.SUBSUBDEVICE
      8237**DCL      8283>>IF

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:172  
      894        1        /*T***********************************************************/
      895        2        /*T*                                                         */
      896        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      897        4        /*T*                                                         */
      898        5        /*T***********************************************************/
      899        6        /*F* NAME:     GJA$NETWORK_MANAGER
      900        7
      901        8             PURPOSE:  To respond to a request from the Network manager.
      902        9
      903       10             DESCRIPTION:  This routine will be called whenever there is a
      904       11                           need to solicit the Network manager for some data.
      905       12                           If the Network manager is not currently connected
      906       13                           it will respond otherwise the messages get passed
      907       14                           on to the Network manager.
      908       15
      909       16             CALL:      CALL GJA$NETWORK_MANAGER(KL$?,SIZE);
      910       17
      911       18             INPUTS: KL$? is a structure defined in KL_MACRO_C
      912       19                     SIZE is the size of the passed structure
      913       20
      914       21         */
      915       22        GJA$NETWORK_MANAGER: PROC (BUFFER,SIZE) ALTRET;
      916       23
      917       24                                                /* Includes                 */
      918       25        %INCLUDE GJA_MSG_M;
      919      264        %INCLUDE KL_CONTROL_C;
      920      644        %INCLUDE KL_MACRO_C;
      921     3996        %INCLUDE KL_AFCN_C;
      922     4097        %INCLUDE KNH_MACRO_C;
      923     4380        %INCLUDE KN_ERRORS_C;
      924     4444        %INCLUDE LCP_6;
      925     8723        %INCLUDE KV$BPC;
      926     8752        %INCLUDE KL_ERRORS_C;
      927     8794        %INCLUDE KNN_NETWORK_M;
      928     9157
      929     9158        /* Parameters */
      930     9159    1   DCL BUFFER CHAR(SIZE) WALIGNED;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:173  
      931     9160    1   DCL SIZE UBIN;
      932     9161
      933     9162                                                /* Symrefs                  */
      934     9163    1   DCL GJA_LDCT_NM UBIN SYMREF;
      935     9164    1   DCL GJA_UID_NM UBIN(32) SYMREF;
      936     9165    1   DCL GJA_UID_NM$ REDEF GJA_UID_NM PTR;
      937     9166    1   DCL GJA_UID_NANM$ PTR SYMREF;
      938     9167    1   DCL G$DS1$ PTR SYMREF;
      939     9168    1   DCL GJA_LINE_HEAD$ PTR SYMREF;
      940     9169    1   DCL GJA_CHNRSP_HEAD$ PTR SYMREF;
      941     9170    1   DCL GJA$SYSLOG$ PTR SYMREF;
      942     9171    1   DCL KV_B_POOL$ PTR SYMREF;
      943     9172    1   DCL GJA_NODE# UBIN SYMREF;
      944     9173    1   DCL GJA_DEFNODE UBIN SYMREF;
      945     9174    1   DCL GJA_ROUTE$ PTR SYMREF;
      946     9175    1   DCL GJA_MSG_SGSYN$ PTR SYMREF;
      947     9176    1   DCL GJA_MSG_BDID$ PTR SYMREF;
      948     9177    1   DCL GJA_MSG_NOHOST$ PTR SYMREF;
      949     9178    1   DCL GJA_MSG_UDHOST$ PTR SYMREF;
      950     9179        %GJA_NODETBL(NAME=GJA$NODETBL,STCLASS=SYMREF);
      951     9203
      952     9204                                                /* Based                    */
      953     9205        %KL_HDR (FPTN=KL$HDR,STCLASS="BASED(KL$)");
      954     9286        %KL_CONTROL_INIT (FPTN=KL$CONTROL,NUM_FIXED=%KL_FIXED_HI,NUM_INDXD=4,STCLASS=
              9286            "BASED(KL$)",LAST=",");
      955     9412    1            2 BLOCK(0:15) UBIN(18) UNAL,
      956     9413    1            2 UNBLOCK(0:15) UBIN(18) UNAL,
      957     9414    1            2 USRPARM1(0:7) UBIN(18) UNAL,
      958     9415    1            2 USRPARM2(0:7) UBIN(18) UNAL;
      959     9416        %KL_ADMIN (FPTN=KL$ADMIN,STCLASS="BASED(KL$)");
      960     9577        %KL_CONFIGRSP (FPTN=KL$CONFIGRSP,STCLASS="BASED(KL$)");
      961     9668        %KL_CWNAK (FPTN=KL$CWNAK,STCLASS="BASED(KL$)");
      962     9733        %KL_KEYMES (FPTN=KL$KEYMES,STCLASS="BASED(KL$)");
      963     9872        %KL_RQSCHN (FPTN=KL$RQSCHN,STCLASS="BASED(KL$)");
      964     9975        %KL_SGN (FPTN=KL$SGN,STCLASS="BASED(KL$)",LGNSIZ="KL$SGN.LOGON.LGNSIZ");
      965    10068        %KL_ERRMSG_RQS (FPTN=KL$ERRMSG_RQS,STCLASS="BASED(KL$)");
      966    10243        %KL_CHNRSP (FPTN=KL$CHNRSP,STCLASS=BASED);
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:174  
      967    10463        %KL_DUMPMSG (FPTN=KL$DUMPMSG,STCLASS="BASED(KL$)");
      968    10504        %KL_RQSPROFILE (FPTN=KL$RQSPROFILE,STCLASS="BASED(KL$)");
      969    10562    1   DCL B$DWORD UBIN(32) BASED;
      970    10563    1   DCL B$PTR$ PTR BASED;
      971    10564    1   DCL B$WORD UBIN BASED;
      972    10565        %KV$BPC(STCLASS="BASED(KV_B_POOL$)");
      973    10587    1   DCL KNN$ROUTE$(0:0) PTR BASED(GJA_ROUTE$);
      974    10588        %KNN$ROUTE(STCLASS="BASED(ROUTE$)");
      975    10660        %GJA$LGNCTX(STCLASS="BASED");
      976    10745        %GJA$HAND_CTX(STCLASS="BASED(CTX$)");
      977    10794    1   DCL 1 SV$MSG BASED,
      978    10795    1            2 BFRSIZ UBIN,                 /* size of buffer allocated */
      979    10796    1            2 LNK$ PTR,
      980    10797    1            2 SZ UBIN,
      981    10798    1            2 VFC CHAR(1) UNAL,
      982    10799    1            2 * CHAR(1) UNAL;
      983    10800    1   DCL STRING CHAR(SIZE) BASED;
      984    10801    1   DCL SVMSG$ PTR;
      985    10802    1   DCL TMP$ PTR;
      986    10803    1   DCL ACCT CHAR(8);
      987    10804    1   DCL 1 ACCR REDEF ACCT,
      988    10805    1            2 C1 CHAR(1) UNAL,
      989    10806    1            2 * CHAR(7) UNAL;
      990    10807    1   DCL 1 NAME ALIGNED,
      991    10808    1            2 C UBIN BYTE UNAL,
      992    10809    1            2 T CHAR(12) UNAL;
      993    10810    1   DCL PW CHAR(8);
      994    10811    1   DCL 1 PRO ALIGNED,
      995    10812    1            2 C UBIN BYTE UNAL,
      996    10813    1            2 T CHAR(11) UNAL;
      997    10814    1   DCL ERR UBIN;
      998    10815    1   DCL HOST CHAR(8);
      999    10816    1   DCL NOSETUP BIT (1) ALIGNED;
     1000    10817    1   DCL NOHEADER BIT (1) ALIGNED;
     1001    10818    1   DCL FOUNDIT BIT(1);
     1002    10819    1   DCL 1 TEXT BASED,
     1003    10820    1            2 L UBIN BYTE UNAL,
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:175  
     1004    10821    1            2 C CHAR(TEXT.L) UNAL;
     1005    10822    1   DCL ROUTE$ PTR;
     1006    10823    1   DCL CTX$ PTR;
     1007    10824    1   DCL NMID$ PTR;
     1008    10825    1   DCL NMID REDEF NMID$ UBIN(32);
     1009    10826
     1010    10827                                                /* Static                   */
     1011    10828        %KL_SGNRSP(FPTN=SGNRSP,STCLASS=STATIC,RSPSIZ=200);
     1012    10964        %KL_SYSLOG(FPTN=SYSLOG,LAST=",",STCLASS=STATIC,FILENUM=SECLOG);
     1013    10988        %KL_ERRLOG(FPTN=ERRLOG,LAST=",",LVL=2,STCLASS=STATIC);
     1014    11096    1                 3 DATA CHAR(200) UNAL;
     1015    11097        %KL_ERRMSG_RSP (FPTN=ERRMSG_RSP,STCLASS=STATIC);
     1016    11173        %KL_CHNRSP (FPTN=CHNRSP,STCLASS=STATIC);
     1017    11393        %KL_PRFRSP (FPTN=PRFRSP,STCLASS=STATIC,PRFSIZE=1);
     1018    11443        %VLP_ERRCODE(FPTN=E$NONETMAN,FCG=GJ,MID=A,MON='1'B,
     1019    11444                     ERR#=%E$NONETMAN,SEV=%G_SEV_ERROR#);
     1020    11490        %VLP_ERRCODE(FPTN=E$KLH_FCG,FCG=KL,MID=H,MON='1'B,SEV=%G_SEV_ERROR#);
     1021    11536
     1022    11537                                                /* Entry points             */
     1023    11538    1   DCL GJA$DECODE_APL_MSG ENTRY(2) ALTRET;
     1024    11539    1   DCL GJA$SEND_MSG ENTRY(4) ALTRET;
     1025    11540    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
     1026    11541    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
     1027    11542    1   DCL GJA$PARSE ENTRY(9) ALTRET;
     1028    11543
     1029    11544                                                /* Auto                     */
     1030    11545    1   DCL KL$ PTR;
     1031    11546        %GJA$PARAMS (FPTN=PARAMS,STCLASS=AUTO);
     1032    11561    1   DCL P$ PTR;
     1033    11562    1   DCL I UBIN;
     1034    11563    1   DCL CHNRSP$ PTR;
     1035    11564        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=AUTO);
     1036    11593
     1037    11594        %EJECT;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:176  
     1038    11595    1        KL$ = ADDR(BUFFER);
     1039    11596    1        IF GJA_LDCT_NM ~= 0 AND KL$HDR.CODE ~= IGA_RQSCHN AND KL$HDR.CODE ~= IGA_SGN
     1040    11597        /* Network manager is active and not a channel request; forward to Host */
     1041    11598    2        THEN DO;
     1042    11599    2             CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);
     1043    11600    2           END;
     1044    11601    2        ELSE DO;
     1045    11602    3             DO CASE (KL$HDR.CODE);
     1046    11603    3             CASE (IGA_CONTROL_INIT);
     1047    11604    3                P$ = PINCRW(G$DS1$,2);
     1048    11605    4                DO I = 1 TO G$DS1$->B$DWORD;
     1049    11606    4                     P$ = PINCRW(G$DS1$,PINCRW(G$DS1$,I*SIZEW(B$DWORD))->B$DWORD);
     1050    11607    4                     IF P$->KL$CONTROL.HANDLER = KL$CONTROL.HANDLER
     1051    11608    5                     THEN DO;
     1052    11609    5                          P$->KL$CONTROL.TYPE = 1; /* Ack */
     1053    11610    5                          PARAMS = '0'B;
     1054    11611    5                          PARAMS.DAT$ = P$;
     1055    11612    5                          PARAMS.DATSIZE = SIZEC(KL$CONTROL);
     1056    11613    5                          CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);
     1057    11614    5                          RETURN;
     1058    11615    5                        END;
     1059    11616    4                     P$ = PINCRW(P$,SIZEW(KL$CONTROL));
     1060    11617    4                   END;
     1061    11618    3                KL$CONTROL.TYPE = 0;       /* NAK                      */
     1062    11619    3                PARAMS='0'B;
     1063    11620    3                PARAMS.DAT$ = ADDR(KL$CONTROL);
     1064    11621    3                PARAMS.DATSIZE = SIZE;
     1065    11622    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);
     1066    11623    3             CASE (IGA_RQSPRO);
     1067    11624    3                PRFRSP.PROFILE.PRFSIZE=0;
     1068    11625    3                PRFRSP.NMID = KL$RQSPROFILE.NMID;
     1069    11626    3                PARAMS='0'B;
     1070    11627    3                PARAMS.DATSIZE = SIZEC(PRFRSP);
     1071    11628    3                PARAMS.DAT$ = ADDR(PRFRSP);
     1072    11629    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);
     1073    11630
     1074    11631    3             CASE (IGA_RQSCHN);
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:177  
     1075    11632    3                IF KL$RQSCHN.LINE_PROFILE  /* This is a line profile reqest */
     1076    11633    4                THEN DO;
     1077    11634    4                     CHNRSP$ = GJA_LINE_HEAD$;
     1078    11635    4                     KL$RQSCHN.TERMINAL_ID.TTYP = 0;
     1079    11636
     1080    11637    5                     DO WHILE (CHNRSP$ ~= ADDR(NIL));
     1081    11638    5                          IF PINCRW(CHNRSP$,SIZEW(B$PTR$)+SIZEW(B$WORD))->KL$CHNRSP.
             11638                                   TERMINAL_ID.TERM.CHANNEL
     1082    11639    5                               = KL$RQSCHN.TERMINAL_ID.TERM.CHANNEL
     1083    11640    6                          THEN DO;
     1084    11641    6                               CHNRSP$ = PINCRW(CHNRSP$,SIZEW(B$PTR$));
     1085    11642    6                               PARAMS='0'B;
     1086    11643    6                               PARAMS.DATSIZE = CHNRSP$->B$WORD*2 - SIZEC(B$WORD) -
             11643                                        SIZEC(B$PTR$);
     1087    11644    6                               CHNRSP$ = PINCRW(CHNRSP$,SIZEW(B$WORD));
     1088    11645    6                               CHNRSP$->KL$CHNRSP.HANDLER = KL$RQSCHN.HANDLER;
     1089    11646    6                               PARAMS.DAT$ = CHNRSP$;
     1090    11647    6                               CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);
     1091    11648    6                               RETURN;
     1092    11649    6                             END;
     1093    11650    5                          CHNRSP$ = CHNRSP$->B$PTR$;
     1094    11651    5                        END;
     1095    11652    4                   END;
     1096    11653    3                ELSE IF KL$RQSCHN.CONFIG
     1097    11654    4                     THEN DO;
     1098    11655    4                          CHNRSP$ = GJA_CHNRSP_HEAD$;
     1099    11656    4                          TERMID = KL$RQSCHN.TERMINAL_ID;
     1100    11657    4                          TERMID.TTYP = 0;
     1101    11658    4                          IF TERMID.TERM.TERM_NAME ~= ' '
     1102    11659    4                          THEN
     1103    11660    4                               TERMID.TERM.CHANNEL = 0;
     1104    11661
     1105    11662    5                          DO WHILE (CHNRSP$ ~= ADDR(NIL));
     1106    11663    5                               IF PINCRW(CHNRSP$,SIZEW(B$PTR$))->KL$CHNRSP.TERMINAL_ID
     1107    11664    5                                    = TERMID
     1108    11665    6                               THEN DO;
     1109    11666    6                                    CHNRSP = PINCRW(CHNRSP$,SIZEW(B$PTR$))->KL$CHNRSP;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:178  
     1110    11667    6                                    GOTO DO_CHNRSP;
     1111    11668    6                                  END;
     1112    11669    5                               CHNRSP$ = CHNRSP$->B$PTR$;
     1113    11670    5                             END;
     1114    11671    4                        END;
     1115    11672        /* When we get down here, we could not satisfy this channel request.
     1116    11673           But remember that maybe this request will be handled by the host. */
     1117    11674    3                IF GJA_LDCT_NM ~= 0
     1118    11675    4                THEN DO;
     1119    11676    4                     CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);
     1120    11677    4                     RETURN;
     1121    11678    4                   END;
     1122    11679    3                CHNRSP.NAK = '1'B;
     1123    11680    3   DO_CHNRSP:   ;
     1124    11681    3                CHNRSP.LINE_PROFILE = KL$RQSCHN.LINE_PROFILE;
     1125    11682    3                CHNRSP.CONFIG = KL$RQSCHN.CONFIG;
     1126    11683    3                CHNRSP.DFLTHND = KL$RQSCHN.DFLTHND;
     1127    11684    3                CHNRSP.HANDLER = KL$RQSCHN.HANDLER;
     1128    11685    3                CHNRSP.TERMINAL_ID = KL$RQSCHN.TERMINAL_ID;
     1129    11686    3                PARAMS='0'B;
     1130    11687    3                PARAMS.DAT$ = ADDR(CHNRSP);
     1131    11688    3                PARAMS.DATSIZE = SIZEC(CHNRSP);
     1132    11689    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);
     1133    11690
     1134    11691    3             CASE (IGA_SGN);
     1135    11692    4                IF KL$SGN.AUTOLGN THEN DO;
     1136    11693    5                     IF GJA_LDCT_NM = 0 THEN DO;
     1137    11694    5                          ERR = %E$NOHOST;
     1138    11695    5                          GOTO LGNFAILED;
     1139    11696    5                        END;
     1140    11697    4                     ELSE
     1141    11698    4                          CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);
     1142    11699    4                   END;
     1143    11700    4                ELSE DO;
     1144    11701    4                     IF GJA_MSG_NOHOST$ = ADDR(NIL) OR
     1145    11702    4                          GJA_MSG_UDHOST$ = ADDR(NIL) OR
     1146    11703    4                          GJA_MSG_BDID$ = ADDR(NIL) OR
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:179  
     1147    11704    5                          GJA_MSG_SGSYN$ = ADDR(NIL) THEN DO;
     1148    11705    5                          IF GJA_LDCT_NM = 0 THEN
     1149    11706    5                               GOTO LGNFAILED;
     1150    11707    5                          ELSE
     1151    11708    5                               CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);
     1152    11709    5                          RETURN;
     1153    11710    5                        END;
     1154    11711    4                     CALL GJA$PARSE(KL$SGN.LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,
             11711                              NOHEADER)
     1155    11712    5                     WHENALTRETURN DO;
     1156    11713    5                          SYSLOG.ERRLOG.ERRCODE.ERR# = ERR;
     1157    11714    5                          SYSLOG.ERRLOG.DATA_SIZE = KL$SGN.LOGON.LGNSIZ;
     1158    11715    5                          SYSLOG.ERRLOG.DATA = KL$SGN.LOGON.LGNTXT;
     1159    11716    5                          SYSLOG.ERRLOG.TERMID = KL$SGN.TERMINAL_ID;
     1160    11717    5                          SYSLOG.ERRLOG.VALUES(0) = GJA_NODE#;
     1161    11718    5                          CALL GJA$NETWORK_MANAGER(SYSLOG,SIZEC(SYSLOG)-SIZEC(
     1162    11719    5                               SYSLOG.ERRLOG.DATA)+SYSLOG.ERRLOG.DATA_SIZE);
     1163    11720    6                          DO CASE (ERR);
     1164    11721    6                          CASE(%E$SGSYN);
     1165    11722    6                             SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_SGSYN$->TEXT.L;
     1166    11723    6                             SGNRSP.MESSAGE.RSPTXT = GJA_MSG_SGSYN$->TEXT.C;
     1167    11724    6                          CASE(%E$BDID);
     1168    11725    6                             SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_BDID$->TEXT.L;
     1169    11726    6                             SGNRSP.MESSAGE.RSPTXT = GJA_MSG_BDID$->TEXT.C;
     1170    11727    6                          CASE(ELSE);
     1171    11728    6                             SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_NOHOST$->TEXT.L;
     1172    11729    6                             SGNRSP.MESSAGE.RSPTXT = GJA_MSG_NOHOST$->TEXT.C;
     1173    11730    6                          END;
     1174    11731    5   LGNFAILED:             PARAMS = '0'B;
     1175    11732    5                          SGNRSP.NMID = KL$SGN.NMID;
     1176    11733    5                          SGNRSP.ERRCODE = E$KLH_FCG; /* make the fcg look like slug */
     1177    11734    5                          SGNRSP.ERRCODE.ERR# = ERR;
     1178    11735    5                          PARAMS.DAT$ = ADDR(SGNRSP);
     1179    11736    5                          PARAMS.DATSIZE = SIZEC(SGNRSP) - SIZEC(SGNRSP.MESSAGE.RSPTXT)
             11736                                   +
     1180    11737    5                               SGNRSP.MESSAGE.RSPSIZ;
     1181    11738    5                          CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:180  
     1182    11739    5                          ALTRETURN;
     1183    11740    5                        END;
     1184    11741    5                     IF ACCR.C1 = '?' THEN DO;
     1185    11742    5                          SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_SGSYN$->TEXT.L;
     1186    11743    5                          SGNRSP.MESSAGE.RSPTXT = GJA_MSG_SGSYN$->TEXT.C;
     1187    11744    5                          ERR = %E$SGSYN;
     1188    11745    5                          GOTO LGNFAILED;
     1189    11746    5                        END;
     1190    11747    5                     IF HOST = ' ' THEN DO;
     1191    11748    5                          HOST = GJA$NODETBL.NODE.NODE(GJA_DEFNODE);
     1192    11749    5                          I = GJA_DEFNODE;
     1193    11750    5                          IF GJA_LDCT_NM ~= 0 THEN
     1194    11751    5                               CTX$ = GJA_UID_NM$;
     1195    11752    6                          ELSE DO;
     1196    11753    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_NOHOST$->TEXT.L;
     1197    11754    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_NOHOST$->TEXT.C;
     1198    11755    6                               ERR = %E$NOHOST;
     1199    11756    6                               GOTO LGNFAILED;
     1200    11757    6                             END;
     1201    11758    5                        END;
     1202    11759    5                     ELSE DO;
     1203    11760    5                          FOUNDIT = '0'B;
     1204    11761    6   FNDIT:                 DO I = 0 TO GJA$NODETBL.NODE#;
     1205    11762    7                               IF GJA$NODETBL.NODE.NODE(I) = HOST THEN DO;
     1206    11763    7                                    FOUNDIT = '1'B;
     1207    11764    7                                    EXIT FNDIT;
     1208    11765    7                                  END;
     1209    11766    6                             END;
     1210    11767    6                          IF NOT FOUNDIT THEN DO;
     1211    11768    6                               ERR = %E$UDHOST;
     1212    11769    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_UDHOST$->TEXT.L;
     1213    11770    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_UDHOST$->TEXT.C;
     1214    11771    6                               GOTO LGNFAILED;
     1215    11772    6                             END;
     1216    11773    5                          ROUTE$ = KNN$ROUTE$(I);
     1217    11774    5                          CTX$ = KNN$ROUTE.CTX$;
     1218    11775    6                          IF CTX$ = ADDR(NIL) OR CTX$->GJA$HAND_CTX.LDCTX = 0 THEN DO;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:181  
     1219    11776    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_NOHOST$->TEXT.L;
     1220    11777    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_NOHOST$->TEXT.C;
     1221    11778    6                               ERR = %E$NOHOST;
     1222    11779    6                               GOTO LGNFAILED;
     1223    11780    6                             END;
     1224    11781    6                          IF NOT CTX$->GJA$HAND_CTX.HOST_NODE THEN DO;
     1225    11782    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_UDHOST$->TEXT.L;
     1226    11783    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_UDHOST$->TEXT.C;
     1227    11784    6                               ERR = %E$UDHOST;
     1228    11785    6                               GOTO LGNFAILED;
     1229    11786    6                             END;
     1230    11787    5                        END;
     1231    11788    4                     NMID = KL$SGN.NMID;
     1232    11789    4                     NMID$->GJA$LGNCTX.NM_NODE = I;
     1233    11790    4                     KL$SGN.NODE = GJA_NODE#;
     1234    11791    4                     CALL GJA$SEND_MSG(CTX$,BUFFER,SIZE);
     1235    11792    4                   END;                    /* not autologn */
     1236    11793
     1237    11794    3             CASE (IGA_ERRMSG_RQS);
     1238    11795    3                ERRMSG_RSP.USR# = KL$ERRMSG_RQS.USR#;
     1239    11796    3                ERRMSG_RSP.CTX$ = KL$ERRMSG_RQS.CTX$;
     1240    11797    3                ERRMSG_RSP.MESSAGE_SZ = 0;
     1241    11798    3                ERRMSG_RSP.NO_NM = '1'B;
     1242    11799    3                PARAMS='0'B;
     1243    11800    3                PARAMS.DAT$ = ADDR(ERRMSG_RSP);
     1244    11801    3                PARAMS.DATSIZE = SIZEC(ERRMSG_RSP);
     1245    11802    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);
     1246    11803
     1247    11804    3             CASE (IGA_SYSLOG);
     1248    11805    3                IF KV$BPC.TOT/2 < KV$BPC.USE THEN
     1249    11806    3                     RETURN; /* dont keep logs if more than half of mem in use */
     1250    11807    3                CALL KVB$GET2NSYS((SIZE+SIZEC(SV$MSG)+1)/2,SVMSG$)
     1251    11808    4                WHENALTRETURN DO;
     1252    11809    4                     RETURN;          /* drop errmsgs we don't have memory for */
     1253    11810    4                   END;
     1254    11811    3                SVMSG$->SV$MSG.LNK$ = ADDR(NIL);
     1255    11812    3                SVMSG$->SV$MSG.SZ = SIZE;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:182  
     1256    11813    3                IF GJA$SYSLOG$ = ADDR(NIL) THEN
     1257    11814    3                     GJA$SYSLOG$ = SVMSG$;
     1258    11815    3                ELSE
     1259    11816    4                DO;
     1260    11817    4                     TMP$ = GJA$SYSLOG$;
     1261    11818    5                     DO WHILE TMP$->SV$MSG.LNK$ ~= ADDR(NIL);
     1262    11819    5                          TMP$ = TMP$->SV$MSG.LNK$;
     1263    11820    5                        END;
     1264    11821    4                     TMP$->SV$MSG.LNK$ = SVMSG$;
     1265    11822    4                   END;
     1266    11823    3                SVMSG$ = PINCRW(SVMSG$,SIZEW(SV$MSG));
     1267    11824    3                SVMSG$->STRING = BUFFER;
     1268    11825    3             CASE(IGA_DUMPMSG);
     1269    11826    3                KL$DUMPMSG.NAHDR.ERRFLAG=1;
     1270    11827    3             END /* End cases */;
     1271    11828
     1272    11829    2           END;
     1273    11830
     1274    11831    1        RETURN;
     1275    11832
     1276    11833    1   END GJA$NETWORK_MANAGER;
     1277    11834        %EOD;

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:183  
--  Include file information  --

   KNN_NETWORK_M.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KN_ERRORS_C.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$NETWORK_MANAGER.

   Procedure GJA$NETWORK_MANAGER requires 1327 words for executable code.
   Procedure GJA$NETWORK_MANAGER requires 104 words of local(AUTO) storage.

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:184  

 Object Unit name= GJA$NETWORK_MANAGER                        File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:57:04.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none   463    1CF  GJA$NETWORK_MANAGER
    1   Proc  even  none  1327    52F  GJA$NETWORK_MANAGER
    2  RoData even  none     1      1  GJA$NETWORK_MANAGER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  GJA$NETWORK_MANAGER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 GJA$SEND_MSG
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       2 GJA$DECODE_APL_MSG
 yes     yes           Std       9 GJA$PARSE
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:185  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_LDCT_NM                           GJA_UID_NM                            GJA_UID_NANM$
     G$DS1$                                GJA_LINE_HEAD$                        GJA_CHNRSP_HEAD$
     GJA$SYSLOG$                           KV_B_POOL$                            GJA_NODE#
     GJA_DEFNODE                           GJA_ROUTE$                            GJA_MSG_SGSYN$
     GJA_MSG_BDID$                         GJA_MSG_NOHOST$                       GJA_MSG_UDHOST$
     GJA$NODETBL                      r    G$ROS$
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:186  


      894        1        /*T***********************************************************/
      895        2        /*T*                                                         */
      896        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      897        4        /*T*                                                         */
      898        5        /*T***********************************************************/
      899        6        /*F* NAME:     GJA$NETWORK_MANAGER
      900        7
      901        8             PURPOSE:  To respond to a request from the Network manager.
      902        9
      903       10             DESCRIPTION:  This routine will be called whenever there is a
      904       11                           need to solicit the Network manager for some data.
      905       12                           If the Network manager is not currently connected
      906       13                           it will respond otherwise the messages get passed
      907       14                           on to the Network manager.
      908       15
      909       16             CALL:      CALL GJA$NETWORK_MANAGER(KL$?,SIZE);
      910       17
      911       18             INPUTS: KL$? is a structure defined in KL_MACRO_C
      912       19                     SIZE is the size of the passed structure
      913       20
      914       21         */
      915       22        GJA$NETWORK_MANAGER: PROC (BUFFER,SIZE) ALTRET;

     22   1 000000  D380 0000 0000  xent GJA$NETWORK_MAN*LNJ,B5   X6A_AUTO_2
          1 000003       0068 0002                       DC       104,2

      916       23
      917       24                                                /* Includes                 */
      918       25        %INCLUDE GJA_MSG_M;
      919      264        %INCLUDE KL_CONTROL_C;
      920      644        %INCLUDE KL_MACRO_C;
      921     3996        %INCLUDE KL_AFCN_C;
      922     4097        %INCLUDE KNH_MACRO_C;
      923     4380        %INCLUDE KN_ERRORS_C;
      924     4444        %INCLUDE LCP_6;
      925     8723        %INCLUDE KV$BPC;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:187  
      926     8752        %INCLUDE KL_ERRORS_C;
      927     8794        %INCLUDE KNN_NETWORK_M;
      928     9157
      929     9158        /* Parameters */
      930     9159    1   DCL BUFFER CHAR(SIZE) WALIGNED;
      931     9160    1   DCL SIZE UBIN;
      932     9161
      933     9162                                                /* Symrefs                  */
      934     9163    1   DCL GJA_LDCT_NM UBIN SYMREF;
      935     9164    1   DCL GJA_UID_NM UBIN(32) SYMREF;
      936     9165    1   DCL GJA_UID_NM$ REDEF GJA_UID_NM PTR;
      937     9166    1   DCL GJA_UID_NANM$ PTR SYMREF;
      938     9167    1   DCL G$DS1$ PTR SYMREF;
      939     9168    1   DCL GJA_LINE_HEAD$ PTR SYMREF;
      940     9169    1   DCL GJA_CHNRSP_HEAD$ PTR SYMREF;
      941     9170    1   DCL GJA$SYSLOG$ PTR SYMREF;
      942     9171    1   DCL KV_B_POOL$ PTR SYMREF;
      943     9172    1   DCL GJA_NODE# UBIN SYMREF;
      944     9173    1   DCL GJA_DEFNODE UBIN SYMREF;
      945     9174    1   DCL GJA_ROUTE$ PTR SYMREF;
      946     9175    1   DCL GJA_MSG_SGSYN$ PTR SYMREF;
      947     9176    1   DCL GJA_MSG_BDID$ PTR SYMREF;
      948     9177    1   DCL GJA_MSG_NOHOST$ PTR SYMREF;
      949     9178    1   DCL GJA_MSG_UDHOST$ PTR SYMREF;
      950     9179        %GJA_NODETBL(NAME=GJA$NODETBL,STCLASS=SYMREF);
      951     9203
      952     9204                                                /* Based                    */
      953     9205        %KL_HDR (FPTN=KL$HDR,STCLASS="BASED(KL$)");
      954     9286        %KL_CONTROL_INIT (FPTN=KL$CONTROL,NUM_FIXED=%KL_FIXED_HI,NUM_INDXD=4,STCLASS=
              9286            "BASED(KL$)",LAST=",");
      955     9412    1            2 BLOCK(0:15) UBIN(18) UNAL,
      956     9413    1            2 UNBLOCK(0:15) UBIN(18) UNAL,
      957     9414    1            2 USRPARM1(0:7) UBIN(18) UNAL,
      958     9415    1            2 USRPARM2(0:7) UBIN(18) UNAL;
      959     9416        %KL_ADMIN (FPTN=KL$ADMIN,STCLASS="BASED(KL$)");
      960     9577        %KL_CONFIGRSP (FPTN=KL$CONFIGRSP,STCLASS="BASED(KL$)");
      961     9668        %KL_CWNAK (FPTN=KL$CWNAK,STCLASS="BASED(KL$)");
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:188  
      962     9733        %KL_KEYMES (FPTN=KL$KEYMES,STCLASS="BASED(KL$)");
      963     9872        %KL_RQSCHN (FPTN=KL$RQSCHN,STCLASS="BASED(KL$)");
      964     9975        %KL_SGN (FPTN=KL$SGN,STCLASS="BASED(KL$)",LGNSIZ="KL$SGN.LOGON.LGNSIZ");
      965    10068        %KL_ERRMSG_RQS (FPTN=KL$ERRMSG_RQS,STCLASS="BASED(KL$)");
      966    10243        %KL_CHNRSP (FPTN=KL$CHNRSP,STCLASS=BASED);
      967    10463        %KL_DUMPMSG (FPTN=KL$DUMPMSG,STCLASS="BASED(KL$)");
      968    10504        %KL_RQSPROFILE (FPTN=KL$RQSPROFILE,STCLASS="BASED(KL$)");
      969    10562    1   DCL B$DWORD UBIN(32) BASED;
      970    10563    1   DCL B$PTR$ PTR BASED;
      971    10564    1   DCL B$WORD UBIN BASED;
      972    10565        %KV$BPC(STCLASS="BASED(KV_B_POOL$)");
      973    10587    1   DCL KNN$ROUTE$(0:0) PTR BASED(GJA_ROUTE$);
      974    10588        %KNN$ROUTE(STCLASS="BASED(ROUTE$)");
      975    10660        %GJA$LGNCTX(STCLASS="BASED");
      976    10745        %GJA$HAND_CTX(STCLASS="BASED(CTX$)");
      977    10794    1   DCL 1 SV$MSG BASED,
      978    10795    1            2 BFRSIZ UBIN,                 /* size of buffer allocated */
      979    10796    1            2 LNK$ PTR,
      980    10797    1            2 SZ UBIN,
      981    10798    1            2 VFC CHAR(1) UNAL,
      982    10799    1            2 * CHAR(1) UNAL;
      983    10800    1   DCL STRING CHAR(SIZE) BASED;
      984    10801    1   DCL SVMSG$ PTR;
      985    10802    1   DCL TMP$ PTR;
      986    10803    1   DCL ACCT CHAR(8);
      987    10804    1   DCL 1 ACCR REDEF ACCT,
      988    10805    1            2 C1 CHAR(1) UNAL,
      989    10806    1            2 * CHAR(7) UNAL;
      990    10807    1   DCL 1 NAME ALIGNED,
      991    10808    1            2 C UBIN BYTE UNAL,
      992    10809    1            2 T CHAR(12) UNAL;
      993    10810    1   DCL PW CHAR(8);
      994    10811    1   DCL 1 PRO ALIGNED,
      995    10812    1            2 C UBIN BYTE UNAL,
      996    10813    1            2 T CHAR(11) UNAL;
      997    10814    1   DCL ERR UBIN;
      998    10815    1   DCL HOST CHAR(8);
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:189  
      999    10816    1   DCL NOSETUP BIT (1) ALIGNED;
     1000    10817    1   DCL NOHEADER BIT (1) ALIGNED;
     1001    10818    1   DCL FOUNDIT BIT(1);
     1002    10819    1   DCL 1 TEXT BASED,
     1003    10820    1            2 L UBIN BYTE UNAL,
     1004    10821    1            2 C CHAR(TEXT.L) UNAL;
     1005    10822    1   DCL ROUTE$ PTR;
     1006    10823    1   DCL CTX$ PTR;
     1007    10824    1   DCL NMID$ PTR;
     1008    10825    1   DCL NMID REDEF NMID$ UBIN(32);
     1009    10826
     1010    10827                                                /* Static                   */
     1011    10828        %KL_SGNRSP(FPTN=SGNRSP,STCLASS=STATIC,RSPSIZ=200);
     1012    10964        %KL_SYSLOG(FPTN=SYSLOG,LAST=",",STCLASS=STATIC,FILENUM=SECLOG);
     1013    10988        %KL_ERRLOG(FPTN=ERRLOG,LAST=",",LVL=2,STCLASS=STATIC);
     1014    11096    1                 3 DATA CHAR(200) UNAL;
     1015    11097        %KL_ERRMSG_RSP (FPTN=ERRMSG_RSP,STCLASS=STATIC);
     1016    11173        %KL_CHNRSP (FPTN=CHNRSP,STCLASS=STATIC);
     1017    11393        %KL_PRFRSP (FPTN=PRFRSP,STCLASS=STATIC,PRFSIZE=1);
     1018    11443        %VLP_ERRCODE(FPTN=E$NONETMAN,FCG=GJ,MID=A,MON='1'B,
     1019    11444                     ERR#=%E$NONETMAN,SEV=%G_SEV_ERROR#);
     1020    11490        %VLP_ERRCODE(FPTN=E$KLH_FCG,FCG=KL,MID=H,MON='1'B,SEV=%G_SEV_ERROR#);
     1021    11536
     1022    11537                                                /* Entry points             */
     1023    11538    1   DCL GJA$DECODE_APL_MSG ENTRY(2) ALTRET;
     1024    11539    1   DCL GJA$SEND_MSG ENTRY(4) ALTRET;
     1025    11540    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
     1026    11541    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
     1027    11542    1   DCL GJA$PARSE ENTRY(9) ALTRET;
     1028    11543
     1029    11544                                                /* Auto                     */
     1030    11545    1   DCL KL$ PTR;
     1031    11546        %GJA$PARAMS (FPTN=PARAMS,STCLASS=AUTO);
     1032    11561    1   DCL P$ PTR;
     1033    11562    1   DCL I UBIN;
     1034    11563    1   DCL CHNRSP$ PTR;
     1035    11564        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=AUTO);
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:190  
     1036    11593
     1037    11594        %EJECT;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:191  
     1038    11595    1        KL$ = ADDR(BUFFER);

  11595   1 000005  ECC7 0004                            LDB,B6   @BUFFER,AUTO
          1 000007  EFC7 002F                            STB,B6   KL$,AUTO

     1039    11596    1        IF GJA_LDCT_NM ~= 0 AND KL$HDR.CODE ~= IGA_RQSCHN AND KL$HDR.CODE ~= IGA_SGN

  11596   1 000009  E800 0000 0000  xsym                 LDR,R6   GJA_LDCT_NM
          1 00000C  6901 001D                            BEZ,R6   s:11602,PREL
          1 00000E  D286                                 LLH,R5   ,B6
          1 00000F  5D3D                                 CMV,R5   61
          1 000010  0901 0019                            BE       s:11602,PREL
          1 000012  5D02                                 CMV,R5   2
          1 000013  0901 0016                            BE       s:11602,PREL

     1040    11597        /* Network manager is active and not a channel request; forward to Host */
     1041    11598    2        THEN DO;

     1042    11599    2             CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);

  11599   1 000015  DCC7 0006                            LDB,B5   @SIZE,AUTO
          1 000017  DFC7 005A                            STB,B5   TERMID+13,AUTO
          1 000019  EFC7 0058                            STB,B6   TERMID+11,AUTO
          1 00001B  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NM
          1 00001E  CFC7 0056                            STB,B4   TERMID+9,AUTO
          1 000020  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 000022  CBF0 0300                            LAB,B4   768,IMO
          1 000024  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 000027       0001                            DC       s:11600,PREL

     1043    11600    2           END;

  11600   1 000028  0F81 0503                            B        s:11831,PREL

     1044    11601    2        ELSE DO;

     1045    11602    3             DO CASE (KL$HDR.CODE);
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:192  

  11602   1 00002A  B286                                 LLH,R3   ,B6
          1 00002B  3D3E                                 CMV,R3   62
          1 00002C  0281 04FF                            BGE      s:11831,PREL
          1 00002E  A830 0000 0034  01                   LDR,R2   s:11602+10,R3
          1 000031  83A0 0000 0072  01                   JMP      s:11604,R2
          1 000034       04BA                            DC       s:11831,PREL
          1 000035       04BA                            DC       s:11831,PREL
          1 000036       01A5                            DC       s:11692,PREL
          1 000037       04BA                            DC       s:11831,PREL
          1 000038       04BA                            DC       s:11831,PREL
          1 000039       04BA                            DC       s:11831,PREL
          1 00003A       04BA                            DC       s:11831,PREL
          1 00003B       04BA                            DC       s:11831,PREL
          1 00003C       04BA                            DC       s:11831,PREL
          1 00003D       04BA                            DC       s:11831,PREL
          1 00003E       04BA                            DC       s:11831,PREL
          1 00003F       04BA                            DC       s:11831,PREL
          1 000040       04BA                            DC       s:11831,PREL
          1 000041       04BA                            DC       s:11831,PREL
          1 000042       04BA                            DC       s:11831,PREL
          1 000043       04BA                            DC       s:11831,PREL
          1 000044       04BA                            DC       s:11831,PREL
          1 000045       04BA                            DC       s:11831,PREL
          1 000046       04BA                            DC       s:11831,PREL
          1 000047       04BA                            DC       s:11831,PREL
          1 000048       04BA                            DC       s:11831,PREL
          1 000049       04BA                            DC       s:11831,PREL
          1 00004A       04BA                            DC       s:11831,PREL
          1 00004B       0086                            DC       s:11624,PREL
          1 00004C       04BA                            DC       s:11831,PREL
          1 00004D       04BA                            DC       s:11831,PREL
          1 00004E       04BA                            DC       s:11831,PREL
          1 00004F       04BA                            DC       s:11831,PREL
          1 000050       04BA                            DC       s:11831,PREL
          1 000051       04BA                            DC       s:11831,PREL
          1 000052       04BA                            DC       s:11831,PREL
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:193  
          1 000053       04BA                            DC       s:11831,PREL
          1 000054       04BA                            DC       s:11831,PREL
          1 000055       04BA                            DC       s:11831,PREL
          1 000056       0000                            DC       s:11604,PREL
          1 000057       04BA                            DC       s:11831,PREL
          1 000058       04BA                            DC       s:11831,PREL
          1 000059       04BA                            DC       s:11831,PREL
          1 00005A       04BA                            DC       s:11831,PREL
          1 00005B       044E                            DC       s:11805,PREL
          1 00005C       04BA                            DC       s:11831,PREL
          1 00005D       04BA                            DC       s:11831,PREL
          1 00005E       04B7                            DC       s:11826,PREL
          1 00005F       04BA                            DC       s:11831,PREL
          1 000060       04BA                            DC       s:11831,PREL
          1 000061       041A                            DC       s:11795,PREL
          1 000062       04BA                            DC       s:11831,PREL
          1 000063       04BA                            DC       s:11831,PREL
          1 000064       04BA                            DC       s:11831,PREL
          1 000065       04BA                            DC       s:11831,PREL
          1 000066       04BA                            DC       s:11831,PREL
          1 000067       04BA                            DC       s:11831,PREL
          1 000068       04BA                            DC       s:11831,PREL
          1 000069       04BA                            DC       s:11831,PREL
          1 00006A       04BA                            DC       s:11831,PREL
          1 00006B       04BA                            DC       s:11831,PREL
          1 00006C       04BA                            DC       s:11831,PREL
          1 00006D       04BA                            DC       s:11831,PREL
          1 00006E       04BA                            DC       s:11831,PREL
          1 00006F       04BA                            DC       s:11831,PREL
          1 000070       04BA                            DC       s:11831,PREL
          1 000071       00B0                            DC       s:11632,PREL

     1046    11603    3             CASE (IGA_CONTROL_INIT);

     1047    11604    3                P$ = PINCRW(G$DS1$,2);

  11604   1 000072  DC80 0000 0000  xsym                 LDB,B5   G$DS1$
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:194  
          1 000075  CBC5 0002                            LAB,B4   2,B5
          1 000077  CFC7 0048                            STB,B4   P$,AUTO

     1048    11605    4                DO I = 1 TO G$DS1$->B$DWORD;

  11605   1 000079  5C01                                 LDV,R5   1
          1 00007A  DF47 004A                            STR,R5   I,AUTO
          1 00007C  0F81 0049                            B        s:11617+2,PREL

     1049    11606    4                     P$ = PINCRW(G$DS1$,PINCRW(G$DS1$,I*SIZEW(B$DWORD))->B$DWORD);

  11606   1 00007E  F847 004A                            LDR,R7   I,AUTO
          1 000080  6C00                                 LDV,R6   0
          1 000081  7081                                 DOL,R7   1
          1 000082  8400 0000 0000  xsym                 AID      G$DS1$
          1 000085  8D47 0056                            SDI      TERMID+9,AUTO
          1 000087  ECC7 0056                            LDB,B6   TERMID+9,AUTO
          1 000089  8C86                                 LDI      ,B6
          1 00008A  8400 0000 0000  xsym                 AID      G$DS1$
          1 00008D  8D47 0048                            SDI      P$,AUTO

     1050    11607    4                     IF P$->KL$CONTROL.HANDLER = KL$CONTROL.HANDLER

  11607   1 00008F  ECC7 0048                            LDB,B6   P$,AUTO
          1 000091  DCC7 002F                            LDB,B5   KL$,AUTO
          1 000093  0022                                 ACM      ;
          1 000094       4806 0002                                ALPHANUM(2,B6,,8,FILL),;
          1 000096       4805 0002                                ALPHANUM(2,B5,,8,FILL)
          1 000098  5301 0027                            CBNE     s:11616,PREL

     1051    11608    5                     THEN DO;

     1052    11609    5                          P$->KL$CONTROL.TYPE = 1; /* Ack */

  11609   1 00009A  5C01                                 LDV,R5   1
          1 00009B  DA86                                 SRM,R5,'00FF'X    ,B6
          1 00009C       00FF
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:195  

     1053    11610    5                          PARAMS = '0'B;

  11610   1 00009D  5C2E                                 LDV,R5   46
          1 00009E  0021                                 ALR      ;
          1 00009F       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0000A1       4007 0031                                ALPHANUM(PARAMS,AUTO,,R5,FILL)

     1054    11611    5                          PARAMS.DAT$ = P$;

  11611   1 0000A3  437F                                 CSYNC    s:11610+5,SPREL
          1 0000A4  ECC7 0048                            LDB,B6   P$,AUTO
          1 0000A6  EFC7 0037                            STB,B6   PARAMS+6,AUTO

     1055    11612    5                          PARAMS.DATSIZE = SIZEC(KL$CONTROL);

  11612   1 0000A8  E870 00DE                            LDR,R6   222,IMO
          1 0000AA  EF47 0039                            STR,R6   PARAMS+8,AUTO

     1056    11613    5                          CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);

  11613   1 0000AC  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NANM$
          1 0000AF  CFC7 0058                            STB,B4   TERMID+11,AUTO
          1 0000B1  BBC7 0031                            LAB,B3   PARAMS,AUTO
          1 0000B3  BFC7 0056                            STB,B3   TERMID+9,AUTO
          1 0000B5  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 0000B7  CBF0 0200                            LAB,B4   512,IMO
          1 0000B9  E380 0000 0000  xent                 LNJ,B6   GJA$DECODE_APL_MSG
          1 0000BC       0001                            DC       s:11614,PREL

     1057    11614    5                          RETURN;

  11614   1 0000BD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1058    11615    5                        END;
     1059    11616    4                     P$ = PINCRW(P$,SIZEW(KL$CONTROL));

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:196  
  11616   1 0000C0  CBC6 006F                            LAB,B4   111,B6
          1 0000C2  CFC7 0048                            STB,B4   P$,AUTO

     1060    11617    4                   END;

  11617   1 0000C4  8AC7 004A                            INC      I,AUTO
          1 0000C6  EC80 0000 0000  xsym                 LDB,B6   G$DS1$
          1 0000C9  F847 004A                            LDR,R7   I,AUTO
          1 0000CB  6C00                                 LDV,R6   0
          1 0000CC  8486                                 SID      ,B6
          1 0000CD  0681 FFB0                            BCF      s:11606,PREL
          1 0000CF  6981 0003                            BNEZ,R6  s:11618,PREL
          1 0000D1  7901 FFAC                            BEZ,R7   s:11606,PREL

     1061    11618    3                KL$CONTROL.TYPE = 0;       /* NAK                      */

  11618   1 0000D3  DCC7 002F                            LDB,B5   KL$,AUTO
          1 0000D5  8805                                 LBF,'00FF'X       ,B5
          1 0000D6       00FF

     1062    11619    3                PARAMS='0'B;

  11619   1 0000D7  5C2E                                 LDV,R5   46
          1 0000D8  0021                                 ALR      ;
          1 0000D9       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0000DB       4007 0031                                ALPHANUM(PARAMS,AUTO,,R5,FILL)

     1063    11620    3                PARAMS.DAT$ = ADDR(KL$CONTROL);

  11620   1 0000DD  437F                                 CSYNC    s:11619+5,SPREL
          1 0000DE  DFC7 0037                            STB,B5   PARAMS+6,AUTO

     1064    11621    3                PARAMS.DATSIZE = SIZE;

  11621   1 0000E0  ECC7 0006                            LDB,B6   @SIZE,AUTO
          1 0000E2  E806                                 LDR,R6   ,B6
          1 0000E3  EF47 0039                            STR,R6   PARAMS+8,AUTO
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:197  

     1065    11622    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);

  11622   1 0000E5  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NANM$
          1 0000E8  CFC7 0058                            STB,B4   TERMID+11,AUTO
          1 0000EA  BBC7 0031                            LAB,B3   PARAMS,AUTO
          1 0000EC  BFC7 0056                            STB,B3   TERMID+9,AUTO
          1 0000EE  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 0000F0  CBF0 0200                            LAB,B4   512,IMO
          1 0000F2  E380 0000 0000  xent                 LNJ,B6   GJA$DECODE_APL_MSG
          1 0000F5       0001                            DC       s:11622+17,PREL
          1 0000F6  0F81 0435                            B        s:11831,PREL

     1066    11623    3             CASE (IGA_RQSPRO);

     1067    11624    3                PRFRSP.PROFILE.PRFSIZE=0;

  11624   1 0000F8  8700 0000 01C9  00                   CL       PRFRSP+3

     1068    11625    3                PRFRSP.NMID = KL$RQSPROFILE.NMID;

  11625   1 0000FB  8CC6 000A                            LDI      10,B6
          1 0000FD  8D00 0000 01C7  00                   SDI      PRFRSP+1

     1069    11626    3                PARAMS='0'B;

  11626   1 000100  5C2E                                 LDV,R5   46
          1 000101  0021                                 ALR      ;
          1 000102       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000104       4007 0031                                ALPHANUM(PARAMS,AUTO,,R5,FILL)

     1070    11627    3                PARAMS.DATSIZE = SIZEC(PRFRSP);

  11627   1 000106  4C0A                                 LDV,R4   10
          1 000107  437F                                 CSYNC    s:11627,SPREL
          1 000108  CF47 0039                            STR,R4   PARAMS+8,AUTO

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:198  
     1071    11628    3                PARAMS.DAT$ = ADDR(PRFRSP);

  11628   1 00010A  DB80 0000 01C6  00                   LAB,B5   PRFRSP
          1 00010D  DFC7 0037                            STB,B5   PARAMS+6,AUTO

     1072    11629    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);

  11629   1 00010F  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NANM$
          1 000112  CFC7 0058                            STB,B4   TERMID+11,AUTO
          1 000114  BBC7 0031                            LAB,B3   PARAMS,AUTO
          1 000116  BFC7 0056                            STB,B3   TERMID+9,AUTO
          1 000118  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 00011A  CBF0 0200                            LAB,B4   512,IMO
          1 00011C  E380 0000 0000  xent                 LNJ,B6   GJA$DECODE_APL_MSG
          1 00011F       0001                            DC       s:11629+17,PREL
          1 000120  0F81 040B                            B        s:11831,PREL

     1073    11630
     1074    11631    3             CASE (IGA_RQSCHN);

     1075    11632    3                IF KL$RQSCHN.LINE_PROFILE  /* This is a line profile reqest */

  11632   1 000122  8286                                 LB,'0080'X        ,B6
  11632   1 000123       0080
          1 000124  0581 0051                            BBF      s:11653,PREL

     1076    11633    4                THEN DO;

     1077    11634    4                     CHNRSP$ = GJA_LINE_HEAD$;

  11634   1 000126  DC80 0000 0000  xsym                 LDB,B5   GJA_LINE_HEAD$
          1 000129  DFC7 004B                            STB,B5   CHNRSP$,AUTO

     1078    11635    4                     KL$RQSCHN.TERMINAL_ID.TTYP = 0;

  11635   1 00012B  87C6 0005                            CLH      5,B6

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:199  
     1079    11636
     1080    11637    5                     DO WHILE (CHNRSP$ ~= ADDR(NIL));

  11637   1 00012D  0F81 0042                            B        s:11651,PREL

     1081    11638    5                          IF PINCRW(CHNRSP$,SIZEW(B$PTR$)+SIZEW(B$WORD))->KL$CHNRSP.
             11638                                   TERMINAL_ID.TERM.CHANNEL

  11638   1 00012F  ECC7 004B                            LDB,B6   CHNRSP$,AUTO
          1 000131  DCC7 002F                            LDB,B5   KL$,AUTO
          1 000133  E846 0009                            LDR,R6   9,B6
          1 000135  E945 0006                            CMR,R6   6,B5
          1 000137  0981 0035                            BNE      s:11650,PREL

     1082    11639    5                               = KL$RQSCHN.TERMINAL_ID.TERM.CHANNEL
     1083    11640    6                          THEN DO;

     1084    11641    6                               CHNRSP$ = PINCRW(CHNRSP$,SIZEW(B$PTR$));

  11641   1 000139  CBC6 0002                            LAB,B4   2,B6
          1 00013B  CFC7 004B                            STB,B4   CHNRSP$,AUTO

     1085    11642    6                               PARAMS='0'B;

  11642   1 00013D  5C2E                                 LDV,R5   46
          1 00013E  0021                                 ALR      ;
          1 00013F       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000141       4007 0031                                ALPHANUM(PARAMS,AUTO,,R5,FILL)

     1086    11643    6                               PARAMS.DATSIZE = CHNRSP$->B$WORD*2 - SIZEC(B$WORD) -
             11643                                        SIZEC(B$PTR$);

  11643   1 000143  437F                                 CSYNC    s:11642+5,SPREL
          1 000144  ECC7 004B                            LDB,B6   CHNRSP$,AUTO
          1 000146  E806                                 LDR,R6   ,B6
          1 000147  6001                                 SOL,R6   1
          1 000148  6EFA                                 ADV,R6   -6
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:200  
          1 000149  EF47 0039                            STR,R6   PARAMS+8,AUTO

     1087    11644    6                               CHNRSP$ = PINCRW(CHNRSP$,SIZEW(B$WORD));

  11644   1 00014B  CBC6 0001                            LAB,B4   1,B6
          1 00014D  CFC7 004B                            STB,B4   CHNRSP$,AUTO

     1088    11645    6                               CHNRSP$->KL$CHNRSP.HANDLER = KL$RQSCHN.HANDLER;

  11645   1 00014F  AB85                                 LAB,B2   ,B5
          1 000150  2C02                                 LDV,R2   2
          1 000151  6C08                                 LDV,R6   8
          1 000152  BB84                                 LAB,B3   ,B4
          1 000153  3C02                                 LDV,R3   2
          1 000154  0008                                 MMM

     1089    11646    6                               PARAMS.DAT$ = CHNRSP$;

  11646   1 000155  ECC7 004B                            LDB,B6   CHNRSP$,AUTO
          1 000157  EFC7 0037                            STB,B6   PARAMS+6,AUTO

     1090    11647    6                               CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);

  11647   1 000159  9B80 0000 0000  xsym                 LAB,B1   GJA_UID_NANM$
          1 00015C  9FC7 0058                            STB,B1   TERMID+11,AUTO
          1 00015E  EBC7 0031                            LAB,B6   PARAMS,AUTO
          1 000160  EFC7 0056                            STB,B6   TERMID+9,AUTO
          1 000162  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 000164  CBF0 0200                            LAB,B4   512,IMO
          1 000166  E380 0000 0000  xent                 LNJ,B6   GJA$DECODE_APL_MSG
          1 000169       0001                            DC       s:11648,PREL

     1091    11648    6                               RETURN;

  11648   1 00016A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1092    11649    6                             END;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:201  
     1093    11650    5                          CHNRSP$ = CHNRSP$->B$PTR$;

  11650   1 00016D  CC86                                 LDB,B4   ,B6
          1 00016E  CFC7 004B                            STB,B4   CHNRSP$,AUTO

     1094    11651    5                        END;

  11651   1 000170  8DC7 004B                            CMN      CHNRSP$,AUTO
          1 000172  0981 FFBC                            BNE      s:11638,PREL

     1095    11652    4                   END;

  11652   1 000174  0F81 003C                            B        s:11674,PREL

     1096    11653    3                ELSE IF KL$RQSCHN.CONFIG

  11653   1 000176  8286                                 LB,'0040'X        ,B6
  11653   1 000177       0040
          1 000178  0581 0038                            BBF      s:11674,PREL

     1097    11654    4                     THEN DO;

     1098    11655    4                          CHNRSP$ = GJA_CHNRSP_HEAD$;

  11655   1 00017A  DC80 0000 0000  xsym                 LDB,B5   GJA_CHNRSP_HEAD$
          1 00017D  DFC7 004B                            STB,B5   CHNRSP$,AUTO

     1099    11656    4                          TERMID = KL$RQSCHN.TERMINAL_ID;

  11656   1 00017F  AB86                                 LAB,B2   ,B6
          1 000180  2C0A                                 LDV,R2   10
          1 000181  6C10                                 LDV,R6   16
          1 000182  BBC7 004D                            LAB,B3   TERMID,AUTO
          1 000184  3C00                                 LDV,R3   0
          1 000185  0008                                 MMM

     1100    11657    4                          TERMID.TTYP = 0;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:202  

  11657   1 000186  87C7 004D                            CLH      TERMID,AUTO

     1101    11658    4                          IF TERMID.TERM.TERM_NAME ~= ' '

  11658   1 000188  DB80 0000 0000  02                   LAB,B5   0
          1 00018B  0022                                 ACM      ;
          1 00018C       4807 0051                                ALPHANUM(TERMID+4,AUTO,,8,FILL),;
          1 00018E       4105 0000                                ALPHANUM(0,B5,,1,FILL)
          1 000190  5381 0003                            CBE      s:11662,PREL

     1102    11659    4                          THEN
     1103    11660    4                               TERMID.TERM.CHANNEL = 0;

  11660   1 000192  8747 004E                            CL       TERMID+1,AUTO

     1104    11661
     1105    11662    5                          DO WHILE (CHNRSP$ ~= ADDR(NIL));

  11662   1 000194  0F81 0019                            B        s:11670,PREL

     1106    11663    5                               IF PINCRW(CHNRSP$,SIZEW(B$PTR$))->KL$CHNRSP.TERMINAL_ID

  11663   1 000196  ECC7 004B                            LDB,B6   CHNRSP$,AUTO
          1 000198  5C10                                 LDV,R5   16
          1 000199  0022                                 ACM      ;
          1 00019A       5006 0007                                ALPHANUM(7,B6,,16,FILL),;
          1 00019C       4007 004D                                ALPHANUM(TERMID,AUTO,,R5,FILL)
          1 00019E  5301 000C                            CBNE     s:11669,PREL

     1107    11664    5                                    = TERMID
     1108    11665    6                               THEN DO;

     1109    11666    6                                    CHNRSP = PINCRW(CHNRSP$,SIZEW(B$PTR$))->KL$CHNRSP;

  11666   1 0001A0  AB86                                 LAB,B2   ,B6
          1 0001A1  2C04                                 LDV,R2   4
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:203  
          1 0001A2  E870 0135                            LDR,R6   309,IMO
          1 0001A4  BB80 0000 012B  00                   LAB,B3   CHNRSP
          1 0001A7  3C00                                 LDV,R3   0
          1 0001A8  0008                                 MMM

     1110    11667    6                                    GOTO DO_CHNRSP;

  11667   1 0001A9  0F81 0028                            B        s:11679,PREL

     1111    11668    6                                  END;
     1112    11669    5                               CHNRSP$ = CHNRSP$->B$PTR$;

  11669   1 0001AB  DC86                                 LDB,B5   ,B6
          1 0001AC  DFC7 004B                            STB,B5   CHNRSP$,AUTO

     1113    11670    5                             END;

  11670   1 0001AE  8DC7 004B                            CMN      CHNRSP$,AUTO
          1 0001B0  09E6                                 BNE      s:11663,SPREL

     1114    11671    4                        END;

     1115    11672        /* When we get down here, we could not satisfy this channel request.
     1116    11673           But remember that maybe this request will be handled by the host. */
     1117    11674    3                IF GJA_LDCT_NM ~= 0

  11674   1 0001B1  E800 0000 0000  xsym                 LDR,R6   GJA_LDCT_NM
          1 0001B4  6901 0019                            BEZ,R6   s:11679,PREL

     1118    11675    4                THEN DO;

     1119    11676    4                     CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);

  11676   1 0001B6  ECC7 0006                            LDB,B6   @SIZE,AUTO
          1 0001B8  EFC7 005A                            STB,B6   TERMID+13,AUTO
          1 0001BA  DCC7 0004                            LDB,B5   @BUFFER,AUTO
          1 0001BC  DFC7 0058                            STB,B5   TERMID+11,AUTO
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:204  
          1 0001BE  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NM
          1 0001C1  CFC7 0056                            STB,B4   TERMID+9,AUTO
          1 0001C3  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 0001C5  CBF0 0300                            LAB,B4   768,IMO
          1 0001C7  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 0001CA       0001                            DC       s:11677,PREL

     1120    11677    4                     RETURN;

  11677   1 0001CB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1121    11678    4                   END;
     1122    11679    3                CHNRSP.NAK = '1'B;

  11679   1 0001CE  8900 0000 012B  00                   LBT,'0010'X       CHNRSP
  11679   1 0001D1       0010

  11679   1                              DO_CHNRSP       null
     1123    11680    3   DO_CHNRSP:   ;
     1124    11681    3                CHNRSP.LINE_PROFILE = KL$RQSCHN.LINE_PROFILE;

  11681   1 0001D2  ECC7 002F            DO_CHNRSP       LDB,B6   KL$,AUTO
          1 0001D4  E806                                 LDR,R6   ,B6
          1 0001D5  EA80 0000 012B  00                   SRM,R6,'0080'X    CHNRSP
          1 0001D8       0080

     1125    11682    3                CHNRSP.CONFIG = KL$RQSCHN.CONFIG;

  11682   1 0001D9  E806                                 LDR,R6   ,B6
          1 0001DA  EA80 0000 012B  00                   SRM,R6,'0040'X    CHNRSP
          1 0001DD       0040

     1126    11683    3                CHNRSP.DFLTHND = KL$RQSCHN.DFLTHND;

  11683   1 0001DE  E806                                 LDR,R6   ,B6
          1 0001DF  EA80 0000 012B  00                   SRM,R6,'0020'X    CHNRSP
          1 0001E2       0020
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:205  

     1127    11684    3                CHNRSP.HANDLER = KL$RQSCHN.HANDLER;

  11684   1 0001E3  AB86                                 LAB,B2   ,B6
          1 0001E4  2C02                                 LDV,R2   2
          1 0001E5  6C08                                 LDV,R6   8
          1 0001E6  BB80 0000 012C  00                   LAB,B3   CHNRSP+1
          1 0001E9  3C00                                 LDV,R3   0
          1 0001EA  0008                                 MMM

     1128    11685    3                CHNRSP.TERMINAL_ID = KL$RQSCHN.TERMINAL_ID;

  11685   1 0001EB  ACC7 002F                            LDB,B2   KL$,AUTO
          1 0001ED  2C0A                                 LDV,R2   10
          1 0001EE  6C10                                 LDV,R6   16
          1 0001EF  BB80 0000 0130  00                   LAB,B3   CHNRSP+5
          1 0001F2  3C00                                 LDV,R3   0
          1 0001F3  0008                                 MMM

     1129    11686    3                PARAMS='0'B;

  11686   1 0001F4  5C2E                                 LDV,R5   46
          1 0001F5  0021                                 ALR      ;
          1 0001F6       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0001F8       4007 0031                                ALPHANUM(PARAMS,AUTO,,R5,FILL)

     1130    11687    3                PARAMS.DAT$ = ADDR(CHNRSP);

  11687   1 0001FA  DB80 0000 012B  00                   LAB,B5   CHNRSP
          1 0001FD  437F                                 CSYNC    s:11687+2,SPREL
          1 0001FE  DFC7 0037                            STB,B5   PARAMS+6,AUTO

     1131    11688    3                PARAMS.DATSIZE = SIZEC(CHNRSP);

  11688   1 000200  E870 0136                            LDR,R6   310,IMO
          1 000202  EF47 0039                            STR,R6   PARAMS+8,AUTO

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:206  
     1132    11689    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);

  11689   1 000204  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NANM$
          1 000207  CFC7 0058                            STB,B4   TERMID+11,AUTO
          1 000209  BBC7 0031                            LAB,B3   PARAMS,AUTO
          1 00020B  BFC7 0056                            STB,B3   TERMID+9,AUTO
          1 00020D  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 00020F  CBF0 0200                            LAB,B4   512,IMO
          1 000211  E380 0000 0000  xent                 LNJ,B6   GJA$DECODE_APL_MSG
          1 000214       0001                            DC       s:11689+17,PREL
          1 000215  0F81 0316                            B        s:11831,PREL

     1133    11690
     1134    11691    3             CASE (IGA_SGN);

     1135    11692    4                IF KL$SGN.AUTOLGN THEN DO;

  11692   1 000217  89C6 000A                            CMZ      10,B6
          1 000219  0881 001E                            BAGE     s:11701,PREL

     1136    11693    5                     IF GJA_LDCT_NM = 0 THEN DO;

  11693   1 00021B  6981 0007                            BNEZ,R6  s:11698,PREL

     1137    11694    5                          ERR = %E$NOHOST;

  11694   1 00021D  D870 04C3                            LDR,R5   1219,IMO
          1 00021F  DF47 0021                            STR,R5   ERR,AUTO

     1138    11695    5                          GOTO LGNFAILED;

  11695   1 000221  0F81 010F                            B        s:11730,PREL

     1139    11696    5                        END;
     1140    11697    4                     ELSE
     1141    11698    4                          CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:207  
  11698   1 000223  DCC7 0006                            LDB,B5   @SIZE,AUTO
          1 000225  DFC7 005A                            STB,B5   TERMID+13,AUTO
          1 000227  EFC7 0058                            STB,B6   TERMID+11,AUTO
          1 000229  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NM
          1 00022C  CFC7 0056                            STB,B4   TERMID+9,AUTO
          1 00022E  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 000230  CBF0 0300                            LAB,B4   768,IMO
          1 000232  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 000235       0001                            DC       s:11699,PREL

     1142    11699    4                   END;

  11699   1 000236  0F81 02F5                            B        s:11831,PREL

     1143    11700    4                ELSE DO;

     1144    11701    4                     IF GJA_MSG_NOHOST$ = ADDR(NIL) OR

  11701   1 000238  8D80 0000 0000  xsym                 CMN      GJA_MSG_NOHOST$
          1 00023B  0901 0010                            BE       s:11705,PREL
          1 00023D  8D80 0000 0000  xsym                 CMN      GJA_MSG_UDHOST$
          1 000240  0901 000B                            BE       s:11705,PREL
          1 000242  8D80 0000 0000  xsym                 CMN      GJA_MSG_BDID$
          1 000245  0901 0006                            BE       s:11705,PREL
          1 000247  8D80 0000 0000  xsym                 CMN      GJA_MSG_SGSYN$
          1 00024A  0981 0019                            BNE      s:11711,PREL

     1145    11702    4                          GJA_MSG_UDHOST$ = ADDR(NIL) OR
     1146    11703    4                          GJA_MSG_BDID$ = ADDR(NIL) OR
     1147    11704    5                          GJA_MSG_SGSYN$ = ADDR(NIL) THEN DO;

     1148    11705    5                          IF GJA_LDCT_NM = 0 THEN

  11705   1 00024C  6901 00E4                            BEZ,R6   s:11730,PREL

     1149    11706    5                               GOTO LGNFAILED;
     1150    11707    5                          ELSE
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:208  
     1151    11708    5                               CALL GJA$SEND_MSG(GJA_UID_NM$,BUFFER,SIZE);

  11708   1 00024E  DCC7 0006                            LDB,B5   @SIZE,AUTO
          1 000250  DFC7 005A                            STB,B5   TERMID+13,AUTO
          1 000252  EFC7 0058                            STB,B6   TERMID+11,AUTO
          1 000254  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NM
          1 000257  CFC7 0056                            STB,B4   TERMID+9,AUTO
          1 000259  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 00025B  CBF0 0300                            LAB,B4   768,IMO
          1 00025D  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 000260       0001                            DC       s:11709,PREL

     1152    11709    5                          RETURN;

  11709   1 000261  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1153    11710    5                        END;
     1154    11711    4                     CALL GJA$PARSE(KL$SGN.LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,
             11711                              NOHEADER)

  11711   1 000264  DBC7 0027                            LAB,B5   NOHEADER,AUTO
          1 000266  DFC7 0066                            STB,B5   TERMID+25,AUTO
          1 000268  CBC7 0026                            LAB,B4   NOSETUP,AUTO
          1 00026A  CFC7 0064                            STB,B4   TERMID+23,AUTO
          1 00026C  BBC7 0022                            LAB,B3   HOST,AUTO
          1 00026E  BFC7 0062                            STB,B3   TERMID+21,AUTO
          1 000270  ABC7 0021                            LAB,B2   ERR,AUTO
          1 000272  AFC7 0060                            STB,B2   TERMID+19,AUTO
          1 000274  9BC7 001B                            LAB,B1   PRO,AUTO
          1 000276  9FC7 005E                            STB,B1   TERMID+17,AUTO
          1 000278  EBC7 0017                            LAB,B6   PW,AUTO
          1 00027A  EFC7 005C                            STB,B6   TERMID+15,AUTO
          1 00027C  EBC7 0010                            LAB,B6   NAME,AUTO
          1 00027E  EFC7 005A                            STB,B6   TERMID+13,AUTO
          1 000280  EBC7 000C                            LAB,B6   ACCT,AUTO
          1 000282  EFC7 0058                            STB,B6   TERMID+11,AUTO
          1 000284  8CC7 002F                            LDI      KL$,AUTO
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:209  
          1 000286  7031                                 DCL,R7   1
          1 000287  8470 0000 001D                       AID      29,IMO
          1 00028A  7071                                 DCR,R7   1
          1 00028B  8D47 0056                            SDI      TERMID+9,AUTO
          1 00028D  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 00028F  CBF0 0900                            LAB,B4   2304,IMO
          1 000291  E380 0000 0000  xent                 LNJ,B6   GJA$PARSE
          1 000294       0003                            DC       s:11713,PREL
          1 000295  0F81 00DD                            B        s:11741,PREL

     1155    11712    5                     WHENALTRETURN DO;

     1156    11713    5                          SYSLOG.ERRLOG.ERRCODE.ERR# = ERR;

  11713   1 000297  E847 0021                            LDR,R6   ERR,AUTO
          1 000299  6003                                 SOL,R6   3
          1 00029A  EA80 0000 0077  00                   SRM,R6,'FFF8'X    SYSLOG+3
          1 00029D       FFF8

     1157    11714    5                          SYSLOG.ERRLOG.DATA_SIZE = KL$SGN.LOGON.LGNSIZ;

  11714   1 00029E  ECC7 002F                            LDB,B6   KL$,AUTO
          1 0002A0  E846 000E                            LDR,R6   14,B6
          1 0002A2  E570 00FF                            AND,R6   255,IMO
          1 0002A4  E780 0000 0086  00                   STH,R6   SYSLOG+18

     1158    11715    5                          SYSLOG.ERRLOG.DATA = KL$SGN.LOGON.LGNTXT;

  11715   1 0002A7  E846 000E                            LDR,R6   14,B6
          1 0002A9  E570 00FF                            AND,R6   255,IMO
          1 0002AB  C856                                 LDR,R4   R6
          1 0002AC  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 0002AF  D870 20C8                            LDR,R5   8392,IMO
          1 0002B1  0021                                 ALR      ;
          1 0002B2       4006 000F                                ALPHANUM(15,B6,,R4),;
          1 0002B4       C005 0086                                ALPHANUM(134,B5,1,R5,FILL)

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:210  
     1159    11716    5                          SYSLOG.ERRLOG.TERMID = KL$SGN.TERMINAL_ID;

  11716   1 0002B6  AB86                                 LAB,B2   ,B6
          1 0002B7  2C04                                 LDV,R2   4
          1 0002B8  6C10                                 LDV,R6   16
          1 0002B9  BB80 0000 007A  00                   LAB,B3   SYSLOG+6
          1 0002BC  3C00                                 LDV,R3   0
          1 0002BD  437F                                 CSYNC    s:11716+6,SPREL
          1 0002BE  0008                                 MMM

     1160    11717    5                          SYSLOG.ERRLOG.VALUES(0) = GJA_NODE#;

  11717   1 0002BF  E800 0000 0000  xsym                 LDR,R6   GJA_NODE#
          1 0002C2  EF00 0000 0082  00                   STR,R6   SYSLOG+14

     1161    11718    5                          CALL GJA$NETWORK_MANAGER(SYSLOG,SIZEC(SYSLOG)-SIZEC(

  11718   1 0002C5  C280 0000 0086  00                   LLH,R4   SYSLOG+18
          1 0002C8  4E26                                 ADV,R4   38
          1 0002C9  CF47 0056                            STR,R4   TERMID+9,AUTO
          1 0002CB  DBC7 0056                            LAB,B5   TERMID+9,AUTO
          1 0002CD  DFC7 0059                            STB,B5   TERMID+12,AUTO
          1 0002CF  CB80 0000 0074  00                   LAB,B4   SYSLOG
          1 0002D2  CFC7 0057                            STB,B4   TERMID+10,AUTO
          1 0002D4  BBC7 0057                            LAB,B3   TERMID+10,AUTO
          1 0002D6  CBF0 0200                            LAB,B4   512,IMO
          1 0002D8  E3C0 FD27                            LNJ,B6   s:22,PREL
          1 0002DA       0001                            DC       s:11720,PREL

     1162    11719    5                               SYSLOG.ERRLOG.DATA)+SYSLOG.ERRLOG.DATA_SIZE);
     1163    11720    6                          DO CASE (ERR);

  11720   1 0002DB  B847 0021                            LDR,R3   ERR,AUTO
          1 0002DD  BA70 FB49                            ADD,R3   -1207,IMO
          1 0002DF  3D07                                 CMV,R3   7
          1 0002E0  0281 003C                            BGE      s:11728,PREL
          1 0002E2  A830 0000 02E8  01                   LDR,R2   s:11720+13,R3
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:211  
          1 0002E5  83A0 0000 02EF  01                   JMP      s:11722,R2
          1 0002E8       0017                            DC       s:11725,PREL
          1 0002E9       002E                            DC       s:11728,PREL
          1 0002EA       002E                            DC       s:11728,PREL
          1 0002EB       002E                            DC       s:11728,PREL
          1 0002EC       002E                            DC       s:11728,PREL
          1 0002ED       002E                            DC       s:11728,PREL
          1 0002EE       0000                            DC       s:11722,PREL

     1164    11721    6                          CASE(%E$SGSYN);

     1165    11722    6                             SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_SGSYN$->TEXT.L;

  11722   1 0002EF  EC80 0000 0000  xsym                 LDB,B6   GJA_MSG_SGSYN$
          1 0002F2  E286                                 LLH,R6   ,B6
          1 0002F3  EA80 0000 000F  00                   SRM,R6,'00FF'X    SGNRSP+15
          1 0002F6       00FF

     1166    11723    6                             SGNRSP.MESSAGE.RSPTXT = GJA_MSG_SGSYN$->TEXT.C;

  11723   1 0002F7  E286                                 LLH,R6   ,B6
          1 0002F8  C856                                 LDR,R4   R6
          1 0002F9  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 0002FC  D870 20C8                            LDR,R5   8392,IMO
          1 0002FE  0021                                 ALR      ;
          1 0002FF       C006 0000                                ALPHANUM(0,B6,1,R4),;
          1 000301       4005 0010                                ALPHANUM(16,B5,,R5,FILL)
          1 000303  437F                                 CSYNC    s:11723+11,SPREL
          1 000304  0F81 002C                            B        s:11730,PREL

     1167    11724    6                          CASE(%E$BDID);

     1168    11725    6                             SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_BDID$->TEXT.L;

  11725   1 000306  EC80 0000 0000  xsym                 LDB,B6   GJA_MSG_BDID$
          1 000309  E286                                 LLH,R6   ,B6
          1 00030A  EA80 0000 000F  00                   SRM,R6,'00FF'X    SGNRSP+15
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:212  
          1 00030D       00FF

     1169    11726    6                             SGNRSP.MESSAGE.RSPTXT = GJA_MSG_BDID$->TEXT.C;

  11726   1 00030E  E286                                 LLH,R6   ,B6
          1 00030F  C856                                 LDR,R4   R6
          1 000310  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 000313  D870 20C8                            LDR,R5   8392,IMO
          1 000315  0021                                 ALR      ;
          1 000316       C006 0000                                ALPHANUM(0,B6,1,R4),;
          1 000318       4005 0010                                ALPHANUM(16,B5,,R5,FILL)
          1 00031A  437F                                 CSYNC    s:11726+11,SPREL
          1 00031B  0F81 0015                            B        s:11730,PREL

     1170    11727    6                          CASE(ELSE);

     1171    11728    6                             SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_NOHOST$->TEXT.L;

  11728   1 00031D  EC80 0000 0000  xsym                 LDB,B6   GJA_MSG_NOHOST$
          1 000320  E286                                 LLH,R6   ,B6
          1 000321  EA80 0000 000F  00                   SRM,R6,'00FF'X    SGNRSP+15
          1 000324       00FF

     1172    11729    6                             SGNRSP.MESSAGE.RSPTXT = GJA_MSG_NOHOST$->TEXT.C;

  11729   1 000325  E286                                 LLH,R6   ,B6
          1 000326  C856                                 LDR,R4   R6
          1 000327  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 00032A  D870 20C8                            LDR,R5   8392,IMO
          1 00032C  0021                                 ALR      ;
          1 00032D       C006 0000                                ALPHANUM(0,B6,1,R4),;
          1 00032F       4005 0010                                ALPHANUM(16,B5,,R5,FILL)

     1173    11730    6                          END;

     1174    11731    5   LGNFAILED:             PARAMS = '0'B;

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:213  
  11731   1 000331  5C2E                 LGNFAILED       LDV,R5   46
          1 000332  0021                                 ALR      ;
          1 000333       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000335       4007 0031                                ALPHANUM(PARAMS,AUTO,,R5,FILL)

     1175    11732    5                          SGNRSP.NMID = KL$SGN.NMID;

  11732   1 000337  ECC7 002F                            LDB,B6   KL$,AUTO
          1 000339  5C04                                 LDV,R5   4
          1 00033A  0021                                 ALR      ;
          1 00033B       C406 000B                                ALPHANUM(11,B6,1,4),;
          1 00033D       4007 0056                                ALPHANUM(TERMID+9,AUTO,,R5,FILL)
          1 00033F  437F                                 CSYNC    s:11732+7,SPREL
          1 000340  8CC7 0056                            LDI      TERMID+9,AUTO
          1 000342  8D00 0000 0001  00                   SDI      SGNRSP+1

     1176    11733    5                         SGNRSP.ERRCODE = E$KLH_FCG; /* make the fcg look like slug */

  11733   1 000345  8C80 0000 01CD  00                   LDI      E$KLH_FCG
          1 000348  8D00 0000 0005  00                   SDI      SGNRSP+5

     1177    11734    5                          SGNRSP.ERRCODE.ERR# = ERR;

  11734   1 00034B  C847 0021                            LDR,R4   ERR,AUTO
          1 00034D  4003                                 SOL,R4   3
          1 00034E  CA80 0000 0006  00                   SRM,R4,'FFF8'X    SGNRSP+6
          1 000351       FFF8

     1178    11735    5                          PARAMS.DAT$ = ADDR(SGNRSP);

  11735   1 000352  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 000355  DFC7 0037                            STB,B5   PARAMS+6,AUTO

     1179    11736    5                         PARAMS.DATSIZE = SIZEC(SGNRSP) - SIZEC(SGNRSP.MESSAGE.RSPTXT)
             11736                                   +

  11736   1 000357  C800 0000 000F  00                   LDR,R4   SGNRSP+15
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:214  
          1 00035A  C570 00FF                            AND,R4   255,IMO
          1 00035C  4E20                                 ADV,R4   32
          1 00035D  CF47 0039                            STR,R4   PARAMS+8,AUTO

     1180    11737    5                               SGNRSP.MESSAGE.RSPSIZ;
     1181    11738    5                          CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);

  11738   1 00035F  CB80 0000 0000  xsym                 LAB,B4   GJA_UID_NANM$
          1 000362  CFC7 0058                            STB,B4   TERMID+11,AUTO
          1 000364  BBC7 0031                            LAB,B3   PARAMS,AUTO
          1 000366  BFC7 0056                            STB,B3   TERMID+9,AUTO
          1 000368  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 00036A  CBF0 0200                            LAB,B4   512,IMO
          1 00036C  E380 0000 0000  xent                 LNJ,B6   GJA$DECODE_APL_MSG
          1 00036F       0001                            DC       s:11739,PREL

     1182    11739    5                          ALTRETURN;

  11739   1 000370  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1183    11740    5                        END;
     1184    11741    5                     IF ACCR.C1 = '?' THEN DO;

  11741   1 000373  E0C7 000C                            LDH,R6   ACCT,AUTO
          1 000375  6D3F                                 CMV,R6   63
          1 000376  0981 001C                            BNE      s:11747,PREL

     1185    11742    5                          SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_SGSYN$->TEXT.L;

  11742   1 000378  EC80 0000 0000  xsym                 LDB,B6   GJA_MSG_SGSYN$
          1 00037B  D286                                 LLH,R5   ,B6
          1 00037C  DA80 0000 000F  00                   SRM,R5,'00FF'X    SGNRSP+15
          1 00037F       00FF

     1186    11743    5                          SGNRSP.MESSAGE.RSPTXT = GJA_MSG_SGSYN$->TEXT.C;

  11743   1 000380  D286                                 LLH,R5   ,B6
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:215  
          1 000381  C855                                 LDR,R4   R5
          1 000382  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 000385  D870 20C8                            LDR,R5   8392,IMO
          1 000387  0021                                 ALR      ;
          1 000388       C006 0000                                ALPHANUM(0,B6,1,R4),;
          1 00038A       4005 0010                                ALPHANUM(16,B5,,R5,FILL)

     1187    11744    5                          ERR = %E$SGSYN;

  11744   1 00038C  C870 04BD                            LDR,R4   1213,IMO
          1 00038E  437F                                 CSYNC    s:11744+1,SPREL
          1 00038F  CF47 0021                            STR,R4   ERR,AUTO

     1188    11745    5                          GOTO LGNFAILED;

  11745   1 000391  0F81 FF9F                            B        s:11730,PREL

     1189    11746    5                        END;
     1190    11747    5                     IF HOST = ' ' THEN DO;

  11747   1 000393  EB80 0000 0000  02                   LAB,B6   0
          1 000396  0022                                 ACM      ;
          1 000397       4807 0022                                ALPHANUM(HOST,AUTO,,8,FILL),;
          1 000399       4106 0000                                ALPHANUM(0,B6,,1,FILL)
          1 00039B  5301 0038                            CBNE     s:11760,PREL

     1191    11748    5                          HOST = GJA$NODETBL.NODE.NODE(GJA_DEFNODE);

  11748   1 00039D  AB80 0000 0000  xsym                 LAB,B2   GJA$NODETBL
          1 0003A0  A800 0000 0000  xsym                 LDR,R2   GJA_DEFNODE
          1 0003A3  2F0A                                 MLV,R2   10
          1 0003A4  2E04                                 ADV,R2   4
          1 0003A5  6C08                                 LDV,R6   8
          1 0003A6  BB87                                 LAB,B3   ,AUTO
          1 0003A7  3C44                                 LDV,R3   68
          1 0003A8  0008                                 MMM

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:216  
     1192    11749    5                          I = GJA_DEFNODE;

  11749   1 0003A9  E800 0000 0000  xsym                 LDR,R6   GJA_DEFNODE
          1 0003AC  EF47 004A                            STR,R6   I,AUTO

     1193    11750    5                          IF GJA_LDCT_NM ~= 0 THEN

  11750   1 0003AE  D800 0000 0000  xsym                 LDR,R5   GJA_LDCT_NM
          1 0003B1  5901 0008                            BEZ,R5   s:11753,PREL

     1194    11751    5                               CTX$ = GJA_UID_NM$;

  11751   1 0003B3  EC80 0000 0000  xsym                 LDB,B6   GJA_UID_NM
          1 0003B6  EFC7 002B                            STB,B6   CTX$,AUTO
          1 0003B8  0F81 00A9                            B        s:11788,PREL

     1195    11752    6                          ELSE DO;

     1196    11753    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_NOHOST$->TEXT.L;

  11753   1 0003BA  EC80 0000 0000  xsym                 LDB,B6   GJA_MSG_NOHOST$
          1 0003BD  C286                                 LLH,R4   ,B6
          1 0003BE  CA80 0000 000F  00                   SRM,R4,'00FF'X    SGNRSP+15
          1 0003C1       00FF

     1197    11754    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_NOHOST$->TEXT.C;

  11754   1 0003C2  C286                                 LLH,R4   ,B6
          1 0003C3  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 0003C6  D870 20C8                            LDR,R5   8392,IMO
          1 0003C8  0021                                 ALR      ;
          1 0003C9       C006 0000                                ALPHANUM(0,B6,1,R4),;
          1 0003CB       4005 0010                                ALPHANUM(16,B5,,R5,FILL)

     1198    11755    6                               ERR = %E$NOHOST;

  11755   1 0003CD  C870 04C3                            LDR,R4   1219,IMO
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:217  
          1 0003CF  437F                                 CSYNC    s:11755+1,SPREL
          1 0003D0  CF47 0021                            STR,R4   ERR,AUTO

     1199    11756    6                               GOTO LGNFAILED;

  11756   1 0003D2  0F81 FF5E                            B        s:11730,PREL

     1200    11757    6                             END;
     1201    11758    5                        END;
     1202    11759    5                     ELSE DO;

     1203    11760    5                          FOUNDIT = '0'B;

  11760   1 0003D4  8747 0028                            CL       FOUNDIT,AUTO

     1204    11761    6   FNDIT:                 DO I = 0 TO GJA$NODETBL.NODE#;

  11761   1 0003D6  8747 004A            FNDIT           CL       I,AUTO
          1 0003D8  0F81 0015                            B        s:11766+2,PREL

     1205    11762    7                               IF GJA$NODETBL.NODE.NODE(I) = HOST THEN DO;

  11762   1 0003DA  EB80 0000 0000  xsym                 LAB,B6   GJA$NODETBL
          1 0003DD  B847 004A                            LDR,R3   I,AUTO
          1 0003DF  3F0A                                 MLV,R3   10
          1 0003E0  0022                                 ACM      ;
          1 0003E1       4836 0002                                ALPHANUM(2,B6,R3,,8,FILL),;
          1 0003E3       4807 0022                                ALPHANUM(HOST,AUTO,,8,FILL)
          1 0003E5  5301 0006                            CBNE     s:11766,PREL

     1206    11763    7                                    FOUNDIT = '1'B;

  11763   1 0003E7  8947 0028                            LBT,'8000'X       FOUNDIT,AUTO
  11763   1 0003E9       8000

     1207    11764    7                                    EXIT FNDIT;

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:218  
  11764   1 0003EA  0F81 0009                            B        s:11767,PREL

     1208    11765    7                                  END;
     1209    11766    6                             END;

  11766   1 0003EC  8AC7 004A                            INC      I,AUTO
          1 0003EE  E847 004A                            LDR,R6   I,AUTO
          1 0003F0  E900 0000 0000  xsym                 CMR,R6   GJA$NODETBL
          1 0003F3  03E7                                 BLE      s:11762,SPREL

     1210    11767    6                          IF NOT FOUNDIT THEN DO;

  11767   1 0003F4  89C7 0028                            CMZ      FOUNDIT,AUTO
          1 0003F6  0801 001C                            BAL      s:11773,PREL

     1211    11768    6                               ERR = %E$UDHOST;

  11768   1 0003F8  E870 04C4                            LDR,R6   1220,IMO
          1 0003FA  EF47 0021                            STR,R6   ERR,AUTO

     1212    11769    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_UDHOST$->TEXT.L;

  11769   1 0003FC  EC80 0000 0000                       LDB,B6   0
          1 0003FF  D286                                 LLH,R5   ,B6
          1 000400  DA80 0000 000F  00                   SRM,R5,'00FF'X    SGNRSP+15
          1 000403       00FF

     1213    11770    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_UDHOST$->TEXT.C;

  11770   1 000404  D286                                 LLH,R5   ,B6
          1 000405  C855                                 LDR,R4   R5
          1 000406  DB80 0000 0000  00                   LAB,B5   SGNRSP
          1 000409  D870 20C8                            LDR,R5   8392,IMO
          1 00040B  0021                                 ALR      ;
          1 00040C       C006 0000                                ALPHANUM(0,B6,1,R4),;
          1 00040E       4005 0010                                ALPHANUM(16,B5,,R5,FILL)

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:219  
     1214    11771    6                               GOTO LGNFAILED;

  11771   1 000410  437F                                 CSYNC    s:11770+11,SPREL
          1 000411  0F81 FF1F                            B        s:11730,PREL

     1215    11772    6                             END;
     1216    11773    5                          ROUTE$ = KNN$ROUTE$(I);

  11773   1 000413  EC80 0000 0000  xsym                 LDB,B6   GJA_ROUTE$
          1 000416  B847 004A                            LDR,R3   I,AUTO
          1 000418  DCB6                                 LDB,B5   ,B6,R3
          1 000419  DFC7 0029                            STB,B5   ROUTE$,AUTO

     1217    11774    5                          CTX$ = KNN$ROUTE.CTX$;

  11774   1 00041B  CCC5 0002                            LDB,B4   2,B5
          1 00041D  CFC7 002B                            STB,B4   CTX$,AUTO

     1218    11775    6                          IF CTX$ = ADDR(NIL) OR CTX$->GJA$HAND_CTX.LDCTX = 0 THEN DO;

  11775   1 00041F  8DC7 002B                            CMN      CTX$,AUTO
          1 000421  0901 0005                            BE       s:11776,PREL
          1 000423  8284                                 LB,'1FFF'X        ,B4
          1 000424       1FFF
          1 000425  0501 001C                            BBT      s:11781,PREL

     1219    11776    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_NOHOST$->TEXT.L;

  11776   1 000427  BC80 0000 0000  xsym                 LDB,B3   GJA_MSG_NOHOST$
          1 00042A  E283                                 LLH,R6   ,B3
          1 00042B  EA80 0000 000F  00                   SRM,R6,'00FF'X    SGNRSP+15
          1 00042E       00FF

     1220    11777    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_NOHOST$->TEXT.C;

  11777   1 00042F  E283                                 LLH,R6   ,B3
          1 000430  C856                                 LDR,R4   R6
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:220  
          1 000431  AB80 0000 0000  00                   LAB,B2   SGNRSP
          1 000434  D870 20C8                            LDR,R5   8392,IMO
          1 000436  0021                                 ALR      ;
          1 000437       C003 0000                                ALPHANUM(0,B3,1,R4),;
          1 000439       4002 0010                                ALPHANUM(16,B2,,R5,FILL)

     1221    11778    6                               ERR = %E$NOHOST;

  11778   1 00043B  B870 04C3                            LDR,R3   1219,IMO
          1 00043D  437F                                 CSYNC    s:11778+1,SPREL
          1 00043E  BF47 0021                            STR,R3   ERR,AUTO

     1222    11779    6                               GOTO LGNFAILED;

  11779   1 000440  0F81 FEF0                            B        s:11730,PREL

     1223    11780    6                             END;
     1224    11781    6                          IF NOT CTX$->GJA$HAND_CTX.HOST_NODE THEN DO;

  11781   1 000442  82C4 000D                            LB,'2000'X        13,B4
  11781   1 000444       2000
          1 000445  0501 001C                            BBT      s:11788,PREL

     1225    11782    6                               SGNRSP.MESSAGE.RSPSIZ = GJA_MSG_UDHOST$->TEXT.L;

  11782   1 000447  BC80 0000 0000  xsym                 LDB,B3   GJA_MSG_UDHOST$
          1 00044A  E283                                 LLH,R6   ,B3
          1 00044B  EA80 0000 000F  00                   SRM,R6,'00FF'X    SGNRSP+15
          1 00044E       00FF

     1226    11783    6                               SGNRSP.MESSAGE.RSPTXT = GJA_MSG_UDHOST$->TEXT.C;

  11783   1 00044F  E283                                 LLH,R6   ,B3
          1 000450  C856                                 LDR,R4   R6
          1 000451  AB80 0000 0000  00                   LAB,B2   SGNRSP
          1 000454  D870 20C8                            LDR,R5   8392,IMO
          1 000456  0021                                 ALR      ;
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:221  
          1 000457       C003 0000                                ALPHANUM(0,B3,1,R4),;
          1 000459       4002 0010                                ALPHANUM(16,B2,,R5,FILL)

     1227    11784    6                               ERR = %E$UDHOST;

  11784   1 00045B  B870 04C4                            LDR,R3   1220,IMO
          1 00045D  437F                                 CSYNC    s:11784+1,SPREL
          1 00045E  BF47 0021                            STR,R3   ERR,AUTO

     1228    11785    6                               GOTO LGNFAILED;

  11785   1 000460  0F81 FED0                            B        s:11730,PREL

     1229    11786    6                             END;
     1230    11787    5                        END;
     1231    11788    4                     NMID = KL$SGN.NMID;

  11788   1 000462  ACC7 002F                            LDB,B2   KL$,AUTO
          1 000464  2C17                                 LDV,R2   23
          1 000465  6C04                                 LDV,R6   4
          1 000466  BB87                                 LAB,B3   ,AUTO
          1 000467  3C5A                                 LDV,R3   90
          1 000468  0008                                 MMM

     1232    11789    4                     NMID$->GJA$LGNCTX.NM_NODE = I;

  11789   1 000469  E847 004A                            LDR,R6   I,AUTO
          1 00046B  ECC7 002D                            LDB,B6   NMID$,AUTO
          1 00046D  E7C6 0009                            STH,R6   9,B6

     1233    11790    4                     KL$SGN.NODE = GJA_NODE#;

  11790   1 00046F  D800 0000 0000  xsym                 LDR,R5   GJA_NODE#
          1 000472  DCC7 002F                            LDB,B5   KL$,AUTO
          1 000474  DA85                                 SRM,R5,'00FF'X    ,B5
          1 000475       00FF

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:222  
     1234    11791    4                     CALL GJA$SEND_MSG(CTX$,BUFFER,SIZE);

  11791   1 000476  CCC7 0006                            LDB,B4   @SIZE,AUTO
          1 000478  CFC7 005A                            STB,B4   TERMID+13,AUTO
          1 00047A  ACC7 0004                            LDB,B2   @BUFFER,AUTO
          1 00047C  AFC7 0058                            STB,B2   TERMID+11,AUTO
          1 00047E  9BC7 002B                            LAB,B1   CTX$,AUTO
          1 000480  9FC7 0056                            STB,B1   TERMID+9,AUTO
          1 000482  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 000484  CBF0 0300                            LAB,B4   768,IMO
          1 000486  E380 0000 0000  xent                 LNJ,B6   GJA$SEND_MSG
          1 000489       0001                            DC       s:11792,PREL

     1235    11792    4                   END;                    /* not autologn */

  11792   1 00048A  0F81 00A1                            B        s:11831,PREL

     1236    11793
     1237    11794    3             CASE (IGA_ERRMSG_RQS);

     1238    11795    3                ERRMSG_RSP.USR# = KL$ERRMSG_RQS.USR#;

  11795   1 00048C  D806                                 LDR,R5   ,B6
          1 00048D  DA80 0000 00EB  00                   SRM,R5,'00FF'X    ERRMSG_RSP
          1 000490       00FF

     1239    11796    3                ERRMSG_RSP.CTX$ = KL$ERRMSG_RQS.CTX$;

  11796   1 000491  DCC6 0002                            LDB,B5   2,B6
          1 000493  DF80 0000 00ED  00                   STB,B5   ERRMSG_RSP+2

     1240    11797    3                ERRMSG_RSP.MESSAGE_SZ = 0;

  11797   1 000496  8780 0000 00EC  00                   CLH      ERRMSG_RSP+1

     1241    11798    3                ERRMSG_RSP.NO_NM = '1'B;

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:223  
  11798   1 000499  8900 0000 00EC  00                   LBT,'0002'X       ERRMSG_RSP+1
  11798   1 00049C       0002

     1242    11799    3                PARAMS='0'B;

  11799   1 00049D  5C2E                                 LDV,R5   46
          1 00049E  0021                                 ALR      ;
          1 00049F       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0004A1       4007 0031                                ALPHANUM(PARAMS,AUTO,,R5,FILL)

     1243    11800    3                PARAMS.DAT$ = ADDR(ERRMSG_RSP);

  11800   1 0004A3  CB80 0000 00EB  00                   LAB,B4   ERRMSG_RSP
          1 0004A6  437F                                 CSYNC    s:11800+2,SPREL
          1 0004A7  CFC7 0037                            STB,B4   PARAMS+6,AUTO

     1244    11801    3                PARAMS.DATSIZE = SIZEC(ERRMSG_RSP);

  11801   1 0004A9  C870 0080                            LDR,R4   128,IMO
          1 0004AB  CF47 0039                            STR,R4   PARAMS+8,AUTO

     1245    11802    3                CALL GJA$DECODE_APL_MSG(PARAMS,GJA_UID_NANM$);

  11802   1 0004AD  BB80 0000 0000  xsym                 LAB,B3   GJA_UID_NANM$
          1 0004B0  BFC7 0058                            STB,B3   TERMID+11,AUTO
          1 0004B2  ABC7 0031                            LAB,B2   PARAMS,AUTO
          1 0004B4  AFC7 0056                            STB,B2   TERMID+9,AUTO
          1 0004B6  BBC7 0056                            LAB,B3   TERMID+9,AUTO
          1 0004B8  CBF0 0200                            LAB,B4   512,IMO
          1 0004BA  E380 0000 0000  xent                 LNJ,B6   GJA$DECODE_APL_MSG
          1 0004BD       0001                            DC       s:11802+17,PREL
          1 0004BE  0F81 006D                            B        s:11831,PREL

     1246    11803
     1247    11804    3             CASE (IGA_SYSLOG);

     1248    11805    3                IF KV$BPC.TOT/2 < KV$BPC.USE THEN
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:224  

  11805   1 0004C0  DC80 0000 0000  xsym                 LDB,B5   KV_B_POOL$
          1 0004C3  8C85                                 LDI      ,B5
          1 0004C4  70C1                                 DOR,R7   1
          1 0004C5  84C5 0002                            SID      2,B5
          1 0004C7  0601 0004                            BCT      s:11807,PREL

     1249    11806    3                     RETURN; /* dont keep logs if more than half of mem in use */

  11806   1 0004C9  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1250    11807    3                CALL KVB$GET2NSYS((SIZE+SIZEC(SV$MSG)+1)/2,SVMSG$)

  11807   1 0004CC  CCC7 0006                            LDB,B4   @SIZE,AUTO
          1 0004CE  E804                                 LDR,R6   ,B4
          1 0004CF  6E0B                                 ADV,R6   11
          1 0004D0  6041                                 SOR,R6   1
          1 0004D1  EF47 0056                            STR,R6   TERMID+9,AUTO
          1 0004D3  BBC7 0008                            LAB,B3   SVMSG$,AUTO
          1 0004D5  BFC7 0059                            STB,B3   TERMID+12,AUTO
          1 0004D7  ABC7 0056                            LAB,B2   TERMID+9,AUTO
          1 0004D9  AFC7 0057                            STB,B2   TERMID+10,AUTO
          1 0004DB  BBC7 0057                            LAB,B3   TERMID+10,AUTO
          1 0004DD  CBF0 0200                            LAB,B4   512,IMO
          1 0004DF  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 0004E2       0003                            DC       s:11809,PREL
          1 0004E3  0F81 0004                            B        s:11811,PREL

     1251    11808    4                WHENALTRETURN DO;

     1252    11809    4                     RETURN;          /* drop errmsgs we don't have memory for */

  11809   1 0004E5  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1253    11810    4                   END;
     1254    11811    3                SVMSG$->SV$MSG.LNK$ = ADDR(NIL);

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:225  
  11811   1 0004E8  EB80 0000 0000                       LAB,B6   0
          1 0004EB  DCC7 0008                            LDB,B5   SVMSG$,AUTO
          1 0004ED  EFC5 0001                            STB,B6   1,B5

     1255    11812    3                SVMSG$->SV$MSG.SZ = SIZE;

  11812   1 0004EF  ECC7 0008                            LDB,B6   SVMSG$,AUTO
          1 0004F1  DCC7 0006                            LDB,B5   @SIZE,AUTO
          1 0004F3  E805                                 LDR,R6   ,B5
          1 0004F4  EF46 0003                            STR,R6   3,B6

     1256    11813    3                IF GJA$SYSLOG$ = ADDR(NIL) THEN

  11813   1 0004F6  8D80 0000 0000  xsym                 CMN      GJA$SYSLOG$
          1 0004F9  0981 0008                            BNE      s:11817,PREL

     1257    11814    3                     GJA$SYSLOG$ = SVMSG$;

  11814   1 0004FB  ECC7 0008                            LDB,B6   SVMSG$,AUTO
          1 0004FD  EF80 0000 0000  xsym                 STB,B6   GJA$SYSLOG$
          1 000500  0F81 0017                            B        s:11823,PREL

     1258    11815    3                ELSE
     1259    11816    4                DO;

     1260    11817    4                     TMP$ = GJA$SYSLOG$;

  11817   1 000502  EC80 0000 0000  xsym                 LDB,B6   GJA$SYSLOG$
          1 000505  EFC7 000A                            STB,B6   TMP$,AUTO

     1261    11818    5                     DO WHILE TMP$->SV$MSG.LNK$ ~= ADDR(NIL);

  11818   1 000507  0F81 0007                            B        s:11820,PREL

     1262    11819    5                          TMP$ = TMP$->SV$MSG.LNK$;

  11819   1 000509  ECC7 000A                            LDB,B6   TMP$,AUTO
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:226  
          1 00050B  DCC6 0001                            LDB,B5   1,B6
          1 00050D  DFC7 000A                            STB,B5   TMP$,AUTO

     1263    11820    5                        END;

  11820   1 00050F  ECC7 000A                            LDB,B6   TMP$,AUTO
          1 000511  8DC6 0001                            CMN      1,B6
          1 000513  09F6                                 BNE      s:11819,SPREL

     1264    11821    4                     TMP$->SV$MSG.LNK$ = SVMSG$;

  11821   1 000514  DCC7 0008                            LDB,B5   SVMSG$,AUTO
          1 000516  DFC6 0001                            STB,B5   1,B6

     1265    11822    4                   END;

     1266    11823    3                SVMSG$ = PINCRW(SVMSG$,SIZEW(SV$MSG));

  11823   1 000518  ECC7 0008                            LDB,B6   SVMSG$,AUTO
          1 00051A  DBC6 0005                            LAB,B5   5,B6
          1 00051C  DFC7 0008                            STB,B5   SVMSG$,AUTO

     1267    11824    3                SVMSG$->STRING = BUFFER;

  11824   1 00051E  ECC7 0006                            LDB,B6   @SIZE,AUTO
          1 000520  E806                                 LDR,R6   ,B6
          1 000521  ACC7 0004                            LDB,B2   @BUFFER,AUTO
          1 000523  2C00                                 LDV,R2   0
          1 000524  BB85                                 LAB,B3   ,B5
          1 000525  3C00                                 LDV,R3   0
          1 000526  0008                                 MMM
          1 000527  0F81 0004                            B        s:11831,PREL

     1268    11825    3             CASE(IGA_DUMPMSG);

     1269    11826    3                KL$DUMPMSG.NAHDR.ERRFLAG=1;

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:227  
  11826   1 000529  5C01                                 LDV,R5   1
          1 00052A  DA86                                 SRM,R5,'00FF'X    ,B6
          1 00052B       00FF

     1270    11827    3             END /* End cases */;

     1271    11828
     1272    11829    2           END;

     1273    11830
     1274    11831    1        RETURN;

  11831   1 00052C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1275    11832
     1276    11833    1   END GJA$NETWORK_MANAGER;
     1277    11834        %EOD;

PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:228  
--  Include file information  --

   KNN_NETWORK_M.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KN_ERRORS_C.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$NETWORK_MANAGER.
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:229  

 **** Variables and constants ****

  ****  Section 000  Data  GJA$NETWORK_MANAGER

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

   12B-0-0/w STRC(2472)  r     1 CHNRSP                   1CD-0-0/w STRC(32)    r     1 E$KLH_FCG
    EB-0-0/w STRC(1024)  r     1 ERRMSG_RSP               1C6-0-0/w STRC(72)    r     1 PRFRSP
     0-0-0/w STRC(1856)  r     1 SGNRSP                    74-0-0/w STRC(1904)  r     1 SYSLOG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BUFFER                    6-0-0/w PTR         r     1 @SIZE
     C-0-0/c STRC(64)    r     1 ACCR                       C-0-0/c CHAR(8)     r     1 ACCT
    *0-0-0/w ACHR        r     1 BUFFER                    4B-0-0/w PTR         r     1 CHNRSP$
    2B-0-0/w PTR         r     1 CTX$                      21-0-0/w UBIN(16)    r     1 ERR
    28-0-0/b BIT         r     1 FOUNDIT                   22-0-0/c CHAR(8)     r     1 HOST
    4A-0-0/w UBIN(16)    r     1 I                         2F-0-0/w PTR         r     1 KL$
    10-0-0/w STRC(104)   r     1 NAME                      2D-0-0/w UBIN(32)    r     1 NMID
    2D-0-0/w PTR         r     1 NMID$                     27-0-0/w BIT         r     1 NOHEADER
    26-0-0/w BIT         r     1 NOSETUP                   48-0-0/w PTR         r     1 P$
    31-0-0/w STRC(368)   r     1 PARAMS                    1B-0-0/w STRC(96)    r     1 PRO
    17-0-0/c CHAR(8)     r     1 PW                        29-0-0/w PTR         r     1 ROUTE$
    *0-0-0/w UBIN(16)    r     1 SIZE                       8-0-0/w PTR         r     1 SVMSG$
    4D-0-0/c STRC(128)   r     1 TERMID                     A-0-0/w PTR         r     1 TMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$DS1$                     0-0-0/w STRC(20496) r     1 GJA$NODETBL
     0-0-0/w PTR         r     1 GJA$SYSLOG$                0-0-0/w PTR         r     1 GJA_CHNRSP_HEAD$
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:230  
     0-0-0/w UBIN(16)    r     1 GJA_DEFNODE                0-0-0/w UBIN(16)    r     1 GJA_LDCT_NM
     0-0-0/w PTR         r     1 GJA_LINE_HEAD$             0-0-0/w PTR         r     1 GJA_MSG_BDID$
     0-0-0/w PTR         r     1 GJA_MSG_NOHOST$            0-0-0/w PTR         r     1 GJA_MSG_SGSYN$
     0-0-0/w PTR         r     1 GJA_MSG_UDHOST$            0-0-0/w UBIN(16)    r     1 GJA_NODE#
     0-0-0/w PTR         r     1 GJA_ROUTE$                 0-0-0/w PTR         r     1 GJA_UID_NANM$
     0-0-0/w UBIN(32)    r     1 GJA_UID_NM                 0-0-0/w PTR         r     1 GJA_UID_NM$
     0-0-0/w PTR         r     1 KV_B_POOL$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(32)    r     1 B$DWORD                    0-0-0/w PTR         r     1 B$PTR$
     0-0-0/w UBIN(16)    r     1 B$WORD                     0-0-0/c STRC(272)   r     1 GJA$HAND_CTX
     0-0-0/w STRC(528)   r     1 GJA$LGNCTX                 0-0-0/w STRC(2472)  r     1 KL$CHNRSP
     0-0-0/w STRC(1776)  r     1 KL$CONTROL                 0-0-0/w ASTR(96)    r     1 KL$DUMPMSG
     0-0-0/w STRC(496)   r     1 KL$ERRMSG_RQS              0-0-0/w STRC(272)   r     1 KL$HDR
     0-0-0/w ASTR(216)   r     1 KL$RQSCHN                  0-0-0/w STRC(256)   r     1 KL$RQSPROFILE
     0-0-0/w ASTR(240)   r     1 KL$SGN                     0-0-0/w STRC(208)   r     1 KNN$ROUTE
     0-0-0/w PTR         r     1 KNN$ROUTE$(0:0)
     0-0-0/w ASTR(1824)  r     1 KV$BPC                     0-0-0/c ACHR        r     1 STRING
     0-0-0/w STRC(80)    r     1 SV$MSG                     0-0-0/c ASTR(8)     r     1 TEXT


   Procedure GJA$NETWORK_MANAGER requires 1327 words for executable code.
   Procedure GJA$NETWORK_MANAGER requires 104 words of local(AUTO) storage.
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:231  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:232  
          MINI XREF LISTING

ACCR.C1
     10805**DCL     11741>>IF
ACCT
     10803**DCL     10804--REDEF   11711<>CALL
B$DWORD
     10562**DCL     11605>>DOINDEX 11606--ASSIGN  11606>>ASSIGN
B$PTR$
     10563**DCL     11638--IF      11641--ASSIGN  11643--ASSIGN  11650>>ASSIGN  11663--IF      11666--ASSIGN
     11669>>ASSIGN
B$WORD
     10564**DCL     11638--IF      11643>>ASSIGN  11643--ASSIGN  11644--ASSIGN
BUFFER
      9159**DCL        22--PROC    11595--ASSIGN  11599<>CALL    11676<>CALL    11698<>CALL    11708<>CALL
     11791<>CALL    11824>>ASSIGN
CHNRSP
     11188**DCL     11666<<ASSIGN  11687--ASSIGN  11688--ASSIGN
CHNRSP.CONFIG
     11199**DCL     11682<<ASSIGN
CHNRSP.DFLTHND
     11203**DCL     11683<<ASSIGN
CHNRSP.HANDLER
     11217**DCL     11684<<ASSIGN
CHNRSP.LINE_PROFILE
     11195**DCL     11681<<ASSIGN
CHNRSP.NAK
     11207**DCL     11679<<ASSIGN
CHNRSP.TERMINAL_ID
     11237**DCL     11685<<ASSIGN
CHNRSP.TERMINAL_ID.TERM
     11239**DCL     11248--REDEF
CHNRSP$
     11563**DCL     11634<<ASSIGN  11637>>DOWHILE 11638>>IF      11641<<ASSIGN  11641>>ASSIGN  11643>>ASSIGN
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:233  
     11644<<ASSIGN  11644>>ASSIGN  11645>>ASSIGN  11646>>ASSIGN  11650<<ASSIGN  11650>>ASSIGN  11655<<ASSIGN
     11662>>DOWHILE 11663>>IF      11666>>ASSIGN  11669<<ASSIGN  11669>>ASSIGN
CTX$
     10823**DCL     10746--IMP-PTR 11751<<ASSIGN  11774<<ASSIGN  11775>>IF      11775>>IF      11781>>IF
     11791<>CALL
DO_CHNRSP
     11679**LABEL   11667--GOTO
E$KLH_FCG
     11504**DCL     11733>>ASSIGN
ERR
     10814**DCL     11694<<ASSIGN  11711<>CALL    11713>>ASSIGN  11720>>DOCASE  11734>>ASSIGN  11744<<ASSIGN
     11755<<ASSIGN  11768<<ASSIGN  11778<<ASSIGN  11784<<ASSIGN
ERRMSG_RSP
     11112**DCL     11800--ASSIGN  11801--ASSIGN
ERRMSG_RSP.CTX$
     11165**DCL     11796<<ASSIGN
ERRMSG_RSP.MESSAGE_SZ
     11124**DCL     11797<<ASSIGN
ERRMSG_RSP.NO_NM
     11154**DCL     11798<<ASSIGN
ERRMSG_RSP.USR#
     11119**DCL     11795<<ASSIGN
FNDIT
     11761**LABEL   11764--EXIT
FOUNDIT
     10818**DCL     11760<<ASSIGN  11763<<ASSIGN  11767>>IF
G$DS1$
      9167**DCL     11604>>ASSIGN  11605>>DOINDEX 11606>>ASSIGN  11606>>ASSIGN
GJA$DECODE_APL_MSG
     11538**DCL-ENT 11613--CALL    11622--CALL    11629--CALL    11647--CALL    11689--CALL    11738--CALL
     11802--CALL
GJA$HAND_CTX.HOST_NODE
     10776**DCL     11781>>IF
GJA$HAND_CTX.LDCTX
     10752**DCL     11775>>IF
GJA$LGNCTX.NM_NODE
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:234  
     10685**DCL     11789<<ASSIGN
GJA$LGNCTX.TERMINAL_ID.TERM
     10712**DCL     10721--REDEF
GJA$NETWORK_MANAGER
        22**PROC    11718--CALL
GJA$NODETBL.NODE.NODE
      9201**DCL     11748>>ASSIGN  11762>>IF
GJA$NODETBL.NODE#
      9193**DCL     11761>>DOINDEX
GJA$PARSE
     11542**DCL-ENT 11711--CALL
GJA$SEND_MSG
     11539**DCL-ENT 11599--CALL    11676--CALL    11698--CALL    11708--CALL    11791--CALL
GJA$SYSLOG$
      9170**DCL     11813>>IF      11814<<ASSIGN  11817>>ASSIGN
GJA_CHNRSP_HEAD$
      9169**DCL     11655>>ASSIGN
GJA_DEFNODE
      9173**DCL     11748>>ASSIGN  11749>>ASSIGN
GJA_LDCT_NM
      9163**DCL     11596>>IF      11674>>IF      11693>>IF      11705>>IF      11750>>IF
GJA_LINE_HEAD$
      9168**DCL     11634>>ASSIGN
GJA_MSG_BDID$
      9176**DCL     11701>>IF      11725>>ASSIGN  11726>>ASSIGN  11726>>ASSIGN
GJA_MSG_NOHOST$
      9177**DCL     11701>>IF      11728>>ASSIGN  11729>>ASSIGN  11729>>ASSIGN  11753>>ASSIGN  11754>>ASSIGN
     11754>>ASSIGN  11776>>ASSIGN  11777>>ASSIGN  11777>>ASSIGN
GJA_MSG_SGSYN$
      9175**DCL     11701>>IF      11722>>ASSIGN  11723>>ASSIGN  11723>>ASSIGN  11742>>ASSIGN  11743>>ASSIGN
     11743>>ASSIGN
GJA_MSG_UDHOST$
      9178**DCL     11701>>IF      11769>>ASSIGN  11770>>ASSIGN  11770>>ASSIGN  11782>>ASSIGN  11783>>ASSIGN
     11783>>ASSIGN
GJA_NODE#
      9172**DCL     11717>>ASSIGN  11790>>ASSIGN
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:235  
GJA_ROUTE$
      9174**DCL     10587--IMP-PTR 11773>>ASSIGN
GJA_UID_NANM$
      9166**DCL     11613<>CALL    11622<>CALL    11629<>CALL    11647<>CALL    11689<>CALL    11738<>CALL
     11802<>CALL
GJA_UID_NM
      9164**DCL      9165--REDEF
GJA_UID_NM$
      9165**DCL     11599<>CALL    11676<>CALL    11698<>CALL    11708<>CALL    11751>>ASSIGN
HOST
     10815**DCL     11711<>CALL    11747>>IF      11748<<ASSIGN  11762>>IF
I
     11562**DCL     11605<<DOINDEX 11606>>ASSIGN  11749<<ASSIGN  11761<<DOINDEX 11762>>IF      11773>>ASSIGN
     11789>>ASSIGN
KL$
     11545**DCL      9221--IMP-PTR  9319--IMP-PTR  9448--IMP-PTR  9592--IMP-PTR  9681--IMP-PTR  9752--IMP-PTR
      9887--IMP-PTR  9990--IMP-PTR 10083--IMP-PTR 10483--IMP-PTR 10519--IMP-PTR 11595<<ASSIGN  11596>>IF
     11596>>IF      11602>>DOCASE  11607>>IF      11618>>ASSIGN  11620>>ASSIGN  11625>>ASSIGN  11632>>IF
     11635>>ASSIGN  11638>>IF      11645>>ASSIGN  11653>>IF      11656>>ASSIGN  11681>>ASSIGN  11682>>ASSIGN
     11683>>ASSIGN  11684>>ASSIGN  11685>>ASSIGN  11692>>IF      11711>>CALL    11711>>CALL    11714>>ASSIGN
     11715>>ASSIGN  11715>>ASSIGN  11716>>ASSIGN  11732>>ASSIGN  11788>>ASSIGN  11790>>ASSIGN  11795>>ASSIGN
     11796>>ASSIGN  11826>>ASSIGN
KL$ADMIN.TERMID_HI.TERM
      9565**DCL      9574--REDEF
KL$ADMIN.TERMID_LO.TERM
      9536**DCL      9545--REDEF
KL$CHNRSP
     10258**DCL     11666>>ASSIGN
KL$CHNRSP.HANDLER
     10287**DCL     11645<<ASSIGN
KL$CHNRSP.TERMINAL_ID
     10307**DCL     11663>>IF
KL$CHNRSP.TERMINAL_ID.TERM
     10309**DCL     10318--REDEF
KL$CHNRSP.TERMINAL_ID.TERM.CHANNEL
     10315**DCL     11638>>IF
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:236  
KL$CONTROL
      9319**DCL     11612--ASSIGN  11616--ASSIGN  11620--ASSIGN
KL$CONTROL.HANDLER
      9328**DCL     11607>>IF      11607>>IF
KL$CONTROL.TYPE
      9325**DCL     11609<<ASSIGN  11618<<ASSIGN
KL$DUMPMSG.DATASIZE
     10500**DCL     10502--IMP-SIZ
KL$DUMPMSG.NAHDR.ERRFLAG
     10492**DCL     11826<<ASSIGN
KL$ERRMSG_RQS.CTX$
     10115**DCL     11796>>ASSIGN
KL$ERRMSG_RQS.USR#
     10090**DCL     11795>>ASSIGN
KL$HDR.CODE
      9226**DCL     11596>>IF      11596>>IF      11602>>DOCASE
KL$KEYMES.TERMID.TERM
      9834**DCL      9843--REDEF
KL$RQSCHN.CONFIG
      9898**DCL     11653>>IF      11682>>ASSIGN
KL$RQSCHN.DFLTHND
      9902**DCL     11683>>ASSIGN
KL$RQSCHN.HANDLER
      9919**DCL     11645>>ASSIGN  11684>>ASSIGN
KL$RQSCHN.LINE_PROFILE
      9894**DCL     11632>>IF      11681>>ASSIGN
KL$RQSCHN.SGN.L
      9961**DCL      9969--IMP-SIZ
KL$RQSCHN.TERMINAL_ID
      9939**DCL     11656>>ASSIGN  11685>>ASSIGN
KL$RQSCHN.TERMINAL_ID.TERM
      9941**DCL      9950--REDEF
KL$RQSCHN.TERMINAL_ID.TERM.CHANNEL
      9947**DCL     11638>>IF
KL$RQSCHN.TERMINAL_ID.TTYP
      9941**DCL     11635<<ASSIGN
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:237  
KL$RQSPROFILE.NMID
     10558**DCL     11625>>ASSIGN
KL$RQSPROFILE.TERMID.TERM
     10542**DCL     10551--REDEF
KL$SGN.AUTOLGN
     10031**DCL     11692>>IF
KL$SGN.LOGON
     10064**DCL     11711<>CALL
KL$SGN.LOGON.LGNSIZ
     10065**DCL     10066--IMP-SIZ 11711>>CALL    11714>>ASSIGN  11715>>ASSIGN
KL$SGN.LOGON.LGNTXT
     10066**DCL     11715>>ASSIGN
KL$SGN.NMID
     10054**DCL     11732>>ASSIGN  11788>>ASSIGN
KL$SGN.NODE
      9994**DCL     11790<<ASSIGN
KL$SGN.TERMINAL_ID
     10015**DCL     11716>>ASSIGN
KL$SGN.TERMINAL_ID.TERM
     10017**DCL     10026--REDEF
KNN$ROUTE.CTX$
     10596**DCL     11774>>ASSIGN
KNN$ROUTE$
     10587**DCL     11773>>ASSIGN
KV$BPC.BITMAPSIZ
     10581**DCL     10584--IMP-SIZ
KV$BPC.TOT
     10574**DCL     11805>>IF
KV$BPC.USE
     10574**DCL     11805>>IF
KVB$GET2NSYS
     11541**DCL-ENT 11807--CALL
KV_B_POOL$
      9171**DCL     10570--IMP-PTR 11805>>IF      11805>>IF
LGNFAILED
     11731**LABEL   11695--GOTO    11706--GOTO    11745--GOTO    11756--GOTO    11771--GOTO    11779--GOTO
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:238  
     11785--GOTO
NAME
     10807**DCL     11711<>CALL
NMID
     10825**DCL     11788<<ASSIGN
NMID$
     10824**DCL     10825--REDEF   11789>>ASSIGN
NOHEADER
     10817**DCL     11711<>CALL
NOSETUP
     10816**DCL     11711<>CALL
P$
     11561**DCL     11604<<ASSIGN  11606<<ASSIGN  11607>>IF      11609>>ASSIGN  11611>>ASSIGN  11616<<ASSIGN
     11616>>ASSIGN
PARAMS
     11547**DCL     11610<<ASSIGN  11613<>CALL    11619<<ASSIGN  11622<>CALL    11626<<ASSIGN  11629<>CALL
     11642<<ASSIGN  11647<>CALL    11686<<ASSIGN  11689<>CALL    11731<<ASSIGN  11738<>CALL    11799<<ASSIGN
     11802<>CALL
PARAMS.DAT$
     11551**DCL     11611<<ASSIGN  11620<<ASSIGN  11628<<ASSIGN  11646<<ASSIGN  11687<<ASSIGN  11735<<ASSIGN
     11800<<ASSIGN
PARAMS.DATSIZE
     11552**DCL     11612<<ASSIGN  11621<<ASSIGN  11627<<ASSIGN  11643<<ASSIGN  11688<<ASSIGN  11736<<ASSIGN
     11801<<ASSIGN
PRFRSP
     11408**DCL     11627--ASSIGN  11628--ASSIGN
PRFRSP.NMID
     11423**DCL     11625<<ASSIGN
PRFRSP.PROFILE.PRFSIZE
     11435**DCL     11624<<ASSIGN
PRO
     10811**DCL     11711<>CALL
PW
     10810**DCL     11711<>CALL
ROUTE$
     10822**DCL     10589--IMP-PTR 11773<<ASSIGN  11774>>ASSIGN
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:239  
SGNRSP
     10843**DCL     11735--ASSIGN  11736--ASSIGN
SGNRSP.ERRCODE
     10899**DCL     11733<<ASSIGN
SGNRSP.ERRCODE.ERR#
     10926**DCL     11734<<ASSIGN
SGNRSP.MESSAGE.RSPSIZ
     10961**DCL     11722<<ASSIGN  11725<<ASSIGN  11728<<ASSIGN  11736>>ASSIGN  11742<<ASSIGN  11753<<ASSIGN
     11769<<ASSIGN  11776<<ASSIGN  11782<<ASSIGN
SGNRSP.MESSAGE.RSPTXT
     10962**DCL     11723<<ASSIGN  11726<<ASSIGN  11729<<ASSIGN  11736--ASSIGN  11743<<ASSIGN  11754<<ASSIGN
     11770<<ASSIGN  11777<<ASSIGN  11783<<ASSIGN
SGNRSP.NMID
     10861**DCL     11732<<ASSIGN
SGNRSP.TERMID.TERM
     10947**DCL     10956--REDEF
SIZE
      9160**DCL        22--PROC     9159--IMP-SIZ 10800--IMP-SIZ 11599>>CALL    11599<>CALL    11621>>ASSIGN
     11676>>CALL    11676<>CALL    11698>>CALL    11698<>CALL    11708>>CALL    11708<>CALL    11791>>CALL
     11791<>CALL    11807>>CALL    11812>>ASSIGN  11824>>ASSIGN  11824>>ASSIGN
STRING
     10800**DCL     11824<<ASSIGN
SV$MSG
     10794**DCL     11807--CALL    11823--ASSIGN
SV$MSG.LNK$
     10796**DCL     11811<<ASSIGN  11818>>DOWHILE 11819>>ASSIGN  11821<<ASSIGN
SV$MSG.SZ
     10797**DCL     11812<<ASSIGN
SVMSG$
     10801**DCL     11807<>CALL    11811>>ASSIGN  11812>>ASSIGN  11814>>ASSIGN  11821>>ASSIGN  11823<<ASSIGN
     11823>>ASSIGN  11824>>ASSIGN
SYSLOG
     10979**DCL     11718<>CALL    11718--CALL
SYSLOG.ERRLOG.DATA
     11096**DCL     11715<<ASSIGN  11718--CALL
SYSLOG.ERRLOG.DATA_SIZE
PL6.E3A0      #008=GJA$NETWORK_MANAGER File=GJA$SUBS.:E05TSI                     TUE 07/29/97 21:57 Page:240  
     11094**DCL     11714<<ASSIGN  11718>>CALL
SYSLOG.ERRLOG.ERRCODE.ERR#
     11052**DCL     11713<<ASSIGN
SYSLOG.ERRLOG.TERMID
     11076**DCL     11716<<ASSIGN
SYSLOG.ERRLOG.TERMID.TERM
     11078**DCL     11087--REDEF
SYSLOG.ERRLOG.VALUES
     11090**DCL     11717<<ASSIGN
TERMID
     11578**DCL     11656<<ASSIGN  11663>>IF
TERMID.TERM
     11582**DCL     11591--REDEF
TERMID.TERM.CHANNEL
     11588**DCL     11660<<ASSIGN
TERMID.TERM.TERM_NAME
     11591**DCL     11658>>IF
TERMID.TTYP
     11582**DCL     11657<<ASSIGN
TEXT.C
     10821**DCL     11723>>ASSIGN  11726>>ASSIGN  11729>>ASSIGN  11743>>ASSIGN  11754>>ASSIGN  11770>>ASSIGN
     11777>>ASSIGN  11783>>ASSIGN
TEXT.L
     10820**DCL     10821--IMP-SIZ 11722>>ASSIGN  11723>>ASSIGN  11725>>ASSIGN  11726>>ASSIGN  11728>>ASSIGN
     11729>>ASSIGN  11742>>ASSIGN  11743>>ASSIGN  11753>>ASSIGN  11754>>ASSIGN  11769>>ASSIGN  11770>>ASSIGN
     11776>>ASSIGN  11777>>ASSIGN  11782>>ASSIGN  11783>>ASSIGN
TMP$
     10802**DCL     11817<<ASSIGN  11818>>DOWHILE 11819<<ASSIGN  11819>>ASSIGN  11821>>ASSIGN

PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:241  
     1278        1        /*T***********************************************************/
     1279        2        /*T*                                                         */
     1280        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1281        4        /*T*                                                         */
     1282        5        /*T***********************************************************/
     1283        6        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
     1284        7        GJA$CONFIG: PROC;
     1285        8
     1286        9        /* Include files */
     1287       10        %INCLUDE LCP_6;
     1288     4289        %INCLUDE KL_CONTROL_C;
     1289     4669        %INCLUDE KL_SUPER_C;
     1290     7571        %INCLUDE KL_MACRO_C;
     1291    10923        %INCLUDE KL_AFCN_C;
     1292    11024
     1293    11025        /* Symrefs */
     1294    11026    1   DCL G$DS1$ PTR SYMREF;
     1295    11027    1   DCL GJA_LINE_HEAD$ PTR SYMREF;
     1296    11028    1   DCL GJA_CHNRSP_HEAD$ PTR SYMREF;
     1297    11029
     1298    11030        /* Auto */
     1299    11031    1   DCL I SBIN;
     1300    11032    1   DCL LNK$ PTR;
     1301    11033    1   DCL CNFG$ PTR;
     1302    11034    1   DCL SIZE UBIN;
     1303    11035    1   DCL LNKSIZE UBIN;
     1304    11036    1   DCL SUB$ PTR;
     1305    11037    1   DCL SUBSIZE UBIN;
     1306    11038    1   DCL ENDCNFG$ PTR;
     1307    11039    1   DCL LINE$ PTR;
     1308    11040    1   DCL NSUBLKS UBIN;
     1309    11041    1   DCL CHNRSP$ PTR;
     1310    11042        %KL_NA_INFO (FPTN=NA,STCLASS=AUTO);
     1311    11091        %KL_HNDCMN_INFO (FPTN=HNDCMN,STCLASS=AUTO);
     1312    11171        %B$TERMINAL_ID (FPTN=TERMID);
     1313    11200
     1314    11201        /* Based */
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:242  
     1315    11202    1   DCL B$DWORD UBIN(32) BASED;
     1316    11203    1   DCL B$WORD UBIN BASED;
     1317    11204    1   DCL B$PTR$ PTR BASED;
     1318    11205    1   DCL STRUCT CHAR(SIZE) BASED;
     1319    11206        %KL_LNK (NAME=KL$LNK,STCLASS=BASED);
     1320    11430        %KL_LNKVC (NAME=KL$LNKVC,STCLASS=BASED);
     1321    11654        %KL_CHNRSP (FPTN=KL$CHNRSP,STCLASS=BASED,MSGSIZE=2);
     1322    11874
     1323    11875        /* Entry references */
     1324    11876    1   DCL GJA$UPDATE_CHNTBL ENTRY(3) ALTRET;
     1325    11877    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
     1326    11878        %EJECT;
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:243  
     1327    11879    1        CNFG$ = PINCRW(G$DS1$,PINCRW(G$DS1$,(G$DS1$->B$DWORD+1)*2)->B$DWORD);
     1328    11880    1        ENDCNFG$ = PINCRW(CNFG$,CNFG$->B$WORD);
     1329    11881    1        CNFG$ = PINCRW(CNFG$,1);           /* get past size */
     1330    11882
     1331    11883    2        DO WHILE (CNFG$ < ENDCNFG$);
     1332    11884
     1333    11885    2             LNK$ = PINCRW(CNFG$,1);
     1334    11886    2             LNKSIZE = CNFG$->B$WORD;
     1335    11887    2             CNFG$ = PINCRW(CNFG$,LNKSIZE+1);
     1336    11888    2             SIZE = LNKSIZE + SIZEW(KL$CHNRSP);
     1337    11889    2             NSUBLKS = LNK$->KL$LNK.BLKHDR.NSUBS;
     1338    11890    2             SUB$ = PINCRW(LNK$,LNKSIZE);
     1339    11891
     1340    11892    3             DO I = 1 TO NSUBLKS;
     1341    11893    3                  SUBSIZE = SUB$->B$WORD + 1;
     1342    11894    3                  CNFG$ = PINCRW(CNFG$,SUBSIZE);
     1343    11895    3                  SIZE = SIZE + SUBSIZE;
     1344    11896    3                  SUB$ = PINCRW(SUB$,SUBSIZE);
     1345    11897    3                END;
     1346    11898    2             SIZE = SIZE + SIZEC(B$PTR$) + SIZEW(B$WORD);; /* Leave room for link */
     1347    11899    2             CALL KVB$GETSYS (SIZE,LINE$)
     1348    11900    3             WHENALTRETURN DO;
     1349    11901    3                  CALL M$XXX;
     1350    11902    3                END;
     1351    11903        /* Link it on the chain */
     1352    11904    2             LINE$->B$PTR$ = GJA_LINE_HEAD$;
     1353    11905    2             GJA_LINE_HEAD$ = LINE$;
     1354    11906
     1355    11907    2             CHNRSP$ = PINCRW(LNK$,SIZEW(KL$LNK));
     1356    11908    2             LINE$ = PINCRW(LINE$,SIZEW(B$PTR$));
     1357    11909    2             LINE$->B$WORD = SIZE;
     1358    11910    2             LINE$ = PINCRW(LINE$,SIZEW(B$WORD));
     1359    11911    2             LINE$->KL$CHNRSP = CHNRSP$->KL$CHNRSP;
     1360    11912    2             LINE$->KL$CHNRSP.MESSAGE.MSGSIZE = SIZE*2 - SIZEC(KL$CHNRSP) - 4;
     1361    11913    2             LINE$->KL$CHNRSP.LINE_PROFILE = '1'B;
     1362    11914        /* Move in the LNK infomation */
     1363    11915    2             SIZE = LNKSIZE * 2;
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:244  
     1364    11916    2             LINE$ = PINCRW(LINE$,SIZEW(KL$CHNRSP)-SIZEW(KL$CHNRSP.MESSAGE.MESSAGE));
     1365    11917    2             LINE$->STRUCT = LNK$->STRUCT;
     1366    11918    2             LINE$ = PINCRW(LINE$,LNKSIZE);
     1367    11919
     1368    11920        /* Move in the sublock info pulling out the CHNRSP as we go along */
     1369    11921    2             SUB$ = PINCRW(LNK$,LNKSIZE);
     1370    11922    2             NA = CHNRSP$->KL$CHNRSP.NA;
     1371    11923    2             HNDCMN = CHNRSP$->KL$CHNRSP.HNDCMN;
     1372    11924    2             TERMID = CHNRSP$->KL$CHNRSP.TERMINAL_ID;
     1373    11925    2             CALL GJA$UPDATE_CHNTBL(NA,TERMID,HNDCMN);
     1374    11926
     1375    11927    3             DO I = 1 TO NSUBLKS;
     1376    11928    3                  SUBSIZE = SUB$->B$WORD;
     1377    11929    3                  SUB$ = PINCRW(SUB$,1);
     1378    11930    3                  SIZE = SUBSIZE * 2;
     1379    11931    3                  LINE$->STRUCT = SUB$->STRUCT;
     1380    11932    3                  CALL KVB$GETSYS(SIZEC(KL$CHNRSP)+2,CHNRSP$);
     1381    11933    3                  CHNRSP$->B$PTR$ = GJA_CHNRSP_HEAD$;
     1382    11934    3                  GJA_CHNRSP_HEAD$ = CHNRSP$;
     1383    11935    3                  PINCRW(CHNRSP$,SIZEW(B$PTR$))->KL$CHNRSP = PINCRW(SUB$,SIZEW(KL$LNKVC
             11935                           ))->KL$CHNRSP;
     1384    11936    3                  SUB$ = PINCRW(SUB$,SUBSIZE);
     1385    11937    3                  LINE$ = PINCRW(LINE$,SUBSIZE);
     1386    11938    3                END;
     1387    11939    2           END;
     1388    11940
     1389    11941    1        RETURN;
     1390    11942
     1391    11943    1   END GJA$CONFIG;
     1392    11944        %EOD;

PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:245  
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$CONFIG.

   Procedure GJA$CONFIG requires 350 words for executable code.
   Procedure GJA$CONFIG requires 48 words of local(AUTO) storage.

PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:246  

 Object Unit name= GJA$CONFIG                                 File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:57:49.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   350    15E  GJA$CONFIG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  GJA$CONFIG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$GETSYS
 yes     yes           Std       3 GJA$UPDATE_CHNTBL
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$DS1$                                GJA_LINE_HEAD$                        GJA_CHNRSP_HEAD$
r    G$ROS$
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:247  


     1278        1        /*T***********************************************************/
     1279        2        /*T*                                                         */
     1280        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1281        4        /*T*                                                         */
     1282        5        /*T***********************************************************/
     1283        6        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
     1284        7        GJA$CONFIG: PROC;

      7   0 000000  D380 0000 0000  xent GJA$CONFIG      LNJ,B5   X6A_AUTO_0
          0 000003       0030 0000                       DC       48,0

     1285        8
     1286        9        /* Include files */
     1287       10        %INCLUDE LCP_6;
     1288     4289        %INCLUDE KL_CONTROL_C;
     1289     4669        %INCLUDE KL_SUPER_C;
     1290     7571        %INCLUDE KL_MACRO_C;
     1291    10923        %INCLUDE KL_AFCN_C;
     1292    11024
     1293    11025        /* Symrefs */
     1294    11026    1   DCL G$DS1$ PTR SYMREF;
     1295    11027    1   DCL GJA_LINE_HEAD$ PTR SYMREF;
     1296    11028    1   DCL GJA_CHNRSP_HEAD$ PTR SYMREF;
     1297    11029
     1298    11030        /* Auto */
     1299    11031    1   DCL I SBIN;
     1300    11032    1   DCL LNK$ PTR;
     1301    11033    1   DCL CNFG$ PTR;
     1302    11034    1   DCL SIZE UBIN;
     1303    11035    1   DCL LNKSIZE UBIN;
     1304    11036    1   DCL SUB$ PTR;
     1305    11037    1   DCL SUBSIZE UBIN;
     1306    11038    1   DCL ENDCNFG$ PTR;
     1307    11039    1   DCL LINE$ PTR;
     1308    11040    1   DCL NSUBLKS UBIN;
     1309    11041    1   DCL CHNRSP$ PTR;
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:248  
     1310    11042        %KL_NA_INFO (FPTN=NA,STCLASS=AUTO);
     1311    11091        %KL_HNDCMN_INFO (FPTN=HNDCMN,STCLASS=AUTO);
     1312    11171        %B$TERMINAL_ID (FPTN=TERMID);
     1313    11200
     1314    11201        /* Based */
     1315    11202    1   DCL B$DWORD UBIN(32) BASED;
     1316    11203    1   DCL B$WORD UBIN BASED;
     1317    11204    1   DCL B$PTR$ PTR BASED;
     1318    11205    1   DCL STRUCT CHAR(SIZE) BASED;
     1319    11206        %KL_LNK (NAME=KL$LNK,STCLASS=BASED);
     1320    11430        %KL_LNKVC (NAME=KL$LNKVC,STCLASS=BASED);
     1321    11654        %KL_CHNRSP (FPTN=KL$CHNRSP,STCLASS=BASED,MSGSIZE=2);
     1322    11874
     1323    11875        /* Entry references */
     1324    11876    1   DCL GJA$UPDATE_CHNTBL ENTRY(3) ALTRET;
     1325    11877    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
     1326    11878        %EJECT;
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:249  
     1327    11879    1        CNFG$ = PINCRW(G$DS1$,PINCRW(G$DS1$,(G$DS1$->B$DWORD+1)*2)->B$DWORD);

  11879   0 000005  EC80 0000 0000  xsym                 LDB,B6   G$DS1$
          0 000008  8C86                                 LDI      ,B6
          0 000009  7081                                 DOL,R7   1
          0 00000A  8400 0000 0000  xsym                 AID      G$DS1$
          0 00000D  8470 0000 0002                       AID      2,IMO
          0 000010  8D47 002A                            SDI      TERMID+8,AUTO
          0 000012  DCC7 002A                            LDB,B5   TERMID+8,AUTO
          0 000014  8C85                                 LDI      ,B5
          0 000015  8400 0000 0000  xsym                 AID      G$DS1$
          0 000018  8D47 0007                            SDI      CNFG$,AUTO

     1328    11880    1        ENDCNFG$ = PINCRW(CNFG$,CNFG$->B$WORD);

  11880   0 00001A  DCC7 0007                            LDB,B5   CNFG$,AUTO
          0 00001C  B805                                 LDR,R3   ,B5
          0 00001D  F853                                 LDR,R7   R3
          0 00001E  6C00                                 LDV,R6   0
          0 00001F  8447 0007                            AID      CNFG$,AUTO
          0 000021  8D47 000E                            SDI      ENDCNFG$,AUTO

     1329    11881    1        CNFG$ = PINCRW(CNFG$,1);           /* get past size */

  11881   0 000023  CBC5 0001                            LAB,B4   1,B5
          0 000025  CFC7 0007                            STB,B4   CNFG$,AUTO

     1330    11882
     1331    11883    2        DO WHILE (CNFG$ < ENDCNFG$);

  11883   0 000027  CDC7 000E                            CMB,B4   ENDCNFG$,AUTO
          0 000029  0281 0131                            BGE      s:11941,PREL

     1332    11884
     1333    11885    2             LNK$ = PINCRW(CNFG$,1);

  11885   0 00002B  ECC7 0007                            LDB,B6   CNFG$,AUTO
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:250  
          0 00002D  DBC6 0001                            LAB,B5   1,B6
          0 00002F  DFC7 0005                            STB,B5   LNK$,AUTO

     1334    11886    2             LNKSIZE = CNFG$->B$WORD;

  11886   0 000031  E806                                 LDR,R6   ,B6
          0 000032  EF47 000A                            STR,R6   LNKSIZE,AUTO

     1335    11887    2             CNFG$ = PINCRW(CNFG$,LNKSIZE+1);

  11887   0 000034  F856                                 LDR,R7   R6
          0 000035  6C00                                 LDV,R6   0
          0 000036  8447 0007                            AID      CNFG$,AUTO
          0 000038  8470 0000 0001                       AID      1,IMO
          0 00003B  8D47 0007                            SDI      CNFG$,AUTO

     1336    11888    2             SIZE = LNKSIZE + SIZEW(KL$CHNRSP);

  11888   0 00003D  D847 000A                            LDR,R5   LNKSIZE,AUTO
          0 00003F  5E1C                                 ADV,R5   28
          0 000040  DF47 0009                            STR,R5   SIZE,AUTO

     1337    11889    2             NSUBLKS = LNK$->KL$LNK.BLKHDR.NSUBS;

  11889   0 000042  C805                                 LDR,R4   ,B5
          0 000043  C570 00FF                            AND,R4   255,IMO
          0 000045  CF47 0012                            STR,R4   NSUBLKS,AUTO

     1338    11890    2             SUB$ = PINCRW(LNK$,LNKSIZE);

  11890   0 000047  F847 000A                            LDR,R7   LNKSIZE,AUTO
          0 000049  6C00                                 LDV,R6   0
          0 00004A  8447 0005                            AID      LNK$,AUTO
          0 00004C  8D47 000B                            SDI      SUB$,AUTO

     1339    11891
     1340    11892    3             DO I = 1 TO NSUBLKS;
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:251  

  11892   0 00004E  3C01                                 LDV,R3   1
          0 00004F  BF47 0004                            STR,R3   I,AUTO
          0 000051  0F81 001C                            B        s:11897+2,PREL

     1341    11893    3                  SUBSIZE = SUB$->B$WORD + 1;

  11893   0 000053  ECC7 000B                            LDB,B6   SUB$,AUTO
          0 000055  E806                                 LDR,R6   ,B6
          0 000056  6E01                                 ADV,R6   1
          0 000057  EF47 000D                            STR,R6   SUBSIZE,AUTO

     1342    11894    3                  CNFG$ = PINCRW(CNFG$,SUBSIZE);

  11894   0 000059  F856                                 LDR,R7   R6
          0 00005A  6C00                                 LDV,R6   0
          0 00005B  8447 0007                            AID      CNFG$,AUTO
          0 00005D  8D47 0007                            SDI      CNFG$,AUTO

     1343    11895    3                  SIZE = SIZE + SUBSIZE;

  11895   0 00005F  D847 0009                            LDR,R5   SIZE,AUTO
          0 000061  DA47 000D                            ADD,R5   SUBSIZE,AUTO
          0 000063  DF47 0009                            STR,R5   SIZE,AUTO

     1344    11896    3                  SUB$ = PINCRW(SUB$,SUBSIZE);

  11896   0 000065  F847 000D                            LDR,R7   SUBSIZE,AUTO
          0 000067  6C00                                 LDV,R6   0
          0 000068  8447 000B                            AID      SUB$,AUTO
          0 00006A  8D47 000B                            SDI      SUB$,AUTO

     1345    11897    3                END;

  11897   0 00006C  8AC7 0004                            INC      I,AUTO
          0 00006E  C847 0004                            LDR,R4   I,AUTO
          0 000070  4863                                 BLZ,R4   s:11893,SPREL
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:252  
          0 000071  C947 0012                            CMR,R4   NSUBLKS,AUTO
          0 000073  03E0                                 BLE      s:11893,SPREL

     1346    11898    2             SIZE = SIZE + SIZEC(B$PTR$) + SIZEW(B$WORD);; /* Leave room for link */

  11898   0 000074  5E05                                 ADV,R5   5
          0 000075  DF47 0009                            STR,R5   SIZE,AUTO

     1347    11899    2             CALL KVB$GETSYS (SIZE,LINE$)

  11899   0 000077  EBC7 0010                            LAB,B6   LINE$,AUTO
          0 000079  EFC7 002C                            STB,B6   TERMID+10,AUTO
          0 00007B  DBC7 0009                            LAB,B5   SIZE,AUTO
          0 00007D  DFC7 002A                            STB,B5   TERMID+8,AUTO
          0 00007F  BBC7 002A                            LAB,B3   TERMID+8,AUTO
          0 000081  CBF0 0200                            LAB,B4   512,IMO
          0 000083  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          0 000086       0003                            DC       s:11901,PREL
          0 000087  0F81 0005                            B        s:11904,PREL

     1348    11900    3             WHENALTRETURN DO;

     1349    11901    3                  CALL M$XXX;

  11901   0 000089  B870 0082                            LDR,R3   130,IMO
          0 00008B  0001                                 MCL
          0 00008C       0000                            DC       s:11901+3,PREL

     1350    11902    3                END;

     1351    11903        /* Link it on the chain */
     1352    11904    2             LINE$->B$PTR$ = GJA_LINE_HEAD$;

  11904   0 00008D  EC80 0000 0000  xsym                 LDB,B6   GJA_LINE_HEAD$
          0 000090  DCC7 0010                            LDB,B5   LINE$,AUTO
          0 000092  EF85                                 STB,B6   ,B5

PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:253  
     1353    11905    2             GJA_LINE_HEAD$ = LINE$;

  11905   0 000093  ECC7 0010                            LDB,B6   LINE$,AUTO
          0 000095  EF80 0000 0000  xsym                 STB,B6   GJA_LINE_HEAD$

     1354    11906
     1355    11907    2             CHNRSP$ = PINCRW(LNK$,SIZEW(KL$LNK));

  11907   0 000098  DCC7 0005                            LDB,B5   LNK$,AUTO
          0 00009A  CBC5 0018                            LAB,B4   24,B5
          0 00009C  CFC7 0013                            STB,B4   CHNRSP$,AUTO

     1356    11908    2             LINE$ = PINCRW(LINE$,SIZEW(B$PTR$));

  11908   0 00009E  BBC6 0002                            LAB,B3   2,B6
          0 0000A0  BFC7 0010                            STB,B3   LINE$,AUTO

     1357    11909    2             LINE$->B$WORD = SIZE;

  11909   0 0000A2  E847 0009                            LDR,R6   SIZE,AUTO
          0 0000A4  EF03                                 STR,R6   ,B3

     1358    11910    2             LINE$ = PINCRW(LINE$,SIZEW(B$WORD));

  11910   0 0000A5  ECC7 0010                            LDB,B6   LINE$,AUTO
          0 0000A7  CBC6 0001                            LAB,B4   1,B6
          0 0000A9  CFC7 0010                            STB,B4   LINE$,AUTO

     1359    11911    2             LINE$->KL$CHNRSP = CHNRSP$->KL$CHNRSP;

  11911   0 0000AB  ACC7 0013                            LDB,B2   CHNRSP$,AUTO
          0 0000AD  2C00                                 LDV,R2   0
          0 0000AE  6C38                                 LDV,R6   56
          0 0000AF  BB84                                 LAB,B3   ,B4
          0 0000B0  3C00                                 LDV,R3   0
          0 0000B1  0008                                 MMM

PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:254  
     1360    11912    2             LINE$->KL$CHNRSP.MESSAGE.MSGSIZE = SIZE*2 - SIZEC(KL$CHNRSP) - 4;

  11912   0 0000B2  ECC7 0010                            LDB,B6   LINE$,AUTO
          0 0000B4  E847 0009                            LDR,R6   SIZE,AUTO
          0 0000B6  6001                                 SOL,R6   1
          0 0000B7  6EC4                                 ADV,R6   -60
          0 0000B8  EF46 001A                            STR,R6   26,B6

     1361    11913    2             LINE$->KL$CHNRSP.LINE_PROFILE = '1'B;

  11913   0 0000BA  8906                                 LBT,'0080'X       ,B6
  11913   0 0000BB       0080

     1362    11914        /* Move in the LNK infomation */
     1363    11915    2             SIZE = LNKSIZE * 2;

  11915   0 0000BC  E847 000A                            LDR,R6   LNKSIZE,AUTO
          0 0000BE  6001                                 SOL,R6   1
          0 0000BF  EF47 0009                            STR,R6   SIZE,AUTO

     1364    11916    2             LINE$ = PINCRW(LINE$,SIZEW(KL$CHNRSP)-SIZEW(KL$CHNRSP.MESSAGE.MESSAGE));

  11916   0 0000C1  ECC7 0010                            LDB,B6   LINE$,AUTO
          0 0000C3  DBC6 001B                            LAB,B5   27,B6
          0 0000C5  DFC7 0010                            STB,B5   LINE$,AUTO

     1365    11917    2             LINE$->STRUCT = LNK$->STRUCT;

  11917   0 0000C7  ACC7 0005                            LDB,B2   LNK$,AUTO
          0 0000C9  2C00                                 LDV,R2   0
          0 0000CA  BB85                                 LAB,B3   ,B5
          0 0000CB  3C00                                 LDV,R3   0
          0 0000CC  0008                                 MMM

     1366    11918    2             LINE$ = PINCRW(LINE$,LNKSIZE);

  11918   0 0000CD  F847 000A                            LDR,R7   LNKSIZE,AUTO
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:255  
          0 0000CF  6C00                                 LDV,R6   0
          0 0000D0  8447 0010                            AID      LINE$,AUTO
          0 0000D2  8D47 0010                            SDI      LINE$,AUTO

     1367    11919
     1368    11920        /* Move in the sublock info pulling out the CHNRSP as we go along */
     1369    11921    2             SUB$ = PINCRW(LNK$,LNKSIZE);

  11921   0 0000D4  F847 000A                            LDR,R7   LNKSIZE,AUTO
          0 0000D6  6C00                                 LDV,R6   0
          0 0000D7  8447 0005                            AID      LNK$,AUTO
          0 0000D9  8D47 000B                            SDI      SUB$,AUTO

     1370    11922    2             NA = CHNRSP$->KL$CHNRSP.NA;

  11922   0 0000DB  ACC7 0013                            LDB,B2   CHNRSP$,AUTO
          0 0000DD  2C1A                                 LDV,R2   26
          0 0000DE  6C08                                 LDV,R6   8
          0 0000DF  BB87                                 LAB,B3   ,AUTO
          0 0000E0  3C2A                                 LDV,R3   42
          0 0000E1  0008                                 MMM

     1371    11923    2             HNDCMN = CHNRSP$->KL$CHNRSP.HNDCMN;

  11923   0 0000E2  ACC7 0013                            LDB,B2   CHNRSP$,AUTO
          0 0000E4  2C22                                 LDV,R2   34
          0 0000E5  6C12                                 LDV,R6   18
          0 0000E6  BB87                                 LAB,B3   ,AUTO
          0 0000E7  3C32                                 LDV,R3   50
          0 0000E8  0008                                 MMM

     1372    11924    2             TERMID = CHNRSP$->KL$CHNRSP.TERMINAL_ID;

  11924   0 0000E9  ACC7 0013                            LDB,B2   CHNRSP$,AUTO
          0 0000EB  2C0A                                 LDV,R2   10
          0 0000EC  6C10                                 LDV,R6   16
          0 0000ED  BB87                                 LAB,B3   ,AUTO
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:256  
          0 0000EE  3C44                                 LDV,R3   68
          0 0000EF  0008                                 MMM

     1373    11925    2             CALL GJA$UPDATE_CHNTBL(NA,TERMID,HNDCMN);

  11925   0 0000F0  EBC7 0019                            LAB,B6   HNDCMN,AUTO
          0 0000F2  EFC7 002E                            STB,B6   TERMID+12,AUTO
          0 0000F4  ABC7 0022                            LAB,B2   TERMID,AUTO
          0 0000F6  AFC7 002C                            STB,B2   TERMID+10,AUTO
          0 0000F8  9BC7 0015                            LAB,B1   NA,AUTO
          0 0000FA  9FC7 002A                            STB,B1   TERMID+8,AUTO
          0 0000FC  BBC7 002A                            LAB,B3   TERMID+8,AUTO
          0 0000FE  CBF0 0300                            LAB,B4   768,IMO
          0 000100  E380 0000 0000  xent                 LNJ,B6   GJA$UPDATE_CHNTBL
          0 000103       0001                            DC       s:11927,PREL

     1374    11926
     1375    11927    3             DO I = 1 TO NSUBLKS;

  11927   0 000104  6C01                                 LDV,R6   1
          0 000105  EF47 0004                            STR,R6   I,AUTO
          0 000107  0F81 0045                            B        s:11938+2,PREL

     1376    11928    3                  SUBSIZE = SUB$->B$WORD;

  11928   0 000109  ECC7 000B                            LDB,B6   SUB$,AUTO
          0 00010B  E806                                 LDR,R6   ,B6
          0 00010C  EF47 000D                            STR,R6   SUBSIZE,AUTO

     1377    11929    3                  SUB$ = PINCRW(SUB$,1);

  11929   0 00010E  DBC6 0001                            LAB,B5   1,B6
          0 000110  DFC7 000B                            STB,B5   SUB$,AUTO

     1378    11930    3                  SIZE = SUBSIZE * 2;

  11930   0 000112  6001                                 SOL,R6   1
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:257  
          0 000113  EF47 0009                            STR,R6   SIZE,AUTO

     1379    11931    3                  LINE$->STRUCT = SUB$->STRUCT;

  11931   0 000115  AB85                                 LAB,B2   ,B5
          0 000116  2C00                                 LDV,R2   0
          0 000117  BCC7 0010                            LDB,B3   LINE$,AUTO
          0 000119  3C00                                 LDV,R3   0
          0 00011A  0008                                 MMM

     1380    11932    3                  CALL KVB$GETSYS(SIZEC(KL$CHNRSP)+2,CHNRSP$);

  11932   0 00011B  EBF0 003A                            LAB,B6   58,IMO
          0 00011D  CBC7 0013                            LAB,B4   CHNRSP$,AUTO
          0 00011F  CFC7 002C                            STB,B4   TERMID+10,AUTO
          0 000121  EFC7 002A                            STB,B6   TERMID+8,AUTO
          0 000123  BBC7 002A                            LAB,B3   TERMID+8,AUTO
          0 000125  CBF0 0200                            LAB,B4   512,IMO
          0 000127  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          0 00012A       0001                            DC       s:11933,PREL

     1381    11933    3                  CHNRSP$->B$PTR$ = GJA_CHNRSP_HEAD$;

  11933   0 00012B  EC80 0000 0000  xsym                 LDB,B6   GJA_CHNRSP_HEAD$
          0 00012E  DCC7 0013                            LDB,B5   CHNRSP$,AUTO
          0 000130  EF85                                 STB,B6   ,B5

     1382    11934    3                  GJA_CHNRSP_HEAD$ = CHNRSP$;

  11934   0 000131  ECC7 0013                            LDB,B6   CHNRSP$,AUTO
          0 000133  EF80 0000 0000  xsym                 STB,B6   GJA_CHNRSP_HEAD$

     1383    11935    3                 PINCRW(CHNRSP$,SIZEW(B$PTR$))->KL$CHNRSP = PINCRW(SUB$,SIZEW(KL$LNKVC
             11935                           ))->KL$CHNRSP;

  11935   0 000136  ACC7 000B                            LDB,B2   SUB$,AUTO
          0 000138  2C30                                 LDV,R2   48
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:258  
          0 000139  6C38                                 LDV,R6   56
          0 00013A  BB86                                 LAB,B3   ,B6
          0 00013B  3C04                                 LDV,R3   4
          0 00013C  0008                                 MMM

     1384    11936    3                  SUB$ = PINCRW(SUB$,SUBSIZE);

  11936   0 00013D  F847 000D                            LDR,R7   SUBSIZE,AUTO
          0 00013F  6C00                                 LDV,R6   0
          0 000140  8447 000B                            AID      SUB$,AUTO
          0 000142  8D47 000B                            SDI      SUB$,AUTO

     1385    11937    3                  LINE$ = PINCRW(LINE$,SUBSIZE);

  11937   0 000144  F847 000D                            LDR,R7   SUBSIZE,AUTO
          0 000146  6C00                                 LDV,R6   0
          0 000147  8447 0010                            AID      LINE$,AUTO
          0 000149  8D47 0010                            SDI      LINE$,AUTO

     1386    11938    3                END;

  11938   0 00014B  8AC7 0004                            INC      I,AUTO
          0 00014D  E847 0004                            LDR,R6   I,AUTO
          0 00014F  6801 FFB9                            BLZ,R6   s:11928,PREL
          0 000151  E947 0012                            CMR,R6   NSUBLKS,AUTO
          0 000153  0381 FFB5                            BLE      s:11928,PREL

     1387    11939    2           END;

  11939   0 000155  ECC7 0007                            LDB,B6   CNFG$,AUTO
          0 000157  EDC7 000E                            CMB,B6   ENDCNFG$,AUTO
          0 000159  0201 FED1                            BL       s:11885,PREL

     1388    11940
     1389    11941    1        RETURN;

  11941   0 00015B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:259  
     1390    11942
     1391    11943    1   END GJA$CONFIG;
     1392    11944        %EOD;

PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:260  
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure GJA$CONFIG.
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:261  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w PTR         r     1 CHNRSP$                    7-0-0/w PTR         r     1 CNFG$
     E-0-0/w PTR         r     1 ENDCNFG$                  19-0-0/w STRC(144)   r     1 HNDCMN
     4-0-0/w SBIN(16)    r     1 I                         10-0-0/w PTR         r     1 LINE$
     5-0-0/w PTR         r     1 LNK$                       A-0-0/w UBIN(16)    r     1 LNKSIZE
    15-0-0/c STRC(64)    r     1 NA                        12-0-0/w UBIN(16)    r     1 NSUBLKS
     9-0-0/w UBIN(16)    r     1 SIZE                       B-0-0/w PTR         r     1 SUB$
     D-0-0/w UBIN(16)    r     1 SUBSIZE                   22-0-0/c STRC(128)   r     1 TERMID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$DS1$                     0-0-0/w PTR         r     1 GJA_CHNRSP_HEAD$
     0-0-0/w PTR         r     1 GJA_LINE_HEAD$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(32)    r     1 B$DWORD                    0-0-0/w PTR         r     1 B$PTR$
     0-0-0/w UBIN(16)    r     1 B$WORD                     0-0-0/w STRC(448)   r     1 KL$CHNRSP
     0-0-0/w STRC(384)   r     1 KL$LNK                     0-0-0/w STRC(384)   r     1 KL$LNKVC
     0-0-0/c ACHR        r     1 STRUCT


   Procedure GJA$CONFIG requires 350 words for executable code.
   Procedure GJA$CONFIG requires 48 words of local(AUTO) storage.
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:262  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:263  
          MINI XREF LISTING

B$DWORD
     11202**DCL     11879>>ASSIGN  11879>>ASSIGN
B$PTR$
     11204**DCL     11898--ASSIGN  11904<<ASSIGN  11908--ASSIGN  11933<<ASSIGN  11935--ASSIGN
B$WORD
     11203**DCL     11880>>ASSIGN  11886>>ASSIGN  11893>>ASSIGN  11898--ASSIGN  11909<<ASSIGN  11910--ASSIGN
     11928>>ASSIGN
CHNRSP$
     11041**DCL     11907<<ASSIGN  11911>>ASSIGN  11922>>ASSIGN  11923>>ASSIGN  11924>>ASSIGN  11932<>CALL
     11933>>ASSIGN  11934>>ASSIGN  11935>>ASSIGN
CNFG$
     11033**DCL     11879<<ASSIGN  11880>>ASSIGN  11880>>ASSIGN  11881<<ASSIGN  11881>>ASSIGN  11883>>DOWHILE
     11885>>ASSIGN  11886>>ASSIGN  11887<<ASSIGN  11887>>ASSIGN  11894<<ASSIGN  11894>>ASSIGN
ENDCNFG$
     11038**DCL     11880<<ASSIGN  11883>>DOWHILE
G$DS1$
     11026**DCL     11879>>ASSIGN  11879>>ASSIGN  11879>>ASSIGN
GJA$UPDATE_CHNTBL
     11876**DCL-ENT 11925--CALL
GJA_CHNRSP_HEAD$
     11028**DCL     11933>>ASSIGN  11934<<ASSIGN
GJA_LINE_HEAD$
     11027**DCL     11904>>ASSIGN  11905<<ASSIGN
HNDCMN
     11107**DCL     11923<<ASSIGN  11925<>CALL
I
     11031**DCL     11892<<DOINDEX 11927<<DOINDEX
KL$CHNRSP
     11669**DCL     11888--ASSIGN  11911<<ASSIGN  11911>>ASSIGN  11912--ASSIGN  11916--ASSIGN  11932--CALL
     11935<<ASSIGN  11935>>ASSIGN
KL$CHNRSP.HNDCMN
     11798**DCL     11923>>ASSIGN
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:264  
KL$CHNRSP.LINE_PROFILE
     11676**DCL     11913<<ASSIGN
KL$CHNRSP.MESSAGE.MESSAGE
     11870**DCL     11916--ASSIGN
KL$CHNRSP.MESSAGE.MSGSIZE
     11866**DCL     11912<<ASSIGN
KL$CHNRSP.NA
     11749**DCL     11922>>ASSIGN
KL$CHNRSP.TERMINAL_ID
     11718**DCL     11924>>ASSIGN
KL$CHNRSP.TERMINAL_ID.TERM
     11720**DCL     11729--REDEF
KL$LNK
     11223**DCL     11907--ASSIGN
KL$LNK.BLKHDR.NSUBS
     11256**DCL     11889>>ASSIGN
KL$LNKVC
     11445**DCL     11935--ASSIGN
KL$LNKVC.CUG
     11544**DCL     11588--REDEF
KVB$GETSYS
     11877**DCL-ENT 11899--CALL    11932--CALL
LINE$
     11039**DCL     11899<>CALL    11904>>ASSIGN  11905>>ASSIGN  11908<<ASSIGN  11908>>ASSIGN  11909>>ASSIGN
     11910<<ASSIGN  11910>>ASSIGN  11911>>ASSIGN  11912>>ASSIGN  11913>>ASSIGN  11916<<ASSIGN  11916>>ASSIGN
     11917>>ASSIGN  11918<<ASSIGN  11918>>ASSIGN  11931>>ASSIGN  11937<<ASSIGN  11937>>ASSIGN
LNK$
     11032**DCL     11885<<ASSIGN  11889>>ASSIGN  11890>>ASSIGN  11907>>ASSIGN  11917>>ASSIGN  11921>>ASSIGN
LNKSIZE
     11035**DCL     11886<<ASSIGN  11887>>ASSIGN  11888>>ASSIGN  11890>>ASSIGN  11915>>ASSIGN  11918>>ASSIGN
     11921>>ASSIGN
M$XXX
      4248**DCL-ENT 11901--CALL
NA
     11058**DCL     11922<<ASSIGN  11925<>CALL
NSUBLKS
PL6.E3A0      #009=GJA$CONFIG File=GJA$SUBS.:E05TSI                              TUE 07/29/97 21:57 Page:265  
     11040**DCL     11889<<ASSIGN  11892>>DOINDEX 11927>>DOINDEX
SIZE
     11034**DCL     11205--IMP-SIZ 11888<<ASSIGN  11895<<ASSIGN  11895>>ASSIGN  11898<<ASSIGN  11898>>ASSIGN
     11899<>CALL    11909>>ASSIGN  11912>>ASSIGN  11915<<ASSIGN  11917>>ASSIGN  11917>>ASSIGN  11930<<ASSIGN
     11931>>ASSIGN  11931>>ASSIGN
STRUCT
     11205**DCL     11917<<ASSIGN  11917>>ASSIGN  11931<<ASSIGN  11931>>ASSIGN
SUB$
     11036**DCL     11890<<ASSIGN  11893>>ASSIGN  11896<<ASSIGN  11896>>ASSIGN  11921<<ASSIGN  11928>>ASSIGN
     11929<<ASSIGN  11929>>ASSIGN  11931>>ASSIGN  11935>>ASSIGN  11936<<ASSIGN  11936>>ASSIGN
SUBSIZE
     11037**DCL     11893<<ASSIGN  11894>>ASSIGN  11895>>ASSIGN  11896>>ASSIGN  11928<<ASSIGN  11930>>ASSIGN
     11936>>ASSIGN  11937>>ASSIGN
TERMID
     11185**DCL     11924<<ASSIGN  11925<>CALL
TERMID.TERM
     11189**DCL     11198--REDEF

PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:266  
     1393        1        /*T***********************************************************/
     1394        2        /*T*                                                         */
     1395        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1396        4        /*T*                                                         */
     1397        5        /*T***********************************************************/
     1398        6        GJA$TERM_HANDLER: PROC (CTX$);
     1399        7        /*F* NAME:     GJA$TERM_HANDLER
     1400        8
     1401        9             PURPOSE:  This route will perform all the functions needed when
     1402       10                       a handler disconnects from NA.
     1403       11
     1404       12             CALL:     CALL GJA$TERM_HANDLER(CTX$);
     1405       13          */
     1406       14        %INCLUDE GJA_MSG_M;
     1407      253        %INCLUDE GH_IOFNC_E;
     1408      322        %INCLUDE KH$CHN;
     1409      444        %INCLUDE KH$IO;
     1410      691        %INCLUDE KI_CP6;
     1411     1787        %INCLUDE KNH_MACRO_C;
     1412     2070
     1413     2071        /* Parameters */
     1414     2072    1   DCL CTX$ PTR;
     1415     2073
     1416     2074        /* Symrefs */
     1417     2075        %FPT_TERM_ACK (FPTN=GJA_TERM_ACK,STCLASS=SYMREF);
     1418     2097    1   DCL GJA_HAND_HEAD$ PTR SYMREF;
     1419     2098    1   DCL GJA_CHNLOW$ PTR SYMREF;
     1420     2099    1   DCL GJA_CHNHI$ PTR SYMREF;
     1421     2100        %KH$IO (FPTN=GJA_IO,FNC=%GH#IO_OTPCHNCTR,CHNINT=YES,STCLASS=SYMREF);
     1422     2214
     1423     2215        /* Auto */
     1424     2216    1   DCL TCTX$ PTR;
     1425     2217    1   DCL CHN$ PTR;
     1426     2218    1   DCL LVL3$ PTR;
     1427     2219    1   DCL LVL2$ PTR;
     1428     2220
     1429     2221        /* Based */
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:267  
     1430     2222        %GJA$HAND_CTX(STCLASS="BASED(CTX$)");
     1431     2271        %KH$CHN (STCLASS="BASED(CHN$)");
     1432     2395
     1433     2396        /* Entry references */
     1434     2397    1   DCL GJA$Q_MSG ENTRY(6);
     1435     2398    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
     1436     2399    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
     1437     2400
     1438     2401        %EJECT;
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:268  
     1439     2402        /* Initialize and free all channels */
     1440     2403    1        CHN$ = GJA_CHNLOW$;
     1441     2404
     1442     2405    2        DO WHILE (CHN$ <= GJA_CHNHI$);
     1443     2406    2             IF KH$CHN.SYSID = GJA$HAND_CTX.SYSID /* Owns this channel */
     1444     2407    3             THEN DO;
     1445     2408    3                  CALL KHI$IO_OTP(KH$CHN,GJA_IO);
     1446     2409    3                  KH$CHN.SYSID = 0;
     1447     2410    3                  KH$CHN.HAND$ = ADDR(NIL);
     1448     2411    3                  IF KH$CHN.SUB$ ~= ADDR(NIL) THEN
     1449     2412    4                  DO;
     1450     2413    4                       LVL2$ = KH$CHN.SUB$;
     1451     2414    5                       DO WHILE LVL2$ ~= ADDR(NIL);
     1452     2415    5                            LVL2$->KH$CHN.SYSID = 0;
     1453     2416    5                            LVL2$->KH$CHN.HAND$ = ADDR(NIL);
     1454     2417    5                            LVL3$ = LVL2$->KH$CHN.SUB$;
     1455     2418    6                            DO WHILE LVL3$ ~= ADDR(NIL);
     1456     2419    6                                 LVL3$->KH$CHN.SYSID = 0;
     1457     2420    6                                 LVL3$->KH$CHN.HAND$ = ADDR(NIL);
     1458     2421    6                                 LVL3$ = LVL3$->KH$CHN.LNK$;
     1459     2422    6                               END;
     1460     2423    5                            LVL2$ = LVL2$->KH$CHN.LNK$;
     1461     2424    5                          END;
     1462     2425    4                     END;
     1463     2426    3                END;
     1464     2427    2             CHN$ = PINCRW(CHN$,SIZEW(KH$CHN));
     1465     2428    2           END;
     1466     2429
     1467     2430        /* Send terminate ack */
     1468     2431    1        CALL GJA$Q_MSG(CTX$,,,SIZEC(GJA_TERM_ACK),GJA_TERM_ACK,%KN_FCN_TERM_ACK);
     1469     2432
     1470     2433        /* Unchain context */
     1471     2434    1        IF GJA_HAND_HEAD$ = CTX$
     1472     2435    2        THEN DO;
     1473     2436    2             GJA_HAND_HEAD$ = GJA$HAND_CTX.LNK$;
     1474     2437    2           END;
     1475     2438    2        ELSE DO;
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:269  
     1476     2439    2             TCTX$ = GJA_HAND_HEAD$;
     1477     2440    3             DO WHILE (TCTX$ ~= ADDR(NIL));
     1478     2441    3                  IF TCTX$->GJA$HAND_CTX.LNK$ = CTX$
     1479     2442    4                  THEN DO;
     1480     2443    4                       TCTX$->GJA$HAND_CTX.LNK$ = GJA$HAND_CTX.LNK$;
     1481     2444    4                     END;
     1482     2445    3                  TCTX$ = TCTX$->GJA$HAND_CTX.LNK$;
     1483     2446    3                END;
     1484     2447    2           END;
     1485     2448
     1486     2449        /* Release context */
     1487     2450    1        CALL KVB$RLSSYS(SIZEW(GJA$HAND_CTX),CTX$);
     1488     2451
     1489     2452    1        RETURN;
     1490     2453
     1491     2454    1   END GJA$TERM_HANDLER;
     1492     2455        %EOD;

PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:270  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$TERM_HANDLER.

   Procedure GJA$TERM_HANDLER requires 206 words for executable code.
   Procedure GJA$TERM_HANDLER requires 26 words of local(AUTO) storage.

PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:271  

 Object Unit name= GJA$TERM_HANDLER                           File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:58:22.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   206     CE  GJA$TERM_HANDLER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  GJA$TERM_HANDLER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KHI$IO_OTP
         yes           Std       6 GJA$Q_MSG
 yes     yes           Std       2 KVB$RLSSYS
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GJA_TERM_ACK                          GJA_HAND_HEAD$                        GJA_CHNLOW$
     GJA_CHNHI$                            GJA_IO                           r    G$ROS$
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:272  


     1393        1        /*T***********************************************************/
     1394        2        /*T*                                                         */
     1395        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1396        4        /*T*                                                         */
     1397        5        /*T***********************************************************/
     1398        6        GJA$TERM_HANDLER: PROC (CTX$);

      6   0 000000  D380 0000 0000  xent GJA$TERM_HANDLERLNJ,B5   X6A_AUTO_1
          0 000003       001A 0001                       DC       26,1

     1399        7        /*F* NAME:     GJA$TERM_HANDLER
     1400        8
     1401        9             PURPOSE:  This route will perform all the functions needed when
     1402       10                       a handler disconnects from NA.
     1403       11
     1404       12             CALL:     CALL GJA$TERM_HANDLER(CTX$);
     1405       13          */
     1406       14        %INCLUDE GJA_MSG_M;
     1407      253        %INCLUDE GH_IOFNC_E;
     1408      322        %INCLUDE KH$CHN;
     1409      444        %INCLUDE KH$IO;
     1410      691        %INCLUDE KI_CP6;
     1411     1787        %INCLUDE KNH_MACRO_C;
     1412     2070
     1413     2071        /* Parameters */
     1414     2072    1   DCL CTX$ PTR;
     1415     2073
     1416     2074        /* Symrefs */
     1417     2075        %FPT_TERM_ACK (FPTN=GJA_TERM_ACK,STCLASS=SYMREF);
     1418     2097    1   DCL GJA_HAND_HEAD$ PTR SYMREF;
     1419     2098    1   DCL GJA_CHNLOW$ PTR SYMREF;
     1420     2099    1   DCL GJA_CHNHI$ PTR SYMREF;
     1421     2100        %KH$IO (FPTN=GJA_IO,FNC=%GH#IO_OTPCHNCTR,CHNINT=YES,STCLASS=SYMREF);
     1422     2214
     1423     2215        /* Auto */
     1424     2216    1   DCL TCTX$ PTR;
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:273  
     1425     2217    1   DCL CHN$ PTR;
     1426     2218    1   DCL LVL3$ PTR;
     1427     2219    1   DCL LVL2$ PTR;
     1428     2220
     1429     2221        /* Based */
     1430     2222        %GJA$HAND_CTX(STCLASS="BASED(CTX$)");
     1431     2271        %KH$CHN (STCLASS="BASED(CHN$)");
     1432     2395
     1433     2396        /* Entry references */
     1434     2397    1   DCL GJA$Q_MSG ENTRY(6);
     1435     2398    1   DCL KVB$RLSSYS ENTRY(2) ALTRET;
     1436     2399    1   DCL KHI$IO_OTP ENTRY(2) ALTRET;
     1437     2400
     1438     2401        %EJECT;
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:274  
     1439     2402        /* Initialize and free all channels */
     1440     2403    1        CHN$ = GJA_CHNLOW$;

   2403   0 000005  EC80 0000 0000  xsym                 LDB,B6   GJA_CHNLOW$
          0 000008  EFC7 0008                            STB,B6   CHN$,AUTO

     1441     2404
     1442     2405    2        DO WHILE (CHN$ <= GJA_CHNHI$);

   2405   0 00000A  ED80 0000 0000  xsym                 CMB,B6   GJA_CHNHI$
          0 00000D  0301 0061                            BG       s:2431,PREL

     1443     2406    2             IF KH$CHN.SYSID = GJA$HAND_CTX.SYSID /* Owns this channel */

   2406   0 00000F  ECC7 0004                            LDB,B6   @CTX$,AUTO
          0 000011  DC86                                 LDB,B5   ,B6
          0 000012  CCC7 0008                            LDB,B4   CHN$,AUTO
          0 000014  E844 0006                            LDR,R6   6,B4
          0 000016  E945 000E                            CMR,R6   14,B5
          0 000018  0981 004B                            BNE      s:2427,PREL

     1444     2407    3             THEN DO;

     1445     2408    3                  CALL KHI$IO_OTP(KH$CHN,GJA_IO);

   2408   0 00001A  BB80 0000 0000  xsym                 LAB,B3   GJA_IO
          0 00001D  BFC7 0010                            STB,B3   LVL2$+4,AUTO
          0 00001F  CFC7 000E                            STB,B4   LVL2$+2,AUTO
          0 000021  BBC7 000E                            LAB,B3   LVL2$+2,AUTO
          0 000023  CBF0 0200                            LAB,B4   512,IMO
          0 000025  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          0 000028       0001                            DC       s:2409,PREL

     1446     2409    3                  KH$CHN.SYSID = 0;

   2409   0 000029  ECC7 0008                            LDB,B6   CHN$,AUTO
          0 00002B  8746 0006                            CL       6,B6
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:275  

     1447     2410    3                  KH$CHN.HAND$ = ADDR(NIL);

   2410   0 00002D  DB80 0000 0000                       LAB,B5   0
          0 000030  DFC6 001E                            STB,B5   30,B6

     1448     2411    3                  IF KH$CHN.SUB$ ~= ADDR(NIL) THEN

   2411   0 000032  8DC6 001A                            CMN      26,B6
          0 000034  0901 002F                            BE       s:2427,PREL

     1449     2412    4                  DO;

     1450     2413    4                       LVL2$ = KH$CHN.SUB$;

   2413   0 000036  CCC6 001A                            LDB,B4   26,B6
          0 000038  CFC7 000C                            STB,B4   LVL2$,AUTO

     1451     2414    5                       DO WHILE LVL2$ ~= ADDR(NIL);

   2414   0 00003A  0F81 0026                            B        s:2424,PREL

     1452     2415    5                            LVL2$->KH$CHN.SYSID = 0;

   2415   0 00003C  ECC7 000C                            LDB,B6   LVL2$,AUTO
          0 00003E  8746 0006                            CL       6,B6

     1453     2416    5                            LVL2$->KH$CHN.HAND$ = ADDR(NIL);

   2416   0 000040  DB80 0000 0000                       LAB,B5   0
          0 000043  DFC6 001E                            STB,B5   30,B6

     1454     2417    5                            LVL3$ = LVL2$->KH$CHN.SUB$;

   2417   0 000045  CCC6 001A                            LDB,B4   26,B6
          0 000047  CFC7 000A                            STB,B4   LVL3$,AUTO

PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:276  
     1455     2418    6                            DO WHILE LVL3$ ~= ADDR(NIL);

   2418   0 000049  0F81 000E                            B        s:2422,PREL

     1456     2419    6                                 LVL3$->KH$CHN.SYSID = 0;

   2419   0 00004B  ECC7 000A                            LDB,B6   LVL3$,AUTO
          0 00004D  8746 0006                            CL       6,B6

     1457     2420    6                                 LVL3$->KH$CHN.HAND$ = ADDR(NIL);

   2420   0 00004F  DB80 0000 0000                       LAB,B5   0
          0 000052  DFC6 001E                            STB,B5   30,B6

     1458     2421    6                                 LVL3$ = LVL3$->KH$CHN.LNK$;

   2421   0 000054  CCC6 001C                            LDB,B4   28,B6
          0 000056  CFC7 000A                            STB,B4   LVL3$,AUTO

     1459     2422    6                               END;

   2422   0 000058  8DC7 000A                            CMN      LVL3$,AUTO
          0 00005A  09F1                                 BNE      s:2419,SPREL

     1460     2423    5                            LVL2$ = LVL2$->KH$CHN.LNK$;

   2423   0 00005B  ECC7 000C                            LDB,B6   LVL2$,AUTO
          0 00005D  DCC6 001C                            LDB,B5   28,B6
          0 00005F  DFC7 000C                            STB,B5   LVL2$,AUTO

     1461     2424    5                          END;

   2424   0 000061  8DC7 000C                            CMN      LVL2$,AUTO
          0 000063  09D9                                 BNE      s:2415,SPREL

     1462     2425    4                     END;

PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:277  
     1463     2426    3                END;

     1464     2427    2             CHN$ = PINCRW(CHN$,SIZEW(KH$CHN));

   2427   0 000064  ECC7 0008                            LDB,B6   CHN$,AUTO
          0 000066  DBC6 0020                            LAB,B5   32,B6
          0 000068  DFC7 0008                            STB,B5   CHN$,AUTO

     1465     2428    2           END;

   2428   0 00006A  DD80 0000 0000  xsym                 CMB,B5   GJA_CHNHI$
          0 00006D  0381 FFA1                            BLE      s:2406,PREL

     1466     2429
     1467     2430        /* Send terminate ack */
     1468     2431    1        CALL GJA$Q_MSG(CTX$,,,SIZEC(GJA_TERM_ACK),GJA_TERM_ACK,%KN_FCN_TERM_ACK);

   2431   0 00006F  EBF0 0004                            LAB,B6   4,IMO
          0 000071  DBF0 0004                            LAB,B5   4,IMO
          0 000073  DFC7 0018                            STB,B5   LVL2$+12,AUTO
          0 000075  CB80 0000 0000  xsym                 LAB,B4   GJA_TERM_ACK
          0 000078  CFC7 0016                            STB,B4   LVL2$+10,AUTO
          0 00007A  EFC7 0014                            STB,B6   LVL2$+8,AUTO
          0 00007C  BB80 0000 0000                       LAB,B3   0
          0 00007F  BFC7 0012                            STB,B3   LVL2$+6,AUTO
          0 000081  AB80 0000 0000                       LAB,B2   0
          0 000084  AFC7 0010                            STB,B2   LVL2$+4,AUTO
          0 000086  9CC7 0004                            LDB,B1   @CTX$,AUTO
          0 000088  9FC7 000E                            STB,B1   LVL2$+2,AUTO
          0 00008A  BBC7 000E                            LAB,B3   LVL2$+2,AUTO
          0 00008C  CBF0 0600                            LAB,B4   1536,IMO
          0 00008E  E380 0000 0000  xent                 LNJ,B6   GJA$Q_MSG
          0 000091       0001                            DC       s:2434,PREL

     1469     2432
     1470     2433        /* Unchain context */
     1471     2434    1        IF GJA_HAND_HEAD$ = CTX$
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:278  

   2434   0 000092  EC80 0000 0000  xsym                 LDB,B6   GJA_HAND_HEAD$
          0 000095  DCC7 0004                            LDB,B5   @CTX$,AUTO
          0 000097  ED85                                 CMB,B6   ,B5
          0 000098  0981 0009                            BNE      s:2439,PREL

     1472     2435    2        THEN DO;

     1473     2436    2             GJA_HAND_HEAD$ = GJA$HAND_CTX.LNK$;

   2436   0 00009A  CC85                                 LDB,B4   ,B5
          0 00009B  BCC4 0001                            LDB,B3   1,B4
          0 00009D  BF80 0000 0000  xsym                 STB,B3   GJA_HAND_HEAD$

     1474     2437    2           END;

   2437   0 0000A0  0F81 001A                            B        s:2450,PREL

     1475     2438    2        ELSE DO;

     1476     2439    2             TCTX$ = GJA_HAND_HEAD$;

   2439   0 0000A2  EFC7 0006                            STB,B6   TCTX$,AUTO

     1477     2440    3             DO WHILE (TCTX$ ~= ADDR(NIL));

   2440   0 0000A4  0F81 0013                            B        s:2446,PREL

     1478     2441    3                  IF TCTX$->GJA$HAND_CTX.LNK$ = CTX$

   2441   0 0000A6  ECC7 0006                            LDB,B6   TCTX$,AUTO
          0 0000A8  DCC6 0001                            LDB,B5   1,B6
          0 0000AA  CCC7 0004                            LDB,B4   @CTX$,AUTO
          0 0000AC  DD84                                 CMB,B5   ,B4
          0 0000AD  0981 0006                            BNE      s:2445,PREL

     1479     2442    4                  THEN DO;
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:279  

     1480     2443    4                       TCTX$->GJA$HAND_CTX.LNK$ = GJA$HAND_CTX.LNK$;

   2443   0 0000AF  BC84                                 LDB,B3   ,B4
          0 0000B0  ACC3 0001                            LDB,B2   1,B3
          0 0000B2  AFC6 0001                            STB,B2   1,B6

     1481     2444    4                     END;

     1482     2445    3                  TCTX$ = TCTX$->GJA$HAND_CTX.LNK$;

   2445   0 0000B4  DCC6 0001                            LDB,B5   1,B6
          0 0000B6  DFC7 0006                            STB,B5   TCTX$,AUTO

     1483     2446    3                END;

   2446   0 0000B8  8DC7 0006                            CMN      TCTX$,AUTO
          0 0000BA  09EC                                 BNE      s:2441,SPREL

     1484     2447    2           END;

     1485     2448
     1486     2449        /* Release context */
     1487     2450    1        CALL KVB$RLSSYS(SIZEW(GJA$HAND_CTX),CTX$);

   2450   0 0000BB  EBF0 0011                            LAB,B6   17,IMO
          0 0000BD  DCC7 0004                            LDB,B5   @CTX$,AUTO
          0 0000BF  DFC7 0010                            STB,B5   LVL2$+4,AUTO
          0 0000C1  EFC7 000E                            STB,B6   LVL2$+2,AUTO
          0 0000C3  BBC7 000E                            LAB,B3   LVL2$+2,AUTO
          0 0000C5  CBF0 0200                            LAB,B4   512,IMO
          0 0000C7  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          0 0000CA       0001                            DC       s:2452,PREL

     1488     2451
     1489     2452    1        RETURN;

PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:280  
   2452   0 0000CB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1490     2453
     1491     2454    1   END GJA$TERM_HANDLER;
     1492     2455        %EOD;

PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:281  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GJA_MSG_M.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$TERM_HANDLER.
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:282  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CTX$                      8-0-0/w PTR         r     1 CHN$
    *0-0-0/w PTR         r     1 CTX$                       C-0-0/w PTR         r     1 LVL2$
     A-0-0/w PTR         r     1 LVL3$                      6-0-0/w PTR         r     1 TCTX$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GJA_CHNHI$                 0-0-0/w PTR         r     1 GJA_CHNLOW$
     0-0-0/w PTR         r     1 GJA_HAND_HEAD$             0-0-0/w STRC(32)    r     1 GJA_IO
     0-0-0/w STRC(32)    r     1 GJA_TERM_ACK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(272)   r     1 GJA$HAND_CTX               0-0-0/w STRC(512)   r     1 KH$CHN


   Procedure GJA$TERM_HANDLER requires 206 words for executable code.
   Procedure GJA$TERM_HANDLER requires 26 words of local(AUTO) storage.
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:283  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:284  
          MINI XREF LISTING

CHN$
      2217**DCL      2286--IMP-PTR  2403<<ASSIGN   2405>>DOWHILE  2406>>IF       2408>>CALL     2409>>ASSIGN
      2410>>ASSIGN   2411>>IF       2413>>ASSIGN   2427<<ASSIGN   2427>>ASSIGN
CTX$
      2072**DCL         6--PROC     2223--IMP-PTR  2406>>IF       2431<>CALL     2434>>IF       2436>>ASSIGN
      2441>>IF       2443>>ASSIGN   2450<>CALL
GJA$HAND_CTX
      2223**DCL      2450--CALL
GJA$HAND_CTX.LNK$
      2233**DCL      2436>>ASSIGN   2441>>IF       2443<<ASSIGN   2443>>ASSIGN   2445>>ASSIGN
GJA$HAND_CTX.SYSID
      2262**DCL      2406>>IF
GJA$Q_MSG
      2397**DCL-ENT  2431--CALL
GJA_CHNHI$
      2099**DCL      2405>>DOWHILE
GJA_CHNLOW$
      2098**DCL      2403>>ASSIGN
GJA_HAND_HEAD$
      2097**DCL      2434>>IF       2436<<ASSIGN   2439>>ASSIGN
GJA_IO
      2112**DCL      2408<>CALL
GJA_IO.ASNSTT
      2121**DCL      2122--REDEF    2128--REDEF    2133--REDEF    2137--REDEF    2141--REDEF    2145--REDEF
      2152--REDEF    2158--REDEF    2164--REDEF    2169--REDEF    2176--REDEF    2179--REDEF    2183--REDEF
      2190--REDEF    2194--REDEF    2198--REDEF    2202--REDEF    2207--REDEF    2211--REDEF
GJA_TERM_ACK
      2091**DCL      2431--CALL     2431<>CALL
KH$CHN
      2286**DCL      2408<>CALL     2427--ASSIGN
KH$CHN.HAND$
      2393**DCL      2410<<ASSIGN   2416<<ASSIGN   2420<<ASSIGN
PL6.E3A0      #010=GJA$TERM_HANDLER File=GJA$SUBS.:E05TSI                        TUE 07/29/97 21:58 Page:285  
KH$CHN.LNK$
      2393**DCL      2421>>ASSIGN   2423>>ASSIGN
KH$CHN.SUB$
      2393**DCL      2411>>IF       2413>>ASSIGN   2417>>ASSIGN
KH$CHN.SYSID
      2319**DCL      2406>>IF       2409<<ASSIGN   2415<<ASSIGN   2419<<ASSIGN
KH$CHN.TERMID.TERM
      2382**DCL      2391--REDEF
KHI$IO_OTP
      2399**DCL-ENT  2408--CALL
KVB$RLSSYS
      2398**DCL-ENT  2450--CALL
LVL2$
      2219**DCL      2413<<ASSIGN   2414>>DOWHILE  2415>>ASSIGN   2416>>ASSIGN   2417>>ASSIGN   2423<<ASSIGN
      2423>>ASSIGN
LVL3$
      2218**DCL      2417<<ASSIGN   2418>>DOWHILE  2419>>ASSIGN   2420>>ASSIGN   2421<<ASSIGN   2421>>ASSIGN
TCTX$
      2216**DCL      2439<<ASSIGN   2440>>DOWHILE  2441>>IF       2443>>ASSIGN   2445<<ASSIGN   2445>>ASSIGN

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:286  
     1493        1        /*T***********************************************************/
     1494        2        /*T*                                                         */
     1495        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1496        4        /*T*                                                         */
     1497        5        /*T***********************************************************/
     1498        6        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:287  
     1499        7        /*M* GJA$PARSE - Sign on scanner */
     1500        8        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
     1501        9              ECU=3,CSU=3,SDI=3                                           */
     1502       10
     1503       11        GJA$PARSE: PROC (LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTRET;
     1504       12        /*D* NAME:        GJA$PARSE
     1505       13             PURPOSE:     To scan the LOGON for logon ACCT, NAME, PW and PRO
     1506       14         CALL:        CALL GJA$PARSE(LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTRE
                14        T(LBL);
     1507       15             INPUT:       LOGON - The logon message structure in TEXTC format
     1508       16             OUTPUT:      ACCT - Account to log on
     1509       17                          NAME - Name to log on
     1510       18                          PW - Password to log on
     1511       19                          PRO - Profile to use for the device (only if specified)
     1512       20                          ERR - An error condition (%E$SGSYN or %E$BDID) if
     1513       21                                an error occurs.
     1514       22                          HOST - The host name if specified.
     1515       23                          NOSETUP - If nosetup option was specified.
     1516       24                          NOHEADER - If noheader option was specified.
     1517       25             DESCRIPTION: GJA$PARSE scans off ACCT, NAME, PW, NS, PRO, and HOST from
     1518       26                          KL$SGN.LOGON and returns. If any parsing errors occur,
     1519       27                          an error will be returned in ERR and GJA$PARSE will ALTRET.
     1520       28                          The string being scanned for takes on the form below:
     1521       29               [('!'|'/')- STR1] NAME [','[ACCT] [','PW]] ['N/O' 'S/ETUP']
     1522       30               ['PRO/FILE' '=' PRO] ['H/OST' '=' HOST] ['N/O' 'H/EADER']
     1523       31                             where STR1 is any string not containing ' ' or ','
     1524       32                                   ACCT is the account
     1525       33                                   NAME is the name
     1526       34                                   PW is the password
     1527       35                                   PRO is the specified profile name
     1528       36                                   NS means No Setup
     1529       37                                   NH means no header (SYSID msg at logon)
     1530       38                                   HOST is the host system to be connected to
     1531       39                          A set of defaults for unspecified portions is provided:
     1532       40                             ACCT - no default
     1533       41                             NAME - '*'
     1534       42                             PW   - all blanks
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:288  
     1535       43                             NOSETUP - '0'B
     1536       44                             NOHEADER - '0'B
     1537       45                             PRO  - length of zero
     1538       46                             HOST - Current host name
     1539       47        */
     1540       48        /*N* ADDITIONAL_OPTIONS - In order to add additional options the following
     1541       49                  procedure should be followed.
     1542       50                     1) Add the option to this module and put it in the parameter list
     1543       51                  for the call to GJA$PARSE.
     1544       52                     2) In the file KL_MACRO_C add to the KL$PCD structure a field to
     1545       53                  temporarily hold this option.  There are some unused bits after the
     1546       54                  NOSETUP and the NOHEADER options.
     1547       55                     3) In KLH$HLP fix the entry DCL and call for GJA$PARSE and add
     1548       56                  the code to put the new parameter into the PCD structure.  In a
     1549       57                  totally different part of the file is where this new option goes from
     1550       58                  the PCD structure into the JIT.
     1551       59                     4) Fix the following modules as needed since they are the ones
     1552       60                  currently known to call PARSE;
     1553       61                        ALA$LOGON
     1554       62                        KFF$FEBOOT
     1555       63                        KLI$FESET
     1556       64                     minimally these routines need the entry dcls and calling sequences
     1557       65                  updated.
     1558       66        */
     1559       67        %INCLUDE KL_ERRORS_C;
     1560      109        %INCLUDE CP_6;
     1561     5668    1   DCL 1 LOGON,
     1562     5669    1          2 LEN UBIN BYTE UNAL,
     1563     5670    1          2 TXT CHAR(139);
     1564     5671    1   DCL ACCT CHAR(8);
     1565     5672    1   DCL 1 NAME ALIGNED,
     1566     5673    1          2 C UBIN BYTE UNAL,
     1567     5674    1          2 T CHAR(12) UNAL;
     1568     5675    1   DCL PW CHAR(8);
     1569     5676    1   DCL 1 PRO ALIGNED,
     1570     5677    1          2 C UBIN BYTE UNAL,
     1571     5678    1          2 T CHAR(11) UNAL;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:289  
     1572     5679    1   DCL ERR UBIN;
     1573     5680    1   DCL HOST CHAR(8);
     1574     5681    1   DCL NOSETUP BIT (1) ALIGNED;
     1575     5682    1   DCL NOHEADER BIT (1) ALIGNED;
     1576     5683    1   DCL I UBIN WORD;
     1577     5684    1   DCL J UBIN WORD;
     1578     5685    1   DCL LEN UBIN WORD;
     1579     5686    1   DCL TNAME CHAR(16);
     1580     5687    1   DCL XLOGON CHAR (139);
     1581     5688        /*F* NAME: B_XL_UPPER_UR
     1582     5689        PURPOSE: Table to translate to uppercase Unit Record character set.
     1583     5690        DESCRIPTION:
     1584     5691                This table translates all characters to their modulo 128
     1585     5692                equivalents, and changes all unprintable characters to a
     1586     5693                blank, except for TAB, which remains intact.
     1587     5694                Lowercase alphabetic characters are translated to their
     1588     5695                uppercase equivalents.
     1589     5696        */
     1590     5697
     1591     5698    1   DCL B_XL_UPPER_UR( 0:511 ) CHAR(1) STATIC INIT(
     1592     5699    1       ' '*9,BITASC('011'O),' '*22,
     1593     5700    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1594     5701    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
     1595     5702    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1596     5703    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1597     5704    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1598     5705    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
     1599     5706    1       ' '*9,BITASC('011'O),' '*22,
     1600     5707    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1601     5708    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
     1602     5709    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1603     5710    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1604     5711    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1605     5712    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
     1606     5713    1       ' '*9,BITASC('011'O),' '*22,
     1607     5714    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1608     5715    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:290  
     1609     5716    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1610     5717    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1611     5718    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1612     5719    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
     1613     5720    1       ' '*9,BITASC('011'O),' '*22,
     1614     5721    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1615     5722    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
     1616     5723    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1617     5724    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1618     5725    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1619     5726    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ' );
     1620     5727        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:291  
     1621     5728    1   ACCT = ' ';
     1622     5729    1   NAME.C = 1;
     1623     5730    1   NAME.T = '*';
     1624     5731    1   PW = ' ';
     1625     5732    1   PRO.C = 0;
     1626     5733    1   PRO.T = ' ';
     1627     5734    1   HOST = ' ';
     1628     5735    1   NOSETUP = '0'B;
     1629     5736    1   NOHEADER = '0'B;
     1630     5737    1   I = 0;
     1631     5738
     1632     5739        /* should be restricted by maxnmbbyt on read. */
     1633     5740    1   IF (LOGON.LEN = 0 OR LOGON.LEN > LENGTHC(LOGON.TXT)) THEN GOTO BADID;
     1634     5741    1   IF ( (LOGON.LEN = 1) AND
     1635     5742    1        (SUBSTR (LOGON.TXT, 0, 1) = ':') )
     1636     5743    2   THEN DO;             /* Default ':SYS,LJS' for input ':' */
     1637     5744    2      ACCT = ':SYS';
     1638     5745    2      NOSETUP = '0'B;
     1639     5746    2      NOHEADER = '0'B;
     1640     5747    2      NAME.C = 3;
     1641     5748    2      NAME.T = 'LJS';
     1642     5749    2      PW = ' ';
     1643     5750    2      PRO.C = 0;
     1644     5751    2      RETURN;
     1645     5752    2      END;
     1646     5753
     1647     5754    1   IF ((SUBSTR (LOGON.TXT, 0, 1) = '!') OR
     1648     5755    1        (SUBSTR (LOGON.TXT, 0, 1) = '/') )
     1649     5756    1   THEN CALL BCSCAN ALTRET (BADID);  /* Get start of logon */
     1650     5757
     1651     5758    1   IF (SUBSTR (LOGON.TXT, I, 1) = ' ')
     1652     5759    1   THEN CALL NBSCAN ALTRET (BADID); /* Skip excess blanks */
     1653     5760
     1654     5761        /* Now we are at the begining of the account, pick it up. */
     1655     5762
     1656     5763    1   IF (SUBSTR (LOGON.TXT, I, 1) = ',')
     1657     5764    2   THEN DO; /* Account cant start with a ',' */
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:292  
     1658     5765    2      GOTO BADID;
     1659     5766    2      END;
     1660     5767    1   CALL GETNM ALTRET (BADID);  /* That get us the account */
     1661     5768    1   IF (LEN > LENGTHC (ACCT))
     1662     5769    2   THEN DO;
     1663     5770    2      GOTO BADID;
     1664     5771    2      END;
     1665     5772    1   ACCT = TNAME; /* It's good, let's use it. */
     1666     5773
     1667     5774        /* Now get the username */
     1668     5775
     1669     5776    1   IF ((I < LOGON.LEN) AND
     1670     5777    1        (SUBSTR (LOGON.TXT, I, 1) = ',') )
     1671     5778    2   THEN DO; /* Get the uname it's next */
     1672     5779    2      CALL GETNMN ALTRET (BADID);
     1673     5780    2      IF (LEN > LENGTHC (NAME.T))
     1674     5781    3      THEN DO;
     1675     5782    3         GOTO BADID;
     1676     5783    3         END;
     1677     5784    2      IF (LEN > 0)
     1678     5785    3      THEN DO; /* We have a good username, let's use it. */
     1679     5786    3         NAME.C = LEN;
     1680     5787    3         NAME.T = TNAME;
     1681     5788    3         END;
     1682     5789
     1683     5790        /* Now get the password */
     1684     5791
     1685     5792    2      IF ((I < LOGON.LEN) AND
     1686     5793    2           (SUBSTR (LOGON.TXT, I, 1) = ',') )
     1687     5794    3      THEN DO;
     1688     5795    3         CALL GETNMN ALTRET (BADID);
     1689     5796    3         IF (LEN > LENGTHC (PW))
     1690     5797    4         THEN DO;
     1691     5798    4            GOTO BADID;
     1692     5799    4            END;
     1693     5800    3         PW = TNAME;  /* The password checks out, let's use it */
     1694     5801    3         IF ((I < LOGON.LEN) AND
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:293  
     1695     5802    3              (SUBSTR (LOGON.TXT, I, 1) = ',') )
     1696     5803    4         THEN DO; /* The logon string must have blanks after it*/
     1697     5804    4            GOTO BADID;
     1698     5805    4            END;
     1699     5806    3         END;
     1700     5807    2      END; /* Of doing the password stuff. */
     1701     5808
     1702     5809        /* Now lets start scanning for the options... */
     1703     5810
     1704     5811        /* First convert the whole line to uppercase for the parsing. */
     1705     5812    1   CALL XLATE (XLOGON, B_XL_UPPER_UR, LOGON.TXT);
     1706     5813    1   SUBSTR(XLOGON,LOGON.LEN,LENGTHC(LOGON.TXT)-LOGON.LEN) = ' ';
     1707     5814
     1708     5815    1   CALL NBSCAN ALTRET (JUSTRET);
     1709     5816    2   DO WHILE (I < LOGON.LEN);
     1710     5817    3      DO SELECT (SUBSTR (XLOGON, I, 1));
     1711     5818    3         SELECT ('H');
     1712     5819    3         I = I + 1;
     1713     5820    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;
     1714     5821    3         IF (SUBSTR (XLOGON, I, 1) = 'S') THEN I = I + 1;
     1715     5822    3         IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;
     1716     5823    3         IF (I >= LOGON.LEN)
     1717     5824    4         THEN DO;
     1718     5825    4            GOTO BADOPT;
     1719     5826    4            END;
     1720     5827    3         CALL NBSCAN ALTRET (BADOPT);
     1721     5828    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')
     1722     5829    4         THEN DO;
     1723     5830    4            GOTO BADOPT;
     1724     5831    4            END;
     1725     5832    3         CALL GETNMN ALTRET (BADOPT);
     1726     5833    3         IF (LEN > LENGTHC (HOST))
     1727     5834    4         THEN DO;
     1728     5835    4            GOTO BADOPT;
     1729     5836    4            END;
     1730     5837    3         HOST = TNAME; /* We have a valid host, let's use it. */
     1731     5838    3         SELECT ('P');
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:294  
     1732     5839    3         I = I + 1;
     1733     5840    3         IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;
     1734     5841    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;
     1735     5842    3         IF (SUBSTR (XLOGON, I, 1) = 'F') THEN I = I + 1;
     1736     5843    3         IF (SUBSTR (XLOGON, I, 1) = 'I') THEN I = I + 1;
     1737     5844    3         IF (SUBSTR (XLOGON, I, 1) = 'L') THEN I = I + 1;
     1738     5845    3         IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
     1739     5846    3         IF (I >= LOGON.LEN)
     1740     5847    4         THEN DO;
     1741     5848    4            GOTO BADOPT;
     1742     5849    4            END;
     1743     5850    3         CALL NBSCAN ALTRET (BADOPT);
     1744     5851    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')
     1745     5852    4         THEN DO;
     1746     5853    4            GOTO BADOPT;
     1747     5854    4            END;
     1748     5855    3         CALL GETNMN ALTRET (BADOPT);
     1749     5856    3         IF (LEN > LENGTHC (PRO.T))
     1750     5857    4         THEN DO;
     1751     5858    4            GOTO BADOPT;
     1752     5859    4            END;
     1753     5860    3         PRO.C = LEN;
     1754     5861    3         CALL XLATE (SUBSTR (PRO.T, 0, LEN), B_XL_UPPER_UR, SUBSTR (TNAME, 0, LEN) );
     1755     5862    3         SELECT ('N');
     1756     5863    3         I = I + 1;
     1757     5864    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;
     1758     5865    3         IF (SUBSTR (XLOGON, I, 1) = 'S')
     1759     5866    4         THEN DO;
     1760     5867    4            I = I + 1;
     1761     5868    4            IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
     1762     5869    4            IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;
     1763     5870    4            IF (SUBSTR (XLOGON, I, 1) = 'U') THEN I = I + 1;
     1764     5871    4            IF (SUBSTR (XLOGON, I, 1) = 'P') THEN I = I + 1;
     1765     5872    4            IF ( I > LOGON.LEN)
     1766     5873    5            THEN DO;
     1767     5874    5               GOTO BADOPT;
     1768     5875    5               END;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:295  
     1769     5876                          /* If there was a syntax error in spelling the
     1770     5877                             option, it will get caught next time through
     1771     5878                             the loop by the case else.
     1772     5879                          */
     1773     5880    4            NOSETUP = '1'B;
     1774     5881    4            END; /* Setup stuff */
     1775     5882    3         ELSE IF (SUBSTR (XLOGON, I, 1) = 'H')
     1776     5883    4            THEN DO;
     1777     5884    4               I = I + 1;
     1778     5885    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
     1779     5886    4               IF (SUBSTR (XLOGON, I, 1) = 'A') THEN I = I + 1;
     1780     5887    4               IF (SUBSTR (XLOGON, I, 1) = 'D') THEN I = I + 1;
     1781     5888    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
     1782     5889    4               IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;
     1783     5890    4               IF ( I > LOGON.LEN)
     1784     5891    5               THEN DO;
     1785     5892    5                  GOTO BADOPT;
     1786     5893    5                  END;
     1787     5894                          /* If there was a syntax error in spelling the
     1788     5895                             option, it will get caught next time through
     1789     5896                             the loop by the case else.
     1790     5897                          */
     1791     5898    4               NOHEADER = '1'B;
     1792     5899    4               END; /* Header stuff */
     1793     5900    4            ELSE DO;
     1794     5901    4               GOTO BADOPT;  /* Ns is the min abbrev */
     1795     5902    4               END;
     1796     5903    3         SELECT (ELSE);
     1797     5904    3      GOTO BADOPT;
     1798     5905    3         END; /* Of the do select */
     1799     5906    2   CALL NBSCAN ALTRET (JUSTRET);
     1800     5907    2   IF (SUBSTR (XLOGON, I, 1) = ',')
     1801     5908    3   THEN DO;
     1802     5909    3      I = I + 1; /* Scan past the comma */
     1803     5910    3      CALL NBSCAN ALTRET (BADOPT);
     1804     5911    3      END;
     1805     5912    2      END; /* Do while i is less than the string length */
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:296  
     1806     5913
     1807     5914    1   JUSTRET: RETURN;
     1808     5915
     1809     5916    1   BADOPT: ERR = %E$SGSYN;
     1810     5917    1   ALTRETURN;
     1811     5918
     1812     5919    1   BADID: ERR = %E$BDID;
     1813     5920    1   ALTRETURN;
     1814     5921        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:297  
     1815     5922    1   BCSCAN: PROC ALTRET;
     1816     5923        /*I* NAME:        BCSCAN
     1817     5924             PURPOSE:     To set I to next ',' or ' ' or end-of-line
     1818     5925             DESCRIPTION: BCSCAN returns the current or next ' ' or ',' index in I
     1819     5926                          or returns LOGON.LEN if no ',' or ' ' exists
     1820     5927        */
     1821     5928    3   DO WHILE ('1'B);
     1822     5929    3      IF ((LOGON.LEN = I) OR
     1823     5930    3           (SUBSTR (LOGON.TXT, I, 1) = ',') OR
     1824     5931    3           (SUBSTR (LOGON.TXT, I, 1) = ' ') )
     1825     5932    3      THEN RETURN;
     1826     5933    3      ELSE I = I + 1;
     1827     5934    3      END;
     1828     5935    2   END BCSCAN;
     1829     5936        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:298  
     1830     5937    1   NBSCAN: PROC ALTRET;
     1831     5938        /*I* NAME:        NBSCAN
     1832     5939             PURPOSE:     To scan to next non-blank character
     1833     5940             DESCRIPTION: NBSCAN returns in I the current or next non-blank
     1834     5941                          character index or ALTRETURNs if the rest of the
     1835     5942                          string is blank or no string is left.
     1836     5943        */
     1837     5944    3   DO I = I TO LOGON.LEN - 1;
     1838     5945    3      IF (SUBSTR (LOGON.TXT, I, 1) ~= ' ') THEN RETURN;
     1839     5946    3      END;
     1840     5947    2   ALTRETURN;
     1841     5948    2   END NBSCAN;
     1842     5949        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:299  
     1843     5950    1   GETNMN: PROC ALTRET;
     1844     5951        /*I* NAME:        GETNMN
     1845     5952             PURPOSE:     To return the next lexeme in TNAME with length in LEN
     1846     5953             DESCRIPTION: GETNMN skips over the current character, any intervening
     1847     5954                          blanks, and then falls through into GETNM to return
     1848     5955                          the next lexeme in TNAME with length of TNAME in LEN.
     1849     5956                          Trailing blanks will then be stripped off leaving I
     1850     5957                          as index of next non-blank character (or last character
     1851     5958                          of the string). If no non-blank characters are left,
     1852     5959                          GETNMN will ALTRETURN.
     1853     5960        */
     1854     5961    2   I = I + 1;
     1855     5962    2   IF (I >= LOGON.LEN) THEN ALTRETURN;
     1856     5963    2   CALL NBSCAN
     1857     5964    3   WHENALTRETURN DO;
     1858     5965    3      ALTRETURN;
     1859     5966    3      END;
     1860     5967
     1861     5968    2   GETNM: ENTRY ALTRET;
     1862     5969        /*I* NAME:        GETNM
     1863     5970             DESCRIPTION: GETNM scans from the current I location looking for
     1864     5971                          a ' ', ',' or end-of-string. Everything in between is
     1865     5972                          returned in TNAME with length in LEN. LEN may be returned
     1866     5973                          as 0.
     1867     5974        */
     1868     5975    2   J = I;
     1869     5976    2   CALL BCSCAN
     1870     5977    3   WHENALTRETURN DO;
     1871     5978    3      END;
     1872     5979    2   LEN = I - J;
     1873     5980    2   TNAME = SUBSTR (LOGON.TXT, J, LEN);
     1874     5981    2   IF ((I < LOGON.LEN) AND
     1875     5982    2        (SUBSTR(LOGON.TXT,I,1) = ' ') )
     1876     5983    3   THEN DO;  /* Position i on the next nonblank */
     1877     5984    3      CALL NBSCAN
     1878     5985    4      WHENRETURN DO;
     1879     5986    4         END;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:300  
     1880     5987    4      WHENALTRETURN DO;
     1881     5988    4         END;
     1882     5989    3      END;
     1883     5990    2   RETURN;
     1884     5991    2   END GETNMN;
     1885     5992    1   END GJA$PARSE;

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:301  
--  Include file information  --

   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$PARSE.

   Procedure GJA$PARSE requires 1162 words for executable code.
   Procedure GJA$PARSE requires 114 words of local(AUTO) storage.

    No errors detected in file GJA$SUBS.:E05TSI    .

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:302  

 Object Unit name= GJA$PARSE                                  File name= GJA$SUBS.:E05TOU
 UTS= JUL 29 '97 21:58:34.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   256    100  GJA$PARSE
    2  RoData even  UTS      4      4  GJA$PARSE
    3   Proc  even  none  1162    48A  GJA$PARSE
    4  RoData even  none     1      1  GJA$PARSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        9  GJA$PARSE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET
                       nStd      0 X6C_ALR
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    G$ROS$
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:303  


     1493        1        /*T***********************************************************/
     1494        2        /*T*                                                         */
     1495        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1496        4        /*T*                                                         */
     1497        5        /*T***********************************************************/
     1498        6        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:304  
     1499        7        /*M* GJA$PARSE - Sign on scanner */
     1500        8        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
     1501        9              ECU=3,CSU=3,SDI=3                                           */
     1502       10
     1503       11        GJA$PARSE: PROC (LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTRET;

     11   3 000000  D380 0000 0000  xent GJA$PARSE       LNJ,B5   X6A_AUTO_N
          3 000003       0072 0009                       DC       114,9

     1504       12        /*D* NAME:        GJA$PARSE
     1505       13             PURPOSE:     To scan the LOGON for logon ACCT, NAME, PW and PRO
     1506       14         CALL:       CALL GJA$PARSE(LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTRE
                14        T(LBL);
     1507       15             INPUT:       LOGON - The logon message structure in TEXTC format
     1508       16             OUTPUT:      ACCT - Account to log on
     1509       17                          NAME - Name to log on
     1510       18                          PW - Password to log on
     1511       19                          PRO - Profile to use for the device (only if specified)
     1512       20                          ERR - An error condition (%E$SGSYN or %E$BDID) if
     1513       21                                an error occurs.
     1514       22                          HOST - The host name if specified.
     1515       23                          NOSETUP - If nosetup option was specified.
     1516       24                          NOHEADER - If noheader option was specified.
     1517       25             DESCRIPTION: GJA$PARSE scans off ACCT, NAME, PW, NS, PRO, and HOST from
     1518       26                          KL$SGN.LOGON and returns. If any parsing errors occur,
     1519       27                          an error will be returned in ERR and GJA$PARSE will ALTRET.
     1520       28                          The string being scanned for takes on the form below:
     1521       29               [('!'|'/')- STR1] NAME [','[ACCT] [','PW]] ['N/O' 'S/ETUP']
     1522       30               ['PRO/FILE' '=' PRO] ['H/OST' '=' HOST] ['N/O' 'H/EADER']
     1523       31                             where STR1 is any string not containing ' ' or ','
     1524       32                                   ACCT is the account
     1525       33                                   NAME is the name
     1526       34                                   PW is the password
     1527       35                                   PRO is the specified profile name
     1528       36                                   NS means No Setup
     1529       37                                   NH means no header (SYSID msg at logon)
     1530       38                                   HOST is the host system to be connected to
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:305  
     1531       39                          A set of defaults for unspecified portions is provided:
     1532       40                             ACCT - no default
     1533       41                             NAME - '*'
     1534       42                             PW   - all blanks
     1535       43                             NOSETUP - '0'B
     1536       44                             NOHEADER - '0'B
     1537       45                             PRO  - length of zero
     1538       46                             HOST - Current host name
     1539       47        */
     1540       48        /*N* ADDITIONAL_OPTIONS - In order to add additional options the following
     1541       49                  procedure should be followed.
     1542       50                     1) Add the option to this module and put it in the parameter list
     1543       51                  for the call to GJA$PARSE.
     1544       52                     2) In the file KL_MACRO_C add to the KL$PCD structure a field to
     1545       53                  temporarily hold this option.  There are some unused bits after the
     1546       54                  NOSETUP and the NOHEADER options.
     1547       55                     3) In KLH$HLP fix the entry DCL and call for GJA$PARSE and add
     1548       56                  the code to put the new parameter into the PCD structure.  In a
     1549       57                  totally different part of the file is where this new option goes from
     1550       58                  the PCD structure into the JIT.
     1551       59                     4) Fix the following modules as needed since they are the ones
     1552       60                  currently known to call PARSE;
     1553       61                        ALA$LOGON
     1554       62                        KFF$FEBOOT
     1555       63                        KLI$FESET
     1556       64                     minimally these routines need the entry dcls and calling sequences
     1557       65                  updated.
     1558       66        */
     1559       67        %INCLUDE KL_ERRORS_C;
     1560      109        %INCLUDE CP_6;
     1561     5668    1   DCL 1 LOGON,
     1562     5669    1          2 LEN UBIN BYTE UNAL,
     1563     5670    1          2 TXT CHAR(139);
     1564     5671    1   DCL ACCT CHAR(8);
     1565     5672    1   DCL 1 NAME ALIGNED,
     1566     5673    1          2 C UBIN BYTE UNAL,
     1567     5674    1          2 T CHAR(12) UNAL;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:306  
     1568     5675    1   DCL PW CHAR(8);
     1569     5676    1   DCL 1 PRO ALIGNED,
     1570     5677    1          2 C UBIN BYTE UNAL,
     1571     5678    1          2 T CHAR(11) UNAL;
     1572     5679    1   DCL ERR UBIN;
     1573     5680    1   DCL HOST CHAR(8);
     1574     5681    1   DCL NOSETUP BIT (1) ALIGNED;
     1575     5682    1   DCL NOHEADER BIT (1) ALIGNED;
     1576     5683    1   DCL I UBIN WORD;
     1577     5684    1   DCL J UBIN WORD;
     1578     5685    1   DCL LEN UBIN WORD;
     1579     5686    1   DCL TNAME CHAR(16);
     1580     5687    1   DCL XLOGON CHAR (139);
     1581     5688        /*F* NAME: B_XL_UPPER_UR
     1582     5689        PURPOSE: Table to translate to uppercase Unit Record character set.
     1583     5690        DESCRIPTION:
     1584     5691                This table translates all characters to their modulo 128
     1585     5692                equivalents, and changes all unprintable characters to a
     1586     5693                blank, except for TAB, which remains intact.
     1587     5694                Lowercase alphabetic characters are translated to their
     1588     5695                uppercase equivalents.
     1589     5696        */
     1590     5697
     1591     5698    1   DCL B_XL_UPPER_UR( 0:511 ) CHAR(1) STATIC INIT(
     1592     5699    1       ' '*9,BITASC('011'O),' '*22,
     1593     5700    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1594     5701    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
     1595     5702    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1596     5703    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1597     5704    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1598     5705    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
     1599     5706    1       ' '*9,BITASC('011'O),' '*22,
     1600     5707    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1601     5708    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
     1602     5709    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1603     5710    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1604     5711    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:307  
     1605     5712    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
     1606     5713    1       ' '*9,BITASC('011'O),' '*22,
     1607     5714    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1608     5715    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
     1609     5716    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1610     5717    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1611     5718    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1612     5719    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ',
     1613     5720    1       ' '*9,BITASC('011'O),' '*22,
     1614     5721    1       ' ','!','"','#','$','%','&','''','(',')','*','+',',','-','.','/',
     1615     5722    1       '0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?',
     1616     5723    1       '@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1617     5724    1       'P','Q','R','S','T','U','V','W','X','Y','Z','[','\',']','^','_',
     1618     5725    1       '`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O',
     1619     5726    1       'P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',' ' );
     1620     5727        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:308  
     1621     5728    1   ACCT = ' ';

   5728   3 000005  8CC7 0006                            LDI      @ACCT,AUTO
          3 000007  B856                                 LDR,R3   R6
          3 000008  E570 7FFF                            AND,R6   32767,IMO
          3 00000A  8D47 006C                            SDI      XLOGON+75,AUTO
          3 00000C  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 00000E  304F                                 SOR,R3   15
          3 00000F  0021                                 ALR      ;
          3 000010       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          3 000012       4836 0000                                ALPHANUM(0,B6,R3,,8,FILL)

     1622     5729    1   NAME.C = 1;

   5729   3 000014  6C01                                 LDV,R6   1
          3 000015  437F                                 CSYNC    s:5729,SPREL
          3 000016  DCC7 0008                            LDB,B5   @NAME,AUTO
          3 000018  E785                                 STH,R6   ,B5

     1623     5730    1   NAME.T = '*';

   5730   3 000019  0021                                 ALR      ;
          3 00001A       4178 2A00                                ALPHANUM('2A00'X,IMO,,1),;
          3 00001C       CC05 0000                                ALPHANUM(0,B5,1,12,FILL)

     1624     5731    1   PW = ' ';

   5731   3 00001E  437F                                 CSYNC    s:5730+4,SPREL
          3 00001F  8CC7 000A                            LDI      @PW,AUTO
          3 000021  B856                                 LDR,R3   R6
          3 000022  E570 7FFF                            AND,R6   32767,IMO
          3 000024  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000026  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000028  304F                                 SOR,R3   15
          3 000029  0021                                 ALR      ;
          3 00002A       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          3 00002C       4836 0000                                ALPHANUM(0,B6,R3,,8,FILL)
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:309  

     1625     5732    1   PRO.C = 0;

   5732   3 00002E  437F                                 CSYNC    s:5731+15,SPREL
          3 00002F  CCC7 000C                            LDB,B4   @PRO,AUTO
          3 000031  8784                                 CLH      ,B4

     1626     5733    1   PRO.T = ' ';

   5733   3 000032  0021                                 ALR      ;
          3 000033       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          3 000035       CB04 0000                                ALPHANUM(0,B4,1,11,FILL)

     1627     5734    1   HOST = ' ';

   5734   3 000037  437F                                 CSYNC    s:5733+4,SPREL
          3 000038  8CC7 0010                            LDI      @HOST,AUTO
          3 00003A  B856                                 LDR,R3   R6
          3 00003B  E570 7FFF                            AND,R6   32767,IMO
          3 00003D  8D47 006C                            SDI      XLOGON+75,AUTO
          3 00003F  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000041  304F                                 SOR,R3   15
          3 000042  0021                                 ALR      ;
          3 000043       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          3 000045       4836 0000                                ALPHANUM(0,B6,R3,,8,FILL)

     1628     5735    1   NOSETUP = '0'B;

   5735   3 000047  437F                                 CSYNC    s:5734+15,SPREL
          3 000048  BCC7 0012                            LDB,B3   @NOSETUP,AUTO
          3 00004A  8703                                 CL       ,B3

     1629     5736    1   NOHEADER = '0'B;

   5736   3 00004B  ACC7 0014                            LDB,B2   @NOHEADER,AUTO
          3 00004D  8702                                 CL       ,B2

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:310  
     1630     5737    1   I = 0;

   5737   3 00004E  8747 0016                            CL       I,AUTO

     1631     5738
     1632     5739        /* should be restricted by maxnmbbyt on read. */
     1633     5740    1   IF (LOGON.LEN = 0 OR LOGON.LEN > LENGTHC(LOGON.TXT)) THEN GOTO BADID;

   5740   3 000050  8CC7 0004                            LDI      @LOGON,AUTO
          3 000052  B856                                 LDR,R3   R6
          3 000053  E570 7FFF                            AND,R6   32767,IMO
          3 000055  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000057  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000059  304F                                 SOR,R3   15
          3 00005A  D2B6                                 LLH,R5   ,B6,R3
          3 00005B  5901 034B                            BEZ,R5   s:5919,PREL
          3 00005D  8CC7 0004                            LDI      @LOGON,AUTO
          3 00005F  B856                                 LDR,R3   R6
          3 000060  E570 7FFF                            AND,R6   32767,IMO
          3 000062  8D47 006E                            SDI      XLOGON+77,AUTO
          3 000064  9CC7 006E                            LDB,B1   XLOGON+77,AUTO
          3 000066  304F                                 SOR,R3   15
          3 000067  D2B1                                 LLH,R5   ,B1,R3
          3 000068  D970 008B                            CMR,R5   139,IMO
          3 00006A  0A01 033C                            BAG      s:5919,PREL

     1634     5741    1   IF ( (LOGON.LEN = 1) AND

   5741   3 00006C  8CC7 0004                            LDI      @LOGON,AUTO
          3 00006E  B856                                 LDR,R3   R6
          3 00006F  E570 7FFF                            AND,R6   32767,IMO
          3 000071  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000073  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000075  304F                                 SOR,R3   15
          3 000076  D2B6                                 LLH,R5   ,B6,R3
          3 000077  5D01                                 CMV,R5   1
          3 000078  0981 0046                            BNE      s:5754,PREL
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:311  
          3 00007A  8CC7 0004                            LDI      @LOGON,AUTO
          3 00007C  B856                                 LDR,R3   R6
          3 00007D  E570 7FFF                            AND,R6   32767,IMO
          3 00007F  8D47 006E                            SDI      XLOGON+77,AUTO
          3 000081  9CC7 006E                            LDB,B1   XLOGON+77,AUTO
          3 000083  304F                                 SOR,R3   15
          3 000084  3E01                                 ADV,R3   1
          3 000085  D0B1                                 LDH,R5   ,B1,R3
          3 000086  5D3A                                 CMV,R5   58
          3 000087  0981 0037                            BNE      s:5754,PREL

     1635     5742    1        (SUBSTR (LOGON.TXT, 0, 1) = ':') )
     1636     5743    2   THEN DO;             /* Default ':SYS,LJS' for input ':' */

     1637     5744    2      ACCT = ':SYS';

   5744   3 000089  8CC7 0006                            LDI      @ACCT,AUTO
          3 00008B  B856                                 LDR,R3   R6
          3 00008C  E570 7FFF                            AND,R6   32767,IMO
          3 00008E  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000090  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000092  304F                                 SOR,R3   15
          3 000093  DB80 0000 0000  02                   LAB,B5   0
          3 000096  0021                                 ALR      ;
          3 000097       4405 0000                                ALPHANUM(0,B5,,4),;
          3 000099       4836 0000                                ALPHANUM(0,B6,R3,,8,FILL)

     1638     5745    2      NOSETUP = '0'B;

   5745   3 00009B  437F                                 CSYNC    s:5744+17,SPREL
          3 00009C  8703                                 CL       ,B3

     1639     5746    2      NOHEADER = '0'B;

   5746   3 00009D  8702                                 CL       ,B2

     1640     5747    2      NAME.C = 3;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:312  

   5747   3 00009E  6C03                                 LDV,R6   3
          3 00009F  DCC7 0008                            LDB,B5   @NAME,AUTO
          3 0000A1  E785                                 STH,R6   ,B5

     1641     5748    2      NAME.T = 'LJS';

   5748   3 0000A2  EB80 0000 0000  02                   LAB,B6   0
          3 0000A5  0021                                 ALR      ;
          3 0000A6       4306 0002                                ALPHANUM(2,B6,,3),;
          3 0000A8       CC05 0000                                ALPHANUM(0,B5,1,12,FILL)

     1642     5749    2      PW = ' ';

   5749   3 0000AA  437F                                 CSYNC    s:5748+7,SPREL
          3 0000AB  8CC7 000A                            LDI      @PW,AUTO
          3 0000AD  B856                                 LDR,R3   R6
          3 0000AE  E570 7FFF                            AND,R6   32767,IMO
          3 0000B0  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0000B2  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0000B4  304F                                 SOR,R3   15
          3 0000B5  0021                                 ALR      ;
          3 0000B6       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          3 0000B8       4836 0000                                ALPHANUM(0,B6,R3,,8,FILL)

     1643     5750    2      PRO.C = 0;

   5750   3 0000BA  437F                                 CSYNC    s:5749+15,SPREL
          3 0000BB  8784                                 CLH      ,B4

     1644     5751    2      RETURN;

   5751   3 0000BC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1645     5752    2      END;
     1646     5753
     1647     5754    1   IF ((SUBSTR (LOGON.TXT, 0, 1) = '!') OR
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:313  

   5754   3 0000BF  8CC7 0004                            LDI      @LOGON,AUTO
          3 0000C1  B856                                 LDR,R3   R6
          3 0000C2  E570 7FFF                            AND,R6   32767,IMO
          3 0000C4  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0000C6  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0000C8  304F                                 SOR,R3   15
          3 0000C9  3E01                                 ADV,R3   1
          3 0000CA  D0B6                                 LDH,R5   ,B6,R3
          3 0000CB  5D21                                 CMV,R5   33
          3 0000CC  0901 0010                            BE       s:5756,PREL
          3 0000CE  8CC7 0004                            LDI      @LOGON,AUTO
          3 0000D0  B856                                 LDR,R3   R6
          3 0000D1  E570 7FFF                            AND,R6   32767,IMO
          3 0000D3  8D47 006E                            SDI      XLOGON+77,AUTO
          3 0000D5  9CC7 006E                            LDB,B1   XLOGON+77,AUTO
          3 0000D7  304F                                 SOR,R3   15
          3 0000D8  3E01                                 ADV,R3   1
          3 0000D9  D0B1                                 LDH,R5   ,B1,R3
          3 0000DA  5D2F                                 CMV,R5   47
          3 0000DB  0981 0004                            BNE      s:5758,PREL

     1648     5755    1        (SUBSTR (LOGON.TXT, 0, 1) = '/') )
     1649     5756    1   THEN CALL BCSCAN ALTRET (BADID);  /* Get start of logon */

   5756   3 0000DD  E3C0 02D1                            LNJ,B6   s:0,PREL
          3 0000DF       02C8                            DC       s:5919,PREL

     1650     5757
     1651     5758    1   IF (SUBSTR (LOGON.TXT, I, 1) = ' ')

   5758   3 0000E0  8CC7 0004                            LDI      @LOGON,AUTO
          3 0000E2  B856                                 LDR,R3   R6
          3 0000E3  E570 7FFF                            AND,R6   32767,IMO
          3 0000E5  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0000E7  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0000E9  304F                                 SOR,R3   15
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:314  
          3 0000EA  BA47 0016                            ADD,R3   I,AUTO
          3 0000EC  3E01                                 ADV,R3   1
          3 0000ED  D0B6                                 LDH,R5   ,B6,R3
          3 0000EE  5D20                                 CMV,R5   32
          3 0000EF  0981 0004                            BNE      s:5763,PREL

     1652     5759    1   THEN CALL NBSCAN ALTRET (BADID); /* Skip excess blanks */

   5759   3 0000F1  E3C0 02F7                            LNJ,B6   s:0,PREL
          3 0000F3       02B4                            DC       s:5919,PREL

     1653     5760
     1654     5761        /* Now we are at the begining of the account, pick it up. */
     1655     5762
     1656     5763    1   IF (SUBSTR (LOGON.TXT, I, 1) = ',')

   5763   3 0000F4  8CC7 0004                            LDI      @LOGON,AUTO
          3 0000F6  B856                                 LDR,R3   R6
          3 0000F7  E570 7FFF                            AND,R6   32767,IMO
          3 0000F9  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0000FB  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0000FD  304F                                 SOR,R3   15
          3 0000FE  BA47 0016                            ADD,R3   I,AUTO
          3 000100  3E01                                 ADV,R3   1
          3 000101  D0B6                                 LDH,R5   ,B6,R3
          3 000102  5D2C                                 CMV,R5   44
          3 000103  0981 0003                            BNE      s:5767,PREL

     1657     5764    2   THEN DO; /* Account cant start with a ',' */

     1658     5765    2      GOTO BADID;

   5765   3 000105  0F81 02A1                            B        s:5919,PREL

     1659     5766    2      END;
     1660     5767    1   CALL GETNM ALTRET (BADID);  /* That get us the account */

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:315  
   5767   3 000107  E3C0 0334                            LNJ,B6   s:0,PREL
          3 000109       029E                            DC       s:5919,PREL

     1661     5768    1   IF (LEN > LENGTHC (ACCT))

   5768   3 00010A  E847 0018                            LDR,R6   LEN,AUTO
          3 00010C  6D08                                 CMV,R6   8
          3 00010D  0381 0003                            BLE      s:5772,PREL

     1662     5769    2   THEN DO;

     1663     5770    2      GOTO BADID;

   5770   3 00010F  0F81 0297                            B        s:5919,PREL

     1664     5771    2      END;
     1665     5772    1   ACCT = TNAME; /* It's good, let's use it. */

   5772   3 000111  8CC7 0006                            LDI      @ACCT,AUTO
          3 000113  B856                                 LDR,R3   R6
          3 000114  E570 7FFF                            AND,R6   32767,IMO
          3 000116  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000118  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 00011A  304F                                 SOR,R3   15
          3 00011B  AB87                                 LAB,B2   ,AUTO
          3 00011C  2C32                                 LDV,R2   50
          3 00011D  6C08                                 LDV,R6   8
          3 00011E  BB86                                 LAB,B3   ,B6
          3 00011F  0008                                 MMM

     1666     5773
     1667     5774        /* Now get the username */
     1668     5775
     1669     5776    1   IF ((I < LOGON.LEN) AND

   5776   3 000120  8CC7 0004                            LDI      @LOGON,AUTO
          3 000122  B856                                 LDR,R3   R6
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:316  
          3 000123  E570 7FFF                            AND,R6   32767,IMO
          3 000125  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000127  DCC7 006C                            LDB,B5   XLOGON+75,AUTO
          3 000129  304F                                 SOR,R3   15
          3 00012A  D2B5                                 LLH,R5   ,B5,R3
          3 00012B  D947 0016                            CMR,R5   I,AUTO
          3 00012D  0381 0082                            BLE      s:5812,PREL
          3 00012F  8CC7 0004                            LDI      @LOGON,AUTO
          3 000131  B856                                 LDR,R3   R6
          3 000132  E570 7FFF                            AND,R6   32767,IMO
          3 000134  8D47 006E                            SDI      XLOGON+77,AUTO
          3 000136  CCC7 006E                            LDB,B4   XLOGON+77,AUTO
          3 000138  304F                                 SOR,R3   15
          3 000139  BA47 0016                            ADD,R3   I,AUTO
          3 00013B  3E01                                 ADV,R3   1
          3 00013C  D0B4                                 LDH,R5   ,B4,R3
          3 00013D  5D2C                                 CMV,R5   44
          3 00013E  0981 0071                            BNE      s:5812,PREL

     1670     5777    1        (SUBSTR (LOGON.TXT, I, 1) = ',') )
     1671     5778    2   THEN DO; /* Get the uname it's next */

     1672     5779    2      CALL GETNMN ALTRET (BADID);

   5779   3 000140  E3C0 02D9                            LNJ,B6   s:0,PREL
          3 000142       0265                            DC       s:5919,PREL

     1673     5780    2      IF (LEN > LENGTHC (NAME.T))

   5780   3 000143  E847 0018                            LDR,R6   LEN,AUTO
          3 000145  6D0C                                 CMV,R6   12
          3 000146  0381 0003                            BLE      s:5784,PREL

     1674     5781    3      THEN DO;

     1675     5782    3         GOTO BADID;

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:317  
   5782   3 000148  0F81 025E                            B        s:5919,PREL

     1676     5783    3         END;
     1677     5784    2      IF (LEN > 0)

   5784   3 00014A  6901 000A                            BEZ,R6   s:5792,PREL

     1678     5785    3      THEN DO; /* We have a good username, let's use it. */

     1679     5786    3         NAME.C = LEN;

   5786   3 00014C  ECC7 0008                            LDB,B6   @NAME,AUTO
          3 00014E  E786                                 STH,R6   ,B6

     1680     5787    3         NAME.T = TNAME;

   5787   3 00014F  AB87                                 LAB,B2   ,AUTO
          3 000150  2C32                                 LDV,R2   50
          3 000151  6C0C                                 LDV,R6   12
          3 000152  BB86                                 LAB,B3   ,B6
          3 000153  3C01                                 LDV,R3   1
          3 000154  0008                                 MMM

     1681     5788    3         END;

     1682     5789
     1683     5790        /* Now get the password */
     1684     5791
     1685     5792    2      IF ((I < LOGON.LEN) AND

   5792   3 000155  8CC7 0004                            LDI      @LOGON,AUTO
          3 000157  B856                                 LDR,R3   R6
          3 000158  E570 7FFF                            AND,R6   32767,IMO
          3 00015A  8D47 006C                            SDI      XLOGON+75,AUTO
          3 00015C  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 00015E  304F                                 SOR,R3   15
          3 00015F  D2B6                                 LLH,R5   ,B6,R3
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:318  
          3 000160  D947 0016                            CMR,R5   I,AUTO
          3 000162  0381 004D                            BLE      s:5812,PREL
          3 000164  8CC7 0004                            LDI      @LOGON,AUTO
          3 000166  B856                                 LDR,R3   R6
          3 000167  E570 7FFF                            AND,R6   32767,IMO
          3 000169  8D47 006E                            SDI      XLOGON+77,AUTO
          3 00016B  DCC7 006E                            LDB,B5   XLOGON+77,AUTO
          3 00016D  304F                                 SOR,R3   15
          3 00016E  BA47 0016                            ADD,R3   I,AUTO
          3 000170  3E01                                 ADV,R3   1
          3 000171  D0B5                                 LDH,R5   ,B5,R3
          3 000172  5D2C                                 CMV,R5   44
          3 000173  0981 003C                            BNE      s:5812,PREL

     1686     5793    2           (SUBSTR (LOGON.TXT, I, 1) = ',') )
     1687     5794    3      THEN DO;

     1688     5795    3         CALL GETNMN ALTRET (BADID);

   5795   3 000175  E3C0 02A4                            LNJ,B6   s:0,PREL
          3 000177       0230                            DC       s:5919,PREL

     1689     5796    3         IF (LEN > LENGTHC (PW))

   5796   3 000178  E847 0018                            LDR,R6   LEN,AUTO
          3 00017A  6D08                                 CMV,R6   8
          3 00017B  0381 0003                            BLE      s:5800,PREL

     1690     5797    4         THEN DO;

     1691     5798    4            GOTO BADID;

   5798   3 00017D  0F81 0229                            B        s:5919,PREL

     1692     5799    4            END;
     1693     5800    3         PW = TNAME;  /* The password checks out, let's use it */

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:319  
   5800   3 00017F  8CC7 000A                            LDI      @PW,AUTO
          3 000181  B856                                 LDR,R3   R6
          3 000182  E570 7FFF                            AND,R6   32767,IMO
          3 000184  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000186  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000188  304F                                 SOR,R3   15
          3 000189  AB87                                 LAB,B2   ,AUTO
          3 00018A  2C32                                 LDV,R2   50
          3 00018B  6C08                                 LDV,R6   8
          3 00018C  BB86                                 LAB,B3   ,B6
          3 00018D  0008                                 MMM

     1694     5801    3         IF ((I < LOGON.LEN) AND

   5801   3 00018E  8CC7 0004                            LDI      @LOGON,AUTO
          3 000190  B856                                 LDR,R3   R6
          3 000191  E570 7FFF                            AND,R6   32767,IMO
          3 000193  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000195  DCC7 006C                            LDB,B5   XLOGON+75,AUTO
          3 000197  304F                                 SOR,R3   15
          3 000198  D2B5                                 LLH,R5   ,B5,R3
          3 000199  D947 0016                            CMR,R5   I,AUTO
          3 00019B  0381 0014                            BLE      s:5812,PREL
          3 00019D  8CC7 0004                            LDI      @LOGON,AUTO
          3 00019F  B856                                 LDR,R3   R6
          3 0001A0  E570 7FFF                            AND,R6   32767,IMO
          3 0001A2  8D47 006E                            SDI      XLOGON+77,AUTO
          3 0001A4  CCC7 006E                            LDB,B4   XLOGON+77,AUTO
          3 0001A6  304F                                 SOR,R3   15
          3 0001A7  BA47 0016                            ADD,R3   I,AUTO
          3 0001A9  3E01                                 ADV,R3   1
          3 0001AA  D0B4                                 LDH,R5   ,B4,R3
          3 0001AB  5D2C                                 CMV,R5   44
          3 0001AC  0981 0003                            BNE      s:5812,PREL

     1695     5802    3              (SUBSTR (LOGON.TXT, I, 1) = ',') )
     1696     5803    4         THEN DO; /* The logon string must have blanks after it*/
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:320  

     1697     5804    4            GOTO BADID;

   5804   3 0001AE  0F81 01F8                            B        s:5919,PREL

     1698     5805    4            END;
     1699     5806    3         END;
     1700     5807    2      END; /* Of doing the password stuff. */
     1701     5808
     1702     5809        /* Now lets start scanning for the options... */
     1703     5810
     1704     5811        /* First convert the whole line to uppercase for the parsing. */
     1705     5812    1   CALL XLATE (XLOGON, B_XL_UPPER_UR, LOGON.TXT);

   5812   3 0001B0  8CC7 0004                            LDI      @LOGON,AUTO
          3 0001B2  B856                                 LDR,R3   R6
          3 0001B3  E570 7FFF                            AND,R6   32767,IMO
          3 0001B5  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0001B7  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0001B9  304F                                 SOR,R3   15
          3 0001BA  C870 008B                            LDR,R4   139,IMO
          3 0001BC  D870 008B                            LDR,R5   139,IMO
          3 0001BE  DB80 0000 0000  01                   LAB,B5   B_XL_UPPER_UR
          3 0001C1  E870 00FF                            LDR,R6   255,IMO
          3 0001C3  0023                                 MAT      ;
          3 0001C4       C036 0000                                ALPHANUM(0,B6,R3,1,R4),;
          3 0001C6       4007 0021                                ALPHANUM(XLOGON,AUTO,,R5,FILL),;
          3 0001C8       4005 0000                                ALPHANUM(0,B5,,256)

     1706     5813    1   SUBSTR(XLOGON,LOGON.LEN,LENGTHC(LOGON.TXT)-LOGON.LEN) = ' ';

   5813   3 0001CA  8CC7 0004                            LDI      @LOGON,AUTO
          3 0001CC  B856                                 LDR,R3   R6
          3 0001CD  E570 7FFF                            AND,R6   32767,IMO
          3 0001CF  437F                                 CSYNC    s:5813+4,SPREL
          3 0001D0  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0001D2  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:321  
          3 0001D4  304F                                 SOR,R3   15
          3 0001D5  8CC7 0004                            LDI      @LOGON,AUTO
          3 0001D7  A856                                 LDR,R2   R6
          3 0001D8  E570 7FFF                            AND,R6   32767,IMO
          3 0001DA  8D47 006E                            SDI      XLOGON+77,AUTO
          3 0001DC  DCC7 006E                            LDB,B5   XLOGON+77,AUTO
          3 0001DE  204F                                 SOR,R2   15
          3 0001DF  92B6                                 LLH,R1   ,B6,R3
          3 0001E0  B2A5                                 LLH,R3   ,B5,R2
          3 0001E1  9F47 0070                            STR,R1   XLOGON+79,AUTO
          3 0001E3  BF47 0071                            STR,R3   XLOGON+80,AUTO
          3 0001E5  AB80 0000 0000  04                   LAB,B2   0
          3 0001E8  2C00                                 LDV,R2   0
          3 0001E9  6C01                                 LDV,R6   1
          3 0001EA  BB87                                 LAB,B3   ,AUTO
          3 0001EB  B851                                 LDR,R3   R1
          3 0001EC  3E42                                 ADV,R3   66
          3 0001ED  F847 0071                            LDR,R7   XLOGON+80,AUTO
          3 0001EF  8257                                 NEG      R7
          3 0001F0  FA70 008B                            ADD,R7   139,IMO
          3 0001F2  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

     1707     5814
     1708     5815    1   CALL NBSCAN ALTRET (JUSTRET);

   5815   3 0001F5  E3C0 01F3                            LNJ,B6   s:0,PREL
          3 0001F7       01A5                            DC       s:5914,PREL

     1709     5816    2   DO WHILE (I < LOGON.LEN);

   5816   3 0001F8  8CC7 0004                            LDI      @LOGON,AUTO
          3 0001FA  B856                                 LDR,R3   R6
          3 0001FB  E570 7FFF                            AND,R6   32767,IMO
          3 0001FD  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0001FF  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000201  304F                                 SOR,R3   15
          3 000202  D2B6                                 LLH,R5   ,B6,R3
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:322  
          3 000203  D947 0016                            CMR,R5   I,AUTO
          3 000205  0381 0196                            BLE      s:5914,PREL

     1710     5817    3      DO SELECT (SUBSTR (XLOGON, I, 1));

   5817   3 000207  B847 0016                            LDR,R3   I,AUTO
          3 000209  3E42                                 ADV,R3   66
          3 00020A  E0B7                                 LDH,R6   ,AUTO,R3
          3 00020B  6D4E                                 CMV,R6   78
          3 00020C  0201 0008                            BL       s:5817+14,PREL
          3 00020E  0901 00D3                            BE       s:5863,PREL
          3 000210  6D50                                 CMV,R6   80
          3 000211  0981 016A                            BNE      s:5904,PREL
          3 000213  0F81 005B                            B        s:5839,PREL
          3 000215  6D48                                 CMV,R6   72
          3 000216  0981 0165                            BNE      s:5904,PREL
          3 000218  0F81 0001                            B        s:5819,PREL

     1711     5818    3         SELECT ('H');

     1712     5819    3         I = I + 1;

   5819   3 00021A  8AC7 0016                            INC      I,AUTO

     1713     5820    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;

   5820   3 00021C  B847 0016                            LDR,R3   I,AUTO
          3 00021E  3E42                                 ADV,R3   66
          3 00021F  E0B7                                 LDH,R6   ,AUTO,R3
          3 000220  6D4F                                 CMV,R6   79
          3 000221  0981 0003                            BNE      s:5821,PREL

   5820   3 000223  8AC7 0016                            INC      I,AUTO

     1714     5821    3         IF (SUBSTR (XLOGON, I, 1) = 'S') THEN I = I + 1;

   5821   3 000225  B847 0016                            LDR,R3   I,AUTO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:323  
          3 000227  3E42                                 ADV,R3   66
          3 000228  E0B7                                 LDH,R6   ,AUTO,R3
          3 000229  6D53                                 CMV,R6   83
          3 00022A  0981 0003                            BNE      s:5822,PREL

   5821   3 00022C  8AC7 0016                            INC      I,AUTO

     1715     5822    3         IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;

   5822   3 00022E  B847 0016                            LDR,R3   I,AUTO
          3 000230  3E42                                 ADV,R3   66
          3 000231  E0B7                                 LDH,R6   ,AUTO,R3
          3 000232  6D54                                 CMV,R6   84
          3 000233  0981 0003                            BNE      s:5823,PREL

   5822   3 000235  8AC7 0016                            INC      I,AUTO

     1716     5823    3         IF (I >= LOGON.LEN)

   5823   3 000237  8CC7 0004                            LDI      @LOGON,AUTO
          3 000239  B856                                 LDR,R3   R6
          3 00023A  E570 7FFF                            AND,R6   32767,IMO
          3 00023C  8D47 006C                            SDI      XLOGON+75,AUTO
          3 00023E  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000240  304F                                 SOR,R3   15
          3 000241  D2B6                                 LLH,R5   ,B6,R3
          3 000242  D947 0016                            CMR,R5   I,AUTO
          3 000244  0301 0003                            BG       s:5827,PREL

     1717     5824    4         THEN DO;

     1718     5825    4            GOTO BADOPT;

   5825   3 000246  0F81 0158                            B        s:5916,PREL

     1719     5826    4            END;
     1720     5827    3         CALL NBSCAN ALTRET (BADOPT);
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:324  

   5827   3 000248  E3C0 01A0                            LNJ,B6   s:0,PREL
          3 00024A       0155                            DC       s:5916,PREL

     1721     5828    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')

   5828   3 00024B  B847 0016                            LDR,R3   I,AUTO
          3 00024D  3E42                                 ADV,R3   66
          3 00024E  E0B7                                 LDH,R6   ,AUTO,R3
          3 00024F  6D3D                                 CMV,R6   61
          3 000250  0901 0003                            BE       s:5832,PREL

     1722     5829    4         THEN DO;

     1723     5830    4            GOTO BADOPT;

   5830   3 000252  0F81 014C                            B        s:5916,PREL

     1724     5831    4            END;
     1725     5832    3         CALL GETNMN ALTRET (BADOPT);

   5832   3 000254  E3C0 01C5                            LNJ,B6   s:0,PREL
          3 000256       0149                            DC       s:5916,PREL

     1726     5833    3         IF (LEN > LENGTHC (HOST))

   5833   3 000257  E847 0018                            LDR,R6   LEN,AUTO
          3 000259  6D08                                 CMV,R6   8
          3 00025A  0381 0003                            BLE      s:5837,PREL

     1727     5834    4         THEN DO;

     1728     5835    4            GOTO BADOPT;

   5835   3 00025C  0F81 0142                            B        s:5916,PREL

     1729     5836    4            END;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:325  
     1730     5837    3         HOST = TNAME; /* We have a valid host, let's use it. */

   5837   3 00025E  8CC7 0010                            LDI      @HOST,AUTO
          3 000260  B856                                 LDR,R3   R6
          3 000261  E570 7FFF                            AND,R6   32767,IMO
          3 000263  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000265  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000267  304F                                 SOR,R3   15
          3 000268  AB87                                 LAB,B2   ,AUTO
          3 000269  2C32                                 LDV,R2   50
          3 00026A  6C08                                 LDV,R6   8
          3 00026B  BB86                                 LAB,B3   ,B6
          3 00026C  0008                                 MMM
          3 00026D  0F81 0110                            B        s:5906,PREL

     1731     5838    3         SELECT ('P');

     1732     5839    3         I = I + 1;

   5839   3 00026F  8AC7 0016                            INC      I,AUTO

     1733     5840    3         IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;

   5840   3 000271  B847 0016                            LDR,R3   I,AUTO
          3 000273  3E42                                 ADV,R3   66
          3 000274  E0B7                                 LDH,R6   ,AUTO,R3
          3 000275  6D52                                 CMV,R6   82
          3 000276  0981 0003                            BNE      s:5841,PREL

   5840   3 000278  8AC7 0016                            INC      I,AUTO

     1734     5841    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;

   5841   3 00027A  B847 0016                            LDR,R3   I,AUTO
          3 00027C  3E42                                 ADV,R3   66
          3 00027D  E0B7                                 LDH,R6   ,AUTO,R3
          3 00027E  6D4F                                 CMV,R6   79
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:326  
          3 00027F  0981 0003                            BNE      s:5842,PREL

   5841   3 000281  8AC7 0016                            INC      I,AUTO

     1735     5842    3         IF (SUBSTR (XLOGON, I, 1) = 'F') THEN I = I + 1;

   5842   3 000283  B847 0016                            LDR,R3   I,AUTO
          3 000285  3E42                                 ADV,R3   66
          3 000286  E0B7                                 LDH,R6   ,AUTO,R3
          3 000287  6D46                                 CMV,R6   70
          3 000288  0981 0003                            BNE      s:5843,PREL

   5842   3 00028A  8AC7 0016                            INC      I,AUTO

     1736     5843    3         IF (SUBSTR (XLOGON, I, 1) = 'I') THEN I = I + 1;

   5843   3 00028C  B847 0016                            LDR,R3   I,AUTO
          3 00028E  3E42                                 ADV,R3   66
          3 00028F  E0B7                                 LDH,R6   ,AUTO,R3
          3 000290  6D49                                 CMV,R6   73
          3 000291  0981 0003                            BNE      s:5844,PREL

   5843   3 000293  8AC7 0016                            INC      I,AUTO

     1737     5844    3         IF (SUBSTR (XLOGON, I, 1) = 'L') THEN I = I + 1;

   5844   3 000295  B847 0016                            LDR,R3   I,AUTO
          3 000297  3E42                                 ADV,R3   66
          3 000298  E0B7                                 LDH,R6   ,AUTO,R3
          3 000299  6D4C                                 CMV,R6   76
          3 00029A  0981 0003                            BNE      s:5845,PREL

   5844   3 00029C  8AC7 0016                            INC      I,AUTO

     1738     5845    3         IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

   5845   3 00029E  B847 0016                            LDR,R3   I,AUTO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:327  
          3 0002A0  3E42                                 ADV,R3   66
          3 0002A1  E0B7                                 LDH,R6   ,AUTO,R3
          3 0002A2  6D45                                 CMV,R6   69
          3 0002A3  0981 0003                            BNE      s:5846,PREL

   5845   3 0002A5  8AC7 0016                            INC      I,AUTO

     1739     5846    3         IF (I >= LOGON.LEN)

   5846   3 0002A7  8CC7 0004                            LDI      @LOGON,AUTO
          3 0002A9  B856                                 LDR,R3   R6
          3 0002AA  E570 7FFF                            AND,R6   32767,IMO
          3 0002AC  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0002AE  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0002B0  304F                                 SOR,R3   15
          3 0002B1  D2B6                                 LLH,R5   ,B6,R3
          3 0002B2  D947 0016                            CMR,R5   I,AUTO
          3 0002B4  0301 0003                            BG       s:5850,PREL

     1740     5847    4         THEN DO;

     1741     5848    4            GOTO BADOPT;

   5848   3 0002B6  0F81 00E8                            B        s:5916,PREL

     1742     5849    4            END;
     1743     5850    3         CALL NBSCAN ALTRET (BADOPT);

   5850   3 0002B8  E3C0 0130                            LNJ,B6   s:0,PREL
          3 0002BA       00E5                            DC       s:5916,PREL

     1744     5851    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')

   5851   3 0002BB  B847 0016                            LDR,R3   I,AUTO
          3 0002BD  3E42                                 ADV,R3   66
          3 0002BE  E0B7                                 LDH,R6   ,AUTO,R3
          3 0002BF  6D3D                                 CMV,R6   61
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:328  
          3 0002C0  0901 0003                            BE       s:5855,PREL

     1745     5852    4         THEN DO;

     1746     5853    4            GOTO BADOPT;

   5853   3 0002C2  0F81 00DC                            B        s:5916,PREL

     1747     5854    4            END;
     1748     5855    3         CALL GETNMN ALTRET (BADOPT);

   5855   3 0002C4  E3C0 0155                            LNJ,B6   s:0,PREL
          3 0002C6       00D9                            DC       s:5916,PREL

     1749     5856    3         IF (LEN > LENGTHC (PRO.T))

   5856   3 0002C7  E847 0018                            LDR,R6   LEN,AUTO
          3 0002C9  6D0B                                 CMV,R6   11
          3 0002CA  0381 0003                            BLE      s:5860,PREL

     1750     5857    4         THEN DO;

     1751     5858    4            GOTO BADOPT;

   5858   3 0002CC  0F81 00D2                            B        s:5916,PREL

     1752     5859    4            END;
     1753     5860    3         PRO.C = LEN;

   5860   3 0002CE  ECC7 000C                            LDB,B6   @PRO,AUTO
          3 0002D0  E786                                 STH,R6   ,B6

     1754     5861    3         CALL XLATE (SUBSTR (PRO.T, 0, LEN), B_XL_UPPER_UR, SUBSTR (TNAME, 0, LEN) );

   5861   3 0002D1  C856                                 LDR,R4   R6
          3 0002D2  D854                                 LDR,R5   R4
          3 0002D3  DB80 0000 0000  01                   LAB,B5   B_XL_UPPER_UR
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:329  
          3 0002D6  E870 00FF                            LDR,R6   255,IMO
          3 0002D8  0023                                 MAT      ;
          3 0002D9       4007 0019                                ALPHANUM(TNAME,AUTO,,R4),;
          3 0002DB       C006 0000                                ALPHANUM(0,B6,1,R5,FILL),;
          3 0002DD       4005 0000                                ALPHANUM(0,B5,,256)
          3 0002DF  437F                                 CSYNC    s:5861+13,SPREL
          3 0002E0  0F81 009D                            B        s:5906,PREL

     1755     5862    3         SELECT ('N');

     1756     5863    3         I = I + 1;

   5863   3 0002E2  8AC7 0016                            INC      I,AUTO

     1757     5864    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;

   5864   3 0002E4  B847 0016                            LDR,R3   I,AUTO
          3 0002E6  3E42                                 ADV,R3   66
          3 0002E7  E0B7                                 LDH,R6   ,AUTO,R3
          3 0002E8  6D4F                                 CMV,R6   79
          3 0002E9  0981 0003                            BNE      s:5865,PREL

   5864   3 0002EB  8AC7 0016                            INC      I,AUTO

     1758     5865    3         IF (SUBSTR (XLOGON, I, 1) = 'S')

   5865   3 0002ED  B847 0016                            LDR,R3   I,AUTO
          3 0002EF  3E42                                 ADV,R3   66
          3 0002F0  E0B7                                 LDH,R6   ,AUTO,R3
          3 0002F1  6D53                                 CMV,R6   83
          3 0002F2  0981 003E                            BNE      s:5882,PREL

     1759     5866    4         THEN DO;

     1760     5867    4            I = I + 1;

   5867   3 0002F4  8AC7 0016                            INC      I,AUTO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:330  

     1761     5868    4            IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

   5868   3 0002F6  B847 0016                            LDR,R3   I,AUTO
          3 0002F8  3E42                                 ADV,R3   66
          3 0002F9  E0B7                                 LDH,R6   ,AUTO,R3
          3 0002FA  6D45                                 CMV,R6   69
          3 0002FB  0981 0003                            BNE      s:5869,PREL

   5868   3 0002FD  8AC7 0016                            INC      I,AUTO

     1762     5869    4            IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;

   5869   3 0002FF  B847 0016                            LDR,R3   I,AUTO
          3 000301  3E42                                 ADV,R3   66
          3 000302  E0B7                                 LDH,R6   ,AUTO,R3
          3 000303  6D54                                 CMV,R6   84
          3 000304  0981 0003                            BNE      s:5870,PREL

   5869   3 000306  8AC7 0016                            INC      I,AUTO

     1763     5870    4            IF (SUBSTR (XLOGON, I, 1) = 'U') THEN I = I + 1;

   5870   3 000308  B847 0016                            LDR,R3   I,AUTO
          3 00030A  3E42                                 ADV,R3   66
          3 00030B  E0B7                                 LDH,R6   ,AUTO,R3
          3 00030C  6D55                                 CMV,R6   85
          3 00030D  0981 0003                            BNE      s:5871,PREL

   5870   3 00030F  8AC7 0016                            INC      I,AUTO

     1764     5871    4            IF (SUBSTR (XLOGON, I, 1) = 'P') THEN I = I + 1;

   5871   3 000311  B847 0016                            LDR,R3   I,AUTO
          3 000313  3E42                                 ADV,R3   66
          3 000314  E0B7                                 LDH,R6   ,AUTO,R3
          3 000315  6D50                                 CMV,R6   80
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:331  
          3 000316  0981 0003                            BNE      s:5872,PREL

   5871   3 000318  8AC7 0016                            INC      I,AUTO

     1765     5872    4            IF ( I > LOGON.LEN)

   5872   3 00031A  8CC7 0004                            LDI      @LOGON,AUTO
          3 00031C  B856                                 LDR,R3   R6
          3 00031D  E570 7FFF                            AND,R6   32767,IMO
          3 00031F  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000321  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000323  304F                                 SOR,R3   15
          3 000324  D2B6                                 LLH,R5   ,B6,R3
          3 000325  D947 0016                            CMR,R5   I,AUTO
          3 000327  0281 0003                            BGE      s:5880,PREL

     1766     5873    5            THEN DO;

     1767     5874    5               GOTO BADOPT;

   5874   3 000329  0F81 0075                            B        s:5916,PREL

     1768     5875    5               END;
     1769     5876                          /* If there was a syntax error in spelling the
     1770     5877                             option, it will get caught next time through
     1771     5878                             the loop by the case else.
     1772     5879                          */
     1773     5880    4            NOSETUP = '1'B;

   5880   3 00032B  DCC7 0012                            LDB,B5   @NOSETUP,AUTO
          3 00032D  8905                                 LBT,'8000'X       ,B5
          3 00032E       8000

     1774     5881    4            END; /* Setup stuff */

   5881   3 00032F  0F81 004E                            B        s:5906,PREL

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:332  
     1775     5882    3         ELSE IF (SUBSTR (XLOGON, I, 1) = 'H')

   5882   3 000331  6D48                                 CMV,R6   72
          3 000332  0981 0047                            BNE      s:5901,PREL

     1776     5883    4            THEN DO;

     1777     5884    4               I = I + 1;

   5884   3 000334  8AC7 0016                            INC      I,AUTO

     1778     5885    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

   5885   3 000336  B847 0016                            LDR,R3   I,AUTO
          3 000338  3E42                                 ADV,R3   66
          3 000339  E0B7                                 LDH,R6   ,AUTO,R3
          3 00033A  6D45                                 CMV,R6   69
          3 00033B  0981 0003                            BNE      s:5886,PREL

   5885   3 00033D  8AC7 0016                            INC      I,AUTO

     1779     5886    4               IF (SUBSTR (XLOGON, I, 1) = 'A') THEN I = I + 1;

   5886   3 00033F  B847 0016                            LDR,R3   I,AUTO
          3 000341  3E42                                 ADV,R3   66
          3 000342  E0B7                                 LDH,R6   ,AUTO,R3
          3 000343  6D41                                 CMV,R6   65
          3 000344  0981 0003                            BNE      s:5887,PREL

   5886   3 000346  8AC7 0016                            INC      I,AUTO

     1780     5887    4               IF (SUBSTR (XLOGON, I, 1) = 'D') THEN I = I + 1;

   5887   3 000348  B847 0016                            LDR,R3   I,AUTO
          3 00034A  3E42                                 ADV,R3   66
          3 00034B  E0B7                                 LDH,R6   ,AUTO,R3
          3 00034C  6D44                                 CMV,R6   68
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:333  
          3 00034D  0981 0003                            BNE      s:5888,PREL

   5887   3 00034F  8AC7 0016                            INC      I,AUTO

     1781     5888    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

   5888   3 000351  B847 0016                            LDR,R3   I,AUTO
          3 000353  3E42                                 ADV,R3   66
          3 000354  E0B7                                 LDH,R6   ,AUTO,R3
          3 000355  6D45                                 CMV,R6   69
          3 000356  0981 0003                            BNE      s:5889,PREL

   5888   3 000358  8AC7 0016                            INC      I,AUTO

     1782     5889    4               IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;

   5889   3 00035A  B847 0016                            LDR,R3   I,AUTO
          3 00035C  3E42                                 ADV,R3   66
          3 00035D  E0B7                                 LDH,R6   ,AUTO,R3
          3 00035E  6D52                                 CMV,R6   82
          3 00035F  0981 0003                            BNE      s:5890,PREL

   5889   3 000361  8AC7 0016                            INC      I,AUTO

     1783     5890    4               IF ( I > LOGON.LEN)

   5890   3 000363  8CC7 0004                            LDI      @LOGON,AUTO
          3 000365  B856                                 LDR,R3   R6
          3 000366  E570 7FFF                            AND,R6   32767,IMO
          3 000368  8D47 006C                            SDI      XLOGON+75,AUTO
          3 00036A  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 00036C  304F                                 SOR,R3   15
          3 00036D  D2B6                                 LLH,R5   ,B6,R3
          3 00036E  D947 0016                            CMR,R5   I,AUTO
          3 000370  0281 0003                            BGE      s:5898,PREL

     1784     5891    5               THEN DO;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:334  

     1785     5892    5                  GOTO BADOPT;

   5892   3 000372  0F81 002C                            B        s:5916,PREL

     1786     5893    5                  END;
     1787     5894                          /* If there was a syntax error in spelling the
     1788     5895                             option, it will get caught next time through
     1789     5896                             the loop by the case else.
     1790     5897                          */
     1791     5898    4               NOHEADER = '1'B;

   5898   3 000374  DCC7 0014                            LDB,B5   @NOHEADER,AUTO
          3 000376  8905                                 LBT,'8000'X       ,B5
          3 000377       8000

     1792     5899    4               END; /* Header stuff */

   5899   3 000378  0F81 0005                            B        s:5906,PREL

     1793     5900    4            ELSE DO;

     1794     5901    4               GOTO BADOPT;  /* Ns is the min abbrev */

   5901   3 00037A  0F81 0024                            B        s:5916,PREL

     1795     5902    4               END;
     1796     5903    3         SELECT (ELSE);

     1797     5904    3      GOTO BADOPT;

   5904   3 00037C  0F81 0022                            B        s:5916,PREL

     1798     5905    3         END; /* Of the do select */

     1799     5906    2   CALL NBSCAN ALTRET (JUSTRET);

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:335  
   5906   3 00037E  E3C0 006A                            LNJ,B6   s:0,PREL
          3 000380       001C                            DC       s:5914,PREL

     1800     5907    2   IF (SUBSTR (XLOGON, I, 1) = ',')

   5907   3 000381  B847 0016                            LDR,R3   I,AUTO
          3 000383  3E42                                 ADV,R3   66
          3 000384  E0B7                                 LDH,R6   ,AUTO,R3
          3 000385  6D2C                                 CMV,R6   44
          3 000386  0981 0006                            BNE      s:5912,PREL

     1801     5908    3   THEN DO;

     1802     5909    3      I = I + 1; /* Scan past the comma */

   5909   3 000388  8AC7 0016                            INC      I,AUTO

     1803     5910    3      CALL NBSCAN ALTRET (BADOPT);

   5910   3 00038A  E3C0 005E                            LNJ,B6   s:0,PREL
          3 00038C       0013                            DC       s:5916,PREL

     1804     5911    3      END;

     1805     5912    2      END; /* Do while i is less than the string length */

   5912   3 00038D  8CC7 0004                            LDI      @LOGON,AUTO
          3 00038F  B856                                 LDR,R3   R6
          3 000390  E570 7FFF                            AND,R6   32767,IMO
          3 000392  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000394  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000396  304F                                 SOR,R3   15
          3 000397  D2B6                                 LLH,R5   ,B6,R3
          3 000398  D947 0016                            CMR,R5   I,AUTO
          3 00039A  0301 FE6C                            BG       s:5817,PREL

     1806     5913
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:336  
     1807     5914    1   JUSTRET: RETURN;

   5914   3 00039C  C380 0000 0000  xent JUSTRET         LNJ,B4   X6A_ARET

     1808     5915
     1809     5916    1   BADOPT: ERR = %E$SGSYN;

   5916   3 00039F  ECC7 000E            BADOPT          LDB,B6   @ERR,AUTO
          3 0003A1  E870 04BD                            LDR,R6   1213,IMO
          3 0003A3  EF06                                 STR,R6   ,B6

     1810     5917    1   ALTRETURN;

   5917   3 0003A4  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1811     5918
     1812     5919    1   BADID: ERR = %E$BDID;

   5919   3 0003A7  ECC7 000E            BADID           LDB,B6   @ERR,AUTO
          3 0003A9  E870 04B7                            LDR,R6   1207,IMO
          3 0003AB  EF06                                 STR,R6   ,B6

     1813     5920    1   ALTRETURN;

   5920   3 0003AC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1814     5921        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:337  
     1815     5922    1   BCSCAN: PROC ALTRET;

   5922   3 0003AF  EFC7 006A            BCSCAN          STB,B6   XLOGON+73,AUTO

     1816     5923        /*I* NAME:        BCSCAN
     1817     5924             PURPOSE:     To set I to next ',' or ' ' or end-of-line
     1818     5925             DESCRIPTION: BCSCAN returns the current or next ' ' or ',' index in I
     1819     5926                          or returns LOGON.LEN if no ',' or ' ' exists
     1820     5927        */
     1821     5928    3   DO WHILE ('1'B);

     1822     5929    3      IF ((LOGON.LEN = I) OR

   5929   3 0003B1  8CC7 0004                            LDI      @LOGON,AUTO
          3 0003B3  B856                                 LDR,R3   R6
          3 0003B4  E570 7FFF                            AND,R6   32767,IMO
          3 0003B6  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0003B8  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0003BA  304F                                 SOR,R3   15
          3 0003BB  D2B6                                 LLH,R5   ,B6,R3
          3 0003BC  D947 0016                            CMR,R5   I,AUTO
          3 0003BE  0901 0023                            BE       s:5932,PREL
          3 0003C0  8CC7 0004                            LDI      @LOGON,AUTO
          3 0003C2  B856                                 LDR,R3   R6
          3 0003C3  E570 7FFF                            AND,R6   32767,IMO
          3 0003C5  8D47 006E                            SDI      XLOGON+77,AUTO
          3 0003C7  DCC7 006E                            LDB,B5   XLOGON+77,AUTO
          3 0003C9  304F                                 SOR,R3   15
          3 0003CA  BA47 0016                            ADD,R3   I,AUTO
          3 0003CC  3E01                                 ADV,R3   1
          3 0003CD  D0B5                                 LDH,R5   ,B5,R3
          3 0003CE  5D2C                                 CMV,R5   44
          3 0003CF  0901 0012                            BE       s:5932,PREL
          3 0003D1  8CC7 0004                            LDI      @LOGON,AUTO
          3 0003D3  B856                                 LDR,R3   R6
          3 0003D4  E570 7FFF                            AND,R6   32767,IMO
          3 0003D6  8D47 0070                            SDI      XLOGON+79,AUTO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:338  
          3 0003D8  CCC7 0070                            LDB,B4   XLOGON+79,AUTO
          3 0003DA  304F                                 SOR,R3   15
          3 0003DB  BA47 0016                            ADD,R3   I,AUTO
          3 0003DD  3E01                                 ADV,R3   1
          3 0003DE  D0B4                                 LDH,R5   ,B4,R3
          3 0003DF  5D20                                 CMV,R5   32
          3 0003E0  0981 0005                            BNE      s:5933,PREL

     1823     5930    3           (SUBSTR (LOGON.TXT, I, 1) = ',') OR
     1824     5931    3           (SUBSTR (LOGON.TXT, I, 1) = ' ') )
     1825     5932    3      THEN RETURN;

   5932   3 0003E2  ECC7 006A                            LDB,B6   XLOGON+73,AUTO
          3 0003E4  C3C6 0001                            LNJ,B4   1,B6

     1826     5933    3      ELSE I = I + 1;

   5933   3 0003E6  8AC7 0016                            INC      I,AUTO

     1827     5934    3      END;

   5934   3 0003E8  0FC9                                 B        s:5929,SPREL

     1828     5935    2   END BCSCAN;
     1829     5936        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:339  
     1830     5937    1   NBSCAN: PROC ALTRET;

   5937   3 0003E9  EFC7 006A            NBSCAN          STB,B6   XLOGON+73,AUTO

     1831     5938        /*I* NAME:        NBSCAN
     1832     5939             PURPOSE:     To scan to next non-blank character
     1833     5940             DESCRIPTION: NBSCAN returns in I the current or next non-blank
     1834     5941                          character index or ALTRETURNs if the rest of the
     1835     5942                          string is blank or no string is left.
     1836     5943        */
     1837     5944    3   DO I = I TO LOGON.LEN - 1;

   5944   3 0003EB  E847 0016                            LDR,R6   I,AUTO
          3 0003ED  EF47 0016                            STR,R6   I,AUTO
          3 0003EF  0F81 0018                            B        s:5946+2,PREL

     1838     5945    3      IF (SUBSTR (LOGON.TXT, I, 1) ~= ' ') THEN RETURN;

   5945   3 0003F1  8CC7 0004                            LDI      @LOGON,AUTO
          3 0003F3  B856                                 LDR,R3   R6
          3 0003F4  E570 7FFF                            AND,R6   32767,IMO
          3 0003F6  8D47 006C                            SDI      XLOGON+75,AUTO
          3 0003F8  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 0003FA  304F                                 SOR,R3   15
          3 0003FB  BA47 0016                            ADD,R3   I,AUTO
          3 0003FD  3E01                                 ADV,R3   1
          3 0003FE  D0B6                                 LDH,R5   ,B6,R3
          3 0003FF  5D20                                 CMV,R5   32
          3 000400  0901 0005                            BE       s:5946,PREL

   5945   3 000402  ECC7 006A                            LDB,B6   XLOGON+73,AUTO
          3 000404  C3C6 0001                            LNJ,B4   1,B6

     1839     5946    3      END;

   5946   3 000406  8AC7 0016                            INC      I,AUTO
          3 000408  8CC7 0004                            LDI      @LOGON,AUTO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:340  
          3 00040A  B856                                 LDR,R3   R6
          3 00040B  E570 7FFF                            AND,R6   32767,IMO
          3 00040D  8D47 006C                            SDI      XLOGON+75,AUTO
          3 00040F  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000411  304F                                 SOR,R3   15
          3 000412  D2B6                                 LLH,R5   ,B6,R3
          3 000413  D947 0016                            CMR,R5   I,AUTO
          3 000415  035C                                 BG       s:5945,SPREL

     1840     5947    2   ALTRETURN;

   5947   3 000416  ECC7 006A                            LDB,B6   XLOGON+73,AUTO
          3 000418  B806                                 LDR,R3   ,B6
          3 000419  C3B6                                 LNJ,B4   ,B6,R3

     1841     5948    2   END NBSCAN;
     1842     5949        %EJECT;
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:341  
     1843     5950    1   GETNMN: PROC ALTRET;

   5950   3 00041A  EFC7 0068            GETNMN          STB,B6   XLOGON+71,AUTO

     1844     5951        /*I* NAME:        GETNMN
     1845     5952             PURPOSE:     To return the next lexeme in TNAME with length in LEN
     1846     5953             DESCRIPTION: GETNMN skips over the current character, any intervening
     1847     5954                          blanks, and then falls through into GETNM to return
     1848     5955                          the next lexeme in TNAME with length of TNAME in LEN.
     1849     5956                          Trailing blanks will then be stripped off leaving I
     1850     5957                          as index of next non-blank character (or last character
     1851     5958                          of the string). If no non-blank characters are left,
     1852     5959                          GETNMN will ALTRETURN.
     1853     5960        */
     1854     5961    2   I = I + 1;

   5961   3 00041C  8AC7 0016                            INC      I,AUTO

     1855     5962    2   IF (I >= LOGON.LEN) THEN ALTRETURN;

   5962   3 00041E  8CC7 0004                            LDI      @LOGON,AUTO
          3 000420  B856                                 LDR,R3   R6
          3 000421  E570 7FFF                            AND,R6   32767,IMO
          3 000423  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000425  DCC7 006C                            LDB,B5   XLOGON+75,AUTO
          3 000427  304F                                 SOR,R3   15
          3 000428  D2B5                                 LLH,R5   ,B5,R3
          3 000429  D947 0016                            CMR,R5   I,AUTO
          3 00042B  0301 0005                            BG       s:5963,PREL

   5962   3 00042D  ECC7 0068                            LDB,B6   XLOGON+71,AUTO
          3 00042F  B806                                 LDR,R3   ,B6
          3 000430  C3B6                                 LNJ,B4   ,B6,R3

     1856     5963    2   CALL NBSCAN

   5963   3 000431  E3C0 FFB7                            LNJ,B6   s:0,PREL
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:342  
          3 000433       0003                            DC       s:5965,PREL
          3 000434  0F81 0005                            B        s:5965+4,PREL

     1857     5964    3   WHENALTRETURN DO;

     1858     5965    3      ALTRETURN;

   5965   3 000436  ECC7 0068                            LDB,B6   XLOGON+71,AUTO
          3 000438  B806                                 LDR,R3   ,B6
          3 000439  C3B6                                 LNJ,B4   ,B6,R3
          3 00043A  0F81 0003                            B        s:5975,PREL

     1859     5966    3      END;
     1860     5967
     1861     5968    2   GETNM: ENTRY ALTRET;

   5968   3 00043C  EFC7 0068            GETNM           STB,B6   XLOGON+71,AUTO

     1862     5969        /*I* NAME:        GETNM
     1863     5970             DESCRIPTION: GETNM scans from the current I location looking for
     1864     5971                          a ' ', ',' or end-of-string. Everything in between is
     1865     5972                          returned in TNAME with length in LEN. LEN may be returned
     1866     5973                          as 0.
     1867     5974        */
     1868     5975    2   J = I;

   5975   3 00043E  E847 0016                            LDR,R6   I,AUTO
          3 000440  EF47 0017                            STR,R6   J,AUTO

     1869     5976    2   CALL BCSCAN

   5976   3 000442  E3C0 FF6C                            LNJ,B6   s:0,PREL
          3 000444       0003                            DC       s:5979,PREL
          3 000445  0F81 0001                            B        s:5979,PREL

     1870     5977    3   WHENALTRETURN DO;

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:343  
     1871     5978    3      END;

     1872     5979    2   LEN = I - J;

   5979   3 000447  E847 0016                            LDR,R6   I,AUTO
          3 000449  E247 0017                            SUB,R6   J,AUTO
          3 00044B  EF47 0018                            STR,R6   LEN,AUTO

     1873     5980    2   TNAME = SUBSTR (LOGON.TXT, J, LEN);

   5980   3 00044D  8CC7 0004                            LDI      @LOGON,AUTO
          3 00044F  B856                                 LDR,R3   R6
          3 000450  E570 7FFF                            AND,R6   32767,IMO
          3 000452  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000454  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 000456  304F                                 SOR,R3   15
          3 000457  BA47 0017                            ADD,R3   J,AUTO
          3 000459  C847 0018                            LDR,R4   LEN,AUTO
          3 00045B  0021                                 ALR      ;
          3 00045C       C036 0000                                ALPHANUM(0,B6,R3,1,R4),;
          3 00045E       5007 0019                                ALPHANUM(TNAME,AUTO,,16,FILL)

     1874     5981    2   IF ((I < LOGON.LEN) AND

   5981   3 000460  8CC7 0004                            LDI      @LOGON,AUTO
          3 000462  B856                                 LDR,R3   R6
          3 000463  E570 7FFF                            AND,R6   32767,IMO
          3 000465  437F                                 CSYNC    s:5981+4,SPREL
          3 000466  8D47 006C                            SDI      XLOGON+75,AUTO
          3 000468  ECC7 006C                            LDB,B6   XLOGON+75,AUTO
          3 00046A  304F                                 SOR,R3   15
          3 00046B  D2B6                                 LLH,R5   ,B6,R3
          3 00046C  D947 0016                            CMR,R5   I,AUTO
          3 00046E  0381 0017                            BLE      s:5990,PREL
          3 000470  8CC7 0004                            LDI      @LOGON,AUTO
          3 000472  B856                                 LDR,R3   R6
          3 000473  E570 7FFF                            AND,R6   32767,IMO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:344  
          3 000475  8D47 006E                            SDI      XLOGON+77,AUTO
          3 000477  DCC7 006E                            LDB,B5   XLOGON+77,AUTO
          3 000479  304F                                 SOR,R3   15
          3 00047A  BA47 0016                            ADD,R3   I,AUTO
          3 00047C  3E01                                 ADV,R3   1
          3 00047D  D0B5                                 LDH,R5   ,B5,R3
          3 00047E  5D20                                 CMV,R5   32
          3 00047F  0981 0006                            BNE      s:5990,PREL

     1875     5982    2        (SUBSTR(LOGON.TXT,I,1) = ' ') )
     1876     5983    3   THEN DO;  /* Position i on the next nonblank */

     1877     5984    3      CALL NBSCAN

   5984   3 000481  E3C0 FF67                            LNJ,B6   s:0,PREL
          3 000483       0003                            DC       s:5990,PREL

     1878     5985    4      WHENRETURN DO;

     1879     5986    4         END;

   5986   3 000484  0F81 0001                            B        s:5990,PREL

     1880     5987    4      WHENALTRETURN DO;

     1881     5988    4         END;

     1882     5989    3      END;

     1883     5990    2   RETURN;

   5990   3 000486  ECC7 0068                            LDB,B6   XLOGON+71,AUTO
          3 000488  C3C6 0001                            LNJ,B4   1,B6
     1884     5991    2   END GETNMN;
     1885     5992    1   END GJA$PARSE;

PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:345  
--  Include file information  --

   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure GJA$PARSE.
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:346  

 **** Variables and constants ****

  ****  Section 001  Data  GJA$PARSE

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 B_XL_UPPER_UR(0:511)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @ACCT                      E-0-0/w PTR         r     1 @ERR
    10-0-0/w PTR         r     1 @HOST                      4-0-0/w PTR         r     1 @LOGON
     8-0-0/w PTR         r     1 @NAME                     14-0-0/w PTR         r     1 @NOHEADER
    12-0-0/w PTR         r     1 @NOSETUP                   C-0-0/w PTR         r     1 @PRO
     A-0-0/w PTR         r     1 @PW                       *0-0-0/c CHAR(8)     r     1 ACCT
    *0-0-0/w UBIN(16)    r     1 ERR                       *0-0-0/c CHAR(8)     r     1 HOST
    16-0-0/w UBIN(16)    r     1 I                         17-0-0/w UBIN(16)    r     1 J
    18-0-0/w UBIN(16)    r     1 LEN                       *0-0-0/c STRC(1120)  r     1 LOGON
    *0-0-0/w STRC(104)   r     1 NAME                      *0-0-0/w BIT         r     1 NOHEADER
    *0-0-0/w BIT         r     1 NOSETUP                   *0-0-0/w STRC(96)    r     1 PRO
    *0-0-0/c CHAR(8)     r     1 PW                        19-0-0/c CHAR(16)    r     1 TNAME
    21-0-0/c CHAR(139)   r     1 XLOGON


   Procedure GJA$PARSE requires 1162 words for executable code.
   Procedure GJA$PARSE requires 114 words of local(AUTO) storage.

    No errors detected in file GJA$SUBS.:E05TSI    .
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:347  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:348  
          MINI XREF LISTING

ACCT
      5671**DCL        11--PROC     5728<<ASSIGN   5744<<ASSIGN   5768--IF       5772<<ASSIGN
BADID
      5919**LABEL    5740--GOTO     5756--CALLALT  5759--CALLALT  5765--GOTO     5767--CALLALT  5770--GOTO
      5779--CALLALT  5782--GOTO     5795--CALLALT  5798--GOTO     5804--GOTO
BADOPT
      5916**LABEL    5825--GOTO     5827--CALLALT  5830--GOTO     5832--CALLALT  5835--GOTO     5848--GOTO
      5850--CALLALT  5853--GOTO     5855--CALLALT  5858--GOTO     5874--GOTO     5892--GOTO     5901--GOTO
      5904--GOTO     5910--CALLALT
BCSCAN
      5922**PROC     5756--CALL     5976--CALL
B_XL_UPPER_UR
      5698**DCL      5812>>CALLBLT  5861>>CALLBLT
ERR
      5679**DCL        11--PROC     5916<<ASSIGN   5919<<ASSIGN
GETNM IN PROCEDURE GETNMN
      5968**ENTRY    5767--CALL
GETNMN
      5950**PROC     5779--CALL     5795--CALL     5832--CALL     5855--CALL
HOST
      5680**DCL        11--PROC     5734<<ASSIGN   5833--IF       5837<<ASSIGN
I
      5683**DCL      5737<<ASSIGN   5758>>IF       5763>>IF       5776>>IF       5776>>IF       5792>>IF
      5792>>IF       5801>>IF       5801>>IF       5816>>DOWHILE  5817>>DOSELCT  5819<<ASSIGN   5819>>ASSIGN
      5820>>IF       5820<<ASSIGN   5820>>ASSIGN   5821>>IF       5821<<ASSIGN   5821>>ASSIGN   5822>>IF
      5822<<ASSIGN   5822>>ASSIGN   5823>>IF       5828>>IF       5839<<ASSIGN   5839>>ASSIGN   5840>>IF
      5840<<ASSIGN   5840>>ASSIGN   5841>>IF       5841<<ASSIGN   5841>>ASSIGN   5842>>IF       5842<<ASSIGN
      5842>>ASSIGN   5843>>IF       5843<<ASSIGN   5843>>ASSIGN   5844>>IF       5844<<ASSIGN   5844>>ASSIGN
      5845>>IF       5845<<ASSIGN   5845>>ASSIGN   5846>>IF       5851>>IF       5863<<ASSIGN   5863>>ASSIGN
      5864>>IF       5864<<ASSIGN   5864>>ASSIGN   5865>>IF       5867<<ASSIGN   5867>>ASSIGN   5868>>IF
      5868<<ASSIGN   5868>>ASSIGN   5869>>IF       5869<<ASSIGN   5869>>ASSIGN   5870>>IF       5870<<ASSIGN
      5870>>ASSIGN   5871>>IF       5871<<ASSIGN   5871>>ASSIGN   5872>>IF       5882>>IF       5884<<ASSIGN
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:349  
      5884>>ASSIGN   5885>>IF       5885<<ASSIGN   5885>>ASSIGN   5886>>IF       5886<<ASSIGN   5886>>ASSIGN
      5887>>IF       5887<<ASSIGN   5887>>ASSIGN   5888>>IF       5888<<ASSIGN   5888>>ASSIGN   5889>>IF
      5889<<ASSIGN   5889>>ASSIGN   5890>>IF       5907>>IF       5909<<ASSIGN   5909>>ASSIGN   5929>>IF
      5929>>IF       5929>>IF       5933<<ASSIGN   5933>>ASSIGN   5944<<DOINDEX  5944>>DOINDEX  5945>>IF
      5961<<ASSIGN   5961>>ASSIGN   5962>>IF       5975>>ASSIGN   5979>>ASSIGN   5981>>IF       5981>>IF
J
      5684**DCL      5975<<ASSIGN   5979>>ASSIGN   5980>>ASSIGN
JUSTRET
      5914**LABEL    5815--CALLALT  5906--CALLALT
LEN
      5685**DCL      5768>>IF       5780>>IF       5784>>IF       5786>>ASSIGN   5796>>IF       5833>>IF
      5856>>IF       5860>>ASSIGN   5861>>CALLBLT  5861>>CALLBLT  5979<<ASSIGN   5980>>ASSIGN
LOGON
      5668**DCL        11--PROC
LOGON.LEN
      5669**DCL      5740>>IF       5740>>IF       5741>>IF       5776>>IF       5792>>IF       5801>>IF
      5813>>ASSIGN   5813>>ASSIGN   5816>>DOWHILE  5823>>IF       5846>>IF       5872>>IF       5890>>IF
      5929>>IF       5944>>DOINDEX  5962>>IF       5981>>IF
LOGON.TXT
      5670**DCL      5740--IF       5741>>IF       5754>>IF       5754>>IF       5758>>IF       5763>>IF
      5776>>IF       5792>>IF       5801>>IF       5812>>CALLBLT  5813--ASSIGN   5929>>IF       5929>>IF
      5945>>IF       5980>>ASSIGN   5981>>IF
NAME
      5672**DCL        11--PROC
NAME.C
      5673**DCL      5729<<ASSIGN   5747<<ASSIGN   5786<<ASSIGN
NAME.T
      5674**DCL      5730<<ASSIGN   5748<<ASSIGN   5780--IF       5787<<ASSIGN
NBSCAN
      5937**PROC     5759--CALL     5815--CALL     5827--CALL     5850--CALL     5906--CALL     5910--CALL
      5963--CALL     5984--CALL
NOHEADER
      5682**DCL        11--PROC     5736<<ASSIGN   5746<<ASSIGN   5898<<ASSIGN
NOSETUP
      5681**DCL        11--PROC     5735<<ASSIGN   5745<<ASSIGN   5880<<ASSIGN
PRO
PL6.E3A0      #011=GJA$PARSE File=GJA$SUBS.:E05TSI                               TUE 07/29/97 21:58 Page:350  
      5676**DCL        11--PROC
PRO.C
      5677**DCL      5732<<ASSIGN   5750<<ASSIGN   5860<<ASSIGN
PRO.T
      5678**DCL      5733<<ASSIGN   5856--IF       5861<<CALLBLT
PW
      5675**DCL        11--PROC     5731<<ASSIGN   5749<<ASSIGN   5796--IF       5800<<ASSIGN
TNAME
      5686**DCL      5772>>ASSIGN   5787>>ASSIGN   5800>>ASSIGN   5837>>ASSIGN   5861>>CALLBLT  5980<<ASSIGN
XLOGON
      5687**DCL      5812<<CALLBLT  5813<<ASSIGN   5817>>DOSELCT  5820>>IF       5821>>IF       5822>>IF
      5828>>IF       5840>>IF       5841>>IF       5842>>IF       5843>>IF       5844>>IF       5845>>IF
      5851>>IF       5864>>IF       5865>>IF       5868>>IF       5869>>IF       5870>>IF       5871>>IF
      5882>>IF       5885>>IF       5886>>IF       5887>>IF       5888>>IF       5889>>IF       5907>>IF
