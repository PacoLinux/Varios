VERSION E05

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:1    
        1        1        /*M* TOU$REPDECK     DEckfile Editor Routine REPLACE DECK Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$REPDECK
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine REPlace DECK Function
       14       14              DESCRIPTION: This program is called when the REP DECK function
       15       15                           is invoked by the  CP-6  deckfile  editor driver.
       16       16                           This procedure replaces an object deck in a  CP-6
       17       17                           deckfile and rechecksums catalogs that  reference
       18       18                           the object deck.
       19       19              REFERENCE:   CP-6 Release C0M0
       20       20              LAST UPDATE: 10/27/83
       21       21        */
       22       22        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:2    
       23       23        /*F*  NAME:        TOU$REPDECK
       24       24              DESCRIPTION: Procedure Nesting Hierarchy
       25       25
       26       26              TOU$REPDECK: procedure
       27       27                RD_INIT_DUP: procedure
       28       28                RD_COMMAND_SETUP: procedure ALTRET
       29       29                RD_FIND_DECK: procedure ALTRET
       30       30                RD_REPLACE_DECK: procedure ALTRET
       31       31                   RD_PROCESS_IFAD: procedure ALTRET
       32       32                      RD_CHECK_MATCH: procedure
       33       33                      RD_STORE_OBJECT_DECK: procedure ALTRET
       34       34                      RD_STORE_CATALOG_CHANGES: procedure ALTRET
       35       35                   RD_PROCESS_TEMP: procedure ALTRET
       36       36                      RD_SAVE_CATALOG_CONTROL: procedure ALTRET
       37       37                      RD_SAVE_CATALOG_ENTRY: procedure ALTRET
       38       38                      RD_SAVE_OBJECT_DECK: procedure ALTRET
       39       39                         RD_REPLACE_DECK: procedure ALTRET
       40       40                         RD_ADJUST_REFLIST: procedure ALTRET
       41       41                      RD_SETUP_PRINT: procedure
       42       42                      RD_PRINT_ADDED_DECK: procedure
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:3    
       45       45        TOU$REPDECK: PROC ;
       46       46
       47       47        /* Include Files */
       48       48
       49       49           %INCLUDE TOU_DEER_M ;
       50     1460           %INCLUDE TOU_RQSTS_E ;
       51     1535           %INCLUDE TO_PERR_C ;
       52     2120           %INCLUDE XU_MACRO_C ;
       53     5226
       54     5227        /* Macros */
       55     5228
       56     5229           %DUP (STCLASS = SYMREF) ;
       57     5372           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       58     5384           %BCD_CARD (STCLASS = SYMREF) ;
       59     5404           %BINARY_CARD (STCLASS = SYMREF) ;
       60     5431           %BCD_KEY (STCLASS = SYMREF) ;
       61     5445           %BINARY_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
       62     5459           %BINARY_KEY (STCLASS = SYMREF) ;
       63     5473           %CATALOG_DATA (STCLASS = SYMREF) ;
       64     5487           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       65     5501           %DKEND (STCLASS = SYMREF) ;
       66     5525           %ID (STCLASS = SYMREF) ;
       67     5542           %MASTER_DATA (STCLASS = SYMREF) ;
       68     5556           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       69     5570           %OBJECT (STCLASS = SYMREF) ;
       70     5633           %OBJECT_SEARCH_KEY (STCLASS=SYMREF) ;
       71     5645           %OBJECT_SEARCH_KEY (NAME = NEW_OBJECT_KEY) ;
       72     5657           %OBJECT_KEY (STCLASS = SYMREF) ;
       73     5670           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       74     5684           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       75     5699           %RECORD (STCLASS = SYMREF) ;
       76     5726           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:4    
       77     5727        /* Variables */
       78     5728
       79     5729    1      DCL BCD#                       UBIN WORD SYMREF ;
       80     5730    1      DCL BIN#                       UBIN WORD SYMREF ;
       81     5731    1      DCL FILE_EOF                   UBIN WORD SYMREF ALIGNED;
       82     5732    1      DCL SAVED_DECK#                UBIN HALF HALIGNED ;
       83     5733
       84     5734        /* External Entry Points */
       85     5735
       86     5736    1      DCL TOU$DU_SET_IFAD_FID            ENTRY ALTRET ;
       87     5737    1      DCL TOU$DU_OPEN_IFAD               ENTRY ALTRET ;
       88     5738    1      DCL TOU$DU_CLOSE_IFAD              ENTRY ALTRET ;
       89     5739
       90     5740    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
       91     5741    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
       92     5742    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
       93     5743
       94     5744    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       95     5745    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
       96     5746    1      DCL TOU$DU_UPDATE_LOG              ENTRY ALTRET ;
       97     5747
       98     5748    1      DCL TOU$CHECKSUM                   ENTRY (4) ALTRET ;
       99     5749
      100     5750    1      DCL TOU$CLEAR_IFAD                 ENTRY ALTRET ;
      101     5751
      102     5752    1      DCL TOU$B_SHOW_DCBS                ENTRY ALTRET ;
      103     5753    1      DCL TOU$GET_CP6_OBJECT             ENTRY ALTRET ;
      104     5754    1      DCL TOU$GET_BINARY_CARDS           ENTRY ALTRET ;
      105     5755    1      DCL TOU$GET_BCD_CARDS              ENTRY ALTRET ;
      106     5756    1      DCL TOU$B_SET_OBJECT_KEY           ENTRY ALTRET ;
      107     5757    1      DCL TOU$B_PRINT_DECK_LINE          ENTRY ALTRET ;
      108     5758           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:5    
      109     5759        /* External Entry Points */
      110     5760
      111     5761    1      DCL TOU$DFU_DF_RD_MASTER_CONTROL   ENTRY ALTRET ;
      112     5762    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY     ENTRY ALTRET ;
      113     5763    1      DCL TOU$DFU_DF_RD_CATALOG_CONTROL  ENTRY ALTRET ;
      114     5764    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      115     5765    1      DCL TOU$DFU_DF_RD_LOG              ENTRY ALTRET ;
      116     5766
      117     5767    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
      118     5768    1      DCL TOU$DFU_DF_DL_DECK             ENTRY ALTRET ;
      119     5769
      120     5770    1      DCL TOU$DFU_DF_WR_CATALOG_CONTROL  ENTRY ALTRET ;
      121     5771    1      DCL TOU$DFU_DF_WR_CATALOG_ENTRY    ENTRY ALTRET ;
      122     5772    1      DCL TOU$DFU_DF_WR_OBJECT           ENTRY ALTRET ;
      123     5773    1      DCL TOU$DFU_DF_WR_BINARY           ENTRY ALTRET ;
      124     5774    1      DCL TOU$DFU_DF_WR_BCD_CARDS        ENTRY ALTRET ;
      125     5775    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      126     5776    1      DCL TOU$DFU_DF_WR_LOG              ENTRY ALTRET ;
      127     5777
      128     5778    1      DCL TOU$DFU_OPEN_TEMP              ENTRY ALTRET ;
      129     5779    1      DCL TOU$DFU_CLOSE_TEMP             ENTRY ALTRET ;
      130     5780
      131     5781    1      DCL TOU$DFU_TF_RD_OBJECT           ENTRY ALTRET ;
      132     5782    1      DCL TOU$DFU_TF_RD_BINARY           ENTRY ALTRET ;
      133     5783    1      DCL TOU$DFU_TF_RD_BCD_CARDS        ENTRY ALTRET ;
      134     5784    1      DCL TOU$DFU_TF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      135     5785
      136     5786    1      DCL TOU$DFU_TF_WR_OBJECT           ENTRY ALTRET ;
      137     5787    1      DCL TOU$DFU_TF_WR_BINARY           ENTRY ALTRET ;
      138     5788    1      DCL TOU$DFU_TF_WR_BCD_CARDS        ENTRY ALTRET ;
      139     5789    1      DCL TOU$DFU_TF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      140     5790           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:6    
      141     5791        /* ********************
      142     5792           ********************
      143     5793           **  Main Program  **
      144     5794           ********************
      145     5795           ******************** */
      146     5796
      147     5797    1      CALL RD_INIT_DUP ;
      148     5798    1      CALL RD_COMMAND_SETUP ALTRET (ERROR_RETURN) ;
      149     5799    1      CALL TOU$B_SHOW_DCBS ;
      150     5800    1      CALL RD_COMPARE_KEYS ALTRET (ERROR_RETURN) ;
      151     5801    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;
      152     5802    1      CALL RD_FIND_DECK ALTRET (ERROR_RETURN) ;
      153     5803    1      CALL RD_REPLACE_DECK ALTRET (ERROR_RETURN) ;
      154     5804    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;
      155     5805
      156     5806        /* NORMAL_RETURN: */
      157     5807    1      DUP.MSG_CODE = %T$RD_SUCCESS;
      158     5808    1      CALL TOU$DU_USER_WRITE ;
      159     5809    1      RETURN ;
      160     5810
      161     5811    1   ERROR_RETURN:
      162     5812    1      CALL TOU$DU_CLOSE_DF ;
      163     5813    1      DUP.MSG_CODE = %T$RD_FAILURE;
      164     5814    1      CALL TOU$DU_USER_WRITE ;
      165     5815    1      RETURN ;
      166     5816
      167     5817        /* ********************
      168     5818           ********************
      169     5819           **  End Of  Main  **
      170     5820           ********************
      171     5821           ******************** */
      172     5822        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:7    
      173     5823        /*I*  NAME:        RD_INIT_DUP
      174     5824              AUTHOR:      Scott S. Sheppard
      175     5825              PURPOSE:     Initilization
      176     5826              INTERFACE:   None called.
      177     5827              INPUT:       Set of System Equates.
      178     5828              OUTPUT:      DUP - Deckfile Utility Parameter
      179     5829              DESCRIPTION: This procedure initializes variables to
      180     5830                           appropriate starting values.
      181     5831        */
      182     5832
      183     5833    1   RD_INIT_DUP: PROC ;
      184     5834
      185     5835        /* Code */
      186     5836
      187     5837    2      DUP.HDR_CODE = %H$REPDECK ;
      188     5838    2      DUP.LINE_VFC = %SKIP_WRITE ;
      189     5839    2      DUP.FORCE_NEW_PAGE = %TRUE ;
      190     5840    2      DUP.IFAD.ME_ALLOWED = %FALSE ;
      191     5841    2      DUP.IFAD.ENTERED = %FALSE ;
      192     5842    2      DUP.DF.ENTERED = %FALSE ;
      193     5843    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;
      194     5844    2      DUP.DF.REPORT_ERROR = %TRUE ;
      195     5845    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;
      196     5846    2      RETURN ;
      197     5847
      198     5848    2   END RD_INIT_DUP ;
      199     5849        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:8    
      200     5850        /*I*  NAME:        RD_COMMAND_SETUP
      201     5851              AUTHOR:      Scott S. Sheppard
      202     5852              PURPOSE:     Sets up REPDECK Command
      203     5853              INTERFACE:   TOU$DU_SET_IFAD_FID
      204     5854                           TOU$DU_SET_DF_FID
      205     5855              INPUT:       DUP.CMD$ - pointer to the parse control block
      206     5856              OUTPUT:      DUP.DF.HOLD_AREA
      207     5857                           DUP.DF.HOLD_AREA_LGTH
      208     5858                           DUP.IFAD.ENTERED
      209     5859                           DUP.DF.ENTERED
      210     5860                           OBJECT_SEARCH_KEY.DATA
      211     5861                           NEW_OBJECT_KEY.DATA
      212     5862              DESCRIPTION: This procedure sets up the REPDECK command from the
      213     5863                           information  entered  by  the  user.  DUP.CMD$ is a
      214     5864                           pointer  to a   parse control block  that  contains
      215     5865                           the tokens entered by the user.
      216     5866                           COMMAND FORMS:
      217     5867              Case 1: RD <old object key> <new object key>
      218     5868              Case 2: RD <ifad fid> <old object key> <new object key>
      219     5869              Case 3: RD <old object key> <new object key> INTO <deckfile fid>
      220     5870              Case 4: RD <ifad fid> <old object key> <new object key> INTO <dekfile fid>
      221     5871        */
      222     5872
      223     5873    1   RD_COMMAND_SETUP: PROC ALTRET ;
      224     5874
      225     5875    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      226     5876    2      DCL OUTBLK$                    PTR ALIGNED ;
      227     5877           %PARSE$OUT (STCLASS = BASED) ;
      228     5922           %PARSE$SYM (STCLASS = BASED) ;
      229     5960           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:9    
      230     5961        /* Code */
      231     5962
      232     5963    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;
      233     5964    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;
      234     5965    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;
      235     5966    4            CASE (%IFAD_FID) ;
      236     5967    4               DUP.IFAD.ENTERED = %TRUE ;
      237     5968    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      238     5969    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      239     5970    4               CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;
      240     5971    4            CASE (%OLD_OBJKEY) ;
      241     5972    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;
      242     5973    4            CASE (%NEW_OBJKEY) ;
      243     5974    4               NEW_OBJECT_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;
      244     5975    4            CASE (%DECKFILE_FID) ;
      245     5976    4               DUP.DF.ENTERED = %TRUE ;
      246     5977    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      247     5978    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      248     5979    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      249     5980    4         END /* CASE */ ;
      250     5981    3      END /* DO */ ;
      251     5982
      252     5983    2      IF DUP.IFAD.ENTERED
      253     5984    2      THEN /* FID set from DEER command */ ;
      254     5985    2      ELSE CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;
      255     5986    2      IF DUP.DF.ENTERED
      256     5987    2      THEN /* FID set from DEER command */ ;
      257     5988    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      258     5989    2      RETURN ;
      259     5990
      260     5991    2   ERROR:
      261     5992    2      ALTRETURN ;
      262     5993
      263     5994    2   END RD_COMMAND_SETUP ;
      264     5995        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:10   
      265     5996        /*I*  NAME:        RD_COMPARE_KEYS
      266     5997              AUTHOR:      Scott S. Sheppard
      267     5998              PURPOSE:     Compares Object Keys
      268     5999              INTERFACE:   INDEX Function
      269     6000              INPUT:       OBJECT_SEARCH_KEY.DATA
      270     6001                           NEW_OBJECT_KEY.DATA
      271     6002              OUTPUT:      DUP.MSG_CODE - set to proper message number
      272     6003                           OBJECT_KEY.DATA - set to display old key value
      273     6004                           DUP.ERROR_IMAGE - set to display new key value
      274     6005              DESCRIPTION: This procedure compares the key of the deck to be
      275     6006                           replaced and the key of the deck to take its place
      276     6007                           and  ensures  that  an  object  deck  may only  be
      277     6008                           replaced by a deck that is a different  version of
      278     6009                           the same deck.
      279     6010                           Example Keys:  ITR.COMMON.BTLT.A1
      280     6011                                          MP9000.MTP601.M601.L1
      281     6012                                          MDR.PE3012.P312.C1
      282     6013                                          PLT.TD16CD
      283     6014                                          MLT.MOLTCM
      284     6015                           In the first 3 examples, the trailing .version is
      285     6016                           allowed to vary. In this case, the compare length
      286     6017                           starts out at 11 and increase to the value  where
      287     6018                           the last dot occurs.  In the last 2 examples, the
      288     6019                           keys must be exact. The compare length starts out
      289     6020                           at 11 and is never increased since  no dots occur
      290     6021                           after the 11th position.  So the replacement keys
      291     6022                           for the above examples are:
      292     6023                           Example Keys:  ITR.COMMON.BTLT.xx
      293     6024                                          MP9000.MTP601.M601.xx
      294     6025                                          MDR.PE3012.P312.xx
      295     6026                                          PLT.TD16CD
      296     6027                                          MLT.MOLTCM
      297     6028                              where xx may be any two characters.
      298     6029        */
      299     6030        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:11   
      300     6031    1   RD_COMPARE_KEYS: PROC ALTRET ;
      301     6032
      302     6033    2      DCL CMPR_LGTH                  UBIN WORD ALIGNED ;
      303     6034    2      DCL DOT_INX                    UBIN WORD ALIGNED ;
      304     6035
      305     6036        /* Code */
      306     6037
      307     6038           /* Find last dot */
      308     6039    2      CMPR_LGTH = 11 ;
      309     6040    2      CALL INDEX (DOT_INX, '.', OBJECT_SEARCH_KEY.DATA, CMPR_LGTH) ;
      310     6041    3      DO WHILE (DOT_INX < 23) ;
      311     6042    3         CMPR_LGTH = DOT_INX + 1 ;
      312     6043    3         CALL INDEX (DOT_INX, '.', OBJECT_SEARCH_KEY.DATA, CMPR_LGTH) ;
      313     6044    3      END /* WHILE */ ;
      314     6045
      315     6046           /* Compare two keys */
      316     6047    2      IF SUBSTR (OBJECT_SEARCH_KEY.DATA, 0, CMPR_LGTH) =
      317     6048    2              SUBSTR (NEW_OBJECT_KEY.DATA, 0, CMPR_LGTH)
      318     6049    2      THEN RETURN ;
      319     6050    3      ELSE DO ;
      320     6051    3              DUP.MSG_CODE = %E$RCK_NO_MATCH ;
      321     6052    3              OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;
      322     6053    3              DUP.ERROR_IMAGE = NEW_OBJECT_KEY.DATA ;
      323     6054    3              CALL TOU$DU_USER_WRITE ;
      324     6055    3              ALTRETURN ;
      325     6056    3           END /* ELSE */ ;
      326     6057
      327     6058    2   END RD_COMPARE_KEYS ;
      328     6059        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:12   
      329     6060        /*I*  NAME:        RD_FIND_DECK
      330     6061              AUTHOR:      Scott S. Sheppard
      331     6062              PURPOSE:     Locates Object Deck
      332     6063              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
      333     6064                           TOU$DFU_DF_RD_LOG
      334     6065                           TOU$DU_USER_WRITE
      335     6066              INPUT:       OBJECT_SEARCH_KEY
      336     6067              OUTPUT:      OBJECT - contains $Object card of deck to be replaced
      337     6068              DESCRIPTION: This procedure locates an object card for the deck
      338     6069                           to be replaced.
      339     6070        */
      340     6071
      341     6072    1   RD_FIND_DECK: PROC ALTRET ;
      342     6073
      343     6074        /* Code */
      344     6075
      345     6076    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;
      346     6077    2      CALL TOU$DFU_DF_CHECK_FOR_KEY ALTRET (NOT_FOUND) ;
      347     6078    2      SAVED_DECK# = OBJECT.DECK# ;
      348     6079    2      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR) ;
      349     6080    2      RETURN ;
      350     6081
      351     6082    2   NOT_FOUND:
      352     6083    2      DUP.MSG_CODE = %E$DFD_NO_OBJ_IN_DF ;
      353     6084    2      DUP.ERROR_IMAGE = OBJECT_SEARCH_KEY.DATA ;
      354     6085    2      CALL TOU$DU_USER_WRITE ;
      355     6086    2   ERROR:
      356     6087    2      ALTRETURN ;
      357     6088
      358     6089    2   END RD_FIND_DECK ;
      359     6090        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:13   
      360     6091        /*I*  NAME:        RD_REPLACE_DECK
      361     6092              AUTHOR:      Scott S. Sheppard
      362     6093              PURPOSE:     Processes IFAD -> temp -> DECKFILE
      363     6094              INTERFACE:   RD_PROCESS_IFAD
      364     6095                           RD_PROCESS_TEMP
      365     6096                           TOU$DU_OPEN_IFAD
      366     6097                           TOU$DU_CLOSE_IFAD
      367     6098                           TOU$CLEAR_IFAD
      368     6099                           TOU$DFU_OPEN_TEMP
      369     6100                           TOU$DFU_CLOSE_TEMP
      370     6101              INPUT:       IFAD input source
      371     6102                           DEER temporary file
      372     6103              OUTPUT:      DEER temporary file
      373     6104                           DECKFILE
      374     6105                           DUP.TEMP.OPEN_TYPE
      375     6106                           DUP.TEMP.CLOSE_TYPE
      376     6107              DESCRIPTION: This procedure adds a deck to a deckfile by procssing
      377     6108                           an IFAD input source and logging all the records that
      378     6109                           must be updated into a temporary file.   If no errors
      379     6110                           occur,  the  deckfile  is  modified  to  contain  the
      380     6111                           updated records from the temporary file.
      381     6112        */
      382     6113        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:14   
      383     6114    1   RD_REPLACE_DECK: PROC ALTRET ;
      384     6115
      385     6116        /* Code */
      386     6117
      387     6118    2      DUP.TEMP.OPEN_TYPE = %CREATE_FILE ;
      388     6119    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;
      389     6120    2      CALL TOU$DU_OPEN_IFAD ALTRET (ERROR) ;
      390     6121    2      CALL TOU$CLEAR_IFAD ;
      391     6122    2      CALL RD_PROCESS_IFAD ALTRET (ERROR) ;
      392     6123    2      CALL TOU$DU_CLOSE_IFAD ALTRET (ERROR) ;
      393     6124    2      DUP.TEMP.CLOSE_TYPE = %SAVE_FILE ;
      394     6125    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;
      395     6126
      396     6127    2      DUP.TEMP.OPEN_TYPE = %READ_FILE ;
      397     6128    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;
      398     6129    2      CALL RD_PROCESS_TEMP ALTRET (ERROR) ;
      399     6130    2      DUP.TEMP.CLOSE_TYPE = %DISCARD_FILE ;
      400     6131    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;
      401     6132    2      RETURN ;
      402     6133
      403     6134    2   ERROR:
      404     6135    2      DUP.TEMP.CLOSE_TYPE = %DISCARD_FILE ;
      405     6136    2      CALL TOU$DFU_CLOSE_TEMP ;
      406     6137    2      CALL TOU$DU_CLOSE_IFAD ;
      407     6138    2      ALTRETURN ;
      408     6139
      409     6140        /* END RD_REPLACE_DECK */
      410     6141        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:15   
      411     6142        /*I*  NAME:        RD_PROCESS_IFAD
      412     6143              AUTHOR:      Scott S. Sheppard
      413     6144              PURPOSE:     Processes IFAD
      414     6145              INTERFACE:   TOU$GET_CP6_OBJECT
      415     6146                           TOU$GET_BINARY_CARDS
      416     6147                           TOU$GET_BCD_CARDS
      417     6148                           TOU$B_SET_OBJECT_KEY
      418     6149                           RD_CHECK_MATCH
      419     6150                           RD_STORE_OBJECT_DECK
      420     6151                           RD_STORE_REFLIST
      421     6152              INPUT:       IFAD input source
      422     6153              OUTPUT:      DEER temporary file
      423     6154              DESCRIPTION: This procedure wades through the IFAD input source
      424     6155                           locates the $object card for the deck to take  the
      425     6156                           place of the  existing deck and  calls routines to
      426     6157                           save the deckfile changes in the temporary file.
      427     6158        */
      428     6159        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:16   
      429     6160    2   RD_PROCESS_IFAD: PROC ALTRET ;
      430     6161
      431     6162    3      DCL MATCHING_OBJECT      BIT (1) CALIGNED ;
      432     6163
      433     6164        /* Code */
      434     6165
      435     6166    3      FILE_EOF = 0 ;
      436     6167    4      DO UNTIL (MATCHING_OBJECT OR FILE_EOF = 2) ;
      437     6168    4         CALL TOU$GET_CP6_OBJECT ALTRET (ERROR) ;
      438     6169    4         IF FILE_EOF < 2
      439     6170    5         THEN DO ;
      440     6171    5                 CALL TOU$GET_BINARY_CARDS ALTRET (ERROR) ;
      441     6172    5                 CALL TOU$GET_BCD_CARDS ALTRET (ERROR) ;
      442     6173    5                 CALL TOU$B_SET_OBJECT_KEY ALTRET (ERROR) ;
      443     6174    5                 CALL RD_CHECK_MATCH (MATCHING_OBJECT) ;
      444     6175    5              END /* THEN */ ;
      445     6176    4         ELSE /* EOF returned instead of a $object card. */ ;
      446     6177    4      END /* UNTIL */ ;
      447     6178
      448     6179    3      IF MATCHING_OBJECT
      449     6180    4      THEN DO ;
      450     6181    4              CALL RD_STORE_OBJECT_DECK ALTRET (ERROR) ;
      451     6182    4              CALL RD_STORE_REFLIST ALTRET (ERROR) ;
      452     6183    4              RETURN ;
      453     6184    4           END /* THEN */ ;
      454     6185    4      ELSE DO ;
      455     6186    4              DUP.MSG_CODE = %E$NPI_NO_OBJECT ;
      456     6187    4              OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;
      457     6188    4              CALL TOU$DU_USER_WRITE ;
      458     6189    4   ERROR:
      459     6190    4              ALTRETURN ;
      460     6191    4           END /* ELSE */ ;
      461     6192
      462     6193        /* END RD_PROCESS_IFAD */
      463     6194        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:17   
      464     6195        /*I*  NAME:        RD_CHECK_MATCH
      465     6196              AUTHOR:      Scott S. Sheppard
      466     6197              PURPOSE:     Checks $Object Card
      467     6198              INTERFACE:   None called.
      468     6199              INPUT:       OBJECT.BCD.LIBRARY
      469     6200                           OBJECT_KEY
      470     6201                           NEW_OBJECT_KEY
      471     6202              OUTPUT:      MATCH_FOUND - output parameter
      472     6203              DESCRIPTION: This procedure determines if the current $Object card
      473     6204                           is  the  $Object card  of the deck to be replaced  by
      474     6205                           comparing  the  key  of  the  current object and  the
      475     6206                           key of the object deck to be replaced.
      476     6207        */
      477     6208
      478     6209    3   RD_CHECK_MATCH: PROC (MATCH_FOUND) ;
      479     6210
      480     6211    4      DCL MATCH_FOUND       BIT (1) CALIGNED ;
      481     6212
      482     6213        /* Code */
      483     6214
      484     6215    4      IF OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA
      485     6216    4      THEN MATCH_FOUND = %TRUE ;
      486     6217    4      ELSE MATCH_FOUND = %FALSE ;
      487     6218    4      RETURN ;
      488     6219
      489     6220    4   END RD_CHECK_MATCH ;
      490     6221        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:18   
      491     6222        /*I*  NAME:        RD_STORE_OBJECT_DECK
      492     6223              AUTHORS:     Dave Augustine
      493     6224                           Scott Sheppard
      494     6225              PURPOSE:     Saves an Object Deck
      495     6226              INTERFACE:   TOU$CHECKSUM
      496     6227                           TOU$DFU_TF_WR_OBJECT
      497     6228                           TOU$DFU_TF_WR_BINARY
      498     6229                           TOU$DFU_TF_WR_BCD_CARDS
      499     6230              INPUT:       NEW_OBJECT_KEY
      500     6231                           SAVED_DECK#
      501     6232                           OBJECT
      502     6233              OUTPUT:      OBJECT_KEY
      503     6234                           OBJECT
      504     6235                           BCD_KEY
      505     6236                           BIN#
      506     6237                           BCD#
      507     6238              DESCRIPTION: This procedure saves all of the records for the
      508     6239                           object deck,($object, binary, patches, $dkend),
      509     6240                           in the temporary file.
      510     6241        */
      511     6242        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:19   
      512     6243    3   RD_STORE_OBJECT_DECK: PROC ALTRET ;
      513     6244
      514     6245        /* Code */
      515     6246
      516     6247    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;
      517     6248    4      OBJECT.DECK# = SAVED_DECK# ;
      518     6249    4      OBJECT.BINARY_COUNT = BIN# ;
      519     6250    4      OBJECT.TOTAL_COUNT = BIN# + BCD# + 1;
      520     6251    4      CALL TOU$CHECKSUM (0,
      521     6252    4              ADDR (OBJECT),
      522     6253    4              23,
      523     6254    4              OBJECT.CHECKSUM);
      524     6255
      525     6256    4      CALL TOU$DFU_TF_WR_OBJECT ALTRET (ERROR) ;
      526     6257    4      BINARY_KEY.DECK# = OBJECT.DECK# ;
      527     6258    4      CALL TOU$DFU_TF_WR_BINARY ALTRET (ERROR) ;
      528     6259    4      BCD_KEY.DECK# = OBJECT.DECK# ;
      529     6260    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;
      530     6261    4      CALL TOU$DFU_TF_WR_BCD_CARDS ALTRET (ERROR) ;
      531     6262    4      RETURN ;
      532     6263
      533     6264    4   ERROR:
      534     6265    4      ALTRETURN ;
      535     6266
      536     6267    4   END RD_STORE_OBJECT_DECK ;
      537     6268        %EJECT;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:20   
      538     6269        /*I*  NAME:        RD_STORE_REFLIST
      539     6270              AUTHOR:      Scott S. Sheppard
      540     6271              PURPOSE:     Saves Object Reference List
      541     6272              INTERFACE:   TOU$DFU_DF_RD_OBJECT_REFLIST
      542     6273                           TOU$DFU_TF_WR_OBJECT_REFLIST
      543     6274              INPUT:       SAVED_DECK#
      544     6275                           OBJECT_REFLIST_DATA
      545     6276              OUTPUT:      OBJECT_REFLIST_KEY
      546     6277                           OBJECT_REFLIST_DATA
      547     6278              DESCRIPTION: This procedure stores the object reference list
      548     6279                           in the temporary file.
      549     6280        */
      550     6281
      551     6282    3   RD_STORE_REFLIST: PROC ALTRET ;
      552     6283
      553     6284        /* Code */
      554     6285
      555     6286    4      OBJECT_REFLIST_KEY.DECK# = SAVED_DECK# ;
      556     6287    4      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
      557     6288    4      CALL TOU$DFU_TF_WR_OBJECT_REFLIST ALTRET (ERROR) ;
      558     6289    4      RETURN ;
      559     6290
      560     6291    4   ERROR:
      561     6292    4      ALTRETURN ;
      562     6293
      563     6294    4   END RD_STORE_REFLIST ;
      564     6295    3   END RD_PROCESS_IFAD ;
      565     6296        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:21   
      566     6297        /*I*  NAME:        RD_PROCESS_TEMP
      567     6298              AUTHOR:      Scott S. Sheppard
      568     6299              PURPOSE:     Processes TEMP Input
      569     6300              INTERFACE:   RD_SAVE_CATALOG_CONTROL
      570     6301                           RD_SAVE_CATALOG_ENTRY
      571     6302                           RD_SAVE_OBJECT_DECK
      572     6303                           RD_SETUP_PRINT
      573     6304                           TOU$B_PRINT_DECK_LINE
      574     6305                           RD_PRINT_ADDED_DECK
      575     6306                           TOU$DU_USER_WRITE
      576     6307                           TOU$DU_PRINTER_WRITE
      577     6308              INPUT:       DEER temporary file - contains catalog records
      578     6309              OUTPUT:      DECKFILE            - new deck copied in
      579     6310                           DUP.BREAK_DISABLED
      580     6311              DESCRIPTION: This procedure processes the temporary file, by
      581     6312                           reading its records and  writing  them into the
      582     6313                           deckfile.
      583     6314        */
      584     6315        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:22   
      585     6316    2   RD_PROCESS_TEMP: PROC ALTRET ;
      586     6317
      587     6318        /* Code */
      588     6319
      589     6320    3      DUP.BREAK_DISABLED = %TRUE ;
      590     6321    3      CALL RD_DELETE_OLD_DECK ALTRET (ERROR) ;
      591     6322    3      CALL RD_SAVE_NEW_DECK ALTRET (ERROR) ;
      592     6323    3      CALL RD_SAVE_CATALOG_CHANGES ALTRET (ERROR) ;
      593     6324    3      CALL RD_SETUP_PRINT ;
      594     6325    3      CALL TOU$B_PRINT_DECK_LINE ;
      595     6326    3      CALL RD_PRINT_REPLACED_DECK ;
      596     6327    3      DUP.BREAK_DISABLED = %FALSE ;
      597     6328    3      RETURN ;
      598     6329
      599     6330    3   ERROR:
      600     6331    3      DUP.BREAK_DISABLED = %FALSE ;
      601     6332    3      DUP.MSG_CODE = %E$NPT_BAD_DECKFILE ;
      602     6333    3      DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;
      603     6334    3      CALL TOU$DU_USER_WRITE ;
      604     6335    3      CALL TOU$DU_PRINTER_WRITE ;
      605     6336    3      ALTRETURN ;
      606     6337
      607     6338        /* END RD_PROCESS_TEMP */
      608     6339        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:23   
      609     6340        /*I*  NAME:        RD_DELETE_OLD_DECK
      610     6341              AUTHOR:      Scott S. Sheppard
      611     6342              PURPOSE:     Deletes Old Object Deck
      612     6343              INTERFACE:   TOU$DFU_DF_DL_DECK
      613     6344              INPUT:       OBJECT_SEARCH_KEY
      614     6345                           SAVED_DECK#
      615     6346              OUTPUT:      OBJECT_KEY
      616     6347                           BINARY_KEY
      617     6348                           OBJECT_REFLIST_KEY
      618     6349              DESCRIPTION: This procedure deletes the old object deck so that
      619     6350                           the replacement deck may be added.
      620     6351        */
      621     6352
      622     6353    3   RD_DELETE_OLD_DECK: PROC ALTRET ;
      623     6354
      624     6355        /* Code */
      625     6356
      626     6357    4      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;
      627     6358    4      BINARY_KEY.DECK# = SAVED_DECK# ;
      628     6359    4      OBJECT_REFLIST_KEY.DECK# = SAVED_DECK# ;
      629     6360    4      CALL TOU$DFU_DF_DL_DECK ALTRET (ERROR) ;
      630     6361    4      RETURN ;
      631     6362
      632     6363    4   ERROR:
      633     6364    4      ALTRETURN ;
      634     6365
      635     6366    4   END RD_DELETE_OLD_DECK ;
      636     6367        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:24   
      637     6368        /*I*  NAME:        RD_SAVE_NEW_DECK
      638     6369              AUTHOR:      Scott S. Sheppard
      639     6370              PURPOSE:     Saves an Object Deck
      640     6371              INTERFACE:   TOU$DFU_TF_RD_OBJECT
      641     6372                           TOU$DFU_DF_WR_OBJECT
      642     6373                           TOU$DFU_TF_RD_BINARY
      643     6374                           TOU$DFU_DF_WR_BINARY
      644     6375                           TOU$DFU_TF_RD_BCD_CARDS
      645     6376                           TOU$DFU_DF_WR_BCD_CARDS
      646     6377                           TOU$DFU_TF_RD_OBJECT_REFLIST
      647     6378                           TOU$DFU_DF_WR_OBJECT_REFLIST
      648     6379                           TOU$DU_UPDATE_LOG
      649     6380                           TOU$DFU_DF_WR_LOG
      650     6381              INPUT:       NEW_OBJECT_KEY
      651     6382                           OBJECT
      652     6383              OUTPUT:      OBJECT_KEY
      653     6384                           BINARY_KEY
      654     6385                           BIN#
      655     6386                           BCD_KEY
      656     6387                           BCD#
      657     6388                           OBJECT_REFLIST_KEY
      658     6389              DESCRIPTION: This procedure fetches records from the temporary
      659     6390                           file and saves them in the deckfile, resulting in
      660     6391                           the replacement of the object deck.
      661     6392        */
      662     6393        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:25   
      663     6394    3   RD_SAVE_NEW_DECK: PROC ALTRET ;
      664     6395
      665     6396        /* Code */
      666     6397
      667     6398    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;
      668     6399    4      CALL TOU$DFU_TF_RD_OBJECT ALTRET (ERROR) ;
      669     6400    4      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;
      670     6401
      671     6402    4      BINARY_KEY.DECK# = OBJECT.DECK# ;
      672     6403    4      BIN# = OBJECT.BINARY_COUNT ;
      673     6404    4      CALL TOU$DFU_TF_RD_BINARY ALTRET (ERROR) ;
      674     6405    4      CALL TOU$DFU_DF_WR_BINARY ALTRET (ERROR) ;
      675     6406
      676     6407    4      BCD_KEY.DECK# = OBJECT.DECK# ;
      677     6408    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;
      678     6409    4      CALL TOU$DFU_TF_RD_BCD_CARDS ALTRET (ERROR) ;
      679     6410    4      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (ERROR) ;
      680     6411
      681     6412    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
      682     6413    4      CALL TOU$DFU_TF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
      683     6414    4      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;
      684     6415
      685     6416    4      DUP.LOG.TYPE = %T$SF_REPDECK ;
      686     6417    4      DUP.LOG.CATALOG = ' ' ;
      687     6418    4      DUP.LOG.DECK = OBJECT_KEY.DATA ;
      688     6419    4      DUP.HOLD_AREA = DUP.IFAD.FID ;
      689     6420    4      CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;
      690     6421    4      CALL TOU$DFU_DF_WR_LOG ALTRET (ERROR) ;
      691     6422    4      RETURN ;
      692     6423
      693     6424    4   ERROR:
      694     6425    4      ALTRETURN ;
      695     6426
      696     6427    4   END RD_SAVE_NEW_DECK ;
      697     6428        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:26   
      698     6429        /*I*  NAME:        RD_SAVE_CATALOG_CHANGES
      699     6430              AUTHOR:      Scott S. Sheppard
      700     6431              PURPOSE:     Saves Catalog Control
      701     6432              INTERFACE:   TOU$DFU_DF_RD_MASTER_CONTROL
      702     6433                           TOU$DFU_DF_RD_MASTER_ENTRY
      703     6434                           TOU$DFU_DF_RD_CATALOG_CONTROL
      704     6435                           TOU$DFU_DF_WR_CATALOG_CONTROL
      705     6436                           TOU$DFU_DF_WR_CATALOG_ENTRY
      706     6437              INPUT:       MASTER_DATA
      707     6438                           OBJECT_REFLIST_DATA
      708     6439                           CATALOG_CONTROL
      709     6440              OUTPUT:      MASTER_ENTRY
      710     6441                           CATALOG_CONTROL
      711     6442              DESCRIPTION: This procedure rechecksums and saves all  catalog
      712     6443                           controls for catalogs that reference the replaced
      713     6444                           deck.
      714     6445        */
      715     6446        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:27   
      716     6447    3   RD_SAVE_CATALOG_CHANGES: PROC ALTRET ;
      717     6448
      718     6449    4      DCL I      UBIN HALF HALIGNED ;
      719     6450
      720     6451        /* Code */
      721     6452
      722     6453    4      CALL TOU$DFU_DF_RD_MASTER_CONTROL ALTRET (ERROR) ;
      723     6454    4      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;
      724     6455    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;
      725     6456    5      DO I = 0 TO OBJECT_REFLIST_DATA.NUM_REFS - 1 ;
      726     6457    5         MASTER_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.ME#(I) ;
      727     6458    5         CALL TOU$DFU_DF_RD_MASTER_ENTRY ALTRET (ERROR) ;
      728     6459    5         CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;
      729     6460    5         CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;
      730     6461    5         CATALOG_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.CE#(I) ;
      731     6462    5         CALL TOU$DFU_DF_WR_CATALOG_ENTRY ALTRET (ERROR) ;
      732     6463    5         CALL TOU$DFU_DF_WR_CATALOG_CONTROL ALTRET (ERROR) ;
      733     6464    5      END /* DO */ ;
      734     6465    4      RETURN ;
      735     6466
      736     6467    4   ERROR:
      737     6468    4      ALTRETURN ;
      738     6469
      739     6470    4   END RD_SAVE_CATALOG_CHANGES ;
      740     6471        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:28   
      741     6472        /*I*  NAME:        RD_SETUP_PRINT
      742     6473              AUTHOR:      Scott S. Sheppard
      743     6474              PURPOSE:     Assign Replacement Variables
      744     6475              INTERFACE:   None Called.
      745     6476              INPUT:       OBJECT.BCD.LIBRARY - used to determine GECALL or not
      746     6477                           OBJECT.BCD.CLASS   - used to determine ITR or MDR
      747     6478                           BCD_B(BCD#-1)      - $DKEND card saved
      748     6479                           H$REPDECK_ITR       T$RD_ITR
      749     6480                           H$REPDECK_MDR      T$RD_MDR
      750     6481                           H$REPDECK_PROG     T$RD_GECALL
      751     6482              OUTPUT:      DUP.HDR_CODE  - set to correct heading
      752     6483                           DUP.MSG_CODE  - used to write messages
      753     6484                           ID.ID         - set for IDENT CODE field
      754     6485                           ID.REVISION  - set for REV field
      755     6486                           DKEND         - $DKEND Card Structure
      756     6487                           OBJECT_KEY    - new object key
      757     6488                           ERROR_IMAGE   - old object key
      758     6489              DESCRIPTION: This procedure assigns variables needed values so
      759     6490                           that TOU$REPLACE  will insert proper  values  for
      760     6491                           the dummy ~strings.
      761     6492        */
      762     6493        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:29   
      763     6494    3   RD_SETUP_PRINT: PROC ;
      764     6495
      765     6496        /* Code */
      766     6497
      767     6498    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;
      768     6499    4      DUP.ERROR_IMAGE = OBJECT_SEARCH_KEY.DATA ;
      769     6500    4      IF OBJECT.BCD.LIBRARY = 'HMPCJ1'
      770     6501    4      THEN IF OBJECT.BCD.CLASS = 'I' | OBJECT.BCD.CLASS = 'F'
      771     6502    5         THEN DO ;
      772     6503    5                 IF OBJECT.BCD.CLASS = 'F'
      773     6504    5                 THEN ID.ID = SUBSTR (OBJECT_KEY.DATA, 7, 6) ;
      774     6505    5                 ELSE ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;
      775     6506    5                 DKEND.BCD_ = BCD_B(BCD#-1) ;
      776     6507    5                 ID.REVISION = DKEND.BCD.REVISION ;
      777     6508    5                 DUP.HDR_CODE = %H$REPDECK_ITR ;
      778     6509    5                 DUP.MSG_CODE = %T$RD_ITR ;
      779     6510    5              END /* THEN */ ;
      780     6511    5         ELSE DO ;
      781     6512    5                 ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;
      782     6513    5                 DKEND.BCD_ = BCD_B(BCD#-1) ;
      783     6514    5                 ID.REVISION = DKEND.BCD.REVISION ;
      784     6515    5                 DUP.HDR_CODE = %H$REPDECK_MDR ;
      785     6516    5                 DUP.MSG_CODE = %T$RD_MDR ;
      786     6517    5              END /* ELSE */ ;
      787     6518    5      ELSE DO ;
      788     6519    5              DUP.HDR_CODE = %H$REPDECK_PROG ;
      789     6520    5              DUP.MSG_CODE = %T$RD_GECALL ;
      790     6521    5              DKEND.BCD_ = BCD_B(BCD#-1) ;
      791     6522    5              ID.REVISION = DKEND.BCD.REVISION ;
      792     6523    5           END /* ELSE */ ;
      793     6524    4      RETURN ;
      794     6525
      795     6526    4   END RD_SETUP_PRINT ;
      796     6527        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:30   
      797     6528        /*I*  NAME:        RD_PRINT_REPLACED_DECK
      798     6529              AUTHOR:      Scott S. Sheppard
      799     6530              PURPOSE:     Prints Replaced Deck line
      800     6531              INTERFACE:   TOU$DU_USER_WRITE
      801     6532                           TOU$DU_PRINTER_WRITE
      802     6533              INPUT:       T$RD_INFORM
      803     6534              OUTPUT:      DUP.MSG_CODE - integer message number
      804     6535              DESCRIPTION: This procedure notifies the user and logs to the
      805     6536                           edit listing that the deck has been replaced.
      806     6537        */
      807     6538
      808     6539    3   RD_PRINT_REPLACED_DECK: PROC ;
      809     6540
      810     6541        /* Code */
      811     6542
      812     6543    4      DUP.MSG_CODE = %T$RD_INFORM ;
      813     6544    4      CALL TOU$DU_USER_WRITE ;
      814     6545    4      CALL TOU$DU_PRINTER_WRITE ;
      815     6546    4      RETURN ;
      816     6547
      817     6548    4   END RD_PRINT_REPLACED_DECK ;
      818     6549    3   END RD_PROCESS_TEMP ;
      819     6550    2   END RD_REPLACE_DECK ;
      820     6551    1   END TOU$REPDECK ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:31   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$REPDECK.

   Procedure TOU$REPDECK requires 654 words for executable code.
   Procedure TOU$REPDECK requires 16 words of local(AUTO) storage.

    No errors detected in file TOU$REPDECK.:E05TSI    .

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:32   

 Object Unit name= TOU$REPDECK                                File name= TOU$REPDECK.:E05TOU
 UTS= JUL 30 '97 06:50:15.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  TOU$REPDECK
    1  RoData even  UTS      2      2  TOU$REPDECK
    2   Proc  even  none   654   1216  TOU$REPDECK
    3  RoData even  none     7      7  TOU$REPDECK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  TOU$REPDECK
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:33   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 TOU$B_SHOW_DCBS
 yes     yes           Std       0 TOU$DU_CLOSE_DF
 yes     yes           Std       0 TOU$DU_OPEN_DF
 yes     yes           Std       0 TOU$DU_USER_WRITE
 yes     yes           Std       0 TOU$DU_SET_IFAD_FID
 yes     yes           Std       0 TOU$DU_SET_DF_FID
 yes     yes           Std       0 TOU$DFU_DF_CHECK_FOR_KEY
 yes     yes           Std       0 TOU$DFU_DF_RD_LOG
 yes     yes           Std       0 TOU$DFU_OPEN_TEMP
 yes     yes           Std       0 TOU$CLEAR_IFAD
 yes     yes           Std       0 TOU$DU_OPEN_IFAD
 yes     yes           Std       0 TOU$DU_CLOSE_IFAD
 yes     yes           Std       0 TOU$DFU_CLOSE_TEMP
 yes     yes           Std       0 TOU$GET_CP6_OBJECT
 yes     yes           Std       0 TOU$B_SET_OBJECT_KEY
 yes     yes           Std       0 TOU$GET_BINARY_CARDS
 yes     yes           Std       0 TOU$GET_BCD_CARDS
 yes     yes           Std       4 TOU$CHECKSUM
 yes     yes           Std       0 TOU$DFU_TF_WR_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_TF_WR_OBJECT
 yes     yes           Std       0 TOU$DFU_TF_WR_BINARY
 yes     yes           Std       0 TOU$DFU_DF_RD_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_TF_WR_OBJECT_REFLIST
 yes     yes           Std       0 TOU$B_PRINT_DECK_LINE
 yes     yes           Std       0 TOU$DU_PRINTER_WRITE
 yes     yes           Std       0 TOU$DFU_DF_DL_DECK
 yes     yes           Std       0 TOU$DFU_TF_RD_OBJECT
 yes     yes           Std       0 TOU$DFU_DF_WR_OBJECT
 yes     yes           Std       0 TOU$DFU_TF_RD_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_DF_WR_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_DF_WR_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_TF_RD_BINARY
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:34   
 yes     yes           Std       0 TOU$DFU_DF_WR_BINARY
 yes     yes           Std       0 TOU$DFU_DF_WR_LOG
 yes     yes           Std       0 TOU$DFU_TF_RD_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DU_UPDATE_LOG
 yes     yes           Std       0 TOU$DFU_DF_RD_MASTER_CONTROL
 yes     yes           Std       0 TOU$DFU_DF_WR_CATALOG_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_RD_MASTER_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_RD_CATALOG_CONTROL
 yes     yes           Std       0 TOU$DFU_DF_WR_CATALOG_CONTROL
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DUP                                   BCD_CARD                              BINARY_CARD
     BCD_KEY                               BINARY_KEY                            CATALOG_DATA
     CATALOG_ENTRY_KEY                     DKEND                                 ID
     MASTER_DATA                           MASTER_ENTRY_KEY                      OBJECT
     OBJECT_SEARCH_KEY                     OBJECT_KEY                            OBJECT_REFLIST_KEY
     OBJECT_REFLIST_DATA                   BCD#                                  BIN#
     FILE_EOF                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:35   


        1        1        /*M* TOU$REPDECK     DEckfile Editor Routine REPLACE DECK Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$REPDECK
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine REPlace DECK Function
       14       14              DESCRIPTION: This program is called when the REP DECK function
       15       15                           is invoked by the  CP-6  deckfile  editor driver.
       16       16                           This procedure replaces an object deck in a  CP-6
       17       17                           deckfile and rechecksums catalogs that  reference
       18       18                           the object deck.
       19       19              REFERENCE:   CP-6 Release C0M0
       20       20              LAST UPDATE: 10/27/83
       21       21        */
       22       22        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:36   
       23       23        /*F*  NAME:        TOU$REPDECK
       24       24              DESCRIPTION: Procedure Nesting Hierarchy
       25       25
       26       26              TOU$REPDECK: procedure
       27       27                RD_INIT_DUP: procedure
       28       28                RD_COMMAND_SETUP: procedure ALTRET
       29       29                RD_FIND_DECK: procedure ALTRET
       30       30                RD_REPLACE_DECK: procedure ALTRET
       31       31                   RD_PROCESS_IFAD: procedure ALTRET
       32       32                      RD_CHECK_MATCH: procedure
       33       33                      RD_STORE_OBJECT_DECK: procedure ALTRET
       34       34                      RD_STORE_CATALOG_CHANGES: procedure ALTRET
       35       35                   RD_PROCESS_TEMP: procedure ALTRET
       36       36                      RD_SAVE_CATALOG_CONTROL: procedure ALTRET
       37       37                      RD_SAVE_CATALOG_ENTRY: procedure ALTRET
       38       38                      RD_SAVE_OBJECT_DECK: procedure ALTRET
       39       39                         RD_REPLACE_DECK: procedure ALTRET
       40       40                         RD_ADJUST_REFLIST: procedure ALTRET
       41       41                      RD_SETUP_PRINT: procedure
       42       42                      RD_PRINT_ADDED_DECK: procedure
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:37   
       45       45        TOU$REPDECK: PROC ;

     45  2 000000   000000 700200 xent  TOU$REPDECK  TSX0  ! X66_AUTO_0
         2 000001   000020 000000                    ZERO    16,0

       46       46
       47       47        /* Include Files */
       48       48
       49       49           %INCLUDE TOU_DEER_M ;
       50     1460           %INCLUDE TOU_RQSTS_E ;
       51     1535           %INCLUDE TO_PERR_C ;
       52     2120           %INCLUDE XU_MACRO_C ;
       53     5226
       54     5227        /* Macros */
       55     5228
       56     5229           %DUP (STCLASS = SYMREF) ;
       57     5372           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       58     5384           %BCD_CARD (STCLASS = SYMREF) ;
       59     5404           %BINARY_CARD (STCLASS = SYMREF) ;
       60     5431           %BCD_KEY (STCLASS = SYMREF) ;
       61     5445           %BINARY_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
       62     5459           %BINARY_KEY (STCLASS = SYMREF) ;
       63     5473           %CATALOG_DATA (STCLASS = SYMREF) ;
       64     5487           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       65     5501           %DKEND (STCLASS = SYMREF) ;
       66     5525           %ID (STCLASS = SYMREF) ;
       67     5542           %MASTER_DATA (STCLASS = SYMREF) ;
       68     5556           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       69     5570           %OBJECT (STCLASS = SYMREF) ;
       70     5633           %OBJECT_SEARCH_KEY (STCLASS=SYMREF) ;
       71     5645           %OBJECT_SEARCH_KEY (NAME = NEW_OBJECT_KEY) ;
       72     5657           %OBJECT_KEY (STCLASS = SYMREF) ;
       73     5670           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       74     5684           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       75     5699           %RECORD (STCLASS = SYMREF) ;
       76     5726           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:38   
       77     5727        /* Variables */
       78     5728
       79     5729    1      DCL BCD#                       UBIN WORD SYMREF ;
       80     5730    1      DCL BIN#                       UBIN WORD SYMREF ;
       81     5731    1      DCL FILE_EOF                   UBIN WORD SYMREF ALIGNED;
       82     5732    1      DCL SAVED_DECK#                UBIN HALF HALIGNED ;
       83     5733
       84     5734        /* External Entry Points */
       85     5735
       86     5736    1      DCL TOU$DU_SET_IFAD_FID            ENTRY ALTRET ;
       87     5737    1      DCL TOU$DU_OPEN_IFAD               ENTRY ALTRET ;
       88     5738    1      DCL TOU$DU_CLOSE_IFAD              ENTRY ALTRET ;
       89     5739
       90     5740    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
       91     5741    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
       92     5742    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
       93     5743
       94     5744    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       95     5745    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
       96     5746    1      DCL TOU$DU_UPDATE_LOG              ENTRY ALTRET ;
       97     5747
       98     5748    1      DCL TOU$CHECKSUM                   ENTRY (4) ALTRET ;
       99     5749
      100     5750    1      DCL TOU$CLEAR_IFAD                 ENTRY ALTRET ;
      101     5751
      102     5752    1      DCL TOU$B_SHOW_DCBS                ENTRY ALTRET ;
      103     5753    1      DCL TOU$GET_CP6_OBJECT             ENTRY ALTRET ;
      104     5754    1      DCL TOU$GET_BINARY_CARDS           ENTRY ALTRET ;
      105     5755    1      DCL TOU$GET_BCD_CARDS              ENTRY ALTRET ;
      106     5756    1      DCL TOU$B_SET_OBJECT_KEY           ENTRY ALTRET ;
      107     5757    1      DCL TOU$B_PRINT_DECK_LINE          ENTRY ALTRET ;
      108     5758           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:39   
      109     5759        /* External Entry Points */
      110     5760
      111     5761    1      DCL TOU$DFU_DF_RD_MASTER_CONTROL   ENTRY ALTRET ;
      112     5762    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY     ENTRY ALTRET ;
      113     5763    1      DCL TOU$DFU_DF_RD_CATALOG_CONTROL  ENTRY ALTRET ;
      114     5764    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      115     5765    1      DCL TOU$DFU_DF_RD_LOG              ENTRY ALTRET ;
      116     5766
      117     5767    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
      118     5768    1      DCL TOU$DFU_DF_DL_DECK             ENTRY ALTRET ;
      119     5769
      120     5770    1      DCL TOU$DFU_DF_WR_CATALOG_CONTROL  ENTRY ALTRET ;
      121     5771    1      DCL TOU$DFU_DF_WR_CATALOG_ENTRY    ENTRY ALTRET ;
      122     5772    1      DCL TOU$DFU_DF_WR_OBJECT           ENTRY ALTRET ;
      123     5773    1      DCL TOU$DFU_DF_WR_BINARY           ENTRY ALTRET ;
      124     5774    1      DCL TOU$DFU_DF_WR_BCD_CARDS        ENTRY ALTRET ;
      125     5775    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      126     5776    1      DCL TOU$DFU_DF_WR_LOG              ENTRY ALTRET ;
      127     5777
      128     5778    1      DCL TOU$DFU_OPEN_TEMP              ENTRY ALTRET ;
      129     5779    1      DCL TOU$DFU_CLOSE_TEMP             ENTRY ALTRET ;
      130     5780
      131     5781    1      DCL TOU$DFU_TF_RD_OBJECT           ENTRY ALTRET ;
      132     5782    1      DCL TOU$DFU_TF_RD_BINARY           ENTRY ALTRET ;
      133     5783    1      DCL TOU$DFU_TF_RD_BCD_CARDS        ENTRY ALTRET ;
      134     5784    1      DCL TOU$DFU_TF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      135     5785
      136     5786    1      DCL TOU$DFU_TF_WR_OBJECT           ENTRY ALTRET ;
      137     5787    1      DCL TOU$DFU_TF_WR_BINARY           ENTRY ALTRET ;
      138     5788    1      DCL TOU$DFU_TF_WR_BCD_CARDS        ENTRY ALTRET ;
      139     5789    1      DCL TOU$DFU_TF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      140     5790           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:40   
      141     5791        /* ********************
      142     5792           ********************
      143     5793           **  Main Program  **
      144     5794           ********************
      145     5795           ******************** */
      146     5796
      147     5797    1      CALL RD_INIT_DUP ;

   5797  2 000002   000044 701000 2                  TSX1    RD_INIT_DUP
         2 000003   000000 011000                    NOP     0

      148     5798    1      CALL RD_COMMAND_SETUP ALTRET (ERROR_RETURN) ;

   5798  2 000004   000067 701000 2                  TSX1    RD_COMMAND_SETUP
         2 000005   000033 702000 2                  TSX2    ERROR_RETURN

      149     5799    1      CALL TOU$B_SHOW_DCBS ;

   5799  2 000006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000007   000000 701000 xent               TSX1    TOU$B_SHOW_DCBS
         2 000010   000000 011000                    NOP     0

      150     5800    1      CALL RD_COMPARE_KEYS ALTRET (ERROR_RETURN) ;

   5800  2 000011   000222 701000 2                  TSX1    RD_COMPARE_KEYS
         2 000012   000033 702000 2                  TSX2    ERROR_RETURN

      151     5801    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;

   5801  2 000013   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000014   000000 701000 xent               TSX1    TOU$DU_OPEN_DF
         2 000015   000033 702000 2                  TSX2    ERROR_RETURN

      152     5802    1      CALL RD_FIND_DECK ALTRET (ERROR_RETURN) ;

   5802  2 000016   000303 701000 2                  TSX1    RD_FIND_DECK
         2 000017   000033 702000 2                  TSX2    ERROR_RETURN
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:41   

      153     5803    1      CALL RD_REPLACE_DECK ALTRET (ERROR_RETURN) ;

   5803  2 000020   000333 701000 2                  TSX1    RD_REPLACE_DECK
         2 000021   000033 702000 2                  TSX2    ERROR_RETURN

      154     5804    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;

   5804  2 000022   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000023   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         2 000024   000033 702000 2                  TSX2    ERROR_RETURN

      155     5805
      156     5806        /* NORMAL_RETURN: */
      157     5807    1      DUP.MSG_CODE = %T$RD_SUCCESS;

   5807  2 000025   000156 235007                    LDA     110,DL
         2 000026   000020 755000 xsym               STA     DUP+16

      158     5808    1      CALL TOU$DU_USER_WRITE ;

   5808  2 000027   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000030   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         2 000031   000000 011000                    NOP     0

      159     5809    1      RETURN ;

   5809  2 000032   000000 702200 xent               TSX2  ! X66_ARET

      160     5810
      161     5811    1   ERROR_RETURN:
      162     5812    1      CALL TOU$DU_CLOSE_DF ;

   5812  2 000033   000002 631400 xsym  ERROR_RETURN EPPR1   B_VECTNIL+2
         2 000034   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         2 000035   000000 011000                    NOP     0

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:42   
      163     5813    1      DUP.MSG_CODE = %T$RD_FAILURE;

   5813  2 000036   000157 235007                    LDA     111,DL
         2 000037   000020 755000 xsym               STA     DUP+16

      164     5814    1      CALL TOU$DU_USER_WRITE ;

   5814  2 000040   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000041   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         2 000042   000000 011000                    NOP     0

      165     5815    1      RETURN ;

   5815  2 000043   000000 702200 xent               TSX2  ! X66_ARET

      166     5816
      167     5817        /* ********************
      168     5818           ********************
      169     5819           **  End Of  Main  **
      170     5820           ********************
      171     5821           ******************** */
      172     5822        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:43   
      173     5823        /*I*  NAME:        RD_INIT_DUP
      174     5824              AUTHOR:      Scott S. Sheppard
      175     5825              PURPOSE:     Initilization
      176     5826              INTERFACE:   None called.
      177     5827              INPUT:       Set of System Equates.
      178     5828              OUTPUT:      DUP - Deckfile Utility Parameter
      179     5829              DESCRIPTION: This procedure initializes variables to
      180     5830                           appropriate starting values.
      181     5831        */
      182     5832
      183     5833    1   RD_INIT_DUP: PROC ;

   5833  2 000044   200004 741300       RD_INIT_DUP  STX1  ! SAVED_DECK#+1,,AUTO

      184     5834
      185     5835        /* Code */
      186     5836
      187     5837    2      DUP.HDR_CODE = %H$REPDECK ;

   5837  2 000045   001402 235007                    LDA     770,DL
         2 000046   000021 755000 xsym               STA     DUP+17

      188     5838    2      DUP.LINE_VFC = %SKIP_WRITE ;

   5838  2 000047   142000 236003                    LDQ     50176,DU
         2 000050   000026 756000 xsym               STQ     DUP+22

      189     5839    2      DUP.FORCE_NEW_PAGE = %TRUE ;

   5839  2 000051   400000 236003                    LDQ     -131072,DU
         2 000052   000056 756000 xsym               STQ     DUP+46

      190     5840    2      DUP.IFAD.ME_ALLOWED = %FALSE ;

   5840  2 000053   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 000054   000057 356000 xsym               ANSQ    DUP+47

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:44   
      191     5841    2      DUP.IFAD.ENTERED = %FALSE ;

   5841  2 000055   000000 236000 3                  LDQ     0
         2 000056   000057 356000 xsym               ANSQ    DUP+47

      192     5842    2      DUP.DF.ENTERED = %FALSE ;

   5842  2 000057   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 000060   000104 356000 xsym               ANSQ    DUP+68

      193     5843    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;

   5843  2 000061   000001 235007                    LDA     1,DL
         2 000062   000105 755000 xsym               STA     DUP+69

      194     5844    2      DUP.DF.REPORT_ERROR = %TRUE ;

   5844  2 000063   400000 236007                    LDQ     -131072,DL
         2 000064   000104 256000 xsym               ORSQ    DUP+68

      195     5845    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;

   5845  2 000065   000106 450000 xsym               STZ     DUP+70

      196     5846    2      RETURN ;

   5846  2 000066   000001 702211                    TSX2  ! 1,X1

      197     5847
      198     5848    2   END RD_INIT_DUP ;
      199     5849        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:45   
      200     5850        /*I*  NAME:        RD_COMMAND_SETUP
      201     5851              AUTHOR:      Scott S. Sheppard
      202     5852              PURPOSE:     Sets up REPDECK Command
      203     5853              INTERFACE:   TOU$DU_SET_IFAD_FID
      204     5854                           TOU$DU_SET_DF_FID
      205     5855              INPUT:       DUP.CMD$ - pointer to the parse control block
      206     5856              OUTPUT:      DUP.DF.HOLD_AREA
      207     5857                           DUP.DF.HOLD_AREA_LGTH
      208     5858                           DUP.IFAD.ENTERED
      209     5859                           DUP.DF.ENTERED
      210     5860                           OBJECT_SEARCH_KEY.DATA
      211     5861                           NEW_OBJECT_KEY.DATA
      212     5862              DESCRIPTION: This procedure sets up the REPDECK command from the
      213     5863                           information  entered  by  the  user.  DUP.CMD$ is a
      214     5864                           pointer  to a   parse control block  that  contains
      215     5865                           the tokens entered by the user.
      216     5866                           COMMAND FORMS:
      217     5867              Case 1: RD <old object key> <new object key>
      218     5868              Case 2: RD <ifad fid> <old object key> <new object key>
      219     5869              Case 3: RD <old object key> <new object key> INTO <deckfile fid>
      220     5870              Case 4: RD <ifad fid> <old object key> <new object key> INTO <dekfile fid>
      221     5871        */
      222     5872
      223     5873    1   RD_COMMAND_SETUP: PROC ALTRET ;

   5873  2 000067   200004 741300       RD_COMMAND_* STX1  ! SAVED_DECK#+1,,AUTO

      224     5874
      225     5875    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      226     5876    2      DCL OUTBLK$                    PTR ALIGNED ;
      227     5877           %PARSE$OUT (STCLASS = BASED) ;
      228     5922           %PARSE$SYM (STCLASS = BASED) ;
      229     5960           %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:46   
      230     5961        /* Code */
      231     5962
      232     5963    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;

   5963  2 000070   200005 450100                    STZ     OUTBLK#,,AUTO
         2 000071   000175 710000 2                  TRA     s:5981+3

      233     5964    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;

   5964  2 000072   000017 470400 xsym               LDP0    DUP+15
         2 000073   200005 720100                    LXL0    OUTBLK#,,AUTO
         2 000074   000003 236110                    LDQ     3,X0,PR0
         2 000075   200006 756100                    STQ     OUTBLK$,,AUTO

      234     5965    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;

   5965  2 000076   200006 471500                    LDP1    OUTBLK$,,AUTO
         2 000077   100000 721100                    LXL1    0,,PR1
         2 000100   000014 101003                    CMPX1   12,DU
         2 000101   000103 602011 2                  TNC     s:5965+5,X1
         2 000102   000172 710000 2                  TRA     s:5981
         2 000103   000172 710000 2                  TRA     s:5981
         2 000104   000117 710000 2                  TRA     s:5967
         2 000105   000172 710000 2                  TRA     s:5981
         2 000106   000172 710000 2                  TRA     s:5981
         2 000107   000154 710000 2                  TRA     s:5976
         2 000110   000172 710000 2                  TRA     s:5981
         2 000111   000172 710000 2                  TRA     s:5981
         2 000112   000172 710000 2                  TRA     s:5981
         2 000113   000172 710000 2                  TRA     s:5981
         2 000114   000172 710000 2                  TRA     s:5981
         2 000115   000136 710000 2                  TRA     s:5972
         2 000116   000145 710000 2                  TRA     s:5974

      235     5966    4            CASE (%IFAD_FID) ;

      236     5967    4               DUP.IFAD.ENTERED = %TRUE ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:47   

   5967  2 000117   000400 236003                    LDQ     256,DU
         2 000120   000057 256000 xsym               ORSQ    DUP+47

      237     5968    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   5968  2 000121   100004 236100                    LDQ     4,,PR1
         2 000122   000033 772000                    QRL     27
         2 000123   000000 621006                    EAX1    0,QL
         2 000124   040000 100540                    MLR     fill='040'O
         2 000125   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         2 000126   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      238     5969    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

   5969  2 000127   100004 236100                    LDQ     4,,PR1
         2 000130   000033 772000                    QRL     27
         2 000131   000154 756000 xsym               STQ     DUP+108

      239     5970    4               CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;

   5970  2 000132   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000133   000000 701000 xent               TSX1    TOU$DU_SET_IFAD_FID
         2 000134   000220 702000 2                  TSX2    ERROR
         2 000135   000172 710000 2                  TRA     s:5981

      240     5971    4            CASE (%OLD_OBJKEY) ;

      241     5972    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;

   5972  2 000136   100004 236100                    LDQ     4,,PR1
         2 000137   000033 772000                    QRL     27
         2 000140   000000 622006                    EAX2    0,QL
         2 000141   040000 100540                    MLR     fill='040'O
         2 000142   100004 200012                    ADSC9   4,,PR1                   cn=1,n=*X2
         2 000143   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         2 000144   000172 710000 2                  TRA     s:5981
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:48   

      242     5973    4            CASE (%NEW_OBJKEY) ;

      243     5974    4               NEW_OBJECT_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;

   5974  2 000145   100004 236100                    LDQ     4,,PR1
         2 000146   000033 772000                    QRL     27
         2 000147   000000 622006                    EAX2    0,QL
         2 000150   040000 100540                    MLR     fill='040'O
         2 000151   100004 200012                    ADSC9   4,,PR1                   cn=1,n=*X2
         2 000152   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 000153   000172 710000 2                  TRA     s:5981

      244     5975    4            CASE (%DECKFILE_FID) ;

      245     5976    4               DUP.DF.ENTERED = %TRUE ;

   5976  2 000154   400000 236003                    LDQ     -131072,DU
         2 000155   000104 256000 xsym               ORSQ    DUP+68

      246     5977    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   5977  2 000156   100004 236100                    LDQ     4,,PR1
         2 000157   000033 772000                    QRL     27
         2 000160   000000 621006                    EAX1    0,QL
         2 000161   040000 100540                    MLR     fill='040'O
         2 000162   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         2 000163   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      247     5978    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

   5978  2 000164   100004 236100                    LDQ     4,,PR1
         2 000165   000033 772000                    QRL     27
         2 000166   000154 756000 xsym               STQ     DUP+108

      248     5979    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:49   
   5979  2 000167   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000170   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         2 000171   000220 702000 2                  TSX2    ERROR

      249     5980    4         END /* CASE */ ;

      250     5981    3      END /* DO */ ;

   5981  2 000172   200005 235100                    LDA     OUTBLK#,,AUTO
         2 000173   000001 035007                    ADLA    1,DL
         2 000174   200005 755100                    STA     OUTBLK#,,AUTO
         2 000175   000017 470400 xsym               LDP0    DUP+15
         2 000176   000001 236100                    LDQ     1,,PR0
         2 000177   000022 772000                    QRL     18
         2 000200   200005 116100                    CMPQ    OUTBLK#,,AUTO
         2 000201   000203 600000 2                  TZE     s:5983
         2 000202   000072 603000 2                  TRC     s:5964

      251     5982
      252     5983    2      IF DUP.IFAD.ENTERED

   5983  2 000203   000057 236000 xsym               LDQ     DUP+47
         2 000204   000400 316003                    CANQ    256,DU
         2 000205   000211 601000 2                  TNZ     s:5986

      253     5984    2      THEN /* FID set from DEER command */ ;
      254     5985    2      ELSE CALL TOU$DU_SET_IFAD_FID ALTRET (ERROR) ;

   5985  2 000206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000207   000000 701000 xent               TSX1    TOU$DU_SET_IFAD_FID
         2 000210   000220 702000 2                  TSX2    ERROR

      255     5986    2      IF DUP.DF.ENTERED

   5986  2 000211   000104 234000 xsym               SZN     DUP+68
         2 000212   000216 604000 2                  TMI     s:5989

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:50   
      256     5987    2      THEN /* FID set from DEER command */ ;
      257     5988    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   5988  2 000213   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000214   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         2 000215   000220 702000 2                  TSX2    ERROR

      258     5989    2      RETURN ;

   5989  2 000216   200004 221300                    LDX1  ! SAVED_DECK#+1,,AUTO
         2 000217   000001 702211                    TSX2  ! 1,X1

      259     5990
      260     5991    2   ERROR:
      261     5992    2      ALTRETURN ;

   5992  2 000220   200004 221300       ERROR        LDX1  ! SAVED_DECK#+1,,AUTO
         2 000221   000000 702211                    TSX2  ! 0,X1

      262     5993
      263     5994    2   END RD_COMMAND_SETUP ;
      264     5995        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:51   
      265     5996        /*I*  NAME:        RD_COMPARE_KEYS
      266     5997              AUTHOR:      Scott S. Sheppard
      267     5998              PURPOSE:     Compares Object Keys
      268     5999              INTERFACE:   INDEX Function
      269     6000              INPUT:       OBJECT_SEARCH_KEY.DATA
      270     6001                           NEW_OBJECT_KEY.DATA
      271     6002              OUTPUT:      DUP.MSG_CODE - set to proper message number
      272     6003                           OBJECT_KEY.DATA - set to display old key value
      273     6004                           DUP.ERROR_IMAGE - set to display new key value
      274     6005              DESCRIPTION: This procedure compares the key of the deck to be
      275     6006                           replaced and the key of the deck to take its place
      276     6007                           and  ensures  that  an  object  deck  may only  be
      277     6008                           replaced by a deck that is a different  version of
      278     6009                           the same deck.
      279     6010                           Example Keys:  ITR.COMMON.BTLT.A1
      280     6011                                          MP9000.MTP601.M601.L1
      281     6012                                          MDR.PE3012.P312.C1
      282     6013                                          PLT.TD16CD
      283     6014                                          MLT.MOLTCM
      284     6015                           In the first 3 examples, the trailing .version is
      285     6016                           allowed to vary. In this case, the compare length
      286     6017                           starts out at 11 and increase to the value  where
      287     6018                           the last dot occurs.  In the last 2 examples, the
      288     6019                           keys must be exact. The compare length starts out
      289     6020                           at 11 and is never increased since  no dots occur
      290     6021                           after the 11th position.  So the replacement keys
      291     6022                           for the above examples are:
      292     6023                           Example Keys:  ITR.COMMON.BTLT.xx
      293     6024                                          MP9000.MTP601.M601.xx
      294     6025                                          MDR.PE3012.P312.xx
      295     6026                                          PLT.TD16CD
      296     6027                                          MLT.MOLTCM
      297     6028                              where xx may be any two characters.
      298     6029        */
      299     6030        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:52   
      300     6031    1   RD_COMPARE_KEYS: PROC ALTRET ;

   6031  2 000222   200004 741300       RD_COMPARE_* STX1  ! SAVED_DECK#+1,,AUTO

      301     6032
      302     6033    2      DCL CMPR_LGTH                  UBIN WORD ALIGNED ;
      303     6034    2      DCL DOT_INX                    UBIN WORD ALIGNED ;
      304     6035
      305     6036        /* Code */
      306     6037
      307     6038           /* Find last dot */
      308     6039    2      CMPR_LGTH = 11 ;

   6039  2 000223   000013 235007                    LDA     11,DL
         2 000224   200005 755100                    STA     CMPR_LGTH,,AUTO

      309     6040    2      CALL INDEX (DOT_INX, '.', OBJECT_SEARCH_KEY.DATA, CMPR_LGTH) ;

   6040  2 000225   777750 620005                    EAX0    -24,AL
         2 000226   777777 660003                    ERX0    -1,DU
         2 000227   200005 236100                    LDQ     CMPR_LGTH,,AUTO
         2 000230   000000 124445                    SCM     mask='000'O
         2 000231   000000 000010 xsym               ADSC9   OBJECT_SEARCH_KEY,A      cn=0,n=*X0
         2 000232   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000233   200006 000100                    ARG     DOT_INX,,AUTO
         2 000234   200006 056100                    ASQ     DOT_INX,,AUTO

      310     6041    3      DO WHILE (DOT_INX < 23) ;

   6041  2 000235   200006 236100                    LDQ     DOT_INX,,AUTO
         2 000236   000027 116007                    CMPQ    23,DL
         2 000237   000256 603000 2                  TRC     s:6047

      311     6042    3         CMPR_LGTH = DOT_INX + 1 ;

   6042  2 000240   200006 235100                    LDA     DOT_INX,,AUTO
         2 000241   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:53   
         2 000242   200005 755100                    STA     CMPR_LGTH,,AUTO

      312     6043    3         CALL INDEX (DOT_INX, '.', OBJECT_SEARCH_KEY.DATA, CMPR_LGTH) ;

   6043  2 000243   777750 620005                    EAX0    -24,AL
         2 000244   777777 660003                    ERX0    -1,DU
         2 000245   200005 236100                    LDQ     CMPR_LGTH,,AUTO
         2 000246   000000 124445                    SCM     mask='000'O
         2 000247   000000 000010 xsym               ADSC9   OBJECT_SEARCH_KEY,A      cn=0,n=*X0
         2 000250   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000251   200006 000100                    ARG     DOT_INX,,AUTO
         2 000252   200006 056100                    ASQ     DOT_INX,,AUTO

      313     6044    3      END /* WHILE */ ;

   6044  2 000253   200006 236100                    LDQ     DOT_INX,,AUTO
         2 000254   000027 116007                    CMPQ    23,DL
         2 000255   000240 602000 2                  TNC     s:6042

      314     6045
      315     6046           /* Compare two keys */
      316     6047    2      IF SUBSTR (OBJECT_SEARCH_KEY.DATA, 0, CMPR_LGTH) =

   6047  2 000256   000000 621005                    EAX1    0,AL
         2 000257   200005 722100                    LXL2    CMPR_LGTH,,AUTO
         2 000260   040040 106440                    CMPC    fill='040'O
         2 000261   000000 000011 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=*X1
         2 000262   000000 000012 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=*X2
         2 000263   000266 601000 2                  TNZ     s:6051

      317     6048    2              SUBSTR (NEW_OBJECT_KEY.DATA, 0, CMPR_LGTH)
      318     6049    2      THEN RETURN ;

   6049  2 000264   200004 221300                    LDX1  ! SAVED_DECK#+1,,AUTO
         2 000265   000001 702211                    TSX2  ! 1,X1

      319     6050    3      ELSE DO ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:54   

      320     6051    3              DUP.MSG_CODE = %E$RCK_NO_MATCH ;

   6051  2 000266   000740 235007                    LDA     480,DL
         2 000267   000020 755000 xsym               STA     DUP+16

      321     6052    3              OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;

   6052  2 000270   040000 100400                    MLR     fill='040'O
         2 000271   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         2 000272   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      322     6053    3              DUP.ERROR_IMAGE = NEW_OBJECT_KEY.DATA ;

   6053  2 000273   040000 100400                    MLR     fill='040'O
         2 000274   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 000275   000032 000120 xsym               ADSC9   DUP+26                   cn=0,n=80

      323     6054    3              CALL TOU$DU_USER_WRITE ;

   6054  2 000276   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000277   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         2 000300   000000 011000                    NOP     0

      324     6055    3              ALTRETURN ;

   6055  2 000301   200004 221300                    LDX1  ! SAVED_DECK#+1,,AUTO
         2 000302   000000 702211                    TSX2  ! 0,X1

      325     6056    3           END /* ELSE */ ;
      326     6057
      327     6058    2   END RD_COMPARE_KEYS ;
      328     6059        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:55   
      329     6060        /*I*  NAME:        RD_FIND_DECK
      330     6061              AUTHOR:      Scott S. Sheppard
      331     6062              PURPOSE:     Locates Object Deck
      332     6063              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
      333     6064                           TOU$DFU_DF_RD_LOG
      334     6065                           TOU$DU_USER_WRITE
      335     6066              INPUT:       OBJECT_SEARCH_KEY
      336     6067              OUTPUT:      OBJECT - contains $Object card of deck to be replaced
      337     6068              DESCRIPTION: This procedure locates an object card for the deck
      338     6069                           to be replaced.
      339     6070        */
      340     6071
      341     6072    1   RD_FIND_DECK: PROC ALTRET ;

   6072  2 000303   200004 741300       RD_FIND_DECK STX1  ! SAVED_DECK#+1,,AUTO

      342     6073
      343     6074        /* Code */
      344     6075
      345     6076    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;

   6076  2 000304   040000 100400                    MLR     fill='040'O
         2 000305   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         2 000306   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      346     6077    2      CALL TOU$DFU_DF_CHECK_FOR_KEY ALTRET (NOT_FOUND) ;

   6077  2 000307   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000310   000000 701000 xent               TSX1    TOU$DFU_DF_CHECK_FOR_KEY
         2 000311   000321 702000 2                  TSX2    NOT_FOUND

      347     6078    2      SAVED_DECK# = OBJECT.DECK# ;

   6078  2 000312   000024 220000 xsym               LDX0    OBJECT+20
         2 000313   200003 740100                    STX0    SAVED_DECK#,,AUTO

      348     6079    2      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR) ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:56   

   6079  2 000314   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000315   000000 701000 xent               TSX1    TOU$DFU_DF_RD_LOG
         2 000316   000331 702000 2                  TSX2    ERROR

      349     6080    2      RETURN ;

   6080  2 000317   200004 221300                    LDX1  ! SAVED_DECK#+1,,AUTO
         2 000320   000001 702211                    TSX2  ! 1,X1

      350     6081
      351     6082    2   NOT_FOUND:
      352     6083    2      DUP.MSG_CODE = %E$DFD_NO_OBJ_IN_DF ;

   6083  2 000321   001010 235007       NOT_FOUND    LDA     520,DL
         2 000322   000020 755000 xsym               STA     DUP+16

      353     6084    2      DUP.ERROR_IMAGE = OBJECT_SEARCH_KEY.DATA ;

   6084  2 000323   040000 100400                    MLR     fill='040'O
         2 000324   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         2 000325   000032 000120 xsym               ADSC9   DUP+26                   cn=0,n=80

      354     6085    2      CALL TOU$DU_USER_WRITE ;

   6085  2 000326   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000327   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         2 000330   000000 011000                    NOP     0

      355     6086    2   ERROR:
      356     6087    2      ALTRETURN ;

   6087  2 000331   200004 221300       ERROR        LDX1  ! SAVED_DECK#+1,,AUTO
         2 000332   000000 702211                    TSX2  ! 0,X1

      357     6088
      358     6089    2   END RD_FIND_DECK ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:57   
      359     6090        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:58   
      360     6091        /*I*  NAME:        RD_REPLACE_DECK
      361     6092              AUTHOR:      Scott S. Sheppard
      362     6093              PURPOSE:     Processes IFAD -> temp -> DECKFILE
      363     6094              INTERFACE:   RD_PROCESS_IFAD
      364     6095                           RD_PROCESS_TEMP
      365     6096                           TOU$DU_OPEN_IFAD
      366     6097                           TOU$DU_CLOSE_IFAD
      367     6098                           TOU$CLEAR_IFAD
      368     6099                           TOU$DFU_OPEN_TEMP
      369     6100                           TOU$DFU_CLOSE_TEMP
      370     6101              INPUT:       IFAD input source
      371     6102                           DEER temporary file
      372     6103              OUTPUT:      DEER temporary file
      373     6104                           DECKFILE
      374     6105                           DUP.TEMP.OPEN_TYPE
      375     6106                           DUP.TEMP.CLOSE_TYPE
      376     6107              DESCRIPTION: This procedure adds a deck to a deckfile by procssing
      377     6108                           an IFAD input source and logging all the records that
      378     6109                           must be updated into a temporary file.   If no errors
      379     6110                           occur,  the  deckfile  is  modified  to  contain  the
      380     6111                           updated records from the temporary file.
      381     6112        */
      382     6113        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:59   
      383     6114    1   RD_REPLACE_DECK: PROC ALTRET ;

   6114  2 000333   200004 741300       RD_REPLACE_* STX1  ! SAVED_DECK#+1,,AUTO

      384     6115
      385     6116        /* Code */
      386     6117
      387     6118    2      DUP.TEMP.OPEN_TYPE = %CREATE_FILE ;

   6118  2 000334   000140 450000 xsym               STZ     DUP+96

      388     6119    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;

   6119  2 000335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000336   000000 701000 xent               TSX1    TOU$DFU_OPEN_TEMP
         2 000337   000375 702000 2                  TSX2    ERROR

      389     6120    2      CALL TOU$DU_OPEN_IFAD ALTRET (ERROR) ;

   6120  2 000340   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000341   000000 701000 xent               TSX1    TOU$DU_OPEN_IFAD
         2 000342   000375 702000 2                  TSX2    ERROR

      390     6121    2      CALL TOU$CLEAR_IFAD ;

   6121  2 000343   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000344   000000 701000 xent               TSX1    TOU$CLEAR_IFAD
         2 000345   000000 011000                    NOP     0

      391     6122    2      CALL RD_PROCESS_IFAD ALTRET (ERROR) ;

   6122  2 000346   000407 701000 2                  TSX1    RD_PROCESS_IFAD
         2 000347   000375 702000 2                  TSX2    ERROR

      392     6123    2      CALL TOU$DU_CLOSE_IFAD ALTRET (ERROR) ;

   6123  2 000350   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:60   
         2 000351   000000 701000 xent               TSX1    TOU$DU_CLOSE_IFAD
         2 000352   000375 702000 2                  TSX2    ERROR

      393     6124    2      DUP.TEMP.CLOSE_TYPE = %SAVE_FILE ;

   6124  2 000353   000141 450000 xsym               STZ     DUP+97

      394     6125    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;

   6125  2 000354   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000355   000000 701000 xent               TSX1    TOU$DFU_CLOSE_TEMP
         2 000356   000375 702000 2                  TSX2    ERROR

      395     6126
      396     6127    2      DUP.TEMP.OPEN_TYPE = %READ_FILE ;

   6127  2 000357   000002 235007                    LDA     2,DL
         2 000360   000140 755000 xsym               STA     DUP+96

      397     6128    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;

   6128  2 000361   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000362   000000 701000 xent               TSX1    TOU$DFU_OPEN_TEMP
         2 000363   000375 702000 2                  TSX2    ERROR

      398     6129    2      CALL RD_PROCESS_TEMP ALTRET (ERROR) ;

   6129  2 000364   000604 701000 2                  TSX1    RD_PROCESS_TEMP
         2 000365   000375 702000 2                  TSX2    ERROR

      399     6130    2      DUP.TEMP.CLOSE_TYPE = %DISCARD_FILE ;

   6130  2 000366   000001 235007                    LDA     1,DL
         2 000367   000141 755000 xsym               STA     DUP+97

      400     6131    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:61   
   6131  2 000370   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000371   000000 701000 xent               TSX1    TOU$DFU_CLOSE_TEMP
         2 000372   000375 702000 2                  TSX2    ERROR

      401     6132    2      RETURN ;

   6132  2 000373   200004 221300                    LDX1  ! SAVED_DECK#+1,,AUTO
         2 000374   000001 702211                    TSX2  ! 1,X1

      402     6133
      403     6134    2   ERROR:
      404     6135    2      DUP.TEMP.CLOSE_TYPE = %DISCARD_FILE ;

   6135  2 000375   000001 235007       ERROR        LDA     1,DL
         2 000376   000141 755000 xsym               STA     DUP+97

      405     6136    2      CALL TOU$DFU_CLOSE_TEMP ;

   6136  2 000377   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000400   000000 701000 xent               TSX1    TOU$DFU_CLOSE_TEMP
         2 000401   000000 011000                    NOP     0

      406     6137    2      CALL TOU$DU_CLOSE_IFAD ;

   6137  2 000402   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000403   000000 701000 xent               TSX1    TOU$DU_CLOSE_IFAD
         2 000404   000000 011000                    NOP     0

      407     6138    2      ALTRETURN ;

   6138  2 000405   200004 221300                    LDX1  ! SAVED_DECK#+1,,AUTO
         2 000406   000000 702211                    TSX2  ! 0,X1

      408     6139
      409     6140        /* END RD_REPLACE_DECK */
      410     6141        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:62   
      411     6142        /*I*  NAME:        RD_PROCESS_IFAD
      412     6143              AUTHOR:      Scott S. Sheppard
      413     6144              PURPOSE:     Processes IFAD
      414     6145              INTERFACE:   TOU$GET_CP6_OBJECT
      415     6146                           TOU$GET_BINARY_CARDS
      416     6147                           TOU$GET_BCD_CARDS
      417     6148                           TOU$B_SET_OBJECT_KEY
      418     6149                           RD_CHECK_MATCH
      419     6150                           RD_STORE_OBJECT_DECK
      420     6151                           RD_STORE_REFLIST
      421     6152              INPUT:       IFAD input source
      422     6153              OUTPUT:      DEER temporary file
      423     6154              DESCRIPTION: This procedure wades through the IFAD input source
      424     6155                           locates the $object card for the deck to take  the
      425     6156                           place of the  existing deck and  calls routines to
      426     6157                           save the deckfile changes in the temporary file.
      427     6158        */
      428     6159        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:63   
      429     6160    2   RD_PROCESS_IFAD: PROC ALTRET ;

   6160  2 000407   200006 741300       RD_PROCESS_* STX1  ! DOT_INX,,AUTO

      430     6161
      431     6162    3      DCL MATCHING_OBJECT      BIT (1) CALIGNED ;
      432     6163
      433     6164        /* Code */
      434     6165
      435     6166    3      FILE_EOF = 0 ;

   6166  2 000410   000000 450000 xsym               STZ     FILE_EOF

      436     6167    4      DO UNTIL (MATCHING_OBJECT OR FILE_EOF = 2) ;

      437     6168    4         CALL TOU$GET_CP6_OBJECT ALTRET (ERROR) ;

   6168  2 000411   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000412   000000 701000 xent               TSX1    TOU$GET_CP6_OBJECT
         2 000413   000461 702000 2                  TSX2    ERROR

      438     6169    4         IF FILE_EOF < 2

   6169  2 000414   000000 235000 xsym               LDA     FILE_EOF
         2 000415   000002 115007                    CMPA    2,DL
         2 000416   000434 603000 2                  TRC     s:6177

      439     6170    5         THEN DO ;

      440     6171    5                 CALL TOU$GET_BINARY_CARDS ALTRET (ERROR) ;

   6171  2 000417   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000420   000000 701000 xent               TSX1    TOU$GET_BINARY_CARDS
         2 000421   000461 702000 2                  TSX2    ERROR

      441     6172    5                 CALL TOU$GET_BCD_CARDS ALTRET (ERROR) ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:64   
   6172  2 000422   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000423   000000 701000 xent               TSX1    TOU$GET_BCD_CARDS
         2 000424   000461 702000 2                  TSX2    ERROR

      442     6173    5                 CALL TOU$B_SET_OBJECT_KEY ALTRET (ERROR) ;

   6173  2 000425   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000426   000000 701000 xent               TSX1    TOU$B_SET_OBJECT_KEY
         2 000427   000461 702000 2                  TSX2    ERROR

      443     6174    5                 CALL RD_CHECK_MATCH (MATCHING_OBJECT) ;

   6174  2 000430   200007 630500                    EPPR0   MATCHING_OBJECT,,AUTO
         2 000431   200011 450500                    STP0    MATCHING_OBJECT+2,,AUTO
         2 000432   000463 701000 2                  TSX1    RD_CHECK_MATCH
         2 000433   000000 011000                    NOP     0

      444     6175    5              END /* THEN */ ;

      445     6176    4         ELSE /* EOF returned instead of a $object card. */ ;
      446     6177    4      END /* UNTIL */ ;

   6177  2 000434   200007 234100                    SZN     MATCHING_OBJECT,,AUTO
         2 000435   000441 604000 2                  TMI     s:6179
         2 000436   000000 235000 xsym               LDA     FILE_EOF
         2 000437   000002 115007                    CMPA    2,DL
         2 000440   000411 601000 2                  TNZ     s:6168

      447     6178
      448     6179    3      IF MATCHING_OBJECT

   6179  2 000441   200007 234100                    SZN     MATCHING_OBJECT,,AUTO
         2 000442   000451 605000 2                  TPL     s:6186

      449     6180    4      THEN DO ;

      450     6181    4              CALL RD_STORE_OBJECT_DECK ALTRET (ERROR) ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:65   

   6181  2 000443   000503 701000 2                  TSX1    RD_STORE_OBJECT_DECK
         2 000444   000461 702000 2                  TSX2    ERROR

      451     6182    4              CALL RD_STORE_REFLIST ALTRET (ERROR) ;

   6182  2 000445   000566 701000 2                  TSX1    RD_STORE_REFLIST
         2 000446   000461 702000 2                  TSX2    ERROR

      452     6183    4              RETURN ;

   6183  2 000447   200006 221300                    LDX1  ! DOT_INX,,AUTO
         2 000450   000001 702211                    TSX2  ! 1,X1

      453     6184    4           END /* THEN */ ;
      454     6185    4      ELSE DO ;

      455     6186    4              DUP.MSG_CODE = %E$NPI_NO_OBJECT ;

   6186  2 000451   000716 235007                    LDA     462,DL
         2 000452   000020 755000 xsym               STA     DUP+16

      456     6187    4              OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;

   6187  2 000453   040000 100400                    MLR     fill='040'O
         2 000454   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 000455   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      457     6188    4              CALL TOU$DU_USER_WRITE ;

   6188  2 000456   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000457   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         2 000460   000000 011000                    NOP     0

      458     6189    4   ERROR:
      459     6190    4              ALTRETURN ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:66   
   6190  2 000461   200006 221300       ERROR        LDX1  ! DOT_INX,,AUTO
         2 000462   000000 702211                    TSX2  ! 0,X1

      460     6191    4           END /* ELSE */ ;
      461     6192
      462     6193        /* END RD_PROCESS_IFAD */
      463     6194        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:67   
      464     6195        /*I*  NAME:        RD_CHECK_MATCH
      465     6196              AUTHOR:      Scott S. Sheppard
      466     6197              PURPOSE:     Checks $Object Card
      467     6198              INTERFACE:   None called.
      468     6199              INPUT:       OBJECT.BCD.LIBRARY
      469     6200                           OBJECT_KEY
      470     6201                           NEW_OBJECT_KEY
      471     6202              OUTPUT:      MATCH_FOUND - output parameter
      472     6203              DESCRIPTION: This procedure determines if the current $Object card
      473     6204                           is  the  $Object card  of the deck to be replaced  by
      474     6205                           comparing  the  key  of  the  current object and  the
      475     6206                           key of the object deck to be replaced.
      476     6207        */
      477     6208
      478     6209    3   RD_CHECK_MATCH: PROC (MATCH_FOUND) ;

   6209  2 000463   200010 741300       RD_CHECK_MA* STX1  ! MATCHING_OBJECT+1,,AUTO

      479     6210
      480     6211    4      DCL MATCH_FOUND       BIT (1) CALIGNED ;
      481     6212
      482     6213        /* Code */
      483     6214
      484     6215    4      IF OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA

   6215  2 000464   040000 106400                    CMPC    fill='040'O
         2 000465   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23
         2 000466   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 000467   000475 601000 2                  TNZ     s:6217

      485     6216    4      THEN MATCH_FOUND = %TRUE ;

   6216  2 000470   200011 470500                    LDP0    @MATCH_FOUND,,AUTO
         2 000471   003100 060400                    CSL     bolr='003'O
         2 000472   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         2 000473   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         2 000474   000501 710000 2                  TRA     s:6218
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:68   

      486     6217    4      ELSE MATCH_FOUND = %FALSE ;

   6217  2 000475   200011 470500                    LDP0    @MATCH_FOUND,,AUTO
         2 000476   003100 060400                    CSL     bolr='003'O
         2 000477   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         2 000500   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1

      487     6218    4      RETURN ;

   6218  2 000501   200010 221300                    LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000502   000001 702211                    TSX2  ! 1,X1

      488     6219
      489     6220    4   END RD_CHECK_MATCH ;
      490     6221        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:69   
      491     6222        /*I*  NAME:        RD_STORE_OBJECT_DECK
      492     6223              AUTHORS:     Dave Augustine
      493     6224                           Scott Sheppard
      494     6225              PURPOSE:     Saves an Object Deck
      495     6226              INTERFACE:   TOU$CHECKSUM
      496     6227                           TOU$DFU_TF_WR_OBJECT
      497     6228                           TOU$DFU_TF_WR_BINARY
      498     6229                           TOU$DFU_TF_WR_BCD_CARDS
      499     6230              INPUT:       NEW_OBJECT_KEY
      500     6231                           SAVED_DECK#
      501     6232                           OBJECT
      502     6233              OUTPUT:      OBJECT_KEY
      503     6234                           OBJECT
      504     6235                           BCD_KEY
      505     6236                           BIN#
      506     6237                           BCD#
      507     6238              DESCRIPTION: This procedure saves all of the records for the
      508     6239                           object deck,($object, binary, patches, $dkend),
      509     6240                           in the temporary file.
      510     6241        */
      511     6242        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:70   
      512     6243    3   RD_STORE_OBJECT_DECK: PROC ALTRET ;

   6243  2 000503   200010 741300       RD_STORE_OB* STX1  ! MATCHING_OBJECT+1,,AUTO

      513     6244
      514     6245        /* Code */
      515     6246
      516     6247    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;

   6247  2 000504   040000 100400                    MLR     fill='040'O
         2 000505   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 000506   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      517     6248    4      OBJECT.DECK# = SAVED_DECK# ;

   6248  2 000507   200003 220100                    LDX0    SAVED_DECK#,,AUTO
         2 000510   000024 740000 xsym               STX0    OBJECT+20

      518     6249    4      OBJECT.BINARY_COUNT = BIN# ;

   6249  2 000511   000000 722000 xsym               LXL2    BIN#
         2 000512   000024 442000 xsym               SXL2    OBJECT+20

      519     6250    4      OBJECT.TOTAL_COUNT = BIN# + BCD# + 1;

   6250  2 000513   000000 236000 xsym               LDQ     BIN#
         2 000514   000000 036000 xsym               ADLQ    BCD#
         2 000515   000001 623006                    EAX3    1,QL
         2 000516   000025 743000 xsym               STX3    OBJECT+21

      520     6251    4      CALL TOU$CHECKSUM (0,

   6251  2 000517   000002 236000 3                  LDQ     2
         2 000520   200012 756100                    STQ     I+1,,AUTO
         2 000521   000004 237000 3                  LDAQ    4
         2 000522   200016 757100                    STAQ    I+5,,AUTO
         2 000523   200012 630500                    EPPR0   I+1,,AUTO
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:71   
         2 000524   200015 450500                    STP0    I+4,,AUTO
         2 000525   000006 236000 3                  LDQ     6
         2 000526   200014 756100                    STQ     I+3,,AUTO
         2 000527   200014 630500                    EPPR0   I+3,,AUTO
         2 000530   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000531   000000 701000 xent               TSX1    TOU$CHECKSUM
         2 000532   000000 011000                    NOP     0

      521     6252    4              ADDR (OBJECT),
      522     6253    4              23,
      523     6254    4              OBJECT.CHECKSUM);
      524     6255
      525     6256    4      CALL TOU$DFU_TF_WR_OBJECT ALTRET (ERROR) ;

   6256  2 000533   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000534   000000 701000 xent               TSX1    TOU$DFU_TF_WR_OBJECT
         2 000535   000564 702000 2                  TSX2    ERROR

      526     6257    4      BINARY_KEY.DECK# = OBJECT.DECK# ;

   6257  2 000536   000024 236000 xsym               LDQ     OBJECT+20
         2 000537   000011 772000                    QRL     9
         2 000540   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

      527     6258    4      CALL TOU$DFU_TF_WR_BINARY ALTRET (ERROR) ;

   6258  2 000541   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000542   000000 701000 xent               TSX1    TOU$DFU_TF_WR_BINARY
         2 000543   000564 702000 2                  TSX2    ERROR

      528     6259    4      BCD_KEY.DECK# = OBJECT.DECK# ;

   6259  2 000544   000024 236000 xsym               LDQ     OBJECT+20
         2 000545   000011 772000                    QRL     9
         2 000546   000000 552030 xsym               STBQ    BCD_KEY,'30'O

      529     6260    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:72   

   6260  2 000547   000024 236000 xsym               LDQ     OBJECT+20
         2 000550   777777 376007                    ANQ     -1,DL
         2 000551   200012 756100                    STQ     I+1,,AUTO
         2 000552   000025 236000 xsym               LDQ     OBJECT+21
         2 000553   000022 772000                    QRL     18
         2 000554   200012 136100                    SBLQ    I+1,,AUTO
         2 000555   000001 136007                    SBLQ    1,DL
         2 000556   000000 756000 xsym               STQ     BCD#

      530     6261    4      CALL TOU$DFU_TF_WR_BCD_CARDS ALTRET (ERROR) ;

   6261  2 000557   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000560   000000 701000 xent               TSX1    TOU$DFU_TF_WR_BCD_CARDS
         2 000561   000564 702000 2                  TSX2    ERROR

      531     6262    4      RETURN ;

   6262  2 000562   200010 221300                    LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000563   000001 702211                    TSX2  ! 1,X1

      532     6263
      533     6264    4   ERROR:
      534     6265    4      ALTRETURN ;

   6265  2 000564   200010 221300       ERROR        LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000565   000000 702211                    TSX2  ! 0,X1

      535     6266
      536     6267    4   END RD_STORE_OBJECT_DECK ;
      537     6268        %EJECT;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:73   
      538     6269        /*I*  NAME:        RD_STORE_REFLIST
      539     6270              AUTHOR:      Scott S. Sheppard
      540     6271              PURPOSE:     Saves Object Reference List
      541     6272              INTERFACE:   TOU$DFU_DF_RD_OBJECT_REFLIST
      542     6273                           TOU$DFU_TF_WR_OBJECT_REFLIST
      543     6274              INPUT:       SAVED_DECK#
      544     6275                           OBJECT_REFLIST_DATA
      545     6276              OUTPUT:      OBJECT_REFLIST_KEY
      546     6277                           OBJECT_REFLIST_DATA
      547     6278              DESCRIPTION: This procedure stores the object reference list
      548     6279                           in the temporary file.
      549     6280        */
      550     6281
      551     6282    3   RD_STORE_REFLIST: PROC ALTRET ;

   6282  2 000566   200010 741300       RD_STORE_RE* STX1  ! MATCHING_OBJECT+1,,AUTO

      552     6283
      553     6284        /* Code */
      554     6285
      555     6286    4      OBJECT_REFLIST_KEY.DECK# = SAVED_DECK# ;

   6286  2 000567   200003 236100                    LDQ     SAVED_DECK#,,AUTO
         2 000570   000011 772000                    QRL     9
         2 000571   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

      556     6287    4      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   6287  2 000572   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000573   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT_REFLIST
         2 000574   000602 702000 2                  TSX2    ERROR

      557     6288    4      CALL TOU$DFU_TF_WR_OBJECT_REFLIST ALTRET (ERROR) ;

   6288  2 000575   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000576   000000 701000 xent               TSX1    TOU$DFU_TF_WR_OBJECT_REFLIST
         2 000577   000602 702000 2                  TSX2    ERROR
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:74   

      558     6289    4      RETURN ;

   6289  2 000600   200010 221300                    LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000601   000001 702211                    TSX2  ! 1,X1

      559     6290
      560     6291    4   ERROR:
      561     6292    4      ALTRETURN ;

   6292  2 000602   200010 221300       ERROR        LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000603   000000 702211                    TSX2  ! 0,X1

      562     6293
      563     6294    4   END RD_STORE_REFLIST ;
      564     6295    3   END RD_PROCESS_IFAD ;
      565     6296        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:75   
      566     6297        /*I*  NAME:        RD_PROCESS_TEMP
      567     6298              AUTHOR:      Scott S. Sheppard
      568     6299              PURPOSE:     Processes TEMP Input
      569     6300              INTERFACE:   RD_SAVE_CATALOG_CONTROL
      570     6301                           RD_SAVE_CATALOG_ENTRY
      571     6302                           RD_SAVE_OBJECT_DECK
      572     6303                           RD_SETUP_PRINT
      573     6304                           TOU$B_PRINT_DECK_LINE
      574     6305                           RD_PRINT_ADDED_DECK
      575     6306                           TOU$DU_USER_WRITE
      576     6307                           TOU$DU_PRINTER_WRITE
      577     6308              INPUT:       DEER temporary file - contains catalog records
      578     6309              OUTPUT:      DECKFILE            - new deck copied in
      579     6310                           DUP.BREAK_DISABLED
      580     6311              DESCRIPTION: This procedure processes the temporary file, by
      581     6312                           reading its records and  writing  them into the
      582     6313                           deckfile.
      583     6314        */
      584     6315        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:76   
      585     6316    2   RD_PROCESS_TEMP: PROC ALTRET ;

   6316  2 000604   200006 741300       RD_PROCESS_* STX1  ! DOT_INX,,AUTO

      586     6317
      587     6318        /* Code */
      588     6319
      589     6320    3      DUP.BREAK_DISABLED = %TRUE ;

   6320  2 000605   000400 236003                    LDQ     256,DU
         2 000606   000155 256000 xsym               ORSQ    DUP+109

      590     6321    3      CALL RD_DELETE_OLD_DECK ALTRET (ERROR) ;

   6321  2 000607   000646 701000 2                  TSX1    RD_DELETE_OLD_DECK
         2 000610   000630 702000 2                  TSX2    ERROR

      591     6322    3      CALL RD_SAVE_NEW_DECK ALTRET (ERROR) ;

   6322  2 000611   000667 701000 2                  TSX1    RD_SAVE_NEW_DECK
         2 000612   000630 702000 2                  TSX2    ERROR

      592     6323    3      CALL RD_SAVE_CATALOG_CHANGES ALTRET (ERROR) ;

   6323  2 000613   000774 701000 2                  TSX1    RD_SAVE_CATALOG_CHANGES
         2 000614   000630 702000 2                  TSX2    ERROR

      593     6324    3      CALL RD_SETUP_PRINT ;

   6324  2 000615   001057 701000 2                  TSX1    RD_SETUP_PRINT
         2 000616   000000 011000                    NOP     0

      594     6325    3      CALL TOU$B_PRINT_DECK_LINE ;

   6325  2 000617   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000620   000000 701000 xent               TSX1    TOU$B_PRINT_DECK_LINE
         2 000621   000000 011000                    NOP     0
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:77   

      595     6326    3      CALL RD_PRINT_REPLACED_DECK ;

   6326  2 000622   001203 701000 2                  TSX1    RD_PRINT_REPLACED_DECK
         2 000623   000000 011000                    NOP     0

      596     6327    3      DUP.BREAK_DISABLED = %FALSE ;

   6327  2 000624   000000 236000 3                  LDQ     0
         2 000625   000155 356000 xsym               ANSQ    DUP+109

      597     6328    3      RETURN ;

   6328  2 000626   200006 221300                    LDX1  ! DOT_INX,,AUTO
         2 000627   000001 702211                    TSX2  ! 1,X1

      598     6329
      599     6330    3   ERROR:
      600     6331    3      DUP.BREAK_DISABLED = %FALSE ;

   6331  2 000630   000000 236000 3     ERROR        LDQ     0
         2 000631   000155 356000 xsym               ANSQ    DUP+109

      601     6332    3      DUP.MSG_CODE = %E$NPT_BAD_DECKFILE ;

   6332  2 000632   000674 235007                    LDA     444,DL
         2 000633   000020 755000 xsym               STA     DUP+16

      602     6333    3      DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;

   6333  2 000634   000001 235007                    LDA     1,DL
         2 000635   000106 755000 xsym               STA     DUP+70

      603     6334    3      CALL TOU$DU_USER_WRITE ;

   6334  2 000636   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000637   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:78   
         2 000640   000000 011000                    NOP     0

      604     6335    3      CALL TOU$DU_PRINTER_WRITE ;

   6335  2 000641   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000642   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         2 000643   000000 011000                    NOP     0

      605     6336    3      ALTRETURN ;

   6336  2 000644   200006 221300                    LDX1  ! DOT_INX,,AUTO
         2 000645   000000 702211                    TSX2  ! 0,X1

      606     6337
      607     6338        /* END RD_PROCESS_TEMP */
      608     6339        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:79   
      609     6340        /*I*  NAME:        RD_DELETE_OLD_DECK
      610     6341              AUTHOR:      Scott S. Sheppard
      611     6342              PURPOSE:     Deletes Old Object Deck
      612     6343              INTERFACE:   TOU$DFU_DF_DL_DECK
      613     6344              INPUT:       OBJECT_SEARCH_KEY
      614     6345                           SAVED_DECK#
      615     6346              OUTPUT:      OBJECT_KEY
      616     6347                           BINARY_KEY
      617     6348                           OBJECT_REFLIST_KEY
      618     6349              DESCRIPTION: This procedure deletes the old object deck so that
      619     6350                           the replacement deck may be added.
      620     6351        */
      621     6352
      622     6353    3   RD_DELETE_OLD_DECK: PROC ALTRET ;

   6353  2 000646   200010 741300       RD_DELETE_O* STX1  ! MATCHING_OBJECT+1,,AUTO

      623     6354
      624     6355        /* Code */
      625     6356
      626     6357    4      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;

   6357  2 000647   040000 100400                    MLR     fill='040'O
         2 000650   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         2 000651   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      627     6358    4      BINARY_KEY.DECK# = SAVED_DECK# ;

   6358  2 000652   200003 236100                    LDQ     SAVED_DECK#,,AUTO
         2 000653   000011 772000                    QRL     9
         2 000654   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

      628     6359    4      OBJECT_REFLIST_KEY.DECK# = SAVED_DECK# ;

   6359  2 000655   200003 236100                    LDQ     SAVED_DECK#,,AUTO
         2 000656   000011 772000                    QRL     9
         2 000657   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:80   

      629     6360    4      CALL TOU$DFU_DF_DL_DECK ALTRET (ERROR) ;

   6360  2 000660   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000661   000000 701000 xent               TSX1    TOU$DFU_DF_DL_DECK
         2 000662   000665 702000 2                  TSX2    ERROR

      630     6361    4      RETURN ;

   6361  2 000663   200010 221300                    LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000664   000001 702211                    TSX2  ! 1,X1

      631     6362
      632     6363    4   ERROR:
      633     6364    4      ALTRETURN ;

   6364  2 000665   200010 221300       ERROR        LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000666   000000 702211                    TSX2  ! 0,X1

      634     6365
      635     6366    4   END RD_DELETE_OLD_DECK ;
      636     6367        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:81   
      637     6368        /*I*  NAME:        RD_SAVE_NEW_DECK
      638     6369              AUTHOR:      Scott S. Sheppard
      639     6370              PURPOSE:     Saves an Object Deck
      640     6371              INTERFACE:   TOU$DFU_TF_RD_OBJECT
      641     6372                           TOU$DFU_DF_WR_OBJECT
      642     6373                           TOU$DFU_TF_RD_BINARY
      643     6374                           TOU$DFU_DF_WR_BINARY
      644     6375                           TOU$DFU_TF_RD_BCD_CARDS
      645     6376                           TOU$DFU_DF_WR_BCD_CARDS
      646     6377                           TOU$DFU_TF_RD_OBJECT_REFLIST
      647     6378                           TOU$DFU_DF_WR_OBJECT_REFLIST
      648     6379                           TOU$DU_UPDATE_LOG
      649     6380                           TOU$DFU_DF_WR_LOG
      650     6381              INPUT:       NEW_OBJECT_KEY
      651     6382                           OBJECT
      652     6383              OUTPUT:      OBJECT_KEY
      653     6384                           BINARY_KEY
      654     6385                           BIN#
      655     6386                           BCD_KEY
      656     6387                           BCD#
      657     6388                           OBJECT_REFLIST_KEY
      658     6389              DESCRIPTION: This procedure fetches records from the temporary
      659     6390                           file and saves them in the deckfile, resulting in
      660     6391                           the replacement of the object deck.
      661     6392        */
      662     6393        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:82   
      663     6394    3   RD_SAVE_NEW_DECK: PROC ALTRET ;

   6394  2 000667   200010 741300       RD_SAVE_NEW* STX1  ! MATCHING_OBJECT+1,,AUTO

      664     6395
      665     6396        /* Code */
      666     6397
      667     6398    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;

   6398  2 000670   040000 100400                    MLR     fill='040'O
         2 000671   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 000672   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      668     6399    4      CALL TOU$DFU_TF_RD_OBJECT ALTRET (ERROR) ;

   6399  2 000673   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000674   000000 701000 xent               TSX1    TOU$DFU_TF_RD_OBJECT
         2 000675   000772 702000 2                  TSX2    ERROR

      669     6400    4      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;

   6400  2 000676   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000677   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT
         2 000700   000772 702000 2                  TSX2    ERROR

      670     6401
      671     6402    4      BINARY_KEY.DECK# = OBJECT.DECK# ;

   6402  2 000701   000024 236000 xsym               LDQ     OBJECT+20
         2 000702   000011 772000                    QRL     9
         2 000703   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

      672     6403    4      BIN# = OBJECT.BINARY_COUNT ;

   6403  2 000704   000024 236000 xsym               LDQ     OBJECT+20
         2 000705   777777 376007                    ANQ     -1,DL
         2 000706   000000 756000 xsym               STQ     BIN#
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:83   

      673     6404    4      CALL TOU$DFU_TF_RD_BINARY ALTRET (ERROR) ;

   6404  2 000707   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000710   000000 701000 xent               TSX1    TOU$DFU_TF_RD_BINARY
         2 000711   000772 702000 2                  TSX2    ERROR

      674     6405    4      CALL TOU$DFU_DF_WR_BINARY ALTRET (ERROR) ;

   6405  2 000712   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000713   000000 701000 xent               TSX1    TOU$DFU_DF_WR_BINARY
         2 000714   000772 702000 2                  TSX2    ERROR

      675     6406
      676     6407    4      BCD_KEY.DECK# = OBJECT.DECK# ;

   6407  2 000715   000024 236000 xsym               LDQ     OBJECT+20
         2 000716   000011 772000                    QRL     9
         2 000717   000000 552030 xsym               STBQ    BCD_KEY,'30'O

      677     6408    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;

   6408  2 000720   000024 236000 xsym               LDQ     OBJECT+20
         2 000721   777777 376007                    ANQ     -1,DL
         2 000722   200012 756100                    STQ     I+1,,AUTO
         2 000723   000025 236000 xsym               LDQ     OBJECT+21
         2 000724   000022 772000                    QRL     18
         2 000725   200012 136100                    SBLQ    I+1,,AUTO
         2 000726   000001 136007                    SBLQ    1,DL
         2 000727   000000 756000 xsym               STQ     BCD#

      678     6409    4      CALL TOU$DFU_TF_RD_BCD_CARDS ALTRET (ERROR) ;

   6409  2 000730   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000731   000000 701000 xent               TSX1    TOU$DFU_TF_RD_BCD_CARDS
         2 000732   000772 702000 2                  TSX2    ERROR

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:84   
      679     6410    4      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (ERROR) ;

   6410  2 000733   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000734   000000 701000 xent               TSX1    TOU$DFU_DF_WR_BCD_CARDS
         2 000735   000772 702000 2                  TSX2    ERROR

      680     6411
      681     6412    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   6412  2 000736   000024 236000 xsym               LDQ     OBJECT+20
         2 000737   000011 772000                    QRL     9
         2 000740   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

      682     6413    4      CALL TOU$DFU_TF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   6413  2 000741   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000742   000000 701000 xent               TSX1    TOU$DFU_TF_RD_OBJECT_REFLIST
         2 000743   000772 702000 2                  TSX2    ERROR

      683     6414    4      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;

   6414  2 000744   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000745   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT_REFLIST
         2 000746   000772 702000 2                  TSX2    ERROR

      684     6415
      685     6416    4      DUP.LOG.TYPE = %T$SF_REPDECK ;

   6416  2 000747   000113 235007                    LDA     75,DL
         2 000750   000122 755000 xsym               STA     DUP+82

      686     6417    4      DUP.LOG.CATALOG = ' ' ;

   6417  2 000751   040000 100400                    MLR     fill='040'O
         2 000752   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000753   000123 000025 xsym               ADSC9   DUP+83                   cn=0,n=21

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:85   
      687     6418    4      DUP.LOG.DECK = OBJECT_KEY.DATA ;

   6418  2 000754   040000 100400                    MLR     fill='040'O
         2 000755   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23
         2 000756   000130 200027 xsym               ADSC9   DUP+88                   cn=1,n=23

      688     6419    4      DUP.HOLD_AREA = DUP.IFAD.FID ;

   6419  2 000757   040000 100400                    MLR     fill='040'O
         2 000760   000063 200050 xsym               ADSC9   DUP+51                   cn=1,n=40
         2 000761   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      689     6420    4      CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;

   6420  2 000762   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000763   000000 701000 xent               TSX1    TOU$DU_UPDATE_LOG
         2 000764   000772 702000 2                  TSX2    ERROR

      690     6421    4      CALL TOU$DFU_DF_WR_LOG ALTRET (ERROR) ;

   6421  2 000765   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000766   000000 701000 xent               TSX1    TOU$DFU_DF_WR_LOG
         2 000767   000772 702000 2                  TSX2    ERROR

      691     6422    4      RETURN ;

   6422  2 000770   200010 221300                    LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000771   000001 702211                    TSX2  ! 1,X1

      692     6423
      693     6424    4   ERROR:
      694     6425    4      ALTRETURN ;

   6425  2 000772   200010 221300       ERROR        LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 000773   000000 702211                    TSX2  ! 0,X1

      695     6426
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:86   
      696     6427    4   END RD_SAVE_NEW_DECK ;
      697     6428        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:87   
      698     6429        /*I*  NAME:        RD_SAVE_CATALOG_CHANGES
      699     6430              AUTHOR:      Scott S. Sheppard
      700     6431              PURPOSE:     Saves Catalog Control
      701     6432              INTERFACE:   TOU$DFU_DF_RD_MASTER_CONTROL
      702     6433                           TOU$DFU_DF_RD_MASTER_ENTRY
      703     6434                           TOU$DFU_DF_RD_CATALOG_CONTROL
      704     6435                           TOU$DFU_DF_WR_CATALOG_CONTROL
      705     6436                           TOU$DFU_DF_WR_CATALOG_ENTRY
      706     6437              INPUT:       MASTER_DATA
      707     6438                           OBJECT_REFLIST_DATA
      708     6439                           CATALOG_CONTROL
      709     6440              OUTPUT:      MASTER_ENTRY
      710     6441                           CATALOG_CONTROL
      711     6442              DESCRIPTION: This procedure rechecksums and saves all  catalog
      712     6443                           controls for catalogs that reference the replaced
      713     6444                           deck.
      714     6445        */
      715     6446        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:88   
      716     6447    3   RD_SAVE_CATALOG_CHANGES: PROC ALTRET ;

   6447  2 000774   200010 741300       RD_SAVE_CAT* STX1  ! MATCHING_OBJECT+1,,AUTO

      717     6448
      718     6449    4      DCL I      UBIN HALF HALIGNED ;
      719     6450
      720     6451        /* Code */
      721     6452
      722     6453    4      CALL TOU$DFU_DF_RD_MASTER_CONTROL ALTRET (ERROR) ;

   6453  2 000775   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000776   000000 701000 xent               TSX1    TOU$DFU_DF_RD_MASTER_CONTROL
         2 000777   001055 702000 2                  TSX2    ERROR

      723     6454    4      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;

   6454  2 001000   000000 236000 xsym               LDQ     MASTER_DATA
         2 001001   000011 772000                    QRL     9
         2 001002   000000 552030 xsym               STBQ    MASTER_ENTRY_KEY,'30'O

      724     6455    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;

   6455  2 001003   040000 100400                    MLR     fill='040'O
         2 001004   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 001005   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      725     6456    5      DO I = 0 TO OBJECT_REFLIST_DATA.NUM_REFS - 1 ;

   6456  2 001006   000000 220003                    LDX0    0,DU
         2 001007   200011 740100                    STX0    I,,AUTO
         2 001010   001047 710000 2                  TRA     s:6464+3

      726     6457    5         MASTER_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.ME#(I) ;

   6457  2 001011   200011 235100                    LDA     I,,AUTO
         2 001012   777777 375003                    ANA     -1,DU
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:89   
         2 001013   000020 771000                    ARL     16
         2 001014   000000 100405                    MLR     fill='000'O
         2 001015   000001 000002 xsym               ADSC9   OBJECT_REFLIST_DATA+1,A  cn=0,n=2
         2 001016   000000 600002 xsym               ADSC9   MASTER_ENTRY_KEY         cn=3,n=2

      727     6458    5         CALL TOU$DFU_DF_RD_MASTER_ENTRY ALTRET (ERROR) ;

   6458  2 001017   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001020   000000 701000 xent               TSX1    TOU$DFU_DF_RD_MASTER_ENTRY
         2 001021   001055 702000 2                  TSX2    ERROR

      728     6459    5         CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;

   6459  2 001022   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001023   000000 701000 xent               TSX1    TOU$DFU_DF_RD_CATALOG_CONTROL
         2 001024   001055 702000 2                  TSX2    ERROR

      729     6460    5         CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;

   6460  2 001025   000000 236000 xsym               LDQ     CATALOG_DATA
         2 001026   000011 772000                    QRL     9
         2 001027   000000 552030 xsym               STBQ    CATALOG_ENTRY_KEY,'30'O

      730     6461    5         CATALOG_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.CE#(I) ;

   6461  2 001030   200011 235100                    LDA     I,,AUTO
         2 001031   777777 375003                    ANA     -1,DU
         2 001032   000020 771000                    ARL     16
         2 001033   000000 100405                    MLR     fill='000'O
         2 001034   000001 400002 xsym               ADSC9   OBJECT_REFLIST_DATA+1,A  cn=2,n=2
         2 001035   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

      731     6462    5         CALL TOU$DFU_DF_WR_CATALOG_ENTRY ALTRET (ERROR) ;

   6462  2 001036   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001037   000000 701000 xent               TSX1    TOU$DFU_DF_WR_CATALOG_ENTRY
         2 001040   001055 702000 2                  TSX2    ERROR
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:90   

      732     6463    5         CALL TOU$DFU_DF_WR_CATALOG_CONTROL ALTRET (ERROR) ;

   6463  2 001041   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001042   000000 701000 xent               TSX1    TOU$DFU_DF_WR_CATALOG_CONTROL
         2 001043   001055 702000 2                  TSX2    ERROR

      733     6464    5      END /* DO */ ;

   6464  2 001044   200011 220100                    LDX0    I,,AUTO
         2 001045   000001 621010                    EAX1    1,X0
         2 001046   200011 741100                    STX1    I,,AUTO
         2 001047   200011 236100                    LDQ     I,,AUTO
         2 001050   000022 772000                    QRL     18
         2 001051   000000 116000 xsym               CMPQ    OBJECT_REFLIST_DATA
         2 001052   001011 602000 2                  TNC     s:6457

      734     6465    4      RETURN ;

   6465  2 001053   200010 221300                    LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 001054   000001 702211                    TSX2  ! 1,X1

      735     6466
      736     6467    4   ERROR:
      737     6468    4      ALTRETURN ;

   6468  2 001055   200010 221300       ERROR        LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 001056   000000 702211                    TSX2  ! 0,X1

      738     6469
      739     6470    4   END RD_SAVE_CATALOG_CHANGES ;
      740     6471        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:91   
      741     6472        /*I*  NAME:        RD_SETUP_PRINT
      742     6473              AUTHOR:      Scott S. Sheppard
      743     6474              PURPOSE:     Assign Replacement Variables
      744     6475              INTERFACE:   None Called.
      745     6476              INPUT:       OBJECT.BCD.LIBRARY - used to determine GECALL or not
      746     6477                           OBJECT.BCD.CLASS   - used to determine ITR or MDR
      747     6478                           BCD_B(BCD#-1)      - $DKEND card saved
      748     6479                           H$REPDECK_ITR       T$RD_ITR
      749     6480                           H$REPDECK_MDR      T$RD_MDR
      750     6481                           H$REPDECK_PROG     T$RD_GECALL
      751     6482              OUTPUT:      DUP.HDR_CODE  - set to correct heading
      752     6483                           DUP.MSG_CODE  - used to write messages
      753     6484                           ID.ID         - set for IDENT CODE field
      754     6485                           ID.REVISION  - set for REV field
      755     6486                           DKEND         - $DKEND Card Structure
      756     6487                           OBJECT_KEY    - new object key
      757     6488                           ERROR_IMAGE   - old object key
      758     6489              DESCRIPTION: This procedure assigns variables needed values so
      759     6490                           that TOU$REPLACE  will insert proper  values  for
      760     6491                           the dummy ~strings.
      761     6492        */
      762     6493        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:92   
      763     6494    3   RD_SETUP_PRINT: PROC ;

   6494  2 001057   200010 741300       RD_SETUP_PR* STX1  ! MATCHING_OBJECT+1,,AUTO

      764     6495
      765     6496        /* Code */
      766     6497
      767     6498    4      OBJECT_KEY.DATA = NEW_OBJECT_KEY.DATA ;

   6498  2 001060   040000 100400                    MLR     fill='040'O
         2 001061   000000 000027 0                  ADSC9   NEW_OBJECT_KEY           cn=0,n=23
         2 001062   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      768     6499    4      DUP.ERROR_IMAGE = OBJECT_SEARCH_KEY.DATA ;

   6499  2 001063   040000 100400                    MLR     fill='040'O
         2 001064   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         2 001065   000032 000120 xsym               ADSC9   DUP+26                   cn=0,n=80

      769     6500    4      IF OBJECT.BCD.LIBRARY = 'HMPCJ1'

   6500  2 001066   040000 106400                    CMPC    fill='040'O
         2 001067   000003 600006 xsym               ADSC9   OBJECT+3                 cn=3,n=6
         2 001070   000000 000006 1                  ADSC9   0                        cn=0,n=6
         2 001071   001165 601000 2                  TNZ     s:6519

      770     6501    4      THEN IF OBJECT.BCD.CLASS = 'I' | OBJECT.BCD.CLASS = 'F'

   6501  2 001072   400000 220003                    LDX0    -131072,DU
         2 001073   000005 236000 xsym               LDQ     OBJECT+5
         2 001074   777000 376007                    ANQ     -512,DL
         2 001075   111000 116007                    CMPQ    37376,DL
         2 001076   001100 600000 2                  TZE     s:6501+6
         2 001077   000000 220003                    LDX0    0,DU
         2 001100   400000 222003                    LDX2    -131072,DU
         2 001101   000005 236000 xsym               LDQ     OBJECT+5
         2 001102   777000 376007                    ANQ     -512,DL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:93   
         2 001103   106000 116007                    CMPQ    35840,DL
         2 001104   001106 600000 2                  TZE     s:6501+12
         2 001105   000000 222003                    LDX2    0,DU
         2 001106   000000 636012                    EAQ     0,X2
         2 001107   200012 756100                    STQ     I+1,,AUTO
         2 001110   000000 636010                    EAQ     0,X0
         2 001111   200012 276100                    ORQ     I+1,,AUTO
         2 001112   001144 600000 2                  TZE     s:6512

      771     6502    5         THEN DO ;

      772     6503    5                 IF OBJECT.BCD.CLASS = 'F'

   6503  2 001113   000005 236000 xsym               LDQ     OBJECT+5
         2 001114   777000 376007                    ANQ     -512,DL
         2 001115   106000 116007                    CMPQ    35840,DL
         2 001116   001123 601000 2                  TNZ     s:6505

      773     6504    5                 THEN ID.ID = SUBSTR (OBJECT_KEY.DATA, 7, 6) ;

   6504  2 001117   040000 100400                    MLR     fill='040'O
         2 001120   000002 000006 xsym               ADSC9   OBJECT_KEY+2             cn=0,n=6
         2 001121   000000 000006 xsym               ADSC9   ID                       cn=0,n=6
         2 001122   001126 710000 2                  TRA     s:6506

      774     6505    5                 ELSE ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;

   6505  2 001123   040000 100400                    MLR     fill='040'O
         2 001124   000001 200006 xsym               ADSC9   OBJECT_KEY+1             cn=1,n=6
         2 001125   000000 000006 xsym               ADSC9   ID                       cn=0,n=6

      775     6506    5                 DKEND.BCD_ = BCD_B(BCD#-1) ;

   6506  2 001126   000000 236000 xsym               LDQ     BCD#
         2 001127   000124 402007                    MPY     84,DL
         2 001130   000103 470400 xsym               LDP0    DUP+67
         2 001131   040000 100506                    MLR     fill='040'O
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:94   
         2 001132   077753 000120                    ADSC9   -21,Q,PR0                cn=0,n=80
         2 001133   000000 000120 xsym               ADSC9   DKEND                    cn=0,n=80

      776     6507    5                 ID.REVISION = DKEND.BCD.REVISION ;

   6507  2 001134   040000 100400                    MLR     fill='040'O
         2 001135   000020 400006 xsym               ADSC9   DKEND+16                 cn=2,n=6
         2 001136   000001 400006 xsym               ADSC9   ID+1                     cn=2,n=6

      777     6508    5                 DUP.HDR_CODE = %H$REPDECK_ITR ;

   6508  2 001137   001403 235007                    LDA     771,DL
         2 001140   000021 755000 xsym               STA     DUP+17

      778     6509    5                 DUP.MSG_CODE = %T$RD_ITR ;

   6509  2 001141   000161 235007                    LDA     113,DL
         2 001142   000020 755000 xsym               STA     DUP+16

      779     6510    5              END /* THEN */ ;

   6510  2 001143   001202 710000 2                  TRA     s:6524

      780     6511    5         ELSE DO ;

      781     6512    5                 ID.ID = SUBSTR (OBJECT_KEY.DATA, 4, 6) ;

   6512  2 001144   040000 100400                    MLR     fill='040'O
         2 001145   000001 200006 xsym               ADSC9   OBJECT_KEY+1             cn=1,n=6
         2 001146   000000 000006 xsym               ADSC9   ID                       cn=0,n=6

      782     6513    5                 DKEND.BCD_ = BCD_B(BCD#-1) ;

   6513  2 001147   000000 236000 xsym               LDQ     BCD#
         2 001150   000124 402007                    MPY     84,DL
         2 001151   000103 470400 xsym               LDP0    DUP+67
         2 001152   040000 100506                    MLR     fill='040'O
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:95   
         2 001153   077753 000120                    ADSC9   -21,Q,PR0                cn=0,n=80
         2 001154   000000 000120 xsym               ADSC9   DKEND                    cn=0,n=80

      783     6514    5                 ID.REVISION = DKEND.BCD.REVISION ;

   6514  2 001155   040000 100400                    MLR     fill='040'O
         2 001156   000020 400006 xsym               ADSC9   DKEND+16                 cn=2,n=6
         2 001157   000001 400006 xsym               ADSC9   ID+1                     cn=2,n=6

      784     6515    5                 DUP.HDR_CODE = %H$REPDECK_MDR ;

   6515  2 001160   001404 235007                    LDA     772,DL
         2 001161   000021 755000 xsym               STA     DUP+17

      785     6516    5                 DUP.MSG_CODE = %T$RD_MDR ;

   6516  2 001162   000162 235007                    LDA     114,DL
         2 001163   000020 755000 xsym               STA     DUP+16

      786     6517    5              END /* ELSE */ ;

   6517  2 001164   001202 710000 2                  TRA     s:6524

      787     6518    5      ELSE DO ;

      788     6519    5              DUP.HDR_CODE = %H$REPDECK_PROG ;

   6519  2 001165   001405 235007                    LDA     773,DL
         2 001166   000021 755000 xsym               STA     DUP+17

      789     6520    5              DUP.MSG_CODE = %T$RD_GECALL ;

   6520  2 001167   000160 236007                    LDQ     112,DL
         2 001170   000020 756000 xsym               STQ     DUP+16

      790     6521    5              DKEND.BCD_ = BCD_B(BCD#-1) ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:96   
   6521  2 001171   000000 236000 xsym               LDQ     BCD#
         2 001172   000124 402007                    MPY     84,DL
         2 001173   000103 470400 xsym               LDP0    DUP+67
         2 001174   040000 100506                    MLR     fill='040'O
         2 001175   077753 000120                    ADSC9   -21,Q,PR0                cn=0,n=80
         2 001176   000000 000120 xsym               ADSC9   DKEND                    cn=0,n=80

      791     6522    5              ID.REVISION = DKEND.BCD.REVISION ;

   6522  2 001177   040000 100400                    MLR     fill='040'O
         2 001200   000020 400006 xsym               ADSC9   DKEND+16                 cn=2,n=6
         2 001201   000001 400006 xsym               ADSC9   ID+1                     cn=2,n=6

      792     6523    5           END /* ELSE */ ;

      793     6524    4      RETURN ;

   6524  2 001202   000001 702211                    TSX2  ! 1,X1

      794     6525
      795     6526    4   END RD_SETUP_PRINT ;
      796     6527        %EJECT ;
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:97   
      797     6528        /*I*  NAME:        RD_PRINT_REPLACED_DECK
      798     6529              AUTHOR:      Scott S. Sheppard
      799     6530              PURPOSE:     Prints Replaced Deck line
      800     6531              INTERFACE:   TOU$DU_USER_WRITE
      801     6532                           TOU$DU_PRINTER_WRITE
      802     6533              INPUT:       T$RD_INFORM
      803     6534              OUTPUT:      DUP.MSG_CODE - integer message number
      804     6535              DESCRIPTION: This procedure notifies the user and logs to the
      805     6536                           edit listing that the deck has been replaced.
      806     6537        */
      807     6538
      808     6539    3   RD_PRINT_REPLACED_DECK: PROC ;

   6539  2 001203   200010 741300       RD_PRINT_RE* STX1  ! MATCHING_OBJECT+1,,AUTO

      809     6540
      810     6541        /* Code */
      811     6542
      812     6543    4      DUP.MSG_CODE = %T$RD_INFORM ;

   6543  2 001204   000163 235007                    LDA     115,DL
         2 001205   000020 755000 xsym               STA     DUP+16

      813     6544    4      CALL TOU$DU_USER_WRITE ;

   6544  2 001206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001207   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         2 001210   000000 011000                    NOP     0

      814     6545    4      CALL TOU$DU_PRINTER_WRITE ;

   6545  2 001211   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001212   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         2 001213   000000 011000                    NOP     0

      815     6546    4      RETURN ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:98   
   6546  2 001214   200010 221300                    LDX1  ! MATCHING_OBJECT+1,,AUTO
         2 001215   000001 702211                    TSX2  ! 1,X1

NEW_OBJECT_KEY
 Sect OctLoc
   0     000   040040 040040   040040 040040   040040 040040   040040 040040
   0     004   040040 040040   040040 040***                                           .

(unnamed)
 Sect OctLoc
   1     000   110115 120103   112061 040040                                    HMPCJ1

(unnamed)
 Sect OctLoc
   3     000   777377 777777   056040 040040   000000 006000   000000 000027    .....   ........
   3     004   000003 006000   000027 006000   000002 006000                    ............
      816     6547
      817     6548    4   END RD_PRINT_REPLACED_DECK ;
      818     6549    3   END RD_PROCESS_TEMP ;
      819     6550    2   END RD_REPLACE_DECK ;
      820     6551    1   END TOU$REPDECK ;

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:99   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$REPDECK.
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:100  

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    45-  6551    238    77     2      0  y   y    0   1 TOU$REPDECK
  1  5833-  5848     11     0     2     44  y   y    0     2 RD_INIT_DUP
  2  5873-  5994     26     9     2     67  y y y    0     2 RD_COMMAND_SETUP
  3  6031-  6058     15     2     2    222  y y y    0     2 RD_COMPARE_KEYS
  4  6072-  6089     10     0     2    303  y y y    0     2 RD_FIND_DECK
  5  6114-  6550    160     0     2    333  y y y    0     2 RD_REPLACE_DECK
  6  6160-  6295     47     1     2    407  y y y    0      3 RD_PROCESS_IFAD
  7  6209-  6220      5     2     2    463  y   y    1       4 RD_CHECK_MATCH
  8  6243-  6267     14     0     2    503  y y y    0       4 RD_STORE_OBJECT_DECK
  9  6282-  6294      6     0     2    566  y y y    0       4 RD_STORE_REFLIST
 10  6316-  6549     94     0     2    604  y y y    0      3 RD_PROCESS_TEMP
 11  6353-  6366      7     0     2    646  y y y    0       4 RD_DELETE_OLD_DECK
 12  6394-  6427     23     0     2    667  y y y    0       4 RD_SAVE_NEW_DECK
 13  6447-  6470     15     1     2    774  y y y    0       4 RD_SAVE_CATALOG_CHANGES
 14  6494-  6526     28     0     2   1057  y   y    0       4 RD_SETUP_PRINT
 15  6539-  6548      5     0     2   1203  y   y    0       4 RD_PRINT_REPLACED_DECK
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:101  

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              45   2      0 Proc    0                              5797   2      2 Call    0
            5798   2      4 Call    0                              5799   2      6 Call    0
            5800   2     11 Call    0                              5801   2     13 Call    0
            5802   2     16 Call    0                              5803   2     20 Call    0
            5804   2     22 Call    0                              5807   2     25 Assign  0
            5808   2     27 Call    0                              5809   2     32 Return  0
            5812   2     33 Call    0 ERROR_RETURN                 5813   2     36 Assign  0
            5814   2     40 Call    0                              5815   2     43 Return  0
            5833   2     44 Proc    1                              5837   2     45 Assign  1
            5838   2     47 Assign  1                              5839   2     51 Assign  1
            5840   2     53 Assign  1                              5841   2     55 Assign  1
            5842   2     57 Assign  1                              5843   2     61 Assign  1
            5844   2     63 Assign  1                              5845   2     65 Assign  1
            5846   2     66 Return  1                              5873   2     67 Proc    2
            5963   2     70 DoIndx  2                           $  5964   2     72 Assign  2
    $$$$$$  5965   2     76 DoCase  2                              5966   2    117 Case    2
            5967   2    117 Assign  2                           $  5968   2    121 Assign  2
            5969   2    127 Assign  2                              5970   2    132 Call    2
            5971   2    136 Case    2                           $  5972   2    136 Assign  2
            5973   2    145 Case    2                           $  5974   2    145 Assign  2
            5975   2    154 Case    2                              5976   2    154 Assign  2
         $  5977   2    156 Assign  2                              5978   2    164 Assign  2
            5979   2    167 Call    2                              5980   2    172 EndCse  2
        $$  5981   2    172 EndInd  2                              5983   2    203 If      2
            5985   2    206 Call    2                              5986   2    211 If      2
            5988   2    213 Call    2                              5989   2    216 Return  2
            5992   2    220 Altret  2 ERROR                        6031   2    222 Proc    3
            6039   2    223 Assign  3                         $$$  6040   2    225 IntCal  3
            6041   2    235 DoWhil  3                              6042   2    240 Assign  3
       $$$  6043   2    243 IntCal  3                              6044   2    253 EndWhi  3
         $  6047   2    256 If      3                              6049   2    264 Return  3
            6050   2    266 Do      3                              6051   2    266 Assign  3
            6052   2    270 Assign  3                              6053   2    273 Assign  3
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:102  
            6054   2    276 Call    3                              6055   2    301 Altret  3
            6072   2    303 Proc    4                              6076   2    304 Assign  4
            6077   2    307 Call    4                              6078   2    312 Assign  4
            6079   2    314 Call    4                              6080   2    317 Return  4
            6083   2    321 Assign  4 NOT_FOUND                    6084   2    323 Assign  4
            6085   2    326 Call    4                              6087   2    331 Altret  4 ERROR
            6114   2    333 Proc    5                              6118   2    334 Assign  5
            6119   2    335 Call    5                              6120   2    340 Call    5
            6121   2    343 Call    5                              6122   2    346 Call    5
            6123   2    350 Call    5                              6124   2    353 Assign  5
            6125   2    354 Call    5                              6127   2    357 Assign  5
            6128   2    361 Call    5                              6129   2    364 Call    5
            6130   2    366 Assign  5                              6131   2    370 Call    5
            6132   2    373 Return  5                              6135   2    375 Assign  5 ERROR
            6136   2    377 Call    5                              6137   2    402 Call    5
            6138   2    405 Altret  5                              6160   2    407 Proc    6
            6166   2    410 Assign  6                              6167   2    411 DoUntl  6
            6168   2    411 Call    6                              6169   2    414 If      6
            6170   2    417 Do      6                              6171   2    417 Call    6
            6172   2    422 Call    6                              6173   2    425 Call    6
            6174   2    430 Call    6                              6175   2    434 EndDo   6
            6177   2    434 EndUnt  6                              6179   2    441 If      6
            6180   2    443 Do      6                              6181   2    443 Call    6
            6182   2    445 Call    6                              6183   2    447 Return  6
            6185   2    451 Do      6                              6186   2    451 Assign  6
            6187   2    453 Assign  6                              6188   2    456 Call    6
            6190   2    461 Altret  6 ERROR                        6209   2    463 Proc    7
            6215   2    464 If      7                         $$$  6216   2    470 Assign  7
       $$$  6217   2    475 Assign  7                              6218   2    501 Return  7
            6243   2    503 Proc    8                              6247   2    504 Assign  8
            6248   2    507 Assign  8                              6249   2    511 Assign  8
            6250   2    513 Assign  8                         $$$  6251   2    517 Call    8
            6256   2    533 Call    8                              6257   2    536 Assign  8
            6258   2    541 Call    8                              6259   2    544 Assign  8
         $  6260   2    547 Assign  8                              6261   2    557 Call    8
            6262   2    562 Return  8                              6265   2    564 Altret  8 ERROR
            6282   2    566 Proc    9                              6286   2    567 Assign  9
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:103  
            6287   2    572 Call    9                              6288   2    575 Call    9
            6289   2    600 Return  9                              6292   2    602 Altret  9 ERROR
            6316   2    604 Proc   10                              6320   2    605 Assign 10
            6321   2    607 Call   10                              6322   2    611 Call   10
            6323   2    613 Call   10                              6324   2    615 Call   10
            6325   2    617 Call   10                              6326   2    622 Call   10
            6327   2    624 Assign 10                              6328   2    626 Return 10
            6331   2    630 Assign 10 ERROR                        6332   2    632 Assign 10
            6333   2    634 Assign 10                              6334   2    636 Call   10
            6335   2    641 Call   10                              6336   2    644 Altret 10
            6353   2    646 Proc   11                              6357   2    647 Assign 11
            6358   2    652 Assign 11                              6359   2    655 Assign 11
            6360   2    660 Call   11                              6361   2    663 Return 11
            6364   2    665 Altret 11 ERROR                        6394   2    667 Proc   12
            6398   2    670 Assign 12                              6399   2    673 Call   12
            6400   2    676 Call   12                              6402   2    701 Assign 12
            6403   2    704 Assign 12                              6404   2    707 Call   12
            6405   2    712 Call   12                              6407   2    715 Assign 12
         $  6408   2    720 Assign 12                              6409   2    730 Call   12
            6410   2    733 Call   12                              6412   2    736 Assign 12
            6413   2    741 Call   12                              6414   2    744 Call   12
            6416   2    747 Assign 12                              6417   2    751 Assign 12
            6418   2    754 Assign 12                              6419   2    757 Assign 12
            6420   2    762 Call   12                              6421   2    765 Call   12
            6422   2    770 Return 12                              6425   2    772 Altret 12 ERROR
            6447   2    774 Proc   13                              6453   2    775 Call   13
            6454   2   1000 Assign 13                              6455   2   1003 Assign 13
            6456   2   1006 DoIndx 13                           $  6457   2   1011 Assign 13
            6458   2   1017 Call   13                              6459   2   1022 Call   13
            6460   2   1025 Assign 13                           $  6461   2   1030 Assign 13
            6462   2   1036 Call   13                              6463   2   1041 Call   13
         $  6464   2   1044 EndInd 13                              6465   2   1053 Return 13
            6468   2   1055 Altret 13 ERROR                        6494   2   1057 Proc   14
            6498   2   1060 Assign 14                              6499   2   1063 Assign 14
            6500   2   1066 If     14                        $$$$  6501   2   1072 If     14
            6502   2   1113 Do     14                              6503   2   1113 If     14
            6504   2   1117 Assign 14                              6505   2   1123 Assign 14
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:104  
       $$$  6506   2   1126 Assign 14                              6507   2   1134 Assign 14
            6508   2   1137 Assign 14                              6509   2   1141 Assign 14
            6510   2   1143 EndDo  14                              6511   2   1144 Do     14
            6512   2   1144 Assign 14                         $$$  6513   2   1147 Assign 14
            6514   2   1155 Assign 14                              6515   2   1160 Assign 14
            6516   2   1162 Assign 14                              6517   2   1164 EndDo  14
            6518   2   1165 Do     14                              6519   2   1165 Assign 14
            6520   2   1167 Assign 14                         $$$  6521   2   1171 Assign 14
            6522   2   1177 Assign 14                              6523   2   1202 EndDo  14
            6524   2   1202 Return 14                              6539   2   1203 Proc   15
            6543   2   1204 Assign 15                              6544   2   1206 Call   15
            6545   2   1211 Call   15                              6546   2   1214 Return 15


  **** Statement type totals  ****

    88 Assign    70 Call       9 If         4 Case      17 Return    11 Altret
     2 IntCal     1 DoUntl     2 DoIndx     1 DoWhil     1 DoCase     7 Do
     1 EndUnt     2 EndInd     1 EndWhi     1 EndCse     4 EndDo     16 Proc
    12 Labels

 # major stmts=  202 Code/major= 3.23 # stmts=  238 Code/stmt= 2.74  Point total=102.6
 Cost/major stmt=  2.7 Cost/stmt=  2.3 Total cost=    560.5

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$
   6-8
  8-10  $$$
 10-12
 12-14
 14-16
 16-18
 18-20
 20-22
 22-??
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:105  

 **** Variables and constants ****

  ****  Section 000  Data  TOU$REPDECK

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(207)   r     1 NEW_OBJECT_KEY
     0-0-0/c CHAR(23)    r         2 DATA


  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/w PTR         r     1 @MATCH_FOUND               5-0-0/w UBIN        r     1 CMPR_LGTH
     6-0-0/w UBIN        r     1 DOT_INX                   11-0-0/h UBIN(18)    r     1 I
     7-0-0/c BIT         r     1 MATCHING_OBJECT           *0-0-0/c BIT         r     1 MATCH_FOUND
     5-0-0/w UBIN        r     1 OUTBLK#                    6-0-0/w PTR         r     1 OUTBLK$
     3-0-0/h UBIN(18)    r     1 SAVED_DECK#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 BCD#                       0-0-0/w UBIN        r     1 BIN#
     0-0-0/w UBIN        r     1 FILE_EOF

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(45)    r     1 BCD_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(45)    r     1 BINARY_KEY
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:106  
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/w STRC(72)    r     1 CATALOG_DATA
     0-0-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(45)    r     1 CATALOG_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(756)   r     1 DKEND
     0-0-0/c STRC(720)   r         2 BCD
    20-2-0/c CHAR(6)     r          3 REVISION
     0-0-0/c CHAR(80)    r         2 BCD_

     0-0-0/d STRC(5220)  r     1 DUP
    17-0-0/w PTR         r         2 CMD$
    20-0-0/w UBIN        r         2 MSG_CODE
    21-0-0/w UBIN        r         2 HDR_CODE
    26-0-0/c CHAR        r         2 LINE_VFC
    32-0-0/c CHAR(80)    r         2 ERROR_IMAGE
    56-0-0/c BIT         r         2 FORCE_NEW_PAGE
    57-0-0/w STRC(576)   r         2 IFAD
    57-0-0/c BIT         r          3 ME_ALLOWED
    57-1-0/c BIT         r          3 ENTERED
    63-1-0/c CHAR(40)    r          3 FID
   100-0-0/d STRC(72)    r         2 BINARY_V
   101-0-0/b PTR         r          3 PTR$
   102-0-0/d STRC(72)    r         2 BCD_V
   103-0-0/b PTR         r          3 PTR$
   104-0-0/w STRC(504)   r         2 DF
   104-0-0/c BIT         r          3 ENTERED
   104-2-0/c BIT         r          3 REPORT_ERROR
   105-0-0/w UBIN        r          3 OPEN_TYPE
   106-0-0/w UBIN        r          3 CLOSE_TYPE
   122-0-0/w STRC(432)   r         2 LOG
   122-0-0/w UBIN        r          3 TYPE
   123-0-0/c CHAR(21)    r          3 CATALOG
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:107  
   130-1-0/c CHAR(23)    r          3 DECK
   140-0-0/w STRC(72)    r         2 TEMP
   140-0-0/w UBIN        r          3 OPEN_TYPE
   141-0-0/w UBIN        r          3 CLOSE_TYPE
   142-0-0/c CHAR(40)    r         2 HOLD_AREA
   154-0-0/w UBIN        r         2 HOLD_AREA_LGTH
   155-1-0/c BIT         r         2 BREAK_DISABLED

     0-0-0/c STRC(162)   r     1 ID
     0-0-0/c CHAR(6)     r         2 ID
     1-2-0/c CHAR(6)     r         2 REVISION

     0-0-0/w STRC(72)    r     1 MASTER_DATA
     0-0-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(45)    r     1 MASTER_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(864)   r     1 OBJECT
     0-0-0/w STRC(720)   r         2 BCD
     3-3-0/c CHAR(6)     r          3 LIBRARY
     5-2-0/c CHAR        r          3 CLASS
    24-0-0/b UBIN(18)    r         2 DECK#
    24-2-0/b UBIN(18)    r         2 BINARY_COUNT
    25-0-0/b UBIN(18)    r         2 TOTAL_COUNT
    27-0-0/w UBIN        r         2 CHECKSUM

     0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-1-0/c CHAR(23)    r         2 DATA

     0-0-0/w STRC(576)   r     1 OBJECT_REFLIST_DATA
     0-0-0/b UBIN        r         2 NUM_REFS
     1-0-0/b STRC        r         2 REFS(0:14)
     1-0-0/b UBIN(18)    r          3 ME#
     1-2-0/b UBIN(18)    r          3 CE#

PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:108  
     0-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(207)   r     1 OBJECT_SEARCH_KEY
     0-0-0/c CHAR(23)    r         2 DATA


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(84)    r     1 BCD_B(0:199)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-2-0/h UBIN(18)    r         2 CODE
     1-0-0/h UBIN(18)    r         2 NSUBLKS
     3-0-0/b PTR         r         2 SUBLK$(0:0)

     0-0-0/w ASTR(153)   r     1 OUT$SYM
     4-0-0/c UBIN(9)     r         2 COUNT
     4-1-0/c ACHR        r         2 TEXT



   Procedure TOU$REPDECK requires 654 words for executable code.
   Procedure TOU$REPDECK requires 16 words of local(AUTO) storage.

    No errors detected in file TOU$REPDECK.:E05TSI    .
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:109  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:110  
          MINI XREF LISTING

BCD#
      5729**DCL      6250>>ASSIGN   6260<<ASSIGN   6408<<ASSIGN   6506>>ASSIGN   6513>>ASSIGN   6521>>ASSIGN
BCD_B
      5381**DCL      6506>>ASSIGN   6513>>ASSIGN   6521>>ASSIGN
BCD_CARD
      5393**DCL      5402--REDEF
BCD_CARD.BCD
      5394**DCL      5400--REDEF
BCD_KEY.DECK#
      5442**DCL      6259<<ASSIGN   6407<<ASSIGN
BIN#
      5730**DCL      6249>>ASSIGN   6250>>ASSIGN   6403<<ASSIGN
BINARY_CARD
      5413**DCL      5428--REDEF
BINARY_CARD.DATA
      5422**DCL      5423--REDEF
BINARY_CARD.LBL_SEQ
      5424**DCL      5425--REDEF
BINARY_CARD.WD1
      5414**DCL      5419--REDEF
BINARY_KEY.DECK#
      5470**DCL      6257<<ASSIGN   6358<<ASSIGN   6402<<ASSIGN
CATALOG_DATA.DECK#
      5483**DCL      6460>>ASSIGN
CATALOG_ENTRY_KEY.DECK#
      5498**DCL      6460<<ASSIGN
CATALOG_ENTRY_KEY.ENTRY#
      5499**DCL      6461<<ASSIGN
CMPR_LGTH IN PROCEDURE RD_COMPARE_KEYS
      6033**DCL      6039<<ASSIGN   6040>>CALLBLT  6042<<ASSIGN   6043>>CALLBLT  6047>>IF       6047>>IF
DKEND
      5510**DCL      5523--REDEF
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:111  
DKEND.BCD
      5511**DCL      5521--REDEF
DKEND.BCD.REVISION
      5518**DCL      6507>>ASSIGN   6514>>ASSIGN   6522>>ASSIGN
DKEND.BCD_
      5521**DCL      6506<<ASSIGN   6513<<ASSIGN   6521<<ASSIGN
DOT_INX IN PROCEDURE RD_COMPARE_KEYS
      6034**DCL      6040<<CALLBLT  6041>>DOWHILE  6042>>ASSIGN   6043<<CALLBLT
DUP.BCD_V.PTR$
      5312**DCL      5381--IMP-PTR  6506>>ASSIGN   6513>>ASSIGN   6521>>ASSIGN
DUP.BINARY_V.PTR$
      5307**DCL      5454--IMP-PTR
DUP.BREAK_DISABLED
      5358**DCL      6320<<ASSIGN   6327<<ASSIGN   6331<<ASSIGN
DUP.CMD$
      5256**DCL      5963>>DOINDEX  5964>>ASSIGN
DUP.DF.CLOSE_TYPE
      5324**DCL      5845<<ASSIGN   6333<<ASSIGN
DUP.DF.ENTERED
      5316**DCL      5842<<ASSIGN   5976<<ASSIGN   5986>>IF
DUP.DF.OPEN_TYPE
      5322**DCL      5843<<ASSIGN
DUP.DF.REPORT_ERROR
      5320**DCL      5844<<ASSIGN
DUP.ERROR_IMAGE
      5278**DCL      6053<<ASSIGN   6084<<ASSIGN   6499<<ASSIGN
DUP.FORCE_NEW_PAGE
      5280**DCL      5839<<ASSIGN
DUP.HDR_CODE
      5261**DCL      5837<<ASSIGN   6508<<ASSIGN   6515<<ASSIGN   6519<<ASSIGN
DUP.HOLD_AREA
      5351**DCL      5968<<ASSIGN   5977<<ASSIGN   6419<<ASSIGN
DUP.HOLD_AREA_LGTH
      5353**DCL      5969<<ASSIGN   5978<<ASSIGN
DUP.IFAD.ENTERED
      5286**DCL      5841<<ASSIGN   5967<<ASSIGN   5983>>IF
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:112  
DUP.IFAD.FID
      5300**DCL      6419>>ASSIGN
DUP.IFAD.ME_ALLOWED
      5284**DCL      5840<<ASSIGN
DUP.LINE_VFC
      5270**DCL      5838<<ASSIGN
DUP.LOG.CATALOG
      5334**DCL      6417<<ASSIGN
DUP.LOG.DECK
      5336**DCL      6418<<ASSIGN
DUP.LOG.TYPE
      5332**DCL      6416<<ASSIGN
DUP.LOG_V
      5338**DCL      5343--REDEF
DUP.MSG_CODE
      5259**DCL      5807<<ASSIGN   5813<<ASSIGN   6051<<ASSIGN   6083<<ASSIGN   6186<<ASSIGN   6332<<ASSIGN
      6509<<ASSIGN   6516<<ASSIGN   6520<<ASSIGN   6543<<ASSIGN
DUP.TEMP.CLOSE_TYPE
      5348**DCL      6124<<ASSIGN   6130<<ASSIGN   6135<<ASSIGN
DUP.TEMP.OPEN_TYPE
      5346**DCL      6118<<ASSIGN   6127<<ASSIGN
ERROR IN PROCEDURE RD_COMMAND_SETUP
      5992**LABEL    5970--CALLALT  5979--CALLALT  5985--CALLALT  5988--CALLALT
ERROR IN PROCEDURE RD_DELETE_OLD_DECK
      6364**LABEL    6360--CALLALT
ERROR IN PROCEDURE RD_FIND_DECK
      6087**LABEL    6079--CALLALT
ERROR IN PROCEDURE RD_PROCESS_IFAD
      6190**LABEL    6168--CALLALT  6171--CALLALT  6172--CALLALT  6173--CALLALT  6181--CALLALT  6182--CALLALT
ERROR IN PROCEDURE RD_PROCESS_TEMP
      6331**LABEL    6321--CALLALT  6322--CALLALT  6323--CALLALT
ERROR IN PROCEDURE RD_REPLACE_DECK
      6135**LABEL    6119--CALLALT  6120--CALLALT  6122--CALLALT  6123--CALLALT  6125--CALLALT  6128--CALLALT
      6129--CALLALT  6131--CALLALT
ERROR IN PROCEDURE RD_SAVE_CATALOG_CHANGES
      6468**LABEL    6453--CALLALT  6458--CALLALT  6459--CALLALT  6462--CALLALT  6463--CALLALT
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:113  
ERROR IN PROCEDURE RD_SAVE_NEW_DECK
      6425**LABEL    6399--CALLALT  6400--CALLALT  6404--CALLALT  6405--CALLALT  6409--CALLALT  6410--CALLALT
      6413--CALLALT  6414--CALLALT  6420--CALLALT  6421--CALLALT
ERROR IN PROCEDURE RD_STORE_OBJECT_DECK
      6265**LABEL    6256--CALLALT  6258--CALLALT  6261--CALLALT
ERROR IN PROCEDURE RD_STORE_REFLIST
      6292**LABEL    6287--CALLALT  6288--CALLALT
ERROR_RETURN
      5812**LABEL    5798--CALLALT  5800--CALLALT  5801--CALLALT  5802--CALLALT  5803--CALLALT  5804--CALLALT
FILE_EOF
      5731**DCL      6166<<ASSIGN   6167>>DOUNTIL  6169>>IF
I IN PROCEDURE RD_SAVE_CATALOG_CHANGES
      6449**DCL      6456<<DOINDEX  6457>>ASSIGN   6461>>ASSIGN
ID.ID
      5535**DCL      6504<<ASSIGN   6505<<ASSIGN   6512<<ASSIGN
ID.REVISION
      5536**DCL      5537--REDEF    6507<<ASSIGN   6514<<ASSIGN   6522<<ASSIGN
MASTER_DATA.DECK#
      5552**DCL      6454>>ASSIGN
MASTER_ENTRY_KEY.DECK#
      5567**DCL      6454<<ASSIGN
MASTER_ENTRY_KEY.ENTRY#
      5568**DCL      6457<<ASSIGN
MATCHING_OBJECT IN PROCEDURE RD_PROCESS_IFAD
      6162**DCL      6167>>DOUNTIL  6174<>CALL     6179>>IF
MATCH_FOUND IN PROCEDURE RD_CHECK_MATCH
      6211**DCL      6209--PROC     6216<<ASSIGN   6217<<ASSIGN
NEW_OBJECT_KEY.DATA
      5655**DCL      5974<<ASSIGN   6047>>IF       6053>>ASSIGN   6187>>ASSIGN   6215>>IF       6247>>ASSIGN
      6398>>ASSIGN   6455>>ASSIGN   6498>>ASSIGN
NOT_FOUND IN PROCEDURE RD_FIND_DECK
      6083**LABEL    6077--CALLALT
OBJECT
      5579**DCL      6251--CALL
OBJECT.BCD
      5580**DCL      5602--REDEF    5625--REDEF
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:114  
OBJECT.BCD.CLASS
      5585**DCL      6501>>IF       6501>>IF       6503>>IF
OBJECT.BCD.LIBRARY
      5583**DCL      6500>>IF
OBJECT.BINARY_COUNT
      5627**DCL      6249<<ASSIGN   6260>>ASSIGN   6403>>ASSIGN   6408>>ASSIGN
OBJECT.CHECKSUM
      5631**DCL      6251<>CALL
OBJECT.DECK#
      5626**DCL      6078>>ASSIGN   6248<<ASSIGN   6257>>ASSIGN   6259>>ASSIGN   6402>>ASSIGN   6407>>ASSIGN
      6412>>ASSIGN
OBJECT.NIO_BCD.X_OF_N
      5613**DCL      5618--REDEF
OBJECT.TOTAL_COUNT
      5628**DCL      6250<<ASSIGN   6260>>ASSIGN   6408>>ASSIGN
OBJECT_KEY.DATA
      5668**DCL      6052<<ASSIGN   6076<<ASSIGN   6187<<ASSIGN   6215>>IF       6247<<ASSIGN   6357<<ASSIGN
      6398<<ASSIGN   6418>>ASSIGN   6455<<ASSIGN   6498<<ASSIGN   6504>>ASSIGN   6505>>ASSIGN   6512>>ASSIGN
OBJECT_REFLIST_DATA.NUM_REFS
      5694**DCL      6456>>DOINDEX
OBJECT_REFLIST_DATA.REFS.CE#
      5697**DCL      6461>>ASSIGN
OBJECT_REFLIST_DATA.REFS.ME#
      5696**DCL      6457>>ASSIGN
OBJECT_REFLIST_KEY.DECK#
      5681**DCL      6286<<ASSIGN   6359<<ASSIGN   6412<<ASSIGN
OBJECT_SEARCH_KEY.DATA
      5643**DCL      5972<<ASSIGN   6040>>CALLBLT  6043>>CALLBLT  6047>>IF       6052>>ASSIGN   6076>>ASSIGN
      6084>>ASSIGN   6357>>ASSIGN   6499>>ASSIGN
OUT$BLK.CODE IN PROCEDURE RD_COMMAND_SETUP
      5891**DCL      5965>>DOCASE
OUT$BLK.NSUBLKS IN PROCEDURE RD_COMMAND_SETUP
      5895**DCL      5963>>DOINDEX
OUT$BLK.SUBLK$ IN PROCEDURE RD_COMMAND_SETUP
      5916**DCL      5964>>ASSIGN
OUT$SYM.COUNT IN PROCEDURE RD_COMMAND_SETUP
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:115  
      5952**DCL      5955--IMP-SIZ  5968>>ASSIGN   5969>>ASSIGN   5972>>ASSIGN   5974>>ASSIGN   5977>>ASSIGN
      5978>>ASSIGN
OUT$SYM.TEXT IN PROCEDURE RD_COMMAND_SETUP
      5955**DCL      5968>>ASSIGN   5972>>ASSIGN   5974>>ASSIGN   5977>>ASSIGN
OUTBLK# IN PROCEDURE RD_COMMAND_SETUP
      5875**DCL      5963<<DOINDEX  5964>>ASSIGN
OUTBLK$ IN PROCEDURE RD_COMMAND_SETUP
      5876**DCL      5964<<ASSIGN   5965>>DOCASE   5968>>ASSIGN   5968>>ASSIGN   5969>>ASSIGN   5972>>ASSIGN
      5972>>ASSIGN   5974>>ASSIGN   5974>>ASSIGN   5977>>ASSIGN   5977>>ASSIGN   5978>>ASSIGN
RD_CHECK_MATCH IN PROCEDURE RD_PROCESS_IFAD
      6209**PROC     6174--CALL
RD_COMMAND_SETUP
      5873**PROC     5798--CALL
RD_COMPARE_KEYS
      6031**PROC     5800--CALL
RD_DELETE_OLD_DECK IN PROCEDURE RD_PROCESS_TEMP
      6353**PROC     6321--CALL
RD_FIND_DECK
      6072**PROC     5802--CALL
RD_INIT_DUP
      5833**PROC     5797--CALL
RD_PRINT_REPLACED_DECK IN PROCEDURE RD_PROCESS_TEMP
      6539**PROC     6326--CALL
RD_PROCESS_IFAD IN PROCEDURE RD_REPLACE_DECK
      6160**PROC     6122--CALL
RD_PROCESS_TEMP IN PROCEDURE RD_REPLACE_DECK
      6316**PROC     6129--CALL
RD_REPLACE_DECK
      6114**PROC     5803--CALL
RD_SAVE_CATALOG_CHANGES IN PROCEDURE RD_PROCESS_TEMP
      6447**PROC     6323--CALL
RD_SAVE_NEW_DECK IN PROCEDURE RD_PROCESS_TEMP
      6394**PROC     6322--CALL
RD_SETUP_PRINT IN PROCEDURE RD_PROCESS_TEMP
      6494**PROC     6324--CALL
RD_STORE_OBJECT_DECK IN PROCEDURE RD_PROCESS_IFAD
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:116  
      6243**PROC     6181--CALL
RD_STORE_REFLIST IN PROCEDURE RD_PROCESS_IFAD
      6282**PROC     6182--CALL
RECORD.BCD
      5711**DCL      5715--REDEF    5724--REDEF
RECORD.BINARY.DATA.BINARY
      5717**DCL      5718--REDEF
SAVED_DECK#
      5732**DCL      6078<<ASSIGN   6248>>ASSIGN   6286>>ASSIGN   6358>>ASSIGN   6359>>ASSIGN
TOU$B_PRINT_DECK_LINE
      5757**DCL-ENT  6325--CALL
TOU$B_SET_OBJECT_KEY
      5756**DCL-ENT  6173--CALL
TOU$B_SHOW_DCBS
      5752**DCL-ENT  5799--CALL
TOU$CHECKSUM
      5748**DCL-ENT  6251--CALL
TOU$CLEAR_IFAD
      5750**DCL-ENT  6121--CALL
TOU$DFU_CLOSE_TEMP
      5779**DCL-ENT  6125--CALL     6131--CALL     6136--CALL
TOU$DFU_DF_CHECK_FOR_KEY
      5767**DCL-ENT  6077--CALL
TOU$DFU_DF_DL_DECK
      5768**DCL-ENT  6360--CALL
TOU$DFU_DF_RD_CATALOG_CONTROL
      5763**DCL-ENT  6459--CALL
TOU$DFU_DF_RD_LOG
      5765**DCL-ENT  6079--CALL
TOU$DFU_DF_RD_MASTER_CONTROL
      5761**DCL-ENT  6453--CALL
TOU$DFU_DF_RD_MASTER_ENTRY
      5762**DCL-ENT  6458--CALL
TOU$DFU_DF_RD_OBJECT_REFLIST
      5764**DCL-ENT  6287--CALL
TOU$DFU_DF_WR_BCD_CARDS
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:117  
      5774**DCL-ENT  6410--CALL
TOU$DFU_DF_WR_BINARY
      5773**DCL-ENT  6405--CALL
TOU$DFU_DF_WR_CATALOG_CONTROL
      5770**DCL-ENT  6463--CALL
TOU$DFU_DF_WR_CATALOG_ENTRY
      5771**DCL-ENT  6462--CALL
TOU$DFU_DF_WR_LOG
      5776**DCL-ENT  6421--CALL
TOU$DFU_DF_WR_OBJECT
      5772**DCL-ENT  6400--CALL
TOU$DFU_DF_WR_OBJECT_REFLIST
      5775**DCL-ENT  6414--CALL
TOU$DFU_OPEN_TEMP
      5778**DCL-ENT  6119--CALL     6128--CALL
TOU$DFU_TF_RD_BCD_CARDS
      5783**DCL-ENT  6409--CALL
TOU$DFU_TF_RD_BINARY
      5782**DCL-ENT  6404--CALL
TOU$DFU_TF_RD_OBJECT
      5781**DCL-ENT  6399--CALL
TOU$DFU_TF_RD_OBJECT_REFLIST
      5784**DCL-ENT  6413--CALL
TOU$DFU_TF_WR_BCD_CARDS
      5788**DCL-ENT  6261--CALL
TOU$DFU_TF_WR_BINARY
      5787**DCL-ENT  6258--CALL
TOU$DFU_TF_WR_OBJECT
      5786**DCL-ENT  6256--CALL
TOU$DFU_TF_WR_OBJECT_REFLIST
      5789**DCL-ENT  6288--CALL
TOU$DU_CLOSE_DF
      5742**DCL-ENT  5804--CALL     5812--CALL
TOU$DU_CLOSE_IFAD
      5738**DCL-ENT  6123--CALL     6137--CALL
TOU$DU_OPEN_DF
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:118  
      5741**DCL-ENT  5801--CALL
TOU$DU_OPEN_IFAD
      5737**DCL-ENT  6120--CALL
TOU$DU_PRINTER_WRITE
      5745**DCL-ENT  6335--CALL     6545--CALL
TOU$DU_SET_DF_FID
      5740**DCL-ENT  5979--CALL     5988--CALL
TOU$DU_SET_IFAD_FID
      5736**DCL-ENT  5970--CALL     5985--CALL
TOU$DU_UPDATE_LOG
      5746**DCL-ENT  6420--CALL
TOU$DU_USER_WRITE
      5744**DCL-ENT  5808--CALL     5814--CALL     6054--CALL     6085--CALL     6188--CALL     6334--CALL
      6544--CALL
TOU$GET_BCD_CARDS
      5755**DCL-ENT  6172--CALL
TOU$GET_BINARY_CARDS
      5754**DCL-ENT  6171--CALL
TOU$GET_CP6_OBJECT
      5753**DCL-ENT  6168--CALL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:119  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:120  
              FULL UREF LISTING

BCD_CARD.BCD.CONTROL
      5395**DCL
BCD_CARD.BCD.DATA
      5397**DCL
BCD_CARD.BCD.LBL
      5398**DCL
BCD_CARD.BCD.SEQ
      5399**DCL
BCD_CARD.BCD.TYPE
      5396**DCL
BCD_CARD.BCD_
      5400**DCL
BCD_CARD.CHECKSUM
      5401**DCL
BCD_CARD_
      5402**DCL
BCD_KEY
      5440**DCL
BCD_KEY.CARD#
      5443**DCL
BCD_KEY.SIZE
      5441**DCL
BINARY_B
      5454**DCL
BINARY_B.LBL
      5456**DCL
BINARY_B.OBJ
      5455**DCL
BINARY_B.SEQ
      5457**DCL
BINARY_CARD.CHECKSUM
      5420**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:121  
BINARY_CARD.DATA_CHAR
      5423**DCL
BINARY_CARD.LABEL_
      5425**DCL
BINARY_CARD.LABEL_.LBL
      5426**DCL
BINARY_CARD.LABEL_.SEQ
      5427**DCL
BINARY_CARD.RELOCATION
      5421**DCL
BINARY_CARD.WD1.ADDRESS
      5418**DCL
BINARY_CARD.WD1.SIZE
      5417**DCL
BINARY_CARD.WD1.TYPE
      5415**DCL
BINARY_CARD.WRD_CHAR
      5419**DCL
BINARY_CARD_
      5428**DCL
BINARY_CARD_.DATA
      5429**DCL
BINARY_KEY
      5468**DCL
BINARY_KEY.ENTRY#
      5471**DCL
BINARY_KEY.SIZE
      5469**DCL
CATALOG_DATA
      5482**DCL
CATALOG_DATA.ENTRY_COUNT
      5484**DCL
CATALOG_DATA.RFU
      5485**DCL
CATALOG_ENTRY_KEY
      5496**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:122  
CATALOG_ENTRY_KEY.SIZE
      5497**DCL
DKEND.BCD.CONTROL
      5512**DCL
DKEND.BCD.DATE
      5517**DCL
DKEND.BCD.LBL
      5519**DCL
DKEND.BCD.MOD_DATE
      5516**DCL
DKEND.BCD.SEQ
      5520**DCL
DKEND.BCD.TTL_DATE
      5515**DCL
DKEND.BCD.TYPE
      5513**DCL
DKEND.CHECKSUM
      5522**DCL
DKEND_
      5523**DCL
DUP
      5238**DCL
DUP.BATCH_MODE
      5240**DCL
DUP.BCD_V
      5309**DCL
DUP.BINARY_V
      5304**DCL
DUP.BOTTOM_LINE#
      5276**DCL
DUP.BREAK_RETURN
      5360**DCL
DUP.BREAK_TERMINATE
      5356**DCL
DUP.CPU_TYPE
      5369**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:123  
DUP.CURRENT_LINE#
      5274**DCL
DUP.CURRENT_PAGE#
      5272**DCL
DUP.DF
      5315**DCL
DUP.DF.FID
      5326**DCL
DUP.DF.FID_LGTH
      5328**DCL
DUP.DF.NO_EXIST
      5318**DCL
DUP.DS_V
      5249**DCL
DUP.FAULT_ERROR
      5244**DCL
DUP.IFAD
      5283**DCL
DUP.IFAD.CONFIG_TAB
      5292**DCL
DUP.IFAD.DEVICE_INPUT
      5288**DCL
DUP.IFAD.DRIVE_NUMBER
      5298**DCL
DUP.IFAD.FID_LGTH
      5302**DCL
DUP.IFAD.IMU_NUMBER
      5296**DCL
DUP.IFAD.IMU_TAB
      5290**DCL
DUP.IFAD.NUM_VOLUMES
      5294**DCL
DUP.LOG
      5331**DCL
DUP.LOG_V.PTR$
      5341**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:124  
DUP.LOG_V_
      5343**DCL
DUP.MSG_V
      5265**DCL
DUP.MSG_V.PTR$
      5268**DCL
DUP.NUM_LINES
      5263**DCL
DUP.NUM_WORDS
      5247**DCL
DUP.PROCESS_COMPLETE
      5242**DCL
DUP.RESPONSE
      5252**DCL
DUP.RESPONSE_LGTH
      5254**DCL
DUP.SITE_ID
      5367**DCL
DUP.SITE_NAME
      5362**DCL
DUP.SITE_NAME.LGTH
      5363**DCL
DUP.SITE_NAME.TEXT
      5365**DCL
DUP.TEMP
      5345**DCL
ID
      5534**DCL
ID.REV
      5537**DCL
ID.REV.LEVEL
      5539**DCL
ID.USAGE
      5540**DCL
MASTER_DATA
      5551**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:125  
MASTER_DATA.ENTRY_COUNT
      5553**DCL
MASTER_DATA.RFU
      5554**DCL
MASTER_ENTRY_KEY
      5565**DCL
MASTER_ENTRY_KEY.SIZE
      5566**DCL
NEW_OBJECT_KEY
      5654**DCL
OBJECT.BCD.ASSEMBLER
      5597**DCL
OBJECT.BCD.CONTROL
      5581**DCL
OBJECT.BCD.DATE
      5599**DCL
OBJECT.BCD.DONT_APPLY
      5586**DCL
OBJECT.BCD.DONT_APPLY.CP6
      5588**DCL
OBJECT.BCD.DONT_APPLY.DPS8000
      5591**DCL
OBJECT.BCD.DONT_APPLY.DPS90
      5590**DCL
OBJECT.BCD.FILENAME
      5595**DCL
OBJECT.BCD.GECALL
      5598**DCL
OBJECT.BCD.LBL
      5600**DCL
OBJECT.BCD.LOAD_TYPE
      5584**DCL
OBJECT.BCD.MODEL
      5594**DCL
OBJECT.BCD.SEQ
      5601**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:126  
OBJECT.BCD.TYPE
      5582**DCL
OBJECT.BCD_
      5625**DCL
OBJECT.DECK_CHECKSUM
      5630**DCL
OBJECT.LOAD_SIZE
      5629**DCL
OBJECT.NIO_BCD
      5602**DCL
OBJECT.NIO_BCD.ASSEMBLER
      5619**DCL
OBJECT.NIO_BCD.CLASS
      5607**DCL
OBJECT.NIO_BCD.CONTROL
      5603**DCL
OBJECT.NIO_BCD.DATA
      5609**DCL
OBJECT.NIO_BCD.EQUIP_TYPE
      5611**DCL
OBJECT.NIO_BCD.FILE_NAME
      5612**DCL
OBJECT.NIO_BCD.LBL
      5623**DCL
OBJECT.NIO_BCD.LIBRARY
      5605**DCL
OBJECT.NIO_BCD.LOAD_TYPE
      5606**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB
      5620**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB
      5621**DCL
OBJECT.NIO_BCD.SEQ
      5624**DCL
OBJECT.NIO_BCD.TYPE
      5604**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:127  
OBJECT.NIO_BCD.X_OF_N.N
      5617**DCL
OBJECT.NIO_BCD.X_OF_N.X
      5615**DCL
OBJECT.NIO_BCD.X_OF_N_
      5618**DCL
OBJECT_KEY
      5666**DCL
OBJECT_KEY.SIZE
      5667**DCL
OBJECT_REFLIST_DATA
      5693**DCL
OBJECT_REFLIST_DATA.REFS
      5695**DCL
OBJECT_REFLIST_KEY
      5679**DCL
OBJECT_REFLIST_KEY.ENTRY#
      5682**DCL
OBJECT_REFLIST_KEY.SIZE
      5680**DCL
OBJECT_SEARCH_KEY
      5642**DCL
OUT$BLK IN PROCEDURE RD_COMMAND_SETUP
      5883**DCL
OUT$BLK.CPOS IN PROCEDURE RD_COMMAND_SETUP
      5909**DCL
OUT$BLK.NDTYPE IN PROCEDURE RD_COMMAND_SETUP
      5886**DCL
OUT$BLK.SCRITCH IN PROCEDURE RD_COMMAND_SETUP
      5899**DCL
OUT$BLK.TEMP IN PROCEDURE RD_COMMAND_SETUP
      5884**DCL
OUT$SYM IN PROCEDURE RD_COMMAND_SETUP
      5929**DCL
OUT$SYM.CODE IN PROCEDURE RD_COMMAND_SETUP
      5935**DCL
PL6.E3A0      #001=TOU$REPDECK File=TOU$REPDECK.:E05TSI                          WED 07/30/97 06:50 Page:128  
OUT$SYM.CPOS IN PROCEDURE RD_COMMAND_SETUP
      5944**DCL
OUT$SYM.NDTYPE IN PROCEDURE RD_COMMAND_SETUP
      5932**DCL
OUT$SYM.NSUBLKS IN PROCEDURE RD_COMMAND_SETUP
      5938**DCL
OUT$SYM.SCRITCH IN PROCEDURE RD_COMMAND_SETUP
      5941**DCL
OUT$SYM.TEMP IN PROCEDURE RD_COMMAND_SETUP
      5930**DCL
OUT$SYM.TEXTC$ IN PROCEDURE RD_COMMAND_SETUP
      5947**DCL
RECORD
      5708**DCL
RECORD.BCD.DATA
      5712**DCL
RECORD.BINARY
      5715**DCL
RECORD.BINARY.DATA
      5716**DCL
RECORD.BINARY.DATA.CS
      5718**DCL
RECORD.BINARY.DATA.CS.CHECKSUM
      5720**DCL
RECORD.BINARY.DATA.CS.DATA
      5721**DCL
RECORD.BINARY.DATA.CS.WD1
      5719**DCL
RECORD.BINARY.DATA.LBL_SEQ
      5722**DCL
RECORD.DATA
      5724**DCL
RECORD.SIZE
      5709**DCL
TOU$REPDECK
        45**PROC
