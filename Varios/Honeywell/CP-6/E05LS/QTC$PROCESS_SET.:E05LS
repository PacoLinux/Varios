VERSION E05

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:1    
        1        1        /*M* QTC$PROCESS_SET - Process 'SET' commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        /*P* NAME:        QTC$PROCESS_SET
        9        9
       10       10             PURPOSE:     This modules processes all TRADER 'SET' commands.
       11       11        */
       12       12        /*D* NAME:        QTC$PROCESS_SETS
       13       13
       14       14             CALL:        CALL QTC$PROCESS_SET(SET_COMMAND, PARSE_FLAG, MSGTYP)
       15       15
       16       16             INPUT:       SET_COMMAND - The text of the 'SET' command that
       17       17                          is to be processed.
       18       18
       19       19                          PARSE_FLAG - Set if we must call X$PARSE to parse
       20       20                          the command.  There are some paths to this routine
       21       21                          whereby the 'SET' will not have been preparsed.
       22       22
       23       23                          MSGTYP - The message type on the CREATE ENTRY that
       24       24                          this 'SET' is associated with.
       25       25
       26       26             OUTPUT:      The new assign merge record is added to the
       27       27                          _E data segment and the text of the 'SET' is
       28       28                          added to the _S data segment.
       29       29
       30       30             DESCRIPTION: This routine builds assign merge records for
       31       31                          TRADER 'SET' commands.  A set command may be
       32       32                          of the normal IBEX form or it may be the
       33       33                          TRADERese syntax.  Required knowledge before
       34       34                          fishing through this routine is the format
       35       35                          of an assign merge record.
       36       36
       37       37                          For a 'SET' that is of the normal IBEX format
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:2    
       38       38                          a M$YC call is made and IBEX is the one that
       39       39                          does the processing of the command.  When
       40       40                          IBEX is done with it the assign merge record
       41       41                          is read from the *A file and is added to the
       42       42                          assign merge records already defined.
       43       43
       44       44                          For 'SET' commands that TRADER processes a more
       45       45                          extensive set of validity checks is done on
       46       46                          the information presented.  Once the checks
       47       47                          have been satisfied an assign merge record
       48       48                          is built.
       49       49
       50       50                          The text of the 'SET' commands is maintained
       51       51                          along with the assign merge information.  When
       52       52                          a DCB is updated or deleted this text gets updated
       53       53                          at the same time.
       54       54        */
       55       55        %EJECT;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:3    
       56       56        QTC$PROCESS_SET:
       57       57                PROC(P_SET, P_PARSE_FLAG, P_MSGTYP);
       58       58
       59       59        %INCLUDE Q_PAGE_C;
       60       91        %SET LISTEXP = '1'B;
       61       92        %PAGE(ARG="Includes");

               109        /***************************************************************************
               110         *                                                                         *
               111         *                                  Includes                               *
               112         *                                                                         *
               113         ***************************************************************************/

       62      117        %INCLUDE CP_6;
       63      198        %INCLUDE QT_DATA_R;
       64      212        %INCLUDE QT_PERR_C;
       65      263        %INCLUDE Q_ERRCODE_C;
       66      286        %INCLUDE QT_MACROS_C;
       67      444        %INCLUDE QT_SUBS_C;
       68      528        %INCLUDE XU_MACRO_C;
       69     3634        %PAGE(ARG="Parameters");

              3651    1   /***************************************************************************
              3652    1    *                                                                         *
              3653    1    *                                 Parameters                              *
              3654    1    *                                                                         *
              3655    1    ***************************************************************************/

       70     3659    1   DCL 1 P_SET,
       71     3660    1         2 COUNT UBIN(9) UNAL,
       72     3661    1         2 JUNK1 UBIN WORD ALIGNED,
       73     3662    1         2 JUNK2 UBIN WORD UNAL,
       74     3663    1         2 JUNK3 UBIN WORD UNAL,
       75     3664    1         2 TEXT CHAR(P_SET.COUNT);
       76     3665
       77     3666    1   DCL P_PARSE_FLAG BIT(1) ALIGNED;
       78     3667    1   DCL P_MSGTYP CHAR(8);
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:4    
       79     3668        %PAGE(ARG="Externally defined routines");

              3685    1   /***************************************************************************
              3686    1    *                                                                         *
              3687    1    *                        Externally defined routines                      *
              3688    1    *                                                                         *
              3689    1    ***************************************************************************/

       80     3693    1   DCL QQC$WILD_COMP ENTRY(2) ALTRET;
       81     3694    1   DCL QTC$DELETE_SET ENTRY(1) ALTRET;
       82     3695    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       83     3696    1   DCL QTC$MON_ERR ENTRY(1);
       84     3697    1   DCL QTC$GETMEM ENTRY(2);
       85     3698    1   DCL X$PARSE ENTRY(1) ALTRET;
       86     3699        %M$DCB(DCBN=M$STARA, NAME='*A');
       87     3773        %PAGE(ARG="Symrefs");

              3790    1   /***************************************************************************
              3791    1    *                                                                         *
              3792    1    *                                  Symrefs                                *
              3793    1    *                                                                         *
              3794    1    ***************************************************************************/

       88     3798    1   DCL QT_NODES1 UBIN WORD SYMREF;
       89     3799        %PAGE(ARG="Based");

              3816    1   /***************************************************************************
              3817    1    *                                                                         *
              3818    1    *                                   Based                                 *
              3819    1    *                                                                         *
              3820    1    ***************************************************************************/

       90     3824        %QT$ENTRY;
       91     3878        %QT$SETTEXT;
       92     3888        %QT$SETBITS;
       93     3909        %F$DCB;
       94     3966        %PARSE$SYM(STCLASS=BASED);
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:5    
       95     4004        %PARSE$OUT(STCLASS=BASED);
       96     4049
       97     4050    1   DCL 1 DCB$NAME BASED,
       98     4051    1         2 COUNT UBIN(9) UNAL,
       99     4052    1         2 TEXT CHAR(DCB$NAME.COUNT);
      100     4053
      101     4054    1   DCL CHAR$STRING CHAR(CHAR_STRING_SIZE) BASED;
      102     4055
      103     4056        %FPT_OPEN(FPTN=AMR$FPT_OPEN, STCLASS="BASED(QT_GLOBAL.AMR$FPT_OPEN$)",
      104     4057        PFMT=PTR, VECTOR=ADDR);
      105     4166
      106     4167        %VLP_SETSTA(FPTN=VLP$SETSTA, STCLASS=BASED);
      107     4195        %PAGE(ARG="Static");

              4212    1   /***************************************************************************
              4213    1    *                                                                         *
              4214    1    *                                   Static                                *
              4215    1    *                                                                         *
              4216    1    ***************************************************************************/

      108     4220        %P_PCB(STCLASS=STATIC);
      109     4419
      110     4420    1   DCL SET_CMD CHAR(256) STATIC INIT(' ');
      111     4421        %PAGE(ARG="Constants");

              4438    1   /***************************************************************************
              4439    1    *                                                                         *
              4440    1    *                                 Constants                               *
              4441    1    *                                                                         *
              4442    1    ***************************************************************************/

      112     4446        %FPT_OPEN(FPTN=AMR_FPT_OPEN_C, STCLASS=CONSTANT,
      113     4447        RES='ME', PFMT=PTR, VECTOR=ADDR, ASN=DEVICE);
      114     4556
      115     4557        %VLP_SETSTA(FPTN=VLP_SETSTA_C, STCLASS=CONSTANT,ILATCH=YES, OLATCH=YES,
      116     4558        EOFNONE=YES, WAS=YES);
      117     4586    1   DCL 1 KEY CONSTANT,
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:6    
      118     4587    1         2 COUNT UBIN(9) UNAL INIT(31),
      119     4588    1         2 TEXT CHAR(31) INIT('M$TRADER_ASSN:MRGE:REC_DCB_NAME');
      120     4589
      121     4590    1   DCL RESET_CMD CHAR(0) CONSTANT INIT('R M$TRADER_ASSN:MRGE:REC_DCB_NAME');
      122     4591        %PAGE(ARG="Auto");

              4608    1   /***************************************************************************
              4609    1    *                                                                         *
              4610    1    *                                    Auto                                 *
              4611    1    *                                                                         *
              4612    1    ***************************************************************************/

      123     4616    1   DCL NSUBLKS UBIN WORD;
      124     4617    1   DCL I UBIN WORD;
      125     4618    1   DCL ASSMRG_SIZE UBIN WORD;
      126     4619    1   DCL BYTE_COUNT UBIN WORD;
      127     4620    1   DCL CHAR_STRING_SIZE UBIN WORD;
      128     4621    1   DCL POS UBIN WORD;
      129     4622    1   DCL DUPLICITY_CNT UBIN WORD;
      130     4623    1   DCL PARSE_WORK(0:399) UBIN WORD;
      131     4624
      132     4625    1   DCL SUBLK$ PTR;
      133     4626    1   DCL TYPE$ PTR;
      134     4627    1   DCL SETSTA$ PTR;
      135     4628    1   DCL REC$ PTR;
      136     4629    1   DCL STATION$ PTR;
      137     4630    1   DCL DCB$ PTR;
      138     4631    1   DCL PTR$ PTR;
      139     4632    1   DCL 1 PTR$_BITS REDEF PTR$,
      140     4633    1         2 WORDS UBIN(18) UNAL,
      141     4634    1         2 * BIT(18) UNAL;
      142     4635
      143     4636    1   DCL SET_OK_FLAG BIT(1) ALIGNED;
      144     4637    1   DCL ONEREPORT_FLAG BIT(1) ALIGNED;
      145     4638
      146     4639    1   DCL 1 SAVE_SET,
      147     4640    1         2 COUNT UBIN(9) UNAL,
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:7    
      148     4641    1         2 TEXT CHAR(256);
      149     4642
      150     4643        %VLP_SETSTA;
      151     4671        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:8    
              4688    1   /***************************************************************************
              4689    1    *                                                                         *
              4690    1    *                                Error codes                              *
              4691    1    *                                                                         *
              4692    1    ***************************************************************************/

      152     4696        %ERRCODE(NAME=CODE_IWT, CODE#=%E$IWT, FCG#=%FCG_QT, MID#=%MID_C);
      153     4703        %ERRCODE(NAME=CODE_NWTOR, CODE#=%E$NWTOR, FCG#=%FCG_QT, MID#=%MID_C);
      154     4710        %ERRCODE(NAME=CODE_IWS, CODE#=%E$IWS, FCG#=%FCG_QT, MID#=%MID_C);
      155     4717        %ERRCODE(NAME=CODE_NWTOS, CODE#=%E$NWTOS, FCG#=%FCG_QT, MID#=%MID_C);
      156     4724        %ERRCODE(NAME=CODE_ITU, CODE#=%E$ITU, FCG#=%FCG_QT, MID#=%MID_C);
      157     4731        %ERRCODE(NAME=CODE_IIPS, CODE#=%E$IIPS, FCG#=%FCG_QT, MID#=%MID_C);
      158     4738        %ERRCODE(NAME=CODE_DUREADS, CODE#=%E$DUREADS, FCG#=%FCG_QT, MID#=%MID_C);
      159     4745        %ERRCODE(NAME=CODE_DURESPONDS, CODE#=%E$DURESPONDS, FCG#=%FCG_QT, MID#=%MID_C);
      160     4752        %ERRCODE(NAME=CODE_INCONSIS, CODE#=%E$INCONSIS, FCG#=%FCG_QT, MID#=%MID_C);
      161     4759        %ERRCODE(NAME=CODE_NOLATCH, CODE#=%E$NOLATCH, FCG#=%FCG_QT, MID#=%MID_C);
      162     4766        /*E*       ERROR: QTC-E$IWT-C
      163     4767
      164     4768                 MESSAGE: The specified transaction type is invalid.
      165     4769                          Wildcarded types may only have a ? as the last
      166     4770                          character of the transaction type,
      167     4771                          e. g., A?B? is illegal, ? or AB? are legal.
      168     4772             DESCRIPTION: Wild carded transaction types are more restrictive
      169     4773                          than generalized wild carding.  The rules are
      170     4774                          only one ?, and the ? must be the last character
      171     4775                          of the transaction type.
      172     4776        */
      173     4777        /*E*       ERROR: QTC-E$NWTOR-C
      174     4778
      175     4779                 MESSAGE: Wild carding is not permitted on report types.
      176     4780             DESCRIPTION: A report name may not have any ?s as part
      177     4781                          of the name.
      178     4782        */
      179     4783        /*E*       ERROR: QTC-E$IWS-C
      180     4784
      181     4785                 MESSAGE: The specified station name is invalid.
      182     4786                          Wildcarded stations may only have a ? as the last
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:9    
      183     4787                          character of the station name,
      184     4788                          e. g., A?B? is illegal, ? or AB? are legal.
      185     4789             DESCRIPTION: Wild carded station names are more restrictive
      186     4790                          than generalized wild carding.  The rules are
      187     4791                          only one ?, and the ? must be the last character
      188     4792                          of the station name.
      189     4793        */
      190     4794        /*E*       ERROR: QTC-E$NWTOS-C
      191     4795
      192     4796                 MESSAGE: Wildcarding is not permitted in the type of
      193     4797                          a spawned transaction.
      194     4798             DESCRIPTION: A spawned transaction name may not have any ?s
      195     4799                          as part of the name.
      196     4800        */
      197     4801        /*E*       ERROR: QTC-E$ITU-C
      198     4802
      199     4803                 MESSAGE: Updates to DCBs which have been set previously
      200     4804                          are not permitted.
      201     4805             DESCRIPTION: Update operations are ones where you want to
      202     4806                          add an option to a DCB that had been set
      203     4807                          previously E.G., SET M$LO FILE
      204     4808                          SET M$LO , CTG (adding the CTG option).
      205     4809        */
      206     4810        /*E*       ERROR: QTC-E$IIPS-C
      207     4811
      208     4812                 MESSAGE: Internal error re-parsing a SET command.
      209     4813             DESCRIPTION: An attempt to re-parse a set command failed.
      210     4814                          Probably the text that is being passed down
      211     4815                          got corrupted by someone?
      212     4816        */
      213     4817        /*E*       ERROR: QTC-E$DUREADS-C
      214     4818
      215     4819                 MESSAGE: READS command used more than once for this
      216     4820                          transaction type.  The most recent READS
      217     4821                          command has been used.
      218     4822             DESCRIPTION: A TPAP should only be reading the input
      219     4823                          transaction through one DCB.  I'm not really
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:10   
      220     4824                          sure what you are trying to do, are you?
      221     4825        */
      222     4826        /*E*       ERROR: QTC-E$DURESPONDS-C
      223     4827
      224     4828                 MESSAGE: Warning:  More than 1 'RESPONDS' found
      225     4829             DESCRIPTION: A TPAP should only be responding through
      226     4830                          one DCB.
      227     4831        */
      228     4832        /*E*       ERROR: QTC-E$INCONSIS-C
      229     4833
      230     4834                 MESSAGE: The message type on the READS command must be
      231     4835                          identical to the message type on the previous
      232     4836                          CREATE or MODIFY ENTRY command.
      233     4837             DESCRIPTION: If you are creating message type R and you
      234     4838                          then specify on a 'READS':
      235     4839                             READS GORGO THRU M$SI
      236     4840                          then this is inconsistent.  This is true
      237     4841                          because you can not read the type the
      238     4842                          transaction type that you are defining with
      239     4843                          the 'READS' statement you are providing.
      240     4844        */
      241     4845        /*E*       ERROR: QTC-E$NOLATCH-C
      242     4846
      243     4847                 MESSAGE: Warning:  ILATCH or OLATCH is not specified.
      244     4848             DESCRIPTION: TPAPs should always read with latch
      245     4849        */
      246     4850        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:11   
              4867    1   /***************************************************************************
              4868    1    *                                                                         *
              4869    1    *                                    FPTs                                 *
              4870    1    *                                                                         *
              4871    1    ***************************************************************************/

      247     4875        %FPT_READ(DCB=M$STARA, KEYS=YES, KEY=KEY);
      248     4914
      249     4915        %FPT_OPEN(DCB=M$STARA, ACS=DIRECT, EXIST=OLDFILE, FUN=IN, ORG=KEYED,
      250     4916        SHARE=ALL, ASN=FILE);
      251     5025
      252     5026        %FPT_CLOSE(DCB=M$STARA, DISP=SAVE);
      253     5068
      254     5069        %FPT_YC(ECHO=NO);
      255     5086        %PAGE(ARG="QTC$PROCESS_SET", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:12   
              5103    1   /***************************************************************************
              5104    1    *                                                                         *
              5105    1    *                              QTC$PROCESS_SET                            *
              5106    1    *                                                                         *
              5107    1    ***************************************************************************/

      256     5111    1           SAVE_SET.COUNT = P_SET.COUNT;
      257     5112    1           SAVE_SET.TEXT = P_SET.TEXT;
      258     5113
      259     5114    1           IF P_PARSE_FLAG THEN
      260     5115    2             DO;
      261     5116    2               P_PCB.TEXT$ = ADDR(SAVE_SET.TEXT);
      262     5117    2               P_PCB.ROOT$ = ADDR(QT_NODES1);
      263     5118    2               P_PCB.WORK$ = ADDR(PARSE_WORK);
      264     5119    2               P_PCB.WKSZ = SIZEW(PARSE_WORK);
      265     5120    2               P_PCB.NCHARS = SAVE_SET.COUNT;
      266     5121
      267     5122    2               CALL X$PARSE(P_PCB) ALTRET(PARSE_ERR);
      268     5123
      269     5124    2               QT_CMDBLK.OUT$ = P_PCB.OUT$;
      270     5125    2             END;
      271     5126
      272     5127    1           QT_CMDBLK.CODE = QT_CMDBLK.OUT$ -> OUT$BLK.CODE;
      273     5128    1           NSUBLKS = QT_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS - 1;
      274     5129    1           STATION$ = ADDR(NIL);
      275     5130    1           SET_OK_FLAG = '1'B;
      276     5131    1           ONEREPORT_FLAG = '0'B;
      277     5132    1           VLP_SETSTA = VLP_SETSTA_C;
      278     5133
      279     5134    2           DO I = 0 TO NSUBLKS;
      280     5135    2             SUBLK$ = QT_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(I);
      281     5136
      282     5137    3             DO CASE(SUBLK$ -> OUT$SYM.CODE);
      283     5138    3               CASE(1 /* OPT_TYPE */);
      284     5139    3                 TYPE$ = SUBLK$;
      285     5140
      286     5141    3               CASE(3 /* OPT_STATION */);
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:13   
      287     5142    3                 STATION$ = SUBLK$;
      288     5143
      289     5144    3               CASE(2 /* OPT_DCB */);
      290     5145    3                 DCB$ = SUBLK$;
      291     5146
      292     5147    3               CASE(4 /* OPT_MODE */);
      293     5148    3                 SUBLK$ = SUBLK$ -> OUT$BLK.SUBLK$(0);
      294     5149    3                 IF SUBLK$ -> OUT$SYM.CODE = 1 /* MODE_SINGLE */ THEN
      295     5150    4                   DO;
      296     5151    4                     VLP_SETSTA.ISTA.EOFONE# = '1'B;
      297     5152    4                     VLP_SETSTA.ISTA.EOFNONE# = '0'B;
      298     5153    4                   END;
      299     5154
      300     5155    3               CASE(10 /* OPT_ONEREPORT */);
      301     5156    3                 SUBLK$ = SUBLK$ -> OUT$BLK.SUBLK$(0);
      302     5157    3                 IF SUBLK$ -> OUT$SYM.CODE = 2 /* YES */ THEN
      303     5158    3                   ONEREPORT_FLAG = '1'B;
      304     5159    3                 ELSE
      305     5160    3                   ONEREPORT_FLAG = '0'B;
      306     5161
      307     5162    3             END /* CASE */;
      308     5163    2           END;
      309     5164
      310     5165    2           DO CASE(QT_CMDBLK.CODE);
      311     5166    2             CASE(18 /* READS */);
      312     5167    2               CALL READS;
      313     5168
      314     5169    2             CASE(19 /* REPORTS */);
      315     5170    2               CALL REPORTS;
      316     5171
      317     5172    2             CASE(25 /* SPAWNS */);
      318     5173    2               CALL SPAWNS;
      319     5174
      320     5175    2             CASE(21 /* RESPONDS */);
      321     5176    2               CALL RESPONDS;
      322     5177
      323     5178    2             CASE(22 /* SET_DCB */);
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:14   
      324     5179    2               CALL SET_DCB;
      325     5180
      326     5181    2             CASE(23 /* ILLEGAL_SET */);
      327     5182    2               CALL ILLEGAL_SET;
      328     5183
      329     5184    2           END /* CASE */;
      330     5185
      331     5186    1           GOTO RET;
      332     5187
      333     5188    1   PARSE_ERR:
      334     5189    1           QT_CMDBLK.MINOR_ERR = CODE_IIPS;
      335     5190    1           CALL XUR$ERRMSG(CODE_IIPS);
      336     5191
      337     5192    1   RET:
      338     5193    1           RETURN;
      339     5194                %PAGE(ARG="READS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:15   
              5211    1   /***************************************************************************
              5212    1    *                                                                         *
              5213    1    *                                   READS                                 *
              5214    1    *                                                                         *
              5215    1    ***************************************************************************/

      340     5219    1   READS:
      341     5220    1           PROC;
      342     5221
      343     5222    2           VLP_SETSTA.ISTA.IMSGTYP# = TYPE$ -> OUT$SYM.TEXT;
      344     5223
      345     5224    2           CALL INDEX(POS, '?', TYPE$ -> OUT$SYM.TEXT) ALTRET(NO_Q1);
      346     5225
      347     5226    2           IF TYPE$ -> OUT$SYM.COUNT - 1 ~= POS THEN
      348     5227    3             DO;
      349     5228    3               QT_CMDBLK.MINOR_ERR = CODE_IWT;
      350     5229    3               CALL XUR$ERRMSG(CODE_IWT);
      351     5230    3               SET_OK_FLAG = '0'B;
      352     5231    3             END;
      353     5232
      354     5233    2   NO_Q1:
      355     5234    2           CALL QQC$WILD_COMP(VLP_SETSTA.ISTA.IMSGTYP#, P_MSGTYP) ALTRET(INCONSISTANT);
      356     5235
      357     5236    3           DO WHILE('0'B);
      358     5237
      359     5238    3   INCONSISTANT:
      360     5239    3             QT_CMDBLK.MINOR_ERR = CODE_INCONSIS;
      361     5240    3             CALL XUR$ERRMSG(CODE_INCONSIS);
      362     5241    3             SET_OK_FLAG = '0'B;
      363     5242    3           END /* NEVER */;
      364     5243
      365     5244    2           IF SET_OK_FLAG THEN
      366     5245    3             DO;
      367     5246    3               CALL BLD_ASSMRG;
      368     5247    3               CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);
      369     5248    3               CALL CHK_DUPLICITY;
      370     5249    3               CALL ADD_ASSMRG;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:16   
      371     5250    3             END;
      372     5251
      373     5252    2           RETURN;
      374     5253
      375     5254    2   END READS;
      376     5255                %PAGE(ARG="REPORTS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:17   
              5272    2   /***************************************************************************
              5273    2    *                                                                         *
              5274    2    *                                  REPORTS                                *
              5275    2    *                                                                         *
              5276    2    ***************************************************************************/

      377     5280    1   REPORTS:
      378     5281    1           PROC;
      379     5282
      380     5283    2           VLP_SETSTA.OSTA.OMSGTYP# = TYPE$ -> OUT$SYM.TEXT;
      381     5284
      382     5285    2           CALL INDEX(POS, '?', TYPE$ -> OUT$SYM.TEXT) ALTRET(NO_Q1);
      383     5286
      384     5287    2           QT_CMDBLK.MINOR_ERR = CODE_NWTOR;
      385     5288    2           CALL XUR$ERRMSG(CODE_NWTOR);
      386     5289    2           SET_OK_FLAG = '0'B;
      387     5290
      388     5291    2   NO_Q1:
      389     5292    2           IF STATION$ ~= ADDR(NIL) THEN
      390     5293    3             DO;
      391     5294    3               VLP_SETSTA.OSTA.OSTATION# = STATION$ -> OUT$SYM.TEXT;
      392     5295
      393     5296    3               CALL INDEX(POS, '?', STATION$ -> OUT$SYM.TEXT) ALTRET(NO_Q2);
      394     5297
      395     5298    3               IF STATION$ -> OUT$SYM.COUNT - 1 ~= POS THEN
      396     5299    4                 DO;
      397     5300    4                   QT_CMDBLK.MINOR_ERR = CODE_IWS;
      398     5301    4                   CALL XUR$ERRMSG(CODE_IWS);
      399     5302    4                   SET_OK_FLAG = '0'B;
      400     5303    4                 END;
      401     5304
      402     5305    3               VLP_SETSTA.OSTA.ALLTRMS# = '1'B;
      403     5306    3             END;
      404     5307
      405     5308    2   NO_Q2:
      406     5309    2           IF SET_OK_FLAG THEN
      407     5310    3             DO;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:18   
      408     5311    3               CALL BLD_ASSMRG;
      409     5312    3               CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);
      410     5313    3               CALL ADD_ASSMRG;
      411     5314    3             END;
      412     5315
      413     5316    2           RETURN;
      414     5317
      415     5318    2   END REPORTS;
      416     5319                %PAGE(ARG="SPAWNS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:19   
              5336    2   /***************************************************************************
              5337    2    *                                                                         *
              5338    2    *                                   SPAWNS                                *
              5339    2    *                                                                         *
              5340    2    ***************************************************************************/

      417     5344    1   SPAWNS:
      418     5345    1           PROC;
      419     5346
      420     5347    2           VLP_SETSTA.OSTA.OMSGTYP# = TYPE$ -> OUT$SYM.TEXT;
      421     5348    2           VLP_SETSTA.OSTA.ANYDCB# = '1'B;
      422     5349
      423     5350    2           CALL INDEX(POS, '?', TYPE$ -> OUT$SYM.TEXT) ALTRET(NO_Q1);
      424     5351
      425     5352    2           QT_CMDBLK.MINOR_ERR = CODE_NWTOS;
      426     5353    2           CALL XUR$ERRMSG(CODE_NWTOS);
      427     5354    2           SET_OK_FLAG = '0'B;
      428     5355
      429     5356    2   NO_Q1:
      430     5357    2           IF SET_OK_FLAG THEN
      431     5358    3             DO;
      432     5359    3               CALL BLD_ASSMRG;
      433     5360    3               CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);
      434     5361    3               CALL ADD_ASSMRG;
      435     5362    3             END;
      436     5363
      437     5364    2           RETURN;
      438     5365
      439     5366    2   END SPAWNS;
      440     5367                %PAGE(ARG="RESPONDS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:20   
              5384    2   /***************************************************************************
              5385    2    *                                                                         *
              5386    2    *                                  RESPONDS                               *
              5387    2    *                                                                         *
              5388    2    ***************************************************************************/

      441     5392    1   RESPONDS:
      442     5393    1           PROC;
      443     5394
      444     5395    2           CALL BLD_ASSMRG;
      445     5396    2           CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);
      446     5397    2           CALL CHK_DUPLICITY;
      447     5398    2           CALL ADD_ASSMRG;
      448     5399
      449     5400    2           RETURN;
      450     5401
      451     5402    2   END RESPONDS;
      452     5403                %PAGE(ARG="SET_DCB", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:21   
              5420    2   /***************************************************************************
              5421    2    *                                                                         *
              5422    2    *                                  SET_DCB                                *
              5423    2    *                                                                         *
              5424    2    ***************************************************************************/

      453     5428    1   SET_DCB:
      454     5429    1           PROC;
      455     5430
      456     5431    2           CALL INSERT(SET_CMD,0,256,'SET ',KEY.TEXT,' ',
      457     5432    2               QT_CMDBLK.OUT$->OUT$BLK.SUBLK$(1)->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      458     5433    2           FPT_YC.CMD_ = VECTOR(SET_CMD);
      459     5434
      460     5435    2           CALL M$YC(FPT_YC) ALTRET(RET);
      461     5436
      462     5437    2           CALL M$OPEN(FPT_OPEN) ALTRET(MON_ERR);
      463     5438
      464     5439    2           FPT_READ.BUF_.BUF$ = QT_GLOBAL.AMR$FPT_OPEN$;
      465     5440    2           FPT_READ.BUF_.BOUND = QT_GLOBAL.AMR$FPT_OPEN_SIZE - 1;
      466     5441    2           CALL M$READ(FPT_READ) ALTRET(MON_ERR);
      467     5442    2           CALL M$CLOSE(FPT_CLOSE);
      468     5443
      469     5444    2           ASSMRG_SIZE = DCBADDR(DCBNUM(M$STARA)) -> F$DCB.ARS#;
      470     5445
      471     5446    2           IF AMR$FPT_OPEN.SETSTA_ ~= ADDR(NIL) THEN
      472     5447    3             DO;
      473     5448    3               PTR$ = AMR$FPT_OPEN.SETSTA_;
      474     5449    3               SETSTA$ = PINCRW(QT_GLOBAL.AMR$FPT_OPEN$, PTR$_BITS.WORDS);
      475     5450
      476     5451    3               IF NOT(SETSTA$ -> VLP$SETSTA.ISTA.ILATCH# OR
      477     5452    3                   SETSTA$ -> VLP$SETSTA.OSTA.OLATCH#) THEN
      478     5453    4                 DO;
      479     5454    4                   QT_CMDBLK.MINOR_ERR = CODE_NOLATCH;
      480     5455    4                   CALL XUR$ERRMSG(CODE_NOLATCH);
      481     5456    4                 END;
      482     5457    3             END;
      483     5458
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:22   
      484     5459    2           CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);
      485     5460    2           CALL ADD_ASSMRG;
      486     5461    2           FPT_YC.CMD_ = VECTOR(RESET_CMD);
      487     5462    2           CALL M$YC(FPT_YC) ALTRET(RET);
      488     5463
      489     5464    2   RET:
      490     5465    2           RETURN;
      491     5466
      492     5467    2   MON_ERR:
      493     5468    2           CALL QTC$MON_ERR('1'B);
      494     5469
      495     5470    2   END SET_DCB;
      496     5471                %PAGE(ARG="ILLEGAL_SET", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:23   
              5488    2   /***************************************************************************
              5489    2    *                                                                         *
              5490    2    *                                ILLEGAL_SET                              *
              5491    2    *                                                                         *
              5492    2    ***************************************************************************/

      497     5496    1   ILLEGAL_SET:
      498     5497    1           PROC;
      499     5498
      500     5499    2           QT_CMDBLK.MINOR_ERR = CODE_ITU;
      501     5500    2           CALL XUR$ERRMSG(CODE_ITU);
      502     5501
      503     5502    2           RETURN;
      504     5503
      505     5504    2   END ILLEGAL_SET;
      506     5505                %PAGE(ARG="BLD_ASSMRG", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:24   
              5522    2   /***************************************************************************
              5523    2    *                                                                         *
              5524    2    *                                 BLD_ASSMRG                              *
              5525    2    *                                                                         *
              5526    2    ***************************************************************************/

      507     5530    1   BLD_ASSMRG:
      508     5531    1           PROC;
      509     5532
      510     5533    2           IF QT$ENTRY.FLAGS.NEW_LOCK THEN
      511     5534    3             DO;
      512     5535    3               VLP_SETSTA.ISTA.ILOCK# = '1'B;
      513     5536    3               VLP_SETSTA.OSTA.OLOCK# = '1'B;
      514     5537    3             END;
      515     5538
      516     5539    2           AMR$FPT_OPEN = AMR_FPT_OPEN_C;
      517     5540    2           AMR$FPT_OPEN.V_ = ADDR(AMR$FPT_OPEN.V);
      518     5541
      519     5542    2           SETSTA$ = PINCRW(QT_GLOBAL.AMR$FPT_OPEN$, SIZEW(AMR$FPT_OPEN));
      520     5543    2           AMR$FPT_OPEN.SETSTA_ = SETSTA$;
      521     5544    2           SETSTA$ -> VLP$SETSTA = VLP_SETSTA;
      522     5545
      523     5546    2           ASSMRG_SIZE = (SIZEW(VLP$SETSTA) + SIZEW(AMR$FPT_OPEN)) * 4;
      524     5547
      525     5548    2           RETURN;
      526     5549
      527     5550    2   END BLD_ASSMRG;
      528     5551                %PAGE(ARG="ADD_ASSMRG", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:25   
              5568    2   /***************************************************************************
              5569    2    *                                                                         *
              5570    2    *                                 ADD_ASSMRG                              *
              5571    2    *                                                                         *
              5572    2    ***************************************************************************/

      529     5576    1   ADD_ASSMRG:
      530     5577    1           PROC;
      531     5578
      532     5579    2           BYTE_COUNT = 0;
      533     5580    2           REC$ = QT_GLOBAL.QT$SETTEXT$;
      534     5581
      535     5582    3           DO I = 1 TO QT$ENTRY.SET_COUNT;
      536     5583    3             BYTE_COUNT = BYTE_COUNT + SIZEW(REC$ -> QT$SETTEXT)*4;
      537     5584    3             REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETTEXT));
      538     5585    3           END;
      539     5586
      540     5587    2           IF SAVE_SET.COUNT + BYTE_COUNT + 13 > QT_GLOBAL.QT$SETTEXT_SIZE THEN
      541     5588    3             DO;
      542     5589    3               CALL QTC$GETMEM(QT_GLOBAL.QT$SETTEXT$, QT_GLOBAL.QT$SETTEXT_SIZE);
      543     5590    3             END;
      544     5591
      545     5592    2           REC$ -> QT$SETTEXT.COUNT = SAVE_SET.COUNT;
      546     5593    2           REC$ -> QT$SETTEXT.TEXT = SAVE_SET.TEXT;
      547     5594    2           REC$ -> QT$SETTEXT.JUNK1 = 0;
      548     5595    2           REC$ -> QT$SETTEXT.JUNK2 = 0;
      549     5596    2           REC$ -> QT$SETTEXT.JUNK3 = 0;
      550     5597
      551     5598    2           BYTE_COUNT = SIZEW(QT$ENTRY)*4;
      552     5599    2           REC$ = PINCRW(QT_GLOBAL.QT$ENTRY$, SIZEW(QT$ENTRY));
      553     5600
      554     5601    3           DO I = 1 TO QT$ENTRY.SET_COUNT;
      555     5602    3             BYTE_COUNT = BYTE_COUNT + SIZEW(REC$ -> QT$SETBITS)*4;
      556     5603    3             REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETBITS));
      557     5604    3           END;
      558     5605
      559     5606    2           IF ASSMRG_SIZE + BYTE_COUNT + 46 > QT_GLOBAL.QT$ENTRY_SIZE THEN
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:26   
      560     5607    3             DO;
      561     5608    3               CALL QTC$GETMEM(QT_GLOBAL.QT$ENTRY$, QT_GLOBAL.QT$ENTRY_SIZE);
      562     5609    3             END;
      563     5610
      564     5611    2           REC$ -> QT$SETBITS.TYPE = QT_CMDBLK.CODE;
      565     5612    2           REC$ -> QT$SETBITS.JUNK1 = 0;
      566     5613    2           REC$ -> QT$SETBITS.JUNK2 = 0;
      567     5614    2           REC$ -> QT$SETBITS.FLAGS = '0'B;
      568     5615    2           REC$ -> QT$SETBITS.FLAGS.ONEREPORT = ONEREPORT_FLAG;
      569     5616    2           REC$ -> QT$SETBITS.DCBNAME.COUNT = DCB$ -> OUT$SYM.COUNT;
      570     5617    2           REC$ -> QT$SETBITS.DCBNAME.TEXT = DCB$ -> OUT$SYM.TEXT;
      571     5618    2           REC$ -> QT$SETBITS.ASN_MERGE.COUNT = ASSMRG_SIZE;
      572     5619    2           CHAR_STRING_SIZE = ASSMRG_SIZE;
      573     5620    2           REC$ -> QT$SETBITS.ASN_MERGE.TEXT =
      574     5621    2               QT_GLOBAL.AMR$FPT_OPEN$ -> CHAR$STRING;
      575     5622
      576     5623    2           QT$ENTRY.SET_COUNT = QT$ENTRY.SET_COUNT + 1;
      577     5624
      578     5625    2           RETURN;
      579     5626
      580     5627    2   END ADD_ASSMRG;
      581     5628                %PAGE(ARG="CHK_DUPLICITY", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:27   
              5645    2   /***************************************************************************
              5646    2    *                                                                         *
              5647    2    *                               CHK_DUPLICITY                             *
              5648    2    *                                                                         *
              5649    2    ***************************************************************************/

      582     5653    1   CHK_DUPLICITY:
      583     5654    1           PROC;
      584     5655
      585     5656    2           DUPLICITY_CNT = 0;
      586     5657
      587     5658    2           REC$ = PINCRW(QT_GLOBAL.QT$ENTRY$, SIZEW(QT$ENTRY));
      588     5659
      589     5660    3           DO I = 1 TO QT$ENTRY.SET_COUNT;
      590     5661    3             IF REC$ -> QT$SETBITS.TYPE = QT_CMDBLK.CODE THEN
      591     5662    4               DO;
      592     5663    4                 DUPLICITY_CNT = DUPLICITY_CNT + 1;
      593     5664    4               END;
      594     5665
      595     5666    3             REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETBITS));
      596     5667    3           END;
      597     5668
      598     5669    2           IF DUPLICITY_CNT > 0 THEN
      599     5670    3             DO;
      600     5671    4               DO CASE(QT_CMDBLK.CODE);
      601     5672
      602     5673    4                 CASE(18 /* READS */);
      603     5674    4                   QT_CMDBLK.MINOR_ERR = CODE_DUREADS;
      604     5675
      605     5676    4                 CASE(21 /* RESPONDS */);
      606     5677    4                   QT_CMDBLK.MINOR_ERR = CODE_DURESPONDS;
      607     5678
      608     5679    4               END /* CASE */;
      609     5680
      610     5681    3               CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR);
      611     5682
      612     5683    3             END;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:28   
      613     5684
      614     5685    2           RETURN;
      615     5686
      616     5687    2   END CHK_DUPLICITY;
      617     5688    1   END QTC$PROCESS_SET;

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:29   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   QT_SUBS_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QT_PERR_C.:E05TOU  is referenced.
   QT_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QTC$PROCESS_SET.

   Procedure QTC$PROCESS_SET requires 680 words for executable code.
   Procedure QTC$PROCESS_SET requires 494 words of local(AUTO) storage.

    No errors detected in file QTC$PROCESS_SET.:E05TSI    .

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:30   

 Object Unit name= QTC$PROCESS_SET                            File name= QTC$PROCESS_SET.:E05TOU
 UTS= JUL 30 '97 05:50:45.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none    98    142  M$STARA
    2   Data  even  none   200    310  QTC$PROCESS_SET
    3  RoData even  UTS     80    120  QTC$PROCESS_SET
    4   Proc  even  none   680   1250  QTC$PROCESS_SET
    5  RoData even  none    25     31  QTC$PROCESS_SET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        3  QTC$PROCESS_SET

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 X$PARSE
 yes     yes           Std       7 XUR$ERRMSG
 yes     yes           Std       2 QQC$WILD_COMP
 yes     yes           Std       1 QTC$DELETE_SET
         yes           Std       1 QTC$MON_ERR
         yes           Std       2 QTC$GETMEM
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:31   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QT_GLOBAL                             QT_CMDBLK
     M$STARA                               QT_NODES1                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:32   


        1        1        /*M* QTC$PROCESS_SET - Process 'SET' commands */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        /*P* NAME:        QTC$PROCESS_SET
        9        9
       10       10             PURPOSE:     This modules processes all TRADER 'SET' commands.
       11       11        */
       12       12        /*D* NAME:        QTC$PROCESS_SETS
       13       13
       14       14             CALL:        CALL QTC$PROCESS_SET(SET_COMMAND, PARSE_FLAG, MSGTYP)
       15       15
       16       16             INPUT:       SET_COMMAND - The text of the 'SET' command that
       17       17                          is to be processed.
       18       18
       19       19                          PARSE_FLAG - Set if we must call X$PARSE to parse
       20       20                          the command.  There are some paths to this routine
       21       21                          whereby the 'SET' will not have been preparsed.
       22       22
       23       23                          MSGTYP - The message type on the CREATE ENTRY that
       24       24                          this 'SET' is associated with.
       25       25
       26       26             OUTPUT:      The new assign merge record is added to the
       27       27                          _E data segment and the text of the 'SET' is
       28       28                          added to the _S data segment.
       29       29
       30       30             DESCRIPTION: This routine builds assign merge records for
       31       31                          TRADER 'SET' commands.  A set command may be
       32       32                          of the normal IBEX form or it may be the
       33       33                          TRADERese syntax.  Required knowledge before
       34       34                          fishing through this routine is the format
       35       35                          of an assign merge record.
       36       36
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:33   
       37       37                          For a 'SET' that is of the normal IBEX format
       38       38                          a M$YC call is made and IBEX is the one that
       39       39                          does the processing of the command.  When
       40       40                          IBEX is done with it the assign merge record
       41       41                          is read from the *A file and is added to the
       42       42                          assign merge records already defined.
       43       43
       44       44                          For 'SET' commands that TRADER processes a more
       45       45                          extensive set of validity checks is done on
       46       46                          the information presented.  Once the checks
       47       47                          have been satisfied an assign merge record
       48       48                          is built.
       49       49
       50       50                          The text of the 'SET' commands is maintained
       51       51                          along with the assign merge information.  When
       52       52                          a DCB is updated or deleted this text gets updated
       53       53                          at the same time.
       54       54        */
       55       55        %EJECT;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:34   
       56       56        QTC$PROCESS_SET:
       57       57                PROC(P_SET, P_PARSE_FLAG, P_MSGTYP);

     57  4 000000   000000 700200 xent  QTC$PROCESS* TSX0  ! X66_AUTO_3
         4 000001   000756 000003                    ZERO    494,3

       58       58
       59       59        %INCLUDE Q_PAGE_C;
       60       91        %SET LISTEXP = '1'B;
       61       92        %PAGE(ARG="Includes");

               109        /***************************************************************************
               110         *                                                                         *
               111         *                                  Includes                               *
               112         *                                                                         *
               113         ***************************************************************************/

       62      117        %INCLUDE CP_6;
       63      198        %INCLUDE QT_DATA_R;
       64      212        %INCLUDE QT_PERR_C;
       65      263        %INCLUDE Q_ERRCODE_C;
       66      286        %INCLUDE QT_MACROS_C;
       67      444        %INCLUDE QT_SUBS_C;
       68      528        %INCLUDE XU_MACRO_C;
       69     3634        %PAGE(ARG="Parameters");

              3651    1   /***************************************************************************
              3652    1    *                                                                         *
              3653    1    *                                 Parameters                              *
              3654    1    *                                                                         *
              3655    1    ***************************************************************************/

       70     3659    1   DCL 1 P_SET,
       71     3660    1         2 COUNT UBIN(9) UNAL,
       72     3661    1         2 JUNK1 UBIN WORD ALIGNED,
       73     3662    1         2 JUNK2 UBIN WORD UNAL,
       74     3663    1         2 JUNK3 UBIN WORD UNAL,
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:35   
       75     3664    1         2 TEXT CHAR(P_SET.COUNT);
       76     3665
       77     3666    1   DCL P_PARSE_FLAG BIT(1) ALIGNED;
       78     3667    1   DCL P_MSGTYP CHAR(8);
       79     3668        %PAGE(ARG="Externally defined routines");

              3685    1   /***************************************************************************
              3686    1    *                                                                         *
              3687    1    *                        Externally defined routines                      *
              3688    1    *                                                                         *
              3689    1    ***************************************************************************/

       80     3693    1   DCL QQC$WILD_COMP ENTRY(2) ALTRET;
       81     3694    1   DCL QTC$DELETE_SET ENTRY(1) ALTRET;
       82     3695    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       83     3696    1   DCL QTC$MON_ERR ENTRY(1);
       84     3697    1   DCL QTC$GETMEM ENTRY(2);
       85     3698    1   DCL X$PARSE ENTRY(1) ALTRET;
       86     3699        %M$DCB(DCBN=M$STARA, NAME='*A');
       87     3773        %PAGE(ARG="Symrefs");

              3790    1   /***************************************************************************
              3791    1    *                                                                         *
              3792    1    *                                  Symrefs                                *
              3793    1    *                                                                         *
              3794    1    ***************************************************************************/

       88     3798    1   DCL QT_NODES1 UBIN WORD SYMREF;
       89     3799        %PAGE(ARG="Based");

              3816    1   /***************************************************************************
              3817    1    *                                                                         *
              3818    1    *                                   Based                                 *
              3819    1    *                                                                         *
              3820    1    ***************************************************************************/

       90     3824        %QT$ENTRY;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:36   
       91     3878        %QT$SETTEXT;
       92     3888        %QT$SETBITS;
       93     3909        %F$DCB;
       94     3966        %PARSE$SYM(STCLASS=BASED);
       95     4004        %PARSE$OUT(STCLASS=BASED);
       96     4049
       97     4050    1   DCL 1 DCB$NAME BASED,
       98     4051    1         2 COUNT UBIN(9) UNAL,
       99     4052    1         2 TEXT CHAR(DCB$NAME.COUNT);
      100     4053
      101     4054    1   DCL CHAR$STRING CHAR(CHAR_STRING_SIZE) BASED;
      102     4055
      103     4056        %FPT_OPEN(FPTN=AMR$FPT_OPEN, STCLASS="BASED(QT_GLOBAL.AMR$FPT_OPEN$)",
      104     4057        PFMT=PTR, VECTOR=ADDR);
      105     4166
      106     4167        %VLP_SETSTA(FPTN=VLP$SETSTA, STCLASS=BASED);
      107     4195        %PAGE(ARG="Static");

              4212    1   /***************************************************************************
              4213    1    *                                                                         *
              4214    1    *                                   Static                                *
              4215    1    *                                                                         *
              4216    1    ***************************************************************************/

      108     4220        %P_PCB(STCLASS=STATIC);
      109     4419
      110     4420    1   DCL SET_CMD CHAR(256) STATIC INIT(' ');
      111     4421        %PAGE(ARG="Constants");

              4438    1   /***************************************************************************
              4439    1    *                                                                         *
              4440    1    *                                 Constants                               *
              4441    1    *                                                                         *
              4442    1    ***************************************************************************/

      112     4446        %FPT_OPEN(FPTN=AMR_FPT_OPEN_C, STCLASS=CONSTANT,
      113     4447        RES='ME', PFMT=PTR, VECTOR=ADDR, ASN=DEVICE);
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:37   
      114     4556
      115     4557        %VLP_SETSTA(FPTN=VLP_SETSTA_C, STCLASS=CONSTANT,ILATCH=YES, OLATCH=YES,
      116     4558        EOFNONE=YES, WAS=YES);
      117     4586    1   DCL 1 KEY CONSTANT,
      118     4587    1         2 COUNT UBIN(9) UNAL INIT(31),
      119     4588    1         2 TEXT CHAR(31) INIT('M$TRADER_ASSN:MRGE:REC_DCB_NAME');
      120     4589
      121     4590    1   DCL RESET_CMD CHAR(0) CONSTANT INIT('R M$TRADER_ASSN:MRGE:REC_DCB_NAME');
      122     4591        %PAGE(ARG="Auto");

              4608    1   /***************************************************************************
              4609    1    *                                                                         *
              4610    1    *                                    Auto                                 *
              4611    1    *                                                                         *
              4612    1    ***************************************************************************/

      123     4616    1   DCL NSUBLKS UBIN WORD;
      124     4617    1   DCL I UBIN WORD;
      125     4618    1   DCL ASSMRG_SIZE UBIN WORD;
      126     4619    1   DCL BYTE_COUNT UBIN WORD;
      127     4620    1   DCL CHAR_STRING_SIZE UBIN WORD;
      128     4621    1   DCL POS UBIN WORD;
      129     4622    1   DCL DUPLICITY_CNT UBIN WORD;
      130     4623    1   DCL PARSE_WORK(0:399) UBIN WORD;
      131     4624
      132     4625    1   DCL SUBLK$ PTR;
      133     4626    1   DCL TYPE$ PTR;
      134     4627    1   DCL SETSTA$ PTR;
      135     4628    1   DCL REC$ PTR;
      136     4629    1   DCL STATION$ PTR;
      137     4630    1   DCL DCB$ PTR;
      138     4631    1   DCL PTR$ PTR;
      139     4632    1   DCL 1 PTR$_BITS REDEF PTR$,
      140     4633    1         2 WORDS UBIN(18) UNAL,
      141     4634    1         2 * BIT(18) UNAL;
      142     4635
      143     4636    1   DCL SET_OK_FLAG BIT(1) ALIGNED;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:38   
      144     4637    1   DCL ONEREPORT_FLAG BIT(1) ALIGNED;
      145     4638
      146     4639    1   DCL 1 SAVE_SET,
      147     4640    1         2 COUNT UBIN(9) UNAL,
      148     4641    1         2 TEXT CHAR(256);
      149     4642
      150     4643        %VLP_SETSTA;
      151     4671        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:39   
              4688    1   /***************************************************************************
              4689    1    *                                                                         *
              4690    1    *                                Error codes                              *
              4691    1    *                                                                         *
              4692    1    ***************************************************************************/

      152     4696        %ERRCODE(NAME=CODE_IWT, CODE#=%E$IWT, FCG#=%FCG_QT, MID#=%MID_C);
      153     4703        %ERRCODE(NAME=CODE_NWTOR, CODE#=%E$NWTOR, FCG#=%FCG_QT, MID#=%MID_C);
      154     4710        %ERRCODE(NAME=CODE_IWS, CODE#=%E$IWS, FCG#=%FCG_QT, MID#=%MID_C);
      155     4717        %ERRCODE(NAME=CODE_NWTOS, CODE#=%E$NWTOS, FCG#=%FCG_QT, MID#=%MID_C);
      156     4724        %ERRCODE(NAME=CODE_ITU, CODE#=%E$ITU, FCG#=%FCG_QT, MID#=%MID_C);
      157     4731        %ERRCODE(NAME=CODE_IIPS, CODE#=%E$IIPS, FCG#=%FCG_QT, MID#=%MID_C);
      158     4738        %ERRCODE(NAME=CODE_DUREADS, CODE#=%E$DUREADS, FCG#=%FCG_QT, MID#=%MID_C);
      159     4745        %ERRCODE(NAME=CODE_DURESPONDS, CODE#=%E$DURESPONDS, FCG#=%FCG_QT, MID#=%MID_C);
      160     4752        %ERRCODE(NAME=CODE_INCONSIS, CODE#=%E$INCONSIS, FCG#=%FCG_QT, MID#=%MID_C);
      161     4759        %ERRCODE(NAME=CODE_NOLATCH, CODE#=%E$NOLATCH, FCG#=%FCG_QT, MID#=%MID_C);
      162     4766        /*E*       ERROR: QTC-E$IWT-C
      163     4767
      164     4768                 MESSAGE: The specified transaction type is invalid.
      165     4769                          Wildcarded types may only have a ? as the last
      166     4770                          character of the transaction type,
      167     4771                          e. g., A?B? is illegal, ? or AB? are legal.
      168     4772             DESCRIPTION: Wild carded transaction types are more restrictive
      169     4773                          than generalized wild carding.  The rules are
      170     4774                          only one ?, and the ? must be the last character
      171     4775                          of the transaction type.
      172     4776        */
      173     4777        /*E*       ERROR: QTC-E$NWTOR-C
      174     4778
      175     4779                 MESSAGE: Wild carding is not permitted on report types.
      176     4780             DESCRIPTION: A report name may not have any ?s as part
      177     4781                          of the name.
      178     4782        */
      179     4783        /*E*       ERROR: QTC-E$IWS-C
      180     4784
      181     4785                 MESSAGE: The specified station name is invalid.
      182     4786                          Wildcarded stations may only have a ? as the last
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:40   
      183     4787                          character of the station name,
      184     4788                          e. g., A?B? is illegal, ? or AB? are legal.
      185     4789             DESCRIPTION: Wild carded station names are more restrictive
      186     4790                          than generalized wild carding.  The rules are
      187     4791                          only one ?, and the ? must be the last character
      188     4792                          of the station name.
      189     4793        */
      190     4794        /*E*       ERROR: QTC-E$NWTOS-C
      191     4795
      192     4796                 MESSAGE: Wildcarding is not permitted in the type of
      193     4797                          a spawned transaction.
      194     4798             DESCRIPTION: A spawned transaction name may not have any ?s
      195     4799                          as part of the name.
      196     4800        */
      197     4801        /*E*       ERROR: QTC-E$ITU-C
      198     4802
      199     4803                 MESSAGE: Updates to DCBs which have been set previously
      200     4804                          are not permitted.
      201     4805             DESCRIPTION: Update operations are ones where you want to
      202     4806                          add an option to a DCB that had been set
      203     4807                          previously E.G., SET M$LO FILE
      204     4808                          SET M$LO , CTG (adding the CTG option).
      205     4809        */
      206     4810        /*E*       ERROR: QTC-E$IIPS-C
      207     4811
      208     4812                 MESSAGE: Internal error re-parsing a SET command.
      209     4813             DESCRIPTION: An attempt to re-parse a set command failed.
      210     4814                          Probably the text that is being passed down
      211     4815                          got corrupted by someone?
      212     4816        */
      213     4817        /*E*       ERROR: QTC-E$DUREADS-C
      214     4818
      215     4819                 MESSAGE: READS command used more than once for this
      216     4820                          transaction type.  The most recent READS
      217     4821                          command has been used.
      218     4822             DESCRIPTION: A TPAP should only be reading the input
      219     4823                          transaction through one DCB.  I'm not really
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:41   
      220     4824                          sure what you are trying to do, are you?
      221     4825        */
      222     4826        /*E*       ERROR: QTC-E$DURESPONDS-C
      223     4827
      224     4828                 MESSAGE: Warning:  More than 1 'RESPONDS' found
      225     4829             DESCRIPTION: A TPAP should only be responding through
      226     4830                          one DCB.
      227     4831        */
      228     4832        /*E*       ERROR: QTC-E$INCONSIS-C
      229     4833
      230     4834                 MESSAGE: The message type on the READS command must be
      231     4835                          identical to the message type on the previous
      232     4836                          CREATE or MODIFY ENTRY command.
      233     4837             DESCRIPTION: If you are creating message type R and you
      234     4838                          then specify on a 'READS':
      235     4839                             READS GORGO THRU M$SI
      236     4840                          then this is inconsistent.  This is true
      237     4841                          because you can not read the type the
      238     4842                          transaction type that you are defining with
      239     4843                          the 'READS' statement you are providing.
      240     4844        */
      241     4845        /*E*       ERROR: QTC-E$NOLATCH-C
      242     4846
      243     4847                 MESSAGE: Warning:  ILATCH or OLATCH is not specified.
      244     4848             DESCRIPTION: TPAPs should always read with latch
      245     4849        */
      246     4850        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:42   
              4867    1   /***************************************************************************
              4868    1    *                                                                         *
              4869    1    *                                    FPTs                                 *
              4870    1    *                                                                         *
              4871    1    ***************************************************************************/

      247     4875        %FPT_READ(DCB=M$STARA, KEYS=YES, KEY=KEY);
      248     4914
      249     4915        %FPT_OPEN(DCB=M$STARA, ACS=DIRECT, EXIST=OLDFILE, FUN=IN, ORG=KEYED,
      250     4916        SHARE=ALL, ASN=FILE);
      251     5025
      252     5026        %FPT_CLOSE(DCB=M$STARA, DISP=SAVE);
      253     5068
      254     5069        %FPT_YC(ECHO=NO);
      255     5086        %PAGE(ARG="QTC$PROCESS_SET", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:43   
              5103    1   /***************************************************************************
              5104    1    *                                                                         *
              5105    1    *                              QTC$PROCESS_SET                            *
              5106    1    *                                                                         *
              5107    1    ***************************************************************************/

      256     5111    1           SAVE_SET.COUNT = P_SET.COUNT;

   5111  4 000002   200003 470500                    LDP0    @P_SET,,AUTO
         4 000003   000000 236100                    LDQ     0,,PR0
         4 000004   200646 552140                    STBQ    SAVE_SET,'40'O,AUTO

      257     5112    1           SAVE_SET.TEXT = P_SET.TEXT;

   5112  4 000005   000000 236100                    LDQ     0,,PR0
         4 000006   000033 772000                    QRL     27
         4 000007   000000 620006                    EAX0    0,QL
         4 000010   040100 100540                    MLR     fill='040'O
         4 000011   000004 000010                    ADSC9   4,,PR0                   cn=0,n=*X0
         4 000012   200646 200400                    ADSC9   SAVE_SET,,AUTO           cn=1,n=256

      258     5113
      259     5114    1           IF P_PARSE_FLAG THEN

   5114  4 000013   200004 471500                    LDP1    @P_PARSE_FLAG,,AUTO
         4 000014   100000 234100                    SZN     0,,PR1
         4 000015   000041 605000 4                  TPL     s:5127

      260     5115    2             DO;

      261     5116    2               P_PCB.TEXT$ = ADDR(SAVE_SET.TEXT);

   5116  4 000016   200754 452500                    STP2    SAVE_SET+70,,AUTO
         4 000017   200754 236100                    LDQ     SAVE_SET+70,,AUTO
         4 000020   000000 036000 5                  ADLQ    0
         4 000021   000000 756000 2                  STQ     P_PCB

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:44   
      262     5117    2               P_PCB.ROOT$ = ADDR(QT_NODES1);

   5117  4 000022   000001 236000 5                  LDQ     1
         4 000023   000001 756000 2                  STQ     P_PCB+1

      263     5118    2               P_PCB.WORK$ = ADDR(PARSE_WORK);

   5118  4 000024   200015 633500                    EPPR3   PARSE_WORK,,AUTO
         4 000025   000002 453400 2                  STP3    P_PCB+2

      264     5119    2               P_PCB.WKSZ = SIZEW(PARSE_WORK);

   5119  4 000026   000620 220003                    LDX0    400,DU
         4 000027   000005 740000 2                  STX0    P_PCB+5

      265     5120    2               P_PCB.NCHARS = SAVE_SET.COUNT;

   5120  4 000030   200646 236100                    LDQ     SAVE_SET,,AUTO
         4 000031   000033 772000                    QRL     27
         4 000032   000011 756000 2                  STQ     P_PCB+9

      266     5121
      267     5122    2               CALL X$PARSE(P_PCB) ALTRET(PARSE_ERR);

   5122  4 000033   000002 630400 5                  EPPR0   2
         4 000034   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000035   000000 701000 xent               TSX1    X$PARSE
         4 000036   000207 702000 4                  TSX2    PARSE_ERR

      268     5123
      269     5124    2               QT_CMDBLK.OUT$ = P_PCB.OUT$;

   5124  4 000037   000003 236000 2                  LDQ     P_PCB+3
         4 000040   000004 756000 xsym               STQ     QT_CMDBLK+4

      270     5125    2             END;

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:45   
      271     5126
      272     5127    1           QT_CMDBLK.CODE = QT_CMDBLK.OUT$ -> OUT$BLK.CODE;

   5127  4 000041   000004 470400 xsym               LDP0    QT_CMDBLK+4
         4 000042   000000 236100                    LDQ     0,,PR0
         4 000043   777777 376007                    ANQ     -1,DL
         4 000044   000005 756000 xsym               STQ     QT_CMDBLK+5

      273     5128    1           NSUBLKS = QT_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS - 1;

   5128  4 000045   000001 236100                    LDQ     1,,PR0
         4 000046   000022 772000                    QRL     18
         4 000047   000001 136007                    SBLQ    1,DL
         4 000050   200006 756100                    STQ     NSUBLKS,,AUTO

      274     5129    1           STATION$ = ADDR(NIL);

   5129  4 000051   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000052   200641 756100                    STQ     STATION$,,AUTO

      275     5130    1           SET_OK_FLAG = '1'B;

   5130  4 000053   400000 236003                    LDQ     -131072,DU
         4 000054   200644 756100                    STQ     SET_OK_FLAG,,AUTO

      276     5131    1           ONEREPORT_FLAG = '0'B;

   5131  4 000055   200645 450100                    STZ     ONEREPORT_FLAG,,AUTO

      277     5132    1           VLP_SETSTA = VLP_SETSTA_C;

   5132  4 000056   000000 100400                    MLR     fill='000'O
         4 000057   000050 000060 3                  ADSC9   VLP_SETSTA_C             cn=0,n=48
         4 000060   000116 000060 2                  ADSC9   VLP_SETSTA               cn=0,n=48

      278     5133
      279     5134    2           DO I = 0 TO NSUBLKS;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:46   

   5134  4 000061   200007 450100                    STZ     I,,AUTO
         4 000062   000145 710000 4                  TRA     s:5163+3

      280     5135    2             SUBLK$ = QT_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(I);

   5135  4 000063   000004 470400 xsym               LDP0    QT_CMDBLK+4
         4 000064   200007 720100                    LXL0    I,,AUTO
         4 000065   000003 236110                    LDQ     3,X0,PR0
         4 000066   200635 756100                    STQ     SUBLK$,,AUTO

      281     5136
      282     5137    3             DO CASE(SUBLK$ -> OUT$SYM.CODE);

   5137  4 000067   200635 471500                    LDP1    SUBLK$,,AUTO
         4 000070   100000 721100                    LXL1    0,,PR1
         4 000071   000013 101003                    CMPX1   11,DU
         4 000072   000074 602011 4                  TNC     s:5137+5,X1
         4 000073   000142 710000 4                  TRA     s:5163
         4 000074   000142 710000 4                  TRA     s:5163
         4 000075   000107 710000 4                  TRA     s:5139
         4 000076   000113 710000 4                  TRA     s:5145
         4 000077   000111 710000 4                  TRA     s:5142
         4 000100   000115 710000 4                  TRA     s:5148
         4 000101   000142 710000 4                  TRA     s:5163
         4 000102   000142 710000 4                  TRA     s:5163
         4 000103   000142 710000 4                  TRA     s:5163
         4 000104   000142 710000 4                  TRA     s:5163
         4 000105   000142 710000 4                  TRA     s:5163
         4 000106   000130 710000 4                  TRA     s:5156

      283     5138    3               CASE(1 /* OPT_TYPE */);

      284     5139    3                 TYPE$ = SUBLK$;

   5139  4 000107   200636 756100                    STQ     TYPE$,,AUTO
         4 000110   000142 710000 4                  TRA     s:5163
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:47   

      285     5140
      286     5141    3               CASE(3 /* OPT_STATION */);

      287     5142    3                 STATION$ = SUBLK$;

   5142  4 000111   200641 756100                    STQ     STATION$,,AUTO
         4 000112   000142 710000 4                  TRA     s:5163

      288     5143
      289     5144    3               CASE(2 /* OPT_DCB */);

      290     5145    3                 DCB$ = SUBLK$;

   5145  4 000113   200642 756100                    STQ     DCB$,,AUTO
         4 000114   000142 710000 4                  TRA     s:5163

      291     5146
      292     5147    3               CASE(4 /* OPT_MODE */);

      293     5148    3                 SUBLK$ = SUBLK$ -> OUT$BLK.SUBLK$(0);

   5148  4 000115   100003 236100                    LDQ     3,,PR1
         4 000116   200635 756100                    STQ     SUBLK$,,AUTO

      294     5149    3                 IF SUBLK$ -> OUT$SYM.CODE = 1 /* MODE_SINGLE */ THEN

   5149  4 000117   200635 471500                    LDP1    SUBLK$,,AUTO
         4 000120   100000 721100                    LXL1    0,,PR1
         4 000121   000001 101003                    CMPX1   1,DU
         4 000122   000142 601000 4                  TNZ     s:5163

      295     5150    4                   DO;

      296     5151    4                     VLP_SETSTA.ISTA.EOFONE# = '1'B;

   5151  4 000123   100000 236003                    LDQ     32768,DU
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:48   
         4 000124   000124 256000 2                  ORSQ    VLP_SETSTA+6

      297     5152    4                     VLP_SETSTA.ISTA.EOFNONE# = '0'B;

   5152  4 000125   000003 236000 5                  LDQ     3
         4 000126   000124 356000 2                  ANSQ    VLP_SETSTA+6

      298     5153    4                   END;

   5153  4 000127   000142 710000 4                  TRA     s:5163

      299     5154
      300     5155    3               CASE(10 /* OPT_ONEREPORT */);

      301     5156    3                 SUBLK$ = SUBLK$ -> OUT$BLK.SUBLK$(0);

   5156  4 000130   100003 236100                    LDQ     3,,PR1
         4 000131   200635 756100                    STQ     SUBLK$,,AUTO

      302     5157    3                 IF SUBLK$ -> OUT$SYM.CODE = 2 /* YES */ THEN

   5157  4 000132   200635 471500                    LDP1    SUBLK$,,AUTO
         4 000133   100000 721100                    LXL1    0,,PR1
         4 000134   000002 101003                    CMPX1   2,DU
         4 000135   000141 601000 4                  TNZ     s:5160

      303     5158    3                   ONEREPORT_FLAG = '1'B;

   5158  4 000136   400000 236003                    LDQ     -131072,DU
         4 000137   200645 756100                    STQ     ONEREPORT_FLAG,,AUTO
         4 000140   000142 710000 4                  TRA     s:5163

      304     5159    3                 ELSE
      305     5160    3                   ONEREPORT_FLAG = '0'B;

   5160  4 000141   200645 450100                    STZ     ONEREPORT_FLAG,,AUTO

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:49   
      306     5161
      307     5162    3             END /* CASE */;

      308     5163    2           END;

   5163  4 000142   200007 235100                    LDA     I,,AUTO
         4 000143   000001 035007                    ADLA    1,DL
         4 000144   200007 755100                    STA     I,,AUTO
         4 000145   200006 236100                    LDQ     NSUBLKS,,AUTO
         4 000146   200007 116100                    CMPQ    I,,AUTO
         4 000147   000063 603000 4                  TRC     s:5135

      309     5164
      310     5165    2           DO CASE(QT_CMDBLK.CODE);

   5165  4 000150   000005 235000 xsym               LDA     QT_CMDBLK+5
         4 000151   000022 135007                    SBLA    18,DL
         4 000152   000010 115007                    CMPA    8,DL
         4 000153   000155 602005 4                  TNC     s:5165+5,AL
         4 000154   000206 710000 4                  TRA     s:5186
         4 000155   000165 710000 4                  TRA     s:5167
         4 000156   000170 710000 4                  TRA     s:5170
         4 000157   000206 710000 4                  TRA     s:5186
         4 000160   000176 710000 4                  TRA     s:5176
         4 000161   000201 710000 4                  TRA     s:5179
         4 000162   000204 710000 4                  TRA     s:5182
         4 000163   000206 710000 4                  TRA     s:5186
         4 000164   000173 710000 4                  TRA     s:5173

      311     5166    2             CASE(18 /* READS */);

      312     5167    2               CALL READS;

   5167  4 000165   000216 701000 4                  TSX1    READS
         4 000166   000000 011000                    NOP     0
         4 000167   000206 710000 4                  TRA     s:5186

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:50   
      313     5168
      314     5169    2             CASE(19 /* REPORTS */);

      315     5170    2               CALL REPORTS;

   5170  4 000170   000311 701000 4                  TSX1    REPORTS
         4 000171   000000 011000                    NOP     0
         4 000172   000206 710000 4                  TRA     s:5186

      316     5171
      317     5172    2             CASE(25 /* SPAWNS */);

      318     5173    2               CALL SPAWNS;

   5173  4 000173   000416 701000 4                  TSX1    SPAWNS
         4 000174   000000 011000                    NOP     0
         4 000175   000206 710000 4                  TRA     s:5186

      319     5174
      320     5175    2             CASE(21 /* RESPONDS */);

      321     5176    2               CALL RESPONDS;

   5176  4 000176   000466 701000 4                  TSX1    RESPONDS
         4 000177   000000 011000                    NOP     0
         4 000200   000206 710000 4                  TRA     s:5186

      322     5177
      323     5178    2             CASE(22 /* SET_DCB */);

      324     5179    2               CALL SET_DCB;

   5179  4 000201   000506 701000 4                  TSX1    SET_DCB
         4 000202   000000 011000                    NOP     0
         4 000203   000206 710000 4                  TRA     s:5186

      325     5180
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:51   
      326     5181    2             CASE(23 /* ILLEGAL_SET */);

      327     5182    2               CALL ILLEGAL_SET;

   5182  4 000204   000643 701000 4                  TSX1    ILLEGAL_SET
         4 000205   000000 011000                    NOP     0

      328     5183
      329     5184    2           END /* CASE */;

      330     5185
      331     5186    1           GOTO RET;

   5186  4 000206   000215 710000 4                  TRA     RET

      332     5187
      333     5188    1   PARSE_ERR:
      334     5189    1           QT_CMDBLK.MINOR_ERR = CODE_IIPS;

   5189  4 000207   000112 236000 3     PARSE_ERR    LDQ     CODE_IIPS
         4 000210   000001 756000 xsym               STQ     QT_CMDBLK+1

      335     5190    1           CALL XUR$ERRMSG(CODE_IIPS);

   5190  4 000211   000004 630400 5                  EPPR0   4
         4 000212   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000213   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000214   000000 011000                    NOP     0

      336     5191
      337     5192    1   RET:
      338     5193    1           RETURN;

   5193  4 000215   000000 702200 xent  RET          TSX2  ! X66_ARET

      339     5194                %PAGE(ARG="READS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:52   
              5211    1   /***************************************************************************
              5212    1    *                                                                         *
              5213    1    *                                   READS                                 *
              5214    1    *                                                                         *
              5215    1    ***************************************************************************/

      340     5219    1   READS:

   5219  4 000216   200750 741300       READS        STX1  ! SAVE_SET+66,,AUTO

      341     5220    1           PROC;
      342     5221
      343     5222    2           VLP_SETSTA.ISTA.IMSGTYP# = TYPE$ -> OUT$SYM.TEXT;

   5222  4 000217   200636 470500                    LDP0    TYPE$,,AUTO
         4 000220   000004 236100                    LDQ     4,,PR0
         4 000221   000033 772000                    QRL     27
         4 000222   000000 620006                    EAX0    0,QL
         4 000223   040000 100540                    MLR     fill='040'O
         4 000224   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000225   000122 000010 2                  ADSC9   VLP_SETSTA+4             cn=0,n=8

      344     5223
      345     5224    2           CALL INDEX(POS, '?', TYPE$ -> OUT$SYM.TEXT) ALTRET(NO_Q1);

   5224  4 000226   000004 236100                    LDQ     4,,PR0
         4 000227   000033 772000                    QRL     27
         4 000230   000000 620006                    EAX0    0,QL
         4 000231   000000 124540                    SCM     mask='000'O
         4 000232   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000233   000005 000001 5                  ADSC9   5                        cn=0,n=1
         4 000234   200013 000100                    ARG     POS,,AUTO
         4 000235   000251 606400 4                  TTN     NO_Q1

      346     5225
      347     5226    2           IF TYPE$ -> OUT$SYM.COUNT - 1 ~= POS THEN

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:53   
   5226  4 000236   000001 136007                    SBLQ    1,DL
         4 000237   000242 604000 4                  TMI     s:5228
         4 000240   200013 116100                    CMPQ    POS,,AUTO
         4 000241   000251 600000 4                  TZE     NO_Q1

      348     5227    3             DO;

      349     5228    3               QT_CMDBLK.MINOR_ERR = CODE_IWT;

   5228  4 000242   000105 236000 3                  LDQ     CODE_IWT
         4 000243   000001 756000 xsym               STQ     QT_CMDBLK+1

      350     5229    3               CALL XUR$ERRMSG(CODE_IWT);

   5229  4 000244   000006 630400 5                  EPPR0   6
         4 000245   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000246   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000247   000000 011000                    NOP     0

      351     5230    3               SET_OK_FLAG = '0'B;

   5230  4 000250   200644 450100                    STZ     SET_OK_FLAG,,AUTO

      352     5231    3             END;

      353     5232
      354     5233    2   NO_Q1:
      355     5234    2          CALL QQC$WILD_COMP(VLP_SETSTA.ISTA.IMSGTYP#, P_MSGTYP) ALTRET(INCONSISTANT);

   5234  4 000251   200005 236100       NO_Q1        LDQ     @P_MSGTYP,,AUTO
         4 000252   000007 235000 5                  LDA     7
         4 000253   200754 757100                    STAQ    SAVE_SET+70,,AUTO
         4 000254   200754 630500                    EPPR0   SAVE_SET+70,,AUTO
         4 000255   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000256   000000 701000 xent               TSX1    QQC$WILD_COMP
         4 000257   000261 702000 4                  TSX2    INCONSISTANT

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:54   
      356     5235
      357     5236    3           DO WHILE('0'B);

   5236  4 000260   000270 710000 4                  TRA     s:5244

      358     5237
      359     5238    3   INCONSISTANT:
      360     5239    3             QT_CMDBLK.MINOR_ERR = CODE_INCONSIS;

   5239  4 000261   000115 236000 3     INCONSISTANT LDQ     CODE_INCONSIS
         4 000262   000001 756000 xsym               STQ     QT_CMDBLK+1

      361     5240    3             CALL XUR$ERRMSG(CODE_INCONSIS);

   5240  4 000263   000010 630400 5                  EPPR0   8
         4 000264   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000265   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000266   000000 011000                    NOP     0

      362     5241    3             SET_OK_FLAG = '0'B;

   5241  4 000267   200644 450100                    STZ     SET_OK_FLAG,,AUTO

      363     5242    3           END /* NEVER */;

      364     5243
      365     5244    2           IF SET_OK_FLAG THEN

   5244  4 000270   200644 234100                    SZN     SET_OK_FLAG,,AUTO
         4 000271   000307 605000 4                  TPL     s:5252

      366     5245    3             DO;

      367     5246    3               CALL BLD_ASSMRG;

   5246  4 000272   000654 701000 4                  TSX1    BLD_ASSMRG
         4 000273   000000 011000                    NOP     0
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:55   

      368     5247    3               CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);

   5247  4 000274   200642 470500                    LDP0    DCB$,,AUTO
         4 000275   000003 471500                    LDP1    3,,PR0
         4 000276   200754 451500                    STP1    SAVE_SET+70,,AUTO
         4 000277   200754 630500                    EPPR0   SAVE_SET+70,,AUTO
         4 000300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000301   000000 701000 xent               TSX1    QTC$DELETE_SET
         4 000302   000000 011000                    NOP     0

      369     5248    3               CALL CHK_DUPLICITY;

   5248  4 000303   001152 701000 4                  TSX1    CHK_DUPLICITY
         4 000304   000000 011000                    NOP     0

      370     5249    3               CALL ADD_ASSMRG;

   5249  4 000305   000711 701000 4                  TSX1    ADD_ASSMRG
         4 000306   000000 011000                    NOP     0

      371     5250    3             END;

      372     5251
      373     5252    2           RETURN;

   5252  4 000307   200750 221300                    LDX1  ! SAVE_SET+66,,AUTO
         4 000310   000001 702211                    TSX2  ! 1,X1

      374     5253
      375     5254    2   END READS;
      376     5255                %PAGE(ARG="REPORTS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:56   
              5272    2   /***************************************************************************
              5273    2    *                                                                         *
              5274    2    *                                  REPORTS                                *
              5275    2    *                                                                         *
              5276    2    ***************************************************************************/

      377     5280    1   REPORTS:

   5280  4 000311   200750 741300       REPORTS      STX1  ! SAVE_SET+66,,AUTO

      378     5281    1           PROC;
      379     5282
      380     5283    2           VLP_SETSTA.OSTA.OMSGTYP# = TYPE$ -> OUT$SYM.TEXT;

   5283  4 000312   200636 470500                    LDP0    TYPE$,,AUTO
         4 000313   000004 236100                    LDQ     4,,PR0
         4 000314   000033 772000                    QRL     27
         4 000315   000000 620006                    EAX0    0,QL
         4 000316   040000 100540                    MLR     fill='040'O
         4 000317   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000320   000127 000010 2                  ADSC9   VLP_SETSTA+9             cn=0,n=8

      381     5284
      382     5285    2           CALL INDEX(POS, '?', TYPE$ -> OUT$SYM.TEXT) ALTRET(NO_Q1);

   5285  4 000321   000004 236100                    LDQ     4,,PR0
         4 000322   000033 772000                    QRL     27
         4 000323   000000 620006                    EAX0    0,QL
         4 000324   000000 124540                    SCM     mask='000'O
         4 000325   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000326   000005 000001 5                  ADSC9   5                        cn=0,n=1
         4 000327   200013 000100                    ARG     POS,,AUTO
         4 000330   000340 606400 4                  TTN     NO_Q1

      383     5286
      384     5287    2           QT_CMDBLK.MINOR_ERR = CODE_NWTOR;

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:57   
   5287  4 000331   000106 236000 3                  LDQ     CODE_NWTOR
         4 000332   000001 756000 xsym               STQ     QT_CMDBLK+1

      385     5288    2           CALL XUR$ERRMSG(CODE_NWTOR);

   5288  4 000333   000011 630400 5                  EPPR0   9
         4 000334   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000335   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000336   000000 011000                    NOP     0

      386     5289    2           SET_OK_FLAG = '0'B;

   5289  4 000337   200644 450100                    STZ     SET_OK_FLAG,,AUTO

      387     5290
      388     5291    2   NO_Q1:
      389     5292    2           IF STATION$ ~= ADDR(NIL) THEN

   5292  4 000340   200641 236100       NO_Q1        LDQ     STATION$,,AUTO
         4 000341   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000342   000377 600000 4                  TZE     NO_Q2

      390     5293    3             DO;

      391     5294    3               VLP_SETSTA.OSTA.OSTATION# = STATION$ -> OUT$SYM.TEXT;

   5294  4 000343   200641 470500                    LDP0    STATION$,,AUTO
         4 000344   000004 236100                    LDQ     4,,PR0
         4 000345   000033 772000                    QRL     27
         4 000346   000000 620006                    EAX0    0,QL
         4 000347   040000 100540                    MLR     fill='040'O
         4 000350   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000351   000125 000010 2                  ADSC9   VLP_SETSTA+7             cn=0,n=8

      392     5295
      393     5296    3               CALL INDEX(POS, '?', STATION$ -> OUT$SYM.TEXT) ALTRET(NO_Q2);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:58   
   5296  4 000352   000004 236100                    LDQ     4,,PR0
         4 000353   000033 772000                    QRL     27
         4 000354   000000 620006                    EAX0    0,QL
         4 000355   000000 124540                    SCM     mask='000'O
         4 000356   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000357   000005 000001 5                  ADSC9   5                        cn=0,n=1
         4 000360   200013 000100                    ARG     POS,,AUTO
         4 000361   000377 606400 4                  TTN     NO_Q2

      394     5297
      395     5298    3               IF STATION$ -> OUT$SYM.COUNT - 1 ~= POS THEN

   5298  4 000362   000001 136007                    SBLQ    1,DL
         4 000363   000366 604000 4                  TMI     s:5300
         4 000364   200013 116100                    CMPQ    POS,,AUTO
         4 000365   000375 600000 4                  TZE     s:5305

      396     5299    4                 DO;

      397     5300    4                   QT_CMDBLK.MINOR_ERR = CODE_IWS;

   5300  4 000366   000107 236000 3                  LDQ     CODE_IWS
         4 000367   000001 756000 xsym               STQ     QT_CMDBLK+1

      398     5301    4                   CALL XUR$ERRMSG(CODE_IWS);

   5301  4 000370   000012 630400 5                  EPPR0   10
         4 000371   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000372   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000373   000000 011000                    NOP     0

      399     5302    4                   SET_OK_FLAG = '0'B;

   5302  4 000374   200644 450100                    STZ     SET_OK_FLAG,,AUTO

      400     5303    4                 END;

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:59   
      401     5304
      402     5305    3               VLP_SETSTA.OSTA.ALLTRMS# = '1'B;

   5305  4 000375   020000 236003                    LDQ     8192,DU
         4 000376   000131 256000 2                  ORSQ    VLP_SETSTA+11

      403     5306    3             END;

      404     5307
      405     5308    2   NO_Q2:
      406     5309    2           IF SET_OK_FLAG THEN

   5309  4 000377   200644 234100       NO_Q2        SZN     SET_OK_FLAG,,AUTO
         4 000400   000414 605000 4                  TPL     s:5316

      407     5310    3             DO;

      408     5311    3               CALL BLD_ASSMRG;

   5311  4 000401   000654 701000 4                  TSX1    BLD_ASSMRG
         4 000402   000000 011000                    NOP     0

      409     5312    3               CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);

   5312  4 000403   200642 470500                    LDP0    DCB$,,AUTO
         4 000404   000003 471500                    LDP1    3,,PR0
         4 000405   200754 451500                    STP1    SAVE_SET+70,,AUTO
         4 000406   200754 630500                    EPPR0   SAVE_SET+70,,AUTO
         4 000407   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000410   000000 701000 xent               TSX1    QTC$DELETE_SET
         4 000411   000000 011000                    NOP     0

      410     5313    3               CALL ADD_ASSMRG;

   5313  4 000412   000711 701000 4                  TSX1    ADD_ASSMRG
         4 000413   000000 011000                    NOP     0

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:60   
      411     5314    3             END;

      412     5315
      413     5316    2           RETURN;

   5316  4 000414   200750 221300                    LDX1  ! SAVE_SET+66,,AUTO
         4 000415   000001 702211                    TSX2  ! 1,X1

      414     5317
      415     5318    2   END REPORTS;
      416     5319                %PAGE(ARG="SPAWNS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:61   
              5336    2   /***************************************************************************
              5337    2    *                                                                         *
              5338    2    *                                   SPAWNS                                *
              5339    2    *                                                                         *
              5340    2    ***************************************************************************/

      417     5344    1   SPAWNS:

   5344  4 000416   200750 741300       SPAWNS       STX1  ! SAVE_SET+66,,AUTO

      418     5345    1           PROC;
      419     5346
      420     5347    2           VLP_SETSTA.OSTA.OMSGTYP# = TYPE$ -> OUT$SYM.TEXT;

   5347  4 000417   200636 470500                    LDP0    TYPE$,,AUTO
         4 000420   000004 236100                    LDQ     4,,PR0
         4 000421   000033 772000                    QRL     27
         4 000422   000000 620006                    EAX0    0,QL
         4 000423   040000 100540                    MLR     fill='040'O
         4 000424   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000425   000127 000010 2                  ADSC9   VLP_SETSTA+9             cn=0,n=8

      421     5348    2           VLP_SETSTA.OSTA.ANYDCB# = '1'B;

   5348  4 000426   002000 236003                    LDQ     1024,DU
         4 000427   000131 256000 2                  ORSQ    VLP_SETSTA+11

      422     5349
      423     5350    2           CALL INDEX(POS, '?', TYPE$ -> OUT$SYM.TEXT) ALTRET(NO_Q1);

   5350  4 000430   000004 236100                    LDQ     4,,PR0
         4 000431   000033 772000                    QRL     27
         4 000432   000000 620006                    EAX0    0,QL
         4 000433   000000 124540                    SCM     mask='000'O
         4 000434   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000435   000005 000001 5                  ADSC9   5                        cn=0,n=1
         4 000436   200013 000100                    ARG     POS,,AUTO
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:62   
         4 000437   000447 606400 4                  TTN     NO_Q1

      424     5351
      425     5352    2           QT_CMDBLK.MINOR_ERR = CODE_NWTOS;

   5352  4 000440   000110 236000 3                  LDQ     CODE_NWTOS
         4 000441   000001 756000 xsym               STQ     QT_CMDBLK+1

      426     5353    2           CALL XUR$ERRMSG(CODE_NWTOS);

   5353  4 000442   000013 630400 5                  EPPR0   11
         4 000443   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000444   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000445   000000 011000                    NOP     0

      427     5354    2           SET_OK_FLAG = '0'B;

   5354  4 000446   200644 450100                    STZ     SET_OK_FLAG,,AUTO

      428     5355
      429     5356    2   NO_Q1:
      430     5357    2           IF SET_OK_FLAG THEN

   5357  4 000447   200644 234100       NO_Q1        SZN     SET_OK_FLAG,,AUTO
         4 000450   000464 605000 4                  TPL     s:5364

      431     5358    3             DO;

      432     5359    3               CALL BLD_ASSMRG;

   5359  4 000451   000654 701000 4                  TSX1    BLD_ASSMRG
         4 000452   000000 011000                    NOP     0

      433     5360    3               CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);

   5360  4 000453   200642 470500                    LDP0    DCB$,,AUTO
         4 000454   000003 471500                    LDP1    3,,PR0
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:63   
         4 000455   200754 451500                    STP1    SAVE_SET+70,,AUTO
         4 000456   200754 630500                    EPPR0   SAVE_SET+70,,AUTO
         4 000457   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000460   000000 701000 xent               TSX1    QTC$DELETE_SET
         4 000461   000000 011000                    NOP     0

      434     5361    3               CALL ADD_ASSMRG;

   5361  4 000462   000711 701000 4                  TSX1    ADD_ASSMRG
         4 000463   000000 011000                    NOP     0

      435     5362    3             END;

      436     5363
      437     5364    2           RETURN;

   5364  4 000464   200750 221300                    LDX1  ! SAVE_SET+66,,AUTO
         4 000465   000001 702211                    TSX2  ! 1,X1

      438     5365
      439     5366    2   END SPAWNS;
      440     5367                %PAGE(ARG="RESPONDS", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:64   
              5384    2   /***************************************************************************
              5385    2    *                                                                         *
              5386    2    *                                  RESPONDS                               *
              5387    2    *                                                                         *
              5388    2    ***************************************************************************/

      441     5392    1   RESPONDS:

   5392  4 000466   200750 741300       RESPONDS     STX1  ! SAVE_SET+66,,AUTO

      442     5393    1           PROC;
      443     5394
      444     5395    2           CALL BLD_ASSMRG;

   5395  4 000467   000654 701000 4                  TSX1    BLD_ASSMRG
         4 000470   000000 011000                    NOP     0

      445     5396    2           CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);

   5396  4 000471   200642 470500                    LDP0    DCB$,,AUTO
         4 000472   000003 471500                    LDP1    3,,PR0
         4 000473   200754 451500                    STP1    SAVE_SET+70,,AUTO
         4 000474   200754 630500                    EPPR0   SAVE_SET+70,,AUTO
         4 000475   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000476   000000 701000 xent               TSX1    QTC$DELETE_SET
         4 000477   000000 011000                    NOP     0

      446     5397    2           CALL CHK_DUPLICITY;

   5397  4 000500   001152 701000 4                  TSX1    CHK_DUPLICITY
         4 000501   000000 011000                    NOP     0

      447     5398    2           CALL ADD_ASSMRG;

   5398  4 000502   000711 701000 4                  TSX1    ADD_ASSMRG
         4 000503   000000 011000                    NOP     0

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:65   
      448     5399
      449     5400    2           RETURN;

   5400  4 000504   200750 221300                    LDX1  ! SAVE_SET+66,,AUTO
         4 000505   000001 702211                    TSX2  ! 1,X1

      450     5401
      451     5402    2   END RESPONDS;
      452     5403                %PAGE(ARG="SET_DCB", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:66   
              5420    2   /***************************************************************************
              5421    2    *                                                                         *
              5422    2    *                                  SET_DCB                                *
              5423    2    *                                                                         *
              5424    2    ***************************************************************************/

      453     5428    1   SET_DCB:

   5428  4 000506   200750 741300       SET_DCB      STX1  ! SAVE_SET+66,,AUTO

      454     5429    1           PROC;
      455     5430
      456     5431    2           CALL INSERT(SET_CMD,0,256,'SET ',KEY.TEXT,' ',

   5431  4 000507   000004 470400 xsym               LDP0    QT_CMDBLK+4
         4 000510   000004 471500                    LDP1    4,,PR0
         4 000511   100003 473500                    LDP3    3,,PR1
         4 000512   300004 236100                    LDQ     4,,PR3
         4 000513   000033 772000                    QRL     27
         4 000514   000000 620006                    EAX0    0,QL
         4 000515   000117 236000 3                  LDQ     CODE_NOLATCH+1
         4 000516   000016 756000 2                  STQ     SET_CMD
         4 000517   040000 100400                    MLR     fill='040'O
         4 000520   000064 200037 3                  ADSC9   KEY                      cn=1,n=31
         4 000521   000017 000037 2                  ADSC9   SET_CMD+1                cn=0,n=31
         4 000522   000040 236007                    LDQ     32,DL
         4 000523   000026 552004 2                  STBQ    SET_CMD+8,'04'O
         4 000524   040000 100540                    MLR     fill='040'O
         4 000525   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         4 000526   000027 000334 2                  ADSC9   SET_CMD+9                cn=0,n=220

      457     5432    2               QT_CMDBLK.OUT$->OUT$BLK.SUBLK$(1)->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      458     5433    2           FPT_YC.CMD_ = VECTOR(SET_CMD);

   5433  4 000527   000014 237000 5                  LDAQ    12
         4 000530   000300 757000 2                  STAQ    FPT_YC

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:67   
      459     5434
      460     5435    2           CALL M$YC(FPT_YC) ALTRET(RET);

   5435  4 000531   000300 630400 2                  EPPR0   FPT_YC
         4 000532   400011 713400                    CLIMB   alt,+9
         4 000533   401000 401760                    pmme    nvectors=3
         4 000534   000633 702000 4                  TSX2    RET

      461     5436
      462     5437    2           CALL M$OPEN(FPT_OPEN) ALTRET(MON_ERR);

   5437  4 000535   000150 630400 2                  EPPR0   FPT_OPEN
         4 000536   450000 713400                    CLIMB   alt,open
         4 000537   410400 401760                    pmme    nvectors=18
         4 000540   000635 702000 4                  TSX2    MON_ERR

      463     5438
      464     5439    2           FPT_READ.BUF_.BUF$ = QT_GLOBAL.AMR$FPT_OPEN$;

   5439  4 000541   000030 236000 xsym               LDQ     QT_GLOBAL+24
         4 000542   000137 756000 2                  STQ     FPT_READ+5

      465     5440    2           FPT_READ.BUF_.BOUND = QT_GLOBAL.AMR$FPT_OPEN_SIZE - 1;

   5440  4 000543   000040 236000 xsym               LDQ     QT_GLOBAL+32
         4 000544   000001 136007                    SBLQ    1,DL
         4 000545   000020 736000                    QLS     16
         4 000546   000136 676000 2                  ERQ     FPT_READ+4
         4 000547   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 000550   000136 656000 2                  ERSQ    FPT_READ+4

      466     5441    2           CALL M$READ(FPT_READ) ALTRET(MON_ERR);

   5441  4 000551   000132 630400 2                  EPPR0   FPT_READ
         4 000552   440000 713400                    CLIMB   alt,read
         4 000553   401400 401760                    pmme    nvectors=4
         4 000554   000635 702000 4                  TSX2    MON_ERR
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:68   

      467     5442    2           CALL M$CLOSE(FPT_CLOSE);

   5442  4 000555   000242 630400 2                  EPPR0   FPT_CLOSE
         4 000556   050001 713400                    CLIMB   close
         4 000557   406000 401760                    pmme    nvectors=13

      468     5443
      469     5444    2           ASSMRG_SIZE = DCBADDR(DCBNUM(M$STARA)) -> F$DCB.ARS#;

   5444  4 000560   000000 236007 xsym               LDQ     M$STARA,DL
         4 000561   000016 470400 5                  LDP0    14
         4 000562   000000 471500                    LDP1    0,,PR0
         4 000563   100000 473506                    LDP3    0,QL,PR1
         4 000564   300000 235100                    LDA     0,,PR3
         4 000565   200010 755100                    STA     ASSMRG_SIZE,,AUTO

      470     5445
      471     5446    2           IF AMR$FPT_OPEN.SETSTA_ ~= ADDR(NIL) THEN

   5446  4 000566   000030 473400 xsym               LDP3    QT_GLOBAL+24
         4 000567   300002 236100                    LDQ     2,,PR3
         4 000570   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000571   000614 600000 4                  TZE     s:5459

      472     5447    3             DO;

      473     5448    3               PTR$ = AMR$FPT_OPEN.SETSTA_;

   5448  4 000572   200643 756100                    STQ     PTR$,,AUTO

      474     5449    3               SETSTA$ = PINCRW(QT_GLOBAL.AMR$FPT_OPEN$, PTR$_BITS.WORDS);

   5449  4 000573   200643 236100                    LDQ     PTR$,,AUTO
         4 000574   777777 376003                    ANQ     -1,DU
         4 000575   000030 036000 xsym               ADLQ    QT_GLOBAL+24
         4 000576   200637 756100                    STQ     SETSTA$,,AUTO
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:69   

      475     5450
      476     5451    3               IF NOT(SETSTA$ -> VLP$SETSTA.ISTA.ILATCH# OR

   5451  4 000577   200637 474500                    LDP4    SETSTA$,,AUTO
         4 000600   400006 236100                    LDQ     6,,PR4
         4 000601   200000 316003                    CANQ    65536,DU
         4 000602   000614 601000 4                  TNZ     s:5459
         4 000603   400013 236100                    LDQ     11,,PR4
         4 000604   200000 316003                    CANQ    65536,DU
         4 000605   000614 601000 4                  TNZ     s:5459

      477     5452    3                   SETSTA$ -> VLP$SETSTA.OSTA.OLATCH#) THEN
      478     5453    4                 DO;

      479     5454    4                   QT_CMDBLK.MINOR_ERR = CODE_NOLATCH;

   5454  4 000606   000116 236000 3                  LDQ     CODE_NOLATCH
         4 000607   000001 756000 xsym               STQ     QT_CMDBLK+1

      480     5455    4                   CALL XUR$ERRMSG(CODE_NOLATCH);

   5455  4 000610   000017 630400 5                  EPPR0   15
         4 000611   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000612   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000613   000000 011000                    NOP     0

      481     5456    4                 END;

      482     5457    3             END;

      483     5458
      484     5459    2           CALL QTC$DELETE_SET(DCB$ -> OUT$SYM.TEXTC$ -> DCB$NAME);

   5459  4 000614   200642 470500                    LDP0    DCB$,,AUTO
         4 000615   000003 471500                    LDP1    3,,PR0
         4 000616   200754 451500                    STP1    SAVE_SET+70,,AUTO
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:70   
         4 000617   200754 630500                    EPPR0   SAVE_SET+70,,AUTO
         4 000620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000621   000000 701000 xent               TSX1    QTC$DELETE_SET
         4 000622   000000 011000                    NOP     0

      485     5460    2           CALL ADD_ASSMRG;

   5460  4 000623   000711 701000 4                  TSX1    ADD_ASSMRG
         4 000624   000000 011000                    NOP     0

      486     5461    2           FPT_YC.CMD_ = VECTOR(RESET_CMD);

   5461  4 000625   000020 237000 5                  LDAQ    16
         4 000626   000300 757000 2                  STAQ    FPT_YC

      487     5462    2           CALL M$YC(FPT_YC) ALTRET(RET);

   5462  4 000627   000300 630400 2                  EPPR0   FPT_YC
         4 000630   400011 713400                    CLIMB   alt,+9
         4 000631   401000 401760                    pmme    nvectors=3
         4 000632   000633 702000 4                  TSX2    RET

      488     5463
      489     5464    2   RET:
      490     5465    2           RETURN;

   5465  4 000633   200750 221300       RET          LDX1  ! SAVE_SET+66,,AUTO
         4 000634   000001 702211                    TSX2  ! 1,X1

      491     5466
      492     5467    2   MON_ERR:
      493     5468    2           CALL QTC$MON_ERR('1'B);

   5468  4 000635   000022 630400 5     MON_ERR      EPPR0   18
         4 000636   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000637   000000 701000 xent               TSX1    QTC$MON_ERR
         4 000640   000000 011000                    NOP     0
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:71   

      494     5469
      495     5470    2   END SET_DCB;

   5470  4 000641   200750 221300                    LDX1  ! SAVE_SET+66,,AUTO
         4 000642   000001 702211                    TSX2  ! 1,X1

      496     5471                %PAGE(ARG="ILLEGAL_SET", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:72   
              5488    2   /***************************************************************************
              5489    2    *                                                                         *
              5490    2    *                                ILLEGAL_SET                              *
              5491    2    *                                                                         *
              5492    2    ***************************************************************************/

      497     5496    1   ILLEGAL_SET:

   5496  4 000643   200750 741300       ILLEGAL_SET  STX1  ! SAVE_SET+66,,AUTO

      498     5497    1           PROC;
      499     5498
      500     5499    2           QT_CMDBLK.MINOR_ERR = CODE_ITU;

   5499  4 000644   000111 236000 3                  LDQ     CODE_ITU
         4 000645   000001 756000 xsym               STQ     QT_CMDBLK+1

      501     5500    2           CALL XUR$ERRMSG(CODE_ITU);

   5500  4 000646   000023 630400 5                  EPPR0   19
         4 000647   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000650   000000 701000 xent               TSX1    XUR$ERRMSG
         4 000651   000000 011000                    NOP     0

      502     5501
      503     5502    2           RETURN;

   5502  4 000652   200750 221300                    LDX1  ! SAVE_SET+66,,AUTO
         4 000653   000001 702211                    TSX2  ! 1,X1

      504     5503
      505     5504    2   END ILLEGAL_SET;
      506     5505                %PAGE(ARG="BLD_ASSMRG", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:73   
              5522    2   /***************************************************************************
              5523    2    *                                                                         *
              5524    2    *                                 BLD_ASSMRG                              *
              5525    2    *                                                                         *
              5526    2    ***************************************************************************/

      507     5530    1   BLD_ASSMRG:

   5530  4 000654   200752 741300       BLD_ASSMRG   STX1  ! SAVE_SET+68,,AUTO

      508     5531    1           PROC;
      509     5532
      510     5533    2           IF QT$ENTRY.FLAGS.NEW_LOCK THEN

   5533  4 000655   000031 470400 xsym               LDP0    QT_GLOBAL+25
         4 000656   000000 236100                    LDQ     0,,PR0
         4 000657   100000 316003                    CANQ    32768,DU
         4 000660   000664 600000 4                  TZE     s:5539

      511     5534    3             DO;

      512     5535    3               VLP_SETSTA.ISTA.ILOCK# = '1'B;

   5535  4 000661   400000 236003                    LDQ     -131072,DU
         4 000662   000124 256000 2                  ORSQ    VLP_SETSTA+6

      513     5536    3               VLP_SETSTA.OSTA.OLOCK# = '1'B;

   5536  4 000663   000131 256000 2                  ORSQ    VLP_SETSTA+11

      514     5537    3             END;

      515     5538
      516     5539    2           AMR$FPT_OPEN = AMR_FPT_OPEN_C;

   5539  4 000664   000030 471400 xsym               LDP1    QT_GLOBAL+24
         4 000665   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:74   
         4 000666   000000 000240 3                  ADSC9   AMR_FPT_OPEN_C           cn=0,n=160
         4 000667   100000 000240                    ADSC9   0,,PR1                   cn=0,n=160

      517     5540    2           AMR$FPT_OPEN.V_ = ADDR(AMR$FPT_OPEN.V);

   5540  4 000670   000030 236000 xsym               LDQ     QT_GLOBAL+24
         4 000671   000022 036003                    ADLQ    18,DU
         4 000672   000030 470400 xsym               LDP0    QT_GLOBAL+24
         4 000673   000000 756100                    STQ     0,,PR0

      518     5541
      519     5542    2           SETSTA$ = PINCRW(QT_GLOBAL.AMR$FPT_OPEN$, SIZEW(AMR$FPT_OPEN));

   5542  4 000674   000030 236000 xsym               LDQ     QT_GLOBAL+24
         4 000675   000050 036003                    ADLQ    40,DU
         4 000676   200637 756100                    STQ     SETSTA$,,AUTO

      520     5543    2           AMR$FPT_OPEN.SETSTA_ = SETSTA$;

   5543  4 000677   000030 470400 xsym               LDP0    QT_GLOBAL+24
         4 000700   000002 756100                    STQ     2,,PR0

      521     5544    2           SETSTA$ -> VLP$SETSTA = VLP_SETSTA;

   5544  4 000701   200637 470500                    LDP0    SETSTA$,,AUTO
         4 000702   000100 100400                    MLR     fill='000'O
         4 000703   000116 000060 2                  ADSC9   VLP_SETSTA               cn=0,n=48
         4 000704   000000 000060                    ADSC9   0,,PR0                   cn=0,n=48

      522     5545
      523     5546    2           ASSMRG_SIZE = (SIZEW(VLP$SETSTA) + SIZEW(AMR$FPT_OPEN)) * 4;

   5546  4 000705   000320 235007                    LDA     208,DL
         4 000706   200010 755100                    STA     ASSMRG_SIZE,,AUTO

      524     5547
      525     5548    2           RETURN;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:75   

   5548  4 000707   200752 221300                    LDX1  ! SAVE_SET+68,,AUTO
         4 000710   000001 702211                    TSX2  ! 1,X1

      526     5549
      527     5550    2   END BLD_ASSMRG;
      528     5551                %PAGE(ARG="ADD_ASSMRG", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:76   
              5568    2   /***************************************************************************
              5569    2    *                                                                         *
              5570    2    *                                 ADD_ASSMRG                              *
              5571    2    *                                                                         *
              5572    2    ***************************************************************************/

      529     5576    1   ADD_ASSMRG:

   5576  4 000711   200752 741300       ADD_ASSMRG   STX1  ! SAVE_SET+68,,AUTO

      530     5577    1           PROC;
      531     5578
      532     5579    2           BYTE_COUNT = 0;

   5579  4 000712   200011 450100                    STZ     BYTE_COUNT,,AUTO

      533     5580    2           REC$ = QT_GLOBAL.QT$SETTEXT$;

   5580  4 000713   000032 236000 xsym               LDQ     QT_GLOBAL+26
         4 000714   200640 756100                    STQ     REC$,,AUTO

      534     5581
      535     5582    3           DO I = 1 TO QT$ENTRY.SET_COUNT;

   5582  4 000715   000001 235007                    LDA     1,DL
         4 000716   200007 755100                    STA     I,,AUTO
         4 000717   000747 710000 4                  TRA     s:5585+3

      536     5583    3             BYTE_COUNT = BYTE_COUNT + SIZEW(REC$ -> QT$SETTEXT)*4;

   5583  4 000720   200640 470500                    LDP0    REC$,,AUTO
         4 000721   000000 236100                    LDQ     0,,PR0
         4 000722   000033 772000                    QRL     27
         4 000723   000020 620006                    EAX0    16,QL
         4 000724   000000 636010                    EAQ     0,X0
         4 000725   000022 772000                    QRL     18
         4 000726   000011 402007                    MPY     9,DL
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:77   
         4 000727   000043 036007                    ADLQ    35,DL
         4 000730   000044 506007                    DIV     36,DL
         4 000731   000002 736000                    QLS     2
         4 000732   200011 036100                    ADLQ    BYTE_COUNT,,AUTO
         4 000733   200011 756100                    STQ     BYTE_COUNT,,AUTO

      537     5584    3             REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETTEXT));

   5584  4 000734   000000 636010                    EAQ     0,X0
         4 000735   000022 772000                    QRL     18
         4 000736   000011 402007                    MPY     9,DL
         4 000737   000043 036007                    ADLQ    35,DL
         4 000740   000044 506007                    DIV     36,DL
         4 000741   000022 736000                    QLS     18
         4 000742   200640 036100                    ADLQ    REC$,,AUTO
         4 000743   200640 756100                    STQ     REC$,,AUTO

      538     5585    3           END;

   5585  4 000744   200007 235100                    LDA     I,,AUTO
         4 000745   000001 035007                    ADLA    1,DL
         4 000746   200007 755100                    STA     I,,AUTO
         4 000747   000031 470400 xsym               LDP0    QT_GLOBAL+25
         4 000750   000023 236100                    LDQ     19,,PR0
         4 000751   000011 772000                    QRL     9
         4 000752   000777 376007                    ANQ     511,DL
         4 000753   200007 116100                    CMPQ    I,,AUTO
         4 000754   000720 603000 4                  TRC     s:5583

      539     5586
      540     5587    2           IF SAVE_SET.COUNT + BYTE_COUNT + 13 > QT_GLOBAL.QT$SETTEXT_SIZE THEN

   5587  4 000755   200646 236100                    LDQ     SAVE_SET,,AUTO
         4 000756   000033 772000                    QRL     27
         4 000757   200011 036100                    ADLQ    BYTE_COUNT,,AUTO
         4 000760   000015 036007                    ADLQ    13,DL
         4 000761   000037 116000 xsym               CMPQ    QT_GLOBAL+31
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:78   
         4 000762   000770 602000 4                  TNC     s:5592
         4 000763   000770 600000 4                  TZE     s:5592

      541     5588    3             DO;

      542     5589    3               CALL QTC$GETMEM(QT_GLOBAL.QT$SETTEXT$, QT_GLOBAL.QT$SETTEXT_SIZE);

   5589  4 000764   000024 630400 5                  EPPR0   20
         4 000765   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000766   000000 701000 xent               TSX1    QTC$GETMEM
         4 000767   000000 011000                    NOP     0

      543     5590    3             END;

      544     5591
      545     5592    2           REC$ -> QT$SETTEXT.COUNT = SAVE_SET.COUNT;

   5592  4 000770   200640 470500                    LDP0    REC$,,AUTO
         4 000771   200646 236100                    LDQ     SAVE_SET,,AUTO
         4 000772   000033 772000                    QRL     27
         4 000773   000033 736000                    QLS     27
         4 000774   000000 756100                    STQ     0,,PR0

      546     5593    2           REC$ -> QT$SETTEXT.TEXT = SAVE_SET.TEXT;

   5593  4 000775   000000 236100                    LDQ     0,,PR0
         4 000776   000033 772000                    QRL     27
         4 000777   000000 620006                    EAX0    0,QL
         4 001000   040140 100500                    MLR     fill='040'O
         4 001001   200646 200400                    ADSC9   SAVE_SET,,AUTO           cn=1,n=256
         4 001002   000004 000010                    ADSC9   4,,PR0                   cn=0,n=*X0

      547     5594    2           REC$ -> QT$SETTEXT.JUNK1 = 0;

   5594  4 001003   000001 450100                    STZ     1,,PR0

      548     5595    2           REC$ -> QT$SETTEXT.JUNK2 = 0;
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:79   

   5595  4 001004   000002 450100                    STZ     2,,PR0

      549     5596    2           REC$ -> QT$SETTEXT.JUNK3 = 0;

   5596  4 001005   000003 450100                    STZ     3,,PR0

      550     5597
      551     5598    2           BYTE_COUNT = SIZEW(QT$ENTRY)*4;

   5598  4 001006   000150 235007                    LDA     104,DL
         4 001007   200011 755100                    STA     BYTE_COUNT,,AUTO

      552     5599    2           REC$ = PINCRW(QT_GLOBAL.QT$ENTRY$, SIZEW(QT$ENTRY));

   5599  4 001010   000031 236000 xsym               LDQ     QT_GLOBAL+25
         4 001011   000032 036003                    ADLQ    26,DU
         4 001012   200640 756100                    STQ     REC$,,AUTO

      553     5600
      554     5601    3           DO I = 1 TO QT$ENTRY.SET_COUNT;

   5601  4 001013   000001 235007                    LDA     1,DL
         4 001014   200007 755100                    STA     I,,AUTO
         4 001015   001054 710000 4                  TRA     s:5604+3

      555     5602    3             BYTE_COUNT = BYTE_COUNT + SIZEW(REC$ -> QT$SETBITS)*4;

   5602  4 001016   200640 470500                    LDP0    REC$,,AUTO
         4 001017   000100 101500                    MRL     fill='000'O
         4 001020   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1
         4 001021   200754 000002                    ADSC9   SAVE_SET+70,,AUTO        cn=0,n=2
         4 001022   200754 220100                    LDX0    SAVE_SET+70,,AUTO
         4 001023   000055 621010                    EAX1    45,X0
         4 001024   000000 636011                    EAQ     0,X1
         4 001025   000022 772000                    QRL     18
         4 001026   000011 402007                    MPY     9,DL
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:80   
         4 001027   000043 036007                    ADLQ    35,DL
         4 001030   000044 506007                    DIV     36,DL
         4 001031   000002 736000                    QLS     2
         4 001032   200011 036100                    ADLQ    BYTE_COUNT,,AUTO
         4 001033   200011 756100                    STQ     BYTE_COUNT,,AUTO

      556     5603    3             REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETBITS));

   5603  4 001034   000100 101500                    MRL     fill='000'O
         4 001035   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1
         4 001036   200754 000002                    ADSC9   SAVE_SET+70,,AUTO        cn=0,n=2
         4 001037   200754 220100                    LDX0    SAVE_SET+70,,AUTO
         4 001040   000055 621010                    EAX1    45,X0
         4 001041   000000 636011                    EAQ     0,X1
         4 001042   000022 772000                    QRL     18
         4 001043   000011 402007                    MPY     9,DL
         4 001044   000043 036007                    ADLQ    35,DL
         4 001045   000044 506007                    DIV     36,DL
         4 001046   000022 736000                    QLS     18
         4 001047   200640 036100                    ADLQ    REC$,,AUTO
         4 001050   200640 756100                    STQ     REC$,,AUTO

      557     5604    3           END;

   5604  4 001051   200007 235100                    LDA     I,,AUTO
         4 001052   000001 035007                    ADLA    1,DL
         4 001053   200007 755100                    STA     I,,AUTO
         4 001054   000031 470400 xsym               LDP0    QT_GLOBAL+25
         4 001055   000023 236100                    LDQ     19,,PR0
         4 001056   000011 772000                    QRL     9
         4 001057   000777 376007                    ANQ     511,DL
         4 001060   200007 116100                    CMPQ    I,,AUTO
         4 001061   001016 603000 4                  TRC     s:5602

      558     5605
      559     5606    2           IF ASSMRG_SIZE + BYTE_COUNT + 46 > QT_GLOBAL.QT$ENTRY_SIZE THEN

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:81   
   5606  4 001062   200010 236100                    LDQ     ASSMRG_SIZE,,AUTO
         4 001063   200011 036100                    ADLQ    BYTE_COUNT,,AUTO
         4 001064   000056 036007                    ADLQ    46,DL
         4 001065   000036 116000 xsym               CMPQ    QT_GLOBAL+30
         4 001066   001074 602000 4                  TNC     s:5611
         4 001067   001074 600000 4                  TZE     s:5611

      560     5607    3             DO;

      561     5608    3               CALL QTC$GETMEM(QT_GLOBAL.QT$ENTRY$, QT_GLOBAL.QT$ENTRY_SIZE);

   5608  4 001070   000026 630400 5                  EPPR0   22
         4 001071   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001072   000000 701000 xent               TSX1    QTC$GETMEM
         4 001073   000000 011000                    NOP     0

      562     5609    3             END;

      563     5610
      564     5611    2           REC$ -> QT$SETBITS.TYPE = QT_CMDBLK.CODE;

   5611  4 001074   200640 470500                    LDP0    REC$,,AUTO
         4 001075   000100 101400                    MRL     fill='000'O
         4 001076   000005 000004 xsym               ADSC9   QT_CMDBLK+5              cn=0,n=4
         4 001077   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      565     5612    2           REC$ -> QT$SETBITS.JUNK1 = 0;

   5612  4 001100   000100 100400                    MLR     fill='000'O
         4 001101   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         4 001102   000001 000004                    ADSC9   1,,PR0                   cn=0,n=4

      566     5613    2           REC$ -> QT$SETBITS.JUNK2 = 0;

   5613  4 001103   000100 100400                    MLR     fill='000'O
         4 001104   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         4 001105   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:82   

      567     5614    2           REC$ -> QT$SETBITS.FLAGS = '0'B;

   5614  4 001106   000100 100400                    MLR     fill='000'O
         4 001107   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 001110   000000 200003                    ADSC9   0,,PR0                   cn=1,n=3

      568     5615    2           REC$ -> QT$SETBITS.FLAGS.ONEREPORT = ONEREPORT_FLAG;

   5615  4 001111   003100 060500                    CSL     bolr='003'O
         4 001112   200645 000001                    BDSC    ONEREPORT_FLAG,,AUTO     by=0,bit=0,n=1
         4 001113   000000 200001                    BDSC    0,,PR0                   by=1,bit=0,n=1

      569     5616    2           REC$ -> QT$SETBITS.DCBNAME.COUNT = DCB$ -> OUT$SYM.COUNT;

   5616  4 001114   200642 471500                    LDP1    DCB$,,AUTO
         4 001115   000100 100500                    MLR     fill='000'O
         4 001116   100004 000001                    ADSC9   4,,PR1                   cn=0,n=1
         4 001117   000003 000001                    ADSC9   3,,PR0                   cn=0,n=1

      570     5617    2           REC$ -> QT$SETBITS.DCBNAME.TEXT = DCB$ -> OUT$SYM.TEXT;

   5617  4 001120   100004 236100                    LDQ     4,,PR1
         4 001121   000033 772000                    QRL     27
         4 001122   000000 620006                    EAX0    0,QL
         4 001123   040100 100540                    MLR     fill='040'O
         4 001124   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 001125   000003 200037                    ADSC9   3,,PR0                   cn=1,n=31

      571     5618    2           REC$ -> QT$SETBITS.ASN_MERGE.COUNT = ASSMRG_SIZE;

   5618  4 001126   000100 101500                    MRL     fill='000'O
         4 001127   200010 000004                    ADSC9   ASSMRG_SIZE,,AUTO        cn=0,n=4
         4 001130   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1

      572     5619    2           CHAR_STRING_SIZE = ASSMRG_SIZE;

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:83   
   5619  4 001131   200010 235100                    LDA     ASSMRG_SIZE,,AUTO
         4 001132   200012 755100                    STA     CHAR_STRING_SIZE,,AUTO

      573     5620    2           REC$ -> QT$SETBITS.ASN_MERGE.TEXT =

   5620  4 001133   000100 101500                    MRL     fill='000'O
         4 001134   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1
         4 001135   200754 000002                    ADSC9   SAVE_SET+70,,AUTO        cn=0,n=2
         4 001136   200754 220100                    LDX0    SAVE_SET+70,,AUTO
         4 001137   000030 473400 xsym               LDP3    QT_GLOBAL+24
         4 001140   000000 621005                    EAX1    0,AL
         4 001141   040140 100540                    MLR     fill='040'O
         4 001142   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         4 001143   000013 200010                    ADSC9   11,,PR0                  cn=1,n=*X0

      574     5621    2               QT_GLOBAL.AMR$FPT_OPEN$ -> CHAR$STRING;
      575     5622
      576     5623    2           QT$ENTRY.SET_COUNT = QT$ENTRY.SET_COUNT + 1;

   5623  4 001144   000031 473400 xsym               LDP3    QT_GLOBAL+25
         4 001145   300023 236100                    LDQ     19,,PR3
         4 001146   001000 036007                    ADLQ    512,DL
         4 001147   300023 552110                    STBQ    19,'10'O,PR3

      577     5624
      578     5625    2           RETURN;

   5625  4 001150   200752 221300                    LDX1  ! SAVE_SET+68,,AUTO
         4 001151   000001 702211                    TSX2  ! 1,X1

      579     5626
      580     5627    2   END ADD_ASSMRG;
      581     5628                %PAGE(ARG="CHK_DUPLICITY", PAGE=YES);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:84   
              5645    2   /***************************************************************************
              5646    2    *                                                                         *
              5647    2    *                               CHK_DUPLICITY                             *
              5648    2    *                                                                         *
              5649    2    ***************************************************************************/

      582     5653    1   CHK_DUPLICITY:

   5653  4 001152   200752 741300       CHK_DUPLICI* STX1  ! SAVE_SET+68,,AUTO

      583     5654    1           PROC;
      584     5655
      585     5656    2           DUPLICITY_CNT = 0;

   5656  4 001153   200014 450100                    STZ     DUPLICITY_CNT,,AUTO

      586     5657
      587     5658    2           REC$ = PINCRW(QT_GLOBAL.QT$ENTRY$, SIZEW(QT$ENTRY));

   5658  4 001154   000031 236000 xsym               LDQ     QT_GLOBAL+25
         4 001155   000032 036003                    ADLQ    26,DU
         4 001156   200640 756100                    STQ     REC$,,AUTO

      588     5659
      589     5660    3           DO I = 1 TO QT$ENTRY.SET_COUNT;

   5660  4 001157   000001 235007                    LDA     1,DL
         4 001160   200007 755100                    STA     I,,AUTO
         4 001161   001214 710000 4                  TRA     s:5667+3

      590     5661    3             IF REC$ -> QT$SETBITS.TYPE = QT_CMDBLK.CODE THEN

   5661  4 001162   200640 470500                    LDP0    REC$,,AUTO
         4 001163   000100 101500                    MRL     fill='000'O
         4 001164   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001165   200754 000004                    ADSC9   SAVE_SET+70,,AUTO        cn=0,n=4
         4 001166   200754 236100                    LDQ     SAVE_SET+70,,AUTO
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:85   
         4 001167   000005 116000 xsym               CMPQ    QT_CMDBLK+5
         4 001170   001174 601000 4                  TNZ     s:5666

      591     5662    4               DO;

      592     5663    4                 DUPLICITY_CNT = DUPLICITY_CNT + 1;

   5663  4 001171   200014 235100                    LDA     DUPLICITY_CNT,,AUTO
         4 001172   000001 035007                    ADLA    1,DL
         4 001173   200014 755100                    STA     DUPLICITY_CNT,,AUTO

      593     5664    4               END;

      594     5665
      595     5666    3             REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETBITS));

   5666  4 001174   000100 101500                    MRL     fill='000'O
         4 001175   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1
         4 001176   200754 000002                    ADSC9   SAVE_SET+70,,AUTO        cn=0,n=2
         4 001177   200754 220100                    LDX0    SAVE_SET+70,,AUTO
         4 001200   000055 621010                    EAX1    45,X0
         4 001201   000000 636011                    EAQ     0,X1
         4 001202   000022 772000                    QRL     18
         4 001203   000011 402007                    MPY     9,DL
         4 001204   000043 036007                    ADLQ    35,DL
         4 001205   000044 506007                    DIV     36,DL
         4 001206   000022 736000                    QLS     18
         4 001207   200640 036100                    ADLQ    REC$,,AUTO
         4 001210   200640 756100                    STQ     REC$,,AUTO

      596     5667    3           END;

   5667  4 001211   200007 235100                    LDA     I,,AUTO
         4 001212   000001 035007                    ADLA    1,DL
         4 001213   200007 755100                    STA     I,,AUTO
         4 001214   000031 470400 xsym               LDP0    QT_GLOBAL+25
         4 001215   000023 236100                    LDQ     19,,PR0
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:86   
         4 001216   000011 772000                    QRL     9
         4 001217   000777 376007                    ANQ     511,DL
         4 001220   200007 116100                    CMPQ    I,,AUTO
         4 001221   001162 603000 4                  TRC     s:5661

      597     5668
      598     5669    2           IF DUPLICITY_CNT > 0 THEN

   5669  4 001222   200014 235100                    LDA     DUPLICITY_CNT,,AUTO
         4 001223   001246 600000 4                  TZE     s:5685

      599     5670    3             DO;

      600     5671    4               DO CASE(QT_CMDBLK.CODE);

   5671  4 001224   000005 235000 xsym               LDA     QT_CMDBLK+5
         4 001225   000022 135007                    SBLA    18,DL
         4 001226   000004 115007                    CMPA    4,DL
         4 001227   001231 602005 4                  TNC     s:5671+5,AL
         4 001230   001242 710000 4                  TRA     s:5681
         4 001231   001235 710000 4                  TRA     s:5674
         4 001232   001242 710000 4                  TRA     s:5681
         4 001233   001242 710000 4                  TRA     s:5681
         4 001234   001240 710000 4                  TRA     s:5677

      601     5672
      602     5673    4                 CASE(18 /* READS */);

      603     5674    4                   QT_CMDBLK.MINOR_ERR = CODE_DUREADS;

   5674  4 001235   000113 236000 3                  LDQ     CODE_DUREADS
         4 001236   000001 756000 xsym               STQ     QT_CMDBLK+1
         4 001237   001242 710000 4                  TRA     s:5681

      604     5675
      605     5676    4                 CASE(21 /* RESPONDS */);

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:87   
      606     5677    4                   QT_CMDBLK.MINOR_ERR = CODE_DURESPONDS;

   5677  4 001240   000114 236000 3                  LDQ     CODE_DURESPONDS
         4 001241   000001 756000 xsym               STQ     QT_CMDBLK+1

      607     5678
      608     5679    4               END /* CASE */;

      609     5680
      610     5681    3               CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR);

   5681  4 001242   000030 630400 5                  EPPR0   24
         4 001243   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001244   000000 701000 xent               TSX1    XUR$ERRMSG
         4 001245   000000 011000                    NOP     0

      611     5682
      612     5683    3             END;

      613     5684
      614     5685    2           RETURN;

   5685  4 001246   200752 221300                    LDX1  ! SAVE_SET+68,,AUTO
         4 001247   000001 702211                    TSX2  ! 1,X1
      615     5686
      616     5687    2   END CHK_DUPLICITY;
      617     5688    1   END QTC$PROCESS_SET;

PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:88   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   QT_SUBS_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QT_PERR_C.:E05TOU  is referenced.
   QT_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QTC$PROCESS_SET.
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:89   

 **** Variables and constants ****

  ****  Section 002  Data  QTC$PROCESS_SET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   242-0-0/d STRC(1080)  r     1 FPT_CLOSE                150-0-0/d STRC(2088)  r     1 FPT_OPEN
   132-0-0/d STRC(504)   r     1 FPT_READ                 300-0-0/d STRC(288)   r     1 FPT_YC
     0-0-0/w STRC(504)   r     1 P_PCB                     16-0-0/c CHAR(256)   r     1 SET_CMD
   116-0-0/w STRC(432)   r     1 VLP_SETSTA

  ****  Section 003 RoData QTC$PROCESS_SET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1440)  r     1 AMR_FPT_OPEN_C           113-0-0/b STRC        r     1 CODE_DUREADS
   114-0-0/b STRC        r     1 CODE_DURESPONDS          112-0-0/b STRC        r     1 CODE_IIPS
   115-0-0/b STRC        r     1 CODE_INCONSIS            111-0-0/b STRC        r     1 CODE_ITU
   107-0-0/b STRC        r     1 CODE_IWS                 105-0-0/b STRC        r     1 CODE_IWT
   116-0-0/b STRC        r     1 CODE_NOLATCH             106-0-0/b STRC        r     1 CODE_NWTOR
   110-0-0/b STRC        r     1 CODE_NWTOS                64-0-0/c STRC(288)   r     1 KEY
    74-0-0/c CHAR(33)    r     1 RESET_CMD                 50-0-0/w STRC(432)   r     1 VLP_SETSTA_C

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @P_MSGTYP                  4-0-0/w PTR         r     1 @P_PARSE_FLAG
     3-0-0/w PTR         r     1 @P_SET                    10-0-0/w UBIN        r     1 ASSMRG_SIZE
    11-0-0/w UBIN        r     1 BYTE_COUNT                12-0-0/w UBIN        r     1 CHAR_STRING_SIZE
   642-0-0/w PTR         r     1 DCB$                      14-0-0/w UBIN        r     1 DUPLICITY_CNT
     7-0-0/w UBIN        r     1 I                          6-0-0/w UBIN        r     1 NSUBLKS
   645-0-0/w BIT         r     1 ONEREPORT_FLAG
    15-0-0/w UBIN        r     1 PARSE_WORK(0:399)
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:90   
    13-0-0/w UBIN        r     1 POS                      643-0-0/w PTR         r     1 PTR$
   643-0-0/w STRC        r     1 PTR$_BITS                 *0-0-0/c CHAR(8)     r     1 P_MSGTYP
    *0-0-0/w BIT         r     1 P_PARSE_FLAG              *0-0-0/w ASTR(144)   r     1 P_SET
   640-0-0/w PTR         r     1 REC$                     646-0-0/c STRC(2313)  r     1 SAVE_SET
   637-0-0/w PTR         r     1 SETSTA$                  644-0-0/w BIT         r     1 SET_OK_FLAG
   641-0-0/w PTR         r     1 STATION$                 635-0-0/w PTR         r     1 SUBLK$
   636-0-0/w PTR         r     1 TYPE$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(261)   r     1 QT_CMDBLK                  0-0-0/w STRC(1872)  r     1 QT_GLOBAL
     0-0-0/w UBIN        r     1 QT_NODES1

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1440)  r     1 AMR$FPT_OPEN               0-0-0/c ACHR        r     1 CHAR$STRING
     0-0-0/c ASTR(9)     r     1 DCB$NAME                   0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/d ASTR(3528)  r     1 M$STARA                    0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(936)   r     1 QT$ENTRY
     0-0-0/c ASTR(405)   r     1 QT$SETBITS                 0-0-0/w ASTR(144)   r     1 QT$SETTEXT
     0-0-0/w STRC(432)   r     1 VLP$SETSTA


   Procedure QTC$PROCESS_SET requires 680 words for executable code.
   Procedure QTC$PROCESS_SET requires 494 words of local(AUTO) storage.

    No errors detected in file QTC$PROCESS_SET.:E05TSI    .
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:91   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:92   
          MINI XREF LISTING

ADD_ASSMRG
      5577**PROC     5249--CALL     5313--CALL     5361--CALL     5398--CALL     5460--CALL
AMR$FPT_OPEN
      4122**DCL      5539<<ASSIGN   5542--ASSIGN   5546--ASSIGN
AMR$FPT_OPEN.ACSVEH_
      4124**DCL      4125--REDEF
AMR$FPT_OPEN.ALTKEYS_
      4130**DCL      4131--REDEF    4131--REDEF
AMR$FPT_OPEN.HDR_
      4129**DCL      4130--REDEF
AMR$FPT_OPEN.SETSTA_
      4123**DCL      5446>>IF       5448>>ASSIGN   5543<<ASSIGN
AMR$FPT_OPEN.TAB_
      4128**DCL      4129--REDEF
AMR$FPT_OPEN.UHL_
      4122**DCL      4123--REDEF    4123--REDEF
AMR$FPT_OPEN.V
      4131**DCL      5540--ASSIGN
AMR$FPT_OPEN.V.FSN#
      4162**DCL      4162--REDEF    4162--REDEF
AMR$FPT_OPEN.V_
      4122**DCL      5540<<ASSIGN
AMR$FPT_OPEN.WSN_
      4128**DCL      4128--REDEF
AMR_FPT_OPEN_C
      4512**DCL      5539>>ASSIGN
AMR_FPT_OPEN_C.ACSVEH_
      4514**DCL      4515--REDEF
AMR_FPT_OPEN_C.ALTKEYS_
      4520**DCL      4521--REDEF    4521--REDEF
AMR_FPT_OPEN_C.HDR_
      4519**DCL      4520--REDEF
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:93   
AMR_FPT_OPEN_C.TAB_
      4518**DCL      4519--REDEF
AMR_FPT_OPEN_C.UHL_
      4512**DCL      4513--REDEF    4513--REDEF
AMR_FPT_OPEN_C.V
      4521**DCL      4512--DCLINIT
AMR_FPT_OPEN_C.V.FSN#
      4552**DCL      4552--REDEF    4552--REDEF
AMR_FPT_OPEN_C.WSN_
      4518**DCL      4518--REDEF
ASSMRG_SIZE
      4618**DCL      5444<<ASSIGN   5546<<ASSIGN   5606>>IF       5618>>ASSIGN   5619>>ASSIGN
BLD_ASSMRG
      5531**PROC     5246--CALL     5311--CALL     5359--CALL     5395--CALL
BYTE_COUNT
      4619**DCL      5579<<ASSIGN   5583<<ASSIGN   5583>>ASSIGN   5587>>IF       5598<<ASSIGN   5602<<ASSIGN
      5602>>ASSIGN   5606>>IF
CHAR$STRING
      4054**DCL      5620>>ASSIGN
CHAR_STRING_SIZE
      4620**DCL      4054--IMP-SIZ  5619<<ASSIGN   5620>>ASSIGN
CHK_DUPLICITY
      5654**PROC     5248--CALL     5397--CALL
CODE_DUREADS
      4739**DCL      5674>>ASSIGN
CODE_DURESPONDS
      4746**DCL      5677>>ASSIGN
CODE_IIPS
      4732**DCL      5189>>ASSIGN   5190<>CALL
CODE_INCONSIS
      4753**DCL      5239>>ASSIGN   5240<>CALL
CODE_ITU
      4725**DCL      5499>>ASSIGN   5500<>CALL
CODE_IWS
      4711**DCL      5300>>ASSIGN   5301<>CALL
CODE_IWT
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:94   
      4697**DCL      5228>>ASSIGN   5229<>CALL
CODE_NOLATCH
      4760**DCL      5454>>ASSIGN   5455<>CALL
CODE_NWTOR
      4704**DCL      5287>>ASSIGN   5288<>CALL
CODE_NWTOS
      4718**DCL      5352>>ASSIGN   5353<>CALL
DCB$
      4630**DCL      5145<<ASSIGN   5247>>CALL     5247>>CALL     5312>>CALL     5312>>CALL     5360>>CALL
      5360>>CALL     5396>>CALL     5396>>CALL     5459>>CALL     5459>>CALL     5616>>ASSIGN   5617>>ASSIGN
      5617>>ASSIGN
DCB$NAME
      4050**DCL      5247<>CALL     5312<>CALL     5360<>CALL     5396<>CALL     5459<>CALL
DCB$NAME.COUNT
      4051**DCL      4052--IMP-SIZ  5247>>CALL     5312>>CALL     5360>>CALL     5396>>CALL     5459>>CALL
DUPLICITY_CNT
      4622**DCL      5656<<ASSIGN   5663<<ASSIGN   5663>>ASSIGN   5669>>IF
F$DCB.ACTPOS
      3942**DCL      3942--REDEF
F$DCB.ARS#
      3916**DCL      3916--REDEF    5444>>ASSIGN
F$DCB.ATTR
      3935**DCL      3936--REDEF
F$DCB.BORROW
      3950**DCL      3950--REDEF    3950--REDEF    3950--REDEF
F$DCB.DCBNAME.L
      3964**DCL      3964--IMP-SIZ
F$DCB.EOMCHAR#
      3920**DCL      3920--REDEF
F$DCB.FLDID
      3945**DCL      3945--REDEF
F$DCB.FORM$
      3939**DCL      3939--REDEF
F$DCB.FSECT
      3955**DCL      3955--REDEF
F$DCB.FSN#
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:95   
      3932**DCL      3932--REDEF    3932--REDEF    3933--REDEF
F$DCB.HEADER$
      3938**DCL      3938--REDEF
F$DCB.IXTNSIZE#
      3936**DCL      3936--REDEF
F$DCB.LASTSTA$
      3925**DCL      3925--REDEF
F$DCB.LVL
      3951**DCL      3951--REDEF
F$DCB.NAME#.C
      3926**DCL      3926--REDEF
F$DCB.NOEOF
      3948**DCL      3948--REDEF
F$DCB.NRECS#
      3937**DCL      3937--REDEF
F$DCB.NRECX
      3956**DCL      3956--REDEF
F$DCB.OHDR
      3948**DCL      3948--REDEF
F$DCB.ORG#
      3931**DCL      3931--REDEF
F$DCB.PRECNO
      3954**DCL      3954--REDEF
F$DCB.RCSZ
      3960**DCL      3960--REDEF
F$DCB.RES#
      3927**DCL      3927--REDEF
F$DCB.SETX
      3939**DCL      3939--REDEF
F$DCB.TAB$
      3939**DCL      3939--REDEF
F$DCB.TDA
      3953**DCL      3954--REDEF
F$DCB.WSN#
      3927**DCL      3927--REDEF
FPT_CLOSE
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:96   
      5049**DCL      5442<>CALL
FPT_CLOSE.SN_
      5049**DCL      5049--REDEF
FPT_CLOSE.UTL_
      5050**DCL      5050--REDEF
FPT_CLOSE.V
      5054**DCL      5049--DCLINIT
FPT_CLOSE.V.EXPIRE#
      5064**DCL      5064--REDEF
FPT_CLOSE.V.TYPE#
      5062**DCL      5062--REDEF
FPT_CLOSE.V.XTNSIZE#
      5059**DCL      5059--REDEF    5061--REDEF
FPT_OPEN
      4981**DCL      5437<>CALL
FPT_OPEN.ACSVEH_
      4983**DCL      4984--REDEF
FPT_OPEN.ALTKEYS_
      4989**DCL      4990--REDEF    4990--REDEF
FPT_OPEN.HDR_
      4988**DCL      4989--REDEF
FPT_OPEN.TAB_
      4987**DCL      4988--REDEF
FPT_OPEN.UHL_
      4981**DCL      4982--REDEF    4982--REDEF
FPT_OPEN.V
      4990**DCL      4981--DCLINIT
FPT_OPEN.V.FSN#
      5021**DCL      5021--REDEF    5021--REDEF
FPT_OPEN.WSN_
      4987**DCL      4987--REDEF
FPT_READ
      4892**DCL      5441<>CALL
FPT_READ.BUF_.BOUND
      4894**DCL      5440<<ASSIGN
FPT_READ.BUF_.BUF$
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:97   
      4895**DCL      5439<<ASSIGN
FPT_READ.STATION_
      4895**DCL      4896--REDEF
FPT_READ.V
      4896**DCL      4892--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
      4907**DCL      4907--REDEF
FPT_READ.V.INDX#
      4905**DCL      4905--REDEF
FPT_YC
      5082**DCL      5435<>CALL     5462<>CALL
FPT_YC.CMD_
      5082**DCL      5433<<ASSIGN   5461<<ASSIGN
FPT_YC.V
      5083**DCL      5082--DCLINIT
I
      4617**DCL      5134<<DOINDEX  5135>>ASSIGN   5582<<DOINDEX  5601<<DOINDEX  5660<<DOINDEX
ILLEGAL_SET
      5497**PROC     5182--CALL
INCONSISTANT IN PROCEDURE READS
      5239**LABEL    5234--CALLALT
KEY
      4586**DCL      4892--DCLINIT  4893--DCLINIT
KEY.TEXT
      4588**DCL      5431>>CALLBLT
M$CLOSE
       126**DCL-ENT  5442--CALL
M$OPEN
       126**DCL-ENT  5437--CALL
M$READ
       127**DCL-ENT  5441--CALL
M$STARA
      3700**DCL      5444--ASSIGN
M$STARA.ACTPOS
      3741**DCL      3741--REDEF
M$STARA.ARS#
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:98   
      3700**DCL      3700--REDEF
M$STARA.ATTR#
      3730**DCL      3730--REDEF    3732--REDEF
M$STARA.BORROW
      3752**DCL      3752--REDEF    3752--REDEF    3752--REDEF
M$STARA.DCBNAME.L
      3771**DCL      3771--IMP-SIZ  5444>>ASSIGN
M$STARA.EOMCHAR#
      3707**DCL      3708--REDEF
M$STARA.FLDID
      3744**DCL      3745--REDEF
M$STARA.FORM$
      3736**DCL      3736--REDEF
M$STARA.FSECT
      3759**DCL      3759--REDEF
M$STARA.FSN#
      3726**DCL      3726--REDEF    3726--REDEF    3727--REDEF
M$STARA.HEADER$
      3735**DCL      3736--REDEF
M$STARA.IXTNSIZE#
      3732**DCL      3733--REDEF
M$STARA.LASTSTA$
      3716**DCL      3716--REDEF
M$STARA.LVL
      3753**DCL      3753--REDEF
M$STARA.NAME#.C
      3716**DCL      3717--REDEF
M$STARA.NOEOF
      3748**DCL      3748--REDEF
M$STARA.NRECS#
      3733**DCL      3733--REDEF
M$STARA.NRECX
      3760**DCL      3760--REDEF
M$STARA.OHDR
      3749**DCL      3749--REDEF
M$STARA.ORG#
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:99   
      3724**DCL      3725--REDEF
M$STARA.PRECNO
      3757**DCL      3757--REDEF
M$STARA.RCSZ
      3765**DCL      3765--REDEF
M$STARA.RES#
      3718**DCL      3718--REDEF
M$STARA.SETX
      3737**DCL      3737--REDEF
M$STARA.TAB$
      3736**DCL      3736--REDEF
M$STARA.TDA
      3756**DCL      3757--REDEF
M$STARA.WSN#
      3718**DCL      3719--REDEF
M$YC
       140**DCL-ENT  5435--CALL     5462--CALL
MON_ERR IN PROCEDURE SET_DCB
      5468**LABEL    5437--CALLALT  5441--CALLALT
NO_Q1 IN PROCEDURE READS
      5234**LABEL    5224--CALLALT
NO_Q1 IN PROCEDURE REPORTS
      5292**LABEL    5285--CALLALT
NO_Q1 IN PROCEDURE SPAWNS
      5357**LABEL    5350--CALLALT
NO_Q2 IN PROCEDURE REPORTS
      5309**LABEL    5296--CALLALT
NSUBLKS
      4616**DCL      5128<<ASSIGN   5134>>DOINDEX
ONEREPORT_FLAG
      4637**DCL      5131<<ASSIGN   5158<<ASSIGN   5160<<ASSIGN   5615>>ASSIGN
OUT$BLK.CODE
      4018**DCL      5127>>ASSIGN
OUT$BLK.NSUBLKS
      4022**DCL      5128>>ASSIGN
OUT$BLK.SUBLK$
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:100  
      4043**DCL      5135>>ASSIGN   5148>>ASSIGN   5156>>ASSIGN   5431>>CALLBLT  5431>>CALLBLT  5431>>CALLBLT
      5431>>CALLBLT
OUT$SYM.CODE
      3979**DCL      5137>>DOCASE   5149>>IF       5157>>IF
OUT$SYM.COUNT
      3996**DCL      3999--IMP-SIZ  5222>>ASSIGN   5224>>CALLBLT  5226>>IF       5283>>ASSIGN   5285>>CALLBLT
      5294>>ASSIGN   5296>>CALLBLT  5298>>IF       5347>>ASSIGN   5350>>CALLBLT  5431>>CALLBLT  5616>>ASSIGN
      5617>>ASSIGN
OUT$SYM.TEXT
      3999**DCL      5222>>ASSIGN   5224>>CALLBLT  5283>>ASSIGN   5285>>CALLBLT  5294>>ASSIGN   5296>>CALLBLT
      5347>>ASSIGN   5350>>CALLBLT  5431>>CALLBLT  5617>>ASSIGN
OUT$SYM.TEXTC$
      3991**DCL      5247>>CALL     5247>>CALL     5312>>CALL     5312>>CALL     5360>>CALL     5360>>CALL
      5396>>CALL     5396>>CALL     5459>>CALL     5459>>CALL
PARSE_ERR
      5189**LABEL    5122--CALLALT
PARSE_WORK
      4623**DCL      5118--ASSIGN   5119--ASSIGN
POS
      4621**DCL      5224<<CALLBLT  5226>>IF       5285<<CALLBLT  5296<<CALLBLT  5298>>IF       5350<<CALLBLT
PTR$
      4631**DCL      4632--REDEF    5448<<ASSIGN
PTR$_BITS.WORDS
      4633**DCL      5449>>ASSIGN
P_MSGTYP
      3667**DCL        56--PROC     5234<>CALL
P_PARSE_FLAG
      3666**DCL        56--PROC     5114>>IF
P_PCB
      4238**DCL      5122<>CALL
P_PCB.NCHARS
      4385**DCL      5120<<ASSIGN
P_PCB.OUT$
      4251**DCL      5124>>ASSIGN
P_PCB.ROOT$
      4243**DCL      5117<<ASSIGN
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:101  
P_PCB.TEXT$
      4239**DCL      5116<<ASSIGN
P_PCB.WKSZ
      4268**DCL      5119<<ASSIGN
P_PCB.WORK$
      4247**DCL      5118<<ASSIGN
P_SET
      3659**DCL        56--PROC
P_SET.COUNT
      3660**DCL      3664--IMP-SIZ  5111>>ASSIGN   5112>>ASSIGN
P_SET.TEXT
      3664**DCL      5112>>ASSIGN
QQC$WILD_COMP
      3693**DCL-ENT  5234--CALL
QT$ENTRY
      3835**DCL      5598--ASSIGN   5599--ASSIGN   5658--ASSIGN
QT$ENTRY.FLAGS.NEW_LOCK
      3842**DCL      5533>>IF
QT$ENTRY.SET_COUNT
      3871**DCL      5582>>DOINDEX  5601>>DOINDEX  5623<<ASSIGN   5623>>ASSIGN   5660>>DOINDEX
QT$SETBITS
      3889**DCL      5602--ASSIGN   5603--ASSIGN   5666--ASSIGN
QT$SETBITS.ASN_MERGE.COUNT
      3906**DCL      3907--IMP-SIZ  5602>>ASSIGN   5603>>ASSIGN   5618<<ASSIGN   5620>>ASSIGN   5666>>ASSIGN
QT$SETBITS.ASN_MERGE.TEXT
      3907**DCL      5620<<ASSIGN
QT$SETBITS.DCBNAME.COUNT
      3902**DCL      5616<<ASSIGN
QT$SETBITS.DCBNAME.TEXT
      3903**DCL      5617<<ASSIGN
QT$SETBITS.FLAGS
      3892**DCL      5614<<ASSIGN
QT$SETBITS.FLAGS.ONEREPORT
      3894**DCL      5615<<ASSIGN
QT$SETBITS.JUNK1
      3898**DCL      5612<<ASSIGN
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:102  
QT$SETBITS.JUNK2
      3899**DCL      5613<<ASSIGN
QT$SETBITS.TYPE
      3890**DCL      5611<<ASSIGN   5661>>IF
QT$SETTEXT
      3879**DCL      5583--ASSIGN   5584--ASSIGN
QT$SETTEXT.COUNT
      3880**DCL      3885--IMP-SIZ  5583>>ASSIGN   5584>>ASSIGN   5592<<ASSIGN   5593>>ASSIGN
QT$SETTEXT.JUNK1
      3882**DCL      5594<<ASSIGN
QT$SETTEXT.JUNK2
      3883**DCL      5595<<ASSIGN
QT$SETTEXT.JUNK3
      3884**DCL      5596<<ASSIGN
QT$SETTEXT.TEXT
      3885**DCL      5593<<ASSIGN
QTC$DELETE_SET
      3694**DCL-ENT  5247--CALL     5312--CALL     5360--CALL     5396--CALL     5459--CALL
QTC$GETMEM
      3697**DCL-ENT  5589--CALL     5608--CALL
QTC$MON_ERR
      3696**DCL-ENT  5468--CALL
QT_CMDBLK.CODE
       210**DCL      5127<<ASSIGN   5165>>DOCASE   5611>>ASSIGN   5661>>IF       5671>>DOCASE
QT_CMDBLK.MINOR_ERR
       209**DCL      5189<<ASSIGN   5228<<ASSIGN   5239<<ASSIGN   5287<<ASSIGN   5300<<ASSIGN   5352<<ASSIGN
      5454<<ASSIGN   5499<<ASSIGN   5674<<ASSIGN   5677<<ASSIGN   5681<>CALL
QT_CMDBLK.OUT$
       209**DCL       210--REDEF    5124<<ASSIGN   5127>>ASSIGN   5128>>ASSIGN   5135>>ASSIGN   5431>>CALLBLT
      5431>>CALLBLT
QT_GLOBAL.AMR$FPT_OPEN$
       207**DCL      4122--IMP-PTR  5439>>ASSIGN   5446>>IF       5448>>ASSIGN   5449>>ASSIGN   5539>>ASSIGN
      5540>>ASSIGN   5540>>ASSIGN   5542>>ASSIGN   5543>>ASSIGN   5620>>ASSIGN
QT_GLOBAL.AMR$FPT_OPEN_SIZE
       208**DCL      5440>>ASSIGN
QT_GLOBAL.QT$ENTRY$
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:103  
       207**DCL      3835--IMP-PTR  5533>>IF       5582>>DOINDEX  5599>>ASSIGN   5601>>DOINDEX  5608<>CALL
      5623>>ASSIGN   5623>>ASSIGN   5658>>ASSIGN   5660>>DOINDEX
QT_GLOBAL.QT$ENTRY_SIZE
       208**DCL      5606>>IF       5608<>CALL
QT_GLOBAL.QT$SETTEXT$
       207**DCL      3879--IMP-PTR  5580>>ASSIGN   5589<>CALL
QT_GLOBAL.QT$SETTEXT_SIZE
       208**DCL      5587>>IF       5589<>CALL
QT_NODES1
      3798**DCL      5117--ASSIGN
READS
      5220**PROC     5167--CALL
REC$
      4628**DCL      5580<<ASSIGN   5583>>ASSIGN   5583>>ASSIGN   5584<<ASSIGN   5584>>ASSIGN   5584>>ASSIGN
      5584>>ASSIGN   5592>>ASSIGN   5593>>ASSIGN   5593>>ASSIGN   5594>>ASSIGN   5595>>ASSIGN   5596>>ASSIGN
      5599<<ASSIGN   5602>>ASSIGN   5602>>ASSIGN   5603<<ASSIGN   5603>>ASSIGN   5603>>ASSIGN   5603>>ASSIGN
      5611>>ASSIGN   5612>>ASSIGN   5613>>ASSIGN   5614>>ASSIGN   5615>>ASSIGN   5616>>ASSIGN   5617>>ASSIGN
      5618>>ASSIGN   5620>>ASSIGN   5620>>ASSIGN   5658<<ASSIGN   5661>>IF       5666<<ASSIGN   5666>>ASSIGN
      5666>>ASSIGN   5666>>ASSIGN
REPORTS
      5281**PROC     5170--CALL
RESET_CMD
      4590**DCL      5461--ASSIGN
RESPONDS
      5393**PROC     5176--CALL
RET
      5193**LABEL    5186--GOTO
RET IN PROCEDURE SET_DCB
      5465**LABEL    5435--CALLALT  5462--CALLALT
SAVE_SET.COUNT
      4640**DCL      5111<<ASSIGN   5120>>ASSIGN   5587>>IF       5592>>ASSIGN
SAVE_SET.TEXT
      4641**DCL      5112<<ASSIGN   5116--ASSIGN   5593>>ASSIGN
SETSTA$
      4627**DCL      5449<<ASSIGN   5451>>IF       5451>>IF       5542<<ASSIGN   5543>>ASSIGN   5544>>ASSIGN
SET_CMD
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:104  
      4420**DCL      5431<<CALLBLT  5433--ASSIGN
SET_DCB
      5429**PROC     5179--CALL
SET_OK_FLAG
      4636**DCL      5130<<ASSIGN   5230<<ASSIGN   5241<<ASSIGN   5244>>IF       5289<<ASSIGN   5302<<ASSIGN
      5309>>IF       5354<<ASSIGN   5357>>IF
SPAWNS
      5345**PROC     5173--CALL
STATION$
      4629**DCL      5129<<ASSIGN   5142<<ASSIGN   5292>>IF       5294>>ASSIGN   5294>>ASSIGN   5296>>CALLBLT
      5296>>CALLBLT  5298>>IF
SUBLK$
      4625**DCL      5135<<ASSIGN   5137>>DOCASE   5139>>ASSIGN   5142>>ASSIGN   5145>>ASSIGN   5148<<ASSIGN
      5148>>ASSIGN   5149>>IF       5156<<ASSIGN   5156>>ASSIGN   5157>>IF
TYPE$
      4626**DCL      5139<<ASSIGN   5222>>ASSIGN   5222>>ASSIGN   5224>>CALLBLT  5224>>CALLBLT  5226>>IF
      5283>>ASSIGN   5283>>ASSIGN   5285>>CALLBLT  5285>>CALLBLT  5347>>ASSIGN   5347>>ASSIGN   5350>>CALLBLT
      5350>>CALLBLT
VLP$SETSTA
      4179**DCL      5544<<ASSIGN   5546--ASSIGN
VLP$SETSTA.ISTA.ILATCH#
      4184**DCL      5451>>IF
VLP$SETSTA.OSTA.OLATCH#
      4189**DCL      5451>>IF
VLP_SETSTA
      4655**DCL      5132<<ASSIGN   5544>>ASSIGN
VLP_SETSTA.ISTA.EOFNONE#
      4661**DCL      5152<<ASSIGN
VLP_SETSTA.ISTA.EOFONE#
      4661**DCL      5151<<ASSIGN
VLP_SETSTA.ISTA.ILOCK#
      4660**DCL      5535<<ASSIGN
VLP_SETSTA.ISTA.IMSGTYP#
      4660**DCL      5222<<ASSIGN   5234<>CALL
VLP_SETSTA.OSTA.ALLTRMS#
      4666**DCL      5305<<ASSIGN
PL6.E3A0      #001=QTC$PROCESS_SET File=QTC$PROCESS_SET.:E05TSI                  WED 07/30/97 05:50 Page:105  
VLP_SETSTA.OSTA.ANYDCB#
      4667**DCL      5348<<ASSIGN
VLP_SETSTA.OSTA.OLOCK#
      4665**DCL      5536<<ASSIGN
VLP_SETSTA.OSTA.OMSGTYP#
      4664**DCL      5283<<ASSIGN   5347<<ASSIGN
VLP_SETSTA.OSTA.OSTATION#
      4664**DCL      5294<<ASSIGN
VLP_SETSTA_C
      4570**DCL      5132>>ASSIGN
X$PARSE
      3698**DCL-ENT  5122--CALL
XUR$ERRMSG
      3695**DCL-ENT  5190--CALL     5229--CALL     5240--CALL     5288--CALL     5301--CALL     5353--CALL
      5455--CALL     5500--CALL     5681--CALL
