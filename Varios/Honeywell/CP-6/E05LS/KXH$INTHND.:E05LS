VERSION E05

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:1    
        1        1        /*M* KXH$INTHND  -  X.25 Handler MLCP and MLC-16 Interrupt Handlers
                 1               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X*  PLM=4,IND=3,CTI=3,DCI=6,IAD=0,DTI=6,AND=Y,CSI=3,THI=3,STI=3,DMC=Y */
        9        9        /*P* NAME: KXH$INTHND                                                         */
       10       10        /*P* PURPOSE: This module contains the X.25 MLCP and MLC-16
                10             */
       11       11        /*P* interrupt handlers.                                                      */
       12       12
       13       13        /*F* NAME: KXH$INTHND                                                         */
       14       14        /*F* PURPOSE: This routine handles the MLCP and MLC-16
                14             */
       15       15        /*F* interrupts.                                                     */
       16       16
       17       17        /*D* NAME: KXH$INTHND                                                         */
       18       18        /*D* PURPOSE: This routine handles the MLCP and MLC-16
                18             */
       19       19        /*D* interrupts.                                                     */
       20       20        /*D* INPUT: G$UHJIT.ISA_USR.DEV  =  interrupting MLCP or MLC-16 address
                20           */
       21       21        /*D* OUTPUT: None                                                             */
       22       22        /*D* DESCRIPTION: Most of this interrupt handler executes as                  */
       23       23        /*D* subroutine so it has a                                */
       24       24        /*D* access to a standard environment.                                        */
       25       25
       26       26        KXH$INTHND: PROC ASYNC;
       27       27
       28       28        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:2    
       29       29        /*****************************************************************
       30       30        *                                                                *
       31       31        *                           Include files                        *
       32       32        *                                                                *
       33       33        *****************************************************************/
       34       34
       35       35        %INCLUDE K_ID_E;
       36       85        %K#ENTID_E;
       37      104        %K#LYRID_E;
       38      111        %INCLUDE KL_MACRO_C;
       39     3463        %INCLUDE KL_AFCN_C;
       40     3564        %INCLUDE LCP_6;
       41     7843        %INCLUDE CP_6_SUBS;
       42     8383        %INCLUDE GH_HARDWARE_M;
       43     8481        %INCLUDE GH_IOFNC_E;
       44     8550        %INCLUDE G_HJIT_M;
       45     8695        %INCLUDE G_JIT_M;
       46     8960        %INCLUDE KH$CHN;
       47     9082        %INCLUDE KH$IO;
       48     9329        %INCLUDE KH_CHN;
       49     9369        %INCLUDE KHA_FNC_E;
       50     9469        %INCLUDE KL_SUPER_C;
       51    12371        %INCLUDE KNH_MACRO_C;
       52    12654        %INCLUDE KV$GLB;
       53    13073        %INCLUDE KV_GLBCNS_E;
       54    13414        %KV#CQ_HNDID_E;
       55    13419        %INCLUDE KX_EQUS_E;
       56    13858        %INCLUDE KX_PERR_C;
       57    13987        %INCLUDE KX_SCODE_C;
       58    14053        %INCLUDE KX_DATA_C;
       59    14121        %INCLUDE KX_MACROS_M;
       60    14892        %INCLUDE KW_LCT_E;
       61    15247        %INCLUDE KW_SLCT_E;
       62    15423        %INCLUDE KX_LCT_E;
       63    15544        %INCLUDE KH$CLK;
       64    15914        %INCLUDE KH_CLKFNC_E;
       65    15959        %INCLUDE K_ADDRESS_M;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:3    
       66    16462        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:4    
       67    16463        /*****************************************************************
       68    16464        *                                                                *
       69    16465        *                           External References                  *
       70    16466        *                                                                *
       71    16467        *****************************************************************/
       72    16468
       73    16469    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
       74    16470    1   DCL KHA$TSTCNC ENTRY (1) ALTRET;
       75    16471    1   DCL KHI$IOLD ENTRY (2);
       76    16472    1   DCL KHI$IO_INP ENTRY (2);
       77    16473    1   DCL KHI$IO_INPLCTBYT ENTRY (2);
       78    16474    1   DCL KHI$IO_OTP ENTRY (2);
       79    16475    1   DCL KXF$FRAME ENTRY (1) ALTRET;
       80    16476    1   DCL KXN$CMND ENTRY (3);
       81    16477    1   DCL KXS$GETBFR ENTRY (3) ALTRET;
       82    16478    1   DCL KXS$RLSBFR ENTRY (1);
       83    16479    1   DCL KXS$Q_SYSLOG ENTRY (1);
       84    16480    1   DCL KXS$SYSLOG ENTRY (7);
       85    16481    1   DCL KXX$X29 ENTRY (1);
       86    16482    1   DCL KXH$LSTSGNCLK ENTRY (1);
       87    16483    1   DCL KHC$CLOCK ENTRY (1) ALTRET;
       88    16484    1   DCL X6A_INTRET ENTRY (1);
       89    16485    1   DCL KHD$SCREECH ENTRY (1);
       90    16486    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       91    16487    1   DCL KHC$XEQ2 ENTRY(1) ALTRET;
       92    16488        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:5    
       93    16489        /*****************************************************************
       94    16490        *                                                                *
       95    16491        *                           Auto                                 *
       96    16492        *                                                                *
       97    16493        *****************************************************************/
       98    16494
       99    16495    1   DCL ERROR UBIN(32);
      100    16496    1   DCL CHN UBIN;
      101    16497    1   DCL CHN$ PTR;
      102    16498    1   DCL LEVEL UBIN;
      103    16499    1   DCL CTX$ PTR;
      104    16500    1   DCL DAT$ PTR;
      105    16501    1   DCL 1 DAT REDEF DAT$,
      106    16502    1         2 * UBIN, 2 W UBIN;
      107    16503    1   DCL CCB$ PTR;
      108    16504    1   DCL 1 CCB REDEF CCB$,
      109    16505    1         2 * UBIN, 2 W UBIN;
      110    16506        %VLP_ERRCODE (STCLASS=AUTO, FPTN=ERCOD);
      111    16552        %KH$CLK ( FPTN = KH@CLK, STCLASS = AUTO );
      112    16701        %KH$EXP ( FPTN = KH@EXP, STCLASS = AUTO );
      113    16764    1   DCL PRM_DUMMY UBIN;
      114    16765    1   DCL Y@SVDEXCTIM UBIN(32);
      115    16766    1   DCL Y@CRTEXCTIM UBIN(32);
      116    16767    1   DCL TRCX UBIN;
      117    16768        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:6    
      118    16769        /*****************************************************************
      119    16770        *                                                                *
      120    16771        *                           Based                                *
      121    16772        *                                                                *
      122    16773        *****************************************************************/
      123    16774
      124    16775        %KH$CHN ( STCLASS = "BASED(CHN$)" );
      125    16899        %G$UHJIT ( STCLASS = "BASED(G$UHJIT$)" );
      126    19873        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
      127    20287        %KNH$QHDR (STCLASS="BASED(G$HAND_Q$)");
      128    20300        %KX$L1 ( STCLASS = "BASED(CTX$)" );
      129    20340        %KX$L2 ( STCLASS = "BASED(CTX$)" );
      130    20707        %KX$L2 ( FPTN = KX$L2S, STCLASS = "BASED(CTX$)", SLCC = YES );
      131    21104        %KX$CCB ( STCLASS = "BASED(CCB$)" );
      132    21135        %KX$DATA ( STCLASS = "BASED(DAT$)" );
      133    21155        %KX$FRAME ( STCLASS = "BASED(DAT$)" );
      134    21187    1   DCL ABORT_FRAME(0:2000) UBIN(8) CALIGNED BASED(DAT$);
      135    21188    1   DCL FRAME_TRACE(0:20) UBIN(16) ALIGNED BASED(DAT$);
      136    21189        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:7    
      137    21190        /*****************************************************************
      138    21191        *                                                                *
      139    21192        *                           Constant                             *
      140    21193        *                                                                *
      141    21194        *****************************************************************/
      142    21195
      143    21196        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      144    21197                           FPTN = INVCHN,
      145    21198                           ERR# = %E_KXH_INVCHN# );
      146    21244        /*E*   ERROR:      KXH-E_KXH_INVCHN#-1
      147    21245               MESSAGE:    Interrupt received for an unowned channel.
      148    21246        */
      149    21247        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      150    21248                           FPTN = NO_CTX,
      151    21249                           ERR# = %E_KXH_NO_CTX# );
      152    21295        /*E*   ERROR:      KXH-E_KXH_NO_CTX#-1
      153    21296               MESSAGE:    Ignored interrupt on channel without link context.
      154    21297        */
      155    21298        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      156    21299                           FPTN = HRDERR,
      157    21300                           ERR# = %E_KXH_HRDERR# );
      158    21346        /*E*   ERROR:      KXH-E_KXH_HRDERR#-1
      159    21347               MESSAGE:    MLCP/MLC-16 detected line error on input buffer.
      160    21348                           VAL(1) is the CCB status information.
      161    21349                           Bit      Meaning when bit is set
      162    21350                           ----     -----------------------
      163    21351                           8000     Interrupt main memory program from CCP
      164    21352                           4000     Interrupt main memory program from CCB
      165    21353                           2000     Data service error
      166    21354                           1000     CCB status complete
      167    21355                           0800     CCB service error
      168    21356                           0600     CCP reported error, as follows:
      169    21357                                    0000 - ok
      170    21358                                    0200 - Aborted frame
      171    21359                                    0400 - Frame longer than CCB
      172    21360                                    0600 - Resync happened during receive
      173    21361                           0100     Reserved
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:8    
      174    21362                           0080     Reserved
      175    21363                           0040     Data check error
      176    21364                           0020     Receive nonzero residual range|transmit last block
      177    21365                           0010     Data set or communication-pac status change
      178    21366                           0008     Corrected memory error
      179    21367                           0004     Invalid memory address
      180    21368                           0002     Megabus parity error
      181    21369                           0001     Uncorrected memory error
      182    21370        */
      183    21371        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      184    21372                           FPTN = SPRINT,
      185    21373                           ERR# = %E_KXH_SPRINT# );
      186    21419        /*E*   ERROR:      KXH-E_KXH_SPRINT#-1
      187    21420               MESSAGE:    Spurious interrupt received for an output channel.
      188    21421        */
      189    21422        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_BAD_HARD#,
      190    21423                           FPTN = TRNUND,
      191    21424                           ERR# = %E_KXH_TRNUND# );
      192    21470        /*E*   ERROR:      KXH-E_KXH_TRNUND#-2
      193    21471               MESSAGE:    MLCP/MLC-16 experienced an underrun condition.
      194    21472        */
      195    21473    1   DCL 1 SLCC_ERRCODS CONSTANT,
      196    21474        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, LAST=NO, FPTN=S0);
      197    21520        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, LAST=NO, FCG=KX, MID=S, FPTN=S1,
      198    21521                      ERR#=%E_KXF_DISC_L#, SEV=%G_WRSYSLOG_SEV_FATAL_PROT#);
      199    21567        /*E* ERROR:   KXS-E_KXF_DISC_L#-4
      200    21568             MESSAGE: RESET Retries Exhausted - Line Disconnected.
      201    21569        */
      202    21570        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, LAST=NO, FCG=KX, MID=S, FPTN=S2,
      203    21571                      ERR#=%E_KXF_DISC_LU#, SEV=%G_WRSYSLOG_SEV_FATAL_PROT#);
      204    21617        /*E* ERROR:   KXS-E_KXF_DISC_LU#-4
      205    21618             MESSAGE: DISC Frame While Active - Line Disconnected.
      206    21619        */
      207    21620        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, FCG=KX, MID=S, FPTN=S3,
      208    21621                      ERR#=%E_KXH_LSTDSRCTS#, SEV=%G_WRSYSLOG_SEV_BAD_HARD#);
      209    21667        /*E*   ERROR:      KXS-E_KXH_LSTDSRCTS#-2
      210    21668               MESSAGE:    Physical disconnect of active line
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:9    
      211    21669        */
      212    21670    1   DCL SLCC_ERRCOD(0:3) REDEF SLCC_ERRCODS BIT(32);
      213    21671
      214    21672    1   DCL G$HAND_Q$ PTR SYMREF;
      215    21673
      216    21674        %KH$CLK ( FPTN = KH_SETCLK, STCLASS = CONSTANT, SBR = KXH$LSTSGNCLK,
      217    21675          PRDUNT = KH#C_TMIL, FNC = %KH#CLK_SETCLK, NO_CTB = YES, PERM = NO );
      218    21824        %KH$EXP ( FPTN = KH_EXP, STCLASS = CONSTANT );
      219    21887        /*
      220    21888           the period of the lost-line-signal clock is set to 0.2 sec.
      221    21889        */
      222    21890    1   DCL KX_LSTSGNCLKPRD UBIN CONSTANT SYMDEF INIT(200);
      223    21891        %VLP_SCODE (FPTN=Y_NO_LINSGNCLK,STCLASS=CONSTANT,FCG=KX,MID=H,ERR#=
             21891            %S$KX_NO_LINSGNCLK#);
      224    21952        %VLP_SCODE (FPTN=Y_UNKTRNSTT,STCLASS=CONSTANT,FCG=KX,MID=H,ERR#=%S$KX_UNKTRNSTT#);
      225    22013        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:10   
      226    22014        /*****************************************************************
      227    22015        *                                                                *
      228    22016        *                           Static                               *
      229    22017        *                                                                *
      230    22018        *****************************************************************/
      231    22019
      232    22020        %KH_CHNDAT;
      233    22038    1   DCL G$UHJIT$ PTR SYMREF;
      234    22039    1   DCL G$JIT$ PTR SYMREF;
      235    22040        %B$TERMINAL_ID ( FPTN = SYSLOG_TRMID, STCLASS = STATIC, LVL = 1 );
      236    22069        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT);
      237    22183        %KH$IO ( FPTN=INPSLCSTT, STCLASS=STATIC, FNC=%GH#IO_INPSLCSTT, OTPCHN=YES);
      238    22297        %FPT_X25 (STCLASS=STATIC);
      239    22341        %FPT_INTRET;
      240    22361        %FPT_INTRET ( FPTN=INTRET_WAKEUP, WAKEME=YES );
      241    22381    1   DCL KV_B_POOL$(0:0) PTR SYMREF;
      242    22382        %KX_DATA;
      243    23072    1   DCL KX_LSTDSRCTS UBIN STATIC INIT(0);
      244    23073        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:11   
      245    23074        /*****************************************************************
      246    23075        *                                                                *
      247    23076        *                           Procedure                            *
      248    23077        *                                                                *
      249    23078        *****************************************************************/
      250    23079
      251    23080
      252    23081        /*
      253    23082                                             Calculate the address of the
      254    23083                                             channel table for this device.
      255    23084        */
      256    23085    1       CHN = BITBIN ( G$UHJIT.ISA_USR.DEV );
      257    23086    1       IF CHN > KH_CHNHI
      258    23087    1          THEN
      259    23088    2             DO;
      260    23089    2                SYSLOG_TRMID = '0'B;
      261    23090    2                SYSLOG_TRMID.TTYP = %TERMINAL_ID_LEV_CHAN#;
      262    23091    2                SYSLOG_TRMID.TERM.CHANNEL = CHN / 128 * 128;
      263    23092                     %WRSYSLOG ( ERRCOD = INVCHN,
      264    23093                     TRMID = SYSLOG_TRMID,
      265    23094                     VAL0 = CHN );
      266    23112    2                GOTO INTRTR;
      267    23113    2             END;
      268    23114    1       CHN$ = PINCRW ( KH_CHNLOW$, SIZEW(KH$CHN) * ( CHN  / 128 ));
      269    23115        /*
      270    23116                                             Increment the interrupt count for
      271    23117                                             this channel.
      272    23118        */
      273    23119    1       KH$CHN.INTCNT = KH$CHN.INTCNT + 1;
      274    23120
      275    23121        /* Eh?             $$TRACE  */
      276    23122        /*
      277    23123                                             If the context pointer in the
      278    23124                                             channel table is null, then we
      279    23125                                             are not expecting an interrupt
      280    23126                                             on this channel.
      281    23127        */
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:12   
      282    23128    1       CTX$ = KH$CHN.CTX$;
      283    23129    1       FPT_X25.RCV$ = CTX$;
      284    23130    1       IF CTX$ = ADDR(NIL)
      285    23131    1          THEN
      286    23132    2             DO;
      287    23133        /*
      288    23134                                             If this is an output interrupt,
      289    23135                                             it might be either reporting
      290    23136                                             finding or losing data signals.
      291    23137                                             If it is, it is not an error.
      292    23138        */
      293    23139    2                IF MOD (( CHN / 64 ), 2 ) = 1
      294    23140    2                   THEN
      295    23141    3                      DO;
      296    23142    3                         INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;
      297    23143    3                         IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC
      298    23144    3                            THEN
      299    23145    3                               CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );
      300    23146    4                            ELSE DO;
      301    23147    4                                  CALL KHI$IO_INP ( KH$CHN, INPSLCSTT );
      302    23148    4                                  INPLCTBYT.LCTBYT = INPSLCSTT.SLCSTT;
      303    23149    4                               END;
      304    23150    4                         DO CASE ( INPLCTBYT.LCTBYT.DAT );
      305    23151    4                            CASE ( %KX#M_TRNST_OFF );
      306    23152        /*
      307    23153                                             The data signals have been
      308    23154                                             found.  If a connection is Ok
      309    23155                                             (from TSTCNC), report a connect
      310    23156                                             and ask for the line profile.
      311    23157        */
      312    23158    4                               CALL KHA$TSTCNC ( CHN$ )
      313    23159    4                                  WHENRETURN
      314    23160    5                                     DO;
      315    23161    5                                        CALL KHA$DVCADM ( %KHA_FNC_CONNECT,
      316    23162    5                                           ERROR,
      317    23163    5                                           KH$CHN.TERMID,
      318    23164    5                                           KH$CHN.TERMID, ,1 );
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:13   
      319    23165
      320    23166    5                                        KH$CHN.TERMID.TTYP = %KLTY_LINK#;
      321    23167    5                                        CALL KHA$DVCADM ( %KHA_FNC_RQSLINPRO,
      322    23168    5                                           ERROR,
      323    23169    5                                           KH$CHN.TERMID,
      324    23170    5                                           KH$CHN.TERMID);
      325    23171
      326    23172    5                                        GOTO INTRTR;
      327    23173    5                                     END;
      328    23174
      329    23175    4                            CASE ( %KX#M_TRNST_LOST_DSR,
      330    23176    4                                        %KX#M_TRNST_LOST_CTS );
      331    23177        /*
      332    23178                                             The line signals have been lost
      333    23179                                             before the line profile was
      334    23180                                             received.  Cancel the request
      335    23181                                             for the line profile, and get
      336    23182                                             the MLCP or MLC-16 going again.
      337    23183        */
      338    23184    4                               CALL KHA$TSTCNC ( CHN$ )
      339    23185    4                                  WHENALTRETURN
      340    23186    5                                     DO;
      341    23187    5                                        CALL KHA$DVCADM ( %KHA_FNC_CNCRQSLINPRO,
      342    23188    5                                           ERROR,
      343    23189    5                                           KH$CHN.TERMID,
      344    23190    5                                           KH$CHN.TERMID);
      345    23191    5                                        CALL KHA$DVCADM ( %KHA_FNC_DISCONNECT_EVT,
      346    23192    5                                           ERROR,
      347    23193    5                                           KH$CHN.TERMID,
      348    23194    5                                           KH$CHN.TERMID, ,1 );
      349    23195    5                                     END;
      350    23196    4                               IF KH$CHN.ATTR&%G_ATTR_CL_SLCC
      351    23197    4                                  THEN
      352    23198    4                                     GOTO INTRTR;  /* It will keep waiting fine. */
      353    23199
      354    23200    4                               CALL KXN$CMND ( %KX_N_START_TRN#, KH$CHN );
      355    23201
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:14   
      356    23202    4                               GOTO INTRTR;
      357    23203    4                         END;  /*  Case on transmit state  */
      358    23204    3                      END;
      359    23205    2                SYSLOG_TRMID = '0'B;
      360    23206    2                SYSLOG_TRMID.TTYP = %TERMINAL_ID_LEV_CHAN#;
      361    23207    2                SYSLOG_TRMID.TERM.CHANNEL = CHN / 128 * 128;
      362    23208                     %WRSYSLOG ( ERRCOD = NO_CTX,
      363    23209                     TRMID = SYSLOG_TRMID,
      364    23210                     VAL0 = CHN );
      365    23228    2                GOTO INTRTR;
      366    23229    2             END;
      367    23230        /*
      368    23231                                             Call the right routine to process
      369    23232                                             the input or output interrupt.
      370    23233        */
      371    23234    1       CALL KHC$XEQ2 ( Y@SVDEXCTIM );
      372    23235    1       IF MOD (( CHN / 64 ), 2 ) = 1
      373    23236    1          THEN
      374    23237    1             CALL Y$OUTPUT_COMPLETE;
      375    23238    1          ELSE
      376    23239    1             CALL Y$INPUT_COMPLETE;
      377    23240    1       KX$L2.IDL_CLK = KX$L2.IDL_PRD;
      378    23241        /*
      379    23242                                             Done with processing, or ready to
      380    23243                                             rejoin the main code if any error
      381    23244                                             was detected.
      382    23245        */
      383    23246    1   INTRTR: ;
      384    23247        /*
      385    23248                                             All done, so return from the
      386    23249                                             interrupt.
      387    23250        */
      388    23251    1       IF KNH$QHDR.RCQ.IPTR~=KNH$QHDR.RCQ.RPTR
      389    23252    1          THEN
      390    23253    2             DO;
      391    23254    2                CALL X6A_INTRET ( INTRET_WAKEUP );
      392    23255    2             END;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:15   
      393    23256    1          ELSE
      394    23257    1             IF KNH$QHDR.SCQ.IPTR~=KNH$QHDR.SCQ.RPTR
      395    23258    1                THEN CALL X6A_INTRET ( FPT_INTRET );
      396    23259    1                ELSE CALL X6A_INTRET;
      397    23260        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:16   
      398    23261        /*I* NAME: Y$INPUT_COMPLETE                                                   */
      399    23262        /*I* PURPOSE: This subroutine handles the receive interrupts                  */
      400    23263        /*I* for the X.25 handler.                                                    */
      401    23264        /*I* CALL: CALL Y$INPUT_COMPLETE, ARGS;                   */
      402    23265        /*I* INPUT: CHN$  =  channel table entry pointer                                */
      403    23266        /*I*        CTX$  = context block pointer                      */
      404    23267        /*I* OUTPUT: none                                                             */
      405    23268
      406    23269    1   Y$INPUT_COMPLETE: PROC;
      407    23270
      408    23271        %KX$L2 ( STCLASS = "BASED(CTX$)" );
      409    23638        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      410    23658        %KH$IOLD ( FPTN = IOLD_INPCHN, STCLASS = STATIC, VLDCCB = YES,
      411    23659                  BYTX = "SIZEC(KX$DATA)" );
      412    23710        %KH$IO ( FPTN = INPCCBSTT, STCLASS = STATIC, FNC = %GH#IO_INPCCBSTT );
      413    23824        %KH$IO ( FPTN=INPRCVCCB, STCLASS=REDEF INPCCBSTT, FNC=%GH#IO_INPCCBSTTPTR);
      414    23938        %KH$IO ( FPTN=OTPCCBPTR, STCLASS=STATIC, FNC=%GH#IO_OTPCCBPTR);
      415    24052    2   DCL TEMP$ PTR;
      416    24053        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT );
      417    24167        %KH$IO ( FPTN = INPNXTCCBSTT, STCLASS = STATIC, FNC = %GH#IO_INPNXTCCBSTT );
      418    24281        %KH$IO ( FPTN = INPRNG, STCLASS = STATIC, FNC = %GH#IO_INPRNG );
      419    24395        %KH$IO ( FPTN = OTPCHNCTR_INP, STCLASS = STATIC, FNC = %GH#IO_OTPCHNCTR,
      420    24396                  STRIO = YES );
      421    24510        %KH$IO ( FPTN = OTPCHNCTR_OTP, STCLASS = STATIC, FNC = %GH#IO_OTPCHNCTR,
      422    24511                  STRIO = YES, OTPCHN = YES );
      423    24625    2   DCL BIT_CCBSTT BIT(16) ALIGNED AUTO;
      424    24626    2   DCL BIN_CCBPTR REDEF BIT_CCBSTT UBIN;
      425    24627
      426    24628    2       KX_STATS_HDLC.IN_TCB_COUNT = KX_STATS_HDLC.IN_TCB_COUNT + 1;
      427    24629        /*
      428    24630                                             Get the input CCB status
      429    24631        */
      430    24632    2       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC
      431    24633    2          THEN
      432    24634    3             DO;
      433    24635    3                CCB$ = KV_B_POOL$(1);
      434    24636    3                DAT$ = CCB$;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:17   
      435    24637    3                INPRCVCCB.FNC = %GH#IO_INPCCBSTTPTR;
      436    24638    4                DO WHILE KX$L2S.XMTCCB.LOCK>=0;
      437    24639    4                   IF KX$L2S.XMTCCB.LOCK=0
      438    24640    4                      THEN
      439    24641    4                         KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;
      440    24642    4                END;
      441    24643    3                CALL KHI$IO_INP (KH$CHN, INPRCVCCB);
      442    24644    3                KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;
      443    24645    3             END;
      444    24646    3          ELSE DO;
      445    24647    3                INPCCBSTT.FNC = %GH#IO_INPCCBSTT;
      446    24648    3                CALL KHI$IO_INP ( KH$CHN, INPCCBSTT );
      447    24649    3             END;
      448    24650    2       BIT_CCBSTT = INPCCBSTT.CCBSTT;
      449    24651    2       TRCX = KX$L2.TRCX;
      450    24652        /*
      451    24653                                             Loop thru all the CCBs that have
      452    24654                                             been used.
      453    24655        */
      454    24656    2   LOP:
      455    24657    3       DO WHILE ( BIT_CCBSTT );
      456    24658
      457    24659        /*
      458    24660                                             Decrement the number of active
      459    24661                                             input CCBs for this channel.
      460    24662        */
      461    24663    3          KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT - 1;
      462    24664        /*
      463    24665                                          For the SLCC, things are a bit different.
      464    24666        */
      465    24667    3          IF KH$CHN.ATTR&%G_ATTR_CL_SLCC
      466    24668    3             THEN
      467    24669    4                DO;
      468    24670    4                   CCB.W = BIN_CCBPTR/2;
      469    24671    4                   DAT.W = KX$CCB.DATA_ADR/2-SIZEW(KX$DATA);
      470    24672    4                   TEMP$ = ADDR(KX$L1.IN_CCB_HEAD$);
      471    24673        /*                                Find this one in the chain, and remove */
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:18   
      472    24674    5                   DO WHILE TEMP$->KX$DATA.NEXT$~=DAT$;
      473    24675    5                      TEMP$ = TEMP$->KX$DATA.NEXT$;
      474    24676    5                   END;
      475    24677    4                   TEMP$->KX$DATA.NEXT$ = KX$DATA.NEXT$;
      476    24678    4                   IF KX$DATA.NEXT$ = ADDR(NIL)
      477    24679    4                      THEN
      478    24680    4                         KX$L1.IN_CCB_TAIL$ = TEMP$;
      479    24681    4                   KX$DATA.CNT = KX$CCB.RANGE-KX$CCB.R_RANGE;
      480    24682    4                   GOTO Y$DATA_IN;
      481    24683    4                END;
      482    24684        /*
      483    24685                                             Process this input buffer.  First
      484    24686                                             check the status to make sure no
      485    24687                                             errors occurred.
      486    24688        */
      487    24689    3          TEMP$ = KX$L1.IN_CCB_HEAD$;
      488    24690    3          KX$L1.IN_CCB_HEAD$ = TEMP$->KX$TDATA.NEXT$;
      489    24691    3          DAT$ = KX_RSV_INCCB$(KX$L1.BUF_SIZE);
      490    24692    3          KX_RSV_INCCB$(KX$L1.BUF_SIZE) = ADDR(NIL);
      491    24693        /*
      492    24694            Get INPRNG first and then IOLD the reserved in_CCB.
      493    24695        */
      494    24696    3          CALL KHI$IO_INP ( KH$CHN, INPRNG );
      495    24697        /*
      496    24698                                             Give the buffer back to the MLCP or MLC-16.
      497    24699        */
      498    24700    3          IF ( KX$L1.IN_CCB_HEAD$ = ADDR(NIL) )
      499    24701    3             THEN
      500    24702    4                DO;
      501    24703    4                   KX$L1.IN_CCB_HEAD$ = DAT$;
      502    24704    4                   KH$CHN.INPCCBCNT = 1;
      503    24705
      504    24706    4                END;
      505    24707    3             ELSE
      506    24708    4                DO;
      507    24709    4                   KX$L1.IN_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
      508    24710    4                   KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT + 1;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:19   
      509    24711
      510    24712    4                END /* IF */;
      511    24713
      512    24714    3          KX$L1.IN_CCB_TAIL$ = DAT$;
      513    24715    3          KX$DATA.NEXT$ = ADDR(NIL);
      514    24716        /*
      515    24717                                             Clear the address field of the
      516    24718                                             buffer because I don't trust
      517    24719                                             MLCP or MLC-16s.
      518    24720        */
      519    24721    3          KX$FRAME.ADR = 0;
      520    24722
      521    24723    3          IOLD_INPCHN.BFR_.ADR$ = DAT$;
      522    24724    3          IOLD_INPCHN.BFR_.BYTSIZ = KX_BUF.SIZ ( KX$DATA.BFRSIZ ) + 7;
      523    24725    3          CALL KHI$IOLD ( KH$CHN, IOLD_INPCHN );
      524    24726        /*
      525    24727                                             If the receiver is stopped and
      526    24728                                             the channel is not dead, kick it
      527    24729                                             to get it started again.
      528    24730        */
      529    24731    3          INPLCTBYT.LCTBYT.ADR = %KX#M_RCVST;
      530    24732    3          CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );
      531    24733
      532    24734    3          IF ( INPLCTBYT.LCTBYT.DAT = %KX#M_RCVST_NCCB )
      533    24735    3             THEN
      534    24736    4                DO;
      535    24737    4                   IF NOT KH$CHN.DED
      536    24738    4                      THEN
      537    24739    5                         DO;
      538    24740    5                            CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INP );
      539    24741    5                         END /* IF */;
      540    24742
      541    24743    4                END /* IF */;
      542    24744    3          DAT$ = TEMP$;
      543    24745        /*
      544    24746                                             Check for DATSRVERR, CCBSRVERR,
      545    24747                                             DATCHKERR, INVMMRERR, BUSPRTERR,
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:20   
      546    24748                                             UN_CRCMMRERR, or short/abort frame.
      547    24749        */
      548    24750    3          IF ( BIT_CCBSTT & '2E47'X )
      549    24751    3             THEN
      550    24752    4                DO;
      551    24753                        %WRSYSLOG ( ERRCOD = HRDERR,
      552    24754                        TRMID = KH$CHN.TERMID,
      553    24755                        VAL0 = CHN,
      554    24756                        VAL1 = BIT_CCBSTT );
      555    24774    4                   IF ( (BIT_CCBSTT&'0600'X) = '0400'X )
      556    24775    4                      THEN
      557    24776    5                         DO;
      558    24777        /* CCB status says a frame longer than the CCB is received. Tell L2 */
      559    24778    5                            KX$DATA.CNT = 4104;
      560    24779    5                            GOTO Y$DATA_IN;
      561    24780    5                         END;
      562    24781    4                   FPT_X25.PRM1$ = DAT$;
      563    24782    4                END;
      564    24783    3             ELSE
      565    24784    4                DO;
      566    24785        /*  Record input frame in trace buffer. */
      567    24786    4                   KX$L2.TRC(TRCX) = FRAME_TRACE(SIZEW(KX$DATA))+BITBIN('8000'X);
      568    24787    4                   KX$L2.TRC(TRCX+1) = FRAME_TRACE(SIZEW(KX$DATA)+1);
      569    24788    4                   KX$L2.TRC(TRCX+2) = FRAME_TRACE(SIZEW(KX$DATA)+2);
      570    24789    4                   KX$L2.TRC(TRCX+3) = FRAME_TRACE(SIZEW(KX$DATA)+3);
      571    24790    4                   TRCX = MOD ( TRCX + 4, 200 );
      572    24791    4                   KX$L2.TRCX = TRCX;
      573    24792        /*
      574    24793                                             Get the CCB range and calculate
      575    24794                                             the size of the received message.
      576    24795        */
      577    24796    4                   KX$DATA.CNT = KX_BUF.SIZ ( KX$DATA.BFRSIZ ) + 7
      578    24797    4                      - INPRNG.RNG;
      579    24798    4   Y$DATA_IN:      ;
      580    24799        /*
      581    24800                                             Always clear the FLNK$.
      582    24801        */
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:21   
      583    24802    4                   KX$DATA.NEXT$ = ADDR(NIL);
      584    24803
      585    24804    4                   KX_STATS_HDLC.FRAMES_IN = KX_STATS_HDLC.FRAMES_IN + 1;
      586    24805    4                   KX_STATS_HDLC.BYTES_IN = KX_STATS_HDLC.BYTES_IN + KX$DATA.CNT;
      587    24806        /*
      588    24807                                             Deliver the data to the Frame
      589    24808                                             level.
      590    24809        */
      591    24810    4                   FPT_X25.EVN = %KX_F_EV_DATA_IN#;
      592    24811    4                   FPT_X25.PRM1$ = DAT$;
      593    24812    4                   CALL KXF$FRAME ( FPT_X25 );
      594    24813    4                END /* IF */;
      595    24814        /*
      596    24815                                             If PRM1$ is now ADDR(NIL), it
      597    24816                                             means that the Frame level (or
      598    24817                                             some higher level) help on to
      599    24818                                             the buffer.  If so, get a new
      600    24819                                             buffer.
      601    24820        */
      602    24821    3          IF FPT_X25.PRM1$ = ADDR(NIL)
      603    24822    3             THEN
      604    24823    4                DO;
      605    24824    4                   CALL KXS$GETBFR ( KX_BUF.SIZ ( KX$L1.BUF_SIZE ), DAT$ );
      606    24825    4                END;
      607    24826    3          IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC
      608    24827    3             THEN
      609    24828    4                DO;
      610    24829    4                   KX_RSV_INCCB$(KX$L1.BUF_SIZE) = DAT$;
      611    24830    4                   CALL KHI$IO_INP ( KH$CHN, INPNXTCCBSTT );
      612    24831    4                   BIT_CCBSTT = INPNXTCCBSTT.CCBSTT;
      613    24832    4                END;
      614    24833    3             ELSE
      615    24834    4                DO;
      616    24835    4                   IF ( KX$L1.IN_CCB_HEAD$ = ADDR(NIL) )
      617    24836    4                      THEN
      618    24837    5                         DO;
      619    24838    5                            KX$L1.IN_CCB_HEAD$ = DAT$;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:22   
      620    24839    5                            KH$CHN.INPCCBCNT = 1;
      621    24840
      622    24841    5                         END;
      623    24842    4                      ELSE
      624    24843    5                         DO;
      625    24844    5                            KX$L1.IN_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
      626    24845    5                            KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT + 1;
      627    24846
      628    24847    5                         END /* IF */;
      629    24848
      630    24849    4                   KX$L1.IN_CCB_TAIL$ = DAT$;
      631    24850    4                   KX$DATA.NEXT$ = ADDR(NIL);
      632    24851    4                   KX$CCB.DATA_ADR = DAT.W*2+SIZEC(KX$DATA);
      633    24852    4                   BIN_CCBPTR = KX$CCB.LNK.SLCC;
      634    24853    4                   KX$CCB.LNK.SLCC = 0;
      635    24854    4                   OTPCCBPTR.CCBPTR = KX$CCB.CCB_TAIL;
      636    24855    5                   DO WHILE KX$L2S.XMTCCB.LOCK>=0;
      637    24856    5                      IF KX$L2S.XMTCCB.LOCK=0
      638    24857    5                         THEN
      639    24858    5                            KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;
      640    24859    5                   END;
      641    24860    4                   CALL KHI$IO_OTP (KH$CHN, OTPCCBPTR);
      642    24861    4                   KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;
      643    24862    4                END;
      644    24863
      645    24864    3       END LOP;  /*  Loop on CCBs  */
      646    24865        /*
      647    24866                                             Try to update the send queues.
      648    24867        */
      649    24868    2       IF KX$L2.FLG.OK AND NOT KX$L2.FLG.BLK AND KX$L2.FLG.DATAVL
      650    24869    2          THEN
      651    24870    3             DO;
      652    24871    3                FPT_X25.EVN = %KX_F_EV_GETDAT#;
      653    24872    3                CALL KXF$FRAME ( FPT_X25 );
      654    24873    3             END /* IF */;
      655    24874    2       CALL KHC$XEQ2 ( Y@CRTEXCTIM );
      656    24875    2       KX_STATS_HDLC.IN_TCB_TICS = KX_STATS_HDLC.IN_TCB_TICS + Y@CRTEXCTIM -
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:23   
             24875                Y@SVDEXCTIM;
      657    24876
      658    24877    2   END Y$INPUT_COMPLETE;
      659    24878        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:24   
      660    24879        /*I* NAME: Y$OUTPUT_COMPLETE                                                  */
      661    24880        /*I* PURPOSE: This subroutine handles the transmitter                         */
      662    24881        /*I* interrupts for the X.25 handler.                                         */
      663    24882        /*I* CALL: CALL Y$OUTPUT_COMPLETE, ARGS;                  */
      664    24883        /*I* INPUT: CHN$  =  channel table entry pointer                                */
      665    24884        /*I* OUTPUT: none                                                             */
      666    24885
      667    24886    1   Y$OUTPUT_COMPLETE: PROC;
      668    24887
      669    24888    2   DCL TEMP3$ PTR;
      670    24889
      671    24890    2       KX_STATS_HDLC.OUT_TCB_COUNT = KX_STATS_HDLC.OUT_TCB_COUNT + 1;
      672    24891        /* Get the transmit CCP state                                                 */
      673    24892
      674    24893    2       INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;
      675    24894    2       IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC
      676    24895    2          THEN
      677    24896    2             CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );
      678    24897    3          ELSE DO;
      679    24898    4                DO WHILE KX$L2S.XMTCCB.LOCK>=0;
      680    24899    4                   IF KX$L2S.XMTCCB.LOCK=0
      681    24900    4                      THEN
      682    24901    4                         KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;
      683    24902    4                END;
      684    24903    3                CALL KHI$IO_INP ( KH$CHN, INPSLCSTT );
      685    24904    3                KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;
      686    24905    3                IF INPSLCSTT.SLCSTT='0'B THEN RETURN; /* Nothing to do */
      687    24906    3                INPLCTBYT.LCTBYT.DAT = INPSLCSTT.SLCSTT.INT;
      688    24907    3                IF INPSLCSTT.SLCSTT.INT=0
      689    24908    3                   OR INPSLCSTT.SLCSTT.INT~=%KX#M_TRNST_OFF THEN EXIT;
      690    24909    3                CCB$ = KV_B_POOL$(1);
      691    24910    3                CCB.W = KX$L2S.XMTCCB.HEAD/2;
      692    24911    3                IF KX$CCB.LNK.SLCC ~= 65535
      693    24912    3                   AND KX$L1.OUT_CCB_HEAD$ ~= ADDR(NIL)
      694    24913    3                   THEN
      695    24914    3                      RETURN;
      696    24915    3             END;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:25   
      697    24916        /*
      698    24917                                             Save the transmit state.
      699    24918        */
      700    24919    2       KX$L1.TRNST = INPLCTBYT.LCTBYT.DAT;
      701    24920        /*
      702    24921                                             Do case on the transmit state.
      703    24922        */
      704    24923    3       DO CASE ( INPLCTBYT.LCTBYT.DAT );
      705    24924        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:26   
      706    24925
      707    24926        /* Waiting for data set ready  ( DSR )  or clear to send  ( CTS )
             24926          */
      708    24927
      709    24928    3          CASE ( %KX#M_TRNST_WAIT );
      710    24929
      711    24930        /* Do nothing,  it will restart when it finds both DSR and CTS                 */
      712    24931
      713    24932        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:27   
      714    24933
      715    24934        /* Transmitter is off                                                         */
      716    24935
      717    24936    3          CASE ( %KX#M_TRNST_OFF );
      718    24937
      719    24938        /* Clear the output CCB count                                                 */
      720    24939
      721    24940    3             KH$CHN.OTPCCBCNT = 0;
      722    24941
      723    24942        /* Release any buffers from this level                                        */
      724    24943
      725    24944    3             DAT$ = KX$L1.OUT_CCB_HEAD$;
      726    24945    4             DO WHILE ( DAT$ ~= ADDR(NIL) );
      727    24946
      728    24947        /*
      729    24948                                             Save the FLNK$.
      730    24949        */
      731    24950    4                TEMP3$ = KX$DATA.NEXT$;
      732    24951    4                KX$L1.OUT_CCB_HEAD$ = TEMP3$;
      733    24952    4                IF TEMP3$ = ADDR(NIL)
      734    24953    4                   THEN
      735    24954    4                      KX$L1.OUT_CCB_TAIL$ = TEMP3$;
      736    24955    5                IF KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN DO;
      737    24956    6                         DO WHILE KX$L2S.XMTCCB.LOCK>=0;
      738    24957    6                            IF KX$L2S.XMTCCB.LOCK=0
      739    24958    6                               THEN
      740    24959    6                                  KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;
      741    24960    6                         END;
      742    24961    5                         KX$L2S.XMTCCB.HEAD = KX$CCB.LNK.FEP;
      743    24962    5                         KX$DATA.RLS.L2 = '1'B;
      744    24963    5                         KX$CCB.LNK$ = KX$L2S.CCBHD$;
      745    24964    5                         KX$L2S.CCBHD$ = CCB$;
      746    24965    5                         CCB.W = KX$L2S.XMTCCB.HEAD/2;
      747    24966    5                         IF KX$CCB.LNK.SLCC ~= 65535 THEN TEMP3$ = ADDR(NIL);
      748    24967    5                         KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;
      749    24968    5                         KX$L2S.I_CNT = KX$L2S.I_CNT-1;
      750    24969    5                         IF KX$L2S.I_CNT < KX$L2S.K
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:28   
      751    24970    5                            THEN
      752    24971    5                               KX$L2S.FLG.BLK = '0'B;
      753    24972    5                      END;
      754    24973
      755    24974    4                KX_STATS_HDLC.FRAMES_OUT = KX_STATS_HDLC.FRAMES_OUT + 1;
      756    24975    4                KX_STATS_HDLC.BYTES_OUT = KX_STATS_HDLC.BYTES_OUT + KX$DATA.CNT;
      757    24976
      758    24977        /* See if we should release this one                                          */
      759    24978
      760    24979    4                KX$DATA.RLS.L1 = '1'B;
      761    24980    4                IF ( KX$DATA.RLS_STAT = %KX_BFR_RLS_OK# )
      762    24981    4                   THEN
      763    24982    5                      DO;
      764    24983
      765    24984        /* All the levels are done  -  release the buffer                               */
      766    24985
      767    24986    5                         CALL KXS$RLSBFR ( DAT$ );
      768    24987    5                      END /* IF */;
      769    24988
      770    24989        /* Restore the next pointer                                                   */
      771    24990
      772    24991    4                DAT$ = TEMP3$;
      773    24992    4             END /* LOOP */;
      774    24993        /*
      775    24994                                             Try to supply more CCBs to the
      776    24995                                             MLCP or MLC-16.
      777    24996        */
      778    24997    3             CALL KXN$CMND ( %KX_N_UPDATE_TRN_CCB#, KH$CHN );
      779    24998        /*
      780    24999                                             Check to see if retransmission is
      781    25000                                             needed and no output CCBs are
      782    25001                                             active.
      783    25002        */
      784    25003        /* note that SLCC never sets the DCE_REJ bit so it is ok */
      785    25004    3             IF KX$L2.FLG.DCE_REJ AND ( KX$L2.STATE.CURRENT = 4 )
      786    25005    3                AND ( KH$CHN.OTPCCBCNT = 0 )
      787    25006    3                THEN
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:29   
      788    25007    4                   DO;
      789    25008    4                      FPT_X25.EVN = %KX_F_EV_CL_REJ#;
      790    25009    4                      CALL KXF$FRAME ( FPT_X25 );
      791    25010    4                   END /* IF */;
      792    25011        /*
      793    25012                                             Try to update the send queues.
      794    25013        */
      795    25014    3             IF KX$L2.FLG.OK AND NOT KX$L2.FLG.BLK AND KX$L2.FLG.DATAVL
      796    25015    3                THEN
      797    25016    4                   DO;
      798    25017    4                      FPT_X25.EVN = %KX_F_EV_GETDAT#;
      799    25018    4                      CALL KXF$FRAME ( FPT_X25 );
      800    25019    4                   END /* IF */;
      801    25020        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:30   
      802    25021
      803    25022        /* Lost CTS or DSR                                                            */
      804    25023
      805    25024    3          CASE ( %KX#M_TRNST_LOST_DSR, %KX#M_TRNST_LOST_CTS );
      806    25025    3             KX_LSTDSRCTS = KX_LSTDSRCTS + 1;
      807    25026        /*
      808    25027           Set the lost-line-signal clock and a flag in L2 context. If we get
      809    25028           the signal back before the clock expires, proceed as if it never
      810    25029           happened. KXH$LSTSGNCLK will handle the case when the signal
      811    25030           outage is longer than the clock period, and KXF will do a DIE.
      812    25031        */
      813    25032    3             IF KX$L2.FLG.LSTSGNCLK
      814    25033    3                THEN
      815    25034        /*
      816    25035           The lost-signal-clock is already on. Return.
      817    25036        */
      818    25037    3                   RETURN;
      819    25038    3             KH@CLK = KH_SETCLK;
      820    25039    3             KH@CLK.UID$ = CHN$;
      821    25040    3             KH@CLK.PRD = KX_LSTSGNCLKPRD;
      822    25041        /*
      823    25042           Set the L2 context flag here.
      824    25043        */
      825    25044    3             KX$L2.FLG.LSTSGNCLK = '1'B;
      826    25045    3             CALL KHC$CLOCK ( KH@CLK ) ALTRET (KHC_ALTRET);
      827    25046    3             RETURN;
      828    25047
      829    25048    3   KHC_ALTRET:
      830    25049
      831    25050    3             IF KH@CLK.RESULT = %KH#RES_NOCTB
      832    25051    3                THEN
      833    25052    4                   DO;
      834    25053        /*
      835    25054           No timer block can be assigned due to shortage of memory.
      836    25055           The only safe thing to do is to fake the clock expiration.
      837    25056        */
      838    25057    4                      KH@EXP = KH_EXP;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:31   
      839    25058    4                      KH@EXP.UID$ = CHN$;
      840    25059    4                      CALL KXH$LSTSGNCLK ( KH@EXP );
      841    25060    4                   END;
      842    25061    3                ELSE
      843    25062    4                   DO;
      844    25063        /*S* SCREECH_CODE: KXH-S$KX_NO_LINSGNCLK#
      845    25064             MESSAGE: Unable to set the lost-line-signal clock.
      846    25065        */
      847    25066    4                      CALL KHD$SCREECH ( Y_NO_LINSGNCLK );
      848    25067    4                   END;
      849    25068        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:32   
      850    25069
      851    25070        /* Transmitter underrun                                                       */
      852    25071
      853    25072    3          CASE ( %KX#M_TRNST_UNDRUN );
      854    25073        /*
      855    25074                                             Log the error
      856    25075        */
      857    25076                  %WRSYSLOG ( ERRCOD = TRNUND,
      858    25077                  TRMID = KH$CHN.TERMID );
      859    25095        /*
      860    25096                                             Restart the line.
      861    25097        */
      862    25098    3             CALL KXN$CMND ( %KX_N_START_TRN#, KH$CHN );
      863    25099        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:33   
      864    25100
      865    25101        /* A spurious interrupt that no one can figure out                            */
      866    25102
      867    25103    3          CASE ( %KX#M_TRNST_STFR, %KX#M_TRNST_TRN1 );
      868    25104        /*
      869    25105                                             Log the error.
      870    25106        */
      871    25107                  %WRSYSLOG ( ERRCOD = SPRINT,
      872    25108                  TRMID = KH$CHN.TERMID );
      873    25126        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:34   
      874    25127
      875    25128        /* Unknown state for the transmit CCP                                         */
      876    25129
      877    25130    3          CASE ( ELSE );
      878    25131        /*
      879    25132                                             Unknown state - screech.
      880    25133        */
      881    25134        /*S* SCREECH_CODE: KXH-S$KX_UNKTRNSTT#
      882    25135             MESSAGE: SLCC trap.  Context at KX_SLCC_SPM,.180.
      883    25136        */
      884    25137        /*
      885    25138           We used to screech here. But the code put in to recover from
      886    25139           lost interrupts unfortunately generates extraneous interrupts.
      887    25140           So we will just ignore the interrupt when the transmitter
      888    25141           state is bad.
      889    25142        */
      890    25143    3             IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN EXIT;
      891    25144    3             IF INPLCTBYT.LCTBYT.DAT=%KX#M_TRNST_INIT
      892    25145
      893    25146        /* INIT - SLCC uses it to declare the link up */
      894    25147
      895    25148    3                THEN FPT_X25.EVN = %KX_F_EV_START#;
      896    25149    4                ELSE DO CASE (KX$L2S.SLCCSTT);
      897    25150    4                      CASE (ELSE);
      898    25151
      899    25152        /* Lost connection somehow - index shows why */
      900    25153
      901    25154    4                         ERCOD = SLCC_ERRCOD (KX$L2S.SLCCSTT);
      902    25155                              %WRSYSLOG ( ERRCOD = ERCOD,
      903    25156                              TRMID = KH$CHN.TERMID );
      904    25174    4                         FPT_X25.EVN = %KX_F_EV_DIED#;
      905    25175    4                      CASE (0);
      906    25176        /*
      907    25177                  The SLCC trapped. Dump it and crash.
      908    25178        */
      909    25179    4                         KH$CHN.DWNLOD = '0'B;
      910    25180    4                         CALL KXN$CMND ( %KX_N_STOP#, KH$CHN );
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:35   
      911    25181    4                         CALL KHD$SCREECH ( Y_UNKTRNSTT );
      912    25182    4                   END;
      913    25183    3             CALL KXF$FRAME ( FPT_X25 );
      914    25184    3       END /* CASE */;
      915    25185
      916    25186    2       CALL KHC$XEQ2 ( Y@CRTEXCTIM );
      917    25187    2       KX_STATS_HDLC.OUT_TCB_TICS = KX_STATS_HDLC.OUT_TCB_TICS + Y@CRTEXCTIM -
             25187                Y@SVDEXCTIM;
      918    25188
      919    25189    2   END Y$OUTPUT_COMPLETE;
      920    25190
      921    25191    1   END KXH$INTHND;
      922    25192        %EOD;

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:36   
--  Include file information  --

   K_ADDRESS_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KX_LCT_E.:E05TOU  is referenced.
   KW_SLCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:37   
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXH$INTHND.

   Procedure KXH$INTHND requires 1892 words for executable code.
   Procedure KXH$INTHND requires 60 words of local(AUTO) storage.

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:38   

 Object Unit name= KXH$INTHND                                 File name= KXH$INTHND.:E05TOU
 UTS= JUL 30 '97 02:20:35.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     42     2A  KXH$INTHND
    1   Data  even  none    62     3E  KXH$INTHND
    2   Proc  even  none  1892    764  KXH$INTHND
    3  RoData even  none    10      A  KXH$INTHND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     Async       0  KXH$INTHND

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0     23  KX_LSTSGNCLKPRD
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:39   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KXH$LSTSGNCLK
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       1 KHA$TSTCNC
         yes           Std       2 KHI$IO_INP
 yes     yes           Std       6 KHA$DVCADM
         yes           Std       2 KHI$IO_INPLCTBYT
         yes           Std       3 KXN$CMND
 yes     yes           Std       1 KHC$XEQ2
         yes           Std       1 X6A_INTRET
 yes     yes           Std       1 KXF$FRAME
         yes           Std       2 KHI$IOLD
         yes           Std       2 KHI$IO_OTP
 yes     yes           Std       3 KXS$GETBFR
         yes           Std       1 KXS$RLSBFR
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AAUTO
                       nStd      0 X6A_AARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$HAND_Q$                        r    KH_CHNLOW$                       r    KH_CHNHI
r    KH_CHNLOW                             G$UHJIT$                              G$JIT$
     KV_B_POOL$                            KX_BUF                                KX_RSV_INCCB$
     KX_STATS_HDLC                         KX_PM$                           r    G$ROS$
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:40   


        1        1        /*M* KXH$INTHND  -  X.25 Handler MLCP and MLC-16 Interrupt Handlers
                 1               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X*  PLM=4,IND=3,CTI=3,DCI=6,IAD=0,DTI=6,AND=Y,CSI=3,THI=3,STI=3,DMC=Y */
        9        9        /*P* NAME: KXH$INTHND                                                         */
       10       10        /*P* PURPOSE: This module contains the X.25 MLCP and MLC-16
                10             */
       11       11        /*P* interrupt handlers.                                                      */
       12       12
       13       13        /*F* NAME: KXH$INTHND                                                         */
       14       14        /*F* PURPOSE: This routine handles the MLCP and MLC-16
                14             */
       15       15        /*F* interrupts.                                                     */
       16       16
       17       17        /*D* NAME: KXH$INTHND                                                         */
       18       18        /*D* PURPOSE: This routine handles the MLCP and MLC-16
                18             */
       19       19        /*D* interrupts.                                                     */
       20       20        /*D* INPUT: G$UHJIT.ISA_USR.DEV  =  interrupting MLCP or MLC-16 address
                20           */
       21       21        /*D* OUTPUT: None                                                             */
       22       22        /*D* DESCRIPTION: Most of this interrupt handler executes as                  */
       23       23        /*D* subroutine so it has a                                */
       24       24        /*D* access to a standard environment.                                        */
       25       25
       26       26        KXH$INTHND: PROC ASYNC;

     26   2 000000  D380 0000 0000  xent KXH$INTHND      LNJ,B5   X6A_AAUTO
          2 000003       003C 0000                       DC       60,0

       27       27
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:41   
       28       28        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:42   
       29       29        /*****************************************************************
       30       30        *                                                                *
       31       31        *                           Include files                        *
       32       32        *                                                                *
       33       33        *****************************************************************/
       34       34
       35       35        %INCLUDE K_ID_E;
       36       85        %K#ENTID_E;
       37      104        %K#LYRID_E;
       38      111        %INCLUDE KL_MACRO_C;
       39     3463        %INCLUDE KL_AFCN_C;
       40     3564        %INCLUDE LCP_6;
       41     7843        %INCLUDE CP_6_SUBS;
       42     8383        %INCLUDE GH_HARDWARE_M;
       43     8481        %INCLUDE GH_IOFNC_E;
       44     8550        %INCLUDE G_HJIT_M;
       45     8695        %INCLUDE G_JIT_M;
       46     8960        %INCLUDE KH$CHN;
       47     9082        %INCLUDE KH$IO;
       48     9329        %INCLUDE KH_CHN;
       49     9369        %INCLUDE KHA_FNC_E;
       50     9469        %INCLUDE KL_SUPER_C;
       51    12371        %INCLUDE KNH_MACRO_C;
       52    12654        %INCLUDE KV$GLB;
       53    13073        %INCLUDE KV_GLBCNS_E;
       54    13414        %KV#CQ_HNDID_E;
       55    13419        %INCLUDE KX_EQUS_E;
       56    13858        %INCLUDE KX_PERR_C;
       57    13987        %INCLUDE KX_SCODE_C;
       58    14053        %INCLUDE KX_DATA_C;
       59    14121        %INCLUDE KX_MACROS_M;
       60    14892        %INCLUDE KW_LCT_E;
       61    15247        %INCLUDE KW_SLCT_E;
       62    15423        %INCLUDE KX_LCT_E;
       63    15544        %INCLUDE KH$CLK;
       64    15914        %INCLUDE KH_CLKFNC_E;
       65    15959        %INCLUDE K_ADDRESS_M;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:43   
       66    16462        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:44   
       67    16463        /*****************************************************************
       68    16464        *                                                                *
       69    16465        *                           External References                  *
       70    16466        *                                                                *
       71    16467        *****************************************************************/
       72    16468
       73    16469    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
       74    16470    1   DCL KHA$TSTCNC ENTRY (1) ALTRET;
       75    16471    1   DCL KHI$IOLD ENTRY (2);
       76    16472    1   DCL KHI$IO_INP ENTRY (2);
       77    16473    1   DCL KHI$IO_INPLCTBYT ENTRY (2);
       78    16474    1   DCL KHI$IO_OTP ENTRY (2);
       79    16475    1   DCL KXF$FRAME ENTRY (1) ALTRET;
       80    16476    1   DCL KXN$CMND ENTRY (3);
       81    16477    1   DCL KXS$GETBFR ENTRY (3) ALTRET;
       82    16478    1   DCL KXS$RLSBFR ENTRY (1);
       83    16479    1   DCL KXS$Q_SYSLOG ENTRY (1);
       84    16480    1   DCL KXS$SYSLOG ENTRY (7);
       85    16481    1   DCL KXX$X29 ENTRY (1);
       86    16482    1   DCL KXH$LSTSGNCLK ENTRY (1);
       87    16483    1   DCL KHC$CLOCK ENTRY (1) ALTRET;
       88    16484    1   DCL X6A_INTRET ENTRY (1);
       89    16485    1   DCL KHD$SCREECH ENTRY (1);
       90    16486    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       91    16487    1   DCL KHC$XEQ2 ENTRY(1) ALTRET;
       92    16488        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:45   
       93    16489        /*****************************************************************
       94    16490        *                                                                *
       95    16491        *                           Auto                                 *
       96    16492        *                                                                *
       97    16493        *****************************************************************/
       98    16494
       99    16495    1   DCL ERROR UBIN(32);
      100    16496    1   DCL CHN UBIN;
      101    16497    1   DCL CHN$ PTR;
      102    16498    1   DCL LEVEL UBIN;
      103    16499    1   DCL CTX$ PTR;
      104    16500    1   DCL DAT$ PTR;
      105    16501    1   DCL 1 DAT REDEF DAT$,
      106    16502    1         2 * UBIN, 2 W UBIN;
      107    16503    1   DCL CCB$ PTR;
      108    16504    1   DCL 1 CCB REDEF CCB$,
      109    16505    1         2 * UBIN, 2 W UBIN;
      110    16506        %VLP_ERRCODE (STCLASS=AUTO, FPTN=ERCOD);
      111    16552        %KH$CLK ( FPTN = KH@CLK, STCLASS = AUTO );
      112    16701        %KH$EXP ( FPTN = KH@EXP, STCLASS = AUTO );
      113    16764    1   DCL PRM_DUMMY UBIN;
      114    16765    1   DCL Y@SVDEXCTIM UBIN(32);
      115    16766    1   DCL Y@CRTEXCTIM UBIN(32);
      116    16767    1   DCL TRCX UBIN;
      117    16768        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:46   
      118    16769        /*****************************************************************
      119    16770        *                                                                *
      120    16771        *                           Based                                *
      121    16772        *                                                                *
      122    16773        *****************************************************************/
      123    16774
      124    16775        %KH$CHN ( STCLASS = "BASED(CHN$)" );
      125    16899        %G$UHJIT ( STCLASS = "BASED(G$UHJIT$)" );
      126    19873        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
      127    20287        %KNH$QHDR (STCLASS="BASED(G$HAND_Q$)");
      128    20300        %KX$L1 ( STCLASS = "BASED(CTX$)" );
      129    20340        %KX$L2 ( STCLASS = "BASED(CTX$)" );
      130    20707        %KX$L2 ( FPTN = KX$L2S, STCLASS = "BASED(CTX$)", SLCC = YES );
      131    21104        %KX$CCB ( STCLASS = "BASED(CCB$)" );
      132    21135        %KX$DATA ( STCLASS = "BASED(DAT$)" );
      133    21155        %KX$FRAME ( STCLASS = "BASED(DAT$)" );
      134    21187    1   DCL ABORT_FRAME(0:2000) UBIN(8) CALIGNED BASED(DAT$);
      135    21188    1   DCL FRAME_TRACE(0:20) UBIN(16) ALIGNED BASED(DAT$);
      136    21189        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:47   
      137    21190        /*****************************************************************
      138    21191        *                                                                *
      139    21192        *                           Constant                             *
      140    21193        *                                                                *
      141    21194        *****************************************************************/
      142    21195
      143    21196        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      144    21197                           FPTN = INVCHN,
      145    21198                           ERR# = %E_KXH_INVCHN# );
      146    21244        /*E*   ERROR:      KXH-E_KXH_INVCHN#-1
      147    21245               MESSAGE:    Interrupt received for an unowned channel.
      148    21246        */
      149    21247        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      150    21248                           FPTN = NO_CTX,
      151    21249                           ERR# = %E_KXH_NO_CTX# );
      152    21295        /*E*   ERROR:      KXH-E_KXH_NO_CTX#-1
      153    21296               MESSAGE:    Ignored interrupt on channel without link context.
      154    21297        */
      155    21298        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      156    21299                           FPTN = HRDERR,
      157    21300                           ERR# = %E_KXH_HRDERR# );
      158    21346        /*E*   ERROR:      KXH-E_KXH_HRDERR#-1
      159    21347               MESSAGE:    MLCP/MLC-16 detected line error on input buffer.
      160    21348                           VAL(1) is the CCB status information.
      161    21349                           Bit      Meaning when bit is set
      162    21350                           ----     -----------------------
      163    21351                           8000     Interrupt main memory program from CCP
      164    21352                           4000     Interrupt main memory program from CCB
      165    21353                           2000     Data service error
      166    21354                           1000     CCB status complete
      167    21355                           0800     CCB service error
      168    21356                           0600     CCP reported error, as follows:
      169    21357                                    0000 - ok
      170    21358                                    0200 - Aborted frame
      171    21359                                    0400 - Frame longer than CCB
      172    21360                                    0600 - Resync happened during receive
      173    21361                           0100     Reserved
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:48   
      174    21362                           0080     Reserved
      175    21363                           0040     Data check error
      176    21364                           0020     Receive nonzero residual range|transmit last block
      177    21365                           0010     Data set or communication-pac status change
      178    21366                           0008     Corrected memory error
      179    21367                           0004     Invalid memory address
      180    21368                           0002     Megabus parity error
      181    21369                           0001     Uncorrected memory error
      182    21370        */
      183    21371        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_GOOD_HARD#,
      184    21372                           FPTN = SPRINT,
      185    21373                           ERR# = %E_KXH_SPRINT# );
      186    21419        /*E*   ERROR:      KXH-E_KXH_SPRINT#-1
      187    21420               MESSAGE:    Spurious interrupt received for an output channel.
      188    21421        */
      189    21422        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_BAD_HARD#,
      190    21423                           FPTN = TRNUND,
      191    21424                           ERR# = %E_KXH_TRNUND# );
      192    21470        /*E*   ERROR:      KXH-E_KXH_TRNUND#-2
      193    21471               MESSAGE:    MLCP/MLC-16 experienced an underrun condition.
      194    21472        */
      195    21473    1   DCL 1 SLCC_ERRCODS CONSTANT,
      196    21474        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, LAST=NO, FPTN=S0);
      197    21520        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, LAST=NO, FCG=KX, MID=S, FPTN=S1,
      198    21521                      ERR#=%E_KXF_DISC_L#, SEV=%G_WRSYSLOG_SEV_FATAL_PROT#);
      199    21567        /*E* ERROR:   KXS-E_KXF_DISC_L#-4
      200    21568             MESSAGE: RESET Retries Exhausted - Line Disconnected.
      201    21569        */
      202    21570        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, LAST=NO, FCG=KX, MID=S, FPTN=S2,
      203    21571                      ERR#=%E_KXF_DISC_LU#, SEV=%G_WRSYSLOG_SEV_FATAL_PROT#);
      204    21617        /*E* ERROR:   KXS-E_KXF_DISC_LU#-4
      205    21618             MESSAGE: DISC Frame While Active - Line Disconnected.
      206    21619        */
      207    21620        %VLP_ERRCODE (STCLASS=CONSTANT, LVL=2, FCG=KX, MID=S, FPTN=S3,
      208    21621                      ERR#=%E_KXH_LSTDSRCTS#, SEV=%G_WRSYSLOG_SEV_BAD_HARD#);
      209    21667        /*E*   ERROR:      KXS-E_KXH_LSTDSRCTS#-2
      210    21668               MESSAGE:    Physical disconnect of active line
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:49   
      211    21669        */
      212    21670    1   DCL SLCC_ERRCOD(0:3) REDEF SLCC_ERRCODS BIT(32);
      213    21671
      214    21672    1   DCL G$HAND_Q$ PTR SYMREF;
      215    21673
      216    21674        %KH$CLK ( FPTN = KH_SETCLK, STCLASS = CONSTANT, SBR = KXH$LSTSGNCLK,
      217    21675          PRDUNT = KH#C_TMIL, FNC = %KH#CLK_SETCLK, NO_CTB = YES, PERM = NO );
      218    21824        %KH$EXP ( FPTN = KH_EXP, STCLASS = CONSTANT );
      219    21887        /*
      220    21888           the period of the lost-line-signal clock is set to 0.2 sec.
      221    21889        */
      222    21890    1   DCL KX_LSTSGNCLKPRD UBIN CONSTANT SYMDEF INIT(200);
      223    21891        %VLP_SCODE (FPTN=Y_NO_LINSGNCLK,STCLASS=CONSTANT,FCG=KX,MID=H,ERR#=
             21891            %S$KX_NO_LINSGNCLK#);
      224    21952        %VLP_SCODE (FPTN=Y_UNKTRNSTT,STCLASS=CONSTANT,FCG=KX,MID=H,ERR#=%S$KX_UNKTRNSTT#);
      225    22013        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:50   
      226    22014        /*****************************************************************
      227    22015        *                                                                *
      228    22016        *                           Static                               *
      229    22017        *                                                                *
      230    22018        *****************************************************************/
      231    22019
      232    22020        %KH_CHNDAT;
      233    22038    1   DCL G$UHJIT$ PTR SYMREF;
      234    22039    1   DCL G$JIT$ PTR SYMREF;
      235    22040        %B$TERMINAL_ID ( FPTN = SYSLOG_TRMID, STCLASS = STATIC, LVL = 1 );
      236    22069        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT);
      237    22183        %KH$IO ( FPTN=INPSLCSTT, STCLASS=STATIC, FNC=%GH#IO_INPSLCSTT, OTPCHN=YES);
      238    22297        %FPT_X25 (STCLASS=STATIC);
      239    22341        %FPT_INTRET;
      240    22361        %FPT_INTRET ( FPTN=INTRET_WAKEUP, WAKEME=YES );
      241    22381    1   DCL KV_B_POOL$(0:0) PTR SYMREF;
      242    22382        %KX_DATA;
      243    23072    1   DCL KX_LSTDSRCTS UBIN STATIC INIT(0);
      244    23073        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:51   
      245    23074        /*****************************************************************
      246    23075        *                                                                *
      247    23076        *                           Procedure                            *
      248    23077        *                                                                *
      249    23078        *****************************************************************/
      250    23079
      251    23080
      252    23081        /*
      253    23082                                             Calculate the address of the
      254    23083                                             channel table for this device.
      255    23084        */
      256    23085    1       CHN = BITBIN ( G$UHJIT.ISA_USR.DEV );

  23085   2 000005  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          2 000008  E846 0081                            LDR,R6   129,B6
          2 00000A  EF47 0006                            STR,R6   CHN,AUTO

      257    23086    1       IF CHN > KH_CHNHI

  23086   2 00000C  E900 0000 0000  xsym                 CMR,R6   KH_CHNHI
          2 00000F  0381 0033                            BLE      s:23114,PREL

      258    23087    1          THEN
      259    23088    2             DO;

      260    23089    2                SYSLOG_TRMID = '0'B;

  23089   2 000011  DB80 0000 0000  01                   LAB,B5   SYSLOG_TRMID
          2 000014  5C10                                 LDV,R5   16
          2 000015  0021                                 ALR      ;
          2 000016       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 000018       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      261    23090    2                SYSLOG_TRMID.TTYP = %TERMINAL_ID_LEV_CHAN#;

  23090   2 00001A  6C01                                 LDV,R6   1
          2 00001B  437F                                 CSYNC    s:23090,SPREL
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:52   
          2 00001C  E780 0000 0000  01                   STH,R6   SYSLOG_TRMID

      262    23091    2                SYSLOG_TRMID.TERM.CHANNEL = CHN / 128 * 128;

  23091   2 00001F  C847 0006                            LDR,R4   CHN,AUTO
          2 000021  4047                                 SOR,R4   7
          2 000022  4007                                 SOL,R4   7
          2 000023  CF00 0000 0001  01                   STR,R4   SYSLOG_TRMID+1

      263    23092                     %WRSYSLOG ( ERRCOD = INVCHN,
      264    23093                     TRMID = SYSLOG_TRMID,
      265    23094                     VAL0 = CHN );

  23110   2 000026  EBC7 0006                            LAB,B6   CHN,AUTO
          2 000028  EFC7 0036                            STB,B6   BIT_CCBSTT+8,AUTO
          2 00002A  DB80 0000 0000                       LAB,B5   0
          2 00002D  DFC7 0034                            STB,B5   BIT_CCBSTT+6,AUTO
          2 00002F  CB80 0000 0000  01                   LAB,B4   SYSLOG_TRMID
          2 000032  CFC7 0032                            STB,B4   BIT_CCBSTT+4,AUTO
          2 000034  BB80 0000 0000  00                   LAB,B3   INVCHN
          2 000037  BFC7 0030                            STB,B3   BIT_CCBSTT+2,AUTO
          2 000039  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00003B  CBF0 0400                            LAB,B4   1024,IMO
          2 00003D  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 000040       0001                            DC       s:23112,PREL

      266    23112    2                GOTO INTRTR;

  23112   2 000041  0F81 016D                            B        s:23240,PREL

      267    23113    2             END;
      268    23114    1       CHN$ = PINCRW ( KH_CHNLOW$, SIZEW(KH$CHN) * ( CHN  / 128 ));

  23114   2 000043  6047                                 SOR,R6   7
          2 000044  F856                                 LDR,R7   R6
          2 000045  6C00                                 LDV,R6   0
          2 000046  7085                                 DOL,R7   5
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:53   
          2 000047  8400 0000 0000  xsym                 AID      KH_CHNLOW$
          2 00004A  8D47 0007                            SDI      CHN$,AUTO

      269    23115        /*
      270    23116                                             Increment the interrupt count for
      271    23117                                             this channel.
      272    23118        */
      273    23119    1       KH$CHN.INTCNT = KH$CHN.INTCNT + 1;

  23119   2 00004C  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 00004E  8AC5 000F                            INC      15,B5
          2 000050  8EC5 000E                            CAD      14,B5

      274    23120
      275    23121        /* Eh?             $$TRACE  */
      276    23122        /*
      277    23123                                             If the context pointer in the
      278    23124                                             channel table is null, then we
      279    23125                                             are not expecting an interrupt
      280    23126                                             on this channel.
      281    23127        */
      282    23128    1       CTX$ = KH$CHN.CTX$;

  23128   2 000052  CCC5 000C                            LDB,B4   12,B5
          2 000054  CFC7 000A                            STB,B4   CTX$,AUTO

      283    23129    1       FPT_X25.RCV$ = CTX$;

  23129   2 000056  CF80 0000 000F  01                   STB,B4   FPT_X25+3

      284    23130    1       IF CTX$ = ADDR(NIL)

  23130   2 000059  8DC7 000A                            CMN      CTX$,AUTO
          2 00005B  0981 012F                            BNE      s:23234,PREL

      285    23131    1          THEN
      286    23132    2             DO;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:54   

      287    23133        /*
      288    23134                                             If this is an output interrupt,
      289    23135                                             it might be either reporting
      290    23136                                             finding or losing data signals.
      291    23137                                             If it is, it is not an error.
      292    23138        */
      293    23139    2                IF MOD (( CHN / 64 ), 2 ) = 1

  23139   2 00005D  D847 0006                            LDR,R5   CHN,AUTO
          2 00005F  5046                                 SOR,R5   6
          2 000060  D570 0001                            AND,R5   1,IMO
          2 000062  5D01                                 CMV,R5   1
          2 000063  0981 00F5                            BNE      s:23205,PREL

      294    23140    2                   THEN
      295    23141    3                      DO;

      296    23142    3                         INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;

  23142   2 000065  5C38                                 LDV,R5   56
          2 000066  DA80 0000 0009  01                   SRM,R5,'00FF'X    INPLCTBYT+1
          2 000069       00FF

      297    23143    3                         IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC

  23143   2 00006A  C845 0005                            LDR,R4   5,B5
          2 00006C  C570 0200                            AND,R4   512,IMO
          2 00006E  4981 0012                            BNEZ,R4  s:23147,PREL

      298    23144    3                            THEN
      299    23145    3                               CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );

  23145   2 000070  BB80 0000 0008  01                   LAB,B3   INPLCTBYT
          2 000073  BFC7 0032                            STB,B3   BIT_CCBSTT+4,AUTO
          2 000075  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 000077  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:55   
          2 000079  CBF0 0200                            LAB,B4   512,IMO
          2 00007B  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 00007E       0001                            DC       s:23145+15,PREL
          2 00007F  0F81 0016                            B        s:23150,PREL

      300    23146    4                            ELSE DO;

      301    23147    4                                  CALL KHI$IO_INP ( KH$CHN, INPSLCSTT );

  23147   2 000081  BB80 0000 000A  01                   LAB,B3   INPSLCSTT
          2 000084  BFC7 0032                            STB,B3   BIT_CCBSTT+4,AUTO
          2 000086  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 000088  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00008A  CBF0 0200                            LAB,B4   512,IMO
          2 00008C  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 00008F       0001                            DC       s:23148,PREL

      302    23148    4                                  INPLCTBYT.LCTBYT = INPSLCSTT.SLCSTT;

  23148   2 000090  E800 0000 000B  01                   LDR,R6   INPSLCSTT+1
          2 000093  EF00 0000 0009  01                   STR,R6   INPLCTBYT+1

      303    23149    4                               END;

      304    23150    4                         DO CASE ( INPLCTBYT.LCTBYT.DAT );

  23150   2 000096  B280 0000 0009  01                   LLH,R3   INPLCTBYT+1
          2 000099  3EF4                                 ADV,R3   -12
          2 00009A  3D03                                 CMV,R3   3
          2 00009B  0281 00BD                            BGE      s:23205,PREL
          2 00009D  A830 0000 00A3  02                   LDR,R2   s:23150+13,R3
          2 0000A0  83A0 0000 00A6  02                   JMP      s:23158,R2
          2 0000A3       0000                            DC       s:23158,PREL
          2 0000A4       0050                            DC       s:23184,PREL
          2 0000A5       0050                            DC       s:23184,PREL

      305    23151    4                            CASE ( %KX#M_TRNST_OFF );
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:56   

      306    23152        /*
      307    23153                                             The data signals have been
      308    23154                                             found.  If a connection is Ok
      309    23155                                             (from TSTCNC), report a connect
      310    23156                                             and ask for the line profile.
      311    23157        */
      312    23158    4                               CALL KHA$TSTCNC ( CHN$ )

  23158   2 0000A6  EBC7 0007                            LAB,B6   CHN$,AUTO
          2 0000A8  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 0000AA  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0000AC  CBF0 0100                            LAB,B4   256,IMO
          2 0000AE  E380 0000 0000  xent                 LNJ,B6   KHA$TSTCNC
          2 0000B1       0043                            DC       s:23172+2,PREL

      313    23159    4                                  WHENRETURN
      314    23160    5                                     DO;

      315    23161    5                                        CALL KHA$DVCADM ( %KHA_FNC_CONNECT,

  23161   2 0000B2  EBF0 000E                            LAB,B6   14,IMO
          2 0000B4  DBF0 0001                            LAB,B5   1,IMO
          2 0000B6  DFC7 003A                            STB,B5   BIT_CCBSTT+12,AUTO
          2 0000B8  CB80 0000 0000                       LAB,B4   0
          2 0000BB  CFC7 0038                            STB,B4   BIT_CCBSTT+10,AUTO
          2 0000BD  BCC7 0007                            LDB,B3   CHN$,AUTO
          2 0000BF  ABC3 0012                            LAB,B2   18,B3
          2 0000C1  AFC7 0036                            STB,B2   BIT_CCBSTT+8,AUTO
          2 0000C3  9BC3 0012                            LAB,B1   18,B3
          2 0000C5  9FC7 0034                            STB,B1   BIT_CCBSTT+6,AUTO
          2 0000C7  DBC7 0004                            LAB,B5   ERROR,AUTO
          2 0000C9  DFC7 0032                            STB,B5   BIT_CCBSTT+4,AUTO
          2 0000CB  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 0000CD  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0000CF  CBF0 0600                            LAB,B4   1536,IMO
          2 0000D1  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:57   
          2 0000D4       0001                            DC       s:23166,PREL

      316    23162    5                                           ERROR,
      317    23163    5                                           KH$CHN.TERMID,
      318    23164    5                                           KH$CHN.TERMID, ,1 );
      319    23165
      320    23166    5                                        KH$CHN.TERMID.TTYP = %KLTY_LINK#;

  23166   2 0000D5  6C04                                 LDV,R6   4
          2 0000D6  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 0000D8  E7C6 0012                            STH,R6   18,B6

      321    23167    5                                        CALL KHA$DVCADM ( %KHA_FNC_RQSLINPRO,

  23167   2 0000DA  DBF0 0012                            LAB,B5   18,IMO
          2 0000DC  CBC6 0012                            LAB,B4   18,B6
          2 0000DE  CFC7 0036                            STB,B4   BIT_CCBSTT+8,AUTO
          2 0000E0  BBC6 0012                            LAB,B3   18,B6
          2 0000E2  BFC7 0034                            STB,B3   BIT_CCBSTT+6,AUTO
          2 0000E4  ABC7 0004                            LAB,B2   ERROR,AUTO
          2 0000E6  AFC7 0032                            STB,B2   BIT_CCBSTT+4,AUTO
          2 0000E8  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 0000EA  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0000EC  CBF0 0400                            LAB,B4   1024,IMO
          2 0000EE  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          2 0000F1       0001                            DC       s:23172,PREL

      322    23168    5                                           ERROR,
      323    23169    5                                           KH$CHN.TERMID,
      324    23170    5                                           KH$CHN.TERMID);
      325    23171
      326    23172    5                                        GOTO INTRTR;

  23172   2 0000F2  0F81 00BC                            B        s:23240,PREL
          2 0000F4  0F81 0064                            B        s:23205,PREL

      327    23173    5                                     END;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:58   
      328    23174
      329    23175    4                            CASE ( %KX#M_TRNST_LOST_DSR,

      330    23176    4                                        %KX#M_TRNST_LOST_CTS );
      331    23177        /*
      332    23178                                             The line signals have been lost
      333    23179                                             before the line profile was
      334    23180                                             received.  Cancel the request
      335    23181                                             for the line profile, and get
      336    23182                                             the MLCP or MLC-16 going again.
      337    23183        */
      338    23184    4                               CALL KHA$TSTCNC ( CHN$ )

  23184   2 0000F6  EBC7 0007                            LAB,B6   CHN$,AUTO
          2 0000F8  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 0000FA  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0000FC  CBF0 0100                            LAB,B4   256,IMO
          2 0000FE  E380 0000 0000  xent                 LNJ,B6   KHA$TSTCNC
          2 000101       0003                            DC       s:23187,PREL
          2 000102  0F81 003E                            B        s:23196,PREL

      339    23185    4                                  WHENALTRETURN
      340    23186    5                                     DO;

      341    23187    5                                        CALL KHA$DVCADM ( %KHA_FNC_CNCRQSLINPRO,

  23187   2 000104  EBF0 0016                            LAB,B6   22,IMO
          2 000106  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 000108  CBC5 0012                            LAB,B4   18,B5
          2 00010A  CFC7 0036                            STB,B4   BIT_CCBSTT+8,AUTO
          2 00010C  BBC5 0012                            LAB,B3   18,B5
          2 00010E  BFC7 0034                            STB,B3   BIT_CCBSTT+6,AUTO
          2 000110  ABC7 0004                            LAB,B2   ERROR,AUTO
          2 000112  AFC7 0032                            STB,B2   BIT_CCBSTT+4,AUTO
          2 000114  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 000116  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000118  CBF0 0400                            LAB,B4   1024,IMO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:59   
          2 00011A  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          2 00011D       0001                            DC       s:23191,PREL

      342    23188    5                                           ERROR,
      343    23189    5                                           KH$CHN.TERMID,
      344    23190    5                                           KH$CHN.TERMID);
      345    23191    5                                        CALL KHA$DVCADM ( %KHA_FNC_DISCONNECT_EVT,

  23191   2 00011E  EBF0 000C                            LAB,B6   12,IMO
          2 000120  DBF0 0001                            LAB,B5   1,IMO
          2 000122  DFC7 003A                            STB,B5   BIT_CCBSTT+12,AUTO
          2 000124  CB80 0000 0000                       LAB,B4   0
          2 000127  CFC7 0038                            STB,B4   BIT_CCBSTT+10,AUTO
          2 000129  BCC7 0007                            LDB,B3   CHN$,AUTO
          2 00012B  ABC3 0012                            LAB,B2   18,B3
          2 00012D  AFC7 0036                            STB,B2   BIT_CCBSTT+8,AUTO
          2 00012F  9BC3 0012                            LAB,B1   18,B3
          2 000131  9FC7 0034                            STB,B1   BIT_CCBSTT+6,AUTO
          2 000133  DBC7 0004                            LAB,B5   ERROR,AUTO
          2 000135  DFC7 0032                            STB,B5   BIT_CCBSTT+4,AUTO
          2 000137  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 000139  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00013B  CBF0 0600                            LAB,B4   1536,IMO
          2 00013D  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          2 000140       0001                            DC       s:23196,PREL

      346    23192    5                                           ERROR,
      347    23193    5                                           KH$CHN.TERMID,
      348    23194    5                                           KH$CHN.TERMID, ,1 );
      349    23195    5                                     END;

      350    23196    4                               IF KH$CHN.ATTR&%G_ATTR_CL_SLCC

  23196   2 000141  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 000143  E846 0005                            LDR,R6   5,B6
          2 000145  E570 0200                            AND,R6   512,IMO
          2 000147  6981 0067                            BNEZ,R6  s:23240,PREL
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:60   

      351    23197    4                                  THEN
      352    23198    4                                     GOTO INTRTR;  /* It will keep waiting fine. */
      353    23199
      354    23200    4                               CALL KXN$CMND ( %KX_N_START_TRN#, KH$CHN );

  23200   2 000149  DBF0 0004                            LAB,B5   4,IMO
          2 00014B  EFC7 0032                            STB,B6   BIT_CCBSTT+4,AUTO
          2 00014D  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 00014F  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000151  CBF0 0200                            LAB,B4   512,IMO
          2 000153  E380 0000 0000  xent                 LNJ,B6   KXN$CMND
          2 000156       0001                            DC       s:23202,PREL

      355    23201
      356    23202    4                               GOTO INTRTR;

  23202   2 000157  0F81 0057                            B        s:23240,PREL

      357    23203    4                         END;  /*  Case on transmit state  */

      358    23204    3                      END;
      359    23205    2                SYSLOG_TRMID = '0'B;

  23205   2 000159  EB80 0000 0000  01                   LAB,B6   SYSLOG_TRMID
          2 00015C  5C10                                 LDV,R5   16
          2 00015D  0021                                 ALR      ;
          2 00015E       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 000160       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

      360    23206    2                SYSLOG_TRMID.TTYP = %TERMINAL_ID_LEV_CHAN#;

  23206   2 000162  6C01                                 LDV,R6   1
          2 000163  437F                                 CSYNC    s:23206,SPREL
          2 000164  E780 0000 0000  01                   STH,R6   SYSLOG_TRMID

      361    23207    2                SYSLOG_TRMID.TERM.CHANNEL = CHN / 128 * 128;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:61   

  23207   2 000167  C847 0006                            LDR,R4   CHN,AUTO
          2 000169  4047                                 SOR,R4   7
          2 00016A  4007                                 SOL,R4   7
          2 00016B  CF00 0000 0001  01                   STR,R4   SYSLOG_TRMID+1

      362    23208                     %WRSYSLOG ( ERRCOD = NO_CTX,
      363    23209                     TRMID = SYSLOG_TRMID,
      364    23210                     VAL0 = CHN );

  23226   2 00016E  EBC7 0006                            LAB,B6   CHN,AUTO
          2 000170  EFC7 0036                            STB,B6   BIT_CCBSTT+8,AUTO
          2 000172  DB80 0000 0000                       LAB,B5   0
          2 000175  DFC7 0034                            STB,B5   BIT_CCBSTT+6,AUTO
          2 000177  CB80 0000 0000  01                   LAB,B4   SYSLOG_TRMID
          2 00017A  CFC7 0032                            STB,B4   BIT_CCBSTT+4,AUTO
          2 00017C  BB80 0000 0002  00                   LAB,B3   NO_CTX
          2 00017F  BFC7 0030                            STB,B3   BIT_CCBSTT+2,AUTO
          2 000181  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000183  CBF0 0400                            LAB,B4   1024,IMO
          2 000185  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 000188       0001                            DC       s:23228,PREL

      365    23228    2                GOTO INTRTR;

  23228   2 000189  0F81 0025                            B        s:23240,PREL

      366    23229    2             END;
      367    23230        /*
      368    23231                                             Call the right routine to process
      369    23232                                             the input or output interrupt.
      370    23233        */
      371    23234    1       CALL KHC$XEQ2 ( Y@SVDEXCTIM );

  23234   2 00018B  BBC7 0024                            LAB,B3   Y@SVDEXCTIM,AUTO
          2 00018D  BFC7 0030                            STB,B3   BIT_CCBSTT+2,AUTO
          2 00018F  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:62   
          2 000191  CBF0 0100                            LAB,B4   256,IMO
          2 000193  E380 0000 0000  xent                 LNJ,B6   KHC$XEQ2
          2 000196       0001                            DC       s:23235,PREL

      372    23235    1       IF MOD (( CHN / 64 ), 2 ) = 1

  23235   2 000197  E847 0006                            LDR,R6   CHN,AUTO
          2 000199  6046                                 SOR,R6   6
          2 00019A  E570 0001                            AND,R6   1,IMO
          2 00019C  6D01                                 CMV,R6   1
          2 00019D  0981 0006                            BNE      s:23239,PREL

      373    23236    1          THEN
      374    23237    1             CALL Y$OUTPUT_COMPLETE;

  23237   2 00019F  E3C0 0319                            LNJ,B6   s:0,PREL
          2 0001A1       0001                            DC       s:23237+3,PREL
          2 0001A2  0F81 0004                            B        s:23240,PREL

      375    23238    1          ELSE
      376    23239    1             CALL Y$INPUT_COMPLETE;

  23239   2 0001A4  E3C0 0036                            LNJ,B6   s:0,PREL
          2 0001A6       0001                            DC       s:23240,PREL

      377    23240    1       KX$L2.IDL_CLK = KX$L2.IDL_PRD;

  23240   2 0001A7  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0001A9  E846 0055                            LDR,R6   85,B6
          2 0001AB  E570 00FF                            AND,R6   255,IMO
          2 0001AD  E7C6 0056                            STH,R6   86,B6

  23240   2                              INTRTR          null
      378    23241        /*
      379    23242                                             Done with processing, or ready to
      380    23243                                             rejoin the main code if any error
      381    23244                                             was detected.
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:63   
      382    23245        */
      383    23246    1   INTRTR: ;
      384    23247        /*
      385    23248                                             All done, so return from the
      386    23249                                             interrupt.
      387    23250        */
      388    23251    1       IF KNH$QHDR.RCQ.IPTR~=KNH$QHDR.RCQ.RPTR

  23251   2 0001AF  EC80 0000 0000  xsym INTRTR          LDB,B6   G$HAND_Q$
          2 0001B2  E806                                 LDR,R6   ,B6
          2 0001B3  E946 0001                            CMR,R6   1,B6
          2 0001B5  0901 000C                            BE       s:23257,PREL

      389    23252    1          THEN
      390    23253    2             DO;

      391    23254    2                CALL X6A_INTRET ( INTRET_WAKEUP );

  23254   2 0001B7  BB80 0000 0000  03                   LAB,B3   0
          2 0001BA  CBF0 0100                            LAB,B4   256,IMO
          2 0001BC  E380 0000 0000  xent                 LNJ,B6   X6A_INTRET
          2 0001BF       0001                            DC       s:23255,PREL

      392    23255    2             END;

  23255   2 0001C0  0F81 0018                            B        s:23259+6,PREL

      393    23256    1          ELSE
      394    23257    1             IF KNH$QHDR.SCQ.IPTR~=KNH$QHDR.SCQ.RPTR

  23257   2 0001C2  D846 0004                            LDR,R5   4,B6
          2 0001C4  D946 0005                            CMR,R5   5,B6
          2 0001C6  0901 000C                            BE       s:23259,PREL

      395    23258    1                THEN CALL X6A_INTRET ( FPT_INTRET );

  23258   2 0001C8  BB80 0000 0002  03                   LAB,B3   +2
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:64   
          2 0001CB  CBF0 0100                            LAB,B4   256,IMO
          2 0001CD  E380 0000 0000  xent                 LNJ,B6   X6A_INTRET
          2 0001D0       0001                            DC       s:23258+9,PREL
          2 0001D1  0F81 0007                            B        s:23259+6,PREL

      396    23259    1                ELSE CALL X6A_INTRET;

  23259   2 0001D3  CBF0 0000                            LAB,B4   0,IMO
          2 0001D5  E380 0000 0000  xent                 LNJ,B6   X6A_INTRET
          2 0001D8       0001                            DC       s:23259+6,PREL
          2 0001D9  0F81 0587                            B        s:25191,PREL

      397    23260        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:65   
      398    23261        /*I* NAME: Y$INPUT_COMPLETE                                                   */
      399    23262        /*I* PURPOSE: This subroutine handles the receive interrupts                  */
      400    23263        /*I* for the X.25 handler.                                                    */
      401    23264        /*I* CALL: CALL Y$INPUT_COMPLETE, ARGS;                   */
      402    23265        /*I* INPUT: CHN$  =  channel table entry pointer                                */
      403    23266        /*I*        CTX$  = context block pointer                      */
      404    23267        /*I* OUTPUT: none                                                             */
      405    23268
      406    23269    1   Y$INPUT_COMPLETE: PROC;

  23269   2 0001DB  EFC7 002A            Y$INPUT_COMPLETESTB,B6   TRCX+2,AUTO

      407    23270
      408    23271        %KX$L2 ( STCLASS = "BASED(CTX$)" );
      409    23638        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      410    23658        %KH$IOLD ( FPTN = IOLD_INPCHN, STCLASS = STATIC, VLDCCB = YES,
      411    23659                  BYTX = "SIZEC(KX$DATA)" );
      412    23710        %KH$IO ( FPTN = INPCCBSTT, STCLASS = STATIC, FNC = %GH#IO_INPCCBSTT );
      413    23824        %KH$IO ( FPTN=INPRCVCCB, STCLASS=REDEF INPCCBSTT, FNC=%GH#IO_INPCCBSTTPTR);
      414    23938        %KH$IO ( FPTN=OTPCCBPTR, STCLASS=STATIC, FNC=%GH#IO_OTPCCBPTR);
      415    24052    2   DCL TEMP$ PTR;
      416    24053        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT );
      417    24167        %KH$IO ( FPTN = INPNXTCCBSTT, STCLASS = STATIC, FNC = %GH#IO_INPNXTCCBSTT );
      418    24281        %KH$IO ( FPTN = INPRNG, STCLASS = STATIC, FNC = %GH#IO_INPRNG );
      419    24395        %KH$IO ( FPTN = OTPCHNCTR_INP, STCLASS = STATIC, FNC = %GH#IO_OTPCHNCTR,
      420    24396                  STRIO = YES );
      421    24510        %KH$IO ( FPTN = OTPCHNCTR_OTP, STCLASS = STATIC, FNC = %GH#IO_OTPCHNCTR,
      422    24511                  STRIO = YES, OTPCHN = YES );
      423    24625    2   DCL BIT_CCBSTT BIT(16) ALIGNED AUTO;
      424    24626    2   DCL BIN_CCBPTR REDEF BIT_CCBSTT UBIN;
      425    24627
      426    24628    2       KX_STATS_HDLC.IN_TCB_COUNT = KX_STATS_HDLC.IN_TCB_COUNT + 1;

  24628   2 0001DD  8A80 0000 002F  xsym                 INC      KX_STATS_HDLC+47
          2 0001E0  8E80 0000 002E  xsym                 CAD      KX_STATS_HDLC+46

      427    24629        /*
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:66   
      428    24630                                             Get the input CCB status
      429    24631        */
      430    24632    2       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC

  24632   2 0001E3  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 0001E5  E845 0005                            LDR,R6   5,B5
          2 0001E7  E570 0200                            AND,R6   512,IMO
          2 0001E9  6901 0035                            BEZ,R6   s:24647,PREL

      431    24633    2          THEN
      432    24634    3             DO;

      433    24635    3                CCB$ = KV_B_POOL$(1);

  24635   2 0001EB  CC80 0000 0002  xsym                 LDB,B4   KV_B_POOL$+2
          2 0001EE  CFC7 000E                            STB,B4   CCB$,AUTO

      434    24636    3                DAT$ = CCB$;

  24636   2 0001F0  CFC7 000C                            STB,B4   DAT$,AUTO

      435    24637    3                INPRCVCCB.FNC = %GH#IO_INPCCBSTTPTR;

  24637   2 0001F2  6C06                                 LDV,R6   6
          2 0001F3  EA80 0000 0030  01                   SRM,R6,'003F'X    INPCCBSTT
          2 0001F6       003F

      436    24638    4                DO WHILE KX$L2S.XMTCCB.LOCK>=0;

  24638   2 0001F7  BCC7 000A                            LDB,B3   CTX$,AUTO
          2 0001F9  D843 0074                            LDR,R5   116,B3
          2 0001FB  5801 000C                            BLZ,R5   s:24643,PREL

      437    24639    4                   IF KX$L2S.XMTCCB.LOCK=0

  24639   2 0001FD  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0001FF  E846 0074                            LDR,R6   116,B6
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:67   
          2 000201  6981 0003                            BNEZ,R6  s:24642,PREL

      438    24640    4                      THEN
      439    24641    4                         KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;

  24641   2 000203  88C6 0074                            DEC      116,B6

      440    24642    4                END;

  24642   2 000205  E846 0074                            LDR,R6   116,B6
          2 000207  68F6                                 BGEZ,R6  s:24639,SPREL

      441    24643    3                CALL KHI$IO_INP (KH$CHN, INPRCVCCB);

  24643   2 000208  EB80 0000 0030  01                   LAB,B6   INPCCBSTT
          2 00020B  EFC7 0032                            STB,B6   BIT_CCBSTT+4,AUTO
          2 00020D  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 00020F  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 000211  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000213  CBF0 0200                            LAB,B4   512,IMO
          2 000215  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000218       0001                            DC       s:24644,PREL

      442    24644    3                KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;

  24644   2 000219  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00021B  8AC6 0074                            INC      116,B6

      443    24645    3             END;

  24645   2 00021D  0F81 0015                            B        s:24650,PREL

      444    24646    3          ELSE DO;

      445    24647    3                INPCCBSTT.FNC = %GH#IO_INPCCBSTT;

  24647   2 00021F  6C18                                 LDV,R6   24
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:68   
          2 000220  EA80 0000 0030  01                   SRM,R6,'003F'X    INPCCBSTT
          2 000223       003F

      446    24648    3                CALL KHI$IO_INP ( KH$CHN, INPCCBSTT );

  24648   2 000224  CB80 0000 0030  01                   LAB,B4   INPCCBSTT
          2 000227  CFC7 0032                            STB,B4   BIT_CCBSTT+4,AUTO
          2 000229  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 00022B  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00022D  CBF0 0200                            LAB,B4   512,IMO
          2 00022F  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000232       0001                            DC       s:24650,PREL

      447    24649    3             END;

      448    24650    2       BIT_CCBSTT = INPCCBSTT.CCBSTT;

  24650   2 000233  E800 0000 0031  01                   LDR,R6   INPCCBSTT+1
          2 000236  EF47 002E                            STR,R6   BIT_CCBSTT,AUTO

      449    24651    2       TRCX = KX$L2.TRCX;

  24651   2 000238  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00023A  D846 006F                            LDR,R5   111,B6
          2 00023C  DF47 0028                            STR,R5   TRCX,AUTO

      450    24652        /*
      451    24653                                             Loop thru all the CCBs that have
      452    24654                                             been used.
      453    24655        */
      454    24656    2   LOP:
      455    24657    3       DO WHILE ( BIT_CCBSTT );

  24657   2 00023E  6901 0243            LOP             BEZ,R6   s:24868,PREL

      456    24658
      457    24659        /*
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:69   
      458    24660                                             Decrement the number of active
      459    24661                                             input CCBs for this channel.
      460    24662        */
      461    24663    3          KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT - 1;

  24663   2 000240  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 000242  E846 0007                            LDR,R6   7,B6
          2 000244  EA70 0F00                            ADD,R6   3840,IMO
          2 000246  EAC6 0007                            SRM,R6,'0F00'X    7,B6
          2 000248       0F00

      462    24664        /*
      463    24665                                          For the SLCC, things are a bit different.
      464    24666        */
      465    24667    3          IF KH$CHN.ATTR&%G_ATTR_CL_SLCC

  24667   2 000249  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 00024B  E846 0005                            LDR,R6   5,B6
          2 00024D  E570 0200                            AND,R6   512,IMO
          2 00024F  6901 003D                            BEZ,R6   s:24689,PREL

      466    24668    3             THEN
      467    24669    4                DO;

      468    24670    4                   CCB.W = BIN_CCBPTR/2;

  24670   2 000251  E847 002E                            LDR,R6   BIT_CCBSTT,AUTO
          2 000253  6041                                 SOR,R6   1
          2 000254  EF47 000F                            STR,R6   CCB$+1,AUTO

      469    24671    4                   DAT.W = KX$CCB.DATA_ADR/2-SIZEW(KX$DATA);

  24671   2 000256  DCC7 000E                            LDB,B5   CCB$,AUTO
          2 000258  D845 0002                            LDR,R5   2,B5
          2 00025A  5041                                 SOR,R5   1
          2 00025B  5EF8                                 ADV,R5   -8
          2 00025C  DF47 000D                            STR,R5   DAT$+1,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:70   

      470    24672    4                   TEMP$ = ADDR(KX$L1.IN_CCB_HEAD$);

  24672   2 00025E  CCC7 000A                            LDB,B4   CTX$,AUTO
          2 000260  BBC4 0006                            LAB,B3   6,B4
          2 000262  BFC7 002C                            STB,B3   TEMP$,AUTO

      471    24673        /*                                Find this one in the chain, and remove */
      472    24674    5                   DO WHILE TEMP$->KX$DATA.NEXT$~=DAT$;

  24674   2 000264  AC83                                 LDB,B2   ,B3
          2 000265  ADC7 000C                            CMB,B2   DAT$,AUTO
          2 000267  0901 000A                            BE       s:24677,PREL

      473    24675    5                      TEMP$ = TEMP$->KX$DATA.NEXT$;

  24675   2 000269  ECC7 002C                            LDB,B6   TEMP$,AUTO
          2 00026B  DC86                                 LDB,B5   ,B6
          2 00026C  DFC7 002C                            STB,B5   TEMP$,AUTO

      474    24676    5                   END;

  24676   2 00026E  EC85                                 LDB,B6   ,B5
          2 00026F  EDC7 000C                            CMB,B6   DAT$,AUTO
          2 000271  09F8                                 BNE      s:24675,SPREL

      475    24677    4                   TEMP$->KX$DATA.NEXT$ = KX$DATA.NEXT$;

  24677   2 000272  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 000274  DC86                                 LDB,B5   ,B6
          2 000275  CCC7 002C                            LDB,B4   TEMP$,AUTO
          2 000277  DF84                                 STB,B5   ,B4

      476    24678    4                   IF KX$DATA.NEXT$ = ADDR(NIL)

  24678   2 000278  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 00027A  8D86                                 CMN      ,B6
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:71   
          2 00027B  0981 0005                            BNE      s:24681,PREL

      477    24679    4                      THEN
      478    24680    4                         KX$L1.IN_CCB_TAIL$ = TEMP$;

  24680   2 00027D  BCC7 000A                            LDB,B3   CTX$,AUTO
          2 00027F  CFC3 0008                            STB,B4   8,B3

      479    24681    4                   KX$DATA.CNT = KX$CCB.RANGE-KX$CCB.R_RANGE;

  24681   2 000281  ECC7 000E                            LDB,B6   CCB$,AUTO
          2 000283  E846 0003                            LDR,R6   3,B6
          2 000285  E246 0004                            SUB,R6   4,B6
          2 000287  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 000289  EF45 0007                            STR,R6   7,B5

      480    24682    4                   GOTO Y$DATA_IN;

  24682   2 00028B  0F81 012A                            B        s:24796,PREL

      481    24683    4                END;
      482    24684        /*
      483    24685                                             Process this input buffer.  First
      484    24686                                             check the status to make sure no
      485    24687                                             errors occurred.
      486    24688        */
      487    24689    3          TEMP$ = KX$L1.IN_CCB_HEAD$;

  24689   2 00028D  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 00028F  CCC5 0006                            LDB,B4   6,B5
          2 000291  CFC7 002C                            STB,B4   TEMP$,AUTO

      488    24690    3          KX$L1.IN_CCB_HEAD$ = TEMP$->KX$TDATA.NEXT$;

  24690   2 000293  BC84                                 LDB,B3   ,B4
          2 000294  BFC5 0006                            STB,B3   6,B5

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:72   
      489    24691    3          DAT$ = KX_RSV_INCCB$(KX$L1.BUF_SIZE);

  24691   2 000296  B2C5 0004                            LLH,R3   4,B5
          2 000298  ECB0 0000 0000  xsym                 LDB,B6   KX_RSV_INCCB$,R3
          2 00029B  EFC7 000C                            STB,B6   DAT$,AUTO

      490    24692    3          KX_RSV_INCCB$(KX$L1.BUF_SIZE) = ADDR(NIL);

  24692   2 00029D  B2C5 0004                            LLH,R3   4,B5
          2 00029F  BB80 0000 0000                       LAB,B3   0
          2 0002A2  BFB0 0000 0000  xsym                 STB,B3   KX_RSV_INCCB$,R3

      491    24693        /*
      492    24694            Get INPRNG first and then IOLD the reserved in_CCB.
      493    24695        */
      494    24696    3          CALL KHI$IO_INP ( KH$CHN, INPRNG );

  24696   2 0002A5  BB80 0000 0038  01                   LAB,B3   INPRNG
          2 0002A8  BFC7 0032                            STB,B3   BIT_CCBSTT+4,AUTO
          2 0002AA  ACC7 0007                            LDB,B2   CHN$,AUTO
          2 0002AC  AFC7 0030                            STB,B2   BIT_CCBSTT+2,AUTO
          2 0002AE  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0002B0  CBF0 0200                            LAB,B4   512,IMO
          2 0002B2  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 0002B5       0001                            DC       s:24700,PREL

      495    24697        /*
      496    24698                                             Give the buffer back to the MLCP or MLC-16.
      497    24699        */
      498    24700    3          IF ( KX$L1.IN_CCB_HEAD$ = ADDR(NIL) )

  24700   2 0002B6  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0002B8  8DC6 0006                            CMN      6,B6
          2 0002BA  0981 000E                            BNE      s:24709,PREL

      499    24701    3             THEN
      500    24702    4                DO;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:73   

      501    24703    4                   KX$L1.IN_CCB_HEAD$ = DAT$;

  24703   2 0002BC  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0002BE  DFC6 0006                            STB,B5   6,B6

      502    24704    4                   KH$CHN.INPCCBCNT = 1;

  24704   2 0002C0  E870 0100                            LDR,R6   256,IMO
          2 0002C2  CCC7 0007                            LDB,B4   CHN$,AUTO
          2 0002C4  EAC4 0007                            SRM,R6,'0F00'X    7,B4
          2 0002C6       0F00

      503    24705
      504    24706    4                END;

  24706   2 0002C7  0F81 000F                            B        s:24714,PREL

      505    24707    3             ELSE
      506    24708    4                DO;

      507    24709    4                   KX$L1.IN_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;

  24709   2 0002C9  DCC6 0008                            LDB,B5   8,B6
          2 0002CB  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0002CD  CF85                                 STB,B4   ,B5

      508    24710    4                   KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT + 1;

  24710   2 0002CE  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 0002D0  E845 0007                            LDR,R6   7,B5
          2 0002D2  EA70 0100                            ADD,R6   256,IMO
          2 0002D4  EAC5 0007                            SRM,R6,'0F00'X    7,B5
          2 0002D6       0F00

      509    24711
      510    24712    4                END /* IF */;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:74   

      511    24713
      512    24714    3          KX$L1.IN_CCB_TAIL$ = DAT$;

  24714   2 0002D7  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0002D9  DFC6 0008                            STB,B5   8,B6

      513    24715    3          KX$DATA.NEXT$ = ADDR(NIL);

  24715   2 0002DB  CB80 0000 0000                       LAB,B4   0
          2 0002DE  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 0002E0  CF83                                 STB,B4   ,B3

      514    24716        /*
      515    24717                                             Clear the address field of the
      516    24718                                             buffer because I don't trust
      517    24719                                             MLCP or MLC-16s.
      518    24720        */
      519    24721    3          KX$FRAME.ADR = 0;

  24721   2 0002E1  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0002E3  87C5 0008                            CLH      8,B5

      520    24722
      521    24723    3          IOLD_INPCHN.BFR_.ADR$ = DAT$;

  24723   2 0002E5  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0002E7  DF80 0000 002C  01                   STB,B5   IOLD_INPCHN+1

      522    24724    3          IOLD_INPCHN.BFR_.BYTSIZ = KX_BUF.SIZ ( KX$DATA.BFRSIZ ) + 7;

  24724   2 0002EA  B845 0006                            LDR,R3   6,B5
          2 0002EC  B570 1FFF                            AND,R3   8191,IMO
          2 0002EE  E830 0000 001E  xsym                 LDR,R6   KX_BUF+30,R3
          2 0002F1  6E07                                 ADV,R6   7
          2 0002F2  EF00 0000 002F  01                   STR,R6   IOLD_INPCHN+4

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:75   
      523    24725    3          CALL KHI$IOLD ( KH$CHN, IOLD_INPCHN );

  24725   2 0002F5  CB80 0000 002B  01                   LAB,B4   IOLD_INPCHN
          2 0002F8  CFC7 0032                            STB,B4   BIT_CCBSTT+4,AUTO
          2 0002FA  BCC7 0007                            LDB,B3   CHN$,AUTO
          2 0002FC  BFC7 0030                            STB,B3   BIT_CCBSTT+2,AUTO
          2 0002FE  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000300  CBF0 0200                            LAB,B4   512,IMO
          2 000302  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          2 000305       0001                            DC       s:24731,PREL

      524    24726        /*
      525    24727                                             If the receiver is stopped and
      526    24728                                             the channel is not dead, kick it
      527    24729                                             to get it started again.
      528    24730        */
      529    24731    3          INPLCTBYT.LCTBYT.ADR = %KX#M_RCVST;

  24731   2 000306  6C17                                 LDV,R6   23
          2 000307  EA80 0000 0035  01                   SRM,R6,'00FF'X    INPLCTBYT+1
          2 00030A       00FF

      530    24732    3          CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );

  24732   2 00030B  EB80 0000 0034  01                   LAB,B6   INPLCTBYT
          2 00030E  EFC7 0032                            STB,B6   BIT_CCBSTT+4,AUTO
          2 000310  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 000312  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 000314  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000316  CBF0 0200                            LAB,B4   512,IMO
          2 000318  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 00031B       0001                            DC       s:24734,PREL

      531    24733
      532    24734    3          IF ( INPLCTBYT.LCTBYT.DAT = %KX#M_RCVST_NCCB )

  24734   2 00031C  E280 0000 0035  01                   LLH,R6   INPLCTBYT+1
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:76   
          2 00031F  6D09                                 CMV,R6   9
          2 000320  0981 0017                            BNE      s:24744,PREL

      533    24735    3             THEN
      534    24736    4                DO;

      535    24737    4                   IF NOT KH$CHN.DED

  24737   2 000322  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 000324  82C6 0009                            LB,'0100'X        9,B6
          2 000326       0100
          2 000327  0501 0010                            BBT      s:24744,PREL

      536    24738    4                      THEN
      537    24739    5                         DO;

      538    24740    5                            CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INP );

  24740   2 000329  DB80 0000 003A  01                   LAB,B5   OTPCHNCTR_INP
          2 00032C  DFC7 0032                            STB,B5   BIT_CCBSTT+4,AUTO
          2 00032E  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 000330  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000332  CBF0 0200                            LAB,B4   512,IMO
          2 000334  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000337       0001                            DC       s:24744,PREL

      539    24741    5                         END /* IF */;

      540    24742
      541    24743    4                END /* IF */;

      542    24744    3          DAT$ = TEMP$;

  24744   2 000338  ECC7 002C                            LDB,B6   TEMP$,AUTO
          2 00033A  EFC7 000C                            STB,B6   DAT$,AUTO

      543    24745        /*
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:77   
      544    24746                                             Check for DATSRVERR, CCBSRVERR,
      545    24747                                             DATCHKERR, INVMMRERR, BUSPRTERR,
      546    24748                                             UN_CRCMMRERR, or short/abort frame.
      547    24749        */
      548    24750    3          IF ( BIT_CCBSTT & '2E47'X )

  24750   2 00033C  E847 002E                            LDR,R6   BIT_CCBSTT,AUTO
          2 00033E  E570 2E47                            AND,R6   11847,IMO
          2 000340  6901 0038                            BEZ,R6   s:24786,PREL

      549    24751    3             THEN
      550    24752    4                DO;

      551    24753                        %WRSYSLOG ( ERRCOD = HRDERR,
      552    24754                        TRMID = KH$CHN.TERMID,
      553    24755                        VAL0 = CHN,
      554    24756                        VAL1 = BIT_CCBSTT );

  24772   2 000342  DBC7 002E                            LAB,B5   BIT_CCBSTT,AUTO
          2 000344  DFC7 0038                            STB,B5   BIT_CCBSTT+10,AUTO
          2 000346  CBC7 0006                            LAB,B4   CHN,AUTO
          2 000348  CFC7 0036                            STB,B4   BIT_CCBSTT+8,AUTO
          2 00034A  BB80 0000 0000                       LAB,B3   0
          2 00034D  BFC7 0034                            STB,B3   BIT_CCBSTT+6,AUTO
          2 00034F  ACC7 0007                            LDB,B2   CHN$,AUTO
          2 000351  9BC2 0012                            LAB,B1   18,B2
          2 000353  9FC7 0032                            STB,B1   BIT_CCBSTT+4,AUTO
          2 000355  EB80 0000 0004  00                   LAB,B6   HRDERR
          2 000358  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 00035A  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00035C  CBF0 0500                            LAB,B4   1280,IMO
          2 00035E  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 000361       0001                            DC       s:24774,PREL

      555    24774    4                   IF ( (BIT_CCBSTT&'0600'X) = '0400'X )

  24774   2 000362  E847 002E                            LDR,R6   BIT_CCBSTT,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:78   
          2 000364  E570 0600                            AND,R6   1536,IMO
          2 000366  E970 0400                            CMR,R6   1024,IMO
          2 000368  0981 0009                            BNE      s:24781,PREL

      556    24775    4                      THEN
      557    24776    5                         DO;

      558    24777        /* CCB status says a frame longer than the CCB is received. Tell L2 */
      559    24778    5                            KX$DATA.CNT = 4104;

  24778   2 00036A  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 00036C  E870 1008                            LDR,R6   4104,IMO
          2 00036E  EF46 0007                            STR,R6   7,B6

      560    24779    5                            GOTO Y$DATA_IN;

  24779   2 000370  0F81 0045                            B        s:24796,PREL

      561    24780    5                         END;
      562    24781    4                   FPT_X25.PRM1$ = DAT$;

  24781   2 000372  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 000374  EF80 0000 0013  01                   STB,B6   FPT_X25+7

      563    24782    4                END;

  24782   2 000377  0F81 0065                            B        s:24821,PREL

      564    24783    3             ELSE
      565    24784    4                DO;

      566    24785        /*  Record input frame in trace buffer. */
      567    24786    4                   KX$L2.TRC(TRCX) = FRAME_TRACE(SIZEW(KX$DATA))+BITBIN('8000'X);

  24786   2 000379  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 00037B  B847 0028                            LDR,R3   TRCX,AUTO
          2 00037D  3E70                                 ADV,R3   112
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:79   
          2 00037E  E846 0008                            LDR,R6   8,B6
          2 000380  EA70 8000                            ADD,R6   -32768,IMO
          2 000382  EF35                                 STR,R6   ,B5,R3

      568    24787    4                   KX$L2.TRC(TRCX+1) = FRAME_TRACE(SIZEW(KX$DATA)+1);

  24787   2 000383  A847 0028                            LDR,R2   TRCX,AUTO
          2 000385  2E71                                 ADV,R2   113
          2 000386  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 000388  D844 0009                            LDR,R5   9,B4
          2 00038A  DF25                                 STR,R5   ,B5,R2

      569    24788    4                   KX$L2.TRC(TRCX+2) = FRAME_TRACE(SIZEW(KX$DATA)+2);

  24788   2 00038B  9847 0028                            LDR,R1   TRCX,AUTO
          2 00038D  1E72                                 ADV,R1   114
          2 00038E  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 000390  E844 000A                            LDR,R6   10,B4
          2 000392  EF15                                 STR,R6   ,B5,R1

      570    24789    4                   KX$L2.TRC(TRCX+3) = FRAME_TRACE(SIZEW(KX$DATA)+3);

  24789   2 000393  B847 0028                            LDR,R3   TRCX,AUTO
          2 000395  3E73                                 ADV,R3   115
          2 000396  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 000398  D844 000B                            LDR,R5   11,B4
          2 00039A  DF35                                 STR,R5   ,B5,R3

      571    24790    4                   TRCX = MOD ( TRCX + 4, 200 );

  24790   2 00039B  F847 0028                            LDR,R7   TRCX,AUTO
          2 00039D  6C00                                 LDV,R6   0
          2 00039E  8470 0000 0004                       AID      4,IMO
          2 0003A1  F370 00C8                            DIV,R7   200,IMO
          2 0003A3  EF47 0028                            STR,R6   TRCX,AUTO

      572    24791    4                   KX$L2.TRCX = TRCX;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:80   

  24791   2 0003A5  EF45 006F                            STR,R6   111,B5

      573    24792        /*
      574    24793                                             Get the CCB range and calculate
      575    24794                                             the size of the received message.
      576    24795        */
      577    24796    4                   KX$DATA.CNT = KX_BUF.SIZ ( KX$DATA.BFRSIZ ) + 7

  24796   2 0003A7  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0003A9  B844 0006                            LDR,R3   6,B4
          2 0003AB  B570 1FFF                            AND,R3   8191,IMO
          2 0003AD  D830 0000 001E  xsym                 LDR,R5   KX_BUF+30,R3
          2 0003B0  D200 0000 0039  01                   SUB,R5   INPRNG+1
          2 0003B3  5E07                                 ADV,R5   7
          2 0003B4  DF44 0007                            STR,R5   7,B4

  24796   2                              Y$DATA_IN       null
      578    24797    4                      - INPRNG.RNG;
      579    24798    4   Y$DATA_IN:      ;
      580    24799        /*
      581    24800                                             Always clear the FLNK$.
      582    24801        */
      583    24802    4                   KX$DATA.NEXT$ = ADDR(NIL);

  24802   2 0003B6  EB80 0000 0000       Y$DATA_IN       LAB,B6   0
          2 0003B9  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0003BB  EF85                                 STB,B6   ,B5

      584    24803
      585    24804    4                   KX_STATS_HDLC.FRAMES_IN = KX_STATS_HDLC.FRAMES_IN + 1;

  24804   2 0003BC  8A80 0000 001F  xsym                 INC      KX_STATS_HDLC+31
          2 0003BF  8E80 0000 001E  xsym                 CAD      KX_STATS_HDLC+30

      586    24805    4                   KX_STATS_HDLC.BYTES_IN = KX_STATS_HDLC.BYTES_IN + KX$DATA.CNT;

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:81   
  24805   2 0003C2  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 0003C4  F846 0007                            LDR,R7   7,B6
          2 0003C6  6C00                                 LDV,R6   0
          2 0003C7  8400 0000 001A  xsym                 AID      KX_STATS_HDLC+26
          2 0003CA  8D00 0000 001A  xsym                 SDI      KX_STATS_HDLC+26

      587    24806        /*
      588    24807                                             Deliver the data to the Frame
      589    24808                                             level.
      590    24809        */
      591    24810    4                   FPT_X25.EVN = %KX_F_EV_DATA_IN#;

  24810   2 0003CD  5C08                                 LDV,R5   8
          2 0003CE  DF00 0000 000C  01                   STR,R5   FPT_X25

      592    24811    4                   FPT_X25.PRM1$ = DAT$;

  24811   2 0003D1  EF80 0000 0013  01                   STB,B6   FPT_X25+7

      593    24812    4                   CALL KXF$FRAME ( FPT_X25 );

  24812   2 0003D4  BB80 0000 0004  03                   LAB,B3   +4
          2 0003D7  CBF0 0100                            LAB,B4   256,IMO
          2 0003D9  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 0003DC       0001                            DC       s:24821,PREL

      594    24813    4                END /* IF */;

      595    24814        /*
      596    24815                                             If PRM1$ is now ADDR(NIL), it
      597    24816                                             means that the Frame level (or
      598    24817                                             some higher level) help on to
      599    24818                                             the buffer.  If so, get a new
      600    24819                                             buffer.
      601    24820        */
      602    24821    3          IF FPT_X25.PRM1$ = ADDR(NIL)

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:82   
  24821   2 0003DD  8D80 0000 0013  01                   CMN      FPT_X25+7
          2 0003E0  0981 0016                            BNE      s:24826,PREL

      603    24822    3             THEN
      604    24823    4                DO;

      605    24824    4                   CALL KXS$GETBFR ( KX_BUF.SIZ ( KX$L1.BUF_SIZE ), DAT$ );

  24824   2 0003E2  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0003E4  B2C6 0004                            LLH,R3   4,B6
          2 0003E6  DBC7 000C                            LAB,B5   DAT$,AUTO
          2 0003E8  DFC7 0032                            STB,B5   BIT_CCBSTT+4,AUTO
          2 0003EA  CBB0 0000 001E  xsym                 LAB,B4   KX_BUF+30,R3
          2 0003ED  CFC7 0030                            STB,B4   BIT_CCBSTT+2,AUTO
          2 0003EF  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0003F1  CBF0 0200                            LAB,B4   512,IMO
          2 0003F3  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 0003F6       0001                            DC       s:24826,PREL

      606    24825    4                END;

      607    24826    3          IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC

  24826   2 0003F7  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 0003F9  E846 0005                            LDR,R6   5,B6
          2 0003FB  E570 0200                            AND,R6   512,IMO
          2 0003FD  6981 0020                            BNEZ,R6  s:24835,PREL

      608    24827    3             THEN
      609    24828    4                DO;

      610    24829    4                   KX_RSV_INCCB$(KX$L1.BUF_SIZE) = DAT$;

  24829   2 0003FF  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 000401  B2C5 0004                            LLH,R3   4,B5
          2 000403  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 000405  CFB0 0000 0000  xsym                 STB,B4   KX_RSV_INCCB$,R3
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:83   

      611    24830    4                   CALL KHI$IO_INP ( KH$CHN, INPNXTCCBSTT );

  24830   2 000408  BB80 0000 0036  01                   LAB,B3   INPNXTCCBSTT
          2 00040B  BFC7 0032                            STB,B3   BIT_CCBSTT+4,AUTO
          2 00040D  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 00040F  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000411  CBF0 0200                            LAB,B4   512,IMO
          2 000413  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000416       0001                            DC       s:24831,PREL

      612    24831    4                   BIT_CCBSTT = INPNXTCCBSTT.CCBSTT;

  24831   2 000417  E800 0000 0037  01                   LDR,R6   INPNXTCCBSTT+1
          2 00041A  EF47 002E                            STR,R6   BIT_CCBSTT,AUTO

      613    24832    4                END;

  24832   2 00041C  0F81 0061                            B        s:24864,PREL

      614    24833    3             ELSE
      615    24834    4                DO;

      616    24835    4                   IF ( KX$L1.IN_CCB_HEAD$ = ADDR(NIL) )

  24835   2 00041E  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 000420  8DC5 0006                            CMN      6,B5
          2 000422  0981 000E                            BNE      s:24844,PREL

      617    24836    4                      THEN
      618    24837    5                         DO;

      619    24838    5                            KX$L1.IN_CCB_HEAD$ = DAT$;

  24838   2 000424  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 000426  CFC5 0006                            STB,B4   6,B5

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:84   
      620    24839    5                            KH$CHN.INPCCBCNT = 1;

  24839   2 000428  E870 0100                            LDR,R6   256,IMO
          2 00042A  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 00042C  EAC6 0007                            SRM,R6,'0F00'X    7,B6
          2 00042E       0F00

      621    24840
      622    24841    5                         END;

  24841   2 00042F  0F81 000F                            B        s:24849,PREL

      623    24842    4                      ELSE
      624    24843    5                         DO;

      625    24844    5                            KX$L1.IN_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;

  24844   2 000431  CCC5 0008                            LDB,B4   8,B5
          2 000433  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 000435  BF84                                 STB,B3   ,B4

      626    24845    5                            KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT + 1;

  24845   2 000436  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 000438  E846 0007                            LDR,R6   7,B6
          2 00043A  EA70 0100                            ADD,R6   256,IMO
          2 00043C  EAC6 0007                            SRM,R6,'0F00'X    7,B6
          2 00043E       0F00

      627    24846
      628    24847    5                         END /* IF */;

      629    24848
      630    24849    4                   KX$L1.IN_CCB_TAIL$ = DAT$;

  24849   2 00043F  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 000441  EFC5 0008                            STB,B6   8,B5
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:85   

      631    24850    4                   KX$DATA.NEXT$ = ADDR(NIL);

  24850   2 000443  CB80 0000 0000                       LAB,B4   0
          2 000446  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 000448  CF83                                 STB,B4   ,B3

      632    24851    4                   KX$CCB.DATA_ADR = DAT.W*2+SIZEC(KX$DATA);

  24851   2 000449  ECC7 000E                            LDB,B6   CCB$,AUTO
          2 00044B  E847 000D                            LDR,R6   DAT$+1,AUTO
          2 00044D  6001                                 SOL,R6   1
          2 00044E  6E10                                 ADV,R6   16
          2 00044F  EF46 0002                            STR,R6   2,B6

      633    24852    4                   BIN_CCBPTR = KX$CCB.LNK.SLCC;

  24852   2 000451  D806                                 LDR,R5   ,B6
          2 000452  DF47 002E                            STR,R5   BIT_CCBSTT,AUTO

      634    24853    4                   KX$CCB.LNK.SLCC = 0;

  24853   2 000454  8706                                 CL       ,B6

      635    24854    4                   OTPCCBPTR.CCBPTR = KX$CCB.CCB_TAIL;

  24854   2 000455  E846 0007                            LDR,R6   7,B6
          2 000457  EF00 0000 0033  01                   STR,R6   OTPCCBPTR+1

      636    24855    5                   DO WHILE KX$L2S.XMTCCB.LOCK>=0;

  24855   2 00045A  D845 0074                            LDR,R5   116,B5
          2 00045C  5801 000C                            BLZ,R5   s:24860,PREL

      637    24856    5                      IF KX$L2S.XMTCCB.LOCK=0

  24856   2 00045E  ECC7 000A                            LDB,B6   CTX$,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:86   
          2 000460  E846 0074                            LDR,R6   116,B6
          2 000462  6981 0003                            BNEZ,R6  s:24859,PREL

      638    24857    5                         THEN
      639    24858    5                            KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;

  24858   2 000464  88C6 0074                            DEC      116,B6

      640    24859    5                   END;

  24859   2 000466  E846 0074                            LDR,R6   116,B6
          2 000468  68F6                                 BGEZ,R6  s:24856,SPREL

      641    24860    4                   CALL KHI$IO_OTP (KH$CHN, OTPCCBPTR);

  24860   2 000469  EB80 0000 0032  01                   LAB,B6   OTPCCBPTR
          2 00046C  EFC7 0032                            STB,B6   BIT_CCBSTT+4,AUTO
          2 00046E  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 000470  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 000472  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000474  CBF0 0200                            LAB,B4   512,IMO
          2 000476  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000479       0001                            DC       s:24861,PREL

      642    24861    4                   KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;

  24861   2 00047A  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00047C  8AC6 0074                            INC      116,B6

      643    24862    4                END;

      644    24863
      645    24864    3       END LOP;  /*  Loop on CCBs  */

  24864   2 00047E  E847 002E                            LDR,R6   BIT_CCBSTT,AUTO
          2 000480  6981 FDBF                            BNEZ,R6  s:24663,PREL

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:87   
      646    24865        /*
      647    24866                                             Try to update the send queues.
      648    24867        */
      649    24868    2       IF KX$L2.FLG.OK AND NOT KX$L2.FLG.BLK AND KX$L2.FLG.DATAVL

  24868   2 000482  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000484  82C6 002E                            LB,'0800'X        46,B6
          2 000486       0800
          2 000487  0581 0017                            BBF      s:24874,PREL
          2 000489  89C6 002E                            CMZ      46,B6
          2 00048B  0801 0013                            BAL      s:24874,PREL
          2 00048D  82C6 002E                            LB,'0002'X        46,B6
          2 00048F       0002
          2 000490  0581 000E                            BBF      s:24874,PREL

      650    24869    2          THEN
      651    24870    3             DO;

      652    24871    3                FPT_X25.EVN = %KX_F_EV_GETDAT#;

  24871   2 000492  5C0A                                 LDV,R5   10
          2 000493  DF00 0000 000C  01                   STR,R5   FPT_X25

      653    24872    3                CALL KXF$FRAME ( FPT_X25 );

  24872   2 000496  BB80 0000 0004  03                   LAB,B3   +4
          2 000499  CBF0 0100                            LAB,B4   256,IMO
          2 00049B  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 00049E       0001                            DC       s:24874,PREL

      654    24873    3             END /* IF */;

      655    24874    2       CALL KHC$XEQ2 ( Y@CRTEXCTIM );

  24874   2 00049F  EBC7 0026                            LAB,B6   Y@CRTEXCTIM,AUTO
          2 0004A1  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 0004A3  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:88   
          2 0004A5  CBF0 0100                            LAB,B4   256,IMO
          2 0004A7  E380 0000 0000  xent                 LNJ,B6   KHC$XEQ2
          2 0004AA       0001                            DC       s:24875,PREL

      656    24875    2       KX_STATS_HDLC.IN_TCB_TICS = KX_STATS_HDLC.IN_TCB_TICS + Y@CRTEXCTIM -
             24875                Y@SVDEXCTIM;

  24875   2 0004AB  8C80 0000 002A  xsym                 LDI      KX_STATS_HDLC+42
          2 0004AE  8447 0026                            AID      Y@CRTEXCTIM,AUTO
          2 0004B0  84C7 0024                            SID      Y@SVDEXCTIM,AUTO
          2 0004B2  8D00 0000 002A  xsym                 SDI      KX_STATS_HDLC+42

      657    24876
      658    24877    2   END Y$INPUT_COMPLETE;

  24877   2 0004B5  ECC7 002A                            LDB,B6   TRCX+2,AUTO
          2 0004B7  C3C6 0001                            LNJ,B4   1,B6

      659    24878        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:89   
      660    24879        /*I* NAME: Y$OUTPUT_COMPLETE                                                  */
      661    24880        /*I* PURPOSE: This subroutine handles the transmitter                         */
      662    24881        /*I* interrupts for the X.25 handler.                                         */
      663    24882        /*I* CALL: CALL Y$OUTPUT_COMPLETE, ARGS;                  */
      664    24883        /*I* INPUT: CHN$  =  channel table entry pointer                                */
      665    24884        /*I* OUTPUT: none                                                             */
      666    24885
      667    24886    1   Y$OUTPUT_COMPLETE: PROC;

  24886   2 0004B9  EFC7 002A            Y$OUTPUT_COMPLE*STB,B6   TRCX+2,AUTO

      668    24887
      669    24888    2   DCL TEMP3$ PTR;
      670    24889
      671    24890    2       KX_STATS_HDLC.OUT_TCB_COUNT = KX_STATS_HDLC.OUT_TCB_COUNT + 1;

  24890   2 0004BB  8A80 0000 0031  xsym                 INC      KX_STATS_HDLC+49
          2 0004BE  8E80 0000 0030  xsym                 CAD      KX_STATS_HDLC+48

      672    24891        /* Get the transmit CCP state                                                 */
      673    24892
      674    24893    2       INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;

  24893   2 0004C1  6C38                                 LDV,R6   56
          2 0004C2  EA80 0000 0009  01                   SRM,R6,'00FF'X    INPLCTBYT+1
          2 0004C5       00FF

      675    24894    2       IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC

  24894   2 0004C6  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 0004C8  D845 0005                            LDR,R5   5,B5
          2 0004CA  D570 0200                            AND,R5   512,IMO
          2 0004CC  5981 0012                            BNEZ,R5  s:24898,PREL

      676    24895    2          THEN
      677    24896    2             CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:90   
  24896   2 0004CE  CB80 0000 0008  01                   LAB,B4   INPLCTBYT
          2 0004D1  CFC7 0032                            STB,B4   BIT_CCBSTT+4,AUTO
          2 0004D3  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 0004D5  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0004D7  CBF0 0200                            LAB,B4   512,IMO
          2 0004D9  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 0004DC       0001                            DC       s:24896+15,PREL
          2 0004DD  0F81 005B                            B        s:24919,PREL

      678    24897    3          ELSE DO;

      679    24898    4                DO WHILE KX$L2S.XMTCCB.LOCK>=0;

  24898   2 0004DF  CCC7 000A                            LDB,B4   CTX$,AUTO
          2 0004E1  D844 0074                            LDR,R5   116,B4
          2 0004E3  5801 000C                            BLZ,R5   s:24903,PREL

      680    24899    4                   IF KX$L2S.XMTCCB.LOCK=0

  24899   2 0004E5  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0004E7  E846 0074                            LDR,R6   116,B6
          2 0004E9  6981 0003                            BNEZ,R6  s:24902,PREL

      681    24900    4                      THEN
      682    24901    4                         KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;

  24901   2 0004EB  88C6 0074                            DEC      116,B6

      683    24902    4                END;

  24902   2 0004ED  E846 0074                            LDR,R6   116,B6
          2 0004EF  68F6                                 BGEZ,R6  s:24899,SPREL

      684    24903    3                CALL KHI$IO_INP ( KH$CHN, INPSLCSTT );

  24903   2 0004F0  EB80 0000 000A  01                   LAB,B6   INPSLCSTT
          2 0004F3  EFC7 0032                            STB,B6   BIT_CCBSTT+4,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:91   
          2 0004F5  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 0004F7  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 0004F9  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0004FB  CBF0 0200                            LAB,B4   512,IMO
          2 0004FD  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000500       0001                            DC       s:24904,PREL

      685    24904    3                KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;

  24904   2 000501  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000503  8AC6 0074                            INC      116,B6

      686    24905    3                IF INPSLCSTT.SLCSTT='0'B THEN RETURN; /* Nothing to do */

  24905   2 000505  E800 0000 000B  01                   LDR,R6   INPSLCSTT+1
          2 000508  6981 0005                            BNEZ,R6  s:24906,PREL

  24905   2 00050A  ECC7 002A                            LDB,B6   TRCX+2,AUTO
          2 00050C  C3C6 0001                            LNJ,B4   1,B6

      687    24906    3                INPLCTBYT.LCTBYT.DAT = INPSLCSTT.SLCSTT.INT;

  24906   2 00050E  D800 0000 000B  01                   LDR,R5   INPSLCSTT+1
          2 000511  5048                                 SOR,R5   8
          2 000512  D570 000F                            AND,R5   15,IMO
          2 000514  D780 0000 0009  01                   STH,R5   INPLCTBYT+1

      688    24907    3                IF INPSLCSTT.SLCSTT.INT=0

  24907   2 000517  8280 0000 000B  01                   LB,'0F00'X        INPSLCSTT+1
  24907   2 00051A       0F00
          2 00051B  0581 001D                            BBF      s:24919,PREL
          2 00051D  5D0C                                 CMV,R5   12
          2 00051E  0981 001A                            BNE      s:24919,PREL

      689    24908    3                   OR INPSLCSTT.SLCSTT.INT~=%KX#M_TRNST_OFF THEN EXIT;
      690    24909    3                CCB$ = KV_B_POOL$(1);
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:92   

  24909   2 000520  DC80 0000 0002  xsym                 LDB,B5   KV_B_POOL$+2
          2 000523  DFC7 000E                            STB,B5   CCB$,AUTO

      691    24910    3                CCB.W = KX$L2S.XMTCCB.HEAD/2;

  24910   2 000525  C846 0072                            LDR,R4   114,B6
          2 000527  4041                                 SOR,R4   1
          2 000528  CF47 000F                            STR,R4   CCB$+1,AUTO

      692    24911    3                IF KX$CCB.LNK.SLCC ~= 65535

  24911   2 00052A  CCC7 000E                            LDB,B4   CCB$,AUTO
          2 00052C  B804                                 LDR,R3   ,B4
          2 00052D  B970 FFFF                            CMR,R3   -1,IMO
          2 00052F  0901 0009                            BE       s:24919,PREL
          2 000531  8DC6 000A                            CMN      10,B6
          2 000533  0901 0005                            BE       s:24919,PREL

      693    24912    3                   AND KX$L1.OUT_CCB_HEAD$ ~= ADDR(NIL)
      694    24913    3                   THEN
      695    24914    3                      RETURN;

  24914   2 000535  ECC7 002A                            LDB,B6   TRCX+2,AUTO
          2 000537  C3C6 0001                            LNJ,B4   1,B6

      696    24915    3             END;
      697    24916        /*
      698    24917                                             Save the transmit state.
      699    24918        */
      700    24919    2       KX$L1.TRNST = INPLCTBYT.LCTBYT.DAT;

  24919   2 000539  E280 0000 0009  01                   LLH,R6   INPLCTBYT+1
          2 00053C  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00053E  E7C6 0005                            STH,R6   5,B6

      701    24920        /*
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:93   
      702    24921                                             Do case on the transmit state.
      703    24922        */
      704    24923    3       DO CASE ( INPLCTBYT.LCTBYT.DAT );

  24923   2 000540  B280 0000 0009  01                   LLH,R3   INPLCTBYT+1
          2 000543  3D10                                 CMV,R3   16
          2 000544  0281 019F                            BGE      s:25143,PREL
          2 000546  A830 0000 054C  02                   LDR,R2   s:24923+12,R3
          2 000549  83A0 0000 055C  02                   JMP      s:24940,R2
          2 00054C       0188                            DC       s:25143,PREL
          2 00054D       0188                            DC       s:25143,PREL
          2 00054E       01EB                            DC       s:25186,PREL
          2 00054F       0188                            DC       s:25143,PREL
          2 000550       016E                            DC       s:25124,PREL
          2 000551       016E                            DC       s:25124,PREL
          2 000552       0188                            DC       s:25143,PREL
          2 000553       0188                            DC       s:25143,PREL
          2 000554       0188                            DC       s:25143,PREL
          2 000555       0188                            DC       s:25143,PREL
          2 000556       0188                            DC       s:25143,PREL
          2 000557       0188                            DC       s:25143,PREL
          2 000558       0000                            DC       s:24940,PREL
          2 000559       00E8                            DC       s:25025,PREL
          2 00055A       00E8                            DC       s:25025,PREL
          2 00055B       0144                            DC       s:25093,PREL

      705    24924        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:94   
      706    24925
      707    24926        /* Waiting for data set ready  ( DSR )  or clear to send  ( CTS )
             24926          */
      708    24927
      709    24928    3          CASE ( %KX#M_TRNST_WAIT );

      710    24929
      711    24930        /* Do nothing,  it will restart when it finds both DSR and CTS                 */
      712    24931
      713    24932        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:95   
      714    24933
      715    24934        /* Transmitter is off                                                         */
      716    24935
      717    24936    3          CASE ( %KX#M_TRNST_OFF );

      718    24937
      719    24938        /* Clear the output CCB count                                                 */
      720    24939
      721    24940    3             KH$CHN.OTPCCBCNT = 0;

  24940   2 00055C  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 00055E  8845 0007                            LBF,'000F'X       7,B5
          2 000560       000F

      722    24941
      723    24942        /* Release any buffers from this level                                        */
      724    24943
      725    24944    3             DAT$ = KX$L1.OUT_CCB_HEAD$;

  24944   2 000561  DCC6 000A                            LDB,B5   10,B6
          2 000563  DFC7 000C                            STB,B5   DAT$,AUTO

      726    24945    4             DO WHILE ( DAT$ ~= ADDR(NIL) );

  24945   2 000565  0F81 008B                            B        s:24992,PREL

      727    24946
      728    24947        /*
      729    24948                                             Save the FLNK$.
      730    24949        */
      731    24950    4                TEMP3$ = KX$DATA.NEXT$;

  24950   2 000567  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 000569  DC86                                 LDB,B5   ,B6
          2 00056A  DFC7 002C                            STB,B5   TEMP3$,AUTO

      732    24951    4                KX$L1.OUT_CCB_HEAD$ = TEMP3$;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:96   

  24951   2 00056C  CCC7 000A                            LDB,B4   CTX$,AUTO
          2 00056E  DFC4 000A                            STB,B5   10,B4

      733    24952    4                IF TEMP3$ = ADDR(NIL)

  24952   2 000570  8DC7 002C                            CMN      TEMP3$,AUTO
          2 000572  0981 0003                            BNE      s:24955,PREL

      734    24953    4                   THEN
      735    24954    4                      KX$L1.OUT_CCB_TAIL$ = TEMP3$;

  24954   2 000574  DFC4 000C                            STB,B5   12,B4

      736    24955    5                IF KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN DO;

  24955   2 000576  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 000578  E846 0005                            LDR,R6   5,B6
          2 00057A  E570 0200                            AND,R6   512,IMO
          2 00057C  6901 0048                            BEZ,R6   s:24974,PREL

      737    24956    6                         DO WHILE KX$L2S.XMTCCB.LOCK>=0;

  24956   2 00057E  E844 0074                            LDR,R6   116,B4
          2 000580  6801 000C                            BLZ,R6   s:24961,PREL

      738    24957    6                            IF KX$L2S.XMTCCB.LOCK=0

  24957   2 000582  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000584  E846 0074                            LDR,R6   116,B6
          2 000586  6981 0003                            BNEZ,R6  s:24960,PREL

      739    24958    6                               THEN
      740    24959    6                                  KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;

  24959   2 000588  88C6 0074                            DEC      116,B6

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:97   
      741    24960    6                         END;

  24960   2 00058A  E846 0074                            LDR,R6   116,B6
          2 00058C  68F6                                 BGEZ,R6  s:24957,SPREL

      742    24961    5                         KX$L2S.XMTCCB.HEAD = KX$CCB.LNK.FEP;

  24961   2 00058D  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00058F  DCC7 000E                            LDB,B5   CCB$,AUTO
          2 000591  E845 0001                            LDR,R6   1,B5
          2 000593  EF46 0072                            STR,R6   114,B6

      743    24962    5                         KX$DATA.RLS.L2 = '1'B;

  24962   2 000595  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 000597  8944 0006                            LBT,'4000'X       6,B4
          2 000599       4000

      744    24963    5                         KX$CCB.LNK$ = KX$L2S.CCBHD$;

  24963   2 00059A  CCC6 002C                            LDB,B4   44,B6
          2 00059C  CF85                                 STB,B4   ,B5

      745    24964    5                         KX$L2S.CCBHD$ = CCB$;

  24964   2 00059D  DFC6 002C                            STB,B5   44,B6

      746    24965    5                         CCB.W = KX$L2S.XMTCCB.HEAD/2;

  24965   2 00059F  E846 0072                            LDR,R6   114,B6
          2 0005A1  6041                                 SOR,R6   1
          2 0005A2  EF47 000F                            STR,R6   CCB$+1,AUTO

      747    24966    5                         IF KX$CCB.LNK.SLCC ~= 65535 THEN TEMP3$ = ADDR(NIL);

  24966   2 0005A4  CCC7 000E                            LDB,B4   CCB$,AUTO
          2 0005A6  D804                                 LDR,R5   ,B4
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:98   
          2 0005A7  D970 FFFF                            CMR,R5   -1,IMO
          2 0005A9  0901 0006                            BE       s:24967,PREL

  24966   2 0005AB  BB80 0000 0000                       LAB,B3   0
          2 0005AE  BFC7 002C                            STB,B3   TEMP3$,AUTO

      748    24967    5                         KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;

  24967   2 0005B0  8AC6 0074                            INC      116,B6

      749    24968    5                         KX$L2S.I_CNT = KX$L2S.I_CNT-1;

  24968   2 0005B2  D846 002F                            LDR,R5   47,B6
          2 0005B4  DA70 00FF                            ADD,R5   255,IMO
          2 0005B6  DAC6 002F                            SRM,R5,'00FF'X    47,B6
          2 0005B8       00FF

      750    24969    5                         IF KX$L2S.I_CNT < KX$L2S.K

  24969   2 0005B9  D846 002F                            LDR,R5   47,B6
          2 0005BB  D570 00FF                            AND,R5   255,IMO
          2 0005BD  C2C6 0016                            LLH,R4   22,B6
          2 0005BF  D954                                 CMR,R5   R4
          2 0005C0  0881 0004                            BAGE     s:24974,PREL

      751    24970    5                            THEN
      752    24971    5                               KX$L2S.FLG.BLK = '0'B;

  24971   2 0005C2  8846 002E                            LBF,'8000'X       46,B6
  24971   2 0005C4       8000

      753    24972    5                      END;

      754    24973
      755    24974    4                KX_STATS_HDLC.FRAMES_OUT = KX_STATS_HDLC.FRAMES_OUT + 1;

  24974   2 0005C5  8A80 0000 0021  xsym                 INC      KX_STATS_HDLC+33
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:99   
          2 0005C8  8E80 0000 0020  xsym                 CAD      KX_STATS_HDLC+32

      756    24975    4                KX_STATS_HDLC.BYTES_OUT = KX_STATS_HDLC.BYTES_OUT + KX$DATA.CNT;

  24975   2 0005CB  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 0005CD  F846 0007                            LDR,R7   7,B6
          2 0005CF  6C00                                 LDV,R6   0
          2 0005D0  8400 0000 001C  xsym                 AID      KX_STATS_HDLC+28
          2 0005D3  8D00 0000 001C  xsym                 SDI      KX_STATS_HDLC+28

      757    24976
      758    24977        /* See if we should release this one                                          */
      759    24978
      760    24979    4                KX$DATA.RLS.L1 = '1'B;

  24979   2 0005D6  8946 0006                            LBT,'2000'X       6,B6
  24979   2 0005D8       2000

      761    24980    4                IF ( KX$DATA.RLS_STAT = %KX_BFR_RLS_OK# )

  24980   2 0005D9  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 0005DB  E846 0006                            LDR,R6   6,B6
          2 0005DD  604D                                 SOR,R6   13
          2 0005DE  6D07                                 CMV,R6   7
          2 0005DF  0981 000D                            BNE      s:24991,PREL

      762    24981    4                   THEN
      763    24982    5                      DO;

      764    24983
      765    24984        /* All the levels are done  -  release the buffer                               */
      766    24985
      767    24986    5                         CALL KXS$RLSBFR ( DAT$ );

  24986   2 0005E1  DBC7 000C                            LAB,B5   DAT$,AUTO
          2 0005E3  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 0005E5  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:100  
          2 0005E7  CBF0 0100                            LAB,B4   256,IMO
          2 0005E9  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 0005EC       0001                            DC       s:24991,PREL

      768    24987    5                      END /* IF */;

      769    24988
      770    24989        /* Restore the next pointer                                                   */
      771    24990
      772    24991    4                DAT$ = TEMP3$;

  24991   2 0005ED  ECC7 002C                            LDB,B6   TEMP3$,AUTO
          2 0005EF  EFC7 000C                            STB,B6   DAT$,AUTO

      773    24992    4             END /* LOOP */;

  24992   2 0005F1  8DC7 000C                            CMN      DAT$,AUTO
          2 0005F3  0981 FF73                            BNE      s:24950,PREL

      774    24993        /*
      775    24994                                             Try to supply more CCBs to the
      776    24995                                             MLCP or MLC-16.
      777    24996        */
      778    24997    3             CALL KXN$CMND ( %KX_N_UPDATE_TRN_CCB#, KH$CHN );

  24997   2 0005F5  EBF0 0009                            LAB,B6   9,IMO
          2 0005F7  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 0005F9  DFC7 0032                            STB,B5   BIT_CCBSTT+4,AUTO
          2 0005FB  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 0005FD  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0005FF  CBF0 0200                            LAB,B4   512,IMO
          2 000601  E380 0000 0000  xent                 LNJ,B6   KXN$CMND
          2 000604       0001                            DC       s:25004,PREL

      779    24998        /*
      780    24999                                             Check to see if retransmission is
      781    25000                                             needed and no output CCBs are
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:101  
      782    25001                                             active.
      783    25002        */
      784    25003        /* note that SLCC never sets the DCE_REJ bit so it is ok */
      785    25004    3             IF KX$L2.FLG.DCE_REJ AND ( KX$L2.STATE.CURRENT = 4 )

  25004   2 000605  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000607  82C6 002E                            LB,'0100'X        46,B6
          2 000609       0100
          2 00060A  0581 001A                            BBF      s:25014,PREL
          2 00060C  E2C6 001D                            LLH,R6   29,B6
          2 00060E  6D04                                 CMV,R6   4
          2 00060F  0981 0015                            BNE      s:25014,PREL
          2 000611  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 000613  82C5 0007                            LB,'000F'X        7,B5
          2 000615       000F
          2 000616  0501 000E                            BBT      s:25014,PREL

      786    25005    3                AND ( KH$CHN.OTPCCBCNT = 0 )
      787    25006    3                THEN
      788    25007    4                   DO;

      789    25008    4                      FPT_X25.EVN = %KX_F_EV_CL_REJ#;

  25008   2 000618  5C06                                 LDV,R5   6
          2 000619  DF00 0000 000C  01                   STR,R5   FPT_X25

      790    25009    4                      CALL KXF$FRAME ( FPT_X25 );

  25009   2 00061C  BB80 0000 0004  03                   LAB,B3   +4
          2 00061F  CBF0 0100                            LAB,B4   256,IMO
          2 000621  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 000624       0001                            DC       s:25014,PREL

      791    25010    4                   END /* IF */;

      792    25011        /*
      793    25012                                             Try to update the send queues.
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:102  
      794    25013        */
      795    25014    3             IF KX$L2.FLG.OK AND NOT KX$L2.FLG.BLK AND KX$L2.FLG.DATAVL

  25014   2 000625  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000627  82C6 002E                            LB,'0800'X        46,B6
          2 000629       0800
          2 00062A  0581 011C                            BBF      s:25186,PREL
          2 00062C  89C6 002E                            CMZ      46,B6
          2 00062E  0801 0118                            BAL      s:25186,PREL
          2 000630  82C6 002E                            LB,'0002'X        46,B6
          2 000632       0002
          2 000633  0581 0113                            BBF      s:25186,PREL

      796    25015    3                THEN
      797    25016    4                   DO;

      798    25017    4                      FPT_X25.EVN = %KX_F_EV_GETDAT#;

  25017   2 000635  6C0A                                 LDV,R6   10
          2 000636  EF00 0000 000C  01                   STR,R6   FPT_X25

      799    25018    4                      CALL KXF$FRAME ( FPT_X25 );

  25018   2 000639  BB80 0000 0004  03                   LAB,B3   +4
          2 00063C  CBF0 0100                            LAB,B4   256,IMO
          2 00063E  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 000641       0001                            DC       s:25019,PREL

      800    25019    4                   END /* IF */;

  25019   2 000642  0F81 0104                            B        s:25186,PREL

      801    25020        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:103  
      802    25021
      803    25022        /* Lost CTS or DSR                                                            */
      804    25023
      805    25024    3          CASE ( %KX#M_TRNST_LOST_DSR, %KX#M_TRNST_LOST_CTS );

      806    25025    3             KX_LSTDSRCTS = KX_LSTDSRCTS + 1;

  25025   2 000644  8A80 0000 002A  01                   INC      KX_LSTDSRCTS

      807    25026        /*
      808    25027           Set the lost-line-signal clock and a flag in L2 context. If we get
      809    25028           the signal back before the clock expires, proceed as if it never
      810    25029           happened. KXH$LSTSGNCLK will handle the case when the signal
      811    25030           outage is longer than the clock period, and KXF will do a DIE.
      812    25031        */
      813    25032    3             IF KX$L2.FLG.LSTSGNCLK

  25032   2 000647  82C6 002E                            LB,'0001'X        46,B6
  25032   2 000649       0001
          2 00064A  0581 0005                            BBF      s:25038,PREL

      814    25033    3                THEN
      815    25034        /*
      816    25035           The lost-signal-clock is already on. Return.
      817    25036        */
      818    25037    3                   RETURN;

  25037   2 00064C  ECC7 002A                            LDB,B6   TRCX+2,AUTO
          2 00064E  C3C6 0001                            LNJ,B4   1,B6

      819    25038    3             KH@CLK = KH_SETCLK;

  25038   2 000650  AB80 0000 0000  00                   LAB,B2   INVCHN
          2 000653  2C24                                 LDV,R2   36
          2 000654  6C16                                 LDV,R6   22
          2 000655  BB87                                 LAB,B3   ,AUTO
          2 000656  3C24                                 LDV,R3   36
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:104  
          2 000657  0008                                 MMM

      820    25039    3             KH@CLK.UID$ = CHN$;

  25039   2 000658  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 00065A  EFC7 0014                            STB,B6   KH@CLK+2,AUTO

      821    25040    3             KH@CLK.PRD = KX_LSTSGNCLKPRD;

  25040   2 00065C  E800 0000 0023  00                   LDR,R6   KX_LSTSGNCLKPRD
          2 00065F  EF47 001C                            STR,R6   KH@CLK+10,AUTO

      822    25041        /*
      823    25042           Set the L2 context flag here.
      824    25043        */
      825    25044    3             KX$L2.FLG.LSTSGNCLK = '1'B;

  25044   2 000661  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 000663  8945 002E                            LBT,'0001'X       46,B5
          2 000665       0001

      826    25045    3             CALL KHC$CLOCK ( KH@CLK ) ALTRET (KHC_ALTRET);

  25045   2 000666  CBC7 0012                            LAB,B4   KH@CLK,AUTO
          2 000668  CFC7 0030                            STB,B4   BIT_CCBSTT+2,AUTO
          2 00066A  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00066C  CBF0 0100                            LAB,B4   256,IMO
          2 00066E  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 000671       0005                            DC       s:25050,PREL

      827    25046    3             RETURN;

  25046   2 000672  ECC7 002A                            LDB,B6   TRCX+2,AUTO
          2 000674  C3C6 0001                            LNJ,B4   1,B6

      828    25047
      829    25048    3   KHC_ALTRET:
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:105  
      830    25049
      831    25050    3             IF KH@CLK.RESULT = %KH#RES_NOCTB

  25050   2 000676  E2C7 0017            KHC_ALTRET      LLH,R6   KH@CLK+5,AUTO
          2 000678  6D01                                 CMV,R6   1
          2 000679  0981 001B                            BNE      s:25066,PREL

      832    25051    3                THEN
      833    25052    4                   DO;

      834    25053        /*
      835    25054           No timer block can be assigned due to shortage of memory.
      836    25055           The only safe thing to do is to fake the clock expiration.
      837    25056        */
      838    25057    4                      KH@EXP = KH_EXP;

  25057   2 00067B  AB80 0000 0000  00                   LAB,B2   INVCHN
          2 00067E  2C3A                                 LDV,R2   58
          2 00067F  6C0C                                 LDV,R6   12
          2 000680  BB87                                 LAB,B3   ,AUTO
          2 000681  3C3A                                 LDV,R3   58
          2 000682  0008                                 MMM

      839    25058    4                      KH@EXP.UID$ = CHN$;

  25058   2 000683  ECC7 0007                            LDB,B6   CHN$,AUTO
          2 000685  EFC7 001D                            STB,B6   KH@EXP,AUTO

      840    25059    4                      CALL KXH$LSTSGNCLK ( KH@EXP );

  25059   2 000687  DBC7 001D                            LAB,B5   KH@EXP,AUTO
          2 000689  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 00068B  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00068D  CBF0 0100                            LAB,B4   256,IMO
          2 00068F  E380 0000 0000  xent                 LNJ,B6   KXH$LSTSGNCLK
          2 000692       0001                            DC       s:25060,PREL

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:106  
      841    25060    4                   END;

  25060   2 000693  0F81 00B3                            B        s:25186,PREL

      842    25061    3                ELSE
      843    25062    4                   DO;

      844    25063        /*S* SCREECH_CODE: KXH-S$KX_NO_LINSGNCLK#
      845    25064             MESSAGE: Unable to set the lost-line-signal clock.
      846    25065        */
      847    25066    4                      CALL KHD$SCREECH ( Y_NO_LINSGNCLK );

  25066   2 000695  BB80 0000 0006  03                   LAB,B3   +6
          2 000698  CBF0 0100                            LAB,B4   256,IMO
          2 00069A  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00069D       0001                            DC       s:25067,PREL

      848    25067    4                   END;

  25067   2 00069E  0F81 00A8                            B        s:25186,PREL

      849    25068        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:107  
      850    25069
      851    25070        /* Transmitter underrun                                                       */
      852    25071
      853    25072    3          CASE ( %KX#M_TRNST_UNDRUN );

      854    25073        /*
      855    25074                                             Log the error
      856    25075        */
      857    25076                  %WRSYSLOG ( ERRCOD = TRNUND,
      858    25077                  TRMID = KH$CHN.TERMID );

  25093   2 0006A0  DB80 0000 0000                       LAB,B5   0
          2 0006A3  DFC7 0034                            STB,B5   BIT_CCBSTT+6,AUTO
          2 0006A5  CCC7 0007                            LDB,B4   CHN$,AUTO
          2 0006A7  BBC4 0012                            LAB,B3   18,B4
          2 0006A9  BFC7 0032                            STB,B3   BIT_CCBSTT+4,AUTO
          2 0006AB  AB80 0000 0008  00                   LAB,B2   TRNUND
          2 0006AE  AFC7 0030                            STB,B2   BIT_CCBSTT+2,AUTO
          2 0006B0  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0006B2  CBF0 0300                            LAB,B4   768,IMO
          2 0006B4  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 0006B7       0001                            DC       s:25098,PREL

      859    25095        /*
      860    25096                                             Restart the line.
      861    25097        */
      862    25098    3             CALL KXN$CMND ( %KX_N_START_TRN#, KH$CHN );

  25098   2 0006B8  EBF0 0004                            LAB,B6   4,IMO
          2 0006BA  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 0006BC  DFC7 0032                            STB,B5   BIT_CCBSTT+4,AUTO
          2 0006BE  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 0006C0  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0006C2  CBF0 0200                            LAB,B4   512,IMO
          2 0006C4  E380 0000 0000  xent                 LNJ,B6   KXN$CMND
          2 0006C7       0001                            DC       s:25098+16,PREL
          2 0006C8  0F81 007E                            B        s:25186,PREL
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:108  

      863    25099        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:109  
      864    25100
      865    25101        /* A spurious interrupt that no one can figure out                            */
      866    25102
      867    25103    3          CASE ( %KX#M_TRNST_STFR, %KX#M_TRNST_TRN1 );

      868    25104        /*
      869    25105                                             Log the error.
      870    25106        */
      871    25107                  %WRSYSLOG ( ERRCOD = SPRINT,
      872    25108                  TRMID = KH$CHN.TERMID );

  25124   2 0006CA  DB80 0000 0000                       LAB,B5   0
          2 0006CD  DFC7 0034                            STB,B5   BIT_CCBSTT+6,AUTO
          2 0006CF  CCC7 0007                            LDB,B4   CHN$,AUTO
          2 0006D1  BBC4 0012                            LAB,B3   18,B4
          2 0006D3  BFC7 0032                            STB,B3   BIT_CCBSTT+4,AUTO
          2 0006D5  AB80 0000 0006  00                   LAB,B2   SPRINT
          2 0006D8  AFC7 0030                            STB,B2   BIT_CCBSTT+2,AUTO
          2 0006DA  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 0006DC  CBF0 0300                            LAB,B4   768,IMO
          2 0006DE  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 0006E1       0001                            DC       s:25124+24,PREL
          2 0006E2  0F81 0064                            B        s:25186,PREL

      873    25126        %EJECT;
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:110  
      874    25127
      875    25128        /* Unknown state for the transmit CCP                                         */
      876    25129
      877    25130    3          CASE ( ELSE );

      878    25131        /*
      879    25132                                             Unknown state - screech.
      880    25133        */
      881    25134        /*S* SCREECH_CODE: KXH-S$KX_UNKTRNSTT#
      882    25135             MESSAGE: SLCC trap.  Context at KX_SLCC_SPM,.180.
      883    25136        */
      884    25137        /*
      885    25138           We used to screech here. But the code put in to recover from
      886    25139           lost interrupts unfortunately generates extraneous interrupts.
      887    25140           So we will just ignore the interrupt when the transmitter
      888    25141           state is bad.
      889    25142        */
      890    25143    3             IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN EXIT;

  25143   2 0006E4  DCC7 0007                            LDB,B5   CHN$,AUTO
          2 0006E6  E845 0005                            LDR,R6   5,B5
          2 0006E8  E570 0200                            AND,R6   512,IMO
          2 0006EA  6901 005C                            BEZ,R6   s:25186,PREL

      891    25144    3             IF INPLCTBYT.LCTBYT.DAT=%KX#M_TRNST_INIT

  25144   2 0006EC  3D03                                 CMV,R3   3
          2 0006ED  0981 0006                            BNE      s:25149,PREL

      892    25145
      893    25146        /* INIT - SLCC uses it to declare the link up */
      894    25147
      895    25148    3                THEN FPT_X25.EVN = %KX_F_EV_START#;

  25148   2 0006EF  8700 0000 000C  01                   CL       FPT_X25
          2 0006F2  0F81 004B                            B        s:25183,PREL

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:111  
      896    25149    4                ELSE DO CASE (KX$L2S.SLCCSTT);

  25149   2 0006F4  A846 0005                            LDR,R2   5,B6
          2 0006F6  A570 00FF                            AND,R2   255,IMO
          2 0006F8  2D01                                 CMV,R2   1
          2 0006F9  0281 0008                            BGE      s:25154,PREL
          2 0006FB  9820 0000 0701  02                   LDR,R1   s:25149+13,R2
          2 0006FE  8390 0000 0702  02                   JMP      s:25154,R1
          2 000701       0020                            DC       s:25179,PREL

      897    25150    4                      CASE (ELSE);

      898    25151
      899    25152        /* Lost connection somehow - index shows why */
      900    25153
      901    25154    4                         ERCOD = SLCC_ERRCOD (KX$L2S.SLCCSTT);

  25154   2 000702  8CA0 0000 000A  00                   LDI      SLCC_ERRCODS,R2
          2 000705  8D47 0010                            SDI      ERCOD,AUTO

      902    25155                              %WRSYSLOG ( ERRCOD = ERCOD,
      903    25156                              TRMID = KH$CHN.TERMID );

  25172   2 000707  CB80 0000 0000                       LAB,B4   0
          2 00070A  CFC7 0034                            STB,B4   BIT_CCBSTT+6,AUTO
          2 00070C  BBC5 0012                            LAB,B3   18,B5
          2 00070E  BFC7 0032                            STB,B3   BIT_CCBSTT+4,AUTO
          2 000710  ABC7 0010                            LAB,B2   ERCOD,AUTO
          2 000712  AFC7 0030                            STB,B2   BIT_CCBSTT+2,AUTO
          2 000714  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 000716  CBF0 0300                            LAB,B4   768,IMO
          2 000718  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 00071B       0001                            DC       s:25174,PREL

      904    25174    4                         FPT_X25.EVN = %KX_F_EV_DIED#;

  25174   2 00071C  6C02                                 LDV,R6   2
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:112  
          2 00071D  EF00 0000 000C  01                   STR,R6   FPT_X25
          2 000720  0F81 001D                            B        s:25183,PREL

      905    25175    4                      CASE (0);

      906    25176        /*
      907    25177                  The SLCC trapped. Dump it and crash.
      908    25178        */
      909    25179    4                         KH$CHN.DWNLOD = '0'B;

  25179   2 000722  8845 0007                            LBF,'1000'X       7,B5
  25179   2 000724       1000

      910    25180    4                         CALL KXN$CMND ( %KX_N_STOP#, KH$CHN );

  25180   2 000725  DBF0 0005                            LAB,B5   5,IMO
          2 000727  CCC7 0007                            LDB,B4   CHN$,AUTO
          2 000729  CFC7 0032                            STB,B4   BIT_CCBSTT+4,AUTO
          2 00072B  DFC7 0030                            STB,B5   BIT_CCBSTT+2,AUTO
          2 00072D  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00072F  CBF0 0200                            LAB,B4   512,IMO
          2 000731  E380 0000 0000  xent                 LNJ,B6   KXN$CMND
          2 000734       0001                            DC       s:25181,PREL

      911    25181    4                         CALL KHD$SCREECH ( Y_UNKTRNSTT );

  25181   2 000735  BB80 0000 0008  03                   LAB,B3   +8
          2 000738  CBF0 0100                            LAB,B4   256,IMO
          2 00073A  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00073D       0001                            DC       s:25183,PREL

      912    25182    4                   END;

      913    25183    3             CALL KXF$FRAME ( FPT_X25 );

  25183   2 00073E  BB80 0000 0004  03                   LAB,B3   +4
          2 000741  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:113  
          2 000743  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 000746       0001                            DC       s:25186,PREL

      914    25184    3       END /* CASE */;

      915    25185
      916    25186    2       CALL KHC$XEQ2 ( Y@CRTEXCTIM );

  25186   2 000747  EBC7 0026                            LAB,B6   Y@CRTEXCTIM,AUTO
          2 000749  EFC7 0030                            STB,B6   BIT_CCBSTT+2,AUTO
          2 00074B  BBC7 0030                            LAB,B3   BIT_CCBSTT+2,AUTO
          2 00074D  CBF0 0100                            LAB,B4   256,IMO
          2 00074F  E380 0000 0000  xent                 LNJ,B6   KHC$XEQ2
          2 000752       0001                            DC       s:25187,PREL

      917    25187    2       KX_STATS_HDLC.OUT_TCB_TICS = KX_STATS_HDLC.OUT_TCB_TICS + Y@CRTEXCTIM -
             25187                Y@SVDEXCTIM;

  25187   2 000753  8C80 0000 002C  xsym                 LDI      KX_STATS_HDLC+44
          2 000756  8447 0026                            AID      Y@CRTEXCTIM,AUTO
          2 000758  84C7 0024                            SID      Y@SVDEXCTIM,AUTO
          2 00075A  8D00 0000 002C  xsym                 SDI      KX_STATS_HDLC+44

      918    25188
      919    25189    2   END Y$OUTPUT_COMPLETE;

  25189   2 00075D  ECC7 002A                            LDB,B6   TRCX+2,AUTO
          2 00075F  C3C6 0001                            LNJ,B4   1,B6

      920    25190
      921    25191    1   END KXH$INTHND;

  25191   2 000761  C380 0000 0000  xent                 LNJ,B4   X6A_AARET
      922    25192        %EOD;

PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:114  
--  Include file information  --

   K_ADDRESS_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KX_LCT_E.:E05TOU  is referenced.
   KW_SLCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:115  
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXH$INTHND.
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:116  

 **** Variables and constants ****

  ****  Section 000 RoData KXH$INTHND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC(32)    r     1 HRDERR                     0-0-0/w STRC(32)    r     1 INVCHN
    1D-0-0/w STRC(96)    r     1 KH_EXP                    12-0-0/w STRC(176)   r     1 KH_SETCLK
    23-0-0/w UBIN(16)    r     1 KX_LSTSGNCLKPRD            2-0-0/w STRC(32)    r     1 NO_CTX
     A-0-0/w BIT (32)    r     1 SLCC_ERRCOD(0:3)
     A-0-0/w STRC(128)   r     1 SLCC_ERRCODS               6-0-0/w STRC(32)    r     1 SPRINT
     8-0-0/w STRC(32)    r     1 TRNUND                    24-0-0/w STRC(48)    r     1 Y_NO_LINSGNCLK
    27-0-0/w STRC(48)    r     1 Y_UNKTRNSTT

  ****  Section 001  Data  KXH$INTHND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    1C-0-0/w STRC(112)   r     1 FPT_INTRET                 C-0-0/w STRC(256)   r     1 FPT_X25
    30-0-0/w STRC(32)    r     1 INPCCBSTT                  8-0-0/w STRC(32)    r     1 INPLCTBYT
    34-0-0/w STRC(32)    r     1 INPLCTBYT                 36-0-0/w STRC(32)    r     1 INPNXTCCBSTT
    30-0-0/w STRC(32)    r     1 INPRCVCCB                 38-0-0/w STRC(32)    r     1 INPRNG
     A-0-0/w STRC(32)    r     1 INPSLCSTT                 23-0-0/w STRC(112)   r     1 INTRET_WAKEUP
    2B-0-0/w STRC(80)    r     1 IOLD_INPCHN               2A-0-0/w UBIN(16)    r     1 KX_LSTDSRCTS
    32-0-0/w STRC(32)    r     1 OTPCCBPTR                 3A-0-0/w STRC(32)    r     1 OTPCHNCTR_INP
     0-0-0/c STRC(128)   r     1 SYSLOG_TRMID

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    2E-0-0/w UBIN(16)    r     1 BIN_CCBPTR                2E-0-0/w BIT (16)    r     1 BIT_CCBSTT
     E-0-0/w STRC(32)    r     1 CCB                        E-0-0/w PTR         r     1 CCB$
     6-0-0/w UBIN(16)    r     1 CHN                        7-0-0/w PTR         r     1 CHN$
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:117  
     A-0-0/w PTR         r     1 CTX$                       C-0-0/w STRC(32)    r     1 DAT
     C-0-0/w PTR         r     1 DAT$                      10-0-0/w STRC(32)    r     1 ERCOD
     4-0-0/w UBIN(32)    r     1 ERROR                     12-0-0/w STRC(176)   r     1 KH@CLK
    1D-0-0/w STRC(96)    r     1 KH@EXP                    2C-0-0/w PTR         r     1 TEMP$
    2C-0-0/w PTR         r     1 TEMP3$                    28-0-0/w UBIN(16)    r     1 TRCX
    26-0-0/w UBIN(32)    r     1 Y@CRTEXCTIM               24-0-0/w UBIN(32)    r     1 Y@SVDEXCTIM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$HAND_Q$                  0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$UHJIT$                   0-0-0/w UBIN(16)    r     1 KH_CHNHI
     0-0-0/w PTR         r     1 KH_CHNLOW$
     0-0-0/w PTR         r     1 KV_B_POOL$(0:0)
     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/b EPTR        r     1 KX_PM$(0:2)
     0-0-0/w PTR         r     1 KX_RSV_INCCB$(0:5)
     0-0-0/w STRC(800)   r     1 KX_STATS_HDLC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 FRAME_TRACE(0:20)
     0-0-0/w STRC(6480)  r     1 G$UHJIT                    0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(384)   r     1 KNH$QHDR                   0-0-0/w STRC(128)   r     1 KX$CCB
     0-0-0/w STRC(128)   r     1 KX$DATA                    0-0-0/w STRC(144)   r     1 KX$FRAME
     0-0-0/w STRC(352)   r     1 KX$L1                      0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w STRC(4992)  r     1 KX$L2                      0-0-0/w STRC(2032)  r     1 KX$L2S
     0-0-0/w STRC(128)   r     1 KX$TDATA


   Procedure KXH$INTHND requires 1892 words for executable code.
   Procedure KXH$INTHND requires 60 words of local(AUTO) storage.
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:118  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:119  
          MINI XREF LISTING

BIN_CCBPTR IN PROCEDURE Y$INPUT_COMPLETE
     24626**DCL     24670>>ASSIGN  24852<<ASSIGN
BIT_CCBSTT IN PROCEDURE Y$INPUT_COMPLETE
     24625**DCL     24626--REDEF   24650<<ASSIGN  24657>>DOWHILE 24750>>IF      24772<>CALL    24774>>IF
     24831<<ASSIGN
CCB.W
     16505**DCL     24670<<ASSIGN  24910<<ASSIGN  24965<<ASSIGN
CCB$
     16503**DCL     16504--REDEF   21124--IMP-PTR 24635<<ASSIGN  24636>>ASSIGN  24671>>ASSIGN  24681>>ASSIGN
     24681>>ASSIGN  24851>>ASSIGN  24852>>ASSIGN  24853>>ASSIGN  24854>>ASSIGN  24909<<ASSIGN  24911>>IF
     24961>>ASSIGN  24963>>ASSIGN  24964>>ASSIGN  24966>>IF
CHN
     16496**DCL     23085<<ASSIGN  23086>>IF      23091>>ASSIGN  23110<>CALL    23114>>ASSIGN  23139>>IF
     23207>>ASSIGN  23226<>CALL    23235>>IF      24772<>CALL
CHN$
     16497**DCL     16790--IMP-PTR 23114<<ASSIGN  23119>>ASSIGN  23119>>ASSIGN  23128>>ASSIGN  23143>>IF
     23145>>CALL    23147>>CALL    23158<>CALL    23161>>CALL    23161>>CALL    23166>>ASSIGN  23167>>CALL
     23167>>CALL    23184<>CALL    23187>>CALL    23187>>CALL    23191>>CALL    23191>>CALL    23196>>IF
     23200>>CALL    24632>>IF      24643>>CALL    24648>>CALL    24663>>ASSIGN  24663>>ASSIGN  24667>>IF
     24696>>CALL    24704>>ASSIGN  24710>>ASSIGN  24710>>ASSIGN  24725>>CALL    24732>>CALL    24737>>IF
     24740>>CALL    24772>>CALL    24826>>IF      24830>>CALL    24839>>ASSIGN  24845>>ASSIGN  24845>>ASSIGN
     24860>>CALL    24894>>IF      24896>>CALL    24903>>CALL    24940>>ASSIGN  24955>>IF      24997>>CALL
     25004>>IF      25039>>ASSIGN  25058>>ASSIGN  25093>>CALL    25098>>CALL    25124>>CALL    25143>>IF
     25172>>CALL    25179>>ASSIGN  25180>>CALL
CTX$
     16499**DCL     20313--IMP-PTR 20358--IMP-PTR 20725--IMP-PTR 23128<<ASSIGN  23129>>ASSIGN  23130>>IF
     23240>>ASSIGN  23240>>ASSIGN  23289--IMP-PTR 24638>>DOWHILE 24639>>IF      24641>>ASSIGN  24641>>ASSIGN
     24644>>ASSIGN  24644>>ASSIGN  24651>>ASSIGN  24672>>ASSIGN  24680>>ASSIGN  24689>>ASSIGN  24690>>ASSIGN
     24691>>ASSIGN  24692>>ASSIGN  24700>>IF      24703>>ASSIGN  24709>>ASSIGN  24714>>ASSIGN  24786>>ASSIGN
     24787>>ASSIGN  24788>>ASSIGN  24789>>ASSIGN  24791>>ASSIGN  24824>>CALL    24829>>ASSIGN  24835>>IF
     24838>>ASSIGN  24844>>ASSIGN  24849>>ASSIGN  24855>>DOWHILE 24856>>IF      24858>>ASSIGN  24858>>ASSIGN
     24861>>ASSIGN  24861>>ASSIGN  24868>>IF      24868>>IF      24868>>IF      24898>>DOWHILE 24899>>IF
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:120  
     24901>>ASSIGN  24901>>ASSIGN  24904>>ASSIGN  24904>>ASSIGN  24910>>ASSIGN  24911>>IF      24919>>ASSIGN
     24944>>ASSIGN  24951>>ASSIGN  24954>>ASSIGN  24956>>DOWHILE 24957>>IF      24959>>ASSIGN  24959>>ASSIGN
     24961>>ASSIGN  24963>>ASSIGN  24964>>ASSIGN  24965>>ASSIGN  24967>>ASSIGN  24967>>ASSIGN  24968>>ASSIGN
     24968>>ASSIGN  24969>>IF      24969>>IF      24971>>ASSIGN  25004>>IF      25004>>IF      25014>>IF
     25014>>IF      25014>>IF      25032>>IF      25044>>ASSIGN  25149>>DOCASE  25154>>ASSIGN
DAT.W
     16502**DCL     24671<<ASSIGN  24851>>ASSIGN
DAT$
     16500**DCL     16501--REDEF   21148--IMP-PTR 21168--IMP-PTR 21187--IMP-PTR 21188--IMP-PTR 24636<<ASSIGN
     24674>>DOWHILE 24677>>ASSIGN  24678>>IF      24681>>ASSIGN  24691<<ASSIGN  24703>>ASSIGN  24709>>ASSIGN
     24714>>ASSIGN  24715>>ASSIGN  24721>>ASSIGN  24723>>ASSIGN  24724>>ASSIGN  24744<<ASSIGN  24778>>ASSIGN
     24781>>ASSIGN  24786>>ASSIGN  24787>>ASSIGN  24788>>ASSIGN  24789>>ASSIGN  24796>>ASSIGN  24796>>ASSIGN
     24802>>ASSIGN  24805>>ASSIGN  24811>>ASSIGN  24824<>CALL    24829>>ASSIGN  24838>>ASSIGN  24844>>ASSIGN
     24849>>ASSIGN  24850>>ASSIGN  24944<<ASSIGN  24945>>DOWHILE 24950>>ASSIGN  24962>>ASSIGN  24975>>ASSIGN
     24979>>ASSIGN  24980>>IF      24986<>CALL    24991<<ASSIGN
ERCOD
     16520**DCL     25154<<ASSIGN  25172<>CALL
ERROR
     16495**DCL     23161<>CALL    23167<>CALL    23187<>CALL    23191<>CALL
FPT_INTRET
     22354**DCL     23258<>CALL
FPT_INTRET.V
     22358**DCL     22356--DCLINIT
FPT_X25
     22324**DCL     24812<>CALL    24872<>CALL    25009<>CALL    25018<>CALL    25183<>CALL
FPT_X25.EVN
     22328**DCL     24810<<ASSIGN  24871<<ASSIGN  25008<<ASSIGN  25017<<ASSIGN  25148<<ASSIGN  25174<<ASSIGN
FPT_X25.PRM1$
     22329**DCL     22330--REDEF   24781<<ASSIGN  24811<<ASSIGN  24821>>IF
FPT_X25.PRM2$
     22331**DCL     22331--REDEF
FPT_X25.RCV$
     22328**DCL     23129<<ASSIGN
FRAME_TRACE
     21188**DCL     24786>>ASSIGN  24787>>ASSIGN  24788>>ASSIGN  24789>>ASSIGN
G$HAND_Q$
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:121  
     21672**DCL     20288--IMP-PTR 23251>>IF      23251>>IF      23257>>IF      23257>>IF
G$JIT.ERRLOG
     20217**DCL     20220--REDEF
G$JIT.JSUNIT
     19956**DCL     19957--REDEF
G$JIT.MCLS
     19955**DCL     19955--REDEF
G$JIT.TMRZ
     20224**DCL     20225--REDEF
G$JIT.USER_EXTIME
     19948**DCL     19949--REDEF
G$JIT.USER_MEMTIME
     19951**DCL     19951--REDEF
G$JIT.USER_SVTIME
     19950**DCL     19950--REDEF
G$JIT$
     22039**DCL     19887--IMP-PTR
G$UHJIT.ISA_USR
     18339**DCL     18634--REDEF
G$UHJIT.ISA_USR.DEV
     18361**DCL     23085>>ASSIGN
G$UHJIT.ISA_USR.P$$
     18414**DCL     18414--REDEF
G$UHJIT.TSA_CP.ISA.P$$
     19621**DCL     19621--REDEF
G$UHJIT.TSA_CP.P$$
     19492**DCL     19492--REDEF   19493--REDEF
G$UHJIT.TSA_DB.ISA.P$$
     19233**DCL     19233--REDEF
G$UHJIT.TSA_DB.P$$
     19104**DCL     19104--REDEF   19105--REDEF
G$UHJIT.TSA_RTT.P$$
     19867**DCL     19867--REDEF   19868--REDEF
G$UHJIT.TSA_USR.ISA.P$$
     18823**DCL     18823--REDEF
G$UHJIT.TSA_USR.P$$
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:122  
     18694**DCL     18694--REDEF   18695--REDEF
G$UHJIT$
     22038**DCL     16916--IMP-PTR 23085>>ASSIGN
HRDERR
     21314**DCL     24772<>CALL
INPCCBSTT IN PROCEDURE Y$INPUT_COMPLETE
     23722**DCL     23836--REDEF   24648<>CALL
INPCCBSTT.CCBSTT IN PROCEDURE Y$INPUT_COMPLETE
     23793**DCL     24650>>ASSIGN
INPCCBSTT.FNC IN PROCEDURE Y$INPUT_COMPLETE
     23728**DCL     24647<<ASSIGN
INPLCTBYT
     22081**DCL     23145<>CALL    24896<>CALL
INPLCTBYT.LCTBYT
     22097**DCL     23148<<ASSIGN
INPLCTBYT.LCTBYT.ADR
     22097**DCL     23142<<ASSIGN  24893<<ASSIGN
INPLCTBYT.LCTBYT.DAT
     22097**DCL     23150>>DOCASE  24906<<ASSIGN  24919>>ASSIGN  24923>>DOCASE  25144>>IF
INPLCTBYT IN PROCEDURE Y$INPUT_COMPLETE
     24065**DCL     24732<>CALL
INPLCTBYT.LCTBYT.ADR IN PROCEDURE Y$INPUT_COMPLETE
     24081**DCL     24731<<ASSIGN
INPLCTBYT.LCTBYT.DAT IN PROCEDURE Y$INPUT_COMPLETE
     24081**DCL     24734>>IF
INPNXTCCBSTT IN PROCEDURE Y$INPUT_COMPLETE
     24179**DCL     24830<>CALL
INPNXTCCBSTT.CCBSTT IN PROCEDURE Y$INPUT_COMPLETE
     24250**DCL     24831>>ASSIGN
INPRCVCCB IN PROCEDURE Y$INPUT_COMPLETE
     23836**DCL     24643<>CALL
INPRCVCCB.ASNSTT IN PROCEDURE Y$INPUT_COMPLETE
     23845**DCL     23846--REDEF   23852--REDEF   23857--REDEF   23861--REDEF   23865--REDEF   23869--REDEF
     23876--REDEF   23882--REDEF   23888--REDEF   23893--REDEF   23900--REDEF   23903--REDEF   23907--REDEF
     23914--REDEF   23918--REDEF   23922--REDEF   23926--REDEF   23931--REDEF   23935--REDEF
INPRCVCCB.FNC IN PROCEDURE Y$INPUT_COMPLETE
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:123  
     23842**DCL     24637<<ASSIGN
INPRNG IN PROCEDURE Y$INPUT_COMPLETE
     24293**DCL     24696<>CALL
INPRNG.RNG IN PROCEDURE Y$INPUT_COMPLETE
     24314**DCL     24796>>ASSIGN
INPSLCSTT
     22195**DCL     23147<>CALL    24903<>CALL
INPSLCSTT.SLCSTT
     22235**DCL     23148>>ASSIGN  24905>>IF
INPSLCSTT.SLCSTT.INT
     22235**DCL     24906>>ASSIGN  24907>>IF      24907>>IF
INTRET_WAKEUP
     22374**DCL     23254<>CALL
INTRET_WAKEUP.V
     22378**DCL     22376--DCLINIT
INTRTR
     23240**LABEL   23112--GOTO    23172--GOTO    23198--GOTO    23202--GOTO    23228--GOTO
INVCHN
     21212**DCL     23110<>CALL
IOLD_INPCHN IN PROCEDURE Y$INPUT_COMPLETE
     23673**DCL     24725<>CALL
IOLD_INPCHN.BFR_.ADR$ IN PROCEDURE Y$INPUT_COMPLETE
     23706**DCL     24723<<ASSIGN
IOLD_INPCHN.BFR_.BYTSIZ IN PROCEDURE Y$INPUT_COMPLETE
     23706**DCL     24724<<ASSIGN
KH$CHN
     16790**DCL     23114--ASSIGN  23145<>CALL    23147<>CALL    23200<>CALL    24643<>CALL    24648<>CALL
     24696<>CALL    24725<>CALL    24732<>CALL    24740<>CALL    24830<>CALL    24860<>CALL    24896<>CALL
     24903<>CALL    24997<>CALL    25098<>CALL    25180<>CALL
KH$CHN.ATTR
     16823**DCL     23143>>IF      23196>>IF      24632>>IF      24667>>IF      24826>>IF      24894>>IF
     24955>>IF      25143>>IF
KH$CHN.CTX$
     16860**DCL     23128>>ASSIGN
KH$CHN.DED
     16850**DCL     24737>>IF
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:124  
KH$CHN.DWNLOD
     16828**DCL     25179<<ASSIGN
KH$CHN.INPCCBCNT
     16829**DCL     24663<<ASSIGN  24663>>ASSIGN  24704<<ASSIGN  24710<<ASSIGN  24710>>ASSIGN  24839<<ASSIGN
     24845<<ASSIGN  24845>>ASSIGN
KH$CHN.INTCNT
     16866**DCL     23119<<ASSIGN  23119>>ASSIGN
KH$CHN.OTPCCBCNT
     16834**DCL     24940<<ASSIGN  25004>>IF
KH$CHN.TERMID
     16884**DCL     23161<>CALL    23161<>CALL    23167<>CALL    23167<>CALL    23187<>CALL    23187<>CALL
     23191<>CALL    23191<>CALL    24772<>CALL    25093<>CALL    25124<>CALL    25172<>CALL
KH$CHN.TERMID.TERM
     16886**DCL     16895--REDEF
KH$CHN.TERMID.TTYP
     16886**DCL     23166<<ASSIGN
KH@CLK
     16566**DCL     25038<<ASSIGN  25045<>CALL
KH@CLK.PRD
     16687**DCL     25040<<ASSIGN
KH@CLK.RESULT
     16593**DCL     25050>>IF
KH@CLK.UID
     16582**DCL     16583--REDEF   16584--REDEF
KH@CLK.UID$
     16583**DCL     25039<<ASSIGN
KH@EXP
     16715**DCL     25057<<ASSIGN  25059<>CALL
KH@EXP.UID
     16721**DCL     16722--REDEF
KH@EXP.UID$
     16722**DCL     25058<<ASSIGN
KHA$DVCADM
     16469**DCL-ENT 23161--CALL    23167--CALL    23187--CALL    23191--CALL
KHA$TSTCNC
     16470**DCL-ENT 23158--CALL    23184--CALL
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:125  
KHC$CLOCK
     16483**DCL-ENT 25045--CALL
KHC$XEQ2
     16487**DCL-ENT 23234--CALL    24874--CALL    25186--CALL
KHC_ALTRET IN PROCEDURE Y$OUTPUT_COMPLETE
     25050**LABEL   25045--CALLALT
KHD$SCREECH
     16485**DCL-ENT 25066--CALL    25181--CALL
KHI$IOLD
     16471**DCL-ENT 24725--CALL
KHI$IO_INP
     16472**DCL-ENT 23147--CALL    24643--CALL    24648--CALL    24696--CALL    24830--CALL    24903--CALL
KHI$IO_INPLCTBYT
     16473**DCL-ENT 23145--CALL    24732--CALL    24896--CALL
KHI$IO_OTP
     16474**DCL-ENT 24740--CALL    24860--CALL
KH_CHNHI
     22033**DCL     22034--REDEF   23086>>IF
KH_CHNLOW
     22034**DCL     22035--REDEF
KH_CHNLOW$
     22033**DCL     23114>>ASSIGN
KH_EXP
     21838**DCL     25057>>ASSIGN
KH_EXP.UID
     21844**DCL     21845--REDEF
KH_SETCLK
     21689**DCL     25038>>ASSIGN
KH_SETCLK.UID
     21705**DCL     21706--REDEF   21707--REDEF
KNH$QHDR.RCQ
     20288**DCL     20288--REDEF
KNH$QHDR.RCQ.IPTR
     20288**DCL     23251>>IF
KNH$QHDR.RCQ.RPTR
     20288**DCL     23251>>IF
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:126  
KNH$QHDR.SCQ.IPTR
     20289**DCL     23257>>IF
KNH$QHDR.SCQ.RPTR
     20289**DCL     23257>>IF
KV_B_POOL$
     22381**DCL     24635>>ASSIGN  24909>>ASSIGN
KX$CCB.CCB_TAIL
     21132**DCL     24854>>ASSIGN
KX$CCB.DATA_ADR
     21129**DCL     24671>>ASSIGN  24851<<ASSIGN
KX$CCB.LNK.FEP
     21129**DCL     24961>>ASSIGN
KX$CCB.LNK.SLCC
     21128**DCL     24852>>ASSIGN  24853<<ASSIGN  24911>>IF      24966>>IF
KX$CCB.LNK$
     21128**DCL     21128--REDEF   24963<<ASSIGN
KX$CCB.RANGE
     21129**DCL     24681>>ASSIGN
KX$CCB.R_RANGE
     21130**DCL     24681>>ASSIGN
KX$DATA
     21148**DCL     23706--DCLINIT 24671--ASSIGN  24786--ASSIGN  24787--ASSIGN  24788--ASSIGN  24789--ASSIGN
     24851--ASSIGN
KX$DATA.BFRSIZ
     21151**DCL     24724>>ASSIGN  24796>>ASSIGN
KX$DATA.CNT
     21151**DCL     24681<<ASSIGN  24778<<ASSIGN  24796<<ASSIGN  24805>>ASSIGN  24975>>ASSIGN
KX$DATA.NEXT$
     21150**DCL     24674>>DOWHILE 24675>>ASSIGN  24677<<ASSIGN  24677>>ASSIGN  24678>>IF      24715<<ASSIGN
     24802<<ASSIGN  24850<<ASSIGN  24950>>ASSIGN
KX$DATA.RLS.L1
     21151**DCL     24979<<ASSIGN
KX$DATA.RLS.L2
     21151**DCL     24962<<ASSIGN
KX$DATA.RLS_STAT
     21150**DCL     21151--REDEF   24980>>IF
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:127  
KX$FRAME.ADR
     21175**DCL     24721<<ASSIGN
KX$FRAME.CTL
     21175**DCL     21175--REDEF
KX$FRAME.RLS_STAT
     21170**DCL     21171--REDEF
KX$L1.BUF_SIZE
     20332**DCL     24691>>ASSIGN  24692>>ASSIGN  24824>>CALL    24829>>ASSIGN
KX$L1.IN_CCB_HEAD$
     20334**DCL     24672--ASSIGN  24689>>ASSIGN  24690<<ASSIGN  24700>>IF      24703<<ASSIGN  24835>>IF
     24838<<ASSIGN
KX$L1.IN_CCB_TAIL$
     20334**DCL     24680<<ASSIGN  24709>>ASSIGN  24714<<ASSIGN  24844>>ASSIGN  24849<<ASSIGN
KX$L1.OUT_CCB_HEAD$
     20334**DCL     24911>>IF      24944>>ASSIGN  24951<<ASSIGN
KX$L1.OUT_CCB_TAIL$
     20335**DCL     24954<<ASSIGN
KX$L1.TRNST
     20333**DCL     24919<<ASSIGN
KX$L2.DFLVCPRF.TRADEL
     20498**DCL     20508--REDEF
KX$L2.DSTSNPA.ADR_STRING
     20689**DCL     20689--REDEF
KX$L2.FLG.BLK
     20401**DCL     25014>>IF
KX$L2.FLG.DATAVL
     20404**DCL     25014>>IF
KX$L2.FLG.DCE_REJ
     20402**DCL     25004>>IF
KX$L2.FLG.LSTSGNCLK
     20405**DCL     25032>>IF      25044<<ASSIGN
KX$L2.FLG.OK
     20402**DCL     25014>>IF
KX$L2.FRMR_NSNR
     20475**DCL     20476--REDEF
KX$L2.IDL_CLK
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:128  
     20478**DCL     23240<<ASSIGN
KX$L2.IDL_PRD
     20477**DCL     23240>>ASSIGN
KX$L2.NTWADR.ADR_STRING
     20409**DCL     20409--REDEF
KX$L2.STATE.CURRENT
     20388**DCL     25004>>IF
KX$L2.STATES
     20387**DCL     20387--REDEF
KX$L2.DFLVCPRF.TRADEL IN PROCEDURE Y$INPUT_COMPLETE
     23429**DCL     23439--REDEF
KX$L2.DSTSNPA.ADR_STRING IN PROCEDURE Y$INPUT_COMPLETE
     23620**DCL     23620--REDEF
KX$L2.FLG.BLK IN PROCEDURE Y$INPUT_COMPLETE
     23332**DCL     24868>>IF
KX$L2.FLG.DATAVL IN PROCEDURE Y$INPUT_COMPLETE
     23335**DCL     24868>>IF
KX$L2.FLG.OK IN PROCEDURE Y$INPUT_COMPLETE
     23333**DCL     24868>>IF
KX$L2.FRMR_NSNR IN PROCEDURE Y$INPUT_COMPLETE
     23406**DCL     23407--REDEF
KX$L2.NTWADR.ADR_STRING IN PROCEDURE Y$INPUT_COMPLETE
     23340**DCL     23340--REDEF
KX$L2.STATES IN PROCEDURE Y$INPUT_COMPLETE
     23318**DCL     23318--REDEF
KX$L2.TRC IN PROCEDURE Y$INPUT_COMPLETE
     23629**DCL     24786<<ASSIGN  24787<<ASSIGN  24788<<ASSIGN  24789<<ASSIGN
KX$L2.TRCX IN PROCEDURE Y$INPUT_COMPLETE
     23629**DCL     24651>>ASSIGN  24791<<ASSIGN
KX$L2S.CCBHD$
     20796**DCL     24963>>ASSIGN  24964<<ASSIGN
KX$L2S.DFLVCPRF.TRADEL
     20895**DCL     20905--REDEF
KX$L2S.DSTSNPA.ADR_STRING
     21086**DCL     21086--REDEF
KX$L2S.FLG.BLK
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:129  
     20798**DCL     24971<<ASSIGN
KX$L2S.FRMR_NSNR
     20872**DCL     20873--REDEF
KX$L2S.I_CNT
     20803**DCL     24968<<ASSIGN  24968>>ASSIGN  24969>>IF
KX$L2S.K
     20751**DCL     24969>>IF
KX$L2S.NTWADR.ADR_STRING
     20806**DCL     20806--REDEF
KX$L2S.P_CCB.LNK$
     20786**DCL     20786--REDEF
KX$L2S.SLCCSTT
     20745**DCL     25149>>DOCASE  25154>>ASSIGN
KX$L2S.STATES
     20754**DCL     20754--REDEF
KX$L2S.XMTCCB.HEAD
     21097**DCL     24910>>ASSIGN  24961<<ASSIGN  24965>>ASSIGN
KX$L2S.XMTCCB.LOCK
     21098**DCL     24638>>DOWHILE 24639>>IF      24641<<ASSIGN  24641>>ASSIGN  24644<<ASSIGN  24644>>ASSIGN
     24855>>DOWHILE 24856>>IF      24858<<ASSIGN  24858>>ASSIGN  24861<<ASSIGN  24861>>ASSIGN  24898>>DOWHILE
     24899>>IF      24901<<ASSIGN  24901>>ASSIGN  24904<<ASSIGN  24904>>ASSIGN  24956>>DOWHILE 24957>>IF
     24959<<ASSIGN  24959>>ASSIGN  24967<<ASSIGN  24967>>ASSIGN
KX$TDATA.NEXT$ IN PROCEDURE Y$INPUT_COMPLETE
     23653**DCL     24690>>ASSIGN  24709<<ASSIGN  24844<<ASSIGN
KX$TDATA.RLS_STAT IN PROCEDURE Y$INPUT_COMPLETE
     23653**DCL     23654--REDEF
KXF$FRAME
     16475**DCL-ENT 24812--CALL    24872--CALL    25009--CALL    25018--CALL    25183--CALL
KXH$LSTSGNCLK
     16482**DCL-ENT 21806--DCLINIT 25059--CALL
KXN$CMND
     16476**DCL-ENT 23200--CALL    24997--CALL    25098--CALL    25180--CALL
KXS$GETBFR
     16477**DCL-ENT 24824--CALL
KXS$RLSBFR
     16478**DCL-ENT 24986--CALL
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:130  
KXS$SYSLOG
     16480**DCL-ENT 23110--CALL    23226--CALL    24772--CALL    25093--CALL    25124--CALL    25172--CALL
KX_BUF.SIZ
     22398**DCL     24724>>ASSIGN  24796>>ASSIGN  24824<>CALL
KX_LSTDSRCTS
     23072**DCL     25025<<ASSIGN  25025>>ASSIGN
KX_LSTSGNCLKPRD
     21890**DCL     25040>>ASSIGN
KX_RSV_INCCB$
     22399**DCL     24691>>ASSIGN  24692<<ASSIGN  24829<<ASSIGN
KX_STATS_HDLC.BYTES_IN
     22722**DCL     24805<<ASSIGN  24805>>ASSIGN
KX_STATS_HDLC.BYTES_OUT
     22722**DCL     24975<<ASSIGN  24975>>ASSIGN
KX_STATS_HDLC.FRAMES_IN
     22722**DCL     24804<<ASSIGN  24804>>ASSIGN
KX_STATS_HDLC.FRAMES_OUT
     22723**DCL     24974<<ASSIGN  24974>>ASSIGN
KX_STATS_HDLC.IN_TCB_COUNT
     22726**DCL     24628<<ASSIGN  24628>>ASSIGN
KX_STATS_HDLC.IN_TCB_TICS
     22725**DCL     24875<<ASSIGN  24875>>ASSIGN
KX_STATS_HDLC.OUT_TCB_COUNT
     22726**DCL     24890<<ASSIGN  24890>>ASSIGN
KX_STATS_HDLC.OUT_TCB_TICS
     22725**DCL     25187<<ASSIGN  25187>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     22669**DCL     22675--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     22710**DCL     22717--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     22994**DCL     23000--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     23035**DCL     23042--REDEF
NO_CTX
     21263**DCL     23226<>CALL
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:131  
OTPCCBPTR IN PROCEDURE Y$INPUT_COMPLETE
     23950**DCL     24860<>CALL
OTPCCBPTR.CCBPTR IN PROCEDURE Y$INPUT_COMPLETE
     24032**DCL     24854<<ASSIGN
OTPCHNCTR_INP IN PROCEDURE Y$INPUT_COMPLETE
     24408**DCL     24740<>CALL
SLCC_ERRCOD
     21670**DCL     25154>>ASSIGN
SLCC_ERRCODS
     21473**DCL     21670--REDEF
SPRINT
     21387**DCL     25124<>CALL
SYSLOG_TRMID
     22054**DCL     23089<<ASSIGN  23110<>CALL    23205<<ASSIGN  23226<>CALL
SYSLOG_TRMID.TERM
     22058**DCL     22067--REDEF
SYSLOG_TRMID.TERM.CHANNEL
     22064**DCL     23091<<ASSIGN  23207<<ASSIGN
SYSLOG_TRMID.TTYP
     22058**DCL     23090<<ASSIGN  23206<<ASSIGN
TEMP$ IN PROCEDURE Y$INPUT_COMPLETE
     24052**DCL     24672<<ASSIGN  24674>>DOWHILE 24675<<ASSIGN  24675>>ASSIGN  24677>>ASSIGN  24680>>ASSIGN
     24689<<ASSIGN  24690>>ASSIGN  24744>>ASSIGN
TEMP3$ IN PROCEDURE Y$OUTPUT_COMPLETE
     24888**DCL     24950<<ASSIGN  24951>>ASSIGN  24952>>IF      24954>>ASSIGN  24966<<ASSIGN  24991>>ASSIGN
TRCX
     16767**DCL     24651<<ASSIGN  24786>>ASSIGN  24787>>ASSIGN  24788>>ASSIGN  24789>>ASSIGN  24790<<ASSIGN
     24790>>ASSIGN  24791>>ASSIGN
TRNUND
     21438**DCL     25093<>CALL
X6A_INTRET
     16484**DCL-ENT 23254--CALL    23258--CALL    23259--CALL
Y$DATA_IN IN PROCEDURE Y$INPUT_COMPLETE
     24796**LABEL   24682--GOTO    24779--GOTO
Y$INPUT_COMPLETE
     23269**PROC    23239--CALL
PL6.E3A0      #001=KXH$INTHND File=KXH$INTHND.:E05TSI                            WED 07/30/97 02:20 Page:132  
Y$OUTPUT_COMPLETE
     24886**PROC    23237--CALL
Y@CRTEXCTIM
     16766**DCL     24874<>CALL    24875>>ASSIGN  25186<>CALL    25187>>ASSIGN
Y@SVDEXCTIM
     16765**DCL     23234<>CALL    24875>>ASSIGN  25187>>ASSIGN
Y_NO_LINSGNCLK
     21918**DCL     25066<>CALL
Y_UNKTRNSTT
     21979**DCL     25181<>CALL

PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:133  
      923        1        /*T***********************************************************/
      924        2        /*T*                                                         */
      925        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      926        4        /*T*                                                         */
      927        5        /*T***********************************************************/
      928        6        %EJECT;
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:134  
      929        7
      930        8        /*I*
      931        9            NAME: KXH$LSTSGNCLK
      932       10            PURPOSE: To handle expiration of the lost-line-signal clock.
      933       11            CALL: called from clock services with argument KH$EXP.
      934       12        */
      935       13
      936       14        KXH$LSTSGNCLK: PROC (KH@EXP);
      937       15
      938       16        %INCLUDE LCP_6;
      939     4295        %INCLUDE KX_MACROS_M;
      940     5066        %INCLUDE KH$CLK;
      941     5436        %INCLUDE KH$CHN;
      942     5558        %INCLUDE KH$IO;
      943     5805        %INCLUDE KW_LCT_E;
      944     6160        %INCLUDE KW_SLCT_E;
      945     6336        %INCLUDE KX_LCT_E;
      946     6457        %INCLUDE KX_EQUS_E;
      947     6896        %INCLUDE KX_DATA_C;
      948     6964        %INCLUDE G_JIT_M;
      949     7229        %INCLUDE KL_CONTROL_C;
      950     7609        %INCLUDE KH_MACRO_C;
      951     8352        %INCLUDE KL_MACRO_C;
      952    11704        %INCLUDE KL_AFCN_C;
      953    11805        %INCLUDE KV_GLBCNS_E;
      954    12146        %INCLUDE KL_SUPER_C;
      955    15048        %KV#CQ_HNDID_E;
      956    15053        %INCLUDE GH_IOFNC_E;
      957    15122
      958    15123        %INCLUDE KX_PERR_C;
      959    15252        %INCLUDE K_ADDRESS_M;
      960    15755        %INCLUDE KNH_MACRO_C;
      961    16038        %KH$EXP ( FPTN = KH@EXP, STCLASS = );
      962    16101        %KH$CHN ( STCLASS = "BASED (KH@EXP.UID$)" );
      963    16225        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT );
      964    16339        %KH$IO ( FPTN = OTPCHNCTR_OTP, STCLASS = STATIC, FNC = %GH#IO_OTPCHNCTR,
      965    16340                  STRIO = YES, OTPCHN = YES );
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:135  
      966    16454        %KX_DATA;
      967    17144        %KX$L2;
      968    17511        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
      969    17925    1   DCL G$JIT$ PTR SYMREF;
      970    17926        %B$TERMINAL_ID ( FPTN = SYSLOG_TRMID, STCLASS = STATIC, LVL = 1 );
      971    17955        %FPT_X25 ( STCLASS = AUTO );
      972    17999    1   DCL LEVEL UBIN;
      973    18000    1   DCL BASED_WORD UBIN BASED;
      974    18001        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = SYMREF );
      975    18213    1   DCL KHI$DISABLE ENTRY (1);
      976    18214    1   DCL KHI$ENABLE ENTRY;
      977    18215    1   DCL KHI$IO_OTP ENTRY (2);
      978    18216
      979    18217    1   DCL KXF$FRAME ENTRY (1) ALTRET;
      980    18218    1   DCL KXS$SYSLOG ENTRY (7);
      981    18219    1   DCL KXS$Q_SYSLOG ENTRY (1);
      982    18220    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      983    18221    1   DCL KHI$IO_INPLCTBYT ENTRY (2);
      984    18222
      985    18223        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_BAD_HARD#,
      986    18224                           FPTN = LSTDSRCTS,
      987    18225                           ERR# = %E_KXH_LSTDSRCTS# );
      988    18271
      989    18272            %DISABLE;
      990    18275    1       IF KH$CHN.CTX$ = ADDR(NIL)
      991    18276    1          THEN
      992    18277        /*
      993    18278           There is not L2 context. Nothing to do.
      994    18279        */
      995    18280    1             GOTO ENABLE_RETURN;
      996    18281    1       IF NOT KH$CHN.CTX$->KX$L2.FLG.LSTSGNCLK
      997    18282    1          THEN
      998    18283        /*
      999    18284           Beats me how we get here with the flag off!
     1000    18285        */
     1001    18286    1             GOTO ENABLE_RETURN;
     1002    18287    1       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:136  
     1003    18288    1          THEN
     1004    18289    1             GOTO DIED;
     1005    18290        /*
     1006    18291            The SLCC has already decided to give up.
     1007    18292        */
     1008    18293        /*
     1009    18294           The transmitter is sitting at a WAIT with scan turned off. Issue
     1010    18295           a STRIO and see what state we end up at.
     1011    18296        */
     1012    18297    1       CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTP );
     1013    18298
     1014    18299        /*
     1015    18300           Input the transmitter status. If it is WAIT, LSTDSR or LSTCTS,
     1016    18301           the line signals have not come back. Go ahead with a die.
     1017    18302        */
     1018    18303    1       INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;
     1019    18304    1       CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );
     1020    18305
     1021    18306    1       IF INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_WAIT
     1022    18307    1          OR INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_LOST_DSR
     1023    18308    1          OR INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_LOST_CTS
     1024    18309    1          THEN
     1025    18310    2             DO;
     1026    18311    2   DIED:        ;
     1027    18312        /*
     1028    18313                                             Log the loss.
     1029    18314        */
     1030    18315                     %WRSYSLOG ( ERRCOD = LSTDSRCTS,
     1031    18316                     TRMID = KH$CHN.TERMID );
     1032    18334        /*
     1033    18335           Let the frame level know that the line has died.
     1034    18336        */
     1035    18337    2                FPT_X25 = '0'B;
     1036    18338    2                FPT_X25.EVN = %KX_F_EV_DIED#;
     1037    18339    2                FPT_X25.RCV$ = KH$CHN.CTX$;
     1038    18340    2                CALL KXF$FRAME ( FPT_X25 );
     1039    18341    2             END;
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:137  
     1040    18342    1          ELSE
     1041    18343    1             KH$CHN.CTX$->KX$L2.FLG.LSTSGNCLK = '0'B;
     1042    18344    1   ENABLE_RETURN:
     1043    18345            %ENABLE;
     1044    18348    1       RETURN;
     1045    18349
     1046    18350    1   END KXH$LSTSGNCLK;

PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:138  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KX_LCT_E.:E05TOU  is referenced.
   KW_SLCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXH$LSTSGNCLK.

   Procedure KXH$LSTSGNCLK requires 174 words for executable code.
   Procedure KXH$LSTSGNCLK requires 30 words of local(AUTO) storage.
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:139  

    No errors detected in file KXH$INTHND.:E05TSI    .

PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:140  

 Object Unit name= KXH$LSTSGNCLK                              File name= KXH$INTHND.:E05TOU
 UTS= JUL 30 '97 02:22:28.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    12      C  KXH$LSTSGNCLK
    1  RoData even  UTS      2      2  KXH$LSTSGNCLK
    2   Proc  even  none   174     AE  KXH$LSTSGNCLK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KXH$LSTSGNCLK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHI$DISABLE
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       1 KXF$FRAME
         yes           Std       0 KHI$ENABLE
         yes           Std       2 KHI$IO_OTP
         yes           Std       2 KHI$IO_INPLCTBYT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:141  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_PM$                                G$JIT$                                KH_CTLTBL
r    G$ROS$
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:142  


      923        1        /*T***********************************************************/
      924        2        /*T*                                                         */
      925        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      926        4        /*T*                                                         */
      927        5        /*T***********************************************************/
      928        6        %EJECT;
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:143  
      929        7
      930        8        /*I*
      931        9            NAME: KXH$LSTSGNCLK
      932       10            PURPOSE: To handle expiration of the lost-line-signal clock.
      933       11            CALL: called from clock services with argument KH$EXP.
      934       12        */
      935       13
      936       14        KXH$LSTSGNCLK: PROC (KH@EXP);

     14   2 000000  D380 0000 0000  xent KXH$LSTSGNCLK   LNJ,B5   X6A_AUTO_1
          2 000003       001E 0001                       DC       30,1

      937       15
      938       16        %INCLUDE LCP_6;
      939     4295        %INCLUDE KX_MACROS_M;
      940     5066        %INCLUDE KH$CLK;
      941     5436        %INCLUDE KH$CHN;
      942     5558        %INCLUDE KH$IO;
      943     5805        %INCLUDE KW_LCT_E;
      944     6160        %INCLUDE KW_SLCT_E;
      945     6336        %INCLUDE KX_LCT_E;
      946     6457        %INCLUDE KX_EQUS_E;
      947     6896        %INCLUDE KX_DATA_C;
      948     6964        %INCLUDE G_JIT_M;
      949     7229        %INCLUDE KL_CONTROL_C;
      950     7609        %INCLUDE KH_MACRO_C;
      951     8352        %INCLUDE KL_MACRO_C;
      952    11704        %INCLUDE KL_AFCN_C;
      953    11805        %INCLUDE KV_GLBCNS_E;
      954    12146        %INCLUDE KL_SUPER_C;
      955    15048        %KV#CQ_HNDID_E;
      956    15053        %INCLUDE GH_IOFNC_E;
      957    15122
      958    15123        %INCLUDE KX_PERR_C;
      959    15252        %INCLUDE K_ADDRESS_M;
      960    15755        %INCLUDE KNH_MACRO_C;
      961    16038        %KH$EXP ( FPTN = KH@EXP, STCLASS = );
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:144  
      962    16101        %KH$CHN ( STCLASS = "BASED (KH@EXP.UID$)" );
      963    16225        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT );
      964    16339        %KH$IO ( FPTN = OTPCHNCTR_OTP, STCLASS = STATIC, FNC = %GH#IO_OTPCHNCTR,
      965    16340                  STRIO = YES, OTPCHN = YES );
      966    16454        %KX_DATA;
      967    17144        %KX$L2;
      968    17511        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
      969    17925    1   DCL G$JIT$ PTR SYMREF;
      970    17926        %B$TERMINAL_ID ( FPTN = SYSLOG_TRMID, STCLASS = STATIC, LVL = 1 );
      971    17955        %FPT_X25 ( STCLASS = AUTO );
      972    17999    1   DCL LEVEL UBIN;
      973    18000    1   DCL BASED_WORD UBIN BASED;
      974    18001        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = SYMREF );
      975    18213    1   DCL KHI$DISABLE ENTRY (1);
      976    18214    1   DCL KHI$ENABLE ENTRY;
      977    18215    1   DCL KHI$IO_OTP ENTRY (2);
      978    18216
      979    18217    1   DCL KXF$FRAME ENTRY (1) ALTRET;
      980    18218    1   DCL KXS$SYSLOG ENTRY (7);
      981    18219    1   DCL KXS$Q_SYSLOG ENTRY (1);
      982    18220    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      983    18221    1   DCL KHI$IO_INPLCTBYT ENTRY (2);
      984    18222
      985    18223        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='H',SEV=%G_WRSYSLOG_SEV_BAD_HARD#,
      986    18224                           FPTN = LSTDSRCTS,
      987    18225                           ERR# = %E_KXH_LSTDSRCTS# );
      988    18271
      989    18272            %DISABLE;

  18273   2 000005  EC80 0000 0002  xsym                 LDB,B6   KH_CTLTBL+2
          2 000008  E806                                 LDR,R6   ,B6
          2 000009  EF47 0016                            STR,R6   LEVEL,AUTO

  18273   2 00000B  DBC7 0016                            LAB,B5   LEVEL,AUTO
          2 00000D  DFC7 0018                            STB,B5   LEVEL+2,AUTO
          2 00000F  BBC7 0018                            LAB,B3   LEVEL+2,AUTO
          2 000011  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:145  
          2 000013  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 000016       0001                            DC       s:18275,PREL

      990    18275    1       IF KH$CHN.CTX$ = ADDR(NIL)

  18275   2 000017  ECC7 0004                            LDB,B6   @KH@EXP,AUTO
          2 000019  DC86                                 LDB,B5   ,B6
          2 00001A  8DC5 000C                            CMN      12,B5
          2 00001C  0901 0080                            BE       s:18346,PREL

      991    18276    1          THEN
      992    18277        /*
      993    18278           There is not L2 context. Nothing to do.
      994    18279        */
      995    18280    1             GOTO ENABLE_RETURN;
      996    18281    1       IF NOT KH$CHN.CTX$->KX$L2.FLG.LSTSGNCLK

  18281   2 00001E  CCC5 000C                            LDB,B4   12,B5
          2 000020  82C4 002E                            LB,'0001'X        46,B4
          2 000022       0001
          2 000023  0581 0079                            BBF      s:18346,PREL

      997    18282    1          THEN
      998    18283        /*
      999    18284           Beats me how we get here with the flag off!
     1000    18285        */
     1001    18286    1             GOTO ENABLE_RETURN;
     1002    18287    1       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC

  18287   2 000025  E845 0005                            LDR,R6   5,B5
          2 000027  E570 0200                            AND,R6   512,IMO
          2 000029  6981 0033                            BNEZ,R6  s:18310,PREL

     1003    18288    1          THEN
     1004    18289    1             GOTO DIED;
     1005    18290        /*
     1006    18291            The SLCC has already decided to give up.
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:146  
     1007    18292        */
     1008    18293        /*
     1009    18294           The transmitter is sitting at a WAIT with scan turned off. Issue
     1010    18295           a STRIO and see what state we end up at.
     1011    18296        */
     1012    18297    1       CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTP );

  18297   2 00002B  BB80 0000 0002  00                   LAB,B3   OTPCHNCTR_OTP
          2 00002E  BFC7 001A                            STB,B3   LEVEL+4,AUTO
          2 000030  DFC7 0018                            STB,B5   LEVEL+2,AUTO
          2 000032  BBC7 0018                            LAB,B3   LEVEL+2,AUTO
          2 000034  CBF0 0200                            LAB,B4   512,IMO
          2 000036  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000039       0001                            DC       s:18303,PREL

     1013    18298
     1014    18299        /*
     1015    18300           Input the transmitter status. If it is WAIT, LSTDSR or LSTCTS,
     1016    18301           the line signals have not come back. Go ahead with a die.
     1017    18302        */
     1018    18303    1       INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;

  18303   2 00003A  6C38                                 LDV,R6   56
          2 00003B  EA80 0000 0001  00                   SRM,R6,'00FF'X    INPLCTBYT+1
          2 00003E       00FF

     1019    18304    1       CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );

  18304   2 00003F  ECC7 0004                            LDB,B6   @KH@EXP,AUTO
          2 000041  DC86                                 LDB,B5   ,B6
          2 000042  CB80 0000 0000  00                   LAB,B4   INPLCTBYT
          2 000045  CFC7 001A                            STB,B4   LEVEL+4,AUTO
          2 000047  DFC7 0018                            STB,B5   LEVEL+2,AUTO
          2 000049  BBC7 0018                            LAB,B3   LEVEL+2,AUTO
          2 00004B  CBF0 0200                            LAB,B4   512,IMO
          2 00004D  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 000050       0001                            DC       s:18306,PREL
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:147  

     1020    18305
     1021    18306    1       IF INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_WAIT

  18306   2 000051  E280 0000 0001  00                   LLH,R6   INPLCTBYT+1
          2 000054  6D02                                 CMV,R6   2
          2 000055  0901 0007                            BE       s:18310,PREL
          2 000057  6D0D                                 CMV,R6   13
          2 000058  0901 0004                            BE       s:18310,PREL
          2 00005A  6D0E                                 CMV,R6   14
          2 00005B  0981 0039                            BNE      s:18343,PREL

     1022    18307    1          OR INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_LOST_DSR
     1023    18308    1          OR INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_LOST_CTS
     1024    18309    1          THEN
     1025    18310    2             DO;

  18308   2                              DIED            null
     1026    18311    2   DIED:        ;
     1027    18312        /*
     1028    18313                                             Log the loss.
     1029    18314        */
     1030    18315                     %WRSYSLOG ( ERRCOD = LSTDSRCTS,
     1031    18316                     TRMID = KH$CHN.TERMID );

  18332   2 00005D  ECC7 0004            DIED            LDB,B6   @KH@EXP,AUTO
          2 00005F  DC86                                 LDB,B5   ,B6
          2 000060  CB80 0000 0000                       LAB,B4   0
          2 000063  CFC7 001C                            STB,B4   LEVEL+6,AUTO
          2 000065  BBC5 0012                            LAB,B3   18,B5
          2 000067  BFC7 001A                            STB,B3   LEVEL+4,AUTO
          2 000069  DB80 0000 0000  01                   LAB,B5   LSTDSRCTS
          2 00006C  DFC7 0018                            STB,B5   LEVEL+2,AUTO
          2 00006E  BBC7 0018                            LAB,B3   LEVEL+2,AUTO
          2 000070  CBF0 0300                            LAB,B4   768,IMO
          2 000072  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 000075       0001                            DC       s:18337,PREL
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:148  

     1032    18334        /*
     1033    18335           Let the frame level know that the line has died.
     1034    18336        */
     1035    18337    2                FPT_X25 = '0'B;

  18337   2 000076  5C20                                 LDV,R5   32
          2 000077  0021                                 ALR      ;
          2 000078       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 00007A       4007 0006                                ALPHANUM(FPT_X25,AUTO,,R5,FILL)

     1036    18338    2                FPT_X25.EVN = %KX_F_EV_DIED#;

  18338   2 00007C  6C02                                 LDV,R6   2
          2 00007D  437F                                 CSYNC    s:18338,SPREL
          2 00007E  EF47 0006                            STR,R6   FPT_X25,AUTO

     1037    18339    2                FPT_X25.RCV$ = KH$CHN.CTX$;

  18339   2 000080  ECC7 0004                            LDB,B6   @KH@EXP,AUTO
          2 000082  DC86                                 LDB,B5   ,B6
          2 000083  CCC5 000C                            LDB,B4   12,B5
          2 000085  CFC7 0009                            STB,B4   FPT_X25+3,AUTO

     1038    18340    2                CALL KXF$FRAME ( FPT_X25 );

  18340   2 000087  DBC7 0006                            LAB,B5   FPT_X25,AUTO
          2 000089  DFC7 0018                            STB,B5   LEVEL+2,AUTO
          2 00008B  BBC7 0018                            LAB,B3   LEVEL+2,AUTO
          2 00008D  CBF0 0100                            LAB,B4   256,IMO
          2 00008F  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 000092       0001                            DC       s:18341,PREL

     1039    18341    2             END;

  18341   2 000093  0F81 0009                            B        s:18346,PREL

PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:149  
     1040    18342    1          ELSE
     1041    18343    1             KH$CHN.CTX$->KX$L2.FLG.LSTSGNCLK = '0'B;

  18343   2 000095  ECC7 0004                            LDB,B6   @KH@EXP,AUTO
          2 000097  DC86                                 LDB,B5   ,B6
          2 000098  CCC5 000C                            LDB,B4   12,B5
          2 00009A  8844 002E                            LBF,'0001'X       46,B4
          2 00009C       0001

     1042    18344    1   ENABLE_RETURN:
     1043    18345            %ENABLE;

  18346   2 00009D  EC80 0000 0002  xsym ENABLE_RETURN   LDB,B6   KH_CTLTBL+2
          2 0000A0  E847 0016                            LDR,R6   LEVEL,AUTO
          2 0000A2  E906                                 CMR,R6   ,B6
          2 0000A3  0901 0007                            BE       s:18348,PREL

  18346   2 0000A5  CBF0 0000                            LAB,B4   0,IMO
          2 0000A7  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0000AA       0001                            DC       s:18348,PREL

     1044    18348    1       RETURN;

  18348   2 0000AB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1045    18349
     1046    18350    1   END KXH$LSTSGNCLK;

PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:150  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KX_LCT_E.:E05TOU  is referenced.
   KW_SLCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KXH$LSTSGNCLK.
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:151  

 **** Variables and constants ****

  ****  Section 000  Data  KXH$LSTSGNCLK

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 INPLCTBYT                  2-0-0/w STRC(32)    r     1 OTPCHNCTR_OTP

  ****  Section 001 RoData KXH$LSTSGNCLK

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 LSTDSRCTS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KH@EXP                    6-0-0/w STRC(256)   r     1 FPT_X25
    *0-0-0/w STRC(96)    r     1 KH@EXP                    16-0-0/w UBIN(16)    r     1 LEVEL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w STRC(64)    r     1 KH_CTLTBL
     0-0-0/b EPTR        r     1 KX_PM$(0:2)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:152  
     0-0-0/w UBIN(16)    r     1 BASED_WORD                 0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(4992)  r     1 KX$L2


   Procedure KXH$LSTSGNCLK requires 174 words for executable code.
   Procedure KXH$LSTSGNCLK requires 30 words of local(AUTO) storage.

    No errors detected in file KXH$INTHND.:E05TSI    .
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:153  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:154  
          MINI XREF LISTING

BASED_WORD
     18000**DCL     18273>>ASSIGN  18346>>IF
DIED
     18308**LABEL   18289--GOTO
ENABLE_RETURN
     18346**LABEL   18280--GOTO    18286--GOTO
FPT_X25
     17982**DCL     18337<<ASSIGN  18340<>CALL
FPT_X25.EVN
     17986**DCL     18338<<ASSIGN
FPT_X25.PRM1$
     17987**DCL     17988--REDEF
FPT_X25.PRM2$
     17989**DCL     17989--REDEF
FPT_X25.RCV$
     17986**DCL     18339<<ASSIGN
G$JIT.ERRLOG
     17855**DCL     17858--REDEF
G$JIT.JSUNIT
     17594**DCL     17595--REDEF
G$JIT.MCLS
     17593**DCL     17593--REDEF
G$JIT.TMRZ
     17862**DCL     17863--REDEF
G$JIT.USER_EXTIME
     17586**DCL     17587--REDEF
G$JIT.USER_MEMTIME
     17589**DCL     17589--REDEF
G$JIT.USER_SVTIME
     17588**DCL     17588--REDEF
G$JIT$
     17925**DCL     17525--IMP-PTR
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:155  
INPLCTBYT
     16237**DCL     18304<>CALL
INPLCTBYT.LCTBYT.ADR
     16253**DCL     18303<<ASSIGN
INPLCTBYT.LCTBYT.DAT
     16253**DCL     18306>>IF      18306>>IF      18306>>IF
KH$CHN
     16116**DCL     18297<>CALL    18304<>CALL
KH$CHN.ATTR
     16149**DCL     18287>>IF
KH$CHN.CTX$
     16186**DCL     18275>>IF      18281>>IF      18339>>ASSIGN  18343>>ASSIGN
KH$CHN.TERMID
     16210**DCL     18332<>CALL
KH$CHN.TERMID.TERM
     16212**DCL     16221--REDEF
KH@EXP
     16052**DCL        14--PROC
KH@EXP.UID
     16058**DCL     16059--REDEF
KH@EXP.UID$
     16059**DCL     16116--IMP-PTR 18275>>IF      18281>>IF      18287>>IF      18297>>CALL    18304>>CALL
     18332>>CALL    18339>>ASSIGN  18343>>ASSIGN
KHI$DISABLE
     18213**DCL-ENT 18273--CALL
KHI$ENABLE
     18214**DCL-ENT 18346--CALL
KHI$IO_INPLCTBYT
     18221**DCL-ENT 18304--CALL
KHI$IO_OTP
     18215**DCL-ENT 18297--CALL
KH_CTLTBL.PARM.PTR$
     18144**DCL     18273>>ASSIGN  18346>>IF
KX$L2.DFLVCPRF.TRADEL
     17302**DCL     17312--REDEF
KX$L2.DSTSNPA.ADR_STRING
PL6.E3A0      #002=KXH$LSTSGNCLK File=KXH$INTHND.:E05TSI                         WED 07/30/97 02:22 Page:156  
     17493**DCL     17493--REDEF
KX$L2.FLG.LSTSGNCLK
     17209**DCL     18281>>IF      18343<<ASSIGN
KX$L2.FRMR_NSNR
     17279**DCL     17280--REDEF
KX$L2.NTWADR.ADR_STRING
     17213**DCL     17213--REDEF
KX$L2.STATES
     17191**DCL     17191--REDEF
KXF$FRAME
     18217**DCL-ENT 18340--CALL
KXS$SYSLOG
     18218**DCL-ENT 18332--CALL
KX_STATS_HDLC.REQSTATS.DSPMSK
     16741**DCL     16747--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     16782**DCL     16789--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     17066**DCL     17072--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     17107**DCL     17114--REDEF
LEVEL
     17999**DCL     18273<<ASSIGN  18273<>CALL    18346>>IF
LSTDSRCTS
     18239**DCL     18332<>CALL
OTPCHNCTR_OTP
     16352**DCL     18297<>CALL
SYSLOG_TRMID.TERM
     17944**DCL     17953--REDEF
