VERSION E05

PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:1    
        1        1        /*M* VXT$PROC - Traverses a node's file list. Called once/node during pass 2 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC */
        8        8        VXT$PROC: PROC;
        9        9        %INCLUDE VX_INC_C;
       10    10725        %VX$NODE;

             10737    1   /*******************************************************************************
             10738    1   *                                                                              *
             10739    1   *                          VX$NODE                                                 *
             10740    1   *                                                                              *
             10741    1   *******************************************************************************/

             10757    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10758    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10759    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10760    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10761    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10762    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10763                              to list of file nodes for this node            */
             10764    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10765    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10765                  /* Head pointer to shared library list */
             10766    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to list of shared libraries
             10767                                          which have been mapped to included libraries */
             10768    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10769    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10770    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10771    1         2 ADDR_START REDEF  ADDR_START_A,
             10772    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10773    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10774    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:2    
             10775    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10776    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10777    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10778    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10779    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10780    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10781    1         2 START_PAGE# REDEF START_PAGE#_A,
             10782    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10783    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10784    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10785    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10786    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10787    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10788    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10789    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10790    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10790                  /* Starting pointer for common sections for this node */
             10791    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Stopping pointer for common sections for this node */
             10792    1         2 L_START,
             10793    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10794    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10795    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10796    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10797    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10798    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10799    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10800    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10801    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10802    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10803    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10804    1         2 L_STOP,
             10805    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10806    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10807    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10808    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10809    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:3    
             10810    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10811    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10812    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10813    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10814    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10815    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10816    1         2 L_SIZE,
             10817    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10818    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10819    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10820    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10821    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10822    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10823    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10824    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10825    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10826    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10827    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10828    1         2 L_PREV_SIZE,
             10829    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10830    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10831    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10832    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10833    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10834    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10835    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10836    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10837    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10838    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10839    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10840    1         2 BIT_MAP                ALIGNED,
             10841    1           3 DATA                  ALIGNED,
             10842    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10843    1           3 RPROC                 ALIGNED,
             10844    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10845    1           3 ROS                   ALIGNED,
             10846    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:4    
             10847    1         2 L_SC_START,
             10848    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10849    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10850    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10851    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10852    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10853    1         2 L_SC_STOP,
             10854    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10855    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10856    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10857    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10858    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10859    1         2 PROMOTE_HEAD,
             10860    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10861    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10862    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10863    1         2 PROMOTE_TAIL,
             10864    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10865    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10866    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10867    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10868    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10871    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       11    10875        %VX$LST;

             10888    1   /*******************************************************************************
             10889    1   *                                                                              *
             10890    1   *                          VX$LST                                                 *
             10891    1   *                                                                              *
             10892    1   *******************************************************************************/

             10897    1   DCL 1 VX$LST                          ALIGNED BASED,
             10898    1         2 LINK$        PTR,               /* Link to next item                  */
             10899    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:5    
             10900    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             10901    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             10902    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             10903    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             10904    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             10905    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             10906    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             10907    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             10908    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             10909    1         2 P,
             10910    1           3 NAME_       ALIGNED,
             10911    1             4 BOUND      UBIN(20)  UNAL,
             10912    1             4 FLAGSV     UBIN(11)  UNAL,
             10913    1             4 *          BIT(5)    UNAL,
             10914    1             4 NAME$      PTR,
             10915    1           3 ACCT_       ALIGNED,
             10916    1             4 BOUND      UBIN(20)  UNAL,
             10917    1             4 FLAGSV     UBIN(11)  UNAL,
             10918    1             4 *          BIT(5)    UNAL,
             10919    1             4 ACCT$      PTR,
             10920    1           3 PASS_       ALIGNED,
             10921    1             4 BOUND      UBIN(20)  UNAL,
             10922    1             4 FLAGSV     UBIN(11)  UNAL,
             10923    1             4 *          BIT(5)    UNAL,
             10924    1             4 PASS$      PTR,
             10925    1           3 SN_         ALIGNED,
             10926    1             4 BOUND      UBIN(20)  UNAL,
             10927    1             4 FLAGSV     UBIN(11)  UNAL,
             10928    1             4 *          BIT(5)    UNAL,
             10929    1             4 SN$        PTR,
             10930    1           3 WSN_        ALIGNED,
             10931    1             4 BOUND      UBIN(20)  UNAL,
             10932    1             4 FLAGSV     UBIN(11)  UNAL,
             10933    1             4 *          BIT(5)    UNAL,
             10934    1             4 WSN$       PTR,
             10935    1           3 B           ALIGNED,
             10936    1             4 RES        BIT(1)    UNAL,
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:6    
             10937    1             4 ASN        BIT(1)    UNAL,
             10938    1             4 ACCT       BIT(1)    UNAL,
             10939    1             4 *          BIT(33)   UNAL,
             10940    1           3 RES         CHAR(4)   ALIGNED,
             10941    1           3 ASN         UBIN(36)  ALIGNED;
       12    10944        %T$C;

             10956    1   /*******************************************************************************
             10957    1   *                                                                              *
             10958    1   *                          T$C                                                 *
             10959    1   *                                                                              *
             10960    1   *******************************************************************************/

             10965    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             10966    1         2 COUNT        UBIN( 9) UNAL,
             10967    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             10968    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             10969    1         2 COUNT        UBIN( 9) UNAL,
             10970    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       13    10973        %E;

             10981    1   /*******************************************************************************
             10982    1   *                                                                              *
             10983    1   *                          ENTRY                                                 *
             10984    1   *                                                                              *
             10985    1   *******************************************************************************/

       14    10989    1   DCL VXT$OBJECT           ENTRY;
       15    10990        %ENTRIES;
       16    11005        %ENTRIES_IO;
       17    11013        %PTR;

             11021    1   /*******************************************************************************
             11022    1   *                                                                              *
             11023    1   *                          PTR                                                 *
             11024    1   *                                                                              *
             11025    1   *******************************************************************************/
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:7    

       18    11029    1   DCL START$          PTR  ALIGNED   AUTO;
       19    11030        %U;

             11038    1   /*******************************************************************************
             11039    1   *                                                                              *
             11040    1   *                          UBIN                                                 *
             11041    1   *                                                                              *
             11042    1   *******************************************************************************/

       20    11046        %INDEX;
       21    11056    1   DCL FIRST      UBIN(36)  ALIGNED   AUTO;
       22    11057    1   DCL M$OF            DCB;
       23    11058        /**/
       24    11059        /**/
       25    11060        /**/
       26    11061        %VX$LLIST_SC;

             11073    1   /*******************************************************************************
             11074    1   *                                                                              *
             11075    1   *                          VX$LLIST_SC                                             *
             11076    1   *                                                                              *
             11077    1   *******************************************************************************/

             11082    1   DCL 1 NAME               BASED     ALIGNED,
             11083    1         2 LINK$             PTR,
             11084    1         2 BASE$             PTR,
             11085    1         2 COUNT             UBIN(36);
       27    11088        %EJECT;
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:8    
       28    11089    1         VX_FCURR$ = VX_CURR$ -> VX$NODE.HEAD$;
       29    11090        /*
       30    11091         Setup head pointer to linked list of sections index
       31    11092        */
       32    11093    1         VX_SC_PASS2$ = VX_FCURR$ -> VX$LST.SC_HEAD$;
       33    11094    2         DO WHILE ( VX_FCURR$ ~= ADDR(NIL) );
       34    11095    2             VX_SC_PASS2$ = VX_FCURR$ -> VX$LST.SC_HEAD$;
       35    11096    2             CALL VXF$OPEN( VX_FCURR$, @OF );
       36    11097    3             DO CASE( VX_FCURR$ -> VX$LST.TYPE );
       37    11098    3               CASE( @OF );                /* Object file */
       38    11099    4                 DO CASE( VX_FCURR$ -> VX$LST.SUB_TYPE );
       39    11100    4                   CASE( @OF_ALL );        /* All object units */
       40    11101    4                     FIRST = 0;
       41    11102    4                     VX_O_KEY_BUF_L.FORM0.COUNT = LENGTHC( VX_O_KEY_HEAD);
             11102                              /* Set positioning key */
       42    11103    4                     VX_O_KEY_BUF_L.FORM0.CHARS = VX_O_KEY_HEAD;
       43    11104    4   NEXT_UNIT:
       44    11105    4                     VX_IO_USEPREV = @YES; /* Set previous key to use */
       45    11106    4                     VX_IO_SAVEPREV = @YES;
             11106                              /* Request previous key to be saved and do a keyed read */
       46    11107    4                     CALL VXI$READ( @OF, ADDR(VX_OU_HEAD), SIZEW( VX_OU_HEAD),
       47    11108    4                             @OF                  ) ALTRET(NEXT_READ);
       48    11109    4   NEXT_READ:
       49    11110        /* Here after positioning read */
       50    11111    4                     VX_IO_USEPREV = @YES; /* Use previous key */
       51    11112    4                     VX_IO_SAVEPREV = 2;
             11112                              /* Request to save as previous and do a sequential read */
       52    11113    4                     VX_OU_HEAD = '0'B;
       53    11114    4                     CALL VXI$READ( @OF, ADDR(VX_OU_HEAD), SIZEW(VX_OU_HEAD),
       54    11115    4                             @OF       )         ALTRET(PANIC);
       55    11116        /* Verify we have a head record */
       56    11117    4                     IF VX_OK.KTYPE ~= -1 THEN GOTO PANIC;
       57    11118        /* An honest to god object file */
       58    11119    4                     FIRST = FIRST + 1;
       59    11120    4                     CALL VXT$OBJECT;
       60    11121        /* Step to next sc item unit */
       61    11122    4                     VX_SC_PASS2$ = VX_SC_PASS2$ -> VX$LLIST_SC.LINK$;
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:9    
       62    11123    4                     GOTO NEXT_UNIT;
       63    11124    4                   CASE( @OF_LIST );       /* List of object units */
       64    11125    4   LIST_UNITS:
       65    11126    4                     START$ = VX_FCURR$ -> VX$LST.OBJECT_NAME$;
       66    11127    4                     VX_O_KEY_BUF.FORM0.COUNT = START$ -> T$C.COUNT;
             11127                              /* Set up the key */
       67    11128    4                     VX_O_KEY_BUF.FORM0.CHARS = START$ -> T$C.CHARS;
       68    11129    4                     VX_OU_HEAD = '0'B;
       69    11130    4                     CALL VXI$READ( @OF,
       70    11131    4                             ADDR(VX_OU_HEAD),
       71    11132    4                             SIZEW(VX_OU_HEAD),
       72    11133    4                             @OF                ) ALTRET(OBJECT_ERROR);
       73    11134    4                     CALL VXT$OBJECT;
       74    11135    4                     GOTO CLOSE_FILE;
       75    11136    4   OBJECT_ERROR:
       76    11137        /*E*  ERROR: VXT-E$CANTFINDOU_VX-0
       77    11138              MESSAGE: Cannot find object unit: %U1.
       78    11139              DESCRIPTION: Object unit specified in the tree record does not exist.
       79    11140        */
       80    11141    4                     VX_EFIELD1.COUNT = START$ -> T$C.COUNT - 1;
       81    11142    4                     VX_EFIELD1.CHARS = PINCRC( START$, 1 ) -> T$C.CHARS;
       82    11143    4                     VX_FPT_ERRMSG.FIELD1_   = VECTOR(VX_EFIELD1);
       83    11144                          %SCREAM(
       84    11145                          ERR# = E$CANTFINDOU_VX,
       85    11146                          MID="'T'",
       86    11147                          LEVEL=@E$F_VX,
       87    11148                          AUX=@E$OF_VX);
       88    11151    4   PANIC:
       89    11152    4                     IF FIRST > 0 THEN GOTO CLOSE_FILE;
       90    11153        /*E*  ERROR: VXT-E$NO_UNITS_VX-0
       91    11154              MESSAGE: PASS2 can't find object units in %FN while PASS1 did.
       92    11155              DESCRIPTION: Self-explanatory.
       93    11156        */
       94    11157    4                     VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );
       95    11158                          %SCREAM(
       96    11159                          ERR#=E$NO_UNITS_VX,
       97    11160                          MID="'T'",
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:10   
       98    11161                          LEVEL=@E$F_VX);
       99    11164    4                   END;
      100    11165        %EJECT;
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:11   
      101    11166    3               CASE( @LF );
      102    11167    3                 IF VX_FCURR$ -> VX$LST.SUB_TYPE = @LF_ULIB THEN GOTO LIST_UNITS;
      103    11168    3               END;
      104    11169    2   CLOSE_FILE:
      105    11170    2             CALL VXF$CLOSE( VX_FCURR$, @OF, @SAVE );
      106    11171    2             VX_FCURR$ = VX_FCURR$ -> VX$LST.LINK$; /* Step to next */
      107    11172    2            END;
      108    11173    1   END VXT$PROC;

PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:12   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXT$PROC.

   Procedure VXT$PROC requires 154 words for executable code.
   Procedure VXT$PROC requires 16 words of local(AUTO) storage.

    No errors detected in file VXT$PROC.:E05TSI    .

PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:13   

 Object Unit name= VXT$PROC                                   File name= VXT$PROC.:E05TOU
 UTS= JUL 30 '97 08:42:55.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   DCB   even  none     0      0  M$OF
    3   Proc  even  none   154    232  VXT$PROC
    4  RoData even  none    22     26  VXT$PROC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  VXT$PROC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 VXF$OPEN
 yes     yes           Std       4 VXI$READ
         yes           Std       0 VXT$OBJECT
         yes           Std       4 VXE$ERROR
         yes           Std       3 VXF$CLOSE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:14   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_FPT_ERRMSG                         VX_O_KEY_BUF
     VX_O_KEY_BUF_L                        VX_OK                                 VX_OU_HEAD
     VX_CURR$                              VX_FCURR$                             VX_ERRORS
     VX_EFIELD1                            VX_IO_USEPREV                         VX_IO_SAVEPREV
     VX_O_KEY_HEAD                         VX_SC_PASS2$                          M$OF
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:15   


        1        1        /*M* VXT$PROC - Traverses a node's file list. Called once/node during pass 2 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC */
        8        8        VXT$PROC: PROC;

      8  3 000000   000000 700200 xent  VXT$PROC     TSX0  ! X66_AUTO_0
         3 000001   000020 000000                    ZERO    16,0

        9        9        %INCLUDE VX_INC_C;
       10    10725        %VX$NODE;

             10737    1   /*******************************************************************************
             10738    1   *                                                                              *
             10739    1   *                          VX$NODE                                                *
             10740    1   *                                                                              *
             10741    1   *******************************************************************************/

             10757    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10758    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10759    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10760    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10761    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10762    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10763                              to list of file nodes for this node            */
             10764    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10765    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10765                  /* Head pointer to shared library list */
             10766    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to list of shared libraries
             10767                                          which have been mapped to included libraries */
             10768    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10769    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:16   
             10770    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10771    1         2 ADDR_START REDEF  ADDR_START_A,
             10772    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10773    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10774    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10775    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10776    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10777    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10778    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10779    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10780    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10781    1         2 START_PAGE# REDEF START_PAGE#_A,
             10782    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10783    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10784    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10785    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10786    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10787    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10788    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10789    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10790    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10790                  /* Starting pointer for common sections for this node */
             10791    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Stopping pointer for common sections for this node */
             10792    1         2 L_START,
             10793    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10794    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10795    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10796    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10797    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10798    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10799    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10800    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10801    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10802    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10803    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10804    1         2 L_STOP,
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:17   
             10805    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10806    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10807    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10808    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10809    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10810    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10811    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10812    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10813    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10814    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10815    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10816    1         2 L_SIZE,
             10817    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10818    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10819    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10820    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10821    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10822    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10823    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10824    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10825    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10826    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10827    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10828    1         2 L_PREV_SIZE,
             10829    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10830    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10831    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10832    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10833    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10834    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10835    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10836    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10837    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10838    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10839    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10840    1         2 BIT_MAP                ALIGNED,
             10841    1           3 DATA                  ALIGNED,
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:18   
             10842    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10843    1           3 RPROC                 ALIGNED,
             10844    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10845    1           3 ROS                   ALIGNED,
             10846    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10847    1         2 L_SC_START,
             10848    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10849    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10850    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10851    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10852    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10853    1         2 L_SC_STOP,
             10854    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10855    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10856    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10857    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10858    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10859    1         2 PROMOTE_HEAD,
             10860    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10861    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10862    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10863    1         2 PROMOTE_TAIL,
             10864    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10865    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10866    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10867    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10868    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10871    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       11    10875        %VX$LST;

             10888    1   /*******************************************************************************
             10889    1   *                                                                              *
             10890    1   *                          VX$LST                                                 *
             10891    1   *                                                                              *
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:19   
             10892    1   *******************************************************************************/

             10897    1   DCL 1 VX$LST                          ALIGNED BASED,
             10898    1         2 LINK$        PTR,               /* Link to next item                  */
             10899    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             10900    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             10901    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             10902    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             10903    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             10904    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             10905    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             10906    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             10907    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             10908    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             10909    1         2 P,
             10910    1           3 NAME_       ALIGNED,
             10911    1             4 BOUND      UBIN(20)  UNAL,
             10912    1             4 FLAGSV     UBIN(11)  UNAL,
             10913    1             4 *          BIT(5)    UNAL,
             10914    1             4 NAME$      PTR,
             10915    1           3 ACCT_       ALIGNED,
             10916    1             4 BOUND      UBIN(20)  UNAL,
             10917    1             4 FLAGSV     UBIN(11)  UNAL,
             10918    1             4 *          BIT(5)    UNAL,
             10919    1             4 ACCT$      PTR,
             10920    1           3 PASS_       ALIGNED,
             10921    1             4 BOUND      UBIN(20)  UNAL,
             10922    1             4 FLAGSV     UBIN(11)  UNAL,
             10923    1             4 *          BIT(5)    UNAL,
             10924    1             4 PASS$      PTR,
             10925    1           3 SN_         ALIGNED,
             10926    1             4 BOUND      UBIN(20)  UNAL,
             10927    1             4 FLAGSV     UBIN(11)  UNAL,
             10928    1             4 *          BIT(5)    UNAL,
             10929    1             4 SN$        PTR,
             10930    1           3 WSN_        ALIGNED,
             10931    1             4 BOUND      UBIN(20)  UNAL,
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:20   
             10932    1             4 FLAGSV     UBIN(11)  UNAL,
             10933    1             4 *          BIT(5)    UNAL,
             10934    1             4 WSN$       PTR,
             10935    1           3 B           ALIGNED,
             10936    1             4 RES        BIT(1)    UNAL,
             10937    1             4 ASN        BIT(1)    UNAL,
             10938    1             4 ACCT       BIT(1)    UNAL,
             10939    1             4 *          BIT(33)   UNAL,
             10940    1           3 RES         CHAR(4)   ALIGNED,
             10941    1           3 ASN         UBIN(36)  ALIGNED;
       12    10944        %T$C;

             10956    1   /*******************************************************************************
             10957    1   *                                                                              *
             10958    1   *                          T$C                                                 *
             10959    1   *                                                                              *
             10960    1   *******************************************************************************/

             10965    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             10966    1         2 COUNT        UBIN( 9) UNAL,
             10967    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             10968    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             10969    1         2 COUNT        UBIN( 9) UNAL,
             10970    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       13    10973        %E;

             10981    1   /*******************************************************************************
             10982    1   *                                                                              *
             10983    1   *                          ENTRY                                                 *
             10984    1   *                                                                              *
             10985    1   *******************************************************************************/

       14    10989    1   DCL VXT$OBJECT           ENTRY;
       15    10990        %ENTRIES;
       16    11005        %ENTRIES_IO;
       17    11013        %PTR;

PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:21   
             11021    1   /*******************************************************************************
             11022    1   *                                                                              *
             11023    1   *                          PTR                                                 *
             11024    1   *                                                                              *
             11025    1   *******************************************************************************/

       18    11029    1   DCL START$          PTR  ALIGNED   AUTO;
       19    11030        %U;

             11038    1   /*******************************************************************************
             11039    1   *                                                                              *
             11040    1   *                          UBIN                                                 *
             11041    1   *                                                                              *
             11042    1   *******************************************************************************/

       20    11046        %INDEX;
       21    11056    1   DCL FIRST      UBIN(36)  ALIGNED   AUTO;
       22    11057    1   DCL M$OF            DCB;
       23    11058        /**/
       24    11059        /**/
       25    11060        /**/
       26    11061        %VX$LLIST_SC;

             11073    1   /*******************************************************************************
             11074    1   *                                                                              *
             11075    1   *                          VX$LLIST_SC                                            *
             11076    1   *                                                                              *
             11077    1   *******************************************************************************/

             11082    1   DCL 1 NAME               BASED     ALIGNED,
             11083    1         2 LINK$             PTR,
             11084    1         2 BASE$             PTR,
             11085    1         2 COUNT             UBIN(36);
       27    11088        %EJECT;
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:22   
       28    11089    1         VX_FCURR$ = VX_CURR$ -> VX$NODE.HEAD$;

  11089  3 000002   000000 470400 xsym               LDP0    VX_CURR$
         3 000003   000004 236100                    LDQ     4,,PR0
         3 000004   000000 756000 xsym               STQ     VX_FCURR$

       29    11090        /*
       30    11091         Setup head pointer to linked list of sections index
       31    11092        */
       32    11093    1         VX_SC_PASS2$ = VX_FCURR$ -> VX$LST.SC_HEAD$;

  11093  3 000005   000000 471400 xsym               LDP1    VX_FCURR$
         3 000006   100003 236100                    LDQ     3,,PR1
         3 000007   000000 756000 xsym               STQ     VX_SC_PASS2$

       33    11094    2         DO WHILE ( VX_FCURR$ ~= ADDR(NIL) );

  11094  3 000010   000226 710000 3                  TRA     s:11172

       34    11095    2             VX_SC_PASS2$ = VX_FCURR$ -> VX$LST.SC_HEAD$;

  11095  3 000011   000000 470400 xsym               LDP0    VX_FCURR$
         3 000012   000003 236100                    LDQ     3,,PR0
         3 000013   000000 756000 xsym               STQ     VX_SC_PASS2$

       35    11096    2             CALL VXF$OPEN( VX_FCURR$, @OF );

  11096  3 000014   000000 630400 4                  EPPR0   0
         3 000015   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000016   000000 701000 xent               TSX1    VXF$OPEN
         3 000017   000000 011000                    NOP     0

       36    11097    3             DO CASE( VX_FCURR$ -> VX$LST.TYPE );

  11097  3 000020   000000 470400 xsym               LDP0    VX_FCURR$
         3 000021   000001 220100                    LDX0    1,,PR0
         3 000022   000003 100003                    CMPX0   3,DU
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:23   
         3 000023   000025 602010 3                  TNC     s:11097+5,X0
         3 000024   000217 710000 3                  TRA     CLOSE_FILE
         3 000025   000030 710000 3                  TRA     s:11099
         3 000026   000217 710000 3                  TRA     CLOSE_FILE
         3 000027   000215 710000 3                  TRA     s:11167

       37    11098    3               CASE( @OF );                /* Object file */

       38    11099    4                 DO CASE( VX_FCURR$ -> VX$LST.SUB_TYPE );

  11099  3 000030   000001 721100                    LXL1    1,,PR0
         3 000031   000002 101003                    CMPX1   2,DU
         3 000032   000034 602011 3                  TNC     s:11099+4,X1
         3 000033   000217 710000 3                  TRA     CLOSE_FILE
         3 000034   000036 710000 3                  TRA     s:11101
         3 000035   000123 710000 3                  TRA     LIST_UNITS

       39    11100    4                   CASE( @OF_ALL );        /* All object units */

       40    11101    4                     FIRST = 0;

  11101  3 000036   200010 450100                    STZ     FIRST,,AUTO

       41    11102    4                     VX_O_KEY_BUF_L.FORM0.COUNT = LENGTHC( VX_O_KEY_HEAD);
             11102                              /* Set positioning key */

  11102  3 000037   001000 236003                    LDQ     512,DU
         3 000040   000000 552040 xsym               STBQ    VX_O_KEY_BUF_L,'40'O

       42    11103    4                     VX_O_KEY_BUF_L.FORM0.CHARS = VX_O_KEY_HEAD;

  11103  3 000041   040000 100400                    MLR     fill='040'O
         3 000042   000000 000001 xsym               ADSC9   VX_O_KEY_HEAD            cn=0,n=1
         3 000043   000000 201000 xsym               ADSC9   VX_O_KEY_BUF_L           cn=1,n=512

       43    11104    4   NEXT_UNIT:
       44    11105    4                     VX_IO_USEPREV = @YES; /* Set previous key to use */
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:24   

  11105  3 000044   000001 235007       NEXT_UNIT    LDA     1,DL
         3 000045   000000 755000 xsym               STA     VX_IO_USEPREV

       45    11106    4                     VX_IO_SAVEPREV = @YES;
             11106                              /* Request previous key to be saved and do a keyed read */

  11106  3 000046   000000 755000 xsym               STA     VX_IO_SAVEPREV

       46    11107    4                     CALL VXI$READ( @OF, ADDR(VX_OU_HEAD), SIZEW( VX_OU_HEAD),

  11107  3 000047   000002 236000 4                  LDQ     2
         3 000050   200012 756100                    STQ     FIRST+2,,AUTO
         3 000051   000004 237000 4                  LDAQ    4
         3 000052   200016 757100                    STAQ    FIRST+6,,AUTO
         3 000053   200012 630500                    EPPR0   FIRST+2,,AUTO
         3 000054   200015 450500                    STP0    FIRST+5,,AUTO
         3 000055   000001 236000 4                  LDQ     1
         3 000056   200014 756100                    STQ     FIRST+4,,AUTO
         3 000057   200014 630500                    EPPR0   FIRST+4,,AUTO
         3 000060   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000061   000000 701000 xent               TSX1    VXI$READ
         3 000062   000063 702000 3                  TSX2    NEXT_READ

       47    11108    4                             @OF                  ) ALTRET(NEXT_READ);
       48    11109    4   NEXT_READ:
       49    11110        /* Here after positioning read */
       50    11111    4                     VX_IO_USEPREV = @YES; /* Use previous key */

  11111  3 000063   000001 235007       NEXT_READ    LDA     1,DL
         3 000064   000000 755000 xsym               STA     VX_IO_USEPREV

       51    11112    4                     VX_IO_SAVEPREV = 2;
             11112                              /* Request to save as previous and do a sequential read */

  11112  3 000065   000002 236007                    LDQ     2,DL
         3 000066   000000 756000 xsym               STQ     VX_IO_SAVEPREV
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:25   

       52    11113    4                     VX_OU_HEAD = '0'B;

  11113  3 000067   000000 100400                    MLR     fill='000'O
         3 000070   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000071   000000 000164 xsym               ADSC9   VX_OU_HEAD               cn=0,n=116

       53    11114    4                     CALL VXI$READ( @OF, ADDR(VX_OU_HEAD), SIZEW(VX_OU_HEAD),

  11114  3 000072   000002 236000 4                  LDQ     2
         3 000073   200012 756100                    STQ     FIRST+2,,AUTO
         3 000074   000004 237000 4                  LDAQ    4
         3 000075   200016 757100                    STAQ    FIRST+6,,AUTO
         3 000076   200012 630500                    EPPR0   FIRST+2,,AUTO
         3 000077   200015 450500                    STP0    FIRST+5,,AUTO
         3 000100   000001 236000 4                  LDQ     1
         3 000101   200014 756100                    STQ     FIRST+4,,AUTO
         3 000102   200014 630500                    EPPR0   FIRST+4,,AUTO
         3 000103   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000104   000000 701000 xent               TSX1    VXI$READ
         3 000105   000203 702000 3                  TSX2    PANIC

       54    11115    4                             @OF       )         ALTRET(PANIC);
       55    11116        /* Verify we have a head record */
       56    11117    4                     IF VX_OK.KTYPE ~= -1 THEN GOTO PANIC;

  11117  3 000106   000001 235000 xsym               LDA     VX_OK+1
         3 000107   000027 115000 xsym               CMPA    B_VECTNIL+23
         3 000110   000203 601000 3                  TNZ     PANIC

       57    11118        /* An honest to god object file */
       58    11119    4                     FIRST = FIRST + 1;

  11119  3 000111   200010 236100                    LDQ     FIRST,,AUTO
         3 000112   000001 036007                    ADLQ    1,DL
         3 000113   200010 756100                    STQ     FIRST,,AUTO

PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:26   
       59    11120    4                     CALL VXT$OBJECT;

  11120  3 000114   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000115   000000 701000 xent               TSX1    VXT$OBJECT
         3 000116   000000 011000                    NOP     0

       60    11121        /* Step to next sc item unit */
       61    11122    4                     VX_SC_PASS2$ = VX_SC_PASS2$ -> VX$LLIST_SC.LINK$;

  11122  3 000117   000000 470400 xsym               LDP0    VX_SC_PASS2$
         3 000120   000000 236100                    LDQ     0,,PR0
         3 000121   000000 756000 xsym               STQ     VX_SC_PASS2$

       62    11123    4                     GOTO NEXT_UNIT;

  11123  3 000122   000044 710000 3                  TRA     NEXT_UNIT

       63    11124    4                   CASE( @OF_LIST );       /* List of object units */

       64    11125    4   LIST_UNITS:
       65    11126    4                     START$ = VX_FCURR$ -> VX$LST.OBJECT_NAME$;

  11126  3 000123   000000 470400 xsym  LIST_UNITS   LDP0    VX_FCURR$
         3 000124   000002 236100                    LDQ     2,,PR0
         3 000125   200003 756100                    STQ     START$,,AUTO

       66    11127    4                     VX_O_KEY_BUF.FORM0.COUNT = START$ -> T$C.COUNT;
             11127                              /* Set up the key */

  11127  3 000126   200003 471500                    LDP1    START$,,AUTO
         3 000127   100000 236100                    LDQ     0,,PR1
         3 000130   000000 552040 xsym               STBQ    VX_O_KEY_BUF,'40'O

       67    11128    4                     VX_O_KEY_BUF.FORM0.CHARS = START$ -> T$C.CHARS;

  11128  3 000131   100000 236100                    LDQ     0,,PR1
         3 000132   000033 772000                    QRL     27
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:27   
         3 000133   000000 620006                    EAX0    0,QL
         3 000134   040000 100540                    MLR     fill='040'O
         3 000135   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         3 000136   000000 201000 xsym               ADSC9   VX_O_KEY_BUF             cn=1,n=512

       68    11129    4                     VX_OU_HEAD = '0'B;

  11129  3 000137   000000 100400                    MLR     fill='000'O
         3 000140   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 000141   000000 000164 xsym               ADSC9   VX_OU_HEAD               cn=0,n=116

       69    11130    4                     CALL VXI$READ( @OF,

  11130  3 000142   000002 236000 4                  LDQ     2
         3 000143   200012 756100                    STQ     FIRST+2,,AUTO
         3 000144   000004 237000 4                  LDAQ    4
         3 000145   200016 757100                    STAQ    FIRST+6,,AUTO
         3 000146   200012 633500                    EPPR3   FIRST+2,,AUTO
         3 000147   200015 453500                    STP3    FIRST+5,,AUTO
         3 000150   000001 236000 4                  LDQ     1
         3 000151   200014 756100                    STQ     FIRST+4,,AUTO
         3 000152   200014 630500                    EPPR0   FIRST+4,,AUTO
         3 000153   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000154   000000 701000 xent               TSX1    VXI$READ
         3 000155   000162 702000 3                  TSX2    OBJECT_ERROR

       70    11131    4                             ADDR(VX_OU_HEAD),
       71    11132    4                             SIZEW(VX_OU_HEAD),
       72    11133    4                             @OF                ) ALTRET(OBJECT_ERROR);
       73    11134    4                     CALL VXT$OBJECT;

  11134  3 000156   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000157   000000 701000 xent               TSX1    VXT$OBJECT
         3 000160   000000 011000                    NOP     0

       74    11135    4                     GOTO CLOSE_FILE;

PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:28   
  11135  3 000161   000217 710000 3                  TRA     CLOSE_FILE

       75    11136    4   OBJECT_ERROR:
       76    11137        /*E*  ERROR: VXT-E$CANTFINDOU_VX-0
       77    11138              MESSAGE: Cannot find object unit: %U1.
       78    11139              DESCRIPTION: Object unit specified in the tree record does not exist.
       79    11140        */
       80    11141    4                     VX_EFIELD1.COUNT = START$ -> T$C.COUNT - 1;

  11141  3 000162   200003 470500       OBJECT_ERROR LDP0    START$,,AUTO
         3 000163   000000 236100                    LDQ     0,,PR0
         3 000164   000033 772000                    QRL     27
         3 000165   000001 136007                    SBLQ    1,DL
         3 000166   000033 736000                    QLS     27
         3 000167   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

       81    11142    4                     VX_EFIELD1.CHARS = PINCRC( START$, 1 ) -> T$C.CHARS;

  11142  3 000170   000000 220100                    LDX0    0,,PR0
         3 000171   000777 360003                    ANX0    511,DU
         3 000172   040000 100540                    MLR     fill='040'O
         3 000173   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         3 000174   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

       82    11143    4                     VX_FPT_ERRMSG.FIELD1_   = VECTOR(VX_EFIELD1);

  11143  3 000175   000006 237000 4                  LDAQ    6
         3 000176   000014 757000 xsym               STAQ    VX_FPT_ERRMSG+12

       83    11144                          %SCREAM(
       84    11145                          ERR# = E$CANTFINDOU_VX,
       85    11146                          MID="'T'",
       86    11147                          LEVEL=@E$F_VX,
       87    11148                          AUX=@E$OF_VX);

  11149  3 000177   000012 630400 4                  EPPR0   10
         3 000200   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:29   
         3 000201   000000 701000 xent               TSX1    VXE$ERROR
         3 000202   000000 011000                    NOP     0

       88    11151    4   PANIC:
       89    11152    4                     IF FIRST > 0 THEN GOTO CLOSE_FILE;

  11152  3 000203   200010 235100       PANIC        LDA     FIRST,,AUTO
         3 000204   000217 601000 3                  TNZ     CLOSE_FILE

       90    11153        /*E*  ERROR: VXT-E$NO_UNITS_VX-0
       91    11154              MESSAGE: PASS2 can't find object units in %FN while PASS1 did.
       92    11155              DESCRIPTION: Self-explanatory.
       93    11156        */
       94    11157    4                     VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );

  11157  3 000205   000000 236007 xsym               LDQ     M$OF,DL
         3 000206   000000 620006                    EAX0    0,QL
         3 000207   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

       95    11158                          %SCREAM(
       96    11159                          ERR#=E$NO_UNITS_VX,
       97    11160                          MID="'T'",
       98    11161                          LEVEL=@E$F_VX);

  11162  3 000210   000017 630400 4                  EPPR0   15
         3 000211   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000212   000000 701000 xent               TSX1    VXE$ERROR
         3 000213   000000 011000                    NOP     0

       99    11164    4                   END;

  11164  3 000214   000217 710000 3                  TRA     CLOSE_FILE

      100    11165        %EJECT;
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:30   
      101    11166    3               CASE( @LF );

      102    11167    3                 IF VX_FCURR$ -> VX$LST.SUB_TYPE = @LF_ULIB THEN GOTO LIST_UNITS;

  11167  3 000215   000001 721100                    LXL1    1,,PR0
         3 000216   000123 600000 3                  TZE     LIST_UNITS

      103    11168    3               END;

      104    11169    2   CLOSE_FILE:
      105    11170    2             CALL VXF$CLOSE( VX_FCURR$, @OF, @SAVE );

  11170  3 000217   000023 630400 4     CLOSE_FILE   EPPR0   19
         3 000220   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000221   000000 701000 xent               TSX1    VXF$CLOSE
         3 000222   000000 011000                    NOP     0

      106    11171    2             VX_FCURR$ = VX_FCURR$ -> VX$LST.LINK$; /* Step to next */

  11171  3 000223   000000 470400 xsym               LDP0    VX_FCURR$
         3 000224   000000 236100                    LDQ     0,,PR0
         3 000225   000000 756000 xsym               STQ     VX_FCURR$

      107    11172    2            END;

  11172  3 000226   000000 236000 xsym               LDQ     VX_FCURR$
         3 000227   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000230   000011 601000 3                  TNZ     s:11095

      108    11173    1   END VXT$PROC;

  11173  3 000231   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:31   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXT$PROC.
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:32   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w UBIN        r     1 FIRST                      3-0-0/w PTR         r     1 START$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 VX_CURR$                   0-0-0/w STRC(720)   r     1 VX_EFIELD1
     0-0-0/w PTR         r     1 VX_FCURR$                  0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG
     0-0-0/w SBIN        r     1 VX_IO_SAVEPREV             0-0-0/w SBIN        r     1 VX_IO_USEPREV
     0-0-0/w STRC(1476)  r     1 VX_OK                      0-0-0/w STRC(1044)  r     1 VX_OU_HEAD
     0-0-0/w STRC(4617)  r     1 VX_O_KEY_BUF               0-0-0/w STRC(4617)  r     1 VX_O_KEY_BUF_L
     0-0-0/c CHAR        r     1 VX_O_KEY_HEAD              0-0-0/w PTR         r     1 VX_SC_PASS2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$OF                       0-0-0/w ASTR(9)     r     1 T$C
     0-0-0/c ASTR(9)     r     1 T$C_UNAL                   0-0-0/w STRC(108)   r     1 VX$LLIST_SC
     0-0-0/w STRC(648)   r     1 VX$LST                     0-0-0/w STRC(3672)  r     1 VX$NODE


   Procedure VXT$PROC requires 154 words for executable code.
   Procedure VXT$PROC requires 16 words of local(AUTO) storage.

    No errors detected in file VXT$PROC.:E05TSI    .
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:34   
          MINI XREF LISTING

CLOSE_FILE
     11170**LABEL   11135--GOTO    11152--GOTO
FIRST
     11056**DCL     11101<<ASSIGN  11119<<ASSIGN  11119>>ASSIGN  11152>>IF
I
     11047**DCL     11048--REDEF
J
     11049**DCL     11050--REDEF
K
     11051**DCL     11052--REDEF
L
     11053**DCL     11054--REDEF
LIST_UNITS
     11126**LABEL   11167--GOTO
M$OF
     11057**DCL     11157>>ASSIGN
NEXT_READ
     11111**LABEL   11107--CALLALT
NEXT_UNIT
     11105**LABEL   11123--GOTO
OBJECT_ERROR
     11141**LABEL   11130--CALLALT
PANIC
     11152**LABEL   11114--CALLALT 11117--GOTO
START$
     11029**DCL     11126<<ASSIGN  11127>>ASSIGN  11128>>ASSIGN  11128>>ASSIGN  11141>>ASSIGN  11142>>ASSIGN
     11142>>ASSIGN
T$C.CHARS
     10967**DCL     11128>>ASSIGN  11142>>ASSIGN
T$C.COUNT
     10966**DCL     10967--IMP-SIZ 11127>>ASSIGN  11128>>ASSIGN  11141>>ASSIGN  11142>>ASSIGN
T$C_UNAL.COUNT
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:35   
     10969**DCL     10970--IMP-SIZ
VX$LLIST_SC.LINK$
     11083**DCL     11122>>ASSIGN
VX$LST.LINK$
     10898**DCL     11171>>ASSIGN
VX$LST.OBJECT_NAME$
     10901**DCL     10902--REDEF   11126>>ASSIGN
VX$LST.SC_HEAD$
     10903**DCL     10904--REDEF   11093>>ASSIGN  11095>>ASSIGN
VX$LST.SC_TAIL$
     10905**DCL     10906--REDEF
VX$LST.SUB_TYPE
     10900**DCL     11099>>DOCASE  11167>>IF
VX$LST.TYPE
     10899**DCL     11097>>DOCASE
VX$NODE.ADDR_START_A
     10770**DCL     10771--REDEF
VX$NODE.ADDR_STOP_A
     10775**DCL     10776--REDEF
VX$NODE.HEAD$
     10762**DCL     11089>>ASSIGN
VX$NODE.L_PREV_SIZE
     10828**DCL     10839--REDEF
VX$NODE.L_SC_START
     10847**DCL     10852--REDEF
VX$NODE.L_SC_STOP
     10853**DCL     10858--REDEF
VX$NODE.L_SIZE
     10816**DCL     10827--REDEF
VX$NODE.L_START
     10792**DCL     10803--REDEF
VX$NODE.L_STOP
     10804**DCL     10815--REDEF
VX$NODE.PROMOTE_HEAD
     10859**DCL     10862--REDEF
VX$NODE.PROMOTE_TAIL
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:36   
     10863**DCL     10866--REDEF
VX$NODE.START_PAGE#_A
     10780**DCL     10781--REDEF
VX$NODE.STOP_PAGE#_A
     10785**DCL     10786--REDEF
VXE$ERROR
     10991**DCL-ENT 11149--CALL    11162--CALL
VXF$CLOSE
     11007**DCL-ENT 11170--CALL
VXF$OPEN
     11006**DCL-ENT 11096--CALL
VXI$READ
     11010**DCL-ENT 11107--CALL    11114--CALL    11130--CALL
VXT$OBJECT
     10989**DCL-ENT 11120--CALL    11134--CALL
VX_BIAS.A
      9575**DCL      9576--REDEF
VX_CBUF.CHARS_A
      9509**DCL      9510--REDEF
VX_CONST_DCB.ACTPOS
     10691**DCL     10691--REDEF
VX_CONST_DCB.ARS#
     10650**DCL     10650--REDEF
VX_CONST_DCB.ATTR#
     10680**DCL     10680--REDEF   10682--REDEF
VX_CONST_DCB.BORROW
     10702**DCL     10702--REDEF   10702--REDEF   10702--REDEF
VX_CONST_DCB.EOMCHAR#
     10657**DCL     10658--REDEF
VX_CONST_DCB.FLDID
     10694**DCL     10695--REDEF
VX_CONST_DCB.FORM$
     10686**DCL     10686--REDEF
VX_CONST_DCB.FSECT
     10709**DCL     10709--REDEF
VX_CONST_DCB.FSN#
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:37   
     10676**DCL     10676--REDEF   10676--REDEF   10677--REDEF
VX_CONST_DCB.HEADER$
     10685**DCL     10686--REDEF
VX_CONST_DCB.IXTNSIZE#
     10682**DCL     10683--REDEF
VX_CONST_DCB.LASTSTA$
     10666**DCL     10666--REDEF
VX_CONST_DCB.LVL
     10703**DCL     10703--REDEF
VX_CONST_DCB.NAME#.C
     10666**DCL     10667--REDEF
VX_CONST_DCB.NOEOF
     10698**DCL     10698--REDEF
VX_CONST_DCB.NRECS#
     10683**DCL     10683--REDEF
VX_CONST_DCB.NRECX
     10710**DCL     10710--REDEF
VX_CONST_DCB.OHDR
     10699**DCL     10699--REDEF
VX_CONST_DCB.ORG#
     10674**DCL     10675--REDEF
VX_CONST_DCB.PRECNO
     10707**DCL     10707--REDEF
VX_CONST_DCB.RCSZ
     10715**DCL     10715--REDEF
VX_CONST_DCB.RES#
     10668**DCL     10668--REDEF
VX_CONST_DCB.SETX
     10687**DCL     10687--REDEF
VX_CONST_DCB.TAB$
     10686**DCL     10686--REDEF
VX_CONST_DCB.TDA
     10706**DCL     10707--REDEF
VX_CONST_DCB.WSN#
     10668**DCL     10669--REDEF
VX_CURR$
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:38   
      9544**DCL     11089>>ASSIGN
VX_EBUF.CHARS_A
     10098**DCL     10099--REDEF
VX_EFIELD1
     10105**DCL     11143--ASSIGN
VX_EFIELD1.CHARS
     10107**DCL     10108--REDEF   11142<<ASSIGN
VX_EFIELD1.COUNT
     10106**DCL     11141<<ASSIGN
VX_EFIELD2.CHARS
     10111**DCL     10112--REDEF
VX_EFIELD3.CHARS
     10115**DCL     10116--REDEF
VX_EI_KEY_BUF.KEY
     10491**DCL     10492--REDEF
VX_ERRORS
      9552**DCL      9563--REDEF
VX_ERRORS.CONFLICT_A
      9558**DCL      9559--REDEF
VX_ERRORS.UNSAT_A
      9554**DCL      9555--REDEF
VX_FCURR$
      9545**DCL     11089<<ASSIGN  11093>>ASSIGN  11094>>DOWHILE 11095>>ASSIGN  11096<>CALL    11097>>DOCASE
     11099>>DOCASE  11126>>ASSIGN  11167>>IF      11170<>CALL    11171<<ASSIGN  11171>>ASSIGN
VX_FPT_ERRMSG.FIELD1_
      8498**DCL     11143<<ASSIGN
VX_FPT_ERRMSG.V.DCB#
      8500**DCL     11157<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8689**DCL      8690--REDEF
VX_IMAGE_DATA.NODE_A$
      8701**DCL      8702--REDEF
VX_IMAGE_DATA.START_A$
      8693**DCL      8694--REDEF
VX_IMAGE_DATA.STOP_A$
      8697**DCL      8698--REDEF
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:39   
VX_IMAGE_DS3.CPAGE#_A
      8758**DCL      8759--REDEF
VX_IMAGE_DS3.NODE_A$
      8770**DCL      8771--REDEF
VX_IMAGE_DS3.START_A$
      8762**DCL      8763--REDEF
VX_IMAGE_DS3.STOP_A$
      8766**DCL      8767--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8781**DCL      8782--REDEF
VX_IMAGE_DS4.NODE_A$
      8793**DCL      8794--REDEF
VX_IMAGE_DS4.START_A$
      8785**DCL      8786--REDEF
VX_IMAGE_DS4.STOP_A$
      8789**DCL      8790--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8804**DCL      8805--REDEF
VX_IMAGE_DS5.NODE_A$
      8816**DCL      8817--REDEF
VX_IMAGE_DS5.START_A$
      8808**DCL      8809--REDEF
VX_IMAGE_DS5.STOP_A$
      8812**DCL      8813--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8827**DCL      8828--REDEF
VX_IMAGE_DS6.NODE_A$
      8839**DCL      8840--REDEF
VX_IMAGE_DS6.START_A$
      8831**DCL      8832--REDEF
VX_IMAGE_DS6.STOP_A$
      8835**DCL      8836--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8850**DCL      8851--REDEF
VX_IMAGE_DS7.NODE_A$
      8862**DCL      8863--REDEF
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:40   
VX_IMAGE_DS7.START_A$
      8854**DCL      8855--REDEF
VX_IMAGE_DS7.STOP_A$
      8858**DCL      8859--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8873**DCL      8874--REDEF
VX_IMAGE_DS8.NODE_A$
      8885**DCL      8886--REDEF
VX_IMAGE_DS8.START_A$
      8877**DCL      8878--REDEF
VX_IMAGE_DS8.STOP_A$
      8881**DCL      8882--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8712**DCL      8713--REDEF
VX_IMAGE_PROC.NODE_A$
      8724**DCL      8725--REDEF
VX_IMAGE_PROC.START_A$
      8716**DCL      8717--REDEF
VX_IMAGE_PROC.STOP_A$
      8720**DCL      8721--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8735**DCL      8736--REDEF
VX_IMAGE_ROS.NODE_A$
      8747**DCL      8748--REDEF
VX_IMAGE_ROS.START_A$
      8739**DCL      8740--REDEF
VX_IMAGE_ROS.STOP_A$
      8743**DCL      8744--REDEF
VX_IO_SAVEPREV
     10132**DCL     11106<<ASSIGN  11112<<ASSIGN
VX_IO_USEPREV
     10131**DCL     11105<<ASSIGN  11111<<ASSIGN
VX_M_VECTOR.F
      8540**DCL      8544--REDEF
VX_M_VECTOR_DP.F
      8575**DCL      8579--REDEF
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:41   
VX_O.ACCTN_A$
      9704**DCL      9705--REDEF
VX_O.DCB_MATCH_A$
      9713**DCL      9714--REDEF
VX_O.DCB_MATCH_HIT_A
      9719**DCL      9720--REDEF
VX_O.FIDN_A$
      9698**DCL      9699--REDEF
VX_O.FID_A$
      9690**DCL      9691--REDEF
VX_O.INCLUDE_A$
      9710**DCL      9711--REDEF
VX_O.MAP_A
      9684**DCL      9685--REDEF
VX_O.NODCB_A
      9741**DCL      9742--REDEF
VX_O.NUM_A
      9629**DCL      9631--REDEF
VX_O.OPT_A
      9729**DCL      9730--REDEF
VX_O.PRIV_A
      9645**DCL      9647--REDEF
VX_O.SIN_A
      9598**DCL      9599--REDEF
VX_O.TCB_A
      9725**DCL      9726--REDEF
VX_OD.ACCTN_A$
      9902**DCL      9903--REDEF
VX_OD.DCB_MATCH_A$
      9911**DCL      9912--REDEF
VX_OD.FIDN_A$
      9896**DCL      9897--REDEF
VX_OD.FID_A$
      9888**DCL      9889--REDEF
VX_OD.INCLUDE_A$
      9908**DCL      9909--REDEF
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:42   
VX_OD.MAP_A
      9882**DCL      9883--REDEF
VX_OD.NODCB_A
      9926**DCL      9927--REDEF
VX_OD.NUM_A
      9829**DCL      9830--REDEF
VX_OD.PRIV_A
      9844**DCL      9845--REDEF
VX_OD.SIN_A
      9798**DCL      9799--REDEF
VX_OD.VECTOR_A$
      9917**DCL      9918--REDEF
VX_OK.KTYPE
      8659**DCL     11117>>IF
VX_OL.MAX_A
      9773**DCL      9775--REDEF
VX_OL.MIN_A
      9758**DCL      9759--REDEF
VX_ON.ACCTN_A$
     10047**DCL     10049--REDEF
VX_ON.DCB_MATCH_A$
     10058**DCL     10060--REDEF
VX_ON.FIDN_A$
     10040**DCL     10042--REDEF
VX_ON.FID_A$
     10031**DCL     10033--REDEF
VX_ON.INCLUDE_A$
     10054**DCL     10056--REDEF
VX_ON.MAP_A
     10024**DCL     10026--REDEF
VX_ON.NODCB_A$
     10074**DCL     10075--REDEF
VX_ON.NUM_A
      9969**DCL      9971--REDEF
VX_ON.PRIV_A
      9985**DCL      9987--REDEF
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:43   
VX_ON.SIN_A
      9937**DCL      9939--REDEF
VX_ON.VECTOR_A$
     10065**DCL     10066--REDEF
VX_OUHEAD.VERSION
      9384**DCL      9386--REDEF
VX_OU_HEAD
      9327**DCL      9366--REDEF   11107--CALL    11107--CALL    11113<<ASSIGN  11114--CALL    11114--CALL
     11129<<ASSIGN  11130--CALL    11130--CALL
VX_OU_HEAD.REC_A
      9339**DCL      9342--REDEF
VX_O_KEY_BUF.FORM0
      8588**DCL      8591--REDEF    8598--REDEF
VX_O_KEY_BUF.FORM0.CHARS
      8590**DCL     11128<<ASSIGN
VX_O_KEY_BUF.FORM0.COUNT
      8589**DCL     11127<<ASSIGN
VX_O_KEY_BUF_L.FORM0
      8611**DCL      8614--REDEF    8621--REDEF
VX_O_KEY_BUF_L.FORM0.CHARS
      8613**DCL     11103<<ASSIGN
VX_O_KEY_BUF_L.FORM0.COUNT
      8612**DCL     11102<<ASSIGN
VX_O_KEY_HEAD
     10146**DCL     11102--ASSIGN  11103>>ASSIGN
VX_PASS2_REF.OU.L_START
     10277**DCL     10282--REDEF
VX_PASS2_REF.OU.L_STOP
     10283**DCL     10288--REDEF
VX_PASS2_REF.OU.MAX
     10271**DCL     10276--REDEF
VX_PASS2_REF.OU.SIZE
     10289**DCL     10294--REDEF
VX_PASS2_REF.SAT.COUNT
     10316**DCL     10322--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:44   
     10323**DCL     10329--REDEF
VX_PASS2_REF.SAT.L_START
     10302**DCL     10308--REDEF
VX_PASS2_REF.SAT.L_STOP
     10309**DCL     10315--REDEF
VX_PASS2_REF.SAT.MAX
     10296**DCL     10301--REDEF
VX_PASS2_REF.UNSAT.L_START
     10364**DCL     10369--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10370**DCL     10375--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10376**DCL     10381--REDEF
VX_PASS2_REF.UNSAT.MAX
     10358**DCL     10363--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10388**DCL     10393--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10382**DCL     10387--REDEF
VX_PHRASE.PHRASE
      9790**DCL      9792--REDEF
VX_PROGRAM_BIAS.A
      9568**DCL      9569--REDEF
VX_R_KEY_BUF.FORM0
      8637**DCL      8641--REDEF    8647--REDEF
VX_SC_PASS2$
     10225**DCL     11093<<ASSIGN  11095<<ASSIGN  11122<<ASSIGN  11122>>ASSIGN
VX_SD.A
      8265**DCL      8266--REDEF
VX_SPC.B$.MINE
     10459**DCL     10465--REDEF
VX_SPC.B$.NAME
     10438**DCL     10444--REDEF
VX_SPC.B$.SKIP
     10452**DCL     10458--REDEF
VX_SPC.B$.VALUE
PL6.E3A0      #001=VXT$PROC File=VXT$PROC.:E05TSI                                WED 07/30/97 08:42 Page:45   
     10445**DCL     10451--REDEF
VX_SPC.SEG.NAME
     10407**DCL     10413--REDEF
VX_SPC.SEG.VALUE
     10414**DCL     10420--REDEF
VX_TSX0_OVERLAY.H
     10182**DCL     10185--REDEF
