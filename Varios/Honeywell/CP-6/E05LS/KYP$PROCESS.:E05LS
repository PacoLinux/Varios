VERSION E05

PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:1    
        1        1        /*M* KYP$PROCESS - PROCESS A CARD THAT WAS READ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /* This procedure is called to examine the contents of the input
       10       10        buffer and do the appropriate handling of that data.   */
       11       11        KYP$PROCESS: PROC(KY$CTX);
       12       12        /**/
       13       13        %INCLUDE GH_HARDWARE_M;
       14      111        %INCLUDE LCP_6;
       15     4390        %INCLUDE KL_AFCN_C;
       16     4491        %INCLUDE KL_MACRO_C;
       17     7843        %INCLUDE K_ID_E;
       18     7893        %K#ENTID_E;
       19     7912        %K#LYRID_E;
       20     7919        %INCLUDE KV_GLBCNS_E;
       21     8260        %INCLUDE KV_PRMID_E;
       22     8434        %INCLUDE KY_URP_M;
       23     8729        %INCLUDE KY_SUBS_C;
       24     8818        %INCLUDE KV$VDH;
       25     9249        %INCLUDE KV$GLB;
       26     9668        %INCLUDE KV$GLBCTX;
       27    10113        %INCLUDE KV$PRM;
       28    10326        %INCLUDE KH$STT;
       29    10356        %INCLUDE KV_GLB_M;
       30    10478        %INCLUDE KY_DATA_R;
       31    11273        /**/
       32    11274        %KV_BFRRLSDSP_E;
       33    11280        %KV_CMPCOD_E;
       34    11294        %KV_PRMID_E;
       35    11450        %KY$CTX;
       36    11627        /**/
       37    11628    1          DCL CNTRL_CODE UBIN WORD;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:2    
       38    11629    1          DCL TEMP$ PTR;
       39    11630    1          DCL I UBIN;
       40    11631    1          DCL BUFSZ UBIN;
       41    11632        %KV$VDH_DAT (NAME=KV_VDH_DAT,STCLASS=SYMREF);
       42    11712        %KV$VDH_DAT (STCLASS=AUTO);
       43    11792    1          DCL CHARBASE(0:79) CHAR(1) BASED ALIGNED;
       44    11793    1          DCL HOLBASE(0:79) BIT(16) BASED ALIGNED;
       45    11794        /**/
       46    11795    1          DCL KYC$CHECK_CARD ENTRY(2);
       47    11796    1          DCL KVV$VDI ENTRY(1) ALTRET;
       48    11797    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
       49    11798    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
       50    11799    1          DCL KYS$IUR_SCHED ENTRY(2);
       51    11800    1          DCL KYP$TRANS ENTRY(2);
       52    11801        /**/
       53    11802        %EJECT;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:3    
       54    11803    1          CALL KYP$TRANS(KY$CTX.INPUT.BUF$,KY$CTX.INPUT.BUF_SIZE);
       55    11804    1          CALL KYC$CHECK_CARD(KY$CTX,CNTRL_CODE);
       56    11805    1          KV$VDH_DAT = KV_VDH_DAT;
       57    11806    2          DO CASE(CNTRL_CODE);
       58    11807    2             CASE(%KY#CNTRL_BIN,%KY#CNTRL_ASC);
       59    11808    2                KY$CTX.MODE.BIN_CURR = (CNTRL_CODE = %KY#CNTRL_BIN);
       60    11809    2                KY$CTX.DVC_STATE = %KY#ST_IDLE;
       61    11810    2                CALL KYS$IUR_SCHED(KY$CTX,%KY#READ);
       62    11811    2             CASE(%KY#CNTRL_JOB,%KY#CNTRL_NONE);
       63    11812    2                IF KY$CTX.MODE.BIN_CURR THEN
       64    11813    3                   DO;
       65    11814    3                      IF CNTRL_CODE = %KY#CNTRL_JOB THEN
       66    11815    4                         DO;
       67    11816    4                            KY$CTX.MODE.BIN_CURR = '0'B;
       68    11817    4                            BUFSZ = KY$CTX.INPUT.REC_SIZE;
       69    11818    4                            CALL KVB$GET2NSYS(BUFSZ,TEMP$) ALTRET(NO_MEM);
       70    11819    4                            KY_STT_URP.USRSTT.INPBFRBYTUTL = KY_STT_URP.USRSTT.
             11819                                     INPBFRBYTUTL + BUFSZ * 2;
       71    11820    5                            DO I = 0 TO KY$CTX.INPUT.BUF_SIZE - 1;
       72    11821    5                               CALL HOLASC(TEMP$->CHARBASE(I),KY$CTX.INPUT.BUF$->
             11821                                        HOLBASE(I));
       73    11822    5                            END;           /* DO I */
       74    11823    4                            KY$CTX.INPUT.BUF$->CHARBASE = TEMP$->CHARBASE;
       75    11824    4                            CALL KVB$RLS2NSYS(BUFSZ,TEMP$);
       76    11825    4                            KY_STT_URP.USRSTT.INPBFRBYTUTL = KY_STT_URP.USRSTT.
             11825                                     INPBFRBYTUTL - BUFSZ * 2;
       77    11826    4                         END;              /* IF CODE = JOB */
       78    11827    3                      ELSE
       79    11828    4                         DO;
       80    11829                         /* Call routine to pack the data from 12 of 16 format
       81    11830                            to 12 of 12 format        */
       82    11831    4                         END; /* ELSE
       83    11832                                        */
       84    11833    3                   END;                    /* IF MODE = BIN */
       85    11834    2                KV$VDH_DAT.DAT__.ADR$ = KY$CTX.INPUT.BUF$;
       86    11835    2                KV$VDH_DAT.DAT__.BFRBYTSIZ = 80; /* Card image = 80 bytes */
       87    11836    2                KV$VDH_DAT.DAT__.DATBYTSIZ = 80;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:4    
       88    11837    2                KV$VDH_DAT.DAT__.BFRRLSDSP = %KV_BFRRLSDSP_NON;
       89    11838    2                KV$VDH_DAT.DAT__.BYTX = 0;
       90    11839    2                CALL KVV$VDI(KV$VDH_DAT);
       91    11840    2             CASE(%KY#CNTRL_FIN);
       92    11841    2                KY$CTX.MODE.BIN_CURR = '0'B;
       93    11842    2                KY$CTX.INPUT.EOF = '1'B;
       94    11843    2                KY$CTX.DVC_STATE = %KY#ST_IDLE;
       95    11844    2                KV$VDH_DAT.CMPCOD = %KV_CMPCOD_EOF;
       96    11845    2                CALL KVV$VDI(KV$VDH_DAT);
       97    11846    2          END;                             /* DO CASE */
       98    11847    1          RETURN;
       99    11848    1   NO_MEM:;
      100    11849        /* Maybe SCREECH if we can't get any memory ???? */
      101    11850        %EJECT;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:5    
      102    11851    1   HOLASC: PROC(ASCCHAR,HOLWORD);
      103    11852        /**/
      104    11853    2          DCL ASCCHAR CHAR(1) ALIGNED;
      105    11854    2          DCL HOLWORD BIT(16) ALIGNED;
      106    11855        /**/
      107    11856    2          DCL I UBIN;
      108    11857    2          DCL 1 HOLASC_TBL(0:127) CONSTANT ALIGNED,
      109    11858    2                 2 HOLVAL BIT(16) INIT('0B03'X,'0901'X,'0881'X,'0841'X,'0005'X,'0213'X,
             11858                          '020B'X,
      110    11859    2                                '0207'X,'0409'X,'0811'X,'0211'X,'0843'X,'0823'X,'0813'X
             11859                                         ,
      111    11860    2                                '080B'X,'0807'X,'0D03'X,'0501'X,'0481'X,'0441'X,'0023'X
             11860                                         ,
      112    11861    2                                '0013'X,'0081'X,'0209'X,'0403'X,'0503'X,'0007'X,'0205'X
             11861                                         ,
      113    11862    2                                '0423'X,'0413'X,'040B'X,'0407'X,'0000'X,'0806'X,'0006'X
             11862                                         ,
      114    11863    2                                '0042'X,'0442'X,'0222'X,'0800'X,'0012'X,'0812'X,'0412'X
             11863                                         ,
      115    11864    2                                '0422'X,'080A'X,'0242'X,'0400'X,'0842'X,'0300'X,'0200'X
             11864                                         ,
      116    11865    2                                '0100'X,'0080'X,'0040'X,'0020'X,'0010'X,'0008'X,'0004'X
             11865                                         ,
      117    11866    2                                '0002'X,'0001'X,'0082'X,'040A'X,'0822'X,'000A'X,'020A'X
             11866                                         ,
      118    11867    2                                '0206'X,'0022'X,'0900'X,'0880'X,'0840'X,'0820'X,'0810'X
             11867                                         ,
      119    11868    2                                '0808'X,'0804'X,'0802'X,'0801'X,'0500'X,'0480'X,'0440'X
             11868                                         ,
      120    11869    2                                '0420'X,'0410'X,'0408'X,'0404'X,'0402'X,'0401'X,'0280'X
             11869                                         ,
      121    11870    2                                '0240'X,'0220'X,'0210'X,'0208'X,'0204'X,'0202'X,'0201'X
             11870                                         ,
      122    11871    2                                '0882'X,'0282'X,'0482'X,'0406'X,'0212'X,'0102'X,'0B00'X
             11871                                         ,
      123    11872    2                                '0A80'X,'0A40'X,'0A20'X,'0A10'X,'0A08'X,'0A04'X,'0A02'X
             11872                                         ,
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:6    
      124    11873    2                                '0A01'X,'0D00'X,'0C80'X,'0C40'X,'0C20'X,'0C10'X,'0C08'X
             11873                                         ,
      125    11874    2                                '0C04'X,'0C02'X,'0C01'X,'0680'X,'0640'X,'0620'X,'0610'X
             11874                                         ,
      126    11875    2                                '0608'X,'0604'X,'0602'X,'0601'X,'0A00'X,'0C00'X,'0600'X
             11875                                         ,
      127    11876    2                                '0700'X,'0805'X),
      128    11877    2                 2 ASCCHAR CHAR(1) CALIGNED INIT(BITASC('00'X),BITASC('01'X),BITASC(
             11877                          '02'X),
      129    11878    2                                BITASC('03'X),BITASC('04'X),BITASC('05'X),BITASC('06'X)
             11878                                         ,
      130    11879    2                                BITASC('07'X),BITASC('08'X),BITASC('09'X),BITASC('0A'X)
             11879                                         ,
      131    11880    2                                BITASC('0B'X),BITASC('0C'X),BITASC('0D'X),BITASC('0E'X)
             11880                                         ,
      132    11881    2                                BITASC('0F'X),BITASC('10'X),BITASC('11'X),BITASC('12'X)
             11881                                         ,
      133    11882    2                                BITASC('13'X),BITASC('14'X),BITASC('15'X),BITASC('16'X)
             11882                                         ,
      134    11883    2                                BITASC('17'X),BITASC('18'X),BITASC('19'X),BITASC('1A'X)
             11883                                         ,
      135    11884    2                                BITASC('1B'X),BITASC('1C'X),BITASC('1D'X),BITASC('1E'X)
             11884                                         ,
      136    11885    2                                BITASC('1F'X),' ',BITASC('21'X),'"','#','$','%','&',
             11885                                         BITASC('27'X),
      137    11886    2                                '(',')','*','+',',','-','.','/','0','1','2','3','4','5'
             11886                                         ,
      138    11887    2                                '6','7','8','9',':',';','<','=','>','?','@','A','B','C'
             11887                                         ,
      139    11888    2                                'D','E','F','G','H','I','J','K','L','M','N','O','P','Q'
             11888                                         ,
      140    11889    2                                'R','S','T','U','V','W','X','Y','Z',BITASC('5B'X),'\',
             11889                                         '!',
      141    11890    2                                '^','_','`','a','b','c','d','e','f','g','h','i','j','k'
             11890                                         ,
      142    11891    2                                'l','m','n','o','p','q','r','s','t','u','v','w','x','y'
             11891                                         ,
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:7    
      143    11892    2                                'z','{','|','}','~',BITASC('7F'X));
      144    11893        %EJECT;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:8    
      145    11894    3          DO I = 0 TO 127;
      146    11895    3             IF HOLWORD = HOLASC_TBL.HOLVAL(I) THEN
      147    11896    4                DO;
      148    11897    4                   ASCCHAR = HOLASC_TBL.ASCCHAR(I);
      149    11898    4                   GOTO FOUND_IT;
      150    11899    4                END;                       /* IF */
      151    11900    3          END;                             /* DO */
      152    11901    2          ASCCHAR = ' ';
      153    11902    2   FOUND_IT:
      154    11903    2          RETURN;
      155    11904    2   END HOLASC;
      156    11905    1   END KYP$PROCESS;
      157    11906        %EOD;

PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:9    
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYP$PROCESS.

   Procedure KYP$PROCESS requires 314 words for executable code.
   Procedure KYP$PROCESS requires 32 words of local(AUTO) storage.

PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:10   

 Object Unit name= KYP$PROCESS                                File name= KYP$PROCESS.:E05TOU
 UTS= JUL 30 '97 02:43:40.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    256    100  KYP$PROCESS
    1   Proc  even  none   314    13A  KYP$PROCESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KYP$PROCESS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 KYP$TRANS
         yes           Std       2 KYS$IUR_SCHED
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       2 KVB$RLS2NSYS
         yes           Std       2 KYC$CHECK_CARD
 yes     yes           Std       1 KVV$VDI
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_STT_URP                            KV_VDH_DAT                       r    G$ROS$
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:12   


        1        1        /*M* KYP$PROCESS - PROCESS A CARD THAT WAS READ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /* This procedure is called to examine the contents of the input
       10       10        buffer and do the appropriate handling of that data.   */
       11       11        KYP$PROCESS: PROC(KY$CTX);

     11   1 000000  D380 0000 0000  xent KYP$PROCESS     LNJ,B5   X6A_AUTO_1
          1 000003       0020 0001                       DC       32,1

       12       12        /**/
       13       13        %INCLUDE GH_HARDWARE_M;
       14      111        %INCLUDE LCP_6;
       15     4390        %INCLUDE KL_AFCN_C;
       16     4491        %INCLUDE KL_MACRO_C;
       17     7843        %INCLUDE K_ID_E;
       18     7893        %K#ENTID_E;
       19     7912        %K#LYRID_E;
       20     7919        %INCLUDE KV_GLBCNS_E;
       21     8260        %INCLUDE KV_PRMID_E;
       22     8434        %INCLUDE KY_URP_M;
       23     8729        %INCLUDE KY_SUBS_C;
       24     8818        %INCLUDE KV$VDH;
       25     9249        %INCLUDE KV$GLB;
       26     9668        %INCLUDE KV$GLBCTX;
       27    10113        %INCLUDE KV$PRM;
       28    10326        %INCLUDE KH$STT;
       29    10356        %INCLUDE KV_GLB_M;
       30    10478        %INCLUDE KY_DATA_R;
       31    11273        /**/
       32    11274        %KV_BFRRLSDSP_E;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:13   
       33    11280        %KV_CMPCOD_E;
       34    11294        %KV_PRMID_E;
       35    11450        %KY$CTX;
       36    11627        /**/
       37    11628    1          DCL CNTRL_CODE UBIN WORD;
       38    11629    1          DCL TEMP$ PTR;
       39    11630    1          DCL I UBIN;
       40    11631    1          DCL BUFSZ UBIN;
       41    11632        %KV$VDH_DAT (NAME=KV_VDH_DAT,STCLASS=SYMREF);
       42    11712        %KV$VDH_DAT (STCLASS=AUTO);
       43    11792    1          DCL CHARBASE(0:79) CHAR(1) BASED ALIGNED;
       44    11793    1          DCL HOLBASE(0:79) BIT(16) BASED ALIGNED;
       45    11794        /**/
       46    11795    1          DCL KYC$CHECK_CARD ENTRY(2);
       47    11796    1          DCL KVV$VDI ENTRY(1) ALTRET;
       48    11797    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
       49    11798    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
       50    11799    1          DCL KYS$IUR_SCHED ENTRY(2);
       51    11800    1          DCL KYP$TRANS ENTRY(2);
       52    11801        /**/
       53    11802        %EJECT;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:14   
       54    11803    1          CALL KYP$TRANS(KY$CTX.INPUT.BUF$,KY$CTX.INPUT.BUF_SIZE);

  11803   1 000005  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 000007  DBC6 001C                            LAB,B5   28,B6
          1 000009  DFC7 001E                            STB,B5   I+4,AUTO
          1 00000B  CBC6 001A                            LAB,B4   26,B6
          1 00000D  CFC7 001C                            STB,B4   I+2,AUTO
          1 00000F  BBC7 001C                            LAB,B3   I+2,AUTO
          1 000011  CBF0 0200                            LAB,B4   512,IMO
          1 000013  E380 0000 0000  xent                 LNJ,B6   KYP$TRANS
          1 000016       0001                            DC       s:11804,PREL

       55    11804    1          CALL KYC$CHECK_CARD(KY$CTX,CNTRL_CODE);

  11804   1 000017  EBC7 0006                            LAB,B6   CNTRL_CODE,AUTO
          1 000019  EFC7 001E                            STB,B6   I+4,AUTO
          1 00001B  DCC7 0004                            LDB,B5   @KY$CTX,AUTO
          1 00001D  DFC7 001C                            STB,B5   I+2,AUTO
          1 00001F  BBC7 001C                            LAB,B3   I+2,AUTO
          1 000021  CBF0 0200                            LAB,B4   512,IMO
          1 000023  E380 0000 0000  xent                 LNJ,B6   KYC$CHECK_CARD
          1 000026       0001                            DC       s:11805,PREL

       56    11805    1          KV$VDH_DAT = KV_VDH_DAT;

  11805   1 000027  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT
          1 00002A  2C00                                 LDV,R2   0
          1 00002B  6C10                                 LDV,R6   16
          1 00002C  BB87                                 LAB,B3   ,AUTO
          1 00002D  3C16                                 LDV,R3   22
          1 00002E  0008                                 MMM

       57    11806    2          DO CASE(CNTRL_CODE);

  11806   1 00002F  B847 0006                            LDR,R3   CNTRL_CODE,AUTO
          1 000031  3D06                                 CMV,R3   6
          1 000032  0281 00D7                            BGE      s:11847,PREL
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:15   
          1 000034  A830 0000 003A  01                   LDR,R2   s:11806+11,R3
          1 000037  83A0 0000 0040  01                   JMP      s:11808,R2
          1 00003A       00CA                            DC       s:11847,PREL
          1 00003B       0000                            DC       s:11808,PREL
          1 00003C       0000                            DC       s:11808,PREL
          1 00003D       001F                            DC       s:11812,PREL
          1 00003E       00B1                            DC       s:11841,PREL
          1 00003F       001F                            DC       s:11812,PREL

       58    11807    2             CASE(%KY#CNTRL_BIN,%KY#CNTRL_ASC);

       59    11808    2                KY$CTX.MODE.BIN_CURR = (CNTRL_CODE = %KY#CNTRL_BIN);

  11808   1 000040  D870 8000                            LDR,R5   -32768,IMO
          1 000042  3D01                                 CMV,R3   1
          1 000043  0901 0002                            BE       s:11808+6,PREL
          1 000045  5C00                                 LDV,R5   0
          1 000046  5048                                 SOR,R5   8
          1 000047  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 000049  DAC6 000C                            SRM,R5,'0080'X    12,B6
          1 00004B       0080

       60    11809    2                KY$CTX.DVC_STATE = %KY#ST_IDLE;

  11809   1 00004C  6C01                                 LDV,R6   1
          1 00004D  E7C6 0004                            STH,R6   4,B6

       61    11810    2                CALL KYS$IUR_SCHED(KY$CTX,%KY#READ);

  11810   1 00004F  DBF0 0002                            LAB,B5   2,IMO
          1 000051  DFC7 001E                            STB,B5   I+4,AUTO
          1 000053  EFC7 001C                            STB,B6   I+2,AUTO
          1 000055  BBC7 001C                            LAB,B3   I+2,AUTO
          1 000057  CBF0 0200                            LAB,B4   512,IMO
          1 000059  E380 0000 0000  xent                 LNJ,B6   KYS$IUR_SCHED
          1 00005C       0001                            DC       s:11810+14,PREL
          1 00005D  0F81 00AC                            B        s:11847,PREL
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:16   

       62    11811    2             CASE(%KY#CNTRL_JOB,%KY#CNTRL_NONE);

       63    11812    2                IF KY$CTX.MODE.BIN_CURR THEN

  11812   1 00005F  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 000061  82C6 000C                            LB,'0080'X        12,B6
          1 000063       0080
          1 000064  0581 006E                            BBF      s:11834,PREL

       64    11813    3                   DO;

       65    11814    3                      IF CNTRL_CODE = %KY#CNTRL_JOB THEN

  11814   1 000066  3D03                                 CMV,R3   3
          1 000067  0981 006B                            BNE      s:11834,PREL

       66    11815    4                         DO;

       67    11816    4                            KY$CTX.MODE.BIN_CURR = '0'B;

  11816   1 000069  8846 000C                            LBF,'0080'X       12,B6
  11816   1 00006B       0080

       68    11817    4                            BUFSZ = KY$CTX.INPUT.REC_SIZE;

  11817   1 00006C  E846 001D                            LDR,R6   29,B6
          1 00006E  EF47 000A                            STR,R6   BUFSZ,AUTO

       69    11818    4                            CALL KVB$GET2NSYS(BUFSZ,TEMP$) ALTRET(NO_MEM);

  11818   1 000070  DBC7 0007                            LAB,B5   TEMP$,AUTO
          1 000072  DFC7 001E                            STB,B5   I+4,AUTO
          1 000074  CBC7 000A                            LAB,B4   BUFSZ,AUTO
          1 000076  CFC7 001C                            STB,B4   I+2,AUTO
          1 000078  BBC7 001C                            LAB,B3   I+2,AUTO
          1 00007A  CBF0 0200                            LAB,B4   512,IMO
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:17   
          1 00007C  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 00007F       008E                            DC       s:11842,PREL

       70    11819    4                            KY_STT_URP.USRSTT.INPBFRBYTUTL = KY_STT_URP.USRSTT.
             11819                                     INPBFRBYTUTL + BUFSZ * 2;

  11819   1 000080  F847 000A                            LDR,R7   BUFSZ,AUTO
          1 000082  6C00                                 LDV,R6   0
          1 000083  7081                                 DOL,R7   1
          1 000084  8400 0000 001C  xsym                 AID      KY_STT_URP+28
          1 000087  8D00 0000 001C  xsym                 SDI      KY_STT_URP+28

       71    11820    5                            DO I = 0 TO KY$CTX.INPUT.BUF_SIZE - 1;

  11820   1 00008A  8747 0009                            CL       I,AUTO
          1 00008C  0F81 0014                            B        s:11822+2,PREL

       72    11821    5                               CALL HOLASC(TEMP$->CHARBASE(I),KY$CTX.INPUT.BUF$->
             11821                                        HOLBASE(I));

  11821   1 00008E  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 000090  DCC6 001A                            LDB,B5   26,B6
          1 000092  B847 0009                            LDR,R3   I,AUTO
          1 000094  CBB5                                 LAB,B4   ,B5,R3
          1 000095  CFC7 0018                            STB,B4   @ASCCHAR+2,AUTO
          1 000097  BCC7 0007                            LDB,B3   TEMP$,AUTO
          1 000099  ABB3                                 LAB,B2   ,B3,R3
          1 00009A  AFC7 0016                            STB,B2   KV$VDH_DAT+11,AUTO
          1 00009C  E3C0 0072                            LNJ,B6   s:0,PREL
          1 00009E       0001                            DC       s:11822,PREL

       73    11822    5                            END;           /* DO I */

  11822   1 00009F  8AC7 0009                            INC      I,AUTO
          1 0000A1  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 0000A3  E847 0009                            LDR,R6   I,AUTO
          1 0000A5  E946 001C                            CMR,R6   28,B6
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:18   
          1 0000A7  0267                                 BL       s:11821,SPREL

       74    11823    4                            KY$CTX.INPUT.BUF$->CHARBASE = TEMP$->CHARBASE;

  11823   1 0000A8  DCC6 001A                            LDB,B5   26,B6
          1 0000AA  ACC7 0007                            LDB,B2   TEMP$,AUTO
          1 0000AC  2C00                                 LDV,R2   0
          1 0000AD  E870 009F                            LDR,R6   159,IMO
          1 0000AF  BB85                                 LAB,B3   ,B5
          1 0000B0  3C00                                 LDV,R3   0
          1 0000B1  0008                                 MMM

       75    11824    4                            CALL KVB$RLS2NSYS(BUFSZ,TEMP$);

  11824   1 0000B2  CBC7 0007                            LAB,B4   TEMP$,AUTO
          1 0000B4  CFC7 001E                            STB,B4   I+4,AUTO
          1 0000B6  ABC7 000A                            LAB,B2   BUFSZ,AUTO
          1 0000B8  AFC7 001C                            STB,B2   I+2,AUTO
          1 0000BA  BBC7 001C                            LAB,B3   I+2,AUTO
          1 0000BC  CBF0 0200                            LAB,B4   512,IMO
          1 0000BE  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          1 0000C1       0001                            DC       s:11825,PREL

       76    11825    4                            KY_STT_URP.USRSTT.INPBFRBYTUTL = KY_STT_URP.USRSTT.
             11825                                     INPBFRBYTUTL - BUFSZ * 2;

  11825   1 0000C2  F847 000A                            LDR,R7   BUFSZ,AUTO
          1 0000C4  6C00                                 LDV,R6   0
          1 0000C5  7081                                 DOL,R7   1
          1 0000C6  8656                                 CPL      R6
          1 0000C7  8657                                 CPL      R7
          1 0000C8  8470 0000 0001                       AID      1,IMO
          1 0000CB  8400 0000 001C  xsym                 AID      KY_STT_URP+28
          1 0000CE  8D00 0000 001C  xsym                 SDI      KY_STT_URP+28

       77    11826    4                         END;              /* IF CODE = JOB */

PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:19   
  11826   1 0000D1  0F81 0001                            B        s:11834,PREL

       78    11827    3                      ELSE
       79    11828    4                         DO;

       80    11829                         /* Call routine to pack the data from 12 of 16 format
       81    11830                            to 12 of 12 format        */
       82    11831    4                         END; /* ELSE

       83    11832                                        */
       84    11833    3                   END;                    /* IF MODE = BIN */

       85    11834    2                KV$VDH_DAT.DAT__.ADR$ = KY$CTX.INPUT.BUF$;

  11834   1 0000D3  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 0000D5  DCC6 001A                            LDB,B5   26,B6
          1 0000D7  DFC7 000C                            STB,B5   KV$VDH_DAT+1,AUTO

       86    11835    2                KV$VDH_DAT.DAT__.BFRBYTSIZ = 80; /* Card image = 80 bytes */

  11835   1 0000D9  6C50                                 LDV,R6   80
          1 0000DA  EF47 0010                            STR,R6   KV$VDH_DAT+5,AUTO

       87    11836    2                KV$VDH_DAT.DAT__.DATBYTSIZ = 80;

  11836   1 0000DC  EF47 000F                            STR,R6   KV$VDH_DAT+4,AUTO

       88    11837    2                KV$VDH_DAT.DAT__.BFRRLSDSP = %KV_BFRRLSDSP_NON;

  11837   1 0000DE  8847 0011                            LBF,'00FF'X       KV$VDH_DAT+6,AUTO
  11837   1 0000E0       00FF

       89    11838    2                KV$VDH_DAT.DAT__.BYTX = 0;

  11838   1 0000E1  8747 000E                            CL       KV$VDH_DAT+3,AUTO

       90    11839    2                CALL KVV$VDI(KV$VDH_DAT);
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:20   

  11839   1 0000E3  CBC7 000B                            LAB,B4   KV$VDH_DAT,AUTO
          1 0000E5  CFC7 001C                            STB,B4   I+2,AUTO
          1 0000E7  BBC7 001C                            LAB,B3   I+2,AUTO
          1 0000E9  CBF0 0100                            LAB,B4   256,IMO
          1 0000EB  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 0000EE       0001                            DC       s:11839+12,PREL
          1 0000EF  0F81 001A                            B        s:11847,PREL

       91    11840    2             CASE(%KY#CNTRL_FIN);

       92    11841    2                KY$CTX.MODE.BIN_CURR = '0'B;

  11841   1 0000F1  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 0000F3  8846 000C                            LBF,'0080'X       12,B6
          1 0000F5       0080

       93    11842    2                KY$CTX.INPUT.EOF = '1'B;

  11842   1 0000F6  8946 001E                            LBT,'4000'X       30,B6
  11842   1 0000F8       4000

       94    11843    2                KY$CTX.DVC_STATE = %KY#ST_IDLE;

  11843   1 0000F9  6C01                                 LDV,R6   1
          1 0000FA  E7C6 0004                            STH,R6   4,B6

       95    11844    2                KV$VDH_DAT.CMPCOD = %KV_CMPCOD_EOF;

  11844   1 0000FC  E7C7 0012                            STH,R6   KV$VDH_DAT+7,AUTO

       96    11845    2                CALL KVV$VDI(KV$VDH_DAT);

  11845   1 0000FE  DBC7 000B                            LAB,B5   KV$VDH_DAT,AUTO
          1 000100  DFC7 001C                            STB,B5   I+2,AUTO
          1 000102  BBC7 001C                            LAB,B3   I+2,AUTO
          1 000104  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:21   
          1 000106  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000109       0001                            DC       s:11847,PREL

       97    11846    2          END;                             /* DO CASE */

       98    11847    1          RETURN;

  11847   1 00010A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

  11842   1 00010D  0F81 0029            NO_MEM          B        s:11905,PREL

       99    11848    1   NO_MEM:;
      100    11849        /* Maybe SCREECH if we can't get any memory ???? */
      101    11850        %EJECT;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:22   
      102    11851    1   HOLASC: PROC(ASCCHAR,HOLWORD);

  11851   1 00010F  EFC7 0014            HOLASC          STB,B6   KV$VDH_DAT+9,AUTO

      103    11852        /**/
      104    11853    2          DCL ASCCHAR CHAR(1) ALIGNED;
      105    11854    2          DCL HOLWORD BIT(16) ALIGNED;
      106    11855        /**/
      107    11856    2          DCL I UBIN;
      108    11857    2          DCL 1 HOLASC_TBL(0:127) CONSTANT ALIGNED,
      109    11858    2                2 HOLVAL BIT(16) INIT('0B03'X,'0901'X,'0881'X,'0841'X,'0005'X,'0213'X,
             11858                          '020B'X,
      110    11859    2                               '0207'X,'0409'X,'0811'X,'0211'X,'0843'X,'0823'X,'0813'X
             11859                                         ,
      111    11860    2                               '080B'X,'0807'X,'0D03'X,'0501'X,'0481'X,'0441'X,'0023'X
             11860                                         ,
      112    11861    2                               '0013'X,'0081'X,'0209'X,'0403'X,'0503'X,'0007'X,'0205'X
             11861                                         ,
      113    11862    2                               '0423'X,'0413'X,'040B'X,'0407'X,'0000'X,'0806'X,'0006'X
             11862                                         ,
      114    11863    2                               '0042'X,'0442'X,'0222'X,'0800'X,'0012'X,'0812'X,'0412'X
             11863                                         ,
      115    11864    2                               '0422'X,'080A'X,'0242'X,'0400'X,'0842'X,'0300'X,'0200'X
             11864                                         ,
      116    11865    2                               '0100'X,'0080'X,'0040'X,'0020'X,'0010'X,'0008'X,'0004'X
             11865                                         ,
      117    11866    2                               '0002'X,'0001'X,'0082'X,'040A'X,'0822'X,'000A'X,'020A'X
             11866                                         ,
      118    11867    2                               '0206'X,'0022'X,'0900'X,'0880'X,'0840'X,'0820'X,'0810'X
             11867                                         ,
      119    11868    2                               '0808'X,'0804'X,'0802'X,'0801'X,'0500'X,'0480'X,'0440'X
             11868                                         ,
      120    11869    2                               '0420'X,'0410'X,'0408'X,'0404'X,'0402'X,'0401'X,'0280'X
             11869                                         ,
      121    11870    2                               '0240'X,'0220'X,'0210'X,'0208'X,'0204'X,'0202'X,'0201'X
             11870                                         ,
      122    11871    2                               '0882'X,'0282'X,'0482'X,'0406'X,'0212'X,'0102'X,'0B00'X
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:23   
             11871                                         ,
      123    11872    2                               '0A80'X,'0A40'X,'0A20'X,'0A10'X,'0A08'X,'0A04'X,'0A02'X
             11872                                         ,
      124    11873    2                               '0A01'X,'0D00'X,'0C80'X,'0C40'X,'0C20'X,'0C10'X,'0C08'X
             11873                                         ,
      125    11874    2                               '0C04'X,'0C02'X,'0C01'X,'0680'X,'0640'X,'0620'X,'0610'X
             11874                                         ,
      126    11875    2                               '0608'X,'0604'X,'0602'X,'0601'X,'0A00'X,'0C00'X,'0600'X
             11875                                         ,
      127    11876    2                                '0700'X,'0805'X),
      128    11877    2                 2 ASCCHAR CHAR(1) CALIGNED INIT(BITASC('00'X),BITASC('01'X),BITASC(
             11877                          '02'X),
      129    11878    2                               BITASC('03'X),BITASC('04'X),BITASC('05'X),BITASC('06'X)
             11878                                         ,
      130    11879    2                               BITASC('07'X),BITASC('08'X),BITASC('09'X),BITASC('0A'X)
             11879                                         ,
      131    11880    2                               BITASC('0B'X),BITASC('0C'X),BITASC('0D'X),BITASC('0E'X)
             11880                                         ,
      132    11881    2                               BITASC('0F'X),BITASC('10'X),BITASC('11'X),BITASC('12'X)
             11881                                         ,
      133    11882    2                               BITASC('13'X),BITASC('14'X),BITASC('15'X),BITASC('16'X)
             11882                                         ,
      134    11883    2                               BITASC('17'X),BITASC('18'X),BITASC('19'X),BITASC('1A'X)
             11883                                         ,
      135    11884    2                               BITASC('1B'X),BITASC('1C'X),BITASC('1D'X),BITASC('1E'X)
             11884                                         ,
      136    11885    2                                BITASC('1F'X),' ',BITASC('21'X),'"','#','$','%','&',
             11885                                         BITASC('27'X),
      137    11886    2                               '(',')','*','+',',','-','.','/','0','1','2','3','4','5'
             11886                                         ,
      138    11887    2                               '6','7','8','9',':',';','<','=','>','?','@','A','B','C'
             11887                                         ,
      139    11888    2                               'D','E','F','G','H','I','J','K','L','M','N','O','P','Q'
             11888                                         ,
      140    11889    2                                'R','S','T','U','V','W','X','Y','Z',BITASC('5B'X),'\',
             11889                                         '!',
      141    11890    2                               '^','_','`','a','b','c','d','e','f','g','h','i','j','k'
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:24   
             11890                                         ,
      142    11891    2                               'l','m','n','o','p','q','r','s','t','u','v','w','x','y'
             11891                                         ,
      143    11892    2                                'z','{','|','}','~',BITASC('7F'X));
      144    11893        %EJECT;
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:25   
      145    11894    3          DO I = 0 TO 127;

  11894   1 000111  8747 001A                            CL       I,AUTO

      146    11895    3             IF HOLWORD = HOLASC_TBL.HOLVAL(I) THEN

  11895   1 000113  ECC7 0018                            LDB,B6   @HOLWORD,AUTO
          1 000115  E806                                 LDR,R6   ,B6
          1 000116  B847 001A                            LDR,R3   I,AUTO
          1 000118  3001                                 SOL,R3   1
          1 000119  E930 0000 0000  00                   CMR,R6   HOLASC_TBL,R3
          1 00011C  0981 000C                            BNE      s:11900,PREL

      147    11896    4                DO;

      148    11897    4                   ASCCHAR = HOLASC_TBL.ASCCHAR(I);

  11897   1 00011E  A847 001A                            LDR,R2   I,AUTO
          1 000120  2002                                 SOL,R2   2
          1 000121  D0A0 0000 0001  00                   LDH,R5   HOLASC_TBL+1,R2
          1 000124  DCC7 0016                            LDB,B5   @ASCCHAR,AUTO
          1 000126  D785                                 STH,R5   ,B5

      149    11898    4                   GOTO FOUND_IT;

  11898   1 000127  0F81 000B                            B        s:11903,PREL

      150    11899    4                END;                       /* IF */
      151    11900    3          END;                             /* DO */

  11900   1 000129  8AC7 001A                            INC      I,AUTO
          1 00012B  D847 001A                            LDR,R5   I,AUTO
          1 00012D  5D7F                                 CMV,R5   127
          1 00012E  03E5                                 BLE      s:11895,SPREL

      152    11901    2          ASCCHAR = ' ';

PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:26   
  11901   1 00012F  4C20                                 LDV,R4   32
          1 000130  DCC7 0016                            LDB,B5   @ASCCHAR,AUTO
          1 000132  C785                                 STH,R4   ,B5

      153    11902    2   FOUND_IT:
      154    11903    2          RETURN;

  11903   1 000133  ECC7 0014            FOUND_IT        LDB,B6   KV$VDH_DAT+9,AUTO
          1 000135  C3C6 0001                            LNJ,B4   1,B6

      155    11904    2   END HOLASC;
      156    11905    1   END KYP$PROCESS;

  11905   1 000137  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      157    11906        %EOD;

PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:27   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYP$PROCESS.
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:28   

 **** Variables and constants ****

  ****  Section 000 RoData KYP$PROCESS

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(24)    r     1 HOLASC_TBL(0:127)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/w PTR         r     1 @ASCCHAR                  18-0-0/w PTR         r     1 @HOLWORD
     4-0-0/w PTR         r     1 @KY$CTX                   *0-0-0/w CHAR        r     1 ASCCHAR
     A-0-0/w UBIN(16)    r     1 BUFSZ                      6-0-0/w UBIN(16)    r     1 CNTRL_CODE
    *0-0-0/w BIT (16)    r     1 HOLWORD                    9-0-0/w UBIN(16)    r     1 I
    1A-0-0/w UBIN(16)    r     1 I                          B-0-0/w STRC(128)   r     1 KV$VDH_DAT
    *0-0-0/w STRC(608)   r     1 KY$CTX                     7-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(128)   r     1 KV_VDH_DAT                 0-0-0/w STRC(672)   r     1 KY_STT_URP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR        r     1 CHARBASE(0:79)
     0-0-0/w BIT (16)    r     1 HOLBASE(0:79)

PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:29   

   Procedure KYP$PROCESS requires 314 words for executable code.
   Procedure KYP$PROCESS requires 32 words of local(AUTO) storage.
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:30   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:31   
          MINI XREF LISTING

ASCCHAR IN PROCEDURE HOLASC
     11853**DCL     11851--PROC    11897<<ASSIGN  11901<<ASSIGN
BUFSZ
     11631**DCL     11817<<ASSIGN  11818<>CALL    11819>>ASSIGN  11824<>CALL    11825>>ASSIGN
CHARBASE
     11792**DCL     11821<>CALL    11823<<ASSIGN  11823>>ASSIGN
CNTRL_CODE
     11628**DCL     11804<>CALL    11806>>DOCASE  11808>>ASSIGN  11814>>IF
FOUND_IT IN PROCEDURE HOLASC
     11903**LABEL   11898--GOTO
HOLASC
     11851**PROC    11821--CALL
HOLASC_TBL.ASCCHAR IN PROCEDURE HOLASC
     11877**DCL     11897>>ASSIGN
HOLASC_TBL.HOLVAL IN PROCEDURE HOLASC
     11858**DCL     11895>>IF
HOLBASE
     11793**DCL     11821<>CALL
HOLWORD IN PROCEDURE HOLASC
     11854**DCL     11851--PROC    11895>>IF
I
     11630**DCL     11820<<DOINDEX 11821>>CALL    11821>>CALL
I IN PROCEDURE HOLASC
     11856**DCL     11894<<DOINDEX 11895>>IF      11897>>ASSIGN
KV$VDH_DAT
     11745**DCL     11805<<ASSIGN  11839<>CALL    11845<>CALL
KV$VDH_DAT.CMPCOD
     11785**DCL     11844<<ASSIGN
KV$VDH_DAT.DAT__.ADR$
     11781**DCL     11834<<ASSIGN
KV$VDH_DAT.DAT__.BFRBYTSIZ
     11782**DCL     11835<<ASSIGN
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:32   
KV$VDH_DAT.DAT__.BFRRLSDSP
     11783**DCL     11837<<ASSIGN
KV$VDH_DAT.DAT__.BYTX
     11781**DCL     11838<<ASSIGN
KV$VDH_DAT.DAT__.DATBYTSIZ
     11781**DCL     11836<<ASSIGN
KVB$GET2NSYS
     11797**DCL-ENT 11818--CALL
KVB$RLS2NSYS
     11798**DCL-ENT 11824--CALL
KVV$VDI
     11796**DCL-ENT 11839--CALL    11845--CALL
KV_STT.REQSTATS.DSPMSK
     11149**DCL     11155--REDEF
KV_STT.REQSTATS.SLCMSK
     11190**DCL     11197--REDEF
KV_VDH_DAT
     11665**DCL     11805>>ASSIGN
KY$CTX
     11461**DCL        11--PROC    11804<>CALL    11810<>CALL
KY$CTX.DEFRD.STATUSW
     11603**DCL     11605--REDEF
KY$CTX.DVC_STATE
     11464**DCL     11809<<ASSIGN  11843<<ASSIGN
KY$CTX.INPUT.BUF$
     11582**DCL     11803<>CALL    11821>>CALL    11823>>ASSIGN  11834>>ASSIGN
KY$CTX.INPUT.BUF_SIZE
     11583**DCL     11803<>CALL    11820>>DOINDEX
KY$CTX.INPUT.EOF
     11589**DCL     11842<<ASSIGN
KY$CTX.INPUT.REC_SIZE
     11584**DCL     11817>>ASSIGN
KY$CTX.MODE
     11552**DCL     11560--REDEF
KY$CTX.MODE.BIN_CURR
     11556**DCL     11808<<ASSIGN  11812>>IF      11816<<ASSIGN  11841<<ASSIGN
PL6.E3A0      #001=KYP$PROCESS File=KYP$PROCESS.:E05TSI                          WED 07/30/97 02:43 Page:33   
KY$CTX.STATUSW
     11479**DCL     11481--REDEF   11489--REDEF   11503--REDEF   11517--REDEF   11531--REDEF
KY$CTX.VDIENB
     11617**DCL     11623--REDEF
KYC$CHECK_CARD
     11795**DCL-ENT 11804--CALL
KYP$TRANS
     11800**DCL-ENT 11803--CALL
KYS$IUR_SCHED
     11799**DCL-ENT 11810--CALL
KY_STT_URP.REQSTATS.DSPMSK
     10798**DCL     10804--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     10839**DCL     10846--REDEF
KY_STT_URP.USRSTT.INPBFRBYTUTL
     10870**DCL     11819<<ASSIGN  11819>>ASSIGN  11825<<ASSIGN  11825>>ASSIGN
NO_MEM
     11842**LABEL   11818--CALLALT
TEMP$
     11629**DCL     11818<>CALL    11821>>CALL    11823>>ASSIGN  11824<>CALL

PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:34   
      158        1        /*M* KYP$TRANS - TRANSLATE CHARACTERS IN A BUFFER */
      159        2        /*T***********************************************************/
      160        3        /*T*                                                         */
      161        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      162        5        /*T*                                                         */
      163        6        /*T***********************************************************/
      164        7        /* This procedure is here because the CR reads a '!' off a card as
      165        8        a ']' and vice versa.  This may be true going the other direction, i.e.
      166        9        the CP may print a '!' as a ']', and so this routine may have to be
      167       10        called to translate an output buffer before printing it.            */
      168       11        KYP$TRANS: PROC(BUF$,BUFSZ);
      169       12        /**/
      170       13    1          DCL BUF$ PTR;
      171       14    1          DCL BUFSZ SBIN;
      172       15        /**/
      173       16    1          DCL BUF(0:0) CHAR(1) BASED(BUF$);
      174       17    1          DCL I UBIN;
      175       18        /**/
      176       19        %EJECT;
PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:35   
      177       20    2          DO I = 0 TO BUFSZ - 1;
      178       21    2             IF BUF(I)='!' THEN
      179       22    2                BUF(I) = ']';
      180       23    2             ELSE
      181       24    2                IF BUF(I)=']' THEN
      182       25    2                   BUF(I) = '!';
      183       26    2          END;                             /* DO I */
      184       27    1          RETURN;
      185       28    1   END KYP$TRANS;

PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:36   
      No diagnostics issued in procedure KYP$TRANS.

   Procedure KYP$TRANS requires 40 words for executable code.
   Procedure KYP$TRANS requires 10 words of local(AUTO) storage.

    No errors detected in file KYP$PROCESS.:E05TSI    .

PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:37   

 Object Unit name= KYP$TRANS                                  File name= KYP$PROCESS.:E05TOU
 UTS= JUL 30 '97 02:44:32.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    40     28  KYP$TRANS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KYP$TRANS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:38   


      158        1        /*M* KYP$TRANS - TRANSLATE CHARACTERS IN A BUFFER */
      159        2        /*T***********************************************************/
      160        3        /*T*                                                         */
      161        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      162        5        /*T*                                                         */
      163        6        /*T***********************************************************/
      164        7        /* This procedure is here because the CR reads a '!' off a card as
      165        8        a ']' and vice versa.  This may be true going the other direction, i.e.
      166        9        the CP may print a '!' as a ']', and so this routine may have to be
      167       10        called to translate an output buffer before printing it.            */
      168       11        KYP$TRANS: PROC(BUF$,BUFSZ);

     11   0 000000  D380 0000 0000  xent KYP$TRANS       LNJ,B5   X6A_AUTO_2
          0 000003       000A 0002                       DC       10,2

      169       12        /**/
      170       13    1          DCL BUF$ PTR;
      171       14    1          DCL BUFSZ SBIN;
      172       15        /**/
      173       16    1          DCL BUF(0:0) CHAR(1) BASED(BUF$);
      174       17    1          DCL I UBIN;
      175       18        /**/
      176       19        %EJECT;
PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:39   
      177       20    2          DO I = 0 TO BUFSZ - 1;

     20   0 000005  8747 0008                            CL       I,AUTO
          0 000007  0F81 0015                            B        s:26+2,PREL

      178       21    2             IF BUF(I)='!' THEN

     21   0 000009  ECC7 0004                            LDB,B6   @BUF$,AUTO
          0 00000B  DC86                                 LDB,B5   ,B6
          0 00000C  B847 0008                            LDR,R3   I,AUTO
          0 00000E  E0B5                                 LDH,R6   ,B5,R3
          0 00000F  6D21                                 CMV,R6   33
          0 000010  0981 0005                            BNE      s:24,PREL

      179       22    2                BUF(I) = ']';

     22   0 000012  5C5D                                 LDV,R5   93
          0 000013  D7B5                                 STH,R5   ,B5,R3
          0 000014  0F81 0006                            B        s:26,PREL

      180       23    2             ELSE
      181       24    2                IF BUF(I)=']' THEN

     24   0 000016  6D5D                                 CMV,R6   93
          0 000017  0981 0003                            BNE      s:26,PREL

      182       25    2                   BUF(I) = '!';

     25   0 000019  5C21                                 LDV,R5   33
          0 00001A  D7B5                                 STH,R5   ,B5,R3

      183       26    2          END;                             /* DO I */

     26   0 00001B  8AC7 0008                            INC      I,AUTO
          0 00001D  ECC7 0006                            LDB,B6   @BUFSZ,AUTO
          0 00001F  E847 0008                            LDR,R6   I,AUTO
          0 000021  6801 0003                            BLZ,R6   s:27,PREL
PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:40   
          0 000023  E906                                 CMR,R6   ,B6
          0 000024  0865                                 BAL      s:21,SPREL

      184       27    1          RETURN;

     27   0 000025  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      185       28    1   END KYP$TRANS;

PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:41   
      No diagnostics issued in procedure KYP$TRANS.
PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:42   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BUF$                      6-0-0/w PTR         r     1 @BUFSZ
    *0-0-0/w PTR         r     1 BUF$                      *0-0-0/w SBIN(16)    r     1 BUFSZ
     8-0-0/w UBIN(16)    r     1 I

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 BUF(0:0)


   Procedure KYP$TRANS requires 40 words for executable code.
   Procedure KYP$TRANS requires 10 words of local(AUTO) storage.

    No errors detected in file KYP$PROCESS.:E05TSI    .
PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:43   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KYP$TRANS File=KYP$PROCESS.:E05TSI                            WED 07/30/97 02:44 Page:44   
          MINI XREF LISTING

BUF
        16**DCL        21>>IF         22<<ASSIGN     24>>IF         25<<ASSIGN
BUF$
        13**DCL        11--PROC       16--IMP-PTR    21>>IF         22>>ASSIGN     24>>IF         25>>ASSIGN
BUFSZ
        14**DCL        11--PROC       20>>DOINDEX
I
        17**DCL        20<<DOINDEX    21>>IF         22>>ASSIGN     24>>IF         25>>ASSIGN
