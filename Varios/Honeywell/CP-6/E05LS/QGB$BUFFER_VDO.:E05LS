VERSION E05

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:1    
        1        1        /*M* QGB$BUFFER_VDO:  VDO-buffering library services.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        /*F* NAME:  VDO-Buffering Library Services
        9        9        ..::L1 "QGB Services"
       10       10        The QGB services allow a user program to perform more efficient
       11       11        forms-mode I/O by buffering the requests for input and output to
       12       12        the screen.  The services are used in place of calls to FEP
       13       13        monitor services.  The VDO-buffering library services correspond to
       14       14        the monitor service as follows:
       15       15
       16       16        .fif
       17       17            QGB Service     Monitor Service
       18       18            -----------     ---------------
       19       19            QGB$OPEN        M$OPEN
       20       20            QGB$CLOSE       M$CLOSE
       21       21            QGB$DCLFLD      M$DCLFLD
       22       22            QGB$MDFFLD      M$MDFFLD
       23       23            QGB$SLCFLD      M$SLCFLD
       24       24            QGB$RLSFLD      M$RLSFLD
       25       25            QGB$ERASE       M$ERASE
       26       26            QGB$READ        M$READ
       27       27            QGB$WRITE       M$WRITE
       28       28            QGB$DEVICE      M$DEVICE
       29       29
       30       30        .fin
       31       31        In addition, a QGB$FLUSH service is provided to allow the user to
       32       32        force completion of any buffered output.
       33       33
       34       34        The QGB service call refers to an FPT that corresponds to the equivalent
       35       35        monitor service, and also to a QGB_PARAM structure.  The QGB_PARAM
       36       36        structure specifies the size and location of the blocking buffer to
       37       37        be used by the VDO packing and unpacking routines, and receives
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:2    
       38       38        information returned by the QGB service.
       39       39        */
       40       40
       41       41        QGB$BUFFER_VDO: PROC ( QGB_ARG, QGB_PARAM ) ALTRET;
       42       42
       43       43        %INCLUDE LCP_6;
       44      234        %INCLUDE G_ROS_M;
       45      316        %INCLUDE KI$CP6V_C;
       46      755        %INCLUDE K_CP6_M;
       47      951        %INCLUDE KV$VDO;
       48     1966        %INCLUDE KV$GLB;
       49     2385        %INCLUDE KV$PRM;
       50     2598        %INCLUDE GU_MACROS_M;
       51     2757        %INCLUDE KV_PRMID_E;
       52     2931        %INCLUDE B_ERRORS_C;
       53     4058        %INCLUDE NK_VFC_C;
       54     4132        %INCLUDE QG_MACRO_M;
       55     4269                                           /* EQUATES     */
       56     4270        %KV_VDO_E;
       57     4306        %KV_VDOVLP_E;
       58     4320        %KV_VDOMRKTYP_E;
       59     4326        %KV_DATMOD_E;
       60     4332        %KV_DATCTRCHRTYP_E;
       61     4338        %KV_PRMID_E;
       62     4494
       63     4495                                           /* PARAMS      */
       64     4496    1     DCL QGB_ARG CHAR(AUTO_LEN) PARAM;
       65     4497
       66     4498        /*
       67     4499        %GUD_HAND_PARAMS (FPTN = QGB_PARAMS,
       68     4500                          STCLASS = REDEF QGB_ARG );
       69     4501        */
       70     4502    1     DCL 1 QGB_PARAMS REDEF QGB_ARG,
       71     4503    1           2 PTRS,
       72     4504    1             3 * UBIN,
       73     4505    1             3 PAR1$ PTR,
       74     4506    1             3 * UBIN,
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:3    
       75     4507    1             3 PAR2$ PTR,
       76     4508    1             3 * UBIN,
       77     4509    1             3 PAR3$ PTR,
       78     4510    1             3 * UBIN,
       79     4511    1             3 PAR4$ PTR,
       80     4512    1             3 * UBIN,
       81     4513    1             3 PAR5$ PTR,
       82     4514    1           2 CPTRS REDEF PTRS,
       83     4515    1             3 * UBIN,
       84     4516    1             3 PAR1$ CPTR,
       85     4517    1             3 * UBIN,
       86     4518    1             3 PAR2$ CPTR,
       87     4519    1             3 * UBIN,
       88     4520    1             3 PAR3$ CPTR,
       89     4521    1             3 * UBIN,
       90     4522    1             3 PAR4$ CPTR,
       91     4523    1             3 * UBIN,
       92     4524    1             3 PAR5$ CPTR,
       93     4525    1           2 BND REDEF PTRS,
       94     4526    1             3 PAR1 UBIN,
       95     4527    1             3 PAR1$ CPTR,
       96     4528    1             3 PAR2 UBIN,
       97     4529    1             3 PAR2$ CPTR,
       98     4530    1             3 PAR3 UBIN,
       99     4531    1             3 PAR3$ CPTR,
      100     4532    1             3 PAR4 UBIN,
      101     4533    1             3 PAR4$ CPTR,
      102     4534    1             3 PAR5 UBIN,
      103     4535    1             3 PAR5$ CPTR;
      104     4536
      105     4537          %FPT_OPEN ( FPTN = FPT_OPEN_ARG,
      106     4538                      STCLASS = "REDEF QGB_ARG" );
      107     4566          %FPT_CLOSE ( FPTN = FPT_CLOSE_ARG,
      108     4567                       STCLASS = "REDEF QGB_ARG" );
      109     4587          %FPT_WRITE ( FPTN = FPT_WRITE_ARG,
      110     4588                       STCLASS = "REDEF QGB_ARG" );
      111     4612          %FPT_READ ( FPTN = FPT_READ_ARG,
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:4    
      112     4613                      STCLASS = "REDEF QGB_ARG" );
      113     4639
      114     4640          %QGB_PARAM ( NAME = QGB_PARAM,
      115     4641                       STCLASS = PARAM );
      116     4765
      117     4766                                           /* CONSTANT    */
      118     4767
      119     4768        %KV$VDO_RQSMRK ( NAME = LAST_ENTRY_C,
      120     4769                      VLP = YES,
      121     4770                      LAST = ",",
      122     4771                      STCLASS = CONSTANT );
      123     4812        %KV$VDOVLP_MRK ( LVL = 2,
      124     4813                        LST = YES ,
      125     4814                        STCLASS = CONSTANT );
      126     4867
      127     4868        %KV$VDO_RQSMRK ( NAME = LAST_ENTRY,
      128     4869                      VLP = YES,
      129     4870                      LAST = ",",
      130     4871                      STCLASS = BASED );
      131     4912        %KV$VDOVLP_MRK ( LVL = 2,
      132     4913                        LST = YES ,
      133     4914                        STCLASS = BASED );
      134     4967        %KV$VDOVLP_DAT1 ( NAME = QGB_VDOVLP_DAT1,
      135     4968                          STCLASS = CONSTANT );
      136     5018        %KV$VDOVLP_DAT2 ( NAME = QGB_VDOVLP_DAT2,
      137     5019                          STCLASS = CONSTANT );
      138     5069        %KV_VDOBYTSIZ ( NAME = QGB_VDOBYTSIZ,
      139     5070                        STCLASS = CONSTANT );
      140     5090        %KV$VDOVLP_FLDID ( NAME = QGB_VDOVLP_FLDID,
      141     5091                           STCLASS = CONSTANT );
      142     5142        %KV$VDOVLP_KEY ( NAME = QGB_VDOVLP_KEY,
      143     5143                         STCLASS = CONSTANT );
      144     5193
      145     5194                                           /* SYMREFS     */
      146     5195    1     DCL G$ROS$ PTR SYMREF;
      147     5196    1     DCL G$TCB$ PTR SYMREF;
      148     5197
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:5    
      149     5198                                           /* BASED       */
      150     5199        %G$DCBTABLE;
      151     5210        %G$ROS ( STCLASS = "BASED(G$ROS$)" );
      152     5254        %G$TCB ( STCLASS = "BASED(G$TCB$)" );
      153     5275        %G$EXCFR;
      154     5657        %M$DCB ( DCBN = MYDCB,
      155     5658                 STCLASS = "BASED(DCB$)" );
      156     5709    1     DCL 1 VDO BASED,
      157     5710    1           2 * CHAR (VDOSZ);
      158     5711    1     DCL KEY CHAR(QGB_PARAM.KEYSZ) BASED;
      159     5712    1     DCL FLDID UBIN BASED;
      160     5713        %NK$VFC ( STCLASS = BASED );
      161     5731        %FPT$DCLFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      162     5751        %FPT$MDFFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      163     5767        %FPT$SLCFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      164     5783        %FPT$RLSFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      165     5799        %FPT$ERASE_V ( BASED = "BASED (QGB_PARAM.V$)" );
      166     5815        %VLP$FLDATR_V ( FPTN = VLP$FLDATR,
      167     5816                        BASED = "BASED( QGB_PARAM.IP$ )" );
      168     5833        %FPT_DEVICE ( FPTN = FPT$DEVICE,
      169     5834                      VECTORS = NO,
      170     5835                      STCLASS = "BASED (QGB_PARAM.V$)" );
      171     5862        %FPT_WRITE ( FPTN = FPT$WRITE,
      172     5863                     VECTORS = NO,
      173     5864                     STCLASS = "BASED (QGB_PARAM.V$)" );
      174     5888    1     DCL TL CHAR( QGB_PARAM.VSZ ) BASED (QGB_PARAM.V$ );
      175     5889        %VLP_TAB ( FPTN = VLP$TAB,
      176     5890                   STCLASS = BASED );
      177     5904    1     DCL CHARI CHAR(I) BASED;
      178     5905    1     DCL B$MSG CHAR(MSGSZ) BASED;
      179     5906
      180     5907        %KV$VDO_DCLFLD;
      181     6033        %KV$VDO_SLCGRPRND;
      182     6115        %KV$VDO_SLCQLF;
      183     6200        %KV$VDO_ERS;
      184     6243
      185     6244        %KV$VDO_BLKDAT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:6    
      186     6287        %KV$VDO_CLSSSN;
      187     6329        %KV$VDO_DCLSTR;
      188     6372        %KV$VDO_DLT;
      189     6417        %KV$VDO_DSC;
      190     6459        %KV$VDO_EVT;
      191     6501        %KV$VDO_HVPS;
      192     6543        %KV$VDO_NOP;
      193     6584        %KV$VDO_OPNSSN;
      194     6626        %KV$VDO_PRM;
      195     6667        %KV$VDO_RLSFLD;
      196     6708        %KV$VDO_RMS;
      197     6749        %KV$VDO_RQSDAT;
      198     6797        %KV$VDO_RQSPRM;
      199     6840        %KV$VDO_RQSSTT;
      200     6881        %KV$VDO_SLCFLD;
      201     6922        %KV$VDO_SMS;
      202     6964        %KV$VDO_STT;
      203     7005        %KV$VDO_UPDRELDVC;
      204     7046        %KV$VDO_MRK;
      205     7087        %KV$VDO_RQSMRK;
      206     7128        %KV$VDO_OPNSTR;
      207     7171        %KV$VDO_CLSSTR;
      208     7214
      209     7215        %KV$VDO (STCLASS="BASED(QGB_PARAM.UHDR$)");
      210     7242        %KV$VDO_DAT (STCLASS="BASED(QGB_PARAM.UHDR$)");
      211     7287        %KV$VDOVLP;
      212     7323        %KV$VDOVLP_ACTPOS (STCLASS="BASED(MSG$)");
      213     7374        %KV$VDOVLP_CG_MSGID (STCLASS="BASED(MSG$)");
      214     7426        %KV$VDOVLP_CG_MSGTYP (STCLASS="BASED(MSG$)");
      215     7478        %KV$VDOVLP_CG_STA (STCLASS="BASED(MSG$)");
      216     7529        %KV$VDOVLP_DAT1 (STCLASS="BASED(MSG$)",LAST=",");
      217     7579    1           2 MSG CHAR(KV$VDOVLP_DAT1.BYTSIZ);
      218     7580        %KV$VDOVLP_DAT2 (STCLASS="BASED(MSG$)",LAST=",");
      219     7630    1           2 MSG CHAR(QGB_PARAM.MSGSZ);
      220     7631        %KV$VDOVLP_ERR (STCLASS="BASED(MSG$)");
      221     7728        %KV$VDOVLP_FLDID (STCLASS="BASED(MSG$)");
      222     7779        %KV$VDOVLP_KEY (STCLASS="BASED(MSG$)",LAST=",");
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:7    
      223     7829    1           2 KEY CHAR(KV$VDOVLP_KEY.BYTSIZ);
      224     7830        %KV$VDOVLP_MRK (STCLASS="BASED(MSG$)");
      225     7883
      226     7884                                           /* AUTO */
      227     7885        %VLP_HDR ( FPTN = AUTOHDR,
      228     7886                   STCLASS = AUTO,
      229     7887                   LEN = 168 );
      230     7903    1     DCL AUTO_LEN UBIN;
      231     7904    1     DCL DCB$ PTR;
      232     7905    1     DCL OP$ CPTR;
      233     7906    1     DCL B$CHAR CHAR(1) BASED(OP$) UNAL;
      234     7907    1     DCL DCBNUMBER UBIN;
      235     7908    1     DCL VDOSIZE UBIN;
      236     7909    1     DCL KEY$ PTR;
      237     7910    1     DCL KEYSIZE UBIN;
      238     7911    1     DCL BUFFER_SCRAPS UBIN;
      239     7912    1     DCL LHDR$ CPTR;
      240     7913    1     DCL VDOSZ UBIN;
      241     7914    1     DCL MSGSZ UBIN;
      242     7915    1     DCL I SBIN;
      243     7916    1     DCL CURRENT_VDO$ CPTR;
      244     7917    1     DCL OCCUPIED_SPACE UBIN;
      245     7918    1     DCL MAX_VDOSIZE UBIN;
      246     7919
      247     7920    1     DCL MSG$ PTR;
      248     7921    1     DCL TEMPU1 UBIN;
      249     7922    1     DCL TEMPS1 REDEF TEMPU1 SBIN;
      250     7923    1     DCL 1 TEMPU1S REDEF TEMPU1,
      251     7924    1           2 * BIT(15) UNAL ,
      252     7925    1           2 LOBIT BIT(1) UNAL;
      253     7926
      254     7927    1     DCL B$HWORD UBIN(16) BASED CALIGNED;
      255     7928    1     DCL TMP_SZ UBIN;
      256     7929
      257     7930    1     DCL NULLHDR (0:1) UBIN BYTE UNAL CONSTANT INIT ( %KV_PRMID_SSNHDR, 0 );
      258     7931           %FPT_WRTMLT ( FPTN = FPT_WRTMLT );
      259     7951
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:8    
      260     7952           %FPT_READ ( FPTN = FPT_READMLT,
      261     7953                       STCLASS = AUTO );
      262     7979
      263     7980        /* %VLP_ERRCODE ( FPTN = E$INVALID_DCB,
      264     7981                          ERR# = %E$BADDCB#,
      265     7982                          SEV = %G_SEV_ABORT#,
      266     7983                          STCLASS = CONSTANT,
      267     7984                          FCG = QG,
      268     7985                          MID = B,
      269     7986                          MON = '0'B );
      270     7987
      271     7988
      272     7989           %VLP_ERRCODE ( FPTN = E$NOT_OPEN,
      273     7990                          ERR# = %E$NOTOPEN,
      274     7991                          SEV = %G_SEV_ABORT#,
      275     7992                          STCLASS = CONSTANT,
      276     7993                          FCG = QG,
      277     7994                          MID = B,
      278     7995                          MON = '0'B ); */
      279     7996
      280     7997
      281     7998        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:9    
      282     7999        /*
      283     8000                                M$OPEN
      284     8001                                                                                      */
      285     8002        /*F* NAME:  QGB$OPEN Service
      286     8003        ..::IT "Format:"
      287     8004        CALL QGB$OPEN ( fpt_open, qgb_param ) ALTRET ( label );
      288     8005        ..::IT "Parameters:"
      289     8006        fpt_open^^^^specifies the name of an FPT_OPEN structure containing
      290     8007        parameters for the forms-mode open.
      291     8008
      292     8009        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      293     8010        ..::IT "Description:"
      294     8011        QGB$OPEN opens a DCB for I/O.  It performs some internal
      295     8012        initialization, if this has not already been done, and calls M$OPEN.
      296     8013        */
      297     8014    1   QGB$OPEN: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      298     8015
      299     8016        /*N*  Someday successive ERASE and RELEASE operations will be turned
      300     8017              into SELECT operations followed by the original operation VDO.
      301     8018              The latter will happen when the function request changes.
      302     8019
      303     8020           CALL CHECK_LAST_FUNCTION ( %G_MCL_OPEN# )
      304     8021           WHENALTRETURN DO;
      305     8022             CALL DO_LAST_FUNCTION;
      306     8023             END;
      307     8024        */
      308     8025
      309     8026    1       CALL M$OPEN ( FPT_OPEN_ARG )
      310     8027    1       WHENALTRETURN
      311     8028    2         DO;
      312     8029    2           QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;
      313     8030    2           ALTRETURN;
      314     8031    2         END;
      315     8032
      316     8033    1       RETURN;
      317     8034
      318     8035        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:10   
      319     8036        /*
      320     8037                                M$CLOSE
      321     8038                                                                                      */
      322     8039        /*F* NAME:  QGB$CLOSE Service
      323     8040        ..::IT "Format:"
      324     8041        CALL QGB$CLOSE ( fpt_close, qgb_param ) ALTRET ( label );
      325     8042        ..::IT "Parameters:"
      326     8043        fpt_close^^^^specifies the name of an FPT_CLOSE structure containing
      327     8044        parameters for the forms-mode close.
      328     8045
      329     8046        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      330     8047        ..::IT "Description:"
      331     8048        QGB$CLOSE closes a DCB.  It calls M$CLOSE directly.
      332     8049        */
      333     8050    1   QGB$CLOSE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      334     8051
      335     8052        /*N*  Someday successive ERASE and RELEASE operations will be turned
      336     8053              into SELECT operations followed by the original operation VDO.
      337     8054              The latter will happen when the function request changes.
      338     8055
      339     8056           CALL CHECK_LAST_FUNCTION ( %G_MCL_CLOSE# )
      340     8057           WHENALTRETURN DO;
      341     8058             CALL DO_LAST_FUNCTION;
      342     8059             END;
      343     8060        */
      344     8061
      345     8062    1       CALL M$CLOSE ( FPT_CLOSE_ARG )
      346     8063    1       WHENALTRETURN
      347     8064    2         DO;
      348     8065    2           QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;
      349     8066    2           ALTRETURN;
      350     8067    2         END;
      351     8068
      352     8069    1       RETURN;
      353     8070
      354     8071        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:11   
      355     8072        /*
      356     8073                                M$DCLFLD
      357     8074                                                                                      */
      358     8075        /*F* NAME:  QGB$DCLFLD Service
      359     8076        ..::IT "Format:"
      360     8077        CALL QGB$DCLFLD ( fpt_dclfld, qgb_param ) ALTRET ( label );
      361     8078        ..::IT "Parameters:"
      362     8079        fpt_dclfld^^^^specifies the name of an FPT_DCLFLD structure containing
      363     8080        parameters for the call to M$DCLFLD.
      364     8081
      365     8082        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      366     8083        ..::IT "Description:"
      367     8084        QGB$DCLFLD places a Declare Field VDO (Virtual Device Operator) into
      368     8085        the specified buffer.  If there is not enough space left in the
      369     8086        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      370     8087        of the write multiple operation, this VDO is placed at the beginning
      371     8088        of the buffer.
      372     8089        */
      373     8090    1   QGB$DCLFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      374     8091
      375     8092        /*N*  Someday successive ERASE and RELEASE operations will be turned
      376     8093              into SELECT operations followed by the original operation VDO.
      377     8094              The latter will happen when the function request changes.
      378     8095
      379     8096           CALL CHECK_LAST_FUNCTION ( %G_MCL_DCLFLD# )
      380     8097           WHENALTRETURN DO;
      381     8098             CALL DO_LAST_FUNCTION;
      382     8099             END;
      383     8100        */
      384     8101
      385     8102    1       CALL SETUP ( %G_MCL_DCLFLD# );
      386     8103    1       CALL DO_DCLFLD
      387     8104    1       WHENALTRETURN
      388     8105    2         DO;
      389     8106    2           ALTRETURN;
      390     8107    2         END;
      391     8108
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:12   
      392     8109    1       RETURN;
      393     8110
      394     8111        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:13   
      395     8112        /*
      396     8113                                M$MDFFLD
      397     8114                                                                                      */
      398     8115        /*F* NAME:  QGB$MDFFLD Service
      399     8116        ..::IT "Format:"
      400     8117        CALL QGB$MDFFLD ( fpt_mdffld, qgb_param ) ALTRET ( label );
      401     8118        ..::IT "Parameters:"
      402     8119        fpt_mdffld^^^^specifies the name of an FPT_MDFFLD structure containing
      403     8120        parameters for the call to M$MDFFLD.
      404     8121
      405     8122        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      406     8123        ..::IT "Description:"
      407     8124        QGB$MDFFLD places a Modify Field VDO (Virtual Device Operator) into
      408     8125        the specified buffer.  If there is not enough space left in the
      409     8126        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      410     8127        of the write multiple operation, this VDO is placed at the beginning
      411     8128        of the buffer.
      412     8129        */
      413     8130    1   QGB$MDFFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      414     8131
      415     8132        /*N*  Someday successive ERASE and RELEASE operations will be turned
      416     8133              into SELECT operations followed by the original operation VDO.
      417     8134              The latter will happen when the function request changes.
      418     8135
      419     8136           CALL CHECK_LAST_FUNCTION ( %G_MCL_MDFFLD# )
      420     8137           WHENALTRETURN DO;
      421     8138             CALL DO_LAST_FUNCTION;
      422     8139             END;
      423     8140        */
      424     8141
      425     8142    1       CALL SETUP ( %G_MCL_MDFFLD# );
      426     8143    1       CALL DO_MDFFLD
      427     8144    1       WHENALTRETURN
      428     8145    2         DO;
      429     8146    2           ALTRETURN;
      430     8147    2         END;
      431     8148
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:14   
      432     8149    1       RETURN;
      433     8150
      434     8151        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:15   
      435     8152        /*
      436     8153                                M$SLCFLD
      437     8154                                                                                      */
      438     8155        /*F* NAME:  QGB$SLCFLD Service
      439     8156        ..::IT "Format:"
      440     8157        CALL QGB$SLCFLD ( fpt_slcfld, qgb_param ) ALTRET ( label );
      441     8158        ..::IT "Parameters:"
      442     8159        fpt_slcfld^^^^specifies the name of an FPT_SLCFLD structure containing
      443     8160        parameters for the call to M$SLCFLD.
      444     8161
      445     8162        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      446     8163        ..::IT "Description:"
      447     8164        QGB$SLCFLD places a Select Field VDO (Virtual Device Operator) into
      448     8165        the specified buffer.  If there is not enough space left in the
      449     8166        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      450     8167        of the write multiple operation, this VDO is placed at the beginning
      451     8168        of the buffer.
      452     8169        */
      453     8170    1   QGB$SLCFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      454     8171
      455     8172        /*N*  Someday successive ERASE and RELEASE operations will be turned
      456     8173              into SELECT operations followed by the original operation VDO.
      457     8174              The latter will happen when the function request changes.
      458     8175
      459     8176           CALL CHECK_LAST_FUNCTION ( %G_MCL_SLCFLD# )
      460     8177           WHENALTRETURN DO;
      461     8178             CALL DO_LAST_FUNCTION;
      462     8179             END;
      463     8180        */
      464     8181
      465     8182    1       CALL SETUP ( %G_MCL_SLCFLD# );
      466     8183    1       CALL DO_SLCFLD
      467     8184    1       WHENALTRETURN
      468     8185    2         DO;
      469     8186    2           ALTRETURN;
      470     8187    2         END;
      471     8188
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:16   
      472     8189    1       RETURN;
      473     8190
      474     8191        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:17   
      475     8192        /*
      476     8193                                M$RLSFLD
      477     8194                                                                                      */
      478     8195        /*F* NAME:  QGB$RLSFLD Service
      479     8196        ..::IT "Format:"
      480     8197        CALL QGB$RLSFLD ( fpt_rlsfld, qgb_param ) ALTRET ( label );
      481     8198        ..::IT "Parameters:"
      482     8199        fpt_rlsfld^^^^specifies the name of an FPT_RLSFLD structure containing
      483     8200        parameters for the call to M$RLSFLD.
      484     8201
      485     8202        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      486     8203        ..::IT "Description:"
      487     8204        QGB$RLSFLD places a Release Field VDO (Virtual Device Operator) into
      488     8205        the specified buffer.  If there is not enough space left in the
      489     8206        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      490     8207        of the write multiple operation, this VDO is placed at the beginning
      491     8208        of the buffer.
      492     8209        */
      493     8210    1   QGB$RLSFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      494     8211
      495     8212        /*N*  Someday successive ERASE and RELEASE operations will be turned
      496     8213              into SELECT operations followed by the original operation VDO.
      497     8214              The latter will happen when the function request changes.
      498     8215
      499     8216           CALL CHECK_LAST_FUNCTION ( %G_MCL_RLSFLD# )
      500     8217           WHENALTRETURN DO;
      501     8218             CALL DO_LAST_FUNCTION;
      502     8219             END;
      503     8220        */
      504     8221
      505     8222    1       CALL SETUP ( %G_MCL_RLSFLD# );
      506     8223    1       CALL DO_RLSFLD
      507     8224    1       WHENALTRETURN
      508     8225    2         DO;
      509     8226    2           ALTRETURN;
      510     8227    2         END;
      511     8228
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:18   
      512     8229    1       RETURN;
      513     8230
      514     8231        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:19   
      515     8232        /*
      516     8233                                M$ERASE
      517     8234                                                                                      */
      518     8235        /*F* NAME:  QGB$ERASE Service
      519     8236        ..::IT "Format:"
      520     8237        CALL QGB$ERASE ( fpt_erase, qgb_param ) ALTRET ( label );
      521     8238        ..::IT "Parameters:"
      522     8239        fpt_erase^^^^specifies the name of an FPT_ERASE structure containing
      523     8240        parameters for the call to M$ERASE.
      524     8241
      525     8242        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      526     8243        ..::IT "Description:"
      527     8244        QGB$ERASE places a Erase Field VDO (Virtual Device Operator) into
      528     8245        the specified buffer.  If there is not enough space left in the
      529     8246        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      530     8247        of the write multiple operation, this VDO is placed at the beginning
      531     8248        of the buffer.
      532     8249        */
      533     8250    1   QGB$ERASE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      534     8251
      535     8252        /*N*  Someday successive ERASE and RELEASE operations will be turned
      536     8253              into SELECT operations followed by the original operation VDO.
      537     8254              The latter will happen when the function request changes.
      538     8255
      539     8256           CALL CHECK_LAST_FUNCTION ( %G_MCL_ERASE# )
      540     8257           WHENALTRETURN DO;
      541     8258             CALL DO_LAST_FUNCTION;
      542     8259             END;
      543     8260        */
      544     8261
      545     8262    1       CALL SETUP ( %G_MCL_ERASE# );
      546     8263    1       CALL DO_ERASE
      547     8264    1       WHENALTRETURN
      548     8265    2         DO;
      549     8266    2           ALTRETURN;
      550     8267    2         END;
      551     8268
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:20   
      552     8269    1       RETURN;
      553     8270
      554     8271        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:21   
      555     8272        /*
      556     8273                                M$WRITE
      557     8274                                                                                      */
      558     8275        /*F* NAME:  QGB$WRITE Service
      559     8276        ..::IT "Format:"
      560     8277        CALL QGB$WRITE ( fpt_write, qgb_param ) ALTRET ( label );
      561     8278        ..::IT "Parameters:"
      562     8279        fpt_write^^^^specifies the name of an FPT_WRITE structure containing
      563     8280        parameters for the call to M$WRITE.
      564     8281
      565     8282        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      566     8283        ..::IT "Description:"
      567     8284        QGB$WRITE places a Data Field VDO (Virtual Device Operator) into
      568     8285        the specified buffer.  If there is not enough space left in the
      569     8286        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      570     8287        of the write multiple operation, this VDO is placed at the beginning
      571     8288        of the buffer.
      572     8289        */
      573     8290
      574     8291    1   QGB$WRITE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      575     8292
      576     8293        /*N*  Someday successive ERASE and RELEASE operations will be turned
      577     8294              into SELECT operations followed by the original operation VDO.
      578     8295              The latter will happen when the function request changes.
      579     8296
      580     8297           CALL CHECK_LAST_FUNCTION ( %G_MCL_WRITE# )
      581     8298           WHENALTRETURN DO;
      582     8299             CALL DO_LAST_FUNCTION;
      583     8300             END;
      584     8301        */
      585     8302
      586     8303    1       IF DCBADDR ( FPT_WRITE_ARG.V.DCB# ) -> MYDCB.ORG ~= %G_ORG_FORM#
      587     8304    1       THEN
      588     8305    2         DO;
      589     8306    2           CALL M$WRITE ( FPT_WRITE_ARG )
      590     8307    2           WHENALTRETURN
      591     8308    3             DO;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:22   
      592     8309    3               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;
      593     8310    3               ALTRETURN;
      594     8311    3             END;
      595     8312    2           RETURN;
      596     8313    2         END;
      597     8314    1       CALL SETUP ( %G_MCL_WRITE# );
      598     8315    1       CALL DO_WRITE
      599     8316    1       WHENALTRETURN
      600     8317    2         DO;
      601     8318    2           ALTRETURN;
      602     8319    2         END;
      603     8320
      604     8321    1       RETURN;
      605     8322
      606     8323        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:23   
      607     8324        /*
      608     8325                                X$READ
      609     8326                                                                                      */
      610     8327        /*F* NAME:  QGB$READ Service
      611     8328        ..::IT "Format:"
      612     8329        CALL QGB$READ ( fpt_read, qgb_param ) ALTRET ( label );
      613     8330        ..::IT "Parameters:"
      614     8331        fpt_read^^^^specifies the name of an FPT_READ structure containing
      615     8332        parameters for the call to M$READ.
      616     8333
      617     8334        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      618     8335        ..::IT "Description:"
      619     8336        QGB$READ performs an M$READ, possibly flushing the library's buffer
      620     8337        beforehand.  It then decodes the VDO list returned to it from the
      621     8338        handler, returning the results of one decoded VDO, per call, to the
      622     8339        calling routine; an M$EOF error is placed in QGB_PARAM.ERR when no
      623     8340        VDOs remain.  In this way, the QGB$READ routine is called just as
      624     8341        M$READ would normally be called for a forms-mode read.
      625     8342        */
      626     8343
      627     8344    1   QGB$READ: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      628     8345
      629     8346        /*N*  Someday successive ERASE and RELEASE operations will be turned
      630     8347              into SELECT operations followed by the original operation VDO.
      631     8348              The latter will happen when the function request changes.
      632     8349
      633     8350           CALL CHECK_LAST_FUNCTION ( %G_MCL_READ# )
      634     8351           WHENALTRETURN DO;
      635     8352             CALL DO_LAST_FUNCTION;
      636     8353             END;
      637     8354        */
      638     8355
      639     8356    1       IF DCBADDR ( FPT_READ_ARG.V.DCB# ) -> MYDCB.ORG ~= %G_ORG_FORM#
      640     8357    1       THEN
      641     8358    2         DO;
      642     8359    2           IF DCBADDR ( FPT_READ_ARG.V.DCB# ) -> MYDCB.ORG = %G_ORG_TERMINAL#
      643     8360    2           THEN
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:24   
      644     8361    3             DO;
      645     8362    3               CALL SETUP ( %G_MCL_READ# );
      646     8363    3               CALL DO_WRITE_MULT
      647     8364    3               WHENALTRETURN
      648     8365    4                 DO;
      649     8366    4                   ALTRETURN;
      650     8367    4                 END;
      651     8368    3             END;
      652     8369    2           CALL M$READ ( FPT_READ_ARG )
      653     8370    2           WHENALTRETURN
      654     8371    3             DO;
      655     8372    3               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;
      656     8373    3               ALTRETURN;
      657     8374    3             END;
      658     8375    2           RETURN;
      659     8376    2         END;
      660     8377    1       CALL SETUP ( %G_MCL_READ# );
      661     8378    1       QGB_PARAM.ARS = 0;
      662     8379    1       QGB_PARAM.DVE.EOMCHAR = %G_EOM_EOR#;
      663     8380    1       QGB_PARAM.ERR = '0'B;
      664     8381    1       IF NOT QGB_PARAM.CURRENTLY_READING
      665     8382    1       THEN
      666     8383    2         DO;
      667     8384    2           QGB_PARAM.CURRENTLY_READING = '1'B;
      668     8385    2           CALL DO_WRITE_MULT
      669     8386    2           WHENALTRETURN
      670     8387    3             DO;
      671     8388    3               ALTRETURN;
      672     8389    3             END;
      673     8390    2           FPT_READMLT = FPT_READ_ARG;
      674     8391    2           VBASE ( FPT_READMLT.V_ ) = ADDR ( FPT_READMLT.V );
      675     8392    2           FPT_READMLT.BUF_ = QGB_PARAM.BBUF_;
      676     8393    2           FPT_READMLT.V.READMLT = '1'B;
      677     8394    2           CALL M$READ ( FPT_READMLT )
      678     8395    2           WHENALTRETURN
      679     8396    3             DO;
      680     8397    3               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:25   
      681     8398    3               ALTRETURN;
      682     8399    3             END;
      683     8400    2           QGB_PARAM.UHDRC$ = VBASE ( FPT_READMLT.BUF_ );
      684     8401    2           QGB_PARAM.UHDRSZ = MYDCB.ARS;
      685     8402    2         END;
      686     8403    1       CALL DO_READ
      687     8404    1       WHENALTRETURN
      688     8405    2         DO;
      689     8406    2           ALTRETURN;
      690     8407    2         END;
      691     8408    1       IF QGB_PARAM.ERR ~= '0'B
      692     8409    1       THEN
      693     8410    2         DO;
      694     8411    2           QGB_PARAM.CURRENTLY_READING = '0'B;
      695     8412    2           ALTRETURN;
      696     8413    2         END;
      697     8414    1       IF POFFC ( QGB_PARAM.UHDR$, VBASE ( QGB_PARAM.BBUF_ ) ) >= QGB_PARAM.UHDRSZ
      698     8415    1       THEN
      699     8416    1         QGB_PARAM.CURRENTLY_READING = '0'B;
      700     8417
      701     8418    1       RETURN;
      702     8419
      703     8420        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:26   
      704     8421        /*F* NAME:  QGB$DEVICE Service
      705     8422        ..::IT "Format:"
      706     8423        CALL QGB$DEVICE ( fpt_device, qgb_param ) ALTRET ( label );
      707     8424        ..::IT "Parameters:"
      708     8425        fpt_device^^^^specifies the name of an FPT_DEVICE structure containing
      709     8426        parameters for the call to M$DEVICE.
      710     8427
      711     8428        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      712     8429        ..::IT "Description:"
      713     8430        QGB$DEVICE places an M$DEVICE into a VDO buffer.  FPT_DEVICE FPTs are
      714     8431        buffered in the same manner as VDOs.
      715     8432        */
      716     8433    1   QGB$DEVICE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;
      717     8434
      718     8435        /*N*  Someday successive ERASE and RELEASE operations will be turned
      719     8436              into SELECT operations followed by the original operation VDO.
      720     8437              The latter will happen when the function request changes.
      721     8438
      722     8439           CALL CHECK_LAST_FUNCTION ( %G_MCL_DEVICE# )
      723     8440           WHENALTRETURN DO;
      724     8441             CALL DO_LAST_FUNCTION;
      725     8442             END;
      726     8443        */
      727     8444    1       CALL SETUP ( %G_MCL_DEVICE# );
      728     8445    1       CALL DO_DEVICE
      729     8446    2       WHENALTRETURN DO;
      730     8447    2           ALTRETURN;
      731     8448    2         END;
      732     8449    1       CALL DO_WRITE_MULT
      733     8450    1       WHENALTRETURN
      734     8451    2         DO;
      735     8452    2           ALTRETURN;
      736     8453    2         END;
      737     8454
      738     8455    1       RETURN;
      739     8456
      740     8457        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:27   
      741     8458        /*F* NAME:  QGB$FLUSH Service
      742     8459        ..::IT "Format:"
      743     8460        CALL QGB$FLUSH ( , qgb_param ) ALTRET ( label );
      744     8461        ..::IT "Parameters:"
      745     8462        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      746     8463
      747     8464        Note:  There is no first parameter, but a comma precedes qgb_param.
      748     8465        ..::IT "Description:"
      749     8466        QGB$FLUSH sends a VDO buffer to its destination.  If the buffer is
      750     8467        completely empty, no operation occurs; otherwise, an M$WRTMLT is
      751     8468        performed.  This is similar in concept to the M$TRUNC host monitor
      752     8469        service.
      753     8470
      754     8471        This service expedites the sending of the VDO buffer to the handler.
      755     8472        A manufactured FPT_DEVICE is place in the buffer prior to send-off
      756     8473        to insure that correct actions are taken care of on the device.
      757     8474        */
      758     8475    1   QGB$FLUSH: ENTRY  ( QGB_ARG, QGB_PARAM ) ALTRET;
      759     8476
      760     8477    1       CALL DO_WRITE_MULT
      761     8478    1       WHENALTRETURN
      762     8479    2         DO;
      763     8480    2           ALTRETURN;
      764     8481    2         END;
      765     8482
      766     8483    1       RETURN;
      767     8484
      768     8485        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:28   
      769     8486        /*
      770     8487           Official order of internal procedures:
      771     8488                 CHECK_LAST_FUNCTION
      772     8489                 SETUP
      773     8490                 CHECK_SPACE
      774     8491                 DO_DCLFLD
      775     8492                 DO_MDFFLD
      776     8493                 DO_SLCFLD
      777     8494                 DO_ERASE
      778     8495                 DO_RLSFLD
      779     8496                 DO_WRITE
      780     8497                 DO_READ
      781     8498                 DO_DEVICE
      782     8499                 INIT_VDO
      783     8500                 DO_WRITE_MULT
      784     8501                 FINISH_VDO
      785     8502                                           */
      786     8503        /*
      787     8504        CHECK_LAST_FUNCTION: PROC ( FUNCTION ) ALTRET;
      788     8505
      789     8506          DCL FUNCTION UBIN WORD;
      790     8507
      791     8508            IF LAST_FUNCTION ~= FUNCTION
      792     8509              AND ( LAST_FUNCTION = %G_MCL_RLSFLD#
      793     8510              OR LAST_FUNCTION = %G_MCL_ERASE# )
      794     8511            THEN
      795     8512              ALTRETURN;
      796     8513
      797     8514            RETURN;
      798     8515
      799     8516        END CHECK_LAST_FUNCTION;
      800     8517        */
      801     8518
      802     8519    1   SETUP: PROC ( FUNCTION ) ALTRET;
      803     8520
      804     8521    2     DCL FUNCTION UBIN PARAM;
      805     8522
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:29   
      806     8523    2       QGB_PARAM.V$ = QGB_PARAMS.PTRS.PAR1$;
      807     8524        /*  IF DCBNUMBER = 0
      808     8525              OR DCBNUMBER > G$ROS$ -> G$ROS.NUMDCBS
      809     8526            THEN DO;
      810     8527             QGB_PARAMS.ERR = E$INVALID_DCB;
      811     8528                ALTRETURN;
      812     8529              END;  */
      813     8530
      814     8531    2       FPT_WRTMLT.V.DCB# = FPT$DCLFLD_V.DCB#;
      815     8532    2       DCB$ = DCBADDR ( FPT_WRTMLT.V.DCB# );
      816     8533
      817     8534        /*  IF NOT ( MYDCB.FCD )
      818     8535            THEN DO;
      819     8536             QGB_PARAMS.ERR = E$NOT_OPEN;
      820     8537                ALTRETURN;
      821     8538              END;  */
      822     8539
      823     8540    2       QGB_PARAM.KEY$ = ADDR(NIL);
      824     8541    2       QGB_PARAM.KEYTYPE = MYDCB.KEYTYPE;
      825     8542    2       QGB_PARAM.STR = MYDCB.STRM;
      826     8543    2       IF QGB_PARAM.BBUF_OFFSET$ = ADDR(NIL)
      827     8544    2       THEN
      828     8545    3         DO;
      829     8546    3           QGB_PARAM.BBUF_OFFSET$ = VBASE( QGB_PARAM.BBUF_ );
      830     8547    3           VBASE( FPT_WRTMLT.BUF_ ) = VBASE( QGB_PARAM.BBUF_ );
      831     8548    3         END;
      832     8549    2       RETURN;
      833     8550
      834     8551    2   END SETUP;
      835     8552
      836     8553    1   CHECK_SPACE: PROC ( FUNCTION ) ALTRET;
      837     8554
      838     8555    2     DCL FUNCTION UBIN;
      839     8556
      840     8557    2       MAX_VDOSIZE = QGB_VDOBYTSIZ ( FUNCTION )
      841     8558    2         + QGB_PARAM.VSZ;
      842     8559
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:30   
      843     8560    2       IF MYDCB.KEYTYPE = %G_KEYTYPE_FLDID#
      844     8561    2       THEN
      845     8562    2         MAX_VDOSIZE = MAX_VDOSIZE
      846     8563    2           + SIZEC ( QGB_VDOVLP_FLDID );
      847     8564    2       ELSE
      848     8565    2         IF MYDCB.KEYTYPE = %G_KEYTYPE_COORD#
      849     8566    2         THEN
      850     8567    2           MAX_VDOSIZE = MAX_VDOSIZE
      851     8568    2             + SIZEC ( QGB_VDOVLP_KEY )
      852     8569    2             + QGB_PARAM.KEYSZ
      853     8570    2             + 1;
      854     8571
      855     8572    2       IF QGB_PARAM.MSGSZ > 0
      856     8573    2       THEN
      857     8574    2         MAX_VDOSIZE = MAX_VDOSIZE
      858     8575    2           + SIZEC ( QGB_VDOVLP_DAT2 )
      859     8576    2           + QGB_PARAM.MSGSZ
      860     8577    2           + 1;
      861     8578
      862     8579    2       MAX_VDOSIZE = MAX_VDOSIZE
      863     8580    2         + SIZEC ( LAST_ENTRY_C )
      864     8581    2         + 1;
      865     8582
      866     8583    2       BUFFER_SCRAPS = VBOUND ( QGB_PARAM.BBUF_ )
      867     8584    2         - POFFC ( QGB_PARAM.BBUF_OFFSET$, VBASE( QGB_PARAM.BBUF_ ) );
      868     8585
      869     8586    2       IF BUFFER_SCRAPS < MAX_VDOSIZE
      870     8587    3       THEN DO;
      871     8588    3           ALTRETURN;
      872     8589    3         END;
      873     8590
      874     8591    2       RETURN;
      875     8592
      876     8593    2   END CHECK_SPACE;
      877     8594
      878     8595
      879     8596    1   DO_DCLFLD: PROC ALTRET;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:31   
      880     8597    2       QGB_PARAM.IP$ = QGB_PARAMS.PTRS.PAR3$;
      881     8598    2       QGB_PARAM.DVE.DVBYTE = FPT$DCLFLD_V.DVBYTE;
      882     8599    2       IF QGB_PARAM.DVE.DVBYTE.RRR
      883     8600    2       THEN
      884     8601    2         QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;
      885     8602
      886     8603    2       QGB_PARAM.MSGSZ = 0;
      887     8604    2       QGB_PARAM.MSGC$ = QGB_PARAMS.CPTRS.PAR2$;
      888     8605    2       IF QGB_PARAM.MSG$ ~= ADDR(NIL)
      889     8606    2       THEN
      890     8607    2         QGB_PARAM.MSGSZ = QGB_PARAMS.BND.PAR2+1;
      891     8608    2       CALL INIT_VDO ( %KV_VDO_FNC_DCLFLD )
      892     8609    3       WHENALTRETURN DO;
      893     8610    3           ALTRETURN;
      894     8611    3         END;
      895     8612    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.LIN = FPT$DCLFLD_V.LIN;
      896     8613    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.CLM = FPT$DCLFLD_V.CLM;
      897     8614    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.WDT = FPT$DCLFLD_V.WDT;
      898     8615    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.ID = FPT$DCLFLD_V.ID;
      899     8616    2       IF VLP$FLDATR.ABSGRPRND ~= 0
      900     8617    3       THEN DO;
      901     8618    3           QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.GRPRND =
      902     8619    3             BINBIT(VLP$FLDATR.ABSGRPRND,SIZEB(KV$VDO_DCLFLD.GRPRND));
      903     8620    3           QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.GRPRND.ABS = '1'B;
      904     8621    3         END;
      905     8622    2       ELSE
      906     8623    2         QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.GRPRND = VLP$FLDATR.GRPRND;
      907     8624    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.QLF = VLP$FLDATR.QLF;
      908     8625
      909     8626    2       CALL FINISH_VDO ( %KV_VDO_FNC_DCLFLD )
      910     8627    3       WHENALTRETURN DO;
      911     8628    3           ALTRETURN;
      912     8629    3         END;
      913     8630    2       RETURN;
      914     8631    2   END DO_DCLFLD;
      915     8632
      916     8633    1   DO_MDFFLD: PROC ALTRET;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:32   
      917     8634    2       IF FPT$MDFFLD_V.KEYTYPE ~= 0
      918     8635    2       THEN
      919     8636    2         QGB_PARAM.KEYTYPE = FPT$MDFFLD_V.KEYTYPE;
      920     8637    2       QGB_PARAM.DVE.DVBYTE = FPT$MDFFLD_V.DVBYTE;
      921     8638    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;
      922     8639    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR3$;
      923     8640    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR3+1;
      924     8641    2       QGB_PARAM.IP$ = QGB_PARAMS.PTRS.PAR4$;
      925     8642    2       QGB_PARAM.MSGSZ = 0;
      926     8643    2       QGB_PARAM.MSGC$ = QGB_PARAMS.CPTRS.PAR2$;
      927     8644    2       IF QGB_PARAM.MSG$ ~= ADDR(NIL)
      928     8645    2       THEN
      929     8646    2         QGB_PARAM.MSGSZ = QGB_PARAMS.BND.PAR2+1;
      930     8647
      931     8648    2       IF FPT$MDFFLD_V.SETGRPRND
      932     8649    3       THEN DO;
      933     8650    3           CALL INIT_VDO ( %KV_VDO_FNC_SLCGRPRND )
      934     8651    4           WHENALTRETURN DO;
      935     8652    4               ALTRETURN;
      936     8653    4             END;
      937     8654    3           IF VLP$FLDATR.ABSGRPRND ~= 0
      938     8655    4           THEN DO;
      939     8656    4               QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCGRPRND.GRPRND =
      940     8657    4                 BINBIT(VLP$FLDATR.ABSGRPRND,SIZEB(KV$VDO_SLCGRPRND.GRPRND));
      941     8658    4               QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCGRPRND.GRPRND.ABS = '1'B;
      942     8659    4             END;
      943     8660    3           ELSE
      944     8661    3             QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCGRPRND.GRPRND = VLP$FLDATR.GRPRND;
      945     8662    3           CALL FINISH_VDO ( %KV_VDO_FNC_SLCGRPRND )
      946     8663    4           WHENALTRETURN DO;
      947     8664    4               ALTRETURN;
      948     8665    4             END;
      949     8666    3         END;
      950     8667
      951     8668    2       IF FPT$MDFFLD_V.SETQLF
      952     8669    3       THEN DO;
      953     8670    3           CALL INIT_VDO ( %KV_VDO_FNC_SLCQLF )
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:33   
      954     8671    4           WHENALTRETURN DO;
      955     8672    4               ALTRETURN;
      956     8673    4             END;
      957     8674    3           QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCQLF.QLF = VLP$FLDATR.QLF;
      958     8675    3           CALL FINISH_VDO ( %KV_VDO_FNC_SLCQLF )
      959     8676    4           WHENALTRETURN DO;
      960     8677    4               ALTRETURN;
      961     8678    4             END;
      962     8679    3         END;
      963     8680
      964     8681    2       RETURN;
      965     8682
      966     8683    2   END DO_MDFFLD;
      967     8684
      968     8685    1   DO_SLCFLD: PROC ALTRET;
      969     8686    2       IF FPT$SLCFLD_V.KEYTYPE ~= 0
      970     8687    2       THEN
      971     8688    2         QGB_PARAM.KEYTYPE = FPT$SLCFLD_V.KEYTYPE;
      972     8689    2       QGB_PARAM.DVE.DVBYTE = FPT$SLCFLD_V.DVBYTE;
      973     8690
      974     8691    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;
      975     8692    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;
      976     8693    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;
      977     8694    2       QGB_PARAM.MSG$ = ADDR(NIL);
      978     8695    2       QGB_PARAM.MSGSZ = 0;
      979     8696    2       CALL INIT_VDO ( %KV_VDO_FNC_SLCFLD )
      980     8697    3       WHENALTRETURN DO;
      981     8698    3           ALTRETURN;
      982     8699    3         END;
      983     8700    2       CALL FINISH_VDO ( %KV_VDO_FNC_SLCFLD )
      984     8701    3       WHENALTRETURN DO;
      985     8702    3           ALTRETURN;
      986     8703    3         END;
      987     8704    2       RETURN;
      988     8705
      989     8706    2   END DO_SLCFLD;
      990     8707
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:34   
      991     8708    1   DO_ERASE: PROC ALTRET;
      992     8709    2       IF FPT$ERASE_V.KEYTYPE ~= 0
      993     8710    2       THEN
      994     8711    2         QGB_PARAM.KEYTYPE = FPT$ERASE_V.KEYTYPE;
      995     8712    2       QGB_PARAM.DVE.DVBYTE = FPT$ERASE_V.DVBYTE;
      996     8713    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;
      997     8714    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;
      998     8715    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;
      999     8716    2       QGB_PARAM.MSG$ = ADDR(NIL);
     1000     8717    2       QGB_PARAM.MSGSZ = 0;
     1001     8718    2       CALL INIT_VDO ( %KV_VDO_FNC_ERS )
     1002     8719    3       WHENALTRETURN DO;
     1003     8720    3           ALTRETURN;
     1004     8721    3         END;
     1005     8722
     1006     8723    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_ERS.PRT = FPT$ERASE_V.PRT;
     1007     8724    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_ERS.CNS = FPT$ERASE_V.CNS;
     1008     8725    2       CALL FINISH_VDO ( %KV_VDO_FNC_ERS )
     1009     8726    3       WHENALTRETURN DO;
     1010     8727    3           ALTRETURN;
     1011     8728    3         END;
     1012     8729    2       RETURN;
     1013     8730    2   END DO_ERASE;
     1014     8731
     1015     8732    1   DO_RLSFLD: PROC ALTRET;
     1016     8733    2       IF FPT$RLSFLD_V.KEYTYPE ~= 0
     1017     8734    2       THEN
     1018     8735    2         QGB_PARAM.KEYTYPE = FPT$RLSFLD_V.KEYTYPE;
     1019     8736    2       QGB_PARAM.DVE.DVBYTE = FPT$RLSFLD_V.DVBYTE;
     1020     8737
     1021     8738    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;
     1022     8739    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;
     1023     8740    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;
     1024     8741    2       QGB_PARAM.MSG$ = ADDR(NIL);
     1025     8742    2       QGB_PARAM.MSGSZ = 0;
     1026     8743    2       CALL INIT_VDO ( %KV_VDO_FNC_RLSFLD )
     1027     8744    3       WHENALTRETURN DO;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:35   
     1028     8745    3           ALTRETURN;
     1029     8746    3         END;
     1030     8747    2       CALL FINISH_VDO ( %KV_VDO_FNC_RLSFLD )
     1031     8748    3       WHENALTRETURN DO;
     1032     8749    3           ALTRETURN;
     1033     8750    3         END;
     1034     8751    2       RETURN;
     1035     8752    2   END DO_RLSFLD;
     1036     8753
     1037     8754    1   DO_WRITE: PROC ALTRET;
     1038     8755    2       IF FPT$WRITE.V.KEYTYPE ~= 0
     1039     8756    2       THEN
     1040     8757    2         QGB_PARAM.KEYTYPE = FPT$WRITE.V.KEYTYPE;
     1041     8758    2       QGB_PARAM.DVE.DVBYTE = FPT$WRITE.V.DVBYTE;
     1042     8759    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;
     1043     8760    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;
     1044     8761    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;
     1045     8762    2       QGB_PARAM.MSGC$ = QGB_PARAMS.CPTRS.PAR3$;
     1046     8763    2       QGB_PARAM.MSGSZ = QGB_PARAMS.BND.PAR3+1;
     1047     8764    2       CALL INIT_VDO ( %KV_VDO_FNC_DAT )
     1048     8765    3       WHENALTRETURN DO;
     1049     8766    3           ALTRETURN;
     1050     8767    3         END;
     1051     8768    2       IF QGB_PARAM.DVE.DVBYTE.VFC
     1052     8769    3       THEN DO;
     1053     8770    3           QGB_PARAM.DVE.VFC = QGB_PARAM.MSGC$->B$CHAR;
     1054     8771    3           QGB_PARAM.MSGC$ = PINCRC ( QGB_PARAM.MSGC$, 1 );
     1055     8772    3         END;
     1056     8773    3       ELSE DO;
     1057     8774    3           IF MYDCB.DVFC ~= BINASC(0)
     1058     8775    4           THEN DO;
     1059     8776    4               QGB_PARAM.DVE.VFC = MYDCB.DVFC;
     1060     8777    4               QGB_PARAM.DVE.DVBYTE.VFC = '1'B;
     1061     8778    4             END;
     1062     8779    3         END;
     1063     8780    2       IF QGB_PARAM.DVE.DVBYTE.VFC
     1064     8781    3       THEN DO;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:36   
     1065     8782    3           QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC;
     1066     8783    3           QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHR = QGB_PARAM.DVE.VFC;
     1067     8784    3         END;
     1068     8785
     1069     8786    2       IF QGB_PARAM.DVE.DVBYTE.TRANS
     1070     8787    2       THEN
     1071     8788    2         QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATMOD = %KV_DATMOD_TRN;
     1072     8789    2       CALL FINISH_VDO ( %KV_VDO_FNC_DAT )
     1073     8790    3       WHENALTRETURN DO;
     1074     8791    3           ALTRETURN;
     1075     8792    3         END;
     1076     8793    2       RETURN;
     1077     8794
     1078     8795    2   END DO_WRITE;
     1079     8796
     1080     8797    1   DO_READ: PROC ALTRET;
     1081     8798    2       TMP_SZ = QGB_VDOBYTSIZ(KV$VDO_DAT.FNC);
     1082     8799    2       IF KV$VDO.FNC = 0 OR KV$VDO.FNC > %KV_VDO_FNC_HI OR QGB_PARAM.UHDRSZ < TMP_SZ
     1083     8800    2       THEN
     1084     8801    2         GOTO L1 ;
     1085     8802
     1086     8803        /*
     1087     8804                DO CASE (KV$VDO.FNC);
     1088     8805                 CASE (%KV_VDO_FNC_DAT);
     1089     8806        */
     1090     8807    2       IF KV$VDO.FNC = %KV_VDO_FNC_DAT
     1091     8808    3       THEN DO;
     1092     8809
     1093     8810    3           IF KV$VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_ACT
     1094     8811    3           THEN QGB_PARAM.DVE.EOMCHAR = KV$VDO_DAT.DATCTRCHR;
     1095     8812    4           ELSE DO;
     1096     8813    4               TEMPU1 = KV$VDO_DAT.DATCTRCHRTYP ;
     1097     8814    4               QGB_PARAM.EOM_EOR = '1'B;
     1098     8815    4               IF TEMPU1 = %KV_DATCTRCHRTYP_VFC
     1099     8816    5               THEN DO;
     1100     8817    5                   QGB_PARAM.DVE.DVBYTE.VFC = '1'B;
     1101     8818    5                   QGB_PARAM.DVE.VFC = KV$VDO_DAT.DATCTRCHR;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:37   
     1102     8819    5                 END;
     1103     8820    4             END;
     1104     8821    3           IF KV$VDO_DAT.DATMOD = %KV_DATMOD_TRN
     1105     8822    3           THEN QGB_PARAM.DVE.DVBYTE.TRANS = '1'B;
     1106     8823
     1107     8824    3         END;                            /* End cases                          */
     1108     8825
     1109     8826    2       QGB_PARAM.STR = KV$VDO.STR;
     1110     8827
     1111     8828    2       IF KV$VDO_DAT.VLP
     1112     8829    3       THEN DO;
     1113     8830
     1114     8831    3   L2:
     1115     8832    3           IF (TMP_SZ < QGB_PARAM.UHDRSZ)
     1116     8833    4           THEN DO;
     1117     8834
     1118     8835
     1119     8836    4               MSG$ = PINCRW(QGB_PARAM.UHDR$,TMP_SZ/2) ;
     1120     8837
     1121     8838    5               DO CASE (MSG$->KV$VDOVLP.TYP);
     1122     8839
     1123     8840    5                 CASE (%KV_VDOVLP_TYP_ACTPOS);
     1124     8841    5                   QGB_PARAM.ACTPOS = KV$VDOVLP_ACTPOS.ACTPOS;
     1125     8842    5                   TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_ACTPOS);
     1126     8843    5                   IF MSG$->KV$VDOVLP.LST = '0'B
     1127     8844    5                   THEN GOTO L2;
     1128     8845    5                   GOTO L4;
     1129     8846        /*
     1130     8847                      CASE (%KV_VDOVLP_TYP_CG_MSGID);
     1131     8848                        QGB_PARAM.MSGIDXT = KV$VDOVLP_CG_MSGID.CG_MSGIDXT;
     1132     8849                        QGB_PARAM.MSGID=KV$VDOVLP_CG_MSGID.CG_MSGID;
     1133     8850                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_CG_MSGID) ;
     1134     8851                        IF MSG$->KV$VDOVLP.LST = '0'B
     1135     8852                        THEN GOTO L2;
     1136     8853                        GOTO L4;
     1137     8854
     1138     8855                      CASE (%KV_VDOVLP_TYP_CG_MSGTYP);
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:38   
     1139     8856                        QGB_PARAM.MSGTYP = KV$VDOVLP_CG_MSGTYP.CG_MSGTYP;
     1140     8857                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_CG_MSGTYP) ;
     1141     8858                        IF MSG$->KV$VDOVLP.LST = '0'B
     1142     8859                        THEN GOTO L2;
     1143     8860                        GOTO L4;
     1144     8861
     1145     8862                      CASE (%KV_VDOVLP_TYP_CG_STA);
     1146     8863                        QGB_PARAM.STATION = KV$VDOVLP_CG_STA.CG_STA;
     1147     8864                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_CG_STA) ;
     1148     8865                        IF MSG$->KV$VDOVLP.LST = '0'B
     1149     8866                        THEN GOTO L2;
     1150     8867                        GOTO L4;
     1151     8868        */
     1152     8869    5                 CASE (%KV_VDOVLP_TYP_DAT1);
     1153     8870    5                   QGB_PARAM.MSG$ = ADDR(KV$VDOVLP_DAT1.MSG);
     1154     8871    5                   QGB_PARAM.MSGSZ = KV$VDOVLP_DAT1.BYTSIZ;
     1155     8872    5                   TEMPU1 = 2 + QGB_PARAM.MSGSZ ;
     1156     8873
     1157     8874    5                   MSGSZ = QGB_PARAM.MSGSZ;
     1158     8875    5                   VBASE ( FPT_READ_ARG.BUF_ ) -> B$MSG = QGB_PARAM.MSG$ -> B$MSG;
     1159     8876    5                   QGB_PARAM.ARS = QGB_PARAM.MSGSZ;
     1160     8877        /*
     1161     8878                      CASE (%KV_VDOVLP_TYP_DAT2);
     1162     8879                        QGB_PARAM.MSGSZ = KV$VDOVLP_DAT2.BYTSIZ;
     1163     8880                        QGB_PARAM.MSG$ = ADDR(KV$VDOVLP_DAT2.MSG);
     1164     8881                        TEMPU1 = SIZEC(KV$VDOVLP_DAT2) ;
     1165     8882        */
     1166     8883    5                 CASE (%KV_VDOVLP_TYP_ERR);
     1167     8884    5                   QGB_PARAM.ERR=KV$VDOVLP_ERR.ERRCODE;
     1168     8885    5                   TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_ERR) ;
     1169     8886    5                   IF MSG$->KV$VDOVLP.LST = '0'B
     1170     8887    5                   THEN GOTO L2;
     1171     8888    5                   GOTO L4;
     1172     8889
     1173     8890
     1174     8891    5                 CASE (%KV_VDOVLP_TYP_FLDID);
     1175     8892    5                   QGB_PARAM.FLDID = KV$VDOVLP_FLDID.FLDID;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:39   
     1176     8893    5                   IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_FLDID#
     1177     8894    5                   THEN
     1178     8895    6                     DO ;
     1179     8896    6                       QGB_PARAM.KEYSZ = KV$VDOVLP_FLDID.BYTSIZ;
     1180     8897    6                       QGB_PARAM.KEY$ = ADDR(KV$VDOVLP_FLDID.FLDID);
     1181     8898    6                     END;
     1182     8899    5                   TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_FLDID) ;
     1183     8900    5                   IF MSG$->KV$VDOVLP.LST = '0'B
     1184     8901    5                   THEN GOTO L2;
     1185     8902    5                   GOTO L4;
     1186     8903
     1187     8904
     1188     8905    5                 CASE (%KV_VDOVLP_TYP_KEY);
     1189     8906    5                   IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_COORD#
     1190     8907    5                   THEN
     1191     8908    6                     DO ;
     1192     8909    6                       QGB_PARAM.KEYSZ = KV$VDOVLP_KEY.BYTSIZ;
     1193     8910    6                       QGB_PARAM.KEY$ = ADDR(KV$VDOVLP_KEY.KEY);
     1194     8911    6                     END;
     1195     8912    5                   TEMPU1 = SIZEC(KV$VDOVLP_KEY) ;
     1196     8913        /*
     1197     8914                      CASE (%KV_VDOVLP_TYP_MRK);
     1198     8915                        QGB_PARAM.MRKTYP = KV$VDOVLP_MRK.MRKTYP;
     1199     8916                        IF QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_LSTRCRID
     1200     8917                        THEN
     1201     8918                        DO ;
     1202     8919                             QGB_PARAM.BLKREC.BLKU#=ADDR(KV$VDOVLP_MRK.ID)->B$HWORD;
     1203     8920                           QGB_PARAM.BLKREC.RECU#=PINCRC(ADDR(KV$VDOVLP_MRK.ID),2)->B$HWORD;
     1204     8921                             END;
     1205     8922                        ELSE
     1206     8923                             QGB_PARAM.MARKER = KV$VDOVLP_MRK.ID;
     1207     8924                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_MRK) ;
     1208     8925                        IF MSG$->KV$VDOVLP.LST = '0'B
     1209     8926                        THEN GOTO L2;
     1210     8927                        GOTO L4;
     1211     8928        */
     1212     8929    5                 CASE (ELSE);
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:40   
     1213     8930    5                   GOTO L1 ;
     1214     8931
     1215     8932    5               END;                    /* End cases                          */
     1216     8933
     1217     8934    4               IF TEMPU1S.LOBIT
     1218     8935    4               THEN TEMPU1 = TEMPU1 + 1;
     1219     8936
     1220     8937    4               TMP_SZ = TMP_SZ + TEMPU1 ;
     1221     8938
     1222     8939    4               IF MSG$->KV$VDOVLP.LST = '0'B
     1223     8940    4               THEN GOTO L2;
     1224     8941
     1225     8942    4             END;
     1226     8943
     1227     8944    3         END ;
     1228     8945
     1229     8946
     1230     8947    2   L4:
     1231     8948        /* IF TMP_SZ = QGB_PARAM.UHDRSZ
     1232     8949           THEN RETURN; */
     1233     8950    2       QGB_PARAM.UHDR$ = PINCRW ( QGB_PARAM.UHDR$, TMP_SZ / 2 );
     1234     8951    2       RETURN;
     1235     8952
     1236     8953    2   L1:
     1237     8954    2       CALL PROTOCOL_ERR;
     1238     8955    2       ALTRETURN;
     1239     8956
     1240     8957
     1241     8958    2   PROTOCOL_ERR: PROC;
     1242     8959
     1243     8960                  /*N* Error log */
     1244     8961    3       RETURN;
     1245     8962
     1246     8963
     1247     8964    3   END PROTOCOL_ERR;
     1248     8965
     1249     8966
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:41   
     1250     8967    2   END DO_READ;
     1251     8968
     1252     8969    1   DO_DEVICE: PROC ALTRET;
     1253     8970
     1254     8971    2       QGB_PARAM.DVE.DVBYTE = %G_DVBYTE_VFC#|%G_DVBYTE_TRANS#|%G_DVBYTE_BP#;
     1255     8972
     1256     8973        /* Do header */
     1257     8974
     1258     8975    2       IF QGB_PARAMS.PTRS.PAR3$ ~= ADDR(NIL)
     1259     8976    3       THEN DO;
     1260     8977    3           I = QGB_PARAMS.BND.PAR3;
     1261     8978    3           IF I>165 THEN I=165;
     1262     8979    3           I = SIZEC(AUTOHDR);
     1263     8980    3           CALL CONCAT(ADDR(AUTOHDR)->CHARI,BINASC(%KV_PRMID_SSNHDR),
     1264     8981    3             BINASC(I),QGB_PARAMS.PTRS.PAR3$->CHARI);
     1265     8982    3           QGB_PARAM.MSG$ = ADDR(AUTOHDR);
     1266     8983    3           QGB_PARAM.MSGSZ = I+2;
     1267     8984    3           QGB_PARAM.DVE.VFC = %VFC_SPM;
     1268     8985    3           CALL INIT_VDO ( %KV_VDO_FNC_PRM_SET )
     1269     8986    4           WHENALTRETURN DO;
     1270     8987    4               ALTRETURN;
     1271     8988    4             END;
     1272     8989    3           MSGSZ = MSGSZ + QGB_PARAM.VSZ;
     1273     8990    3           CALL FINISH_VDO ( %KV_VDO_FNC_PRM_SET )
     1274     8991    4           WHENALTRETURN DO;
     1275     8992    4               ALTRETURN;
     1276     8993    4             END;
     1277     8994    3         END;
     1278     8995    2       ELSE
     1279     8996    2         IF QGB_PARAMS.BND.PAR3 = 1
     1280     8997    3         THEN DO;
     1281     8998    3             QGB_PARAM.MSG$=ADDR(NULLHDR);
     1282     8999    3             QGB_PARAM.MSGSZ=SIZEC(NULLHDR);
     1283     9000    3             QGB_PARAM.DVE.VFC = %VFC_SPM;
     1284     9001    3             CALL INIT_VDO ( %KV_VDO_FNC_PRM_SET )
     1285     9002    4             WHENALTRETURN DO;
     1286     9003    4                 ALTRETURN;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:42   
     1287     9004    4               END;
     1288     9005    3             MSGSZ = MSGSZ + QGB_PARAM.VSZ;
     1289     9006    3             CALL FINISH_VDO ( %KV_VDO_FNC_PRM_SET )
     1290     9007    4             WHENALTRETURN DO;
     1291     9008    4                 ALTRETURN;
     1292     9009    4               END;
     1293     9010    3           END;
     1294     9011        /**/
     1295     9012
     1296     9013        /* Send new page if needed */
     1297     9014    2       QGB_PARAM.MSG$ = ADDR(NIL);
     1298     9015    2       QGB_PARAM.MSGSZ = 0;
     1299     9016    2       QGB_PARAM.DVE.DVBYTE.TRANS = '0'B;
     1300     9017    3       IF FPT$DEVICE.V.PAGE THEN DO;
     1301     9018    3           QGB_PARAM.DVE.DVBYTE.VFC = '1'B;
     1302     9019    3           QGB_PARAM.DVE.VFC = %VFC_PGND;
     1303     9020    3           CALL INIT_VDO ( %KV_VDO_FNC_DAT )
     1304     9021    4           WHENALTRETURN DO;
     1305     9022    4               ALTRETURN;
     1306     9023    4             END;
     1307     9024    3           IF QGB_PARAM.DVE.DVBYTE.VFC
     1308     9025    4           THEN DO;
     1309     9026    4               QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC
              9026                        ;
     1310     9027    4               QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHR = QGB_PARAM.DVE.VFC;
     1311     9028    4             END;
     1312     9029    3           IF QGB_PARAM.DVE.DVBYTE.TRANS
     1313     9030    3           THEN
     1314     9031    3             QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATMOD = %KV_DATMOD_TRN;
     1315     9032    3           CALL FINISH_VDO ( %KV_VDO_FNC_UPDRELDVC )
     1316     9033    4           WHENALTRETURN DO;
     1317     9034    4               ALTRETURN;
     1318     9035    4             END;
     1319     9036    3         END;
     1320     9037    2       ELSE IF MYDCB.ORG = %G_ORG_FORM#
     1321     9038    3         THEN DO;
     1322     9039    3             CALL INIT_VDO ( %KV_VDO_FNC_UPDRELDVC )
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:43   
     1323     9040    4             WHENALTRETURN DO;
     1324     9041    4                 ALTRETURN;
     1325     9042    4               END;
     1326     9043    3             CALL FINISH_VDO ( %KV_VDO_FNC_UPDRELDVC )
     1327     9044    4             WHENALTRETURN DO;
     1328     9045    4                 ALTRETURN;
     1329     9046    4               END;
     1330     9047    3           END;
     1331     9048    2   END DO_DEVICE;
     1332     9049
     1333     9050    1   INIT_VDO: PROC ( FUNCTION ) ALTRET;
     1334     9051
     1335     9052    2     DCL FUNCTION UBIN;
     1336     9053
     1337     9054    2       OCCUPIED_SPACE = POFFC (QGB_PARAM.BBUF_OFFSET$,
     1338     9055    2         VBASE( QGB_PARAM.BBUF_ ) );
     1339     9056    2       OCCUPIED_SPACE = MOD ( OCCUPIED_SPACE, 2 );
     1340     9057    2       IF OCCUPIED_SPACE ~= 0
     1341     9058    2       THEN
     1342     9059    2         QGB_PARAM.BBUF_OFFSET$ = PINCRC ( QGB_PARAM.BBUF_OFFSET$, 1 );
     1343     9060
     1344     9061    2       CALL CHECK_SPACE ( FUNCTION )
     1345     9062    3       WHENALTRETURN DO;
     1346     9063    3           CALL DO_WRITE_MULT         /* SEND BUFFER */
     1347     9064    4           WHENALTRETURN DO;
     1348     9065    4               ALTRETURN;
     1349     9066    4             END;
     1350     9067    3         END;
     1351     9068
     1352     9069    2       CURRENT_VDO$ = QGB_PARAM.BBUF_OFFSET$;
     1353     9070    2       IF FUNCTION > %KV_VDO_FNC_HI
     1354     9071    3       THEN DO;
     1355     9072    3           RETURN;
     1356     9073    3         END;
     1357     9074    2       VDOSZ = QGB_VDOBYTSIZ(FUNCTION);
     1358     9075    2       QGB_PARAM.BBUF_OFFSET$->VDO = '0'B;
     1359     9076    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO.FNC = FUNCTION;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:44   
     1360     9077    2       MSGSZ = QGB_PARAM.MSGSZ;
     1361     9078    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO.STR = QGB_PARAM.STR;
     1362     9079    2       RETURN;
     1363     9080    2   END INIT_VDO;
     1364     9081
     1365     9082    1   DO_WRITE_MULT: PROC ALTRET;
     1366     9083
     1367     9084    2       OCCUPIED_SPACE = POFFC (QGB_PARAM.BBUF_OFFSET$,
     1368     9085    2         VBASE( QGB_PARAM.BBUF_ ));
     1369     9086
     1370     9087    2       IF OCCUPIED_SPACE > 0
     1371     9088    2       THEN
     1372     9089    2   SEND_OFF_BUFFER:
     1373     9090    3         DO;
     1374     9091    3           OCCUPIED_SPACE = MOD ( OCCUPIED_SPACE, 2 );
     1375     9092    3           IF OCCUPIED_SPACE ~= 0
     1376     9093    3           THEN
     1377     9094    3             QGB_PARAM.BBUF_OFFSET$ = PINCRC ( QGB_PARAM.BBUF_OFFSET$, 1 );
     1378     9095
     1379     9096    3           QGB_PARAM.BBUF_OFFSET$ -> LAST_ENTRY = LAST_ENTRY_C;
     1380     9097    3           QGB_PARAM.BBUF_OFFSET$ -> LAST_ENTRY.STR = QGB_PARAM.STR;
     1381     9098    3           QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$, LENGTHC(
              9098                    LAST_ENTRY_C));
     1382     9099
     1383     9100    3           VBOUND ( FPT_WRTMLT.BUF_ ) = POFFC ( QGB_PARAM.BBUF_OFFSET$,
     1384     9101    3             VBASE( QGB_PARAM.BBUF_ ) ) - 1;
     1385     9102    3           QGB_PARAM.BBUF_OFFSET$ = VBASE( QGB_PARAM.BBUF_ );
     1386     9103    3           CALL M$WRTMLT ( FPT_WRTMLT )
     1387     9104    3           WHENALTRETURN
     1388     9105    4             DO;
     1389     9106    4               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;
     1390     9107    4               ALTRETURN;
     1391     9108    4             END;
     1392     9109    3         END SEND_OFF_BUFFER;
     1393     9110
     1394     9111    2       RETURN;
     1395     9112
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:45   
     1396     9113    2   END DO_WRITE_MULT;
     1397     9114
     1398     9115    1   FINISH_VDO: PROC ( FUNCTION ) ALTRET;
     1399     9116
     1400     9117    2     DCL FUNCTION UBIN;
     1401     9118
     1402     9119    2       LHDR$ = QGB_PARAM.BBUF_OFFSET$;
     1403     9120    2       QGB_PARAM.BBUF_OFFSET$ = PINCRC(QGB_PARAM.BBUF_OFFSET$,VDOSZ);
     1404     9121
     1405     9122    2       IF QGB_PARAM.KEY$ ~= ADDR(NIL)
     1406     9123    2       THEN
     1407     9124    2         IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_FLDID#
     1408     9125    3         THEN DO;
     1409     9126    3             QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_FLDID = QGB_VDOVLP_FLDID;
     1410     9127    3             QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_FLDID.BYTSIZ = QGB_PARAM.KEYSZ;
     1411     9128    3             QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_FLDID.FLDID = QGB_PARAM.KEY$->FLDID;
     1412     9129    3             LHDR$ = QGB_PARAM.BBUF_OFFSET$;
     1413     9130    3             QGB_PARAM.BBUF_OFFSET$ = PINCRC(QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9130                      QGB_VDOVLP_FLDID));
     1414     9131    3           END;
     1415     9132    2         ELSE IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_COORD#
     1416     9133    3           THEN DO;
     1417     9134    3               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_KEY = QGB_VDOVLP_KEY;
     1418     9135    3               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_KEY.BYTSIZ = QGB_PARAM.KEYSZ;
     1419     9136    3               LHDR$ = QGB_PARAM.BBUF_OFFSET$;
     1420     9137    3               QGB_PARAM.BBUF_OFFSET$ = PINCRC(QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9137                        QGB_VDOVLP_KEY));
     1421     9138    3               QGB_PARAM.BBUF_OFFSET$->KEY = QGB_PARAM.KEY$->KEY;
     1422     9139    3               QGB_PARAM.BBUF_OFFSET$ = PINCRW(QGB_PARAM.BBUF_OFFSET$,(QGB_PARAM.KEYSZ+
              9139                        1)/2);
     1423     9140    3             END;
     1424     9141
     1425     9142
     1426     9143    2       IF (FUNCTION = %KV_VDO_FNC_DAT OR FUNCTION = %KV_VDO_FNC_DAT_IMD)
     1427     9144    2         AND NOT QGB_PARAM.DVE.DVBYTE.BP AND NOT QGB_PARAM.DVE.DVBYTE.TRANS
     1428     9145    2         AND QGB_PARAM.MSGC$ ~= ADDR(NIL)
     1429     9146    3       THEN DO;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:46   
     1430     9147    3           OP$ = PINCRC(QGB_PARAM.MSGC$,QGB_PARAM.MSGSZ-1);
     1431     9148    4           DO WHILE (OP$ ~= QGB_PARAM.MSGC$);
     1432     9149    4             IF B$CHAR~= ' '
     1433     9150    4             THEN
     1434     9151    4               EXIT;
     1435     9152    4             QGB_PARAM.MSGSZ = QGB_PARAM.MSGSZ - 1;
     1436     9153    4             MSGSZ = MSGSZ - 1;
     1437     9154    4             OP$=PINCRC(OP$,-1);
     1438     9155    4           END;
     1439     9156    3         END;
     1440     9157
     1441     9158    2       IF MSGSZ > 0
     1442     9159    3       THEN DO;
     1443     9160    3           LHDR$ = QGB_PARAM.BBUF_OFFSET$;
     1444     9161    3           IF MSGSZ > 255
     1445     9162    4           THEN DO;
     1446     9163    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT2 = QGB_VDOVLP_DAT2;
     1447     9164    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT2.BYTSIZ = MSGSZ;
     1448     9165    4               QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9165                        QGB_VDOVLP_DAT2));
     1449     9166    4             END;
     1450     9167    4           ELSE DO;
     1451     9168    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT1 = QGB_VDOVLP_DAT1;
     1452     9169    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT1.BYTSIZ = MSGSZ;
     1453     9170    4               QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9170                        QGB_VDOVLP_DAT1));
     1454     9171    4             END;
     1455     9172
     1456     9173    3           IF FUNCTION = %KV_VDO_FNC_PRM_SET /* TL exists                        */
     1457     9174    4           THEN DO;
     1458     9175    4               QGB_PARAM.BBUF_OFFSET$->TL = QGB_PARAM.V$->TL;
     1459     9176    4               QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$,QGB_PARAM.VSZ);
     1460     9177    4             END;
     1461     9178
     1462     9179    3           QGB_PARAM.BBUF_OFFSET$ -> B$MSG = QGB_PARAM.MSGC$ -> B$MSG;
     1463     9180    3           QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$, QGB_PARAM.MSGSZ);
     1464     9181    3         END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:47   
     1465     9182    2       IF LHDR$ ~= CURRENT_VDO$           /* vlps                               */
     1466     9183    3       THEN DO;
     1467     9184    3           CURRENT_VDO$->KV$VDO.VLP = '1'B;
     1468     9185    3           LHDR$->KV$VDOVLP.LST = '1'B;
     1469     9186    3         END;
     1470     9187
     1471     9188    2       RETURN;
     1472     9189    2   END FINISH_VDO;
     1473     9190    1   END QGB$BUFFER_VDO;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:48   
--  Include file information  --

   QG_MACRO_M.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDO.:E05TOU  is referenced.
   K_CP6_M.:E05TOU  is referenced.
   KI$CP6V_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QGB$BUFFER_VDO.

   Procedure QGB$BUFFER_VDO requires 2547 words for executable code.
   Procedure QGB$BUFFER_VDO requires 153 words of local(AUTO) storage.

    No errors detected in file QGB$BUFFER_VDO.:E05TSI    .

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:49   

 Object Unit name= QGB$BUFFER_VDO                             File name= QGB$BUFFER_VDO.:E05TOU
 UTS= JUL 30 '97 05:18:11.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     31     1F  QGB$BUFFER_VDO
    1   Data  even  none    13      D  QGB$BUFFER_VDO
    2   Proc  even  none  2547    9F3  QGB$BUFFER_VDO
    3  RoData even  none     2      2  QGB$BUFFER_VDO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  QGB$BUFFER_VDO
     2      7          yes     yes      Std        2  QGB$OPEN
     2     24          yes     yes      Std        2  QGB$CLOSE
     2     41          yes     yes      Std        2  QGB$DCLFLD
     2     58          yes     yes      Std        2  QGB$MDFFLD
     2     6F          yes     yes      Std        2  QGB$SLCFLD
     2     86          yes     yes      Std        2  QGB$RLSFLD
     2     9D          yes     yes      Std        2  QGB$ERASE
     2     B4          yes     yes      Std        2  QGB$WRITE
     2     F2          yes     yes      Std        2  QGB$READ
     2    1C5          yes     yes      Std        2  QGB$DEVICE
     2    1E4          yes     yes      Std        2  QGB$FLUSH
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:50   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
                       nStd      0 X6C_ALR
                       nStd      0 X6C_ALRZ

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$ROS$                                G$TCB$                           r    G$ROS$
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:51   


        1        1        /*M* QGB$BUFFER_VDO:  VDO-buffering library services.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        /*F* NAME:  VDO-Buffering Library Services
        9        9        ..::L1 "QGB Services"
       10       10        The QGB services allow a user program to perform more efficient
       11       11        forms-mode I/O by buffering the requests for input and output to
       12       12        the screen.  The services are used in place of calls to FEP
       13       13        monitor services.  The VDO-buffering library services correspond to
       14       14        the monitor service as follows:
       15       15
       16       16        .fif
       17       17            QGB Service     Monitor Service
       18       18            -----------     ---------------
       19       19            QGB$OPEN        M$OPEN
       20       20            QGB$CLOSE       M$CLOSE
       21       21            QGB$DCLFLD      M$DCLFLD
       22       22            QGB$MDFFLD      M$MDFFLD
       23       23            QGB$SLCFLD      M$SLCFLD
       24       24            QGB$RLSFLD      M$RLSFLD
       25       25            QGB$ERASE       M$ERASE
       26       26            QGB$READ        M$READ
       27       27            QGB$WRITE       M$WRITE
       28       28            QGB$DEVICE      M$DEVICE
       29       29
       30       30        .fin
       31       31        In addition, a QGB$FLUSH service is provided to allow the user to
       32       32        force completion of any buffered output.
       33       33
       34       34        The QGB service call refers to an FPT that corresponds to the equivalent
       35       35        monitor service, and also to a QGB_PARAM structure.  The QGB_PARAM
       36       36        structure specifies the size and location of the blocking buffer to
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:52   
       37       37        be used by the VDO packing and unpacking routines, and receives
       38       38        information returned by the QGB service.
       39       39        */
       40       40
       41       41        QGB$BUFFER_VDO: PROC ( QGB_ARG, QGB_PARAM ) ALTRET;

     41   2 000000  D380 0000 0000  xent QGB$BUFFER_VDO  LNJ,B5   X6A_AUTO_2
          2 000003       0099 0002                       DC       153,2
          2 000005  0F81 0006                            B        s:8026,PREL

       42       42
       43       43        %INCLUDE LCP_6;
       44      234        %INCLUDE G_ROS_M;
       45      316        %INCLUDE KI$CP6V_C;
       46      755        %INCLUDE K_CP6_M;
       47      951        %INCLUDE KV$VDO;
       48     1966        %INCLUDE KV$GLB;
       49     2385        %INCLUDE KV$PRM;
       50     2598        %INCLUDE GU_MACROS_M;
       51     2757        %INCLUDE KV_PRMID_E;
       52     2931        %INCLUDE B_ERRORS_C;
       53     4058        %INCLUDE NK_VFC_C;
       54     4132        %INCLUDE QG_MACRO_M;
       55     4269                                           /* EQUATES     */
       56     4270        %KV_VDO_E;
       57     4306        %KV_VDOVLP_E;
       58     4320        %KV_VDOMRKTYP_E;
       59     4326        %KV_DATMOD_E;
       60     4332        %KV_DATCTRCHRTYP_E;
       61     4338        %KV_PRMID_E;
       62     4494
       63     4495                                           /* PARAMS      */
       64     4496    1     DCL QGB_ARG CHAR(AUTO_LEN) PARAM;
       65     4497
       66     4498        /*
       67     4499        %GUD_HAND_PARAMS (FPTN = QGB_PARAMS,
       68     4500                          STCLASS = REDEF QGB_ARG );
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:53   
       69     4501        */
       70     4502    1     DCL 1 QGB_PARAMS REDEF QGB_ARG,
       71     4503    1           2 PTRS,
       72     4504    1             3 * UBIN,
       73     4505    1             3 PAR1$ PTR,
       74     4506    1             3 * UBIN,
       75     4507    1             3 PAR2$ PTR,
       76     4508    1             3 * UBIN,
       77     4509    1             3 PAR3$ PTR,
       78     4510    1             3 * UBIN,
       79     4511    1             3 PAR4$ PTR,
       80     4512    1             3 * UBIN,
       81     4513    1             3 PAR5$ PTR,
       82     4514    1           2 CPTRS REDEF PTRS,
       83     4515    1             3 * UBIN,
       84     4516    1             3 PAR1$ CPTR,
       85     4517    1             3 * UBIN,
       86     4518    1             3 PAR2$ CPTR,
       87     4519    1             3 * UBIN,
       88     4520    1             3 PAR3$ CPTR,
       89     4521    1             3 * UBIN,
       90     4522    1             3 PAR4$ CPTR,
       91     4523    1             3 * UBIN,
       92     4524    1             3 PAR5$ CPTR,
       93     4525    1           2 BND REDEF PTRS,
       94     4526    1             3 PAR1 UBIN,
       95     4527    1             3 PAR1$ CPTR,
       96     4528    1             3 PAR2 UBIN,
       97     4529    1             3 PAR2$ CPTR,
       98     4530    1             3 PAR3 UBIN,
       99     4531    1             3 PAR3$ CPTR,
      100     4532    1             3 PAR4 UBIN,
      101     4533    1             3 PAR4$ CPTR,
      102     4534    1             3 PAR5 UBIN,
      103     4535    1             3 PAR5$ CPTR;
      104     4536
      105     4537          %FPT_OPEN ( FPTN = FPT_OPEN_ARG,
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:54   
      106     4538                      STCLASS = "REDEF QGB_ARG" );
      107     4566          %FPT_CLOSE ( FPTN = FPT_CLOSE_ARG,
      108     4567                       STCLASS = "REDEF QGB_ARG" );
      109     4587          %FPT_WRITE ( FPTN = FPT_WRITE_ARG,
      110     4588                       STCLASS = "REDEF QGB_ARG" );
      111     4612          %FPT_READ ( FPTN = FPT_READ_ARG,
      112     4613                      STCLASS = "REDEF QGB_ARG" );
      113     4639
      114     4640          %QGB_PARAM ( NAME = QGB_PARAM,
      115     4641                       STCLASS = PARAM );
      116     4765
      117     4766                                           /* CONSTANT    */
      118     4767
      119     4768        %KV$VDO_RQSMRK ( NAME = LAST_ENTRY_C,
      120     4769                      VLP = YES,
      121     4770                      LAST = ",",
      122     4771                      STCLASS = CONSTANT );
      123     4812        %KV$VDOVLP_MRK ( LVL = 2,
      124     4813                        LST = YES ,
      125     4814                        STCLASS = CONSTANT );
      126     4867
      127     4868        %KV$VDO_RQSMRK ( NAME = LAST_ENTRY,
      128     4869                      VLP = YES,
      129     4870                      LAST = ",",
      130     4871                      STCLASS = BASED );
      131     4912        %KV$VDOVLP_MRK ( LVL = 2,
      132     4913                        LST = YES ,
      133     4914                        STCLASS = BASED );
      134     4967        %KV$VDOVLP_DAT1 ( NAME = QGB_VDOVLP_DAT1,
      135     4968                          STCLASS = CONSTANT );
      136     5018        %KV$VDOVLP_DAT2 ( NAME = QGB_VDOVLP_DAT2,
      137     5019                          STCLASS = CONSTANT );
      138     5069        %KV_VDOBYTSIZ ( NAME = QGB_VDOBYTSIZ,
      139     5070                        STCLASS = CONSTANT );
      140     5090        %KV$VDOVLP_FLDID ( NAME = QGB_VDOVLP_FLDID,
      141     5091                           STCLASS = CONSTANT );
      142     5142        %KV$VDOVLP_KEY ( NAME = QGB_VDOVLP_KEY,
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:55   
      143     5143                         STCLASS = CONSTANT );
      144     5193
      145     5194                                           /* SYMREFS     */
      146     5195    1     DCL G$ROS$ PTR SYMREF;
      147     5196    1     DCL G$TCB$ PTR SYMREF;
      148     5197
      149     5198                                           /* BASED       */
      150     5199        %G$DCBTABLE;
      151     5210        %G$ROS ( STCLASS = "BASED(G$ROS$)" );
      152     5254        %G$TCB ( STCLASS = "BASED(G$TCB$)" );
      153     5275        %G$EXCFR;
      154     5657        %M$DCB ( DCBN = MYDCB,
      155     5658                 STCLASS = "BASED(DCB$)" );
      156     5709    1     DCL 1 VDO BASED,
      157     5710    1           2 * CHAR (VDOSZ);
      158     5711    1     DCL KEY CHAR(QGB_PARAM.KEYSZ) BASED;
      159     5712    1     DCL FLDID UBIN BASED;
      160     5713        %NK$VFC ( STCLASS = BASED );
      161     5731        %FPT$DCLFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      162     5751        %FPT$MDFFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      163     5767        %FPT$SLCFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      164     5783        %FPT$RLSFLD_V ( BASED = "BASED (QGB_PARAM.V$)" );
      165     5799        %FPT$ERASE_V ( BASED = "BASED (QGB_PARAM.V$)" );
      166     5815        %VLP$FLDATR_V ( FPTN = VLP$FLDATR,
      167     5816                        BASED = "BASED( QGB_PARAM.IP$ )" );
      168     5833        %FPT_DEVICE ( FPTN = FPT$DEVICE,
      169     5834                      VECTORS = NO,
      170     5835                      STCLASS = "BASED (QGB_PARAM.V$)" );
      171     5862        %FPT_WRITE ( FPTN = FPT$WRITE,
      172     5863                     VECTORS = NO,
      173     5864                     STCLASS = "BASED (QGB_PARAM.V$)" );
      174     5888    1     DCL TL CHAR( QGB_PARAM.VSZ ) BASED (QGB_PARAM.V$ );
      175     5889        %VLP_TAB ( FPTN = VLP$TAB,
      176     5890                   STCLASS = BASED );
      177     5904    1     DCL CHARI CHAR(I) BASED;
      178     5905    1     DCL B$MSG CHAR(MSGSZ) BASED;
      179     5906
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:56   
      180     5907        %KV$VDO_DCLFLD;
      181     6033        %KV$VDO_SLCGRPRND;
      182     6115        %KV$VDO_SLCQLF;
      183     6200        %KV$VDO_ERS;
      184     6243
      185     6244        %KV$VDO_BLKDAT;
      186     6287        %KV$VDO_CLSSSN;
      187     6329        %KV$VDO_DCLSTR;
      188     6372        %KV$VDO_DLT;
      189     6417        %KV$VDO_DSC;
      190     6459        %KV$VDO_EVT;
      191     6501        %KV$VDO_HVPS;
      192     6543        %KV$VDO_NOP;
      193     6584        %KV$VDO_OPNSSN;
      194     6626        %KV$VDO_PRM;
      195     6667        %KV$VDO_RLSFLD;
      196     6708        %KV$VDO_RMS;
      197     6749        %KV$VDO_RQSDAT;
      198     6797        %KV$VDO_RQSPRM;
      199     6840        %KV$VDO_RQSSTT;
      200     6881        %KV$VDO_SLCFLD;
      201     6922        %KV$VDO_SMS;
      202     6964        %KV$VDO_STT;
      203     7005        %KV$VDO_UPDRELDVC;
      204     7046        %KV$VDO_MRK;
      205     7087        %KV$VDO_RQSMRK;
      206     7128        %KV$VDO_OPNSTR;
      207     7171        %KV$VDO_CLSSTR;
      208     7214
      209     7215        %KV$VDO (STCLASS="BASED(QGB_PARAM.UHDR$)");
      210     7242        %KV$VDO_DAT (STCLASS="BASED(QGB_PARAM.UHDR$)");
      211     7287        %KV$VDOVLP;
      212     7323        %KV$VDOVLP_ACTPOS (STCLASS="BASED(MSG$)");
      213     7374        %KV$VDOVLP_CG_MSGID (STCLASS="BASED(MSG$)");
      214     7426        %KV$VDOVLP_CG_MSGTYP (STCLASS="BASED(MSG$)");
      215     7478        %KV$VDOVLP_CG_STA (STCLASS="BASED(MSG$)");
      216     7529        %KV$VDOVLP_DAT1 (STCLASS="BASED(MSG$)",LAST=",");
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:57   
      217     7579    1           2 MSG CHAR(KV$VDOVLP_DAT1.BYTSIZ);
      218     7580        %KV$VDOVLP_DAT2 (STCLASS="BASED(MSG$)",LAST=",");
      219     7630    1           2 MSG CHAR(QGB_PARAM.MSGSZ);
      220     7631        %KV$VDOVLP_ERR (STCLASS="BASED(MSG$)");
      221     7728        %KV$VDOVLP_FLDID (STCLASS="BASED(MSG$)");
      222     7779        %KV$VDOVLP_KEY (STCLASS="BASED(MSG$)",LAST=",");
      223     7829    1           2 KEY CHAR(KV$VDOVLP_KEY.BYTSIZ);
      224     7830        %KV$VDOVLP_MRK (STCLASS="BASED(MSG$)");
      225     7883
      226     7884                                           /* AUTO */
      227     7885        %VLP_HDR ( FPTN = AUTOHDR,
      228     7886                   STCLASS = AUTO,
      229     7887                   LEN = 168 );
      230     7903    1     DCL AUTO_LEN UBIN;
      231     7904    1     DCL DCB$ PTR;
      232     7905    1     DCL OP$ CPTR;
      233     7906    1     DCL B$CHAR CHAR(1) BASED(OP$) UNAL;
      234     7907    1     DCL DCBNUMBER UBIN;
      235     7908    1     DCL VDOSIZE UBIN;
      236     7909    1     DCL KEY$ PTR;
      237     7910    1     DCL KEYSIZE UBIN;
      238     7911    1     DCL BUFFER_SCRAPS UBIN;
      239     7912    1     DCL LHDR$ CPTR;
      240     7913    1     DCL VDOSZ UBIN;
      241     7914    1     DCL MSGSZ UBIN;
      242     7915    1     DCL I SBIN;
      243     7916    1     DCL CURRENT_VDO$ CPTR;
      244     7917    1     DCL OCCUPIED_SPACE UBIN;
      245     7918    1     DCL MAX_VDOSIZE UBIN;
      246     7919
      247     7920    1     DCL MSG$ PTR;
      248     7921    1     DCL TEMPU1 UBIN;
      249     7922    1     DCL TEMPS1 REDEF TEMPU1 SBIN;
      250     7923    1     DCL 1 TEMPU1S REDEF TEMPU1,
      251     7924    1           2 * BIT(15) UNAL ,
      252     7925    1           2 LOBIT BIT(1) UNAL;
      253     7926
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:58   
      254     7927    1     DCL B$HWORD UBIN(16) BASED CALIGNED;
      255     7928    1     DCL TMP_SZ UBIN;
      256     7929
      257     7930    1     DCL NULLHDR (0:1) UBIN BYTE UNAL CONSTANT INIT ( %KV_PRMID_SSNHDR, 0 );
      258     7931           %FPT_WRTMLT ( FPTN = FPT_WRTMLT );
      259     7951
      260     7952           %FPT_READ ( FPTN = FPT_READMLT,
      261     7953                       STCLASS = AUTO );
      262     7979
      263     7980        /* %VLP_ERRCODE ( FPTN = E$INVALID_DCB,
      264     7981                          ERR# = %E$BADDCB#,
      265     7982                          SEV = %G_SEV_ABORT#,
      266     7983                          STCLASS = CONSTANT,
      267     7984                          FCG = QG,
      268     7985                          MID = B,
      269     7986                          MON = '0'B );
      270     7987
      271     7988
      272     7989           %VLP_ERRCODE ( FPTN = E$NOT_OPEN,
      273     7990                          ERR# = %E$NOTOPEN,
      274     7991                          SEV = %G_SEV_ABORT#,
      275     7992                          STCLASS = CONSTANT,
      276     7993                          FCG = QG,
      277     7994                          MID = B,
      278     7995                          MON = '0'B ); */
      279     7996
      280     7997
      281     7998        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:59   
      282     7999        /*
      283     8000                                M$OPEN
      284     8001                                                                                      */
      285     8002        /*F* NAME:  QGB$OPEN Service
      286     8003        ..::IT "Format:"
      287     8004        CALL QGB$OPEN ( fpt_open, qgb_param ) ALTRET ( label );
      288     8005        ..::IT "Parameters:"
      289     8006        fpt_open^^^^specifies the name of an FPT_OPEN structure containing
      290     8007        parameters for the forms-mode open.
      291     8008
      292     8009        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      293     8010        ..::IT "Description:"
      294     8011        QGB$OPEN opens a DCB for I/O.  It performs some internal
      295     8012        initialization, if this has not already been done, and calls M$OPEN.
      296     8013        */
      297     8014    1   QGB$OPEN: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8014   2 000007  D380 0000 0000  xent QGB$OPEN        LNJ,B5   X6A_AUTO_2
          2 00000A       0099 0002                       DC       153,2

      298     8015
      299     8016        /*N*  Someday successive ERASE and RELEASE operations will be turned
      300     8017              into SELECT operations followed by the original operation VDO.
      301     8018              The latter will happen when the function request changes.
      302     8019
      303     8020           CALL CHECK_LAST_FUNCTION ( %G_MCL_OPEN# )
      304     8021           WHENALTRETURN DO;
      305     8022             CALL DO_LAST_FUNCTION;
      306     8023             END;
      307     8024        */
      308     8025
      309     8026    1       CALL M$OPEN ( FPT_OPEN_ARG )

   8026   2 00000C  BCC7 0004                            LDB,B3   @QGB_ARG,AUTO
          2 00000E  B870 3540                            LDR,R3   13632,IMO
          2 000010  0001                                 MCL
          2 000011       0003                            DC       s:8029,PREL
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:60   
          2 000012  0F81 000E                            B        s:8033,PREL

      310     8027    1       WHENALTRETURN
      311     8028    2         DO;

      312     8029    2           QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;

   8029   2 000014  EC80 0000 0000  xsym                 LDB,B6   G$TCB$
          2 000017  DC86                                 LDB,B5   ,B6
          2 000018  8CC5 002B                            LDI      43,B5
          2 00001A  CCC7 0006                            LDB,B4   @QGB_PARAM,AUTO
          2 00001C  8D44 0005                            SDI      5,B4

      313     8030    2           ALTRETURN;

   8030   2 00001E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      314     8031    2         END;
      315     8032
      316     8033    1       RETURN;

   8033   2 000021  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      317     8034
      318     8035        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:61   
      319     8036        /*
      320     8037                                M$CLOSE
      321     8038                                                                                      */
      322     8039        /*F* NAME:  QGB$CLOSE Service
      323     8040        ..::IT "Format:"
      324     8041        CALL QGB$CLOSE ( fpt_close, qgb_param ) ALTRET ( label );
      325     8042        ..::IT "Parameters:"
      326     8043        fpt_close^^^^specifies the name of an FPT_CLOSE structure containing
      327     8044        parameters for the forms-mode close.
      328     8045
      329     8046        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      330     8047        ..::IT "Description:"
      331     8048        QGB$CLOSE closes a DCB.  It calls M$CLOSE directly.
      332     8049        */
      333     8050    1   QGB$CLOSE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8050   2 000024  D380 0000 0000  xent QGB$CLOSE       LNJ,B5   X6A_AUTO_2
          2 000027       0099 0002                       DC       153,2

      334     8051
      335     8052        /*N*  Someday successive ERASE and RELEASE operations will be turned
      336     8053              into SELECT operations followed by the original operation VDO.
      337     8054              The latter will happen when the function request changes.
      338     8055
      339     8056           CALL CHECK_LAST_FUNCTION ( %G_MCL_CLOSE# )
      340     8057           WHENALTRETURN DO;
      341     8058             CALL DO_LAST_FUNCTION;
      342     8059             END;
      343     8060        */
      344     8061
      345     8062    1       CALL M$CLOSE ( FPT_CLOSE_ARG )

   8062   2 000029  BCC7 0004                            LDB,B3   @QGB_ARG,AUTO
          2 00002B  B870 1541                            LDR,R3   5441,IMO
          2 00002D  0001                                 MCL
          2 00002E       0003                            DC       s:8065,PREL
          2 00002F  0F81 000E                            B        s:8069,PREL
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:62   

      346     8063    1       WHENALTRETURN
      347     8064    2         DO;

      348     8065    2           QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;

   8065   2 000031  EC80 0000 0000  xsym                 LDB,B6   G$TCB$
          2 000034  DC86                                 LDB,B5   ,B6
          2 000035  8CC5 002B                            LDI      43,B5
          2 000037  CCC7 0006                            LDB,B4   @QGB_PARAM,AUTO
          2 000039  8D44 0005                            SDI      5,B4

      349     8066    2           ALTRETURN;

   8066   2 00003B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      350     8067    2         END;
      351     8068
      352     8069    1       RETURN;

   8069   2 00003E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      353     8070
      354     8071        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:63   
      355     8072        /*
      356     8073                                M$DCLFLD
      357     8074                                                                                      */
      358     8075        /*F* NAME:  QGB$DCLFLD Service
      359     8076        ..::IT "Format:"
      360     8077        CALL QGB$DCLFLD ( fpt_dclfld, qgb_param ) ALTRET ( label );
      361     8078        ..::IT "Parameters:"
      362     8079        fpt_dclfld^^^^specifies the name of an FPT_DCLFLD structure containing
      363     8080        parameters for the call to M$DCLFLD.
      364     8081
      365     8082        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      366     8083        ..::IT "Description:"
      367     8084        QGB$DCLFLD places a Declare Field VDO (Virtual Device Operator) into
      368     8085        the specified buffer.  If there is not enough space left in the
      369     8086        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      370     8087        of the write multiple operation, this VDO is placed at the beginning
      371     8088        of the buffer.
      372     8089        */
      373     8090    1   QGB$DCLFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8090   2 000041  D380 0000 0000  xent QGB$DCLFLD      LNJ,B5   X6A_AUTO_2
          2 000044       0099 0002                       DC       153,2

      374     8091
      375     8092        /*N*  Someday successive ERASE and RELEASE operations will be turned
      376     8093              into SELECT operations followed by the original operation VDO.
      377     8094              The latter will happen when the function request changes.
      378     8095
      379     8096           CALL CHECK_LAST_FUNCTION ( %G_MCL_DCLFLD# )
      380     8097           WHENALTRETURN DO;
      381     8098             CALL DO_LAST_FUNCTION;
      382     8099             END;
      383     8100        */
      384     8101
      385     8102    1       CALL SETUP ( %G_MCL_DCLFLD# );

   8102   2 000046  EBF0 018F                            LAB,B6   399,IMO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:64   
          2 000048  EFC7 008C                            STB,B6   FPT_READMLT+21,AUTO
          2 00004A  E3C0 01A9                            LNJ,B6   s:0,PREL
          2 00004C       0001                            DC       s:8103,PREL

      386     8103    1       CALL DO_DCLFLD

   8103   2 00004D  E3C0 022B                            LNJ,B6   s:0,PREL
          2 00004F       0003                            DC       s:8106,PREL
          2 000050  0F81 0004                            B        s:8109,PREL

      387     8104    1       WHENALTRETURN
      388     8105    2         DO;

      389     8106    2           ALTRETURN;

   8106   2 000052  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      390     8107    2         END;
      391     8108
      392     8109    1       RETURN;

   8109   2 000055  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      393     8110
      394     8111        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:65   
      395     8112        /*
      396     8113                                M$MDFFLD
      397     8114                                                                                      */
      398     8115        /*F* NAME:  QGB$MDFFLD Service
      399     8116        ..::IT "Format:"
      400     8117        CALL QGB$MDFFLD ( fpt_mdffld, qgb_param ) ALTRET ( label );
      401     8118        ..::IT "Parameters:"
      402     8119        fpt_mdffld^^^^specifies the name of an FPT_MDFFLD structure containing
      403     8120        parameters for the call to M$MDFFLD.
      404     8121
      405     8122        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      406     8123        ..::IT "Description:"
      407     8124        QGB$MDFFLD places a Modify Field VDO (Virtual Device Operator) into
      408     8125        the specified buffer.  If there is not enough space left in the
      409     8126        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      410     8127        of the write multiple operation, this VDO is placed at the beginning
      411     8128        of the buffer.
      412     8129        */
      413     8130    1   QGB$MDFFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8130   2 000058  D380 0000 0000  xent QGB$MDFFLD      LNJ,B5   X6A_AUTO_2
          2 00005B       0099 0002                       DC       153,2

      414     8131
      415     8132        /*N*  Someday successive ERASE and RELEASE operations will be turned
      416     8133              into SELECT operations followed by the original operation VDO.
      417     8134              The latter will happen when the function request changes.
      418     8135
      419     8136           CALL CHECK_LAST_FUNCTION ( %G_MCL_MDFFLD# )
      420     8137           WHENALTRETURN DO;
      421     8138             CALL DO_LAST_FUNCTION;
      422     8139             END;
      423     8140        */
      424     8141
      425     8142    1       CALL SETUP ( %G_MCL_MDFFLD# );

   8142   2 00005D  EBF0 018E                            LAB,B6   398,IMO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:66   
          2 00005F  EFC7 008C                            STB,B6   FPT_READMLT+21,AUTO
          2 000061  E3C0 0192                            LNJ,B6   s:0,PREL
          2 000063       0001                            DC       s:8143,PREL

      426     8143    1       CALL DO_MDFFLD

   8143   2 000064  E3C0 02A4                            LNJ,B6   s:0,PREL
          2 000066       0003                            DC       s:8146,PREL
          2 000067  0F81 0004                            B        s:8149,PREL

      427     8144    1       WHENALTRETURN
      428     8145    2         DO;

      429     8146    2           ALTRETURN;

   8146   2 000069  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      430     8147    2         END;
      431     8148
      432     8149    1       RETURN;

   8149   2 00006C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      433     8150
      434     8151        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:67   
      435     8152        /*
      436     8153                                M$SLCFLD
      437     8154                                                                                      */
      438     8155        /*F* NAME:  QGB$SLCFLD Service
      439     8156        ..::IT "Format:"
      440     8157        CALL QGB$SLCFLD ( fpt_slcfld, qgb_param ) ALTRET ( label );
      441     8158        ..::IT "Parameters:"
      442     8159        fpt_slcfld^^^^specifies the name of an FPT_SLCFLD structure containing
      443     8160        parameters for the call to M$SLCFLD.
      444     8161
      445     8162        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      446     8163        ..::IT "Description:"
      447     8164        QGB$SLCFLD places a Select Field VDO (Virtual Device Operator) into
      448     8165        the specified buffer.  If there is not enough space left in the
      449     8166        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      450     8167        of the write multiple operation, this VDO is placed at the beginning
      451     8168        of the buffer.
      452     8169        */
      453     8170    1   QGB$SLCFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8170   2 00006F  D380 0000 0000  xent QGB$SLCFLD      LNJ,B5   X6A_AUTO_2
          2 000072       0099 0002                       DC       153,2

      454     8171
      455     8172        /*N*  Someday successive ERASE and RELEASE operations will be turned
      456     8173              into SELECT operations followed by the original operation VDO.
      457     8174              The latter will happen when the function request changes.
      458     8175
      459     8176           CALL CHECK_LAST_FUNCTION ( %G_MCL_SLCFLD# )
      460     8177           WHENALTRETURN DO;
      461     8178             CALL DO_LAST_FUNCTION;
      462     8179             END;
      463     8180        */
      464     8181
      465     8182    1       CALL SETUP ( %G_MCL_SLCFLD# );

   8182   2 000074  EBF0 0191                            LAB,B6   401,IMO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:68   
          2 000076  EFC7 008C                            STB,B6   FPT_READMLT+21,AUTO
          2 000078  E3C0 017B                            LNJ,B6   s:0,PREL
          2 00007A       0001                            DC       s:8183,PREL

      466     8183    1       CALL DO_SLCFLD

   8183   2 00007B  E3C0 0335                            LNJ,B6   s:0,PREL
          2 00007D       0003                            DC       s:8186,PREL
          2 00007E  0F81 0004                            B        s:8189,PREL

      467     8184    1       WHENALTRETURN
      468     8185    2         DO;

      469     8186    2           ALTRETURN;

   8186   2 000080  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      470     8187    2         END;
      471     8188
      472     8189    1       RETURN;

   8189   2 000083  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      473     8190
      474     8191        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:69   
      475     8192        /*
      476     8193                                M$RLSFLD
      477     8194                                                                                      */
      478     8195        /*F* NAME:  QGB$RLSFLD Service
      479     8196        ..::IT "Format:"
      480     8197        CALL QGB$RLSFLD ( fpt_rlsfld, qgb_param ) ALTRET ( label );
      481     8198        ..::IT "Parameters:"
      482     8199        fpt_rlsfld^^^^specifies the name of an FPT_RLSFLD structure containing
      483     8200        parameters for the call to M$RLSFLD.
      484     8201
      485     8202        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      486     8203        ..::IT "Description:"
      487     8204        QGB$RLSFLD places a Release Field VDO (Virtual Device Operator) into
      488     8205        the specified buffer.  If there is not enough space left in the
      489     8206        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      490     8207        of the write multiple operation, this VDO is placed at the beginning
      491     8208        of the buffer.
      492     8209        */
      493     8210    1   QGB$RLSFLD: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8210   2 000086  D380 0000 0000  xent QGB$RLSFLD      LNJ,B5   X6A_AUTO_2
          2 000089       0099 0002                       DC       153,2

      494     8211
      495     8212        /*N*  Someday successive ERASE and RELEASE operations will be turned
      496     8213              into SELECT operations followed by the original operation VDO.
      497     8214              The latter will happen when the function request changes.
      498     8215
      499     8216           CALL CHECK_LAST_FUNCTION ( %G_MCL_RLSFLD# )
      500     8217           WHENALTRETURN DO;
      501     8218             CALL DO_LAST_FUNCTION;
      502     8219             END;
      503     8220        */
      504     8221
      505     8222    1       CALL SETUP ( %G_MCL_RLSFLD# );

   8222   2 00008B  EBF0 0190                            LAB,B6   400,IMO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:70   
          2 00008D  EFC7 008C                            STB,B6   FPT_READMLT+21,AUTO
          2 00008F  E3C0 0164                            LNJ,B6   s:0,PREL
          2 000091       0001                            DC       s:8223,PREL

      506     8223    1       CALL DO_RLSFLD

   8223   2 000092  E3C0 03BC                            LNJ,B6   s:0,PREL
          2 000094       0003                            DC       s:8226,PREL
          2 000095  0F81 0004                            B        s:8229,PREL

      507     8224    1       WHENALTRETURN
      508     8225    2         DO;

      509     8226    2           ALTRETURN;

   8226   2 000097  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      510     8227    2         END;
      511     8228
      512     8229    1       RETURN;

   8229   2 00009A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      513     8230
      514     8231        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:71   
      515     8232        /*
      516     8233                                M$ERASE
      517     8234                                                                                      */
      518     8235        /*F* NAME:  QGB$ERASE Service
      519     8236        ..::IT "Format:"
      520     8237        CALL QGB$ERASE ( fpt_erase, qgb_param ) ALTRET ( label );
      521     8238        ..::IT "Parameters:"
      522     8239        fpt_erase^^^^specifies the name of an FPT_ERASE structure containing
      523     8240        parameters for the call to M$ERASE.
      524     8241
      525     8242        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      526     8243        ..::IT "Description:"
      527     8244        QGB$ERASE places a Erase Field VDO (Virtual Device Operator) into
      528     8245        the specified buffer.  If there is not enough space left in the
      529     8246        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      530     8247        of the write multiple operation, this VDO is placed at the beginning
      531     8248        of the buffer.
      532     8249        */
      533     8250    1   QGB$ERASE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8250   2 00009D  D380 0000 0000  xent QGB$ERASE       LNJ,B5   X6A_AUTO_2
          2 0000A0       0099 0002                       DC       153,2

      534     8251
      535     8252        /*N*  Someday successive ERASE and RELEASE operations will be turned
      536     8253              into SELECT operations followed by the original operation VDO.
      537     8254              The latter will happen when the function request changes.
      538     8255
      539     8256           CALL CHECK_LAST_FUNCTION ( %G_MCL_ERASE# )
      540     8257           WHENALTRETURN DO;
      541     8258             CALL DO_LAST_FUNCTION;
      542     8259             END;
      543     8260        */
      544     8261
      545     8262    1       CALL SETUP ( %G_MCL_ERASE# );

   8262   2 0000A2  EBF0 0192                            LAB,B6   402,IMO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:72   
          2 0000A4  EFC7 008C                            STB,B6   FPT_READMLT+21,AUTO
          2 0000A6  E3C0 014D                            LNJ,B6   s:0,PREL
          2 0000A8       0001                            DC       s:8263,PREL

      546     8263    1       CALL DO_ERASE

   8263   2 0000A9  E3C0 034C                            LNJ,B6   s:0,PREL
          2 0000AB       0003                            DC       s:8266,PREL
          2 0000AC  0F81 0004                            B        s:8269,PREL

      547     8264    1       WHENALTRETURN
      548     8265    2         DO;

      549     8266    2           ALTRETURN;

   8266   2 0000AE  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      550     8267    2         END;
      551     8268
      552     8269    1       RETURN;

   8269   2 0000B1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      553     8270
      554     8271        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:73   
      555     8272        /*
      556     8273                                M$WRITE
      557     8274                                                                                      */
      558     8275        /*F* NAME:  QGB$WRITE Service
      559     8276        ..::IT "Format:"
      560     8277        CALL QGB$WRITE ( fpt_write, qgb_param ) ALTRET ( label );
      561     8278        ..::IT "Parameters:"
      562     8279        fpt_write^^^^specifies the name of an FPT_WRITE structure containing
      563     8280        parameters for the call to M$WRITE.
      564     8281
      565     8282        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      566     8283        ..::IT "Description:"
      567     8284        QGB$WRITE places a Data Field VDO (Virtual Device Operator) into
      568     8285        the specified buffer.  If there is not enough space left in the
      569     8286        buffer, it is written to the handler via M$WRTMLT.  Upon completion
      570     8287        of the write multiple operation, this VDO is placed at the beginning
      571     8288        of the buffer.
      572     8289        */
      573     8290
      574     8291    1   QGB$WRITE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8291   2 0000B4  D380 0000 0000  xent QGB$WRITE       LNJ,B5   X6A_AUTO_2
          2 0000B7       0099 0002                       DC       153,2

      575     8292
      576     8293        /*N*  Someday successive ERASE and RELEASE operations will be turned
      577     8294              into SELECT operations followed by the original operation VDO.
      578     8295              The latter will happen when the function request changes.
      579     8296
      580     8297           CALL CHECK_LAST_FUNCTION ( %G_MCL_WRITE# )
      581     8298           WHENALTRETURN DO;
      582     8299             CALL DO_LAST_FUNCTION;
      583     8300             END;
      584     8301        */
      585     8302
      586     8303    1       IF DCBADDR ( FPT_WRITE_ARG.V.DCB# ) -> MYDCB.ORG ~= %G_ORG_FORM#

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:74   
   8303   2 0000B9  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          2 0000BC  DC86                                 LDB,B5   ,B6
          2 0000BD  CCC7 0004                            LDB,B4   @QGB_ARG,AUTO
          2 0000BF  B2C4 000F                            LLH,R3   15,B4
          2 0000C1  BCB5                                 LDB,B3   ,B5,R3
          2 0000C2  E843 001F                            LDR,R6   31,B3
          2 0000C4  E570 00FF                            AND,R6   255,IMO
          2 0000C6  6D02                                 CMV,R6   2
          2 0000C7  0901 0018                            BE       s:8314,PREL

      587     8304    1       THEN
      588     8305    2         DO;

      589     8306    2           CALL M$WRITE ( FPT_WRITE_ARG )

   8306   2 0000C9  BB84                                 LAB,B3   ,B4
          2 0000CA  B870 1543                            LDR,R3   5443,IMO
          2 0000CC  0001                                 MCL
          2 0000CD       0003                            DC       s:8309,PREL
          2 0000CE  0F81 000E                            B        s:8312,PREL

      590     8307    2           WHENALTRETURN
      591     8308    3             DO;

      592     8309    3               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;

   8309   2 0000D0  EC80 0000 0000  xsym                 LDB,B6   G$TCB$
          2 0000D3  DC86                                 LDB,B5   ,B6
          2 0000D4  8CC5 002B                            LDI      43,B5
          2 0000D6  CCC7 0006                            LDB,B4   @QGB_PARAM,AUTO
          2 0000D8  8D44 0005                            SDI      5,B4

      593     8310    3               ALTRETURN;

   8310   2 0000DA  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      594     8311    3             END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:75   
      595     8312    2           RETURN;

   8312   2 0000DD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      596     8313    2         END;
      597     8314    1       CALL SETUP ( %G_MCL_WRITE# );

   8314   2 0000E0  ABF0 0143                            LAB,B2   323,IMO
          2 0000E2  AFC7 008C                            STB,B2   FPT_READMLT+21,AUTO
          2 0000E4  E3C0 010F                            LNJ,B6   s:0,PREL
          2 0000E6       0001                            DC       s:8315,PREL

      598     8315    1       CALL DO_WRITE

   8315   2 0000E7  E3C0 03AC                            LNJ,B6   s:0,PREL
          2 0000E9       0003                            DC       s:8318,PREL
          2 0000EA  0F81 0004                            B        s:8321,PREL

      599     8316    1       WHENALTRETURN
      600     8317    2         DO;

      601     8318    2           ALTRETURN;

   8318   2 0000EC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      602     8319    2         END;
      603     8320
      604     8321    1       RETURN;

   8321   2 0000EF  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      605     8322
      606     8323        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:76   
      607     8324        /*
      608     8325                                X$READ
      609     8326                                                                                      */
      610     8327        /*F* NAME:  QGB$READ Service
      611     8328        ..::IT "Format:"
      612     8329        CALL QGB$READ ( fpt_read, qgb_param ) ALTRET ( label );
      613     8330        ..::IT "Parameters:"
      614     8331        fpt_read^^^^specifies the name of an FPT_READ structure containing
      615     8332        parameters for the call to M$READ.
      616     8333
      617     8334        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      618     8335        ..::IT "Description:"
      619     8336        QGB$READ performs an M$READ, possibly flushing the library's buffer
      620     8337        beforehand.  It then decodes the VDO list returned to it from the
      621     8338        handler, returning the results of one decoded VDO, per call, to the
      622     8339        calling routine; an M$EOF error is placed in QGB_PARAM.ERR when no
      623     8340        VDOs remain.  In this way, the QGB$READ routine is called just as
      624     8341        M$READ would normally be called for a forms-mode read.
      625     8342        */
      626     8343
      627     8344    1   QGB$READ: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8344   2 0000F2  D380 0000 0000  xent QGB$READ        LNJ,B5   X6A_AUTO_2
          2 0000F5       0099 0002                       DC       153,2

      628     8345
      629     8346        /*N*  Someday successive ERASE and RELEASE operations will be turned
      630     8347              into SELECT operations followed by the original operation VDO.
      631     8348              The latter will happen when the function request changes.
      632     8349
      633     8350           CALL CHECK_LAST_FUNCTION ( %G_MCL_READ# )
      634     8351           WHENALTRETURN DO;
      635     8352             CALL DO_LAST_FUNCTION;
      636     8353             END;
      637     8354        */
      638     8355
      639     8356    1       IF DCBADDR ( FPT_READ_ARG.V.DCB# ) -> MYDCB.ORG ~= %G_ORG_FORM#
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:77   

   8356   2 0000F7  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          2 0000FA  DC86                                 LDB,B5   ,B6
          2 0000FB  CCC7 0004                            LDB,B4   @QGB_ARG,AUTO
          2 0000FD  B2C4 000F                            LLH,R3   15,B4
          2 0000FF  BCB5                                 LDB,B3   ,B5,R3
          2 000100  E843 001F                            LDR,R6   31,B3
          2 000102  E570 00FF                            AND,R6   255,IMO
          2 000104  6D02                                 CMV,R6   2
          2 000105  0901 002B                            BE       s:8377,PREL

      640     8357    1       THEN
      641     8358    2         DO;

      642     8359    2           IF DCBADDR ( FPT_READ_ARG.V.DCB# ) -> MYDCB.ORG = %G_ORG_TERMINAL#

   8359   2 000107  6D03                                 CMV,R6   3
          2 000108  0981 0010                            BNE      s:8369,PREL

      643     8360    2           THEN
      644     8361    3             DO;

      645     8362    3               CALL SETUP ( %G_MCL_READ# );

   8362   2 00010A  ABF0 0142                            LAB,B2   322,IMO
          2 00010C  AFC7 008C                            STB,B2   FPT_READMLT+21,AUTO
          2 00010E  E3C0 00E5                            LNJ,B6   s:0,PREL
          2 000110       0001                            DC       s:8363,PREL

      646     8363    3               CALL DO_WRITE_MULT

   8363   2 000111  E3C0 06ED                            LNJ,B6   s:0,PREL
          2 000113       0003                            DC       s:8366,PREL
          2 000114  0F81 0004                            B        s:8369,PREL

      647     8364    3               WHENALTRETURN
      648     8365    4                 DO;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:78   

      649     8366    4                   ALTRETURN;

   8366   2 000116  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      650     8367    4                 END;
      651     8368    3             END;

      652     8369    2           CALL M$READ ( FPT_READ_ARG )

   8369   2 000119  BCC7 0004                            LDB,B3   @QGB_ARG,AUTO
          2 00011B  B870 1542                            LDR,R3   5442,IMO
          2 00011D  0001                                 MCL
          2 00011E       0003                            DC       s:8372,PREL
          2 00011F  0F81 000E                            B        s:8375,PREL

      653     8370    2           WHENALTRETURN
      654     8371    3             DO;

      655     8372    3               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;

   8372   2 000121  EC80 0000 0000  xsym                 LDB,B6   G$TCB$
          2 000124  DC86                                 LDB,B5   ,B6
          2 000125  8CC5 002B                            LDI      43,B5
          2 000127  CCC7 0006                            LDB,B4   @QGB_PARAM,AUTO
          2 000129  8D44 0005                            SDI      5,B4

      656     8373    3               ALTRETURN;

   8373   2 00012B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      657     8374    3             END;
      658     8375    2           RETURN;

   8375   2 00012E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      659     8376    2         END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:79   
      660     8377    1       CALL SETUP ( %G_MCL_READ# );

   8377   2 000131  ABF0 0142                            LAB,B2   322,IMO
          2 000133  AFC7 008C                            STB,B2   FPT_READMLT+21,AUTO
          2 000135  E3C0 00BE                            LNJ,B6   s:0,PREL
          2 000137       0001                            DC       s:8378,PREL

      661     8378    1       QGB_PARAM.ARS = 0;

   8378   2 000138  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 00013A  8746 0019                            CL       25,B6

      662     8379    1       QGB_PARAM.DVE.EOMCHAR = %G_EOM_EOR#;

   8379   2 00013C  E080 0000 001E  00                   LDH,R6   NULLHDR+1
          2 00013F  EAC6 000A                            SRM,R6,'00FF'X    10,B6
          2 000141       00FF

      663     8380    1       QGB_PARAM.ERR = '0'B;

   8380   2 000142  8746 0005                            CL       5,B6
          2 000144  8746 0006                            CL       6,B6

      664     8381    1       IF NOT QGB_PARAM.CURRENTLY_READING

   8381   2 000146  82C6 000B                            LB,'2000'X        11,B6
   8381   2 000148       2000
          2 000149  0501 0043                            BBT      s:8403,PREL

      665     8382    1       THEN
      666     8383    2         DO;

      667     8384    2           QGB_PARAM.CURRENTLY_READING = '1'B;

   8384   2 00014B  8946 000B                            LBT,'2000'X       11,B6
   8384   2 00014D       2000

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:80   
      668     8385    2           CALL DO_WRITE_MULT

   8385   2 00014E  E3C0 06B0                            LNJ,B6   s:0,PREL
          2 000150       0003                            DC       s:8388,PREL
          2 000151  0F81 0004                            B        s:8390,PREL

      669     8386    2           WHENALTRETURN
      670     8387    3             DO;

      671     8388    3               ALTRETURN;

   8388   2 000153  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      672     8389    3             END;
      673     8390    2           FPT_READMLT = FPT_READ_ARG;

   8390   2 000156  ACC7 0004                            LDB,B2   @QGB_ARG,AUTO
          2 000158  2C00                                 LDV,R2   0
          2 000159  6C24                                 LDV,R6   36
          2 00015A  BBC7 0077                            LAB,B3   FPT_READMLT,AUTO
          2 00015C  3C00                                 LDV,R3   0
          2 00015D  0008                                 MMM

      674     8391    2           VBASE ( FPT_READMLT.V_ ) = ADDR ( FPT_READMLT.V );

   8391   2 00015E  EBC7 0086                            LAB,B6   FPT_READMLT+15,AUTO
          2 000160  EFC7 0078                            STB,B6   FPT_READMLT+1,AUTO

      675     8392    2           FPT_READMLT.BUF_ = QGB_PARAM.BBUF_;

   8392   2 000162  ACC7 0006                            LDB,B2   @QGB_PARAM,AUTO
          2 000164  2C00                                 LDV,R2   0
          2 000165  6C06                                 LDV,R6   6
          2 000166  BBC7 007D                            LAB,B3   FPT_READMLT+6,AUTO
          2 000168  3C00                                 LDV,R3   0
          2 000169  0008                                 MMM

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:81   
      676     8393    2           FPT_READMLT.V.READMLT = '1'B;

   8393   2 00016A  8947 0086                            LBT,'0004'X       FPT_READMLT+15,AUTO
   8393   2 00016C       0004

      677     8394    2           CALL M$READ ( FPT_READMLT )

   8394   2 00016D  BBC7 0077                            LAB,B3   FPT_READMLT,AUTO
          2 00016F  B870 1542                            LDR,R3   5442,IMO
          2 000171  0001                                 MCL
          2 000172       0003                            DC       s:8397,PREL
          2 000173  0F81 000E                            B        s:8400,PREL

      678     8395    2           WHENALTRETURN
      679     8396    3             DO;

      680     8397    3               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;

   8397   2 000175  EC80 0000 0000  xsym                 LDB,B6   G$TCB$
          2 000178  DC86                                 LDB,B5   ,B6
          2 000179  8CC5 002B                            LDI      43,B5
          2 00017B  CCC7 0006                            LDB,B4   @QGB_PARAM,AUTO
          2 00017D  8D44 0005                            SDI      5,B4

      681     8398    3               ALTRETURN;

   8398   2 00017F  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      682     8399    3             END;
      683     8400    2           QGB_PARAM.UHDRC$ = VBASE ( FPT_READMLT.BUF_ );

   8400   2 000182  8CC7 007E                            LDI      FPT_READMLT+7,AUTO
          2 000184  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000186  8D46 000E                            SDI      14,B6

      684     8401    2           QGB_PARAM.UHDRSZ = MYDCB.ARS;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:82   
   8401   2 000188  DCC7 0060                            LDB,B5   DCB$,AUTO
          2 00018A  D805                                 LDR,R5   ,B5
          2 00018B  DF46 0010                            STR,R5   16,B6

      685     8402    2         END;

      686     8403    1       CALL DO_READ

   8403   2 00018D  E3C0 03A1                            LNJ,B6   s:0,PREL
          2 00018F       0003                            DC       s:8406,PREL
          2 000190  0F81 0004                            B        s:8408,PREL

      687     8404    1       WHENALTRETURN
      688     8405    2         DO;

      689     8406    2           ALTRETURN;

   8406   2 000192  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      690     8407    2         END;
      691     8408    1       IF QGB_PARAM.ERR ~= '0'B

   8408   2 000195  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000197  DB80 0000 0000  03                   LAB,B5   0
          2 00019A  5C01                                 LDV,R5   1
          2 00019B  0022                                 ACM      ;
          2 00019C       4406 0005                                ALPHANUM(5,B6,,4,FILL),;
          2 00019E       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          2 0001A0  5381 0007                            CBE      s:8414,PREL

      692     8409    1       THEN
      693     8410    2         DO;

      694     8411    2           QGB_PARAM.CURRENTLY_READING = '0'B;

   8411   2 0001A2  8846 000B                            LBF,'2000'X       11,B6
   8411   2 0001A4       2000
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:83   

      695     8412    2           ALTRETURN;

   8412   2 0001A5  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      696     8413    2         END;
      697     8414    1       IF POFFC ( QGB_PARAM.UHDR$, VBASE ( QGB_PARAM.BBUF_ ) ) >= QGB_PARAM.UHDRSZ

   8414   2 0001A8  8CC6 0001                            LDI      1,B6
          2 0001AA  7031                                 DCL,R7   1
          2 0001AB  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0001AD  8CC6 000E                            LDI      14,B6
          2 0001AF  7031                                 DCL,R7   1
          2 0001B0  84C7 0094                            SID      @FUNCTION+2,AUTO
          2 0001B2  8D47 0096                            SDI      @FUNCTION+4,AUTO
          2 0001B4  F846 0010                            LDR,R7   16,B6
          2 0001B6  6C00                                 LDV,R6   0
          2 0001B7  84C7 0096                            SID      @FUNCTION+4,AUTO
          2 0001B9  6A01 0008                            BGZ,R6   s:8418,PREL
          2 0001BB  6801 0003                            BLZ,R6   s:8416,PREL
          2 0001BD  7981 0004                            BNEZ,R7  s:8418,PREL

      698     8415    1       THEN
      699     8416    1         QGB_PARAM.CURRENTLY_READING = '0'B;

   8416   2 0001BF  8846 000B                            LBF,'2000'X       11,B6
   8416   2 0001C1       2000

      700     8417
      701     8418    1       RETURN;

   8418   2 0001C2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      702     8419
      703     8420        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:84   
      704     8421        /*F* NAME:  QGB$DEVICE Service
      705     8422        ..::IT "Format:"
      706     8423        CALL QGB$DEVICE ( fpt_device, qgb_param ) ALTRET ( label );
      707     8424        ..::IT "Parameters:"
      708     8425        fpt_device^^^^specifies the name of an FPT_DEVICE structure containing
      709     8426        parameters for the call to M$DEVICE.
      710     8427
      711     8428        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      712     8429        ..::IT "Description:"
      713     8430        QGB$DEVICE places an M$DEVICE into a VDO buffer.  FPT_DEVICE FPTs are
      714     8431        buffered in the same manner as VDOs.
      715     8432        */
      716     8433    1   QGB$DEVICE: ENTRY ( QGB_ARG, QGB_PARAM ) ALTRET;

   8433   2 0001C5  D380 0000 0000  xent QGB$DEVICE      LNJ,B5   X6A_AUTO_2
          2 0001C8       0099 0002                       DC       153,2

      717     8434
      718     8435        /*N*  Someday successive ERASE and RELEASE operations will be turned
      719     8436              into SELECT operations followed by the original operation VDO.
      720     8437              The latter will happen when the function request changes.
      721     8438
      722     8439           CALL CHECK_LAST_FUNCTION ( %G_MCL_DEVICE# )
      723     8440           WHENALTRETURN DO;
      724     8441             CALL DO_LAST_FUNCTION;
      725     8442             END;
      726     8443        */
      727     8444    1       CALL SETUP ( %G_MCL_DEVICE# );

   8444   2 0001CA  EBF0 0147                            LAB,B6   327,IMO
          2 0001CC  EFC7 008C                            STB,B6   FPT_READMLT+21,AUTO
          2 0001CE  E3C0 0025                            LNJ,B6   s:0,PREL
          2 0001D0       0001                            DC       s:8445,PREL

      728     8445    1       CALL DO_DEVICE

   8445   2 0001D1  E3C0 047D                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:85   
          2 0001D3       0003                            DC       s:8447,PREL
          2 0001D4  0F81 0004                            B        s:8449,PREL

      729     8446    2       WHENALTRETURN DO;

      730     8447    2           ALTRETURN;

   8447   2 0001D6  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      731     8448    2         END;
      732     8449    1       CALL DO_WRITE_MULT

   8449   2 0001D9  E3C0 0625                            LNJ,B6   s:0,PREL
          2 0001DB       0003                            DC       s:8452,PREL
          2 0001DC  0F81 0004                            B        s:8455,PREL

      733     8450    1       WHENALTRETURN
      734     8451    2         DO;

      735     8452    2           ALTRETURN;

   8452   2 0001DE  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      736     8453    2         END;
      737     8454
      738     8455    1       RETURN;

   8455   2 0001E1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      739     8456
      740     8457        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:86   
      741     8458        /*F* NAME:  QGB$FLUSH Service
      742     8459        ..::IT "Format:"
      743     8460        CALL QGB$FLUSH ( , qgb_param ) ALTRET ( label );
      744     8461        ..::IT "Parameters:"
      745     8462        qgb_param^^^^specifies the name of a QGB_PARAM structure.
      746     8463
      747     8464        Note:  There is no first parameter, but a comma precedes qgb_param.
      748     8465        ..::IT "Description:"
      749     8466        QGB$FLUSH sends a VDO buffer to its destination.  If the buffer is
      750     8467        completely empty, no operation occurs; otherwise, an M$WRTMLT is
      751     8468        performed.  This is similar in concept to the M$TRUNC host monitor
      752     8469        service.
      753     8470
      754     8471        This service expedites the sending of the VDO buffer to the handler.
      755     8472        A manufactured FPT_DEVICE is place in the buffer prior to send-off
      756     8473        to insure that correct actions are taken care of on the device.
      757     8474        */
      758     8475    1   QGB$FLUSH: ENTRY  ( QGB_ARG, QGB_PARAM ) ALTRET;

   8475   2 0001E4  D380 0000 0000  xent QGB$FLUSH       LNJ,B5   X6A_AUTO_2
          2 0001E7       0099 0002                       DC       153,2

      759     8476
      760     8477    1       CALL DO_WRITE_MULT

   8477   2 0001E9  E3C0 0615                            LNJ,B6   s:0,PREL
          2 0001EB       0003                            DC       s:8480,PREL
          2 0001EC  0F81 0004                            B        s:8483,PREL

      761     8478    1       WHENALTRETURN
      762     8479    2         DO;

      763     8480    2           ALTRETURN;

   8480   2 0001EE  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      764     8481    2         END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:87   
      765     8482
      766     8483    1       RETURN;

   8483   2 0001F1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      767     8484
      768     8485        %EJECT;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:88   
      769     8486        /*
      770     8487           Official order of internal procedures:
      771     8488                 CHECK_LAST_FUNCTION
      772     8489                 SETUP
      773     8490                 CHECK_SPACE
      774     8491                 DO_DCLFLD
      775     8492                 DO_MDFFLD
      776     8493                 DO_SLCFLD
      777     8494                 DO_ERASE
      778     8495                 DO_RLSFLD
      779     8496                 DO_WRITE
      780     8497                 DO_READ
      781     8498                 DO_DEVICE
      782     8499                 INIT_VDO
      783     8500                 DO_WRITE_MULT
      784     8501                 FINISH_VDO
      785     8502                                           */
      786     8503        /*
      787     8504        CHECK_LAST_FUNCTION: PROC ( FUNCTION ) ALTRET;
      788     8505
      789     8506          DCL FUNCTION UBIN WORD;
      790     8507
      791     8508            IF LAST_FUNCTION ~= FUNCTION
      792     8509              AND ( LAST_FUNCTION = %G_MCL_RLSFLD#
      793     8510              OR LAST_FUNCTION = %G_MCL_ERASE# )
      794     8511            THEN
      795     8512              ALTRETURN;
      796     8513
      797     8514            RETURN;
      798     8515
      799     8516        END CHECK_LAST_FUNCTION;
      800     8517        */
      801     8518
      802     8519    1   SETUP: PROC ( FUNCTION ) ALTRET;

   8519   2 0001F4  EFC7 008A            SETUP           STB,B6   FPT_READMLT+19,AUTO

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:89   
      803     8520
      804     8521    2     DCL FUNCTION UBIN PARAM;
      805     8522
      806     8523    2       QGB_PARAM.V$ = QGB_PARAMS.PTRS.PAR1$;

   8523   2 0001F6  DCC7 0004                            LDB,B5   @QGB_ARG,AUTO
          2 0001F8  CCC5 0001                            LDB,B4   1,B5
          2 0001FA  BCC7 0006                            LDB,B3   @QGB_PARAM,AUTO
          2 0001FC  CFC3 0012                            STB,B4   18,B3

      807     8524        /*  IF DCBNUMBER = 0
      808     8525              OR DCBNUMBER > G$ROS$ -> G$ROS.NUMDCBS
      809     8526            THEN DO;
      810     8527             QGB_PARAMS.ERR = E$INVALID_DCB;
      811     8528                ALTRETURN;
      812     8529              END;  */
      813     8530
      814     8531    2       FPT_WRTMLT.V.DCB# = FPT$DCLFLD_V.DCB#;

   8531   2 0001FE  E284                                 LLH,R6   ,B4
          2 0001FF  E780 0000 000C  01                   STH,R6   FPT_WRTMLT+12

      815     8532    2       DCB$ = DCBADDR ( FPT_WRTMLT.V.DCB# );

   8532   2 000202  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          2 000205  AC86                                 LDB,B2   ,B6
          2 000206  B280 0000 000C  01                   LLH,R3   FPT_WRTMLT+12
          2 000209  9CB2                                 LDB,B1   ,B2,R3
          2 00020A  9FC7 0060                            STB,B1   DCB$,AUTO

      816     8533
      817     8534        /*  IF NOT ( MYDCB.FCD )
      818     8535            THEN DO;
      819     8536             QGB_PARAMS.ERR = E$NOT_OPEN;
      820     8537                ALTRETURN;
      821     8538              END;  */
      822     8539
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:90   
      823     8540    2       QGB_PARAM.KEY$ = ADDR(NIL);

   8540   2 00020C  EB80 0000 0000                       LAB,B6   0
          2 00020F  EFC3 0014                            STB,B6   20,B3

      824     8541    2       QGB_PARAM.KEYTYPE = MYDCB.KEYTYPE;

   8541   2 000211  E2C1 0024                            LLH,R6   36,B1
          2 000213  E7C3 001A                            STH,R6   26,B3

      825     8542    2       QGB_PARAM.STR = MYDCB.STRM;

   8542   2 000215  E841 0002                            LDR,R6   2,B1
          2 000217  EAC3 0011                            SRM,R6,'00FF'X    17,B3
          2 000219       00FF

      826     8543    2       IF QGB_PARAM.BBUF_OFFSET$ = ADDR(NIL)

   8543   2 00021A  8DC3 0003                            CMN      3,B3
          2 00021C  0981 0008                            BNE      s:8549,PREL

      827     8544    2       THEN
      828     8545    3         DO;

      829     8546    3           QGB_PARAM.BBUF_OFFSET$ = VBASE( QGB_PARAM.BBUF_ );

   8546   2 00021E  8CC3 0001                            LDI      1,B3
          2 000220  8D43 0003                            SDI      3,B3

      830     8547    3           VBASE( FPT_WRTMLT.BUF_ ) = VBASE( QGB_PARAM.BBUF_ );

   8547   2 000222  8D00 0000 0004  01                   SDI      FPT_WRTMLT+4

      831     8548    3         END;

      832     8549    2       RETURN;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:91   
   8549   2 000225  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000227  C3C6 0001                            LNJ,B4   1,B6

      833     8550
      834     8551    2   END SETUP;
      835     8552
      836     8553    1   CHECK_SPACE: PROC ( FUNCTION ) ALTRET;

   8553   2 000229  EFC7 0090            CHECK_SPACE     STB,B6   @FUNCTION+2,AUTO

      837     8554
      838     8555    2     DCL FUNCTION UBIN;
      839     8556
      840     8557    2       MAX_VDOSIZE = QGB_VDOBYTSIZ ( FUNCTION )

   8557   2 00022B  DCC7 0092                            LDB,B5   @FUNCTION,AUTO
          2 00022D  B805                                 LDR,R3   ,B5
          2 00022E  CCC7 0006                            LDB,B4   @QGB_PARAM,AUTO
          2 000230  E2B0 0000 0008  00                   LLH,R6   QGB_VDOBYTSIZ,R3
          2 000233  EA44 0016                            ADD,R6   22,B4
          2 000235  EF47 0072                            STR,R6   MAX_VDOSIZE,AUTO

      841     8558    2         + QGB_PARAM.VSZ;
      842     8559
      843     8560    2       IF MYDCB.KEYTYPE = %G_KEYTYPE_FLDID#

   8560   2 000237  BCC7 0060                            LDB,B3   DCB$,AUTO
          2 000239  D2C3 0024                            LLH,R5   36,B3
          2 00023B  5D01                                 CMV,R5   1
          2 00023C  0981 0006                            BNE      s:8565,PREL

      844     8561    2       THEN
      845     8562    2         MAX_VDOSIZE = MAX_VDOSIZE

   8562   2 00023E  6E04                                 ADV,R6   4
          2 00023F  EF47 0072                            STR,R6   MAX_VDOSIZE,AUTO
          2 000241  0F81 000D                            B        s:8572,PREL
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:92   

      846     8563    2           + SIZEC ( QGB_VDOVLP_FLDID );
      847     8564    2       ELSE
      848     8565    2         IF MYDCB.KEYTYPE = %G_KEYTYPE_COORD#

   8565   2 000243  5D02                                 CMV,R5   2
          2 000244  0981 000A                            BNE      s:8572,PREL

      849     8566    2         THEN
      850     8567    2           MAX_VDOSIZE = MAX_VDOSIZE

   8567   2 000246  C844 001A                            LDR,R4   26,B4
          2 000248  C570 00FF                            AND,R4   255,IMO
          2 00024A  CA56                                 ADD,R4   R6
          2 00024B  E854                                 LDR,R6   R4
          2 00024C  6E03                                 ADV,R6   3
          2 00024D  EF47 0072                            STR,R6   MAX_VDOSIZE,AUTO

      851     8568    2             + SIZEC ( QGB_VDOVLP_KEY )
      852     8569    2             + QGB_PARAM.KEYSZ
      853     8570    2             + 1;
      854     8571
      855     8572    2       IF QGB_PARAM.MSGSZ > 0

   8572   2 00024F  C844 0009                            LDR,R4   9,B4
          2 000251  4A81 0005                            BLEZ,R4  s:8579,PREL

      856     8573    2       THEN
      857     8574    2         MAX_VDOSIZE = MAX_VDOSIZE

   8574   2 000253  EA54                                 ADD,R6   R4
          2 000254  6E05                                 ADV,R6   5
          2 000255  EF47 0072                            STR,R6   MAX_VDOSIZE,AUTO

      858     8575    2           + SIZEC ( QGB_VDOVLP_DAT2 )
      859     8576    2           + QGB_PARAM.MSGSZ
      860     8577    2           + 1;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:93   
      861     8578
      862     8579    2       MAX_VDOSIZE = MAX_VDOSIZE

   8579   2 000257  6E0B                                 ADV,R6   11
          2 000258  EF47 0072                            STR,R6   MAX_VDOSIZE,AUTO

      863     8580    2         + SIZEC ( LAST_ENTRY_C )
      864     8581    2         + 1;
      865     8582
      866     8583    2       BUFFER_SCRAPS = VBOUND ( QGB_PARAM.BBUF_ )

   8583   2 00025A  8CC4 0001                            LDI      1,B4
          2 00025C  7031                                 DCL,R7   1
          2 00025D  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 00025F  8CC4 0003                            LDI      3,B4
          2 000261  7031                                 DCL,R7   1
          2 000262  84C7 0094                            SID      @FUNCTION+2,AUTO
          2 000264  8D47 0096                            SDI      @FUNCTION+4,AUTO
          2 000266  F804                                 LDR,R7   ,B4
          2 000267  6C00                                 LDV,R6   0
          2 000268  84C7 0096                            SID      @FUNCTION+4,AUTO
          2 00026A  E857                                 LDR,R6   R7
          2 00026B  EF47 0069                            STR,R6   BUFFER_SCRAPS,AUTO

      867     8584    2         - POFFC ( QGB_PARAM.BBUF_OFFSET$, VBASE( QGB_PARAM.BBUF_ ) );
      868     8585
      869     8586    2       IF BUFFER_SCRAPS < MAX_VDOSIZE

   8586   2 00026D  E947 0072                            CMR,R6   MAX_VDOSIZE,AUTO
          2 00026F  0281 0005                            BGE      s:8591,PREL

      870     8587    3       THEN DO;

      871     8588    3           ALTRETURN;

   8588   2 000271  ECC7 0090                            LDB,B6   @FUNCTION+2,AUTO
          2 000273  B806                                 LDR,R3   ,B6
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:94   
          2 000274  C3B6                                 LNJ,B4   ,B6,R3

      872     8589    3         END;
      873     8590
      874     8591    2       RETURN;

   8591   2 000275  ECC7 0090                            LDB,B6   @FUNCTION+2,AUTO
          2 000277  C3C6 0001                            LNJ,B4   1,B6

      875     8592
      876     8593    2   END CHECK_SPACE;
      877     8594
      878     8595
      879     8596    1   DO_DCLFLD: PROC ALTRET;

   8596   2 000279  EFC7 008A            DO_DCLFLD       STB,B6   FPT_READMLT+19,AUTO

      880     8597    2       QGB_PARAM.IP$ = QGB_PARAMS.PTRS.PAR3$;

   8597   2 00027B  DCC7 0004                            LDB,B5   @QGB_ARG,AUTO
          2 00027D  CCC5 0007                            LDB,B4   7,B5
          2 00027F  BCC7 0006                            LDB,B3   @QGB_PARAM,AUTO
          2 000281  CFC3 000C                            STB,B4   12,B3

      881     8598    2       QGB_PARAM.DVE.DVBYTE = FPT$DCLFLD_V.DVBYTE;

   8598   2 000283  ECC3 0012                            LDB,B6   18,B3
          2 000285  E806                                 LDR,R6   ,B6
          2 000286  6008                                 SOL,R6   8
          2 000287  6048                                 SOR,R6   8
          2 000288  E7C3 000A                            STH,R6   10,B3

      882     8599    2       IF QGB_PARAM.DVE.DVBYTE.RRR

   8599   2 00028A  82C3 000A                            LB,'0800'X        10,B3
   8599   2 00028C       0800
          2 00028D  0581 0004                            BBF      s:8603,PREL
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:95   

      883     8600    2       THEN
      884     8601    2         QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;

   8601   2 00028F  6C01                                 LDV,R6   1
          2 000290  E7C3 0011                            STH,R6   17,B3

      885     8602
      886     8603    2       QGB_PARAM.MSGSZ = 0;

   8603   2 000292  8743 0009                            CL       9,B3

      887     8604    2       QGB_PARAM.MSGC$ = QGB_PARAMS.CPTRS.PAR2$;

   8604   2 000294  8CC5 0004                            LDI      4,B5
          2 000296  8D43 0007                            SDI      7,B3

      888     8605    2       IF QGB_PARAM.MSG$ ~= ADDR(NIL)

   8605   2 000298  8DC3 0007                            CMN      7,B3
          2 00029A  0901 0006                            BE       s:8608,PREL

      889     8606    2       THEN
      890     8607    2         QGB_PARAM.MSGSZ = QGB_PARAMS.BND.PAR2+1;

   8607   2 00029C  D845 0003                            LDR,R5   3,B5
          2 00029E  5E01                                 ADV,R5   1
          2 00029F  DF43 0009                            STR,R5   9,B3

      891     8608    2       CALL INIT_VDO ( %KV_VDO_FNC_DCLFLD )

   8608   2 0002A1  ABF0 0007                            LAB,B2   7,IMO
          2 0002A3  AFC7 008E                            STB,B2   @FUNCTION+2,AUTO
          2 0002A5  E3C0 04E3                            LNJ,B6   s:0,PREL
          2 0002A7       0003                            DC       s:8610,PREL
          2 0002A8  0F81 0005                            B        s:8612,PREL

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:96   
      892     8609    3       WHENALTRETURN DO;

      893     8610    3           ALTRETURN;

   8610   2 0002AA  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0002AC  B806                                 LDR,R3   ,B6
          2 0002AD  C3B6                                 LNJ,B4   ,B6,R3

      894     8611    3         END;
      895     8612    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.LIN = FPT$DCLFLD_V.LIN;

   8612   2 0002AE  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 0002B0  DCC6 0003                            LDB,B5   3,B6
          2 0002B2  CCC6 0012                            LDB,B4   18,B6
          2 0002B4  E844 0001                            LDR,R6   1,B4
          2 0002B6  EF45 0001                            STR,R6   1,B5

      896     8613    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.CLM = FPT$DCLFLD_V.CLM;

   8613   2 0002B8  DCC6 0003                            LDB,B5   3,B6
          2 0002BA  CCC6 0012                            LDB,B4   18,B6
          2 0002BC  E844 0002                            LDR,R6   2,B4
          2 0002BE  EF45 0002                            STR,R6   2,B5

      897     8614    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.WDT = FPT$DCLFLD_V.WDT;

   8614   2 0002C0  DCC6 0003                            LDB,B5   3,B6
          2 0002C2  CCC6 0012                            LDB,B4   18,B6
          2 0002C4  E2C4 0004                            LLH,R6   4,B4
          2 0002C6  EF45 0003                            STR,R6   3,B5

      898     8615    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.ID = FPT$DCLFLD_V.ID;

   8615   2 0002C8  DCC6 0003                            LDB,B5   3,B6
          2 0002CA  CCC6 0012                            LDB,B4   18,B6
          2 0002CC  E844 0003                            LDR,R6   3,B4
          2 0002CE  EF45 0005                            STR,R6   5,B5
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:97   

      899     8616    2       IF VLP$FLDATR.ABSGRPRND ~= 0

   8616   2 0002D0  DCC6 000C                            LDB,B5   12,B6
          2 0002D2  E2C5 0002                            LLH,R6   2,B5
          2 0002D4  6901 0011                            BEZ,R6   s:8623,PREL

      900     8617    3       THEN DO;

      901     8618    3           QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.GRPRND =

   8618   2 0002D6  CCC6 0003                            LDB,B4   3,B6
          2 0002D8  D2C5 0002                            LLH,R5   2,B5
          2 0002DA  5008                                 SOL,R5   8
          2 0002DB  5048                                 SOR,R5   8
          2 0002DC  DAC4 0004                            SRM,R5,'00FF'X    4,B4
          2 0002DE       00FF

      902     8619    3             BINBIT(VLP$FLDATR.ABSGRPRND,SIZEB(KV$VDO_DCLFLD.GRPRND));
      903     8620    3           QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.GRPRND.ABS = '1'B;

   8620   2 0002DF  DCC6 0003                            LDB,B5   3,B6
          2 0002E1  8945 0004                            LBT,'0080'X       4,B5
          2 0002E3       0080

      904     8621    3         END;

   8621   2 0002E4  0F81 0009                            B        s:8624,PREL

      905     8622    2       ELSE
      906     8623    2         QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.GRPRND = VLP$FLDATR.GRPRND;

   8623   2 0002E6  CCC6 0003                            LDB,B4   3,B6
          2 0002E8  D285                                 LLH,R5   ,B5
          2 0002E9  5008                                 SOL,R5   8
          2 0002EA  5048                                 SOR,R5   8
          2 0002EB  DAC4 0004                            SRM,R5,'00FF'X    4,B4
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:98   
          2 0002ED       00FF

      907     8624    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_DCLFLD.QLF = VLP$FLDATR.QLF;

   8624   2 0002EE  DCC6 0003                            LDB,B5   3,B6
          2 0002F0  CCC6 000C                            LDB,B4   12,B6
          2 0002F2  E2C4 0001                            LLH,R6   1,B4
          2 0002F4  6008                                 SOL,R6   8
          2 0002F5  6048                                 SOR,R6   8
          2 0002F6  E7C5 0004                            STH,R6   4,B5

      908     8625
      909     8626    2       CALL FINISH_VDO ( %KV_VDO_FNC_DCLFLD )

   8626   2 0002F8  DBF0 0007                            LAB,B5   7,IMO
          2 0002FA  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 0002FC  E3C0 056B                            LNJ,B6   s:0,PREL
          2 0002FE       0003                            DC       s:8628,PREL
          2 0002FF  0F81 0005                            B        s:8630,PREL

      910     8627    3       WHENALTRETURN DO;

      911     8628    3           ALTRETURN;

   8628   2 000301  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000303  B806                                 LDR,R3   ,B6
          2 000304  C3B6                                 LNJ,B4   ,B6,R3

      912     8629    3         END;
      913     8630    2       RETURN;

   8630   2 000305  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000307  C3C6 0001                            LNJ,B4   1,B6

      914     8631    2   END DO_DCLFLD;
      915     8632
      916     8633    1   DO_MDFFLD: PROC ALTRET;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:99   

   8633   2 000309  EFC7 008A            DO_MDFFLD       STB,B6   FPT_READMLT+19,AUTO

      917     8634    2       IF FPT$MDFFLD_V.KEYTYPE ~= 0

   8634   2 00030B  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 00030D  CCC5 0012                            LDB,B4   18,B5
          2 00030F  82C4 0001                            LB,'00FF'X        1,B4
          2 000311       00FF
          2 000312  0581 0007                            BBF      s:8637,PREL

      918     8635    2       THEN
      919     8636    2         QGB_PARAM.KEYTYPE = FPT$MDFFLD_V.KEYTYPE;

   8636   2 000314  E844 0001                            LDR,R6   1,B4
          2 000316  E570 00FF                            AND,R6   255,IMO
          2 000318  E7C5 001A                            STH,R6   26,B5

      920     8637    2       QGB_PARAM.DVE.DVBYTE = FPT$MDFFLD_V.DVBYTE;

   8637   2 00031A  E2C4 0001                            LLH,R6   1,B4
          2 00031C  6008                                 SOL,R6   8
          2 00031D  6048                                 SOR,R6   8
          2 00031E  E7C5 000A                            STH,R6   10,B5

      921     8638    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;

   8638   2 000320  6C01                                 LDV,R6   1
          2 000321  E7C5 0011                            STH,R6   17,B5

      922     8639    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR3$;

   8639   2 000323  ECC7 0004                            LDB,B6   @QGB_ARG,AUTO
          2 000325  BCC6 0007                            LDB,B3   7,B6
          2 000327  BFC5 0014                            STB,B3   20,B5

      923     8640    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR3+1;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:100  

   8640   2 000329  D846 0006                            LDR,R5   6,B6
          2 00032B  5E01                                 ADV,R5   1
          2 00032C  DAC5 001A                            SRM,R5,'00FF'X    26,B5
          2 00032E       00FF

      924     8641    2       QGB_PARAM.IP$ = QGB_PARAMS.PTRS.PAR4$;

   8641   2 00032F  ACC6 000A                            LDB,B2   10,B6
          2 000331  AFC5 000C                            STB,B2   12,B5

      925     8642    2       QGB_PARAM.MSGSZ = 0;

   8642   2 000333  8745 0009                            CL       9,B5

      926     8643    2       QGB_PARAM.MSGC$ = QGB_PARAMS.CPTRS.PAR2$;

   8643   2 000335  8CC6 0004                            LDI      4,B6
          2 000337  8D45 0007                            SDI      7,B5

      927     8644    2       IF QGB_PARAM.MSG$ ~= ADDR(NIL)

   8644   2 000339  8DC5 0007                            CMN      7,B5
          2 00033B  0901 0006                            BE       s:8648,PREL

      928     8645    2       THEN
      929     8646    2         QGB_PARAM.MSGSZ = QGB_PARAMS.BND.PAR2+1;

   8646   2 00033D  D846 0003                            LDR,R5   3,B6
          2 00033F  5E01                                 ADV,R5   1
          2 000340  DF45 0009                            STR,R5   9,B5

      930     8647
      931     8648    2       IF FPT$MDFFLD_V.SETGRPRND

   8648   2 000342  89C4 0002                            CMZ      2,B4
          2 000344  0881 0039                            BAGE     s:8668,PREL
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:101  

      932     8649    3       THEN DO;

      933     8650    3           CALL INIT_VDO ( %KV_VDO_FNC_SLCGRPRND )

   8650   2 000346  9BF0 001A                            LAB,B1   26,IMO
          2 000348  9FC7 008E                            STB,B1   @FUNCTION+2,AUTO
          2 00034A  E3C0 043E                            LNJ,B6   s:0,PREL
          2 00034C       0003                            DC       s:8652,PREL
          2 00034D  0F81 0005                            B        s:8654,PREL

      934     8651    4           WHENALTRETURN DO;

      935     8652    4               ALTRETURN;

   8652   2 00034F  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000351  B806                                 LDR,R3   ,B6
          2 000352  C3B6                                 LNJ,B4   ,B6,R3

      936     8653    4             END;
      937     8654    3           IF VLP$FLDATR.ABSGRPRND ~= 0

   8654   2 000353  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000355  DCC6 000C                            LDB,B5   12,B6
          2 000357  E2C5 0002                            LLH,R6   2,B5
          2 000359  6901 0010                            BEZ,R6   s:8661,PREL

      938     8655    4           THEN DO;

      939     8656    4               QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCGRPRND.GRPRND =

   8656   2 00035B  CCC6 0003                            LDB,B4   3,B6
          2 00035D  D2C5 0002                            LLH,R5   2,B5
          2 00035F  5008                                 SOL,R5   8
          2 000360  5048                                 SOR,R5   8
          2 000361  D7C4 0001                            STH,R5   1,B4

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:102  
      940     8657    4                 BINBIT(VLP$FLDATR.ABSGRPRND,SIZEB(KV$VDO_SLCGRPRND.GRPRND));
      941     8658    4               QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCGRPRND.GRPRND.ABS = '1'B;

   8658   2 000363  DCC6 0003                            LDB,B5   3,B6
          2 000365  8945 0001                            LBT,'8000'X       1,B5
          2 000367       8000

      942     8659    4             END;

   8659   2 000368  0F81 0008                            B        s:8662,PREL

      943     8660    3           ELSE
      944     8661    3             QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCGRPRND.GRPRND = VLP$FLDATR.GRPRND;

   8661   2 00036A  CCC6 0003                            LDB,B4   3,B6
          2 00036C  D285                                 LLH,R5   ,B5
          2 00036D  5008                                 SOL,R5   8
          2 00036E  5048                                 SOR,R5   8
          2 00036F  D7C4 0001                            STH,R5   1,B4

      945     8662    3           CALL FINISH_VDO ( %KV_VDO_FNC_SLCGRPRND )

   8662   2 000371  DBF0 001A                            LAB,B5   26,IMO
          2 000373  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 000375  E3C0 04F2                            LNJ,B6   s:0,PREL
          2 000377       0003                            DC       s:8664,PREL
          2 000378  0F81 0005                            B        s:8668,PREL

      946     8663    4           WHENALTRETURN DO;

      947     8664    4               ALTRETURN;

   8664   2 00037A  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 00037C  B806                                 LDR,R3   ,B6
          2 00037D  C3B6                                 LNJ,B4   ,B6,R3

      948     8665    4             END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:103  
      949     8666    3         END;

      950     8667
      951     8668    2       IF FPT$MDFFLD_V.SETQLF

   8668   2 00037E  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000380  DCC6 0012                            LDB,B5   18,B6
          2 000382  82C5 0002                            LB,'4000'X        2,B5
          2 000384       4000
          2 000385  0581 0027                            BBF      s:8681,PREL

      952     8669    3       THEN DO;

      953     8670    3           CALL INIT_VDO ( %KV_VDO_FNC_SLCQLF )

   8670   2 000387  CBF0 001B                            LAB,B4   27,IMO
          2 000389  CFC7 008E                            STB,B4   @FUNCTION+2,AUTO
          2 00038B  E3C0 03FD                            LNJ,B6   s:0,PREL
          2 00038D       0003                            DC       s:8672,PREL
          2 00038E  0F81 0005                            B        s:8674,PREL

      954     8671    4           WHENALTRETURN DO;

      955     8672    4               ALTRETURN;

   8672   2 000390  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000392  B806                                 LDR,R3   ,B6
          2 000393  C3B6                                 LNJ,B4   ,B6,R3

      956     8673    4             END;
      957     8674    3           QGB_PARAM.BBUF_OFFSET$->KV$VDO_SLCQLF.QLF = VLP$FLDATR.QLF;

   8674   2 000394  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000396  DCC6 0003                            LDB,B5   3,B6
          2 000398  CCC6 000C                            LDB,B4   12,B6
          2 00039A  E2C4 0001                            LLH,R6   1,B4
          2 00039C  6008                                 SOL,R6   8
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:104  
          2 00039D  6048                                 SOR,R6   8
          2 00039E  E7C5 0001                            STH,R6   1,B5

      958     8675    3           CALL FINISH_VDO ( %KV_VDO_FNC_SLCQLF )

   8675   2 0003A0  DBF0 001B                            LAB,B5   27,IMO
          2 0003A2  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 0003A4  E3C0 04C3                            LNJ,B6   s:0,PREL
          2 0003A6       0003                            DC       s:8677,PREL
          2 0003A7  0F81 0005                            B        s:8681,PREL

      959     8676    4           WHENALTRETURN DO;

      960     8677    4               ALTRETURN;

   8677   2 0003A9  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0003AB  B806                                 LDR,R3   ,B6
          2 0003AC  C3B6                                 LNJ,B4   ,B6,R3

      961     8678    4             END;
      962     8679    3         END;

      963     8680
      964     8681    2       RETURN;

   8681   2 0003AD  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0003AF  C3C6 0001                            LNJ,B4   1,B6

      965     8682
      966     8683    2   END DO_MDFFLD;
      967     8684
      968     8685    1   DO_SLCFLD: PROC ALTRET;

   8685   2 0003B1  EFC7 008A            DO_SLCFLD       STB,B6   FPT_READMLT+19,AUTO

      969     8686    2       IF FPT$SLCFLD_V.KEYTYPE ~= 0

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:105  
   8686   2 0003B3  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 0003B5  CCC5 0012                            LDB,B4   18,B5
          2 0003B7  E2C4 0001                            LLH,R6   1,B4
          2 0003B9  6901 0003                            BEZ,R6   s:8689,PREL

      970     8687    2       THEN
      971     8688    2         QGB_PARAM.KEYTYPE = FPT$SLCFLD_V.KEYTYPE;

   8688   2 0003BB  E7C5 001A                            STH,R6   26,B5

      972     8689    2       QGB_PARAM.DVE.DVBYTE = FPT$SLCFLD_V.DVBYTE;

   8689   2 0003BD  E804                                 LDR,R6   ,B4
          2 0003BE  6008                                 SOL,R6   8
          2 0003BF  6048                                 SOR,R6   8
          2 0003C0  E7C5 000A                            STH,R6   10,B5

      973     8690
      974     8691    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;

   8691   2 0003C2  6C01                                 LDV,R6   1
          2 0003C3  E7C5 0011                            STH,R6   17,B5

      975     8692    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;

   8692   2 0003C5  ECC7 0004                            LDB,B6   @QGB_ARG,AUTO
          2 0003C7  BCC6 0004                            LDB,B3   4,B6
          2 0003C9  BFC5 0014                            STB,B3   20,B5

      976     8693    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;

   8693   2 0003CB  D846 0003                            LDR,R5   3,B6
          2 0003CD  5E01                                 ADV,R5   1
          2 0003CE  DAC5 001A                            SRM,R5,'00FF'X    26,B5
          2 0003D0       00FF

      977     8694    2       QGB_PARAM.MSG$ = ADDR(NIL);
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:106  

   8694   2 0003D1  AB80 0000 0000                       LAB,B2   0
          2 0003D4  AFC5 0007                            STB,B2   7,B5

      978     8695    2       QGB_PARAM.MSGSZ = 0;

   8695   2 0003D6  8745 0009                            CL       9,B5

      979     8696    2       CALL INIT_VDO ( %KV_VDO_FNC_SLCFLD )

   8696   2 0003D8  9BF0 0019                            LAB,B1   25,IMO
          2 0003DA  9FC7 008E                            STB,B1   @FUNCTION+2,AUTO
          2 0003DC  E3C0 03AC                            LNJ,B6   s:0,PREL
          2 0003DE       0003                            DC       s:8698,PREL
          2 0003DF  0F81 0005                            B        s:8700,PREL

      980     8697    3       WHENALTRETURN DO;

      981     8698    3           ALTRETURN;

   8698   2 0003E1  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0003E3  B806                                 LDR,R3   ,B6
          2 0003E4  C3B6                                 LNJ,B4   ,B6,R3

      982     8699    3         END;
      983     8700    2       CALL FINISH_VDO ( %KV_VDO_FNC_SLCFLD )

   8700   2 0003E5  EBF0 0019                            LAB,B6   25,IMO
          2 0003E7  EFC7 008E                            STB,B6   @FUNCTION+2,AUTO
          2 0003E9  E3C0 047E                            LNJ,B6   s:0,PREL
          2 0003EB       0003                            DC       s:8702,PREL
          2 0003EC  0F81 0005                            B        s:8704,PREL

      984     8701    3       WHENALTRETURN DO;

      985     8702    3           ALTRETURN;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:107  
   8702   2 0003EE  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0003F0  B806                                 LDR,R3   ,B6
          2 0003F1  C3B6                                 LNJ,B4   ,B6,R3

      986     8703    3         END;
      987     8704    2       RETURN;

   8704   2 0003F2  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0003F4  C3C6 0001                            LNJ,B4   1,B6

      988     8705
      989     8706    2   END DO_SLCFLD;
      990     8707
      991     8708    1   DO_ERASE: PROC ALTRET;

   8708   2 0003F6  EFC7 008A            DO_ERASE        STB,B6   FPT_READMLT+19,AUTO

      992     8709    2       IF FPT$ERASE_V.KEYTYPE ~= 0

   8709   2 0003F8  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 0003FA  CCC5 0012                            LDB,B4   18,B5
          2 0003FC  E2C4 0001                            LLH,R6   1,B4
          2 0003FE  6901 0003                            BEZ,R6   s:8712,PREL

      993     8710    2       THEN
      994     8711    2         QGB_PARAM.KEYTYPE = FPT$ERASE_V.KEYTYPE;

   8711   2 000400  E7C5 001A                            STH,R6   26,B5

      995     8712    2       QGB_PARAM.DVE.DVBYTE = FPT$ERASE_V.DVBYTE;

   8712   2 000402  E804                                 LDR,R6   ,B4
          2 000403  6008                                 SOL,R6   8
          2 000404  6048                                 SOR,R6   8
          2 000405  E7C5 000A                            STH,R6   10,B5

      996     8713    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:108  

   8713   2 000407  6C01                                 LDV,R6   1
          2 000408  E7C5 0011                            STH,R6   17,B5

      997     8714    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;

   8714   2 00040A  ECC7 0004                            LDB,B6   @QGB_ARG,AUTO
          2 00040C  BCC6 0004                            LDB,B3   4,B6
          2 00040E  BFC5 0014                            STB,B3   20,B5

      998     8715    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;

   8715   2 000410  D846 0003                            LDR,R5   3,B6
          2 000412  5E01                                 ADV,R5   1
          2 000413  DAC5 001A                            SRM,R5,'00FF'X    26,B5
          2 000415       00FF

      999     8716    2       QGB_PARAM.MSG$ = ADDR(NIL);

   8716   2 000416  AB80 0000 0000                       LAB,B2   0
          2 000419  AFC5 0007                            STB,B2   7,B5

     1000     8717    2       QGB_PARAM.MSGSZ = 0;

   8717   2 00041B  8745 0009                            CL       9,B5

     1001     8718    2       CALL INIT_VDO ( %KV_VDO_FNC_ERS )

   8718   2 00041D  9BF0 000C                            LAB,B1   12,IMO
          2 00041F  9FC7 008E                            STB,B1   @FUNCTION+2,AUTO
          2 000421  E3C0 0367                            LNJ,B6   s:0,PREL
          2 000423       0003                            DC       s:8720,PREL
          2 000424  0F81 0005                            B        s:8723,PREL

     1002     8719    3       WHENALTRETURN DO;

     1003     8720    3           ALTRETURN;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:109  

   8720   2 000426  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000428  B806                                 LDR,R3   ,B6
          2 000429  C3B6                                 LNJ,B4   ,B6,R3

     1004     8721    3         END;
     1005     8722
     1006     8723    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_ERS.PRT = FPT$ERASE_V.PRT;

   8723   2 00042A  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 00042C  DCC6 0003                            LDB,B5   3,B6
          2 00042E  CCC6 0012                            LDB,B4   18,B6
          2 000430  E844 0002                            LDR,R6   2,B4
          2 000432  EAC5 0001                            SRM,R6,'8000'X    1,B5
          2 000434       8000

     1007     8724    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO_ERS.CNS = FPT$ERASE_V.CNS;

   8724   2 000435  DCC6 0003                            LDB,B5   3,B6
          2 000437  CCC6 0012                            LDB,B4   18,B6
          2 000439  E844 0002                            LDR,R6   2,B4
          2 00043B  EAC5 0001                            SRM,R6,'4000'X    1,B5
          2 00043D       4000

     1008     8725    2       CALL FINISH_VDO ( %KV_VDO_FNC_ERS )

   8725   2 00043E  DBF0 000C                            LAB,B5   12,IMO
          2 000440  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 000442  E3C0 0425                            LNJ,B6   s:0,PREL
          2 000444       0003                            DC       s:8727,PREL
          2 000445  0F81 0005                            B        s:8729,PREL

     1009     8726    3       WHENALTRETURN DO;

     1010     8727    3           ALTRETURN;

   8727   2 000447  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:110  
          2 000449  B806                                 LDR,R3   ,B6
          2 00044A  C3B6                                 LNJ,B4   ,B6,R3

     1011     8728    3         END;
     1012     8729    2       RETURN;

   8729   2 00044B  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 00044D  C3C6 0001                            LNJ,B4   1,B6

     1013     8730    2   END DO_ERASE;
     1014     8731
     1015     8732    1   DO_RLSFLD: PROC ALTRET;

   8732   2 00044F  EFC7 008A            DO_RLSFLD       STB,B6   FPT_READMLT+19,AUTO

     1016     8733    2       IF FPT$RLSFLD_V.KEYTYPE ~= 0

   8733   2 000451  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 000453  CCC5 0012                            LDB,B4   18,B5
          2 000455  E2C4 0001                            LLH,R6   1,B4
          2 000457  6901 0003                            BEZ,R6   s:8736,PREL

     1017     8734    2       THEN
     1018     8735    2         QGB_PARAM.KEYTYPE = FPT$RLSFLD_V.KEYTYPE;

   8735   2 000459  E7C5 001A                            STH,R6   26,B5

     1019     8736    2       QGB_PARAM.DVE.DVBYTE = FPT$RLSFLD_V.DVBYTE;

   8736   2 00045B  E804                                 LDR,R6   ,B4
          2 00045C  6008                                 SOL,R6   8
          2 00045D  6048                                 SOR,R6   8
          2 00045E  E7C5 000A                            STH,R6   10,B5

     1020     8737
     1021     8738    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:111  
   8738   2 000460  6C01                                 LDV,R6   1
          2 000461  E7C5 0011                            STH,R6   17,B5

     1022     8739    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;

   8739   2 000463  ECC7 0004                            LDB,B6   @QGB_ARG,AUTO
          2 000465  BCC6 0004                            LDB,B3   4,B6
          2 000467  BFC5 0014                            STB,B3   20,B5

     1023     8740    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;

   8740   2 000469  D846 0003                            LDR,R5   3,B6
          2 00046B  5E01                                 ADV,R5   1
          2 00046C  DAC5 001A                            SRM,R5,'00FF'X    26,B5
          2 00046E       00FF

     1024     8741    2       QGB_PARAM.MSG$ = ADDR(NIL);

   8741   2 00046F  AB80 0000 0000                       LAB,B2   0
          2 000472  AFC5 0007                            STB,B2   7,B5

     1025     8742    2       QGB_PARAM.MSGSZ = 0;

   8742   2 000474  8745 0009                            CL       9,B5

     1026     8743    2       CALL INIT_VDO ( %KV_VDO_FNC_RLSFLD )

   8743   2 000476  9BF0 0014                            LAB,B1   20,IMO
          2 000478  9FC7 008E                            STB,B1   @FUNCTION+2,AUTO
          2 00047A  E3C0 030E                            LNJ,B6   s:0,PREL
          2 00047C       0003                            DC       s:8745,PREL
          2 00047D  0F81 0005                            B        s:8747,PREL

     1027     8744    3       WHENALTRETURN DO;

     1028     8745    3           ALTRETURN;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:112  
   8745   2 00047F  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000481  B806                                 LDR,R3   ,B6
          2 000482  C3B6                                 LNJ,B4   ,B6,R3

     1029     8746    3         END;
     1030     8747    2       CALL FINISH_VDO ( %KV_VDO_FNC_RLSFLD )

   8747   2 000483  EBF0 0014                            LAB,B6   20,IMO
          2 000485  EFC7 008E                            STB,B6   @FUNCTION+2,AUTO
          2 000487  E3C0 03E0                            LNJ,B6   s:0,PREL
          2 000489       0003                            DC       s:8749,PREL
          2 00048A  0F81 0005                            B        s:8751,PREL

     1031     8748    3       WHENALTRETURN DO;

     1032     8749    3           ALTRETURN;

   8749   2 00048C  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 00048E  B806                                 LDR,R3   ,B6
          2 00048F  C3B6                                 LNJ,B4   ,B6,R3

     1033     8750    3         END;
     1034     8751    2       RETURN;

   8751   2 000490  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000492  C3C6 0001                            LNJ,B4   1,B6

     1035     8752    2   END DO_RLSFLD;
     1036     8753
     1037     8754    1   DO_WRITE: PROC ALTRET;

   8754   2 000494  EFC7 008A            DO_WRITE        STB,B6   FPT_READMLT+19,AUTO

     1038     8755    2       IF FPT$WRITE.V.KEYTYPE ~= 0

   8755   2 000496  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 000498  CCC5 0012                            LDB,B4   18,B5
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:113  
          2 00049A  8284                                 LB,'007F'X        ,B4
          2 00049B       007F
          2 00049C  0581 0006                            BBF      s:8758,PREL

     1039     8756    2       THEN
     1040     8757    2         QGB_PARAM.KEYTYPE = FPT$WRITE.V.KEYTYPE;

   8757   2 00049E  E804                                 LDR,R6   ,B4
          2 00049F  E570 007F                            AND,R6   127,IMO
          2 0004A1  E7C5 001A                            STH,R6   26,B5

     1041     8758    2       QGB_PARAM.DVE.DVBYTE = FPT$WRITE.V.DVBYTE;

   8758   2 0004A3  E2C4 0002                            LLH,R6   2,B4
          2 0004A5  6008                                 SOL,R6   8
          2 0004A6  6048                                 SOR,R6   8
          2 0004A7  E7C5 000A                            STH,R6   10,B5

     1042     8759    2       QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_ENDACK;

   8759   2 0004A9  6C01                                 LDV,R6   1
          2 0004AA  E7C5 0011                            STH,R6   17,B5

     1043     8760    2       QGB_PARAM.KEY$ = QGB_PARAMS.PTRS.PAR2$;

   8760   2 0004AC  ECC7 0004                            LDB,B6   @QGB_ARG,AUTO
          2 0004AE  BCC6 0004                            LDB,B3   4,B6
          2 0004B0  BFC5 0014                            STB,B3   20,B5

     1044     8761    2       QGB_PARAM.KEYSZ = QGB_PARAMS.BND.PAR2+1;

   8761   2 0004B2  D846 0003                            LDR,R5   3,B6
          2 0004B4  5E01                                 ADV,R5   1
          2 0004B5  DAC5 001A                            SRM,R5,'00FF'X    26,B5
          2 0004B7       00FF

     1045     8762    2       QGB_PARAM.MSGC$ = QGB_PARAMS.CPTRS.PAR3$;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:114  

   8762   2 0004B8  8CC6 0007                            LDI      7,B6
          2 0004BA  8D45 0007                            SDI      7,B5

     1046     8763    2       QGB_PARAM.MSGSZ = QGB_PARAMS.BND.PAR3+1;

   8763   2 0004BC  D846 0006                            LDR,R5   6,B6
          2 0004BE  5E01                                 ADV,R5   1
          2 0004BF  DF45 0009                            STR,R5   9,B5

     1047     8764    2       CALL INIT_VDO ( %KV_VDO_FNC_DAT )

   8764   2 0004C1  ABF0 0005                            LAB,B2   5,IMO
          2 0004C3  AFC7 008E                            STB,B2   @FUNCTION+2,AUTO
          2 0004C5  E3C0 02C3                            LNJ,B6   s:0,PREL
          2 0004C7       0003                            DC       s:8766,PREL
          2 0004C8  0F81 0005                            B        s:8768,PREL

     1048     8765    3       WHENALTRETURN DO;

     1049     8766    3           ALTRETURN;

   8766   2 0004CA  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0004CC  B806                                 LDR,R3   ,B6
          2 0004CD  C3B6                                 LNJ,B4   ,B6,R3

     1050     8767    3         END;
     1051     8768    2       IF QGB_PARAM.DVE.DVBYTE.VFC

   8768   2 0004CE  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 0004D0  82C6 000A                            LB,'4000'X        10,B6
          2 0004D2       4000
          2 0004D3  0581 001A                            BBF      s:8774,PREL

     1052     8769    3       THEN DO;

     1053     8770    3           QGB_PARAM.DVE.VFC = QGB_PARAM.MSGC$->B$CHAR;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:115  

   8770   2 0004D5  8CC6 0007                            LDI      7,B6
          2 0004D7  B856                                 LDR,R3   R6
          2 0004D8  E570 7FFF                            AND,R6   32767,IMO
          2 0004DA  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0004DC  DCC7 0094                            LDB,B5   @FUNCTION+2,AUTO
          2 0004DE  304F                                 SOR,R3   15
          2 0004DF  D0B5                                 LDH,R5   ,B5,R3
          2 0004E0  DAC6 000A                            SRM,R5,'00FF'X    10,B6
          2 0004E2       00FF

     1054     8771    3           QGB_PARAM.MSGC$ = PINCRC ( QGB_PARAM.MSGC$, 1 );

   8771   2 0004E3  8CC6 0007                            LDI      7,B6
          2 0004E5  7031                                 DCL,R7   1
          2 0004E6  8470 0000 0001                       AID      1,IMO
          2 0004E9  7071                                 DCR,R7   1
          2 0004EA  8D46 0007                            SDI      7,B6

     1055     8772    3         END;

   8772   2 0004EC  0F81 0012                            B        s:8780,PREL

     1056     8773    3       ELSE DO;

     1057     8774    3           IF MYDCB.DVFC ~= BINASC(0)

   8774   2 0004EE  DCC7 0060                            LDB,B5   DCB$,AUTO
          2 0004F0  E845 0024                            LDR,R6   36,B5
          2 0004F2  6008                                 SOL,R6   8
          2 0004F3  6068                                 SAR,R6   8
          2 0004F4  6D00                                 CMV,R6   0
          2 0004F5  0901 0009                            BE       s:8780,PREL

     1058     8775    4           THEN DO;

     1059     8776    4               QGB_PARAM.DVE.VFC = MYDCB.DVFC;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:116  

   8776   2 0004F7  D845 0024                            LDR,R5   36,B5
          2 0004F9  DAC6 000A                            SRM,R5,'00FF'X    10,B6
          2 0004FB       00FF

     1060     8777    4               QGB_PARAM.DVE.DVBYTE.VFC = '1'B;

   8777   2 0004FC  8946 000A                            LBT,'4000'X       10,B6
   8777   2 0004FE       4000

     1061     8778    4             END;

     1062     8779    3         END;

     1063     8780    2       IF QGB_PARAM.DVE.DVBYTE.VFC

   8780   2 0004FF  82C6 000A                            LB,'4000'X        10,B6
   8780   2 000501       4000
          2 000502  0581 000F                            BBF      s:8786,PREL

     1064     8781    3       THEN DO;

     1065     8782    3           QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC;

   8782   2 000504  DCC6 0003                            LDB,B5   3,B6
          2 000506  E870 0800                            LDR,R6   2048,IMO
          2 000508  EAC5 0001                            SRM,R6,'0C00'X    1,B5
          2 00050A       0C00

     1066     8783    3           QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHR = QGB_PARAM.DVE.VFC;

   8783   2 00050B  DCC6 0003                            LDB,B5   3,B6
          2 00050D  D846 000A                            LDR,R5   10,B6
          2 00050F  DAC5 0001                            SRM,R5,'00FF'X    1,B5
          2 000511       00FF

     1067     8784    3         END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:117  

     1068     8785
     1069     8786    2       IF QGB_PARAM.DVE.DVBYTE.TRANS

   8786   2 000512  82C6 000A                            LB,'1000'X        10,B6
   8786   2 000514       1000
          2 000515  0581 0008                            BBF      s:8789,PREL

     1070     8787    2       THEN
     1071     8788    2         QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATMOD = %KV_DATMOD_TRN;

   8788   2 000517  DCC6 0003                            LDB,B5   3,B6
          2 000519  E870 0100                            LDR,R6   256,IMO
          2 00051B  EAC5 0001                            SRM,R6,'0300'X    1,B5
          2 00051D       0300

     1072     8789    2       CALL FINISH_VDO ( %KV_VDO_FNC_DAT )

   8789   2 00051E  DBF0 0005                            LAB,B5   5,IMO
          2 000520  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 000522  E3C0 0345                            LNJ,B6   s:0,PREL
          2 000524       0003                            DC       s:8791,PREL
          2 000525  0F81 0005                            B        s:8793,PREL

     1073     8790    3       WHENALTRETURN DO;

     1074     8791    3           ALTRETURN;

   8791   2 000527  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000529  B806                                 LDR,R3   ,B6
          2 00052A  C3B6                                 LNJ,B4   ,B6,R3

     1075     8792    3         END;
     1076     8793    2       RETURN;

   8793   2 00052B  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 00052D  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:118  

     1077     8794
     1078     8795    2   END DO_WRITE;
     1079     8796
     1080     8797    1   DO_READ: PROC ALTRET;

   8797   2 00052F  EFC7 008A            DO_READ         STB,B6   FPT_READMLT+19,AUTO

     1081     8798    2       TMP_SZ = QGB_VDOBYTSIZ(KV$VDO_DAT.FNC);

   8798   2 000531  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 000533  CCC5 000E                            LDB,B4   14,B5
          2 000535  B284                                 LLH,R3   ,B4
          2 000536  E2B0 0000 0008  00                   LLH,R6   QGB_VDOBYTSIZ,R3
          2 000539  EF47 0076                            STR,R6   TMP_SZ,AUTO

     1082     8799    2       IF KV$VDO.FNC = 0 OR KV$VDO.FNC > %KV_VDO_FNC_HI OR QGB_PARAM.UHDRSZ < TMP_SZ

   8799   2 00053B  3901 0106                            BEZ,R3   s:8954,PREL
          2 00053D  3D22                                 CMV,R3   34
          2 00053E  0301 0103                            BG       s:8954,PREL
          2 000540  E945 0010                            CMR,R6   16,B5
          2 000542  0301 00FF                            BG       s:8954,PREL

     1083     8800    2       THEN
     1084     8801    2         GOTO L1 ;
     1085     8802
     1086     8803        /*
     1087     8804                DO CASE (KV$VDO.FNC);
     1088     8805                 CASE (%KV_VDO_FNC_DAT);
     1089     8806        */
     1090     8807    2       IF KV$VDO.FNC = %KV_VDO_FNC_DAT

   8807   2 000544  3D05                                 CMV,R3   5
          2 000545  0981 002B                            BNE      s:8826,PREL

     1091     8808    3       THEN DO;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:119  

     1092     8809
     1093     8810    3           IF KV$VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_ACT

   8810   2 000547  D844 0001                            LDR,R5   1,B4
          2 000549  504A                                 SOR,R5   10
          2 00054A  D570 0003                            AND,R5   3,IMO
          2 00054C  5D01                                 CMV,R5   1
          2 00054D  0981 0008                            BNE      s:8813,PREL

     1094     8811    3           THEN QGB_PARAM.DVE.EOMCHAR = KV$VDO_DAT.DATCTRCHR;

   8811   2 00054F  C844 0001                            LDR,R4   1,B4
          2 000551  CAC5 000A                            SRM,R4,'00FF'X    10,B5
          2 000553       00FF
          2 000554  0F81 0011                            B        s:8821,PREL

     1095     8812    4           ELSE DO;

     1096     8813    4               TEMPU1 = KV$VDO_DAT.DATCTRCHRTYP ;

   8813   2 000556  DF47 0075                            STR,R5   TEMPU1,AUTO

     1097     8814    4               QGB_PARAM.EOM_EOR = '1'B;

   8814   2 000558  8945 000B                            LBT,'4000'X       11,B5
   8814   2 00055A       4000

     1098     8815    4               IF TEMPU1 = %KV_DATCTRCHRTYP_VFC

   8815   2 00055B  5D02                                 CMV,R5   2
          2 00055C  0981 0009                            BNE      s:8821,PREL

     1099     8816    5               THEN DO;

     1100     8817    5                   QGB_PARAM.DVE.DVBYTE.VFC = '1'B;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:120  
   8817   2 00055E  8945 000A                            LBT,'4000'X       10,B5
   8817   2 000560       4000

     1101     8818    5                   QGB_PARAM.DVE.VFC = KV$VDO_DAT.DATCTRCHR;

   8818   2 000561  C844 0001                            LDR,R4   1,B4
          2 000563  CAC5 000A                            SRM,R4,'00FF'X    10,B5
          2 000565       00FF

     1102     8819    5                 END;

     1103     8820    4             END;

     1104     8821    3           IF KV$VDO_DAT.DATMOD = %KV_DATMOD_TRN

   8821   2 000566  D844 0001                            LDR,R5   1,B4
          2 000568  5048                                 SOR,R5   8
          2 000569  D570 0003                            AND,R5   3,IMO
          2 00056B  5D01                                 CMV,R5   1
          2 00056C  0981 0004                            BNE      s:8826,PREL

     1105     8822    3           THEN QGB_PARAM.DVE.DVBYTE.TRANS = '1'B;

   8822   2 00056E  8945 000A                            LBT,'1000'X       10,B5
   8822   2 000570       1000

     1106     8823
     1107     8824    3         END;                            /* End cases                          */

     1108     8825
     1109     8826    2       QGB_PARAM.STR = KV$VDO.STR;

   8826   2 000571  D804                                 LDR,R5   ,B4
          2 000572  D570 007F                            AND,R5   127,IMO
          2 000574  DAC5 0011                            SRM,R5,'00FF'X    17,B5
          2 000576       00FF

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:121  
     1110     8827
     1111     8828    2       IF KV$VDO_DAT.VLP

   8828   2 000577  8284                                 LB,'0080'X        ,B4
   8828   2 000578       0080
          2 000579  0581 00B5                            BBF      s:8944,PREL

     1112     8829    3       THEN DO;

     1113     8830
     1114     8831    3   L2:
     1115     8832    3           IF (TMP_SZ < QGB_PARAM.UHDRSZ)

   8832   2 00057B  ECC7 0006            L2              LDB,B6   @QGB_PARAM,AUTO
          2 00057D  E847 0076                            LDR,R6   TMP_SZ,AUTO
          2 00057F  E946 0010                            CMR,R6   16,B6
          2 000581  0281 00AD                            BGE      s:8944,PREL

     1116     8833    4           THEN DO;

     1117     8834
     1118     8835
     1119     8836    4               MSG$ = PINCRW(QGB_PARAM.UHDR$,TMP_SZ/2) ;

   8836   2 000583  6041                                 SOR,R6   1
          2 000584  DCC6 000E                            LDB,B5   14,B6
          2 000586  DFC7 0094                            STB,B5   @FUNCTION+2,AUTO
          2 000588  F856                                 LDR,R7   R6
          2 000589  6C00                                 LDV,R6   0
          2 00058A  8447 0094                            AID      @FUNCTION+2,AUTO
          2 00058C  8D47 0073                            SDI      MSG$,AUTO

     1120     8837
     1121     8838    5               DO CASE (MSG$->KV$VDOVLP.TYP);

   8838   2 00058E  CCC7 0073                            LDB,B4   MSG$,AUTO
          2 000590  B804                                 LDR,R3   ,B4
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:122  
          2 000591  3048                                 SOR,R3   8
          2 000592  B570 007F                            AND,R3   127,IMO
          2 000594  3EFC                                 ADV,R3   -4
          2 000595  3D08                                 CMV,R3   8
          2 000596  0281 0084                            BGE      s:8930,PREL
          2 000598  A830 0000 059E  02                   LDR,R2   s:8838+16,R3
          2 00059B  83A0 0000 05A6  02                   JMP      s:8841,R2
          2 00059E       000D                            DC       s:8870,PREL
          2 00059F       0075                            DC       s:8930,PREL
          2 0005A0       0034                            DC       s:8884,PREL
          2 0005A1       0042                            DC       s:8892,PREL
          2 0005A2       005D                            DC       s:8906,PREL
          2 0005A3       0075                            DC       s:8930,PREL
          2 0005A4       0075                            DC       s:8930,PREL
          2 0005A5       0000                            DC       s:8841,PREL

     1122     8839
     1123     8840    5                 CASE (%KV_VDOVLP_TYP_ACTPOS);

     1124     8841    5                   QGB_PARAM.ACTPOS = KV$VDOVLP_ACTPOS.ACTPOS;

   8841   2 0005A6  D844 0001                            LDR,R5   1,B4
          2 0005A8  DF46 0018                            STR,R5   24,B6

     1125     8842    5                   TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_ACTPOS);

   8842   2 0005AA  C847 0076                            LDR,R4   TMP_SZ,AUTO
          2 0005AC  4E04                                 ADV,R4   4
          2 0005AD  CF47 0076                            STR,R4   TMP_SZ,AUTO

     1126     8843    5                   IF MSG$->KV$VDOVLP.LST = '0'B

   8843   2 0005AF  8984                                 CMZ      ,B4
          2 0005B0  08CB                                 BAGE     s:8829,SPREL

     1127     8844    5                   THEN GOTO L2;
     1128     8845    5                   GOTO L4;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:123  

   8845   2 0005B1  0F81 007D                            B        s:8944,PREL

     1129     8846        /*
     1130     8847                      CASE (%KV_VDOVLP_TYP_CG_MSGID);
     1131     8848                        QGB_PARAM.MSGIDXT = KV$VDOVLP_CG_MSGID.CG_MSGIDXT;
     1132     8849                        QGB_PARAM.MSGID=KV$VDOVLP_CG_MSGID.CG_MSGID;
     1133     8850                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_CG_MSGID) ;
     1134     8851                        IF MSG$->KV$VDOVLP.LST = '0'B
     1135     8852                        THEN GOTO L2;
     1136     8853                        GOTO L4;
     1137     8854
     1138     8855                      CASE (%KV_VDOVLP_TYP_CG_MSGTYP);
     1139     8856                        QGB_PARAM.MSGTYP = KV$VDOVLP_CG_MSGTYP.CG_MSGTYP;
     1140     8857                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_CG_MSGTYP) ;
     1141     8858                        IF MSG$->KV$VDOVLP.LST = '0'B
     1142     8859                        THEN GOTO L2;
     1143     8860                        GOTO L4;
     1144     8861
     1145     8862                      CASE (%KV_VDOVLP_TYP_CG_STA);
     1146     8863                        QGB_PARAM.STATION = KV$VDOVLP_CG_STA.CG_STA;
     1147     8864                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_CG_STA) ;
     1148     8865                        IF MSG$->KV$VDOVLP.LST = '0'B
     1149     8866                        THEN GOTO L2;
     1150     8867                        GOTO L4;
     1151     8868        */
     1152     8869    5                 CASE (%KV_VDOVLP_TYP_DAT1);

     1153     8870    5                   QGB_PARAM.MSG$ = ADDR(KV$VDOVLP_DAT1.MSG);

   8870   2 0005B3  BBC4 0001                            LAB,B3   1,B4
          2 0005B5  BFC6 0007                            STB,B3   7,B6

     1154     8871    5                   QGB_PARAM.MSGSZ = KV$VDOVLP_DAT1.BYTSIZ;

   8871   2 0005B7  D804                                 LDR,R5   ,B4
          2 0005B8  D570 00FF                            AND,R5   255,IMO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:124  
          2 0005BA  DF46 0009                            STR,R5   9,B6

     1155     8872    5                   TEMPU1 = 2 + QGB_PARAM.MSGSZ ;

   8872   2 0005BC  5E02                                 ADV,R5   2
          2 0005BD  DF47 0075                            STR,R5   TEMPU1,AUTO

     1156     8873
     1157     8874    5                   MSGSZ = QGB_PARAM.MSGSZ;

   8874   2 0005BF  C846 0009                            LDR,R4   9,B6
          2 0005C1  CF47 006D                            STR,R4   MSGSZ,AUTO

     1158     8875    5                   VBASE ( FPT_READ_ARG.BUF_ ) -> B$MSG = QGB_PARAM.MSG$ -> B$MSG;

   8875   2 0005C3  DCC7 0004                            LDB,B5   @QGB_ARG,AUTO
          2 0005C5  8CC5 0007                            LDI      7,B5
          2 0005C7  B856                                 LDR,R3   R6
          2 0005C8  E570 7FFF                            AND,R6   32767,IMO
          2 0005CA  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0005CC  BCC7 0094                            LDB,B3   @FUNCTION+2,AUTO
          2 0005CE  304F                                 SOR,R3   15
          2 0005CF  ACC6 0007                            LDB,B2   7,B6
          2 0005D1  2C00                                 LDV,R2   0
          2 0005D2  E854                                 LDR,R6   R4
          2 0005D3  0008                                 MMM

     1159     8876    5                   QGB_PARAM.ARS = QGB_PARAM.MSGSZ;

   8876   2 0005D4  E846 0009                            LDR,R6   9,B6
          2 0005D6  EF46 0019                            STR,R6   25,B6
          2 0005D8  0F81 0044                            B        s:8934,PREL

     1160     8877        /*
     1161     8878                      CASE (%KV_VDOVLP_TYP_DAT2);
     1162     8879                        QGB_PARAM.MSGSZ = KV$VDOVLP_DAT2.BYTSIZ;
     1163     8880                        QGB_PARAM.MSG$ = ADDR(KV$VDOVLP_DAT2.MSG);
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:125  
     1164     8881                        TEMPU1 = SIZEC(KV$VDOVLP_DAT2) ;
     1165     8882        */
     1166     8883    5                 CASE (%KV_VDOVLP_TYP_ERR);

     1167     8884    5                   QGB_PARAM.ERR=KV$VDOVLP_ERR.ERRCODE;

   8884   2 0005DA  8CC4 0001                            LDI      1,B4
          2 0005DC  8D46 0005                            SDI      5,B6

     1168     8885    5                   TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_ERR) ;

   8885   2 0005DE  D847 0076                            LDR,R5   TMP_SZ,AUTO
          2 0005E0  5E06                                 ADV,R5   6
          2 0005E1  DF47 0076                            STR,R5   TMP_SZ,AUTO

     1169     8886    5                   IF MSG$->KV$VDOVLP.LST = '0'B

   8886   2 0005E3  8984                                 CMZ      ,B4
          2 0005E4  0881 FF96                            BAGE     s:8829,PREL

     1170     8887    5                   THEN GOTO L2;
     1171     8888    5                   GOTO L4;

   8888   2 0005E6  0F81 0048                            B        s:8944,PREL

     1172     8889
     1173     8890
     1174     8891    5                 CASE (%KV_VDOVLP_TYP_FLDID);

     1175     8892    5                   QGB_PARAM.FLDID = KV$VDOVLP_FLDID.FLDID;

   8892   2 0005E8  D844 0001                            LDR,R5   1,B4
          2 0005EA  DF46 0017                            STR,R5   23,B6

     1176     8893    5                   IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_FLDID#

   8893   2 0005EC  C2C6 001A                            LLH,R4   26,B6
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:126  
          2 0005EE  4D01                                 CMV,R4   1
          2 0005EF  0981 0009                            BNE      s:8899,PREL

     1177     8894    5                   THEN
     1178     8895    6                     DO ;

     1179     8896    6                       QGB_PARAM.KEYSZ = KV$VDOVLP_FLDID.BYTSIZ;

   8896   2 0005F1  B804                                 LDR,R3   ,B4
          2 0005F2  BAC6 001A                            SRM,R3,'00FF'X    26,B6
          2 0005F4       00FF

     1180     8897    6                       QGB_PARAM.KEY$ = ADDR(KV$VDOVLP_FLDID.FLDID);

   8897   2 0005F5  DBC4 0001                            LAB,B5   1,B4
          2 0005F7  DFC6 0014                            STB,B5   20,B6

     1181     8898    6                     END;

     1182     8899    5                   TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_FLDID) ;

   8899   2 0005F9  B847 0076                            LDR,R3   TMP_SZ,AUTO
          2 0005FB  3E04                                 ADV,R3   4
          2 0005FC  BF47 0076                            STR,R3   TMP_SZ,AUTO

     1183     8900    5                   IF MSG$->KV$VDOVLP.LST = '0'B

   8900   2 0005FE  8984                                 CMZ      ,B4
          2 0005FF  0881 FF7B                            BAGE     s:8829,PREL

     1184     8901    5                   THEN GOTO L2;
     1185     8902    5                   GOTO L4;

   8902   2 000601  0F81 002D                            B        s:8944,PREL

     1186     8903
     1187     8904
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:127  
     1188     8905    5                 CASE (%KV_VDOVLP_TYP_KEY);

     1189     8906    5                   IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_COORD#

   8906   2 000603  D2C6 001A                            LLH,R5   26,B6
          2 000605  5D02                                 CMV,R5   2
          2 000606  0981 0009                            BNE      s:8912,PREL

     1190     8907    5                   THEN
     1191     8908    6                     DO ;

     1192     8909    6                       QGB_PARAM.KEYSZ = KV$VDOVLP_KEY.BYTSIZ;

   8909   2 000608  C804                                 LDR,R4   ,B4
          2 000609  CAC6 001A                            SRM,R4,'00FF'X    26,B6
          2 00060B       00FF

     1193     8910    6                       QGB_PARAM.KEY$ = ADDR(KV$VDOVLP_KEY.KEY);

   8910   2 00060C  DBC4 0001                            LAB,B5   1,B4
          2 00060E  DFC6 0014                            STB,B5   20,B6

     1194     8911    6                     END;

     1195     8912    5                   TEMPU1 = SIZEC(KV$VDOVLP_KEY) ;

   8912   2 000610  C804                                 LDR,R4   ,B4
          2 000611  C570 00FF                            AND,R4   255,IMO
          2 000613  4003                                 SOL,R4   3
          2 000614  4E1F                                 ADV,R4   31
          2 000615  4044                                 SOR,R4   4
          2 000616  4001                                 SOL,R4   1
          2 000617  CF47 0075                            STR,R4   TEMPU1,AUTO
          2 000619  0F81 0003                            B        s:8934,PREL

     1196     8913        /*
     1197     8914                      CASE (%KV_VDOVLP_TYP_MRK);
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:128  
     1198     8915                        QGB_PARAM.MRKTYP = KV$VDOVLP_MRK.MRKTYP;
     1199     8916                        IF QGB_PARAM.MRKTYP = %KV_VDOMRKTYP_LSTRCRID
     1200     8917                        THEN
     1201     8918                        DO ;
     1202     8919                             QGB_PARAM.BLKREC.BLKU#=ADDR(KV$VDOVLP_MRK.ID)->B$HWORD;
     1203     8920                          QGB_PARAM.BLKREC.RECU#=PINCRC(ADDR(KV$VDOVLP_MRK.ID),2)->B$HWORD;
     1204     8921                             END;
     1205     8922                        ELSE
     1206     8923                             QGB_PARAM.MARKER = KV$VDOVLP_MRK.ID;
     1207     8924                        TMP_SZ = TMP_SZ + SIZEC(KV$VDOVLP_MRK) ;
     1208     8925                        IF MSG$->KV$VDOVLP.LST = '0'B
     1209     8926                        THEN GOTO L2;
     1210     8927                        GOTO L4;
     1211     8928        */
     1212     8929    5                 CASE (ELSE);

     1213     8930    5                   GOTO L1 ;

   8930   2 00061B  0F81 0026                            B        s:8954,PREL

     1214     8931
     1215     8932    5               END;                    /* End cases                          */

     1216     8933
     1217     8934    4               IF TEMPU1S.LOBIT

   8934   2 00061D  82C7 0075                            LB,'0001'X        TEMPU1,AUTO
   8934   2 00061F       0001
          2 000620  0581 0003                            BBF      s:8937,PREL

     1218     8935    4               THEN TEMPU1 = TEMPU1 + 1;

   8935   2 000622  8AC7 0075                            INC      TEMPU1,AUTO

     1219     8936
     1220     8937    4               TMP_SZ = TMP_SZ + TEMPU1 ;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:129  
   8937   2 000624  E847 0076                            LDR,R6   TMP_SZ,AUTO
          2 000626  EA47 0075                            ADD,R6   TEMPU1,AUTO
          2 000628  EF47 0076                            STR,R6   TMP_SZ,AUTO

     1221     8938
     1222     8939    4               IF MSG$->KV$VDOVLP.LST = '0'B

   8939   2 00062A  DCC7 0073                            LDB,B5   MSG$,AUTO
          2 00062C  8985                                 CMZ      ,B5
          2 00062D  0881 FF4D                            BAGE     s:8829,PREL

     1223     8940    4               THEN GOTO L2;
     1224     8941
     1225     8942    4             END;

     1226     8943
     1227     8944    3         END ;

     1228     8945
     1229     8946
     1230     8947    2   L4:
     1231     8948        /* IF TMP_SZ = QGB_PARAM.UHDRSZ
     1232     8949           THEN RETURN; */
     1233     8950    2       QGB_PARAM.UHDR$ = PINCRW ( QGB_PARAM.UHDR$, TMP_SZ / 2 );

   8950   2 00062F  E847 0076            L4              LDR,R6   TMP_SZ,AUTO
          2 000631  6041                                 SOR,R6   1
          2 000632  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000634  DCC6 000E                            LDB,B5   14,B6
          2 000636  DFC7 0094                            STB,B5   @FUNCTION+2,AUTO
          2 000638  F856                                 LDR,R7   R6
          2 000639  6C00                                 LDV,R6   0
          2 00063A  8447 0094                            AID      @FUNCTION+2,AUTO
          2 00063C  8D46 000E                            SDI      14,B6

     1234     8951    2       RETURN;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:130  
   8951   2 00063E  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000640  C3C6 0001                            LNJ,B4   1,B6

     1235     8952
     1236     8953    2   L1:
     1237     8954    2       CALL PROTOCOL_ERR;

   8954   2 000642  E3C0 0006            L1              LNJ,B6   s:0,PREL
          2 000644       0001                            DC       s:8955,PREL

     1238     8955    2       ALTRETURN;

   8955   2 000645  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000647  B806                                 LDR,R3   ,B6
          2 000648  C3B6                                 LNJ,B4   ,B6,R3

     1239     8956
     1240     8957
     1241     8958    2   PROTOCOL_ERR: PROC;

   8958   2 000649  EFC7 008C            PROTOCOL_ERR    STB,B6   @FUNCTION,AUTO

     1242     8959
     1243     8960                  /*N* Error log */
     1244     8961    3       RETURN;

   8961   2 00064B  ECC7 008C                            LDB,B6   @FUNCTION,AUTO
          2 00064D  C3C6 0001                            LNJ,B4   1,B6

     1245     8962
     1246     8963
     1247     8964    3   END PROTOCOL_ERR;
     1248     8965
     1249     8966
     1250     8967    2   END DO_READ;
     1251     8968
     1252     8969    1   DO_DEVICE: PROC ALTRET;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:131  

   8969   2 00064F  EFC7 008A            DO_DEVICE       STB,B6   FPT_READMLT+19,AUTO

     1253     8970
     1254     8971    2       QGB_PARAM.DVE.DVBYTE = %G_DVBYTE_VFC#|%G_DVBYTE_TRANS#|%G_DVBYTE_BP#;

   8971   2 000651  E870 D000                            LDR,R6   -12288,IMO
          2 000653  6048                                 SOR,R6   8
          2 000654  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 000656  E7C5 000A                            STH,R6   10,B5

     1255     8972
     1256     8973        /* Do header */
     1257     8974
     1258     8975    2       IF QGB_PARAMS.PTRS.PAR3$ ~= ADDR(NIL)

   8975   2 000658  ECC7 0004                            LDB,B6   @QGB_ARG,AUTO
          2 00065A  8DC6 0007                            CMN      7,B6
          2 00065C  0901 007C                            BE       s:8996,PREL

     1259     8976    3       THEN DO;

     1260     8977    3           I = QGB_PARAMS.BND.PAR3;

   8977   2 00065E  E846 0006                            LDR,R6   6,B6
          2 000660  EF47 006E                            STR,R6   I,AUTO

     1261     8978    3           IF I>165 THEN I=165;

   8978   2 000662  E970 00A5                            CMR,R6   165,IMO
          2 000664  0A81 0005                            BALE     s:8979,PREL

   8978   2 000666  E870 00A5                            LDR,R6   165,IMO
          2 000668  EF47 006E                            STR,R6   I,AUTO

     1262     8979    3           I = SIZEC(AUTOHDR);

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:132  
   8979   2 00066A  E870 00AE                            LDR,R6   174,IMO
          2 00066C  EF47 006E                            STR,R6   I,AUTO

     1263     8980    3           CALL CONCAT(ADDR(AUTOHDR)->CHARI,BINASC(%KV_PRMID_SSNHDR),

   8980   2 00066E  6008                                 SOL,R6   8
          2 00066F  6068                                 SAR,R6   8
          2 000670  CCC6 0007                            LDB,B4   7,B6
          2 000672  E7C7 0094                            STH,R6   @FUNCTION+2,AUTO
          2 000674  CFC7 0095                            STB,B4   @FUNCTION+3,AUTO
          2 000676  AB80 0000 0000  03                   LAB,B2   0
          2 000679  2C02                                 LDV,R2   2
          2 00067A  6C01                                 LDV,R6   1
          2 00067B  BB87                                 LAB,B3   ,AUTO
          2 00067C  3C10                                 LDV,R3   16
          2 00067D  F847 006E                            LDR,R7   I,AUTO
          2 00067F  D380 0000 0000  xent                 LNJ,B5   X6C_ALR
          2 000682  E847 006E                            LDR,R6   I,AUTO
          2 000684  6003                                 SOL,R6   3
          2 000685  6EF8                                 ADV,R6   -8
          2 000686  6A81 001F                            BLEZ,R6  s:8982,PREL
          2 000688  D0C7 0094                            LDH,R5   @FUNCTION+2,AUTO
          2 00068A  DF47 0097                            STR,R5   @FUNCTION+5,AUTO
          2 00068C  ABC7 0094                            LAB,B2   @FUNCTION+2,AUTO
          2 00068E  2C06                                 LDV,R2   6
          2 00068F  6C02                                 LDV,R6   2
          2 000690  BB87                                 LAB,B3   ,AUTO
          2 000691  3C11                                 LDV,R3   17
          2 000692  F847 006E                            LDR,R7   I,AUTO
          2 000694  7EFF                                 ADV,R7   -1
          2 000695  D380 0000 0000  xent                 LNJ,B5   X6C_ALR
          2 000698  E847 006E                            LDR,R6   I,AUTO
          2 00069A  6003                                 SOL,R6   3
          2 00069B  6EF0                                 ADV,R6   -16
          2 00069C  6A81 0009                            BLEZ,R6  s:8982,PREL
          2 00069E  ACC7 0095                            LDB,B2   @FUNCTION+3,AUTO
          2 0006A0  2C00                                 LDV,R2   0
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:133  
          2 0006A1  E847 006E                            LDR,R6   I,AUTO
          2 0006A3  BB87                                 LAB,B3   ,AUTO
          2 0006A4  3C12                                 LDV,R3   18
          2 0006A5  0008                                 MMM

     1264     8981    3             BINASC(I),QGB_PARAMS.PTRS.PAR3$->CHARI);
     1265     8982    3           QGB_PARAM.MSG$ = ADDR(AUTOHDR);

   8982   2 0006A6  EBC7 0008                            LAB,B6   AUTOHDR,AUTO
          2 0006A8  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 0006AA  EFC5 0007                            STB,B6   7,B5

     1266     8983    3           QGB_PARAM.MSGSZ = I+2;

   8983   2 0006AC  E847 006E                            LDR,R6   I,AUTO
          2 0006AE  6E02                                 ADV,R6   2
          2 0006AF  EF45 0009                            STR,R6   9,B5

     1267     8984    3           QGB_PARAM.DVE.VFC = %VFC_SPM;

   8984   2 0006B1  5C14                                 LDV,R5   20
          2 0006B2  DAC5 000A                            SRM,R5,'00FF'X    10,B5
          2 0006B4       00FF

     1268     8985    3           CALL INIT_VDO ( %KV_VDO_FNC_PRM_SET )

   8985   2 0006B5  CBF0 0013                            LAB,B4   19,IMO
          2 0006B7  CFC7 008E                            STB,B4   @FUNCTION+2,AUTO
          2 0006B9  E3C0 00CF                            LNJ,B6   s:0,PREL
          2 0006BB       0003                            DC       s:8987,PREL
          2 0006BC  0F81 0005                            B        s:8989,PREL

     1269     8986    4           WHENALTRETURN DO;

     1270     8987    4               ALTRETURN;

   8987   2 0006BE  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:134  
          2 0006C0  B806                                 LDR,R3   ,B6
          2 0006C1  C3B6                                 LNJ,B4   ,B6,R3

     1271     8988    4             END;
     1272     8989    3           MSGSZ = MSGSZ + QGB_PARAM.VSZ;

   8989   2 0006C2  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 0006C4  E847 006D                            LDR,R6   MSGSZ,AUTO
          2 0006C6  EA46 0016                            ADD,R6   22,B6
          2 0006C8  EF47 006D                            STR,R6   MSGSZ,AUTO

     1273     8990    3           CALL FINISH_VDO ( %KV_VDO_FNC_PRM_SET )

   8990   2 0006CA  DBF0 0013                            LAB,B5   19,IMO
          2 0006CC  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 0006CE  E3C0 0199                            LNJ,B6   s:0,PREL
          2 0006D0       0003                            DC       s:8992,PREL
          2 0006D1  0F81 0005                            B        s:8994,PREL

     1274     8991    4           WHENALTRETURN DO;

     1275     8992    4               ALTRETURN;

   8992   2 0006D3  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0006D5  B806                                 LDR,R3   ,B6
          2 0006D6  C3B6                                 LNJ,B4   ,B6,R3

     1276     8993    4             END;
     1277     8994    3         END;

   8994   2 0006D7  0F81 0034                            B        s:9014,PREL

     1278     8995    2       ELSE
     1279     8996    2         IF QGB_PARAMS.BND.PAR3 = 1

   8996   2 0006D9  E846 0006                            LDR,R6   6,B6
          2 0006DB  6D01                                 CMV,R6   1
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:135  
          2 0006DC  0981 002F                            BNE      s:9014,PREL

     1280     8997    3         THEN DO;

     1281     8998    3             QGB_PARAM.MSG$=ADDR(NULLHDR);

   8998   2 0006DE  CB80 0000 001D  00                   LAB,B4   NULLHDR
          2 0006E1  CFC5 0007                            STB,B4   7,B5

     1282     8999    3             QGB_PARAM.MSGSZ=SIZEC(NULLHDR);

   8999   2 0006E3  6C02                                 LDV,R6   2
          2 0006E4  EF45 0009                            STR,R6   9,B5

     1283     9000    3             QGB_PARAM.DVE.VFC = %VFC_SPM;

   9000   2 0006E6  5C14                                 LDV,R5   20
          2 0006E7  DAC5 000A                            SRM,R5,'00FF'X    10,B5
          2 0006E9       00FF

     1284     9001    3             CALL INIT_VDO ( %KV_VDO_FNC_PRM_SET )

   9001   2 0006EA  BBF0 0013                            LAB,B3   19,IMO
          2 0006EC  BFC7 008E                            STB,B3   @FUNCTION+2,AUTO
          2 0006EE  E3C0 009A                            LNJ,B6   s:0,PREL
          2 0006F0       0003                            DC       s:9003,PREL
          2 0006F1  0F81 0005                            B        s:9005,PREL

     1285     9002    4             WHENALTRETURN DO;

     1286     9003    4                 ALTRETURN;

   9003   2 0006F3  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 0006F5  B806                                 LDR,R3   ,B6
          2 0006F6  C3B6                                 LNJ,B4   ,B6,R3

     1287     9004    4               END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:136  
     1288     9005    3             MSGSZ = MSGSZ + QGB_PARAM.VSZ;

   9005   2 0006F7  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 0006F9  E847 006D                            LDR,R6   MSGSZ,AUTO
          2 0006FB  EA46 0016                            ADD,R6   22,B6
          2 0006FD  EF47 006D                            STR,R6   MSGSZ,AUTO

     1289     9006    3             CALL FINISH_VDO ( %KV_VDO_FNC_PRM_SET )

   9006   2 0006FF  DBF0 0013                            LAB,B5   19,IMO
          2 000701  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 000703  E3C0 0164                            LNJ,B6   s:0,PREL
          2 000705       0003                            DC       s:9008,PREL
          2 000706  0F81 0005                            B        s:9014,PREL

     1290     9007    4             WHENALTRETURN DO;

     1291     9008    4                 ALTRETURN;

   9008   2 000708  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 00070A  B806                                 LDR,R3   ,B6
          2 00070B  C3B6                                 LNJ,B4   ,B6,R3

     1292     9009    4               END;
     1293     9010    3           END;

     1294     9011        /**/
     1295     9012
     1296     9013        /* Send new page if needed */
     1297     9014    2       QGB_PARAM.MSG$ = ADDR(NIL);

   9014   2 00070C  EB80 0000 0000                       LAB,B6   0
          2 00070F  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 000711  EFC5 0007                            STB,B6   7,B5

     1298     9015    2       QGB_PARAM.MSGSZ = 0;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:137  
   9015   2 000713  8745 0009                            CL       9,B5

     1299     9016    2       QGB_PARAM.DVE.DVBYTE.TRANS = '0'B;

   9016   2 000715  8845 000A                            LBF,'1000'X       10,B5
   9016   2 000717       1000

     1300     9017    3       IF FPT$DEVICE.V.PAGE THEN DO;

   9017   2 000718  CCC5 0012                            LDB,B4   18,B5
          2 00071A  8284                                 LB,'0020'X        ,B4
          2 00071B       0020
          2 00071C  0581 0045                            BBF      s:9037,PREL

     1301     9018    3           QGB_PARAM.DVE.DVBYTE.VFC = '1'B;

   9018   2 00071E  8945 000A                            LBT,'4000'X       10,B5
   9018   2 000720       4000

     1302     9019    3           QGB_PARAM.DVE.VFC = %VFC_PGND;

   9019   2 000721  6C1A                                 LDV,R6   26
          2 000722  EAC5 000A                            SRM,R6,'00FF'X    10,B5
          2 000724       00FF

     1303     9020    3           CALL INIT_VDO ( %KV_VDO_FNC_DAT )

   9020   2 000725  BBF0 0005                            LAB,B3   5,IMO
          2 000727  BFC7 008E                            STB,B3   @FUNCTION+2,AUTO
          2 000729  E3C0 005F                            LNJ,B6   s:0,PREL
          2 00072B       0003                            DC       s:9022,PREL
          2 00072C  0F81 0005                            B        s:9024,PREL

     1304     9021    4           WHENALTRETURN DO;

     1305     9022    4               ALTRETURN;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:138  
   9022   2 00072E  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000730  B806                                 LDR,R3   ,B6
          2 000731  C3B6                                 LNJ,B4   ,B6,R3

     1306     9023    4             END;
     1307     9024    3           IF QGB_PARAM.DVE.DVBYTE.VFC

   9024   2 000732  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000734  82C6 000A                            LB,'4000'X        10,B6
          2 000736       4000
          2 000737  0581 000F                            BBF      s:9029,PREL

     1308     9025    4           THEN DO;

     1309     9026    4              QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC
              9026                        ;

   9026   2 000739  DCC6 0003                            LDB,B5   3,B6
          2 00073B  E870 0800                            LDR,R6   2048,IMO
          2 00073D  EAC5 0001                            SRM,R6,'0C00'X    1,B5
          2 00073F       0C00

     1310     9027    4               QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATCTRCHR = QGB_PARAM.DVE.VFC;

   9027   2 000740  DCC6 0003                            LDB,B5   3,B6
          2 000742  D846 000A                            LDR,R5   10,B6
          2 000744  DAC5 0001                            SRM,R5,'00FF'X    1,B5
          2 000746       00FF

     1311     9028    4             END;

     1312     9029    3           IF QGB_PARAM.DVE.DVBYTE.TRANS

   9029   2 000747  82C6 000A                            LB,'1000'X        10,B6
   9029   2 000749       1000
          2 00074A  0581 0008                            BBF      s:9032,PREL

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:139  
     1313     9030    3           THEN
     1314     9031    3             QGB_PARAM.BBUF_OFFSET$ -> KV$VDO_DAT.DATMOD = %KV_DATMOD_TRN;

   9031   2 00074C  DCC6 0003                            LDB,B5   3,B6
          2 00074E  E870 0100                            LDR,R6   256,IMO
          2 000750  EAC5 0001                            SRM,R6,'0300'X    1,B5
          2 000752       0300

     1315     9032    3           CALL FINISH_VDO ( %KV_VDO_FNC_UPDRELDVC )

   9032   2 000753  DBF0 001E                            LAB,B5   30,IMO
          2 000755  DFC7 008E                            STB,B5   @FUNCTION+2,AUTO
          2 000757  E3C0 0110                            LNJ,B6   s:0,PREL
          2 000759       0003                            DC       s:9034,PREL
          2 00075A  0F81 0005                            B        s:9036,PREL

     1316     9033    4           WHENALTRETURN DO;

     1317     9034    4               ALTRETURN;

   9034   2 00075C  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 00075E  B806                                 LDR,R3   ,B6
          2 00075F  C3B6                                 LNJ,B4   ,B6,R3

     1318     9035    4             END;
     1319     9036    3         END;

   9036   2 000760  0F81 0024                            B        s:9048,PREL

     1320     9037    2       ELSE IF MYDCB.ORG = %G_ORG_FORM#

   9037   2 000762  BCC7 0060                            LDB,B3   DCB$,AUTO
          2 000764  E843 001F                            LDR,R6   31,B3
          2 000766  E570 00FF                            AND,R6   255,IMO
          2 000768  6D02                                 CMV,R6   2
          2 000769  0981 001B                            BNE      s:9048,PREL

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:140  
     1321     9038    3         THEN DO;

     1322     9039    3             CALL INIT_VDO ( %KV_VDO_FNC_UPDRELDVC )

   9039   2 00076B  ABF0 001E                            LAB,B2   30,IMO
          2 00076D  AFC7 008E                            STB,B2   @FUNCTION+2,AUTO
          2 00076F  E3C0 0019                            LNJ,B6   s:0,PREL
          2 000771       0003                            DC       s:9041,PREL
          2 000772  0F81 0005                            B        s:9043,PREL

     1323     9040    4             WHENALTRETURN DO;

     1324     9041    4                 ALTRETURN;

   9041   2 000774  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000776  B806                                 LDR,R3   ,B6
          2 000777  C3B6                                 LNJ,B4   ,B6,R3

     1325     9042    4               END;
     1326     9043    3             CALL FINISH_VDO ( %KV_VDO_FNC_UPDRELDVC )

   9043   2 000778  EBF0 001E                            LAB,B6   30,IMO
          2 00077A  EFC7 008E                            STB,B6   @FUNCTION+2,AUTO
          2 00077C  E3C0 00EB                            LNJ,B6   s:0,PREL
          2 00077E       0003                            DC       s:9045,PREL
          2 00077F  0F81 0005                            B        s:9048,PREL

     1327     9044    4             WHENALTRETURN DO;

     1328     9045    4                 ALTRETURN;

   9045   2 000781  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000783  B806                                 LDR,R3   ,B6
          2 000784  C3B6                                 LNJ,B4   ,B6,R3

     1329     9046    4               END;
     1330     9047    3           END;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:141  

     1331     9048    2   END DO_DEVICE;

   9048   2 000785  ECC7 008A                            LDB,B6   FPT_READMLT+19,AUTO
          2 000787  C3C6 0001                            LNJ,B4   1,B6

     1332     9049
     1333     9050    1   INIT_VDO: PROC ( FUNCTION ) ALTRET;

   9050   2 000789  EFC7 008C            INIT_VDO        STB,B6   @FUNCTION,AUTO

     1334     9051
     1335     9052    2     DCL FUNCTION UBIN;
     1336     9053
     1337     9054    2       OCCUPIED_SPACE = POFFC (QGB_PARAM.BBUF_OFFSET$,

   9054   2 00078B  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 00078D  8CC5 0001                            LDI      1,B5
          2 00078F  7031                                 DCL,R7   1
          2 000790  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 000792  8CC5 0003                            LDI      3,B5
          2 000794  7031                                 DCL,R7   1
          2 000795  84C7 0094                            SID      @FUNCTION+2,AUTO
          2 000797  E857                                 LDR,R6   R7
          2 000798  EF47 0071                            STR,R6   OCCUPIED_SPACE,AUTO

     1338     9055    2         VBASE( QGB_PARAM.BBUF_ ) );
     1339     9056    2       OCCUPIED_SPACE = MOD ( OCCUPIED_SPACE, 2 );

   9056   2 00079A  E570 0001                            AND,R6   1,IMO
          2 00079C  EF47 0071                            STR,R6   OCCUPIED_SPACE,AUTO

     1340     9057    2       IF OCCUPIED_SPACE ~= 0

   9057   2 00079E  6901 000A                            BEZ,R6   s:9061,PREL

     1341     9058    2       THEN
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:142  
     1342     9059    2         QGB_PARAM.BBUF_OFFSET$ = PINCRC ( QGB_PARAM.BBUF_OFFSET$, 1 );

   9059   2 0007A0  8CC5 0003                            LDI      3,B5
          2 0007A2  7031                                 DCL,R7   1
          2 0007A3  8470 0000 0001                       AID      1,IMO
          2 0007A6  7071                                 DCR,R7   1
          2 0007A7  8D45 0003                            SDI      3,B5

     1343     9060
     1344     9061    2       CALL CHECK_SPACE ( FUNCTION )

   9061   2 0007A9  ECC7 008E                            LDB,B6   @FUNCTION,AUTO
          2 0007AB  EFC7 0092                            STB,B6   @FUNCTION,AUTO
          2 0007AD  E3C0 FA7B                            LNJ,B6   s:0,PREL
          2 0007AF       0003                            DC       s:9063,PREL
          2 0007B0  0F81 000A                            B        s:9069,PREL

     1345     9062    3       WHENALTRETURN DO;

     1346     9063    3           CALL DO_WRITE_MULT         /* SEND BUFFER */

   9063   2 0007B2  E3C0 004C                            LNJ,B6   s:0,PREL
          2 0007B4       0003                            DC       s:9065,PREL
          2 0007B5  0F81 0005                            B        s:9069,PREL

     1347     9064    4           WHENALTRETURN DO;

     1348     9065    4               ALTRETURN;

   9065   2 0007B7  ECC7 008C                            LDB,B6   @FUNCTION,AUTO
          2 0007B9  B806                                 LDR,R3   ,B6
          2 0007BA  C3B6                                 LNJ,B4   ,B6,R3

     1349     9066    4             END;
     1350     9067    3         END;

     1351     9068
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:143  
     1352     9069    2       CURRENT_VDO$ = QGB_PARAM.BBUF_OFFSET$;

   9069   2 0007BB  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 0007BD  8CC6 0003                            LDI      3,B6
          2 0007BF  8D47 006F                            SDI      CURRENT_VDO$,AUTO

     1353     9070    2       IF FUNCTION > %KV_VDO_FNC_HI

   9070   2 0007C1  DCC7 008E                            LDB,B5   @FUNCTION,AUTO
          2 0007C3  D805                                 LDR,R5   ,B5
          2 0007C4  5D22                                 CMV,R5   34
          2 0007C5  0381 0005                            BLE      s:9074,PREL

     1354     9071    3       THEN DO;

     1355     9072    3           RETURN;

   9072   2 0007C7  ECC7 008C                            LDB,B6   @FUNCTION,AUTO
          2 0007C9  C3C6 0001                            LNJ,B4   1,B6

     1356     9073    3         END;
     1357     9074    2       VDOSZ = QGB_VDOBYTSIZ(FUNCTION);

   9074   2 0007CB  B855                                 LDR,R3   R5
          2 0007CC  C2B0 0000 0008  00                   LLH,R4   QGB_VDOBYTSIZ,R3
          2 0007CF  CF47 006C                            STR,R4   VDOSZ,AUTO

     1358     9075    2       QGB_PARAM.BBUF_OFFSET$->VDO = '0'B;

   9075   2 0007D1  A856                                 LDR,R2   R6
          2 0007D2  E570 7FFF                            AND,R6   32767,IMO
          2 0007D4  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0007D6  CCC7 0094                            LDB,B4   @FUNCTION+2,AUTO
          2 0007D8  204F                                 SOR,R2   15
          2 0007D9  AF47 0096                            STR,R2   @FUNCTION+4,AUTO
          2 0007DB  CFC7 0097                            STB,B4   @FUNCTION+5,AUTO
          2 0007DD  AB80 0000 0000  03                   LAB,B2   0
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:144  
          2 0007E0  2C00                                 LDV,R2   0
          2 0007E1  6C01                                 LDV,R6   1
          2 0007E2  BB84                                 LAB,B3   ,B4
          2 0007E3  B847 0096                            LDR,R3   @FUNCTION+4,AUTO
          2 0007E5  F854                                 LDR,R7   R4
          2 0007E6  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

     1359     9076    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO.FNC = FUNCTION;

   9076   2 0007E9  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 0007EB  DCC6 0003                            LDB,B5   3,B6
          2 0007ED  CCC7 008E                            LDB,B4   @FUNCTION,AUTO
          2 0007EF  E804                                 LDR,R6   ,B4
          2 0007F0  E785                                 STH,R6   ,B5

     1360     9077    2       MSGSZ = QGB_PARAM.MSGSZ;

   9077   2 0007F1  E846 0009                            LDR,R6   9,B6
          2 0007F3  EF47 006D                            STR,R6   MSGSZ,AUTO

     1361     9078    2       QGB_PARAM.BBUF_OFFSET$->KV$VDO.STR = QGB_PARAM.STR;

   9078   2 0007F5  DCC6 0003                            LDB,B5   3,B6
          2 0007F7  D846 0011                            LDR,R5   17,B6
          2 0007F9  DA85                                 SRM,R5,'007F'X    ,B5
          2 0007FA       007F

     1362     9079    2       RETURN;

   9079   2 0007FB  ECC7 008C                            LDB,B6   @FUNCTION,AUTO
          2 0007FD  C3C6 0001                            LNJ,B4   1,B6

     1363     9080    2   END INIT_VDO;
     1364     9081
     1365     9082    1   DO_WRITE_MULT: PROC ALTRET;

   9082   2 0007FF  EFC7 0090            DO_WRITE_MULT   STB,B6   @FUNCTION+2,AUTO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:145  

     1366     9083
     1367     9084    2       OCCUPIED_SPACE = POFFC (QGB_PARAM.BBUF_OFFSET$,

   9084   2 000801  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 000803  8CC5 0001                            LDI      1,B5
          2 000805  7031                                 DCL,R7   1
          2 000806  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 000808  8CC5 0003                            LDI      3,B5
          2 00080A  7031                                 DCL,R7   1
          2 00080B  84C7 0094                            SID      @FUNCTION+2,AUTO
          2 00080D  E857                                 LDR,R6   R7
          2 00080E  EF47 0071                            STR,R6   OCCUPIED_SPACE,AUTO

     1368     9085    2         VBASE( QGB_PARAM.BBUF_ ));
     1369     9086
     1370     9087    2       IF OCCUPIED_SPACE > 0

   9087   2 000810  6901 0053                            BEZ,R6   s:9111,PREL

     1371     9088    2       THEN
     1372     9089    2   SEND_OFF_BUFFER:
     1373     9090    3         DO;

   9090   2                              SEND_OFF_BUFFER null
     1374     9091    3           OCCUPIED_SPACE = MOD ( OCCUPIED_SPACE, 2 );

   9091   2 000812  E570 0001            SEND_OFF_BUFFER AND,R6   1,IMO
          2 000814  EF47 0071                            STR,R6   OCCUPIED_SPACE,AUTO

     1375     9092    3           IF OCCUPIED_SPACE ~= 0

   9092   2 000816  6901 000A                            BEZ,R6   s:9096,PREL

     1376     9093    3           THEN
     1377     9094    3             QGB_PARAM.BBUF_OFFSET$ = PINCRC ( QGB_PARAM.BBUF_OFFSET$, 1 );

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:146  
   9094   2 000818  8CC5 0003                            LDI      3,B5
          2 00081A  7031                                 DCL,R7   1
          2 00081B  8470 0000 0001                       AID      1,IMO
          2 00081E  7071                                 DCR,R7   1
          2 00081F  8D45 0003                            SDI      3,B5

     1378     9095
     1379     9096    3           QGB_PARAM.BBUF_OFFSET$ -> LAST_ENTRY = LAST_ENTRY_C;

   9096   2 000821  ECC5 0003                            LDB,B6   3,B5
          2 000823  AB80 0000 0000  00                   LAB,B2   LAST_ENTRY_C
          2 000826  2C00                                 LDV,R2   0
          2 000827  6C0A                                 LDV,R6   10
          2 000828  BB86                                 LAB,B3   ,B6
          2 000829  3C00                                 LDV,R3   0
          2 00082A  0008                                 MMM

     1380     9097    3           QGB_PARAM.BBUF_OFFSET$ -> LAST_ENTRY.STR = QGB_PARAM.STR;

   9097   2 00082B  CCC5 0003                            LDB,B4   3,B5
          2 00082D  E845 0011                            LDR,R6   17,B5
          2 00082F  EA84                                 SRM,R6,'007F'X    ,B4
          2 000830       007F

     1381     9098    3           QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$, LENGTHC(
              9098                    LAST_ENTRY_C));

   9098   2 000831  8CC5 0003                            LDI      3,B5
          2 000833  8470 0000 0005                       AID      5,IMO
          2 000836  8D45 0003                            SDI      3,B5

     1382     9099
     1383     9100    3           VBOUND ( FPT_WRTMLT.BUF_ ) = POFFC ( QGB_PARAM.BBUF_OFFSET$,

   9100   2 000838  8CC5 0001                            LDI      1,B5
          2 00083A  7031                                 DCL,R7   1
          2 00083B  8D47 0094                            SDI      @FUNCTION+2,AUTO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:147  
          2 00083D  8CC5 0003                            LDI      3,B5
          2 00083F  7031                                 DCL,R7   1
          2 000840  84C7 0094                            SID      @FUNCTION+2,AUTO
          2 000842  8470 FFFF FFFF                       AID      -1,IMO
          2 000845  E857                                 LDR,R6   R7
          2 000846  EF00 0000 0003  01                   STR,R6   FPT_WRTMLT+3

     1384     9101    3             VBASE( QGB_PARAM.BBUF_ ) ) - 1;
     1385     9102    3           QGB_PARAM.BBUF_OFFSET$ = VBASE( QGB_PARAM.BBUF_ );

   9102   2 000849  8CC5 0001                            LDI      1,B5
          2 00084B  8D45 0003                            SDI      3,B5

     1386     9103    3           CALL M$WRTMLT ( FPT_WRTMLT )

   9103   2 00084D  BB80 0000 0000  01                   LAB,B3   FPT_WRTMLT
          2 000850  B870 1144                            LDR,R3   4420,IMO
          2 000852  0001                                 MCL
          2 000853       0003                            DC       s:9106,PREL
          2 000854  0F81 000F                            B        s:9111,PREL

     1387     9104    3           WHENALTRETURN
     1388     9105    4             DO;

     1389     9106    4               QGB_PARAM.ERR = G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR;

   9106   2 000856  EC80 0000 0000  xsym                 LDB,B6   G$TCB$
          2 000859  DC86                                 LDB,B5   ,B6
          2 00085A  8CC5 002B                            LDI      43,B5
          2 00085C  CCC7 0006                            LDB,B4   @QGB_PARAM,AUTO
          2 00085E  8D44 0005                            SDI      5,B4

     1390     9107    4               ALTRETURN;

   9107   2 000860  ECC7 0090                            LDB,B6   @FUNCTION+2,AUTO
          2 000862  B806                                 LDR,R3   ,B6
          2 000863  C3B6                                 LNJ,B4   ,B6,R3
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:148  

     1391     9108    4             END;
     1392     9109    3         END SEND_OFF_BUFFER;

     1393     9110
     1394     9111    2       RETURN;

   9111   2 000864  ECC7 0090                            LDB,B6   @FUNCTION+2,AUTO
          2 000866  C3C6 0001                            LNJ,B4   1,B6

     1395     9112
     1396     9113    2   END DO_WRITE_MULT;
     1397     9114
     1398     9115    1   FINISH_VDO: PROC ( FUNCTION ) ALTRET;

   9115   2 000868  EFC7 008C            FINISH_VDO      STB,B6   @FUNCTION,AUTO

     1399     9116
     1400     9117    2     DCL FUNCTION UBIN;
     1401     9118
     1402     9119    2       LHDR$ = QGB_PARAM.BBUF_OFFSET$;

   9119   2 00086A  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 00086C  8CC5 0003                            LDI      3,B5
          2 00086E  8D47 006A                            SDI      LHDR$,AUTO

     1403     9120    2       QGB_PARAM.BBUF_OFFSET$ = PINCRC(QGB_PARAM.BBUF_OFFSET$,VDOSZ);

   9120   2 000870  7031                                 DCL,R7   1
          2 000871  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 000873  F847 006C                            LDR,R7   VDOSZ,AUTO
          2 000875  6C00                                 LDV,R6   0
          2 000876  8447 0094                            AID      @FUNCTION+2,AUTO
          2 000878  7071                                 DCR,R7   1
          2 000879  8D45 0003                            SDI      3,B5

     1404     9121
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:149  
     1405     9122    2       IF QGB_PARAM.KEY$ ~= ADDR(NIL)

   9122   2 00087B  8DC5 0014                            CMN      20,B5
          2 00087D  0901 006C                            BE       s:9143,PREL

     1406     9123    2       THEN
     1407     9124    2         IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_FLDID#

   9124   2 00087F  D2C5 001A                            LLH,R5   26,B5
          2 000881  5D01                                 CMV,R5   1
          2 000882  0981 001F                            BNE      s:9132,PREL

     1408     9125    3         THEN DO;

     1409     9126    3             QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_FLDID = QGB_VDOVLP_FLDID;

   9126   2 000884  ECC5 0003                            LDB,B6   3,B5
          2 000886  8C80 0000 001A  00                   LDI      QGB_VDOVLP_FLDID
          2 000889  8D06                                 SDI      ,B6

     1410     9127    3             QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_FLDID.BYTSIZ = QGB_PARAM.KEYSZ;

   9127   2 00088A  ECC5 0003                            LDB,B6   3,B5
          2 00088C  D845 001A                            LDR,R5   26,B5
          2 00088E  DA86                                 SRM,R5,'00FF'X    ,B6
          2 00088F       00FF

     1411     9128    3             QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_FLDID.FLDID = QGB_PARAM.KEY$->FLDID;

   9128   2 000890  ECC5 0003                            LDB,B6   3,B5
          2 000892  CCC5 0014                            LDB,B4   20,B5
          2 000894  D804                                 LDR,R5   ,B4
          2 000895  DF46 0001                            STR,R5   1,B6

     1412     9129    3             LHDR$ = QGB_PARAM.BBUF_OFFSET$;

   9129   2 000897  8CC5 0003                            LDI      3,B5
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:150  
          2 000899  8D47 006A                            SDI      LHDR$,AUTO

     1413     9130    3             QGB_PARAM.BBUF_OFFSET$ = PINCRC(QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9130                      QGB_VDOVLP_FLDID));

   9130   2 00089B  8470 0000 0002                       AID      2,IMO
          2 00089E  8D45 0003                            SDI      3,B5

     1414     9131    3           END;

   9131   2 0008A0  0F81 0049                            B        s:9143,PREL

     1415     9132    2         ELSE IF QGB_PARAM.KEYTYPE = %G_KEYTYPE_COORD#

   9132   2 0008A2  5D02                                 CMV,R5   2
          2 0008A3  0981 0046                            BNE      s:9143,PREL

     1416     9133    3           THEN DO;

     1417     9134    3               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_KEY = QGB_VDOVLP_KEY;

   9134   2 0008A5  ECC5 0003                            LDB,B6   3,B5
          2 0008A7  C806                                 LDR,R4   ,B6
          2 0008A8  C570 00FF                            AND,R4   255,IMO
          2 0008AA  CF47 0094                            STR,R4   @FUNCTION+2,AUTO
          2 0008AC  EFC7 0095                            STB,B6   @FUNCTION+3,AUTO
          2 0008AE  AB80 0000 0000  00                   LAB,B2   LAST_ENTRY_C
          2 0008B1  2C38                                 LDV,R2   56
          2 0008B2  6C02                                 LDV,R6   2
          2 0008B3  BB86                                 LAB,B3   ,B6
          2 0008B4  3C00                                 LDV,R3   0
          2 0008B5  F854                                 LDR,R7   R4
          2 0008B6  7E02                                 ADV,R7   2
          2 0008B7  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

     1418     9135    3               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_KEY.BYTSIZ = QGB_PARAM.KEYSZ;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:151  
   9135   2 0008BA  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 0008BC  DCC6 0003                            LDB,B5   3,B6
          2 0008BE  E846 001A                            LDR,R6   26,B6
          2 0008C0  EA85                                 SRM,R6,'00FF'X    ,B5
          2 0008C1       00FF

     1419     9136    3               LHDR$ = QGB_PARAM.BBUF_OFFSET$;

   9136   2 0008C2  8CC6 0003                            LDI      3,B6
          2 0008C4  8D47 006A                            SDI      LHDR$,AUTO

     1420     9137    3               QGB_PARAM.BBUF_OFFSET$ = PINCRC(QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9137                        QGB_VDOVLP_KEY));

   9137   2 0008C6  8470 0000 0001                       AID      1,IMO
          2 0008C9  8D46 0003                            SDI      3,B6

     1421     9138    3               QGB_PARAM.BBUF_OFFSET$->KEY = QGB_PARAM.KEY$->KEY;

   9138   2 0008CB  B856                                 LDR,R3   R6
          2 0008CC  E570 7FFF                            AND,R6   32767,IMO
          2 0008CE  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0008D0  DCC7 0094                            LDB,B5   @FUNCTION+2,AUTO
          2 0008D2  304F                                 SOR,R3   15
          2 0008D3  D846 001A                            LDR,R5   26,B6
          2 0008D5  D570 00FF                            AND,R5   255,IMO
          2 0008D7  CCC6 0014                            LDB,B4   20,B6
          2 0008D9  AB84                                 LAB,B2   ,B4
          2 0008DA  2C00                                 LDV,R2   0
          2 0008DB  E855                                 LDR,R6   R5
          2 0008DC  BB85                                 LAB,B3   ,B5
          2 0008DD  0008                                 MMM

     1422     9139    3              QGB_PARAM.BBUF_OFFSET$ = PINCRW(QGB_PARAM.BBUF_OFFSET$,(QGB_PARAM.KEYSZ+
              9139                        1)/2);

   9139   2 0008DE  E846 001A                            LDR,R6   26,B6
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:152  
          2 0008E0  E570 00FF                            AND,R6   255,IMO
          2 0008E2  6E01                                 ADV,R6   1
          2 0008E3  6041                                 SOR,R6   1
          2 0008E4  F856                                 LDR,R7   R6
          2 0008E5  6C00                                 LDV,R6   0
          2 0008E6  8446 0003                            AID      3,B6
          2 0008E8  8D46 0003                            SDI      3,B6

     1423     9140    3             END;

     1424     9141
     1425     9142
     1426     9143    2       IF (FUNCTION = %KV_VDO_FNC_DAT OR FUNCTION = %KV_VDO_FNC_DAT_IMD)

   9143   2 0008EA  ECC7 008E                            LDB,B6   @FUNCTION,AUTO
          2 0008EC  E806                                 LDR,R6   ,B6
          2 0008ED  6D05                                 CMV,R6   5
          2 0008EE  0901 0004                            BE       s:9143+9,PREL
          2 0008F0  6D06                                 CMV,R6   6
          2 0008F1  0981 004A                            BNE      s:9158,PREL
          2 0008F3  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 0008F5  89C5 000A                            CMZ      10,B5
          2 0008F7  0801 0044                            BAL      s:9158,PREL
          2 0008F9  82C5 000A                            LB,'1000'X        10,B5
          2 0008FB       1000
          2 0008FC  0501 003F                            BBT      s:9158,PREL
          2 0008FE  8DC5 0007                            CMN      7,B5
          2 000900  0901 003B                            BE       s:9158,PREL

     1427     9144    2         AND NOT QGB_PARAM.DVE.DVBYTE.BP AND NOT QGB_PARAM.DVE.DVBYTE.TRANS
     1428     9145    2         AND QGB_PARAM.MSGC$ ~= ADDR(NIL)
     1429     9146    3       THEN DO;

     1430     9147    3           OP$ = PINCRC(QGB_PARAM.MSGC$,QGB_PARAM.MSGSZ-1);

   9147   2 000902  B845 0009                            LDR,R3   9,B5
          2 000904  8CC5 0007                            LDI      7,B5
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:153  
          2 000906  7031                                 DCL,R7   1
          2 000907  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 000909  E853                                 LDR,R6   R3
          2 00090A  70F0                                 DAR,R7   16
          2 00090B  8447 0094                            AID      @FUNCTION+2,AUTO
          2 00090D  7071                                 DCR,R7   1
          2 00090E  7031                                 DCL,R7   1
          2 00090F  8470 FFFF FFFF                       AID      -1,IMO
          2 000912  7071                                 DCR,R7   1
          2 000913  8D47 0062                            SDI      OP$,AUTO

     1431     9148    4           DO WHILE (OP$ ~= QGB_PARAM.MSGC$);

   9148   2 000915  84C5 0007                            SID      7,B5
          2 000917  6981 0003                            BNEZ,R6  s:9149,PREL
          2 000919  7901 0022                            BEZ,R7   s:9158,PREL

     1432     9149    4             IF B$CHAR~= ' '

   9149   2 00091B  8CC7 0062                            LDI      OP$,AUTO
          2 00091D  B856                                 LDR,R3   R6
          2 00091E  E570 7FFF                            AND,R6   32767,IMO
          2 000920  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 000922  ECC7 0094                            LDB,B6   @FUNCTION+2,AUTO
          2 000924  304F                                 SOR,R3   15
          2 000925  D0B6                                 LDH,R5   ,B6,R3
          2 000926  5D20                                 CMV,R5   32
          2 000927  0981 0014                            BNE      s:9158,PREL

     1433     9150    4             THEN
     1434     9151    4               EXIT;
     1435     9152    4             QGB_PARAM.MSGSZ = QGB_PARAM.MSGSZ - 1;

   9152   2 000929  DCC7 0006                            LDB,B5   @QGB_PARAM,AUTO
          2 00092B  88C5 0009                            DEC      9,B5

     1436     9153    4             MSGSZ = MSGSZ - 1;
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:154  

   9153   2 00092D  88C7 006D                            DEC      MSGSZ,AUTO

     1437     9154    4             OP$=PINCRC(OP$,-1);

   9154   2 00092F  8CC7 0062                            LDI      OP$,AUTO
          2 000931  7031                                 DCL,R7   1
          2 000932  8470 FFFF FFFF                       AID      -1,IMO
          2 000935  7071                                 DCR,R7   1
          2 000936  8D47 0062                            SDI      OP$,AUTO

     1438     9155    4           END;

   9155   2 000938  84C5 0007                            SID      7,B5
          2 00093A  69E1                                 BNEZ,R6  s:9149,SPREL
          2 00093B  79E0                                 BNEZ,R7  s:9149,SPREL

     1439     9156    3         END;

     1440     9157
     1441     9158    2       IF MSGSZ > 0

   9158   2 00093C  E847 006D                            LDR,R6   MSGSZ,AUTO
          2 00093E  6901 00A0                            BEZ,R6   s:9182,PREL

     1442     9159    3       THEN DO;

     1443     9160    3           LHDR$ = QGB_PARAM.BBUF_OFFSET$;

   9160   2 000940  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000942  8CC6 0003                            LDI      3,B6
          2 000944  8D47 006A                            SDI      LHDR$,AUTO

     1444     9161    3           IF MSGSZ > 255

   9161   2 000946  D847 006D                            LDR,R5   MSGSZ,AUTO
          2 000948  D970 00FF                            CMR,R5   255,IMO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:155  
          2 00094A  0381 0026                            BLE      s:9168,PREL

     1445     9162    4           THEN DO;

     1446     9163    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT2 = QGB_VDOVLP_DAT2;

   9163   2 00094C  DCC6 0003                            LDB,B5   3,B6
          2 00094E  C846 0009                            LDR,R4   9,B6
          2 000950  CF47 0094                            STR,R4   @FUNCTION+2,AUTO
          2 000952  DFC7 0095                            STB,B5   @FUNCTION+3,AUTO
          2 000954  AB80 0000 0000  00                   LAB,B2   LAST_ENTRY_C
          2 000957  2C0C                                 LDV,R2   12
          2 000958  6C04                                 LDV,R6   4
          2 000959  BB85                                 LAB,B3   ,B5
          2 00095A  3C00                                 LDV,R3   0
          2 00095B  F854                                 LDR,R7   R4
          2 00095C  7E04                                 ADV,R7   4
          2 00095D  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

     1447     9164    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT2.BYTSIZ = MSGSZ;

   9164   2 000960  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000962  DCC6 0003                            LDB,B5   3,B6
          2 000964  E847 006D                            LDR,R6   MSGSZ,AUTO
          2 000966  EF45 0001                            STR,R6   1,B5

     1448     9165    4               QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9165                        QGB_VDOVLP_DAT2));

   9165   2 000968  8CC6 0003                            LDI      3,B6
          2 00096A  8470 0000 0002                       AID      2,IMO
          2 00096D  8D46 0003                            SDI      3,B6

     1449     9166    4             END;

   9166   2 00096F  0F81 0025                            B        s:9173,PREL

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:156  
     1450     9167    4           ELSE DO;

     1451     9168    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT1 = QGB_VDOVLP_DAT1;

   9168   2 000971  DCC6 0003                            LDB,B5   3,B6
          2 000973  C805                                 LDR,R4   ,B5
          2 000974  C570 00FF                            AND,R4   255,IMO
          2 000976  CF47 0094                            STR,R4   @FUNCTION+2,AUTO
          2 000978  DFC7 0095                            STB,B5   @FUNCTION+3,AUTO
          2 00097A  AB80 0000 0000  00                   LAB,B2   LAST_ENTRY_C
          2 00097D  2C0A                                 LDV,R2   10
          2 00097E  6C02                                 LDV,R6   2
          2 00097F  BB85                                 LAB,B3   ,B5
          2 000980  3C00                                 LDV,R3   0
          2 000981  F854                                 LDR,R7   R4
          2 000982  7E02                                 ADV,R7   2
          2 000983  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

     1452     9169    4               QGB_PARAM.BBUF_OFFSET$->KV$VDOVLP_DAT1.BYTSIZ = MSGSZ;

   9169   2 000986  ECC7 0006                            LDB,B6   @QGB_PARAM,AUTO
          2 000988  DCC6 0003                            LDB,B5   3,B6
          2 00098A  E847 006D                            LDR,R6   MSGSZ,AUTO
          2 00098C  EA85                                 SRM,R6,'00FF'X    ,B5
          2 00098D       00FF

     1453     9170    4               QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$,SIZEC(
              9170                        QGB_VDOVLP_DAT1));

   9170   2 00098E  8CC6 0003                            LDI      3,B6
          2 000990  8470 0000 0001                       AID      1,IMO
          2 000993  8D46 0003                            SDI      3,B6

     1454     9171    4             END;

     1455     9172
     1456     9173    3           IF FUNCTION = %KV_VDO_FNC_PRM_SET /* TL exists                        */
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:157  

   9173   2 000995  DCC7 008E                            LDB,B5   @FUNCTION,AUTO
          2 000997  D805                                 LDR,R5   ,B5
          2 000998  5D13                                 CMV,R5   19
          2 000999  0981 0020                            BNE      s:9179,PREL

     1457     9174    4           THEN DO;

     1458     9175    4               QGB_PARAM.BBUF_OFFSET$->TL = QGB_PARAM.V$->TL;

   9175   2 00099B  B856                                 LDR,R3   R6
          2 00099C  E570 7FFF                            AND,R6   32767,IMO
          2 00099E  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0009A0  CCC7 0094                            LDB,B4   @FUNCTION+2,AUTO
          2 0009A2  304F                                 SOR,R3   15
          2 0009A3  D846 0016                            LDR,R5   22,B6
          2 0009A5  BCC6 0012                            LDB,B3   18,B6
          2 0009A7  AB83                                 LAB,B2   ,B3
          2 0009A8  2C00                                 LDV,R2   0
          2 0009A9  E855                                 LDR,R6   R5
          2 0009AA  BB84                                 LAB,B3   ,B4
          2 0009AB  0008                                 MMM

     1459     9176    4               QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$,QGB_PARAM.VSZ);

   9176   2 0009AC  B846 0016                            LDR,R3   22,B6
          2 0009AE  8CC6 0003                            LDI      3,B6
          2 0009B0  7031                                 DCL,R7   1
          2 0009B1  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0009B3  F853                                 LDR,R7   R3
          2 0009B4  6C00                                 LDV,R6   0
          2 0009B5  8447 0094                            AID      @FUNCTION+2,AUTO
          2 0009B7  7071                                 DCR,R7   1
          2 0009B8  8D46 0003                            SDI      3,B6

     1460     9177    4             END;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:158  
     1461     9178
     1462     9179    3           QGB_PARAM.BBUF_OFFSET$ -> B$MSG = QGB_PARAM.MSGC$ -> B$MSG;

   9179   2 0009BA  B856                                 LDR,R3   R6
          2 0009BB  E570 7FFF                            AND,R6   32767,IMO
          2 0009BD  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0009BF  CCC7 0094                            LDB,B4   @FUNCTION+2,AUTO
          2 0009C1  304F                                 SOR,R3   15
          2 0009C2  8CC6 0007                            LDI      7,B6
          2 0009C4  A856                                 LDR,R2   R6
          2 0009C5  E570 7FFF                            AND,R6   32767,IMO
          2 0009C7  8D47 0096                            SDI      @FUNCTION+4,AUTO
          2 0009C9  BCC7 0096                            LDB,B3   @FUNCTION+4,AUTO
          2 0009CB  204F                                 SOR,R2   15
          2 0009CC  AB83                                 LAB,B2   ,B3
          2 0009CD  E847 006D                            LDR,R6   MSGSZ,AUTO
          2 0009CF  BB84                                 LAB,B3   ,B4
          2 0009D0  0008                                 MMM

     1463     9180    3           QGB_PARAM.BBUF_OFFSET$ = PINCRC (QGB_PARAM.BBUF_OFFSET$, QGB_PARAM.MSGSZ);

   9180   2 0009D1  B846 0009                            LDR,R3   9,B6
          2 0009D3  8CC6 0003                            LDI      3,B6
          2 0009D5  7031                                 DCL,R7   1
          2 0009D6  8D47 0094                            SDI      @FUNCTION+2,AUTO
          2 0009D8  E853                                 LDR,R6   R3
          2 0009D9  70F0                                 DAR,R7   16
          2 0009DA  8447 0094                            AID      @FUNCTION+2,AUTO
          2 0009DC  7071                                 DCR,R7   1
          2 0009DD  8D46 0003                            SDI      3,B6

     1464     9181    3         END;

     1465     9182    2       IF LHDR$ ~= CURRENT_VDO$           /* vlps                               */

   9182   2 0009DF  8CC7 006A                            LDI      LHDR$,AUTO
          2 0009E1  84C7 006F                            SID      CURRENT_VDO$,AUTO
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:159  
          2 0009E3  6981 0003                            BNEZ,R6  s:9184,PREL
          2 0009E5  7901 0009                            BEZ,R7   s:9188,PREL

     1466     9183    3       THEN DO;

     1467     9184    3           CURRENT_VDO$->KV$VDO.VLP = '1'B;

   9184   2 0009E7  ECC7 006F                            LDB,B6   CURRENT_VDO$,AUTO
          2 0009E9  8906                                 LBT,'0080'X       ,B6
          2 0009EA       0080

     1468     9185    3           LHDR$->KV$VDOVLP.LST = '1'B;

   9185   2 0009EB  DCC7 006A                            LDB,B5   LHDR$,AUTO
          2 0009ED  8905                                 LBT,'8000'X       ,B5
          2 0009EE       8000

     1469     9186    3         END;

     1470     9187
     1471     9188    2       RETURN;

   9188   2 0009EF  ECC7 008C                            LDB,B6   @FUNCTION,AUTO
          2 0009F1  C3C6 0001                            LNJ,B4   1,B6
     1472     9189    2   END FINISH_VDO;
     1473     9190    1   END QGB$BUFFER_VDO;

PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:160  
--  Include file information  --

   QG_MACRO_M.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDO.:E05TOU  is referenced.
   K_CP6_M.:E05TOU  is referenced.
   KI$CP6V_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QGB$BUFFER_VDO.
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:161  

 **** Variables and constants ****

  ****  Section 000 RoData QGB$BUFFER_VDO

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(80)    r     1 LAST_ENTRY_C
    1D-0-0/b UBIN(8)     r     1 NULLHDR(0:1)
     8-0-0/c UBIN(8)     r     1 QGB_VDOBYTSIZ(0:34)
     5-0-0/w STRC(16)    r     1 QGB_VDOVLP_DAT1            6-0-0/w STRC(32)    r     1 QGB_VDOVLP_DAT2
    1A-0-0/w STRC(32)    r     1 QGB_VDOVLP_FLDID          1C-0-0/w STRC(16)    r     1 QGB_VDOVLP_KEY

  ****  Section 001  Data  QGB$BUFFER_VDO

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(207)   r     1 FPT_WRTMLT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    8C-0-0/w PTR         r     1 @FUNCTION                 92-0-0/w PTR         r     1 @FUNCTION
    8E-0-0/w PTR         r     1 @FUNCTION                 8E-0-0/w PTR         r     1 @FUNCTION
     4-0-0/w PTR         r     1 @QGB_ARG                   6-0-0/w PTR         r     1 @QGB_PARAM
     8-0-0/w STRC(1384)  r     1 AUTOHDR                   5F-0-0/w UBIN(16)    r     1 AUTO_LEN
    69-0-0/w UBIN(16)    r     1 BUFFER_SCRAPS             6F-0-0/w PTR         r     1 CURRENT_VDO$
    60-0-0/w PTR         r     1 DCB$                      *0-0-0/w STRC(256)   r     1 FPT_CLOSE_ARG
    *0-0-0/w STRC(752)   r     1 FPT_OPEN_ARG              77-0-0/w STRC(288)   r     1 FPT_READMLT
    *0-0-0/w STRC(288)   r     1 FPT_READ_ARG              *0-0-0/w STRC(288)   r     1 FPT_WRITE_ARG
    *0-0-0/w UBIN(16)    r     1 FUNCTION                  *0-0-0/w UBIN(16)    r     1 FUNCTION
    *0-0-0/w UBIN(16)    r     1 FUNCTION                  *0-0-0/w UBIN(16)    r     1 FUNCTION
    6E-0-0/w SBIN(16)    r     1 I                         6A-0-0/w PTR         r     1 LHDR$
    72-0-0/w UBIN(16)    r     1 MAX_VDOSIZE               73-0-0/w PTR         r     1 MSG$
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:162  
    6D-0-0/w UBIN(16)    r     1 MSGSZ                     71-0-0/w UBIN(16)    r     1 OCCUPIED_SPACE
    62-0-0/w PTR         r     1 OP$                       *0-0-0/w ACHR        r     1 QGB_ARG
    *0-0-0/w STRC(432)   r     1 QGB_PARAM                 *0-0-0/w STRC(240)   r     1 QGB_PARAMS
    75-0-0/w UBIN(16)    r     1 TEMPU1                    75-0-0/w STRC(16)    r     1 TEMPU1S
    76-0-0/w UBIN(16)    r     1 TMP_SZ                    6C-0-0/w UBIN(16)    r     1 VDOSZ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ROS$                     0-0-0/w PTR         r     1 G$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 B$CHAR                     0-0-0/c ACHR        r     1 B$MSG
     0-0-0/c ACHR        r     1 CHARI                      0-0-0/w UBIN(16)    r     1 FLDID
     0-0-0/w STRC(80)    r     1 FPT$DCLFLD_V               0-0-0/w STRC(96)    r     1 FPT$DEVICE
     0-0-0/w STRC(48)    r     1 FPT$ERASE_V                0-0-0/w STRC(48)    r     1 FPT$MDFFLD_V
     0-0-0/w STRC(32)    r     1 FPT$RLSFLD_V               0-0-0/w STRC(32)    r     1 FPT$SLCFLD_V
     0-0-0/w STRC(48)    r     1 FPT$WRITE                  0-0-0/w STRC(736)   r     1 G$EXCFR
     0-0-0/w STRC(96)    r     1 G$TCB                      0-0-0/c ACHR        r     1 KEY
     0-0-0/w STRC(16)    r     1 KV$VDO                     0-0-0/w STRC(16)    r     1 KV$VDOVLP
     0-0-0/w STRC(32)    r     1 KV$VDOVLP_ACTPOS           0-0-0/w ASTR(16)    r     1 KV$VDOVLP_DAT1
     0-0-0/w ASTR(32)    r     1 KV$VDOVLP_DAT2             0-0-0/w STRC(48)    r     1 KV$VDOVLP_ERR
     0-0-0/w STRC(32)    r     1 KV$VDOVLP_FLDID            0-0-0/w ASTR(16)    r     1 KV$VDOVLP_KEY
     0-0-0/w STRC(48)    r     1 KV$VDO_BLKDAT              0-0-0/w STRC(32)    r     1 KV$VDO_CLSSSN
     0-0-0/w STRC(32)    r     1 KV$VDO_CLSSTR              0-0-0/w STRC(32)    r     1 KV$VDO_DAT
     0-0-0/w STRC(96)    r     1 KV$VDO_DCLFLD              0-0-0/w STRC(32)    r     1 KV$VDO_DCLSTR
     0-0-0/w STRC(32)    r     1 KV$VDO_DLT                 0-0-0/w STRC(32)    r     1 KV$VDO_DSC
     0-0-0/w STRC(32)    r     1 KV$VDO_ERS                 0-0-0/w STRC(32)    r     1 KV$VDO_EVT
     0-0-0/w STRC(32)    r     1 KV$VDO_HVPS                0-0-0/w STRC(16)    r     1 KV$VDO_MRK
     0-0-0/w STRC(16)    r     1 KV$VDO_NOP                 0-0-0/w STRC(32)    r     1 KV$VDO_OPNSSN
     0-0-0/w STRC(48)    r     1 KV$VDO_OPNSTR              0-0-0/w STRC(16)    r     1 KV$VDO_PRM
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:163  
     0-0-0/w STRC(16)    r     1 KV$VDO_RLSFLD              0-0-0/w STRC(16)    r     1 KV$VDO_RMS
     0-0-0/w STRC(80)    r     1 KV$VDO_RQSDAT              0-0-0/w STRC(16)    r     1 KV$VDO_RQSMRK
     0-0-0/w STRC(48)    r     1 KV$VDO_RQSPRM              0-0-0/w STRC(16)    r     1 KV$VDO_RQSSTT
     0-0-0/w STRC(16)    r     1 KV$VDO_SLCFLD              0-0-0/w STRC(32)    r     1 KV$VDO_SLCGRPRND
     0-0-0/w STRC(32)    r     1 KV$VDO_SLCQLF              0-0-0/w STRC(32)    r     1 KV$VDO_SMS
     0-0-0/w STRC(16)    r     1 KV$VDO_STT                 0-0-0/w STRC(16)    r     1 KV$VDO_UPDRELDVC
     0-0-0/w STRC(80)    r     1 LAST_ENTRY                 0-0-0/w ASTR(808)   r     1 MYDCB
     0-0-0/c ACHR        r     1 TL                         0-0-0/c ASTR(0)     r     1 VDO
     0-0-0/w STRC(48)    r     1 VLP$FLDATR


   Procedure QGB$BUFFER_VDO requires 2547 words for executable code.
   Procedure QGB$BUFFER_VDO requires 153 words of local(AUTO) storage.

    No errors detected in file QGB$BUFFER_VDO.:E05TSI    .
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:164  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:165  
          MINI XREF LISTING

AUTOHDR
      7898**DCL      8979--ASSIGN   8980--CALLBLT  8982--ASSIGN
AUTO_LEN
      7903**DCL      4496--IMP-SIZ
B$CHAR
      7906**DCL      8770>>ASSIGN   9149>>IF
B$MSG
      5905**DCL      8875<<ASSIGN   8875>>ASSIGN   9179<<ASSIGN   9179>>ASSIGN
BUFFER_SCRAPS
      7911**DCL      8583<<ASSIGN   8586>>IF
CHARI
      5904**DCL      8980<<CALLBLT  8980>>CALLBLT
CHECK_SPACE
      8553**PROC     9061--CALL
CURRENT_VDO$
      7916**DCL      9069<<ASSIGN   9182>>IF       9184>>ASSIGN
DCB$
      7904**DCL      5678--IMP-PTR  8401>>ASSIGN   8532<<ASSIGN   8541>>ASSIGN   8542>>ASSIGN   8560>>IF
      8565>>IF       8774>>IF       8776>>ASSIGN   9037>>IF
DO_DCLFLD
      8596**PROC     8103--CALL
DO_DEVICE
      8969**PROC     8445--CALL
DO_ERASE
      8708**PROC     8263--CALL
DO_MDFFLD
      8633**PROC     8143--CALL
DO_READ
      8797**PROC     8403--CALL
DO_RLSFLD
      8732**PROC     8223--CALL
DO_SLCFLD
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:166  
      8685**PROC     8183--CALL
DO_WRITE
      8754**PROC     8315--CALL
DO_WRITE_MULT
      9082**PROC     8363--CALL     8385--CALL     8449--CALL     8477--CALL     9063--CALL
FINISH_VDO
      9115**PROC     8626--CALL     8662--CALL     8675--CALL     8700--CALL     8725--CALL     8747--CALL
      8789--CALL     8990--CALL     9006--CALL     9032--CALL     9043--CALL
FLDID
      5712**DCL      9128>>ASSIGN
FPT$DCLFLD_V.CLM
      5749**DCL      8613>>ASSIGN
FPT$DCLFLD_V.DCB#
      5740**DCL      8531>>ASSIGN
FPT$DCLFLD_V.DVBYTE
      5744**DCL      8598>>ASSIGN
FPT$DCLFLD_V.ID
      5749**DCL      8615>>ASSIGN
FPT$DCLFLD_V.LIN
      5748**DCL      8612>>ASSIGN
FPT$DCLFLD_V.WDT
      5749**DCL      8614>>ASSIGN
FPT$DEVICE.V.PAGE
      5856**DCL      9017>>IF
FPT$ERASE_V.CNS
      5813**DCL      8724>>ASSIGN
FPT$ERASE_V.DVBYTE
      5808**DCL      8712>>ASSIGN
FPT$ERASE_V.KEYTYPE
      5812**DCL      8709>>IF       8711>>ASSIGN
FPT$ERASE_V.PRT
      5813**DCL      8723>>ASSIGN
FPT$MDFFLD_V.DVBYTE
      5760**DCL      8637>>ASSIGN
FPT$MDFFLD_V.KEYTYPE
      5764**DCL      8634>>IF       8636>>ASSIGN
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:167  
FPT$MDFFLD_V.SETGRPRND
      5765**DCL      8648>>IF
FPT$MDFFLD_V.SETQLF
      5765**DCL      8668>>IF
FPT$RLSFLD_V.DVBYTE
      5792**DCL      8736>>ASSIGN
FPT$RLSFLD_V.KEYTYPE
      5796**DCL      8733>>IF       8735>>ASSIGN
FPT$SLCFLD_V.DVBYTE
      5776**DCL      8689>>ASSIGN
FPT$SLCFLD_V.KEYTYPE
      5780**DCL      8686>>IF       8688>>ASSIGN
FPT$WRITE.V.DVBYTE
      5883**DCL      8758>>ASSIGN
FPT$WRITE.V.KEYTYPE
      5882**DCL      8755>>IF       8757>>ASSIGN
FPT_CLOSE_ARG
      4580**DCL      8062<>CALL
FPT_OPEN_ARG
      4551**DCL      8026<>CALL
FPT_READMLT
      7966**DCL      8390<<ASSIGN   8394<>CALL
FPT_READMLT.BUF_
      7968**DCL      8392<<ASSIGN   8400>>ASSIGN
FPT_READMLT.V
      7971**DCL      8391--ASSIGN
FPT_READMLT.V.READMLT
      7972**DCL      8393<<ASSIGN
FPT_READMLT.V_
      7968**DCL      8391<<ASSIGN
FPT_READ_ARG
      4626**DCL      8369<>CALL     8390>>ASSIGN
FPT_READ_ARG.BUF_
      4628**DCL      8875>>ASSIGN
FPT_READ_ARG.V.DCB#
      4631**DCL      8356--IF       8359--IF
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:168  
FPT_WRITE_ARG
      4601**DCL      8306<>CALL
FPT_WRITE_ARG.V.DCB#
      4606**DCL      8303--IF
FPT_WRTMLT
      7944**DCL      9103<>CALL
FPT_WRTMLT.BUF_
      7946**DCL      8547<<ASSIGN   9100<<ASSIGN
FPT_WRTMLT.V
      7949**DCL      7946--DCLINIT
FPT_WRTMLT.V.DCB#
      7949**DCL      8531<<ASSIGN   8532--ASSIGN
FUNCTION IN PROCEDURE CHECK_SPACE
      8555**DCL      8553--PROC     8557>>ASSIGN
FUNCTION IN PROCEDURE FINISH_VDO
      9117**DCL      9115--PROC     9143>>IF       9143>>IF       9173>>IF
FUNCTION IN PROCEDURE INIT_VDO
      9052**DCL      9050--PROC     9061<>CALL     9070>>IF       9074>>ASSIGN   9076>>ASSIGN
FUNCTION IN PROCEDURE SETUP
      8521**DCL      8519--PROC
G$EXCFR.P$$
      5344**DCL      5344--REDEF    5344--REDEF
G$EXCFR.PREVSZ
      5294**DCL      5294--REDEF
G$EXCFR.TRLR.ERR
      5624**DCL      8029>>ASSIGN   8065>>ASSIGN   8309>>ASSIGN   8372>>ASSIGN   8397>>ASSIGN   9106>>ASSIGN
G$EXCFR.TRLR.EVID
      5581**DCL      5599--REDEF    5607--REDEF    5607--REDEF
G$EXCFR.TRLR.SUBC
      5558**DCL      5558--REDEF    5576--REDEF    5580--REDEF    5580--REDEF
G$ROS.AUTO_DS$
      5233**DCL      5234--REDEF
G$ROS.AUTO_T$
      5234**DCL      5234--REDEF
G$ROS$
      5195**DCL      5224--IMP-PTR
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:169  
G$TCB.ALT$
      5272**DCL      8029>>ASSIGN   8065>>ASSIGN   8309>>ASSIGN   8372>>ASSIGN   8397>>ASSIGN   9106>>ASSIGN
G$TCB$
      5196**DCL      5268--IMP-PTR  8029>>ASSIGN   8065>>ASSIGN   8309>>ASSIGN   8372>>ASSIGN   8397>>ASSIGN
      9106>>ASSIGN
I
      7915**DCL      5904--IMP-SIZ  8977<<ASSIGN   8978>>IF       8978<<ASSIGN   8979<<ASSIGN   8980>>CALLBLT
      8980>>CALLBLT  8980>>CALLBLT  8983>>ASSIGN
INIT_VDO
      9050**PROC     8608--CALL     8650--CALL     8670--CALL     8696--CALL     8718--CALL     8743--CALL
      8764--CALL     8985--CALL     9001--CALL     9020--CALL     9039--CALL
KEY
      5711**DCL      9138<<ASSIGN   9138>>ASSIGN
KV$VDO.FNC
      7239**DCL      8799>>IF       8799>>IF       8807>>IF       9076<<ASSIGN
KV$VDO.STR
      7239**DCL      8826>>ASSIGN   9078<<ASSIGN
KV$VDO.VLP
      7239**DCL      9184<<ASSIGN
KV$VDOVLP.LST
      7313**DCL      8843>>IF       8886>>IF       8900>>IF       8939>>IF       9185<<ASSIGN
KV$VDOVLP.TYP
      7313**DCL      8838>>DOCASE
KV$VDOVLP_ACTPOS
      7358**DCL      8842--ASSIGN
KV$VDOVLP_ACTPOS.ACTPOS
      7372**DCL      8841>>ASSIGN
KV$VDOVLP_DAT1
      7564**DCL      9168<<ASSIGN
KV$VDOVLP_DAT1.BYTSIZ
      7570**DCL      7579--IMP-SIZ  8871>>ASSIGN   9168>>ASSIGN   9169<<ASSIGN
KV$VDOVLP_DAT1.MSG
      7579**DCL      8870--ASSIGN
KV$VDOVLP_DAT2
      7615**DCL      9163<<ASSIGN
KV$VDOVLP_DAT2.BYTSIZ
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:170  
      7623**DCL      9164<<ASSIGN
KV$VDOVLP_ERR
      7666**DCL      8885--ASSIGN
KV$VDOVLP_ERR.ERRCODE
      7697**DCL      8884>>ASSIGN
KV$VDOVLP_FLDID
      7763**DCL      8899--ASSIGN   9126<<ASSIGN
KV$VDOVLP_FLDID.BYTSIZ
      7769**DCL      8896>>ASSIGN   9127<<ASSIGN
KV$VDOVLP_FLDID.FLDID
      7777**DCL      8892>>ASSIGN   8897--ASSIGN   9128<<ASSIGN
KV$VDOVLP_KEY
      7814**DCL      8912--ASSIGN   9134<<ASSIGN
KV$VDOVLP_KEY.BYTSIZ
      7820**DCL      7829--IMP-SIZ  8909>>ASSIGN   8912>>ASSIGN   9134>>ASSIGN   9135<<ASSIGN
KV$VDOVLP_KEY.KEY
      7829**DCL      8910--ASSIGN
KV$VDO_BLKDAT
      6277**DCL      5083--DCLINIT
KV$VDO_CLSSSN
      6320**DCL      5083--DCLINIT  5083--DCLINIT
KV$VDO_CLSSTR
      7204**DCL      5088--DCLINIT
KV$VDO_DAT
      7275**DCL      5083--DCLINIT  5084--DCLINIT
KV$VDO_DAT.DATCTRCHR
      7284**DCL      8783<<ASSIGN   8811>>ASSIGN   8818>>ASSIGN   9027<<ASSIGN
KV$VDO_DAT.DATCTRCHRTYP
      7283**DCL      8782<<ASSIGN   8810>>IF       8813>>ASSIGN   9026<<ASSIGN
KV$VDO_DAT.DATMOD
      7284**DCL      8788<<ASSIGN   8821>>IF       9031<<ASSIGN
KV$VDO_DAT.FNC
      7279**DCL      8798>>ASSIGN
KV$VDO_DAT.VLP
      7279**DCL      8828>>IF
KV$VDO_DCLFLD
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:171  
      5940**DCL      5084--DCLINIT
KV$VDO_DCLFLD.CLM
      5947**DCL      8613<<ASSIGN
KV$VDO_DCLFLD.GRPRND
      6009**DCL      8618<<ASSIGN   8618--ASSIGN   8623<<ASSIGN
KV$VDO_DCLFLD.GRPRND.ABS
      6015**DCL      8620<<ASSIGN
KV$VDO_DCLFLD.ID
      6031**DCL      8615<<ASSIGN
KV$VDO_DCLFLD.LIN
      5947**DCL      8612<<ASSIGN
KV$VDO_DCLFLD.QLF
      5966**DCL      8624<<ASSIGN
KV$VDO_DCLFLD.WDT
      5948**DCL      8614<<ASSIGN
KV$VDO_DCLSTR
      6362**DCL      5084--DCLINIT
KV$VDO_DLT
      6405**DCL      5084--DCLINIT
KV$VDO_DSC
      6450**DCL      5084--DCLINIT  5084--DCLINIT
KV$VDO_ERS
      6233**DCL      5084--DCLINIT
KV$VDO_ERS.CNS
      6240**DCL      8724<<ASSIGN
KV$VDO_ERS.PRT
      6240**DCL      8723<<ASSIGN
KV$VDO_EVT
      6492**DCL      5085--DCLINIT
KV$VDO_HVPS
      6534**DCL      5085--DCLINIT
KV$VDO_MRK
      7079**DCL      5087--DCLINIT
KV$VDO_NOP
      6576**DCL      5085--DCLINIT
KV$VDO_OPNSSN
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:172  
      6617**DCL      5085--DCLINIT  5085--DCLINIT
KV$VDO_OPNSTR
      7161**DCL      5088--DCLINIT
KV$VDO_PRM
      6659**DCL      5085--DCLINIT  5086--DCLINIT
KV$VDO_RLSFLD
      6700**DCL      5086--DCLINIT
KV$VDO_RMS
      6741**DCL      5086--DCLINIT
KV$VDO_RQSDAT
      6782**DCL      5086--DCLINIT
KV$VDO_RQSMRK
      7120**DCL      5088--DCLINIT
KV$VDO_RQSPRM
      6830**DCL      5086--DCLINIT
KV$VDO_RQSSTT
      6873**DCL      5086--DCLINIT
KV$VDO_SLCFLD
      6914**DCL      5086--DCLINIT
KV$VDO_SLCGRPRND
      6066**DCL      5087--DCLINIT
KV$VDO_SLCGRPRND.GRPRND
      6091**DCL      8656<<ASSIGN   8656--ASSIGN   8661<<ASSIGN
KV$VDO_SLCGRPRND.GRPRND.ABS
      6097**DCL      8658<<ASSIGN
KV$VDO_SLCQLF
      6148**DCL      5087--DCLINIT
KV$VDO_SLCQLF.QLF
      6173**DCL      8674<<ASSIGN
KV$VDO_SMS
      6955**DCL      5087--DCLINIT
KV$VDO_STT
      6997**DCL      5087--DCLINIT
KV$VDO_UPDRELDVC
      7038**DCL      5087--DCLINIT
L1 IN PROCEDURE DO_READ
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:173  
      8954**LABEL    8801--GOTO     8930--GOTO
L2 IN PROCEDURE DO_READ
      8832**LABEL    8844--GOTO     8887--GOTO     8901--GOTO     8940--GOTO
L4 IN PROCEDURE DO_READ
      8950**LABEL    8845--GOTO     8888--GOTO     8902--GOTO
LAST_ENTRY
      4904**DCL      9096<<ASSIGN
LAST_ENTRY.STR
      4908**DCL      9097<<ASSIGN
LAST_ENTRY_C
      4804**DCL      8579--ASSIGN   9096>>ASSIGN   9098--ASSIGN
LHDR$
      7912**DCL      9119<<ASSIGN   9129<<ASSIGN   9136<<ASSIGN   9160<<ASSIGN   9182>>IF       9185>>ASSIGN
M$CLOSE
       215**DCL-ENT  8062--CALL
M$OPEN
       215**DCL-ENT  8026--CALL
M$READ
       215**DCL-ENT  8369--CALL     8394--CALL
M$WRITE
       216**DCL-ENT  8306--CALL
M$WRTMLT
       216**DCL-ENT  9103--CALL
MAX_VDOSIZE
      7918**DCL      8557<<ASSIGN   8562<<ASSIGN   8562>>ASSIGN   8567<<ASSIGN   8567>>ASSIGN   8574<<ASSIGN
      8574>>ASSIGN   8579<<ASSIGN   8579>>ASSIGN   8586>>IF
MSG$
      7920**DCL      7358--IMP-PTR  7409--IMP-PTR  7461--IMP-PTR  7513--IMP-PTR  7564--IMP-PTR  7615--IMP-PTR
      7666--IMP-PTR  7763--IMP-PTR  7814--IMP-PTR  7865--IMP-PTR  8836<<ASSIGN   8838>>DOCASE   8841>>ASSIGN
      8843>>IF       8870>>ASSIGN   8871>>ASSIGN   8884>>ASSIGN   8886>>IF       8892>>ASSIGN   8896>>ASSIGN
      8897>>ASSIGN   8900>>IF       8909>>ASSIGN   8910>>ASSIGN   8912>>ASSIGN   8912>>ASSIGN   8939>>IF
MSGSZ
      7914**DCL      5905--IMP-SIZ  8874<<ASSIGN   8875>>ASSIGN   8875>>ASSIGN   8989<<ASSIGN   8989>>ASSIGN
      9005<<ASSIGN   9005>>ASSIGN   9077<<ASSIGN   9153<<ASSIGN   9153>>ASSIGN   9158>>IF       9161>>IF
      9164>>ASSIGN   9169>>ASSIGN   9179>>ASSIGN   9179>>ASSIGN
MYDCB.ARS
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:174  
      5682**DCL      8401>>ASSIGN
MYDCB.DCBNAME.L
      5705**DCL      5705--IMP-SIZ
MYDCB.DVFC
      5698**DCL      8774>>IF       8776>>ASSIGN
MYDCB.EOMCHAR
      5696**DCL      5696--REDEF    5697--REDEF
MYDCB.FLDID
      5695**DCL      5695--REDEF
MYDCB.KEYTYPE
      5698**DCL      8541>>ASSIGN   8560>>IF       8565>>IF
MYDCB.ORG
      5693**DCL      8303>>IF       8356>>IF       8359>>IF       9037>>IF
MYDCB.RES
      5690**DCL      5691--REDEF
MYDCB.STRM
      5685**DCL      8542>>ASSIGN
NULLHDR
      7930**DCL      8998--ASSIGN   8999--ASSIGN
OCCUPIED_SPACE
      7917**DCL      9054<<ASSIGN   9056<<ASSIGN   9056>>ASSIGN   9057>>IF       9084<<ASSIGN   9087>>IF
      9091<<ASSIGN   9091>>ASSIGN   9092>>IF
OP$
      7905**DCL      7906--IMP-PTR  9147<<ASSIGN   9148>>DOWHILE  9149>>IF       9154<<ASSIGN   9154>>ASSIGN
PROTOCOL_ERR IN PROCEDURE DO_READ
      8958**PROC     8954--CALL
QGB_ARG
      4496**DCL        41--PROC     4502--REDEF    4551--REDEF    4580--REDEF    4601--REDEF    4626--REDEF
      8014--ENTRY    8050--ENTRY    8090--ENTRY    8130--ENTRY    8170--ENTRY    8210--ENTRY    8250--ENTRY
      8291--ENTRY    8344--ENTRY    8433--ENTRY    8475--ENTRY
QGB_PARAM
      4650**DCL        41--PROC     8014--ENTRY    8050--ENTRY    8090--ENTRY    8130--ENTRY    8170--ENTRY
      8210--ENTRY    8250--ENTRY    8291--ENTRY    8344--ENTRY    8433--ENTRY    8475--ENTRY
QGB_PARAM.ACTPOS
      4757**DCL      8841<<ASSIGN
QGB_PARAM.ARS
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:175  
      4761**DCL      8378<<ASSIGN   8876<<ASSIGN
QGB_PARAM.BBUF_
      4658**DCL      8392>>ASSIGN   8414>>IF       8546>>ASSIGN   8547>>ASSIGN   8583>>ASSIGN   8583>>ASSIGN
      9054>>ASSIGN   9084>>ASSIGN   9100>>ASSIGN   9102>>ASSIGN
QGB_PARAM.BBUF_OFFSET$
      4659**DCL      8543>>IF       8546<<ASSIGN   8583>>ASSIGN   8612>>ASSIGN   8613>>ASSIGN   8614>>ASSIGN
      8615>>ASSIGN   8618>>ASSIGN   8620>>ASSIGN   8623>>ASSIGN   8624>>ASSIGN   8656>>ASSIGN   8658>>ASSIGN
      8661>>ASSIGN   8674>>ASSIGN   8723>>ASSIGN   8724>>ASSIGN   8782>>ASSIGN   8783>>ASSIGN   8788>>ASSIGN
      9026>>ASSIGN   9027>>ASSIGN   9031>>ASSIGN   9054>>ASSIGN   9059<<ASSIGN   9059>>ASSIGN   9069>>ASSIGN
      9075>>ASSIGN   9076>>ASSIGN   9078>>ASSIGN   9084>>ASSIGN   9094<<ASSIGN   9094>>ASSIGN   9096>>ASSIGN
      9097>>ASSIGN   9098<<ASSIGN   9098>>ASSIGN   9100>>ASSIGN   9102<<ASSIGN   9119>>ASSIGN   9120<<ASSIGN
      9120>>ASSIGN   9126>>ASSIGN   9127>>ASSIGN   9128>>ASSIGN   9129>>ASSIGN   9130<<ASSIGN   9130>>ASSIGN
      9134>>ASSIGN   9134>>ASSIGN   9135>>ASSIGN   9136>>ASSIGN   9137<<ASSIGN   9137>>ASSIGN   9138>>ASSIGN
      9139<<ASSIGN   9139>>ASSIGN   9160>>ASSIGN   9163>>ASSIGN   9164>>ASSIGN   9165<<ASSIGN   9165>>ASSIGN
      9168>>ASSIGN   9168>>ASSIGN   9169>>ASSIGN   9170<<ASSIGN   9170>>ASSIGN   9175>>ASSIGN   9176<<ASSIGN
      9176>>ASSIGN   9179>>ASSIGN   9180<<ASSIGN   9180>>ASSIGN
QGB_PARAM.CURRENTLY_READING
      4734**DCL      8381>>IF       8384<<ASSIGN   8411<<ASSIGN   8416<<ASSIGN
QGB_PARAM.DVE.DVBYTE
      4716**DCL      8598<<ASSIGN   8637<<ASSIGN   8689<<ASSIGN   8712<<ASSIGN   8736<<ASSIGN   8758<<ASSIGN
      8971<<ASSIGN
QGB_PARAM.DVE.DVBYTE.BP
      4717**DCL      9143>>IF
QGB_PARAM.DVE.DVBYTE.RRR
      4722**DCL      8599>>IF
QGB_PARAM.DVE.DVBYTE.TRANS
      4721**DCL      8786>>IF       8822<<ASSIGN   9016<<ASSIGN   9029>>IF       9143>>IF
QGB_PARAM.DVE.DVBYTE.VFC
      4718**DCL      4719--REDEF    8768>>IF       8777<<ASSIGN   8780>>IF       8817<<ASSIGN   9018<<ASSIGN
      9024>>IF
QGB_PARAM.DVE.EOMCHAR
      4730**DCL      4731--REDEF    8379<<ASSIGN   8811<<ASSIGN
QGB_PARAM.DVE.VFC
      4731**DCL      8770<<ASSIGN   8776<<ASSIGN   8783>>ASSIGN   8818<<ASSIGN   8984<<ASSIGN   9000<<ASSIGN
      9019<<ASSIGN   9027>>ASSIGN
QGB_PARAM.EOM_EOR
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:176  
      4733**DCL      8814<<ASSIGN
QGB_PARAM.ERR
      4682**DCL      8029<<ASSIGN   8065<<ASSIGN   8309<<ASSIGN   8372<<ASSIGN   8380<<ASSIGN   8397<<ASSIGN
      8408>>IF       8884<<ASSIGN   9106<<ASSIGN
QGB_PARAM.FLDID
      4751**DCL      8892<<ASSIGN
QGB_PARAM.IP$
      4736**DCL      5829--IMP-PTR  8597<<ASSIGN   8616>>IF       8618>>ASSIGN   8623>>ASSIGN   8624>>ASSIGN
      8641<<ASSIGN   8654>>IF       8656>>ASSIGN   8661>>ASSIGN   8674>>ASSIGN
QGB_PARAM.KEY$
      4743**DCL      8540<<ASSIGN   8639<<ASSIGN   8692<<ASSIGN   8714<<ASSIGN   8739<<ASSIGN   8760<<ASSIGN
      8897<<ASSIGN   8910<<ASSIGN   9122>>IF       9128>>ASSIGN   9138>>ASSIGN
QGB_PARAM.KEYSZ
      4763**DCL      5711--IMP-SIZ  8567>>ASSIGN   8640<<ASSIGN   8693<<ASSIGN   8715<<ASSIGN   8740<<ASSIGN
      8761<<ASSIGN   8896<<ASSIGN   8909<<ASSIGN   9127>>ASSIGN   9135>>ASSIGN   9138>>ASSIGN   9138>>ASSIGN
      9139>>ASSIGN
QGB_PARAM.KEYTYPE
      4762**DCL      8541<<ASSIGN   8636<<ASSIGN   8688<<ASSIGN   8711<<ASSIGN   8735<<ASSIGN   8757<<ASSIGN
      8893>>IF       8906>>IF       9124>>IF       9132>>IF
QGB_PARAM.MRKTYP
      4740**DCL      8601<<ASSIGN   8638<<ASSIGN   8691<<ASSIGN   8713<<ASSIGN   8738<<ASSIGN   8759<<ASSIGN
QGB_PARAM.MSG$
      4712**DCL      4713--REDEF    8605>>IF       8644>>IF       8694<<ASSIGN   8716<<ASSIGN   8741<<ASSIGN
      8870<<ASSIGN   8875>>ASSIGN   8982<<ASSIGN   8998<<ASSIGN   9014<<ASSIGN
QGB_PARAM.MSGC$
      4713**DCL      8604<<ASSIGN   8643<<ASSIGN   8762<<ASSIGN   8770>>ASSIGN   8771<<ASSIGN   8771>>ASSIGN
      9143>>IF       9147>>ASSIGN   9148>>DOWHILE  9179>>ASSIGN
QGB_PARAM.MSGSZ
      4714**DCL      7630--IMP-SIZ  8572>>IF       8574>>ASSIGN   8603<<ASSIGN   8607<<ASSIGN   8642<<ASSIGN
      8646<<ASSIGN   8695<<ASSIGN   8717<<ASSIGN   8742<<ASSIGN   8763<<ASSIGN   8871<<ASSIGN   8872>>ASSIGN
      8874>>ASSIGN   8876>>ASSIGN   8983<<ASSIGN   8999<<ASSIGN   9015<<ASSIGN   9077>>ASSIGN   9147>>ASSIGN
      9152<<ASSIGN   9152>>ASSIGN   9163>>ASSIGN   9180>>ASSIGN
QGB_PARAM.STR
      4741**DCL      8542<<ASSIGN   8826<<ASSIGN   9078>>ASSIGN   9097>>ASSIGN
QGB_PARAM.UHDR$
      4737**DCL      4738--REDEF    7235--IMP-PTR  7275--IMP-PTR  8414>>IF       8798>>ASSIGN   8799>>IF
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:177  
      8799>>IF       8807>>IF       8810>>IF       8811>>ASSIGN   8813>>ASSIGN   8818>>ASSIGN   8821>>IF
      8826>>ASSIGN   8828>>IF       8836>>ASSIGN   8950<<ASSIGN   8950>>ASSIGN
QGB_PARAM.UHDRC$
      4738**DCL      8400<<ASSIGN
QGB_PARAM.UHDRSZ
      4739**DCL      8401<<ASSIGN   8414>>IF       8799>>IF       8832>>IF
QGB_PARAM.V$
      4742**DCL      5740--IMP-PTR  5760--IMP-PTR  5776--IMP-PTR  5792--IMP-PTR  5808--IMP-PTR  5852--IMP-PTR
      5877--IMP-PTR  5888--IMP-PTR  8523<<ASSIGN   8531>>ASSIGN   8598>>ASSIGN   8612>>ASSIGN   8613>>ASSIGN
      8614>>ASSIGN   8615>>ASSIGN   8634>>IF       8636>>ASSIGN   8637>>ASSIGN   8648>>IF       8668>>IF
      8686>>IF       8688>>ASSIGN   8689>>ASSIGN   8709>>IF       8711>>ASSIGN   8712>>ASSIGN   8723>>ASSIGN
      8724>>ASSIGN   8733>>IF       8735>>ASSIGN   8736>>ASSIGN   8755>>IF       8757>>ASSIGN   8758>>ASSIGN
      9017>>IF       9175>>ASSIGN
QGB_PARAM.VSZ
      4744**DCL      5888--IMP-SIZ  8557>>ASSIGN   8989>>ASSIGN   9005>>ASSIGN   9175>>ASSIGN   9175>>ASSIGN
      9176>>ASSIGN
QGB_PARAMS.BND.PAR2
      4528**DCL      8607>>ASSIGN   8646>>ASSIGN   8693>>ASSIGN   8715>>ASSIGN   8740>>ASSIGN   8761>>ASSIGN
QGB_PARAMS.BND.PAR3
      4530**DCL      8640>>ASSIGN   8763>>ASSIGN   8977>>ASSIGN   8996>>IF
QGB_PARAMS.CPTRS.PAR2$
      4518**DCL      8604>>ASSIGN   8643>>ASSIGN
QGB_PARAMS.CPTRS.PAR3$
      4520**DCL      8762>>ASSIGN
QGB_PARAMS.PTRS
      4503**DCL      4514--REDEF    4525--REDEF
QGB_PARAMS.PTRS.PAR1$
      4505**DCL      8523>>ASSIGN
QGB_PARAMS.PTRS.PAR2$
      4507**DCL      8692>>ASSIGN   8714>>ASSIGN   8739>>ASSIGN   8760>>ASSIGN
QGB_PARAMS.PTRS.PAR3$
      4509**DCL      8597>>ASSIGN   8639>>ASSIGN   8975>>IF       8980>>CALLBLT
QGB_PARAMS.PTRS.PAR4$
      4511**DCL      8641>>ASSIGN
QGB_VDOBYTSIZ
      5083**DCL      8557>>ASSIGN   8798>>ASSIGN   9074>>ASSIGN
PL6.E3A0      #001=QGB$BUFFER_VDO File=QGB$BUFFER_VDO.:E05TSI                    WED 07/30/97 05:18 Page:178  
QGB_VDOVLP_DAT1
      5003**DCL      9168>>ASSIGN   9170--ASSIGN
QGB_VDOVLP_DAT2
      5054**DCL      8574--ASSIGN   9163>>ASSIGN   9165--ASSIGN
QGB_VDOVLP_FLDID
      5126**DCL      8562--ASSIGN   9126>>ASSIGN   9130--ASSIGN
QGB_VDOVLP_KEY
      5178**DCL      8567--ASSIGN   9134>>ASSIGN   9137--ASSIGN
SETUP
      8519**PROC     8102--CALL     8142--CALL     8182--CALL     8222--CALL     8262--CALL     8314--CALL
      8362--CALL     8377--CALL     8444--CALL
TEMPU1
      7921**DCL      7922--REDEF    7923--REDEF    8813<<ASSIGN   8815>>IF       8872<<ASSIGN   8912<<ASSIGN
      8935<<ASSIGN   8935>>ASSIGN   8937>>ASSIGN
TEMPU1S.LOBIT
      7925**DCL      8934>>IF
TL
      5888**DCL      9175<<ASSIGN   9175>>ASSIGN
TMP_SZ
      7928**DCL      8798<<ASSIGN   8799>>IF       8832>>IF       8836>>ASSIGN   8842<<ASSIGN   8842>>ASSIGN
      8885<<ASSIGN   8885>>ASSIGN   8899<<ASSIGN   8899>>ASSIGN   8937<<ASSIGN   8937>>ASSIGN   8950>>ASSIGN
VDO
      5709**DCL      9075<<ASSIGN
VDOSZ
      7913**DCL      5710--IMP-SIZ  9074<<ASSIGN   9075>>ASSIGN   9120>>ASSIGN
VLP$FLDATR.ABSGRPRND
      5831**DCL      8616>>IF       8618>>ASSIGN   8654>>IF       8656>>ASSIGN
VLP$FLDATR.GRPRND
      5829**DCL      8623>>ASSIGN   8661>>ASSIGN
VLP$FLDATR.QLF
      5830**DCL      8624>>ASSIGN   8674>>ASSIGN
