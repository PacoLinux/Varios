VERSION E05

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:1    
        1        1        /*M* CPH$SYM_PUT, CPH$SYM_GET, CPH$SYM_DELETE, CPH$STRING_SUB, CPH$CONTINUE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        /*X*  DMC,DFC   */
        9        9        /**/
       10       10        /*P*    NAME:     CPH$SYM_PUT
       11       11                PURPOSE:  To insert symbols in to the symbol table.
       12       12                          The symbol table uses a linked list to keep
       13       13                          up with the symbols.  Memory is managed through
       14       14                          use of the management routines X$ALLOCATE and
       15       15                          and X$DEALLOCATE. It is expected that MCB has
       16       16                          been set up correctly by the calling routine
       17       17                          to allow use of X$ALLOCATE and X$DEALLOCATE.
       18       18         **
       19       19                INPUT:
       20       20                          X$PARAM.SYM_HEAD$   first item on list
       21       21                          X$PARAM.TEXTC$ (0)  points to string to be inserted
       22       22                          X$PARAM.TEXTC$ (1)  points to associated string
       23       23                          X$PARAM.TYPE        type of information
       24       24                          X$PARAM.VALUE       SBIN WORD value
       25       25                          X$PARAM.SRCH        0 - replace if string exists
       26       26                                              1 - replace if type also matchs
       27       27                                              2 - add to end of list
       28       28         **
       29       29                OUTPUT:
       30       30                          X$PARAM.ERR         error code
       31       31                          X$PARAM.MAP$        points to X$MAP structure
       32       32        */
       33       33        /********************************************************************/
       34       34        CPH$SYM_PUT: PROC (MCB,X$PARAM) ALTRET;
       35       35        /***** Enternal *****/
       36       36    1   DCL X$ALLOCATE ENTRY (1) ALTRET;
       37       37    1   DCL X$DEALLOCATE ENTRY (1) ALTRET;
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:2    
       38       38        /***** Fpts *****/
       39       39        %INCLUDE B_MACROS_C;
       40      150        %INCLUDE XUM_MACRO_C;
       41      177        %INCLUDE CP_SUBS_C;
       42     1094        %INCLUDE CP_PERR_C;
       43     1432        %INCLUDE CP_MACROS_C;
       44     2184        %TEXTC (NAME = X$STRING);
       45     2189        %XUM$MCB (NAME = MCB) ;
       46     2193        %CP$PARAM (NAME=X$PARAM);
       47     2209        %CPH$MAP (NAME=X$MAP);
       48     2220        /***** Ptrs *****/
       49     2221    1   DCL LINK1$ PTR;
       50     2222    1   DCL LINK2$ PTR;
       51     2223    1   DCL TEMP1$ PTR;
       52     2224    1   DCL TEMP2$ PTR;
       53     2225        /***** Words *****/
       54     2226    1   DCL BUF_SIZE UBIN WORD;
       55     2227        /***** Error messages *****/
       56     2228        %ERR_CODE (NAME=E_SYTFULL,MID#=CPH$IBEXMID,CODE#=E$SYTFULL,STCLASS=CONSTANT);
       57     2248        %ERR_CODE (NAME=E_BDSRTYPE,MID#=CPH$IBEXMID,CODE#=E$BDSRTYPE,STCLASS=CONSTANT);
       58     2268        /*E*    ERROR: CPH-E$SYTFULL-0
       59     2269                MESSAGE: Symbol table full. Unable to store %U1
       60     2270                MESSAGE1: Use fewer substitution definitions.
       61     2271                MESSAGE2: May be IBEX problem. Notify system manager.
       62     2272        */
       63     2273        %EJECT;
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:3    
       64     2274    1     X$PARAM.ERR = '0'O;
       65     2275    1     MCB.TYPE=0; /* Bytes */
       66     2276    1     MCB.MIN_SIZE=4;
       67     2277    1     X$PARAM.MAP$ = ADDR(NIL);
       68     2278    1     X$PARAM.ERR = '0'O;
       69     2279    1     BUF_SIZE = X$PARAM.TEXTC$ (0) -> X$STRING.SIZ +
       70     2280    1          X$PARAM.TEXTC$ (1) -> X$STRING.SIZ + 11;
       71     2281    1     IF X$PARAM.SYM_HEAD$ = ADDR (NIL)
       72     2282
       73     2283    1        THEN /* First item on list */
       74     2284    2           DO;
       75     2285    2              MCB.SIZE = BUF_SIZE; /* Number of bytes to allocate */
       76     2286    2              CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_ERR) ;
       77     2287    2              LINK1$ = MCB.ADDRESS$;
       78     2288    2              X$PARAM.SYM_HEAD$ = LINK1$;
       79     2289    2              LINK1$ -> X$MAP.LINK$ = ADDR (NIL) ;
       80     2290    2              TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT) ;
       81     2291    2              GOTO FIXIT;
       82     2292    2           END;
       83     2293        /*
       84     2294             ***** SEARCH...
       85     2295        */
       86     2296    1     LINK1$ = X$PARAM.SYM_HEAD$;
       87     2297    1     LINK2$ = ADDR(NIL);
       88     2298    2     DO CASE (X$PARAM.SRCH);
       89     2299    2      CASE (0); /* replace if already exists */
       90     2300    3        DO WHILE (LINK1$ ~= ADDR(NIL));
       91     2301    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);
       92     2302    3           IF X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
       93     2303    3                TEMP1$ -> X$STRING.TEXT
       94     2304
       95     2305    3              THEN
       96     2306    3                 GOTO FOUND_IT;
       97     2307    3           LINK2$ = LINK1$;
       98     2308    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
       99     2309    3        END;
      100     2310    2      CASE (1); /* delete only if types also match */
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:4    
      101     2311    3        DO WHILE (LINK1$ ~= ADDR(NIL));
      102     2312    3           TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT);
      103     2313    3           IF X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE
      104     2314    3                AND X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      105     2315    3                TEMP1$ -> X$STRING.TEXT
      106     2316
      107     2317    3              THEN
      108     2318    3                 GOTO FOUND_IT;
      109     2319    3           LINK2$ = LINK1$;
      110     2320    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
      111     2321    3        END;
      112     2322    2      CASE  (2); /* add to end of list */
      113     2323    3        DO WHILE (LINK1$ ~= ADDR(NIL));
      114     2324    3           LINK2$ = LINK1$;
      115     2325    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
      116     2326    3        END;
      117     2327    2      CASE (ELSE);
      118     2328    2        X$PARAM.ERR = E_BDSRTYPE;
      119     2329    2        ALTRETURN;
      120     2330    2      END; /* Do case .. End */
      121     2331        /*
      122     2332             ***** if we got here, then the symbol doesn't exist ...
      123     2333        */
      124     2334    1     GOTO NOT_HERE;
      125     2335        /*
      126     2336             ***** possible to reuse space???
      127     2337        */
      128     2338    1   FOUND_IT:
      129     2339    1     TEMP2$ = PINCRC (TEMP1$,TEMP1$ -> X$STRING.SIZ + 1) ;
      130     2340    1     IF TEMP1$ -> X$STRING.SIZ + TEMP2$ -> X$STRING.SIZ >= BUF_SIZE
      131     2341
      132     2342    1        THEN /* reuse the space */
      133     2343    1           GOTO FIXIT;
      134     2344        /*
      135     2345             ***** throw away old space, get new ...
      136     2346        */
      137     2347    1     TEMP1$ = LINK1$ -> X$MAP.LINK$; /* next node */
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:5    
      138     2348    1     MCB.ADDRESS$ = LINK1$;
      139     2349    1     CALL X$DEALLOCATE (MCB) ALTRET(ALLOCATE_ERR);
      140     2350    1     MCB.SIZE = BUF_SIZE; /* number of bytes to allocate */
      141     2351    1     CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_ERR);
      142     2352    1     LINK1$ = MCB.ADDRESS$;
      143     2353        /*
      144     2354             ***** patch the links around the deleted node ...
      145     2355        */
      146     2356    1     IF LINK2$ = ADDR (NIL)
      147     2357
      148     2358    1        THEN /* SYM_HEAD$ -> node */
      149     2359    1           X$PARAM.SYM_HEAD$ = LINK1$;
      150     2360    1        ELSE /* Another node -> node */
      151     2361    1           LINK2$ -> X$MAP.LINK$ = LINK1$;
      152     2362    1     LINK1$ -> X$MAP.LINK$ = TEMP1$; /* next node */
      153     2363    1     TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT);
      154     2364    1     GOTO FIXIT;
      155     2365    1   NOT_HERE:
      156     2366    1     MCB.SIZE = BUF_SIZE; /* Number of bytes to allocate */
      157     2367    1     CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_ERR) ;
      158     2368    1     LINK1$ = MCB.ADDRESS$; /* Ptr to allocated space */
      159     2369    1     LINK1$ -> X$MAP.LINK$ = ADDR (NIL);
      160     2370    1     TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT) ;
      161     2371    1     IF LINK2$ ~= ADDR (NIL)
      162     2372
      163     2373    1        THEN /* LINK2$ -> previous node */
      164     2374    1           LINK2$ -> X$MAP.LINK$ = LINK1$;
      165     2375    1        ELSE /* X$PARAM.SYM_HEAD$ -> previous node */
      166     2376    1           X$PARAM.SYM_HEAD$ -> X$MAP.LINK$ = LINK1$;
      167     2377    1   FIXIT:
      168     2378    1     TEMP1$ -> X$STRING.SIZ = X$PARAM.TEXTC$ (0) -> X$STRING.SIZ;
      169     2379    1     TEMP1$ -> X$STRING.TEXT = X$PARAM.TEXTC$ (0) -> X$STRING.TEXT;
      170     2380    1     TEMP2$ = PINCRC (TEMP1$,TEMP1$ -> X$STRING.SIZ + 1) ;
      171     2381    1     TEMP2$ -> X$STRING.SIZ = X$PARAM.TEXTC$ (1) -> X$STRING.SIZ;
      172     2382    1     LINK1$ -> X$MAP.TYPE = X$PARAM.TYPE;
      173     2383    1     LINK1$ -> X$MAP.VALUE = X$PARAM.VALUE;
      174     2384    1     IF X$PARAM.TEXTC$ (1) = ADDR(NIL)
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:6    
      175     2385
      176     2386    1        THEN
      177     2387    1           RETURN;
      178     2388    1     IF X$PARAM.TEXTC$ (1) -> X$STRING.SIZ ~= 0
      179     2389
      180     2390    1        THEN /* not a null string */
      181     2391    1           TEMP2$ -> X$STRING.TEXT = X$PARAM.TEXTC$ (1) -> X$STRING.TEXT;
      182     2392    1     RETURN;
      183     2393    1   ALLOCATE_ERR:
      184     2394    1     X$PARAM.ERR = E_SYTFULL;
      185     2395    1     ALTRETURN;
      186     2396    1   END CPH$SYM_PUT;
      187     2397        %EOD;

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:7    
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$SYM_PUT.

   Procedure CPH$SYM_PUT requires 282 words for executable code.
   Procedure CPH$SYM_PUT requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:8    

 Object Unit name= CPH$SYM_PUT                                File name= CPH$SUBR.:E05TOU
 UTS= JUL 29 '97 11:48:15.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  CPH$SYM_PUT
    1   Proc  even  none   282    432  CPH$SYM_PUT
    2  RoData even  none     1      1  CPH$SYM_PUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  CPH$SYM_PUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 X$ALLOCATE
 yes     yes           Std       1 X$DEALLOCATE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:9    


        1        1        /*M* CPH$SYM_PUT, CPH$SYM_GET, CPH$SYM_DELETE, CPH$STRING_SUB, CPH$CONTINUE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**/
        8        8        /*X*  DMC,DFC   */
        9        9        /**/
       10       10        /*P*    NAME:     CPH$SYM_PUT
       11       11                PURPOSE:  To insert symbols in to the symbol table.
       12       12                          The symbol table uses a linked list to keep
       13       13                          up with the symbols.  Memory is managed through
       14       14                          use of the management routines X$ALLOCATE and
       15       15                          and X$DEALLOCATE. It is expected that MCB has
       16       16                          been set up correctly by the calling routine
       17       17                          to allow use of X$ALLOCATE and X$DEALLOCATE.
       18       18         **
       19       19                INPUT:
       20       20                          X$PARAM.SYM_HEAD$   first item on list
       21       21                          X$PARAM.TEXTC$ (0)  points to string to be inserted
       22       22                          X$PARAM.TEXTC$ (1)  points to associated string
       23       23                          X$PARAM.TYPE        type of information
       24       24                          X$PARAM.VALUE       SBIN WORD value
       25       25                          X$PARAM.SRCH        0 - replace if string exists
       26       26                                              1 - replace if type also matchs
       27       27                                              2 - add to end of list
       28       28         **
       29       29                OUTPUT:
       30       30                          X$PARAM.ERR         error code
       31       31                          X$PARAM.MAP$        points to X$MAP structure
       32       32        */
       33       33        /********************************************************************/
       34       34        CPH$SYM_PUT: PROC (MCB,X$PARAM) ALTRET;

     34  1 000000   000000 700200 xent  CPH$SYM_PUT  TSX0  ! X66_AUTO_2
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:10   
         1 000001   000016 000002                    ZERO    14,2

       35       35        /***** Enternal *****/
       36       36    1   DCL X$ALLOCATE ENTRY (1) ALTRET;
       37       37    1   DCL X$DEALLOCATE ENTRY (1) ALTRET;
       38       38        /***** Fpts *****/
       39       39        %INCLUDE B_MACROS_C;
       40      150        %INCLUDE XUM_MACRO_C;
       41      177        %INCLUDE CP_SUBS_C;
       42     1094        %INCLUDE CP_PERR_C;
       43     1432        %INCLUDE CP_MACROS_C;
       44     2184        %TEXTC (NAME = X$STRING);
       45     2189        %XUM$MCB (NAME = MCB) ;
       46     2193        %CP$PARAM (NAME=X$PARAM);
       47     2209        %CPH$MAP (NAME=X$MAP);
       48     2220        /***** Ptrs *****/
       49     2221    1   DCL LINK1$ PTR;
       50     2222    1   DCL LINK2$ PTR;
       51     2223    1   DCL TEMP1$ PTR;
       52     2224    1   DCL TEMP2$ PTR;
       53     2225        /***** Words *****/
       54     2226    1   DCL BUF_SIZE UBIN WORD;
       55     2227        /***** Error messages *****/
       56     2228        %ERR_CODE (NAME=E_SYTFULL,MID#=CPH$IBEXMID,CODE#=E$SYTFULL,STCLASS=CONSTANT);
       57     2248        %ERR_CODE (NAME=E_BDSRTYPE,MID#=CPH$IBEXMID,CODE#=E$BDSRTYPE,STCLASS=CONSTANT);
       58     2268        /*E*    ERROR: CPH-E$SYTFULL-0
       59     2269                MESSAGE: Symbol table full. Unable to store %U1
       60     2270                MESSAGE1: Use fewer substitution definitions.
       61     2271                MESSAGE2: May be IBEX problem. Notify system manager.
       62     2272        */
       63     2273        %EJECT;
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:11   
       64     2274    1     X$PARAM.ERR = '0'O;

   2274  1 000002   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000003   000005 450100                    STZ     5,,PR0

       65     2275    1     MCB.TYPE=0; /* Bytes */

   2275  1 000004   200003 471500                    LDP1    @MCB,,AUTO
         1 000005   100005 450100                    STZ     5,,PR1

       66     2276    1     MCB.MIN_SIZE=4;

   2276  1 000006   000004 235007                    LDA     4,DL
         1 000007   100007 755100                    STA     7,,PR1

       67     2277    1     X$PARAM.MAP$ = ADDR(NIL);

   2277  1 000010   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000011   000006 756100                    STQ     6,,PR0

       68     2278    1     X$PARAM.ERR = '0'O;

   2278  1 000012   000005 450100                    STZ     5,,PR0

       69     2279    1     BUF_SIZE = X$PARAM.TEXTC$ (0) -> X$STRING.SIZ +

   2279  1 000013   000003 473500                    LDP3    3,,PR0
         1 000014   000004 474500                    LDP4    4,,PR0
         1 000015   000100 101500                    MRL     fill='000'O
         1 000016   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000017   200012 000004                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=4
         1 000020   000100 101500                    MRL     fill='000'O
         1 000021   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000022   200013 000004                    ADSC9   BUF_SIZE+2,,AUTO         cn=0,n=4
         1 000023   200013 236100                    LDQ     BUF_SIZE+2,,AUTO
         1 000024   200012 036100                    ADLQ    BUF_SIZE+1,,AUTO
         1 000025   000013 036007                    ADLQ    11,DL
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:12   
         1 000026   200011 756100                    STQ     BUF_SIZE,,AUTO

       70     2280    1          X$PARAM.TEXTC$ (1) -> X$STRING.SIZ + 11;
       71     2281    1     IF X$PARAM.SYM_HEAD$ = ADDR (NIL)

   2281  1 000027   000000 236100                    LDQ     0,,PR0
         1 000030   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000031   000054 601000 1                  TNZ     s:2296

       72     2282
       73     2283    1        THEN /* First item on list */
       74     2284    2           DO;

       75     2285    2              MCB.SIZE = BUF_SIZE; /* Number of bytes to allocate */

   2285  1 000032   200011 235100                    LDA     BUF_SIZE,,AUTO
         1 000033   100006 755100                    STA     6,,PR1

       76     2286    2              CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_ERR) ;

   2286  1 000034   200003 630500                    EPPR0   @MCB,,AUTO
         1 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000036   000000 701000 xent               TSX1    X$ALLOCATE
         1 000037   000426 702000 1                  TSX2    ALLOCATE_ERR

       77     2287    2              LINK1$ = MCB.ADDRESS$;

   2287  1 000040   200003 470500                    LDP0    @MCB,,AUTO
         1 000041   000000 236100                    LDQ     0,,PR0
         1 000042   200005 756100                    STQ     LINK1$,,AUTO

       78     2288    2              X$PARAM.SYM_HEAD$ = LINK1$;

   2288  1 000043   200004 471500                    LDP1    @X$PARAM,,AUTO
         1 000044   100000 756100                    STQ     0,,PR1

       79     2289    2              LINK1$ -> X$MAP.LINK$ = ADDR (NIL) ;
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:13   

   2289  1 000045   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000046   200005 473500                    LDP3    LINK1$,,AUTO
         1 000047   300000 756100                    STQ     0,,PR3

       80     2290    2              TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT) ;

   2290  1 000050   200005 236100                    LDQ     LINK1$,,AUTO
         1 000051   000000 036000 2                  ADLQ    0
         1 000052   200007 756100                    STQ     TEMP1$,,AUTO

       81     2291    2              GOTO FIXIT;

   2291  1 000053   000331 710000 1                  TRA     FIXIT

       82     2292    2           END;
       83     2293        /*
       84     2294             ***** SEARCH...
       85     2295        */
       86     2296    1     LINK1$ = X$PARAM.SYM_HEAD$;

   2296  1 000054   200005 756100                    STQ     LINK1$,,AUTO

       87     2297    1     LINK2$ = ADDR(NIL);

   2297  1 000055   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000056   200006 756100                    STQ     LINK2$,,AUTO

       88     2298    2     DO CASE (X$PARAM.SRCH);

   2298  1 000057   000002 236100                    LDQ     2,,PR0
         1 000060   000033 772000                    QRL     27
         1 000061   000003 116007                    CMPQ    3,DL
         1 000062   000064 602006 1                  TNC     s:2298+5,QL
         1 000063   000201 710000 1                  TRA     s:2328
         1 000064   000067 710000 1                  TRA     s:2300
         1 000065   000123 710000 1                  TRA     s:2311
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:14   
         1 000066   000167 710000 1                  TRA     s:2323

       89     2299    2      CASE (0); /* replace if already exists */

       90     2300    3        DO WHILE (LINK1$ ~= ADDR(NIL));

   2300  1 000067   000117 710000 1                  TRA     s:2309

       91     2301    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);

   2301  1 000070   200005 236100                    LDQ     LINK1$,,AUTO
         1 000071   000000 036000 2                  ADLQ    0
         1 000072   200007 756100                    STQ     TEMP1$,,AUTO

       92     2302    3           IF X$PARAM.TEXTC$(0) -> X$STRING.TEXT =

   2302  1 000073   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000074   000003 471500                    LDP1    3,,PR0
         1 000075   000100 101500                    MRL     fill='000'O
         1 000076   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000077   200012 000002                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=2
         1 000100   200012 220100                    LDX0    BUF_SIZE+1,,AUTO
         1 000101   200007 473500                    LDP3    TEMP1$,,AUTO
         1 000102   000100 101500                    MRL     fill='000'O
         1 000103   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000104   200013 000002                    ADSC9   BUF_SIZE+2,,AUTO         cn=0,n=2
         1 000105   200013 221100                    LDX1    BUF_SIZE+2,,AUTO
         1 000106   040140 106540                    CMPC    fill='040'O
         1 000107   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000110   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         1 000111   000205 600000 1                  TZE     FOUND_IT

       93     2303    3                TEMP1$ -> X$STRING.TEXT
       94     2304
       95     2305    3              THEN
       96     2306    3                 GOTO FOUND_IT;
       97     2307    3           LINK2$ = LINK1$;
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:15   

   2307  1 000112   200005 236100                    LDQ     LINK1$,,AUTO
         1 000113   200006 756100                    STQ     LINK2$,,AUTO

       98     2308    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2308  1 000114   200005 471500                    LDP1    LINK1$,,AUTO
         1 000115   100000 236100                    LDQ     0,,PR1
         1 000116   200005 756100                    STQ     LINK1$,,AUTO

       99     2309    3        END;

   2309  1 000117   200005 236100                    LDQ     LINK1$,,AUTO
         1 000120   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000121   000070 601000 1                  TNZ     s:2301
         1 000122   000204 710000 1                  TRA     s:2334

      100     2310    2      CASE (1); /* delete only if types also match */

      101     2311    3        DO WHILE (LINK1$ ~= ADDR(NIL));

   2311  1 000123   000163 710000 1                  TRA     s:2321

      102     2312    3           TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT);

   2312  1 000124   200005 236100                    LDQ     LINK1$,,AUTO
         1 000125   000000 036000 2                  ADLQ    0
         1 000126   200007 756100                    STQ     TEMP1$,,AUTO

      103     2313    3           IF X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE

   2313  1 000127   200005 470500                    LDP0    LINK1$,,AUTO
         1 000130   000002 236100                    LDQ     2,,PR0
         1 000131   000033 772000                    QRL     27
         1 000132   200012 756100                    STQ     BUF_SIZE+1,,AUTO
         1 000133   200004 471500                    LDP1    @X$PARAM,,AUTO
         1 000134   100002 236100                    LDQ     2,,PR1
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:16   
         1 000135   000022 772000                    QRL     18
         1 000136   000777 376007                    ANQ     511,DL
         1 000137   200012 116100                    CMPQ    BUF_SIZE+1,,AUTO
         1 000140   000157 601000 1                  TNZ     s:2319
         1 000141   100003 473500                    LDP3    3,,PR1
         1 000142   000100 101500                    MRL     fill='000'O
         1 000143   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000144   200013 000002                    ADSC9   BUF_SIZE+2,,AUTO         cn=0,n=2
         1 000145   200013 220100                    LDX0    BUF_SIZE+2,,AUTO
         1 000146   200007 474500                    LDP4    TEMP1$,,AUTO
         1 000147   000100 101500                    MRL     fill='000'O
         1 000150   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000151   200014 000002                    ADSC9   BUF_SIZE+3,,AUTO         cn=0,n=2
         1 000152   200014 221100                    LDX1    BUF_SIZE+3,,AUTO
         1 000153   040140 106540                    CMPC    fill='040'O
         1 000154   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000155   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         1 000156   000205 600000 1                  TZE     FOUND_IT

      104     2314    3                AND X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      105     2315    3                TEMP1$ -> X$STRING.TEXT
      106     2316
      107     2317    3              THEN
      108     2318    3                 GOTO FOUND_IT;
      109     2319    3           LINK2$ = LINK1$;

   2319  1 000157   200005 236100                    LDQ     LINK1$,,AUTO
         1 000160   200006 756100                    STQ     LINK2$,,AUTO

      110     2320    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2320  1 000161   000000 236100                    LDQ     0,,PR0
         1 000162   200005 756100                    STQ     LINK1$,,AUTO

      111     2321    3        END;

   2321  1 000163   200005 236100                    LDQ     LINK1$,,AUTO
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:17   
         1 000164   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000165   000124 601000 1                  TNZ     s:2312
         1 000166   000204 710000 1                  TRA     s:2334

      112     2322    2      CASE  (2); /* add to end of list */

      113     2323    3        DO WHILE (LINK1$ ~= ADDR(NIL));

   2323  1 000167   000175 710000 1                  TRA     s:2326

      114     2324    3           LINK2$ = LINK1$;

   2324  1 000170   200005 236100                    LDQ     LINK1$,,AUTO
         1 000171   200006 756100                    STQ     LINK2$,,AUTO

      115     2325    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2325  1 000172   200005 470500                    LDP0    LINK1$,,AUTO
         1 000173   000000 236100                    LDQ     0,,PR0
         1 000174   200005 756100                    STQ     LINK1$,,AUTO

      116     2326    3        END;

   2326  1 000175   200005 236100                    LDQ     LINK1$,,AUTO
         1 000176   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000177   000170 601000 1                  TNZ     s:2324
         1 000200   000204 710000 1                  TRA     s:2334

      117     2327    2      CASE (ELSE);

      118     2328    2        X$PARAM.ERR = E_BDSRTYPE;

   2328  1 000201   000001 236000 0                  LDQ     E_BDSRTYPE
         1 000202   000005 756100                    STQ     5,,PR0

      119     2329    2        ALTRETURN;

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:18   
   2329  1 000203   000000 702200 xent               TSX2  ! X66_AALT

      120     2330    2      END; /* Do case .. End */

      121     2331        /*
      122     2332             ***** if we got here, then the symbol doesn't exist ...
      123     2333        */
      124     2334    1     GOTO NOT_HERE;

   2334  1 000204   000276 710000 1                  TRA     NOT_HERE

      125     2335        /*
      126     2336             ***** possible to reuse space???
      127     2337        */
      128     2338    1   FOUND_IT:
      129     2339    1     TEMP2$ = PINCRC (TEMP1$,TEMP1$ -> X$STRING.SIZ + 1) ;

   2339  1 000205   200007 470500       FOUND_IT     LDP0    TEMP1$,,AUTO
         1 000206   000100 101500                    MRL     fill='000'O
         1 000207   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000210   200012 000004                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=4
         1 000211   200012 236100                    LDQ     BUF_SIZE+1,,AUTO
         1 000212   000020 736000                    QLS     16
         1 000213   200000 036007                    ADLQ    65536,DL
         1 000214   200007 036100                    ADLQ    TEMP1$,,AUTO
         1 000215   200010 756100                    STQ     TEMP2$,,AUTO

      130     2340    1     IF TEMP1$ -> X$STRING.SIZ + TEMP2$ -> X$STRING.SIZ >= BUF_SIZE

   2340  1 000216   200010 471500                    LDP1    TEMP2$,,AUTO
         1 000217   000100 101500                    MRL     fill='000'O
         1 000220   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000221   200012 000004                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=4
         1 000222   000100 101500                    MRL     fill='000'O
         1 000223   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000224   200013 000004                    ADSC9   BUF_SIZE+2,,AUTO         cn=0,n=4
         1 000225   200013 236100                    LDQ     BUF_SIZE+2,,AUTO
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:19   
         1 000226   200012 036100                    ADLQ    BUF_SIZE+1,,AUTO
         1 000227   200011 116100                    CMPQ    BUF_SIZE,,AUTO
         1 000230   000331 603000 1                  TRC     FIXIT

      131     2341
      132     2342    1        THEN /* reuse the space */
      133     2343    1           GOTO FIXIT;
      134     2344        /*
      135     2345             ***** throw away old space, get new ...
      136     2346        */
      137     2347    1     TEMP1$ = LINK1$ -> X$MAP.LINK$; /* next node */

   2347  1 000231   200005 473500                    LDP3    LINK1$,,AUTO
         1 000232   300000 236100                    LDQ     0,,PR3
         1 000233   200007 756100                    STQ     TEMP1$,,AUTO

      138     2348    1     MCB.ADDRESS$ = LINK1$;

   2348  1 000234   200005 236100                    LDQ     LINK1$,,AUTO
         1 000235   200003 470500                    LDP0    @MCB,,AUTO
         1 000236   000000 756100                    STQ     0,,PR0

      139     2349    1     CALL X$DEALLOCATE (MCB) ALTRET(ALLOCATE_ERR);

   2349  1 000237   200003 630500                    EPPR0   @MCB,,AUTO
         1 000240   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000241   000000 701000 xent               TSX1    X$DEALLOCATE
         1 000242   000426 702000 1                  TSX2    ALLOCATE_ERR

      140     2350    1     MCB.SIZE = BUF_SIZE; /* number of bytes to allocate */

   2350  1 000243   200011 235100                    LDA     BUF_SIZE,,AUTO
         1 000244   200003 470500                    LDP0    @MCB,,AUTO
         1 000245   000006 755100                    STA     6,,PR0

      141     2351    1     CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_ERR);

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:20   
   2351  1 000246   200003 630500                    EPPR0   @MCB,,AUTO
         1 000247   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000250   000000 701000 xent               TSX1    X$ALLOCATE
         1 000251   000426 702000 1                  TSX2    ALLOCATE_ERR

      142     2352    1     LINK1$ = MCB.ADDRESS$;

   2352  1 000252   200003 470500                    LDP0    @MCB,,AUTO
         1 000253   000000 236100                    LDQ     0,,PR0
         1 000254   200005 756100                    STQ     LINK1$,,AUTO

      143     2353        /*
      144     2354             ***** patch the links around the deleted node ...
      145     2355        */
      146     2356    1     IF LINK2$ = ADDR (NIL)

   2356  1 000255   200006 236100                    LDQ     LINK2$,,AUTO
         1 000256   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000257   000264 601000 1                  TNZ     s:2361

      147     2357
      148     2358    1        THEN /* SYM_HEAD$ -> node */
      149     2359    1           X$PARAM.SYM_HEAD$ = LINK1$;

   2359  1 000260   200005 236100                    LDQ     LINK1$,,AUTO
         1 000261   200004 471500                    LDP1    @X$PARAM,,AUTO
         1 000262   100000 756100                    STQ     0,,PR1
         1 000263   000267 710000 1                  TRA     s:2362

      150     2360    1        ELSE /* Another node -> node */
      151     2361    1           LINK2$ -> X$MAP.LINK$ = LINK1$;

   2361  1 000264   200005 236100                    LDQ     LINK1$,,AUTO
         1 000265   200006 471500                    LDP1    LINK2$,,AUTO
         1 000266   100000 756100                    STQ     0,,PR1

      152     2362    1     LINK1$ -> X$MAP.LINK$ = TEMP1$; /* next node */
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:21   

   2362  1 000267   200007 236100                    LDQ     TEMP1$,,AUTO
         1 000270   200005 471500                    LDP1    LINK1$,,AUTO
         1 000271   100000 756100                    STQ     0,,PR1

      153     2363    1     TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT);

   2363  1 000272   200005 236100                    LDQ     LINK1$,,AUTO
         1 000273   000000 036000 2                  ADLQ    0
         1 000274   200007 756100                    STQ     TEMP1$,,AUTO

      154     2364    1     GOTO FIXIT;

   2364  1 000275   000331 710000 1                  TRA     FIXIT

      155     2365    1   NOT_HERE:
      156     2366    1     MCB.SIZE = BUF_SIZE; /* Number of bytes to allocate */

   2366  1 000276   200011 235100       NOT_HERE     LDA     BUF_SIZE,,AUTO
         1 000277   200003 470500                    LDP0    @MCB,,AUTO
         1 000300   000006 755100                    STA     6,,PR0

      157     2367    1     CALL X$ALLOCATE (MCB) ALTRET (ALLOCATE_ERR) ;

   2367  1 000301   200003 630500                    EPPR0   @MCB,,AUTO
         1 000302   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000303   000000 701000 xent               TSX1    X$ALLOCATE
         1 000304   000426 702000 1                  TSX2    ALLOCATE_ERR

      158     2368    1     LINK1$ = MCB.ADDRESS$; /* Ptr to allocated space */

   2368  1 000305   200003 470500                    LDP0    @MCB,,AUTO
         1 000306   000000 236100                    LDQ     0,,PR0
         1 000307   200005 756100                    STQ     LINK1$,,AUTO

      159     2369    1     LINK1$ -> X$MAP.LINK$ = ADDR (NIL);

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:22   
   2369  1 000310   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000311   200005 471500                    LDP1    LINK1$,,AUTO
         1 000312   100000 756100                    STQ     0,,PR1

      160     2370    1     TEMP1$ = ADDR (LINK1$ -> X$MAP.TEXT) ;

   2370  1 000313   200005 236100                    LDQ     LINK1$,,AUTO
         1 000314   000000 036000 2                  ADLQ    0
         1 000315   200007 756100                    STQ     TEMP1$,,AUTO

      161     2371    1     IF LINK2$ ~= ADDR (NIL)

   2371  1 000316   200006 236100                    LDQ     LINK2$,,AUTO
         1 000317   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000320   000325 600000 1                  TZE     s:2376

      162     2372
      163     2373    1        THEN /* LINK2$ -> previous node */
      164     2374    1           LINK2$ -> X$MAP.LINK$ = LINK1$;

   2374  1 000321   200005 236100                    LDQ     LINK1$,,AUTO
         1 000322   200006 473500                    LDP3    LINK2$,,AUTO
         1 000323   300000 756100                    STQ     0,,PR3
         1 000324   000331 710000 1                  TRA     FIXIT

      165     2375    1        ELSE /* X$PARAM.SYM_HEAD$ -> previous node */
      166     2376    1           X$PARAM.SYM_HEAD$ -> X$MAP.LINK$ = LINK1$;

   2376  1 000325   200004 473500                    LDP3    @X$PARAM,,AUTO
         1 000326   300000 474500                    LDP4    0,,PR3
         1 000327   200005 236100                    LDQ     LINK1$,,AUTO
         1 000330   400000 756100                    STQ     0,,PR4

      167     2377    1   FIXIT:
      168     2378    1     TEMP1$ -> X$STRING.SIZ = X$PARAM.TEXTC$ (0) -> X$STRING.SIZ;

   2378  1 000331   200004 470500       FIXIT        LDP0    @X$PARAM,,AUTO
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:23   
         1 000332   000003 471500                    LDP1    3,,PR0
         1 000333   200007 473500                    LDP3    TEMP1$,,AUTO
         1 000334   000100 100500                    MLR     fill='000'O
         1 000335   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000336   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      169     2379    1     TEMP1$ -> X$STRING.TEXT = X$PARAM.TEXTC$ (0) -> X$STRING.TEXT;

   2379  1 000337   000100 101500                    MRL     fill='000'O
         1 000340   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000341   200012 000002                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=2
         1 000342   200012 220100                    LDX0    BUF_SIZE+1,,AUTO
         1 000343   000003 471500                    LDP1    3,,PR0
         1 000344   000100 101500                    MRL     fill='000'O
         1 000345   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000346   200013 000002                    ADSC9   BUF_SIZE+2,,AUTO         cn=0,n=2
         1 000347   200013 221100                    LDX1    BUF_SIZE+2,,AUTO
         1 000350   040140 100540                    MLR     fill='040'O
         1 000351   100000 200011                    ADSC9   0,,PR1                   cn=1,n=*X1
         1 000352   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0

      170     2380    1     TEMP2$ = PINCRC (TEMP1$,TEMP1$ -> X$STRING.SIZ + 1) ;

   2380  1 000353   000100 101500                    MRL     fill='000'O
         1 000354   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000355   200012 000004                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=4
         1 000356   200012 236100                    LDQ     BUF_SIZE+1,,AUTO
         1 000357   000020 736000                    QLS     16
         1 000360   200000 036007                    ADLQ    65536,DL
         1 000361   200007 036100                    ADLQ    TEMP1$,,AUTO
         1 000362   200010 756100                    STQ     TEMP2$,,AUTO

      171     2381    1     TEMP2$ -> X$STRING.SIZ = X$PARAM.TEXTC$ (1) -> X$STRING.SIZ;

   2381  1 000363   000004 471500                    LDP1    4,,PR0
         1 000364   200010 474500                    LDP4    TEMP2$,,AUTO
         1 000365   000100 100500                    MLR     fill='000'O
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:24   
         1 000366   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000367   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

      172     2382    1     LINK1$ -> X$MAP.TYPE = X$PARAM.TYPE;

   2382  1 000370   200005 471500                    LDP1    LINK1$,,AUTO
         1 000371   000002 236100                    LDQ     2,,PR0
         1 000372   000011 736000                    QLS     9
         1 000373   100002 552140                    STBQ    2,'40'O,PR1

      173     2383    1     LINK1$ -> X$MAP.VALUE = X$PARAM.VALUE;

   2383  1 000374   000001 235100                    LDA     1,,PR0
         1 000375   100001 755100                    STA     1,,PR1

      174     2384    1     IF X$PARAM.TEXTC$ (1) = ADDR(NIL)

   2384  1 000376   000004 236100                    LDQ     4,,PR0
         1 000377   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000400   000402 601000 1                  TNZ     s:2388

      175     2385
      176     2386    1        THEN
      177     2387    1           RETURN;

   2387  1 000401   000000 702200 xent               TSX2  ! X66_ARET

      178     2388    1     IF X$PARAM.TEXTC$ (1) -> X$STRING.SIZ ~= 0

   2388  1 000402   000004 475500                    LDP5    4,,PR0
         1 000403   000100 101500                    MRL     fill='000'O
         1 000404   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         1 000405   200012 000004                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=4
         1 000406   200012 236100                    LDQ     BUF_SIZE+1,,AUTO
         1 000407   000000 116003                    CMPQ    0,DU
         1 000410   000425 600000 1                  TZE     s:2392

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:25   
      179     2389
      180     2390    1        THEN /* not a null string */
      181     2391    1           TEMP2$ -> X$STRING.TEXT = X$PARAM.TEXTC$ (1) -> X$STRING.TEXT;

   2391  1 000411   000100 101500                    MRL     fill='000'O
         1 000412   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000413   200012 000002                    ADSC9   BUF_SIZE+1,,AUTO         cn=0,n=2
         1 000414   200012 220100                    LDX0    BUF_SIZE+1,,AUTO
         1 000415   000004 475500                    LDP5    4,,PR0
         1 000416   000100 101500                    MRL     fill='000'O
         1 000417   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         1 000420   200013 000002                    ADSC9   BUF_SIZE+2,,AUTO         cn=0,n=2
         1 000421   200013 221100                    LDX1    BUF_SIZE+2,,AUTO
         1 000422   040140 100540                    MLR     fill='040'O
         1 000423   500000 200011                    ADSC9   0,,PR5                   cn=1,n=*X1
         1 000424   400000 200010                    ADSC9   0,,PR4                   cn=1,n=*X0

      182     2392    1     RETURN;

   2392  1 000425   000000 702200 xent               TSX2  ! X66_ARET

      183     2393    1   ALLOCATE_ERR:
      184     2394    1     X$PARAM.ERR = E_SYTFULL;

   2394  1 000426   000000 236000 0     ALLOCATE_ERR LDQ     E_SYTFULL
         1 000427   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000430   000005 756100                    STQ     5,,PR0

      185     2395    1     ALTRETURN;

   2395  1 000431   000000 702200 xent               TSX2  ! X66_AALT
      186     2396    1   END CPH$SYM_PUT;
      187     2397        %EOD;

PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:26   
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$SYM_PUT.
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:27   

 **** Variables and constants ****

  ****  Section 000 RoData CPH$SYM_PUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 E_BDSRTYPE                 0-0-0/w STRC        r     1 E_SYTFULL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MCB                       4-0-0/w PTR         r     1 @X$PARAM
    11-0-0/w UBIN        r     1 BUF_SIZE                   5-0-0/w PTR         r     1 LINK1$
     6-0-0/w PTR         r     1 LINK2$                    *0-0-0/w STRC(324)   r     1 MCB
     7-0-0/w PTR         r     1 TEMP1$                    10-0-0/w PTR         r     1 TEMP2$
    *0-0-0/w STRC(252)   r     1 X$PARAM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(90)    r     1 X$MAP                      0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure CPH$SYM_PUT requires 282 words for executable code.
   Procedure CPH$SYM_PUT requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:29   
          MINI XREF LISTING

ALLOCATE_ERR
      2394**LABEL    2286--CALLALT  2349--CALLALT  2351--CALLALT  2367--CALLALT
BUF_SIZE
      2226**DCL      2279<<ASSIGN   2285>>ASSIGN   2340>>IF       2350>>ASSIGN   2366>>ASSIGN
E_BDSRTYPE
      2261**DCL      2328>>ASSIGN
E_SYTFULL
      2241**DCL      2394>>ASSIGN
FIXIT
      2378**LABEL    2291--GOTO     2343--GOTO     2364--GOTO
FOUND_IT
      2339**LABEL    2306--GOTO     2318--GOTO
LINK1$
      2221**DCL      2287<<ASSIGN   2288>>ASSIGN   2289>>ASSIGN   2290>>ASSIGN   2296<<ASSIGN   2300>>DOWHILE
      2301>>ASSIGN   2307>>ASSIGN   2308<<ASSIGN   2308>>ASSIGN   2311>>DOWHILE  2312>>ASSIGN   2313>>IF
      2319>>ASSIGN   2320<<ASSIGN   2320>>ASSIGN   2323>>DOWHILE  2324>>ASSIGN   2325<<ASSIGN   2325>>ASSIGN
      2347>>ASSIGN   2348>>ASSIGN   2352<<ASSIGN   2359>>ASSIGN   2361>>ASSIGN   2362>>ASSIGN   2363>>ASSIGN
      2368<<ASSIGN   2369>>ASSIGN   2370>>ASSIGN   2374>>ASSIGN   2376>>ASSIGN   2382>>ASSIGN   2383>>ASSIGN
LINK2$
      2222**DCL      2297<<ASSIGN   2307<<ASSIGN   2319<<ASSIGN   2324<<ASSIGN   2356>>IF       2361>>ASSIGN
      2371>>IF       2374>>ASSIGN
MCB
      2190**DCL        34--PROC     2286<>CALL     2349<>CALL     2351<>CALL     2367<>CALL
MCB.ADDRESS$
      2190**DCL      2287>>ASSIGN   2348<<ASSIGN   2352>>ASSIGN   2368>>ASSIGN
MCB.MIN_SIZE
      2191**DCL      2276<<ASSIGN
MCB.SIZE
      2190**DCL      2285<<ASSIGN   2350<<ASSIGN   2366<<ASSIGN
MCB.TYPE
      2190**DCL      2275<<ASSIGN
NOT_HERE
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:30   
      2366**LABEL    2334--GOTO
TEMP1$
      2223**DCL      2290<<ASSIGN   2301<<ASSIGN   2302>>IF       2302>>IF       2312<<ASSIGN   2313>>IF
      2313>>IF       2339>>ASSIGN   2339>>ASSIGN   2340>>IF       2347<<ASSIGN   2362>>ASSIGN   2363<<ASSIGN
      2370<<ASSIGN   2378>>ASSIGN   2379>>ASSIGN   2379>>ASSIGN   2380>>ASSIGN   2380>>ASSIGN
TEMP2$
      2224**DCL      2339<<ASSIGN   2340>>IF       2380<<ASSIGN   2381>>ASSIGN   2391>>ASSIGN   2391>>ASSIGN
X$ALLOCATE
        36**DCL-ENT  2286--CALL     2351--CALL     2367--CALL
X$DEALLOCATE
        37**DCL-ENT  2349--CALL
X$MAP.LINK$
      2215**DCL      2289<<ASSIGN   2308>>ASSIGN   2320>>ASSIGN   2325>>ASSIGN   2347>>ASSIGN   2361<<ASSIGN
      2362<<ASSIGN   2369<<ASSIGN   2374<<ASSIGN   2376<<ASSIGN
X$MAP.TEXT
      2218**DCL      2290--ASSIGN   2301--ASSIGN   2312--ASSIGN   2363--ASSIGN   2370--ASSIGN
X$MAP.TYPE
      2217**DCL      2313>>IF       2382<<ASSIGN
X$MAP.VALUE
      2216**DCL      2383<<ASSIGN
X$PARAM
      2194**DCL        34--PROC
X$PARAM.ERR
      2201**DCL      2274<<ASSIGN   2278<<ASSIGN   2328<<ASSIGN   2394<<ASSIGN
X$PARAM.MAP$
      2207**DCL      2277<<ASSIGN
X$PARAM.SRCH
      2197**DCL      2298>>DOCASE
X$PARAM.SYM_HEAD$
      2195**DCL      2281>>IF       2288<<ASSIGN   2296>>ASSIGN   2359<<ASSIGN   2376>>ASSIGN
X$PARAM.TEXTC$
      2200**DCL      2279>>ASSIGN   2279>>ASSIGN   2302>>IF       2302>>IF       2313>>IF       2313>>IF
      2378>>ASSIGN   2379>>ASSIGN   2379>>ASSIGN   2381>>ASSIGN   2384>>IF       2388>>IF       2391>>ASSIGN
      2391>>ASSIGN
X$PARAM.TYPE
      2198**DCL      2313>>IF       2382>>ASSIGN
PL6.E3A0      #001=CPH$SYM_PUT File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:31   
X$PARAM.VALUE
      2196**DCL      2383>>ASSIGN
X$STRING.SIZ
      2186**DCL      2187--IMP-SIZ  2279>>ASSIGN   2279>>ASSIGN   2302>>IF       2302>>IF       2313>>IF
      2313>>IF       2339>>ASSIGN   2340>>IF       2340>>IF       2378<<ASSIGN   2378>>ASSIGN   2379>>ASSIGN
      2379>>ASSIGN   2380>>ASSIGN   2381<<ASSIGN   2381>>ASSIGN   2388>>IF       2391>>ASSIGN   2391>>ASSIGN
X$STRING.TEXT
      2187**DCL      2302>>IF       2302>>IF       2313>>IF       2313>>IF       2379<<ASSIGN   2379>>ASSIGN
      2391<<ASSIGN   2391>>ASSIGN

PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:32   
      188        1        /*T***********************************************************/
      189        2        /*T*                                                         */
      190        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      191        4        /*T*                                                         */
      192        5        /*T***********************************************************/
      193        6        CPH$SYM_GET: PROC (MCB,X$PARAM) ALTRET;
      194        7        /********************************************************************/
      195        8        /*P*    NAME:     CPH$SYM_GET
      196        9                PURPOSE:  To find symbols in to the symbol table.
      197       10                          The symbol table uses a linked list to keep
      198       11                          up with the symbols.  Memory is managed through
      199       12                          use of the management routines X$ALLOCATE and
      200       13                          and X$DEALLOCATE. It is expected that MCB has
      201       14                          been set up correctly by the calling routine
      202       15                          to allow use of X$ALLOCATE and X$DEALLOCATE.
      203       16         **
      204       17                INPUT:
      205       18                          X$PARAM.SYM_HEAD$   first item on list
      206       19                          X$PARAM.TEXTC$ (0)  points to string to be found
      207       20                          X$PARAM.TEXTC$ (1)  points to associated string
      208       21                          X$PARAM.TYPE        type of information
      209       22                          X$PARAM.VALUE       SBIN WORD value
      210       23                          X$PARAM.SRCH        0 - find string
      211       24                                            1 - find string with matching type
      212       25                                            2 - return Nth entry
      213       26         **
      214       27                OUTPUT:
      215       28                          X$PARAM.ERR         error code
      216       29                          X$PARAM.MAP$        points to X$MAP structure
      217       30        */
      218       31        /********************************************************************/
      219       32        %INCLUDE B_MACROS_C;
      220      143        %INCLUDE XUM_MACRO_C;
      221      170        %INCLUDE CP_SUBS_C;
      222     1087        %INCLUDE CP_PERR_C;
      223     1425        %INCLUDE CP_MACROS_C;
      224     2177        /***** Fpts *****/
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:33   
      225     2178        %XUM$MCB (NAME = MCB) ;
      226     2182        %CP$PARAM (NAME=X$PARAM);
      227     2198        %CPH$MAP (NAME=X$MAP);
      228     2209        %TEXTC (NAME = X$STRING);
      229     2214        /***** Words *****/
      230     2215    1   DCL INDX UBIN WORD;
      231     2216        /***** Ptrs *****/
      232     2217    1   DCL LINK1$ PTR;
      233     2218    1   DCL LINK2$ PTR;
      234     2219    1   DCL TEMP1$ PTR;
      235     2220    1   DCL TEMP2$ PTR;
      236     2221        /***** Error messages *****/
      237     2222        %ERR_CODE (NAME=E_MSSYM,MID#=CPH$IBEXMID,CODE#=E$MSSYM,STCLASS=CONSTANT);
      238     2242        %ERR_CODE (NAME=E_BDSRTYPE,MID#=CPH$IBEXMID,CODE#=E$BDSRTYPE,STCLASS=CONSTANT);
      239     2262        /*E*    ERROR: CPH-E$MSSYM-0
      240     2263                MESSAGE: Symbol not in table: %U1
      241     2264        */
      242     2265        /*E*    ERROR: CPH-E$BDSRTYPE-0
      243     2266                MESSAGE: Illegal search type
      244     2267        */
      245     2268        /* Go */
      246     2269    1     X$PARAM.ERR = '0'O;
      247     2270        /*
      248     2271             ***** SEARCH...
      249     2272        */
      250     2273    1     LINK1$ = X$PARAM.SYM_HEAD$;
      251     2274    1     LINK2$ = ADDR (NIL);
      252     2275    2     DO CASE (X$PARAM.SRCH);
      253     2276    2      CASE (0); /* return string if it exists */
      254     2277    3        DO WHILE (LINK1$ ~= ADDR(NIL));
      255     2278    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);
      256     2279    3           IF X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      257     2280    3                TEMP1$ -> X$STRING.TEXT
      258     2281
      259     2282    3              THEN
      260     2283    3                 GOTO FOUND_IT;
      261     2284    3           LINK2$ = LINK1$;
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:34   
      262     2285    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
      263     2286    3        END;
      264     2287    2      CASE (1); /* return only if types also match */
      265     2288    3        DO WHILE (LINK1$ ~= ADDR(NIL));
      266     2289    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);
      267     2290    3           IF X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE
      268     2291    3                AND X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      269     2292    3                TEMP1$ -> X$STRING.TEXT
      270     2293
      271     2294    3              THEN
      272     2295    3                 GOTO FOUND_IT;
      273     2296    3           LINK2$ = LINK1$;
      274     2297    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
      275     2298    3        END;
      276     2299    2      CASE (2); /* return nth entry */
      277     2300    2        INDX = 0;
      278     2301    3        DO WHILE (LINK1$ ~= ADDR(NIL));
      279     2302    3           IF INDX = X$PARAM.NUM
      280     2303
      281     2304    3              THEN
      282     2305    4                 DO;
      283     2306    4                    TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);
      284     2307    4                    X$PARAM.TEXTC$(0) = TEMP1$;
      285     2308    4                    GOTO FOUND_IT;
      286     2309    4                 END;
      287     2310    3           LINK2$ = LINK1$;
      288     2311    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
      289     2312    3           INDX = INDX + 1;
      290     2313    3        END;
      291     2314    2      CASE (ELSE);
      292     2315    2        X$PARAM.ERR = E_BDSRTYPE;
      293     2316    2        ALTRETURN;
      294     2317    2      END; /* Do case ... End */
      295     2318        /*
      296     2319             ***** If we got here, then the symbol doesn't exist...
      297     2320        */
      298     2321    1   NO_SYM:
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:35   
      299     2322    1     X$PARAM.ERR = E_MSSYM;
      300     2323    1     ALTRETURN;
      301     2324    1   FOUND_IT:
      302     2325    1     X$PARAM.MAP$ = LINK1$; /* ptr to X$MAP */
      303     2326    1     X$PARAM.TEXTC$ (1) = PINCRC (TEMP1$, TEMP1$ -> X$STRING.SIZ + 1);
      304     2327    1     X$PARAM.VALUE = LINK1$ -> X$MAP.VALUE;
      305     2328    1     X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE;
      306     2329    1   END CPH$SYM_GET;
      307     2330        %EOD;

PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:36   
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$SYM_GET.

   Procedure CPH$SYM_GET requires 130 words for executable code.
   Procedure CPH$SYM_GET requires 14 words of local(AUTO) storage.

PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:37   

 Object Unit name= CPH$SYM_GET                                File name= CPH$SUBR.:E05TOU
 UTS= JUL 29 '97 11:48:26.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  CPH$SYM_GET
    1   Proc  even  none   130    202  CPH$SYM_GET
    2  RoData even  none     1      1  CPH$SYM_GET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  CPH$SYM_GET

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:38   


      188        1        /*T***********************************************************/
      189        2        /*T*                                                         */
      190        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      191        4        /*T*                                                         */
      192        5        /*T***********************************************************/
      193        6        CPH$SYM_GET: PROC (MCB,X$PARAM) ALTRET;

      6  1 000000   000000 700200 xent  CPH$SYM_GET  TSX0  ! X66_AUTO_2
         1 000001   000016 000002                    ZERO    14,2

      194        7        /********************************************************************/
      195        8        /*P*    NAME:     CPH$SYM_GET
      196        9                PURPOSE:  To find symbols in to the symbol table.
      197       10                          The symbol table uses a linked list to keep
      198       11                          up with the symbols.  Memory is managed through
      199       12                          use of the management routines X$ALLOCATE and
      200       13                          and X$DEALLOCATE. It is expected that MCB has
      201       14                          been set up correctly by the calling routine
      202       15                          to allow use of X$ALLOCATE and X$DEALLOCATE.
      203       16         **
      204       17                INPUT:
      205       18                          X$PARAM.SYM_HEAD$   first item on list
      206       19                          X$PARAM.TEXTC$ (0)  points to string to be found
      207       20                          X$PARAM.TEXTC$ (1)  points to associated string
      208       21                          X$PARAM.TYPE        type of information
      209       22                          X$PARAM.VALUE       SBIN WORD value
      210       23                          X$PARAM.SRCH        0 - find string
      211       24                                            1 - find string with matching type
      212       25                                            2 - return Nth entry
      213       26         **
      214       27                OUTPUT:
      215       28                          X$PARAM.ERR         error code
      216       29                          X$PARAM.MAP$        points to X$MAP structure
      217       30        */
      218       31        /********************************************************************/
      219       32        %INCLUDE B_MACROS_C;
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:39   
      220      143        %INCLUDE XUM_MACRO_C;
      221      170        %INCLUDE CP_SUBS_C;
      222     1087        %INCLUDE CP_PERR_C;
      223     1425        %INCLUDE CP_MACROS_C;
      224     2177        /***** Fpts *****/
      225     2178        %XUM$MCB (NAME = MCB) ;
      226     2182        %CP$PARAM (NAME=X$PARAM);
      227     2198        %CPH$MAP (NAME=X$MAP);
      228     2209        %TEXTC (NAME = X$STRING);
      229     2214        /***** Words *****/
      230     2215    1   DCL INDX UBIN WORD;
      231     2216        /***** Ptrs *****/
      232     2217    1   DCL LINK1$ PTR;
      233     2218    1   DCL LINK2$ PTR;
      234     2219    1   DCL TEMP1$ PTR;
      235     2220    1   DCL TEMP2$ PTR;
      236     2221        /***** Error messages *****/
      237     2222        %ERR_CODE (NAME=E_MSSYM,MID#=CPH$IBEXMID,CODE#=E$MSSYM,STCLASS=CONSTANT);
      238     2242        %ERR_CODE (NAME=E_BDSRTYPE,MID#=CPH$IBEXMID,CODE#=E$BDSRTYPE,STCLASS=CONSTANT);
      239     2262        /*E*    ERROR: CPH-E$MSSYM-0
      240     2263                MESSAGE: Symbol not in table: %U1
      241     2264        */
      242     2265        /*E*    ERROR: CPH-E$BDSRTYPE-0
      243     2266                MESSAGE: Illegal search type
      244     2267        */
      245     2268        /* Go */
      246     2269    1     X$PARAM.ERR = '0'O;

   2269  1 000002   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000003   000005 450100                    STZ     5,,PR0

      247     2270        /*
      248     2271             ***** SEARCH...
      249     2272        */
      250     2273    1     LINK1$ = X$PARAM.SYM_HEAD$;

   2273  1 000004   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:40   
         1 000005   200006 756100                    STQ     LINK1$,,AUTO

      251     2274    1     LINK2$ = ADDR (NIL);

   2274  1 000006   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000007   200007 756100                    STQ     LINK2$,,AUTO

      252     2275    2     DO CASE (X$PARAM.SRCH);

   2275  1 000010   000002 236100                    LDQ     2,,PR0
         1 000011   000033 772000                    QRL     27
         1 000012   000003 116007                    CMPQ    3,DL
         1 000013   000015 602006 1                  TNC     s:2275+5,QL
         1 000014   000150 710000 1                  TRA     s:2315
         1 000015   000020 710000 1                  TRA     s:2277
         1 000016   000054 710000 1                  TRA     s:2288
         1 000017   000120 710000 1                  TRA     s:2300

      253     2276    2      CASE (0); /* return string if it exists */

      254     2277    3        DO WHILE (LINK1$ ~= ADDR(NIL));

   2277  1 000020   000050 710000 1                  TRA     s:2286

      255     2278    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);

   2278  1 000021   200006 236100                    LDQ     LINK1$,,AUTO
         1 000022   000000 036000 2                  ADLQ    0
         1 000023   200010 756100                    STQ     TEMP1$,,AUTO

      256     2279    3           IF X$PARAM.TEXTC$(0) -> X$STRING.TEXT =

   2279  1 000024   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000025   000003 471500                    LDP1    3,,PR0
         1 000026   000100 101500                    MRL     fill='000'O
         1 000027   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000030   200012 000002                    ADSC9   TEMP1$+2,,AUTO           cn=0,n=2
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:41   
         1 000031   200012 220100                    LDX0    TEMP1$+2,,AUTO
         1 000032   200010 473500                    LDP3    TEMP1$,,AUTO
         1 000033   000100 101500                    MRL     fill='000'O
         1 000034   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000035   200013 000002                    ADSC9   TEMP1$+3,,AUTO           cn=0,n=2
         1 000036   200013 221100                    LDX1    TEMP1$+3,,AUTO
         1 000037   040140 106540                    CMPC    fill='040'O
         1 000040   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000041   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         1 000042   000157 600000 1                  TZE     FOUND_IT

      257     2280    3                TEMP1$ -> X$STRING.TEXT
      258     2281
      259     2282    3              THEN
      260     2283    3                 GOTO FOUND_IT;
      261     2284    3           LINK2$ = LINK1$;

   2284  1 000043   200006 236100                    LDQ     LINK1$,,AUTO
         1 000044   200007 756100                    STQ     LINK2$,,AUTO

      262     2285    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2285  1 000045   200006 471500                    LDP1    LINK1$,,AUTO
         1 000046   100000 236100                    LDQ     0,,PR1
         1 000047   200006 756100                    STQ     LINK1$,,AUTO

      263     2286    3        END;

   2286  1 000050   200006 236100                    LDQ     LINK1$,,AUTO
         1 000051   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000052   000021 601000 1                  TNZ     s:2278
         1 000053   000153 710000 1                  TRA     NO_SYM

      264     2287    2      CASE (1); /* return only if types also match */

      265     2288    3        DO WHILE (LINK1$ ~= ADDR(NIL));

PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:42   
   2288  1 000054   000114 710000 1                  TRA     s:2298

      266     2289    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);

   2289  1 000055   200006 236100                    LDQ     LINK1$,,AUTO
         1 000056   000000 036000 2                  ADLQ    0
         1 000057   200010 756100                    STQ     TEMP1$,,AUTO

      267     2290    3           IF X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE

   2290  1 000060   200006 470500                    LDP0    LINK1$,,AUTO
         1 000061   000002 236100                    LDQ     2,,PR0
         1 000062   000033 772000                    QRL     27
         1 000063   200012 756100                    STQ     TEMP1$+2,,AUTO
         1 000064   200004 471500                    LDP1    @X$PARAM,,AUTO
         1 000065   100002 236100                    LDQ     2,,PR1
         1 000066   000022 772000                    QRL     18
         1 000067   000777 376007                    ANQ     511,DL
         1 000070   200012 116100                    CMPQ    TEMP1$+2,,AUTO
         1 000071   000110 601000 1                  TNZ     s:2296
         1 000072   100003 473500                    LDP3    3,,PR1
         1 000073   000100 101500                    MRL     fill='000'O
         1 000074   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000075   200013 000002                    ADSC9   TEMP1$+3,,AUTO           cn=0,n=2
         1 000076   200013 220100                    LDX0    TEMP1$+3,,AUTO
         1 000077   200010 474500                    LDP4    TEMP1$,,AUTO
         1 000100   000100 101500                    MRL     fill='000'O
         1 000101   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000102   200014 000002                    ADSC9   TEMP1$+4,,AUTO           cn=0,n=2
         1 000103   200014 221100                    LDX1    TEMP1$+4,,AUTO
         1 000104   040140 106540                    CMPC    fill='040'O
         1 000105   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000106   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         1 000107   000157 600000 1                  TZE     FOUND_IT

      268     2291    3                AND X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      269     2292    3                TEMP1$ -> X$STRING.TEXT
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:43   
      270     2293
      271     2294    3              THEN
      272     2295    3                 GOTO FOUND_IT;
      273     2296    3           LINK2$ = LINK1$;

   2296  1 000110   200006 236100                    LDQ     LINK1$,,AUTO
         1 000111   200007 756100                    STQ     LINK2$,,AUTO

      274     2297    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2297  1 000112   000000 236100                    LDQ     0,,PR0
         1 000113   200006 756100                    STQ     LINK1$,,AUTO

      275     2298    3        END;

   2298  1 000114   200006 236100                    LDQ     LINK1$,,AUTO
         1 000115   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000116   000055 601000 1                  TNZ     s:2289
         1 000117   000153 710000 1                  TRA     NO_SYM

      276     2299    2      CASE (2); /* return nth entry */

      277     2300    2        INDX = 0;

   2300  1 000120   200005 450100                    STZ     INDX,,AUTO

      278     2301    3        DO WHILE (LINK1$ ~= ADDR(NIL));

   2301  1 000121   000144 710000 1                  TRA     s:2313

      279     2302    3           IF INDX = X$PARAM.NUM

   2302  1 000122   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000123   000002 236100                    LDQ     2,,PR0
         1 000124   777777 376007                    ANQ     -1,DL
         1 000125   200005 116100                    CMPQ    INDX,,AUTO
         1 000126   000134 601000 1                  TNZ     s:2310
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:44   

      280     2303
      281     2304    3              THEN
      282     2305    4                 DO;

      283     2306    4                    TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);

   2306  1 000127   200006 236100                    LDQ     LINK1$,,AUTO
         1 000130   000000 036000 2                  ADLQ    0
         1 000131   200010 756100                    STQ     TEMP1$,,AUTO

      284     2307    4                    X$PARAM.TEXTC$(0) = TEMP1$;

   2307  1 000132   000003 756100                    STQ     3,,PR0

      285     2308    4                    GOTO FOUND_IT;

   2308  1 000133   000157 710000 1                  TRA     FOUND_IT

      286     2309    4                 END;
      287     2310    3           LINK2$ = LINK1$;

   2310  1 000134   200006 236100                    LDQ     LINK1$,,AUTO
         1 000135   200007 756100                    STQ     LINK2$,,AUTO

      288     2311    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2311  1 000136   200006 471500                    LDP1    LINK1$,,AUTO
         1 000137   100000 236100                    LDQ     0,,PR1
         1 000140   200006 756100                    STQ     LINK1$,,AUTO

      289     2312    3           INDX = INDX + 1;

   2312  1 000141   200005 235100                    LDA     INDX,,AUTO
         1 000142   000001 035007                    ADLA    1,DL
         1 000143   200005 755100                    STA     INDX,,AUTO

PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:45   
      290     2313    3        END;

   2313  1 000144   200006 236100                    LDQ     LINK1$,,AUTO
         1 000145   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000146   000122 601000 1                  TNZ     s:2302
         1 000147   000153 710000 1                  TRA     NO_SYM

      291     2314    2      CASE (ELSE);

      292     2315    2        X$PARAM.ERR = E_BDSRTYPE;

   2315  1 000150   000001 236000 0                  LDQ     E_BDSRTYPE
         1 000151   000005 756100                    STQ     5,,PR0

      293     2316    2        ALTRETURN;

   2316  1 000152   000000 702200 xent               TSX2  ! X66_AALT

      294     2317    2      END; /* Do case ... End */

      295     2318        /*
      296     2319             ***** If we got here, then the symbol doesn't exist...
      297     2320        */
      298     2321    1   NO_SYM:
      299     2322    1     X$PARAM.ERR = E_MSSYM;

   2322  1 000153   000000 236000 0     NO_SYM       LDQ     E_MSSYM
         1 000154   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000155   000005 756100                    STQ     5,,PR0

      300     2323    1     ALTRETURN;

   2323  1 000156   000000 702200 xent               TSX2  ! X66_AALT

      301     2324    1   FOUND_IT:
      302     2325    1     X$PARAM.MAP$ = LINK1$; /* ptr to X$MAP */

PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:46   
   2325  1 000157   200006 236100       FOUND_IT     LDQ     LINK1$,,AUTO
         1 000160   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000161   000006 756100                    STQ     6,,PR0

      303     2326    1     X$PARAM.TEXTC$ (1) = PINCRC (TEMP1$, TEMP1$ -> X$STRING.SIZ + 1);

   2326  1 000162   200010 471500                    LDP1    TEMP1$,,AUTO
         1 000163   000100 101500                    MRL     fill='000'O
         1 000164   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000165   200012 000004                    ADSC9   TEMP1$+2,,AUTO           cn=0,n=4
         1 000166   200012 236100                    LDQ     TEMP1$+2,,AUTO
         1 000167   000020 736000                    QLS     16
         1 000170   200000 036007                    ADLQ    65536,DL
         1 000171   200010 036100                    ADLQ    TEMP1$,,AUTO
         1 000172   000004 756100                    STQ     4,,PR0

      304     2327    1     X$PARAM.VALUE = LINK1$ -> X$MAP.VALUE;

   2327  1 000173   200006 473500                    LDP3    LINK1$,,AUTO
         1 000174   300001 235100                    LDA     1,,PR3
         1 000175   000001 755100                    STA     1,,PR0

      305     2328    1     X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE;

   2328  1 000176   300002 236100                    LDQ     2,,PR3
         1 000177   000011 772000                    QRL     9
         1 000200   000002 552120                    STBQ    2,'20'O,PR0

      306     2329    1   END CPH$SYM_GET;

   2329  1 000201   000000 702200 xent               TSX2  ! X66_ARET
      307     2330        %EOD;

PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:47   
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$SYM_GET.
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:48   

 **** Variables and constants ****

  ****  Section 000 RoData CPH$SYM_GET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 E_BDSRTYPE                 0-0-0/w STRC        r     1 E_MSSYM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MCB                       4-0-0/w PTR         r     1 @X$PARAM
     5-0-0/w UBIN        r     1 INDX                       6-0-0/w PTR         r     1 LINK1$
     7-0-0/w PTR         r     1 LINK2$                    *0-0-0/w STRC(324)   r     1 MCB
    10-0-0/w PTR         r     1 TEMP1$                    *0-0-0/w STRC(252)   r     1 X$PARAM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(90)    r     1 X$MAP                      0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure CPH$SYM_GET requires 130 words for executable code.
   Procedure CPH$SYM_GET requires 14 words of local(AUTO) storage.
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:49   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:50   
          MINI XREF LISTING

E_BDSRTYPE
      2255**DCL      2315>>ASSIGN
E_MSSYM
      2235**DCL      2322>>ASSIGN
FOUND_IT
      2325**LABEL    2283--GOTO     2295--GOTO     2308--GOTO
INDX
      2215**DCL      2300<<ASSIGN   2302>>IF       2312<<ASSIGN   2312>>ASSIGN
LINK1$
      2217**DCL      2273<<ASSIGN   2277>>DOWHILE  2278>>ASSIGN   2284>>ASSIGN   2285<<ASSIGN   2285>>ASSIGN
      2288>>DOWHILE  2289>>ASSIGN   2290>>IF       2296>>ASSIGN   2297<<ASSIGN   2297>>ASSIGN   2301>>DOWHILE
      2306>>ASSIGN   2310>>ASSIGN   2311<<ASSIGN   2311>>ASSIGN   2325>>ASSIGN   2327>>ASSIGN   2328>>ASSIGN
LINK2$
      2218**DCL      2274<<ASSIGN   2284<<ASSIGN   2296<<ASSIGN   2310<<ASSIGN
MCB
      2179**DCL         6--PROC
TEMP1$
      2219**DCL      2278<<ASSIGN   2279>>IF       2279>>IF       2289<<ASSIGN   2290>>IF       2290>>IF
      2306<<ASSIGN   2307>>ASSIGN   2326>>ASSIGN   2326>>ASSIGN
X$MAP.LINK$
      2204**DCL      2285>>ASSIGN   2297>>ASSIGN   2311>>ASSIGN
X$MAP.TEXT
      2207**DCL      2278--ASSIGN   2289--ASSIGN   2306--ASSIGN
X$MAP.TYPE
      2206**DCL      2290>>IF       2328>>ASSIGN
X$MAP.VALUE
      2205**DCL      2327>>ASSIGN
X$PARAM
      2183**DCL         6--PROC
X$PARAM.ERR
      2190**DCL      2269<<ASSIGN   2315<<ASSIGN   2322<<ASSIGN
X$PARAM.MAP$
PL6.E3A0      #002=CPH$SYM_GET File=CPH$SUBR.:E05TSI                             TUE 07/29/97 11:48 Page:51   
      2196**DCL      2325<<ASSIGN
X$PARAM.NUM
      2188**DCL      2302>>IF
X$PARAM.SRCH
      2186**DCL      2275>>DOCASE
X$PARAM.SYM_HEAD$
      2184**DCL      2273>>ASSIGN
X$PARAM.TEXTC$
      2189**DCL      2279>>IF       2279>>IF       2290>>IF       2290>>IF       2307<<ASSIGN   2326<<ASSIGN
X$PARAM.TYPE
      2187**DCL      2290>>IF       2328<<ASSIGN
X$PARAM.VALUE
      2185**DCL      2327<<ASSIGN
X$STRING.SIZ
      2211**DCL      2212--IMP-SIZ  2279>>IF       2279>>IF       2290>>IF       2290>>IF       2326>>ASSIGN
X$STRING.TEXT
      2212**DCL      2279>>IF       2279>>IF       2290>>IF       2290>>IF

PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:52   
      308        1        /*T***********************************************************/
      309        2        /*T*                                                         */
      310        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      311        4        /*T*                                                         */
      312        5        /*T***********************************************************/
      313        6        CPH$SYM_DELETE: PROC (MCB,X$PARAM) ALTRET;
      314        7        /********************************************************************/
      315        8        /*P*    NAME:     CPH$SYM_DELETE
      316        9                PURPOSE:  To delete symbols in to the symbol table.
      317       10                          The symbol table uses a linked list to keep
      318       11                          up with the symbols.  Memory is managed through
      319       12                          use of the management routines X$ALLOCATE and
      320       13                          and X$DEALLOCATE. It is expected that MCB has
      321       14                          been set up correctly by the calling routine
      322       15                          to allow use of X$ALLOCATE and X$DEALLOCATE.
      323       16         **
      324       17                INPUT:
      325       18                          X$PARAM.SYM_HEAD$   first item on list
      326       19                          X$PARAM.TEXTC$ (0)  points to string to be found
      327       20                          X$PARAM.TEXTC$ (1)  points to associated string
      328       21                          X$PARAM.TYPE        type of information
      329       22                          X$PARAM.VALUE       SBIN WORD value
      330       23                          X$PARAM.SRCH        0 - delete string
      331       24                                            1 - delete string with matching type
      332       25                                            2 - delete all entries
      333       26         **
      334       27                OUTPUT:
      335       28                          X$PARAM.ERR         error code
      336       29                          X$PARAM.MAP$        points to X$MAP structure
      337       30        */
      338       31        /********************************************************************/
      339       32        %INCLUDE B_MACROS_C;
      340      143        %INCLUDE XUM_MACRO_C;
      341      170        %INCLUDE CP_SUBS_C;
      342     1087        %INCLUDE CP_PERR_C;
      343     1425        %INCLUDE CP_MACROS_C;
      344     2177    1   DCL X$DEALLOCATE ENTRY(1) ALTRET;
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:53   
      345     2178        /***** Fpts *****/
      346     2179        %XUM$MCB (NAME = MCB);
      347     2183        %CP$PARAM (NAME=X$PARAM);
      348     2199        %TEXTC (NAME = X$STRING);
      349     2204        %CPH$MAP (NAME=X$MAP);
      350     2215        /***** Words *****/
      351     2216    1   DCL INDX UBIN WORD;
      352     2217        /***** Ptrs *****/
      353     2218    1   DCL LINK1$ PTR;
      354     2219    1   DCL LINK2$ PTR;
      355     2220    1   DCL TEMP1$ PTR;
      356     2221        /***** Error messages *****/
      357     2222        %ERR_CODE (NAME=E_MSSYM,MID#=CPH$IBEXMID,CODE#=E$MSSYM,STCLASS=CONSTANT);
      358     2242        %ERR_CODE (NAME=E_BDSRTYPE,MID#=CPH$IBEXMID,CODE#=E$BDSRTYPE,STCLASS=CONSTANT);
      359     2262        /* Go */
      360     2263    1     X$PARAM.ERR = '0'O;
      361     2264    1     X$PARAM.MAP$ = ADDR(NIL);
      362     2265        /*
      363     2266             ***** SEARCH...
      364     2267        */
      365     2268    1     LINK1$ = X$PARAM.SYM_HEAD$;
      366     2269    1     LINK2$ = ADDR (NIL);
      367     2270    2     DO CASE (X$PARAM.SRCH);
      368     2271    2      CASE (0); /* delete string if it exists */
      369     2272    3        DO WHILE (LINK1$ ~= ADDR(NIL));
      370     2273    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);
      371     2274    3           IF X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      372     2275    3                TEMP1$ -> X$STRING.TEXT
      373     2276
      374     2277    3              THEN
      375     2278    3                 GOTO FOUND_IT;
      376     2279    3           LINK2$ = LINK1$;
      377     2280    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
      378     2281    3        END;
      379     2282    2      CASE (1); /* delete only if types also match */
      380     2283    3        DO WHILE (LINK1$ ~= ADDR(NIL));
      381     2284    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:54   
      382     2285    3           IF X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE
      383     2286    3                AND X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      384     2287    3                TEMP1$ -> X$STRING.TEXT
      385     2288
      386     2289    3              THEN
      387     2290    3                 GOTO FOUND_IT;
      388     2291    3           LINK2$ = LINK1$;
      389     2292    3           LINK1$ = LINK1$ -> X$MAP.LINK$;
      390     2293    3        END;
      391     2294    2      CASE (2); /* delete all entries */
      392     2295    3        DO WHILE (X$PARAM.SYM_HEAD$ ~= ADDR(NIL));
      393     2296    3           MCB.ADDRESS$ = X$PARAM.SYM_HEAD$;
      394     2297    3           X$PARAM.SYM_HEAD$ = X$PARAM.SYM_HEAD$ -> X$MAP.LINK$;
      395     2298    3           CALL X$DEALLOCATE (MCB);
      396     2299    3        END;
      397     2300    2        RETURN;
      398     2301    2      CASE (ELSE);
      399     2302    2     X$PARAM.ERR = E_BDSRTYPE;
      400     2303    2        ALTRETURN;
      401     2304    2      END; /* Do case ... End */
      402     2305        /*
      403     2306          X$PARAM.ERR = E_MSSYM;
      404     2307        */
      405     2308    1   NO_SYM:
      406     2309    1     ALTRETURN;
      407     2310    1   FOUND_IT:
      408     2311    1     IF LINK2$ = ADDR(NIL)
      409     2312
      410     2313    1        THEN /* SYM_HEAD$ -> node */
      411     2314    1           X$PARAM.SYM_HEAD$ = LINK1$ -> X$MAP.LINK$;
      412     2315    1        ELSE /* Another node -> node */
      413     2316    1           LINK2$ -> X$MAP.LINK$ = LINK1$ -> X$MAP.LINK$;
      414     2317    1     MCB.ADDRESS$ = LINK1$;
      415     2318    1     CALL X$DEALLOCATE (MCB);
      416     2319    1     RETURN;
      417     2320    1   END CPH$SYM_DELETE;
      418     2321        %EOD;
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:55   

PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:56   
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$SYM_DELETE.

   Procedure CPH$SYM_DELETE requires 123 words for executable code.
   Procedure CPH$SYM_DELETE requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:57   

 Object Unit name= CPH$SYM_DELETE                             File name= CPH$SUBR.:E05TOU
 UTS= JUL 29 '97 11:48:34.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  CPH$SYM_DELETE
    1   Proc  even  none   123    173  CPH$SYM_DELETE
    2  RoData even  none     1      1  CPH$SYM_DELETE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  CPH$SYM_DELETE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 X$DEALLOCATE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:58   


      308        1        /*T***********************************************************/
      309        2        /*T*                                                         */
      310        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      311        4        /*T*                                                         */
      312        5        /*T***********************************************************/
      313        6        CPH$SYM_DELETE: PROC (MCB,X$PARAM) ALTRET;

      6  1 000000   000000 700200 xent  CPH$SYM_DEL* TSX0  ! X66_AUTO_2
         1 000001   000016 000002                    ZERO    14,2

      314        7        /********************************************************************/
      315        8        /*P*    NAME:     CPH$SYM_DELETE
      316        9                PURPOSE:  To delete symbols in to the symbol table.
      317       10                          The symbol table uses a linked list to keep
      318       11                          up with the symbols.  Memory is managed through
      319       12                          use of the management routines X$ALLOCATE and
      320       13                          and X$DEALLOCATE. It is expected that MCB has
      321       14                          been set up correctly by the calling routine
      322       15                          to allow use of X$ALLOCATE and X$DEALLOCATE.
      323       16         **
      324       17                INPUT:
      325       18                          X$PARAM.SYM_HEAD$   first item on list
      326       19                          X$PARAM.TEXTC$ (0)  points to string to be found
      327       20                          X$PARAM.TEXTC$ (1)  points to associated string
      328       21                          X$PARAM.TYPE        type of information
      329       22                          X$PARAM.VALUE       SBIN WORD value
      330       23                          X$PARAM.SRCH        0 - delete string
      331       24                                            1 - delete string with matching type
      332       25                                            2 - delete all entries
      333       26         **
      334       27                OUTPUT:
      335       28                          X$PARAM.ERR         error code
      336       29                          X$PARAM.MAP$        points to X$MAP structure
      337       30        */
      338       31        /********************************************************************/
      339       32        %INCLUDE B_MACROS_C;
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:59   
      340      143        %INCLUDE XUM_MACRO_C;
      341      170        %INCLUDE CP_SUBS_C;
      342     1087        %INCLUDE CP_PERR_C;
      343     1425        %INCLUDE CP_MACROS_C;
      344     2177    1   DCL X$DEALLOCATE ENTRY(1) ALTRET;
      345     2178        /***** Fpts *****/
      346     2179        %XUM$MCB (NAME = MCB);
      347     2183        %CP$PARAM (NAME=X$PARAM);
      348     2199        %TEXTC (NAME = X$STRING);
      349     2204        %CPH$MAP (NAME=X$MAP);
      350     2215        /***** Words *****/
      351     2216    1   DCL INDX UBIN WORD;
      352     2217        /***** Ptrs *****/
      353     2218    1   DCL LINK1$ PTR;
      354     2219    1   DCL LINK2$ PTR;
      355     2220    1   DCL TEMP1$ PTR;
      356     2221        /***** Error messages *****/
      357     2222        %ERR_CODE (NAME=E_MSSYM,MID#=CPH$IBEXMID,CODE#=E$MSSYM,STCLASS=CONSTANT);
      358     2242        %ERR_CODE (NAME=E_BDSRTYPE,MID#=CPH$IBEXMID,CODE#=E$BDSRTYPE,STCLASS=CONSTANT);
      359     2262        /* Go */
      360     2263    1     X$PARAM.ERR = '0'O;

   2263  1 000002   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000003   000005 450100                    STZ     5,,PR0

      361     2264    1     X$PARAM.MAP$ = ADDR(NIL);

   2264  1 000004   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000005   000006 756100                    STQ     6,,PR0

      362     2265        /*
      363     2266             ***** SEARCH...
      364     2267        */
      365     2268    1     LINK1$ = X$PARAM.SYM_HEAD$;

   2268  1 000006   000000 236100                    LDQ     0,,PR0
         1 000007   200006 756100                    STQ     LINK1$,,AUTO
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:60   

      366     2269    1     LINK2$ = ADDR (NIL);

   2269  1 000010   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000011   200007 756100                    STQ     LINK2$,,AUTO

      367     2270    2     DO CASE (X$PARAM.SRCH);

   2270  1 000012   000002 236100                    LDQ     2,,PR0
         1 000013   000033 772000                    QRL     27
         1 000014   000003 116007                    CMPQ    3,DL
         1 000015   000017 602006 1                  TNC     s:2270+5,QL
         1 000016   000143 710000 1                  TRA     s:2302
         1 000017   000022 710000 1                  TRA     s:2272
         1 000020   000056 710000 1                  TRA     s:2283
         1 000021   000122 710000 1                  TRA     s:2295

      368     2271    2      CASE (0); /* delete string if it exists */

      369     2272    3        DO WHILE (LINK1$ ~= ADDR(NIL));

   2272  1 000022   000052 710000 1                  TRA     s:2281

      370     2273    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);

   2273  1 000023   200006 236100                    LDQ     LINK1$,,AUTO
         1 000024   000000 036000 2                  ADLQ    0
         1 000025   200010 756100                    STQ     TEMP1$,,AUTO

      371     2274    3           IF X$PARAM.TEXTC$(0) -> X$STRING.TEXT =

   2274  1 000026   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000027   000003 471500                    LDP1    3,,PR0
         1 000030   000100 101500                    MRL     fill='000'O
         1 000031   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000032   200012 000002                    ADSC9   TEMP1$+2,,AUTO           cn=0,n=2
         1 000033   200012 220100                    LDX0    TEMP1$+2,,AUTO
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:61   
         1 000034   200010 473500                    LDP3    TEMP1$,,AUTO
         1 000035   000100 101500                    MRL     fill='000'O
         1 000036   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000037   200013 000002                    ADSC9   TEMP1$+3,,AUTO           cn=0,n=2
         1 000040   200013 221100                    LDX1    TEMP1$+3,,AUTO
         1 000041   040140 106540                    CMPC    fill='040'O
         1 000042   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000043   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         1 000044   000147 600000 1                  TZE     FOUND_IT

      372     2275    3                TEMP1$ -> X$STRING.TEXT
      373     2276
      374     2277    3              THEN
      375     2278    3                 GOTO FOUND_IT;
      376     2279    3           LINK2$ = LINK1$;

   2279  1 000045   200006 236100                    LDQ     LINK1$,,AUTO
         1 000046   200007 756100                    STQ     LINK2$,,AUTO

      377     2280    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2280  1 000047   200006 471500                    LDP1    LINK1$,,AUTO
         1 000050   100000 236100                    LDQ     0,,PR1
         1 000051   200006 756100                    STQ     LINK1$,,AUTO

      378     2281    3        END;

   2281  1 000052   200006 236100                    LDQ     LINK1$,,AUTO
         1 000053   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000054   000023 601000 1                  TNZ     s:2273
         1 000055   000146 710000 1                  TRA     NO_SYM

      379     2282    2      CASE (1); /* delete only if types also match */

      380     2283    3        DO WHILE (LINK1$ ~= ADDR(NIL));

   2283  1 000056   000116 710000 1                  TRA     s:2293
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:62   

      381     2284    3           TEMP1$ = ADDR(LINK1$ -> X$MAP.TEXT);

   2284  1 000057   200006 236100                    LDQ     LINK1$,,AUTO
         1 000060   000000 036000 2                  ADLQ    0
         1 000061   200010 756100                    STQ     TEMP1$,,AUTO

      382     2285    3           IF X$PARAM.TYPE = LINK1$ -> X$MAP.TYPE

   2285  1 000062   200006 470500                    LDP0    LINK1$,,AUTO
         1 000063   000002 236100                    LDQ     2,,PR0
         1 000064   000033 772000                    QRL     27
         1 000065   200012 756100                    STQ     TEMP1$+2,,AUTO
         1 000066   200004 471500                    LDP1    @X$PARAM,,AUTO
         1 000067   100002 236100                    LDQ     2,,PR1
         1 000070   000022 772000                    QRL     18
         1 000071   000777 376007                    ANQ     511,DL
         1 000072   200012 116100                    CMPQ    TEMP1$+2,,AUTO
         1 000073   000112 601000 1                  TNZ     s:2291
         1 000074   100003 473500                    LDP3    3,,PR1
         1 000075   000100 101500                    MRL     fill='000'O
         1 000076   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000077   200013 000002                    ADSC9   TEMP1$+3,,AUTO           cn=0,n=2
         1 000100   200013 220100                    LDX0    TEMP1$+3,,AUTO
         1 000101   200010 474500                    LDP4    TEMP1$,,AUTO
         1 000102   000100 101500                    MRL     fill='000'O
         1 000103   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000104   200014 000002                    ADSC9   TEMP1$+4,,AUTO           cn=0,n=2
         1 000105   200014 221100                    LDX1    TEMP1$+4,,AUTO
         1 000106   040140 106540                    CMPC    fill='040'O
         1 000107   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000110   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         1 000111   000147 600000 1                  TZE     FOUND_IT

      383     2286    3                AND X$PARAM.TEXTC$(0) -> X$STRING.TEXT =
      384     2287    3                TEMP1$ -> X$STRING.TEXT
      385     2288
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:63   
      386     2289    3              THEN
      387     2290    3                 GOTO FOUND_IT;
      388     2291    3           LINK2$ = LINK1$;

   2291  1 000112   200006 236100                    LDQ     LINK1$,,AUTO
         1 000113   200007 756100                    STQ     LINK2$,,AUTO

      389     2292    3           LINK1$ = LINK1$ -> X$MAP.LINK$;

   2292  1 000114   000000 236100                    LDQ     0,,PR0
         1 000115   200006 756100                    STQ     LINK1$,,AUTO

      390     2293    3        END;

   2293  1 000116   200006 236100                    LDQ     LINK1$,,AUTO
         1 000117   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000120   000057 601000 1                  TNZ     s:2284
         1 000121   000146 710000 1                  TRA     NO_SYM

      391     2294    2      CASE (2); /* delete all entries */

      392     2295    3        DO WHILE (X$PARAM.SYM_HEAD$ ~= ADDR(NIL));

   2295  1 000122   000136 710000 1                  TRA     s:2299

      393     2296    3           MCB.ADDRESS$ = X$PARAM.SYM_HEAD$;

   2296  1 000123   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000124   000000 236100                    LDQ     0,,PR0
         1 000125   200003 471500                    LDP1    @MCB,,AUTO
         1 000126   100000 756100                    STQ     0,,PR1

      394     2297    3           X$PARAM.SYM_HEAD$ = X$PARAM.SYM_HEAD$ -> X$MAP.LINK$;

   2297  1 000127   000000 473500                    LDP3    0,,PR0
         1 000130   300000 236100                    LDQ     0,,PR3
         1 000131   000000 756100                    STQ     0,,PR0
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:64   

      395     2298    3           CALL X$DEALLOCATE (MCB);

   2298  1 000132   200003 630500                    EPPR0   @MCB,,AUTO
         1 000133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000134   000000 701000 xent               TSX1    X$DEALLOCATE
         1 000135   000000 011000                    NOP     0

      396     2299    3        END;

   2299  1 000136   200004 470500                    LDP0    @X$PARAM,,AUTO
         1 000137   000000 236100                    LDQ     0,,PR0
         1 000140   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000141   000123 601000 1                  TNZ     s:2296

      397     2300    2        RETURN;

   2300  1 000142   000000 702200 xent               TSX2  ! X66_ARET

      398     2301    2      CASE (ELSE);

      399     2302    2     X$PARAM.ERR = E_BDSRTYPE;

   2302  1 000143   000001 236000 0                  LDQ     E_BDSRTYPE
         1 000144   000005 756100                    STQ     5,,PR0

      400     2303    2        ALTRETURN;

   2303  1 000145   000000 702200 xent               TSX2  ! X66_AALT

      401     2304    2      END; /* Do case ... End */

      402     2305        /*
      403     2306          X$PARAM.ERR = E_MSSYM;
      404     2307        */
      405     2308    1   NO_SYM:
      406     2309    1     ALTRETURN;
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:65   

   2309  1 000146   000000 702200 xent  NO_SYM       TSX2  ! X66_AALT

      407     2310    1   FOUND_IT:
      408     2311    1     IF LINK2$ = ADDR(NIL)

   2311  1 000147   200007 236100       FOUND_IT     LDQ     LINK2$,,AUTO
         1 000150   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000151   000157 601000 1                  TNZ     s:2316

      409     2312
      410     2313    1        THEN /* SYM_HEAD$ -> node */
      411     2314    1           X$PARAM.SYM_HEAD$ = LINK1$ -> X$MAP.LINK$;

   2314  1 000152   200006 470500                    LDP0    LINK1$,,AUTO
         1 000153   000000 236100                    LDQ     0,,PR0
         1 000154   200004 471500                    LDP1    @X$PARAM,,AUTO
         1 000155   100000 756100                    STQ     0,,PR1
         1 000156   000163 710000 1                  TRA     s:2317

      412     2315    1        ELSE /* Another node -> node */
      413     2316    1           LINK2$ -> X$MAP.LINK$ = LINK1$ -> X$MAP.LINK$;

   2316  1 000157   200006 470500                    LDP0    LINK1$,,AUTO
         1 000160   000000 236100                    LDQ     0,,PR0
         1 000161   200007 471500                    LDP1    LINK2$,,AUTO
         1 000162   100000 756100                    STQ     0,,PR1

      414     2317    1     MCB.ADDRESS$ = LINK1$;

   2317  1 000163   200006 236100                    LDQ     LINK1$,,AUTO
         1 000164   200003 471500                    LDP1    @MCB,,AUTO
         1 000165   100000 756100                    STQ     0,,PR1

      415     2318    1     CALL X$DEALLOCATE (MCB);

   2318  1 000166   200003 630500                    EPPR0   @MCB,,AUTO
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:66   
         1 000167   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000170   000000 701000 xent               TSX1    X$DEALLOCATE
         1 000171   000000 011000                    NOP     0

      416     2319    1     RETURN;

   2319  1 000172   000000 702200 xent               TSX2  ! X66_ARET
      417     2320    1   END CPH$SYM_DELETE;
      418     2321        %EOD;

PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:67   
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$SYM_DELETE.
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:68   

 **** Variables and constants ****

  ****  Section 000 RoData CPH$SYM_DELETE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 E_BDSRTYPE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MCB                       4-0-0/w PTR         r     1 @X$PARAM
     6-0-0/w PTR         r     1 LINK1$                     7-0-0/w PTR         r     1 LINK2$
    *0-0-0/w STRC(324)   r     1 MCB                       10-0-0/w PTR         r     1 TEMP1$
    *0-0-0/w STRC(252)   r     1 X$PARAM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(90)    r     1 X$MAP                      0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure CPH$SYM_DELETE requires 123 words for executable code.
   Procedure CPH$SYM_DELETE requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:69   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:70   
          MINI XREF LISTING

E_BDSRTYPE
      2255**DCL      2302>>ASSIGN
FOUND_IT
      2311**LABEL    2278--GOTO     2290--GOTO
LINK1$
      2218**DCL      2268<<ASSIGN   2272>>DOWHILE  2273>>ASSIGN   2279>>ASSIGN   2280<<ASSIGN   2280>>ASSIGN
      2283>>DOWHILE  2284>>ASSIGN   2285>>IF       2291>>ASSIGN   2292<<ASSIGN   2292>>ASSIGN   2314>>ASSIGN
      2316>>ASSIGN   2317>>ASSIGN
LINK2$
      2219**DCL      2269<<ASSIGN   2279<<ASSIGN   2291<<ASSIGN   2311>>IF       2316>>ASSIGN
MCB
      2180**DCL         6--PROC     2298<>CALL     2318<>CALL
MCB.ADDRESS$
      2180**DCL      2296<<ASSIGN   2317<<ASSIGN
TEMP1$
      2220**DCL      2273<<ASSIGN   2274>>IF       2274>>IF       2284<<ASSIGN   2285>>IF       2285>>IF
X$DEALLOCATE
      2177**DCL-ENT  2298--CALL     2318--CALL
X$MAP.LINK$
      2210**DCL      2280>>ASSIGN   2292>>ASSIGN   2297>>ASSIGN   2314>>ASSIGN   2316<<ASSIGN   2316>>ASSIGN
X$MAP.TEXT
      2213**DCL      2273--ASSIGN   2284--ASSIGN
X$MAP.TYPE
      2212**DCL      2285>>IF
X$PARAM
      2184**DCL         6--PROC
X$PARAM.ERR
      2191**DCL      2263<<ASSIGN   2302<<ASSIGN
X$PARAM.MAP$
      2197**DCL      2264<<ASSIGN
X$PARAM.SRCH
      2187**DCL      2270>>DOCASE
PL6.E3A0      #003=CPH$SYM_DELETE File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:71   
X$PARAM.SYM_HEAD$
      2185**DCL      2268>>ASSIGN   2295>>DOWHILE  2296>>ASSIGN   2297<<ASSIGN   2297>>ASSIGN   2314<<ASSIGN
X$PARAM.TEXTC$
      2190**DCL      2274>>IF       2274>>IF       2285>>IF       2285>>IF
X$PARAM.TYPE
      2188**DCL      2285>>IF
X$STRING.SIZ
      2201**DCL      2202--IMP-SIZ  2274>>IF       2274>>IF       2285>>IF       2285>>IF
X$STRING.TEXT
      2202**DCL      2274>>IF       2274>>IF       2285>>IF       2285>>IF

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:72   
      419        1        /*T***********************************************************/
      420        2        /*T*                                                         */
      421        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      422        4        /*T*                                                         */
      423        5        /*T***********************************************************/
      424        6        /**********************************************************************/
      425        7        /*P*    NAME:    CPH$STRING_SUB
      426        8                PURPOSE: TO SEARCH THE INPUT STRING FOR MATCHES
      427        9                         WITH A LIST OF SYMBOLS TO BE REPLACED. ONCE
      428       10                         THESE SYMBOLS (AND FIELDS) ARE FOUND, THEIR
      429       11                         REPLACEMENTS ARE SUBSTITUTED INTO THE INPUT STRING.
      430       12        */
      431       13        /**********************************************************************/
      432       14        CPH$STRING_SUB: PROC (SUB$PARAMS);
      433       15        %INCLUDE B_MACROS_C;
      434      126          %INCLUDE CP_6_SUBS;
      435      666          %INCLUDE CP_MACROS_C;
      436     1418          %INCLUDE CP_PERR_C;
      437     1756          %INCLUDE CP_SUBS_C;
      438     2673          %INCLUDE XUM_MACRO_C;
      439     2700          %INCLUDE XU_SUBS_C;
      440     2792        /***** parameters *****/
      441     2793        %SUB$PARAMS (STCLASS=" ");
      442     2814        /***** external routines *****/
      443     2815    1   DCL CPH$SYM_GET ENTRY(2) ALTRET;
      444     2816    1   DCL CPC$WRITEMSGE ENTRY(6);
      445     2817        /***** based variables *****/
      446     2818    1   DCL READBUF CHAR(%CPBUFFSIZE) BASED(READBUF$);
      447     2819        %SET CPBUFFSIZE_MINUS_ONE = %CPBUFFSIZE-1;
      448     2820    1   DCL READBUFA(0:%CPBUFFSIZE_MINUS_ONE) REDEF READBUF UBIN BYTE UNAL;
      449     2821    1   DCL TEMPBUF CHAR(%CPBUFFSIZE) BASED(TEMPBUF$);
      450     2822    1   DCL WRITEBUF CHAR(%CPBUFFSIZE) BASED(WRITEBUF$);
      451     2823        /***** ptr variables *****/
      452     2824    1   DCL READBUF$ PTR AUTO;
      453     2825    1   DCL TEMPBUF$ PTR AUTO;
      454     2826    1   DCL WRITEBUF$ PTR AUTO;
      455     2827        /***** word variables *****/
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:73   
      456     2828    1   DCL START_INDX UBIN WORD AUTO;
      457     2829    1   DCL STR_INDX UBIN WORD AUTO;
      458     2830    1   DCL LOOP_INDX UBIN WORD AUTO;
      459     2831    1   DCL BUF_INDX SBIN WORD AUTO;
      460     2832        /***** bit variables *****/
      461     2833        /***** structures *****/
      462     2834        %TEXTC (NAME = X$STRING);
      463     2839        %XUM$MCB (NAME=X$MCB,STCLASS="BASED(SUB$PARAMS.X$MCB$)");
      464     2843        %CP$PARAM (NAME=X$PARAM,STCLASS="BASED(SUB$PARAMS.X$PARAM$)");
      465     2859        /***** error codes *****/
      466     2860        %ERR_CODE (NAME=E_TRUNREC,MID#=CPH$IBEXMID,CODE#=E$TRUNREC,STCLASS=CONSTANT);
      467     2880        %EJECT;
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:74   
      468     2881    1     READBUF$ = SUB$PARAMS.READBUF$;
      469     2882    1     TEMPBUF$ = SUB$PARAMS.TEMPBUF$;
      470     2883    1     WRITEBUF$ = SUB$PARAMS.WRITEBUF$;
      471     2884    1     IF SUB$PARAMS.BUF_LEN < 0
      472     2885
      473     2886    1        THEN /* no use even looking */
      474     2887    1           RETURN;
      475     2888    1     SUB$PARAMS.SUB_MADE#=%NO#;
      476     2889    1     X$PARAM.SRCH = 2; /* sequential search */
      477     2890        /*
      478     2891             ***** this is the main loop...
      479     2892                   sets up X$PARAM.SYM_HEAD$ for searches
      480     2893                   of online, global and default sub lists...
      481     2894        */
      482     2895    2     DO LOOP_INDX = 0 TO 2;
      483     2896    3        DO CASE (LOOP_INDX);
      484     2897    3         CASE (0); /* Online subs */
      485     2898    3           X$PARAM.SYM_HEAD$=SUB$PARAMS.ONLINE_DEF_HEAD$;
      486     2899    3         CASE (1) ; /* Global subs */
      487     2900    3           IF SUB$PARAMS.NO_GLOBALS#
      488     2901    3              THEN   /* Dont do GLOBAL subs */
      489     2902    3                 X$PARAM.SYM_HEAD$ = ADDR(NIL);
      490     2903    3              ELSE
      491     2904    3                 X$PARAM.SYM_HEAD$=SUB$PARAMS.GLOBAL_DEF_HEAD$;
      492     2905    3         CASE (2); /* Default subs */
      493     2906    3           X$PARAM.SYM_HEAD$=SUB$PARAMS.DEFAULT_DEF_HEAD$;
      494     2907    3         END; /* Do case ... End */
      495     2908    2        X$PARAM.NUM = 0; /* first item in list */
      496     2909        /*
      497     2910             ***** this loop performs all string replacements...
      498     2911                   Scans the input record for matches against
      499     2912                   the list of subs and if found then replaces
      500     2913                   them. IF... a field is sought, then the
      501     2914                   preceeding and following characters are
      502     2915                   checked to see if the character string is
      503     2916                   really a field...
      504     2917        */
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:75   
      505     2918    3        DO WHILE (%YES#); /* exit is by altret from CPH$SYM_GET */
      506     2919    3           START_INDX=0;
      507     2920    3           CALL CPH$SYM_GET (X$MCB,X$PARAM) ALTRET (END_LOOP);
      508     2921    3   CHK:  /* find for next field to be replaced */
      509     2922    3           CALL INDEX (STR_INDX,X$PARAM.TEXTC$ (0)->X$STRING.TEXT,
      510     2923    3                READBUF,START_INDX) ALTRET(NEXT_SYMBOL);
      511     2924        /*
      512     2925             ***** if the left part is a string, then
      513     2926                   automatically replace. dont check boundary chars...
      514     2927        */
      515     2928    3           IF X$PARAM.TYPE = %DSTRING#
      516     2929
      517     2930    3              THEN
      518     2931    3                 GOTO REPLACE_STRING;
      519     2932                /* Check to see if the beginning character is A-Z,0-9,a-z */
      520     2933    3           IF STR_INDX ~=0
      521     2934
      522     2935    3              THEN /* not before first char in record */
      523     2936    4                 DO; /* See if a field or string */
      524     2937    4                    BUF_INDX=STR_INDX-1;
      525     2938    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('A'))
      526     2939    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('Z'))
      527     2940
      528     2941    4                       THEN
      529     2942    4                          GOTO NEXT_FIELD; /* dont substitute */
      530     2943    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('a'))
      531     2944    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('z'))
      532     2945
      533     2946    4                       THEN
      534     2947    4                          GOTO NEXT_FIELD; /* dont substitute */
      535     2948    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('0'))
      536     2949    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('9'))
      537     2950
      538     2951    4                       THEN
      539     2952    4                          GOTO NEXT_FIELD; /* dont substitute */
      540     2953    4                    IF (READBUFA(BUF_INDX)=ASCBIN('$')) /* $ */
      541     2954    4                         OR (READBUFA(BUF_INDX)=ASCBIN('_')) /* _ */
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:76   
      542     2955    4                         OR (READBUFA(BUF_INDX)=ASCBIN('?')) /* ? */
      543     2956    4                         OR (READBUFA(BUF_INDX)=ASCBIN('*')) /* * */
      544     2957    4                         OR (READBUFA(BUF_INDX)=ASCBIN('-')) /* - */
      545     2958    4                         OR (READBUFA(BUF_INDX)=ASCBIN(':')) /* : */
      546     2959
      547     2960    4                       THEN
      548     2961    4                          GOTO NEXT_FIELD; /* dont substitute */
      549     2962    4                 END;
      550     2963                /* Check to see if the ending character is A-Z,0-9,a-z */
      551     2964    3           BUF_INDX=STR_INDX+X$PARAM.TEXTC$(0)->X$STRING.SIZ;
      552     2965    3           IF BUF_INDX <= SUB$PARAMS.BUF_LEN
      553     2966
      554     2967    3              THEN /* not past last char in record */
      555     2968    4                 DO; /* See if a field or string */
      556     2969    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('A'))
      557     2970    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('Z'))
      558     2971
      559     2972    4                       THEN
      560     2973    4                          GOTO NEXT_FIELD; /* dont substitute */
      561     2974    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('a'))
      562     2975    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('z'))
      563     2976
      564     2977    4                       THEN
      565     2978    4                          GOTO NEXT_FIELD; /* dont substitute */
      566     2979    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('0'))
      567     2980    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('9'))
      568     2981
      569     2982    4                       THEN
      570     2983    4                          GOTO NEXT_FIELD; /* dont substitute */
      571     2984    4                    IF (READBUFA(BUF_INDX)=ASCBIN('$')) /* $ */
      572     2985    4                         OR (READBUFA(BUF_INDX)=ASCBIN('_')) /* _ */
      573     2986    4                         OR (READBUFA(BUF_INDX)=ASCBIN('?')) /* ? */
      574     2987    4                         OR (READBUFA(BUF_INDX)=ASCBIN('*')) /* * */
      575     2988    4                         OR (READBUFA(BUF_INDX)=ASCBIN('-')) /* - */
      576     2989    4                         OR (READBUFA(BUF_INDX)=ASCBIN(':')) /* : */
      577     2990
      578     2991    4                       THEN
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:77   
      579     2992    4                          GOTO NEXT_FIELD; /* dont substitute */
      580     2993    4                 END;
      581     2994    3   REPLACE_STRING:
      582     2995        /*
      583     2996             ***** Modify the record length to reflect all substitutions...
      584     2997        */
      585     2998    3           IF STR_INDX + X$PARAM.TEXTC$(0)->X$STRING.SIZ > SUB$PARAMS.BUF_LEN + 1
      586     2999    3             THEN    /* Replacing trailing blanks,  need to count them. */
      587     3000    3               SUB$PARAMS.BUF_LEN = STR_INDX + X$PARAM.TEXTC$(0)->X$STRING.SIZ ;
      588     3001    3           SUB$PARAMS.BUF_LEN = SUB$PARAMS.BUF_LEN + X$PARAM.TEXTC$(1) ->
      589     3002    3                X$STRING.SIZ - X$PARAM.TEXTC$(0) ->X$STRING.SIZ;
      590     3003    3           IF SUB$PARAMS.BUF_LEN > %CPBUFFSIZE
      591     3004
      592     3005    3              THEN
      593     3006    3                 GOTO BUF_XCD;   /* Buffer too long */
      594     3007        /*
      595     3008             ***** Do the actual replacement...
      596     3009        */
      597     3010    3           CALL CONCAT (TEMPBUF,SUBSTR(READBUF,0,STR_INDX),
      598     3011    3                X$PARAM.TEXTC$(1)->X$STRING.TEXT,SUBSTR(
      599     3012    3                READBUF,STR_INDX+X$PARAM.TEXTC$(0)->X$STRING.SIZ));
      600     3013    3           READBUF=TEMPBUF;
      601     3014    3           SUB$PARAMS.SUB_MADE#=%YES#;
      602     3015    3           START_INDX = STR_INDX + X$PARAM.TEXTC$(1) -> X$STRING.SIZ;
      603     3016    3           GOTO CHK; /* look for more than one occurance */
      604     3017    3   NEXT_FIELD:   /* go find next field which may be replaced */
      605     3018    3           START_INDX = STR_INDX + X$PARAM.TEXTC$(0) -> X$STRING.SIZ;
      606     3019    3           GOTO CHK; /* check for more than one occurance */
      607     3020    3   NEXT_SYMBOL:  /* go get next substitution to search for */
      608     3021    3           X$PARAM.NUM = X$PARAM.NUM + 1;
      609     3022    3        END; /* do while ... end */
      610     3023    2   END_LOOP:
      611     3024    2     END; /* do indx = 0 to 2 */
      612     3025    1     RETURN;
      613     3026        /*
      614     3027             ***** Further substitutions would have blown the
      615     3028                   buffer and caused a trap. Scream and abort BATCH/XEQ...
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:78   
      616     3029        */
      617     3030    1   BUF_XCD:
      618     3031    1     CALL CPC$WRITEMSGE (E_TRUNREC);
      619     3032    1     SUB$PARAMS.BATCH_ABORTED# = %YES#;
      620     3033    1     RETURN;
      621     3034    1   END CPH$STRING_SUB;
      622     3035        %EOD;

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:79   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$STRING_SUB.

   Procedure CPH$STRING_SUB requires 370 words for executable code.
   Procedure CPH$STRING_SUB requires 18 words of local(AUTO) storage.

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:80   

 Object Unit name= CPH$STRING_SUB                             File name= CPH$SUBR.:E05TOU
 UTS= JUL 29 '97 11:48:43.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  CPH$STRING_SUB
    1   Proc  even  none   370    562  CPH$STRING_SUB
    2  RoData even  none     1      1  CPH$STRING_SUB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  CPH$STRING_SUB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 CPH$SYM_GET
         yes           Std       6 CPC$WRITEMSGE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_INDEX

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:81   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:82   


      419        1        /*T***********************************************************/
      420        2        /*T*                                                         */
      421        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      422        4        /*T*                                                         */
      423        5        /*T***********************************************************/
      424        6        /**********************************************************************/
      425        7        /*P*    NAME:    CPH$STRING_SUB
      426        8                PURPOSE: TO SEARCH THE INPUT STRING FOR MATCHES
      427        9                         WITH A LIST OF SYMBOLS TO BE REPLACED. ONCE
      428       10                         THESE SYMBOLS (AND FIELDS) ARE FOUND, THEIR
      429       11                         REPLACEMENTS ARE SUBSTITUTED INTO THE INPUT STRING.
      430       12        */
      431       13        /**********************************************************************/
      432       14        CPH$STRING_SUB: PROC (SUB$PARAMS);

     14  1 000000   000000 700200 xent  CPH$STRING_* TSX0  ! X66_AUTO_1
         1 000001   000022 000001                    ZERO    18,1

      433       15        %INCLUDE B_MACROS_C;
      434      126          %INCLUDE CP_6_SUBS;
      435      666          %INCLUDE CP_MACROS_C;
      436     1418          %INCLUDE CP_PERR_C;
      437     1756          %INCLUDE CP_SUBS_C;
      438     2673          %INCLUDE XUM_MACRO_C;
      439     2700          %INCLUDE XU_SUBS_C;
      440     2792        /***** parameters *****/
      441     2793        %SUB$PARAMS (STCLASS=" ");
      442     2814        /***** external routines *****/
      443     2815    1   DCL CPH$SYM_GET ENTRY(2) ALTRET;
      444     2816    1   DCL CPC$WRITEMSGE ENTRY(6);
      445     2817        /***** based variables *****/
      446     2818    1   DCL READBUF CHAR(%CPBUFFSIZE) BASED(READBUF$);
      447     2819        %SET CPBUFFSIZE_MINUS_ONE = %CPBUFFSIZE-1;
      448     2820    1   DCL READBUFA(0:%CPBUFFSIZE_MINUS_ONE) REDEF READBUF UBIN BYTE UNAL;
      449     2821    1   DCL TEMPBUF CHAR(%CPBUFFSIZE) BASED(TEMPBUF$);
      450     2822    1   DCL WRITEBUF CHAR(%CPBUFFSIZE) BASED(WRITEBUF$);
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:83   
      451     2823        /***** ptr variables *****/
      452     2824    1   DCL READBUF$ PTR AUTO;
      453     2825    1   DCL TEMPBUF$ PTR AUTO;
      454     2826    1   DCL WRITEBUF$ PTR AUTO;
      455     2827        /***** word variables *****/
      456     2828    1   DCL START_INDX UBIN WORD AUTO;
      457     2829    1   DCL STR_INDX UBIN WORD AUTO;
      458     2830    1   DCL LOOP_INDX UBIN WORD AUTO;
      459     2831    1   DCL BUF_INDX SBIN WORD AUTO;
      460     2832        /***** bit variables *****/
      461     2833        /***** structures *****/
      462     2834        %TEXTC (NAME = X$STRING);
      463     2839        %XUM$MCB (NAME=X$MCB,STCLASS="BASED(SUB$PARAMS.X$MCB$)");
      464     2843        %CP$PARAM (NAME=X$PARAM,STCLASS="BASED(SUB$PARAMS.X$PARAM$)");
      465     2859        /***** error codes *****/
      466     2860        %ERR_CODE (NAME=E_TRUNREC,MID#=CPH$IBEXMID,CODE#=E$TRUNREC,STCLASS=CONSTANT);
      467     2880        %EJECT;
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:84   
      468     2881    1     READBUF$ = SUB$PARAMS.READBUF$;

   2881  1 000002   200003 470500                    LDP0    @SUB$PARAMS,,AUTO
         1 000003   000004 236100                    LDQ     4,,PR0
         1 000004   200004 756100                    STQ     READBUF$,,AUTO

      469     2882    1     TEMPBUF$ = SUB$PARAMS.TEMPBUF$;

   2882  1 000005   000005 236100                    LDQ     5,,PR0
         1 000006   200005 756100                    STQ     TEMPBUF$,,AUTO

      470     2883    1     WRITEBUF$ = SUB$PARAMS.WRITEBUF$;

   2883  1 000007   000006 236100                    LDQ     6,,PR0
         1 000010   200006 756100                    STQ     WRITEBUF$,,AUTO

      471     2884    1     IF SUB$PARAMS.BUF_LEN < 0

   2884  1 000011   000013 235100                    LDA     11,,PR0
         1 000012   000014 605000 1                  TPL     s:2888

      472     2885
      473     2886    1        THEN /* no use even looking */
      474     2887    1           RETURN;

   2887  1 000013   000000 702200 xent               TSX2  ! X66_ARET

      475     2888    1     SUB$PARAMS.SUB_MADE#=%NO#;

   2888  1 000014   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000015   000015 356100                    ANSQ    13,,PR0

      476     2889    1     X$PARAM.SRCH = 2; /* sequential search */

   2889  1 000016   000012 471500                    LDP1    10,,PR0
         1 000017   002000 236003                    LDQ     1024,DU
         1 000020   100002 552140                    STBQ    2,'40'O,PR1
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:85   

      477     2890        /*
      478     2891             ***** this is the main loop...
      479     2892                   sets up X$PARAM.SYM_HEAD$ for searches
      480     2893                   of online, global and default sub lists...
      481     2894        */
      482     2895    2     DO LOOP_INDX = 0 TO 2;

   2895  1 000021   200011 450100                    STZ     LOOP_INDX,,AUTO

      483     2896    3        DO CASE (LOOP_INDX);

   2896  1 000022   200011 235100                    LDA     LOOP_INDX,,AUTO
         1 000023   000003 115007                    CMPA    3,DL
         1 000024   000026 602005 1                  TNC     s:2896+4,AL
         1 000025   000056 710000 1                  TRA     s:2908
         1 000026   000031 710000 1                  TRA     s:2898
         1 000027   000036 710000 1                  TRA     s:2900
         1 000030   000052 710000 1                  TRA     s:2906

      484     2897    3         CASE (0); /* Online subs */

      485     2898    3           X$PARAM.SYM_HEAD$=SUB$PARAMS.ONLINE_DEF_HEAD$;

   2898  1 000031   200003 470500                    LDP0    @SUB$PARAMS,,AUTO
         1 000032   000012 471500                    LDP1    10,,PR0
         1 000033   000000 236100                    LDQ     0,,PR0
         1 000034   100000 756100                    STQ     0,,PR1
         1 000035   000056 710000 1                  TRA     s:2908

      486     2899    3         CASE (1) ; /* Global subs */

      487     2900    3           IF SUB$PARAMS.NO_GLOBALS#

   2900  1 000036   200003 470500                    LDP0    @SUB$PARAMS,,AUTO
         1 000037   000015 236100                    LDQ     13,,PR0
         1 000040   020000 316003                    CANQ    8192,DU
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:86   
         1 000041   000046 600000 1                  TZE     s:2904

      488     2901    3              THEN   /* Dont do GLOBAL subs */
      489     2902    3                 X$PARAM.SYM_HEAD$ = ADDR(NIL);

   2902  1 000042   000012 471500                    LDP1    10,,PR0
         1 000043   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000044   100000 756100                    STQ     0,,PR1
         1 000045   000056 710000 1                  TRA     s:2908

      490     2903    3              ELSE
      491     2904    3                 X$PARAM.SYM_HEAD$=SUB$PARAMS.GLOBAL_DEF_HEAD$;

   2904  1 000046   000012 471500                    LDP1    10,,PR0
         1 000047   000001 236100                    LDQ     1,,PR0
         1 000050   100000 756100                    STQ     0,,PR1
         1 000051   000056 710000 1                  TRA     s:2908

      492     2905    3         CASE (2); /* Default subs */

      493     2906    3           X$PARAM.SYM_HEAD$=SUB$PARAMS.DEFAULT_DEF_HEAD$;

   2906  1 000052   200003 470500                    LDP0    @SUB$PARAMS,,AUTO
         1 000053   000012 471500                    LDP1    10,,PR0
         1 000054   000003 236100                    LDQ     3,,PR0
         1 000055   100000 756100                    STQ     0,,PR1

      494     2907    3         END; /* Do case ... End */

      495     2908    2        X$PARAM.NUM = 0; /* first item in list */

   2908  1 000056   200003 470500                    LDP0    @SUB$PARAMS,,AUTO
         1 000057   000012 471500                    LDP1    10,,PR0
         1 000060   000000 220003                    LDX0    0,DU
         1 000061   100002 440100                    SXL0    2,,PR1

      496     2909        /*
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:87   
      497     2910             ***** this loop performs all string replacements...
      498     2911                   Scans the input record for matches against
      499     2912                   the list of subs and if found then replaces
      500     2913                   them. IF... a field is sought, then the
      501     2914                   preceeding and following characters are
      502     2915                   checked to see if the character string is
      503     2916                   really a field...
      504     2917        */
      505     2918    3        DO WHILE (%YES#); /* exit is by altret from CPH$SYM_GET */

      506     2919    3           START_INDX=0;

   2919  1 000062   200007 450100                    STZ     START_INDX,,AUTO

      507     2920    3           CALL CPH$SYM_GET (X$MCB,X$PARAM) ALTRET (END_LOOP);

   2920  1 000063   200003 470500                    LDP0    @SUB$PARAMS,,AUTO
         1 000064   000011 471500                    LDP1    9,,PR0
         1 000065   000012 473500                    LDP3    10,,PR0
         1 000066   200015 453500                    STP3    BUF_INDX+3,,AUTO
         1 000067   200014 451500                    STP1    BUF_INDX+2,,AUTO
         1 000070   200014 630500                    EPPR0   BUF_INDX+2,,AUTO
         1 000071   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000072   000000 701000 xent               TSX1    CPH$SYM_GET
         1 000073   000544 702000 1                  TSX2    END_LOOP

      508     2921    3   CHK:  /* find for next field to be replaced */
      509     2922    3           CALL INDEX (STR_INDX,X$PARAM.TEXTC$ (0)->X$STRING.TEXT,

   2922  1 000074   200003 470500       CHK          LDP0    @SUB$PARAMS,,AUTO
         1 000075   000012 471500                    LDP1    10,,PR0
         1 000076   100003 473500                    LDP3    3,,PR1
         1 000077   000100 101500                    MRL     fill='000'O
         1 000100   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000101   200014 000002                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=2
         1 000102   200014 220100                    LDX0    BUF_INDX+2,,AUTO
         1 000103   200010 631500                    EPPR1   STR_INDX,,AUTO
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:88   
         1 000104   000001 221003                    LDX1    1,DU
         1 000105   200015 453500                    STP3    BUF_INDX+3,,AUTO
         1 000106   300000 500511                    A9BD    0,X1,PR3
         1 000107   000000 623010                    EAX3    0,X0
         1 000110   200004 470500                    LDP0    READBUF$,,AUTO
         1 000111   000400 220003                    LDX0    256,DU
         1 000112   200007 236100                    LDQ     START_INDX,,AUTO
         1 000113   000000 701000 xent               TSX1    X66_INDEX
         1 000114   000536 710000 1                  TRA     NEXT_SYMBOL

      510     2923    3                READBUF,START_INDX) ALTRET(NEXT_SYMBOL);
      511     2924        /*
      512     2925             ***** if the left part is a string, then
      513     2926                   automatically replace. dont check boundary chars...
      514     2927        */
      515     2928    3           IF X$PARAM.TYPE = %DSTRING#

   2928  1 000115   200003 471500                    LDP1    @SUB$PARAMS,,AUTO
         1 000116   100012 473500                    LDP3    10,,PR1
         1 000117   300002 236100                    LDQ     2,,PR3
         1 000120   000777 376003                    ANQ     511,DU
         1 000121   000005 116003                    CMPQ    5,DU
         1 000122   000363 600000 1                  TZE     REPLACE_STRING

      516     2929
      517     2930    3              THEN
      518     2931    3                 GOTO REPLACE_STRING;
      519     2932                /* Check to see if the beginning character is A-Z,0-9,a-z */
      520     2933    3           IF STR_INDX ~=0

   2933  1 000123   200010 235100                    LDA     STR_INDX,,AUTO
         1 000124   000237 600000 1                  TZE     s:2964

      521     2934
      522     2935    3              THEN /* not before first char in record */
      523     2936    4                 DO; /* See if a field or string */

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:89   
      524     2937    4                    BUF_INDX=STR_INDX-1;

   2937  1 000125   000001 135007                    SBLA    1,DL
         1 000126   200012 755100                    STA     BUF_INDX,,AUTO

      525     2938    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('A'))

   2938  1 000127   000100 101505                    MRL     fill='000'O
         1 000130   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000131   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000132   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000133   000101 116007                    CMPQ    65,DL
         1 000134   000143 604000 1                  TMI     s:2943
         1 000135   000100 101505                    MRL     fill='000'O
         1 000136   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000137   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000140   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000141   000133 116007                    CMPQ    91,DL
         1 000142   000525 604000 1                  TMI     NEXT_FIELD

      526     2939    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('Z'))
      527     2940
      528     2941    4                       THEN
      529     2942    4                          GOTO NEXT_FIELD; /* dont substitute */
      530     2943    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('a'))

   2943  1 000143   000100 101505                    MRL     fill='000'O
         1 000144   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000145   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000146   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000147   000141 116007                    CMPQ    97,DL
         1 000150   000157 604000 1                  TMI     s:2948
         1 000151   000100 101505                    MRL     fill='000'O
         1 000152   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000153   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000154   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000155   000173 116007                    CMPQ    123,DL
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:90   
         1 000156   000525 604000 1                  TMI     NEXT_FIELD

      531     2944    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('z'))
      532     2945
      533     2946    4                       THEN
      534     2947    4                          GOTO NEXT_FIELD; /* dont substitute */
      535     2948    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('0'))

   2948  1 000157   000100 101505                    MRL     fill='000'O
         1 000160   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000161   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000162   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000163   000060 116007                    CMPQ    48,DL
         1 000164   000173 604000 1                  TMI     s:2953
         1 000165   000100 101505                    MRL     fill='000'O
         1 000166   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000167   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000170   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000171   000072 116007                    CMPQ    58,DL
         1 000172   000525 604000 1                  TMI     NEXT_FIELD

      536     2949    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('9'))
      537     2950
      538     2951    4                       THEN
      539     2952    4                          GOTO NEXT_FIELD; /* dont substitute */
      540     2953    4                    IF (READBUFA(BUF_INDX)=ASCBIN('$')) /* $ */

   2953  1 000173   000100 101505                    MRL     fill='000'O
         1 000174   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000175   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000176   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000177   000044 116007                    CMPQ    36,DL
         1 000200   000525 600000 1                  TZE     NEXT_FIELD
         1 000201   000100 101505                    MRL     fill='000'O
         1 000202   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000203   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000204   200015 236100                    LDQ     BUF_INDX+3,,AUTO
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:91   
         1 000205   000137 116007                    CMPQ    95,DL
         1 000206   000525 600000 1                  TZE     NEXT_FIELD
         1 000207   000100 101505                    MRL     fill='000'O
         1 000210   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000211   200016 000004                    ADSC9   BUF_INDX+4,,AUTO         cn=0,n=4
         1 000212   200016 236100                    LDQ     BUF_INDX+4,,AUTO
         1 000213   000077 116007                    CMPQ    63,DL
         1 000214   000525 600000 1                  TZE     NEXT_FIELD
         1 000215   000100 101505                    MRL     fill='000'O
         1 000216   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000217   200017 000004                    ADSC9   BUF_INDX+5,,AUTO         cn=0,n=4
         1 000220   200017 236100                    LDQ     BUF_INDX+5,,AUTO
         1 000221   000052 116007                    CMPQ    42,DL
         1 000222   000525 600000 1                  TZE     NEXT_FIELD
         1 000223   000100 101505                    MRL     fill='000'O
         1 000224   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000225   200020 000004                    ADSC9   BUF_INDX+6,,AUTO         cn=0,n=4
         1 000226   200020 236100                    LDQ     BUF_INDX+6,,AUTO
         1 000227   000055 116007                    CMPQ    45,DL
         1 000230   000525 600000 1                  TZE     NEXT_FIELD
         1 000231   000100 101505                    MRL     fill='000'O
         1 000232   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000233   200021 000004                    ADSC9   BUF_INDX+7,,AUTO         cn=0,n=4
         1 000234   200021 236100                    LDQ     BUF_INDX+7,,AUTO
         1 000235   000072 116007                    CMPQ    58,DL
         1 000236   000525 600000 1                  TZE     NEXT_FIELD

      541     2954    4                         OR (READBUFA(BUF_INDX)=ASCBIN('_')) /* _ */
      542     2955    4                         OR (READBUFA(BUF_INDX)=ASCBIN('?')) /* ? */
      543     2956    4                         OR (READBUFA(BUF_INDX)=ASCBIN('*')) /* * */
      544     2957    4                         OR (READBUFA(BUF_INDX)=ASCBIN('-')) /* - */
      545     2958    4                         OR (READBUFA(BUF_INDX)=ASCBIN(':')) /* : */
      546     2959
      547     2960    4                       THEN
      548     2961    4                          GOTO NEXT_FIELD; /* dont substitute */
      549     2962    4                 END;

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:92   
      550     2963                /* Check to see if the ending character is A-Z,0-9,a-z */
      551     2964    3           BUF_INDX=STR_INDX+X$PARAM.TEXTC$(0)->X$STRING.SIZ;

   2964  1 000237   100012 473500                    LDP3    10,,PR1
         1 000240   300003 474500                    LDP4    3,,PR3
         1 000241   000100 101500                    MRL     fill='000'O
         1 000242   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000243   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000244   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000245   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000246   200012 756100                    STQ     BUF_INDX,,AUTO

      552     2965    3           IF BUF_INDX <= SUB$PARAMS.BUF_LEN

   2965  1 000247   100013 116100                    CMPQ    11,,PR1
         1 000250   000363 605400 1                  TPNZ    REPLACE_STRING

      553     2966
      554     2967    3              THEN /* not past last char in record */
      555     2968    4                 DO; /* See if a field or string */

      556     2969    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('A'))

   2969  1 000251   000100 101506                    MRL     fill='000'O
         1 000252   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 000253   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000254   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000255   000101 116007                    CMPQ    65,DL
         1 000256   000266 604000 1                  TMI     s:2974
         1 000257   200012 235100                    LDA     BUF_INDX,,AUTO
         1 000260   000100 101505                    MRL     fill='000'O
         1 000261   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000262   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000263   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000264   000133 116007                    CMPQ    91,DL
         1 000265   000525 604000 1                  TMI     NEXT_FIELD

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:93   
      557     2970    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('Z'))
      558     2971
      559     2972    4                       THEN
      560     2973    4                          GOTO NEXT_FIELD; /* dont substitute */
      561     2974    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('a'))

   2974  1 000266   200012 235100                    LDA     BUF_INDX,,AUTO
         1 000267   000100 101505                    MRL     fill='000'O
         1 000270   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000271   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000272   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000273   000141 116007                    CMPQ    97,DL
         1 000274   000303 604000 1                  TMI     s:2979
         1 000275   000100 101505                    MRL     fill='000'O
         1 000276   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000277   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000300   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000301   000173 116007                    CMPQ    123,DL
         1 000302   000525 604000 1                  TMI     NEXT_FIELD

      562     2975    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('z'))
      563     2976
      564     2977    4                       THEN
      565     2978    4                          GOTO NEXT_FIELD; /* dont substitute */
      566     2979    4                    IF (READBUFA(BUF_INDX)>=ASCBIN('0'))

   2979  1 000303   000100 101505                    MRL     fill='000'O
         1 000304   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000305   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000306   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000307   000060 116007                    CMPQ    48,DL
         1 000310   000317 604000 1                  TMI     s:2984
         1 000311   000100 101505                    MRL     fill='000'O
         1 000312   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000313   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000314   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000315   000072 116007                    CMPQ    58,DL
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:94   
         1 000316   000525 604000 1                  TMI     NEXT_FIELD

      567     2980    4                         AND(READBUFA(BUF_INDX)<=ASCBIN('9'))
      568     2981
      569     2982    4                       THEN
      570     2983    4                          GOTO NEXT_FIELD; /* dont substitute */
      571     2984    4                    IF (READBUFA(BUF_INDX)=ASCBIN('$')) /* $ */

   2984  1 000317   000100 101505                    MRL     fill='000'O
         1 000320   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000321   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000322   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000323   000044 116007                    CMPQ    36,DL
         1 000324   000525 600000 1                  TZE     NEXT_FIELD
         1 000325   000100 101505                    MRL     fill='000'O
         1 000326   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000327   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000330   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000331   000137 116007                    CMPQ    95,DL
         1 000332   000525 600000 1                  TZE     NEXT_FIELD
         1 000333   000100 101505                    MRL     fill='000'O
         1 000334   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000335   200016 000004                    ADSC9   BUF_INDX+4,,AUTO         cn=0,n=4
         1 000336   200016 236100                    LDQ     BUF_INDX+4,,AUTO
         1 000337   000077 116007                    CMPQ    63,DL
         1 000340   000525 600000 1                  TZE     NEXT_FIELD
         1 000341   000100 101505                    MRL     fill='000'O
         1 000342   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000343   200017 000004                    ADSC9   BUF_INDX+5,,AUTO         cn=0,n=4
         1 000344   200017 236100                    LDQ     BUF_INDX+5,,AUTO
         1 000345   000052 116007                    CMPQ    42,DL
         1 000346   000525 600000 1                  TZE     NEXT_FIELD
         1 000347   000100 101505                    MRL     fill='000'O
         1 000350   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000351   200020 000004                    ADSC9   BUF_INDX+6,,AUTO         cn=0,n=4
         1 000352   200020 236100                    LDQ     BUF_INDX+6,,AUTO
         1 000353   000055 116007                    CMPQ    45,DL
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:95   
         1 000354   000525 600000 1                  TZE     NEXT_FIELD
         1 000355   000100 101505                    MRL     fill='000'O
         1 000356   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000357   200021 000004                    ADSC9   BUF_INDX+7,,AUTO         cn=0,n=4
         1 000360   200021 236100                    LDQ     BUF_INDX+7,,AUTO
         1 000361   000072 116007                    CMPQ    58,DL
         1 000362   000525 600000 1                  TZE     NEXT_FIELD

      572     2985    4                         OR (READBUFA(BUF_INDX)=ASCBIN('_')) /* _ */
      573     2986    4                         OR (READBUFA(BUF_INDX)=ASCBIN('?')) /* ? */
      574     2987    4                         OR (READBUFA(BUF_INDX)=ASCBIN('*')) /* * */
      575     2988    4                         OR (READBUFA(BUF_INDX)=ASCBIN('-')) /* - */
      576     2989    4                         OR (READBUFA(BUF_INDX)=ASCBIN(':')) /* : */
      577     2990
      578     2991    4                       THEN
      579     2992    4                          GOTO NEXT_FIELD; /* dont substitute */
      580     2993    4                 END;

      581     2994    3   REPLACE_STRING:
      582     2995        /*
      583     2996             ***** Modify the record length to reflect all substitutions...
      584     2997        */
      585     2998    3           IF STR_INDX + X$PARAM.TEXTC$(0)->X$STRING.SIZ > SUB$PARAMS.BUF_LEN + 1

   2998  1 000363   100012 473500       REPLACE_STR* LDP3    10,,PR1
         1 000364   300003 474500                    LDP4    3,,PR3
         1 000365   000100 101500                    MRL     fill='000'O
         1 000366   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000367   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000370   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000371   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000372   100013 235100                    LDA     11,,PR1
         1 000373   000001 035007                    ADLA    1,DL
         1 000374   200015 755100                    STA     BUF_INDX+3,,AUTO
         1 000375   000000 116003                    CMPQ    0,DU
         1 000376   000401 604000 1                  TMI     s:3000
         1 000377   200015 116100                    CMPQ    BUF_INDX+3,,AUTO
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:96   
         1 000400   000411 604400 1                  TMOZ    s:3001

      586     2999    3             THEN    /* Replacing trailing blanks,  need to count them. */
      587     3000    3               SUB$PARAMS.BUF_LEN = STR_INDX + X$PARAM.TEXTC$(0)->X$STRING.SIZ ;

   3000  1 000401   100012 473500                    LDP3    10,,PR1
         1 000402   300003 474500                    LDP4    3,,PR3
         1 000403   000100 101500                    MRL     fill='000'O
         1 000404   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000405   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000406   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000407   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000410   100013 756100                    STQ     11,,PR1

      588     3001    3           SUB$PARAMS.BUF_LEN = SUB$PARAMS.BUF_LEN + X$PARAM.TEXTC$(1) ->

   3001  1 000411   100012 473500                    LDP3    10,,PR1
         1 000412   300004 474500                    LDP4    4,,PR3
         1 000413   000100 101500                    MRL     fill='000'O
         1 000414   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000415   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000416   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000417   100013 036100                    ADLQ    11,,PR1
         1 000420   100012 473500                    LDP3    10,,PR1
         1 000421   300003 474500                    LDP4    3,,PR3
         1 000422   000100 101500                    MRL     fill='000'O
         1 000423   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000424   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000425   200015 136100                    SBLQ    BUF_INDX+3,,AUTO
         1 000426   100013 756100                    STQ     11,,PR1

      589     3002    3                X$STRING.SIZ - X$PARAM.TEXTC$(0) ->X$STRING.SIZ;
      590     3003    3           IF SUB$PARAMS.BUF_LEN > %CPBUFFSIZE

   3003  1 000427   000400 116007                    CMPQ    256,DL
         1 000430   000552 605400 1                  TPNZ    BUF_XCD

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:97   
      591     3004
      592     3005    3              THEN
      593     3006    3                 GOTO BUF_XCD;   /* Buffer too long */
      594     3007        /*
      595     3008             ***** Do the actual replacement...
      596     3009        */
      597     3010    3           CALL CONCAT (TEMPBUF,SUBSTR(READBUF,0,STR_INDX),

   3010  1 000431   100012 473500                    LDP3    10,,PR1
         1 000432   300004 474500                    LDP4    4,,PR3
         1 000433   000100 101500                    MRL     fill='000'O
         1 000434   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000435   200014 000002                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=2
         1 000436   200014 221100                    LDX1    BUF_INDX+2,,AUTO
         1 000437   100012 473500                    LDP3    10,,PR1
         1 000440   300003 475500                    LDP5    3,,PR3
         1 000441   000100 101500                    MRL     fill='000'O
         1 000442   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         1 000443   200015 000004                    ADSC9   BUF_INDX+3,,AUTO         cn=0,n=4
         1 000444   200015 236100                    LDQ     BUF_INDX+3,,AUTO
         1 000445   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000446   200010 722100                    LXL2    STR_INDX,,AUTO
         1 000447   200005 473500                    LDP3    TEMPBUF$,,AUTO
         1 000450   040100 100540                    MLR     fill='040'O
         1 000451   000000 000012                    ADSC9   0,,PR0                   cn=0,n=*X2
         1 000452   300000 000400                    ADSC9   0,,PR3                   cn=0,n=256
         1 000453   200016 756100                    STQ     BUF_INDX+4,,AUTO
         1 000454   200010 236100                    LDQ     STR_INDX,,AUTO
         1 000455   000400 116007                    CMPQ    256,DL
         1 000456   000507 603000 1                  TRC     s:3013
         1 000457   777377 623006                    EAX3    -257,QL
         1 000460   777777 663003                    ERX3    -1,DU
         1 000461   040146 100540                    MLR     fill='040'O
         1 000462   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         1 000463   300000 000013                    ADSC9   0,Q,PR3                  cn=0,n=*X3
         1 000464   000000 636011                    EAQ     0,X1
         1 000465   000022 772000                    QRL     18
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:98   
         1 000466   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000467   000400 116007                    CMPQ    256,DL
         1 000470   000507 603000 1                  TRC     s:3013
         1 000471   200017 756100                    STQ     BUF_INDX+5,,AUTO
         1 000472   000000 636011                    EAQ     0,X1
         1 000473   000022 772000                    QRL     18
         1 000474   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000475   200016 724100                    LXL4    BUF_INDX+4,,AUTO
         1 000476   777377 624014                    EAX4    -257,X4
         1 000477   777777 664003                    ERX4    -1,DU
         1 000500   200017 725100                    LXL5    BUF_INDX+5,,AUTO
         1 000501   777377 625015                    EAX5    -257,X5
         1 000502   777777 665003                    ERX5    -1,DU
         1 000503   200016 235100                    LDA     BUF_INDX+4,,AUTO
         1 000504   040146 100545                    MLR     fill='040'O
         1 000505   000000 000014                    ADSC9   0,A,PR0                  cn=0,n=*X4
         1 000506   300000 000015                    ADSC9   0,Q,PR3                  cn=0,n=*X5

      598     3011    3                X$PARAM.TEXTC$(1)->X$STRING.TEXT,SUBSTR(
      599     3012    3                READBUF,STR_INDX+X$PARAM.TEXTC$(0)->X$STRING.SIZ));
      600     3013    3           READBUF=TEMPBUF;

   3013  1 000507   040100 100500                    MLR     fill='040'O
         1 000510   300000 000400                    ADSC9   0,,PR3                   cn=0,n=256
         1 000511   000000 000400                    ADSC9   0,,PR0                   cn=0,n=256

      601     3014    3           SUB$PARAMS.SUB_MADE#=%YES#;

   3014  1 000512   400000 236003                    LDQ     -131072,DU
         1 000513   100015 256100                    ORSQ    13,,PR1

      602     3015    3           START_INDX = STR_INDX + X$PARAM.TEXTC$(1) -> X$STRING.SIZ;

   3015  1 000514   100012 474500                    LDP4    10,,PR1
         1 000515   400004 475500                    LDP5    4,,PR4
         1 000516   000100 101500                    MRL     fill='000'O
         1 000517   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:99   
         1 000520   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000521   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000522   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000523   200007 756100                    STQ     START_INDX,,AUTO

      603     3016    3           GOTO CHK; /* look for more than one occurance */

   3016  1 000524   000074 710000 1                  TRA     CHK

      604     3017    3   NEXT_FIELD:   /* go find next field which may be replaced */
      605     3018    3           START_INDX = STR_INDX + X$PARAM.TEXTC$(0) -> X$STRING.SIZ;

   3018  1 000525   100012 473500       NEXT_FIELD   LDP3    10,,PR1
         1 000526   300003 474500                    LDP4    3,,PR3
         1 000527   000100 101500                    MRL     fill='000'O
         1 000530   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000531   200014 000004                    ADSC9   BUF_INDX+2,,AUTO         cn=0,n=4
         1 000532   200014 236100                    LDQ     BUF_INDX+2,,AUTO
         1 000533   200010 036100                    ADLQ    STR_INDX,,AUTO
         1 000534   200007 756100                    STQ     START_INDX,,AUTO

      606     3019    3           GOTO CHK; /* check for more than one occurance */

   3019  1 000535   000074 710000 1                  TRA     CHK

      607     3020    3   NEXT_SYMBOL:  /* go get next substitution to search for */
      608     3021    3           X$PARAM.NUM = X$PARAM.NUM + 1;

   3021  1 000536   200003 470500       NEXT_SYMBOL  LDP0    @SUB$PARAMS,,AUTO
         1 000537   000012 471500                    LDP1    10,,PR0
         1 000540   100002 720100                    LXL0    2,,PR1
         1 000541   000001 621010                    EAX1    1,X0
         1 000542   100002 441100                    SXL1    2,,PR1

      609     3022    3        END; /* do while ... end */

   3022  1 000543   000062 710000 1                  TRA     s:2919
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:100  

      610     3023    2   END_LOOP:
      611     3024    2     END; /* do indx = 0 to 2 */

   3024  1 000544   200011 235100       END_LOOP     LDA     LOOP_INDX,,AUTO
         1 000545   000001 035007                    ADLA    1,DL
         1 000546   200011 755100                    STA     LOOP_INDX,,AUTO
         1 000547   000003 115007                    CMPA    3,DL
         1 000550   000022 602000 1                  TNC     s:2896

      612     3025    1     RETURN;

   3025  1 000551   000000 702200 xent               TSX2  ! X66_ARET

      613     3026        /*
      614     3027             ***** Further substitutions would have blown the
      615     3028                   buffer and caused a trap. Scream and abort BATCH/XEQ...
      616     3029        */
      617     3030    1   BUF_XCD:
      618     3031    1     CALL CPC$WRITEMSGE (E_TRUNREC);

   3031  1 000552   000000 630400 2     BUF_XCD      EPPR0   0
         1 000553   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000554   000000 701000 xent               TSX1    CPC$WRITEMSGE
         1 000555   000000 011000                    NOP     0

      619     3032    1     SUB$PARAMS.BATCH_ABORTED# = %YES#;

   3032  1 000556   200003 470500                    LDP0    @SUB$PARAMS,,AUTO
         1 000557   040000 236003                    LDQ     16384,DU
         1 000560   000015 256100                    ORSQ    13,,PR0

      620     3033    1     RETURN;

   3033  1 000561   000000 702200 xent               TSX2  ! X66_ARET
      621     3034    1   END CPH$STRING_SUB;
      622     3035        %EOD;
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:101  

PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:102  
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPH$STRING_SUB.
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:103  

 **** Variables and constants ****

  ****  Section 000 RoData CPH$STRING_SUB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_TRUNREC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SUB$PARAMS               12-0-0/w SBIN        r     1 BUF_INDX
    11-0-0/w UBIN        r     1 LOOP_INDX                  4-0-0/w PTR         r     1 READBUF$
     7-0-0/w UBIN        r     1 START_INDX                10-0-0/w UBIN        r     1 STR_INDX
    *0-0-0/w STRC(473)   r     1 SUB$PARAMS                 5-0-0/w PTR         r     1 TEMPBUF$
     6-0-0/w PTR         r     1 WRITEBUF$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(256)   r     1 READBUF                    0-0-0/c UBIN(9)     r     1 READBUFA(0:255)
     0-0-0/c CHAR(256)   r     1 TEMPBUF                    0-0-0/w STRC(324)   r     1 X$MCB
     0-0-0/w STRC(252)   r     1 X$PARAM                    0-0-0/c ASTR(9)     r     1 X$STRING


   Procedure CPH$STRING_SUB requires 370 words for executable code.
   Procedure CPH$STRING_SUB requires 18 words of local(AUTO) storage.
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:104  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:105  
          MINI XREF LISTING

BUF_INDX
      2831**DCL      2937<<ASSIGN   2938>>IF       2938>>IF       2943>>IF       2943>>IF       2948>>IF
      2948>>IF       2953>>IF       2953>>IF       2953>>IF       2953>>IF       2953>>IF       2953>>IF
      2964<<ASSIGN   2965>>IF       2969>>IF       2969>>IF       2974>>IF       2974>>IF       2979>>IF
      2979>>IF       2984>>IF       2984>>IF       2984>>IF       2984>>IF       2984>>IF       2984>>IF
BUF_XCD
      3031**LABEL    3006--GOTO
CHK
      2922**LABEL    3016--GOTO     3019--GOTO
CPC$WRITEMSGE
      2816**DCL-ENT  3031--CALL
CPH$SYM_GET
      2815**DCL-ENT  2920--CALL
END_LOOP
      3024**LABEL    2920--CALLALT
E_TRUNREC
      2873**DCL      3031<>CALL
LOOP_INDX
      2830**DCL      2895<<DOINDEX  2896>>DOCASE
NEXT_FIELD
      3018**LABEL    2942--GOTO     2947--GOTO     2952--GOTO     2961--GOTO     2973--GOTO     2978--GOTO
      2983--GOTO     2992--GOTO
NEXT_SYMBOL
      3021**LABEL    2922--CALLALT
READBUF
      2818**DCL      2820--REDEF    2922>>CALLBLT  3010>>CALLBLT  3010>>CALLBLT  3013<<ASSIGN
READBUF$
      2824**DCL      2818--IMP-PTR  2820--IMP-PTR  2881<<ASSIGN   2922>>CALLBLT  2938>>IF       2938>>IF
      2943>>IF       2943>>IF       2948>>IF       2948>>IF       2953>>IF       2953>>IF       2953>>IF
      2953>>IF       2953>>IF       2953>>IF       2969>>IF       2969>>IF       2974>>IF       2974>>IF
      2979>>IF       2979>>IF       2984>>IF       2984>>IF       2984>>IF       2984>>IF       2984>>IF
      2984>>IF       3010>>CALLBLT  3010>>CALLBLT  3013>>ASSIGN
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:106  
READBUFA
      2820**DCL      2938>>IF       2938>>IF       2943>>IF       2943>>IF       2948>>IF       2948>>IF
      2953>>IF       2953>>IF       2953>>IF       2953>>IF       2953>>IF       2953>>IF       2969>>IF
      2969>>IF       2974>>IF       2974>>IF       2979>>IF       2979>>IF       2984>>IF       2984>>IF
      2984>>IF       2984>>IF       2984>>IF       2984>>IF
REPLACE_STRING
      2998**LABEL    2931--GOTO
START_INDX
      2828**DCL      2919<<ASSIGN   2922>>CALLBLT  3015<<ASSIGN   3018<<ASSIGN
STR_INDX
      2829**DCL      2922<<CALLBLT  2933>>IF       2937>>ASSIGN   2964>>ASSIGN   2998>>IF       3000>>ASSIGN
      3010>>CALLBLT  3010>>CALLBLT  3015>>ASSIGN   3018>>ASSIGN
SUB$PARAMS
      2794**DCL        14--PROC
SUB$PARAMS.BATCH_ABORTED#
      2811**DCL      3032<<ASSIGN
SUB$PARAMS.BUF_LEN
      2806**DCL      2884>>IF       2965>>IF       2998>>IF       3000<<ASSIGN   3001<<ASSIGN   3001>>ASSIGN
      3003>>IF
SUB$PARAMS.DEFAULT_DEF_HEAD$
      2798**DCL      2906>>ASSIGN
SUB$PARAMS.GLOBAL_DEF_HEAD$
      2796**DCL      2904>>ASSIGN
SUB$PARAMS.NO_GLOBALS#
      2812**DCL      2900>>IF
SUB$PARAMS.ONLINE_DEF_HEAD$
      2795**DCL      2898>>ASSIGN
SUB$PARAMS.READBUF$
      2799**DCL      2881>>ASSIGN
SUB$PARAMS.SUB_MADE#
      2808**DCL      2888<<ASSIGN   3014<<ASSIGN
SUB$PARAMS.TEMPBUF$
      2800**DCL      2882>>ASSIGN
SUB$PARAMS.WRITEBUF$
      2801**DCL      2883>>ASSIGN
SUB$PARAMS.X$MCB$
PL6.E3A0      #004=CPH$STRING_SUB File=CPH$SUBR.:E05TSI                          TUE 07/29/97 11:48 Page:107  
      2804**DCL      2840--IMP-PTR  2920>>CALL
SUB$PARAMS.X$PARAM$
      2805**DCL      2844--IMP-PTR  2889>>ASSIGN   2898>>ASSIGN   2902>>ASSIGN   2904>>ASSIGN   2906>>ASSIGN
      2908>>ASSIGN   2920>>CALL     2922>>CALLBLT  2922>>CALLBLT  2928>>IF       2964>>ASSIGN   2998>>IF
      3000>>ASSIGN   3001>>ASSIGN   3001>>ASSIGN   3010>>CALLBLT  3010>>CALLBLT  3010>>CALLBLT  3015>>ASSIGN
      3018>>ASSIGN   3021>>ASSIGN   3021>>ASSIGN
TEMPBUF
      2821**DCL      3010<<CALLBLT  3013>>ASSIGN
TEMPBUF$
      2825**DCL      2821--IMP-PTR  2882<<ASSIGN   3010>>CALLBLT  3013>>ASSIGN
WRITEBUF$
      2826**DCL      2822--IMP-PTR  2883<<ASSIGN
X$MCB
      2840**DCL      2920<>CALL
X$PARAM
      2844**DCL      2920<>CALL
X$PARAM.NUM
      2849**DCL      2908<<ASSIGN   3021<<ASSIGN   3021>>ASSIGN
X$PARAM.SRCH
      2847**DCL      2889<<ASSIGN
X$PARAM.SYM_HEAD$
      2845**DCL      2898<<ASSIGN   2902<<ASSIGN   2904<<ASSIGN   2906<<ASSIGN
X$PARAM.TEXTC$
      2850**DCL      2922>>CALLBLT  2922>>CALLBLT  2964>>ASSIGN   2998>>IF       3000>>ASSIGN   3001>>ASSIGN
      3001>>ASSIGN   3010>>CALLBLT  3010>>CALLBLT  3010>>CALLBLT  3015>>ASSIGN   3018>>ASSIGN
X$PARAM.TYPE
      2848**DCL      2928>>IF
X$STRING.SIZ
      2836**DCL      2837--IMP-SIZ  2922>>CALLBLT  2964>>ASSIGN   2998>>IF       3000>>ASSIGN   3001>>ASSIGN
      3001>>ASSIGN   3010>>CALLBLT  3010>>CALLBLT  3015>>ASSIGN   3018>>ASSIGN
X$STRING.TEXT
      2837**DCL      2922>>CALLBLT  3010>>CALLBLT

PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:108  
      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        CPH$CONTINUE: PROC (P_PARAM);
      629        7          %INCLUDE B$JIT;
      630      297          %INCLUDE B_MACROS_C;
      631      408          %INCLUDE CP_6;
      632      489          %INCLUDE CP_6_SUBS;
      633     1029          %INCLUDE CP_MACROS_C;
      634     1781          %INCLUDE CP_SUBS_C;
      635     2698          %INCLUDE XU_MACRO_C;
      636     5804          %INCLUDE XUH_MACRO_C;
      637     5888          %INCLUDE XUM_MACRO_C;
      638     5915          %INCLUDE CP_DATA_R;
      639     8478        /***** structures *****/
      640     8479        %SUB$PARAMS (STCLASS="BASED(PARAM$)");
      641     8500        %SEG$2;
      642     8560        %FPT_READ (FPTN=FPT$READ,STCLASS=BASED);
      643     8599        %FPT_WRITE (FPTN=FPT$WRITE,STCLASS=BASED);
      644     8630        %F$DCB;
      645     8687        %P$PCB (NAME=P$PCB,STCLASS=BASED);
      646     8888        %PARSE$PARAM (NAME=P_PARAM) ;
      647     8969        %U$PARAM (NAME=U$PARAM,STCLASS=BASED);
      648     8985    1   DCL PARAM$ PTR AUTO;
      649     8986        %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED);
      650     9324        %XUG_PARAMS (NAME=XUG$PARAMS, STCLASS=BASED);
      651     9768    1   DCL JOB_ UBIN SYMREF;
      652     9769        /***** external routines *****/
      653     9770    1   DCL CPC$WRITEMSGE ENTRY(6);
      654     9771    1   DCL CPE$DIAGOUT ENTRY(1) ALTRET;
      655     9772    1   DCL CPE$LISTOUT ENTRY(1) ALTRET;
      656     9773    1   DCL CPH$STRING_SUB ENTRY(1);
      657     9774    1   DCL CPR$RPTERR ENTRY(2);
      658     9775    1   DCL CPR$RPTERR_2 ENTRY(2);
      659     9776        %INCLUDE CXG_ENTRY;
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:109  
      660     9788        /***** character variables *****/
      661     9789    1   DCL READBUF CHAR(%CPBUFFSIZE) BASED;
      662     9790        %SET CPBUFFSIZE_MINUS_ONE = %CPBUFFSIZE-1;
      663     9791    1   DCL READBUFA(0:%CPBUFFSIZE_MINUS_ONE) REDEF READBUF CHAR(1) UNAL;
      664     9792    1   DCL WRITEBUF CHAR(%CPBUFFSIZE) BASED;
      665     9793        /***** Based structures *****/
      666     9794        %B$TCB (STCLASS="BASED(B$TCB$)");
      667     9797        %B$EXCFR;
      668     9815    1   DCL REMEM REMEMBER BASED;
      669     9816        %EJECT;
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:110  
      670     9817    1     PARAM$ = P_PARAM.USER$ -> U$PARAM.PARAMS$;
      671     9818        /*
      672     9819             ***** Put the semicolon back into READBUF...
      673     9820        */
      674     9821    1     P_PARAM.PCB$->P$PCB.TEXT$->READBUFA(P_PARAM.CHARPOS) = ';';
      675     9822    1     IF SEG$2.ERRBUF(1) ~= 0
      676     9823
      677     9824    1        THEN
      678     9825    2           DO; /* Echo and print errmsgs */
      679     9826    2              CALL CONCAT (SUB$PARAMS.WRITEBUF$->WRITEBUF,'     ',
      680     9827    2                   SUB$PARAMS.READBUF$->READBUF);
      681     9828    2              IF SUB$PARAMS.BUF_LEN+5 > %CPBUFFSIZE-1
      682     9829
      683     9830    2                 THEN
      684     9831    2                    SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=%CPBUFFSIZE-1;
      685     9832    2                 ELSE
      686     9833    2                    SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=SUB$PARAMS.BUF_LEN+5;
      687     9834    2              CALL CPE$DIAGOUT (SEG$2.FPT_WRITECC$);
      688     9835    2              SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(SUB$PARAMS.WRITEBUF$->READBUF);
      689     9836    2              SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(NIL);
      690     9837    2              SEG$2.GETCMD$->GET$CMD.SKIP_PREPROCESS# = '1'B;
      691     9838    2              CALL CXG$GETCMD(SEG$2.GETCMD$->GET$CMD);
      692     9839    2              SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL);
      693     9840    2              SEG$2.GETCMD$->GET$CMD.WORK$->XUG$PARAMS.POFF = 0;
      694     9841    2              CALL CPR$RPTERR (SEG$2.ERRBUF,POFFC(P_PARAM.PCB$->P$PCB.TEXT$,
      695     9842    2                   SUB$PARAMS.READBUF$)+5);
      696     9843    2              SEG$2.ERRBUF(1) = 0;
      697     9844    2              SUB$PARAMS.BATCH_ABORTED# = %YES#;
      698     9845    2           END;
      699     9846    1        ELSE /* May need to echo tyru M$LL */
      700     9847    1           IF SUB$PARAMS.PRINT_OPT#
      701     9848    1                OR (SUB$PARAMS.SUB_MADE# AND SUB$PARAMS.TEST_OPT#)
      702     9849
      703     9850    1              THEN
      704     9851    2                 DO;
      705     9852    2                    CALL CONCAT (SUB$PARAMS.WRITEBUF$->WRITEBUF,'     ',
      706     9853    2                         SUB$PARAMS.READBUF$->READBUF);
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:111  
      707     9854    2                    IF SUB$PARAMS.BUF_LEN+5 > %CPBUFFSIZE-1
      708     9855
      709     9856    2                       THEN
      710     9857    2                          SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=%CPBUFFSIZE-1;
      711     9858    2                       ELSE
      712     9859    2                          SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=SUB$PARAMS.BUF_LEN+5
              9859                                   ;
      713     9860    2                    CALL CPE$LISTOUT (SEG$2.FPT_WRITECC$);
      714     9861    2                 END;
      715     9862        /*
      716     9863             ***** Write to command STREAM...
      717     9864        */
      718     9865    1     IF NOT(SUB$PARAMS.BATCH_ABORTED# OR SUB$PARAMS.TEST_OPT#)
      719     9866
      720     9867    1        THEN
      721     9868    2           DO;
      722     9869    2              IF SUB$PARAMS.BUF_LEN < 0
      723     9870
      724     9871    2                 THEN
      725     9872    3                    DO;
      726     9873    3                       SUB$PARAMS.FPT_WRITE$->FPT$WRITE.BUF_ = VECTOR(NIL);
      727     9874    3                       CALL M$WRITE (SUB$PARAMS.FPT_WRITE$->FPT$WRITE) ALTRET(E_WRITE);
      728     9875    3                       SUB$PARAMS.FPT_WRITE$->FPT$WRITE.BUF_=
      729     9876    3                            VECTOR(SUB$PARAMS.READBUF$->READBUF);
      730     9877    3                    END;
      731     9878    2                 ELSE
      732     9879    3                    DO; /* Write the record */
      733     9880    3                       SUB$PARAMS.FPT_WRITE$->FPT$WRITE.BUF_.BOUND=SUB$PARAMS.BUF_LEN;
      734     9881    3                       CALL M$WRITE (SUB$PARAMS.FPT_WRITE$->FPT$WRITE) ALTRET(E_WRITE);
      735     9882    3                    END;
      736     9883    2           END;
      737     9884        /*
      738     9885             ***** Read the next record from the jcl file...
      739     9886        */
      740     9887    1     SUB$PARAMS.READBUF$ -> READBUF = ' '; /* Blank the buffer */
      741     9888    1     CALL M$READ (SUB$PARAMS.FPT_READ$->FPT$READ) ALTRET(E_READ);
      742     9889    1     SUB$PARAMS.BUF_LEN = DCBADDR(M$IBEX_NUM) -> F$DCB.ARS# -1;
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:112  
      743     9890    1     SEG$2.FLAGS.CONTINUED = %YES# ;
      744     9891        /*
      745     9892             ***** String substitution...
      746     9893        */
      747     9894    1     CALL CPH$STRING_SUB (SUB$PARAMS);
      748     9895    1     IF P_PARAM.PCB$->P$PCB.ROOT$ ~= ADDR(JOB_)
      749     9896    1        THEN CALL INDEX (P_PARAM.CHARPOS, '%', SUB$PARAMS.READBUF$ -> READBUF)
      750     9897    2           WHENRETURN DO; /* Give up if there's preprocessor stuff in it */
      751     9898    2              UNWIND TO P_PARAM.USER$ -> U$PARAM.REMEM$ -> REMEM;
      752     9899    2              END;
      753     9900    1     P_PARAM.CHARPOS = 0;
      754     9901    1     P_PARAM.PCB$->P$PCB.NCHARS = SUB$PARAMS.BUF_LEN;
      755     9902    1     IF SUB$PARAMS.READBUF$->READBUFA(0) = '!'
      756     9903    1        THEN
      757     9904    1           P_PARAM.PCB$->P$PCB.TEXT$ = PINCRC(SUB$PARAMS.READBUF$,1);
      758     9905    2        ELSE DO;
      759     9906    2           P_PARAM.PCB$->P$PCB.TEXT$ = SUB$PARAMS.READBUF$;
      760     9907    2           P_PARAM.PCB$->P$PCB.NCHARS = P_PARAM.PCB$->P$PCB.NCHARS+1;
      761     9908    2        END;
      762     9909    1     RETURN;
      763     9910        /*
      764     9911             ***** Error cases ...
      765     9912        */
      766     9913    1   E_WRITE:
      767     9914    1     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$EXCFR.ERR,M$IBEX1_NUM);
      768     9915    1     RETURN;
      769     9916    1   E_READ:
      770     9917    1     RETURN;
      771     9918    1   END CPH$CONTINUE;

PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:113  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPH$CONTINUE.

   Procedure CPH$CONTINUE requires 258 words for executable code.
   Procedure CPH$CONTINUE requires 10 words of local(AUTO) storage.

    No errors detected in file CPH$SUBR.:E05TSI    .

PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:114  

 Object Unit name= CPH$CONTINUE                               File name= CPH$SUBR.:E05TOU
 UTS= JUL 29 '97 11:48:57.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  CPH$CONTINUE
    2   Proc  even  none   258    402  CPH$CONTINUE
    3  RoData even  none    10     12  CPH$CONTINUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  CPH$CONTINUE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 CPE$DIAGOUT
 yes     yes           Std       1 CXG$GETCMD
         yes           Std       2 CPR$RPTERR
 yes     yes           Std       1 CPE$LISTOUT
         yes           Std       1 CPH$STRING_SUB
         yes           Std       6 CPC$WRITEMSGE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:115  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    SEG2$                            r    B$JIT$
r    B$TCB$                                M$IBEX_NUM                            M$IBEX1_NUM
     JOB_                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ROSID                                 ISSID
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:116  


      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        CPH$CONTINUE: PROC (P_PARAM);

      6  2 000000   000000 700200 xent  CPH$CONTINUE TSX0  ! X66_AUTO_1
         2 000001   000012 000001                    ZERO    10,1

      629        7          %INCLUDE B$JIT;
      630      297          %INCLUDE B_MACROS_C;
      631      408          %INCLUDE CP_6;
      632      489          %INCLUDE CP_6_SUBS;
      633     1029          %INCLUDE CP_MACROS_C;
      634     1781          %INCLUDE CP_SUBS_C;
      635     2698          %INCLUDE XU_MACRO_C;
      636     5804          %INCLUDE XUH_MACRO_C;
      637     5888          %INCLUDE XUM_MACRO_C;
      638     5915          %INCLUDE CP_DATA_R;
      639     8478        /***** structures *****/
      640     8479        %SUB$PARAMS (STCLASS="BASED(PARAM$)");
      641     8500        %SEG$2;
      642     8560        %FPT_READ (FPTN=FPT$READ,STCLASS=BASED);
      643     8599        %FPT_WRITE (FPTN=FPT$WRITE,STCLASS=BASED);
      644     8630        %F$DCB;
      645     8687        %P$PCB (NAME=P$PCB,STCLASS=BASED);
      646     8888        %PARSE$PARAM (NAME=P_PARAM) ;
      647     8969        %U$PARAM (NAME=U$PARAM,STCLASS=BASED);
      648     8985    1   DCL PARAM$ PTR AUTO;
      649     8986        %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED);
      650     9324        %XUG_PARAMS (NAME=XUG$PARAMS, STCLASS=BASED);
      651     9768    1   DCL JOB_ UBIN SYMREF;
      652     9769        /***** external routines *****/
      653     9770    1   DCL CPC$WRITEMSGE ENTRY(6);
      654     9771    1   DCL CPE$DIAGOUT ENTRY(1) ALTRET;
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:117  
      655     9772    1   DCL CPE$LISTOUT ENTRY(1) ALTRET;
      656     9773    1   DCL CPH$STRING_SUB ENTRY(1);
      657     9774    1   DCL CPR$RPTERR ENTRY(2);
      658     9775    1   DCL CPR$RPTERR_2 ENTRY(2);
      659     9776        %INCLUDE CXG_ENTRY;
      660     9788        /***** character variables *****/
      661     9789    1   DCL READBUF CHAR(%CPBUFFSIZE) BASED;
      662     9790        %SET CPBUFFSIZE_MINUS_ONE = %CPBUFFSIZE-1;
      663     9791    1   DCL READBUFA(0:%CPBUFFSIZE_MINUS_ONE) REDEF READBUF CHAR(1) UNAL;
      664     9792    1   DCL WRITEBUF CHAR(%CPBUFFSIZE) BASED;
      665     9793        /***** Based structures *****/
      666     9794        %B$TCB (STCLASS="BASED(B$TCB$)");
      667     9797        %B$EXCFR;
      668     9815    1   DCL REMEM REMEMBER BASED;
      669     9816        %EJECT;
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:118  
      670     9817    1     PARAM$ = P_PARAM.USER$ -> U$PARAM.PARAMS$;

   9817  2 000002   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000003   000006 471500                    LDP1    6,,PR0
         2 000004   100015 236100                    LDQ     13,,PR1
         2 000005   200004 756100                    STQ     PARAM$,,AUTO

      671     9818        /*
      672     9819             ***** Put the semicolon back into READBUF...
      673     9820        */
      674     9821    1     P_PARAM.PCB$->P$PCB.TEXT$->READBUFA(P_PARAM.CHARPOS) = ';';

   9821  2 000006   000005 473500                    LDP3    5,,PR0
         2 000007   300000 474500                    LDP4    0,,PR3
         2 000010   000004 235100                    LDA     4,,PR0
         2 000011   040105 100400                    MLR     fill='040'O
         2 000012   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000013   400000 000001                    ADSC9   0,A,PR4                  cn=0,n=1

      675     9822    1     IF SEG$2.ERRBUF(1) ~= 0

   9822  2 000014   000000 471400 xsym               LDP1    SEG2$
         2 000015   100004 235100                    LDA     4,,PR1
         2 000016   000147 600000 2                  TZE     s:9847

      676     9823
      677     9824    1        THEN
      678     9825    2           DO; /* Echo and print errmsgs */

      679     9826    2              CALL CONCAT (SUB$PARAMS.WRITEBUF$->WRITEBUF,'     ',

   9826  2 000017   200004 473500                    LDP3    PARAM$,,AUTO
         2 000020   300006 474500                    LDP4    6,,PR3
         2 000021   300004 475500                    LDP5    4,,PR3
         2 000022   040100 100400                    MLR     fill='040'O
         2 000023   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000024   400000 000005                    ADSC9   0,,PR4                   cn=0,n=5
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:119  
         2 000025   040100 100500                    MLR     fill='040'O
         2 000026   500000 000373                    ADSC9   0,,PR5                   cn=0,n=251
         2 000027   400001 200373                    ADSC9   1,,PR4                   cn=1,n=251

      680     9827    2                   SUB$PARAMS.READBUF$->READBUF);
      681     9828    2              IF SUB$PARAMS.BUF_LEN+5 > %CPBUFFSIZE-1

   9828  2 000030   200004 470500                    LDP0    PARAM$,,AUTO
         2 000031   000013 235100                    LDA     11,,PR0
         2 000032   000372 115007                    CMPA    250,DL
         2 000033   000043 604400 2                  TMOZ    s:9833

      682     9829
      683     9830    2                 THEN
      684     9831    2                    SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=%CPBUFFSIZE-1;

   9831  2 000034   000000 471400 xsym               LDP1    SEG2$
         2 000035   100161 473500                    LDP3    113,,PR1
         2 000036   300004 236100                    LDQ     4,,PR3
         2 000037   177777 376007                    ANQ     65535,DL
         2 000040   000001 276000 3                  ORQ     1
         2 000041   300004 756100                    STQ     4,,PR3
         2 000042   000053 710000 2                  TRA     s:9834

      685     9832    2                 ELSE
      686     9833    2                    SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=SUB$PARAMS.BUF_LEN+5;

   9833  2 000043   000000 471400 xsym               LDP1    SEG2$
         2 000044   100161 473500                    LDP3    113,,PR1
         2 000045   000013 236100                    LDQ     11,,PR0
         2 000046   000005 036007                    ADLQ    5,DL
         2 000047   000020 736000                    QLS     16
         2 000050   300004 676100                    ERQ     4,,PR3
         2 000051   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000052   300004 656100                    ERSQ    4,,PR3

      687     9834    2              CALL CPE$DIAGOUT (SEG$2.FPT_WRITECC$);
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:120  

   9834  2 000053   000000 236000 xsym               LDQ     SEG2$
         2 000054   000161 036003                    ADLQ    113,DU
         2 000055   200006 756100                    STQ     PARAM$+2,,AUTO
         2 000056   200006 630500                    EPPR0   PARAM$+2,,AUTO
         2 000057   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000060   000000 701000 xent               TSX1    CPE$DIAGOUT
         2 000061   000000 011000                    NOP     0

      688     9835    2              SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(SUB$PARAMS.WRITEBUF$->READBUF);

   9835  2 000062   000000 470400 xsym               LDP0    SEG2$
         2 000063   000173 471500                    LDP1    123,,PR0
         2 000064   200004 473500                    LDP3    PARAM$,,AUTO
         2 000065   300006 474500                    LDP4    6,,PR3
         2 000066   000002 235000 3                  LDA     2
         2 000067   200006 454500                    STP4    PARAM$+2,,AUTO
         2 000070   200006 236100                    LDQ     PARAM$+2,,AUTO
         2 000071   100034 757100                    STAQ    28,,PR1

      689     9836    2              SEG$2.GETCMD$->GET$CMD.NODES$ = ADDR(NIL);

   9836  2 000072   000173 471500                    LDP1    123,,PR0
         2 000073   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000074   100000 756100                    STQ     0,,PR1

      690     9837    2              SEG$2.GETCMD$->GET$CMD.SKIP_PREPROCESS# = '1'B;

   9837  2 000075   000173 471500                    LDP1    123,,PR0
         2 000076   004000 236003                    LDQ     2048,DU
         2 000077   100006 256100                    ORSQ    6,,PR1

      691     9838    2              CALL CXG$GETCMD(SEG$2.GETCMD$->GET$CMD);

   9838  2 000100   000173 471500                    LDP1    123,,PR0
         2 000101   200006 451500                    STP1    PARAM$+2,,AUTO
         2 000102   200006 630500                    EPPR0   PARAM$+2,,AUTO
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:121  
         2 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000104   000000 701000 xent               TSX1    CXG$GETCMD
         2 000105   000000 011000                    NOP     0

      692     9839    2              SEG$2.GETCMD$->GET$CMD.TEXT_ = VECTOR(NIL);

   9839  2 000106   000000 470400 xsym               LDP0    SEG2$
         2 000107   000173 471500                    LDP1    123,,PR0
         2 000110   000004 237000 3                  LDAQ    4
         2 000111   100034 757100                    STAQ    28,,PR1

      693     9840    2              SEG$2.GETCMD$->GET$CMD.WORK$->XUG$PARAMS.POFF = 0;

   9840  2 000112   000173 471500                    LDP1    123,,PR0
         2 000113   100004 473500                    LDP3    4,,PR1
         2 000114   300036 450100                    STZ     30,,PR3

      694     9841    2              CALL CPR$RPTERR (SEG$2.ERRBUF,POFFC(P_PARAM.PCB$->P$PCB.TEXT$,

   9841  2 000115   200003 471500                    LDP1    @P_PARAM,,AUTO
         2 000116   100005 473500                    LDP3    5,,PR1
         2 000117   200004 474500                    LDP4    PARAM$,,AUTO
         2 000120   400004 236100                    LDQ     4,,PR4
         2 000121   000020 772000                    QRL     16
         2 000122   200006 756100                    STQ     PARAM$+2,,AUTO
         2 000123   300000 236100                    LDQ     0,,PR3
         2 000124   000020 772000                    QRL     16
         2 000125   200006 136100                    SBLQ    PARAM$+2,,AUTO
         2 000126   000005 036007                    ADLQ    5,DL
         2 000127   200007 756100                    STQ     PARAM$+3,,AUTO
         2 000130   200007 633500                    EPPR3   PARAM$+3,,AUTO
         2 000131   200011 453500                    STP3    PARAM$+5,,AUTO
         2 000132   000000 236000 xsym               LDQ     SEG2$
         2 000133   000003 036003                    ADLQ    3,DU
         2 000134   200010 756100                    STQ     PARAM$+4,,AUTO
         2 000135   200010 630500                    EPPR0   PARAM$+4,,AUTO
         2 000136   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:122  
         2 000137   000000 701000 xent               TSX1    CPR$RPTERR
         2 000140   000000 011000                    NOP     0

      695     9842    2                   SUB$PARAMS.READBUF$)+5);
      696     9843    2              SEG$2.ERRBUF(1) = 0;

   9843  2 000141   000000 470400 xsym               LDP0    SEG2$
         2 000142   000004 450100                    STZ     4,,PR0

      697     9844    2              SUB$PARAMS.BATCH_ABORTED# = %YES#;

   9844  2 000143   200004 471500                    LDP1    PARAM$,,AUTO
         2 000144   040000 236003                    LDQ     16384,DU
         2 000145   100015 256100                    ORSQ    13,,PR1

      698     9845    2           END;

   9845  2 000146   000221 710000 2                  TRA     s:9865

      699     9846    1        ELSE /* May need to echo tyru M$LL */
      700     9847    1           IF SUB$PARAMS.PRINT_OPT#

   9847  2 000147   200004 473500                    LDP3    PARAM$,,AUTO
         2 000150   300015 236100                    LDQ     13,,PR3
         2 000151   200000 316003                    CANQ    65536,DU
         2 000152   000157 601000 2                  TNZ     s:9852
         2 000153   300015 234100                    SZN     13,,PR3
         2 000154   000221 605000 2                  TPL     s:9865
         2 000155   100000 316003                    CANQ    32768,DU
         2 000156   000221 600000 2                  TZE     s:9865

      701     9848    1                OR (SUB$PARAMS.SUB_MADE# AND SUB$PARAMS.TEST_OPT#)
      702     9849
      703     9850    1              THEN
      704     9851    2                 DO;

      705     9852    2                    CALL CONCAT (SUB$PARAMS.WRITEBUF$->WRITEBUF,'     ',
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:123  

   9852  2 000157   300006 474500                    LDP4    6,,PR3
         2 000160   300004 475500                    LDP5    4,,PR3
         2 000161   040100 100400                    MLR     fill='040'O
         2 000162   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000163   400000 000005                    ADSC9   0,,PR4                   cn=0,n=5
         2 000164   040100 100500                    MLR     fill='040'O
         2 000165   500000 000373                    ADSC9   0,,PR5                   cn=0,n=251
         2 000166   400001 200373                    ADSC9   1,,PR4                   cn=1,n=251

      706     9853    2                         SUB$PARAMS.READBUF$->READBUF);
      707     9854    2                    IF SUB$PARAMS.BUF_LEN+5 > %CPBUFFSIZE-1

   9854  2 000167   200004 470500                    LDP0    PARAM$,,AUTO
         2 000170   000013 235100                    LDA     11,,PR0
         2 000171   000372 115007                    CMPA    250,DL
         2 000172   000202 604400 2                  TMOZ    s:9859

      708     9855
      709     9856    2                       THEN
      710     9857    2                          SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=%CPBUFFSIZE-1;

   9857  2 000173   000000 471400 xsym               LDP1    SEG2$
         2 000174   100161 473500                    LDP3    113,,PR1
         2 000175   300004 236100                    LDQ     4,,PR3
         2 000176   177777 376007                    ANQ     65535,DL
         2 000177   000001 276000 3                  ORQ     1
         2 000200   300004 756100                    STQ     4,,PR3
         2 000201   000212 710000 2                  TRA     s:9860

      711     9858    2                       ELSE
      712     9859    2                         SEG$2.FPT_WRITECC$->FPT$WRITE.BUF_.BOUND=SUB$PARAMS.BUF_LEN+5
              9859                                   ;

   9859  2 000202   000000 471400 xsym               LDP1    SEG2$
         2 000203   100161 473500                    LDP3    113,,PR1
         2 000204   000013 236100                    LDQ     11,,PR0
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:124  
         2 000205   000005 036007                    ADLQ    5,DL
         2 000206   000020 736000                    QLS     16
         2 000207   300004 676100                    ERQ     4,,PR3
         2 000210   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000211   300004 656100                    ERSQ    4,,PR3

      713     9860    2                    CALL CPE$LISTOUT (SEG$2.FPT_WRITECC$);

   9860  2 000212   000000 236000 xsym               LDQ     SEG2$
         2 000213   000161 036003                    ADLQ    113,DU
         2 000214   200006 756100                    STQ     PARAM$+2,,AUTO
         2 000215   200006 630500                    EPPR0   PARAM$+2,,AUTO
         2 000216   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000217   000000 701000 xent               TSX1    CPE$LISTOUT
         2 000220   000000 011000                    NOP     0

      714     9861    2                 END;

      715     9862        /*
      716     9863             ***** Write to command STREAM...
      717     9864        */
      718     9865    1     IF NOT(SUB$PARAMS.BATCH_ABORTED# OR SUB$PARAMS.TEST_OPT#)

   9865  2 000221   200004 470500                    LDP0    PARAM$,,AUTO
         2 000222   000015 236100                    LDQ     13,,PR0
         2 000223   040000 316003                    CANQ    16384,DU
         2 000224   000264 601000 2                  TNZ     s:9887
         2 000225   100000 316003                    CANQ    32768,DU
         2 000226   000264 601000 2                  TNZ     s:9887

      719     9866
      720     9867    1        THEN
      721     9868    2           DO;

      722     9869    2              IF SUB$PARAMS.BUF_LEN < 0

   9869  2 000227   000013 235100                    LDA     11,,PR0
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:125  
         2 000230   000251 605000 2                  TPL     s:9880

      723     9870
      724     9871    2                 THEN
      725     9872    3                    DO;

      726     9873    3                       SUB$PARAMS.FPT_WRITE$->FPT$WRITE.BUF_ = VECTOR(NIL);

   9873  2 000231   000010 471500                    LDP1    8,,PR0
         2 000232   000004 237000 3                  LDAQ    4
         2 000233   100004 757100                    STAQ    4,,PR1

      727     9874    3                      CALL M$WRITE (SUB$PARAMS.FPT_WRITE$->FPT$WRITE) ALTRET(E_WRITE);

   9874  2 000234   000010 471500                    LDP1    8,,PR0
         2 000235   100000 630500                    EPPR0   0,,PR1
         2 000236   440001 713400                    CLIMB   alt,write
         2 000237   401400 401760                    pmme    nvectors=4
         2 000240   000366 702000 2                  TSX2    E_WRITE

      728     9875    3                       SUB$PARAMS.FPT_WRITE$->FPT$WRITE.BUF_=

   9875  2 000241   200004 470500                    LDP0    PARAM$,,AUTO
         2 000242   000010 471500                    LDP1    8,,PR0
         2 000243   000004 473500                    LDP3    4,,PR0
         2 000244   000002 235000 3                  LDA     2
         2 000245   200006 453500                    STP3    PARAM$+2,,AUTO
         2 000246   200006 236100                    LDQ     PARAM$+2,,AUTO
         2 000247   100004 757100                    STAQ    4,,PR1

      729     9876    3                            VECTOR(SUB$PARAMS.READBUF$->READBUF);
      730     9877    3                    END;

   9877  2 000250   000264 710000 2                  TRA     s:9887

      731     9878    2                 ELSE
      732     9879    3                    DO; /* Write the record */
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:126  

      733     9880    3                       SUB$PARAMS.FPT_WRITE$->FPT$WRITE.BUF_.BOUND=SUB$PARAMS.BUF_LEN;

   9880  2 000251   000010 471500                    LDP1    8,,PR0
         2 000252   000013 236100                    LDQ     11,,PR0
         2 000253   000020 736000                    QLS     16
         2 000254   100004 676100                    ERQ     4,,PR1
         2 000255   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000256   100004 656100                    ERSQ    4,,PR1

      734     9881    3                      CALL M$WRITE (SUB$PARAMS.FPT_WRITE$->FPT$WRITE) ALTRET(E_WRITE);

   9881  2 000257   000010 471500                    LDP1    8,,PR0
         2 000260   100000 630500                    EPPR0   0,,PR1
         2 000261   440001 713400                    CLIMB   alt,write
         2 000262   401400 401760                    pmme    nvectors=4
         2 000263   000366 702000 2                  TSX2    E_WRITE

      735     9882    3                    END;

      736     9883    2           END;

      737     9884        /*
      738     9885             ***** Read the next record from the jcl file...
      739     9886        */
      740     9887    1     SUB$PARAMS.READBUF$ -> READBUF = ' '; /* Blank the buffer */

   9887  2 000264   200004 470500                    LDP0    PARAM$,,AUTO
         2 000265   000004 471500                    LDP1    4,,PR0
         2 000266   040100 100400                    MLR     fill='040'O
         2 000267   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000270   100000 000400                    ADSC9   0,,PR1                   cn=0,n=256

      741     9888    1     CALL M$READ (SUB$PARAMS.FPT_READ$->FPT$READ) ALTRET(E_READ);

   9888  2 000271   000007 471500                    LDP1    7,,PR0
         2 000272   100000 630500                    EPPR0   0,,PR1
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:127  
         2 000273   440000 713400                    CLIMB   alt,read
         2 000274   401400 401760                    pmme    nvectors=4
         2 000275   000401 702000 2                  TSX2    E_READ

      742     9889    1     SUB$PARAMS.BUF_LEN = DCBADDR(M$IBEX_NUM) -> F$DCB.ARS# -1;

   9889  2 000276   000003 470400 3                  LDP0    3
         2 000277   000000 471500                    LDP1    0,,PR0
         2 000300   000000 720000 xsym               LXL0    M$IBEX_NUM
         2 000301   100000 473510                    LDP3    0,X0,PR1
         2 000302   200004 474500                    LDP4    PARAM$,,AUTO
         2 000303   300000 235100                    LDA     0,,PR3
         2 000304   000001 135007                    SBLA    1,DL
         2 000305   400013 755100                    STA     11,,PR4

      743     9890    1     SEG$2.FLAGS.CONTINUED = %YES# ;

   9890  2 000306   000000 475400 xsym               LDP5    SEG2$
         2 000307   002000 236003                    LDQ     1024,DU
         2 000310   500000 256100                    ORSQ    0,,PR5

      744     9891        /*
      745     9892             ***** String substitution...
      746     9893        */
      747     9894    1     CALL CPH$STRING_SUB (SUB$PARAMS);

   9894  2 000311   200004 630500                    EPPR0   PARAM$,,AUTO
         2 000312   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000313   000000 701000 xent               TSX1    CPH$STRING_SUB
         2 000314   000000 011000                    NOP     0

      748     9895    1     IF P_PARAM.PCB$->P$PCB.ROOT$ ~= ADDR(JOB_)

   9895  2 000315   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000316   000005 471500                    LDP1    5,,PR0
         2 000317   000006 236000 3                  LDQ     6
         2 000320   100001 116100                    CMPQ    1,,PR1
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:128  
         2 000321   000336 600000 2                  TZE     s:9900

      749     9896    1        THEN CALL INDEX (P_PARAM.CHARPOS, '%', SUB$PARAMS.READBUF$ -> READBUF)

   9896  2 000322   200004 473500                    LDP3    PARAM$,,AUTO
         2 000323   300004 474500                    LDP4    4,,PR3
         2 000324   000000 124500                    SCM     mask='000'O
         2 000325   400000 000400                    ADSC9   0,,PR4                   cn=0,n=256
         2 000326   000007 000001 3                  ADSC9   7                        cn=0,n=1
         2 000327   000004 000100                    ARG     4,,PR0
         2 000330   000336 606400 2                  TTN     s:9900

      750     9897    2           WHENRETURN DO; /* Give up if there's preprocessor stuff in it */

      751     9898    2              UNWIND TO P_PARAM.USER$ -> U$PARAM.REMEM$ -> REMEM;

   9898  2 000331   000006 474500                    LDP4    6,,PR0
         2 000332   400016 475500                    LDP5    14,,PR4
         2 000333   500000 237300                    LDAQ  ! 0,,PR5
         2 000334   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000335   000000 000200                    ZERO    0,128

      752     9899    2              END;
      753     9900    1     P_PARAM.CHARPOS = 0;

   9900  2 000336   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000337   000004 450100                    STZ     4,,PR0

      754     9901    1     P_PARAM.PCB$->P$PCB.NCHARS = SUB$PARAMS.BUF_LEN;

   9901  2 000340   000005 471500                    LDP1    5,,PR0
         2 000341   200004 473500                    LDP3    PARAM$,,AUTO
         2 000342   300013 235100                    LDA     11,,PR3
         2 000343   100011 755100                    STA     9,,PR1

      755     9902    1     IF SUB$PARAMS.READBUF$->READBUFA(0) = '!'

PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:129  
   9902  2 000344   300004 471500                    LDP1    4,,PR3
         2 000345   040000 106500                    CMPC    fill='040'O
         2 000346   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000347   000010 000001 3                  ADSC9   8                        cn=0,n=1
         2 000350   000356 601000 2                  TNZ     s:9906

      756     9903    1        THEN
      757     9904    1           P_PARAM.PCB$->P$PCB.TEXT$ = PINCRC(SUB$PARAMS.READBUF$,1);

   9904  2 000351   000005 474500                    LDP4    5,,PR0
         2 000352   300004 236100                    LDQ     4,,PR3
         2 000353   200000 036007                    ADLQ    65536,DL
         2 000354   400000 756100                    STQ     0,,PR4
         2 000355   000365 710000 2                  TRA     s:9909

      758     9905    2        ELSE DO;

      759     9906    2           P_PARAM.PCB$->P$PCB.TEXT$ = SUB$PARAMS.READBUF$;

   9906  2 000356   000005 474500                    LDP4    5,,PR0
         2 000357   300004 236100                    LDQ     4,,PR3
         2 000360   400000 756100                    STQ     0,,PR4

      760     9907    2           P_PARAM.PCB$->P$PCB.NCHARS = P_PARAM.PCB$->P$PCB.NCHARS+1;

   9907  2 000361   000005 471500                    LDP1    5,,PR0
         2 000362   100011 235100                    LDA     9,,PR1
         2 000363   000001 035007                    ADLA    1,DL
         2 000364   100011 755100                    STA     9,,PR1

      761     9908    2        END;

      762     9909    1     RETURN;

   9909  2 000365   000000 702200 xent               TSX2  ! X66_ARET

      763     9910        /*
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:130  
      764     9911             ***** Error cases ...
      765     9912        */
      766     9913    1   E_WRITE:
      767     9914    1     CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$EXCFR.ERR,M$IBEX1_NUM);

   9914  2 000366   000000 470400 xsym  E_WRITE      LDP0    B$TCB$
         2 000367   000000 471500                    LDP1    0,,PR0
         2 000370   000011 236000 3                  LDQ     9
         2 000371   200007 756100                    STQ     PARAM$+3,,AUTO
         2 000372   100102 633500                    EPPR3   66,,PR1
         2 000373   200006 453500                    STP3    PARAM$+2,,AUTO
         2 000374   200006 630500                    EPPR0   PARAM$+2,,AUTO
         2 000375   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000376   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000377   000000 011000                    NOP     0

      768     9915    1     RETURN;

   9915  2 000400   000000 702200 xent               TSX2  ! X66_ARET

      769     9916    1   E_READ:
      770     9917    1     RETURN;

   9917  2 000401   000000 702200 xent  E_READ       TSX2  ! X66_ARET
      771     9918    1   END CPH$CONTINUE;

PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:131  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPH$CONTINUE.
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:132  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P_PARAM                   4-0-0/w PTR         r     1 PARAM$
    *0-0-0/w STRC(270)   r     1 P_PARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w UBIN        r     1 JOB_                       0-0-0/w UBIN        r     1 M$IBEX1_NUM
     0-0-0/w UBIN        r     1 M$IBEX_NUM                 0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d STRC(504)   r     1 FPT$READ
     0-0-0/d STRC(432)   r     1 FPT$WRITE                  0-0-0/d STRC(1512)  r     1 GET$CMD
     0-0-0/w STRC(504)   r     1 P$PCB                      0-0-0/c CHAR(256)   r     1 READBUF
     0-0-0/c CHAR        r     1 READBUFA(0:255)            0-0-0/d REMB        r     1 REMEM
     0-0-0/w STRC(6264)  r     1 SEG$2                      0-0-0/w STRC(473)   r     1 SUB$PARAMS
     0-0-0/w STRC(576)   r     1 U$PARAM                    0-0-0/c CHAR(256)   r     1 WRITEBUF
     0-0-0/d STRC(9612)  r     1 XUG$PARAMS


   Procedure CPH$CONTINUE requires 258 words for executable code.
   Procedure CPH$CONTINUE requires 10 words of local(AUTO) storage.
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:133  

    No errors detected in file CPH$SUBR.:E05TSI    .
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:134  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:135  
          MINI XREF LISTING

B$EXCFR.ASL
      9798**DCL      9798--REDEF
B$EXCFR.ERR
      9812**DCL      9914<>CALL
B$EXCFR.ERR.ERR#
      9812**DCL      9812--REDEF
B$EXCFR.EVID
      9811**DCL      9811--REDEF    9812--REDEF
B$EXCFR.IR
      9799**DCL      9799--REDEF
B$EXCFR.PREVSZ
      9798**DCL      9798--REDEF
B$EXCFR.SUBC
      9810**DCL      9810--REDEF    9811--REDEF    9811--REDEF
B$JIT.CPFLAGS1.SLEAZE
       115**DCL       115--REDEF
B$JIT.ERR.MID
        22**DCL        22--REDEF
B$JIT.JRESPEAK
       183**DCL       184--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       292**DCL       292--REDEF     293--REDEF
B$JIT.PNR
       196**DCL       196--REDEF
B$JIT.TSLINE
       290**DCL       291--REDEF
B$JIT$
      8411**DCL        16--IMP-PTR
B$TCB.ALT$
      9795**DCL      9914>>CALL
B$TCB$
      8413**DCL      9795--IMP-PTR  9914>>CALL
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:136  
CAMR_REC.ACSVEH_
      7450**DCL      7451--REDEF
CAMR_REC.ALTKEYS_
      7456**DCL      7457--REDEF    7457--REDEF
CAMR_REC.HDR_
      7455**DCL      7456--REDEF
CAMR_REC.TAB_
      7454**DCL      7455--REDEF
CAMR_REC.UHL_
      7448**DCL      7449--REDEF    7449--REDEF
CAMR_REC.V.FSN#
      7488**DCL      7488--REDEF    7488--REDEF
CAMR_REC.WSN_
      7454**DCL      7454--REDEF
CFPT_CLOSE.SN_
      6292**DCL      6292--REDEF
CFPT_CLOSE.UTL_
      6293**DCL      6293--REDEF
CFPT_CLOSE.V.EXPIRE#
      6307**DCL      6307--REDEF
CFPT_CLOSE.V.TYPE#
      6305**DCL      6305--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6302**DCL      6302--REDEF    6304--REDEF
CFPT_OPEN.ACSVEH_
      6227**DCL      6228--REDEF
CFPT_OPEN.ALTKEYS_
      6233**DCL      6234--REDEF    6234--REDEF
CFPT_OPEN.HDR_
      6232**DCL      6233--REDEF
CFPT_OPEN.TAB_
      6231**DCL      6232--REDEF
CFPT_OPEN.UHL_
      6225**DCL      6226--REDEF    6226--REDEF
CFPT_OPEN.V.FSN#
      6265**DCL      6265--REDEF    6265--REDEF
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:137  
CFPT_OPEN.WSN_
      6231**DCL      6231--REDEF
CFPT_READ.STATION_
      6331**DCL      6332--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6343**DCL      6343--REDEF
CFPT_READ.V.INDX#
      6341**DCL      6341--REDEF
CFPT_READUC.STATION_
      6701**DCL      6702--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6713**DCL      6713--REDEF
CFPT_READUC.V.INDX#
      6711**DCL      6711--REDEF
CFPT_TRTN.V.IR#
      6937**DCL      6938--REDEF
CFPT_WRITE.STATION_
      6369**DCL      6369--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      6376**DCL      6376--REDEF
CFPT_WRITEUC.STATION_
      6669**DCL      6669--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6676**DCL      6676--REDEF
CFPT_XXX.V.STEPCC#
      7649**DCL      7649--REDEF
CGETCMD.OUT$
      7670**DCL      7676--REDEF
CPC$WRITEMSGE
      9770**DCL-ENT  9914--CALL
CPE$DIAGOUT
      9771**DCL-ENT  9834--CALL
CPE$LISTOUT
      9772**DCL-ENT  9860--CALL
CPH$STRING_SUB
      9773**DCL-ENT  9894--CALL
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:138  
CPR$RPTERR
      9774**DCL-ENT  9841--CALL
CVLP_TRMCTL.BREAKCOUNT
      7261**DCL      7262--REDEF
CVLP_WINDOW.FWINDOW#
      7357**DCL      7357--REDEF    7358--REDEF
CXG$GETCMD
      9783**DCL-ENT  9838--CALL
E_READ
      9917**LABEL    9888--CALLALT
E_WRITE
      9914**LABEL    9874--CALLALT  9881--CALLALT
F$DCB.ACTPOS
      8663**DCL      8663--REDEF
F$DCB.ARS#
      8637**DCL      8637--REDEF    9889>>ASSIGN
F$DCB.ATTR
      8656**DCL      8657--REDEF
F$DCB.BORROW
      8671**DCL      8671--REDEF    8671--REDEF    8671--REDEF
F$DCB.DCBNAME.L
      8685**DCL      8685--IMP-SIZ
F$DCB.EOMCHAR#
      8641**DCL      8641--REDEF
F$DCB.FLDID
      8666**DCL      8666--REDEF
F$DCB.FORM$
      8660**DCL      8660--REDEF
F$DCB.FSECT
      8676**DCL      8676--REDEF
F$DCB.FSN#
      8653**DCL      8653--REDEF    8653--REDEF    8654--REDEF
F$DCB.HEADER$
      8659**DCL      8659--REDEF
F$DCB.IXTNSIZE#
      8657**DCL      8657--REDEF
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:139  
F$DCB.LASTSTA$
      8646**DCL      8646--REDEF
F$DCB.LVL
      8672**DCL      8672--REDEF
F$DCB.NAME#.C
      8647**DCL      8647--REDEF
F$DCB.NOEOF
      8669**DCL      8669--REDEF
F$DCB.NRECS#
      8658**DCL      8658--REDEF
F$DCB.NRECX
      8677**DCL      8677--REDEF
F$DCB.OHDR
      8669**DCL      8669--REDEF
F$DCB.ORG#
      8652**DCL      8652--REDEF
F$DCB.PRECNO
      8675**DCL      8675--REDEF
F$DCB.RCSZ
      8681**DCL      8681--REDEF
F$DCB.RES#
      8648**DCL      8648--REDEF
F$DCB.SETX
      8660**DCL      8660--REDEF
F$DCB.TAB$
      8660**DCL      8660--REDEF
F$DCB.TDA
      8674**DCL      8675--REDEF
F$DCB.WSN#
      8648**DCL      8648--REDEF
FPT$READ
      8577**DCL      9888<>CALL
FPT$READ.STATION_
      8580**DCL      8581--REDEF
FPT$READ.V.DVBYTE.REREAD#
      8592**DCL      8592--REDEF
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:140  
FPT$READ.V.INDX#
      8590**DCL      8590--REDEF
FPT$WRITE
      8616**DCL      9874<>CALL     9881<>CALL
FPT$WRITE.BUF_
      8616**DCL      9873<<ASSIGN   9875<<ASSIGN
FPT$WRITE.BUF_.BOUND
      8616**DCL      9831<<ASSIGN   9833<<ASSIGN   9857<<ASSIGN   9859<<ASSIGN   9880<<ASSIGN
FPT$WRITE.STATION_
      8618**DCL      8618--REDEF
FPT$WRITE.V.DVBYTE.VFC#
      8625**DCL      8625--REDEF
GET$CMD
      8999**DCL      9838<>CALL
GET$CMD.NODES$
      9000**DCL      9836<<ASSIGN
GET$CMD.OUT$
      9004**DCL      9010--REDEF
GET$CMD.SKIP_PREPROCESS#
      9080**DCL      9837<<ASSIGN
GET$CMD.TEXT_
      9262**DCL      9835<<ASSIGN   9839<<ASSIGN
GET$CMD.WORK$
      9032**DCL      9840>>ASSIGN
JOB_
      9768**DCL      9895--IF
M$IBEX1_NUM
      8417**DCL      9914<>CALL
M$IBEX_NUM
      8416**DCL      9889--ASSIGN
M$READ
       418**DCL-ENT  9888--CALL
M$WRITE
       418**DCL-ENT  9874--CALL     9881--CALL
P$PCB.NCHARS
      8853**DCL      9901<<ASSIGN   9907<<ASSIGN   9907>>ASSIGN
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:141  
P$PCB.ROOT$
      8711**DCL      9895>>IF
P$PCB.TEXT$
      8707**DCL      9821>>ASSIGN   9841>>CALL     9904<<ASSIGN   9906<<ASSIGN
PARAM$
      8985**DCL      8480--IMP-PTR  9817<<ASSIGN   9826>>CALLBLT  9826>>CALLBLT  9828>>IF       9833>>ASSIGN
      9835>>ASSIGN   9841>>CALL     9844>>ASSIGN   9847>>IF       9847>>IF       9847>>IF       9852>>CALLBLT
      9852>>CALLBLT  9854>>IF       9859>>ASSIGN   9865>>IF       9865>>IF       9869>>IF       9873>>ASSIGN
      9874>>CALL     9875>>ASSIGN   9875>>ASSIGN   9880>>ASSIGN   9880>>ASSIGN   9881>>CALL     9887>>ASSIGN
      9888>>CALL     9889>>ASSIGN   9894>>CALL     9896>>CALLBLT  9901>>ASSIGN   9902>>IF       9904>>ASSIGN
      9906>>ASSIGN
P_PARAM
      8907**DCL         6--PROC
P_PARAM.CHARPOS
      8945**DCL      9821>>ASSIGN   9896<<CALLBLT  9900<<ASSIGN
P_PARAM.PCB$
      8951**DCL      9821>>ASSIGN   9841>>CALL     9895>>IF       9901>>ASSIGN   9904>>ASSIGN   9906>>ASSIGN
      9907>>ASSIGN   9907>>ASSIGN
P_PARAM.USER$
      8955**DCL      9817>>ASSIGN   9898>>UNWIND
READBUF
      9789**DCL      9791--REDEF    9826>>CALLBLT  9835--ASSIGN   9852>>CALLBLT  9875--ASSIGN   9887<<ASSIGN
      9896>>CALLBLT
READBUFA
      9791**DCL      9821<<ASSIGN   9902>>IF
REMEM
      9815**DCL      9898>>UNWIND
SEG$2.ERRBUF
      8526**DCL      9822>>IF       9841<>CALL     9843<<ASSIGN
SEG$2.FLAGS.CONTINUED
      8510**DCL      9890<<ASSIGN
SEG$2.FPT_WRITECC$
      8537**DCL      9831>>ASSIGN   9833>>ASSIGN   9834<>CALL     9857>>ASSIGN   9859>>ASSIGN   9860<>CALL
SEG$2.GETCMD$
      8547**DCL      9835>>ASSIGN   9836>>ASSIGN   9837>>ASSIGN   9838>>CALL     9839>>ASSIGN   9840>>ASSIGN
SEG2$
PL6.E3A0      #005=CPH$CONTINUE File=CPH$SUBR.:E05TSI                            TUE 07/29/97 11:48 Page:142  
      8404**DCL      8501--IMP-PTR  9822>>IF       9831>>ASSIGN   9833>>ASSIGN   9834>>CALL     9835>>ASSIGN
      9836>>ASSIGN   9837>>ASSIGN   9838>>CALL     9839>>ASSIGN   9840>>ASSIGN   9841>>CALL     9843>>ASSIGN
      9857>>ASSIGN   9859>>ASSIGN   9860>>CALL     9890>>ASSIGN
SUB$PARAMS
      8480**DCL      9894<>CALL
SUB$PARAMS.BATCH_ABORTED#
      8497**DCL      9844<<ASSIGN   9865>>IF
SUB$PARAMS.BUF_LEN
      8492**DCL      9828>>IF       9833>>ASSIGN   9854>>IF       9859>>ASSIGN   9869>>IF       9880>>ASSIGN
      9889<<ASSIGN   9901>>ASSIGN
SUB$PARAMS.FPT_READ$
      8488**DCL      9888>>CALL
SUB$PARAMS.FPT_WRITE$
      8489**DCL      9873>>ASSIGN   9874>>CALL     9875>>ASSIGN   9880>>ASSIGN   9881>>CALL
SUB$PARAMS.PRINT_OPT#
      8495**DCL      9847>>IF
SUB$PARAMS.READBUF$
      8485**DCL      9826>>CALLBLT  9841>>CALL     9852>>CALLBLT  9875>>ASSIGN   9887>>ASSIGN   9896>>CALLBLT
      9902>>IF       9904>>ASSIGN   9906>>ASSIGN
SUB$PARAMS.SUB_MADE#
      8494**DCL      9847>>IF
SUB$PARAMS.TEST_OPT#
      8496**DCL      9847>>IF       9865>>IF
SUB$PARAMS.WRITEBUF$
      8487**DCL      9826>>CALLBLT  9835>>ASSIGN   9852>>CALLBLT
U$PARAM.PARAMS$
      8981**DCL      9817>>ASSIGN
U$PARAM.REMEM$
      8982**DCL      9898>>UNWIND
WRITEBUF
      9792**DCL      9826<<CALLBLT  9852<<CALLBLT
XUG$PARAMS.BUF
      9763**DCL      9766--REDEF
XUG$PARAMS.POFF
      9409**DCL      9840<<ASSIGN
