VERSION E05

PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:1    
        1        1         /*M* JPE$SUBR Contains modules concerned with error handling */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        JPE$ERRORS: PROC(ERR,FIELD1_);
        9        9         /*F*
       10       10             NAME: JPE$ERRORS
       11       11             CALL: CALL JPE$ERRORS(ERR,FIELD1_) ALTRET(LBL);
       12       12                     where: ERR is optional. If specified, report on that one error
       13       13                                only, otherwise report all errors in ERR_BLK.
       14       14                            FIELD1_ is optional and only meaningful if ERR was
       15       15                                  specified. It becomes FPT_ERRMSG.FIELD1_.
       16       16                            If this is not the second pass over the file then
       17       17                            M$LO has not been opened, and no errors can be
       18       18                            printed. The flag PASS_TWO# will signal whether
       19       19                            this is the second pass. If it is not set then
       20       20                            this routine will UNWIND to a label in JPA$PRESCAN.
       21       21        ****************************************************************** */
       22       22        %INCLUDE CP_6;
       23      103        %INCLUDE CP_6_SUBS;
       24      643        %INCLUDE CP_MACROS_C;
       25     1395        %INCLUDE AS_SUPER_C;
       26     1830        %INCLUDE KL_SUPER_C;
       27     4732        %INCLUDE JP_DATA_R;
       28     5277        %INCLUDE JP_MACRO_C;
       29     5432        /***** Parameters *****/
       30     5433    1     DCL ERR BIT(36) ALIGNED;
       31     5434    1     DCL FIELD1_ BIT(72) ALIGNED;
       32     5435        /***** Fpts *****/
       33     5436          %FPT_WRITE(FPTN = WRITE_LO,STCLASS = SYMREF);
       34     5467          %FPT_ERRMSG(FPTN = FPT_ERRMSG,STCLASS = STATIC,
       35     5468                      BUF = ERRBUF,
       36     5469                      CODE = ERROR,
       37     5470                      RESULTS = VLR_ERRMSG,
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:2    
       38     5471                      OUTDCB1 = M$LO,
       39     5472                      INCLCODE = NO,
       40     5473                      SUBMESS = YES);
       41     5500          %VLR_ERRMSG(FPTN = VLR_ERRMSG,STCLASS = STATIC);
       42     5522        /***** Local variables *****/
       43     5523    1     DCL ERRBUF CHAR(120) STATIC;
       44     5524    1     DCL INDX SBIN AUTO;
       45     5525        %JP_CONTINUE (STCLASS=SYMREF);
       46     5531    1     DCL RECX SBIN AUTO;
       47     5532    1     DCL RECEND UBIN AUTO;
       48     5533    1     DCL RECSTART UBIN AUTO;
       49     5534    1     DCL TEXT CHAR(256) BASED;
       50     5535          %ERR_CODE (NAME=ERROR,STCLASS=STATIC);
       51     5555    1     DCL BUFFER CHAR(256) AUTO;
       52     5556    1     DCL CHARPOS UBIN WORD AUTO;
       53     5557          %ERR_BLK (STCLASS = "SYMREF");
       54     5582    1     DCL START_PRINTING REMEMBER SYMREF;
       55     5583        /***** External routines *****/
       56     5584    1     DCL JPT$REPORT ENTRY(1);
       57     5585        %EJECT;
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:3    
       58     5586        /*
       59     5587             ***** If the PASS_TWO# flag is not set then the
       60     5588                   M$LO dcb has not been opened. Therefore, UNWIND
       61     5589                   back to the driver of PRESCAN and open the dcb
       62     5590                   and make a second pass over the source file ...
       63     5591        */
       64     5592    1       IF NOT PASS_TWO#
       65     5593    1       THEN
       66     5594    2         DO;
       67     5595    2           IF ADDR(ERR) ~= ADDR(NIL) OR ERR_BLK.FIRST ~= 0
       68     5596    2           THEN
       69     5597    2             UNWIND TO START_PRINTING;
       70     5598    2           RETURN;
       71     5599    2         END;
       72     5600    1       RECX = 0; /* PASS2 - echo the command and print the errors */
       73     5601    1       RECSTART = 0;
       74     5602    2       DO WHILE (RECX <= JP_CONTINUE.REC_NUM);
       75     5603    2         IF RECX < JP_CONTINUE.REC_NUM
       76     5604    2         THEN
       77     5605    3           DO;
       78     5606    3             RECEND = JP_CONTINUE.CHARPOS(RECX+1);
       79     5607    3             SUBSTR(TEXT$->TEXT,RECEND,1) = ';';
       80     5608    3             IF SUBSTR(TEXT$->TEXT,RECEND+1,1) = ' '
       81     5609    3             THEN
       82     5610    3               SUBSTR(TEXT$->TEXT,RECEND+1,1) = '!';
       83     5611    3           END;
       84     5612    2         ELSE
       85     5613    2           RECEND = RECSTART+JP_CONTINUE.LEN(RECX);
       86     5614    2         WRITE_LO.BUF_.BUF$ = PINCRC(TEXT$,RECSTART);
       87     5615    2         WRITE_LO.BUF_.BOUND = RECEND-RECSTART;
       88     5616    2         CALL M$WRITE (WRITE_LO) ALTRET(E_PMME);
       89     5617         /*
       90     5618             ***** Insert the arrows...
       91     5619         */
       92     5620    2         WRITE_LO.BUF_.BUF$ = ADDR(BUFFER);
       93     5621    2         BUFFER = ' ';
       94     5622    2         INDX = ERR_BLK.FIRST;
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:4    
       95     5623    3         DO WHILE(INDX ~= 0);
       96     5624    3           CHARPOS = ERR_BLK.BLK.CHARPOS(INDX) + 1; /* Offset for ! */
       97     5625    3           IF CHARPOS < RECSTART
       98     5626    3           THEN
       99     5627    3             ERR_BLK.FIRST = ERR_BLK.BLK.LINK(INDX);
      100     5628    3           ELSE
      101     5629    3             IF CHARPOS <= RECEND
      102     5630    3             THEN
      103     5631    3               CALL INSERT (BUFFER,CHARPOS-RECSTART,1,'^');
      104     5632    3             ELSE
      105     5633    3               IF RECX < JP_CONTINUE.REC_NUM
      106     5634    3               THEN
      107     5635    3                 EXIT;
      108     5636    3           INDX = ERR_BLK.BLK.LINK(INDX);
      109     5637    3         END; /* Do while ... end */
      110     5638    2         IF BUFFER ~= ' '
      111     5639    2         THEN
      112     5640    2           CALL M$WRITE(WRITE_LO) ALTRET(E_PMME);
      113     5641         /*
      114     5642             ***** Print all the errmsgs...
      115     5643         */
      116     5644    2         RECSTART = INDX; /* Save first INDX for next line */
      117     5645    2         INDX = ERR_BLK.FIRST;
      118     5646    3         DO WHILE (INDX ~= 0);
      119     5647    3           IF INDX = RECSTART
      120     5648    3           THEN
      121     5649    3             EXIT;
      122     5650    3           ERROR = ERR_BLK.BLK.ERROR(INDX);
      123     5651    3           IF ERROR.MON = %YES#
      124     5652    3           THEN   /* Set SEV to zero. */
      125     5653    3             ERROR.SEV = 0;
      126     5654    3           FPT_ERRMSG.V.DCB# = ERR_BLK.BLK.DCB#(INDX);
      127     5655    3           CALL M$ERRMSG (FPT_ERRMSG) ALTRET(E_PMME);
      128     5656    3           INDX = ERR_BLK.BLK.LINK(INDX);
      129     5657    3         END;
      130     5658    2         RECSTART = RECEND+1;
      131     5659    2         RECX = RECX+1;
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:5    
      132     5660    2       END;
      133     5661    1       JP_CONTINUE.REC_NUM = -1; /* only echo and print errors once. */
      134     5662    1       IF ADDR(ERR) ~= ADDR(NIL)
      135     5663    1       THEN
      136     5664    2         DO; /* Print the error passed */
      137     5665    2           ERROR = ERR;
      138     5666    2           IF ERROR.MON = %YES#
      139     5667    2           THEN   /* Set SEV to zero */
      140     5668    2             ERROR.SEV = 0;
      141     5669    2           IF ADDR(FIELD1_) ~= ADDR(NIL)
      142     5670    2           THEN
      143     5671    2             FPT_ERRMSG.FIELD1_ = FIELD1_;
      144     5672    2           ELSE
      145     5673    2             FPT_ERRMSG.FIELD1_ = VECTOR(NIL);
      146     5674    2           CALL M$ERRMSG(FPT_ERRMSG) ALTRET(E_PMME);
      147     5675    2         END;
      148     5676    1       RETURN;
      149     5677    1   E_PMME:
      150     5678    1       CALL JPT$REPORT;
      151     5679    1       RETURN;
      152     5680    1   END JPE$ERRORS;
      153     5681        %EOD;

PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:6    
--  Include file information  --

   JP_MACRO_C.:E05TOU  is referenced.
   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPE$ERRORS.

   Procedure JPE$ERRORS requires 175 words for executable code.
   Procedure JPE$ERRORS requires 76 words of local(AUTO) storage.

PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:7    

 Object Unit name= JPE$ERRORS                                 File name= JPE$SUBR.:E05TOU
 UTS= JUL 29 '97 23:36:08.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$CG
    2   DCB   even  none     0      0  M$EI
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$JOBSTAT
    5   DCB   even  none     0      0  M$HLP
    6   DCB   even  none     0      0  M$USERS
    7   Data  even  none    61     75  JPE$ERRORS
    8   Proc  even  none   175    257  JPE$ERRORS
    9  RoData even  none     6      6  JPE$ERRORS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        2  JPE$ERRORS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 JPT$REPORT
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$TCB$                           r    TEXT$
     M$CG                                  M$EI                                  M$LO
     M$JOBSTAT                             M$HLP                                 M$USERS
     PASS_TWO#                             ES$                                   WRITE_LO
     JP_CONTINUE                           ERR_BLK                               START_PRINTING
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:9    


        1        1         /*M* JPE$SUBR Contains modules concerned with error handling */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        JPE$ERRORS: PROC(ERR,FIELD1_);

      8  8 000000   000000 700200 xent  JPE$ERRORS   TSX0  ! X66_AUTO_2
         8 000001   000114 000002                    ZERO    76,2

        9        9         /*F*
       10       10             NAME: JPE$ERRORS
       11       11             CALL: CALL JPE$ERRORS(ERR,FIELD1_) ALTRET(LBL);
       12       12                     where: ERR is optional. If specified, report on that one error
       13       13                                only, otherwise report all errors in ERR_BLK.
       14       14                            FIELD1_ is optional and only meaningful if ERR was
       15       15                                  specified. It becomes FPT_ERRMSG.FIELD1_.
       16       16                            If this is not the second pass over the file then
       17       17                            M$LO has not been opened, and no errors can be
       18       18                            printed. The flag PASS_TWO# will signal whether
       19       19                            this is the second pass. If it is not set then
       20       20                            this routine will UNWIND to a label in JPA$PRESCAN.
       21       21        ****************************************************************** */
       22       22        %INCLUDE CP_6;
       23      103        %INCLUDE CP_6_SUBS;
       24      643        %INCLUDE CP_MACROS_C;
       25     1395        %INCLUDE AS_SUPER_C;
       26     1830        %INCLUDE KL_SUPER_C;
       27     4732        %INCLUDE JP_DATA_R;
       28     5277        %INCLUDE JP_MACRO_C;
       29     5432        /***** Parameters *****/
       30     5433    1     DCL ERR BIT(36) ALIGNED;
       31     5434    1     DCL FIELD1_ BIT(72) ALIGNED;
       32     5435        /***** Fpts *****/
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:10   
       33     5436          %FPT_WRITE(FPTN = WRITE_LO,STCLASS = SYMREF);
       34     5467          %FPT_ERRMSG(FPTN = FPT_ERRMSG,STCLASS = STATIC,
       35     5468                      BUF = ERRBUF,
       36     5469                      CODE = ERROR,
       37     5470                      RESULTS = VLR_ERRMSG,
       38     5471                      OUTDCB1 = M$LO,
       39     5472                      INCLCODE = NO,
       40     5473                      SUBMESS = YES);
       41     5500          %VLR_ERRMSG(FPTN = VLR_ERRMSG,STCLASS = STATIC);
       42     5522        /***** Local variables *****/
       43     5523    1     DCL ERRBUF CHAR(120) STATIC;
       44     5524    1     DCL INDX SBIN AUTO;
       45     5525        %JP_CONTINUE (STCLASS=SYMREF);
       46     5531    1     DCL RECX SBIN AUTO;
       47     5532    1     DCL RECEND UBIN AUTO;
       48     5533    1     DCL RECSTART UBIN AUTO;
       49     5534    1     DCL TEXT CHAR(256) BASED;
       50     5535          %ERR_CODE (NAME=ERROR,STCLASS=STATIC);
       51     5555    1     DCL BUFFER CHAR(256) AUTO;
       52     5556    1     DCL CHARPOS UBIN WORD AUTO;
       53     5557          %ERR_BLK (STCLASS = "SYMREF");
       54     5582    1     DCL START_PRINTING REMEMBER SYMREF;
       55     5583        /***** External routines *****/
       56     5584    1     DCL JPT$REPORT ENTRY(1);
       57     5585        %EJECT;
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:11   
       58     5586        /*
       59     5587             ***** If the PASS_TWO# flag is not set then the
       60     5588                   M$LO dcb has not been opened. Therefore, UNWIND
       61     5589                   back to the driver of PRESCAN and open the dcb
       62     5590                   and make a second pass over the source file ...
       63     5591        */
       64     5592    1       IF NOT PASS_TWO#

   5592  8 000002   000000 234000 xsym               SZN     PASS_TWO#
         8 000003   000015 604000 8                  TMI     s:5600

       65     5593    1       THEN
       66     5594    2         DO;

       67     5595    2           IF ADDR(ERR) ~= ADDR(NIL) OR ERR_BLK.FIRST ~= 0

   5595  8 000004   200003 236100                    LDQ     @ERR,,AUTO
         8 000005   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000006   000011 601000 8                  TNZ     s:5597
         8 000007   000001 235000 xsym               LDA     ERR_BLK+1
         8 000010   000014 600000 8                  TZE     s:5598

       68     5596    2           THEN
       69     5597    2             UNWIND TO START_PRINTING;

   5597  8 000011   000000 237200 xsym               LDAQ  ! START_PRINTING
         8 000012   000000 700200 xent               TSX0  ! X66_AUNWIND
         8 000013   000000 000200                    ZERO    0,128

       70     5598    2           RETURN;

   5598  8 000014   000000 702200 xent               TSX2  ! X66_ARET

       71     5599    2         END;
       72     5600    1       RECX = 0; /* PASS2 - echo the command and print the errors */

   5600  8 000015   200006 450100                    STZ     RECX,,AUTO
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:12   

       73     5601    1       RECSTART = 0;

   5601  8 000016   200010 450100                    STZ     RECSTART,,AUTO

       74     5602    2       DO WHILE (RECX <= JP_CONTINUE.REC_NUM);

   5602  8 000017   200006 236100                    LDQ     RECX,,AUTO
         8 000020   000000 116000 xsym               CMPQ    JP_CONTINUE
         8 000021   000220 605400 8                  TPNZ    s:5661

       75     5603    2         IF RECX < JP_CONTINUE.REC_NUM

   5603  8 000022   200006 236100                    LDQ     RECX,,AUTO
         8 000023   000000 116000 xsym               CMPQ    JP_CONTINUE
         8 000024   000047 605000 8                  TPL     s:5613

       76     5604    2         THEN
       77     5605    3           DO;

       78     5606    3             RECEND = JP_CONTINUE.CHARPOS(RECX+1);

   5606  8 000025   200006 235100                    LDA     RECX,,AUTO
         8 000026   000001 735000                    ALS     1
         8 000027   000100 101405                    MRL     fill='000'O
         8 000030   000001 400002 xsym               ADSC9   JP_CONTINUE+1,A          cn=2,n=2
         8 000031   200007 000004                    ADSC9   RECEND,,AUTO             cn=0,n=4

       79     5607    3             SUBSTR(TEXT$->TEXT,RECEND,1) = ';';

   5607  8 000032   000000 470400 xsym               LDP0    TEXT$
         8 000033   200007 235100                    LDA     RECEND,,AUTO
         8 000034   040105 100400                    MLR     fill='040'O
         8 000035   000000 000001 9                  ADSC9   0                        cn=0,n=1
         8 000036   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

       80     5608    3             IF SUBSTR(TEXT$->TEXT,RECEND+1,1) = ' '
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:13   

   5608  8 000037   040000 106505                    CMPC    fill='040'O
         8 000040   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         8 000041   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000042   000055 601000 8                  TNZ     s:5614

       81     5609    3             THEN
       82     5610    3               SUBSTR(TEXT$->TEXT,RECEND+1,1) = '!';

   5610  8 000043   040105 100400                    MLR     fill='040'O
         8 000044   000001 000001 9                  ADSC9   1                        cn=0,n=1
         8 000045   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1

       83     5611    3           END;

   5611  8 000046   000055 710000 8                  TRA     s:5614

       84     5612    2         ELSE
       85     5613    2           RECEND = RECSTART+JP_CONTINUE.LEN(RECX);

   5613  8 000047   000100 101406                    MRL     fill='000'O
         8 000050   000032 000001 xsym               ADSC9   JP_CONTINUE+26,Q         cn=0,n=1
         8 000051   200112 000004                    ADSC9   CHARPOS+1,,AUTO          cn=0,n=4
         8 000052   200112 236100                    LDQ     CHARPOS+1,,AUTO
         8 000053   200010 036100                    ADLQ    RECSTART,,AUTO
         8 000054   200007 756100                    STQ     RECEND,,AUTO

       86     5614    2         WRITE_LO.BUF_.BUF$ = PINCRC(TEXT$,RECSTART);

   5614  8 000055   200010 236100                    LDQ     RECSTART,,AUTO
         8 000056   000020 736000                    QLS     16
         8 000057   000000 036000 xsym               ADLQ    TEXT$
         8 000060   000005 756000 xsym               STQ     WRITE_LO+5

       87     5615    2         WRITE_LO.BUF_.BOUND = RECEND-RECSTART;

   5615  8 000061   200007 236100                    LDQ     RECEND,,AUTO
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:14   
         8 000062   200010 136100                    SBLQ    RECSTART,,AUTO
         8 000063   000020 736000                    QLS     16
         8 000064   000004 676000 xsym               ERQ     WRITE_LO+4
         8 000065   000034 376000 xsym               ANQ     B_VECTNIL+28
         8 000066   000004 656000 xsym               ERSQ    WRITE_LO+4

       88     5616    2         CALL M$WRITE (WRITE_LO) ALTRET(E_PMME);

   5616  8 000067   000000 630400 xsym               EPPR0   WRITE_LO
         8 000070   440001 713400                    CLIMB   alt,write
         8 000071   401400 401760                    pmme    nvectors=4
         8 000072   000253 702000 8                  TSX2    E_PMME

       89     5617         /*
       90     5618             ***** Insert the arrows...
       91     5619         */
       92     5620    2         WRITE_LO.BUF_.BUF$ = ADDR(BUFFER);

   5620  8 000073   200011 630500                    EPPR0   BUFFER,,AUTO
         8 000074   000005 450400 xsym               STP0    WRITE_LO+5

       93     5621    2         BUFFER = ' ';

   5621  8 000075   040100 100400                    MLR     fill='040'O
         8 000076   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000077   200011 000400                    ADSC9   BUFFER,,AUTO             cn=0,n=256

       94     5622    2         INDX = ERR_BLK.FIRST;

   5622  8 000100   000001 235000 xsym               LDA     ERR_BLK+1
         8 000101   200005 755100                    STA     INDX,,AUTO

       95     5623    3         DO WHILE(INDX ~= 0);

   5623  8 000102   000140 600000 8                  TZE     s:5638

       96     5624    3           CHARPOS = ERR_BLK.BLK.CHARPOS(INDX) + 1; /* Offset for ! */
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:15   

   5624  8 000103   200005 235100                    LDA     INDX,,AUTO
         8 000104   000001 735000                    ALS     1
         8 000105   000003 236005 xsym               LDQ     ERR_BLK+3,AL
         8 000106   000033 772000                    QRL     27
         8 000107   000001 036007                    ADLQ    1,DL
         8 000110   200111 756100                    STQ     CHARPOS,,AUTO

       97     5625    3           IF CHARPOS < RECSTART

   5625  8 000111   200010 116100                    CMPQ    RECSTART,,AUTO
         8 000112   000120 603000 8                  TRC     s:5629

       98     5626    3           THEN
       99     5627    3             ERR_BLK.FIRST = ERR_BLK.BLK.LINK(INDX);

   5627  8 000113   000003 236005 xsym               LDQ     ERR_BLK+3,AL
         8 000114   000022 772000                    QRL     18
         8 000115   000777 376007                    ANQ     511,DL
         8 000116   000001 756000 xsym               STQ     ERR_BLK+1
         8 000117   000133 710000 8                  TRA     s:5636

      100     5628    3           ELSE
      101     5629    3             IF CHARPOS <= RECEND

   5629  8 000120   200007 116100                    CMPQ    RECEND,,AUTO
         8 000121   000123 600000 8                  TZE     s:5631
         8 000122   000130 603000 8                  TRC     s:5633

      102     5630    3             THEN
      103     5631    3               CALL INSERT (BUFFER,CHARPOS-RECSTART,1,'^');

   5631  8 000123   200010 136100                    SBLQ    RECSTART,,AUTO
         8 000124   040106 100400                    MLR     fill='040'O
         8 000125   000002 000001 9                  ADSC9   2                        cn=0,n=1
         8 000126   200011 000001                    ADSC9   BUFFER,Q,AUTO            cn=0,n=1
         8 000127   000133 710000 8                  TRA     s:5636
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:16   

      104     5632    3             ELSE
      105     5633    3               IF RECX < JP_CONTINUE.REC_NUM

   5633  8 000130   200006 236100                    LDQ     RECX,,AUTO
         8 000131   000000 116000 xsym               CMPQ    JP_CONTINUE
         8 000132   000140 604000 8                  TMI     s:5638

      106     5634    3               THEN
      107     5635    3                 EXIT;
      108     5636    3           INDX = ERR_BLK.BLK.LINK(INDX);

   5636  8 000133   000003 236005 xsym               LDQ     ERR_BLK+3,AL
         8 000134   000022 772000                    QRL     18
         8 000135   000777 376007                    ANQ     511,DL
         8 000136   200005 756100                    STQ     INDX,,AUTO

      109     5637    3         END; /* Do while ... end */

   5637  8 000137   000103 601000 8                  TNZ     s:5624

      110     5638    2         IF BUFFER ~= ' '

   5638  8 000140   040000 106500                    CMPC    fill='040'O
         8 000141   200011 000400                    ADSC9   BUFFER,,AUTO             cn=0,n=256
         8 000142   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000143   000150 600000 8                  TZE     s:5644

      111     5639    2         THEN
      112     5640    2           CALL M$WRITE(WRITE_LO) ALTRET(E_PMME);

   5640  8 000144   000000 630400 xsym               EPPR0   WRITE_LO
         8 000145   440001 713400                    CLIMB   alt,write
         8 000146   401400 401760                    pmme    nvectors=4
         8 000147   000253 702000 8                  TSX2    E_PMME

      113     5641         /*
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:17   
      114     5642             ***** Print all the errmsgs...
      115     5643         */
      116     5644    2         RECSTART = INDX; /* Save first INDX for next line */

   5644  8 000150   200005 235100                    LDA     INDX,,AUTO
         8 000151   200010 755100                    STA     RECSTART,,AUTO

      117     5645    2         INDX = ERR_BLK.FIRST;

   5645  8 000152   000001 236000 xsym               LDQ     ERR_BLK+1
         8 000153   200005 756100                    STQ     INDX,,AUTO

      118     5646    3         DO WHILE (INDX ~= 0);

   5646  8 000154   000211 600000 8                  TZE     s:5658

      119     5647    3           IF INDX = RECSTART

   5647  8 000155   200005 236100                    LDQ     INDX,,AUTO
         8 000156   000161 604000 8                  TMI     s:5650
         8 000157   200010 116100                    CMPQ    RECSTART,,AUTO
         8 000160   000211 600000 8                  TZE     s:5658

      120     5648    3           THEN
      121     5649    3             EXIT;
      122     5650    3           ERROR = ERR_BLK.BLK.ERROR(INDX);

   5650  8 000161   200005 235100                    LDA     INDX,,AUTO
         8 000162   000001 735000                    ALS     1
         8 000163   000004 236005 xsym               LDQ     ERR_BLK+4,AL
         8 000164   000074 756000 7                  STQ     ERROR

      123     5651    3           IF ERROR.MON = %YES#

   5651  8 000165   400000 316007                    CANQ    -131072,DL
         8 000166   000171 600000 8                  TZE     s:5654

PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:18   
      124     5652    3           THEN   /* Set SEV to zero. */
      125     5653    3             ERROR.SEV = 0;

   5653  8 000167   000003 236000 9                  LDQ     3
         8 000170   000074 356000 7                  ANSQ    ERROR

      126     5654    3           FPT_ERRMSG.V.DCB# = ERR_BLK.BLK.DCB#(INDX);

   5654  8 000171   000003 236005 xsym               LDQ     ERR_BLK+3,AL
         8 000172   000011 772000                    QRL     9
         8 000173   000777 376007                    ANQ     511,DL
         8 000174   000000 620006                    EAX0    0,QL
         8 000175   000026 740000 7                  STX0    FPT_ERRMSG+22

      127     5655    3           CALL M$ERRMSG (FPT_ERRMSG) ALTRET(E_PMME);

   5655  8 000176   000000 630400 7                  EPPR0   FPT_ERRMSG
         8 000177   420000 713400                    CLIMB   alt,+8192
         8 000200   405000 401760                    pmme    nvectors=11
         8 000201   000253 702000 8                  TSX2    E_PMME

      128     5656    3           INDX = ERR_BLK.BLK.LINK(INDX);

   5656  8 000202   200005 235100                    LDA     INDX,,AUTO
         8 000203   000001 735000                    ALS     1
         8 000204   000003 236005 xsym               LDQ     ERR_BLK+3,AL
         8 000205   000022 772000                    QRL     18
         8 000206   000777 376007                    ANQ     511,DL
         8 000207   200005 756100                    STQ     INDX,,AUTO

      129     5657    3         END;

   5657  8 000210   000155 601000 8                  TNZ     s:5647

      130     5658    2         RECSTART = RECEND+1;

   5658  8 000211   200007 235100                    LDA     RECEND,,AUTO
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:19   
         8 000212   000001 035007                    ADLA    1,DL
         8 000213   200010 755100                    STA     RECSTART,,AUTO

      131     5659    2         RECX = RECX+1;

   5659  8 000214   200006 054100                    AOS     RECX,,AUTO

      132     5660    2       END;

   5660  8 000215   200006 236100                    LDQ     RECX,,AUTO
         8 000216   000000 116000 xsym               CMPQ    JP_CONTINUE
         8 000217   000022 604400 8                  TMOZ    s:5603

      133     5661    1       JP_CONTINUE.REC_NUM = -1; /* only echo and print errors once. */

   5661  8 000220   000001 335007                    LCA     1,DL
         8 000221   000000 755000 xsym               STA     JP_CONTINUE

      134     5662    1       IF ADDR(ERR) ~= ADDR(NIL)

   5662  8 000222   200003 236100                    LDQ     @ERR,,AUTO
         8 000223   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000224   000252 600000 8                  TZE     s:5676

      135     5663    1       THEN
      136     5664    2         DO; /* Print the error passed */

      137     5665    2           ERROR = ERR;

   5665  8 000225   200003 470500                    LDP0    @ERR,,AUTO
         8 000226   000000 236100                    LDQ     0,,PR0
         8 000227   000074 756000 7                  STQ     ERROR

      138     5666    2           IF ERROR.MON = %YES#

   5666  8 000230   400000 316007                    CANQ    -131072,DL
         8 000231   000234 600000 8                  TZE     s:5669
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:20   

      139     5667    2           THEN   /* Set SEV to zero */
      140     5668    2             ERROR.SEV = 0;

   5668  8 000232   000003 236000 9                  LDQ     3
         8 000233   000074 356000 7                  ANSQ    ERROR

      141     5669    2           IF ADDR(FIELD1_) ~= ADDR(NIL)

   5669  8 000234   200004 236100                    LDQ     @FIELD1_,,AUTO
         8 000235   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 000236   000244 600000 8                  TZE     s:5673

      142     5670    2           THEN
      143     5671    2             FPT_ERRMSG.FIELD1_ = FIELD1_;

   5671  8 000237   200004 471500                    LDP1    @FIELD1_,,AUTO
         8 000240   000000 100500                    MLR     fill='000'O
         8 000241   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         8 000242   000014 000010 7                  ADSC9   FPT_ERRMSG+12            cn=0,n=8
         8 000243   000246 710000 8                  TRA     s:5674

      144     5672    2           ELSE
      145     5673    2             FPT_ERRMSG.FIELD1_ = VECTOR(NIL);

   5673  8 000244   000004 237000 9                  LDAQ    4
         8 000245   000014 757000 7                  STAQ    FPT_ERRMSG+12

      146     5674    2           CALL M$ERRMSG(FPT_ERRMSG) ALTRET(E_PMME);

   5674  8 000246   000000 630400 7                  EPPR0   FPT_ERRMSG
         8 000247   420000 713400                    CLIMB   alt,+8192
         8 000250   405000 401760                    pmme    nvectors=11
         8 000251   000253 702000 8                  TSX2    E_PMME

      147     5675    2         END;

PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:21   
      148     5676    1       RETURN;

   5676  8 000252   000000 702200 xent               TSX2  ! X66_ARET

      149     5677    1   E_PMME:
      150     5678    1       CALL JPT$REPORT;

   5678  8 000253   000002 631400 xsym  E_PMME       EPPR1   B_VECTNIL+2
         8 000254   000000 701000 xent               TSX1    JPT$REPORT
         8 000255   000000 011000                    NOP     0

      151     5679    1       RETURN;

   5679  8 000256   000000 702200 xent               TSX2  ! X66_ARET
      152     5680    1   END JPE$ERRORS;
      153     5681        %EOD;

PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:22   
--  Include file information  --

   JP_MACRO_C.:E05TOU  is referenced.
   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPE$ERRORS.
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:23   

 **** Variables and constants ****

  ****  Section 007  Data  JPE$ERRORS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    36-0-0/c CHAR(120)   r     1 ERRBUF                    74-0-0/w STRC        r     1 ERROR
     0-0-0/d STRC(936)   r     1 FPT_ERRMSG                32-0-0/d STRC(144)   r     1 VLR_ERRMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR                       4-0-0/w PTR         r     1 @FIELD1_
    11-0-0/c CHAR(256)   r     1 BUFFER                   111-0-0/w UBIN        r     1 CHARPOS
    *0-0-0/w BIT         r     1 ERR                       *0-0-0/w BIT (72)    r     1 FIELD1_
     5-0-0/w SBIN        r     1 INDX                       7-0-0/w UBIN        r     1 RECEND
    10-0-0/w UBIN        r     1 RECSTART                   6-0-0/w SBIN        r     1 RECX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(828)   r     1 ERR_BLK
     0-0-0/w PTR         r     1 ES$                        0-0-0/w STRC(1386)  r     1 JP_CONTINUE
     0-0-0/b BIT         r     1 PASS_TWO#                  0-0-0/d REMB        r     1 START_PRINTING
     0-0-0/w PTR         r     1 TEXT$                      0-0-0/d STRC(432)   r     1 WRITE_LO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$LO
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:24   
     0-0-0/c CHAR(256)   r     1 TEXT


   Procedure JPE$ERRORS requires 175 words for executable code.
   Procedure JPE$ERRORS requires 76 words of local(AUTO) storage.
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:26   
          MINI XREF LISTING

AS_USERS.BANNER_PERM
      5036**DCL      5037--REDEF
AS_USERS.BUDGET.MACCT
      4941**DCL      4945--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      4954**DCL      4957--REDEF
AS_USERS.BUDGET.PACCUM
      4937**DCL      4939--REDEF
AS_USERS.BUDGET.PMAXC
      4932**DCL      4934--REDEF
AS_USERS.SETUP_CHRA.TXT
      5052**DCL      5053--REDEF    5054--REDEF
B$ALT.CODE
      4845**DCL      4845--REDEF    4846--REDEF    4846--REDEF
B$ALT.ERR.ERR#
      4847**DCL      4847--REDEF
B$ALT.EVID
      4846**DCL      4846--REDEF    4846--REDEF
B$TCB$
      4835**DCL      4841--IMP-PTR
BUFFER
      5555**DCL      5620--ASSIGN   5621<<ASSIGN   5631<<CALLBLT  5638>>IF
CHARPOS
      5556**DCL      5624<<ASSIGN   5625>>IF       5629>>IF       5631>>CALLBLT
ERR
      5433**DCL         8--PROC     5595--IF       5662--IF       5665>>ASSIGN
ERRBUF
      5523**DCL      5485--DCLINIT
ERROR
      5548**DCL      5484--DCLINIT  5650<<ASSIGN   5665<<ASSIGN
ERROR.MON
      5551**DCL      5651>>IF       5666>>IF
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:27   
ERROR.SEV
      5553**DCL      5653<<ASSIGN   5668<<ASSIGN
ERR_BLK.BLK.CHARPOS
      5576**DCL      5624>>ASSIGN
ERR_BLK.BLK.DCB#
      5578**DCL      5654>>ASSIGN
ERR_BLK.BLK.ERROR
      5580**DCL      5650>>ASSIGN
ERR_BLK.BLK.LINK
      5577**DCL      5627>>ASSIGN   5636>>ASSIGN   5656>>ASSIGN
ERR_BLK.FIRST
      5573**DCL      5595>>IF       5622>>ASSIGN   5627<<ASSIGN   5645>>ASSIGN
ES$
      5270**DCL      5271--REDEF    5274--IMP-PTR
E_PMME
      5678**LABEL    5616--CALLALT  5640--CALLALT  5655--CALLALT  5674--CALLALT
F$DCB.ACTPOS
      4884**DCL      4884--REDEF
F$DCB.ARS#
      4858**DCL      4858--REDEF
F$DCB.ATTR
      4877**DCL      4878--REDEF
F$DCB.BORROW
      4892**DCL      4892--REDEF    4892--REDEF    4892--REDEF
F$DCB.DCBNAME.L
      4906**DCL      4906--IMP-SIZ
F$DCB.EOMCHAR#
      4862**DCL      4862--REDEF
F$DCB.FLDID
      4887**DCL      4887--REDEF
F$DCB.FORM$
      4881**DCL      4881--REDEF
F$DCB.FSECT
      4897**DCL      4897--REDEF
F$DCB.FSN#
      4874**DCL      4874--REDEF    4874--REDEF    4875--REDEF
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:28   
F$DCB.HEADER$
      4880**DCL      4880--REDEF
F$DCB.IXTNSIZE#
      4878**DCL      4878--REDEF
F$DCB.LASTSTA$
      4867**DCL      4867--REDEF
F$DCB.LVL
      4893**DCL      4893--REDEF
F$DCB.NAME#.C
      4868**DCL      4868--REDEF
F$DCB.NOEOF
      4890**DCL      4890--REDEF
F$DCB.NRECS#
      4879**DCL      4879--REDEF
F$DCB.NRECX
      4898**DCL      4898--REDEF
F$DCB.OHDR
      4890**DCL      4890--REDEF
F$DCB.ORG#
      4873**DCL      4873--REDEF
F$DCB.PRECNO
      4896**DCL      4896--REDEF
F$DCB.RCSZ
      4902**DCL      4902--REDEF
F$DCB.RES#
      4869**DCL      4869--REDEF
F$DCB.SETX
      4881**DCL      4881--REDEF
F$DCB.TAB$
      4881**DCL      4881--REDEF
F$DCB.TDA
      4895**DCL      4896--REDEF
F$DCB.WSN#
      4869**DCL      4869--REDEF
FIELD1_
      5434**DCL         8--PROC     5669--IF       5671>>ASSIGN
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:29   
FPT_ERRMSG
      5484**DCL      5655<>CALL     5674<>CALL
FPT_ERRMSG.FIELD1_
      5486**DCL      5671<<ASSIGN   5673<<ASSIGN
FPT_ERRMSG.V
      5488**DCL      5484--DCLINIT
FPT_ERRMSG.V.DCB#
      5488**DCL      5654<<ASSIGN
INDX
      5524**DCL      5622<<ASSIGN   5623>>DOWHILE  5624>>ASSIGN   5627>>ASSIGN   5636<<ASSIGN   5636>>ASSIGN
      5644>>ASSIGN   5645<<ASSIGN   5646>>DOWHILE  5647>>IF       5650>>ASSIGN   5654>>ASSIGN   5656<<ASSIGN
      5656>>ASSIGN
JPT$REPORT
      5584**DCL-ENT  5678--CALL
JP_CONTINUE.CHARPOS
      5528**DCL      5606>>ASSIGN
JP_CONTINUE.LEN
      5529**DCL      5613>>ASSIGN
JP_CONTINUE.REC_NUM
      5527**DCL      5602>>DOWHILE  5603>>IF       5633>>IF       5661<<ASSIGN
KL_DREC.PASSWORD
      5157**DCL      5161--REDEF
KL_DREC.RENAME
      5180**DCL      5181--REDEF
M$ERRMSG
        94**DCL-ENT  5655--CALL     5674--CALL
M$WRITE
        32**DCL-ENT  5616--CALL     5640--CALL
PASS_TWO#
      5259**DCL      5592>>IF
READ_CARD.STATION_
      4806**DCL      4807--REDEF
READ_CARD.V.DVBYTE.REREAD#
      4818**DCL      4818--REDEF
READ_CARD.V.INDX#
      4816**DCL      4816--REDEF
PL6.E3A0      #001=JPE$ERRORS File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:30   
RECEND
      5532**DCL      5606<<ASSIGN   5607>>ASSIGN   5608>>IF       5610>>ASSIGN   5613<<ASSIGN   5615>>ASSIGN
      5629>>IF       5658>>ASSIGN
RECSTART
      5533**DCL      5601<<ASSIGN   5613>>ASSIGN   5614>>ASSIGN   5615>>ASSIGN   5625>>IF       5631>>CALLBLT
      5644<<ASSIGN   5647>>IF       5658<<ASSIGN
RECX
      5531**DCL      5600<<ASSIGN   5602>>DOWHILE  5603>>IF       5606>>ASSIGN   5613>>ASSIGN   5633>>IF
      5659<<ASSIGN   5659>>ASSIGN
START_PRINTING
      5582**DCL      5597>>UNWIND
TEXT
      5534**DCL      5607<<ASSIGN   5608>>IF       5610<<ASSIGN
TEXT$
      4836**DCL      5607>>ASSIGN   5608>>IF       5610>>ASSIGN   5614>>ASSIGN
VLR_ERRMSG
      5511**DCL      5488--DCLINIT
WRITE_LO
      5453**DCL      5616<>CALL     5640<>CALL
WRITE_LO.BUF_.BOUND
      5453**DCL      5615<<ASSIGN
WRITE_LO.BUF_.BUF$
      5455**DCL      5614<<ASSIGN   5620<<ASSIGN
WRITE_LO.STATION_
      5455**DCL      5455--REDEF
WRITE_LO.V.DVBYTE.VFC#
      5462**DCL      5462--REDEF

PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:31   
      154        1        /*T***********************************************************/
      155        2        /*T*                                                         */
      156        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      157        4        /*T*                                                         */
      158        5        /*T***********************************************************/
      159        6        JPE$REASON: PROC(REASON);
      160        7        /*F*       NAME:    JPE$REASON
      161        8                   PURPOSE: To save the first reason found for rejecting
      162        9                            the job currently being processed.
      163       10        */
      164       11        %INCLUDE JM$STRUCT;
      165      756        %INCLUDE XSJ_SUBS_C;
      166      783    1     DCL REASON SBIN;
      167      784    1     DCL CUR_RECNO SBIN SYMREF;
      168      785    1     DCL BAD_RECNO SBIN SYMREF;
      169      786        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = "SYMREF");
      170      944        /**/
      171      945    1       IF JOB_TBL.STATUS = %PRE_PASSED#
      172      946    1       THEN   /* Reason for abort already reported */
      173      947    2         DO;
      174      948    2           JOB_TBL.STATUS = REASON;
      175      949    2           BAD_RECNO = CUR_RECNO;
      176      950    2         END;
      177      951    1       RETURN;
      178      952    1   END JPE$REASON;

PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:32   
--  Include file information  --

   XSJ_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure JPE$REASON.

   Procedure JPE$REASON requires 12 words for executable code.
   Procedure JPE$REASON requires 4 words of local(AUTO) storage.

    No errors detected in file JPE$SUBR.:E05TSI    .

PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:33   

 Object Unit name= JPE$REASON                                 File name= JPE$SUBR.:E05TOU
 UTS= JUL 29 '97 23:36:37.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    12     14  JPE$REASON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  JPE$REASON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     CUR_RECNO                             BAD_RECNO                             JOB_TBL
PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:34   


      154        1        /*T***********************************************************/
      155        2        /*T*                                                         */
      156        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      157        4        /*T*                                                         */
      158        5        /*T***********************************************************/
      159        6        JPE$REASON: PROC(REASON);

      6  0 000000   000000 700200 xent  JPE$REASON   TSX0  ! X66_AUTO_1
         0 000001   000004 000001                    ZERO    4,1

      160        7        /*F*       NAME:    JPE$REASON
      161        8                   PURPOSE: To save the first reason found for rejecting
      162        9                            the job currently being processed.
      163       10        */
      164       11        %INCLUDE JM$STRUCT;
      165      756        %INCLUDE XSJ_SUBS_C;
      166      783    1     DCL REASON SBIN;
      167      784    1     DCL CUR_RECNO SBIN SYMREF;
      168      785    1     DCL BAD_RECNO SBIN SYMREF;
      169      786        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = "SYMREF");
      170      944        /**/
      171      945    1       IF JOB_TBL.STATUS = %PRE_PASSED#

    945  0 000002   000014 236000 xsym               LDQ     JOB_TBL+12
         0 000003   000777 376007                    ANQ     511,DL
         0 000004   000041 116007                    CMPQ    33,DL
         0 000005   000013 601000 0                  TNZ     s:951

      172      946    1       THEN   /* Reason for abort already reported */
      173      947    2         DO;

      174      948    2           JOB_TBL.STATUS = REASON;

    948  0 000006   200003 470500                    LDP0    @REASON,,AUTO
         0 000007   000000 236100                    LDQ     0,,PR0
         0 000010   000014 552004 xsym               STBQ    JOB_TBL+12,'04'O
PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:35   

      175      949    2           BAD_RECNO = CUR_RECNO;

    949  0 000011   000000 235000 xsym               LDA     CUR_RECNO
         0 000012   000000 755000 xsym               STA     BAD_RECNO

      176      950    2         END;

      177      951    1       RETURN;

    951  0 000013   000000 702200 xent               TSX2  ! X66_ARET
      178      952    1   END JPE$REASON;

PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:36   
--  Include file information  --

   XSJ_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure JPE$REASON.
PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:37   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @REASON                   *0-0-0/w SBIN        r     1 REASON

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 BAD_RECNO                  0-0-0/w SBIN        r     1 CUR_RECNO
     0-0-0/w STRC(1980)  r     1 JOB_TBL


   Procedure JPE$REASON requires 12 words for executable code.
   Procedure JPE$REASON requires 4 words of local(AUTO) storage.

    No errors detected in file JPE$SUBR.:E05TSI    .
PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JPE$REASON File=JPE$SUBR.:E05TSI                              TUE 07/29/97 23:36 Page:39   
          MINI XREF LISTING

BAD_RECNO
       785**DCL       949<<ASSIGN
CUR_RECNO
       784**DCL       949>>ASSIGN
JOB_TBL.STATUS
       865**DCL       945>>IF        948<<ASSIGN
REASON
       783**DCL         6--PROC      948>>ASSIGN
