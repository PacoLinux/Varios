VERSION E05

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:1    
        1        1        /*M* LDEV and SET/ADJUST/RESET                                               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,DFC */
        8        8        /*P*   NAME:   CXB$IBEX
        9        9               PURPOSE: To perform all the required operations in  the execution
       10       10                       of selected IBEX commands.
       11       11               DESCRIPTION:
       12       12               REFERENCE: Programmers Reference Manual
       13       13        */
       14       14        /**********************************************************************/
       15       15        CXB$IBEX:
       16       16          PROC(GETCMD, CPSL_PARAM) ;
       17       17                   %PLIST;
       18       18                   %INCLUDE CP_6;
       19       99        /*         %INCLUDE AZ_MACRO_C; */
       20      100        /*         %INCLUDE AZ_SUBS_C;  */
       21      101                   %INCLUDE B$JIT;
       22      391        /*         %INCLUDE B_STRINGS_C; */
       23      392                   %INCLUDE B_MACROS_C;
       24      503                   %INCLUDE CX_MACROS_M;
       25      554                   %INCLUDE XU_MACRO_C;
       26     3660                   %INCLUDE CX_ISUBS_C;
       27     4012                   %INCLUDE CX_PERR_C;
       28     4083                   %INCLUDE CP_6_SUBS;
       29     4623                   %INCLUDE B_ERRORS_C;
       30     5750        /*         %INCLUDE NK_VFC_C; */
       31     5751        /*         %INCLUDE XSJ_MAC_C; */
       32     5752        /*         %INCLUDE XSJ_SUBS_C; */
       33     5753                   %INCLUDE B$ROSEG;
       34     5816        /*         %INCLUDE OC_SUBS_C; */
       35     5817                   %INCLUDE CX_DATA_R ;
       36     6751                   %INCLUDE CXG_ENTRY ;
       37     6763             /***** Parameters *****/
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:2    
       38     6764        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
       39     7102        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
       40     7120             /***** Ptr variable declarations *****/
       41     7121    1   DCL P$ PTR;
       42     7122    1   DCL BLK$ PTR;
       43     7123    1   DCL TEMP$ PTR;
       44     7124    1   DCL DCB$ PTR;
       45     7125    1   DCL FID$ PTR;
       46     7126    1   DCL DEST$ PTR;
       47     7127             /***** External procedure (entry) declarations *****/
       48     7128    1   DCL CXC$WRITEAM ENTRY(3) ;
       49     7129    1   DCL CXB$BLDAM ENTRY(4) ;
       50     7130    1   DCL CXB$MDFYAM ENTRY(5) ;
       51     7131    1   DCL CXF$FIND_STREAM ENTRY(4) ;
       52     7132    1   DCL CXB$WINDOW_OPTS ENTRY(4) ;
       53     7133    1   DCL CXC$GETDCB ENTRY(2) ;
       54     7134    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get data segment*/
       55     7135    1   DCL CXB$DELAM ENTRY(4) ;
       56     7136    1   DCL CXC$RELSEG ENTRY(1);
       57     7137    1   DCL CXC$RFEXT ENTRY(1);
       58     7138    1   DCL CXB$CHKFORT ENTRY(1);
       59     7139    1   DCL CXB$BLDIMAGE ENTRY(5) ;
       60     7140    1   DCL CXB$RZEROS ENTRY(3);
       61     7141    1   DCL CXX$LDEV ENTRY(4) ;
       62     7142    1   DCL CXX$RESET ENTRY(4) ;
       63     7143    1   DCL CXX$UNHOLD ENTRY(4) ;
       64     7144             /***** Based STRUCTURES *****/
       65     7145        %TEXTC (NAME=TEXTC);
       66     7150        %B$TCB (STCLASS="BASED(B$TCB$)");
       67     7153        %B$ALT;
       68     7161             /***** Character string declarations *****/
       69     7162    1   DCL 1 M$DO_DCB CONSTANT DALIGNED,
       70     7163    1          2 CNT UBIN(9) INIT(4) UNAL,
       71     7164    1          2 TXT CHAR(4) INIT('M$DO');
       72     7165    1   DCL 1 M$LL DALIGNED CONSTANT,
       73     7166    1         2 CNT UBIN(9) INIT(4) UNAL,
       74     7167    1         2 TXT CHAR(4) INIT('M$LL');
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:3    
       75     7168    1   DCL    M$UC_NUM    UBIN WORD  INIT(%M$UC#) CONSTANT ;
       76     7169    1   DCL FID_ASN UBIN(9);
       77     7170    1   DCL FID_RES CHAR(4);
       78     7171    1   DCL 1  SYMNAME,
       79     7172    1          2  COUNT UBIN BYTE UNAL,
       80     7173    1          2  TEXT CHAR(4);
       81     7174    1   DCL B$$PAGE (0:1023) UBIN WORD BASED ALIGNED ;
       82     7175             /***** Bit variables *****/
       83     7176    1   DCL GOT_LOGON_OPTION BIT(1) ;
       84     7177    1   DCL GIVE_ADJSTCLS_MSG BIT(1) ;
       85     7178    1   DCL NEED_LDEV_HDR BIT(1) ;
       86     7179    1   DCL DONE BIT(1) ;
       87     7180             /***** Word declarations *****/
       88     7181    1   DCL I SBIN;
       89     7182    1   DCL J SBIN;
       90     7183    1   DCL K SBIN;
       91     7184    1   DCL TEMP UBIN WORD;
       92     7185    1   DCL CPOS UBIN WORD AUTO;
       93     7186             /***** Constant FPTS *****/
       94     7187             /***** Constant VLPS *****/
       95     7188        %VLP_CRITERIA ( FPTN=CVLP_CRITERIA, STCLASS=CONSTANT) ;
       96     7216             /***** Based FPTS *****/
       97     7217        %FPT_OPEN (FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
       98     7326        %F$DCB (DCBN=F$DCB);
       99     7383             /***** Auto FPTS *****/
      100     7384        %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
      101     7493        %FPT_CLOSE (FPTN=FPT_CLOSE,STCLASS=AUTO);
      102     7535        %FPT_LDEV (FPTN=FPT_LDEV,STCLASS=AUTO);
      103     7560        %FPT_FID (FPTN=FPT_FID,STCLASS=AUTO);
      104     7583        %FPT_JOBSTATS (FPTN=FPT_JOBSTATS,STCLASS=AUTO);
      105     7603             /***** Based VLPS *****/
      106     7604        %VLP_NAME (FPTN=AM$NAME,LEN=31,STCLASS=BASED);
      107     7631        %VLP_ACCT (FPTN=AM$ACCT,STCLASS=BASED);
      108     7644        %VLP_PASS (FPTN=AM$PASS,STCLASS=BASED);
      109     7657        %VLP_WSN (FPTN=AM$WSN,STCLASS=BASED);
      110     7670        %VLP_SETSTA (FPTN=AM$SETSTA,STCLASS=BASED);
      111     7698        %VLP_SN (FPTN=AM$SN,STCLASS=BASED,N=50);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:4    
      112     7711        %VLP_TAB (FPTN=AM$TAB,STCLASS=BASED);
      113     7725        %VLP_HDR (FPTN=AM$HDR,STCLASS=BASED,LEN="AM$HDR.TITL.L#");
      114     7741        %VLP_FORM (FPTN=AM$FORM,STCLASS=BASED);
      115     7754        %VLP_TAB (FPTN=VLP$TABS,STCLASS=BASED);
      116     7768        %VLR_JOBSTATS_OSRCH(  FPTN=VLR$OSRCH,STCLASS=BASED) ;
      117     7782        %VLA_JOBSTATS_OSRCH(  FPTN=VLA$OSRCH, STCLASS=BASED) ;
      118     7799             /***** Auto VLPS *****/
      119     7800        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      120     7813        %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      121     7832        %VLP_HDR (FPTN=VLP_HDR,LEN=511,STCLASS=AUTO);
      122     7848        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
      123     7875        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      124     7888        %VLP_SN (FPTN=FID_SN,STCLASS=AUTO);
      125     7901        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      126     7914        %VLP_TAB (FPTN=VLP_TABS,STCLASS=AUTO);
      127     7928        %VLP_ERRCODE (FPTN=ERR_CODE, STCLASS=AUTO) ;
      128     7973        %VLP_JOBNAME (FPTN=VLP_JOBNAME,STCLASS=AUTO);
      129     7987        %VLP_WINDOW (FPTN=VLP_WINDOW, STCLASS=AUTO) ;
      130     8031        %VLP_CRITERIA ( FPTN=JOBSTATS_CRITERIA, STCLASS=AUTO) ;
      131     8059             /***** Error codes *****/
      132     8060        %VLP_ERRCODE (FPTN=E_ADJSTCLS,MID=B,ERR#=E$ADJSTCLS,FCG=CX,STCLASS=CONSTANT);
      133     8105        /*E*    ERROR: CXB-E$ADJSTCLS-0
      134     8106                MESSAGE: Dcb closed with DISP=SAVE to permit assignment modifications
      135     8107                DESCRIPTION: The specified dcb was closed with DISP=SAVE in order
      136     8108                             that dcb assignment modifications would take effect
      137     8109                             upon dcb reopening.
      138     8110        */
      139     8111        %VLP_ERRCODE (FPTN=E_ILLASGN,MID=B,ERR#=E$ILLASGN,FCG=CX,STCLASS=CONSTANT);
      140     8156        %VLP_ERRCODE (FPTN=E_NOASGN,MID=B,ERR#=E$NOASGN,FCG=CX,STCLASS=CONSTANT);
      141     8201        %VLP_ERRCODE (FPTN=E_BADASGN,MID=B,ERR#=E$BADASGN,FCG=CX,STCLASS=CONSTANT);
      142     8246        %VLP_ERRCODE (FPTN=E_JOBNTFND,MID=B,ERR#=E$JOBNTFND,FCG=CX,STCLASS=CONSTANT);
      143     8291        %VLP_ERRCODE (FPTN=E_NOSYMFILE,MID=B,ERR#=E$NOSYMFILE,FCG=CX,STCLASS=CONSTANT);
      144     8336                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:5    
      145     8337        /*         Parsing macros                        */
      146     8338        %PLIST;
      147     8339        %PARSE$OUT(NAME=P$B,STCLASS=BASED);
      148     8384        %PARSE$SYM(NAME=P$S,STCLASS=BASED);
      149     8422                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:6    
      150     8423        /**********************************************************************/
      151     8424        /*F*   NAME:   CXB$ADJUST
      152     8425               PURPOSE: T0 process the ADJUST command
      153     8426               DESCRIPTION: The ADJUST command performs the requested modification
      154     8427                       on a users dcb(dynamic SET when not at job step).
      155     8428               REFERENCE: Programmers Reference Manual
      156     8429        */
      157     8430        /*D*   NAME:   CXB$ADJUST
      158     8431               CALL:   CALL CXB$ADJUST (GETCMD, CPSL_PARAM)
      159     8432               INTERFACE: CXB$BLDAM
      160     8433               INPUT:  GETCMD - The CXG$GETCMD fpt parameter.
      161     8434                       CPSL_PARAM - Command Processor Shared Library parameter.
      162     8435               OUTPUT: modified user dcb
      163     8436               DESCRIPTION: The ADJUST command format and options are the same as
      164     8437                       for the SET command. The command is scanned for the items
      165     8438                       to be modified. An assign merge type record is created in
      166     8439                       data segment #3 containing the information specified. This
      167     8440                       information in turn is transferred to the open FPT and
      168     8441                       a reassign type of INITZ is performed to merge the FPT
      169     8442                       information with the user's dcb. If the specified dcb is open,
      170     8443                       a close with DISP=SAVE is performed. User is expected to
      171     8444                       reopen the dcb implicitly with a read or otherwise.
      172     8445        */
      173     8446        /**********************************************************************/
      174     8447    1   CXB$ADJUST:
      175     8448    1     ENTRY(GETCMD, CPSL_PARAM) ;
      176     8449        /*
      177     8450          **** Perform various dcb checks
      178     8451        */
      179     8452    1     GIVE_ADJSTCLS_MSG = %NO# ;
      180     8453    1     BLK$ = GETCMD.OUT$;
      181     8454    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      182     8455    1         THEN
      183     8456    2             DO ;
      184     8457    2               CALL CXB$BLDAM (BLK$,,GETCMD,CPSL_PARAM) ;
      185     8458    2               GOTO ADJUSTRET ;
      186     8459    2             END ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:7    
      187     8460    1     DCB$=BLK$->P$B.SUBLK$(0)->P$B.SUBLK$(0);
      188     8461    1     CPOS = BLK$ -> P$B.SUBLK$(0) -> P$B.CPOS;
      189     8462    1     IF (BLK$->P$B.SUBLK$(1)->P$B.CODE=FIDOPT)
      190     8463    1        THEN
      191     8464    2           DO;
      192     8465    2              FID$=BLK$->P$B.SUBLK$(1)->P$B.SUBLK$(0);
      193     8466    2              CALL CHK_ASGN (CPOS,DCB$,FID$) ALTRET(ADJUSTRET);
      194     8467    2           END;
      195     8468    1     CALL CXB$CHKFORT(DCB$);                  /*Cnvrt if fort. Type*/
      196     8469        /*
      197     8470          **** check for dcb existence in user's program. If already open, close
      198     8471          **** with DISP=SAVE.
      199     8472        */
      200     8473    1     J=0;
      201     8474    2     DO I=1 TO B$ROS$->B$ROSEG.NUMDCBS;
      202     8475    2        IF DCBADDR(I) ~= ADDR(NIL)
      203     8476    2           THEN
      204     8477    3              DO;
      205     8478    3                 TEMP$ = DCBADDR(I);
      206     8479    3                 IF (TEMP$->F$DCB.DCBNAME.N=DCB$->TEXTC.TEXT)
      207     8480    3                    THEN
      208     8481    4                       DO;
      209     8482    4                          IF (TEMP$->F$DCB.FCD#=%YES#)
      210     8483    4                             THEN
      211     8484    5                               DO;
      212     8485    5                                  FPT_CLOSE = CPSL_CFPT_CLOSE;
      213     8486    5                                  FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      214     8487    5                                  FPT_CLOSE.V.DISP# = %SAVE#;
      215     8488    5                                  FPT_CLOSE.V.DCB# = I;
      216     8489    5                                  CALL M$CLOSE(FPT_CLOSE) ALTRET(ADJUST95);
      217     8490    5                                  IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG
      218     8491    5                                   THEN
      219     8492    6                                     DO ;
      220     8493    6                                       GIVE_ADJSTCLS_MSG = %YES# ;
      221     8494    6                                       CPSL_PARAM.FLAGS.REPORTED_TO_USER = %YES# ;
      222     8495    6                                     END ; /* Then Do */
      223     8496    5                               END;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:8    
      224     8497    4                          J=I;                      /*Save dcb number*/
      225     8498    4                       END;
      226     8499    3              END;
      227     8500    2     END;
      228     8501        /*
      229     8502          **** Check for nonexistant dcb
      230     8503        */
      231     8504    1     IF (J=0)
      232     8505    1        THEN
      233     8506    1           GOTO ADJUST78;               /*Error no dcb*/
      234     8507    1     CPSL_PARAM.ERR_DCB# = J ;       /* Pass DCB number for CXB$PROCOPT wrt ASN */
      235     8508        /*
      236     8509           **** Determine if fid specified
      237     8510        */
      238     8511    1     IF (BLK$->P$B.SUBLK$(1)->P$B.CODE=FIDOPT)
      239     8512    1        THEN
      240     8513    1           CALL CXB$BLDAM(BLK$,FID$,GETCMD,CPSL_PARAM) ;
      241     8514    1        ELSE
      242     8515    1           CALL CXB$BLDAM(BLK$,,GETCMD,CPSL_PARAM) ;
      243     8516    1     IF CPSL_PARAM.ERRCODE ~= %NO#
      244     8517    1         THEN
      245     8518    2             DO ;
      246     8519    2               GIVE_ADJSTCLS_MSG = %NO# ;
      247     8520    2               GOTO ADJUSTRET ;
      248     8521    2             END ; /* Then Do */
      249     8522        /*
      250     8523          **** Build the open fpt using the assign merge information as input
      251     8524        */
      252     8525    1     FPT_OPEN=CPSL_CFPT_OPEN;
      253     8526    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);
      254     8527    1     FPT_OPEN.V=AMR$REC$.V; /*Move v area*/
      255     8528    1     IF (AMR$REC$.SN_~=ADDR(NIL))
      256     8529    1        THEN
      257     8530    1           FPT_OPEN.SN_=VECTOR(AMR$REC$.SN_->AM$SN);
      258     8531    1     IF (AMR$REC$.NAME_~=ADDR(NIL))
      259     8532    1        THEN
      260     8533    1           FPT_OPEN.NAME_=VECTOR(AMR$REC$.NAME_->AM$NAME);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:9    
      261     8534    1     IF (AMR$REC$.PASS_~=ADDR(NIL))
      262     8535    1        THEN
      263     8536    1           FPT_OPEN.PASS_=VECTOR(AMR$REC$.PASS_->AM$PASS);
      264     8537        /*
      265     8538                   If (AMR$REC$.ACCESS_~=ADDR(NIL))
      266     8539                      THEN
      267     8540                      FPT_OPEN.ACCESS_=VECTOR(AMR$REC$.ACCESS_->AM$ACCESS);
      268     8541                   IF (AMR$REC$.ACSVEH_~=ADDR(NIL))
      269     8542                      THEN
      270     8543                      FPT_OPEN.ACSVEH_=VECTOR(AMR$REC$.ACSVEH_->AM$ACSVEH);
      271     8544        **** ULBL_,UATTR_,INSTATTR_,PROCATTR_,IFPARSM_,FPARAM_...PURPOSELY omitted.
      272     8545        */
      273     8546    1     IF (AMR$REC$.ACCT_~=ADDR(NIL))
      274     8547    1        THEN
      275     8548    1           FPT_OPEN.ACCT_=VECTOR(AMR$REC$.ACCT_->AM$ACCT);
      276     8549    1     IF (AMR$REC$.WSN_~=ADDR(NIL))
      277     8550    1        THEN
      278     8551    1           FPT_OPEN.WSN_=VECTOR(AMR$REC$.WSN_->AM$WSN);
      279     8552    1     IF (AMR$REC$.TAB_~=ADDR(NIL))
      280     8553    1        THEN
      281     8554    1           FPT_OPEN.TAB_=VECTOR(AMR$REC$.TAB_->AM$TAB);
      282     8555    1     IF (AMR$REC$.HDR_~=ADDR(NIL))
      283     8556    1        THEN
      284     8557    1           FPT_OPEN.HDR_=VECTOR(AMR$REC$.HDR_->AM$HDR);
      285     8558    1     IF (AMR$REC$.FORM_~=ADDR(NIL))
      286     8559    1        THEN
      287     8560    1           FPT_OPEN.FORM_=VECTOR(AMR$REC$.FORM_->AM$FORM);
      288     8561    1     IF (AMR$REC$.SETSTA_~=ADDR(NIL))
      289     8562    1        THEN
      290     8563    1           FPT_OPEN.SETSTA_=VECTOR(AMR$REC$.SETSTA_->AM$SETSTA);
      291     8564    1     FPT_OPEN.V.SETDCB#=%YES#;
      292     8565    1     FPT_OPEN.V.DCB#=J;
      293     8566        /*
      294     8567          **** Merge the open dcb into the specified dcb
      295     8568        */
      296     8569    1     CALL M$OPEN(FPT_OPEN) ALTRET(ADJUST95);
      297     8570    1   ADJUSTRET:
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:10   
      298     8571    1     IF GIVE_ADJSTCLS_MSG
      299     8572    1         THEN
      300     8573    2           DO ;
      301     8574    2             GETCMD.ERR_CODE = E_ADJSTCLS ;
      302     8575    2             CALL CXG$ERRMSG(GETCMD) ALTRET(ADJUST110) ;
      303     8576    2           END ; /* Then Do */
      304     8577    1     IF NOT CPSL_PARAM.FLAGS.VERIFY_ONLY
      305     8578    1         THEN
      306     8579    1             CALL CXC$RELSEG (CPSL_SEG3$);
      307     8580    1     RETURN;
      308     8581
      309     8582    1   ADJUST78:;
      310     8583        /*E*       ERROR: CXB-E$ILLASGN-E
      311     8584                   MESSAGE: Dcb isn't assigned - can't update
      312     8585                   DESCRIPTION: The user issued an update SET or RESET and the
      313     8586                                previous assignment didn't exist.
      314     8587        */
      315     8588    1     CPSL_PARAM.ERRCODE = E_ILLASGN ;
      316     8589    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      317     8590    1     GIVE_ADJSTCLS_MSG = %NO# ;
      318     8591    1     GOTO ADJUSTRET ;
      319     8592        /*
      320     8593          **** Put error code in CPSL_PARAM.ERRCODE so error msge. Is output by
      321     8594               errtrn in Command Processor.
      322     8595        */
      323     8596    1   ADJUST95:;
      324     8597    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;
      325     8598    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      326     8599    1     GOTO ADJUSTRET ;
      327     8600    1   ADJUST110:
      328     8601    1     CPSL_PARAM.ERRCODE = GETCMD.ERR# ;
      329     8602    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      330     8603    1     GIVE_ADJSTCLS_MSG = %NO# ;
      331     8604    1     GOTO ADJUSTRET ;
      332     8605        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:11   
      333     8606        /*********************************************************************/
      334     8607        /*F*    NAME:    CXB$ERASE
      335     8608                PURPOSE:    To process the ERASE command to delete previously created
      336     8609                         LDEV streams before they are printed.
      337     8610               REFERENCE: Programmers Reference Manual
      338     8611        */
      339     8612        /*D*   NAME:   CXB$ERASE
      340     8613               CALL:   CALL CXB$ERASE (GETCMD, CPSL_PARAM)
      341     8614               INPUT:  GETCMD - the CXG$GETCMD parameter.
      342     8615                       CPSL_PARAM - Command Processor Shared Library parameter.
      343     8616               OUTPUT:
      344     8617               DESCRIPTION: The ERASE command deletes previously created
      345     8618                      LDEV streams before printing.
      346     8619        */
      347     8620        /*********************************************************************/
      348     8621    1   CXB$ERASE:
      349     8622    1     ENTRY(GETCMD, CPSL_PARAM) ;
      350     8623        /**/
      351     8624    1     BLK$ = GETCMD.OUT$;
      352     8625    1     FPT_LDEV = CPSL_CFPT_LDEV;
      353     8626    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);
      354     8627    1     FPT_LDEV.V.DELETE# = %YES#;
      355     8628    1     IF BLK$->P$B.NSUBLKS = 0 AND NOT CPSL_PARAM.FLAGS.VERIFY_ONLY
      356     8629    1        THEN
      357     8630    2           DO;
      358     8631    2              FPT_LDEV.V.STREAMNAME# = 'ALL';
      359     8632    2              CALL M$LDEV(FPT_LDEV) ALTRET(E_ERASE);
      360     8633    2              RETURN;
      361     8634    2           END;
      362     8635    1     I = 0;
      363     8636    2     DO WHILE(I < BLK$->P$B.NSUBLKS);
      364     8637    2        CALL CXX$LDEV(BLK$->P$B.SUBLK$(I)->P$S, GETCMD, CPSL_PARAM) ;
      365     8638    2        IF CPSL_PARAM.ERRCODE = %NO#
      366     8639    2         THEN
      367     8640    3             DO ;
      368     8641    3             IF BLK$->P$B.SUBLK$(0)->P$B.CODE = LD_ALL
      369     8642    3               THEN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:12   
      370     8643    3                 FPT_LDEV.V.STREAMNAME# = 'ALL';
      371     8644    3               ELSE
      372     8645    3                 FPT_LDEV.V.STREAMNAME# = BLK$ -> P$B.SUBLK$(I) -> P$S.TEXT;
      373     8646    3             IF NOT CPSL_PARAM.FLAGS.VERIFY_ONLY
      374     8647    3               THEN
      375     8648    3                 CALL M$LDEV(FPT_LDEV) ALTRET(E_ERASE);
      376     8649    3           END ; /* Then Do */
      377     8650    2         ELSE
      378     8651    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      379     8652    2               THEN
      380     8653    2                 I = BLK$->P$B.NSUBLKS ;
      381     8654    2        I = I + 1;
      382     8655    2     END;
      383     8656    1   ERASERET:
      384     8657    1     RETURN;
      385     8658
      386     8659    1   E_ERASE:
      387     8660    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;
      388     8661    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      389     8662    1     GOTO ERASERET ;
      390     8663        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:13   
      391     8664        /*********************************************************************/
      392     8665        /*F*    NAME:    CXB$HOLD
      393     8666                PURPOSE:    To process the HOLD command to hold symbiont output for
      394     8667                         LDEV stream, if specified, or LP01 by default.
      395     8668               REFERENCE: Programmers Reference Manual
      396     8669        */
      397     8670        /*D*   NAME:   CXB$HOLD
      398     8671               CALL:   CALL CXB$HOLD (GETCMD, CPSL_PARAM)
      399     8672               INPUT:  GETCMD - the CXG$GETCMD parameter.
      400     8673                       CPSL_PARAM - Command Processor Shared Library parameter.
      401     8674               OUTPUT:
      402     8675               DESCRIPTION: The HOLD command hold symbiont output created
      403     8676                      by LDEV stream, if specified, or LP01, the default.
      404     8677        */
      405     8678        /*********************************************************************/
      406     8679    1   CXB$HOLD:
      407     8680    1     ENTRY(GETCMD, CPSL_PARAM) ;
      408     8681        /**/
      409     8682    1     BLK$ = GETCMD.OUT$;
      410     8683    1     FPT_LDEV = CPSL_CFPT_LDEV;
      411     8684    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);
      412     8685    1     FPT_LDEV.V.HOLD# = %YES# ;
      413     8686    1     FPT_LDEV.V.CONTINUE# = %YES# ;
      414     8687    1     I = BLK$ -> P$B.NSUBLKS;
      415     8688    1     J = 0;
      416     8689    1     DONE = %NO#;
      417     8690    2     DO WHILE (NOT DONE);
      418     8691    2       IF I=0
      419     8692    2         THEN  /* No sub-blocks */
      420     8693    3           DO;
      421     8694    3             FPT_LDEV.V.STREAMNAME# = 'LP01' ;
      422     8695    3             DONE = %YES#;
      423     8696    3           END;  /* Then Do */
      424     8697    2         ELSE      /* One or more sub-blocks */
      425     8698    3           DO;
      426     8699    3             CALL CXX$LDEV(BLK$->P$B.SUBLK$(J)->P$S, GETCMD, CPSL_PARAM) ;
      427     8700    3             IF CPSL_PARAM.ERRCODE = %NO#
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:14   
      428     8701    3               THEN
      429     8702    4                 DO;
      430     8703    4                   IF BLK$->P$B.SUBLK$(J)->P$B.CODE = LD_ALL
      431     8704    4                     THEN
      432     8705    4                       FPT_LDEV.V.STREAMNAME# = 'ALL';
      433     8706    4                     ELSE
      434     8707    4                       FPT_LDEV.V.STREAMNAME# = BLK$ -> P$B.SUBLK$(J) ->
      435     8708    4                                                 P$S.TEXT ;
      436     8709    4                 END ; /* Then Do */
      437     8710    3             J = J + 1;
      438     8711    3             IF J = I
      439     8712    3               THEN
      440     8713    3                 DONE = %YES#;
      441     8714    3           END ; /* Then Do */
      442     8715    2       IF NOT (CPSL_PARAM.ERRCODE OR CPSL_PARAM.FLAGS.VERIFY_ONLY)
      443     8716    2         THEN
      444     8717    2           CALL M$LDEV(FPT_LDEV) ALTRET(E_LDEV) ;
      445     8718    2     END;  /* Do While */
      446     8719    1     RETURN ;
      447     8720
      448     8721        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:15   
      449     8722        /*********************************************************************/
      450     8723        /*F*    NAME:    CXB$LDEV
      451     8724                PURPOSE:    To process the LDEV command.
      452     8725                         LDEV streams before they are printed.
      453     8726               REFERENCE: Programmers Reference Manual
      454     8727        */
      455     8728        /*D*   NAME:   CXB$LDEV
      456     8729               CALL:   CALL CXB$LDEV (GETCMD, CPSL_PARAM)
      457     8730               INPUT:  GETCMD - the CXG$GETCMD parameter.
      458     8731                       CPSL_PARAM - Command Processor Shared Library parameter.
      459     8732               OUTPUT:
      460     8733               DESCRIPTION: The LDEV command creates logical output streams.
      461     8734        */
      462     8735        /*********************************************************************/
      463     8736    1   CXB$LDEV:
      464     8737    1     ENTRY(GETCMD, CPSL_PARAM) ;
      465     8738        /**/
      466     8739    1     BLK$ = GETCMD.OUT$;
      467     8740    1     FPT_LDEV = CPSL_CFPT_LDEV;
      468     8741    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);
      469     8742    1     VLP_HDR = CPSL_CVLP_HDR;
      470     8743    1     VLP_TABS = CPSL_CVLP_TAB;
      471     8744    1     VLP_WINDOW = CPSL_CVLP_WINDOW ;
      472     8745        /**/
      473     8746    1     I = 0;
      474     8747    1     GOT_LOGON_OPTION = %NO# ;
      475     8748    1     NEED_LDEV_HDR = %YES# ;
      476     8749    2     DO WHILE(I < BLK$->P$B.NSUBLKS);
      477     8750    2        P$ = BLK$->P$B.SUBLK$(I);
      478     8751    3        DO CASE(P$->P$B.CODE);
      479     8752        /**/
      480     8753    3         CASE(LD_FID,
      481     8754    3               LD_FORM,
      482     8755    3               LD_COPY,
      483     8756    3               LD_DVFC,
      484     8757    3               TAB_NUM,
      485     8758    3               LD_LINES,
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:16   
      486     8759    3               LD_HEIGHT,
      487     8760    3               LD_HOLDCOPIES,
      488     8761    3               LD_INDENT,
      489     8762    3               LD_PAGE,
      490     8763    3               LD_MARGIN,
      491     8764    3               LD_SEQCOL,
      492     8765    3               LD_SEQID,
      493     8766    3               LD_WIDTH,
      494     8767    3               LD_STNAME) ;
      495     8768    3             CALL CXX$LDEV (P$->P$B,GETCMD,CPSL_PARAM,TEMP) ;
      496     8769        /**/
      497     8770    3         CASE(LD_TABS) ;
      498     8771    3               CALL CXX$LDEV (P$->P$B,GETCMD,CPSL_PARAM,TEMP) ;
      499     8772    3               IF CPSL_PARAM.ERRCODE = %NO# AND CPSL_PARAM.FLAGS.VERIFY_ONLY
      500     8773    3                 THEN
      501     8774    4                   DO ;
      502     8775    4                     J = 0 ;
      503     8776    5                     DO WHILE (J < P$->P$B.NSUBLKS AND CPSL_PARAM.ERRCODE = %NO#) ;
      504     8777    5                       CALL CXX$LDEV(P$->P$B.SUBLK$(J)->P$S,GETCMD,CPSL_PARAM,
      505     8778    5                                       TEMP) ;
      506     8779    5                       J = J + 1 ;
      507     8780    5                     END ; /* Do While */
      508     8781    4                   END ; /* Then Do */
      509     8782        /**/
      510     8783    3         CASE (BTMBRDROPT,
      511     8784    3               FWINDOWOPT,
      512     8785    3               HBRDRCHROPT,
      513     8786    3               HBRDRSIZOPT,
      514     8787    3               LFTBRDROPT,
      515     8788    3               MINLENGTHOPT,
      516     8789    3               MINWIDTHOPT,
      517     8790    3               OPTIONALOPT,
      518     8791    3               POSITIONOPT,
      519     8792    3               RHTBRDROPT,
      520     8793    3               TOPBRDROPT,
      521     8794    3               VBRDRCHROPT,
      522     8795    3               VBRDRSIZOPT,
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:17   
      523     8796    3               WLENGTHOPT,
      524     8797    3               WWIDTHOPT) ;
      525     8798
      526     8799    3               FPT_LDEV.WINDOW_ = VECTOR(VLP_WINDOW) ;
      527     8800    3               CALL CXB$WINDOW_OPTS(P$, ADDR(VLP_WINDOW), GETCMD, CPSL_PARAM) ;
      528     8801    3               IF CPSL_PARAM.ERRCODE ~= %NO# AND CPSL_PARAM.FLAGS.VERIFY_ONLY
      529     8802    3                 THEN
      530     8803    3                   GOTO LDEVRET ;
      531     8804    3         CASE(ELSE) ;
      532     8805    3        END ;  /* Do Case */
      533     8806    2        IF CPSL_PARAM.ERRCODE ~= %NO#
      534     8807    2         THEN
      535     8808    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      536     8809    2               THEN
      537     8810    2                 I = BLK$->P$S.NSUBLKS ;
      538     8811    2               ELSE ;
      539     8812    2         ELSE
      540     8813    3         DO ;
      541     8814    4        DO CASE(P$->P$B.CODE);
      542     8815        /**/
      543     8816    4         CASE(LD_ALL);
      544     8817    4           FPT_LDEV.V.STREAMNAME#='ALL';
      545     8818        /**/
      546     8819    4         CASE(LD_STNAME);
      547     8820    4           FPT_LDEV.V.STREAMNAME#=P$->P$S.TEXT;
      548     8821    4         CASE(LD_FID);
      549     8822    4           CALL SETUP_FID(P$->P$S)    ALTRET(E_LDEV);
      550     8823    4           IF FID_RESULTS.RES
      551     8824    4              THEN
      552     8825    4                 FPT_LDEV.V.DEV# = FID_RES;
      553     8826    5                 DO ;
      554     8827    5                   FPT_LDEV.V.DEV# = FID_RES;
      555     8828    5                   IF SUBSTR(FID_RES,0,2) = 'UC'
      556     8829    5                     THEN
      557     8830    5                       FPT_LDEV.V.FRMSTRM# = SUBSTR(FID_RES,2,2) ;
      558     8831    5                 END ;
      559     8832    4           IF FID_RESULTS.WSN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:18   
      560     8833    4              THEN
      561     8834    4                 FPT_LDEV.WSN_ = VECTOR(FID_WSN);
      562     8835        /**/
      563     8836    4         CASE(LD_CONCUR);
      564     8837    4           FPT_LDEV.V.CONCURR# = %YES#;
      565     8838        /**/
      566     8839    4         CASE(LD_CONT);
      567     8840    4           FPT_LDEV.V.CONTINUE# = %YES#;
      568     8841        /**/
      569     8842    4         CASE(LD_SCRUB);
      570     8843    4           FPT_LDEV.V.SCRUB# = %YES#;
      571     8844        /**/
      572     8845    4         CASE(LD_REM);
      573     8846    4           FPT_LDEV.V.REMOVE# = %YES#;
      574     8847        /**/
      575     8848    4         CASE(LD_ERASE);
      576     8849    4           FPT_LDEV.V.DELETE# = %YES#;
      577     8850        /**/
      578     8851    4         CASE(LD_HOLD);
      579     8852    4           FPT_LDEV.V.HOLD# = %YES#;
      580     8853        /**/
      581     8854    4         CASE(LD_HOLDCOPIES);
      582     8855    4           FPT_LDEV.V.HOLDCOPIES# = TEMP;
      583     8856        /**/
      584     8857    4         CASE(LD_FORM);
      585     8858    4           FPT_LDEV.FORM_ = VECTOR(P$->P$S.TEXT);
      586     8859        /**/
      587     8860    4         CASE(LD_COPY);
      588     8861    4           FPT_LDEV.V.COPIES# = TEMP;
      589     8862        /**/
      590     8863    4         CASE(LD_DVFC);
      591     8864    4           FPT_LDEV.V.DVFC# = P$->P$S.TEXT;
      592     8865        /**/
      593     8866    4         CASE(LD_TABS_NO);
      594     8867    4           FPT_LDEV.TAB_ = VECTOR(ERASE);
      595     8868        /**/
      596     8869    4         CASE(LD_TABS);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:19   
      597     8870    4           J = 0;
      598     8871    5           DO WHILE(J < P$->P$B.NSUBLKS);
      599     8872    5              CALL CXX$LDEV(P$->P$B.SUBLK$(J)->P$S,GETCMD,CPSL_PARAM,TEMP);
      600     8873    5              VLP_TABS.TABS#(J) = TEMP;
      601     8874    5              J = J + 1;
      602     8875    5           END;
      603     8876    4           FPT_LDEV.TAB_ = VECTOR(VLP_TABS);
      604     8877        /**/
      605     8878    4         CASE(LD_LOGON);
      606     8879    4           GOT_LOGON_OPTION = %YES# ;
      607     8880        /**/
      608     8881    4         CASE(LD_MARGIN);
      609     8882    4           VLP_TABS.MARGIN# = TEMP;
      610     8883    4           FPT_LDEV.TAB_ = VECTOR(VLP_TABS);
      611     8884        /**/
      612     8885    4         CASE(LD_SEQ);
      613     8886    4           FPT_LDEV.V.SEQ# = %YES#;
      614     8887    4           FPT_LDEV.V.SEQID# = P$->P$S.TEXT;
      615     8888        /**/
      616     8889    4         CASE(LD_SEQCOL);
      617     8890    4           FPT_LDEV.V.SEQCOL# = TEMP;
      618     8891        /**/
      619     8892    4         CASE(LD_SEQID);
      620     8893    4           FPT_LDEV.V.SEQID# = P$ -> P$S.TEXT;
      621     8894        /**/
      622     8895    4         CASE(LD_HEAD_NO);
      623     8896    4           FPT_LDEV.HDR_ = VECTOR(ERASE);
      624     8897        /**/
      625     8898    4         CASE(LD_TITLE);
      626     8899    4           IF NEED_LDEV_HDR
      627     8900    4             THEN
      628     8901    4               CALL GET_LDEV_HDR;
      629     8902    4           VLP_HDR.TITL.L# = P$ -> P$S.COUNT;
      630     8903    4           VLP_HDR.TITL.TITLE# = SUBSTR(P$ -> P$S.TEXT,0,VLP_HDR.TITL.L#);
      631     8904    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);
      632     8905        /**/
      633     8906    4         CASE(LD_RESET);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:20   
      634     8907    4           IF NEED_LDEV_HDR
      635     8908    4             THEN
      636     8909    4               CALL GET_LDEV_HDR;
      637     8910    4           VLP_HDR.CTL.RESETPAGE# = %YES#;
      638     8911    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);
      639     8912        /**/
      640     8913    4         CASE(LD_HEIGHT);
      641     8914    4           IF NEED_LDEV_HDR
      642     8915    4             THEN
      643     8916    4               CALL GET_LDEV_HDR;
      644     8917    4           VLP_HDR.CTL.HEADERHEIGHT# = TEMP;
      645     8918    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);
      646     8919        /**/
      647     8920    4         CASE(LD_INDENT);
      648     8921    4           IF NEED_LDEV_HDR
      649     8922    4             THEN
      650     8923    4               CALL GET_LDEV_HDR;
      651     8924    4           VLP_HDR.CTL.INDENT# = TEMP;
      652     8925    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);
      653     8926        /**/
      654     8927    4         CASE(LD_PAGE);
      655     8928    4           IF NEED_LDEV_HDR
      656     8929    4             THEN
      657     8930    4               CALL GET_LDEV_HDR;
      658     8931    4           VLP_HDR.CTL.COUNT# = TEMP;
      659     8932    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);
      660     8933        /**/
      661     8934    4         CASE(LD_LINES);
      662     8935    4           FPT_LDEV.V.LINES# = TEMP;
      663     8936        /**/
      664     8937    4         CASE(LD_WIDTH);
      665     8938    4           FPT_LDEV.V.WIDTH# = TEMP;
      666     8939    4         END;
      667     8940    3         END;  /* Else Do */
      668     8941    2        I = I + 1;
      669     8942    2     END;
      670     8943        /**/
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:21   
      671     8944    1     IF NOT (CPSL_PARAM.ERRCODE OR CPSL_PARAM.FLAGS.VERIFY_ONLY)
      672     8945    1         THEN
      673     8946    2             DO ;
      674     8947    2               CALL M$LDEV(FPT_LDEV) ALTRET(E_LDEV);
      675     8948    2               IF GOT_LOGON_OPTION
      676     8949    2                 THEN
      677     8950    3                   DO ;
      678     8951    3                     FPT_LDEV.V.LOGON# = %YES# ;
      679     8952    3                     FPT_LDEV.V.FRMSTRM# = ' ' ;
      680     8953    3                     CALL M$LDEV(FPT_LDEV) ALTRET(E_LDEV) ;
      681     8954    3                   END ; /* Then Do */
      682     8955    2               END ; /* Then Do */
      683     8956    1   LDEVRET:
      684     8957    1     RETURN;
      685     8958
      686     8959    1   E_LDEV:
      687     8960    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;
      688     8961    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      689     8962    1     GOTO LDEVRET ;
      690     8963        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:22   
      691     8964        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:23   
      692     8965        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:24   
      693     8966        /*F*    NAME:    CXB$PRINT
      694     8967                PURPOSE:    To process the PRINT command in the CPSL.
      695     8968                REFERENCE:  Programmer's Reference Manual
      696     8969        */
      697     8970    1   CXB$PRINT:
      698     8971    1     ENTRY(GETCMD, CPSL_PARAM) ;
      699     8972        /**/
      700     8973    1     BLK$ = GETCMD.OUT$;
      701     8974    1     FPT_LDEV = CPSL_CFPT_LDEV;
      702     8975    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);
      703     8976    1     IF BLK$->P$B.NSUBLKS = 0 AND NOT CPSL_PARAM.FLAGS.VERIFY_ONLY
      704     8977    1        THEN
      705     8978    2           DO;
      706     8979    2              FPT_LDEV.V.STREAMNAME# = 'ALL';
      707     8980    2              CALL M$LDEV(FPT_LDEV) ALTRET(E_PRINT);
      708     8981    2              RETURN;
      709     8982    2           END;
      710     8983    1     I = 0;
      711     8984    2     DO WHILE(I < BLK$->P$B.NSUBLKS);
      712     8985    2        CALL CXX$LDEV(BLK$ -> P$B.SUBLK$(I) -> P$B, GETCMD, CPSL_PARAM) ;
      713     8986    2        IF CPSL_PARAM.ERRCODE = %NO#
      714     8987    2         THEN
      715     8988    3           DO ;
      716     8989    3             IF BLK$->P$B.SUBLK$(0)->P$B.CODE = LD_ALL
      717     8990    3               THEN
      718     8991    3                 FPT_LDEV.V.STREAMNAME# = 'ALL';
      719     8992    3               ELSE
      720     8993    3                 FPT_LDEV.V.STREAMNAME# = BLK$ -> P$B.SUBLK$(I) -> P$S.TEXT;
      721     8994    3             IF NOT CPSL_PARAM.FLAGS.VERIFY_ONLY
      722     8995    3               THEN
      723     8996    3                 CALL M$LDEV(FPT_LDEV) ALTRET(E_PRINT);
      724     8997    3           END ; /* Then Do */
      725     8998    2         ELSE
      726     8999    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      727     9000    2               THEN
      728     9001    2                 I = BLK$->P$B.NSUBLKS ;
      729     9002    2        I = I + 1;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:25   
      730     9003    2     END;
      731     9004    1   PRINTRET:
      732     9005    1     RETURN;
      733     9006
      734     9007    1   E_PRINT:
      735     9008    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;
      736     9009    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      737     9010    1     GOTO PRINTRET ;
      738     9011        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:26   
      739     9012        /**********************************************************************/
      740     9013        /*F*   NAME:   CXB$RESET
      741     9014               PURPOSE: To process the RESET command
      742     9015               DESCRIPTION: The RESET command resets specified items to
      743     9016                       their system defaults. These items consist of:
      744     9017                       1. Resetting all assigned dcbs
      745     9018                       2. Resetting specific dcb
      746     9019                       3. Resetting specific dcb options
      747     9020               REFERENCE: Programmers Reference Manual
      748     9021        */
      749     9022        /*D*   NAME:   CXB$RESET
      750     9023               CALL:   CALL CXB$RESET (GETCMD, CPSL_PARAM)
      751     9024               INTERFACE: CXB$MDFYAM,CXC$WRITEAM
      752     9025               INPUT:  GETCMD - the CXG$GETCMD parameter.
      753     9026                       CPSL_PARAM - Command Processor Shared Library parameter.
      754     9027                       CPFLAGS1.CP_IQUIT - implied quit flag set or reset
      755     9028                       *A - assign merge file
      756     9029               OUTPUT: *A - updated assign merge record
      757     9030               DESCRIPTION: The RESET command is scanned for the item to be reset.
      758     9031                       If a dcb is specified, using
      759     9032                       the dcb name as a key, the specified assign merge record
      760     9033                       is deleted from the *A file. If no item is specified
      761     9034                       or if the DCBS option is specified, all dcbs are
      762     9035                       deleted from the *A file. Keys in the *A file which
      763     9036                       are not dcb names begin with a null character.
      764     9037                       File extension is reset for the affected DCBS.
      765     9038                       If a dcb with options is specified, the specified
      766     9039                       parameter is reset in the assign merge record for the
      767     9040                       specified dcb.
      768     9041        */
      769     9042        /**********************************************************************/
      770     9043    1   CXB$RESET:
      771     9044    1     ENTRY(GETCMD, CPSL_PARAM) ;
      772     9045        /**/
      773     9046    1     BLK$ = GETCMD.OUT$;
      774     9047    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      775     9048    1         THEN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:27   
      776     9049    2             DO ;
      777     9050    2                   CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;
      778     9051    2               GOTO RESETRET ;
      779     9052    2             END ; /* Then Do */
      780     9053        /*
      781     9054           **** No options after reset infers .... Delete all a/m entries
      782     9055                reset file extension for all dcbs
      783     9056        */
      784     9057    1     IF (BLK$->P$B.NSUBLKS=0)
      785     9058    1        THEN
      786     9059    2           DO;
      787     9060    2              CALL DELETE_DCBS ALTRET(RESETRET);
      788     9061    2              RETURN;
      789     9062    2           END;
      790     9063    1     TEMP$=BLK$->P$B.SUBLK$(0);
      791     9064    1   RESET10:
      792     9065    2     DO CASE(TEMP$->P$B.CODE);
      793     9066    2      CASE(DCBOPT);
      794     9067    2        DCB$=TEMP$->P$B.SUBLK$(0);
      795     9068    2        CALL CXB$CHKFORT(DCB$);         /*Cnvrt. If fort type*/
      796     9069    2        CALL CXX$RESET(TEMP$->P$B,GETCMD,CPSL_PARAM); /* Check for legal name */
      797     9070    2        IF CPSL_PARAM.ERRCODE ~= %NO#
      798     9071    2          THEN
      799     9072    2            EXIT;
      800     9073        /*
      801     9074          **** Check if deleting dcb or just resetting dcb options
      802     9075        */
      803     9076    2        IF (BLK$->P$B.NSUBLKS>1)
      804     9077    2           THEN
      805     9078    3              DO;                       /*Reset options*/
      806     9079    3                 CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;
      807     9080    3                 IF CPSL_PARAM.ERRCODE ~= %NO#
      808     9081    3                   THEN
      809     9082    3                     EXIT;
      810     9083    3                 CALL CXC$WRITEAM(DCB$,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;
      811     9084    3              END;
      812     9085        /* ****                                          Delete dcb*/
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:28   
      813     9086    2           ELSE
      814     9087    3              DO;
      815     9088    3        CALL CXB$DELAM(DCB$,,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;
      816     9089    3                 IF CPSL_PARAM.ERRCODE ~= %NO#
      817     9090    3                    THEN
      818     9091    3                       EXIT;
      819     9092    3                 CALL CXC$RFEXT(DCB$);              /*Reset file extension*/
      820     9093    3              END;
      821     9094    2        IF CPSL_PARAM.ERRCODE ~= %NO#
      822     9095    2             THEN
      823     9096    2               GOTO RESET20 ;
      824     9097        /*
      825     9098          ****     Close M$LL if open. Removes old assignments that were in effect
      826     9099        */
      827     9100    2        IF TEMP$->P$S.TEXT = CPSL_M$LL.TXT
      828     9101    2           THEN
      829     9102    2              CALL CLOSE_DCB(DCB$) ALTRET(RESETRET);
      830     9103        /*
      831     9104         ****     Close M$DO and merge assignment. Removes old assignments that were in effe
              9104        ct
      832     9105        */
      833     9106    2           ELSE
      834     9107    2              IF TEMP$->P$S.TEXT = M$DO_DCB.TXT
      835     9108    2                 THEN
      836     9109    3                    DO;
      837     9110    3                       CALL CLOSE_DCB(ADDR(M$DO_DCB)) ALTRET(RESETRET);
      838     9111    3                       CALL MERGE_DCB(ADDR(M$DO_DCB)) ALTRET(RESETRET);
      839     9112    3                    END;
      840     9113    2      CASE(DCBSOPT);
      841     9114    2        CALL DELETE_DCBS ALTRET(RESETRET);
      842     9115    2      CASE(RGLOBALS);
      843     9116    2      END RESET10;
      844     9117    1   RESETRET:
      845     9118    1     RETURN;
      846     9119
      847     9120    1   RESET20:
      848     9121        /*E*       ERROR:   CXB-E$NOASGN-E
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:29   
      849     9122                   MESSAGE: Dcb isn't assigned
      850     9123                   DESCRIPTION: The user attempted to reset a nonexistant dcb
      851     9124        */
      852     9125    1     ERR_CODE = CPSL_PARAM.ERRCODE ;
      853     9126    1     IF ERR_CODE.ERR# = %E$NOKEY
      854     9127    1        THEN
      855     9128    2           DO;
      856     9129    2              IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG
      857     9130    2               THEN
      858     9131    3                 DO ;
      859     9132    3                   GETCMD.ERR_CODE = E_NOASGN ;
      860     9133    3                   CPSL_PARAM.ERRCODE = %NO# ;
      861     9134    4                   CALL CXG$ERRMSG (GETCMD) WHENALTRETURN DO;
      862     9135    4                                             CPSL_PARAM.ERRCODE = GETCMD.ERR# ;
      863     9136    4                                             CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
      864     9137    4                                             END ;
      865     9138    3                 END ; /* Then Do */
      866     9139    2           END;
      867     9140    1     GOTO RESETRET;
      868     9141                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:30   
      869     9142        /**********************************************************************/
      870     9143        /*F*   NAME:   CXB$SET
      871     9144               PURPOSE: To process the SET command.
      872     9145               DESCRIPTION: If a dcb is being set, the command is scanned and
      873     9146                       an assign merge record created or updated for the specified
      874     9147                       dcb in the *A file. The assign merge record is merged
      875     9148                       into the dcb at open time.
      876     9149               REFERENCE: Programmers Reference Manual
      877     9150        */
      878     9151        /*D*   NAME:   CXB$SET
      879     9152               CALL:   CALL CXB$SET (GETCMD, CPSL_PARAM)
      880     9153               INTERFACE: CXB$BLDAM,CXB$MDFYAM,CXC$WRITEAM
      881     9154               INPUT:  GETCMD - the CXG$GETCMD parameter.
      882     9155                       CPSL_PARAM - Command Processor Shared Library parameter.
      883     9156                       *A - contains assign merge records
      884     9157               OUTPUT: *A - new or updated assign merge record for the
      885     9158                       specified dcb
      886     9159               DESCRIPTION: The SET command is processed to the terminator
      887     9160                       after the dcb. If a ',' is encountered, an existing
      888     9161                       assign merge record is updated. Otherwise, a new assign
      889     9162                       merge record is written to the *A file for the specified dcb and
      890     9163                       file extension terminated.
      891     9164                       An existing dcb of the same name will be overwritten. If
      892     9165                       a *A file does not exist, one will be created.
      893     9166        */
      894     9167        /**********************************************************************/
      895     9168    1   CXB$SET:
      896     9169    1     ENTRY(GETCMD, CPSL_PARAM) ;
      897     9170        /**/
      898     9171    1     BLK$ = GETCMD.OUT$;
      899     9172        /*
      900     9173                     **** Create-update assign merge record
      901     9174        */
      902     9175                                                /*Perform dcb check*/
      903     9176    1     DCB$=BLK$->P$B.SUBLK$(0)->P$B.SUBLK$(0);
      904     9177    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY
      905     9178    1         THEN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:31   
      906     9179    2             DO ;
      907     9180    2               CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;
      908     9181    2               GOTO SETRET ;
      909     9182    2             END ; /* Then Do */
      910     9183    1     CPOS = BLK$ -> P$B.SUBLK$(0) -> P$B.CPOS;
      911     9184    1     CALL CXB$CHKFORT(DCB$);                  /*Cnvrt. If fort type*/
      912     9185        /* Check if building new or updating old a/m entry*/
      913     9186    1     IF (BLK$->P$B.SUBLK$(1)->P$B.CODE=FIDOPT)
      914     9187    1        THEN
      915     9188    2           DO;
      916     9189    2              FID$=BLK$->P$B.SUBLK$(1)->P$B.SUBLK$(0);
      917     9190    2              CALL CHK_ASGN (CPOS,DCB$,FID$) ALTRET(SETRET);
      918     9191    2              CALL CXB$BLDAM(BLK$,FID$,GETCMD,CPSL_PARAM) ;        /*Bld a/m*/
      919     9192    2              IF CPSL_PARAM.ERRCODE ~= %NO#
      920     9193    2               THEN
      921     9194    2                 GOTO SETRET ;
      922     9195    2              CALL CXC$WRITEAM(DCB$,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ; /*Write a/m*/
      923     9196    2               IF CPSL_PARAM.ERRCODE ~= %NO#
      924     9197    2                 THEN
      925     9198    2                   GOTO SETRET ;
      926     9199    2              CALL CXC$RFEXT(DCB$);        /*Reset file ext. Bit*/
      927     9200    2           END;
      928     9201    1        ELSE
      929     9202    2           DO;
      930     9203    2              CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;
              9203                       /*Mdfy a/m*/
      931     9204    2              IF CPSL_PARAM.ERRCODE ~= %NO#
      932     9205    2               THEN
      933     9206    2                 GOTO SETRET ;
      934     9207    2              CALL CXC$WRITEAM(DCB$,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ; /*Write a/m*/
      935     9208    2              IF CPSL_PARAM.ERRCODE ~= %NO#
      936     9209    2               THEN
      937     9210    2                 GOTO SETRET ;
      938     9211    2           END;
      939     9212        /*
      940     9213          ****  Close M$LL dcb if open. Permits new assignments to take effect
      941     9214        */
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:32   
      942     9215    1     IF BLK$->P$B.SUBLK$(0)->P$S.TEXT = CPSL_M$LL.TXT
      943     9216    1        THEN
      944     9217    1           CALL CLOSE_DCB(DCB$) ALTRET(SETRET);
      945     9218    1        ELSE
      946     9219        /*
      947     9220          ****  Reopen M$DO permitting new assignments to take effect
      948     9221        */
      949     9222    1           IF BLK$->P$B.SUBLK$(0)->P$S.TEXT = M$DO_DCB.TXT
      950     9223    1              THEN
      951     9224    2                 DO;
      952     9225    2                    CALL CLOSE_DCB(ADDR(M$DO_DCB)) ALTRET(SETRET);
      953     9226    2                    CALL MERGE_DCB(ADDR(M$DO_DCB)) ALTRET(SETRET);
      954     9227    2                 END;
      955     9228    1   SETRET:
      956     9229    1     RETURN;
      957     9230                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:33   
      958     9231        /*********************************************************************/
      959     9232        /*F*    NAME:    CXB$UNHOLD
      960     9233                PURPOSE:    To process the UNHOLD command to unhold symbiont output for
      961     9234                         JOBNAME, SYSID, or symbiont files.
      962     9235               REFERENCE: Programmers Reference Manual
      963     9236        */
      964     9237        /*D*   NAME:   CXB$UNHOLD
      965     9238               CALL:   CALL CXB$UNHOLD (GETCMD, CPSL_PARAM)
      966     9239               INPUT:  GETCMD - the CXG$GETCMD parameter.
      967     9240                       CPSL_PARAM - Command Processor Shared Library parameter.
      968     9241               OUTPUT:
      969     9242               DESCRIPTION: The UNHOLD command unhold symbiont output for
      970     9243                      for JOBNAME, SYSID, or symbiont file that were specified.
      971     9244        */
      972     9245        /*********************************************************************/
      973     9246    1   CXB$UNHOLD:
      974     9247    1     ENTRY(GETCMD, CPSL_PARAM) ;
      975     9248        /**/
      976     9249    1     BLK$ = GETCMD.OUT$;
      977     9250    1     FPT_JOBSTATS=CPSL_CFPT_JOBSTATS;
      978     9251    1     FPT_JOBSTATS.V_=VECTOR(FPT_JOBSTATS.V);
      979     9252    1     IF BLK$->P$B.NSUBLKS~=0
      980     9253    1       THEN
      981     9254    2         DO ;
      982     9255    2               I=0;
      983     9256    3               DO WHILE (I < BLK$->P$B.NSUBLKS);
      984     9257        /*
      985     9258         *** UNHOLD OUTPUT BY DEFAULT
      986     9259        */
      987     9260    3                 FPT_JOBSTATS.V.ORDER# = %UNHOLD#;
      988     9261    3                 P$=BLK$->P$B.SUBLK$(I);
      989     9262    3                 TEMP$ = P$->P$B.SUBLK$(0) ;
      990     9263
      991     9264    3                 CALL CXX$UNHOLD (P$->P$B,GETCMD,CPSL_PARAM);
      992     9265    4                 DO CASE(P$->P$B.CODE);
      993     9266
      994     9267    4                   CASE(UNHOLD_FID);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:34   
      995     9268    4                     VLP_JOBNAME.JOBNAME#=TEMP$->P$S.TEXT;
      996     9269    4                     FPT_JOBSTATS.JOBNAME_=VECTOR(VLP_JOBNAME);
      997     9270    4                     P$ = P$->P$B.SUBLK$(1);
      998     9271    4                     CALL CXX$UNHOLD (P$->P$B,GETCMD,CPSL_PARAM);
      999     9272    4                     FID_ACCT.ACCT# = P$->P$B.SUBLK$(0)->P$S.TEXT;
     1000     9273    4                     FPT_JOBSTATS.ACCT_=VECTOR(FID_ACCT);
     1001     9274
     1002     9275    4                   CASE(UNHOLD_JOBNAME);
     1003     9276    4                     VLP_JOBNAME.JOBNAME#=TEMP$->P$S.TEXT;
     1004     9277    4                     FPT_JOBSTATS.JOBNAME_=VECTOR(VLP_JOBNAME);
     1005     9278
     1006     9279    4                   CASE(UNHOLD_SYSID);
     1007     9280    4                     CALL CHARBIN(TEMP,TEMP$->P$S.TEXT);
     1008     9281    4                     FPT_JOBSTATS.V.SYSID#=TEMP;
     1009     9282
     1010     9283    4                   CASE(UNHOLD_ACCT);
     1011     9284    4                     CALL SETUP_FID(TEMP$->P$S) ALTRET(E_UNHOLD);
     1012     9285    4                     FPT_JOBSTATS.ACCT_=VECTOR(FID_ACCT);
     1013     9286    4                     FPT_JOBSTATS.V.SYSID#=0;
     1014     9287    4                     VLP_JOBNAME.JOBNAME#=' ';
     1015     9288    4                     FPT_JOBSTATS.JOBNAME_=VECTOR(VLP_JOBNAME);
     1016     9289    4                 END; /* do case ... end */
     1017     9290
     1018     9291    3                J = 1;
     1019     9292    3                IF P$->P$B.NSUBLKS > 1
     1020     9293    3                 THEN
     1021     9294    4                   DO WHILE (J < P$->P$B.NSUBLKS);
     1022     9295    5                     DO CASE(P$->P$B.SUBLK$(J)->P$B.CODE);
     1023     9296
     1024     9297    5                       CASE(UNHOLD_STREAM);
     1025     9298    5                         FPT_JOBSTATS.V.ORDER#=%UNHOLDF#;
     1026     9299    5                         CALL CXX$UNHOLD
     1027     9300    5                           (P$->P$B.SUBLK$(J)->P$S,GETCMD,CPSL_PARAM,TEMP);
     1028     9301    5                         IF CPSL_PARAM.ERRCODE ~= %NO#
     1029     9302    5                           THEN
     1030     9303    5                             GOTO UNHOLD10;
     1031     9304    5                         FPT_JOBSTATS.V.NUM#=TEMP;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:35   
     1032     9305    5                     END; /* do case ... end */
     1033     9306    4                     CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_UNHOLD);
     1034     9307    4   UNHOLD10:
     1035     9308    4                     J=J+1;
     1036     9309    4                   END; /* do while  ... end*/
     1037     9310    3                 ELSE
     1038     9311    3                   IF CPSL_PARAM.ERRCODE = %NO#
     1039     9312    3                     THEN
     1040     9313    3                       CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_UNHOLD);
     1041     9314    3   UNHOLD20:
     1042     9315    3                 I = I+1;
     1043     9316    3               END; /* do while ... end */
     1044     9317    2         END ; /* Then Do */
     1045     9318    1       ELSE
     1046     9319    2         DO ;
     1047     9320    2             FPT_JOBSTATS.V.ORDER# = %SRCH# ;
     1048     9321    2             FPT_JOBSTATS.V.OUTPUT# = %YES# ;
     1049     9322    2             CALL CXC$GETSEG(CPSL_SEG3$) ;            /*Get seg for buffer*/
     1050     9323    2             IF CPSL_PARAM.ERRCODE ~= %NO#
     1051     9324    2               THEN
     1052     9325    2                 GOTO UNHOLD_RETURN ;
     1053     9326    2             FPT_JOBSTATS.RESULTS_ = VECTOR(CPSL_SEG3$->B$$PAGE) ;
     1054     9327    2             JOBSTATS_CRITERIA = CVLP_CRITERIA ;
     1055     9328    2             JOBSTATS_CRITERIA.ACCT# = B$JIT.ACCN ;
     1056     9329    2             JOBSTATS_CRITERIA.HOLD# = %YES# ;
     1057     9330    2             FPT_JOBSTATS.CRITERIA_ = VECTOR(JOBSTATS_CRITERIA) ;
     1058     9331    2             CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_MAJOR_ERROR) ;
     1059     9332
     1060     9333    2             FPT_JOBSTATS = CPSL_CFPT_JOBSTATS ;
     1061     9334    2             FPT_JOBSTATS.V_ = VECTOR(FPT_JOBSTATS.V) ;
     1062     9335    2             FPT_JOBSTATS.V.ORDER# = %UNHOLD# ;
     1063     9336    2             I = 1 ;
     1064     9337    3             DO J = 0 TO CPSL_SEG3$->VLR$OSRCH.FOUND-1 ;
     1065     9338    3               TEMP$ = ADDR(CPSL_SEG3$->VLR$OSRCH.F(J)) ;
     1066     9339    3               IF FPT_JOBSTATS.V.SYSID# = TEMP$ -> VLA$OSRCH.SYSID
     1067     9340    3                 THEN
     1068     9341    3                   GOTO UNHELD_THAT_ONE ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:36   
     1069     9342    3               FPT_JOBSTATS.V.SYSID# = TEMP$ -> VLA$OSRCH.SYSID ;
     1070     9343    3               CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_UNHOLD) ;
     1071     9344    3   UNHELD_THAT_ONE:
     1072     9345    3             END ; /* Do J */
     1073     9346    2         END ; /* Else Do */
     1074     9347
     1075     9348    1   UNHOLD_RETURN:
     1076     9349    1     CALL CXC$RELSEG (CPSL_SEG3$);
     1077     9350    1     RETURN;
     1078     9351    1   E_UNHOLD:
     1079     9352        /*
     1080     9353           **** Output job name or id not found
     1081     9354        */
     1082     9355        /*E*      ERROR: CXB-E$JOBNTFND-C
     1083     9356                  MESSAGE: Job %U1 not found
     1084     9357                DESCRIPTION: The specified job to be unheld could not be found.
     1085     9358        */
     1086     9359    1     IF BLK$->P$B.NSUBLKS~=0
     1087     9360    1         THEN
     1088     9361    2             DO ;
     1089     9362    2               FID_NAME.L# = TEMP$->P$S.COUNT;
     1090     9363    2               FID_NAME.NAME# = TEMP$->P$S.TEXT;
     1091     9364    2             END ; /* Then Do */
     1092     9365    1         ELSE
     1093     9366    2             DO ;
     1094     9367    2               CALL BINCHAR(FID_NAME.NAME#, FPT_JOBSTATS.V.SYSID#) ;
     1095     9368    2               CALL CXB$RZEROS(FID_NAME.NAME#, SIZEC(FID_NAME.NAME#), TEMP) ;
     1096     9369    2               FID_NAME.L# = TEMP ;
     1097     9370    2             END ; /* Else Do */
     1098     9371    1     IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOTFND
     1099     9372    1        THEN
     1100     9373    2           DO;
     1101     9374    2              IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG
     1102     9375    2               THEN
     1103     9376    3                 DO ;
     1104     9377    3                   GETCMD.ERR_CODE = E_JOBNTFND ;
     1105     9378    3                   CPSL_PARAM.ERRCODE = %NO# ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:37   
     1106     9379    3                   GETCMD.F1_ = VECTOR(FID_NAME) ;
     1107     9380    4                   CALL CXG$ERRMSG (GETCMD) WHENALTRETURN DO ;
     1108     9381    4                                     CPSL_PARAM.ERRCODE = GETCMD.ERR# ;
     1109     9382    4                                     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
     1110     9383    4                                     GOTO UNHOLD_RETURN ;
     1111     9384    4                                     END ;
     1112     9385    3                 END ; /* Then Do */
     1113     9386    2               ELSE
     1114     9387    3                 DO ;
     1115     9388    3                   CPSL_PARAM.ERRCODE = E_JOBNTFND ;
     1116     9389    3                   GOTO UNHOLD_RETURN ;
     1117     9390    3                 END ; /* Else Do */
     1118     9391    2              IF BLK$->P$B.NSUBLKS~=0
     1119     9392    2               THEN
     1120     9393    2                 GOTO UNHOLD20;
     1121     9394    2               ELSE
     1122     9395    2                 GOTO UNHELD_THAT_ONE ;
     1123     9396    2           END;
     1124     9397        /*E*      ERROR: CXB-E$NOSYMFILE-C
     1125     9398                  MESSAGE: Output file %U1-%U2 not found
     1126     9399                  DESCRIPTION: The specified output symbiont file couldn't be found
     1127     9400        */
     1128     9401    1     IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$FNOTFND
     1129     9402    1        THEN
     1130     9403    2           DO;
     1131     9404    2             IF BLK$->P$B.NSUBLKS~=0
     1132     9405    2               THEN
     1133     9406    3                 DO ;
     1134     9407    3                   SYMNAME.COUNT = P$->P$B.SUBLK$(J)->P$S.COUNT;
     1135     9408    3                   SYMNAME.TEXT = P$->P$B.SUBLK$(J)->P$S.TEXT;
     1136     9409    3                 END ;
     1137     9410    2               ELSE
     1138     9411    3                 DO ;
     1139     9412    3                   CALL BINCHAR(SYMNAME.TEXT, FPT_JOBSTATS.V.NUM#) ;
     1140     9413    3                   CALL CXB$RZEROS(SYMNAME.TEXT, SIZEC(SYMNAME.TEXT), TEMP) ;
     1141     9414    3                   SYMNAME.COUNT = TEMP ;
     1142     9415    3                 END ; /* Else Do */
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:38   
     1143     9416    2              IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG
     1144     9417    2               THEN
     1145     9418    3                 DO ;
     1146     9419    3                   GETCMD.ERR_CODE = E_NOSYMFILE ;
     1147     9420    3                   CPSL_PARAM.ERRCODE = %NO# ;
     1148     9421    3                   GETCMD.F1_ = VECTOR(FID_NAME) ;
     1149     9422    3                   GETCMD.F2_ = VECTOR(SYMNAME) ;
     1150     9423    4                   CALL CXG$ERRMSG (GETCMD) WHENALTRETURN DO ;
     1151     9424    4                                     CPSL_PARAM.ERRCODE = GETCMD.ERR# ;
     1152     9425    4                                     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
     1153     9426    4                                     GOTO UNHOLD_RETURN ;
     1154     9427    4                                     END ;
     1155     9428    3                 END ; /* Then Do */
     1156     9429    2               ELSE
     1157     9430    3                 DO ;
     1158     9431    3                   CPSL_PARAM.ERRCODE = E_NOSYMFILE ;
     1159     9432    3                   GOTO UNHOLD_RETURN ;
     1160     9433    3                 END ; /* Else Do */
     1161     9434    2              IF BLK$->P$B.NSUBLKS~=0
     1162     9435    2               THEN
     1163     9436    2                 GOTO UNHOLD10;
     1164     9437    2               ELSE
     1165     9438    2                 GOTO UNHELD_THAT_ONE ;
     1166     9439    2           END;
     1167     9440    1   E_MAJOR_ERROR:
     1168     9441    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;
     1169     9442    1     GOTO UNHOLD_RETURN ;
     1170     9443
     1171     9444        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:39   
     1172     9445        /*
     1173     9446        *****   Local subroutines
     1174     9447        */
     1175     9448        /*I*    NAME:    SETUP_FID
     1176     9449                PURPOSE:    To setup and execute the M$FID monitor service call to
     1177     9450                         break down the passed text fid into its constituent parts.
     1178     9451        */
     1179     9452    1   SETUP_FID: PROC(P$S) ALTRET ;
     1180     9453        /**/
     1181     9454        %PARSE$SYM(NAME=P$S,STCLASS="");
     1182     9492        /*
     1183     9493        *****   Begin procedure
     1184     9494        */
     1185     9495    2     FPT_FID = CPSL_CFPT_FID;
     1186     9496    2     FPT_FID.TEXTFID_ = VECTOR(P$S.TEXT);
     1187     9497    2     FPT_FID.NAME_ = VECTOR(FID_NAME);
     1188     9498    2     FPT_FID.ACCT_ = VECTOR(FID_ACCT);
     1189     9499    2     FPT_FID.PASS_ = VECTOR(FID_PASS);
     1190     9500    2     FPT_FID.SN_ = VECTOR(FID_SN);
     1191     9501    2     FPT_FID.WSN_ = VECTOR(FID_WSN);
     1192     9502    2     FPT_FID.ASN_ = VECTOR(FID_ASN);
     1193     9503    2     FPT_FID.RES_ = VECTOR(FID_RES);
     1194     9504    2     FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);
     1195     9505    2     CALL M$FID(FPT_FID) ALTRET(E_SETUP_FID_M$FID);
     1196     9506    2     RETURN;
     1197     9507    2   E_SETUP_FID_M$FID: ;
     1198     9508    2     ALTRETURN;
     1199     9509    2   END SETUP_FID;
     1200     9510        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:40   
     1201     9511        /********************************************************************/
     1202     9512        /*I*   NAME: CLOSE_DCB
     1203     9513               PURPOSE: Close the M$DO and M$LL dcbs
     1204     9514                     DESCRIPTION: Close the dcb if open except if not being
     1205     9515                                  performed for M$YC pmme.
     1206     9516        */
     1207     9517        /********************************************************************/
     1208     9518    1   CLOSE_DCB: PROC(DCB$) ALTRET;
     1209     9519    2   DCL DCB_NUM UBIN WORD;
     1210     9520    2   DCL I SBIN;
     1211     9521    2   DCL DCB$ PTR;
     1212     9522    2     IF B$JIT.CPFLAGS1 & %CP_YCPMME#  THEN
     1213     9523    2        RETURN;
     1214     9524        /*
     1215     9525          ****     If we already have M$LL, make sure it's closed.
     1216     9526        */
     1217     9527    2     IF DCB$->TEXTC = CPSL_M$LL
     1218     9528    2        THEN
     1219     9529    2           CALL GETDCB_LL(DCB_NUM) ALTRET(CLOSE_DCB_RET) ;
     1220     9530    2           IF CPSL_PARAM.ERRCODE ~= %NO#
     1221     9531    2             THEN
     1222     9532    2               GOTO CLOSE_DCB_RET ;
     1223     9533    2        ELSE
     1224     9534    2           IF DCB$->TEXTC = M$DO_DCB
     1225     9535    2              THEN
     1226     9536    2                 DCB_NUM = CPSL_M$DO_NUM;
     1227     9537    2     IF DCBADDR(DCB_NUM)->F$DCB.FCD# = %YES#
     1228     9538    2        THEN
     1229     9539    3           DO;
     1230     9540    3              FPT_CLOSE = CPSL_CFPT_CLOSE;
     1231     9541    3              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
     1232     9542    3              FPT_CLOSE.V.DISP# =%SAVE#;
     1233     9543    3              FPT_CLOSE.V.DCB# = DCB_NUM;
     1234     9544    3              CALL M$CLOSE(FPT_CLOSE) ALTRET(E_CLOSE_DCB);
     1235     9545    3           END;
     1236     9546    2   CLOSE_DCB_RET:
     1237     9547    2     RETURN;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:41   
     1238     9548    2   E_CLOSE_DCB:
     1239     9549    2     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;
     1240     9550    2     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
     1241     9551    2     ALTRETURN;
     1242     9552    2   END CLOSE_DCB;
     1243     9553        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:42   
     1244     9554        /**********************************************************************/
     1245     9555        /*I*   NAME: MERGE_DCB
     1246     9556               PURPOSE: Merge the assignments into the M$DO and M$LL dcbs
     1247     9557               DESCRIPTION: The specified dcb is merged with scrub and reaasign
     1248     9558                            set if not being performed for M$YC pmme.
     1249     9559        */
     1250     9560        /**********************************************************************/
     1251     9561    1   MERGE_DCB: PROC(DCB$) ALTRET;
     1252     9562    2   DCL DCB$ PTR;
     1253     9563        %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
     1254     9672    2     IF B$JIT.CPFLAGS1 & %CP_YCPMME#  THEN
     1255     9673    2        RETURN;
     1256     9674    2     FPT_OPEN = CPSL_CFPT_OPEN;
     1257     9675    2     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
     1258     9676    2     IF DCB$->TEXTC = CPSL_M$LL
     1259     9677    2        THEN
     1260     9678    2           CALL GETDCB_LL(FPT_OPEN.V.DCB#) ALTRET(E_MERGE_DCB_ALT) ;
     1261     9679    2     IF DCB$->TEXTC = M$DO_DCB
     1262     9680    2        THEN
     1263     9681    2           FPT_OPEN.V.DCB# = CPSL_M$DO_NUM;
     1264     9682    2     FPT_OPEN.V.INITZ.REASSIGN# = %YES#;
     1265     9683    2     FPT_OPEN.V.INITZ.SCRUB# = %YES#;
     1266     9684    2     FPT_OPEN.V.SETDCB# = %YES#;
     1267     9685    2     CALL M$OPEN(FPT_OPEN) ALTRET(E_MERGE_DCB);
     1268     9686    2     RETURN;
     1269     9687    2   E_MERGE_DCB:
     1270     9688    2     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;
     1271     9689    2     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
     1272     9690    2   E_MERGE_DCB_ALT:
     1273     9691    2     ALTRETURN;
     1274     9692    2   END MERGE_DCB;
     1275     9693                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:43   
     1276     9694        /**********************************************************************/
     1277     9695        /*I*  NAME: DELETE_DCBS
     1278     9696              PURPOSE: Delete all dcbs in the *A file
     1279     9697              DESCRIPTION: If the M$LL or M$DO dcb is assigned, the dcb is closed and
     1280     9698                           the entry deleted. If the M$DO is assigned, it is reopened
     1281     9699                            with default assignment. All other dcbs are deleted from the
     1282     9700                           *A without being closed.
     1283     9701                           The M$DRIBBLE dcb is not deleted if the dribble proces
     1284     9702                           is in effect.
     1285     9703        */
     1286     9704        /**********************************************************************/
     1287     9705    1   DELETE_DCBS: PROC ALTRET;
     1288     9706        %VLP_NAME(FPTN=DQDELDCB,NAME="%(CONCAT('M$DQ',BITASC('177'O)))",LEN=5,STCLASS=
              9706            "CONSTANT");
     1289     9733        %VLP_NAME(FPTN=DRNULDCB,NAME="%(CONCAT('M$DR',BITASC('0'B)))",LEN=5,STCLASS=
              9733            "CONSTANT");
     1290     9760        /*
     1291     9761          ****     Close M$LL if open and only if a M$LL a/m record existed.
     1292     9762          ****     This removes old assignments that were in effect.
     1293     9763        */
     1294     9764    2     CALL CXB$DELAM(ADDR(CPSL_M$LL),,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;
     1295     9765    2     IF CPSL_PARAM.ERRCODE ~= %NO#
     1296     9766    2         THEN
     1297     9767    3             DO ;
     1298     9768    3               CPSL_PARAM.ERRCODE = %NO# ;
     1299     9769    3               GOTO DELETE_DCBS10 ;
     1300     9770    3             END ;
     1301     9771    2     CALL CLOSE_DCB(ADDR(CPSL_M$LL)) ALTRET(E_DELETE_DCBS);
     1302     9772    2   DELETE_DCBS10:
     1303     9773        /*
     1304     9774          ****    Close and reopen M$DO, if a M$DO record existed, to
     1305     9775          ****    Remove previous assignment.
     1306     9776        */
     1307     9777    2     CALL CXB$DELAM(ADDR(M$DO_DCB),,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;
     1308     9778    2     IF CPSL_PARAM.ERRCODE ~= %NO#
     1309     9779    2         THEN
     1310     9780    3             DO ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:44   
     1311     9781    3               CPSL_PARAM.ERRCODE = %NO# ;
     1312     9782    3               GOTO DELETE_DCBS20 ;
     1313     9783    3             END ;
     1314     9784    2     CALL CLOSE_DCB(ADDR(M$DO_DCB)) ALTRET(E_DELETE_DCBS);
     1315     9785    2     CALL MERGE_DCB(ADDR(M$DO_DCB)) ALTRET(E_DELETE_DCBS);
     1316     9786    2   DELETE_DCBS20:
     1317     9787        /*
     1318     9788          ****     Delete remaining dcbs except for M$DRIBBLE if dribbling active.
     1319     9789        */
     1320     9790    2     IF (B$JIT.CPFLAGS1 & %CP_DRIBBLE#)  THEN
     1321     9791    3        DO;
     1322     9792    3           CALL CXB$DELAM(ADDR(CPSL_FDCB),ADDR(DQDELDCB),CPSL_PARAM.WORK_DCB#,
              9792                    CPSL_PARAM) ;
     1323     9793    3           IF CPSL_PARAM.ERRCODE ~= %NO#
     1324     9794    3             THEN
     1325     9795    3               GOTO E_DELETE_DCBS ;
     1326     9796    3           CALL CXB$DELAM(ADDR(DRNULDCB),ADDR(CPSL_LDCB),CPSL_PARAM.WORK_DCB#,
              9796                    CPSL_PARAM) ;
     1327     9797    3           IF CPSL_PARAM.ERRCODE ~= %NO#
     1328     9798    3             THEN
     1329     9799    3               GOTO E_DELETE_DCBS ;
     1330     9800    3        END;
     1331     9801    2     ELSE
     1332     9802    2        CALL CXB$DELAM(ADDR(CPSL_FDCB),ADDR(CPSL_LDCB),CPSL_PARAM.WORK_DCB#,CPSL_PARAM)
              9802                 ;
     1333     9803    2        IF CPSL_PARAM.ERRCODE ~= %NO#
     1334     9804    2         THEN
     1335     9805    2             GOTO E_DELETE_DCBS ;
     1336     9806    3     DO J=0 TO 35;
     1337     9807    3        B$JIT.FEXT(J)=%NO#;
     1338     9808    3     END;
     1339     9809    2     B$JIT.PRFLAGS.SI = %NO#;
     1340     9810    2     B$JIT.PRFLAGS.UI = %NO#;
     1341     9811    2     B$JIT.PRFLAGS.OU = %NO#;
     1342     9812    2     B$JIT.PRFLAGS.LS = %NO#;
     1343     9813    2     CPSL_PARAM.ERRCODE = %NO# ;
     1344     9814    2     RETURN;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:45   
     1345     9815    2   E_DELETE_DCBS:
     1346     9816    2     ALTRETURN;
     1347     9817    2   END DELETE_DCBS;
     1348     9818                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:46   
     1349     9819        /********************************************************************/
     1350     9820        /*I*   NAME: CHK_ASGN
     1351     9821               PURPOSE: Check if M$DO and M$LL dcbs are being assigned to *A or *S
     1352     9822               DESCRIPTION: Output error message if user is attempting to assign
     1353     9823                         M$DO and M$LL dcbs to the *A or *S files. Clobbering of
     1354     9824                         these files creates havoc.
     1355     9825        */
     1356     9826        /********************************************************************/
     1357     9827    1   CHK_ASGN: PROC (CPOS,DCB$,FID$) ALTRET;
     1358     9828    2   DCL CPOS UBIN WORD;
     1359     9829    2   DCL DCB$ PTR;
     1360     9830    2   DCL FID$ PTR;
     1361     9831        %VLP_NAME(FPTN=DCB_NAME,LEN=31,STCLASS=AUTO);
     1362     9858        /**/
     1363     9859        /*
     1364     9860             ***** DCB$ points to dcbname.
     1365     9861                   FID$ points to filename.
     1366     9862                   CPOS is character position of dcbname in CPBUFF ...
     1367     9863        */
     1368     9864    2     IF (DCB$ -> TEXTC = M$DO_DCB)  OR (DCB$ -> TEXTC = CPSL_M$LL)
     1369     9865    2        THEN
     1370     9866    2           IF (FID$ -> TEXTC = CPSL_STARA) OR (FID$ -> TEXTC = CPSL_STARS)
     1371     9867    2              THEN
     1372     9868    3                 DO ;
     1373     9869    3                   CPSL_PARAM.ERRCODE = E_BADASGN ;
     1374     9870    3                   CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
     1375     9871    3                   ALTRETURN ;
     1376     9872    3                 END ; /* Then Do */
     1377     9873    2     RETURN;
     1378     9874    2   END CHK_ASGN;
     1379     9875        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:47   
     1380     9876    1   GETDCB_LL:  PROC(DCB#) ALTRET ;
     1381     9877    2   DCL DCB# UBIN WORD ;
     1382     9878    2   DCL I UBIN WORD ;
     1383     9879    2   DCL J UBIN WORD ;
     1384     9880    2   DCL TEMP$ PTR ;
     1385     9881
     1386     9882    2     J=0;
     1387     9883    3     DO I=1 TO B$ROS$->B$ROSEG.NUMDCBS;
     1388     9884    3        IF DCBADDR(I) ~= ADDR(NIL)
     1389     9885    3           THEN
     1390     9886    4              DO;
     1391     9887    4               TEMP$ = DCBADDR(I);
     1392     9888    4               IF (TEMP$->F$DCB.DCBNAME.N=M$LL.TXT)
     1393     9889    4                 THEN
     1394     9890    4                   J=I ;                            /*Save dcb number*/
     1395     9891    4              END;
     1396     9892    3     END;
     1397     9893    2     IF J=0 OR J=M$UC_NUM
     1398     9894    2         THEN
     1399     9895    2           CALL CXC$GETDCB (M$LL,J) ;
     1400     9896    2           IF CPSL_PARAM.ERRCODE ~= %NO#
     1401     9897    2             THEN
     1402     9898    2               GOTO GETDCB_LL_ALT ;
     1403     9899    2     DCB# = J ;
     1404     9900    2     RETURN ;
     1405     9901
     1406     9902    2   GETDCB_LL_ALT:
     1407     9903    2     ALTRETURN ;
     1408     9904
     1409     9905    2   END   GETDCB_LL ;
     1410     9906        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:48   
     1411     9907        /********************************************************************/
     1412     9908        /*I*   NAME: GET_LDEV_HDR
     1413     9909               PURPOSE: Find a dcb with LDEV for this STREAMNAME.
     1414     9910               DESCRIPTION: IBEX will try to open the WORK_DCB for this stream.
     1415     9911                            If the open fails it will try to locate a DCB that is
     1416     9912                         open to this stream by calling CXF$FIND_STREAM.  If IBEX
     1417     9913                         OPENs the WORK_DCB, then IBEX must CLOSE it.
     1418     9914                         Once IBEX gets the header, IBEX will reset NEED_LDEV_HDR.
     1419     9915        */
     1420     9916        /********************************************************************/
     1421     9917    1   GET_LDEV_HDR: PROC ;
     1422     9918
     1423     9919    2   DCL DCB# UBIN WORD ;
     1424     9920    2   DCL DCB$ PTR ;
     1425     9921        %FPT_OPEN(FPTN=OPNMYDCB,STCLASS=AUTO) ;
     1426    10030        %FPT_OPEN(FPTN=CONSTOPN,STCLASS=CONSTANT,ASN=DEVICE,FUN=CREATE);
     1427    10139        %FPT_CLOSE(FPTN=CLSMYDCB,STCLASS=);
     1428    10181        %FPT_CLOSE(FPTN=CONSTCLS,STCLASS=CONSTANT,DISP=SAVE);
     1429    10223    2   DCL OPEN BIT(1) ;
     1430    10224
     1431    10225    2     NEED_LDEV_HDR = %NO# ;
     1432    10226    2     OPEN = %NO# ;
     1433    10227    2     IF FPT_LDEV.V.DEV# = ' '
     1434    10228    2       THEN
     1435    10229    3         DO ;
     1436    10230    3             DCB# = CPSL_PARAM.WORK_DCB# ;
     1437    10231    3             DCB$ = DCBADDR(DCB#) ;
     1438    10232    3             CLSMYDCB = CONSTCLS ;
     1439    10233    3             CLSMYDCB.V_=VECTOR(CLSMYDCB.V) ;
     1440    10234    3             CLSMYDCB.V.DCB# = DCB# ;
     1441    10235    3             IF DCB$->F$DCB.FCD#
     1442    10236    3               THEN
     1443    10237    4                 CALL M$CLOSE(CLSMYDCB) WHENALTRETURN DO ; END ;
     1444    10238    3             OPNMYDCB = CONSTOPN ;
     1445    10239    3             OPNMYDCB.V_ = VECTOR(OPNMYDCB.V) ;
     1446    10240    3             OPNMYDCB.V.DCB# = DCB# ;
     1447    10241    3             OPNMYDCB.V.RES# = FPT_LDEV.V.STREAMNAME# ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:49   
     1448    10242    3             OPNMYDCB.V.ASN# = %DEVICE# ;
     1449    10243    3             CALL M$OPEN(OPNMYDCB) WHENRETURN
     1450    10244    4                 DO ;
     1451    10245    4                   OPEN = %YES#;
     1452    10246    4                 END ; /* Whenreturn Do */
     1453    10247    3                 WHENALTRETURN
     1454    10248    4                 DO;
     1455    10249    4                   CALL CXF$FIND_STREAM(SUBSTR(FPT_LDEV.V.STREAMNAME#,0,2),
     1456    10250    4                                         SUBSTR(FPT_LDEV.V.STREAMNAME#,2,2),
     1457    10251    4                                         DCB#, CPSL_PARAM);
     1458    10252    4                   IF CPSL_PARAM.ERRCODE ~= %NO#
     1459    10253    4                     THEN
     1460    10254    5                       DO;
     1461    10255    5                         CPSL_PARAM.ERRCODE = '0'B;      /* Ignore the error */
     1462    10256    5                         GOTO GET_LDEV_HDR_RET;   /* IBEX will build one upon return */
     1463    10257    5                       END;  /* Then Do */
     1464    10258    4                   END ; /* Whenaltreturn Do */
     1465    10259    3             IF DCB$->F$DCB.CFU$ ~= ADDR(NIL)
     1466    10260    3               THEN
     1467    10261    3                 DCB$ = DCB$->F$DCB.CFU$ ;
     1468    10262    3             IF DCB$->F$DCB.HEADER$ ~= ADDR(NIL)
     1469    10263    3               THEN
     1470    10264    3                 VLP_HDR = DCB$->F$DCB.HEADER$->AM$HDR ;
     1471    10265
     1472    10266    3             IF OPEN
     1473    10267    3               THEN
     1474    10268    4                 CALL M$CLOSE(CLSMYDCB) WHENALTRETURN DO ; END ;
     1475    10269
     1476    10270    3         END ; /* Then Do */
     1477    10271
     1478    10272    2   GET_LDEV_HDR_RET:
     1479    10273    2     RETURN ;
     1480    10274
     1481    10275    2   END   GET_LDEV_HDR ;
     1482    10276    1   END CXB$IBEX;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:50   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$IBEX.

   Procedure CXB$IBEX requires 2580 words for executable code.
   Procedure CXB$IBEX requires 504 words of local(AUTO) storage.

    No errors detected in file CXB$IBEX.:E05TSI    .

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:51   

 Object Unit name= CXB$IBEX                                   File name= CXB$IBEX.:E05TOU
 UTS= JUL 29 '97 12:15:16.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    129    201  CXB$IBEX
    2   Proc  even  none  2580   5024  CXB$IBEX
    3  RoData even  none    37     45  CXB$IBEX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  CXB$IBEX
     2      3                  yes      Std        2  CXB$ADJUST
     2    434                  yes      Std        2  CXB$ERASE
     2    574                  yes      Std        2  CXB$HOLD
     2    715                  yes      Std        2  CXB$LDEV
     2   2276                  yes      Std        2  CXB$PRINT
     2   2434                  yes      Std        2  CXB$RESET
     2   2707                  yes      Std        2  CXB$SET
     2   3125                  yes      Std        2  CXB$UNHOLD
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:52   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 CXB$BLDAM
         yes           Std       4 CXX$LDEV
         yes           Std       5 CXB$MDFYAM
         yes           Std       4 CXB$WINDOW_OPTS
         yes           Std       4 CXB$DELAM
         yes           Std       1 CXC$RELSEG
         yes           Std       4 CXX$UNHOLD
         yes           Std       2 CXC$GETSEG
         yes           Std       1 CXC$RFEXT
 yes     yes           Std       1 CXG$ERRMSG
         yes           Std       1 CXB$CHKFORT
         yes           Std       4 CXX$RESET
         yes           Std       3 CXC$WRITEAM
         yes           Std       3 CXB$RZEROS
         yes           Std       2 CXC$GETDCB
         yes           Std       4 CXF$FIND_STREAM
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CPSL_CFPT_OPEN                        CPSL_CFPT_CLOSE
     CPSL_CFPT_FID                         CPSL_CFPT_LDEV                        CPSL_CFPT_JOBSTATS
     CPSL_CVLP_HDR                         CPSL_CVLP_TAB                         CPSL_CVLP_WINDOW
r    B$JIT$                           r    B$TCB$                           r    B$ROS$
r    CPSL_SEG3$                            CPSL_M$DO_NUM                         CPSL_M$LL
     CPSL_FDCB                             CPSL_LDCB                             CPSL_STARA
     CPSL_STARS                            B_VECTNIL
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:53   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:54   


        1        1        /*M* LDEV and SET/ADJUST/RESET                                               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,DFC */
        8        8        /*P*   NAME:   CXB$IBEX
        9        9               PURPOSE: To perform all the required operations in  the execution
       10       10                       of selected IBEX commands.
       11       11               DESCRIPTION:
       12       12               REFERENCE: Programmers Reference Manual
       13       13        */
       14       14        /**********************************************************************/
       15       15        CXB$IBEX:
       16       16          PROC(GETCMD, CPSL_PARAM) ;

     16  2 000000   000000 700200 xent  CXB$IBEX     TSX0  ! X66_AUTO_2
         2 000001   000770 000002                    ZERO    504,2
         2 000002   000005 710000 2                  TRA     s:8452

       17       17                   %PLIST;
       18       18                   %INCLUDE CP_6;
       19       99        /*         %INCLUDE AZ_MACRO_C; */
       20      100        /*         %INCLUDE AZ_SUBS_C;  */
       21      101                   %INCLUDE B$JIT;
       22      391        /*         %INCLUDE B_STRINGS_C; */
       23      392                   %INCLUDE B_MACROS_C;
       24      503                   %INCLUDE CX_MACROS_M;
       25      554                   %INCLUDE XU_MACRO_C;
       26     3660                   %INCLUDE CX_ISUBS_C;
       27     4012                   %INCLUDE CX_PERR_C;
       28     4083                   %INCLUDE CP_6_SUBS;
       29     4623                   %INCLUDE B_ERRORS_C;
       30     5750        /*         %INCLUDE NK_VFC_C; */
       31     5751        /*         %INCLUDE XSJ_MAC_C; */
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:55   
       32     5752        /*         %INCLUDE XSJ_SUBS_C; */
       33     5753                   %INCLUDE B$ROSEG;
       34     5816        /*         %INCLUDE OC_SUBS_C; */
       35     5817                   %INCLUDE CX_DATA_R ;
       36     6751                   %INCLUDE CXG_ENTRY ;
       37     6763             /***** Parameters *****/
       38     6764        %XUG_GETCMD (NAME=GETCMD, STCLASS=PARAM) ;
       39     7102        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=PARAM) ;
       40     7120             /***** Ptr variable declarations *****/
       41     7121    1   DCL P$ PTR;
       42     7122    1   DCL BLK$ PTR;
       43     7123    1   DCL TEMP$ PTR;
       44     7124    1   DCL DCB$ PTR;
       45     7125    1   DCL FID$ PTR;
       46     7126    1   DCL DEST$ PTR;
       47     7127             /***** External procedure (entry) declarations *****/
       48     7128    1   DCL CXC$WRITEAM ENTRY(3) ;
       49     7129    1   DCL CXB$BLDAM ENTRY(4) ;
       50     7130    1   DCL CXB$MDFYAM ENTRY(5) ;
       51     7131    1   DCL CXF$FIND_STREAM ENTRY(4) ;
       52     7132    1   DCL CXB$WINDOW_OPTS ENTRY(4) ;
       53     7133    1   DCL CXC$GETDCB ENTRY(2) ;
       54     7134    1   DCL CXC$GETSEG ENTRY(2) ;               /*Get data segment*/
       55     7135    1   DCL CXB$DELAM ENTRY(4) ;
       56     7136    1   DCL CXC$RELSEG ENTRY(1);
       57     7137    1   DCL CXC$RFEXT ENTRY(1);
       58     7138    1   DCL CXB$CHKFORT ENTRY(1);
       59     7139    1   DCL CXB$BLDIMAGE ENTRY(5) ;
       60     7140    1   DCL CXB$RZEROS ENTRY(3);
       61     7141    1   DCL CXX$LDEV ENTRY(4) ;
       62     7142    1   DCL CXX$RESET ENTRY(4) ;
       63     7143    1   DCL CXX$UNHOLD ENTRY(4) ;
       64     7144             /***** Based STRUCTURES *****/
       65     7145        %TEXTC (NAME=TEXTC);
       66     7150        %B$TCB (STCLASS="BASED(B$TCB$)");
       67     7153        %B$ALT;
       68     7161             /***** Character string declarations *****/
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:56   
       69     7162    1   DCL 1 M$DO_DCB CONSTANT DALIGNED,
       70     7163    1          2 CNT UBIN(9) INIT(4) UNAL,
       71     7164    1          2 TXT CHAR(4) INIT('M$DO');
       72     7165    1   DCL 1 M$LL DALIGNED CONSTANT,
       73     7166    1         2 CNT UBIN(9) INIT(4) UNAL,
       74     7167    1         2 TXT CHAR(4) INIT('M$LL');
       75     7168    1   DCL    M$UC_NUM    UBIN WORD  INIT(%M$UC#) CONSTANT ;
       76     7169    1   DCL FID_ASN UBIN(9);
       77     7170    1   DCL FID_RES CHAR(4);
       78     7171    1   DCL 1  SYMNAME,
       79     7172    1          2  COUNT UBIN BYTE UNAL,
       80     7173    1          2  TEXT CHAR(4);
       81     7174    1   DCL B$$PAGE (0:1023) UBIN WORD BASED ALIGNED ;
       82     7175             /***** Bit variables *****/
       83     7176    1   DCL GOT_LOGON_OPTION BIT(1) ;
       84     7177    1   DCL GIVE_ADJSTCLS_MSG BIT(1) ;
       85     7178    1   DCL NEED_LDEV_HDR BIT(1) ;
       86     7179    1   DCL DONE BIT(1) ;
       87     7180             /***** Word declarations *****/
       88     7181    1   DCL I SBIN;
       89     7182    1   DCL J SBIN;
       90     7183    1   DCL K SBIN;
       91     7184    1   DCL TEMP UBIN WORD;
       92     7185    1   DCL CPOS UBIN WORD AUTO;
       93     7186             /***** Constant FPTS *****/
       94     7187             /***** Constant VLPS *****/
       95     7188        %VLP_CRITERIA ( FPTN=CVLP_CRITERIA, STCLASS=CONSTANT) ;
       96     7216             /***** Based FPTS *****/
       97     7217        %FPT_OPEN (FPTN=AMR$REC$,STCLASS="BASED(CPSL_SEG3$)",PFMT="PTR");
       98     7326        %F$DCB (DCBN=F$DCB);
       99     7383             /***** Auto FPTS *****/
      100     7384        %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
      101     7493        %FPT_CLOSE (FPTN=FPT_CLOSE,STCLASS=AUTO);
      102     7535        %FPT_LDEV (FPTN=FPT_LDEV,STCLASS=AUTO);
      103     7560        %FPT_FID (FPTN=FPT_FID,STCLASS=AUTO);
      104     7583        %FPT_JOBSTATS (FPTN=FPT_JOBSTATS,STCLASS=AUTO);
      105     7603             /***** Based VLPS *****/
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:57   
      106     7604        %VLP_NAME (FPTN=AM$NAME,LEN=31,STCLASS=BASED);
      107     7631        %VLP_ACCT (FPTN=AM$ACCT,STCLASS=BASED);
      108     7644        %VLP_PASS (FPTN=AM$PASS,STCLASS=BASED);
      109     7657        %VLP_WSN (FPTN=AM$WSN,STCLASS=BASED);
      110     7670        %VLP_SETSTA (FPTN=AM$SETSTA,STCLASS=BASED);
      111     7698        %VLP_SN (FPTN=AM$SN,STCLASS=BASED,N=50);
      112     7711        %VLP_TAB (FPTN=AM$TAB,STCLASS=BASED);
      113     7725        %VLP_HDR (FPTN=AM$HDR,STCLASS=BASED,LEN="AM$HDR.TITL.L#");
      114     7741        %VLP_FORM (FPTN=AM$FORM,STCLASS=BASED);
      115     7754        %VLP_TAB (FPTN=VLP$TABS,STCLASS=BASED);
      116     7768        %VLR_JOBSTATS_OSRCH(  FPTN=VLR$OSRCH,STCLASS=BASED) ;
      117     7782        %VLA_JOBSTATS_OSRCH(  FPTN=VLA$OSRCH, STCLASS=BASED) ;
      118     7799             /***** Auto VLPS *****/
      119     7800        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      120     7813        %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      121     7832        %VLP_HDR (FPTN=VLP_HDR,LEN=511,STCLASS=AUTO);
      122     7848        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
      123     7875        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      124     7888        %VLP_SN (FPTN=FID_SN,STCLASS=AUTO);
      125     7901        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      126     7914        %VLP_TAB (FPTN=VLP_TABS,STCLASS=AUTO);
      127     7928        %VLP_ERRCODE (FPTN=ERR_CODE, STCLASS=AUTO) ;
      128     7973        %VLP_JOBNAME (FPTN=VLP_JOBNAME,STCLASS=AUTO);
      129     7987        %VLP_WINDOW (FPTN=VLP_WINDOW, STCLASS=AUTO) ;
      130     8031        %VLP_CRITERIA ( FPTN=JOBSTATS_CRITERIA, STCLASS=AUTO) ;
      131     8059             /***** Error codes *****/
      132     8060        %VLP_ERRCODE (FPTN=E_ADJSTCLS,MID=B,ERR#=E$ADJSTCLS,FCG=CX,STCLASS=CONSTANT);
      133     8105        /*E*    ERROR: CXB-E$ADJSTCLS-0
      134     8106                MESSAGE: Dcb closed with DISP=SAVE to permit assignment modifications
      135     8107                DESCRIPTION: The specified dcb was closed with DISP=SAVE in order
      136     8108                             that dcb assignment modifications would take effect
      137     8109                             upon dcb reopening.
      138     8110        */
      139     8111        %VLP_ERRCODE (FPTN=E_ILLASGN,MID=B,ERR#=E$ILLASGN,FCG=CX,STCLASS=CONSTANT);
      140     8156        %VLP_ERRCODE (FPTN=E_NOASGN,MID=B,ERR#=E$NOASGN,FCG=CX,STCLASS=CONSTANT);
      141     8201        %VLP_ERRCODE (FPTN=E_BADASGN,MID=B,ERR#=E$BADASGN,FCG=CX,STCLASS=CONSTANT);
      142     8246        %VLP_ERRCODE (FPTN=E_JOBNTFND,MID=B,ERR#=E$JOBNTFND,FCG=CX,STCLASS=CONSTANT);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:58   
      143     8291        %VLP_ERRCODE (FPTN=E_NOSYMFILE,MID=B,ERR#=E$NOSYMFILE,FCG=CX,STCLASS=CONSTANT);
      144     8336                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:59   
      145     8337        /*         Parsing macros                        */
      146     8338        %PLIST;
      147     8339        %PARSE$OUT(NAME=P$B,STCLASS=BASED);
      148     8384        %PARSE$SYM(NAME=P$S,STCLASS=BASED);
      149     8422                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:60   
      150     8423        /**********************************************************************/
      151     8424        /*F*   NAME:   CXB$ADJUST
      152     8425               PURPOSE: T0 process the ADJUST command
      153     8426               DESCRIPTION: The ADJUST command performs the requested modification
      154     8427                       on a users dcb(dynamic SET when not at job step).
      155     8428               REFERENCE: Programmers Reference Manual
      156     8429        */
      157     8430        /*D*   NAME:   CXB$ADJUST
      158     8431               CALL:   CALL CXB$ADJUST (GETCMD, CPSL_PARAM)
      159     8432               INTERFACE: CXB$BLDAM
      160     8433               INPUT:  GETCMD - The CXG$GETCMD fpt parameter.
      161     8434                       CPSL_PARAM - Command Processor Shared Library parameter.
      162     8435               OUTPUT: modified user dcb
      163     8436               DESCRIPTION: The ADJUST command format and options are the same as
      164     8437                       for the SET command. The command is scanned for the items
      165     8438                       to be modified. An assign merge type record is created in
      166     8439                       data segment #3 containing the information specified. This
      167     8440                       information in turn is transferred to the open FPT and
      168     8441                       a reassign type of INITZ is performed to merge the FPT
      169     8442                       information with the user's dcb. If the specified dcb is open,
      170     8443                       a close with DISP=SAVE is performed. User is expected to
      171     8444                       reopen the dcb implicitly with a read or otherwise.
      172     8445        */
      173     8446        /**********************************************************************/
      174     8447    1   CXB$ADJUST:
      175     8448    1     ENTRY(GETCMD, CPSL_PARAM) ;

   8448  2 000003   000000 700200 xent  CXB$ADJUST   TSX0  ! X66_AUTO_2
         2 000004   000770 000002                    ZERO    504,2

      176     8449        /*
      177     8450          **** Perform various dcb checks
      178     8451        */
      179     8452    1     GIVE_ADJSTCLS_MSG = %NO# ;

   8452  2 000005   200020 450100                    STZ     GIVE_ADJSTCLS_MSG,,AUTO

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:61   
      180     8453    1     BLK$ = GETCMD.OUT$;

   8453  2 000006   200003 470500                    LDP0    @GETCMD,,AUTO
         2 000007   000001 236100                    LDQ     1,,PR0
         2 000010   200006 756100                    STQ     BLK$,,AUTO

      181     8454    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   8454  2 000011   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 000012   100001 234100                    SZN     1,,PR1
         2 000013   000030 605000 2                  TPL     s:8460

      182     8455    1         THEN
      183     8456    2             DO ;

      184     8457    2               CALL CXB$BLDAM (BLK$,,GETCMD,CPSL_PARAM) ;

   8457  2 000014   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000015   200003 235100                    LDA     @GETCMD,,AUTO
         2 000016   200754 757100                    STAQ    OPEN+4,,AUTO
         2 000017   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000020   200753 756100                    STQ     OPEN+3,,AUTO
         2 000021   200006 633500                    EPPR3   BLK$,,AUTO
         2 000022   200752 453500                    STP3    OPEN+2,,AUTO
         2 000023   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 000024   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000025   000000 701000 xent               TSX1    CXB$BLDAM
         2 000026   000000 011000                    NOP     0

      185     8458    2               GOTO ADJUSTRET ;

   8458  2 000027   000364 710000 2                  TRA     ADJUSTRET

      186     8459    2             END ;
      187     8460    1     DCB$=BLK$->P$B.SUBLK$(0)->P$B.SUBLK$(0);

   8460  2 000030   200006 473500                    LDP3    BLK$,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:62   
         2 000031   300003 474500                    LDP4    3,,PR3
         2 000032   400003 236100                    LDQ     3,,PR4
         2 000033   200010 756100                    STQ     DCB$,,AUTO

      188     8461    1     CPOS = BLK$ -> P$B.SUBLK$(0) -> P$B.CPOS;

   8461  2 000034   300003 474500                    LDP4    3,,PR3
         2 000035   400002 235100                    LDA     2,,PR4
         2 000036   200027 755100                    STA     CPOS,,AUTO

      189     8462    1     IF (BLK$->P$B.SUBLK$(1)->P$B.CODE=FIDOPT)

   8462  2 000037   300004 474500                    LDP4    4,,PR3
         2 000040   400000 720100                    LXL0    0,,PR4
         2 000041   000312 100003                    CMPX0   202,DU
         2 000042   000055 601000 2                  TNZ     s:8468

      190     8463    1        THEN
      191     8464    2           DO;

      192     8465    2              FID$=BLK$->P$B.SUBLK$(1)->P$B.SUBLK$(0);

   8465  2 000043   400003 236100                    LDQ     3,,PR4
         2 000044   200011 756100                    STQ     FID$,,AUTO

      193     8466    2              CALL CHK_ASGN (CPOS,DCB$,FID$) ALTRET(ADJUSTRET);

   8466  2 000045   200011 634500                    EPPR4   FID$,,AUTO
         2 000046   200617 454500                    STP4    DCB$+1,,AUTO
         2 000047   200010 635500                    EPPR5   DCB$,,AUTO
         2 000050   200616 455500                    STP5    DCB#+1,,AUTO
         2 000051   200027 636500                    EPPR6   CPOS,,AUTO
         2 000052   200615 456500                    STP6    JOBSTATS_CRITERIA+21,,AUTO
         2 000053   004512 701000 2                  TSX1    CHK_ASGN
         2 000054   000364 702000 2                  TSX2    ADJUSTRET

      194     8467    2           END;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:63   

      195     8468    1     CALL CXB$CHKFORT(DCB$);                  /*Cnvrt if fort. Type*/

   8468  2 000055   200010 630500                    EPPR0   DCB$,,AUTO
         2 000056   200752 450500                    STP0    OPEN+2,,AUTO
         2 000057   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000061   000000 701000 xent               TSX1    CXB$CHKFORT
         2 000062   000000 011000                    NOP     0

      196     8469        /*
      197     8470          **** check for dcb existence in user's program. If already open, close
      198     8471          **** with DISP=SAVE.
      199     8472        */
      200     8473    1     J=0;

   8473  2 000063   200024 450100                    STZ     J,,AUTO

      201     8474    2     DO I=1 TO B$ROS$->B$ROSEG.NUMDCBS;

   8474  2 000064   000001 235007                    LDA     1,DL
         2 000065   200023 755100                    STA     I,,AUTO
         2 000066   000151 710000 2                  TRA     s:8500+1

      202     8475    2        IF DCBADDR(I) ~= ADDR(NIL)

   8475  2 000067   000000 470400 3                  LDP0    0
         2 000070   000000 471500                    LDP1    0,,PR0
         2 000071   200023 720100                    LXL0    I,,AUTO
         2 000072   100000 236110                    LDQ     0,X0,PR1
         2 000073   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000074   000150 600000 2                  TZE     s:8500

      203     8476    2           THEN
      204     8477    3              DO;

      205     8478    3                 TEMP$ = DCBADDR(I);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:64   

   8478  2 000075   200007 756100                    STQ     TEMP$,,AUTO

      206     8479    3                 IF (TEMP$->F$DCB.DCBNAME.N=DCB$->TEXTC.TEXT)

   8479  2 000076   200007 473500                    LDP3    TEMP$,,AUTO
         2 000077   300140 236100                    LDQ     96,,PR3
         2 000100   000033 772000                    QRL     27
         2 000101   000037 376007                    ANQ     31,DL
         2 000102   200010 474500                    LDP4    DCB$,,AUTO
         2 000103   000100 101500                    MRL     fill='000'O
         2 000104   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000105   200752 000002                    ADSC9   OPEN+2,,AUTO             cn=0,n=2
         2 000106   200752 221100                    LDX1    OPEN+2,,AUTO
         2 000107   000000 622006                    EAX2    0,QL
         2 000110   040140 106540                    CMPC    fill='040'O
         2 000111   300140 200012                    ADSC9   96,,PR3                  cn=1,n=*X2
         2 000112   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         2 000113   000150 601000 2                  TNZ     s:8500

      207     8480    3                    THEN
      208     8481    4                       DO;

      209     8482    4                          IF (TEMP$->F$DCB.FCD#=%YES#)

   8482  2 000114   300031 236100                    LDQ     25,,PR3
         2 000115   020000 316007                    CANQ    8192,DL
         2 000116   000146 600000 2                  TZE     s:8497

      210     8483    4                             THEN
      211     8484    5                               DO;

      212     8485    5                                  FPT_CLOSE = CPSL_CFPT_CLOSE;

   8485  2 000117   000100 100400                    MLR     fill='000'O
         2 000120   000000 000170 xsym               ADSC9   CPSL_CFPT_CLOSE          cn=0,n=120
         2 000121   200122 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:65   

      213     8486    5                                  FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

   8486  2 000122   000001 235000 3                  LDA     1
         2 000123   200752 452500                    STP2    OPEN+2,,AUTO
         2 000124   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000125   000154 036003                    ADLQ    108,DU
         2 000126   200122 757100                    STAQ    FPT_CLOSE,,AUTO

      214     8487    5                                  FPT_CLOSE.V.DISP# = %SAVE#;

   8487  2 000127   000002 236007                    LDQ     2,DL
         2 000130   200154 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      215     8488    5                                  FPT_CLOSE.V.DCB# = I;

   8488  2 000131   200154 740100                    STX0    FPT_CLOSE+26,,AUTO

      216     8489    5                                  CALL M$CLOSE(FPT_CLOSE) ALTRET(ADJUST95);

   8489  2 000132   200122 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000133   450001 713400                    CLIMB   alt,close
         2 000134   406000 401760                    pmme    nvectors=13
         2 000135   000414 702000 2                  TSX2    ADJUST95

      217     8490    5                                  IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG

   8490  2 000136   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000137   000001 236100                    LDQ     1,,PR0
         2 000140   200000 316003                    CANQ    65536,DU
         2 000141   000146 601000 2                  TNZ     s:8497

      218     8491    5                                   THEN
      219     8492    6                                     DO ;

      220     8493    6                                       GIVE_ADJSTCLS_MSG = %YES# ;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:66   
   8493  2 000142   400000 236003                    LDQ     -131072,DU
         2 000143   200020 756100                    STQ     GIVE_ADJSTCLS_MSG,,AUTO

      221     8494    6                                       CPSL_PARAM.FLAGS.REPORTED_TO_USER = %YES# ;

   8494  2 000144   100000 236003                    LDQ     32768,DU
         2 000145   000001 256100                    ORSQ    1,,PR0

      222     8495    6                                     END ; /* Then Do */

      223     8496    5                               END;

      224     8497    4                          J=I;                      /*Save dcb number*/

   8497  2 000146   200023 235100                    LDA     I,,AUTO
         2 000147   200024 755100                    STA     J,,AUTO

      225     8498    4                       END;

      226     8499    3              END;

      227     8500    2     END;

   8500  2 000150   200023 054100                    AOS     I,,AUTO
         2 000151   000000 470400 xsym               LDP0    B$ROS$
         2 000152   000002 236100                    LDQ     2,,PR0
         2 000153   000022 772000                    QRL     18
         2 000154   200023 116100                    CMPQ    I,,AUTO
         2 000155   000067 605000 2                  TPL     s:8475

      228     8501        /*
      229     8502          **** Check for nonexistant dcb
      230     8503        */
      231     8504    1     IF (J=0)

   8504  2 000156   200024 235100                    LDA     J,,AUTO
         2 000157   000405 600000 2                  TZE     ADJUST78
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:67   

      232     8505    1        THEN
      233     8506    1           GOTO ADJUST78;               /*Error no dcb*/
      234     8507    1     CPSL_PARAM.ERR_DCB# = J ;       /* Pass DCB number for CXB$PROCOPT wrt ASN */

   8507  2 000160   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 000161   100004 755100                    STA     4,,PR1

      235     8508        /*
      236     8509           **** Determine if fid specified
      237     8510        */
      238     8511    1     IF (BLK$->P$B.SUBLK$(1)->P$B.CODE=FIDOPT)

   8511  2 000162   200006 473500                    LDP3    BLK$,,AUTO
         2 000163   300004 474500                    LDP4    4,,PR3
         2 000164   400000 720100                    LXL0    0,,PR4
         2 000165   000312 100003                    CMPX0   202,DU
         2 000166   000203 601000 2                  TNZ     s:8515

      239     8512    1        THEN
      240     8513    1           CALL CXB$BLDAM(BLK$,FID$,GETCMD,CPSL_PARAM) ;

   8513  2 000167   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000170   200003 235100                    LDA     @GETCMD,,AUTO
         2 000171   200754 757100                    STAQ    OPEN+4,,AUTO
         2 000172   200011 634500                    EPPR4   FID$,,AUTO
         2 000173   200753 454500                    STP4    OPEN+3,,AUTO
         2 000174   200006 635500                    EPPR5   BLK$,,AUTO
         2 000175   200752 455500                    STP5    OPEN+2,,AUTO
         2 000176   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 000177   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000200   000000 701000 xent               TSX1    CXB$BLDAM
         2 000201   000000 011000                    NOP     0
         2 000202   000216 710000 2                  TRA     s:8516

      241     8514    1        ELSE
      242     8515    1           CALL CXB$BLDAM(BLK$,,GETCMD,CPSL_PARAM) ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:68   

   8515  2 000203   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000204   200003 235100                    LDA     @GETCMD,,AUTO
         2 000205   200754 757100                    STAQ    OPEN+4,,AUTO
         2 000206   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000207   200753 756100                    STQ     OPEN+3,,AUTO
         2 000210   200006 634500                    EPPR4   BLK$,,AUTO
         2 000211   200752 454500                    STP4    OPEN+2,,AUTO
         2 000212   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 000213   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000214   000000 701000 xent               TSX1    CXB$BLDAM
         2 000215   000000 011000                    NOP     0

      243     8516    1     IF CPSL_PARAM.ERRCODE ~= %NO#

   8516  2 000216   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000217   000002 235100                    LDA     2,,PR0
         2 000220   000223 600000 2                  TZE     s:8525

      244     8517    1         THEN
      245     8518    2             DO ;

      246     8519    2               GIVE_ADJSTCLS_MSG = %NO# ;

   8519  2 000221   200020 450100                    STZ     GIVE_ADJSTCLS_MSG,,AUTO

      247     8520    2               GOTO ADJUSTRET ;

   8520  2 000222   000364 710000 2                  TRA     ADJUSTRET

      248     8521    2             END ; /* Then Do */
      249     8522        /*
      250     8523          **** Build the open fpt using the assign merge information as input
      251     8524        */
      252     8525    1     FPT_OPEN=CPSL_CFPT_OPEN;

   8525  2 000223   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:69   
         2 000224   000000 000350 xsym               ADSC9   CPSL_CFPT_OPEN           cn=0,n=232
         2 000225   200030 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      253     8526    1     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);

   8526  2 000226   000002 235000 3                  LDA     2
         2 000227   200752 452500                    STP2    OPEN+2,,AUTO
         2 000230   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000231   000074 036003                    ADLQ    60,DU
         2 000232   200030 757100                    STAQ    FPT_OPEN,,AUTO

      254     8527    1     FPT_OPEN.V=AMR$REC$.V; /*Move v area*/

   8527  2 000233   000000 471400 xsym               LDP1    CPSL_SEG3$
         2 000234   000100 100500                    MLR     fill='000'O
         2 000235   100022 000124                    ADSC9   18,,PR1                  cn=0,n=84
         2 000236   200074 000124                    ADSC9   FPT_OPEN+36,,AUTO        cn=0,n=84

      255     8528    1     IF (AMR$REC$.SN_~=ADDR(NIL))

   8528  2 000237   100001 236100                    LDQ     1,,PR1
         2 000240   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000241   000247 600000 2                  TZE     s:8531

      256     8529    1        THEN
      257     8530    1           FPT_OPEN.SN_=VECTOR(AMR$REC$.SN_->AM$SN);

   8530  2 000242   100001 473500                    LDP3    1,,PR1
         2 000243   000003 235000 3                  LDA     3
         2 000244   200752 453500                    STP3    OPEN+2,,AUTO
         2 000245   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000246   200032 757100                    STAQ    FPT_OPEN+2,,AUTO

      258     8531    1     IF (AMR$REC$.NAME_~=ADDR(NIL))

   8531  2 000247   100003 236100                    LDQ     3,,PR1
         2 000250   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:70   
         2 000251   000257 600000 2                  TZE     s:8534

      259     8532    1        THEN
      260     8533    1           FPT_OPEN.NAME_=VECTOR(AMR$REC$.NAME_->AM$NAME);

   8533  2 000252   100003 473500                    LDP3    3,,PR1
         2 000253   000004 235000 3                  LDA     4
         2 000254   200752 453500                    STP3    OPEN+2,,AUTO
         2 000255   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000256   200036 757100                    STAQ    FPT_OPEN+6,,AUTO

      261     8534    1     IF (AMR$REC$.PASS_~=ADDR(NIL))

   8534  2 000257   100004 236100                    LDQ     4,,PR1
         2 000260   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000261   000267 600000 2                  TZE     s:8546

      262     8535    1        THEN
      263     8536    1           FPT_OPEN.PASS_=VECTOR(AMR$REC$.PASS_->AM$PASS);

   8536  2 000262   100004 473500                    LDP3    4,,PR1
         2 000263   000005 235000 3                  LDA     5
         2 000264   200752 453500                    STP3    OPEN+2,,AUTO
         2 000265   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000266   200040 757100                    STAQ    FPT_OPEN+8,,AUTO

      264     8537        /*
      265     8538                   If (AMR$REC$.ACCESS_~=ADDR(NIL))
      266     8539                      THEN
      267     8540                      FPT_OPEN.ACCESS_=VECTOR(AMR$REC$.ACCESS_->AM$ACCESS);
      268     8541                   IF (AMR$REC$.ACSVEH_~=ADDR(NIL))
      269     8542                      THEN
      270     8543                      FPT_OPEN.ACSVEH_=VECTOR(AMR$REC$.ACSVEH_->AM$ACSVEH);
      271     8544        **** ULBL_,UATTR_,INSTATTR_,PROCATTR_,IFPARSM_,FPARAM_...PURPOSELY omitted.
      272     8545        */
      273     8546    1     IF (AMR$REC$.ACCT_~=ADDR(NIL))

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:71   
   8546  2 000267   100012 236100                    LDQ     10,,PR1
         2 000270   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000271   000277 600000 2                  TZE     s:8549

      274     8547    1        THEN
      275     8548    1           FPT_OPEN.ACCT_=VECTOR(AMR$REC$.ACCT_->AM$ACCT);

   8548  2 000272   100012 473500                    LDP3    10,,PR1
         2 000273   000005 235000 3                  LDA     5
         2 000274   200752 453500                    STP3    OPEN+2,,AUTO
         2 000275   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000276   200054 757100                    STAQ    FPT_OPEN+20,,AUTO

      276     8549    1     IF (AMR$REC$.WSN_~=ADDR(NIL))

   8549  2 000277   100015 236100                    LDQ     13,,PR1
         2 000300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000301   000307 600000 2                  TZE     s:8552

      277     8550    1        THEN
      278     8551    1           FPT_OPEN.WSN_=VECTOR(AMR$REC$.WSN_->AM$WSN);

   8551  2 000302   100015 473500                    LDP3    13,,PR1
         2 000303   000005 235000 3                  LDA     5
         2 000304   200752 453500                    STP3    OPEN+2,,AUTO
         2 000305   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000306   200062 757100                    STAQ    FPT_OPEN+26,,AUTO

      279     8552    1     IF (AMR$REC$.TAB_~=ADDR(NIL))

   8552  2 000307   100016 236100                    LDQ     14,,PR1
         2 000310   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000311   000317 600000 2                  TZE     s:8555

      280     8553    1        THEN
      281     8554    1           FPT_OPEN.TAB_=VECTOR(AMR$REC$.TAB_->AM$TAB);

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:72   
   8554  2 000312   100016 473500                    LDP3    14,,PR1
         2 000313   000004 235000 3                  LDA     4
         2 000314   200752 453500                    STP3    OPEN+2,,AUTO
         2 000315   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000316   200064 757100                    STAQ    FPT_OPEN+28,,AUTO

      282     8555    1     IF (AMR$REC$.HDR_~=ADDR(NIL))

   8555  2 000317   100017 236100                    LDQ     15,,PR1
         2 000320   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000321   000334 600000 2                  TZE     s:8558

      283     8556    1        THEN
      284     8557    1           FPT_OPEN.HDR_=VECTOR(AMR$REC$.HDR_->AM$HDR);

   8557  2 000322   100017 473500                    LDP3    15,,PR1
         2 000323   300001 236100                    LDQ     1,,PR3
         2 000324   000033 772000                    QRL     27
         2 000325   000005 620006                    EAX0    5,QL
         2 000326   000000 635010                    EAA     0,X0
         2 000327   000002 771000                    ARL     2
         2 000330   000140 135007                    SBLA    96,DL
         2 000331   200752 453500                    STP3    OPEN+2,,AUTO
         2 000332   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000333   200066 757100                    STAQ    FPT_OPEN+30,,AUTO

      285     8558    1     IF (AMR$REC$.FORM_~=ADDR(NIL))

   8558  2 000334   100020 236100                    LDQ     16,,PR1
         2 000335   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000336   000344 600000 2                  TZE     s:8561

      286     8559    1        THEN
      287     8560    1           FPT_OPEN.FORM_=VECTOR(AMR$REC$.FORM_->AM$FORM);

   8560  2 000337   100020 473500                    LDP3    16,,PR1
         2 000340   000006 235000 3                  LDA     6
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:73   
         2 000341   200752 453500                    STP3    OPEN+2,,AUTO
         2 000342   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000343   200070 757100                    STAQ    FPT_OPEN+32,,AUTO

      288     8561    1     IF (AMR$REC$.SETSTA_~=ADDR(NIL))

   8561  2 000344   100002 236100                    LDQ     2,,PR1
         2 000345   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000346   000354 600000 2                  TZE     s:8564

      289     8562    1        THEN
      290     8563    1           FPT_OPEN.SETSTA_=VECTOR(AMR$REC$.SETSTA_->AM$SETSTA);

   8563  2 000347   100002 473500                    LDP3    2,,PR1
         2 000350   000007 235000 3                  LDA     7
         2 000351   200752 453500                    STP3    OPEN+2,,AUTO
         2 000352   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000353   200034 757100                    STAQ    FPT_OPEN+4,,AUTO

      291     8564    1     FPT_OPEN.V.SETDCB#=%YES#;

   8564  2 000354   100000 236007                    LDQ     32768,DL
         2 000355   200074 256100                    ORSQ    FPT_OPEN+36,,AUTO

      292     8565    1     FPT_OPEN.V.DCB#=J;

   8565  2 000356   200024 720100                    LXL0    J,,AUTO
         2 000357   200074 740100                    STX0    FPT_OPEN+36,,AUTO

      293     8566        /*
      294     8567          **** Merge the open dcb into the specified dcb
      295     8568        */
      296     8569    1     CALL M$OPEN(FPT_OPEN) ALTRET(ADJUST95);

   8569  2 000360   200030 630500                    EPPR0   FPT_OPEN,,AUTO
         2 000361   450000 713400                    CLIMB   alt,open
         2 000362   410400 401760                    pmme    nvectors=18
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:74   
         2 000363   000414 702000 2                  TSX2    ADJUST95

      297     8570    1   ADJUSTRET:
      298     8571    1     IF GIVE_ADJSTCLS_MSG

   8571  2 000364   200020 234100       ADJUSTRET    SZN     GIVE_ADJSTCLS_MSG,,AUTO
         2 000365   000375 605000 2                  TPL     s:8577

      299     8572    1         THEN
      300     8573    2           DO ;

      301     8574    2             GETCMD.ERR_CODE = E_ADJSTCLS ;

   8574  2 000366   000032 236000 1                  LDQ     E_ADJSTCLS
         2 000367   200003 470500                    LDP0    @GETCMD,,AUTO
         2 000370   000010 756100                    STQ     8,,PR0

      302     8575    2             CALL CXG$ERRMSG(GETCMD) ALTRET(ADJUST110) ;

   8575  2 000371   200003 630500                    EPPR0   @GETCMD,,AUTO
         2 000372   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000373   000000 701000 xent               TSX1    CXG$ERRMSG
         2 000374   000424 702000 2                  TSX2    ADJUST110

      303     8576    2           END ; /* Then Do */

      304     8577    1     IF NOT CPSL_PARAM.FLAGS.VERIFY_ONLY

   8577  2 000375   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000376   000001 234100                    SZN     1,,PR0
         2 000377   000404 604000 2                  TMI     s:8580

      305     8578    1         THEN
      306     8579    1             CALL CXC$RELSEG (CPSL_SEG3$);

   8579  2 000400   000010 630400 3                  EPPR0   8
         2 000401   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:75   
         2 000402   000000 701000 xent               TSX1    CXC$RELSEG
         2 000403   000000 011000                    NOP     0

      307     8580    1     RETURN;

   8580  2 000404   000000 702200 xent               TSX2  ! X66_ARET

   8577  2 000405                       ADJUST78     null
      308     8581
      309     8582    1   ADJUST78:;
      310     8583        /*E*       ERROR: CXB-E$ILLASGN-E
      311     8584                   MESSAGE: Dcb isn't assigned - can't update
      312     8585                   DESCRIPTION: The user issued an update SET or RESET and the
      313     8586                                previous assignment didn't exist.
      314     8587        */
      315     8588    1     CPSL_PARAM.ERRCODE = E_ILLASGN ;

   8588  2 000405   000033 236000 1                  LDQ     E_ILLASGN
         2 000406   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 000407   100002 756100                    STQ     2,,PR1

      316     8589    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   8589  2 000410   000011 236000 3                  LDQ     9
         2 000411   100001 356100                    ANSQ    1,,PR1

      317     8590    1     GIVE_ADJSTCLS_MSG = %NO# ;

   8590  2 000412   200020 450100                    STZ     GIVE_ADJSTCLS_MSG,,AUTO

      318     8591    1     GOTO ADJUSTRET ;

   8591  2 000413   000364 710000 2                  TRA     ADJUSTRET

   8590  2 000414                       ADJUST95     null
      319     8592        /*
      320     8593          **** Put error code in CPSL_PARAM.ERRCODE so error msge. Is output by
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:76   
      321     8594               errtrn in Command Processor.
      322     8595        */
      323     8596    1   ADJUST95:;
      324     8597    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;

   8597  2 000414   000000 470400 xsym               LDP0    B$TCB$
         2 000415   000000 471500                    LDP1    0,,PR0
         2 000416   100102 236100                    LDQ     66,,PR1
         2 000417   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 000420   300002 756100                    STQ     2,,PR3

      325     8598    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   8598  2 000421   000011 236000 3                  LDQ     9
         2 000422   300001 356100                    ANSQ    1,,PR3

      326     8599    1     GOTO ADJUSTRET ;

   8599  2 000423   000364 710000 2                  TRA     ADJUSTRET

      327     8600    1   ADJUST110:
      328     8601    1     CPSL_PARAM.ERRCODE = GETCMD.ERR# ;

   8601  2 000424   200003 470500       ADJUST110    LDP0    @GETCMD,,AUTO
         2 000425   000001 236100                    LDQ     1,,PR0
         2 000426   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 000427   100002 756100                    STQ     2,,PR1

      329     8602    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   8602  2 000430   000011 236000 3                  LDQ     9
         2 000431   100001 356100                    ANSQ    1,,PR1

      330     8603    1     GIVE_ADJSTCLS_MSG = %NO# ;

   8603  2 000432   200020 450100                    STZ     GIVE_ADJSTCLS_MSG,,AUTO

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:77   
      331     8604    1     GOTO ADJUSTRET ;

   8604  2 000433   000364 710000 2                  TRA     ADJUSTRET

      332     8605        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:78   
      333     8606        /*********************************************************************/
      334     8607        /*F*    NAME:    CXB$ERASE
      335     8608                PURPOSE:    To process the ERASE command to delete previously created
      336     8609                         LDEV streams before they are printed.
      337     8610               REFERENCE: Programmers Reference Manual
      338     8611        */
      339     8612        /*D*   NAME:   CXB$ERASE
      340     8613               CALL:   CALL CXB$ERASE (GETCMD, CPSL_PARAM)
      341     8614               INPUT:  GETCMD - the CXG$GETCMD parameter.
      342     8615                       CPSL_PARAM - Command Processor Shared Library parameter.
      343     8616               OUTPUT:
      344     8617               DESCRIPTION: The ERASE command deletes previously created
      345     8618                      LDEV streams before printing.
      346     8619        */
      347     8620        /*********************************************************************/
      348     8621    1   CXB$ERASE:
      349     8622    1     ENTRY(GETCMD, CPSL_PARAM) ;

   8622  2 000434   000000 700200 xent  CXB$ERASE    TSX0  ! X66_AUTO_2
         2 000435   000770 000002                    ZERO    504,2

      350     8623        /**/
      351     8624    1     BLK$ = GETCMD.OUT$;

   8624  2 000436   200003 470500                    LDP0    @GETCMD,,AUTO
         2 000437   000001 236100                    LDQ     1,,PR0
         2 000440   200006 756100                    STQ     BLK$,,AUTO

      352     8625    1     FPT_LDEV = CPSL_CFPT_LDEV;

   8625  2 000441   000100 100400                    MLR     fill='000'O
         2 000442   000000 000120 xsym               ADSC9   CPSL_CFPT_LDEV           cn=0,n=80
         2 000443   200160 000120                    ADSC9   FPT_LDEV,,AUTO           cn=0,n=80

      353     8626    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);

   8626  2 000444   000012 235000 3                  LDA     10
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:79   
         2 000445   200752 452500                    STP2    OPEN+2,,AUTO
         2 000446   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000447   000176 036003                    ADLQ    126,DU
         2 000450   200160 757100                    STAQ    FPT_LDEV,,AUTO

      354     8627    1     FPT_LDEV.V.DELETE# = %YES#;

   8627  2 000451   040000 236003                    LDQ     16384,DU
         2 000452   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO

      355     8628    1     IF BLK$->P$B.NSUBLKS = 0 AND NOT CPSL_PARAM.FLAGS.VERIFY_ONLY

   8628  2 000453   200006 471500                    LDP1    BLK$,,AUTO
         2 000454   100001 220100                    LDX0    1,,PR1
         2 000455   000472 601000 2                  TNZ     s:8635
         2 000456   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 000457   300001 234100                    SZN     1,,PR3
         2 000460   000472 604000 2                  TMI     s:8635

      356     8629    1        THEN
      357     8630    2           DO;

      358     8631    2              FPT_LDEV.V.STREAMNAME# = 'ALL';

   8631  2 000461   000174 236000 1                  LDQ     CONSTCLS+30
         2 000462   000013 376000 3                  ANQ     11
         2 000463   000040 276007                    ORQ     32,DL
         2 000464   200176 756100                    STQ     FPT_LDEV+14,,AUTO

      359     8632    2              CALL M$LDEV(FPT_LDEV) ALTRET(E_ERASE);

   8632  2 000465   200160 630500                    EPPR0   FPT_LDEV,,AUTO
         2 000466   460004 713400                    CLIMB   alt,+24580
         2 000467   403000 401760                    pmme    nvectors=7
         2 000470   000564 702000 2                  TSX2    E_ERASE

      360     8633    2              RETURN;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:80   

   8633  2 000471   000000 702200 xent               TSX2  ! X66_ARET

      361     8634    2           END;
      362     8635    1     I = 0;

   8635  2 000472   200023 450100                    STZ     I,,AUTO

      363     8636    2     DO WHILE(I < BLK$->P$B.NSUBLKS);

   8636  2 000473   100001 236100                    LDQ     1,,PR1
         2 000474   000022 772000                    QRL     18
         2 000475   200023 116100                    CMPQ    I,,AUTO
         2 000476   000563 604400 2                  TMOZ    ERASERET

      364     8637    2        CALL CXX$LDEV(BLK$->P$B.SUBLK$(I)->P$S, GETCMD, CPSL_PARAM) ;

   8637  2 000477   200006 470500                    LDP0    BLK$,,AUTO
         2 000500   200023 720100                    LXL0    I,,AUTO
         2 000501   000003 471510                    LDP1    3,X0,PR0
         2 000502   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000503   200754 756100                    STQ     OPEN+4,,AUTO
         2 000504   200003 236100                    LDQ     @GETCMD,,AUTO
         2 000505   200753 756100                    STQ     OPEN+3,,AUTO
         2 000506   200752 451500                    STP1    OPEN+2,,AUTO
         2 000507   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 000510   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000511   000000 701000 xent               TSX1    CXX$LDEV
         2 000512   000000 011000                    NOP     0

      365     8638    2        IF CPSL_PARAM.ERRCODE = %NO#

   8638  2 000513   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000514   000002 235100                    LDA     2,,PR0
         2 000515   000547 601000 2                  TNZ     s:8651

      366     8639    2         THEN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:81   
      367     8640    3             DO ;

      368     8641    3             IF BLK$->P$B.SUBLK$(0)->P$B.CODE = LD_ALL

   8641  2 000516   200006 471500                    LDP1    BLK$,,AUTO
         2 000517   100003 473500                    LDP3    3,,PR1
         2 000520   300000 720100                    LXL0    0,,PR3
         2 000521   000025 100003                    CMPX0   21,DU
         2 000522   000530 601000 2                  TNZ     s:8645

      369     8642    3               THEN
      370     8643    3                 FPT_LDEV.V.STREAMNAME# = 'ALL';

   8643  2 000523   000174 236000 1                  LDQ     CONSTCLS+30
         2 000524   000013 376000 3                  ANQ     11
         2 000525   000040 276007                    ORQ     32,DL
         2 000526   200176 756100                    STQ     FPT_LDEV+14,,AUTO
         2 000527   000540 710000 2                  TRA     s:8646

      371     8644    3               ELSE
      372     8645    3                 FPT_LDEV.V.STREAMNAME# = BLK$ -> P$B.SUBLK$(I) -> P$S.TEXT;

   8645  2 000530   200023 721100                    LXL1    I,,AUTO
         2 000531   100003 474511                    LDP4    3,X1,PR1
         2 000532   400004 236100                    LDQ     4,,PR4
         2 000533   000033 772000                    QRL     27
         2 000534   000000 622006                    EAX2    0,QL
         2 000535   040100 100540                    MLR     fill='040'O
         2 000536   400004 200012                    ADSC9   4,,PR4                   cn=1,n=*X2
         2 000537   200176 000004                    ADSC9   FPT_LDEV+14,,AUTO        cn=0,n=4

      373     8646    3             IF NOT CPSL_PARAM.FLAGS.VERIFY_ONLY

   8646  2 000540   000001 234100                    SZN     1,,PR0
         2 000541   000555 604000 2                  TMI     s:8654

      374     8647    3               THEN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:82   
      375     8648    3                 CALL M$LDEV(FPT_LDEV) ALTRET(E_ERASE);

   8648  2 000542   200160 630500                    EPPR0   FPT_LDEV,,AUTO
         2 000543   460004 713400                    CLIMB   alt,+24580
         2 000544   403000 401760                    pmme    nvectors=7
         2 000545   000564 702000 2                  TSX2    E_ERASE

      376     8649    3           END ; /* Then Do */

   8649  2 000546   000555 710000 2                  TRA     s:8654

      377     8650    2         ELSE
      378     8651    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   8651  2 000547   000001 234100                    SZN     1,,PR0
         2 000550   000555 605000 2                  TPL     s:8654

      379     8652    2               THEN
      380     8653    2                 I = BLK$->P$B.NSUBLKS ;

   8653  2 000551   200006 471500                    LDP1    BLK$,,AUTO
         2 000552   100001 236100                    LDQ     1,,PR1
         2 000553   000022 772000                    QRL     18
         2 000554   200023 756100                    STQ     I,,AUTO

      381     8654    2        I = I + 1;

   8654  2 000555   200023 054100                    AOS     I,,AUTO

      382     8655    2     END;

   8655  2 000556   200006 470500                    LDP0    BLK$,,AUTO
         2 000557   000001 236100                    LDQ     1,,PR0
         2 000560   000022 772000                    QRL     18
         2 000561   200023 116100                    CMPQ    I,,AUTO
         2 000562   000477 605400 2                  TPNZ    s:8637

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:83   
      383     8656    1   ERASERET:
      384     8657    1     RETURN;

   8657  2 000563   000000 702200 xent  ERASERET     TSX2  ! X66_ARET

      385     8658
      386     8659    1   E_ERASE:
      387     8660    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;

   8660  2 000564   000000 470400 xsym  E_ERASE      LDP0    B$TCB$
         2 000565   000000 471500                    LDP1    0,,PR0
         2 000566   100102 236100                    LDQ     66,,PR1
         2 000567   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 000570   300002 756100                    STQ     2,,PR3

      388     8661    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   8661  2 000571   000011 236000 3                  LDQ     9
         2 000572   300001 356100                    ANSQ    1,,PR3

      389     8662    1     GOTO ERASERET ;

   8662  2 000573   000563 710000 2                  TRA     ERASERET

      390     8663        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:84   
      391     8664        /*********************************************************************/
      392     8665        /*F*    NAME:    CXB$HOLD
      393     8666                PURPOSE:    To process the HOLD command to hold symbiont output for
      394     8667                         LDEV stream, if specified, or LP01 by default.
      395     8668               REFERENCE: Programmers Reference Manual
      396     8669        */
      397     8670        /*D*   NAME:   CXB$HOLD
      398     8671               CALL:   CALL CXB$HOLD (GETCMD, CPSL_PARAM)
      399     8672               INPUT:  GETCMD - the CXG$GETCMD parameter.
      400     8673                       CPSL_PARAM - Command Processor Shared Library parameter.
      401     8674               OUTPUT:
      402     8675               DESCRIPTION: The HOLD command hold symbiont output created
      403     8676                      by LDEV stream, if specified, or LP01, the default.
      404     8677        */
      405     8678        /*********************************************************************/
      406     8679    1   CXB$HOLD:
      407     8680    1     ENTRY(GETCMD, CPSL_PARAM) ;

   8680  2 000574   000000 700200 xent  CXB$HOLD     TSX0  ! X66_AUTO_2
         2 000575   000770 000002                    ZERO    504,2

      408     8681        /**/
      409     8682    1     BLK$ = GETCMD.OUT$;

   8682  2 000576   200003 470500                    LDP0    @GETCMD,,AUTO
         2 000577   000001 236100                    LDQ     1,,PR0
         2 000600   200006 756100                    STQ     BLK$,,AUTO

      410     8683    1     FPT_LDEV = CPSL_CFPT_LDEV;

   8683  2 000601   000100 100400                    MLR     fill='000'O
         2 000602   000000 000120 xsym               ADSC9   CPSL_CFPT_LDEV           cn=0,n=80
         2 000603   200160 000120                    ADSC9   FPT_LDEV,,AUTO           cn=0,n=80

      411     8684    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);

   8684  2 000604   000012 235000 3                  LDA     10
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:85   
         2 000605   200752 452500                    STP2    OPEN+2,,AUTO
         2 000606   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000607   000176 036003                    ADLQ    126,DU
         2 000610   200160 757100                    STAQ    FPT_LDEV,,AUTO

      412     8685    1     FPT_LDEV.V.HOLD# = %YES# ;

   8685  2 000611   001000 236003                    LDQ     512,DU
         2 000612   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO

      413     8686    1     FPT_LDEV.V.CONTINUE# = %YES# ;

   8686  2 000613   400000 236003                    LDQ     -131072,DU
         2 000614   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO

      414     8687    1     I = BLK$ -> P$B.NSUBLKS;

   8687  2 000615   200006 471500                    LDP1    BLK$,,AUTO
         2 000616   100001 236100                    LDQ     1,,PR1
         2 000617   000022 772000                    QRL     18
         2 000620   200023 756100                    STQ     I,,AUTO

      415     8688    1     J = 0;

   8688  2 000621   200024 450100                    STZ     J,,AUTO

      416     8689    1     DONE = %NO#;

   8689  2 000622   200022 450100                    STZ     DONE,,AUTO

      417     8690    2     DO WHILE (NOT DONE);

   8690  2 000623   000712 710000 2                  TRA     s:8718

      418     8691    2       IF I=0

   8691  2 000624   200023 235100                    LDA     I,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:86   
         2 000625   000633 601000 2                  TNZ     s:8699

      419     8692    2         THEN  /* No sub-blocks */
      420     8693    3           DO;

      421     8694    3             FPT_LDEV.V.STREAMNAME# = 'LP01' ;

   8694  2 000626   000175 236000 1                  LDQ     CONSTCLS+31
         2 000627   200176 756100                    STQ     FPT_LDEV+14,,AUTO

      422     8695    3             DONE = %YES#;

   8695  2 000630   400000 236003                    LDQ     -131072,DU
         2 000631   200022 756100                    STQ     DONE,,AUTO

      423     8696    3           END;  /* Then Do */

   8696  2 000632   000701 710000 2                  TRA     s:8715

      424     8697    2         ELSE      /* One or more sub-blocks */
      425     8698    3           DO;

      426     8699    3             CALL CXX$LDEV(BLK$->P$B.SUBLK$(J)->P$S, GETCMD, CPSL_PARAM) ;

   8699  2 000633   200006 470500                    LDP0    BLK$,,AUTO
         2 000634   200024 720100                    LXL0    J,,AUTO
         2 000635   000003 471510                    LDP1    3,X0,PR0
         2 000636   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 000637   200754 756100                    STQ     OPEN+4,,AUTO
         2 000640   200003 236100                    LDQ     @GETCMD,,AUTO
         2 000641   200753 756100                    STQ     OPEN+3,,AUTO
         2 000642   200752 451500                    STP1    OPEN+2,,AUTO
         2 000643   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 000644   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000645   000000 701000 xent               TSX1    CXX$LDEV
         2 000646   000000 011000                    NOP     0

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:87   
      427     8700    3             IF CPSL_PARAM.ERRCODE = %NO#

   8700  2 000647   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000650   000002 235100                    LDA     2,,PR0
         2 000651   000673 601000 2                  TNZ     s:8710

      428     8701    3               THEN
      429     8702    4                 DO;

      430     8703    4                   IF BLK$->P$B.SUBLK$(J)->P$B.CODE = LD_ALL

   8703  2 000652   200006 471500                    LDP1    BLK$,,AUTO
         2 000653   200024 720100                    LXL0    J,,AUTO
         2 000654   100003 473510                    LDP3    3,X0,PR1
         2 000655   300000 721100                    LXL1    0,,PR3
         2 000656   000025 101003                    CMPX1   21,DU
         2 000657   000665 601000 2                  TNZ     s:8707

      431     8704    4                     THEN
      432     8705    4                       FPT_LDEV.V.STREAMNAME# = 'ALL';

   8705  2 000660   000174 236000 1                  LDQ     CONSTCLS+30
         2 000661   000013 376000 3                  ANQ     11
         2 000662   000040 276007                    ORQ     32,DL
         2 000663   200176 756100                    STQ     FPT_LDEV+14,,AUTO
         2 000664   000673 710000 2                  TRA     s:8710

      433     8706    4                     ELSE
      434     8707    4                       FPT_LDEV.V.STREAMNAME# = BLK$ -> P$B.SUBLK$(J) ->

   8707  2 000665   300004 236100                    LDQ     4,,PR3
         2 000666   000033 772000                    QRL     27
         2 000667   000000 622006                    EAX2    0,QL
         2 000670   040100 100540                    MLR     fill='040'O
         2 000671   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
         2 000672   200176 000004                    ADSC9   FPT_LDEV+14,,AUTO        cn=0,n=4

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:88   
      435     8708    4                                                 P$S.TEXT ;
      436     8709    4                 END ; /* Then Do */

      437     8710    3             J = J + 1;

   8710  2 000673   200024 054100                    AOS     J,,AUTO

      438     8711    3             IF J = I

   8711  2 000674   200024 236100                    LDQ     J,,AUTO
         2 000675   200023 116100                    CMPQ    I,,AUTO
         2 000676   000701 601000 2                  TNZ     s:8715

      439     8712    3               THEN
      440     8713    3                 DONE = %YES#;

   8713  2 000677   400000 236003                    LDQ     -131072,DU
         2 000700   200022 756100                    STQ     DONE,,AUTO

      441     8714    3           END ; /* Then Do */

      442     8715    2       IF NOT (CPSL_PARAM.ERRCODE OR CPSL_PARAM.FLAGS.VERIFY_ONLY)

   8715  2 000701   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 000702   000002 235100                    LDA     2,,PR0
         2 000703   000712 601000 2                  TNZ     s:8718
         2 000704   000001 234100                    SZN     1,,PR0
         2 000705   000712 604000 2                  TMI     s:8718

      443     8716    2         THEN
      444     8717    2           CALL M$LDEV(FPT_LDEV) ALTRET(E_LDEV) ;

   8717  2 000706   200160 630500                    EPPR0   FPT_LDEV,,AUTO
         2 000707   460004 713400                    CLIMB   alt,+24580
         2 000710   403000 401760                    pmme    nvectors=7
         2 000711   002266 702000 2                  TSX2    E_LDEV

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:89   
      445     8718    2     END;  /* Do While */

   8718  2 000712   200022 234100                    SZN     DONE,,AUTO
         2 000713   000624 605000 2                  TPL     s:8691

      446     8719    1     RETURN ;

   8719  2 000714   000000 702200 xent               TSX2  ! X66_ARET

      447     8720
      448     8721        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:90   
      449     8722        /*********************************************************************/
      450     8723        /*F*    NAME:    CXB$LDEV
      451     8724                PURPOSE:    To process the LDEV command.
      452     8725                         LDEV streams before they are printed.
      453     8726               REFERENCE: Programmers Reference Manual
      454     8727        */
      455     8728        /*D*   NAME:   CXB$LDEV
      456     8729               CALL:   CALL CXB$LDEV (GETCMD, CPSL_PARAM)
      457     8730               INPUT:  GETCMD - the CXG$GETCMD parameter.
      458     8731                       CPSL_PARAM - Command Processor Shared Library parameter.
      459     8732               OUTPUT:
      460     8733               DESCRIPTION: The LDEV command creates logical output streams.
      461     8734        */
      462     8735        /*********************************************************************/
      463     8736    1   CXB$LDEV:
      464     8737    1     ENTRY(GETCMD, CPSL_PARAM) ;

   8737  2 000715   000000 700200 xent  CXB$LDEV     TSX0  ! X66_AUTO_2
         2 000716   000770 000002                    ZERO    504,2

      465     8738        /**/
      466     8739    1     BLK$ = GETCMD.OUT$;

   8739  2 000717   200003 470500                    LDP0    @GETCMD,,AUTO
         2 000720   000001 236100                    LDQ     1,,PR0
         2 000721   200006 756100                    STQ     BLK$,,AUTO

      467     8740    1     FPT_LDEV = CPSL_CFPT_LDEV;

   8740  2 000722   000100 100400                    MLR     fill='000'O
         2 000723   000000 000120 xsym               ADSC9   CPSL_CFPT_LDEV           cn=0,n=80
         2 000724   200160 000120                    ADSC9   FPT_LDEV,,AUTO           cn=0,n=80

      468     8741    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);

   8741  2 000725   000012 235000 3                  LDA     10
         2 000726   200752 452500                    STP2    OPEN+2,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:91   
         2 000727   200752 236100                    LDQ     OPEN+2,,AUTO
         2 000730   000176 036003                    ADLQ    126,DU
         2 000731   200160 757100                    STAQ    FPT_LDEV,,AUTO

      469     8742    1     VLP_HDR = CPSL_CVLP_HDR;

   8742  2 000732   000100 100400                    MLR     fill='000'O
         2 000733   000000 000010 xsym               ADSC9   CPSL_CVLP_HDR            cn=0,n=8
         2 000734   200314 001004                    ADSC9   VLP_HDR,,AUTO            cn=0,n=516

      470     8743    1     VLP_TABS = CPSL_CVLP_TAB;

   8743  2 000735   000100 100400                    MLR     fill='000'O
         2 000736   000000 000040 xsym               ADSC9   CPSL_CVLP_TAB            cn=0,n=32
         2 000737   200536 000040                    ADSC9   VLP_TABS,,AUTO           cn=0,n=32

      471     8744    1     VLP_WINDOW = CPSL_CVLP_WINDOW ;

   8744  2 000740   000100 100400                    MLR     fill='000'O
         2 000741   000000 000040 xsym               ADSC9   CPSL_CVLP_WINDOW         cn=0,n=32
         2 000742   200560 000040                    ADSC9   VLP_WINDOW,,AUTO         cn=0,n=32

      472     8745        /**/
      473     8746    1     I = 0;

   8746  2 000743   200023 450100                    STZ     I,,AUTO

      474     8747    1     GOT_LOGON_OPTION = %NO# ;

   8747  2 000744   200017 450100                    STZ     GOT_LOGON_OPTION,,AUTO

      475     8748    1     NEED_LDEV_HDR = %YES# ;

   8748  2 000745   400000 236003                    LDQ     -131072,DU
         2 000746   200021 756100                    STQ     NEED_LDEV_HDR,,AUTO

      476     8749    2     DO WHILE(I < BLK$->P$B.NSUBLKS);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:92   

   8749  2 000747   200006 471500                    LDP1    BLK$,,AUTO
         2 000750   100001 236100                    LDQ     1,,PR1
         2 000751   000022 772000                    QRL     18
         2 000752   200023 116100                    CMPQ    I,,AUTO
         2 000753   002242 604400 2                  TMOZ    s:8944

      477     8750    2        P$ = BLK$->P$B.SUBLK$(I);

   8750  2 000754   200006 470500                    LDP0    BLK$,,AUTO
         2 000755   200023 720100                    LXL0    I,,AUTO
         2 000756   000003 236110                    LDQ     3,X0,PR0
         2 000757   200005 756100                    STQ     P$,,AUTO

      478     8751    3        DO CASE(P$->P$B.CODE);

   8751  2 000760   200005 471500                    LDP1    P$,,AUTO
         2 000761   100000 721100                    LXL1    0,,PR1
         2 000762   000467 101003                    CMPX1   311,DU
         2 000763   000765 602011 2                  TNC     s:8751+5,X1
         2 000764   001572 710000 2                  TRA     s:8806
         2 000765   001572 710000 2                  TRA     s:8806
         2 000766   001542 710000 2                  TRA     s:8799
         2 000767   001542 710000 2                  TRA     s:8799
         2 000770   001542 710000 2                  TRA     s:8799
         2 000771   001542 710000 2                  TRA     s:8799
         2 000772   001542 710000 2                  TRA     s:8799
         2 000773   001542 710000 2                  TRA     s:8799
         2 000774   001542 710000 2                  TRA     s:8799
         2 000775   001542 710000 2                  TRA     s:8799
         2 000776   001542 710000 2                  TRA     s:8799
         2 000777   001542 710000 2                  TRA     s:8799
         2 001000   001542 710000 2                  TRA     s:8799
         2 001001   001542 710000 2                  TRA     s:8799
         2 001002   001542 710000 2                  TRA     s:8799
         2 001003   001542 710000 2                  TRA     s:8799
         2 001004   001542 710000 2                  TRA     s:8799
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:93   
         2 001005   001572 710000 2                  TRA     s:8806
         2 001006   001572 710000 2                  TRA     s:8806
         2 001007   001572 710000 2                  TRA     s:8806
         2 001010   001572 710000 2                  TRA     s:8806
         2 001011   001572 710000 2                  TRA     s:8806
         2 001012   001572 710000 2                  TRA     s:8806
         2 001013   001572 710000 2                  TRA     s:8806
         2 001014   001572 710000 2                  TRA     s:8806
         2 001015   001454 710000 2                  TRA     s:8768
         2 001016   001454 710000 2                  TRA     s:8768
         2 001017   001572 710000 2                  TRA     s:8806
         2 001020   001454 710000 2                  TRA     s:8768
         2 001021   001454 710000 2                  TRA     s:8768
         2 001022   001572 710000 2                  TRA     s:8806
         2 001023   001572 710000 2                  TRA     s:8806
         2 001024   001454 710000 2                  TRA     s:8768
         2 001025   001572 710000 2                  TRA     s:8806
         2 001026   001454 710000 2                  TRA     s:8768
         2 001027   001454 710000 2                  TRA     s:8768
         2 001030   001454 710000 2                  TRA     s:8768
         2 001031   001454 710000 2                  TRA     s:8768
         2 001032   001454 710000 2                  TRA     s:8768
         2 001033   001572 710000 2                  TRA     s:8806
         2 001034   001572 710000 2                  TRA     s:8806
         2 001035   001572 710000 2                  TRA     s:8806
         2 001036   001572 710000 2                  TRA     s:8806
         2 001037   001454 710000 2                  TRA     s:8768
         2 001040   001454 710000 2                  TRA     s:8768
         2 001041   001572 710000 2                  TRA     s:8806
         2 001042   001572 710000 2                  TRA     s:8806
         2 001043   001572 710000 2                  TRA     s:8806
         2 001044   001454 710000 2                  TRA     s:8768
         2 001045   001470 710000 2                  TRA     s:8771
         2 001046   001572 710000 2                  TRA     s:8806
         2 001047   001572 710000 2                  TRA     s:8806
         2 001050   001454 710000 2                  TRA     s:8768
         2 001051   001572 710000 2                  TRA     s:8806
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:94   
         2 001052   001572 710000 2                  TRA     s:8806
         2 001053   001572 710000 2                  TRA     s:8806
         2 001054   001572 710000 2                  TRA     s:8806
         2 001055   001572 710000 2                  TRA     s:8806
         2 001056   001572 710000 2                  TRA     s:8806
         2 001057   001572 710000 2                  TRA     s:8806
         2 001060   001572 710000 2                  TRA     s:8806
         2 001061   001572 710000 2                  TRA     s:8806
         2 001062   001572 710000 2                  TRA     s:8806
         2 001063   001572 710000 2                  TRA     s:8806
         2 001064   001572 710000 2                  TRA     s:8806
         2 001065   001572 710000 2                  TRA     s:8806
         2 001066   001572 710000 2                  TRA     s:8806
         2 001067   001572 710000 2                  TRA     s:8806
         2 001070   001572 710000 2                  TRA     s:8806
         2 001071   001572 710000 2                  TRA     s:8806
         2 001072   001572 710000 2                  TRA     s:8806
         2 001073   001572 710000 2                  TRA     s:8806
         2 001074   001572 710000 2                  TRA     s:8806
         2 001075   001572 710000 2                  TRA     s:8806
         2 001076   001572 710000 2                  TRA     s:8806
         2 001077   001572 710000 2                  TRA     s:8806
         2 001100   001572 710000 2                  TRA     s:8806
         2 001101   001572 710000 2                  TRA     s:8806
         2 001102   001572 710000 2                  TRA     s:8806
         2 001103   001572 710000 2                  TRA     s:8806
         2 001104   001572 710000 2                  TRA     s:8806
         2 001105   001572 710000 2                  TRA     s:8806
         2 001106   001572 710000 2                  TRA     s:8806
         2 001107   001572 710000 2                  TRA     s:8806
         2 001110   001572 710000 2                  TRA     s:8806
         2 001111   001572 710000 2                  TRA     s:8806
         2 001112   001572 710000 2                  TRA     s:8806
         2 001113   001572 710000 2                  TRA     s:8806
         2 001114   001572 710000 2                  TRA     s:8806
         2 001115   001572 710000 2                  TRA     s:8806
         2 001116   001572 710000 2                  TRA     s:8806
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:95   
         2 001117   001572 710000 2                  TRA     s:8806
         2 001120   001572 710000 2                  TRA     s:8806
         2 001121   001572 710000 2                  TRA     s:8806
         2 001122   001572 710000 2                  TRA     s:8806
         2 001123   001572 710000 2                  TRA     s:8806
         2 001124   001572 710000 2                  TRA     s:8806
         2 001125   001572 710000 2                  TRA     s:8806
         2 001126   001572 710000 2                  TRA     s:8806
         2 001127   001572 710000 2                  TRA     s:8806
         2 001130   001572 710000 2                  TRA     s:8806
         2 001131   001572 710000 2                  TRA     s:8806
         2 001132   001572 710000 2                  TRA     s:8806
         2 001133   001572 710000 2                  TRA     s:8806
         2 001134   001572 710000 2                  TRA     s:8806
         2 001135   001572 710000 2                  TRA     s:8806
         2 001136   001572 710000 2                  TRA     s:8806
         2 001137   001572 710000 2                  TRA     s:8806
         2 001140   001572 710000 2                  TRA     s:8806
         2 001141   001572 710000 2                  TRA     s:8806
         2 001142   001572 710000 2                  TRA     s:8806
         2 001143   001572 710000 2                  TRA     s:8806
         2 001144   001572 710000 2                  TRA     s:8806
         2 001145   001572 710000 2                  TRA     s:8806
         2 001146   001572 710000 2                  TRA     s:8806
         2 001147   001572 710000 2                  TRA     s:8806
         2 001150   001572 710000 2                  TRA     s:8806
         2 001151   001572 710000 2                  TRA     s:8806
         2 001152   001572 710000 2                  TRA     s:8806
         2 001153   001572 710000 2                  TRA     s:8806
         2 001154   001572 710000 2                  TRA     s:8806
         2 001155   001572 710000 2                  TRA     s:8806
         2 001156   001572 710000 2                  TRA     s:8806
         2 001157   001572 710000 2                  TRA     s:8806
         2 001160   001572 710000 2                  TRA     s:8806
         2 001161   001572 710000 2                  TRA     s:8806
         2 001162   001572 710000 2                  TRA     s:8806
         2 001163   001572 710000 2                  TRA     s:8806
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:96   
         2 001164   001572 710000 2                  TRA     s:8806
         2 001165   001572 710000 2                  TRA     s:8806
         2 001166   001572 710000 2                  TRA     s:8806
         2 001167   001572 710000 2                  TRA     s:8806
         2 001170   001572 710000 2                  TRA     s:8806
         2 001171   001572 710000 2                  TRA     s:8806
         2 001172   001572 710000 2                  TRA     s:8806
         2 001173   001572 710000 2                  TRA     s:8806
         2 001174   001572 710000 2                  TRA     s:8806
         2 001175   001572 710000 2                  TRA     s:8806
         2 001176   001572 710000 2                  TRA     s:8806
         2 001177   001572 710000 2                  TRA     s:8806
         2 001200   001572 710000 2                  TRA     s:8806
         2 001201   001572 710000 2                  TRA     s:8806
         2 001202   001572 710000 2                  TRA     s:8806
         2 001203   001572 710000 2                  TRA     s:8806
         2 001204   001572 710000 2                  TRA     s:8806
         2 001205   001572 710000 2                  TRA     s:8806
         2 001206   001572 710000 2                  TRA     s:8806
         2 001207   001572 710000 2                  TRA     s:8806
         2 001210   001572 710000 2                  TRA     s:8806
         2 001211   001572 710000 2                  TRA     s:8806
         2 001212   001572 710000 2                  TRA     s:8806
         2 001213   001572 710000 2                  TRA     s:8806
         2 001214   001572 710000 2                  TRA     s:8806
         2 001215   001572 710000 2                  TRA     s:8806
         2 001216   001572 710000 2                  TRA     s:8806
         2 001217   001572 710000 2                  TRA     s:8806
         2 001220   001572 710000 2                  TRA     s:8806
         2 001221   001572 710000 2                  TRA     s:8806
         2 001222   001572 710000 2                  TRA     s:8806
         2 001223   001572 710000 2                  TRA     s:8806
         2 001224   001572 710000 2                  TRA     s:8806
         2 001225   001572 710000 2                  TRA     s:8806
         2 001226   001572 710000 2                  TRA     s:8806
         2 001227   001572 710000 2                  TRA     s:8806
         2 001230   001572 710000 2                  TRA     s:8806
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:97   
         2 001231   001572 710000 2                  TRA     s:8806
         2 001232   001572 710000 2                  TRA     s:8806
         2 001233   001572 710000 2                  TRA     s:8806
         2 001234   001572 710000 2                  TRA     s:8806
         2 001235   001572 710000 2                  TRA     s:8806
         2 001236   001572 710000 2                  TRA     s:8806
         2 001237   001572 710000 2                  TRA     s:8806
         2 001240   001572 710000 2                  TRA     s:8806
         2 001241   001572 710000 2                  TRA     s:8806
         2 001242   001572 710000 2                  TRA     s:8806
         2 001243   001572 710000 2                  TRA     s:8806
         2 001244   001572 710000 2                  TRA     s:8806
         2 001245   001572 710000 2                  TRA     s:8806
         2 001246   001572 710000 2                  TRA     s:8806
         2 001247   001572 710000 2                  TRA     s:8806
         2 001250   001572 710000 2                  TRA     s:8806
         2 001251   001572 710000 2                  TRA     s:8806
         2 001252   001572 710000 2                  TRA     s:8806
         2 001253   001572 710000 2                  TRA     s:8806
         2 001254   001572 710000 2                  TRA     s:8806
         2 001255   001572 710000 2                  TRA     s:8806
         2 001256   001572 710000 2                  TRA     s:8806
         2 001257   001572 710000 2                  TRA     s:8806
         2 001260   001572 710000 2                  TRA     s:8806
         2 001261   001572 710000 2                  TRA     s:8806
         2 001262   001572 710000 2                  TRA     s:8806
         2 001263   001572 710000 2                  TRA     s:8806
         2 001264   001572 710000 2                  TRA     s:8806
         2 001265   001572 710000 2                  TRA     s:8806
         2 001266   001572 710000 2                  TRA     s:8806
         2 001267   001572 710000 2                  TRA     s:8806
         2 001270   001572 710000 2                  TRA     s:8806
         2 001271   001572 710000 2                  TRA     s:8806
         2 001272   001572 710000 2                  TRA     s:8806
         2 001273   001572 710000 2                  TRA     s:8806
         2 001274   001572 710000 2                  TRA     s:8806
         2 001275   001572 710000 2                  TRA     s:8806
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:98   
         2 001276   001572 710000 2                  TRA     s:8806
         2 001277   001572 710000 2                  TRA     s:8806
         2 001300   001572 710000 2                  TRA     s:8806
         2 001301   001572 710000 2                  TRA     s:8806
         2 001302   001572 710000 2                  TRA     s:8806
         2 001303   001572 710000 2                  TRA     s:8806
         2 001304   001572 710000 2                  TRA     s:8806
         2 001305   001572 710000 2                  TRA     s:8806
         2 001306   001572 710000 2                  TRA     s:8806
         2 001307   001572 710000 2                  TRA     s:8806
         2 001310   001572 710000 2                  TRA     s:8806
         2 001311   001572 710000 2                  TRA     s:8806
         2 001312   001572 710000 2                  TRA     s:8806
         2 001313   001572 710000 2                  TRA     s:8806
         2 001314   001572 710000 2                  TRA     s:8806
         2 001315   001572 710000 2                  TRA     s:8806
         2 001316   001572 710000 2                  TRA     s:8806
         2 001317   001572 710000 2                  TRA     s:8806
         2 001320   001572 710000 2                  TRA     s:8806
         2 001321   001572 710000 2                  TRA     s:8806
         2 001322   001572 710000 2                  TRA     s:8806
         2 001323   001572 710000 2                  TRA     s:8806
         2 001324   001572 710000 2                  TRA     s:8806
         2 001325   001572 710000 2                  TRA     s:8806
         2 001326   001572 710000 2                  TRA     s:8806
         2 001327   001572 710000 2                  TRA     s:8806
         2 001330   001572 710000 2                  TRA     s:8806
         2 001331   001572 710000 2                  TRA     s:8806
         2 001332   001572 710000 2                  TRA     s:8806
         2 001333   001572 710000 2                  TRA     s:8806
         2 001334   001572 710000 2                  TRA     s:8806
         2 001335   001572 710000 2                  TRA     s:8806
         2 001336   001572 710000 2                  TRA     s:8806
         2 001337   001572 710000 2                  TRA     s:8806
         2 001340   001572 710000 2                  TRA     s:8806
         2 001341   001572 710000 2                  TRA     s:8806
         2 001342   001572 710000 2                  TRA     s:8806
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:99   
         2 001343   001572 710000 2                  TRA     s:8806
         2 001344   001572 710000 2                  TRA     s:8806
         2 001345   001572 710000 2                  TRA     s:8806
         2 001346   001572 710000 2                  TRA     s:8806
         2 001347   001572 710000 2                  TRA     s:8806
         2 001350   001572 710000 2                  TRA     s:8806
         2 001351   001572 710000 2                  TRA     s:8806
         2 001352   001572 710000 2                  TRA     s:8806
         2 001353   001572 710000 2                  TRA     s:8806
         2 001354   001572 710000 2                  TRA     s:8806
         2 001355   001572 710000 2                  TRA     s:8806
         2 001356   001572 710000 2                  TRA     s:8806
         2 001357   001572 710000 2                  TRA     s:8806
         2 001360   001572 710000 2                  TRA     s:8806
         2 001361   001572 710000 2                  TRA     s:8806
         2 001362   001572 710000 2                  TRA     s:8806
         2 001363   001572 710000 2                  TRA     s:8806
         2 001364   001572 710000 2                  TRA     s:8806
         2 001365   001572 710000 2                  TRA     s:8806
         2 001366   001572 710000 2                  TRA     s:8806
         2 001367   001572 710000 2                  TRA     s:8806
         2 001370   001572 710000 2                  TRA     s:8806
         2 001371   001572 710000 2                  TRA     s:8806
         2 001372   001572 710000 2                  TRA     s:8806
         2 001373   001572 710000 2                  TRA     s:8806
         2 001374   001572 710000 2                  TRA     s:8806
         2 001375   001572 710000 2                  TRA     s:8806
         2 001376   001572 710000 2                  TRA     s:8806
         2 001377   001572 710000 2                  TRA     s:8806
         2 001400   001572 710000 2                  TRA     s:8806
         2 001401   001572 710000 2                  TRA     s:8806
         2 001402   001572 710000 2                  TRA     s:8806
         2 001403   001572 710000 2                  TRA     s:8806
         2 001404   001572 710000 2                  TRA     s:8806
         2 001405   001572 710000 2                  TRA     s:8806
         2 001406   001572 710000 2                  TRA     s:8806
         2 001407   001572 710000 2                  TRA     s:8806
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:100  
         2 001410   001572 710000 2                  TRA     s:8806
         2 001411   001572 710000 2                  TRA     s:8806
         2 001412   001572 710000 2                  TRA     s:8806
         2 001413   001572 710000 2                  TRA     s:8806
         2 001414   001572 710000 2                  TRA     s:8806
         2 001415   001572 710000 2                  TRA     s:8806
         2 001416   001572 710000 2                  TRA     s:8806
         2 001417   001572 710000 2                  TRA     s:8806
         2 001420   001572 710000 2                  TRA     s:8806
         2 001421   001572 710000 2                  TRA     s:8806
         2 001422   001572 710000 2                  TRA     s:8806
         2 001423   001572 710000 2                  TRA     s:8806
         2 001424   001572 710000 2                  TRA     s:8806
         2 001425   001572 710000 2                  TRA     s:8806
         2 001426   001572 710000 2                  TRA     s:8806
         2 001427   001572 710000 2                  TRA     s:8806
         2 001430   001572 710000 2                  TRA     s:8806
         2 001431   001572 710000 2                  TRA     s:8806
         2 001432   001572 710000 2                  TRA     s:8806
         2 001433   001572 710000 2                  TRA     s:8806
         2 001434   001572 710000 2                  TRA     s:8806
         2 001435   001572 710000 2                  TRA     s:8806
         2 001436   001572 710000 2                  TRA     s:8806
         2 001437   001572 710000 2                  TRA     s:8806
         2 001440   001572 710000 2                  TRA     s:8806
         2 001441   001572 710000 2                  TRA     s:8806
         2 001442   001572 710000 2                  TRA     s:8806
         2 001443   001572 710000 2                  TRA     s:8806
         2 001444   001572 710000 2                  TRA     s:8806
         2 001445   001572 710000 2                  TRA     s:8806
         2 001446   001572 710000 2                  TRA     s:8806
         2 001447   001572 710000 2                  TRA     s:8806
         2 001450   001572 710000 2                  TRA     s:8806
         2 001451   001572 710000 2                  TRA     s:8806
         2 001452   001572 710000 2                  TRA     s:8806
         2 001453   001454 710000 2                  TRA     s:8768

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:101  
      479     8752        /**/
      480     8753    3         CASE(LD_FID,

      481     8754    3               LD_FORM,
      482     8755    3               LD_COPY,
      483     8756    3               LD_DVFC,
      484     8757    3               TAB_NUM,
      485     8758    3               LD_LINES,
      486     8759    3               LD_HEIGHT,
      487     8760    3               LD_HOLDCOPIES,
      488     8761    3               LD_INDENT,
      489     8762    3               LD_PAGE,
      490     8763    3               LD_MARGIN,
      491     8764    3               LD_SEQCOL,
      492     8765    3               LD_SEQID,
      493     8766    3               LD_WIDTH,
      494     8767    3               LD_STNAME) ;
      495     8768    3             CALL CXX$LDEV (P$->P$B,GETCMD,CPSL_PARAM,TEMP) ;

   8768  2 001454   200026 633500                    EPPR3   TEMP,,AUTO
         2 001455   200755 453500                    STP3    OPEN+5,,AUTO
         2 001456   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 001457   200754 756100                    STQ     OPEN+4,,AUTO
         2 001460   200003 236100                    LDQ     @GETCMD,,AUTO
         2 001461   200005 235100                    LDA     P$,,AUTO
         2 001462   200752 757100                    STAQ    OPEN+2,,AUTO
         2 001463   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 001464   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001465   000000 701000 xent               TSX1    CXX$LDEV
         2 001466   000000 011000                    NOP     0
         2 001467   001572 710000 2                  TRA     s:8806

      496     8769        /**/
      497     8770    3         CASE(LD_TABS) ;

      498     8771    3               CALL CXX$LDEV (P$->P$B,GETCMD,CPSL_PARAM,TEMP) ;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:102  
   8771  2 001470   200026 633500                    EPPR3   TEMP,,AUTO
         2 001471   200755 453500                    STP3    OPEN+5,,AUTO
         2 001472   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 001473   200754 756100                    STQ     OPEN+4,,AUTO
         2 001474   200003 236100                    LDQ     @GETCMD,,AUTO
         2 001475   200005 235100                    LDA     P$,,AUTO
         2 001476   200752 757100                    STAQ    OPEN+2,,AUTO
         2 001477   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 001500   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001501   000000 701000 xent               TSX1    CXX$LDEV
         2 001502   000000 011000                    NOP     0

      499     8772    3               IF CPSL_PARAM.ERRCODE = %NO# AND CPSL_PARAM.FLAGS.VERIFY_ONLY

   8772  2 001503   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 001504   000002 235100                    LDA     2,,PR0
         2 001505   001572 601000 2                  TNZ     s:8806
         2 001506   000001 234100                    SZN     1,,PR0
         2 001507   001572 605000 2                  TPL     s:8806

      500     8773    3                 THEN
      501     8774    4                   DO ;

      502     8775    4                     J = 0 ;

   8775  2 001510   200024 450100                    STZ     J,,AUTO

      503     8776    5                     DO WHILE (J < P$->P$B.NSUBLKS AND CPSL_PARAM.ERRCODE = %NO#) ;

   8776  2 001511   001531 710000 2                  TRA     s:8780

      504     8777    5                       CALL CXX$LDEV(P$->P$B.SUBLK$(J)->P$S,GETCMD,CPSL_PARAM,

   8777  2 001512   200005 470500                    LDP0    P$,,AUTO
         2 001513   200024 720100                    LXL0    J,,AUTO
         2 001514   000003 471510                    LDP1    3,X0,PR0
         2 001515   200026 633500                    EPPR3   TEMP,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:103  
         2 001516   200755 453500                    STP3    OPEN+5,,AUTO
         2 001517   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 001520   200754 756100                    STQ     OPEN+4,,AUTO
         2 001521   200003 236100                    LDQ     @GETCMD,,AUTO
         2 001522   200753 756100                    STQ     OPEN+3,,AUTO
         2 001523   200752 451500                    STP1    OPEN+2,,AUTO
         2 001524   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 001525   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001526   000000 701000 xent               TSX1    CXX$LDEV
         2 001527   000000 011000                    NOP     0

      505     8778    5                                       TEMP) ;
      506     8779    5                       J = J + 1 ;

   8779  2 001530   200024 054100                    AOS     J,,AUTO

      507     8780    5                     END ; /* Do While */

   8780  2 001531   200005 470500                    LDP0    P$,,AUTO
         2 001532   000001 236100                    LDQ     1,,PR0
         2 001533   000022 772000                    QRL     18
         2 001534   200024 116100                    CMPQ    J,,AUTO
         2 001535   001541 604400 2                  TMOZ    s:8781
         2 001536   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 001537   100002 235100                    LDA     2,,PR1
         2 001540   001512 600000 2                  TZE     s:8777

      508     8781    4                   END ; /* Then Do */

   8781  2 001541   001572 710000 2                  TRA     s:8806

      509     8782        /**/
      510     8783    3         CASE (BTMBRDROPT,

      511     8784    3               FWINDOWOPT,
      512     8785    3               HBRDRCHROPT,
      513     8786    3               HBRDRSIZOPT,
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:104  
      514     8787    3               LFTBRDROPT,
      515     8788    3               MINLENGTHOPT,
      516     8789    3               MINWIDTHOPT,
      517     8790    3               OPTIONALOPT,
      518     8791    3               POSITIONOPT,
      519     8792    3               RHTBRDROPT,
      520     8793    3               TOPBRDROPT,
      521     8794    3               VBRDRCHROPT,
      522     8795    3               VBRDRSIZOPT,
      523     8796    3               WLENGTHOPT,
      524     8797    3               WWIDTHOPT) ;
      525     8798
      526     8799    3               FPT_LDEV.WINDOW_ = VECTOR(VLP_WINDOW) ;

   8799  2 001542   000004 235000 3                  LDA     4
         2 001543   200752 452500                    STP2    OPEN+2,,AUTO
         2 001544   200752 236100                    LDQ     OPEN+2,,AUTO
         2 001545   000560 036003                    ADLQ    368,DU
         2 001546   200172 757100                    STAQ    FPT_LDEV+10,,AUTO

      527     8800    3               CALL CXB$WINDOW_OPTS(P$, ADDR(VLP_WINDOW), GETCMD, CPSL_PARAM) ;

   8800  2 001547   200560 633500                    EPPR3   VLP_WINDOW,,AUTO
         2 001550   200752 453500                    STP3    OPEN+2,,AUTO
         2 001551   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 001552   200003 235100                    LDA     @GETCMD,,AUTO
         2 001553   200756 757100                    STAQ    OPEN+6,,AUTO
         2 001554   200752 634500                    EPPR4   OPEN+2,,AUTO
         2 001555   200755 454500                    STP4    OPEN+5,,AUTO
         2 001556   200005 635500                    EPPR5   P$,,AUTO
         2 001557   200754 455500                    STP5    OPEN+4,,AUTO
         2 001560   200754 630500                    EPPR0   OPEN+4,,AUTO
         2 001561   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001562   000000 701000 xent               TSX1    CXB$WINDOW_OPTS
         2 001563   000000 011000                    NOP     0

      528     8801    3               IF CPSL_PARAM.ERRCODE ~= %NO# AND CPSL_PARAM.FLAGS.VERIFY_ONLY
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:105  

   8801  2 001564   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 001565   000002 235100                    LDA     2,,PR0
         2 001566   001571 600000 2                  TZE     s:8801+5
         2 001567   000001 234100                    SZN     1,,PR0
         2 001570   002265 604000 2                  TMI     LDEVRET
         2 001571   001572 710000 2                  TRA     s:8806

      529     8802    3                 THEN
      530     8803    3                   GOTO LDEVRET ;
      531     8804    3         CASE(ELSE) ;

      532     8805    3        END ;  /* Do Case */

      533     8806    2        IF CPSL_PARAM.ERRCODE ~= %NO#

   8806  2 001572   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 001573   000002 235100                    LDA     2,,PR0
         2 001574   001604 600000 2                  TZE     s:8814

      534     8807    2         THEN
      535     8808    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   8808  2 001575   000001 234100                    SZN     1,,PR0
         2 001576   002234 605000 2                  TPL     s:8941

      536     8809    2               THEN
      537     8810    2                 I = BLK$->P$S.NSUBLKS ;

   8810  2 001577   200006 471500                    LDP1    BLK$,,AUTO
         2 001600   100001 236100                    LDQ     1,,PR1
         2 001601   000022 772000                    QRL     18
         2 001602   200023 756100                    STQ     I,,AUTO
         2 001603   002234 710000 2                  TRA     s:8941

      538     8811    2               ELSE ;
      539     8812    2         ELSE
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:106  
      540     8813    3         DO ;

      541     8814    4        DO CASE(P$->P$B.CODE);

   8814  2 001604   200005 471500                    LDP1    P$,,AUTO
         2 001605   100000 236100                    LDQ     0,,PR1
         2 001606   777777 376007                    ANQ     -1,DL
         2 001607   000025 136007                    SBLQ    21,DL
         2 001610   000050 116007                    CMPQ    40,DL
         2 001611   001613 602006 2                  TNC     s:8814+7,QL
         2 001612   002234 710000 2                  TRA     s:8941
         2 001613   001663 710000 2                  TRA     s:8817
         2 001614   001730 710000 2                  TRA     s:8837
         2 001615   001733 710000 2                  TRA     s:8840
         2 001616   001766 710000 2                  TRA     s:8861
         2 001617   001772 710000 2                  TRA     s:8864
         2 001620   001744 710000 2                  TRA     s:8849
         2 001621   001677 710000 2                  TRA     s:8822
         2 001622   001756 710000 2                  TRA     s:8858
         2 001623   002234 710000 2                  TRA     s:8941
         2 001624   002112 710000 2                  TRA     s:8896
         2 001625   002156 710000 2                  TRA     s:8914
         2 001626   001747 710000 2                  TRA     s:8852
         2 001627   001752 710000 2                  TRA     s:8855
         2 001630   002175 710000 2                  TRA     s:8921
         2 001631   002226 710000 2                  TRA     s:8935
         2 001632   002052 710000 2                  TRA     s:8882
         2 001633   002212 710000 2                  TRA     s:8928
         2 001634   001741 710000 2                  TRA     s:8846
         2 001635   002142 710000 2                  TRA     s:8907
         2 001636   001736 710000 2                  TRA     s:8843
         2 001637   002063 710000 2                  TRA     s:8886
         2 001640   002076 710000 2                  TRA     s:8890
         2 001641   002103 710000 2                  TRA     s:8893
         2 001642   002234 710000 2                  TRA     s:8941
         2 001643   002234 710000 2                  TRA     s:8941
         2 001644   002234 710000 2                  TRA     s:8941
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:107  
         2 001645   001670 710000 2                  TRA     s:8820
         2 001646   002004 710000 2                  TRA     s:8870
         2 001647   002001 710000 2                  TRA     s:8867
         2 001650   002115 710000 2                  TRA     s:8899
         2 001651   002231 710000 2                  TRA     s:8938
         2 001652   002234 710000 2                  TRA     s:8941
         2 001653   002234 710000 2                  TRA     s:8941
         2 001654   002234 710000 2                  TRA     s:8941
         2 001655   002234 710000 2                  TRA     s:8941
         2 001656   002234 710000 2                  TRA     s:8941
         2 001657   002234 710000 2                  TRA     s:8941
         2 001660   002234 710000 2                  TRA     s:8941
         2 001661   002234 710000 2                  TRA     s:8941
         2 001662   002047 710000 2                  TRA     s:8879

      542     8815        /**/
      543     8816    4         CASE(LD_ALL);

      544     8817    4           FPT_LDEV.V.STREAMNAME#='ALL';

   8817  2 001663   000174 236000 1                  LDQ     CONSTCLS+30
         2 001664   000013 376000 3                  ANQ     11
         2 001665   000040 276007                    ORQ     32,DL
         2 001666   200176 756100                    STQ     FPT_LDEV+14,,AUTO
         2 001667   002234 710000 2                  TRA     s:8941

      545     8818        /**/
      546     8819    4         CASE(LD_STNAME);

      547     8820    4           FPT_LDEV.V.STREAMNAME#=P$->P$S.TEXT;

   8820  2 001670   100004 236100                    LDQ     4,,PR1
         2 001671   000033 772000                    QRL     27
         2 001672   000000 620006                    EAX0    0,QL
         2 001673   040100 100540                    MLR     fill='040'O
         2 001674   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 001675   200176 000004                    ADSC9   FPT_LDEV+14,,AUTO        cn=0,n=4
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:108  
         2 001676   002234 710000 2                  TRA     s:8941

      548     8821    4         CASE(LD_FID);

      549     8822    4           CALL SETUP_FID(P$->P$S)    ALTRET(E_LDEV);

   8822  2 001677   200005 236100                    LDQ     P$,,AUTO
         2 001700   200615 756100                    STQ     JOBSTATS_CRITERIA+21,,AUTO
         2 001701   003775 701000 2                  TSX1    SETUP_FID
         2 001702   002266 702000 2                  TSX2    E_LDEV

      550     8823    4           IF FID_RESULTS.RES

   8823  2 001703   200302 236100                    LDQ     FID_RESULTS,,AUTO
         2 001704   004000 316003                    CANQ    2048,DU
         2 001705   001710 600000 2                  TZE     s:8827

      551     8824    4              THEN
      552     8825    4                 FPT_LDEV.V.DEV# = FID_RES;

   8825  2 001706   200014 220100                    LDX0    FID_RES,,AUTO
         2 001707   200177 440100                    SXL0    FPT_LDEV+15,,AUTO

      553     8826    5                 DO ;

      554     8827    5                   FPT_LDEV.V.DEV# = FID_RES;

   8827  2 001710   200014 220100                    LDX0    FID_RES,,AUTO
         2 001711   200177 440100                    SXL0    FPT_LDEV+15,,AUTO

      555     8828    5                   IF SUBSTR(FID_RES,0,2) = 'UC'

   8828  2 001712   000176 100000 1                  CMPX0   CONSTCLS+32
         2 001713   001717 601000 2                  TNZ     s:8832

      556     8829    5                     THEN
      557     8830    5                       FPT_LDEV.V.FRMSTRM# = SUBSTR(FID_RES,2,2) ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:109  

   8830  2 001714   200014 236100                    LDQ     FID_RES,,AUTO
         2 001715   000011 736000                    QLS     9
         2 001716   200203 552130                    STBQ    FPT_LDEV+19,'30'O,AUTO

      558     8831    5                 END ;

      559     8832    4           IF FID_RESULTS.WSN

   8832  2 001717   200302 236100                    LDQ     FID_RESULTS,,AUTO
         2 001720   020000 316003                    CANQ    8192,DU
         2 001721   002234 600000 2                  TZE     s:8941

      560     8833    4              THEN
      561     8834    4                 FPT_LDEV.WSN_ = VECTOR(FID_WSN);

   8834  2 001722   000005 235000 3                  LDA     5
         2 001723   200752 452500                    STP2    OPEN+2,,AUTO
         2 001724   200752 236100                    LDQ     OPEN+2,,AUTO
         2 001725   000534 036003                    ADLQ    348,DU
         2 001726   200166 757100                    STAQ    FPT_LDEV+6,,AUTO
         2 001727   002234 710000 2                  TRA     s:8941

      562     8835        /**/
      563     8836    4         CASE(LD_CONCUR);

      564     8837    4           FPT_LDEV.V.CONCURR# = %YES#;

   8837  2 001730   002000 236003                    LDQ     1024,DU
         2 001731   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO
         2 001732   002234 710000 2                  TRA     s:8941

      565     8838        /**/
      566     8839    4         CASE(LD_CONT);

      567     8840    4           FPT_LDEV.V.CONTINUE# = %YES#;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:110  
   8840  2 001733   400000 236003                    LDQ     -131072,DU
         2 001734   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO
         2 001735   002234 710000 2                  TRA     s:8941

      568     8841        /**/
      569     8842    4         CASE(LD_SCRUB);

      570     8843    4           FPT_LDEV.V.SCRUB# = %YES#;

   8843  2 001736   200000 236003                    LDQ     65536,DU
         2 001737   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO
         2 001740   002234 710000 2                  TRA     s:8941

      571     8844        /**/
      572     8845    4         CASE(LD_REM);

      573     8846    4           FPT_LDEV.V.REMOVE# = %YES#;

   8846  2 001741   100000 236003                    LDQ     32768,DU
         2 001742   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO
         2 001743   002234 710000 2                  TRA     s:8941

      574     8847        /**/
      575     8848    4         CASE(LD_ERASE);

      576     8849    4           FPT_LDEV.V.DELETE# = %YES#;

   8849  2 001744   040000 236003                    LDQ     16384,DU
         2 001745   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO
         2 001746   002234 710000 2                  TRA     s:8941

      577     8850        /**/
      578     8851    4         CASE(LD_HOLD);

      579     8852    4           FPT_LDEV.V.HOLD# = %YES#;

   8852  2 001747   001000 236003                    LDQ     512,DU
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:111  
         2 001750   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO
         2 001751   002234 710000 2                  TRA     s:8941

      580     8853        /**/
      581     8854    4         CASE(LD_HOLDCOPIES);

      582     8855    4           FPT_LDEV.V.HOLDCOPIES# = TEMP;

   8855  2 001752   200026 236100                    LDQ     TEMP,,AUTO
         2 001753   000022 736000                    QLS     18
         2 001754   200200 552120                    STBQ    FPT_LDEV+16,'20'O,AUTO
         2 001755   002234 710000 2                  TRA     s:8941

      583     8856        /**/
      584     8857    4         CASE(LD_FORM);

      585     8858    4           FPT_LDEV.FORM_ = VECTOR(P$->P$S.TEXT);

   8858  2 001756   100004 236100                    LDQ     4,,PR1
         2 001757   000033 772000                    QRL     27
         2 001760   000064 737000                    LLS     52
         2 001761   000140 135007                    SBLA    96,DL
         2 001762   200005 236100                    LDQ     P$,,AUTO
         2 001763   000014 036000 3                  ADLQ    12
         2 001764   200170 757100                    STAQ    FPT_LDEV+8,,AUTO
         2 001765   002234 710000 2                  TRA     s:8941

      586     8859        /**/
      587     8860    4         CASE(LD_COPY);

      588     8861    4           FPT_LDEV.V.COPIES# = TEMP;

   8861  2 001766   200026 236100                    LDQ     TEMP,,AUTO
         2 001767   000022 736000                    QLS     18
         2 001770   200177 552120                    STBQ    FPT_LDEV+15,'20'O,AUTO
         2 001771   002234 710000 2                  TRA     s:8941

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:112  
      589     8862        /**/
      590     8863    4         CASE(LD_DVFC);

      591     8864    4           FPT_LDEV.V.DVFC# = P$->P$S.TEXT;

   8864  2 001772   100004 236100                    LDQ     4,,PR1
         2 001773   000033 772000                    QRL     27
         2 001774   000000 620006                    EAX0    0,QL
         2 001775   040100 100540                    MLR     fill='040'O
         2 001776   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 001777   200200 000001                    ADSC9   FPT_LDEV+16,,AUTO        cn=0,n=1
         2 002000   002234 710000 2                  TRA     s:8941

      592     8865        /**/
      593     8866    4         CASE(LD_TABS_NO);

      594     8867    4           FPT_LDEV.TAB_ = VECTOR(ERASE);

   8867  2 002001   000016 237000 3                  LDAQ    14
         2 002002   200162 757100                    STAQ    FPT_LDEV+2,,AUTO
         2 002003   002234 710000 2                  TRA     s:8941

      595     8868        /**/
      596     8869    4         CASE(LD_TABS);

      597     8870    4           J = 0;

   8870  2 002004   200024 450100                    STZ     J,,AUTO

      598     8871    5           DO WHILE(J < P$->P$B.NSUBLKS);

   8871  2 002005   100001 236100                    LDQ     1,,PR1
         2 002006   000022 772000                    QRL     18
         2 002007   200024 116100                    CMPQ    J,,AUTO
         2 002010   002041 604400 2                  TMOZ    s:8876

      599     8872    5              CALL CXX$LDEV(P$->P$B.SUBLK$(J)->P$S,GETCMD,CPSL_PARAM,TEMP);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:113  

   8872  2 002011   200005 470500                    LDP0    P$,,AUTO
         2 002012   200024 720100                    LXL0    J,,AUTO
         2 002013   000003 471510                    LDP1    3,X0,PR0
         2 002014   200026 633500                    EPPR3   TEMP,,AUTO
         2 002015   200755 453500                    STP3    OPEN+5,,AUTO
         2 002016   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002017   200754 756100                    STQ     OPEN+4,,AUTO
         2 002020   200003 236100                    LDQ     @GETCMD,,AUTO
         2 002021   200753 756100                    STQ     OPEN+3,,AUTO
         2 002022   200752 451500                    STP1    OPEN+2,,AUTO
         2 002023   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002024   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002025   000000 701000 xent               TSX1    CXX$LDEV
         2 002026   000000 011000                    NOP     0

      600     8873    5              VLP_TABS.TABS#(J) = TEMP;

   8873  2 002027   200024 235100                    LDA     J,,AUTO
         2 002030   000105 101500                    MRL     fill='000'O
         2 002031   200026 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         2 002032   200536 200001                    ADSC9   VLP_TABS,A,AUTO          cn=1,n=1

      601     8874    5              J = J + 1;

   8874  2 002033   200024 054100                    AOS     J,,AUTO

      602     8875    5           END;

   8875  2 002034   200005 470500                    LDP0    P$,,AUTO
         2 002035   000001 236100                    LDQ     1,,PR0
         2 002036   000022 772000                    QRL     18
         2 002037   200024 116100                    CMPQ    J,,AUTO
         2 002040   002011 605400 2                  TPNZ    s:8872

      603     8876    4           FPT_LDEV.TAB_ = VECTOR(VLP_TABS);

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:114  
   8876  2 002041   000004 235000 3                  LDA     4
         2 002042   200752 452500                    STP2    OPEN+2,,AUTO
         2 002043   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002044   000536 036003                    ADLQ    350,DU
         2 002045   200162 757100                    STAQ    FPT_LDEV+2,,AUTO
         2 002046   002234 710000 2                  TRA     s:8941

      604     8877        /**/
      605     8878    4         CASE(LD_LOGON);

      606     8879    4           GOT_LOGON_OPTION = %YES# ;

   8879  2 002047   400000 236003                    LDQ     -131072,DU
         2 002050   200017 756100                    STQ     GOT_LOGON_OPTION,,AUTO
         2 002051   002234 710000 2                  TRA     s:8941

      607     8880        /**/
      608     8881    4         CASE(LD_MARGIN);

      609     8882    4           VLP_TABS.MARGIN# = TEMP;

   8882  2 002052   200026 236100                    LDQ     TEMP,,AUTO
         2 002053   000033 736000                    QLS     27
         2 002054   200536 552140                    STBQ    VLP_TABS,'40'O,AUTO

      610     8883    4           FPT_LDEV.TAB_ = VECTOR(VLP_TABS);

   8883  2 002055   000004 235000 3                  LDA     4
         2 002056   200752 452500                    STP2    OPEN+2,,AUTO
         2 002057   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002060   000536 036003                    ADLQ    350,DU
         2 002061   200162 757100                    STAQ    FPT_LDEV+2,,AUTO
         2 002062   002234 710000 2                  TRA     s:8941

      611     8884        /**/
      612     8885    4         CASE(LD_SEQ);

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:115  
      613     8886    4           FPT_LDEV.V.SEQ# = %YES#;

   8886  2 002063   200201 236100                    LDQ     FPT_LDEV+17,,AUTO
         2 002064   000015 376000 3                  ANQ     13
         2 002065   400000 276007                    ORQ     -131072,DL
         2 002066   200201 756100                    STQ     FPT_LDEV+17,,AUTO

      614     8887    4           FPT_LDEV.V.SEQID# = P$->P$S.TEXT;

   8887  2 002067   100004 236100                    LDQ     4,,PR1
         2 002070   000033 772000                    QRL     27
         2 002071   000000 620006                    EAX0    0,QL
         2 002072   040100 100540                    MLR     fill='040'O
         2 002073   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 002074   200202 000004                    ADSC9   FPT_LDEV+18,,AUTO        cn=0,n=4
         2 002075   002234 710000 2                  TRA     s:8941

      615     8888        /**/
      616     8889    4         CASE(LD_SEQCOL);

      617     8890    4           FPT_LDEV.V.SEQCOL# = TEMP;

   8890  2 002076   200026 236100                    LDQ     TEMP,,AUTO
         2 002077   200201 676100                    ERQ     FPT_LDEV+17,,AUTO
         2 002100   000377 376007                    ANQ     255,DL
         2 002101   200201 656100                    ERSQ    FPT_LDEV+17,,AUTO
         2 002102   002234 710000 2                  TRA     s:8941

      618     8891        /**/
      619     8892    4         CASE(LD_SEQID);

      620     8893    4           FPT_LDEV.V.SEQID# = P$ -> P$S.TEXT;

   8893  2 002103   100004 236100                    LDQ     4,,PR1
         2 002104   000033 772000                    QRL     27
         2 002105   000000 620006                    EAX0    0,QL
         2 002106   040100 100540                    MLR     fill='040'O
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:116  
         2 002107   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 002110   200202 000004                    ADSC9   FPT_LDEV+18,,AUTO        cn=0,n=4
         2 002111   002234 710000 2                  TRA     s:8941

      621     8894        /**/
      622     8895    4         CASE(LD_HEAD_NO);

      623     8896    4           FPT_LDEV.HDR_ = VECTOR(ERASE);

   8896  2 002112   000016 237000 3                  LDAQ    14
         2 002113   200164 757100                    STAQ    FPT_LDEV+4,,AUTO
         2 002114   002234 710000 2                  TRA     s:8941

      624     8897        /**/
      625     8898    4         CASE(LD_TITLE);

      626     8899    4           IF NEED_LDEV_HDR

   8899  2 002115   200021 234100                    SZN     NEED_LDEV_HDR,,AUTO
         2 002116   002121 605000 2                  TPL     s:8902

      627     8900    4             THEN
      628     8901    4               CALL GET_LDEV_HDR;

   8901  2 002117   004663 701000 2                  TSX1    GET_LDEV_HDR
         2 002120   000000 011000                    NOP     0

      629     8902    4           VLP_HDR.TITL.L# = P$ -> P$S.COUNT;

   8902  2 002121   200005 470500                    LDP0    P$,,AUTO
         2 002122   000004 236100                    LDQ     4,,PR0
         2 002123   200315 552140                    STBQ    VLP_HDR+1,'40'O,AUTO

      630     8903    4           VLP_HDR.TITL.TITLE# = SUBSTR(P$ -> P$S.TEXT,0,VLP_HDR.TITL.L#);

   8903  2 002124   000004 236100                    LDQ     4,,PR0
         2 002125   000033 772000                    QRL     27
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:117  
         2 002126   200315 236100                    LDQ     VLP_HDR+1,,AUTO
         2 002127   000033 772000                    QRL     27
         2 002130   000000 620006                    EAX0    0,QL
         2 002131   040100 100540                    MLR     fill='040'O
         2 002132   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         2 002133   200315 200777                    ADSC9   VLP_HDR+1,,AUTO          cn=1,n=511

      631     8904    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);

   8904  2 002134   000020 235000 3                  LDA     16
         2 002135   200752 452500                    STP2    OPEN+2,,AUTO
         2 002136   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002137   000314 036003                    ADLQ    204,DU
         2 002140   200164 757100                    STAQ    FPT_LDEV+4,,AUTO
         2 002141   002234 710000 2                  TRA     s:8941

      632     8905        /**/
      633     8906    4         CASE(LD_RESET);

      634     8907    4           IF NEED_LDEV_HDR

   8907  2 002142   200021 234100                    SZN     NEED_LDEV_HDR,,AUTO
         2 002143   002146 605000 2                  TPL     s:8910

      635     8908    4             THEN
      636     8909    4               CALL GET_LDEV_HDR;

   8909  2 002144   004663 701000 2                  TSX1    GET_LDEV_HDR
         2 002145   000000 011000                    NOP     0

      637     8910    4           VLP_HDR.CTL.RESETPAGE# = %YES#;

   8910  2 002146   001000 236003                    LDQ     512,DU
         2 002147   200314 256100                    ORSQ    VLP_HDR,,AUTO

      638     8911    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:118  
   8911  2 002150   000020 235000 3                  LDA     16
         2 002151   200752 452500                    STP2    OPEN+2,,AUTO
         2 002152   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002153   000314 036003                    ADLQ    204,DU
         2 002154   200164 757100                    STAQ    FPT_LDEV+4,,AUTO
         2 002155   002234 710000 2                  TRA     s:8941

      639     8912        /**/
      640     8913    4         CASE(LD_HEIGHT);

      641     8914    4           IF NEED_LDEV_HDR

   8914  2 002156   200021 234100                    SZN     NEED_LDEV_HDR,,AUTO
         2 002157   002162 605000 2                  TPL     s:8917

      642     8915    4             THEN
      643     8916    4               CALL GET_LDEV_HDR;

   8916  2 002160   004663 701000 2                  TSX1    GET_LDEV_HDR
         2 002161   000000 011000                    NOP     0

      644     8917    4           VLP_HDR.CTL.HEADERHEIGHT# = TEMP;

   8917  2 002162   200026 236100                    LDQ     TEMP,,AUTO
         2 002163   000022 736000                    QLS     18
         2 002164   200314 676100                    ERQ     VLP_HDR,,AUTO
         2 002165   000017 376003                    ANQ     15,DU
         2 002166   200314 656100                    ERSQ    VLP_HDR,,AUTO

      645     8918    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);

   8918  2 002167   000020 235000 3                  LDA     16
         2 002170   200752 452500                    STP2    OPEN+2,,AUTO
         2 002171   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002172   000314 036003                    ADLQ    204,DU
         2 002173   200164 757100                    STAQ    FPT_LDEV+4,,AUTO
         2 002174   002234 710000 2                  TRA     s:8941
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:119  

      646     8919        /**/
      647     8920    4         CASE(LD_INDENT);

      648     8921    4           IF NEED_LDEV_HDR

   8921  2 002175   200021 234100                    SZN     NEED_LDEV_HDR,,AUTO
         2 002176   002201 605000 2                  TPL     s:8924

      649     8922    4             THEN
      650     8923    4               CALL GET_LDEV_HDR;

   8923  2 002177   004663 701000 2                  TSX1    GET_LDEV_HDR
         2 002200   000000 011000                    NOP     0

      651     8924    4           VLP_HDR.CTL.INDENT# = TEMP;

   8924  2 002201   200026 236100                    LDQ     TEMP,,AUTO
         2 002202   000011 736000                    QLS     9
         2 002203   200314 552110                    STBQ    VLP_HDR,'10'O,AUTO

      652     8925    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);

   8925  2 002204   000020 235000 3                  LDA     16
         2 002205   200752 452500                    STP2    OPEN+2,,AUTO
         2 002206   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002207   000314 036003                    ADLQ    204,DU
         2 002210   200164 757100                    STAQ    FPT_LDEV+4,,AUTO
         2 002211   002234 710000 2                  TRA     s:8941

      653     8926        /**/
      654     8927    4         CASE(LD_PAGE);

      655     8928    4           IF NEED_LDEV_HDR

   8928  2 002212   200021 234100                    SZN     NEED_LDEV_HDR,,AUTO
         2 002213   002216 605000 2                  TPL     s:8931
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:120  

      656     8929    4             THEN
      657     8930    4               CALL GET_LDEV_HDR;

   8930  2 002214   004663 701000 2                  TSX1    GET_LDEV_HDR
         2 002215   000000 011000                    NOP     0

      658     8931    4           VLP_HDR.CTL.COUNT# = TEMP;

   8931  2 002216   200026 236100                    LDQ     TEMP,,AUTO
         2 002217   200314 552104                    STBQ    VLP_HDR,'04'O,AUTO

      659     8932    4           FPT_LDEV.HDR_ = VECTOR(VLP_HDR);

   8932  2 002220   000020 235000 3                  LDA     16
         2 002221   200752 452500                    STP2    OPEN+2,,AUTO
         2 002222   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002223   000314 036003                    ADLQ    204,DU
         2 002224   200164 757100                    STAQ    FPT_LDEV+4,,AUTO
         2 002225   002234 710000 2                  TRA     s:8941

      660     8933        /**/
      661     8934    4         CASE(LD_LINES);

      662     8935    4           FPT_LDEV.V.LINES# = TEMP;

   8935  2 002226   200026 720100                    LXL0    TEMP,,AUTO
         2 002227   200200 440100                    SXL0    FPT_LDEV+16,,AUTO
         2 002230   002234 710000 2                  TRA     s:8941

      663     8936        /**/
      664     8937    4         CASE(LD_WIDTH);

      665     8938    4           FPT_LDEV.V.WIDTH# = TEMP;

   8938  2 002231   200026 236100                    LDQ     TEMP,,AUTO
         2 002232   000033 736000                    QLS     27
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:121  
         2 002233   200203 552140                    STBQ    FPT_LDEV+19,'40'O,AUTO

      666     8939    4         END;

      667     8940    3         END;  /* Else Do */

      668     8941    2        I = I + 1;

   8941  2 002234   200023 054100                    AOS     I,,AUTO

      669     8942    2     END;

   8942  2 002235   200006 470500                    LDP0    BLK$,,AUTO
         2 002236   000001 236100                    LDQ     1,,PR0
         2 002237   000022 772000                    QRL     18
         2 002240   200023 116100                    CMPQ    I,,AUTO
         2 002241   000754 605400 2                  TPNZ    s:8750

      670     8943        /**/
      671     8944    1     IF NOT (CPSL_PARAM.ERRCODE OR CPSL_PARAM.FLAGS.VERIFY_ONLY)

   8944  2 002242   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 002243   000002 235100                    LDA     2,,PR0
         2 002244   002265 601000 2                  TNZ     LDEVRET
         2 002245   000001 234100                    SZN     1,,PR0
         2 002246   002265 604000 2                  TMI     LDEVRET

      672     8945    1         THEN
      673     8946    2             DO ;

      674     8947    2               CALL M$LDEV(FPT_LDEV) ALTRET(E_LDEV);

   8947  2 002247   200160 630500                    EPPR0   FPT_LDEV,,AUTO
         2 002250   460004 713400                    CLIMB   alt,+24580
         2 002251   403000 401760                    pmme    nvectors=7
         2 002252   002266 702000 2                  TSX2    E_LDEV

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:122  
      675     8948    2               IF GOT_LOGON_OPTION

   8948  2 002253   200017 234100                    SZN     GOT_LOGON_OPTION,,AUTO
         2 002254   002265 605000 2                  TPL     LDEVRET

      676     8949    2                 THEN
      677     8950    3                   DO ;

      678     8951    3                     FPT_LDEV.V.LOGON# = %YES# ;

   8951  2 002255   020000 236003                    LDQ     8192,DU
         2 002256   200177 256100                    ORSQ    FPT_LDEV+15,,AUTO

      679     8952    3                     FPT_LDEV.V.FRMSTRM# = ' ' ;

   8952  2 002257   000021 236000 3                  LDQ     17
         2 002260   200203 552130                    STBQ    FPT_LDEV+19,'30'O,AUTO

      680     8953    3                     CALL M$LDEV(FPT_LDEV) ALTRET(E_LDEV) ;

   8953  2 002261   200160 630500                    EPPR0   FPT_LDEV,,AUTO
         2 002262   460004 713400                    CLIMB   alt,+24580
         2 002263   403000 401760                    pmme    nvectors=7
         2 002264   002266 702000 2                  TSX2    E_LDEV

      681     8954    3                   END ; /* Then Do */

      682     8955    2               END ; /* Then Do */

      683     8956    1   LDEVRET:
      684     8957    1     RETURN;

   8957  2 002265   000000 702200 xent  LDEVRET      TSX2  ! X66_ARET

      685     8958
      686     8959    1   E_LDEV:
      687     8960    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:123  

   8960  2 002266   000000 470400 xsym  E_LDEV       LDP0    B$TCB$
         2 002267   000000 471500                    LDP1    0,,PR0
         2 002270   100102 236100                    LDQ     66,,PR1
         2 002271   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 002272   300002 756100                    STQ     2,,PR3

      688     8961    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   8961  2 002273   000011 236000 3                  LDQ     9
         2 002274   300001 356100                    ANSQ    1,,PR3

      689     8962    1     GOTO LDEVRET ;

   8962  2 002275   002265 710000 2                  TRA     LDEVRET

      690     8963        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:124  
      691     8964        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:125  
      692     8965        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:126  
      693     8966        /*F*    NAME:    CXB$PRINT
      694     8967                PURPOSE:    To process the PRINT command in the CPSL.
      695     8968                REFERENCE:  Programmer's Reference Manual
      696     8969        */
      697     8970    1   CXB$PRINT:
      698     8971    1     ENTRY(GETCMD, CPSL_PARAM) ;

   8971  2 002276   000000 700200 xent  CXB$PRINT    TSX0  ! X66_AUTO_2
         2 002277   000770 000002                    ZERO    504,2

      699     8972        /**/
      700     8973    1     BLK$ = GETCMD.OUT$;

   8973  2 002300   200003 470500                    LDP0    @GETCMD,,AUTO
         2 002301   000001 236100                    LDQ     1,,PR0
         2 002302   200006 756100                    STQ     BLK$,,AUTO

      701     8974    1     FPT_LDEV = CPSL_CFPT_LDEV;

   8974  2 002303   000100 100400                    MLR     fill='000'O
         2 002304   000000 000120 xsym               ADSC9   CPSL_CFPT_LDEV           cn=0,n=80
         2 002305   200160 000120                    ADSC9   FPT_LDEV,,AUTO           cn=0,n=80

      702     8975    1     FPT_LDEV.V_ = VECTOR(FPT_LDEV.V);

   8975  2 002306   000012 235000 3                  LDA     10
         2 002307   200752 452500                    STP2    OPEN+2,,AUTO
         2 002310   200752 236100                    LDQ     OPEN+2,,AUTO
         2 002311   000176 036003                    ADLQ    126,DU
         2 002312   200160 757100                    STAQ    FPT_LDEV,,AUTO

      703     8976    1     IF BLK$->P$B.NSUBLKS = 0 AND NOT CPSL_PARAM.FLAGS.VERIFY_ONLY

   8976  2 002313   200006 471500                    LDP1    BLK$,,AUTO
         2 002314   100001 220100                    LDX0    1,,PR1
         2 002315   002332 601000 2                  TNZ     s:8983
         2 002316   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:127  
         2 002317   300001 234100                    SZN     1,,PR3
         2 002320   002332 604000 2                  TMI     s:8983

      704     8977    1        THEN
      705     8978    2           DO;

      706     8979    2              FPT_LDEV.V.STREAMNAME# = 'ALL';

   8979  2 002321   000174 236000 1                  LDQ     CONSTCLS+30
         2 002322   000013 376000 3                  ANQ     11
         2 002323   000040 276007                    ORQ     32,DL
         2 002324   200176 756100                    STQ     FPT_LDEV+14,,AUTO

      707     8980    2              CALL M$LDEV(FPT_LDEV) ALTRET(E_PRINT);

   8980  2 002325   200160 630500                    EPPR0   FPT_LDEV,,AUTO
         2 002326   460004 713400                    CLIMB   alt,+24580
         2 002327   403000 401760                    pmme    nvectors=7
         2 002330   002424 702000 2                  TSX2    E_PRINT

      708     8981    2              RETURN;

   8981  2 002331   000000 702200 xent               TSX2  ! X66_ARET

      709     8982    2           END;
      710     8983    1     I = 0;

   8983  2 002332   200023 450100                    STZ     I,,AUTO

      711     8984    2     DO WHILE(I < BLK$->P$B.NSUBLKS);

   8984  2 002333   100001 236100                    LDQ     1,,PR1
         2 002334   000022 772000                    QRL     18
         2 002335   200023 116100                    CMPQ    I,,AUTO
         2 002336   002423 604400 2                  TMOZ    PRINTRET

      712     8985    2        CALL CXX$LDEV(BLK$ -> P$B.SUBLK$(I) -> P$B, GETCMD, CPSL_PARAM) ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:128  

   8985  2 002337   200006 470500                    LDP0    BLK$,,AUTO
         2 002340   200023 720100                    LXL0    I,,AUTO
         2 002341   000003 471510                    LDP1    3,X0,PR0
         2 002342   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002343   200754 756100                    STQ     OPEN+4,,AUTO
         2 002344   200003 236100                    LDQ     @GETCMD,,AUTO
         2 002345   200753 756100                    STQ     OPEN+3,,AUTO
         2 002346   200752 451500                    STP1    OPEN+2,,AUTO
         2 002347   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002350   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002351   000000 701000 xent               TSX1    CXX$LDEV
         2 002352   000000 011000                    NOP     0

      713     8986    2        IF CPSL_PARAM.ERRCODE = %NO#

   8986  2 002353   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 002354   000002 235100                    LDA     2,,PR0
         2 002355   002407 601000 2                  TNZ     s:8999

      714     8987    2         THEN
      715     8988    3           DO ;

      716     8989    3             IF BLK$->P$B.SUBLK$(0)->P$B.CODE = LD_ALL

   8989  2 002356   200006 471500                    LDP1    BLK$,,AUTO
         2 002357   100003 473500                    LDP3    3,,PR1
         2 002360   300000 720100                    LXL0    0,,PR3
         2 002361   000025 100003                    CMPX0   21,DU
         2 002362   002370 601000 2                  TNZ     s:8993

      717     8990    3               THEN
      718     8991    3                 FPT_LDEV.V.STREAMNAME# = 'ALL';

   8991  2 002363   000174 236000 1                  LDQ     CONSTCLS+30
         2 002364   000013 376000 3                  ANQ     11
         2 002365   000040 276007                    ORQ     32,DL
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:129  
         2 002366   200176 756100                    STQ     FPT_LDEV+14,,AUTO
         2 002367   002400 710000 2                  TRA     s:8994

      719     8992    3               ELSE
      720     8993    3                 FPT_LDEV.V.STREAMNAME# = BLK$ -> P$B.SUBLK$(I) -> P$S.TEXT;

   8993  2 002370   200023 721100                    LXL1    I,,AUTO
         2 002371   100003 474511                    LDP4    3,X1,PR1
         2 002372   400004 236100                    LDQ     4,,PR4
         2 002373   000033 772000                    QRL     27
         2 002374   000000 622006                    EAX2    0,QL
         2 002375   040100 100540                    MLR     fill='040'O
         2 002376   400004 200012                    ADSC9   4,,PR4                   cn=1,n=*X2
         2 002377   200176 000004                    ADSC9   FPT_LDEV+14,,AUTO        cn=0,n=4

      721     8994    3             IF NOT CPSL_PARAM.FLAGS.VERIFY_ONLY

   8994  2 002400   000001 234100                    SZN     1,,PR0
         2 002401   002415 604000 2                  TMI     s:9002

      722     8995    3               THEN
      723     8996    3                 CALL M$LDEV(FPT_LDEV) ALTRET(E_PRINT);

   8996  2 002402   200160 630500                    EPPR0   FPT_LDEV,,AUTO
         2 002403   460004 713400                    CLIMB   alt,+24580
         2 002404   403000 401760                    pmme    nvectors=7
         2 002405   002424 702000 2                  TSX2    E_PRINT

      724     8997    3           END ; /* Then Do */

   8997  2 002406   002415 710000 2                  TRA     s:9002

      725     8998    2         ELSE
      726     8999    2             IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   8999  2 002407   000001 234100                    SZN     1,,PR0
         2 002410   002415 605000 2                  TPL     s:9002
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:130  

      727     9000    2               THEN
      728     9001    2                 I = BLK$->P$B.NSUBLKS ;

   9001  2 002411   200006 471500                    LDP1    BLK$,,AUTO
         2 002412   100001 236100                    LDQ     1,,PR1
         2 002413   000022 772000                    QRL     18
         2 002414   200023 756100                    STQ     I,,AUTO

      729     9002    2        I = I + 1;

   9002  2 002415   200023 054100                    AOS     I,,AUTO

      730     9003    2     END;

   9003  2 002416   200006 470500                    LDP0    BLK$,,AUTO
         2 002417   000001 236100                    LDQ     1,,PR0
         2 002420   000022 772000                    QRL     18
         2 002421   200023 116100                    CMPQ    I,,AUTO
         2 002422   002337 605400 2                  TPNZ    s:8985

      731     9004    1   PRINTRET:
      732     9005    1     RETURN;

   9005  2 002423   000000 702200 xent  PRINTRET     TSX2  ! X66_ARET

      733     9006
      734     9007    1   E_PRINT:
      735     9008    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$->B$ALT.ERR ;

   9008  2 002424   000000 470400 xsym  E_PRINT      LDP0    B$TCB$
         2 002425   000000 471500                    LDP1    0,,PR0
         2 002426   100102 236100                    LDQ     66,,PR1
         2 002427   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 002430   300002 756100                    STQ     2,,PR3

      736     9009    1     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:131  

   9009  2 002431   000011 236000 3                  LDQ     9
         2 002432   300001 356100                    ANSQ    1,,PR3

      737     9010    1     GOTO PRINTRET ;

   9010  2 002433   002423 710000 2                  TRA     PRINTRET

      738     9011        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:132  
      739     9012        /**********************************************************************/
      740     9013        /*F*   NAME:   CXB$RESET
      741     9014               PURPOSE: To process the RESET command
      742     9015               DESCRIPTION: The RESET command resets specified items to
      743     9016                       their system defaults. These items consist of:
      744     9017                       1. Resetting all assigned dcbs
      745     9018                       2. Resetting specific dcb
      746     9019                       3. Resetting specific dcb options
      747     9020               REFERENCE: Programmers Reference Manual
      748     9021        */
      749     9022        /*D*   NAME:   CXB$RESET
      750     9023               CALL:   CALL CXB$RESET (GETCMD, CPSL_PARAM)
      751     9024               INTERFACE: CXB$MDFYAM,CXC$WRITEAM
      752     9025               INPUT:  GETCMD - the CXG$GETCMD parameter.
      753     9026                       CPSL_PARAM - Command Processor Shared Library parameter.
      754     9027                       CPFLAGS1.CP_IQUIT - implied quit flag set or reset
      755     9028                       *A - assign merge file
      756     9029               OUTPUT: *A - updated assign merge record
      757     9030               DESCRIPTION: The RESET command is scanned for the item to be reset.
      758     9031                       If a dcb is specified, using
      759     9032                       the dcb name as a key, the specified assign merge record
      760     9033                       is deleted from the *A file. If no item is specified
      761     9034                       or if the DCBS option is specified, all dcbs are
      762     9035                       deleted from the *A file. Keys in the *A file which
      763     9036                       are not dcb names begin with a null character.
      764     9037                       File extension is reset for the affected DCBS.
      765     9038                       If a dcb with options is specified, the specified
      766     9039                       parameter is reset in the assign merge record for the
      767     9040                       specified dcb.
      768     9041        */
      769     9042        /**********************************************************************/
      770     9043    1   CXB$RESET:
      771     9044    1     ENTRY(GETCMD, CPSL_PARAM) ;

   9044  2 002434   000000 700200 xent  CXB$RESET    TSX0  ! X66_AUTO_2
         2 002435   000770 000002                    ZERO    504,2

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:133  
      772     9045        /**/
      773     9046    1     BLK$ = GETCMD.OUT$;

   9046  2 002436   200003 470500                    LDP0    @GETCMD,,AUTO
         2 002437   000001 236100                    LDQ     1,,PR0
         2 002440   200006 756100                    STQ     BLK$,,AUTO

      774     9047    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   9047  2 002441   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 002442   100001 234100                    SZN     1,,PR1
         2 002443   002462 605000 2                  TPL     s:9057

      775     9048    1         THEN
      776     9049    2             DO ;

      777     9050    2                   CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;

   9050  2 002444   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002445   200756 756100                    STQ     OPEN+6,,AUTO
         2 002446   200003 236100                    LDQ     @GETCMD,,AUTO
         2 002447   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 002450   200754 757100                    STAQ    OPEN+4,,AUTO
         2 002451   200010 633500                    EPPR3   DCB$,,AUTO
         2 002452   200753 453500                    STP3    OPEN+3,,AUTO
         2 002453   200006 634500                    EPPR4   BLK$,,AUTO
         2 002454   200752 454500                    STP4    OPEN+2,,AUTO
         2 002455   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002456   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 002457   000000 701000 xent               TSX1    CXB$MDFYAM
         2 002460   000000 011000                    NOP     0

      778     9051    2               GOTO RESETRET ;

   9051  2 002461   002655 710000 2                  TRA     RESETRET

      779     9052    2             END ; /* Then Do */
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:134  
      780     9053        /*
      781     9054           **** No options after reset infers .... Delete all a/m entries
      782     9055                reset file extension for all dcbs
      783     9056        */
      784     9057    1     IF (BLK$->P$B.NSUBLKS=0)

   9057  2 002462   200006 473500                    LDP3    BLK$,,AUTO
         2 002463   300001 220100                    LDX0    1,,PR3
         2 002464   002470 601000 2                  TNZ     s:9063

      785     9058    1        THEN
      786     9059    2           DO;

      787     9060    2              CALL DELETE_DCBS ALTRET(RESETRET);

   9060  2 002465   004276 701000 2                  TSX1    DELETE_DCBS
         2 002466   002655 702000 2                  TSX2    RESETRET

      788     9061    2              RETURN;

   9061  2 002467   000000 702200 xent               TSX2  ! X66_ARET

      789     9062    2           END;
      790     9063    1     TEMP$=BLK$->P$B.SUBLK$(0);

   9063  2 002470   300003 236100                    LDQ     3,,PR3
         2 002471   200007 756100                    STQ     TEMP$,,AUTO

      791     9064    1   RESET10:
      792     9065    2     DO CASE(TEMP$->P$B.CODE);

   9065  2 002472   200007 474500       RESET10      LDP4    TEMP$,,AUTO
         2 002473   400000 236100                    LDQ     0,,PR4
         2 002474   777777 376007                    ANQ     -1,DL
         2 002475   000020 136007                    SBLQ    16,DL
         2 002476   000002 116007                    CMPQ    2,DL
         2 002477   002501 602006 2                  TNC     RESET10+7,QL
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:135  
         2 002500   002655 710000 2                  TRA     RESETRET
         2 002501   002503 710000 2                  TRA     s:9067
         2 002502   002652 710000 2                  TRA     s:9114

      793     9066    2      CASE(DCBOPT);

      794     9067    2        DCB$=TEMP$->P$B.SUBLK$(0);

   9067  2 002503   400003 236100                    LDQ     3,,PR4
         2 002504   200010 756100                    STQ     DCB$,,AUTO

      795     9068    2        CALL CXB$CHKFORT(DCB$);         /*Cnvrt. If fort type*/

   9068  2 002505   200010 635500                    EPPR5   DCB$,,AUTO
         2 002506   200752 455500                    STP5    OPEN+2,,AUTO
         2 002507   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002510   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002511   000000 701000 xent               TSX1    CXB$CHKFORT
         2 002512   000000 011000                    NOP     0

      796     9069    2        CALL CXX$RESET(TEMP$->P$B,GETCMD,CPSL_PARAM); /* Check for legal name */

   9069  2 002513   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002514   200754 756100                    STQ     OPEN+4,,AUTO
         2 002515   200003 236100                    LDQ     @GETCMD,,AUTO
         2 002516   200007 235100                    LDA     TEMP$,,AUTO
         2 002517   200752 757100                    STAQ    OPEN+2,,AUTO
         2 002520   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002521   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002522   000000 701000 xent               TSX1    CXX$RESET
         2 002523   000000 011000                    NOP     0

      797     9070    2        IF CPSL_PARAM.ERRCODE ~= %NO#

   9070  2 002524   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 002525   000002 235100                    LDA     2,,PR0
         2 002526   002655 601000 2                  TNZ     RESETRET
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:136  

      798     9071    2          THEN
      799     9072    2            EXIT;
      800     9073        /*
      801     9074          **** Check if deleting dcb or just resetting dcb options
      802     9075        */
      803     9076    2        IF (BLK$->P$B.NSUBLKS>1)

   9076  2 002527   200006 471500                    LDP1    BLK$,,AUTO
         2 002530   100001 220100                    LDX0    1,,PR1
         2 002531   000002 100003                    CMPX0   2,DU
         2 002532   002565 602000 2                  TNC     s:9088

      804     9077    2           THEN
      805     9078    3              DO;                       /*Reset options*/

      806     9079    3                 CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;

   9079  2 002533   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002534   200756 756100                    STQ     OPEN+6,,AUTO
         2 002535   200003 236100                    LDQ     @GETCMD,,AUTO
         2 002536   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 002537   200754 757100                    STAQ    OPEN+4,,AUTO
         2 002540   200010 633500                    EPPR3   DCB$,,AUTO
         2 002541   200753 453500                    STP3    OPEN+3,,AUTO
         2 002542   200006 634500                    EPPR4   BLK$,,AUTO
         2 002543   200752 454500                    STP4    OPEN+2,,AUTO
         2 002544   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002545   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 002546   000000 701000 xent               TSX1    CXB$MDFYAM
         2 002547   000000 011000                    NOP     0

      807     9080    3                 IF CPSL_PARAM.ERRCODE ~= %NO#

   9080  2 002550   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 002551   000002 235100                    LDA     2,,PR0
         2 002552   002564 601000 2                  TNZ     s:9084
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:137  

      808     9081    3                   THEN
      809     9082    3                     EXIT;
      810     9083    3                 CALL CXC$WRITEAM(DCB$,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;

   9083  2 002553   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002554   200754 756100                    STQ     OPEN+4,,AUTO
         2 002555   200753 756100                    STQ     OPEN+3,,AUTO
         2 002556   200010 631500                    EPPR1   DCB$,,AUTO
         2 002557   200752 451500                    STP1    OPEN+2,,AUTO
         2 002560   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002561   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002562   000000 701000 xent               TSX1    CXC$WRITEAM
         2 002563   000000 011000                    NOP     0

      811     9084    3              END;

   9084  2 002564   002611 710000 2                  TRA     s:9094

      812     9085        /* ****                                          Delete dcb*/
      813     9086    2           ELSE
      814     9087    3              DO;

      815     9088    3        CALL CXB$DELAM(DCB$,,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;

   9088  2 002565   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002566   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 002567   200754 757100                    STAQ    OPEN+4,,AUTO
         2 002570   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002571   200753 756100                    STQ     OPEN+3,,AUTO
         2 002572   200010 633500                    EPPR3   DCB$,,AUTO
         2 002573   200752 453500                    STP3    OPEN+2,,AUTO
         2 002574   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002575   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002576   000000 701000 xent               TSX1    CXB$DELAM
         2 002577   000000 011000                    NOP     0

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:138  
      816     9089    3                 IF CPSL_PARAM.ERRCODE ~= %NO#

   9089  2 002600   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 002601   000002 235100                    LDA     2,,PR0
         2 002602   002611 601000 2                  TNZ     s:9094

      817     9090    3                    THEN
      818     9091    3                       EXIT;
      819     9092    3                 CALL CXC$RFEXT(DCB$);              /*Reset file extension*/

   9092  2 002603   200010 631500                    EPPR1   DCB$,,AUTO
         2 002604   200752 451500                    STP1    OPEN+2,,AUTO
         2 002605   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002606   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002607   000000 701000 xent               TSX1    CXC$RFEXT
         2 002610   000000 011000                    NOP     0

      820     9093    3              END;

      821     9094    2        IF CPSL_PARAM.ERRCODE ~= %NO#

   9094  2 002611   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 002612   000002 235100                    LDA     2,,PR0
         2 002613   002656 601000 2                  TNZ     RESET20

      822     9095    2             THEN
      823     9096    2               GOTO RESET20 ;
      824     9097        /*
      825     9098          ****     Close M$LL if open. Removes old assignments that were in effect
      826     9099        */
      827     9100    2        IF TEMP$->P$S.TEXT = CPSL_M$LL.TXT

   9100  2 002614   200007 471500                    LDP1    TEMP$,,AUTO
         2 002615   100004 236100                    LDQ     4,,PR1
         2 002616   000033 772000                    QRL     27
         2 002617   000000 620006                    EAX0    0,QL
         2 002620   040000 106540                    CMPC    fill='040'O
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:139  
         2 002621   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 002622   000000 200004 xsym               ADSC9   CPSL_M$LL                cn=1,n=4
         2 002623   002631 601000 2                  TNZ     s:9107

      828     9101    2           THEN
      829     9102    2              CALL CLOSE_DCB(DCB$) ALTRET(RESETRET);

   9102  2 002624   200010 633500                    EPPR3   DCB$,,AUTO
         2 002625   200617 453500                    STP3    DCB$+1,,AUTO
         2 002626   004071 701000 2                  TSX1    CLOSE_DCB
         2 002627   002655 702000 2                  TSX2    RESETRET
         2 002630   002655 710000 2                  TRA     RESETRET

      830     9103        /*
      831     9104         ****    Close M$DO and merge assignment. Removes old assignments that were in effe
              9104        ct
      832     9105        */
      833     9106    2           ELSE
      834     9107    2              IF TEMP$->P$S.TEXT = M$DO_DCB.TXT

   9107  2 002631   040000 106540                    CMPC    fill='040'O
         2 002632   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 002633   000000 200004 1                  ADSC9   M$DO_DCB                 cn=1,n=4
         2 002634   002655 601000 2                  TNZ     RESETRET

      835     9108    2                 THEN
      836     9109    3                    DO;

      837     9110    3                       CALL CLOSE_DCB(ADDR(M$DO_DCB)) ALTRET(RESETRET);

   9110  2 002635   000022 236000 3                  LDQ     18
         2 002636   200760 756100                    STQ     OPEN+8,,AUTO
         2 002637   200760 633500                    EPPR3   OPEN+8,,AUTO
         2 002640   200617 453500                    STP3    DCB$+1,,AUTO
         2 002641   004071 701000 2                  TSX1    CLOSE_DCB
         2 002642   002655 702000 2                  TSX2    RESETRET

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:140  
      838     9111    3                       CALL MERGE_DCB(ADDR(M$DO_DCB)) ALTRET(RESETRET);

   9111  2 002643   000022 236000 3                  LDQ     18
         2 002644   200761 756100                    STQ     OPEN+9,,AUTO
         2 002645   200761 630500                    EPPR0   OPEN+9,,AUTO
         2 002646   200617 450500                    STP0    DCB$+1,,AUTO
         2 002647   004177 701000 2                  TSX1    MERGE_DCB
         2 002650   002655 702000 2                  TSX2    RESETRET

      839     9112    3                    END;

   9112  2 002651   002655 710000 2                  TRA     RESETRET

      840     9113    2      CASE(DCBSOPT);

      841     9114    2        CALL DELETE_DCBS ALTRET(RESETRET);

   9114  2 002652   004276 701000 2                  TSX1    DELETE_DCBS
         2 002653   002655 702000 2                  TSX2    RESETRET
         2 002654   002655 710000 2                  TRA     RESETRET

      842     9115    2      CASE(RGLOBALS);

      843     9116    2      END RESET10;

      844     9117    1   RESETRET:
      845     9118    1     RETURN;

   9118  2 002655   000000 702200 xent  RESETRET     TSX2  ! X66_ARET

      846     9119
      847     9120    1   RESET20:
      848     9121        /*E*       ERROR:   CXB-E$NOASGN-E
      849     9122                   MESSAGE: Dcb isn't assigned
      850     9123                   DESCRIPTION: The user attempted to reset a nonexistant dcb
      851     9124        */
      852     9125    1     ERR_CODE = CPSL_PARAM.ERRCODE ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:141  

   9125  2 002656   000002 236100       RESET20      LDQ     2,,PR0
         2 002657   200546 756100                    STQ     ERR_CODE,,AUTO

      853     9126    1     IF ERR_CODE.ERR# = %E$NOKEY

   9126  2 002660   200546 236100                    LDQ     ERR_CODE,,AUTO
         2 002661   377770 376007                    ANQ     131064,DL
         2 002662   001020 116007                    CMPQ    528,DL
         2 002663   002706 601000 2                  TNZ     s:9140

      854     9127    1        THEN
      855     9128    2           DO;

      856     9129    2              IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG

   9129  2 002664   000001 236100                    LDQ     1,,PR0
         2 002665   200000 316003                    CANQ    65536,DU
         2 002666   002706 601000 2                  TNZ     s:9140

      857     9130    2               THEN
      858     9131    3                 DO ;

      859     9132    3                   GETCMD.ERR_CODE = E_NOASGN ;

   9132  2 002667   000034 236000 1                  LDQ     E_NOASGN
         2 002670   200003 471500                    LDP1    @GETCMD,,AUTO
         2 002671   100010 756100                    STQ     8,,PR1

      860     9133    3                   CPSL_PARAM.ERRCODE = %NO# ;

   9133  2 002672   000002 450100                    STZ     2,,PR0

      861     9134    4                   CALL CXG$ERRMSG (GETCMD) WHENALTRETURN DO;

   9134  2 002673   200003 630500                    EPPR0   @GETCMD,,AUTO
         2 002674   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:142  
         2 002675   000000 701000 xent               TSX1    CXG$ERRMSG
         2 002676   002700 702000 2                  TSX2    s:9135
         2 002677   002706 710000 2                  TRA     s:9140

      862     9135    4                                             CPSL_PARAM.ERRCODE = GETCMD.ERR# ;

   9135  2 002700   200003 470500                    LDP0    @GETCMD,,AUTO
         2 002701   000001 236100                    LDQ     1,,PR0
         2 002702   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 002703   100002 756100                    STQ     2,,PR1

      863     9136    4                                            CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   9136  2 002704   000011 236000 3                  LDQ     9
         2 002705   100001 356100                    ANSQ    1,,PR1

      864     9137    4                                             END ;

      865     9138    3                 END ; /* Then Do */

      866     9139    2           END;

      867     9140    1     GOTO RESETRET;

   9140  2 002706   002655 710000 2                  TRA     RESETRET

      868     9141                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:143  
      869     9142        /**********************************************************************/
      870     9143        /*F*   NAME:   CXB$SET
      871     9144               PURPOSE: To process the SET command.
      872     9145               DESCRIPTION: If a dcb is being set, the command is scanned and
      873     9146                       an assign merge record created or updated for the specified
      874     9147                       dcb in the *A file. The assign merge record is merged
      875     9148                       into the dcb at open time.
      876     9149               REFERENCE: Programmers Reference Manual
      877     9150        */
      878     9151        /*D*   NAME:   CXB$SET
      879     9152               CALL:   CALL CXB$SET (GETCMD, CPSL_PARAM)
      880     9153               INTERFACE: CXB$BLDAM,CXB$MDFYAM,CXC$WRITEAM
      881     9154               INPUT:  GETCMD - the CXG$GETCMD parameter.
      882     9155                       CPSL_PARAM - Command Processor Shared Library parameter.
      883     9156                       *A - contains assign merge records
      884     9157               OUTPUT: *A - new or updated assign merge record for the
      885     9158                       specified dcb
      886     9159               DESCRIPTION: The SET command is processed to the terminator
      887     9160                       after the dcb. If a ',' is encountered, an existing
      888     9161                       assign merge record is updated. Otherwise, a new assign
      889     9162                       merge record is written to the *A file for the specified dcb and
      890     9163                       file extension terminated.
      891     9164                       An existing dcb of the same name will be overwritten. If
      892     9165                       a *A file does not exist, one will be created.
      893     9166        */
      894     9167        /**********************************************************************/
      895     9168    1   CXB$SET:
      896     9169    1     ENTRY(GETCMD, CPSL_PARAM) ;

   9169  2 002707   000000 700200 xent  CXB$SET      TSX0  ! X66_AUTO_2
         2 002710   000770 000002                    ZERO    504,2

      897     9170        /**/
      898     9171    1     BLK$ = GETCMD.OUT$;

   9171  2 002711   200003 470500                    LDP0    @GETCMD,,AUTO
         2 002712   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:144  
         2 002713   200006 756100                    STQ     BLK$,,AUTO

      899     9172        /*
      900     9173                     **** Create-update assign merge record
      901     9174        */
      902     9175                                                /*Perform dcb check*/
      903     9176    1     DCB$=BLK$->P$B.SUBLK$(0)->P$B.SUBLK$(0);

   9176  2 002714   200006 471500                    LDP1    BLK$,,AUTO
         2 002715   100003 473500                    LDP3    3,,PR1
         2 002716   300003 236100                    LDQ     3,,PR3
         2 002717   200010 756100                    STQ     DCB$,,AUTO

      904     9177    1     IF CPSL_PARAM.FLAGS.VERIFY_ONLY

   9177  2 002720   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 002721   300001 234100                    SZN     1,,PR3
         2 002722   002741 605000 2                  TPL     s:9183

      905     9178    1         THEN
      906     9179    2             DO ;

      907     9180    2               CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;

   9180  2 002723   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002724   200756 756100                    STQ     OPEN+6,,AUTO
         2 002725   200003 236100                    LDQ     @GETCMD,,AUTO
         2 002726   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 002727   200754 757100                    STAQ    OPEN+4,,AUTO
         2 002730   200010 634500                    EPPR4   DCB$,,AUTO
         2 002731   200753 454500                    STP4    OPEN+3,,AUTO
         2 002732   200006 635500                    EPPR5   BLK$,,AUTO
         2 002733   200752 455500                    STP5    OPEN+2,,AUTO
         2 002734   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002735   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 002736   000000 701000 xent               TSX1    CXB$MDFYAM
         2 002737   000000 011000                    NOP     0
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:145  

      908     9181    2               GOTO SETRET ;

   9181  2 002740   003124 710000 2                  TRA     SETRET

      909     9182    2             END ; /* Then Do */
      910     9183    1     CPOS = BLK$ -> P$B.SUBLK$(0) -> P$B.CPOS;

   9183  2 002741   100003 474500                    LDP4    3,,PR1
         2 002742   400002 235100                    LDA     2,,PR4
         2 002743   200027 755100                    STA     CPOS,,AUTO

      911     9184    1     CALL CXB$CHKFORT(DCB$);                  /*Cnvrt. If fort type*/

   9184  2 002744   200010 634500                    EPPR4   DCB$,,AUTO
         2 002745   200752 454500                    STP4    OPEN+2,,AUTO
         2 002746   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 002747   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002750   000000 701000 xent               TSX1    CXB$CHKFORT
         2 002751   000000 011000                    NOP     0

      912     9185        /* Check if building new or updating old a/m entry*/
      913     9186    1     IF (BLK$->P$B.SUBLK$(1)->P$B.CODE=FIDOPT)

   9186  2 002752   200006 470500                    LDP0    BLK$,,AUTO
         2 002753   000004 471500                    LDP1    4,,PR0
         2 002754   100000 720100                    LXL0    0,,PR1
         2 002755   000312 100003                    CMPX0   202,DU
         2 002756   003032 601000 2                  TNZ     s:9203

      914     9187    1        THEN
      915     9188    2           DO;

      916     9189    2              FID$=BLK$->P$B.SUBLK$(1)->P$B.SUBLK$(0);

   9189  2 002757   100003 236100                    LDQ     3,,PR1
         2 002760   200011 756100                    STQ     FID$,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:146  

      917     9190    2              CALL CHK_ASGN (CPOS,DCB$,FID$) ALTRET(SETRET);

   9190  2 002761   200011 631500                    EPPR1   FID$,,AUTO
         2 002762   200617 451500                    STP1    DCB$+1,,AUTO
         2 002763   200010 633500                    EPPR3   DCB$,,AUTO
         2 002764   200616 453500                    STP3    DCB#+1,,AUTO
         2 002765   200027 634500                    EPPR4   CPOS,,AUTO
         2 002766   200615 454500                    STP4    JOBSTATS_CRITERIA+21,,AUTO
         2 002767   004512 701000 2                  TSX1    CHK_ASGN
         2 002770   003124 702000 2                  TSX2    SETRET

      918     9191    2              CALL CXB$BLDAM(BLK$,FID$,GETCMD,CPSL_PARAM) ;        /*Bld a/m*/

   9191  2 002771   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 002772   200003 235100                    LDA     @GETCMD,,AUTO
         2 002773   200754 757100                    STAQ    OPEN+4,,AUTO
         2 002774   200011 630500                    EPPR0   FID$,,AUTO
         2 002775   200753 450500                    STP0    OPEN+3,,AUTO
         2 002776   200006 631500                    EPPR1   BLK$,,AUTO
         2 002777   200752 451500                    STP1    OPEN+2,,AUTO
         2 003000   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003001   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 003002   000000 701000 xent               TSX1    CXB$BLDAM
         2 003003   000000 011000                    NOP     0

      919     9192    2              IF CPSL_PARAM.ERRCODE ~= %NO#

   9192  2 003004   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003005   000002 235100                    LDA     2,,PR0
         2 003006   003124 601000 2                  TNZ     SETRET

      920     9193    2               THEN
      921     9194    2                 GOTO SETRET ;
      922     9195    2              CALL CXC$WRITEAM(DCB$,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ; /*Write a/m*/

   9195  2 003007   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:147  
         2 003010   200754 756100                    STQ     OPEN+4,,AUTO
         2 003011   200753 756100                    STQ     OPEN+3,,AUTO
         2 003012   200010 631500                    EPPR1   DCB$,,AUTO
         2 003013   200752 451500                    STP1    OPEN+2,,AUTO
         2 003014   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003015   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003016   000000 701000 xent               TSX1    CXC$WRITEAM
         2 003017   000000 011000                    NOP     0

      923     9196    2               IF CPSL_PARAM.ERRCODE ~= %NO#

   9196  2 003020   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003021   000002 235100                    LDA     2,,PR0
         2 003022   003124 601000 2                  TNZ     SETRET

      924     9197    2                 THEN
      925     9198    2                   GOTO SETRET ;
      926     9199    2              CALL CXC$RFEXT(DCB$);        /*Reset file ext. Bit*/

   9199  2 003023   200010 631500                    EPPR1   DCB$,,AUTO
         2 003024   200752 451500                    STP1    OPEN+2,,AUTO
         2 003025   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003026   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003027   000000 701000 xent               TSX1    CXC$RFEXT
         2 003030   000000 011000                    NOP     0

      927     9200    2           END;

   9200  2 003031   003066 710000 2                  TRA     s:9215

      928     9201    1        ELSE
      929     9202    2           DO;

      930     9203    2              CALL CXB$MDFYAM(BLK$,DCB$,CPSL_PARAM.WORK_DCB#,GETCMD,CPSL_PARAM) ;
              9203                       /*Mdfy a/m*/

   9203  2 003032   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:148  
         2 003033   200756 756100                    STQ     OPEN+6,,AUTO
         2 003034   200003 236100                    LDQ     @GETCMD,,AUTO
         2 003035   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 003036   200754 757100                    STAQ    OPEN+4,,AUTO
         2 003037   200010 631500                    EPPR1   DCB$,,AUTO
         2 003040   200753 451500                    STP1    OPEN+3,,AUTO
         2 003041   200006 633500                    EPPR3   BLK$,,AUTO
         2 003042   200752 453500                    STP3    OPEN+2,,AUTO
         2 003043   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003044   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 003045   000000 701000 xent               TSX1    CXB$MDFYAM
         2 003046   000000 011000                    NOP     0

      931     9204    2              IF CPSL_PARAM.ERRCODE ~= %NO#

   9204  2 003047   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003050   000002 235100                    LDA     2,,PR0
         2 003051   003124 601000 2                  TNZ     SETRET

      932     9205    2               THEN
      933     9206    2                 GOTO SETRET ;
      934     9207    2              CALL CXC$WRITEAM(DCB$,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ; /*Write a/m*/

   9207  2 003052   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 003053   200754 756100                    STQ     OPEN+4,,AUTO
         2 003054   200753 756100                    STQ     OPEN+3,,AUTO
         2 003055   200010 631500                    EPPR1   DCB$,,AUTO
         2 003056   200752 451500                    STP1    OPEN+2,,AUTO
         2 003057   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003060   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003061   000000 701000 xent               TSX1    CXC$WRITEAM
         2 003062   000000 011000                    NOP     0

      935     9208    2              IF CPSL_PARAM.ERRCODE ~= %NO#

   9208  2 003063   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003064   000002 235100                    LDA     2,,PR0
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:149  
         2 003065   003124 601000 2                  TNZ     SETRET

      936     9209    2               THEN
      937     9210    2                 GOTO SETRET ;
      938     9211    2           END;

      939     9212        /*
      940     9213          ****  Close M$LL dcb if open. Permits new assignments to take effect
      941     9214        */
      942     9215    1     IF BLK$->P$B.SUBLK$(0)->P$S.TEXT = CPSL_M$LL.TXT

   9215  2 003066   200006 470500                    LDP0    BLK$,,AUTO
         2 003067   000003 471500                    LDP1    3,,PR0
         2 003070   100004 236100                    LDQ     4,,PR1
         2 003071   000033 772000                    QRL     27
         2 003072   000000 620006                    EAX0    0,QL
         2 003073   040000 106540                    CMPC    fill='040'O
         2 003074   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 003075   000000 200004 xsym               ADSC9   CPSL_M$LL                cn=1,n=4
         2 003076   003104 601000 2                  TNZ     s:9222

      943     9216    1        THEN
      944     9217    1           CALL CLOSE_DCB(DCB$) ALTRET(SETRET);

   9217  2 003077   200010 633500                    EPPR3   DCB$,,AUTO
         2 003100   200617 453500                    STP3    DCB$+1,,AUTO
         2 003101   004071 701000 2                  TSX1    CLOSE_DCB
         2 003102   003124 702000 2                  TSX2    SETRET
         2 003103   003124 710000 2                  TRA     SETRET

      945     9218    1        ELSE
      946     9219        /*
      947     9220          ****  Reopen M$DO permitting new assignments to take effect
      948     9221        */
      949     9222    1           IF BLK$->P$B.SUBLK$(0)->P$S.TEXT = M$DO_DCB.TXT

   9222  2 003104   040000 106540                    CMPC    fill='040'O
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:150  
         2 003105   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 003106   000000 200004 1                  ADSC9   M$DO_DCB                 cn=1,n=4
         2 003107   003124 601000 2                  TNZ     SETRET

      950     9223    1              THEN
      951     9224    2                 DO;

      952     9225    2                    CALL CLOSE_DCB(ADDR(M$DO_DCB)) ALTRET(SETRET);

   9225  2 003110   000022 236000 3                  LDQ     18
         2 003111   200762 756100                    STQ     OPEN+10,,AUTO
         2 003112   200762 631500                    EPPR1   OPEN+10,,AUTO
         2 003113   200617 451500                    STP1    DCB$+1,,AUTO
         2 003114   004071 701000 2                  TSX1    CLOSE_DCB
         2 003115   003124 702000 2                  TSX2    SETRET

      953     9226    2                    CALL MERGE_DCB(ADDR(M$DO_DCB)) ALTRET(SETRET);

   9226  2 003116   000022 236000 3                  LDQ     18
         2 003117   200763 756100                    STQ     OPEN+11,,AUTO
         2 003120   200763 630500                    EPPR0   OPEN+11,,AUTO
         2 003121   200617 450500                    STP0    DCB$+1,,AUTO
         2 003122   004177 701000 2                  TSX1    MERGE_DCB
         2 003123   003124 702000 2                  TSX2    SETRET

      954     9227    2                 END;

      955     9228    1   SETRET:
      956     9229    1     RETURN;

   9229  2 003124   000000 702200 xent  SETRET       TSX2  ! X66_ARET

      957     9230                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:151  
      958     9231        /*********************************************************************/
      959     9232        /*F*    NAME:    CXB$UNHOLD
      960     9233                PURPOSE:    To process the UNHOLD command to unhold symbiont output for
      961     9234                         JOBNAME, SYSID, or symbiont files.
      962     9235               REFERENCE: Programmers Reference Manual
      963     9236        */
      964     9237        /*D*   NAME:   CXB$UNHOLD
      965     9238               CALL:   CALL CXB$UNHOLD (GETCMD, CPSL_PARAM)
      966     9239               INPUT:  GETCMD - the CXG$GETCMD parameter.
      967     9240                       CPSL_PARAM - Command Processor Shared Library parameter.
      968     9241               OUTPUT:
      969     9242               DESCRIPTION: The UNHOLD command unhold symbiont output for
      970     9243                      for JOBNAME, SYSID, or symbiont file that were specified.
      971     9244        */
      972     9245        /*********************************************************************/
      973     9246    1   CXB$UNHOLD:
      974     9247    1     ENTRY(GETCMD, CPSL_PARAM) ;

   9247  2 003125   000000 700200 xent  CXB$UNHOLD   TSX0  ! X66_AUTO_2
         2 003126   000770 000002                    ZERO    504,2

      975     9248        /**/
      976     9249    1     BLK$ = GETCMD.OUT$;

   9249  2 003127   200003 470500                    LDP0    @GETCMD,,AUTO
         2 003130   000001 236100                    LDQ     1,,PR0
         2 003131   200006 756100                    STQ     BLK$,,AUTO

      977     9250    1     FPT_JOBSTATS=CPSL_CFPT_JOBSTATS;

   9250  2 003132   000100 100400                    MLR     fill='000'O
         2 003133   000000 000220 xsym               ADSC9   CPSL_CFPT_JOBSTATS       cn=0,n=144
         2 003134   200234 000220                    ADSC9   FPT_JOBSTATS,,AUTO       cn=0,n=144

      978     9251    1     FPT_JOBSTATS.V_=VECTOR(FPT_JOBSTATS.V);

   9251  2 003135   000007 235000 3                  LDA     7
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:152  
         2 003136   200752 452500                    STP2    OPEN+2,,AUTO
         2 003137   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003140   000264 036003                    ADLQ    180,DU
         2 003141   200234 757100                    STAQ    FPT_JOBSTATS,,AUTO

      979     9252    1     IF BLK$->P$B.NSUBLKS~=0

   9252  2 003142   200006 471500                    LDP1    BLK$,,AUTO
         2 003143   100001 220100                    LDX0    1,,PR1
         2 003144   003425 600000 2                  TZE     s:9320

      980     9253    1       THEN
      981     9254    2         DO ;

      982     9255    2               I=0;

   9255  2 003145   200023 450100                    STZ     I,,AUTO

      983     9256    3               DO WHILE (I < BLK$->P$B.NSUBLKS);

   9256  2 003146   100001 236100                    LDQ     1,,PR1
         2 003147   000022 772000                    QRL     18
         2 003150   200023 116100                    CMPQ    I,,AUTO
         2 003151   003530 604400 2                  TMOZ    UNHOLD_RETURN

      984     9257        /*
      985     9258         *** UNHOLD OUTPUT BY DEFAULT
      986     9259        */
      987     9260    3                 FPT_JOBSTATS.V.ORDER# = %UNHOLD#;

   9260  2 003152   000004 235007                    LDA     4,DL
         2 003153   200264 755100                    STA     FPT_JOBSTATS+24,,AUTO

      988     9261    3                 P$=BLK$->P$B.SUBLK$(I);

   9261  2 003154   200006 470500                    LDP0    BLK$,,AUTO
         2 003155   200023 720100                    LXL0    I,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:153  
         2 003156   000003 236110                    LDQ     3,X0,PR0
         2 003157   200005 756100                    STQ     P$,,AUTO

      989     9262    3                 TEMP$ = P$->P$B.SUBLK$(0) ;

   9262  2 003160   200005 471500                    LDP1    P$,,AUTO
         2 003161   100003 236100                    LDQ     3,,PR1
         2 003162   200007 756100                    STQ     TEMP$,,AUTO

      990     9263
      991     9264    3                 CALL CXX$UNHOLD (P$->P$B,GETCMD,CPSL_PARAM);

   9264  2 003163   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 003164   200754 756100                    STQ     OPEN+4,,AUTO
         2 003165   200003 236100                    LDQ     @GETCMD,,AUTO
         2 003166   200005 235100                    LDA     P$,,AUTO
         2 003167   200752 757100                    STAQ    OPEN+2,,AUTO
         2 003170   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003171   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003172   000000 701000 xent               TSX1    CXX$UNHOLD
         2 003173   000000 011000                    NOP     0

      992     9265    4                 DO CASE(P$->P$B.CODE);

   9265  2 003174   200005 470500                    LDP0    P$,,AUTO
         2 003175   000000 720100                    LXL0    0,,PR0
         2 003176   000005 100003                    CMPX0   5,DU
         2 003177   003201 602010 2                  TNC     s:9265+5,X0
         2 003200   003325 710000 2                  TRA     s:9291
         2 003201   003325 710000 2                  TRA     s:9291
         2 003202   003303 710000 2                  TRA     s:9284
         2 003203   003206 710000 2                  TRA     s:9268
         2 003204   003253 710000 2                  TRA     s:9276
         2 003205   003270 710000 2                  TRA     s:9280

      993     9266
      994     9267    4                   CASE(UNHOLD_FID);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:154  

      995     9268    4                     VLP_JOBNAME.JOBNAME#=TEMP$->P$S.TEXT;

   9268  2 003206   200007 471500                    LDP1    TEMP$,,AUTO
         2 003207   100004 236100                    LDQ     4,,PR1
         2 003210   000033 772000                    QRL     27
         2 003211   000000 621006                    EAX1    0,QL
         2 003212   040100 100540                    MLR     fill='040'O
         2 003213   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         2 003214   200550 200037                    ADSC9   VLP_JOBNAME,,AUTO        cn=1,n=31

      996     9269    4                     FPT_JOBSTATS.JOBNAME_=VECTOR(VLP_JOBNAME);

   9269  2 003215   000004 235000 3                  LDA     4
         2 003216   200752 452500                    STP2    OPEN+2,,AUTO
         2 003217   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003220   000550 036003                    ADLQ    360,DU
         2 003221   200244 757100                    STAQ    FPT_JOBSTATS+8,,AUTO

      997     9270    4                     P$ = P$->P$B.SUBLK$(1);

   9270  2 003222   000004 236100                    LDQ     4,,PR0
         2 003223   200005 756100                    STQ     P$,,AUTO

      998     9271    4                     CALL CXX$UNHOLD (P$->P$B,GETCMD,CPSL_PARAM);

   9271  2 003224   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 003225   200754 756100                    STQ     OPEN+4,,AUTO
         2 003226   200003 236100                    LDQ     @GETCMD,,AUTO
         2 003227   200005 235100                    LDA     P$,,AUTO
         2 003230   200752 757100                    STAQ    OPEN+2,,AUTO
         2 003231   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003232   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003233   000000 701000 xent               TSX1    CXX$UNHOLD
         2 003234   000000 011000                    NOP     0

      999     9272    4                     FID_ACCT.ACCT# = P$->P$B.SUBLK$(0)->P$S.TEXT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:155  

   9272  2 003235   200005 470500                    LDP0    P$,,AUTO
         2 003236   000003 471500                    LDP1    3,,PR0
         2 003237   100004 236100                    LDQ     4,,PR1
         2 003240   000033 772000                    QRL     27
         2 003241   000000 620006                    EAX0    0,QL
         2 003242   040100 100540                    MLR     fill='040'O
         2 003243   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 003244   200300 000010                    ADSC9   FID_ACCT,,AUTO           cn=0,n=8

     1000     9273    4                     FPT_JOBSTATS.ACCT_=VECTOR(FID_ACCT);

   9273  2 003245   000005 235000 3                  LDA     5
         2 003246   200752 452500                    STP2    OPEN+2,,AUTO
         2 003247   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003250   000300 036003                    ADLQ    192,DU
         2 003251   200246 757100                    STAQ    FPT_JOBSTATS+10,,AUTO
         2 003252   003325 710000 2                  TRA     s:9291

     1001     9274
     1002     9275    4                   CASE(UNHOLD_JOBNAME);

     1003     9276    4                     VLP_JOBNAME.JOBNAME#=TEMP$->P$S.TEXT;

   9276  2 003253   200007 471500                    LDP1    TEMP$,,AUTO
         2 003254   100004 236100                    LDQ     4,,PR1
         2 003255   000033 772000                    QRL     27
         2 003256   000000 621006                    EAX1    0,QL
         2 003257   040100 100540                    MLR     fill='040'O
         2 003260   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         2 003261   200550 200037                    ADSC9   VLP_JOBNAME,,AUTO        cn=1,n=31

     1004     9277    4                     FPT_JOBSTATS.JOBNAME_=VECTOR(VLP_JOBNAME);

   9277  2 003262   000004 235000 3                  LDA     4
         2 003263   200752 452500                    STP2    OPEN+2,,AUTO
         2 003264   200752 236100                    LDQ     OPEN+2,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:156  
         2 003265   000550 036003                    ADLQ    360,DU
         2 003266   200244 757100                    STAQ    FPT_JOBSTATS+8,,AUTO
         2 003267   003325 710000 2                  TRA     s:9291

     1005     9278
     1006     9279    4                   CASE(UNHOLD_SYSID);

     1007     9280    4                     CALL CHARBIN(TEMP,TEMP$->P$S.TEXT);

   9280  2 003270   200007 471500                    LDP1    TEMP$,,AUTO
         2 003271   100004 236100                    LDQ     4,,PR1
         2 003272   000033 772000                    QRL     27
         2 003273   000000 621006                    EAX1    0,QL
         2 003274   000100 305540                    DTB
         2 003275   100004 230011                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X1
         2 003276   200752 000010                    NDSC9   OPEN+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 003277   200753 235100                    LDA     OPEN+3,,AUTO
         2 003300   200026 755100                    STA     TEMP,,AUTO

     1008     9281    4                     FPT_JOBSTATS.V.SYSID#=TEMP;

   9281  2 003301   200265 755100                    STA     FPT_JOBSTATS+25,,AUTO
         2 003302   003325 710000 2                  TRA     s:9291

     1009     9282
     1010     9283    4                   CASE(UNHOLD_ACCT);

     1011     9284    4                     CALL SETUP_FID(TEMP$->P$S) ALTRET(E_UNHOLD);

   9284  2 003303   200007 236100                    LDQ     TEMP$,,AUTO
         2 003304   200615 756100                    STQ     JOBSTATS_CRITERIA+21,,AUTO
         2 003305   003775 701000 2                  TSX1    SETUP_FID
         2 003306   003535 702000 2                  TSX2    E_UNHOLD

     1012     9285    4                     FPT_JOBSTATS.ACCT_=VECTOR(FID_ACCT);

   9285  2 003307   000005 235000 3                  LDA     5
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:157  
         2 003310   200752 452500                    STP2    OPEN+2,,AUTO
         2 003311   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003312   000300 036003                    ADLQ    192,DU
         2 003313   200246 757100                    STAQ    FPT_JOBSTATS+10,,AUTO

     1013     9286    4                     FPT_JOBSTATS.V.SYSID#=0;

   9286  2 003314   200265 450100                    STZ     FPT_JOBSTATS+25,,AUTO

     1014     9287    4                     VLP_JOBNAME.JOBNAME#=' ';

   9287  2 003315   040100 100400                    MLR     fill='040'O
         2 003316   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 003317   200550 200037                    ADSC9   VLP_JOBNAME,,AUTO        cn=1,n=31

     1015     9288    4                     FPT_JOBSTATS.JOBNAME_=VECTOR(VLP_JOBNAME);

   9288  2 003320   000004 235000 3                  LDA     4
         2 003321   200752 452500                    STP2    OPEN+2,,AUTO
         2 003322   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003323   000550 036003                    ADLQ    360,DU
         2 003324   200244 757100                    STAQ    FPT_JOBSTATS+8,,AUTO

     1016     9289    4                 END; /* do case ... end */

     1017     9290
     1018     9291    3                J = 1;

   9291  2 003325   000001 235007                    LDA     1,DL
         2 003326   200024 755100                    STA     J,,AUTO

     1019     9292    3                IF P$->P$B.NSUBLKS > 1

   9292  2 003327   200005 470500                    LDP0    P$,,AUTO
         2 003330   000001 220100                    LDX0    1,,PR0
         2 003331   000002 100003                    CMPX0   2,DU
         2 003332   003407 602000 2                  TNC     s:9311
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:158  

     1020     9293    3                 THEN
     1021     9294    4                   DO WHILE (J < P$->P$B.NSUBLKS);

   9294  2 003333   000001 236100                    LDQ     1,,PR0
         2 003334   000022 772000                    QRL     18
         2 003335   200024 116100                    CMPQ    J,,AUTO
         2 003336   003416 604400 2                  TMOZ    UNHOLD20

     1022     9295    5                     DO CASE(P$->P$B.SUBLK$(J)->P$B.CODE);

   9295  2 003337   200005 470500                    LDP0    P$,,AUTO
         2 003340   200024 720100                    LXL0    J,,AUTO
         2 003341   000003 471510                    LDP1    3,X0,PR0
         2 003342   100000 236100                    LDQ     0,,PR1
         2 003343   777777 376007                    ANQ     -1,DL
         2 003344   000005 136007                    SBLQ    5,DL
         2 003345   000001 116007                    CMPQ    1,DL
         2 003346   003350 602006 2                  TNC     s:9295+9,QL
         2 003347   003374 710000 2                  TRA     s:9306
         2 003350   003351 710000 2                  TRA     s:9298

     1023     9296
     1024     9297    5                       CASE(UNHOLD_STREAM);

     1025     9298    5                         FPT_JOBSTATS.V.ORDER#=%UNHOLDF#;

   9298  2 003351   000011 235007                    LDA     9,DL
         2 003352   200264 755100                    STA     FPT_JOBSTATS+24,,AUTO

     1026     9299    5                         CALL CXX$UNHOLD

   9299  2 003353   000003 471510                    LDP1    3,X0,PR0
         2 003354   200026 633500                    EPPR3   TEMP,,AUTO
         2 003355   200755 453500                    STP3    OPEN+5,,AUTO
         2 003356   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 003357   200754 756100                    STQ     OPEN+4,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:159  
         2 003360   200003 236100                    LDQ     @GETCMD,,AUTO
         2 003361   200753 756100                    STQ     OPEN+3,,AUTO
         2 003362   200752 451500                    STP1    OPEN+2,,AUTO
         2 003363   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003364   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 003365   000000 701000 xent               TSX1    CXX$UNHOLD
         2 003366   000000 011000                    NOP     0

     1027     9300    5                           (P$->P$B.SUBLK$(J)->P$S,GETCMD,CPSL_PARAM,TEMP);
     1028     9301    5                         IF CPSL_PARAM.ERRCODE ~= %NO#

   9301  2 003367   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003370   000002 235100                    LDA     2,,PR0
         2 003371   003400 601000 2                  TNZ     UNHOLD10

     1029     9302    5                           THEN
     1030     9303    5                             GOTO UNHOLD10;
     1031     9304    5                         FPT_JOBSTATS.V.NUM#=TEMP;

   9304  2 003372   200026 720100                    LXL0    TEMP,,AUTO
         2 003373   200270 740100                    STX0    FPT_JOBSTATS+28,,AUTO

     1032     9305    5                     END; /* do case ... end */

     1033     9306    4                     CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_UNHOLD);

   9306  2 003374   200234 630500                    EPPR0   FPT_JOBSTATS,,AUTO
         2 003375   570001 713400                    CLIMB   alt,+61441
         2 003376   405400 401760                    pmme    nvectors=12
         2 003377   003535 702000 2                  TSX2    E_UNHOLD

     1034     9307    4   UNHOLD10:
     1035     9308    4                     J=J+1;

   9308  2 003400   200024 054100       UNHOLD10     AOS     J,,AUTO

     1036     9309    4                   END; /* do while  ... end*/
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:160  

   9309  2 003401   200005 470500                    LDP0    P$,,AUTO
         2 003402   000001 236100                    LDQ     1,,PR0
         2 003403   000022 772000                    QRL     18
         2 003404   200024 116100                    CMPQ    J,,AUTO
         2 003405   003337 605400 2                  TPNZ    s:9295
         2 003406   003416 710000 2                  TRA     UNHOLD20

     1037     9310    3                 ELSE
     1038     9311    3                   IF CPSL_PARAM.ERRCODE = %NO#

   9311  2 003407   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 003410   100002 235100                    LDA     2,,PR1
         2 003411   003416 601000 2                  TNZ     UNHOLD20

     1039     9312    3                     THEN
     1040     9313    3                       CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_UNHOLD);

   9313  2 003412   200234 630500                    EPPR0   FPT_JOBSTATS,,AUTO
         2 003413   570001 713400                    CLIMB   alt,+61441
         2 003414   405400 401760                    pmme    nvectors=12
         2 003415   003535 702000 2                  TSX2    E_UNHOLD

     1041     9314    3   UNHOLD20:
     1042     9315    3                 I = I+1;

   9315  2 003416   200023 054100       UNHOLD20     AOS     I,,AUTO

     1043     9316    3               END; /* do while ... end */

   9316  2 003417   200006 470500                    LDP0    BLK$,,AUTO
         2 003420   000001 236100                    LDQ     1,,PR0
         2 003421   000022 772000                    QRL     18
         2 003422   200023 116100                    CMPQ    I,,AUTO
         2 003423   003152 605400 2                  TPNZ    s:9260

     1044     9317    2         END ; /* Then Do */
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:161  

   9317  2 003424   003530 710000 2                  TRA     UNHOLD_RETURN

     1045     9318    1       ELSE
     1046     9319    2         DO ;

     1047     9320    2             FPT_JOBSTATS.V.ORDER# = %SRCH# ;

   9320  2 003425   000002 235007                    LDA     2,DL
         2 003426   200264 755100                    STA     FPT_JOBSTATS+24,,AUTO

     1048     9321    2             FPT_JOBSTATS.V.OUTPUT# = %YES# ;

   9321  2 003427   400000 236003                    LDQ     -131072,DU
         2 003430   200267 256100                    ORSQ    FPT_JOBSTATS+27,,AUTO

     1049     9322    2             CALL CXC$GETSEG(CPSL_SEG3$) ;            /*Get seg for buffer*/

   9322  2 003431   000010 630400 3                  EPPR0   8
         2 003432   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003433   000000 701000 xent               TSX1    CXC$GETSEG
         2 003434   000000 011000                    NOP     0

     1050     9323    2             IF CPSL_PARAM.ERRCODE ~= %NO#

   9323  2 003435   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003436   000002 235100                    LDA     2,,PR0
         2 003437   003530 601000 2                  TNZ     UNHOLD_RETURN

     1051     9324    2               THEN
     1052     9325    2                 GOTO UNHOLD_RETURN ;
     1053     9326    2             FPT_JOBSTATS.RESULTS_ = VECTOR(CPSL_SEG3$->B$$PAGE) ;

   9326  2 003440   000023 235000 3                  LDA     19
         2 003441   000000 236000 xsym               LDQ     CPSL_SEG3$
         2 003442   200240 757100                    STAQ    FPT_JOBSTATS+4,,AUTO

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:162  
     1054     9327    2             JOBSTATS_CRITERIA = CVLP_CRITERIA ;

   9327  2 003443   000100 100400                    MLR     fill='000'O
         2 003444   000006 000116 1                  ADSC9   CVLP_CRITERIA            cn=0,n=78
         2 003445   200570 000116                    ADSC9   JOBSTATS_CRITERIA,,AUTO  cn=0,n=78

     1055     9328    2             JOBSTATS_CRITERIA.ACCT# = B$JIT.ACCN ;

   9328  2 003446   000000 471400 xsym               LDP1    B$JIT$
         2 003447   040100 100500                    MLR     fill='040'O
         2 003450   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8
         2 003451   200574 000010                    ADSC9   JOBSTATS_CRITERIA+4,,AUTO cn=0,n=8

     1056     9329    2             JOBSTATS_CRITERIA.HOLD# = %YES# ;

   9329  2 003452   040000 236003                    LDQ     16384,DU
         2 003453   200600 256100                    ORSQ    JOBSTATS_CRITERIA+8,,AUTO

     1057     9330    2             FPT_JOBSTATS.CRITERIA_ = VECTOR(JOBSTATS_CRITERIA) ;

   9330  2 003454   000024 235000 3                  LDA     20
         2 003455   200752 452500                    STP2    OPEN+2,,AUTO
         2 003456   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003457   000570 036003                    ADLQ    376,DU
         2 003460   200242 757100                    STAQ    FPT_JOBSTATS+6,,AUTO

     1058     9331    2             CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_MAJOR_ERROR) ;

   9331  2 003461   200234 630500                    EPPR0   FPT_JOBSTATS,,AUTO
         2 003462   570001 713400                    CLIMB   alt,+61441
         2 003463   405400 401760                    pmme    nvectors=12
         2 003464   003767 702000 2                  TSX2    E_MAJOR_ERROR

     1059     9332
     1060     9333    2             FPT_JOBSTATS = CPSL_CFPT_JOBSTATS ;

   9333  2 003465   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:163  
         2 003466   000000 000220 xsym               ADSC9   CPSL_CFPT_JOBSTATS       cn=0,n=144
         2 003467   200234 000220                    ADSC9   FPT_JOBSTATS,,AUTO       cn=0,n=144

     1061     9334    2             FPT_JOBSTATS.V_ = VECTOR(FPT_JOBSTATS.V) ;

   9334  2 003470   000007 235000 3                  LDA     7
         2 003471   200752 452500                    STP2    OPEN+2,,AUTO
         2 003472   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003473   000264 036003                    ADLQ    180,DU
         2 003474   200234 757100                    STAQ    FPT_JOBSTATS,,AUTO

     1062     9335    2             FPT_JOBSTATS.V.ORDER# = %UNHOLD# ;

   9335  2 003475   000004 235007                    LDA     4,DL
         2 003476   200264 755100                    STA     FPT_JOBSTATS+24,,AUTO

     1063     9336    2             I = 1 ;

   9336  2 003477   000001 235007                    LDA     1,DL
         2 003500   200023 755100                    STA     I,,AUTO

     1064     9337    3             DO J = 0 TO CPSL_SEG3$->VLR$OSRCH.FOUND-1 ;

   9337  2 003501   200024 450100                    STZ     J,,AUTO
         2 003502   003523 710000 2                  TRA     UNHELD_THAT_ONE+1

     1065     9338    3               TEMP$ = ADDR(CPSL_SEG3$->VLR$OSRCH.F(J)) ;

   9338  2 003503   200024 236100                    LDQ     J,,AUTO
         2 003504   000034 402003                    MPY     28,DU
         2 003505   000002 036003                    ADLQ    2,DU
         2 003506   000000 036000 xsym               ADLQ    CPSL_SEG3$
         2 003507   200007 756100                    STQ     TEMP$,,AUTO

     1066     9339    3               IF FPT_JOBSTATS.V.SYSID# = TEMP$ -> VLA$OSRCH.SYSID

   9339  2 003510   200007 470500                    LDP0    TEMP$,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:164  
         2 003511   000005 236100                    LDQ     5,,PR0
         2 003512   000022 772000                    QRL     18
         2 003513   200265 116100                    CMPQ    FPT_JOBSTATS+25,,AUTO
         2 003514   003522 600000 2                  TZE     UNHELD_THAT_ONE

     1067     9340    3                 THEN
     1068     9341    3                   GOTO UNHELD_THAT_ONE ;
     1069     9342    3               FPT_JOBSTATS.V.SYSID# = TEMP$ -> VLA$OSRCH.SYSID ;

   9342  2 003515   200265 756100                    STQ     FPT_JOBSTATS+25,,AUTO

     1070     9343    3               CALL M$JOBSTATS(FPT_JOBSTATS) ALTRET(E_UNHOLD) ;

   9343  2 003516   200234 630500                    EPPR0   FPT_JOBSTATS,,AUTO
         2 003517   570001 713400                    CLIMB   alt,+61441
         2 003520   405400 401760                    pmme    nvectors=12
         2 003521   003535 702000 2                  TSX2    E_UNHOLD

     1071     9344    3   UNHELD_THAT_ONE:
     1072     9345    3             END ; /* Do J */

   9345  2 003522   200024 054100       UNHELD_THAT* AOS     J,,AUTO
         2 003523   000000 470400 xsym               LDP0    CPSL_SEG3$
         2 003524   200024 236100                    LDQ     J,,AUTO
         2 003525   003503 604000 2                  TMI     s:9338
         2 003526   000000 116100                    CMPQ    0,,PR0
         2 003527   003503 602000 2                  TNC     s:9338

     1073     9346    2         END ; /* Else Do */

     1074     9347
     1075     9348    1   UNHOLD_RETURN:
     1076     9349    1     CALL CXC$RELSEG (CPSL_SEG3$);

   9349  2 003530   000010 630400 3     UNHOLD_RETU* EPPR0   8
         2 003531   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003532   000000 701000 xent               TSX1    CXC$RELSEG
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:165  
         2 003533   000000 011000                    NOP     0

     1077     9350    1     RETURN;

   9350  2 003534   000000 702200 xent               TSX2  ! X66_ARET

     1078     9351    1   E_UNHOLD:
     1079     9352        /*
     1080     9353           **** Output job name or id not found
     1081     9354        */
     1082     9355        /*E*      ERROR: CXB-E$JOBNTFND-C
     1083     9356                  MESSAGE: Job %U1 not found
     1084     9357                DESCRIPTION: The specified job to be unheld could not be found.
     1085     9358        */
     1086     9359    1     IF BLK$->P$B.NSUBLKS~=0

   9359  2 003535   200006 470500       E_UNHOLD     LDP0    BLK$,,AUTO
         2 003536   000001 220100                    LDX0    1,,PR0
         2 003537   003552 600000 2                  TZE     s:9367

     1087     9360    1         THEN
     1088     9361    2             DO ;

     1089     9362    2               FID_NAME.L# = TEMP$->P$S.COUNT;

   9362  2 003540   200007 471500                    LDP1    TEMP$,,AUTO
         2 003541   100004 236100                    LDQ     4,,PR1
         2 003542   200515 552140                    STBQ    FID_NAME,'40'O,AUTO

     1090     9363    2               FID_NAME.NAME# = TEMP$->P$S.TEXT;

   9363  2 003543   100004 236100                    LDQ     4,,PR1
         2 003544   000033 772000                    QRL     27
         2 003545   000000 620006                    EAX0    0,QL
         2 003546   040100 100540                    MLR     fill='040'O
         2 003547   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 003550   200515 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:166  

     1091     9364    2             END ; /* Then Do */

   9364  2 003551   003577 710000 2                  TRA     s:9371

     1092     9365    1         ELSE
     1093     9366    2             DO ;

     1094     9367    2               CALL BINCHAR(FID_NAME.NAME#, FPT_JOBSTATS.V.SYSID#) ;

   9367  2 003552   200265 235100                    LDA     FPT_JOBSTATS+25,,AUTO
         2 003553   000044 773000                    LRL     36
         2 003554   200752 757100                    STAQ    OPEN+2,,AUTO
         2 003555   000100 301500                    BTD
         2 003556   200752 000010                    NDSC9   OPEN+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 003557   200515 230037                    NDSC9   FID_NAME,,AUTO           cn=1,s=nosgn,sf=0,n=31

     1095     9368    2               CALL CXB$RZEROS(FID_NAME.NAME#, SIZEC(FID_NAME.NAME#), TEMP) ;

   9368  2 003560   200026 631500                    EPPR1   TEMP,,AUTO
         2 003561   200754 451500                    STP1    OPEN+4,,AUTO
         2 003562   000026 236000 3                  LDQ     22
         2 003563   200753 756100                    STQ     OPEN+3,,AUTO
         2 003564   200755 452500                    STP2    OPEN+5,,AUTO
         2 003565   200755 236100                    LDQ     OPEN+5,,AUTO
         2 003566   000027 036000 3                  ADLQ    23
         2 003567   200752 756100                    STQ     OPEN+2,,AUTO
         2 003570   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003571   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003572   000000 701000 xent               TSX1    CXB$RZEROS
         2 003573   000000 011000                    NOP     0

     1096     9369    2               FID_NAME.L# = TEMP ;

   9369  2 003574   200026 236100                    LDQ     TEMP,,AUTO
         2 003575   000033 736000                    QLS     27
         2 003576   200515 552140                    STBQ    FID_NAME,'40'O,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:167  

     1097     9370    2             END ; /* Else Do */

     1098     9371    1     IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOTFND

   9371  2 003577   000000 470400 xsym               LDP0    B$TCB$
         2 003600   000000 471500                    LDP1    0,,PR0
         2 003601   100102 236100                    LDQ     66,,PR1
         2 003602   377770 376007                    ANQ     131064,DL
         2 003603   021260 116007                    CMPQ    8880,DL
         2 003604   003647 601000 2                  TNZ     s:9401

     1099     9372    1        THEN
     1100     9373    2           DO;

     1101     9374    2              IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG

   9374  2 003605   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 003606   300001 236100                    LDQ     1,,PR3
         2 003607   200000 316003                    CANQ    65536,DU
         2 003610   003640 601000 2                  TNZ     s:9388

     1102     9375    2               THEN
     1103     9376    3                 DO ;

     1104     9377    3                   GETCMD.ERR_CODE = E_JOBNTFND ;

   9377  2 003611   000036 236000 1                  LDQ     E_JOBNTFND
         2 003612   200003 474500                    LDP4    @GETCMD,,AUTO
         2 003613   400010 756100                    STQ     8,,PR4

     1105     9378    3                   CPSL_PARAM.ERRCODE = %NO# ;

   9378  2 003614   300002 450100                    STZ     2,,PR3

     1106     9379    3                   GETCMD.F1_ = VECTOR(FID_NAME) ;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:168  
   9379  2 003615   000004 235000 3                  LDA     4
         2 003616   200752 452500                    STP2    OPEN+2,,AUTO
         2 003617   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003620   000515 036003                    ADLQ    333,DU
         2 003621   400017 755100                    STA     15,,PR4
         2 003622   400020 756100                    STQ     16,,PR4

     1107     9380    4                   CALL CXG$ERRMSG (GETCMD) WHENALTRETURN DO ;

   9380  2 003623   200003 630500                    EPPR0   @GETCMD,,AUTO
         2 003624   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003625   000000 701000 xent               TSX1    CXG$ERRMSG
         2 003626   003630 702000 2                  TSX2    s:9381
         2 003627   003637 710000 2                  TRA     s:9385

     1108     9381    4                                     CPSL_PARAM.ERRCODE = GETCMD.ERR# ;

   9381  2 003630   200003 470500                    LDP0    @GETCMD,,AUTO
         2 003631   000001 236100                    LDQ     1,,PR0
         2 003632   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 003633   100002 756100                    STQ     2,,PR1

     1109     9382    4                                     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   9382  2 003634   000011 236000 3                  LDQ     9
         2 003635   100001 356100                    ANSQ    1,,PR1

     1110     9383    4                                     GOTO UNHOLD_RETURN ;

   9383  2 003636   003530 710000 2                  TRA     UNHOLD_RETURN

     1111     9384    4                                     END ;
     1112     9385    3                 END ; /* Then Do */

   9385  2 003637   003643 710000 2                  TRA     s:9391

     1113     9386    2               ELSE
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:169  
     1114     9387    3                 DO ;

     1115     9388    3                   CPSL_PARAM.ERRCODE = E_JOBNTFND ;

   9388  2 003640   000036 236000 1                  LDQ     E_JOBNTFND
         2 003641   300002 756100                    STQ     2,,PR3

     1116     9389    3                   GOTO UNHOLD_RETURN ;

   9389  2 003642   003530 710000 2                  TRA     UNHOLD_RETURN

     1117     9390    3                 END ; /* Else Do */
     1118     9391    2              IF BLK$->P$B.NSUBLKS~=0

   9391  2 003643   200006 470500                    LDP0    BLK$,,AUTO
         2 003644   000001 220100                    LDX0    1,,PR0
         2 003645   003416 601000 2                  TNZ     UNHOLD20

     1119     9392    2               THEN
     1120     9393    2                 GOTO UNHOLD20;
     1121     9394    2               ELSE
     1122     9395    2                 GOTO UNHELD_THAT_ONE ;

   9395  2 003646   003522 710000 2                  TRA     UNHELD_THAT_ONE

     1123     9396    2           END;
     1124     9397        /*E*      ERROR: CXB-E$NOSYMFILE-C
     1125     9398                  MESSAGE: Output file %U1-%U2 not found
     1126     9399                  DESCRIPTION: The specified output symbiont file couldn't be found
     1127     9400        */
     1128     9401    1     IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$FNOTFND

   9401  2 003647   021360 116007                    CMPQ    8944,DL
         2 003650   003767 601000 2                  TNZ     E_MAJOR_ERROR

     1129     9402    1        THEN
     1130     9403    2           DO;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:170  

     1131     9404    2             IF BLK$->P$B.NSUBLKS~=0

   9404  2 003651   200006 473500                    LDP3    BLK$,,AUTO
         2 003652   300001 220100                    LDX0    1,,PR3
         2 003653   003671 600000 2                  TZE     s:9412

     1132     9405    2               THEN
     1133     9406    3                 DO ;

     1134     9407    3                   SYMNAME.COUNT = P$->P$B.SUBLK$(J)->P$S.COUNT;

   9407  2 003654   200005 474500                    LDP4    P$,,AUTO
         2 003655   200024 721100                    LXL1    J,,AUTO
         2 003656   400003 475511                    LDP5    3,X1,PR4
         2 003657   500004 236100                    LDQ     4,,PR5
         2 003660   200015 552140                    STBQ    SYMNAME,'40'O,AUTO

     1135     9408    3                   SYMNAME.TEXT = P$->P$B.SUBLK$(J)->P$S.TEXT;

   9408  2 003661   400003 471511                    LDP1    3,X1,PR4
         2 003662   100004 236100                    LDQ     4,,PR1
         2 003663   000033 772000                    QRL     27
         2 003664   000000 620006                    EAX0    0,QL
         2 003665   040100 100540                    MLR     fill='040'O
         2 003666   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 003667   200015 200004                    ADSC9   SYMNAME,,AUTO            cn=1,n=4

     1136     9409    3                 END ;

   9409  2 003670   003717 710000 2                  TRA     s:9416

     1137     9410    2               ELSE
     1138     9411    3                 DO ;

     1139     9412    3                   CALL BINCHAR(SYMNAME.TEXT, FPT_JOBSTATS.V.NUM#) ;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:171  
   9412  2 003671   200270 235100                    LDA     FPT_JOBSTATS+28,,AUTO
         2 003672   000022 771000                    ARL     18
         2 003673   000044 773000                    LRL     36
         2 003674   200752 757100                    STAQ    OPEN+2,,AUTO
         2 003675   000100 301500                    BTD
         2 003676   200752 000010                    NDSC9   OPEN+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 003677   200015 230004                    NDSC9   SYMNAME,,AUTO            cn=1,s=nosgn,sf=0,n=4

     1140     9413    3                   CALL CXB$RZEROS(SYMNAME.TEXT, SIZEC(SYMNAME.TEXT), TEMP) ;

   9413  2 003700   200026 631500                    EPPR1   TEMP,,AUTO
         2 003701   200754 451500                    STP1    OPEN+4,,AUTO
         2 003702   000030 236000 3                  LDQ     24
         2 003703   200753 756100                    STQ     OPEN+3,,AUTO
         2 003704   200755 452500                    STP2    OPEN+5,,AUTO
         2 003705   200755 236100                    LDQ     OPEN+5,,AUTO
         2 003706   000031 036000 3                  ADLQ    25
         2 003707   200752 756100                    STQ     OPEN+2,,AUTO
         2 003710   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 003711   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 003712   000000 701000 xent               TSX1    CXB$RZEROS
         2 003713   000000 011000                    NOP     0

     1141     9414    3                   SYMNAME.COUNT = TEMP ;

   9414  2 003714   200026 236100                    LDQ     TEMP,,AUTO
         2 003715   000033 736000                    QLS     27
         2 003716   200015 552140                    STBQ    SYMNAME,'40'O,AUTO

     1142     9415    3                 END ; /* Else Do */

     1143     9416    2              IF NOT CPSL_PARAM.FLAGS.INHIBIT_ERRMSG

   9416  2 003717   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 003720   000001 236100                    LDQ     1,,PR0
         2 003721   200000 316003                    CANQ    65536,DU
         2 003722   003760 601000 2                  TNZ     s:9431
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:172  

     1144     9417    2               THEN
     1145     9418    3                 DO ;

     1146     9419    3                   GETCMD.ERR_CODE = E_NOSYMFILE ;

   9419  2 003723   000037 236000 1                  LDQ     E_NOSYMFILE
         2 003724   200003 471500                    LDP1    @GETCMD,,AUTO
         2 003725   100010 756100                    STQ     8,,PR1

     1147     9420    3                   CPSL_PARAM.ERRCODE = %NO# ;

   9420  2 003726   000002 450100                    STZ     2,,PR0

     1148     9421    3                   GETCMD.F1_ = VECTOR(FID_NAME) ;

   9421  2 003727   000004 235000 3                  LDA     4
         2 003730   200752 452500                    STP2    OPEN+2,,AUTO
         2 003731   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003732   000515 036003                    ADLQ    333,DU
         2 003733   100017 755100                    STA     15,,PR1
         2 003734   100020 756100                    STQ     16,,PR1

     1149     9422    3                   GETCMD.F2_ = VECTOR(SYMNAME) ;

   9422  2 003735   000032 235000 3                  LDA     26
         2 003736   200752 452500                    STP2    OPEN+2,,AUTO
         2 003737   200752 236100                    LDQ     OPEN+2,,AUTO
         2 003740   000015 036003                    ADLQ    13,DU
         2 003741   100021 755100                    STA     17,,PR1
         2 003742   100022 756100                    STQ     18,,PR1

     1150     9423    4                   CALL CXG$ERRMSG (GETCMD) WHENALTRETURN DO ;

   9423  2 003743   200003 630500                    EPPR0   @GETCMD,,AUTO
         2 003744   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 003745   000000 701000 xent               TSX1    CXG$ERRMSG
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:173  
         2 003746   003750 702000 2                  TSX2    s:9424
         2 003747   003757 710000 2                  TRA     s:9428

     1151     9424    4                                     CPSL_PARAM.ERRCODE = GETCMD.ERR# ;

   9424  2 003750   200003 470500                    LDP0    @GETCMD,,AUTO
         2 003751   000001 236100                    LDQ     1,,PR0
         2 003752   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 003753   100002 756100                    STQ     2,,PR1

     1152     9425    4                                     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   9425  2 003754   000011 236000 3                  LDQ     9
         2 003755   100001 356100                    ANSQ    1,,PR1

     1153     9426    4                                     GOTO UNHOLD_RETURN ;

   9426  2 003756   003530 710000 2                  TRA     UNHOLD_RETURN

     1154     9427    4                                     END ;
     1155     9428    3                 END ; /* Then Do */

   9428  2 003757   003763 710000 2                  TRA     s:9434

     1156     9429    2               ELSE
     1157     9430    3                 DO ;

     1158     9431    3                   CPSL_PARAM.ERRCODE = E_NOSYMFILE ;

   9431  2 003760   000037 236000 1                  LDQ     E_NOSYMFILE
         2 003761   000002 756100                    STQ     2,,PR0

     1159     9432    3                   GOTO UNHOLD_RETURN ;

   9432  2 003762   003530 710000 2                  TRA     UNHOLD_RETURN

     1160     9433    3                 END ; /* Else Do */
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:174  
     1161     9434    2              IF BLK$->P$B.NSUBLKS~=0

   9434  2 003763   200006 470500                    LDP0    BLK$,,AUTO
         2 003764   000001 220100                    LDX0    1,,PR0
         2 003765   003400 601000 2                  TNZ     UNHOLD10

     1162     9435    2               THEN
     1163     9436    2                 GOTO UNHOLD10;
     1164     9437    2               ELSE
     1165     9438    2                 GOTO UNHELD_THAT_ONE ;

   9438  2 003766   003522 710000 2                  TRA     UNHELD_THAT_ONE

     1166     9439    2           END;
     1167     9440    1   E_MAJOR_ERROR:
     1168     9441    1     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;

   9441  2 003767   000000 470400 xsym  E_MAJOR_ERR* LDP0    B$TCB$
         2 003770   000000 471500                    LDP1    0,,PR0
         2 003771   100102 236100                    LDQ     66,,PR1
         2 003772   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 003773   300002 756100                    STQ     2,,PR3

     1169     9442    1     GOTO UNHOLD_RETURN ;

   9442  2 003774   003530 710000 2                  TRA     UNHOLD_RETURN

     1170     9443
     1171     9444        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:175  
     1172     9445        /*
     1173     9446        *****   Local subroutines
     1174     9447        */
     1175     9448        /*I*    NAME:    SETUP_FID
     1176     9449                PURPOSE:    To setup and execute the M$FID monitor service call to
     1177     9450                         break down the passed text fid into its constituent parts.
     1178     9451        */
     1179     9452    1   SETUP_FID: PROC(P$S) ALTRET ;

   9452  2 003775   200614 741300       SETUP_FID    STX1  ! JOBSTATS_CRITERIA+20,,AUTO

     1180     9453        /**/
     1181     9454        %PARSE$SYM(NAME=P$S,STCLASS="");
     1182     9492        /*
     1183     9493        *****   Begin procedure
     1184     9494        */
     1185     9495    2     FPT_FID = CPSL_CFPT_FID;

   9495  2 003776   000100 100400                    MLR     fill='000'O
         2 003777   000000 000140 xsym               ADSC9   CPSL_CFPT_FID            cn=0,n=96
         2 004000   200204 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

     1186     9496    2     FPT_FID.TEXTFID_ = VECTOR(P$S.TEXT);

   9496  2 004001   200615 470500                    LDP0    @P$S,,AUTO
         2 004002   000004 236100                    LDQ     4,,PR0
         2 004003   000033 772000                    QRL     27
         2 004004   000064 737000                    LLS     52
         2 004005   000140 135007                    SBLA    96,DL
         2 004006   200615 236100                    LDQ     @P$S,,AUTO
         2 004007   000014 036000 3                  ADLQ    12
         2 004010   200206 757100                    STAQ    FPT_FID+2,,AUTO

     1187     9497    2     FPT_FID.NAME_ = VECTOR(FID_NAME);

   9497  2 004011   000004 235000 3                  LDA     4
         2 004012   200752 452500                    STP2    OPEN+2,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:176  
         2 004013   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004014   000515 036003                    ADLQ    333,DU
         2 004015   200210 757100                    STAQ    FPT_FID+4,,AUTO

     1188     9498    2     FPT_FID.ACCT_ = VECTOR(FID_ACCT);

   9498  2 004016   000005 235000 3                  LDA     5
         2 004017   200752 452500                    STP2    OPEN+2,,AUTO
         2 004020   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004021   000300 036003                    ADLQ    192,DU
         2 004022   200212 757100                    STAQ    FPT_FID+6,,AUTO

     1189     9499    2     FPT_FID.PASS_ = VECTOR(FID_PASS);

   9499  2 004023   000005 235000 3                  LDA     5
         2 004024   200752 452500                    STP2    OPEN+2,,AUTO
         2 004025   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004026   000525 036003                    ADLQ    341,DU
         2 004027   200214 757100                    STAQ    FPT_FID+8,,AUTO

     1190     9500    2     FPT_FID.SN_ = VECTOR(FID_SN);

   9500  2 004030   000001 235000 3                  LDA     1
         2 004031   200752 452500                    STP2    OPEN+2,,AUTO
         2 004032   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004033   000530 036003                    ADLQ    344,DU
         2 004034   200216 757100                    STAQ    FPT_FID+10,,AUTO

     1191     9501    2     FPT_FID.WSN_ = VECTOR(FID_WSN);

   9501  2 004035   000005 235000 3                  LDA     5
         2 004036   200752 452500                    STP2    OPEN+2,,AUTO
         2 004037   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004040   000534 036003                    ADLQ    348,DU
         2 004041   200220 757100                    STAQ    FPT_FID+12,,AUTO

     1192     9502    2     FPT_FID.ASN_ = VECTOR(FID_ASN);
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:177  

   9502  2 004042   777640 235007                    LDA     -96,DL
         2 004043   200752 452500                    STP2    OPEN+2,,AUTO
         2 004044   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004045   000013 036003                    ADLQ    11,DU
         2 004046   200222 757100                    STAQ    FPT_FID+14,,AUTO

     1193     9503    2     FPT_FID.RES_ = VECTOR(FID_RES);

   9503  2 004047   777640 235007                    LDA     -96,DL
         2 004050   200752 452500                    STP2    OPEN+2,,AUTO
         2 004051   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004052   000014 036003                    ADLQ    12,DU
         2 004053   200224 757100                    STAQ    FPT_FID+16,,AUTO

     1194     9504    2     FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);

   9504  2 004054   000033 235000 3                  LDA     27
         2 004055   200752 452500                    STP2    OPEN+2,,AUTO
         2 004056   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004057   000302 036003                    ADLQ    194,DU
         2 004060   200226 757100                    STAQ    FPT_FID+18,,AUTO

     1195     9505    2     CALL M$FID(FPT_FID) ALTRET(E_SETUP_FID_M$FID);

   9505  2 004061   200204 630500                    EPPR0   FPT_FID,,AUTO
         2 004062   420001 713400                    CLIMB   alt,+8193
         2 004063   404400 401760                    pmme    nvectors=10
         2 004064   004067 702000 2                  TSX2    E_SETUP_FID_M$FID

     1196     9506    2     RETURN;

   9506  2 004065   200614 221300                    LDX1  ! JOBSTATS_CRITERIA+20,,AUTO
         2 004066   000001 702211                    TSX2  ! 1,X1

   9504  2 004067                       E_SETUP_FID* null
     1197     9507    2   E_SETUP_FID_M$FID: ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:178  
     1198     9508    2     ALTRETURN;

   9508  2 004067   200614 221300                    LDX1  ! JOBSTATS_CRITERIA+20,,AUTO
         2 004070   000000 702211                    TSX2  ! 0,X1

     1199     9509    2   END SETUP_FID;
     1200     9510        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:179  
     1201     9511        /********************************************************************/
     1202     9512        /*I*   NAME: CLOSE_DCB
     1203     9513               PURPOSE: Close the M$DO and M$LL dcbs
     1204     9514                     DESCRIPTION: Close the dcb if open except if not being
     1205     9515                                  performed for M$YC pmme.
     1206     9516        */
     1207     9517        /********************************************************************/
     1208     9518    1   CLOSE_DCB: PROC(DCB$) ALTRET;

   9518  2 004071   200616 741300       CLOSE_DCB    STX1  ! DCB#+1,,AUTO

     1209     9519    2   DCL DCB_NUM UBIN WORD;
     1210     9520    2   DCL I SBIN;
     1211     9521    2   DCL DCB$ PTR;
     1212     9522    2     IF B$JIT.CPFLAGS1 & %CP_YCPMME#  THEN

   9522  2 004072   000000 470400 xsym               LDP0    B$JIT$
         2 004073   000143 236100                    LDQ     99,,PR0
         2 004074   000177 376000 1                  ANQ     CONSTCLS+33
         2 004075   004077 600000 2                  TZE     s:9527

     1213     9523    2        RETURN;

   9523  2 004076   000001 702211                    TSX2  ! 1,X1

     1214     9524        /*
     1215     9525          ****     If we already have M$LL, make sure it's closed.
     1216     9526        */
     1217     9527    2     IF DCB$->TEXTC = CPSL_M$LL

   9527  2 004077   200617 471500                    LDP1    @DCB$,,AUTO
         2 004100   100000 473500                    LDP3    0,,PR1
         2 004101   000100 101500                    MRL     fill='000'O
         2 004102   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 004103   200752 000002                    ADSC9   OPEN+2,,AUTO             cn=0,n=2
         2 004104   200752 220100                    LDX0    OPEN+2,,AUTO
         2 004105   000001 622010                    EAX2    1,X0
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:180  
         2 004106   000000 106540                    CMPC    fill='000'O
         2 004107   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         2 004110   000000 000005 xsym               ADSC9   CPSL_M$LL                cn=0,n=5
         2 004111   004116 601000 2                  TNZ     s:9530

     1218     9528    2        THEN
     1219     9529    2           CALL GETDCB_LL(DCB_NUM) ALTRET(CLOSE_DCB_RET) ;

   9529  2 004112   200620 633500                    EPPR3   DCB_NUM,,AUTO
         2 004113   200713 453500                    STP3    CLSMYDCB+1,,AUTO
         2 004114   004575 701000 2                  TSX1    GETDCB_LL
         2 004115   004164 702000 2                  TSX2    CLOSE_DCB_RET

     1220     9530    2           IF CPSL_PARAM.ERRCODE ~= %NO#

   9530  2 004116   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004117   000002 235100                    LDA     2,,PR0
         2 004120   004164 601000 2                  TNZ     CLOSE_DCB_RET

     1221     9531    2             THEN
     1222     9532    2               GOTO CLOSE_DCB_RET ;
     1223     9533    2        ELSE
     1224     9534    2           IF DCB$->TEXTC = M$DO_DCB

   9534  2 004121   200617 471500                    LDP1    @DCB$,,AUTO
         2 004122   100000 473500                    LDP3    0,,PR1
         2 004123   000100 101500                    MRL     fill='000'O
         2 004124   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 004125   200752 000002                    ADSC9   OPEN+2,,AUTO             cn=0,n=2
         2 004126   200752 220100                    LDX0    OPEN+2,,AUTO
         2 004127   000001 621010                    EAX1    1,X0
         2 004130   000000 106540                    CMPC    fill='000'O
         2 004131   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         2 004132   000000 000005 1                  ADSC9   M$DO_DCB                 cn=0,n=5
         2 004133   004136 601000 2                  TNZ     s:9537

     1225     9535    2              THEN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:181  
     1226     9536    2                 DCB_NUM = CPSL_M$DO_NUM;

   9536  2 004134   000000 235000 xsym               LDA     CPSL_M$DO_NUM
         2 004135   200620 755100                    STA     DCB_NUM,,AUTO

     1227     9537    2     IF DCBADDR(DCB_NUM)->F$DCB.FCD# = %YES#

   9537  2 004136   000000 473400 3                  LDP3    0
         2 004137   300000 474500                    LDP4    0,,PR3
         2 004140   200620 720100                    LXL0    DCB_NUM,,AUTO
         2 004141   400000 475510                    LDP5    0,X0,PR4
         2 004142   500031 236100                    LDQ     25,,PR5
         2 004143   020000 316007                    CANQ    8192,DL
         2 004144   004164 600000 2                  TZE     CLOSE_DCB_RET

     1228     9538    2        THEN
     1229     9539    3           DO;

     1230     9540    3              FPT_CLOSE = CPSL_CFPT_CLOSE;

   9540  2 004145   000100 100400                    MLR     fill='000'O
         2 004146   000000 000170 xsym               ADSC9   CPSL_CFPT_CLOSE          cn=0,n=120
         2 004147   200122 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

     1231     9541    3              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

   9541  2 004150   000001 235000 3                  LDA     1
         2 004151   200752 452500                    STP2    OPEN+2,,AUTO
         2 004152   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004153   000154 036003                    ADLQ    108,DU
         2 004154   200122 757100                    STAQ    FPT_CLOSE,,AUTO

     1232     9542    3              FPT_CLOSE.V.DISP# =%SAVE#;

   9542  2 004155   000002 236007                    LDQ     2,DL
         2 004156   200154 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:182  
     1233     9543    3              FPT_CLOSE.V.DCB# = DCB_NUM;

   9543  2 004157   200154 740100                    STX0    FPT_CLOSE+26,,AUTO

     1234     9544    3              CALL M$CLOSE(FPT_CLOSE) ALTRET(E_CLOSE_DCB);

   9544  2 004160   200122 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 004161   450001 713400                    CLIMB   alt,close
         2 004162   406000 401760                    pmme    nvectors=13
         2 004163   004166 702000 2                  TSX2    E_CLOSE_DCB

     1235     9545    3           END;

     1236     9546    2   CLOSE_DCB_RET:
     1237     9547    2     RETURN;

   9547  2 004164   200616 221300       CLOSE_DCB_R* LDX1  ! DCB#+1,,AUTO
         2 004165   000001 702211                    TSX2  ! 1,X1

     1238     9548    2   E_CLOSE_DCB:
     1239     9549    2     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;

   9549  2 004166   000000 470400 xsym  E_CLOSE_DCB  LDP0    B$TCB$
         2 004167   000000 471500                    LDP1    0,,PR0
         2 004170   100102 236100                    LDQ     66,,PR1
         2 004171   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 004172   300002 756100                    STQ     2,,PR3

     1240     9550    2     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   9550  2 004173   000011 236000 3                  LDQ     9
         2 004174   300001 356100                    ANSQ    1,,PR3

     1241     9551    2     ALTRETURN;

   9551  2 004175   200616 221300                    LDX1  ! DCB#+1,,AUTO
         2 004176   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:183  

     1242     9552    2   END CLOSE_DCB;
     1243     9553        %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:184  
     1244     9554        /**********************************************************************/
     1245     9555        /*I*   NAME: MERGE_DCB
     1246     9556               PURPOSE: Merge the assignments into the M$DO and M$LL dcbs
     1247     9557               DESCRIPTION: The specified dcb is merged with scrub and reaasign
     1248     9558                            set if not being performed for M$YC pmme.
     1249     9559        */
     1250     9560        /**********************************************************************/
     1251     9561    1   MERGE_DCB: PROC(DCB$) ALTRET;

   9561  2 004177   200616 741300       MERGE_DCB    STX1  ! DCB#+1,,AUTO

     1252     9562    2   DCL DCB$ PTR;
     1253     9563        %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
     1254     9672    2     IF B$JIT.CPFLAGS1 & %CP_YCPMME#  THEN

   9672  2 004200   000000 470400 xsym               LDP0    B$JIT$
         2 004201   000143 236100                    LDQ     99,,PR0
         2 004202   000177 376000 1                  ANQ     CONSTCLS+33
         2 004203   004205 600000 2                  TZE     s:9674

     1255     9673    2        RETURN;

   9673  2 004204   000001 702211                    TSX2  ! 1,X1

     1256     9674    2     FPT_OPEN = CPSL_CFPT_OPEN;

   9674  2 004205   000100 100400                    MLR     fill='000'O
         2 004206   000000 000350 xsym               ADSC9   CPSL_CFPT_OPEN           cn=0,n=232
         2 004207   200620 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

     1257     9675    2     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

   9675  2 004210   000002 235000 3                  LDA     2
         2 004211   200752 452500                    STP2    OPEN+2,,AUTO
         2 004212   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004213   000664 036003                    ADLQ    436,DU
         2 004214   200620 757100                    STAQ    FPT_OPEN,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:185  

     1258     9676    2     IF DCB$->TEXTC = CPSL_M$LL

   9676  2 004215   200617 471500                    LDP1    @DCB$,,AUTO
         2 004216   100000 473500                    LDP3    0,,PR1
         2 004217   000100 101500                    MRL     fill='000'O
         2 004220   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 004221   200752 000002                    ADSC9   OPEN+2,,AUTO             cn=0,n=2
         2 004222   200752 220100                    LDX0    OPEN+2,,AUTO
         2 004223   000001 622010                    EAX2    1,X0
         2 004224   000000 106540                    CMPC    fill='000'O
         2 004225   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         2 004226   000000 000005 xsym               ADSC9   CPSL_M$LL                cn=0,n=5
         2 004227   004234 601000 2                  TNZ     s:9679

     1259     9677    2        THEN
     1260     9678    2           CALL GETDCB_LL(FPT_OPEN.V.DCB#) ALTRET(E_MERGE_DCB_ALT) ;

   9678  2 004230   200664 633500                    EPPR3   OPNMYDCB+36,,AUTO
         2 004231   200713 453500                    STP3    CLSMYDCB+1,,AUTO
         2 004232   004575 701000 2                  TSX1    GETDCB_LL
         2 004233   004274 702000 2                  TSX2    E_MERGE_DCB_ALT

     1261     9679    2     IF DCB$->TEXTC = M$DO_DCB

   9679  2 004234   200617 470500                    LDP0    @DCB$,,AUTO
         2 004235   000000 471500                    LDP1    0,,PR0
         2 004236   000100 101500                    MRL     fill='000'O
         2 004237   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004240   200752 000002                    ADSC9   OPEN+2,,AUTO             cn=0,n=2
         2 004241   200752 220100                    LDX0    OPEN+2,,AUTO
         2 004242   000001 621010                    EAX1    1,X0
         2 004243   000000 106540                    CMPC    fill='000'O
         2 004244   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 004245   000000 000005 1                  ADSC9   M$DO_DCB                 cn=0,n=5
         2 004246   004251 601000 2                  TNZ     s:9682

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:186  
     1262     9680    2        THEN
     1263     9681    2           FPT_OPEN.V.DCB# = CPSL_M$DO_NUM;

   9681  2 004247   000000 720000 xsym               LXL0    CPSL_M$DO_NUM
         2 004250   200664 740100                    STX0    OPNMYDCB+36,,AUTO

     1264     9682    2     FPT_OPEN.V.INITZ.REASSIGN# = %YES#;

   9682  2 004251   200000 236007                    LDQ     65536,DL
         2 004252   200664 256100                    ORSQ    OPNMYDCB+36,,AUTO

     1265     9683    2     FPT_OPEN.V.INITZ.SCRUB# = %YES#;

   9683  2 004253   400000 236007                    LDQ     -131072,DL
         2 004254   200664 256100                    ORSQ    OPNMYDCB+36,,AUTO

     1266     9684    2     FPT_OPEN.V.SETDCB# = %YES#;

   9684  2 004255   100000 236007                    LDQ     32768,DL
         2 004256   200664 256100                    ORSQ    OPNMYDCB+36,,AUTO

     1267     9685    2     CALL M$OPEN(FPT_OPEN) ALTRET(E_MERGE_DCB);

   9685  2 004257   200620 630500                    EPPR0   FPT_OPEN,,AUTO
         2 004260   450000 713400                    CLIMB   alt,open
         2 004261   410400 401760                    pmme    nvectors=18
         2 004262   004265 702000 2                  TSX2    E_MERGE_DCB

     1268     9686    2     RETURN;

   9686  2 004263   200616 221300                    LDX1  ! DCB#+1,,AUTO
         2 004264   000001 702211                    TSX2  ! 1,X1

     1269     9687    2   E_MERGE_DCB:
     1270     9688    2     CPSL_PARAM.ERRCODE = B$TCB.ALT$ -> B$ALT.ERR;

   9688  2 004265   000000 470400 xsym  E_MERGE_DCB  LDP0    B$TCB$
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:187  
         2 004266   000000 471500                    LDP1    0,,PR0
         2 004267   100102 236100                    LDQ     66,,PR1
         2 004270   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 004271   300002 756100                    STQ     2,,PR3

     1271     9689    2     CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   9689  2 004272   000011 236000 3                  LDQ     9
         2 004273   300001 356100                    ANSQ    1,,PR3

     1272     9690    2   E_MERGE_DCB_ALT:
     1273     9691    2     ALTRETURN;

   9691  2 004274   200616 221300       E_MERGE_DCB* LDX1  ! DCB#+1,,AUTO
         2 004275   000000 702211                    TSX2  ! 0,X1

     1274     9692    2   END MERGE_DCB;
     1275     9693                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:188  
     1276     9694        /**********************************************************************/
     1277     9695        /*I*  NAME: DELETE_DCBS
     1278     9696              PURPOSE: Delete all dcbs in the *A file
     1279     9697              DESCRIPTION: If the M$LL or M$DO dcb is assigned, the dcb is closed and
     1280     9698                           the entry deleted. If the M$DO is assigned, it is reopened
     1281     9699                            with default assignment. All other dcbs are deleted from the
     1282     9700                           *A without being closed.
     1283     9701                           The M$DRIBBLE dcb is not deleted if the dribble proces
     1284     9702                           is in effect.
     1285     9703        */
     1286     9704        /**********************************************************************/
     1287     9705    1   DELETE_DCBS: PROC ALTRET;

   9705  2 004276   200614 741300       DELETE_DCBS  STX1  ! JOBSTATS_CRITERIA+20,,AUTO

     1288     9706        %VLP_NAME(FPTN=DQDELDCB,NAME="%(CONCAT('M$DQ',BITASC('177'O)))",LEN=5,STCLASS=
              9706            "CONSTANT");
     1289     9733        %VLP_NAME(FPTN=DRNULDCB,NAME="%(CONCAT('M$DR',BITASC('0'B)))",LEN=5,STCLASS=
              9733            "CONSTANT");
     1290     9760        /*
     1291     9761          ****     Close M$LL if open and only if a M$LL a/m record existed.
     1292     9762          ****     This removes old assignments that were in effect.
     1293     9763        */
     1294     9764    2     CALL CXB$DELAM(ADDR(CPSL_M$LL),,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;

   9764  2 004277   000034 236000 3                  LDQ     28
         2 004300   200752 756100                    STQ     OPEN+2,,AUTO
         2 004301   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 004302   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 004303   200756 757100                    STAQ    OPEN+6,,AUTO
         2 004304   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 004305   200755 756100                    STQ     OPEN+5,,AUTO
         2 004306   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 004307   200754 450500                    STP0    OPEN+4,,AUTO
         2 004310   200754 630500                    EPPR0   OPEN+4,,AUTO
         2 004311   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004312   000000 701000 xent               TSX1    CXB$DELAM
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:189  
         2 004313   000000 011000                    NOP     0

     1295     9765    2     IF CPSL_PARAM.ERRCODE ~= %NO#

   9765  2 004314   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004315   000002 235100                    LDA     2,,PR0
         2 004316   004321 600000 2                  TZE     s:9771

     1296     9766    2         THEN
     1297     9767    3             DO ;

     1298     9768    3               CPSL_PARAM.ERRCODE = %NO# ;

   9768  2 004317   000002 450100                    STZ     2,,PR0

     1299     9769    3               GOTO DELETE_DCBS10 ;

   9769  2 004320   004327 710000 2                  TRA     DELETE_DCBS10

     1300     9770    3             END ;
     1301     9771    2     CALL CLOSE_DCB(ADDR(CPSL_M$LL)) ALTRET(E_DELETE_DCBS);

   9771  2 004321   000034 236000 3                  LDQ     28
         2 004322   200764 756100                    STQ     OPEN+12,,AUTO
         2 004323   200764 631500                    EPPR1   OPEN+12,,AUTO
         2 004324   200617 451500                    STP1    @DCB$,,AUTO
         2 004325   004071 701000 2                  TSX1    CLOSE_DCB
         2 004326   004510 702000 2                  TSX2    E_DELETE_DCBS

     1302     9772    2   DELETE_DCBS10:
     1303     9773        /*
     1304     9774          ****    Close and reopen M$DO, if a M$DO record existed, to
     1305     9775          ****    Remove previous assignment.
     1306     9776        */
     1307     9777    2     CALL CXB$DELAM(ADDR(M$DO_DCB),,CPSL_PARAM.WORK_DCB#,CPSL_PARAM) ;

   9777  2 004327   000022 236000 3     DELETE_DCBS* LDQ     18
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:190  
         2 004330   200752 756100                    STQ     OPEN+2,,AUTO
         2 004331   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 004332   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 004333   200756 757100                    STAQ    OPEN+6,,AUTO
         2 004334   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 004335   200755 756100                    STQ     OPEN+5,,AUTO
         2 004336   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 004337   200754 450500                    STP0    OPEN+4,,AUTO
         2 004340   200754 630500                    EPPR0   OPEN+4,,AUTO
         2 004341   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004342   000000 701000 xent               TSX1    CXB$DELAM
         2 004343   000000 011000                    NOP     0

     1308     9778    2     IF CPSL_PARAM.ERRCODE ~= %NO#

   9778  2 004344   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004345   000002 235100                    LDA     2,,PR0
         2 004346   004351 600000 2                  TZE     s:9784

     1309     9779    2         THEN
     1310     9780    3             DO ;

     1311     9781    3               CPSL_PARAM.ERRCODE = %NO# ;

   9781  2 004347   000002 450100                    STZ     2,,PR0

     1312     9782    3               GOTO DELETE_DCBS20 ;

   9782  2 004350   004365 710000 2                  TRA     DELETE_DCBS20

     1313     9783    3             END ;
     1314     9784    2     CALL CLOSE_DCB(ADDR(M$DO_DCB)) ALTRET(E_DELETE_DCBS);

   9784  2 004351   000022 236000 3                  LDQ     18
         2 004352   200765 756100                    STQ     OPEN+13,,AUTO
         2 004353   200765 631500                    EPPR1   OPEN+13,,AUTO
         2 004354   200617 451500                    STP1    @DCB$,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:191  
         2 004355   004071 701000 2                  TSX1    CLOSE_DCB
         2 004356   004510 702000 2                  TSX2    E_DELETE_DCBS

     1315     9785    2     CALL MERGE_DCB(ADDR(M$DO_DCB)) ALTRET(E_DELETE_DCBS);

   9785  2 004357   000022 236000 3                  LDQ     18
         2 004360   200766 756100                    STQ     OPEN+14,,AUTO
         2 004361   200766 630500                    EPPR0   OPEN+14,,AUTO
         2 004362   200617 450500                    STP0    @DCB$,,AUTO
         2 004363   004177 701000 2                  TSX1    MERGE_DCB
         2 004364   004510 702000 2                  TSX2    E_DELETE_DCBS

     1316     9786    2   DELETE_DCBS20:
     1317     9787        /*
     1318     9788          ****     Delete remaining dcbs except for M$DRIBBLE if dribbling active.
     1319     9789        */
     1320     9790    2     IF (B$JIT.CPFLAGS1 & %CP_DRIBBLE#)  THEN

   9790  2 004365   000000 470400 xsym  DELETE_DCBS* LDP0    B$JIT$
         2 004366   000143 236100                    LDQ     99,,PR0
         2 004367   000200 376000 1                  ANQ     CONSTCLS+34
         2 004370   004436 600000 2                  TZE     s:9802

     1321     9791    3        DO;

     1322     9792    3           CALL CXB$DELAM(ADDR(CPSL_FDCB),ADDR(DQDELDCB),CPSL_PARAM.WORK_DCB#,
              9792                    CPSL_PARAM) ;

   9792  2 004371   000035 236000 3                  LDQ     29
         2 004372   200752 756100                    STQ     OPEN+2,,AUTO
         2 004373   000036 236000 3                  LDQ     30
         2 004374   200753 756100                    STQ     OPEN+3,,AUTO
         2 004375   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 004376   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 004377   200756 757100                    STAQ    OPEN+6,,AUTO
         2 004400   200753 631500                    EPPR1   OPEN+3,,AUTO
         2 004401   200755 451500                    STP1    OPEN+5,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:192  
         2 004402   200752 633500                    EPPR3   OPEN+2,,AUTO
         2 004403   200754 453500                    STP3    OPEN+4,,AUTO
         2 004404   200754 630500                    EPPR0   OPEN+4,,AUTO
         2 004405   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004406   000000 701000 xent               TSX1    CXB$DELAM
         2 004407   000000 011000                    NOP     0

     1323     9793    3           IF CPSL_PARAM.ERRCODE ~= %NO#

   9793  2 004410   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004411   000002 235100                    LDA     2,,PR0
         2 004412   004510 601000 2                  TNZ     E_DELETE_DCBS

     1324     9794    3             THEN
     1325     9795    3               GOTO E_DELETE_DCBS ;
     1326     9796    3           CALL CXB$DELAM(ADDR(DRNULDCB),ADDR(CPSL_LDCB),CPSL_PARAM.WORK_DCB#,
              9796                    CPSL_PARAM) ;

   9796  2 004413   000037 236000 3                  LDQ     31
         2 004414   200752 756100                    STQ     OPEN+2,,AUTO
         2 004415   000040 236000 3                  LDQ     32
         2 004416   200753 756100                    STQ     OPEN+3,,AUTO
         2 004417   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 004420   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 004421   200756 757100                    STAQ    OPEN+6,,AUTO
         2 004422   200753 631500                    EPPR1   OPEN+3,,AUTO
         2 004423   200755 451500                    STP1    OPEN+5,,AUTO
         2 004424   200752 633500                    EPPR3   OPEN+2,,AUTO
         2 004425   200754 453500                    STP3    OPEN+4,,AUTO
         2 004426   200754 630500                    EPPR0   OPEN+4,,AUTO
         2 004427   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004430   000000 701000 xent               TSX1    CXB$DELAM
         2 004431   000000 011000                    NOP     0

     1327     9797    3           IF CPSL_PARAM.ERRCODE ~= %NO#

   9797  2 004432   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:193  
         2 004433   000002 235100                    LDA     2,,PR0
         2 004434   004510 601000 2                  TNZ     E_DELETE_DCBS

     1328     9798    3             THEN
     1329     9799    3               GOTO E_DELETE_DCBS ;
     1330     9800    3        END;

   9800  2 004435   004455 710000 2                  TRA     s:9803

     1331     9801    2     ELSE
     1332     9802    2       CALL CXB$DELAM(ADDR(CPSL_FDCB),ADDR(CPSL_LDCB),CPSL_PARAM.WORK_DCB#,CPSL_PARAM)
              9802                 ;

   9802  2 004436   000035 236000 3                  LDQ     29
         2 004437   200752 756100                    STQ     OPEN+2,,AUTO
         2 004440   000040 236000 3                  LDQ     32
         2 004441   200753 756100                    STQ     OPEN+3,,AUTO
         2 004442   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 004443   200004 235100                    LDA     @CPSL_PARAM,,AUTO
         2 004444   200756 757100                    STAQ    OPEN+6,,AUTO
         2 004445   200753 631500                    EPPR1   OPEN+3,,AUTO
         2 004446   200755 451500                    STP1    OPEN+5,,AUTO
         2 004447   200752 633500                    EPPR3   OPEN+2,,AUTO
         2 004450   200754 453500                    STP3    OPEN+4,,AUTO
         2 004451   200754 630500                    EPPR0   OPEN+4,,AUTO
         2 004452   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004453   000000 701000 xent               TSX1    CXB$DELAM
         2 004454   000000 011000                    NOP     0

     1333     9803    2        IF CPSL_PARAM.ERRCODE ~= %NO#

   9803  2 004455   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004456   000002 235100                    LDA     2,,PR0
         2 004457   004510 601000 2                  TNZ     E_DELETE_DCBS

     1334     9804    2         THEN
     1335     9805    2             GOTO E_DELETE_DCBS ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:194  
     1336     9806    3     DO J=0 TO 35;

   9806  2 004460   200024 450100                    STZ     J,,AUTO

     1337     9807    3        B$JIT.FEXT(J)=%NO#;

   9807  2 004461   200024 235100                    LDA     J,,AUTO
         2 004462   004464 605000 2                  TPL     s:9807+3
         2 004463   000044 035003                    ADLA    36,DU
         2 004464   000000 470400 xsym               LDP0    B$JIT$
         2 004465   003105 060400                    CSL     bolr='003'O
         2 004466   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         2 004467   000220 000001                    BDSC    144,A,PR0                by=0,bit=0,n=1

     1338     9808    3     END;

   9808  2 004470   200024 054100                    AOS     J,,AUTO
         2 004471   200024 235100                    LDA     J,,AUTO
         2 004472   000043 115007                    CMPA    35,DL
         2 004473   004461 604400 2                  TMOZ    s:9807

     1339     9809    2     B$JIT.PRFLAGS.SI = %NO#;

   9809  2 004474   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 004475   000030 356100                    ANSQ    24,,PR0

     1340     9810    2     B$JIT.PRFLAGS.UI = %NO#;

   9810  2 004476   000041 236000 3                  LDQ     33
         2 004477   000030 356100                    ANSQ    24,,PR0

     1341     9811    2     B$JIT.PRFLAGS.OU = %NO#;

   9811  2 004500   000011 236000 3                  LDQ     9
         2 004501   000030 356100                    ANSQ    24,,PR0

     1342     9812    2     B$JIT.PRFLAGS.LS = %NO#;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:195  

   9812  2 004502   000042 236000 3                  LDQ     34
         2 004503   000030 356100                    ANSQ    24,,PR0

     1343     9813    2     CPSL_PARAM.ERRCODE = %NO# ;

   9813  2 004504   200004 471500                    LDP1    @CPSL_PARAM,,AUTO
         2 004505   100002 450100                    STZ     2,,PR1

     1344     9814    2     RETURN;

   9814  2 004506   200614 221300                    LDX1  ! JOBSTATS_CRITERIA+20,,AUTO
         2 004507   000001 702211                    TSX2  ! 1,X1

     1345     9815    2   E_DELETE_DCBS:
     1346     9816    2     ALTRETURN;

   9816  2 004510   200614 221300       E_DELETE_DC* LDX1  ! JOBSTATS_CRITERIA+20,,AUTO
         2 004511   000000 702211                    TSX2  ! 0,X1

     1347     9817    2   END DELETE_DCBS;
     1348     9818                   %EJECT;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:196  
     1349     9819        /********************************************************************/
     1350     9820        /*I*   NAME: CHK_ASGN
     1351     9821               PURPOSE: Check if M$DO and M$LL dcbs are being assigned to *A or *S
     1352     9822               DESCRIPTION: Output error message if user is attempting to assign
     1353     9823                         M$DO and M$LL dcbs to the *A or *S files. Clobbering of
     1354     9824                         these files creates havoc.
     1355     9825        */
     1356     9826        /********************************************************************/
     1357     9827    1   CHK_ASGN: PROC (CPOS,DCB$,FID$) ALTRET;

   9827  2 004512   200614 741300       CHK_ASGN     STX1  ! JOBSTATS_CRITERIA+20,,AUTO

     1358     9828    2   DCL CPOS UBIN WORD;
     1359     9829    2   DCL DCB$ PTR;
     1360     9830    2   DCL FID$ PTR;
     1361     9831        %VLP_NAME(FPTN=DCB_NAME,LEN=31,STCLASS=AUTO);
     1362     9858        /**/
     1363     9859        /*
     1364     9860             ***** DCB$ points to dcbname.
     1365     9861                   FID$ points to filename.
     1366     9862                   CPOS is character position of dcbname in CPBUFF ...
     1367     9863        */
     1368     9864    2     IF (DCB$ -> TEXTC = M$DO_DCB)  OR (DCB$ -> TEXTC = CPSL_M$LL)

   9864  2 004513   200616 470500                    LDP0    @DCB$,,AUTO
         2 004514   000000 471500                    LDP1    0,,PR0
         2 004515   000100 101500                    MRL     fill='000'O
         2 004516   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004517   200752 000002                    ADSC9   OPEN+2,,AUTO             cn=0,n=2
         2 004520   200752 220100                    LDX0    OPEN+2,,AUTO
         2 004521   000001 622010                    EAX2    1,X0
         2 004522   000000 106540                    CMPC    fill='000'O
         2 004523   100000 000012                    ADSC9   0,,PR1                   cn=0,n=*X2
         2 004524   000000 000005 1                  ADSC9   M$DO_DCB                 cn=0,n=5
         2 004525   004540 600000 2                  TZE     s:9866
         2 004526   000000 471500                    LDP1    0,,PR0
         2 004527   000100 101500                    MRL     fill='000'O
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:197  
         2 004530   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 004531   200753 000002                    ADSC9   OPEN+3,,AUTO             cn=0,n=2
         2 004532   200753 223100                    LDX3    OPEN+3,,AUTO
         2 004533   000001 624013                    EAX4    1,X3
         2 004534   000000 106540                    CMPC    fill='000'O
         2 004535   100000 000014                    ADSC9   0,,PR1                   cn=0,n=*X4
         2 004536   000000 000005 xsym               ADSC9   CPSL_M$LL                cn=0,n=5
         2 004537   004574 601000 2                  TNZ     s:9873

     1369     9865    2        THEN
     1370     9866    2           IF (FID$ -> TEXTC = CPSL_STARA) OR (FID$ -> TEXTC = CPSL_STARS)

   9866  2 004540   200617 471500                    LDP1    @FID$,,AUTO
         2 004541   100000 473500                    LDP3    0,,PR1
         2 004542   000100 101500                    MRL     fill='000'O
         2 004543   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 004544   200752 000002                    ADSC9   OPEN+2,,AUTO             cn=0,n=2
         2 004545   200752 220100                    LDX0    OPEN+2,,AUTO
         2 004546   000001 622010                    EAX2    1,X0
         2 004547   000000 106540                    CMPC    fill='000'O
         2 004550   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2
         2 004551   000000 000003 xsym               ADSC9   CPSL_STARA               cn=0,n=3
         2 004552   004565 600000 2                  TZE     s:9869
         2 004553   100000 473500                    LDP3    0,,PR1
         2 004554   000100 101500                    MRL     fill='000'O
         2 004555   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 004556   200753 000002                    ADSC9   OPEN+3,,AUTO             cn=0,n=2
         2 004557   200753 223100                    LDX3    OPEN+3,,AUTO
         2 004560   000001 624013                    EAX4    1,X3
         2 004561   000000 106540                    CMPC    fill='000'O
         2 004562   300000 000014                    ADSC9   0,,PR3                   cn=0,n=*X4
         2 004563   000000 000003 xsym               ADSC9   CPSL_STARS               cn=0,n=3
         2 004564   004574 601000 2                  TNZ     s:9873

     1371     9867    2              THEN
     1372     9868    3                 DO ;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:198  
     1373     9869    3                   CPSL_PARAM.ERRCODE = E_BADASGN ;

   9869  2 004565   000035 236000 1                  LDQ     E_BADASGN
         2 004566   200004 473500                    LDP3    @CPSL_PARAM,,AUTO
         2 004567   300002 756100                    STQ     2,,PR3

     1374     9870    3                   CPSL_PARAM.FLAGS.REPORTED_TO_USER = %NO# ;

   9870  2 004570   000011 236000 3                  LDQ     9
         2 004571   300001 356100                    ANSQ    1,,PR3

     1375     9871    3                   ALTRETURN ;

   9871  2 004572   200614 221300                    LDX1  ! JOBSTATS_CRITERIA+20,,AUTO
         2 004573   000000 702211                    TSX2  ! 0,X1

     1376     9872    3                 END ; /* Then Do */
     1377     9873    2     RETURN;

   9873  2 004574   000001 702211                    TSX2  ! 1,X1

     1378     9874    2   END CHK_ASGN;
     1379     9875        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:199  
     1380     9876    1   GETDCB_LL:  PROC(DCB#) ALTRET ;

   9876  2 004575   200712 741300       GETDCB_LL    STX1  ! OPNMYDCB+58,,AUTO

     1381     9877    2   DCL DCB# UBIN WORD ;
     1382     9878    2   DCL I UBIN WORD ;
     1383     9879    2   DCL J UBIN WORD ;
     1384     9880    2   DCL TEMP$ PTR ;
     1385     9881
     1386     9882    2     J=0;

   9882  2 004576   200715 450100                    STZ     J,,AUTO

     1387     9883    3     DO I=1 TO B$ROS$->B$ROSEG.NUMDCBS;

   9883  2 004577   000001 235007                    LDA     1,DL
         2 004600   200714 755100                    STA     I,,AUTO
         2 004601   004627 710000 2                  TRA     s:9892+3

     1388     9884    3        IF DCBADDR(I) ~= ADDR(NIL)

   9884  2 004602   000000 470400 3                  LDP0    0
         2 004603   000000 471500                    LDP1    0,,PR0
         2 004604   200714 720100                    LXL0    I,,AUTO
         2 004605   100000 236110                    LDQ     0,X0,PR1
         2 004606   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 004607   004624 600000 2                  TZE     s:9892

     1389     9885    3           THEN
     1390     9886    4              DO;

     1391     9887    4               TEMP$ = DCBADDR(I);

   9887  2 004610   200716 756100                    STQ     TEMP$,,AUTO

     1392     9888    4               IF (TEMP$->F$DCB.DCBNAME.N=M$LL.TXT)

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:200  
   9888  2 004611   200716 473500                    LDP3    TEMP$,,AUTO
         2 004612   300140 236100                    LDQ     96,,PR3
         2 004613   000033 772000                    QRL     27
         2 004614   000037 376007                    ANQ     31,DL
         2 004615   000000 621006                    EAX1    0,QL
         2 004616   040000 106540                    CMPC    fill='040'O
         2 004617   300140 200011                    ADSC9   96,,PR3                  cn=1,n=*X1
         2 004620   000002 200004 1                  ADSC9   M$LL                     cn=1,n=4
         2 004621   004624 601000 2                  TNZ     s:9892

     1393     9889    4                 THEN
     1394     9890    4                   J=I ;                            /*Save dcb number*/

   9890  2 004622   200714 235100                    LDA     I,,AUTO
         2 004623   200715 755100                    STA     J,,AUTO

     1395     9891    4              END;

     1396     9892    3     END;

   9892  2 004624   200714 235100                    LDA     I,,AUTO
         2 004625   000001 035007                    ADLA    1,DL
         2 004626   200714 755100                    STA     I,,AUTO
         2 004627   000000 470400 xsym               LDP0    B$ROS$
         2 004630   000002 236100                    LDQ     2,,PR0
         2 004631   000022 772000                    QRL     18
         2 004632   200714 116100                    CMPQ    I,,AUTO
         2 004633   004602 603000 2                  TRC     s:9884

     1397     9893    2     IF J=0 OR J=M$UC_NUM

   9893  2 004634   200715 235100                    LDA     J,,AUTO
         2 004635   004641 600000 2                  TZE     s:9895
         2 004636   200715 236100                    LDQ     J,,AUTO
         2 004637   000004 116000 1                  CMPQ    M$UC_NUM
         2 004640   004651 601000 2                  TNZ     s:9896

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:201  
     1398     9894    2         THEN
     1399     9895    2           CALL CXC$GETDCB (M$LL,J) ;

   9895  2 004641   200715 631500                    EPPR1   J,,AUTO
         2 004642   200753 451500                    STP1    OPEN+3,,AUTO
         2 004643   000043 236000 3                  LDQ     35
         2 004644   200752 756100                    STQ     OPEN+2,,AUTO
         2 004645   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 004646   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 004647   000000 701000 xent               TSX1    CXC$GETDCB
         2 004650   000000 011000                    NOP     0

     1400     9896    2           IF CPSL_PARAM.ERRCODE ~= %NO#

   9896  2 004651   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004652   000002 235100                    LDA     2,,PR0
         2 004653   004661 601000 2                  TNZ     GETDCB_LL_ALT

     1401     9897    2             THEN
     1402     9898    2               GOTO GETDCB_LL_ALT ;
     1403     9899    2     DCB# = J ;

   9899  2 004654   200713 471500                    LDP1    @DCB#,,AUTO
         2 004655   200715 236100                    LDQ     J,,AUTO
         2 004656   100000 756100                    STQ     0,,PR1

     1404     9900    2     RETURN ;

   9900  2 004657   200712 221300                    LDX1  ! OPNMYDCB+58,,AUTO
         2 004660   000001 702211                    TSX2  ! 1,X1

     1405     9901
     1406     9902    2   GETDCB_LL_ALT:
     1407     9903    2     ALTRETURN ;

   9903  2 004661   200712 221300       GETDCB_LL_A* LDX1  ! OPNMYDCB+58,,AUTO
         2 004662   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:202  

     1408     9904
     1409     9905    2   END   GETDCB_LL ;
     1410     9906        %EJECT ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:203  
     1411     9907        /********************************************************************/
     1412     9908        /*I*   NAME: GET_LDEV_HDR
     1413     9909               PURPOSE: Find a dcb with LDEV for this STREAMNAME.
     1414     9910               DESCRIPTION: IBEX will try to open the WORK_DCB for this stream.
     1415     9911                            If the open fails it will try to locate a DCB that is
     1416     9912                         open to this stream by calling CXF$FIND_STREAM.  If IBEX
     1417     9913                         OPENs the WORK_DCB, then IBEX must CLOSE it.
     1418     9914                         Once IBEX gets the header, IBEX will reset NEED_LDEV_HDR.
     1419     9915        */
     1420     9916        /********************************************************************/
     1421     9917    1   GET_LDEV_HDR: PROC ;

   9917  2 004663   200614 741300       GET_LDEV_HDR STX1  ! JOBSTATS_CRITERIA+20,,AUTO

     1422     9918
     1423     9919    2   DCL DCB# UBIN WORD ;
     1424     9920    2   DCL DCB$ PTR ;
     1425     9921        %FPT_OPEN(FPTN=OPNMYDCB,STCLASS=AUTO) ;
     1426    10030        %FPT_OPEN(FPTN=CONSTOPN,STCLASS=CONSTANT,ASN=DEVICE,FUN=CREATE);
     1427    10139        %FPT_CLOSE(FPTN=CLSMYDCB,STCLASS=);
     1428    10181        %FPT_CLOSE(FPTN=CONSTCLS,STCLASS=CONSTANT,DISP=SAVE);
     1429    10223    2   DCL OPEN BIT(1) ;
     1430    10224
     1431    10225    2     NEED_LDEV_HDR = %NO# ;

  10225  2 004664   200021 450100                    STZ     NEED_LDEV_HDR,,AUTO

     1432    10226    2     OPEN = %NO# ;

  10226  2 004665   200750 450100                    STZ     OPEN,,AUTO

     1433    10227    2     IF FPT_LDEV.V.DEV# = ' '

  10227  2 004666   200177 720100                    LXL0    FPT_LDEV+15,,AUTO
         2 004667   040040 100003                    CMPX0   16416,DU
         2 004670   005022 601000 2                  TNZ     GET_LDEV_HDR_RET

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:204  
     1434    10228    2       THEN
     1435    10229    3         DO ;

     1436    10230    3             DCB# = CPSL_PARAM.WORK_DCB# ;

  10230  2 004671   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004672   000000 235100                    LDA     0,,PR0
         2 004673   200615 755100                    STA     DCB#,,AUTO

     1437    10231    3             DCB$ = DCBADDR(DCB#) ;

  10231  2 004674   000000 471400 3                  LDP1    0
         2 004675   100000 473500                    LDP3    0,,PR1
         2 004676   300000 236105                    LDQ     0,AL,PR3
         2 004677   200616 756100                    STQ     DCB$,,AUTO

     1438    10232    3             CLSMYDCB = CONSTCLS ;

  10232  2 004700   000100 100400                    MLR     fill='000'O
         2 004701   000136 000170 1                  ADSC9   CONSTCLS                 cn=0,n=120
         2 004702   200712 000170                    ADSC9   CLSMYDCB,,AUTO           cn=0,n=120

     1439    10233    3             CLSMYDCB.V_=VECTOR(CLSMYDCB.V) ;

  10233  2 004703   000001 235000 3                  LDA     1
         2 004704   200752 452500                    STP2    OPEN+2,,AUTO
         2 004705   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004706   000744 036003                    ADLQ    484,DU
         2 004707   200712 757100                    STAQ    CLSMYDCB,,AUTO

     1440    10234    3             CLSMYDCB.V.DCB# = DCB# ;

  10234  2 004710   200615 722100                    LXL2    DCB#,,AUTO
         2 004711   200744 742100                    STX2    TEMP$+22,,AUTO

     1441    10235    3             IF DCB$->F$DCB.FCD#

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:205  
  10235  2 004712   200616 474500                    LDP4    DCB$,,AUTO
         2 004713   400031 236100                    LDQ     25,,PR4
         2 004714   020000 316007                    CANQ    8192,DL
         2 004715   004723 600000 2                  TZE     s:10238

     1442    10236    3               THEN
     1443    10237    4                 CALL M$CLOSE(CLSMYDCB) WHENALTRETURN DO ; END ;

  10237  2 004716   200712 630500                    EPPR0   CLSMYDCB,,AUTO
         2 004717   450001 713400                    CLIMB   alt,close
         2 004720   406000 401760                    pmme    nvectors=13
         2 004721   004723 702000 2                  TSX2    s:10238
         2 004722   004723 710000 2                  TRA     s:10238

     1444    10238    3             OPNMYDCB = CONSTOPN ;

  10238  2 004723   000100 100400                    MLR     fill='000'O
         2 004724   000044 000350 1                  ADSC9   CONSTOPN                 cn=0,n=232
         2 004725   200620 000350                    ADSC9   OPNMYDCB,,AUTO           cn=0,n=232

     1445    10239    3             OPNMYDCB.V_ = VECTOR(OPNMYDCB.V) ;

  10239  2 004726   000002 235000 3                  LDA     2
         2 004727   200752 452500                    STP2    OPEN+2,,AUTO
         2 004730   200752 236100                    LDQ     OPEN+2,,AUTO
         2 004731   000664 036003                    ADLQ    436,DU
         2 004732   200620 757100                    STAQ    OPNMYDCB,,AUTO

     1446    10240    3             OPNMYDCB.V.DCB# = DCB# ;

  10240  2 004733   200615 720100                    LXL0    DCB#,,AUTO
         2 004734   200664 740100                    STX0    OPNMYDCB+36,,AUTO

     1447    10241    3             OPNMYDCB.V.RES# = FPT_LDEV.V.STREAMNAME# ;

  10241  2 004735   200176 236100                    LDQ     FPT_LDEV+14,,AUTO
         2 004736   200670 756100                    STQ     OPNMYDCB+40,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:206  

     1448    10242    3             OPNMYDCB.V.ASN# = %DEVICE# ;

  10242  2 004737   000003 236007                    LDQ     3,DL
         2 004740   200665 552104                    STBQ    OPNMYDCB+37,'04'O,AUTO

     1449    10243    3             CALL M$OPEN(OPNMYDCB) WHENRETURN

  10243  2 004741   200620 630500                    EPPR0   OPNMYDCB,,AUTO
         2 004742   450000 713400                    CLIMB   alt,open
         2 004743   410400 401760                    pmme    nvectors=18
         2 004744   004750 702000 2                  TSX2    s:10249

     1450    10244    4                 DO ;

     1451    10245    4                   OPEN = %YES#;

  10245  2 004745   400000 236003                    LDQ     -131072,DU
         2 004746   200750 756100                    STQ     OPEN,,AUTO

     1452    10246    4                 END ; /* Whenreturn Do */

  10246  2 004747   004773 710000 2                  TRA     s:10259

     1453    10247    3                 WHENALTRETURN
     1454    10248    4                 DO;

     1455    10249    4                   CALL CXF$FIND_STREAM(SUBSTR(FPT_LDEV.V.STREAMNAME#,0,2),

  10249  2 004750   200004 236100                    LDQ     @CPSL_PARAM,,AUTO
         2 004751   200755 756100                    STQ     OPEN+5,,AUTO
         2 004752   200615 630500                    EPPR0   DCB#,,AUTO
         2 004753   200754 450500                    STP0    OPEN+4,,AUTO
         2 004754   200756 452500                    STP2    OPEN+6,,AUTO
         2 004755   200756 236100                    LDQ     OPEN+6,,AUTO
         2 004756   000044 036000 3                  ADLQ    36
         2 004757   200753 756100                    STQ     OPEN+3,,AUTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:207  
         2 004760   200176 631500                    EPPR1   FPT_LDEV+14,,AUTO
         2 004761   200752 451500                    STP1    OPEN+2,,AUTO
         2 004762   200752 630500                    EPPR0   OPEN+2,,AUTO
         2 004763   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 004764   000000 701000 xent               TSX1    CXF$FIND_STREAM
         2 004765   000000 011000                    NOP     0

     1456    10250    4                                         SUBSTR(FPT_LDEV.V.STREAMNAME#,2,2),
     1457    10251    4                                         DCB#, CPSL_PARAM);
     1458    10252    4                   IF CPSL_PARAM.ERRCODE ~= %NO#

  10252  2 004766   200004 470500                    LDP0    @CPSL_PARAM,,AUTO
         2 004767   000002 235100                    LDA     2,,PR0
         2 004770   004773 600000 2                  TZE     s:10259

     1459    10253    4                     THEN
     1460    10254    5                       DO;

     1461    10255    5                         CPSL_PARAM.ERRCODE = '0'B;      /* Ignore the error */

  10255  2 004771   000002 450100                    STZ     2,,PR0

     1462    10256    5                         GOTO GET_LDEV_HDR_RET;  /* IBEX will build one upon return */

  10256  2 004772   005022 710000 2                  TRA     GET_LDEV_HDR_RET

     1463    10257    5                       END;  /* Then Do */
     1464    10258    4                   END ; /* Whenaltreturn Do */
     1465    10259    3             IF DCB$->F$DCB.CFU$ ~= ADDR(NIL)

  10259  2 004773   200616 470500                    LDP0    DCB$,,AUTO
         2 004774   000066 236100                    LDQ     54,,PR0
         2 004775   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 004776   005000 600000 2                  TZE     s:10262

     1466    10260    3               THEN
     1467    10261    3                 DCB$ = DCB$->F$DCB.CFU$ ;
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:208  

  10261  2 004777   200616 756100                    STQ     DCB$,,AUTO

     1468    10262    3             IF DCB$->F$DCB.HEADER$ ~= ADDR(NIL)

  10262  2 005000   200616 470500                    LDP0    DCB$,,AUTO
         2 005001   000046 236100                    LDQ     38,,PR0
         2 005002   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 005003   005013 600000 2                  TZE     s:10266

     1469    10263    3               THEN
     1470    10264    3                 VLP_HDR = DCB$->F$DCB.HEADER$->AM$HDR ;

  10264  2 005004   000046 471500                    LDP1    38,,PR0
         2 005005   100001 236100                    LDQ     1,,PR1
         2 005006   000033 772000                    QRL     27
         2 005007   000005 620006                    EAX0    5,QL
         2 005010   000100 100540                    MLR     fill='000'O
         2 005011   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 005012   200314 001004                    ADSC9   VLP_HDR,,AUTO            cn=0,n=516

     1471    10265
     1472    10266    3             IF OPEN

  10266  2 005013   200750 234100                    SZN     OPEN,,AUTO
         2 005014   005022 605000 2                  TPL     GET_LDEV_HDR_RET

     1473    10267    3               THEN
     1474    10268    4                 CALL M$CLOSE(CLSMYDCB) WHENALTRETURN DO ; END ;

  10268  2 005015   200712 630500                    EPPR0   CLSMYDCB,,AUTO
         2 005016   450001 713400                    CLIMB   alt,close
         2 005017   406000 401760                    pmme    nvectors=13
         2 005020   005022 702000 2                  TSX2    GET_LDEV_HDR_RET
         2 005021   005022 710000 2                  TRA     GET_LDEV_HDR_RET

     1475    10269
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:209  
     1476    10270    3         END ; /* Then Do */

     1477    10271
     1478    10272    2   GET_LDEV_HDR_RET:
     1479    10273    2     RETURN ;

  10273  2 005022   200614 221300       GET_LDEV_HD* LDX1  ! JOBSTATS_CRITERIA+20,,AUTO
         2 005023   000001 702211                    TSX2  ! 1,X1
     1480    10274
     1481    10275    2   END   GET_LDEV_HDR ;
     1482    10276    1   END CXB$IBEX;

PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:210  
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CX_PERR_C.:E05TOU  is referenced.
   CX_ISUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CX_MACROS_M.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CXB$IBEX.
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:211  

 **** Variables and constants ****

  ****  Section 001 RoData CXB$IBEX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   136-0-0/d STRC(1080)  r     1 CONSTCLS                  44-0-0/d STRC(2088)  r     1 CONSTOPN
     6-0-0/d STRC(702)   r     1 CVLP_CRITERIA             40-0-0/c STRC(54)    r     1 DQDELDCB
    42-0-0/c STRC(54)    r     1 DRNULDCB                  32-0-0/w STRC        r     1 E_ADJSTCLS
    35-0-0/w STRC        r     1 E_BADASGN                 33-0-0/w STRC        r     1 E_ILLASGN
    36-0-0/w STRC        r     1 E_JOBNTFND                34-0-0/w STRC        r     1 E_NOASGN
    37-0-0/w STRC        r     1 E_NOSYMFILE                0-0-0/d STRC(45)    r     1 M$DO_DCB
     2-0-0/d STRC(45)    r     1 M$LL                       4-0-0/w UBIN        r     1 M$UC_NUM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   615-0-0/w PTR         r     1 @CPOS                      4-0-0/w PTR         r     1 @CPSL_PARAM
   713-0-0/w PTR         r     1 @DCB#                    617-0-0/w PTR         r     1 @DCB$
   617-0-0/w PTR         r     1 @DCB$                    616-0-0/w PTR         r     1 @DCB$
   617-0-0/w PTR         r     1 @FID$                      3-0-0/w PTR         r     1 @GETCMD
   615-0-0/w PTR         r     1 @P$S                       6-0-0/w PTR         r     1 BLK$
   712-0-0/d STRC(1080)  r     1 CLSMYDCB                  27-0-0/w UBIN        r     1 CPOS
    *0-0-0/w UBIN        r     1 CPOS                      *0-0-0/w STRC(180)   r     1 CPSL_PARAM
    *0-0-0/w UBIN        r     1 DCB#                     615-0-0/w UBIN        r     1 DCB#
    10-0-0/w PTR         r     1 DCB$                      *0-0-0/w PTR         r     1 DCB$
    *0-0-0/w PTR         r     1 DCB$                      *0-0-0/w PTR         r     1 DCB$
   616-0-0/w PTR         r     1 DCB$                     620-0-0/w UBIN        r     1 DCB_NUM
    22-0-0/b BIT         r     1 DONE                     546-0-0/w STRC        r     1 ERR_CODE
    11-0-0/w PTR         r     1 FID$                      *0-0-0/w PTR         r     1 FID$
   300-0-0/c STRC(72)    r     1 FID_ACCT                  13-0-0/w UBIN(9)     r     1 FID_ASN
   515-0-0/c STRC(288)   r     1 FID_NAME                 525-0-0/c STRC(72)    r     1 FID_PASS
    14-0-0/c CHAR(4)     r     1 FID_RES                  302-0-0/d STRC(324)   r     1 FID_RESULTS
   530-0-0/d STRC(90)    r     1 FID_SN                   534-0-0/c STRC(72)    r     1 FID_WSN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:212  
   122-0-0/d STRC(1080)  r     1 FPT_CLOSE                204-0-0/d STRC(864)   r     1 FPT_FID
   234-0-0/d STRC(1296)  r     1 FPT_JOBSTATS             160-0-0/d STRC(720)   r     1 FPT_LDEV
    30-0-0/d STRC(2088)  r     1 FPT_OPEN                 620-0-0/d STRC(2088)  r     1 FPT_OPEN
    *0-0-0/d STRC(1512)  r     1 GETCMD                    20-0-0/b BIT         r     1 GIVE_ADJSTCLS_MSG
    17-0-0/b BIT         r     1 GOT_LOGON_OPTION          23-0-0/w SBIN        r     1 I
   714-0-0/w UBIN        r     1 I                         24-0-0/w SBIN        r     1 J
   715-0-0/w UBIN        r     1 J                        570-0-0/d STRC(702)   r     1 JOBSTATS_CRITERIA
    21-0-0/b BIT         r     1 NEED_LDEV_HDR            750-0-0/b BIT         r     1 OPEN
   620-0-0/d STRC(2088)  r     1 OPNMYDCB                   5-0-0/w PTR         r     1 P$
    *0-0-0/w ASTR(153)   r     1 P$S                       15-0-0/c STRC(45)    r     1 SYMNAME
    26-0-0/w UBIN        r     1 TEMP                       7-0-0/w PTR         r     1 TEMP$
   716-0-0/w PTR         r     1 TEMP$                    314-0-0/w STRC(4644)  r     1 VLP_HDR
   550-0-0/d STRC(288)   r     1 VLP_JOBNAME              536-0-0/w STRC(288)   r     1 VLP_TABS
   560-0-0/d STRC(288)   r     1 VLP_WINDOW

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROS$
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/d STRC(1080)  r     1 CPSL_CFPT_CLOSE
     0-0-0/d STRC(864)   r     1 CPSL_CFPT_FID              0-0-0/d STRC(1296)  r     1 CPSL_CFPT_JOBSTATS
     0-0-0/d STRC(720)   r     1 CPSL_CFPT_LDEV             0-0-0/d STRC(2088)  r     1 CPSL_CFPT_OPEN
     0-0-0/w STRC(72)    r     1 CPSL_CVLP_HDR              0-0-0/w STRC(288)   r     1 CPSL_CVLP_TAB
     0-0-0/d STRC(288)   r     1 CPSL_CVLP_WINDOW           0-0-0/w STRC(18)    r     1 CPSL_FDCB
     0-0-0/w STRC(18)    r     1 CPSL_LDCB                  0-0-0/w UBIN        r     1 CPSL_M$DO_NUM
     0-0-0/d STRC(45)    r     1 CPSL_M$LL                  0-0-0/w PTR         r     1 CPSL_SEG3$
     0-0-0/c STRC(27)    r     1 CPSL_STARA                 0-0-0/c STRC(27)    r     1 CPSL_STARS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(72)    r     1 AM$ACCT                    0-0-0/c STRC(54)    r     1 AM$FORM
     0-0-0/w ASTR(45)    r     1 AM$HDR                     0-0-0/c STRC(288)   r     1 AM$NAME
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:213  
     0-0-0/c STRC(72)    r     1 AM$PASS                    0-0-0/w STRC(432)   r     1 AM$SETSTA
     0-0-0/d STRC(2736)  r     1 AM$SN                      0-0-0/w STRC(288)   r     1 AM$TAB
     0-0-0/c STRC(72)    r     1 AM$WSN                     0-0-0/d STRC(1440)  r     1 AMR$REC$
     0-0-0/w UBIN        r     1 B$$PAGE(0:1023)            0-0-0/w STRC(2448)  r     1 B$ALT
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(3024)  r     1 B$ROSEG
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/w ASTR(153)   r     1 P$S
     0-0-0/c ASTR(9)     r     1 TEXTC                      0-0-0/w STRC(1008)  r     1 VLA$OSRCH
     0-0-0/d STRC(1080)  r     1 VLR$OSRCH


   Procedure CXB$IBEX requires 2580 words for executable code.
   Procedure CXB$IBEX requires 504 words of local(AUTO) storage.

    No errors detected in file CXB$IBEX.:E05TSI    .
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:214  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:215  
          MINI XREF LISTING

ADJUST110
      8601**LABEL    8575--CALLALT
ADJUST78
      8577**LABEL    8506--GOTO
ADJUST95
      8590**LABEL    8489--CALLALT  8569--CALLALT
ADJUSTRET
      8571**LABEL    8458--GOTO     8466--CALLALT  8520--GOTO     8591--GOTO     8599--GOTO     8604--GOTO
AM$ACCT
      7642**DCL      8548--ASSIGN
AM$FORM
      7752**DCL      8560--ASSIGN
AM$HDR
      7736**DCL      8557--ASSIGN  10264>>ASSIGN
AM$HDR.TITL.L#
      7738**DCL      7739--IMP-SIZ  8557>>ASSIGN  10264>>ASSIGN
AM$NAME
      7629**DCL      8533--ASSIGN
AM$PASS
      7655**DCL      8536--ASSIGN
AM$SETSTA
      7682**DCL      8563--ASSIGN
AM$SN
      7709**DCL      8530--ASSIGN
AM$TAB
      7722**DCL      8554--ASSIGN
AM$WSN
      7668**DCL      8551--ASSIGN
AMR$REC$.ACCT_
      7286**DCL      8546>>IF       8548>>ASSIGN
AMR$REC$.ACSVEH_
      7284**DCL      7285--REDEF
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:216  
AMR$REC$.ALTKEYS_
      7290**DCL      7291--REDEF    7291--REDEF
AMR$REC$.FORM_
      7290**DCL      8558>>IF       8560>>ASSIGN
AMR$REC$.HDR_
      7289**DCL      7290--REDEF    8555>>IF       8557>>ASSIGN   8557>>ASSIGN
AMR$REC$.NAME_
      7283**DCL      8531>>IF       8533>>ASSIGN
AMR$REC$.PASS_
      7284**DCL      8534>>IF       8536>>ASSIGN
AMR$REC$.SETSTA_
      7283**DCL      8561>>IF       8563>>ASSIGN
AMR$REC$.SN_
      7282**DCL      8528>>IF       8530>>ASSIGN
AMR$REC$.TAB_
      7288**DCL      7289--REDEF    8552>>IF       8554>>ASSIGN
AMR$REC$.UHL_
      7282**DCL      7283--REDEF    7283--REDEF
AMR$REC$.V
      7291**DCL      8527>>ASSIGN
AMR$REC$.V.FSN#
      7322**DCL      7322--REDEF    7322--REDEF
AMR$REC$.WSN_
      7288**DCL      7288--REDEF    8549>>IF       8551>>ASSIGN
B$$PAGE
      7174**DCL      9326--ASSIGN
B$ALT.CODE
      7155**DCL      7155--REDEF    7156--REDEF    7156--REDEF
B$ALT.ERR
      7156**DCL      8597>>ASSIGN   8660>>ASSIGN   8960>>ASSIGN   9008>>ASSIGN   9441>>ASSIGN   9549>>ASSIGN
      9688>>ASSIGN
B$ALT.ERR.CODE
      7157**DCL      9371>>IF       9401>>IF
B$ALT.ERR.ERR#
      7157**DCL      7157--REDEF
B$ALT.EVID
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:217  
      7156**DCL      7156--REDEF    7156--REDEF
B$JIT.ACCN
       115**DCL      9328>>ASSIGN
B$JIT.CPFLAGS1
       204**DCL      9522>>IF       9672>>IF       9790>>IF
B$JIT.CPFLAGS1.SLEAZE
       209**DCL       209--REDEF
B$JIT.ERR.MID
       116**DCL       116--REDEF
B$JIT.FEXT
       283**DCL      9807<<ASSIGN
B$JIT.JRESPEAK
       277**DCL       278--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       386**DCL       386--REDEF     387--REDEF
B$JIT.PNR
       290**DCL       290--REDEF
B$JIT.PRFLAGS.LS
       199**DCL      9812<<ASSIGN
B$JIT.PRFLAGS.OU
       199**DCL      9811<<ASSIGN
B$JIT.PRFLAGS.SI
       199**DCL      9809<<ASSIGN
B$JIT.PRFLAGS.UI
       199**DCL      9810<<ASSIGN
B$JIT.TSLINE
       384**DCL       385--REDEF
B$JIT$
      6718**DCL       110--IMP-PTR  9328>>ASSIGN   9522>>IF       9672>>IF       9790>>IF       9807>>ASSIGN
      9809>>ASSIGN   9810>>ASSIGN   9811>>ASSIGN   9812>>ASSIGN
B$ROS$
      6720**DCL      8474>>DOINDEX  9883>>DOINDEX
B$ROSEG.NUMDCBS
      5766**DCL      8474>>DOINDEX  9883>>DOINDEX
B$TCB.ALT$
      7151**DCL      8597>>ASSIGN   8660>>ASSIGN   8960>>ASSIGN   9008>>ASSIGN   9371>>IF       9401>>IF
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:218  
      9441>>ASSIGN   9549>>ASSIGN   9688>>ASSIGN
B$TCB$
      6719**DCL      7151--IMP-PTR  8597>>ASSIGN   8660>>ASSIGN   8960>>ASSIGN   9008>>ASSIGN   9371>>IF
      9401>>IF       9441>>ASSIGN   9549>>ASSIGN   9688>>ASSIGN
BLK$
      7122**DCL      8453<<ASSIGN   8457<>CALL     8460>>ASSIGN   8461>>ASSIGN   8462>>IF       8465>>ASSIGN
      8511>>IF       8513<>CALL     8515<>CALL     8624<<ASSIGN   8628>>IF       8636>>DOWHILE  8637>>CALL
      8637>>CALL     8641>>IF       8645>>ASSIGN   8645>>ASSIGN   8653>>ASSIGN   8682<<ASSIGN   8687>>ASSIGN
      8699>>CALL     8699>>CALL     8703>>IF       8707>>ASSIGN   8707>>ASSIGN   8739<<ASSIGN   8749>>DOWHILE
      8750>>ASSIGN   8810>>ASSIGN   8973<<ASSIGN   8976>>IF       8984>>DOWHILE  8985>>CALL     8989>>IF
      8993>>ASSIGN   8993>>ASSIGN   9001>>ASSIGN   9046<<ASSIGN   9050<>CALL     9057>>IF       9063>>ASSIGN
      9076>>IF       9079<>CALL     9171<<ASSIGN   9176>>ASSIGN   9180<>CALL     9183>>ASSIGN   9186>>IF
      9189>>ASSIGN   9191<>CALL     9203<>CALL     9215>>IF       9215>>IF       9222>>IF       9222>>IF
      9249<<ASSIGN   9252>>IF       9256>>DOWHILE  9261>>ASSIGN   9359>>IF       9391>>IF       9404>>IF
      9434>>IF
CHK_ASGN
      9827**PROC     8466--CALL     9190--CALL
CLOSE_DCB
      9518**PROC     9102--CALL     9110--CALL     9217--CALL     9225--CALL     9771--CALL     9784--CALL
CLOSE_DCB_RET IN PROCEDURE CLOSE_DCB
      9547**LABEL    9529--CALLALT  9532--GOTO
CLSMYDCB IN PROCEDURE GET_LDEV_HDR
     10162**DCL     10232<<ASSIGN  10237<>CALL    10268<>CALL
CLSMYDCB.SN_ IN PROCEDURE GET_LDEV_HDR
     10162**DCL     10162--REDEF
CLSMYDCB.UTL_ IN PROCEDURE GET_LDEV_HDR
     10163**DCL     10163--REDEF
CLSMYDCB.V IN PROCEDURE GET_LDEV_HDR
     10167**DCL     10233--ASSIGN
CLSMYDCB.V.DCB# IN PROCEDURE GET_LDEV_HDR
     10168**DCL     10234<<ASSIGN
CLSMYDCB.V.EXPIRE# IN PROCEDURE GET_LDEV_HDR
     10177**DCL     10177--REDEF
CLSMYDCB.V.TYPE# IN PROCEDURE GET_LDEV_HDR
     10175**DCL     10175--REDEF
CLSMYDCB.V.XTNSIZE# IN PROCEDURE GET_LDEV_HDR
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:219  
     10172**DCL     10172--REDEF   10174--REDEF
CLSMYDCB.V_ IN PROCEDURE GET_LDEV_HDR
     10162**DCL     10233<<ASSIGN
CONSTCLS IN PROCEDURE GET_LDEV_HDR
     10204**DCL     10232>>ASSIGN
CONSTCLS.SN_ IN PROCEDURE GET_LDEV_HDR
     10204**DCL     10204--REDEF
CONSTCLS.UTL_ IN PROCEDURE GET_LDEV_HDR
     10205**DCL     10205--REDEF
CONSTCLS.V IN PROCEDURE GET_LDEV_HDR
     10209**DCL     10204--DCLINIT
CONSTCLS.V.EXPIRE# IN PROCEDURE GET_LDEV_HDR
     10219**DCL     10219--REDEF
CONSTCLS.V.TYPE# IN PROCEDURE GET_LDEV_HDR
     10217**DCL     10217--REDEF
CONSTCLS.V.XTNSIZE# IN PROCEDURE GET_LDEV_HDR
     10214**DCL     10214--REDEF   10216--REDEF
CONSTOPN IN PROCEDURE GET_LDEV_HDR
     10095**DCL     10238>>ASSIGN
CONSTOPN.ACSVEH_ IN PROCEDURE GET_LDEV_HDR
     10097**DCL     10098--REDEF
CONSTOPN.ALTKEYS_ IN PROCEDURE GET_LDEV_HDR
     10103**DCL     10104--REDEF   10104--REDEF
CONSTOPN.HDR_ IN PROCEDURE GET_LDEV_HDR
     10102**DCL     10103--REDEF
CONSTOPN.TAB_ IN PROCEDURE GET_LDEV_HDR
     10101**DCL     10102--REDEF
CONSTOPN.UHL_ IN PROCEDURE GET_LDEV_HDR
     10095**DCL     10096--REDEF   10096--REDEF
CONSTOPN.V IN PROCEDURE GET_LDEV_HDR
     10104**DCL     10095--DCLINIT
CONSTOPN.V.FSN# IN PROCEDURE GET_LDEV_HDR
     10135**DCL     10135--REDEF   10135--REDEF
CONSTOPN.WSN_ IN PROCEDURE GET_LDEV_HDR
     10101**DCL     10101--REDEF
CPOS
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:220  
      7185**DCL      8461<<ASSIGN   8466<>CALL     9183<<ASSIGN   9190<>CALL
CPOS IN PROCEDURE CHK_ASGN
      9828**DCL      9827--PROC
CPSL_CAMR_REC.ACSVEH_
      6006**DCL      6007--REDEF
CPSL_CAMR_REC.ALTKEYS_
      6012**DCL      6013--REDEF    6013--REDEF
CPSL_CAMR_REC.HDR_
      6011**DCL      6012--REDEF
CPSL_CAMR_REC.TAB_
      6010**DCL      6011--REDEF
CPSL_CAMR_REC.UHL_
      6004**DCL      6005--REDEF    6005--REDEF
CPSL_CAMR_REC.V.FSN#
      6044**DCL      6044--REDEF    6044--REDEF
CPSL_CAMR_REC.WSN_
      6010**DCL      6010--REDEF
CPSL_CFPT_CLOSE
      6071**DCL      8485>>ASSIGN   9540>>ASSIGN
CPSL_CFPT_CLOSE.SN_
      6071**DCL      6071--REDEF
CPSL_CFPT_CLOSE.UTL_
      6072**DCL      6072--REDEF
CPSL_CFPT_CLOSE.V.EXPIRE#
      6086**DCL      6086--REDEF
CPSL_CFPT_CLOSE.V.TYPE#
      6084**DCL      6084--REDEF
CPSL_CFPT_CLOSE.V.XTNSIZE#
      6081**DCL      6081--REDEF    6083--REDEF
CPSL_CFPT_FID
      6250**DCL      9495>>ASSIGN
CPSL_CFPT_JOBSTATS
      6298**DCL      9250>>ASSIGN   9333>>ASSIGN
CPSL_CFPT_LDEV
      6274**DCL      8625>>ASSIGN   8683>>ASSIGN   8740>>ASSIGN   8974>>ASSIGN
CPSL_CFPT_OPEN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:221  
      5895**DCL      8525>>ASSIGN   9674>>ASSIGN
CPSL_CFPT_OPEN.ACSVEH_
      5897**DCL      5898--REDEF
CPSL_CFPT_OPEN.ALTKEYS_
      5903**DCL      5904--REDEF    5904--REDEF
CPSL_CFPT_OPEN.HDR_
      5902**DCL      5903--REDEF
CPSL_CFPT_OPEN.TAB_
      5901**DCL      5902--REDEF
CPSL_CFPT_OPEN.UHL_
      5895**DCL      5896--REDEF    5896--REDEF
CPSL_CFPT_OPEN.V.FSN#
      5935**DCL      5935--REDEF    5935--REDEF
CPSL_CFPT_OPEN.WSN_
      5901**DCL      5901--REDEF
CPSL_CFPT_READ.STATION_
      6110**DCL      6111--REDEF
CPSL_CFPT_READ.V.DVBYTE.REREAD#
      6122**DCL      6122--REDEF
CPSL_CFPT_READ.V.INDX#
      6120**DCL      6120--REDEF
CPSL_CFPT_WRITE.STATION_
      6148**DCL      6148--REDEF
CPSL_CFPT_WRITE.V.DVBYTE.VFC#
      6155**DCL      6155--REDEF
CPSL_CVLP_HDR
      6464**DCL      8742>>ASSIGN
CPSL_CVLP_TAB
      6508**DCL      8743>>ASSIGN
CPSL_CVLP_TRMCTL.BREAKCOUNT
      6539**DCL      6540--REDEF
CPSL_CVLP_WINDOW
      6635**DCL      8744>>ASSIGN
CPSL_CVLP_WINDOW.FWINDOW#
      6635**DCL      6635--REDEF    6636--REDEF
CPSL_FDCB
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:222  
      6739**DCL      9792--CALL     9802--CALL
CPSL_LDCB
      6742**DCL      9796--CALL     9802--CALL
CPSL_M$DO_NUM
      6723**DCL      9536>>ASSIGN   9681>>ASSIGN
CPSL_M$LL
      6736**DCL      9527>>IF       9676>>IF       9764--CALL     9771--CALL     9864>>IF
CPSL_M$LL.TXT
      6738**DCL      9100>>IF       9215>>IF
CPSL_PARAM
      7103**DCL        15--PROC     8447--ENTRY    8457<>CALL     8513<>CALL     8515<>CALL     8621--ENTRY
      8637<>CALL     8679--ENTRY    8699<>CALL     8736--ENTRY    8768<>CALL     8771<>CALL     8777<>CALL
      8800<>CALL     8872<>CALL     8970--ENTRY    8985<>CALL     9043--ENTRY    9050<>CALL     9069<>CALL
      9079<>CALL     9083<>CALL     9088<>CALL     9168--ENTRY    9180<>CALL     9191<>CALL     9195<>CALL
      9203<>CALL     9207<>CALL     9246--ENTRY    9264<>CALL     9271<>CALL     9299<>CALL     9764<>CALL
      9777<>CALL     9792<>CALL     9796<>CALL     9802<>CALL    10249<>CALL
CPSL_PARAM.ERRCODE
      7111**DCL      8516>>IF       8588<<ASSIGN   8597<<ASSIGN   8601<<ASSIGN   8638>>IF       8660<<ASSIGN
      8700>>IF       8715>>IF       8772>>IF       8776>>DOWHILE  8801>>IF       8806>>IF       8944>>IF
      8960<<ASSIGN   8986>>IF       9008<<ASSIGN   9070>>IF       9080>>IF       9089>>IF       9094>>IF
      9125>>ASSIGN   9133<<ASSIGN   9135<<ASSIGN   9192>>IF       9196>>IF       9204>>IF       9208>>IF
      9301>>IF       9311>>IF       9323>>IF       9378<<ASSIGN   9381<<ASSIGN   9388<<ASSIGN   9420<<ASSIGN
      9424<<ASSIGN   9431<<ASSIGN   9441<<ASSIGN   9530>>IF       9549<<ASSIGN   9688<<ASSIGN   9765>>IF
      9768<<ASSIGN   9778>>IF       9781<<ASSIGN   9793>>IF       9797>>IF       9803>>IF       9813<<ASSIGN
      9869<<ASSIGN   9896>>IF      10252>>IF      10255<<ASSIGN
CPSL_PARAM.ERR_DCB#
      7118**DCL      8507<<ASSIGN
CPSL_PARAM.FLAGS.INHIBIT_ERRMSG
      7107**DCL      8490>>IF       9129>>IF       9374>>IF       9416>>IF
CPSL_PARAM.FLAGS.REPORTED_TO_USER
      7108**DCL      8494<<ASSIGN   8589<<ASSIGN   8598<<ASSIGN   8602<<ASSIGN   8661<<ASSIGN   8961<<ASSIGN
      9009<<ASSIGN   9136<<ASSIGN   9382<<ASSIGN   9425<<ASSIGN   9550<<ASSIGN   9689<<ASSIGN   9870<<ASSIGN
CPSL_PARAM.FLAGS.VERIFY_ONLY
      7106**DCL      8454>>IF       8577>>IF       8628>>IF       8646>>IF       8651>>IF       8715>>IF
      8772>>IF       8801>>IF       8808>>IF       8944>>IF       8976>>IF       8994>>IF       8999>>IF
      9047>>IF       9177>>IF
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:223  
CPSL_PARAM.WORK_DCB#
      7104**DCL      9050<>CALL     9079<>CALL     9083<>CALL     9088<>CALL     9180<>CALL     9195<>CALL
      9203<>CALL     9207<>CALL     9764<>CALL     9777<>CALL     9792<>CALL     9796<>CALL     9802<>CALL
     10230>>ASSIGN
CPSL_SEG3$
      6721**DCL      7282--IMP-PTR  8527>>ASSIGN   8528>>IF       8530>>ASSIGN   8531>>IF       8533>>ASSIGN
      8534>>IF       8536>>ASSIGN   8546>>IF       8548>>ASSIGN   8549>>IF       8551>>ASSIGN   8552>>IF
      8554>>ASSIGN   8555>>IF       8557>>ASSIGN   8557>>ASSIGN   8558>>IF       8560>>ASSIGN   8561>>IF
      8563>>ASSIGN   8579<>CALL     9322<>CALL     9326>>ASSIGN   9337>>DOINDEX  9338>>ASSIGN   9349<>CALL
CPSL_STARA
      6745**DCL      9866>>IF
CPSL_STARS
      6748**DCL      9866>>IF
CVLP_CRITERIA
      7200**DCL      9327>>ASSIGN
CXB$BLDAM
      7129**DCL-ENT  8457--CALL     8513--CALL     8515--CALL     9191--CALL
CXB$CHKFORT
      7138**DCL-ENT  8468--CALL     9068--CALL     9184--CALL
CXB$DELAM
      7135**DCL-ENT  9088--CALL     9764--CALL     9777--CALL     9792--CALL     9796--CALL     9802--CALL
CXB$MDFYAM
      7130**DCL-ENT  9050--CALL     9079--CALL     9180--CALL     9203--CALL
CXB$RZEROS
      7140**DCL-ENT  9368--CALL     9413--CALL
CXB$WINDOW_OPTS
      7132**DCL-ENT  8800--CALL
CXC$GETDCB
      7133**DCL-ENT  9895--CALL
CXC$GETSEG
      7134**DCL-ENT  9322--CALL
CXC$RELSEG
      7136**DCL-ENT  8579--CALL     9349--CALL
CXC$RFEXT
      7137**DCL-ENT  9092--CALL     9199--CALL
CXC$WRITEAM
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:224  
      7128**DCL-ENT  9083--CALL     9195--CALL     9207--CALL
CXF$FIND_STREAM
      7131**DCL-ENT 10249--CALL
CXG$ERRMSG
      6759**DCL-ENT  8575--CALL     9134--CALL     9380--CALL     9423--CALL
CXX$LDEV
      7141**DCL-ENT  8637--CALL     8699--CALL     8768--CALL     8771--CALL     8777--CALL     8872--CALL
      8985--CALL
CXX$RESET
      7142**DCL-ENT  9069--CALL
CXX$UNHOLD
      7143**DCL-ENT  9264--CALL     9271--CALL     9299--CALL
DCB# IN PROCEDURE GETDCB_LL
      9877**DCL      9876--PROC     9899<<ASSIGN
DCB# IN PROCEDURE GET_LDEV_HDR
      9919**DCL     10230<<ASSIGN  10231--ASSIGN  10234>>ASSIGN  10240>>ASSIGN  10249<>CALL
DCB$
      7124**DCL      8460<<ASSIGN   8466<>CALL     8468<>CALL     8479>>IF       8479>>IF       9050<>CALL
      9067<<ASSIGN   9068<>CALL     9079<>CALL     9083<>CALL     9088<>CALL     9092<>CALL     9102<>CALL
      9176<<ASSIGN   9180<>CALL     9184<>CALL     9190<>CALL     9195<>CALL     9199<>CALL     9203<>CALL
      9207<>CALL     9217<>CALL
DCB$ IN PROCEDURE CHK_ASGN
      9829**DCL      9827--PROC     9864>>IF       9864>>IF       9864>>IF       9864>>IF
DCB$ IN PROCEDURE CLOSE_DCB
      9521**DCL      9518--PROC     9527>>IF       9527>>IF       9534>>IF       9534>>IF
DCB$ IN PROCEDURE GET_LDEV_HDR
      9920**DCL     10231<<ASSIGN  10235>>IF      10259>>IF      10261<<ASSIGN  10261>>ASSIGN  10262>>IF
     10264>>ASSIGN  10264>>ASSIGN
DCB$ IN PROCEDURE MERGE_DCB
      9562**DCL      9561--PROC     9676>>IF       9676>>IF       9679>>IF       9679>>IF
DCB_NUM IN PROCEDURE CLOSE_DCB
      9519**DCL      9529<>CALL     9536<<ASSIGN   9537--IF       9543>>ASSIGN
DELETE_DCBS
      9705**PROC     9060--CALL     9114--CALL
DELETE_DCBS10 IN PROCEDURE DELETE_DCBS
      9777**LABEL    9769--GOTO
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:225  
DELETE_DCBS20 IN PROCEDURE DELETE_DCBS
      9790**LABEL    9782--GOTO
DONE
      7179**DCL      8689<<ASSIGN   8690>>DOWHILE  8695<<ASSIGN   8713<<ASSIGN
DQDELDCB IN PROCEDURE DELETE_DCBS
      9731**DCL      9792--CALL
DRNULDCB IN PROCEDURE DELETE_DCBS
      9758**DCL      9796--CALL
ERASERET
      8657**LABEL    8662--GOTO
ERR_CODE
      7940**DCL      9125<<ASSIGN
ERR_CODE.ERR#
      7970**DCL      9126>>IF
E_ADJSTCLS
      8072**DCL      8574>>ASSIGN
E_BADASGN
      8213**DCL      9869>>ASSIGN
E_CLOSE_DCB IN PROCEDURE CLOSE_DCB
      9549**LABEL    9544--CALLALT
E_DELETE_DCBS IN PROCEDURE DELETE_DCBS
      9816**LABEL    9771--CALLALT  9784--CALLALT  9785--CALLALT  9795--GOTO     9799--GOTO     9805--GOTO
E_ERASE
      8660**LABEL    8632--CALLALT  8648--CALLALT
E_ILLASGN
      8123**DCL      8588>>ASSIGN
E_JOBNTFND
      8258**DCL      9377>>ASSIGN   9388>>ASSIGN
E_LDEV
      8960**LABEL    8717--CALLALT  8822--CALLALT  8947--CALLALT  8953--CALLALT
E_MAJOR_ERROR
      9441**LABEL    9331--CALLALT
E_MERGE_DCB IN PROCEDURE MERGE_DCB
      9688**LABEL    9685--CALLALT
E_MERGE_DCB_ALT IN PROCEDURE MERGE_DCB
      9691**LABEL    9678--CALLALT
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:226  
E_NOASGN
      8168**DCL      9132>>ASSIGN
E_NOSYMFILE
      8303**DCL      9419>>ASSIGN   9431>>ASSIGN
E_PRINT
      9008**LABEL    8980--CALLALT  8996--CALLALT
E_SETUP_FID_M$FID IN PROCEDURE SETUP_FID
      9504**LABEL    9505--CALLALT
E_UNHOLD
      9359**LABEL    9284--CALLALT  9306--CALLALT  9313--CALLALT  9343--CALLALT
F$DCB.ACTPOS
      7359**DCL      7359--REDEF
F$DCB.ARS#
      7333**DCL      7333--REDEF
F$DCB.ATTR
      7352**DCL      7353--REDEF
F$DCB.BORROW
      7367**DCL      7367--REDEF    7367--REDEF    7367--REDEF
F$DCB.CFU$
      7368**DCL     10259>>IF      10261>>ASSIGN
F$DCB.DCBNAME.L
      7381**DCL      7381--IMP-SIZ  8479>>IF       9888>>IF
F$DCB.DCBNAME.N
      7381**DCL      8479>>IF       9888>>IF
F$DCB.EOMCHAR#
      7337**DCL      7337--REDEF
F$DCB.FCD#
      7346**DCL      8482>>IF       9537>>IF      10235>>IF
F$DCB.FLDID
      7362**DCL      7362--REDEF
F$DCB.FORM$
      7356**DCL      7356--REDEF
F$DCB.FSECT
      7372**DCL      7372--REDEF
F$DCB.FSN#
      7349**DCL      7349--REDEF    7349--REDEF    7350--REDEF
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:227  
F$DCB.HEADER$
      7355**DCL      7355--REDEF   10262>>IF      10264>>ASSIGN  10264>>ASSIGN
F$DCB.IXTNSIZE#
      7353**DCL      7353--REDEF
F$DCB.LASTSTA$
      7342**DCL      7342--REDEF
F$DCB.LVL
      7368**DCL      7368--REDEF
F$DCB.NAME#.C
      7343**DCL      7343--REDEF
F$DCB.NOEOF
      7365**DCL      7365--REDEF
F$DCB.NRECS#
      7354**DCL      7354--REDEF
F$DCB.NRECX
      7373**DCL      7373--REDEF
F$DCB.OHDR
      7365**DCL      7365--REDEF
F$DCB.ORG#
      7348**DCL      7348--REDEF
F$DCB.PRECNO
      7371**DCL      7371--REDEF
F$DCB.RCSZ
      7377**DCL      7377--REDEF
F$DCB.RES#
      7344**DCL      7344--REDEF
F$DCB.SETX
      7356**DCL      7356--REDEF
F$DCB.TAB$
      7356**DCL      7356--REDEF
F$DCB.TDA
      7370**DCL      7371--REDEF
F$DCB.WSN#
      7344**DCL      7344--REDEF
FID$
      7125**DCL      8465<<ASSIGN   8466<>CALL     8513<>CALL     9189<<ASSIGN   9190<>CALL     9191<>CALL
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:228  
FID$ IN PROCEDURE CHK_ASGN
      9830**DCL      9827--PROC     9866>>IF       9866>>IF       9866>>IF       9866>>IF
FID_ACCT
      7811**DCL      9273--ASSIGN   9285--ASSIGN   9498--ASSIGN
FID_ACCT.ACCT#
      7811**DCL      9272<<ASSIGN
FID_ASN
      7169**DCL      9502--ASSIGN
FID_NAME
      7873**DCL      9379--ASSIGN   9421--ASSIGN   9497--ASSIGN
FID_NAME.L#
      7873**DCL      9362<<ASSIGN   9369<<ASSIGN
FID_NAME.NAME#
      7873**DCL      9363<<ASSIGN   9367<<CALLBLT  9368<>CALL     9368--CALL
FID_PASS
      7886**DCL      9499--ASSIGN
FID_RES
      7170**DCL      8825>>ASSIGN   8827>>ASSIGN   8828>>IF       8830>>ASSIGN   9503--ASSIGN
FID_RESULTS
      7824**DCL      9504--ASSIGN
FID_RESULTS.RES
      7824**DCL      8823>>IF
FID_RESULTS.WSN
      7824**DCL      8832>>IF
FID_SN
      7899**DCL      9500--ASSIGN
FID_WSN
      7912**DCL      8834--ASSIGN   9501--ASSIGN
FPT_CLOSE
      7516**DCL      8485<<ASSIGN   8489<>CALL     9540<<ASSIGN   9544<>CALL
FPT_CLOSE.SN_
      7516**DCL      7516--REDEF
FPT_CLOSE.UTL_
      7517**DCL      7517--REDEF
FPT_CLOSE.V
      7521**DCL      8486--ASSIGN   9541--ASSIGN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:229  
FPT_CLOSE.V.DCB#
      7522**DCL      8488<<ASSIGN   9543<<ASSIGN
FPT_CLOSE.V.DISP#
      7525**DCL      8487<<ASSIGN   9542<<ASSIGN
FPT_CLOSE.V.EXPIRE#
      7531**DCL      7531--REDEF
FPT_CLOSE.V.TYPE#
      7529**DCL      7529--REDEF
FPT_CLOSE.V.XTNSIZE#
      7526**DCL      7526--REDEF    7528--REDEF
FPT_CLOSE.V_
      7516**DCL      8486<<ASSIGN   9541<<ASSIGN
FPT_FID
      7571**DCL      9495<<ASSIGN   9505<>CALL
FPT_FID.ACCT_
      7572**DCL      9498<<ASSIGN
FPT_FID.ASN_
      7574**DCL      9502<<ASSIGN
FPT_FID.NAME_
      7572**DCL      9497<<ASSIGN
FPT_FID.PASS_
      7572**DCL      9499<<ASSIGN
FPT_FID.RESULTS_
      7574**DCL      9504<<ASSIGN
FPT_FID.RES_
      7574**DCL      9503<<ASSIGN
FPT_FID.SN_
      7573**DCL      9500<<ASSIGN
FPT_FID.TEXTFID_
      7571**DCL      9496<<ASSIGN
FPT_FID.WSN_
      7573**DCL      9501<<ASSIGN
FPT_JOBSTATS
      7594**DCL      9250<<ASSIGN   9306<>CALL     9313<>CALL     9331<>CALL     9333<<ASSIGN   9343<>CALL
FPT_JOBSTATS.ACCT_
      7596**DCL      9273<<ASSIGN   9285<<ASSIGN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:230  
FPT_JOBSTATS.CRITERIA_
      7595**DCL      9330<<ASSIGN
FPT_JOBSTATS.JOBNAME_
      7595**DCL      9269<<ASSIGN   9277<<ASSIGN   9288<<ASSIGN
FPT_JOBSTATS.RESULTS_
      7594**DCL      9326<<ASSIGN
FPT_JOBSTATS.V
      7598**DCL      9251--ASSIGN   9334--ASSIGN
FPT_JOBSTATS.V.NUM#
      7600**DCL      9304<<ASSIGN   9412>>CALLBLT
FPT_JOBSTATS.V.ORDER#
      7598**DCL      9260<<ASSIGN   9298<<ASSIGN   9320<<ASSIGN   9335<<ASSIGN
FPT_JOBSTATS.V.OUTPUT#
      7599**DCL      9321<<ASSIGN
FPT_JOBSTATS.V.SYSID#
      7598**DCL      9281<<ASSIGN   9286<<ASSIGN   9339>>IF       9342<<ASSIGN   9367>>CALLBLT
FPT_JOBSTATS.V_
      7594**DCL      9251<<ASSIGN   9334<<ASSIGN
FPT_LDEV
      7547**DCL      8625<<ASSIGN   8632<>CALL     8648<>CALL     8683<<ASSIGN   8717<>CALL     8740<<ASSIGN
      8947<>CALL     8953<>CALL     8974<<ASSIGN   8980<>CALL     8996<>CALL
FPT_LDEV.FORM_
      7548**DCL      8858<<ASSIGN
FPT_LDEV.HDR_
      7547**DCL      8896<<ASSIGN   8904<<ASSIGN   8911<<ASSIGN   8918<<ASSIGN   8925<<ASSIGN   8932<<ASSIGN
FPT_LDEV.TAB_
      7547**DCL      8867<<ASSIGN   8876<<ASSIGN   8883<<ASSIGN
FPT_LDEV.V
      7549**DCL      8626--ASSIGN   8684--ASSIGN   8741--ASSIGN   8975--ASSIGN
FPT_LDEV.V.CONCURR#
      7552**DCL      8837<<ASSIGN
FPT_LDEV.V.CONTINUE#
      7550**DCL      8686<<ASSIGN   8840<<ASSIGN
FPT_LDEV.V.COPIES#
      7553**DCL      8861<<ASSIGN
FPT_LDEV.V.DELETE#
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:231  
      7551**DCL      8627<<ASSIGN   8849<<ASSIGN
FPT_LDEV.V.DEV#
      7553**DCL      8825<<ASSIGN   8827<<ASSIGN  10227>>IF
FPT_LDEV.V.DVFC#
      7554**DCL      8864<<ASSIGN
FPT_LDEV.V.FRMSTRM#
      7557**DCL      8830<<ASSIGN   8952<<ASSIGN
FPT_LDEV.V.HOLD#
      7552**DCL      8685<<ASSIGN   8852<<ASSIGN
FPT_LDEV.V.HOLDCOPIES#
      7554**DCL      8855<<ASSIGN
FPT_LDEV.V.LINES#
      7554**DCL      8935<<ASSIGN
FPT_LDEV.V.LOGON#
      7551**DCL      8951<<ASSIGN
FPT_LDEV.V.REMOVE#
      7551**DCL      8846<<ASSIGN
FPT_LDEV.V.SCRUB#
      7550**DCL      8843<<ASSIGN
FPT_LDEV.V.SEQ#
      7555**DCL      8886<<ASSIGN
FPT_LDEV.V.SEQCOL#
      7556**DCL      8890<<ASSIGN
FPT_LDEV.V.SEQID#
      7556**DCL      8887<<ASSIGN   8893<<ASSIGN
FPT_LDEV.V.STREAMNAME#
      7550**DCL      8631<<ASSIGN   8643<<ASSIGN   8645<<ASSIGN   8694<<ASSIGN   8705<<ASSIGN   8707<<ASSIGN
      8817<<ASSIGN   8820<<ASSIGN   8979<<ASSIGN   8991<<ASSIGN   8993<<ASSIGN  10241>>ASSIGN  10249<>CALL
     10249<>CALL
FPT_LDEV.V.WIDTH#
      7557**DCL      8938<<ASSIGN
FPT_LDEV.V_
      7547**DCL      8626<<ASSIGN   8684<<ASSIGN   8741<<ASSIGN   8975<<ASSIGN
FPT_LDEV.WINDOW_
      7549**DCL      8799<<ASSIGN
FPT_LDEV.WSN_
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:232  
      7548**DCL      8834<<ASSIGN
FPT_OPEN
      7449**DCL      8525<<ASSIGN   8569<>CALL
FPT_OPEN.ACCT_
      7453**DCL      8548<<ASSIGN
FPT_OPEN.ACSVEH_
      7451**DCL      7452--REDEF
FPT_OPEN.ALTKEYS_
      7457**DCL      7458--REDEF    7458--REDEF
FPT_OPEN.FORM_
      7457**DCL      8560<<ASSIGN
FPT_OPEN.HDR_
      7456**DCL      7457--REDEF    8557<<ASSIGN
FPT_OPEN.NAME_
      7450**DCL      8533<<ASSIGN
FPT_OPEN.PASS_
      7451**DCL      8536<<ASSIGN
FPT_OPEN.SETSTA_
      7450**DCL      8563<<ASSIGN
FPT_OPEN.SN_
      7449**DCL      8530<<ASSIGN
FPT_OPEN.TAB_
      7455**DCL      7456--REDEF    8554<<ASSIGN
FPT_OPEN.UHL_
      7449**DCL      7450--REDEF    7450--REDEF
FPT_OPEN.V
      7458**DCL      8526--ASSIGN   8527<<ASSIGN
FPT_OPEN.V.DCB#
      7458**DCL      8565<<ASSIGN
FPT_OPEN.V.FSN#
      7489**DCL      7489--REDEF    7489--REDEF
FPT_OPEN.V.SETDCB#
      7459**DCL      8564<<ASSIGN
FPT_OPEN.V_
      7449**DCL      8526<<ASSIGN
FPT_OPEN.WSN_
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:233  
      7455**DCL      7455--REDEF    8551<<ASSIGN
FPT_OPEN IN PROCEDURE MERGE_DCB
      9628**DCL      9674<<ASSIGN   9685<>CALL
FPT_OPEN.ACSVEH_ IN PROCEDURE MERGE_DCB
      9630**DCL      9631--REDEF
FPT_OPEN.ALTKEYS_ IN PROCEDURE MERGE_DCB
      9636**DCL      9637--REDEF    9637--REDEF
FPT_OPEN.HDR_ IN PROCEDURE MERGE_DCB
      9635**DCL      9636--REDEF
FPT_OPEN.TAB_ IN PROCEDURE MERGE_DCB
      9634**DCL      9635--REDEF
FPT_OPEN.UHL_ IN PROCEDURE MERGE_DCB
      9628**DCL      9629--REDEF    9629--REDEF
FPT_OPEN.V IN PROCEDURE MERGE_DCB
      9637**DCL      9675--ASSIGN
FPT_OPEN.V.DCB# IN PROCEDURE MERGE_DCB
      9637**DCL      9678<>CALL     9681<<ASSIGN
FPT_OPEN.V.FSN# IN PROCEDURE MERGE_DCB
      9668**DCL      9668--REDEF    9668--REDEF
FPT_OPEN.V.INITZ.REASSIGN# IN PROCEDURE MERGE_DCB
      9638**DCL      9682<<ASSIGN
FPT_OPEN.V.INITZ.SCRUB# IN PROCEDURE MERGE_DCB
      9638**DCL      9683<<ASSIGN
FPT_OPEN.V.SETDCB# IN PROCEDURE MERGE_DCB
      9638**DCL      9684<<ASSIGN
FPT_OPEN.V_ IN PROCEDURE MERGE_DCB
      9628**DCL      9675<<ASSIGN
FPT_OPEN.WSN_ IN PROCEDURE MERGE_DCB
      9634**DCL      9634--REDEF
GETCMD
      6777**DCL        15--PROC     8447--ENTRY    8457<>CALL     8513<>CALL     8515<>CALL     8575<>CALL
      8621--ENTRY    8637<>CALL     8679--ENTRY    8699<>CALL     8736--ENTRY    8768<>CALL     8771<>CALL
      8777<>CALL     8800<>CALL     8872<>CALL     8970--ENTRY    8985<>CALL     9043--ENTRY    9050<>CALL
      9069<>CALL     9079<>CALL     9134<>CALL     9168--ENTRY    9180<>CALL     9191<>CALL     9203<>CALL
      9246--ENTRY    9264<>CALL     9271<>CALL     9299<>CALL     9380<>CALL     9423<>CALL
GETCMD.ERR#
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:234  
      6788**DCL      8601>>ASSIGN   9135>>ASSIGN   9381>>ASSIGN   9424>>ASSIGN
GETCMD.ERR_CODE
      6925**DCL      8574<<ASSIGN   9132<<ASSIGN   9377<<ASSIGN   9419<<ASSIGN
GETCMD.F1_
      6974**DCL      9379<<ASSIGN   9421<<ASSIGN
GETCMD.F2_
      6978**DCL      9422<<ASSIGN
GETCMD.OUT$
      6782**DCL      6788--REDEF    8453>>ASSIGN   8624>>ASSIGN   8682>>ASSIGN   8739>>ASSIGN   8973>>ASSIGN
      9046>>ASSIGN   9171>>ASSIGN   9249>>ASSIGN
GETDCB_LL
      9876**PROC     9529--CALL     9678--CALL
GETDCB_LL_ALT IN PROCEDURE GETDCB_LL
      9903**LABEL    9898--GOTO
GET_LDEV_HDR
      9917**PROC     8901--CALL     8909--CALL     8916--CALL     8923--CALL     8930--CALL
GET_LDEV_HDR_RET IN PROCEDURE GET_LDEV_HDR
     10273**LABEL   10256--GOTO
GIVE_ADJSTCLS_MSG
      7177**DCL      8452<<ASSIGN   8493<<ASSIGN   8519<<ASSIGN   8571>>IF       8590<<ASSIGN   8603<<ASSIGN
GOT_LOGON_OPTION
      7176**DCL      8747<<ASSIGN   8879<<ASSIGN   8948>>IF
I
      7181**DCL      8474<<DOINDEX  8475--IF       8478--ASSIGN   8488>>ASSIGN   8497>>ASSIGN   8635<<ASSIGN
      8636>>DOWHILE  8637>>CALL     8637>>CALL     8645>>ASSIGN   8645>>ASSIGN   8653<<ASSIGN   8654<<ASSIGN
      8654>>ASSIGN   8687<<ASSIGN   8691>>IF       8711>>IF       8746<<ASSIGN   8749>>DOWHILE  8750>>ASSIGN
      8810<<ASSIGN   8941<<ASSIGN   8941>>ASSIGN   8983<<ASSIGN   8984>>DOWHILE  8985>>CALL     8993>>ASSIGN
      8993>>ASSIGN   9001<<ASSIGN   9002<<ASSIGN   9002>>ASSIGN   9255<<ASSIGN   9256>>DOWHILE  9261>>ASSIGN
      9315<<ASSIGN   9315>>ASSIGN   9336<<ASSIGN
I IN PROCEDURE GETDCB_LL
      9878**DCL      9883<<DOINDEX  9884--IF       9887--ASSIGN   9890>>ASSIGN
J
      7182**DCL      8473<<ASSIGN   8497<<ASSIGN   8504>>IF       8507>>ASSIGN   8565>>ASSIGN   8688<<ASSIGN
      8699>>CALL     8699>>CALL     8703>>IF       8707>>ASSIGN   8707>>ASSIGN   8710<<ASSIGN   8710>>ASSIGN
      8711>>IF       8775<<ASSIGN   8776>>DOWHILE  8777>>CALL     8777>>CALL     8779<<ASSIGN   8779>>ASSIGN
      8870<<ASSIGN   8871>>DOWHILE  8872>>CALL     8872>>CALL     8873>>ASSIGN   8874<<ASSIGN   8874>>ASSIGN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:235  
      9291<<ASSIGN   9294>>DOWHILE  9295>>DOCASE   9299>>CALL     9299>>CALL     9308<<ASSIGN   9308>>ASSIGN
      9337<<DOINDEX  9338>>ASSIGN   9407>>ASSIGN   9408>>ASSIGN   9408>>ASSIGN   9806<<DOINDEX  9807>>ASSIGN
J IN PROCEDURE GETDCB_LL
      9879**DCL      9882<<ASSIGN   9890<<ASSIGN   9893>>IF       9893>>IF       9895<>CALL     9899>>ASSIGN
JOBSTATS_CRITERIA
      8043**DCL      9327<<ASSIGN   9330--ASSIGN
JOBSTATS_CRITERIA.ACCT#
      8047**DCL      9328<<ASSIGN
JOBSTATS_CRITERIA.HOLD#
      8050**DCL      9329<<ASSIGN
LDEVRET
      8957**LABEL    8803--GOTO     8962--GOTO
M$CLOSE
        27**DCL-ENT  8489--CALL     9544--CALL    10237--CALL    10268--CALL
M$DO_DCB
      7162**DCL      9110--CALL     9111--CALL     9225--CALL     9226--CALL     9534>>IF       9679>>IF
      9777--CALL     9784--CALL     9785--CALL     9864>>IF
M$DO_DCB.TXT
      7164**DCL      9107>>IF       9222>>IF
M$FID
        90**DCL-ENT  9505--CALL
M$JOBSTATS
        92**DCL-ENT  9306--CALL     9313--CALL     9331--CALL     9343--CALL
M$LDEV
        27**DCL-ENT  8632--CALL     8648--CALL     8717--CALL     8947--CALL     8953--CALL     8980--CALL
      8996--CALL
M$LL
      7165**DCL      9895<>CALL
M$LL.TXT
      7167**DCL      9888>>IF
M$OPEN
        27**DCL-ENT  8569--CALL     9685--CALL    10243--CALL
M$UC_NUM
      7168**DCL      9893>>IF
MERGE_DCB
      9561**PROC     9111--CALL     9226--CALL     9785--CALL
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:236  
NEED_LDEV_HDR
      7178**DCL      8748<<ASSIGN   8899>>IF       8907>>IF       8914>>IF       8921>>IF       8928>>IF
     10225<<ASSIGN
OPEN IN PROCEDURE GET_LDEV_HDR
     10223**DCL     10226<<ASSIGN  10245<<ASSIGN  10266>>IF
OPNMYDCB IN PROCEDURE GET_LDEV_HDR
      9986**DCL     10238<<ASSIGN  10243<>CALL
OPNMYDCB.ACSVEH_ IN PROCEDURE GET_LDEV_HDR
      9988**DCL      9989--REDEF
OPNMYDCB.ALTKEYS_ IN PROCEDURE GET_LDEV_HDR
      9994**DCL      9995--REDEF    9995--REDEF
OPNMYDCB.HDR_ IN PROCEDURE GET_LDEV_HDR
      9993**DCL      9994--REDEF
OPNMYDCB.TAB_ IN PROCEDURE GET_LDEV_HDR
      9992**DCL      9993--REDEF
OPNMYDCB.UHL_ IN PROCEDURE GET_LDEV_HDR
      9986**DCL      9987--REDEF    9987--REDEF
OPNMYDCB.V IN PROCEDURE GET_LDEV_HDR
      9995**DCL     10239--ASSIGN
OPNMYDCB.V.ASN# IN PROCEDURE GET_LDEV_HDR
     10005**DCL     10242<<ASSIGN
OPNMYDCB.V.DCB# IN PROCEDURE GET_LDEV_HDR
      9995**DCL     10240<<ASSIGN
OPNMYDCB.V.FSN# IN PROCEDURE GET_LDEV_HDR
     10026**DCL     10026--REDEF   10026--REDEF
OPNMYDCB.V.RES# IN PROCEDURE GET_LDEV_HDR
     10010**DCL     10241<<ASSIGN
OPNMYDCB.V_ IN PROCEDURE GET_LDEV_HDR
      9986**DCL     10239<<ASSIGN
OPNMYDCB.WSN_ IN PROCEDURE GET_LDEV_HDR
      9992**DCL      9992--REDEF
P$
      7121**DCL      8750<<ASSIGN   8751>>DOCASE   8768>>CALL     8771>>CALL     8776>>DOWHILE  8777>>CALL
      8777>>CALL     8800<>CALL     8814>>DOCASE   8820>>ASSIGN   8820>>ASSIGN   8822>>CALL     8822>>CALL
      8858>>ASSIGN   8858>>ASSIGN   8864>>ASSIGN   8864>>ASSIGN   8871>>DOWHILE  8872>>CALL     8872>>CALL
      8887>>ASSIGN   8887>>ASSIGN   8893>>ASSIGN   8893>>ASSIGN   8902>>ASSIGN   8903>>ASSIGN   8903>>ASSIGN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:237  
      9261<<ASSIGN   9262>>ASSIGN   9264>>CALL     9265>>DOCASE   9270<<ASSIGN   9270>>ASSIGN   9271>>CALL
      9272>>ASSIGN   9272>>ASSIGN   9292>>IF       9294>>DOWHILE  9295>>DOCASE   9299>>CALL     9299>>CALL
      9407>>ASSIGN   9408>>ASSIGN   9408>>ASSIGN
P$B
      8345**DCL      8768<>CALL     8771<>CALL     8985<>CALL     9069<>CALL     9264<>CALL     9271<>CALL
P$B.CODE
      8353**DCL      8462>>IF       8511>>IF       8641>>IF       8703>>IF       8751>>DOCASE   8814>>DOCASE
      8989>>IF       9065>>DOCASE   9186>>IF       9265>>DOCASE   9295>>DOCASE
P$B.CPOS
      8371**DCL      8461>>ASSIGN   9183>>ASSIGN
P$B.NSUBLKS
      8357**DCL      8628>>IF       8636>>DOWHILE  8653>>ASSIGN   8687>>ASSIGN   8749>>DOWHILE  8776>>DOWHILE
      8871>>DOWHILE  8976>>IF       8984>>DOWHILE  9001>>ASSIGN   9057>>IF       9076>>IF       9252>>IF
      9256>>DOWHILE  9292>>IF       9294>>DOWHILE  9359>>IF       9391>>IF       9404>>IF       9434>>IF
P$B.SUBLK$
      8378**DCL      8460>>ASSIGN   8460>>ASSIGN   8461>>ASSIGN   8462>>IF       8465>>ASSIGN   8465>>ASSIGN
      8511>>IF       8637>>CALL     8637>>CALL     8641>>IF       8645>>ASSIGN   8645>>ASSIGN   8699>>CALL
      8699>>CALL     8703>>IF       8707>>ASSIGN   8707>>ASSIGN   8750>>ASSIGN   8777>>CALL     8777>>CALL
      8872>>CALL     8872>>CALL     8985>>CALL     8989>>IF       8993>>ASSIGN   8993>>ASSIGN   9063>>ASSIGN
      9067>>ASSIGN   9176>>ASSIGN   9176>>ASSIGN   9183>>ASSIGN   9186>>IF       9189>>ASSIGN   9189>>ASSIGN
      9215>>IF       9215>>IF       9222>>IF       9222>>IF       9261>>ASSIGN   9262>>ASSIGN   9270>>ASSIGN
      9272>>ASSIGN   9272>>ASSIGN   9295>>DOCASE   9299>>CALL     9299>>CALL     9407>>ASSIGN   9408>>ASSIGN
      9408>>ASSIGN
P$S
      8391**DCL      8637<>CALL     8699<>CALL     8777<>CALL     8822<>CALL     8872<>CALL     9284<>CALL
      9299<>CALL
P$S.COUNT
      8414**DCL      8417--IMP-SIZ  8637>>CALL     8645>>ASSIGN   8699>>CALL     8707>>ASSIGN   8777>>CALL
      8820>>ASSIGN   8822>>CALL     8858>>ASSIGN   8864>>ASSIGN   8872>>CALL     8887>>ASSIGN   8893>>ASSIGN
      8902>>ASSIGN   8903>>ASSIGN   8993>>ASSIGN   9100>>IF       9107>>IF       9215>>IF       9222>>IF
      9268>>ASSIGN   9272>>ASSIGN   9276>>ASSIGN   9280>>CALLBLT  9284>>CALL     9299>>CALL     9362>>ASSIGN
      9363>>ASSIGN   9407>>ASSIGN   9408>>ASSIGN
P$S.NSUBLKS
      8400**DCL      8810>>ASSIGN
P$S.TEXT
      8417**DCL      8645>>ASSIGN   8707>>ASSIGN   8820>>ASSIGN   8858--ASSIGN   8864>>ASSIGN   8887>>ASSIGN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:238  
      8893>>ASSIGN   8903>>ASSIGN   8993>>ASSIGN   9100>>IF       9107>>IF       9215>>IF       9222>>IF
      9268>>ASSIGN   9272>>ASSIGN   9276>>ASSIGN   9280>>CALLBLT  9363>>ASSIGN   9408>>ASSIGN
P$S IN PROCEDURE SETUP_FID
      9461**DCL      9452--PROC
P$S.COUNT IN PROCEDURE SETUP_FID
      9484**DCL      9487--IMP-SIZ  9496>>ASSIGN
P$S.TEXT IN PROCEDURE SETUP_FID
      9487**DCL      9496--ASSIGN
PRINTRET
      9005**LABEL    9010--GOTO
RESET20
      9125**LABEL    9096--GOTO
RESETRET
      9118**LABEL    9051--GOTO     9060--CALLALT  9102--CALLALT  9110--CALLALT  9111--CALLALT  9114--CALLALT
      9140--GOTO
SETRET
      9229**LABEL    9181--GOTO     9190--CALLALT  9194--GOTO     9198--GOTO     9206--GOTO     9210--GOTO
      9217--CALLALT  9225--CALLALT  9226--CALLALT
SETUP_FID
      9452**PROC     8822--CALL     9284--CALL
SYMNAME
      7171**DCL      9422--ASSIGN
SYMNAME.COUNT
      7172**DCL      9407<<ASSIGN   9414<<ASSIGN
SYMNAME.TEXT
      7173**DCL      9408<<ASSIGN   9412<<CALLBLT  9413<>CALL     9413--CALL
TEMP
      7184**DCL      8768<>CALL     8771<>CALL     8777<>CALL     8855>>ASSIGN   8861>>ASSIGN   8872<>CALL
      8873>>ASSIGN   8882>>ASSIGN   8890>>ASSIGN   8917>>ASSIGN   8924>>ASSIGN   8931>>ASSIGN   8935>>ASSIGN
      8938>>ASSIGN   9280<<CALLBLT  9281>>ASSIGN   9299<>CALL     9304>>ASSIGN   9368<>CALL     9369>>ASSIGN
      9413<>CALL     9414>>ASSIGN
TEMP$
      7123**DCL      8478<<ASSIGN   8479>>IF       8479>>IF       8482>>IF       9063<<ASSIGN   9065>>DOCASE
      9067>>ASSIGN   9069>>CALL     9100>>IF       9100>>IF       9107>>IF       9107>>IF       9262<<ASSIGN
      9268>>ASSIGN   9268>>ASSIGN   9276>>ASSIGN   9276>>ASSIGN   9280>>CALLBLT  9280>>CALLBLT  9284>>CALL
      9284>>CALL     9338<<ASSIGN   9339>>IF       9342>>ASSIGN   9362>>ASSIGN   9363>>ASSIGN   9363>>ASSIGN
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:239  
TEMP$ IN PROCEDURE GETDCB_LL
      9880**DCL      9887<<ASSIGN   9888>>IF       9888>>IF
TEXTC
      7146**DCL      9527>>IF       9534>>IF       9676>>IF       9679>>IF       9864>>IF       9864>>IF
      9866>>IF       9866>>IF
TEXTC.SIZ
      7147**DCL      7148--IMP-SIZ  8479>>IF       9527>>IF       9534>>IF       9676>>IF       9679>>IF
      9864>>IF       9864>>IF       9866>>IF       9866>>IF
TEXTC.TEXT
      7148**DCL      8479>>IF
UNHELD_THAT_ONE
      9345**LABEL    9341--GOTO     9395--GOTO     9438--GOTO
UNHOLD10
      9308**LABEL    9303--GOTO     9436--GOTO
UNHOLD20
      9315**LABEL    9393--GOTO
UNHOLD_RETURN
      9349**LABEL    9325--GOTO     9383--GOTO     9389--GOTO     9426--GOTO     9432--GOTO     9442--GOTO
VLA$OSRCH.SYSID
      7795**DCL      9339>>IF       9342>>ASSIGN
VLP_HDR
      7843**DCL      8742<<ASSIGN   8904--ASSIGN   8911--ASSIGN   8918--ASSIGN   8925--ASSIGN   8932--ASSIGN
     10264<<ASSIGN
VLP_HDR.CTL.COUNT#
      7845**DCL      8931<<ASSIGN
VLP_HDR.CTL.HEADERHEIGHT#
      7844**DCL      8917<<ASSIGN
VLP_HDR.CTL.INDENT#
      7844**DCL      8924<<ASSIGN
VLP_HDR.CTL.RESETPAGE#
      7843**DCL      8910<<ASSIGN
VLP_HDR.TITL.L#
      7845**DCL      8902<<ASSIGN   8903>>ASSIGN
VLP_HDR.TITL.TITLE#
      7846**DCL      8903<<ASSIGN
VLP_JOBNAME
PL6.E3A0      #001=CXB$IBEX File=CXB$IBEX.:E05TSI                                TUE 07/29/97 12:15 Page:240  
      7984**DCL      9269--ASSIGN   9277--ASSIGN   9288--ASSIGN
VLP_JOBNAME.JOBNAME#
      7984**DCL      9268<<ASSIGN   9276<<ASSIGN   9287<<ASSIGN
VLP_TABS
      7925**DCL      8743<<ASSIGN   8876--ASSIGN   8883--ASSIGN
VLP_TABS.MARGIN#
      7925**DCL      8882<<ASSIGN
VLP_TABS.TABS#
      7925**DCL      8873<<ASSIGN
VLP_WINDOW
      8005**DCL      8744<<ASSIGN   8799--ASSIGN   8800--CALL
VLP_WINDOW.FWINDOW#
      8005**DCL      8005--REDEF    8006--REDEF
VLR$OSRCH.F
      7779**DCL      9338--ASSIGN
VLR$OSRCH.FOUND
      7779**DCL      9337>>DOINDEX
