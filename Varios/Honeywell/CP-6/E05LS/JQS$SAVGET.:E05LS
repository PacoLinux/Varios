VERSION E05

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:1    
        1        1        /*M* JQS$SAVGET - Main routines for handling SAVE/GET.                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=5,ENU=0,ECU=0    */
        8        8
        9        9        JQS$SAVE: PROC(NAME$,ACCT$,PASS$,PSID$) ALTRET;
       10       10    1   DCL NAME$ PTR;
       11       11    1   DCL ACCT$ PTR;
       12       12    1   DCL PASS$ PTR;
       13       13    1   DCL PSID$ PTR;
       14       14
       15       15        %INCLUDE B_STRINGS_C;
       16      144        %INCLUDE B$OBJECT_C;
       17     3574        %INCLUDE B$USER;
       18     3790        %INCLUDE M_INFO_C;
       19     3930        %INCLUDE B$JIT;
       20     4533        %INCLUDE CP_6;
       21    10092        %INCLUDE F$DCB;
       22    10141        %INCLUDE J_ERRSET_C;
       23    10161        %INCLUDE F_ERRORS_C;
       24    10401        %INCLUDE J_ERRORS_C;
       25    10488        %INCLUDE M_ERRORS_C;
       26    10552        %INCLUDE SS_SCHED_C;
       27    10785        %INCLUDE UD_SEV_C;
       28    10799
       29    10800    1   DCL ACCESS UBIN WORD;
       30    10801    1   DCL ERR UBIN WORD;
       31    10802    1   DCL JIT_ERR REDEF ERR BIT(36);
       32    10803    1   DCL DEL_REC UBIN;
       33    10804    1   DCL ACCT_TYP UBIN BYTE;
       34    10805    1   DCL MAXCORE UBIN HALF;
       35    10806    1   DCL T$ PTR;
       36    10807    1   DCL LMN_UTS SBIN;
       37    10808    1   DCL SYSFLG BIT(1);
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:2    
       38    10809
       39    10810    1   DCL B$JIT$ PTR SYMREF READONLY;
       40    10811    1   DCL B$M$LM$ PTR SYMREF READONLY;
       41    10812    1   DCL B$SBUF1$ PTR SYMREF READONLY;
       42    10813    1   DCL S$CU$ PTR SYMREF;
       43    10814    1   DCL J_SYSTXT CHAR(8) SYMREF READONLY;
       44    10815
       45    10816        %FPT_CLOSE(FPTN=J_FPT_CL_RELG, STCLASS=SYMREF);
       46    10858        %FPT_CLOSE(FPTN=J_FPT_CL_REL, STCLASS=SYMREF);
       47    10900
       48    10901    1   DCL M$LM DCB;
       49    10902
       50    10903    1   DCL FMM$DFLOPN ENTRY;
       51    10904    1   DCL JQU$REOPEN ENTRY ALTRET;
       52    10905    1   DCL JQU$VALID ENTRY(1) ALTRET;
       53    10906    1   DCL JLS$SAVE_IMAGE ENTRY(3) ALTRET;
       54    10907    1   DCL JLS$GET_IMAGE ENTRY(3) ALTRET;
       55    10908    1   DCL JLU$SAVE_AMR ENTRY(1) ALTRET;
       56    10909    1   DCL JLU$TRUNCDCBS ENTRY;
       57    10910    1   DCL JQU$OPN_STAR ENTRY(6) ALTRET;
       58    10911    1   DCL JSR$RUNDOWN ENTRY ALTRET;
       59    10912    1   DCL JSD$ZAPUSR  ENTRY;
       60    10913    1   DCL JSE$ABORTX ENTRY;
       61    10914    1   DCL JSF$OPENLM ENTRY(1) ALTRET;
       62    10915    1   DCL JSF$READ ENTRY(6) ALTRET;
       63    10916    1   DCL JSU$WSTAR ENTRY(1);
       64    10917    1   DCL MME$WGVP ENTRY(4) ALTRET;
       65    10918    1   DCL MME$WFVP ENTRY(4) ALTRET;
       66    10919    1   DCL SSR$REG ENTRY(3) ALTRET;
       67    10920    1   DCL SC_IOERRNF_Q ENTRY CONV(2,0);
       68    10921    1   DCL UMD$CHKOPN ENTRY ALTRET;
       69    10922    1   DCL M$MCLOSE ENTRY(1) ALTRET;
       70    10923
       71    10924        %SUB FCG#='1221'O;
       72    10925        %SUB MID#='23'O;
       73    10926        %ERRCODE (NAME=JERR,COD#=0);
       74    10934        %ERRCODE (NAME=JWARN,COD#=%E$JQNOPROC,SEV#=0);
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:3    
       75    10942        %ERRCODE (NAME=JPPRIV,COD#=%E$JQNOPPRIV,SEV#=0);
       76    10950        %B$RECORDSUBS;
       77    10978        %B$HEAD;
       78    11178
       79    11179        %INCLUDE CP_6_SUBS;
       80    11719        %SUB B$JIT=B$JIT$->B$JIT;
       81    11720
       82    11721        %EJECT;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:4    
       83    11722
       84    11723        /*F*   NAME:   JQS$SAVE
       85    11724               PURPOSE: To write the image file for an M$SAVE.
       86    11725        */
       87    11726
       88    11727    1           ERR = 0;
       89    11728    1           J_FPT_CL_RELG.V.DCB# = %M$STAR#;
       90    11729    1           J_FPT_CL_REL.V.DCB# = %M$STAR#;
       91    11730
       92    11731        /* Make sure its OK to do a SAVE on this guy:
       93    11732        */
       94    11733    1           CALL JQU$VALID(ERR) ALTRET(SAVE_ERR);
       95    11734    1           B$JIT.JUNK = (B$JIT.JUNK | %JJ_SAVEING#);
       96    11735
       97    11736        /* Release any blocking buffers allocated to open dcbs.
       98    11737        */
       99    11738    1           CALL JLU$TRUNCDCBS;
      100    11739
      101    11740        /* Remember the users max core value and set max core high enough
      102    11741           to prevent the inability of being able to SAVE when user has
      103    11742           allocated all of memory available to him.
      104    11743        */
      105    11744    1           MAXCORE = B$JIT.MAXCORE;
      106    11745    1           B$JIT.MAXCORE = 1024;
      107    11746
      108    11747        /* Get SBUF1 for use in writing the SAVE image file.
      109    11748        */
      110    11749    1           ACCESS = BITBIN(%PGINMEM | %PGWRITE | %PGIOM);
      111    11750    1           CALL MME$WGVP(%USERWSQ,%SBUF1PG,ACCESS,ERR) ALTRET(SAVE_ERR);
      112    11751
      113    11752        /* Make sure Dribble is through with M$* before using it
      114    11753        */
      115    11754    1           CALL UMD$CHKOPN;
      116    11755
      117    11756        /* Get SBUF2 and read the assign/merge information into it.
      118    11757           Set DEL_REC so that the *A records don't get deleted.
      119    11758        */
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:5    
      120    11759    1           DEL_REC = 0;
      121    11760    1           CALL JLU$SAVE_AMR(DEL_REC) ALTRET(SAVE_ERR);
      122    11761
      123    11762        /* Open M$* to the FID which was passed to us:
      124    11763        */
      125    11764    1           CALL JQU$OPN_STAR(NAME$,ACCT$,PASS$,PSID$,1,ERR)  ALTRET(SAVE_ERR);
      126    11765
      127    11766        /* Set 'SAVE-in-progress' in the JIT, and go write out the file.
      128    11767        */
      129    11768    1           CALL JLS$SAVE_IMAGE(0,ERR,T$) ALTRET(SAVE_ERR);
      130    11769    1           CALL M$MCLOSE(J_FPT_CL_RELG) ALTRET(SAVE_ERR);
      131    11770    1           CALL MME$WFVP(%USERWSQ,%SBUF1PG,ERR,ERR) ALTRET(SAVE_ERR);
      132    11771    1           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_SAVEING#);
      133    11772
      134    11773        /* Set max core back to the user defined value
      135    11774        */
      136    11775    1           B$JIT.MAXCORE = MAXCORE;
      137    11776
      138    11777    1           RETURN;
      139    11778
      140    11779
      141    11780    1   SAVE_ERR:
      142    11781    1           IF ERR=0 THEN ERR = B$JIT.ERR.CODE;
      143    11782
      144    11783    1           IF (ERR >= %E$FREC) AND (ERR <= %E$GPIO)
      145    11784    1           THEN CALL SC_IOERRNF_Q;
      146    11785        /*S*    SCREECH_CODE: JQS-S$IOERRNF
      147    11786                TYPE:   SNAP
      148    11787                MESSAGE: Irrecoverable I/O error on image file.
      149    11788        */
      150    11789
      151    11790        /* Close and release whatever may have been written of the SAVE file
      152    11791        */
      153    11792    1           CALL M$MCLOSE(J_FPT_CL_REL);
      154    11793    1           CALL MME$WFVP(%USERWSQ,%SBUF1PG,ACCESS,ACCESS);
      155    11794    1           CALL MME$WFVP(%USERWSQ,%SBUF2PG,ACCESS,ACCESS);
      156    11795    1           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_SAVEING#);
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:6    
      157    11796    1           GOTO JQS_ERROR_EXIT;
      158    11797        %EJECT;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:7    
      159    11798
      160    11799        /*F*   NAME:   JQS$GET
      161    11800               PURPOSE: To restore a SAVE-ed image file.
      162    11801        */
      163    11802    1   JQS$GET: ENTRY(NAME$,ACCT$,PASS$,PSID$) ALTRET;
      164    11803    1           ERR = 0;
      165    11804    1           J_FPT_CL_RELG.V.DCB# = %M$STAR#;
      166    11805    1           J_FPT_CL_REL.V.DCB# = %M$STAR#;
      167    11806
      168    11807        /* Remember the users max core value and set max core high enough
      169    11808           to prevent the inability of restoring the saved image
      170    11809        */
      171    11810    1           MAXCORE=B$JIT.MAXCORE;
      172    11811    1           B$JIT.MAXCORE=1024;
      173    11812
      174    11813        /* Open M$* to the specified SAVE file.
      175    11814        */
      176    11815    1           CALL JQU$OPN_STAR(NAME$,ACCT$,PASS$,PSID$,0,ERR)
      177    11816    2           WHENALTRETURN DO;
      178    11817    2                JIT_ERR = B$JIT.ERR;
      179    11818    2                CALL JSR$RUNDOWN ALTRET(ZAPUSR);
      180    11819    2                B$JIT.ERR = JIT_ERR;
      181    11820    2                GOTO NO_SFILE;
      182    11821    2                END;
      183    11822
      184    11823        /* Set 'GET-in-progress' and go restore the SAVE-ed program.
      185    11824        */
      186    11825    1           B$JIT.JUNK = (B$JIT.JUNK | %JJ_GETTING#);
      187    11826    1           CALL JLS$GET_IMAGE(0,ERR,T$) ALTRET(GET_ERR);
      188    11827    1           LMN_UTS = ERR;
      189    11828
      190    11829        /* Go through this guy's DCBs, marking open ones closed.
      191    11830        */
      192    11831    1           CALL JQU$REOPEN;
      193    11832
      194    11833        /* Then open the load module
      195    11834        */
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:8    
      196    11835    1           CALL JSF$OPENLM(ERR) ALTRET(GET_ERR);
      197    11836    1           IF B$M$LM$->F$DCB.EXPIRE ~= LMN_UTS
      198    11837    2           THEN DO;
      199    11838    2                B$JIT.USRERR = JWARN;
      200    11839    2                END;
      201    11840
      202    11841        /*E*  ERROR: JQS-E$JQNOPROC-E
      203    11842              MESSAGE: WARNING - Your run unit has been replaced since the save date.
      204    11843        */
      205    11844        /*E*    ERROR: JQS-E$NOFILE-E
      206    11845              MESSAGE: Can't restore your SAVE program image; the run-unit no longer exists.
      207    11846                MESSAGE1: The run-unit that was in execution at the time of the
      208    11847                          save has been deleted.
      209    11848        */
      210    11849
      211    11850    1           B$JIT.JUNK = (B$JIT.JUNK & ~%JJ_EXONLY#);
      212    11851    2           IF B$M$LM$->F$DCB.FFLG.EXEC THEN DO;
      213    11852    2                B$JIT.JUNK = (B$JIT.JUNK | %JJ_EXONLY#);
      214    11853    2                B$M$LM$->F$DCB.FFLG.EXEC = '0'B;
      215    11854    2                END;
      216    11855    1           IF B$M$LM$->F$DCB.ACCT = J_SYSTXT
      217    11856    1           THEN SYSFLG = '1'B;
      218    11857    1           ELSE SYSFLG = '0'B;
      219    11858    1           CALL MME$WGVP(%USERWSQ,%SBUF1PG,BITBIN(%PGINMEM|%PGWRITE|%PGIOM),ERR)
      220    11859    2           WHENALTRETURN DO;
      221    11860    2                B$JIT.USRERR = JPPRIV;
      222    11861    2                B$JIT.PRIV.PRC = '0'B;
      223    11862    2                GOTO OPEN_VIRTUAL;
      224    11863    2                END;
      225    11864        /*E*  ERROR: JQS-E$JQNOPPRIV-E
      226    11865              MESSAGE: WARNING - The processor privileges have been set to 0
      227    11866              MESSAGE1: Unable to read the rununit head record to determine
      228    11867                        processor privileges for the rununit.
      229    11868        */
      230    11869    1           CALL JSF$READ(%TYPHEAD,SIZEW(B$HEAD),SIZEW(B$HEAD),B$SBUF1$,0,ERR)
      231    11870    2           WHENALTRETURN DO;
      232    11871    2                B$JIT.USRERR = JPPRIV;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:9    
      233    11872    2                B$JIT.PRIV.PRC = '0'B;
      234    11873    2                GOTO RELEASE_SBUF1;
      235    11874    2                END;
      236    11875    2           IF SYSFLG THEN DO;
      237    11876    2                B$JIT.PRIV.PRC = B$SBUF1$->B$HEAD.PRIV;
      238    11877    2                IF NOT(B$M$LM$->F$DCB.FFLG.DELF) AND
      239    11878    2                  (B$JIT.PRIV.PRC & B$JIT.PRIV.AUTH) ~= B$JIT.PRIV.PRC
      240    11879    2                THEN B$JIT.JUNK = B$JIT.JUNK | %JJ_EXONLY#;
      241    11880    2                END;
      242    11881    1           ELSE B$JIT.PRIV.PRC = '0'B;
      243    11882    1           IF B$JIT.PRIV.PRC & %PR_MAXMEM#
      244    11883    1           THEN B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE | %PR_MAXMEM#;
      245    11884    1   RELEASE_SBUF1:
      246    11885    1           CALL MME$WFVP(%USERWSQ,%SBUF1PG,BITBIN(%PGINMEM|%PGWRITE|%PGIOM),
      247    11886    2             ERR) WHENALTRETURN DO;
      248    11887    2                END;
      249    11888        /* Open up any virtual arrays that were open
      250    11889        */
      251    11890    1   OPEN_VIRTUAL:
      252    11891    1           IF B$JIT.VIRTUAL.DCB#(0) ~= 0
      253    11892    2           THEN DO;
      254    11893    2                B$JIT.DCB$ = DCBADDR(B$JIT.VIRTUAL.DCB#(0));
      255    11894    2                B$JIT.DCBNO = B$JIT.VIRTUAL.DCB#(0);
      256    11895    2                B$JIT.VIRTUAL.DCB#(0) = 0;
      257    11896    2                CALL FMM$DFLOPN;
      258    11897    2                END;
      259    11898    1           IF B$JIT.VIRTUAL.DCB#(1) ~= 0
      260    11899    2           THEN DO;
      261    11900    2                B$JIT.DCB$ = DCBADDR(B$JIT.VIRTUAL.DCB#(1));
      262    11901    2                B$JIT.DCBNO = B$JIT.VIRTUAL.DCB#(1);
      263    11902    2                B$JIT.VIRTUAL.DCB#(1) = 0;
      264    11903    2                CALL FMM$DFLOPN;
      265    11904    2                END;
      266    11905    1           IF B$JIT.VIRTUAL.DCB#(2) ~= 0
      267    11906    2           THEN DO;
      268    11907    2                B$JIT.DCB$ = DCBADDR(B$JIT.VIRTUAL.DCB#(2));
      269    11908    2                B$JIT.DCBNO = B$JIT.VIRTUAL.DCB#(2);
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:10   
      270    11909    2                B$JIT.VIRTUAL.DCB#(2) = 0;
      271    11910    2                CALL FMM$DFLOPN;
      272    11911    2                END;
      273    11912
      274    11913        /* Associate any needed shared processors. Note that the data
      275    11914           init flag in B$U.FLG is **NOT** set.
      276    11915        */
      277    11916    1           CALL SSR$REG(%SS_AP);
      278    11917
      279    11918        /* If a program with PROCACC has just been restored write a PSTART record to *S
      280    11919        */
      281    11920    1           IF (B$JIT.CPFLAGS1 & %CP_PROCACCT#)
      282    11921    2           THEN DO;
      283    11922    2                ACCT_TYP = %PSTART#;
      284    11923    2                CALL JSU$WSTAR(ACCT_TYP);
      285    11924    2                END;
      286    11925
      287    11926        /* Reset the 'GET-in-progress' flag and return.
      288    11927        */
      289    11928    1           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_GETTING#);
      290    11929
      291    11930        /* Restore the real max core value and abort the user if common data
      292    11931           pages have caused him to exceed his limit.
      293    11932        */
      294    11933    1           B$JIT.MAXCORE = MAXCORE;
      295    11934    1           IF B$JIT.CURRCORE > B$JIT.MAXCORE AND (NOT B$JIT.PRIV.ACTIVE&%PR_MAXMEM#)
      296    11935    2           THEN DO;
      297    11936    2                ERR = %E$MEMLIMIT;
      298    11937    2                GOTO GET_ERR2;
      299    11938    2                END;
      300    11939        /*E*   ERROR: JQS-E$MEMLIMIT-E
      301    11940             MESSAGE: User or installation memory limit exceeded while restoring SAVE image.
      302    11941               DESCRIPTION:  This error results in a class 2 exit control condition.
      303    11942                             %RS_LIMX# will be set in B$JIT.RNST and
      304    11943                             %XL_MEM# will be set in B$JIT.XLIMFLG.
      305    11944        */
      306    11945    1           RETURN;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:11   
      307    11946
      308    11947
      309    11948    1   GET_ERR:
      310    11949    1           IF ERR = 0 THEN ERR = B$JIT.ERR.CODE;
      311    11950    1           IF (B$JIT.JUNK & %JJ_GETTING#)
      312    11951    2           THEN DO;
      313    11952    2                CALL M$MCLOSE(J_FPT_CL_RELG) ALTRET(GE1);
      314    11953    2   GE1:         ;
      315    11954    2                CALL JQU$REOPEN;
      316    11955    2                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_GETTING#);
      317    11956    2                END;
      318    11957
      319    11958    1   GET_ERR2: ;
      320    11959    1           CALL JSR$RUNDOWN
      321    11960    2           WHENALTRETURN DO;
      322    11961    2   ZAPUSR:      ;
      323    11962    2                CALL JSD$ZAPUSR;
      324    11963    2                END;
      325    11964
      326    11965    1   JQS_ERROR_EXIT: ;
      327    11966    1           B$JIT.ERR = JERR;
      328    11967    1           B$JIT.ERR.CODE = ERR;
      329    11968    1   NO_SFILE: ;
      330    11969    1           B$JIT.DCBNO=0;
      331    11970        /* Restore the real max core value    */
      332    11971    1           B$JIT.MAXCORE = MAXCORE;
      333    11972    1           ALTRETURN;
      334    11973
      335    11974    1   END JQS$SAVE;

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:12   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JQS$SAVE.

   Procedure JQS$SAVE requires 423 words for executable code.
   Procedure JQS$SAVE requires 22 words of local(AUTO) storage.

    No errors detected in file JQS$SAVGET.:E05TSI    .

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:13   

 Object Unit name= JQS$SAVE                                   File name= JQS$SAVGET.:E05TOU
 UTS= JUL 29 '97 23:40:44.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LM
    2  RoData even  UTS      4      4  JQS$SAVE
    3   Proc  even  none   423    647  JQS$SAVE
    4  RoData even  none    21     25  JQS$SAVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        4  JQS$SAVE
     3    206          yes     yes      Std        4  JQS$GET
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:14   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 JQU$VALID
 yes     yes           Std       6 JQU$OPN_STAR
 yes     yes           Std       4 MME$WFVP
 yes     yes           Std       0 JSR$RUNDOWN
 yes     yes           Std       3 SSR$REG
         yes           Std       0 JSD$ZAPUSR
 yes     yes           Std       0 JQU$REOPEN
         yes           Std       0 JLU$TRUNCDCBS
 yes     yes           Std       4 MME$WGVP
 yes     yes           Std       1 JLU$SAVE_AMR
 yes     yes           Std       3 JLS$SAVE_IMAGE
 yes     yes           Std       3 JLS$GET_IMAGE
         yes           Std       1 JSU$WSTAR
 yes     yes           Std       1 JSF$OPENLM
 yes     yes           Std       0 UMD$CHKOPN
 yes     yes           Std       1 M$MCLOSE
 yes     yes           Std       6 JSF$READ
         yes           Std       0 FMM$DFLOPN
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_IOERRNF_Q                          M$UC                             r    B$JIT$
r    B$M$LM$                          r    B$SBUF1$                         r    J_SYSTXT
     J_FPT_CL_RELG                         J_FPT_CL_REL                          M$LM
     B_VECTNIL
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:15   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ROSID                                 ISSID
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:16   


        1        1        /*M* JQS$SAVGET - Main routines for handling SAVE/GET.                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=5,ENU=0,ECU=0    */
        8        8
        9        9        JQS$SAVE: PROC(NAME$,ACCT$,PASS$,PSID$) ALTRET;

      9  3 000000   000000 700200 xent  JQS$SAVE     TSX0  ! X66_AUTO_4
         3 000001   000026 000004                    ZERO    22,4

       10       10    1   DCL NAME$ PTR;
       11       11    1   DCL ACCT$ PTR;
       12       12    1   DCL PASS$ PTR;
       13       13    1   DCL PSID$ PTR;
       14       14
       15       15        %INCLUDE B_STRINGS_C;
       16      144        %INCLUDE B$OBJECT_C;
       17     3574        %INCLUDE B$USER;
       18     3790        %INCLUDE M_INFO_C;
       19     3930        %INCLUDE B$JIT;
       20     4533        %INCLUDE CP_6;
       21    10092        %INCLUDE F$DCB;
       22    10141        %INCLUDE J_ERRSET_C;
       23    10161        %INCLUDE F_ERRORS_C;
       24    10401        %INCLUDE J_ERRORS_C;
       25    10488        %INCLUDE M_ERRORS_C;
       26    10552        %INCLUDE SS_SCHED_C;
       27    10785        %INCLUDE UD_SEV_C;
       28    10799
       29    10800    1   DCL ACCESS UBIN WORD;
       30    10801    1   DCL ERR UBIN WORD;
       31    10802    1   DCL JIT_ERR REDEF ERR BIT(36);
       32    10803    1   DCL DEL_REC UBIN;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:17   
       33    10804    1   DCL ACCT_TYP UBIN BYTE;
       34    10805    1   DCL MAXCORE UBIN HALF;
       35    10806    1   DCL T$ PTR;
       36    10807    1   DCL LMN_UTS SBIN;
       37    10808    1   DCL SYSFLG BIT(1);
       38    10809
       39    10810    1   DCL B$JIT$ PTR SYMREF READONLY;
       40    10811    1   DCL B$M$LM$ PTR SYMREF READONLY;
       41    10812    1   DCL B$SBUF1$ PTR SYMREF READONLY;
       42    10813    1   DCL S$CU$ PTR SYMREF;
       43    10814    1   DCL J_SYSTXT CHAR(8) SYMREF READONLY;
       44    10815
       45    10816        %FPT_CLOSE(FPTN=J_FPT_CL_RELG, STCLASS=SYMREF);
       46    10858        %FPT_CLOSE(FPTN=J_FPT_CL_REL, STCLASS=SYMREF);
       47    10900
       48    10901    1   DCL M$LM DCB;
       49    10902
       50    10903    1   DCL FMM$DFLOPN ENTRY;
       51    10904    1   DCL JQU$REOPEN ENTRY ALTRET;
       52    10905    1   DCL JQU$VALID ENTRY(1) ALTRET;
       53    10906    1   DCL JLS$SAVE_IMAGE ENTRY(3) ALTRET;
       54    10907    1   DCL JLS$GET_IMAGE ENTRY(3) ALTRET;
       55    10908    1   DCL JLU$SAVE_AMR ENTRY(1) ALTRET;
       56    10909    1   DCL JLU$TRUNCDCBS ENTRY;
       57    10910    1   DCL JQU$OPN_STAR ENTRY(6) ALTRET;
       58    10911    1   DCL JSR$RUNDOWN ENTRY ALTRET;
       59    10912    1   DCL JSD$ZAPUSR  ENTRY;
       60    10913    1   DCL JSE$ABORTX ENTRY;
       61    10914    1   DCL JSF$OPENLM ENTRY(1) ALTRET;
       62    10915    1   DCL JSF$READ ENTRY(6) ALTRET;
       63    10916    1   DCL JSU$WSTAR ENTRY(1);
       64    10917    1   DCL MME$WGVP ENTRY(4) ALTRET;
       65    10918    1   DCL MME$WFVP ENTRY(4) ALTRET;
       66    10919    1   DCL SSR$REG ENTRY(3) ALTRET;
       67    10920    1   DCL SC_IOERRNF_Q ENTRY CONV(2,0);
       68    10921    1   DCL UMD$CHKOPN ENTRY ALTRET;
       69    10922    1   DCL M$MCLOSE ENTRY(1) ALTRET;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:18   
       70    10923
       71    10924        %SUB FCG#='1221'O;
       72    10925        %SUB MID#='23'O;
       73    10926        %ERRCODE (NAME=JERR,COD#=0);
       74    10934        %ERRCODE (NAME=JWARN,COD#=%E$JQNOPROC,SEV#=0);
       75    10942        %ERRCODE (NAME=JPPRIV,COD#=%E$JQNOPPRIV,SEV#=0);
       76    10950        %B$RECORDSUBS;
       77    10978        %B$HEAD;
       78    11178
       79    11179        %INCLUDE CP_6_SUBS;
       80    11719        %SUB B$JIT=B$JIT$->B$JIT;
       81    11720
       82    11721        %EJECT;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:19   
       83    11722
       84    11723        /*F*   NAME:   JQS$SAVE
       85    11724               PURPOSE: To write the image file for an M$SAVE.
       86    11725        */
       87    11726
       88    11727    1           ERR = 0;

  11727  3 000002   200010 450100                    STZ     ERR,,AUTO

       89    11728    1           J_FPT_CL_RELG.V.DCB# = %M$STAR#;

  11728  3 000003   000001 220003                    LDX0    1,DU
         3 000004   000032 740000 xsym               STX0    J_FPT_CL_RELG+26

       90    11729    1           J_FPT_CL_REL.V.DCB# = %M$STAR#;

  11729  3 000005   000032 740000 xsym               STX0    J_FPT_CL_REL+26

       91    11730
       92    11731        /* Make sure its OK to do a SAVE on this guy:
       93    11732        */
       94    11733    1           CALL JQU$VALID(ERR) ALTRET(SAVE_ERR);

  11733  3 000006   200010 630500                    EPPR0   ERR,,AUTO
         3 000007   200020 450500                    STP0    SYSFLG+2,,AUTO
         3 000010   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000012   000000 701000 xent               TSX1    JQU$VALID
         3 000013   000133 702000 3                  TSX2    SAVE_ERR

       95    11734    1           B$JIT.JUNK = (B$JIT.JUNK | %JJ_SAVEING#);

  11734  3 000014   000000 470400 xsym               LDP0    B$JIT$
         3 000015   000315 220100                    LDX0    205,,PR0
         3 000016   010000 260003                    ORX0    4096,DU
         3 000017   000315 740100                    STX0    205,,PR0

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:20   
       96    11735
       97    11736        /* Release any blocking buffers allocated to open dcbs.
       98    11737        */
       99    11738    1           CALL JLU$TRUNCDCBS;

  11738  3 000020   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000021   000000 701000 xent               TSX1    JLU$TRUNCDCBS
         3 000022   000000 011000                    NOP     0

      100    11739
      101    11740        /* Remember the users max core value and set max core high enough
      102    11741           to prevent the inability of being able to SAVE when user has
      103    11742           allocated all of memory available to him.
      104    11743        */
      105    11744    1           MAXCORE = B$JIT.MAXCORE;

  11744  3 000023   000000 470400 xsym               LDP0    B$JIT$
         3 000024   000210 220100                    LDX0    136,,PR0
         3 000025   200013 740100                    STX0    MAXCORE,,AUTO

      106    11745    1           B$JIT.MAXCORE = 1024;

  11745  3 000026   002000 221003                    LDX1    1024,DU
         3 000027   000210 741100                    STX1    136,,PR0

      107    11746
      108    11747        /* Get SBUF1 for use in writing the SAVE image file.
      109    11748        */
      110    11749    1           ACCESS = BITBIN(%PGINMEM | %PGWRITE | %PGIOM);

  11749  3 000030   000064 235007                    LDA     52,DL
         3 000031   200007 755100                    STA     ACCESS,,AUTO

      111    11750    1           CALL MME$WGVP(%USERWSQ,%SBUF1PG,ACCESS,ERR) ALTRET(SAVE_ERR);

  11750  3 000032   200010 631500                    EPPR1   ERR,,AUTO
         3 000033   200023 451500                    STP1    SYSFLG+5,,AUTO
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:21   
         3 000034   200007 633500                    EPPR3   ACCESS,,AUTO
         3 000035   200022 453500                    STP3    SYSFLG+4,,AUTO
         3 000036   000002 237000 4                  LDAQ    2
         3 000037   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000040   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000041   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000042   000000 701000 xent               TSX1    MME$WGVP
         3 000043   000133 702000 3                  TSX2    SAVE_ERR

      112    11751
      113    11752        /* Make sure Dribble is through with M$* before using it
      114    11753        */
      115    11754    1           CALL UMD$CHKOPN;

  11754  3 000044   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000045   000000 701000 xent               TSX1    UMD$CHKOPN
         3 000046   000000 011000                    NOP     0

      116    11755
      117    11756        /* Get SBUF2 and read the assign/merge information into it.
      118    11757           Set DEL_REC so that the *A records don't get deleted.
      119    11758        */
      120    11759    1           DEL_REC = 0;

  11759  3 000047   200011 450100                    STZ     DEL_REC,,AUTO

      121    11760    1           CALL JLU$SAVE_AMR(DEL_REC) ALTRET(SAVE_ERR);

  11760  3 000050   200011 630500                    EPPR0   DEL_REC,,AUTO
         3 000051   200020 450500                    STP0    SYSFLG+2,,AUTO
         3 000052   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000054   000000 701000 xent               TSX1    JLU$SAVE_AMR
         3 000055   000133 702000 3                  TSX2    SAVE_ERR

      122    11761
      123    11762        /* Open M$* to the FID which was passed to us:
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:22   
      124    11763        */
      125    11764    1           CALL JQU$OPN_STAR(NAME$,ACCT$,PASS$,PSID$,1,ERR)  ALTRET(SAVE_ERR);

  11764  3 000056   200010 630500                    EPPR0   ERR,,AUTO
         3 000057   200025 450500                    STP0    SYSFLG+7,,AUTO
         3 000060   000001 236000 4                  LDQ     1
         3 000061   200024 756100                    STQ     SYSFLG+6,,AUTO
         3 000062   200006 236100                    LDQ     @PSID$,,AUTO
         3 000063   200005 235100                    LDA     @PASS$,,AUTO
         3 000064   200022 757100                    STAQ    SYSFLG+4,,AUTO
         3 000065   200004 236100                    LDQ     @ACCT$,,AUTO
         3 000066   200003 235100                    LDA     @NAME$,,AUTO
         3 000067   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000070   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000071   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000072   000000 701000 xent               TSX1    JQU$OPN_STAR
         3 000073   000133 702000 3                  TSX2    SAVE_ERR

      126    11765
      127    11766        /* Set 'SAVE-in-progress' in the JIT, and go write out the file.
      128    11767        */
      129    11768    1           CALL JLS$SAVE_IMAGE(0,ERR,T$) ALTRET(SAVE_ERR);

  11768  3 000074   200014 630500                    EPPR0   T$,,AUTO
         3 000075   200022 450500                    STP0    SYSFLG+4,,AUTO
         3 000076   200010 631500                    EPPR1   ERR,,AUTO
         3 000077   200021 451500                    STP1    SYSFLG+3,,AUTO
         3 000100   000004 236000 4                  LDQ     4
         3 000101   200020 756100                    STQ     SYSFLG+2,,AUTO
         3 000102   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000103   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000104   000000 701000 xent               TSX1    JLS$SAVE_IMAGE
         3 000105   000133 702000 3                  TSX2    SAVE_ERR

      130    11769    1           CALL M$MCLOSE(J_FPT_CL_RELG) ALTRET(SAVE_ERR);

  11769  3 000106   000005 630400 4                  EPPR0   5
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:23   
         3 000107   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000110   000000 701000 xent               TSX1    M$MCLOSE
         3 000111   000133 702000 3                  TSX2    SAVE_ERR

      131    11770    1           CALL MME$WFVP(%USERWSQ,%SBUF1PG,ERR,ERR) ALTRET(SAVE_ERR);

  11770  3 000112   200010 630500                    EPPR0   ERR,,AUTO
         3 000113   200023 450500                    STP0    SYSFLG+5,,AUTO
         3 000114   200010 631500                    EPPR1   ERR,,AUTO
         3 000115   200022 451500                    STP1    SYSFLG+4,,AUTO
         3 000116   000002 237000 4                  LDAQ    2
         3 000117   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000120   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000121   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000122   000000 701000 xent               TSX1    MME$WFVP
         3 000123   000133 702000 3                  TSX2    SAVE_ERR

      132    11771    1           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_SAVEING#);

  11771  3 000124   000000 470400 xsym               LDP0    B$JIT$
         3 000125   000315 220100                    LDX0    205,,PR0
         3 000126   767777 360003                    ANX0    -4097,DU
         3 000127   000315 740100                    STX0    205,,PR0

      133    11772
      134    11773        /* Set max core back to the user defined value
      135    11774        */
      136    11775    1           B$JIT.MAXCORE = MAXCORE;

  11775  3 000130   200013 221100                    LDX1    MAXCORE,,AUTO
         3 000131   000210 741100                    STX1    136,,PR0

      137    11776
      138    11777    1           RETURN;

  11777  3 000132   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:24   
      139    11778
      140    11779
      141    11780    1   SAVE_ERR:
      142    11781    1           IF ERR=0 THEN ERR = B$JIT.ERR.CODE;

  11781  3 000133   200010 235100       SAVE_ERR     LDA     ERR,,AUTO
         3 000134   000142 601000 3                  TNZ     s:11783

  11781  3 000135   000000 470400 xsym               LDP0    B$JIT$
         3 000136   000012 236100                    LDQ     10,,PR0
         3 000137   000003 772000                    QRL     3
         3 000140   037777 376007                    ANQ     16383,DL
         3 000141   200010 756100                    STQ     ERR,,AUTO

      143    11782
      144    11783    1           IF (ERR >= %E$FREC) AND (ERR <= %E$GPIO)

  11783  3 000142   200010 235100                    LDA     ERR,,AUTO
         3 000143   000046 115007                    CMPA    38,DL
         3 000144   000151 602000 3                  TNC     s:11792
         3 000145   000065 115007                    CMPA    53,DL
         3 000146   000151 603000 3                  TRC     s:11792

      145    11784    1           THEN CALL SC_IOERRNF_Q;

  11784  3 000147   000000 713400 xsym               CLIMB   SC_IOERRNF_Q
         3 000150   000000 600000 xsid               climb   nvectors=         0

      146    11785        /*S*    SCREECH_CODE: JQS-S$IOERRNF
      147    11786                TYPE:   SNAP
      148    11787                MESSAGE: Irrecoverable I/O error on image file.
      149    11788        */
      150    11789
      151    11790        /* Close and release whatever may have been written of the SAVE file
      152    11791        */
      153    11792    1           CALL M$MCLOSE(J_FPT_CL_REL);

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:25   
  11792  3 000151   000006 630400 4                  EPPR0   6
         3 000152   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000153   000000 701000 xent               TSX1    M$MCLOSE
         3 000154   000000 011000                    NOP     0

      154    11793    1           CALL MME$WFVP(%USERWSQ,%SBUF1PG,ACCESS,ACCESS);

  11793  3 000155   200007 630500                    EPPR0   ACCESS,,AUTO
         3 000156   200023 450500                    STP0    SYSFLG+5,,AUTO
         3 000157   200007 631500                    EPPR1   ACCESS,,AUTO
         3 000160   200022 451500                    STP1    SYSFLG+4,,AUTO
         3 000161   000002 237000 4                  LDAQ    2
         3 000162   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000163   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000164   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000165   000000 701000 xent               TSX1    MME$WFVP
         3 000166   000000 011000                    NOP     0

      155    11794    1           CALL MME$WFVP(%USERWSQ,%SBUF2PG,ACCESS,ACCESS);

  11794  3 000167   200007 630500                    EPPR0   ACCESS,,AUTO
         3 000170   200023 450500                    STP0    SYSFLG+5,,AUTO
         3 000171   200007 631500                    EPPR1   ACCESS,,AUTO
         3 000172   200022 451500                    STP1    SYSFLG+4,,AUTO
         3 000173   000010 237000 4                  LDAQ    8
         3 000174   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000175   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000176   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000177   000000 701000 xent               TSX1    MME$WFVP
         3 000200   000000 011000                    NOP     0

      156    11795    1           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_SAVEING#);

  11795  3 000201   000000 470400 xsym               LDP0    B$JIT$
         3 000202   000315 220100                    LDX0    205,,PR0
         3 000203   767777 360003                    ANX0    -4097,DU
         3 000204   000315 740100                    STX0    205,,PR0
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:26   

      157    11796    1           GOTO JQS_ERROR_EXIT;

  11796  3 000205   000632 710000 3                  TRA     JQS_ERROR_EXIT

      158    11797        %EJECT;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:27   
      159    11798
      160    11799        /*F*   NAME:   JQS$GET
      161    11800               PURPOSE: To restore a SAVE-ed image file.
      162    11801        */
      163    11802    1   JQS$GET: ENTRY(NAME$,ACCT$,PASS$,PSID$) ALTRET;

  11802  3 000206   000000 700200 xent  JQS$GET      TSX0  ! X66_AUTO_4
         3 000207   000026 000004                    ZERO    22,4

      164    11803    1           ERR = 0;

  11803  3 000210   200010 450100                    STZ     ERR,,AUTO

      165    11804    1           J_FPT_CL_RELG.V.DCB# = %M$STAR#;

  11804  3 000211   000001 220003                    LDX0    1,DU
         3 000212   000032 740000 xsym               STX0    J_FPT_CL_RELG+26

      166    11805    1           J_FPT_CL_REL.V.DCB# = %M$STAR#;

  11805  3 000213   000032 740000 xsym               STX0    J_FPT_CL_REL+26

      167    11806
      168    11807        /* Remember the users max core value and set max core high enough
      169    11808           to prevent the inability of restoring the saved image
      170    11809        */
      171    11810    1           MAXCORE=B$JIT.MAXCORE;

  11810  3 000214   000000 470400 xsym               LDP0    B$JIT$
         3 000215   000210 221100                    LDX1    136,,PR0
         3 000216   200013 741100                    STX1    MAXCORE,,AUTO

      172    11811    1           B$JIT.MAXCORE=1024;

  11811  3 000217   002000 222003                    LDX2    1024,DU
         3 000220   000210 742100                    STX2    136,,PR0

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:28   
      173    11812
      174    11813        /* Open M$* to the specified SAVE file.
      175    11814        */
      176    11815    1           CALL JQU$OPN_STAR(NAME$,ACCT$,PASS$,PSID$,0,ERR)

  11815  3 000221   200010 631500                    EPPR1   ERR,,AUTO
         3 000222   200025 451500                    STP1    SYSFLG+7,,AUTO
         3 000223   000004 236000 4                  LDQ     4
         3 000224   200024 756100                    STQ     SYSFLG+6,,AUTO
         3 000225   200006 236100                    LDQ     @PSID$,,AUTO
         3 000226   200005 235100                    LDA     @PASS$,,AUTO
         3 000227   200022 757100                    STAQ    SYSFLG+4,,AUTO
         3 000230   200004 236100                    LDQ     @ACCT$,,AUTO
         3 000231   200003 235100                    LDA     @NAME$,,AUTO
         3 000232   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000233   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000234   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000235   000000 701000 xent               TSX1    JQU$OPN_STAR
         3 000236   000240 702000 3                  TSX2    s:11817
         3 000237   000252 710000 3                  TRA     s:11825

      177    11816    2           WHENALTRETURN DO;

      178    11817    2                JIT_ERR = B$JIT.ERR;

  11817  3 000240   000000 470400 xsym               LDP0    B$JIT$
         3 000241   000012 236100                    LDQ     10,,PR0
         3 000242   200010 756100                    STQ     ERR,,AUTO

      179    11818    2                CALL JSR$RUNDOWN ALTRET(ZAPUSR);

  11818  3 000243   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000244   000000 701000 xent               TSX1    JSR$RUNDOWN
         3 000245   000627 702000 3                  TSX2    ZAPUSR

      180    11819    2                B$JIT.ERR = JIT_ERR;

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:29   
  11819  3 000246   200010 236100                    LDQ     ERR,,AUTO
         3 000247   000000 470400 xsym               LDP0    B$JIT$
         3 000250   000012 756100                    STQ     10,,PR0

      181    11820    2                GOTO NO_SFILE;

  11820  3 000251   000642 710000 3                  TRA     NO_SFILE

      182    11821    2                END;
      183    11822
      184    11823        /* Set 'GET-in-progress' and go restore the SAVE-ed program.
      185    11824        */
      186    11825    1           B$JIT.JUNK = (B$JIT.JUNK | %JJ_GETTING#);

  11825  3 000252   000000 470400 xsym               LDP0    B$JIT$
         3 000253   000315 220100                    LDX0    205,,PR0
         3 000254   020000 260003                    ORX0    8192,DU
         3 000255   000315 740100                    STX0    205,,PR0

      187    11826    1           CALL JLS$GET_IMAGE(0,ERR,T$) ALTRET(GET_ERR);

  11826  3 000256   200014 631500                    EPPR1   T$,,AUTO
         3 000257   200022 451500                    STP1    SYSFLG+4,,AUTO
         3 000260   200010 633500                    EPPR3   ERR,,AUTO
         3 000261   200021 453500                    STP3    SYSFLG+3,,AUTO
         3 000262   000004 236000 4                  LDQ     4
         3 000263   200020 756100                    STQ     SYSFLG+2,,AUTO
         3 000264   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000265   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000266   000000 701000 xent               TSX1    JLS$GET_IMAGE
         3 000267   000575 702000 3                  TSX2    GET_ERR

      188    11827    1           LMN_UTS = ERR;

  11827  3 000270   200010 235100                    LDA     ERR,,AUTO
         3 000271   200015 755100                    STA     LMN_UTS,,AUTO

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:30   
      189    11828
      190    11829        /* Go through this guy's DCBs, marking open ones closed.
      191    11830        */
      192    11831    1           CALL JQU$REOPEN;

  11831  3 000272   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000273   000000 701000 xent               TSX1    JQU$REOPEN
         3 000274   000000 011000                    NOP     0

      193    11832
      194    11833        /* Then open the load module
      195    11834        */
      196    11835    1           CALL JSF$OPENLM(ERR) ALTRET(GET_ERR);

  11835  3 000275   200010 630500                    EPPR0   ERR,,AUTO
         3 000276   200020 450500                    STP0    SYSFLG+2,,AUTO
         3 000277   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000301   000000 701000 xent               TSX1    JSF$OPENLM
         3 000302   000575 702000 3                  TSX2    GET_ERR

      197    11836    1           IF B$M$LM$->F$DCB.EXPIRE ~= LMN_UTS

  11836  3 000303   000000 470400 xsym               LDP0    B$M$LM$
         3 000304   000035 236100                    LDQ     29,,PR0
         3 000305   200015 116100                    CMPQ    LMN_UTS,,AUTO
         3 000306   000312 600000 3                  TZE     s:11850

      198    11837    2           THEN DO;

      199    11838    2                B$JIT.USRERR = JWARN;

  11838  3 000307   000001 236000 2                  LDQ     JWARN
         3 000310   000000 471400 xsym               LDP1    B$JIT$
         3 000311   100144 756100                    STQ     100,,PR1

      200    11839    2                END;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:31   

      201    11840
      202    11841        /*E*  ERROR: JQS-E$JQNOPROC-E
      203    11842              MESSAGE: WARNING - Your run unit has been replaced since the save date.
      204    11843        */
      205    11844        /*E*    ERROR: JQS-E$NOFILE-E
      206    11845             MESSAGE: Can't restore your SAVE program image; the run-unit no longer exists.
      207    11846                MESSAGE1: The run-unit that was in execution at the time of the
      208    11847                          save has been deleted.
      209    11848        */
      210    11849
      211    11850    1           B$JIT.JUNK = (B$JIT.JUNK & ~%JJ_EXONLY#);

  11850  3 000312   000000 471400 xsym               LDP1    B$JIT$
         3 000313   100315 220100                    LDX0    205,,PR1
         3 000314   777767 360003                    ANX0    -9,DU
         3 000315   100315 740100                    STX0    205,,PR1

      212    11851    2           IF B$M$LM$->F$DCB.FFLG.EXEC THEN DO;

  11851  3 000316   000004 236100                    LDQ     4,,PR0
         3 000317   002000 316003                    CANQ    1024,DU
         3 000320   000325 600000 3                  TZE     s:11855

      213    11852    2                B$JIT.JUNK = (B$JIT.JUNK | %JJ_EXONLY#);

  11852  3 000321   000010 260003                    ORX0    8,DU
         3 000322   100315 740100                    STX0    205,,PR1

      214    11853    2                B$M$LM$->F$DCB.FFLG.EXEC = '0'B;

  11853  3 000323   000012 236000 4                  LDQ     10
         3 000324   000004 356100                    ANSQ    4,,PR0

      215    11854    2                END;

      216    11855    1           IF B$M$LM$->F$DCB.ACCT = J_SYSTXT
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:32   

  11855  3 000325   040000 106500                    CMPC    fill='040'O
         3 000326   000020 000010                    ADSC9   16,,PR0                  cn=0,n=8
         3 000327   000000 000010 xsym               ADSC9   J_SYSTXT                 cn=0,n=8
         3 000330   000334 601000 3                  TNZ     s:11857

      217    11856    1           THEN SYSFLG = '1'B;

  11856  3 000331   400000 236003                    LDQ     -131072,DU
         3 000332   200016 756100                    STQ     SYSFLG,,AUTO
         3 000333   000335 710000 3                  TRA     s:11858

      218    11857    1           ELSE SYSFLG = '0'B;

  11857  3 000334   200016 450100                    STZ     SYSFLG,,AUTO

      219    11858    1           CALL MME$WGVP(%USERWSQ,%SBUF1PG,BITBIN(%PGINMEM|%PGWRITE|%PGIOM),ERR)

  11858  3 000335   200010 633500                    EPPR3   ERR,,AUTO
         3 000336   200023 453500                    STP3    SYSFLG+5,,AUTO
         3 000337   000014 236000 4                  LDQ     12
         3 000340   200022 756100                    STQ     SYSFLG+4,,AUTO
         3 000341   000002 237000 4                  LDAQ    2
         3 000342   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000343   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000344   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000345   000000 701000 xent               TSX1    MME$WGVP
         3 000346   000350 702000 3                  TSX2    s:11860
         3 000347   000355 710000 3                  TRA     s:11869

      220    11859    2           WHENALTRETURN DO;

      221    11860    2                B$JIT.USRERR = JPPRIV;

  11860  3 000350   000002 236000 2                  LDQ     JPPRIV
         3 000351   000000 470400 xsym               LDP0    B$JIT$
         3 000352   000144 756100                    STQ     100,,PR0
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:33   

      222    11861    2                B$JIT.PRIV.PRC = '0'B;

  11861  3 000353   000016 450100                    STZ     14,,PR0

      223    11862    2                GOTO OPEN_VIRTUAL;

  11862  3 000354   000445 710000 3                  TRA     OPEN_VIRTUAL

      224    11863    2                END;
      225    11864        /*E*  ERROR: JQS-E$JQNOPPRIV-E
      226    11865              MESSAGE: WARNING - The processor privileges have been set to 0
      227    11866              MESSAGE1: Unable to read the rununit head record to determine
      228    11867                        processor privileges for the rununit.
      229    11868        */
      230    11869    1           CALL JSF$READ(%TYPHEAD,SIZEW(B$HEAD),SIZEW(B$HEAD),B$SBUF1$,0,ERR)

  11869  3 000355   200010 630500                    EPPR0   ERR,,AUTO
         3 000356   200025 450500                    STP0    SYSFLG+7,,AUTO
         3 000357   000004 236000 4                  LDQ     4
         3 000360   200024 756100                    STQ     SYSFLG+6,,AUTO
         3 000361   000016 237000 4                  LDAQ    14
         3 000362   200022 757100                    STAQ    SYSFLG+4,,AUTO
         3 000363   000020 237000 4                  LDAQ    16
         3 000364   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000365   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000366   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000367   000000 701000 xent               TSX1    JSF$READ
         3 000370   000372 702000 3                  TSX2    s:11871
         3 000371   000377 710000 3                  TRA     s:11875

      231    11870    2           WHENALTRETURN DO;

      232    11871    2                B$JIT.USRERR = JPPRIV;

  11871  3 000372   000002 236000 2                  LDQ     JPPRIV
         3 000373   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:34   
         3 000374   000144 756100                    STQ     100,,PR0

      233    11872    2                B$JIT.PRIV.PRC = '0'B;

  11872  3 000375   000016 450100                    STZ     14,,PR0

      234    11873    2                GOTO RELEASE_SBUF1;

  11873  3 000376   000432 710000 3                  TRA     RELEASE_SBUF1

      235    11874    2                END;
      236    11875    2           IF SYSFLG THEN DO;

  11875  3 000377   200016 234100                    SZN     SYSFLG,,AUTO
         3 000400   000421 605000 3                  TPL     s:11881

      237    11876    2                B$JIT.PRIV.PRC = B$SBUF1$->B$HEAD.PRIV;

  11876  3 000401   000000 470400 xsym               LDP0    B$SBUF1$
         3 000402   000000 236100                    LDQ     0,,PR0
         3 000403   000000 471400 xsym               LDP1    B$JIT$
         3 000404   100016 756100                    STQ     14,,PR1

      238    11877    2                IF NOT(B$M$LM$->F$DCB.FFLG.DELF) AND

  11877  3 000405   000000 473400 xsym               LDP3    B$M$LM$
         3 000406   300004 236100                    LDQ     4,,PR3
         3 000407   020000 316003                    CANQ    8192,DU
         3 000410   000423 601000 3                  TNZ     s:11882
         3 000411   100016 236100                    LDQ     14,,PR1
         3 000412   100014 376100                    ANQ     12,,PR1
         3 000413   100016 116100                    CMPQ    14,,PR1
         3 000414   000423 600000 3                  TZE     s:11882

      239    11878    2                  (B$JIT.PRIV.PRC & B$JIT.PRIV.AUTH) ~= B$JIT.PRIV.PRC
      240    11879    2                THEN B$JIT.JUNK = B$JIT.JUNK | %JJ_EXONLY#;

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:35   
  11879  3 000415   100315 220100                    LDX0    205,,PR1
         3 000416   000010 260003                    ORX0    8,DU
         3 000417   100315 740100                    STX0    205,,PR1

      241    11880    2                END;

  11880  3 000420   000423 710000 3                  TRA     s:11882

      242    11881    1           ELSE B$JIT.PRIV.PRC = '0'B;

  11881  3 000421   000000 470400 xsym               LDP0    B$JIT$
         3 000422   000016 450100                    STZ     14,,PR0

      243    11882    1           IF B$JIT.PRIV.PRC & %PR_MAXMEM#

  11882  3 000423   000000 470400 xsym               LDP0    B$JIT$
         3 000424   000016 236100                    LDQ     14,,PR0
         3 000425   000006 376000 xsym               ANQ     B_VECTNIL+6
         3 000426   000432 600000 3                  TZE     RELEASE_SBUF1

      244    11883    1           THEN B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE | %PR_MAXMEM#;

  11883  3 000427   000013 236100                    LDQ     11,,PR0
         3 000430   000006 276000 xsym               ORQ     B_VECTNIL+6
         3 000431   000013 756100                    STQ     11,,PR0

      245    11884    1   RELEASE_SBUF1:
      246    11885    1           CALL MME$WFVP(%USERWSQ,%SBUF1PG,BITBIN(%PGINMEM|%PGWRITE|%PGIOM),

  11885  3 000432   200010 631500       RELEASE_SBU* EPPR1   ERR,,AUTO
         3 000433   200023 451500                    STP1    SYSFLG+5,,AUTO
         3 000434   000014 236000 4                  LDQ     12
         3 000435   200022 756100                    STQ     SYSFLG+4,,AUTO
         3 000436   000002 237000 4                  LDAQ    2
         3 000437   200020 757100                    STAQ    SYSFLG+2,,AUTO
         3 000440   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000441   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:36   
         3 000442   000000 701000 xent               TSX1    MME$WFVP
         3 000443   000445 702000 3                  TSX2    OPEN_VIRTUAL
         3 000444   000445 710000 3                  TRA     OPEN_VIRTUAL

      247    11886    2             ERR) WHENALTRETURN DO;

      248    11887    2                END;

      249    11888        /* Open up any virtual arrays that were open
      250    11889        */
      251    11890    1   OPEN_VIRTUAL:
      252    11891    1           IF B$JIT.VIRTUAL.DCB#(0) ~= 0

  11891  3 000445   000000 470400 xsym  OPEN_VIRTUAL LDP0    B$JIT$
         3 000446   000217 236100                    LDQ     143,,PR0
         3 000447   777000 316003                    CANQ    -512,DU
         3 000450   000467 600000 3                  TZE     s:11898

      253    11892    2           THEN DO;

      254    11893    2                B$JIT.DCB$ = DCBADDR(B$JIT.VIRTUAL.DCB#(0));

  11893  3 000451   000022 471400 4                  LDP1    18
         3 000452   100000 473500                    LDP3    0,,PR1
         3 000453   000217 236100                    LDQ     143,,PR0
         3 000454   000033 772000                    QRL     27
         3 000455   300000 236106                    LDQ     0,QL,PR3
         3 000456   000232 756100                    STQ     154,,PR0

      255    11894    2                B$JIT.DCBNO = B$JIT.VIRTUAL.DCB#(0);

  11894  3 000457   000217 236100                    LDQ     143,,PR0
         3 000460   000033 772000                    QRL     27
         3 000461   000022 552104                    STBQ    18,'04'O,PR0

      256    11895    2                B$JIT.VIRTUAL.DCB#(0) = 0;

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:37   
  11895  3 000462   000000 236003                    LDQ     0,DU
         3 000463   000217 552140                    STBQ    143,'40'O,PR0

      257    11896    2                CALL FMM$DFLOPN;

  11896  3 000464   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000465   000000 701000 xent               TSX1    FMM$DFLOPN
         3 000466   000000 011000                    NOP     0

      258    11897    2                END;

      259    11898    1           IF B$JIT.VIRTUAL.DCB#(1) ~= 0

  11898  3 000467   000000 470400 xsym               LDP0    B$JIT$
         3 000470   000217 236100                    LDQ     143,,PR0
         3 000471   000777 316003                    CANQ    511,DU
         3 000472   000511 600000 3                  TZE     s:11905

      260    11899    2           THEN DO;

      261    11900    2                B$JIT.DCB$ = DCBADDR(B$JIT.VIRTUAL.DCB#(1));

  11900  3 000473   000022 471400 4                  LDP1    18
         3 000474   100000 473500                    LDP3    0,,PR1
         3 000475   000217 220100                    LDX0    143,,PR0
         3 000476   000777 360003                    ANX0    511,DU
         3 000477   300000 236110                    LDQ     0,X0,PR3
         3 000500   000232 756100                    STQ     154,,PR0

      262    11901    2                B$JIT.DCBNO = B$JIT.VIRTUAL.DCB#(1);

  11901  3 000501   000217 236100                    LDQ     143,,PR0
         3 000502   000022 772000                    QRL     18
         3 000503   000022 552104                    STBQ    18,'04'O,PR0

      263    11902    2                B$JIT.VIRTUAL.DCB#(1) = 0;

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:38   
  11902  3 000504   000000 236003                    LDQ     0,DU
         3 000505   000217 552120                    STBQ    143,'20'O,PR0

      264    11903    2                CALL FMM$DFLOPN;

  11903  3 000506   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000507   000000 701000 xent               TSX1    FMM$DFLOPN
         3 000510   000000 011000                    NOP     0

      265    11904    2                END;

      266    11905    1           IF B$JIT.VIRTUAL.DCB#(2) ~= 0

  11905  3 000511   000000 470400 xsym               LDP0    B$JIT$
         3 000512   000217 236100                    LDQ     143,,PR0
         3 000513   777000 316007                    CANQ    -512,DL
         3 000514   000534 600000 3                  TZE     s:11916

      267    11906    2           THEN DO;

      268    11907    2                B$JIT.DCB$ = DCBADDR(B$JIT.VIRTUAL.DCB#(2));

  11907  3 000515   000022 471400 4                  LDP1    18
         3 000516   100000 473500                    LDP3    0,,PR1
         3 000517   000217 236100                    LDQ     143,,PR0
         3 000520   000011 772000                    QRL     9
         3 000521   000777 376007                    ANQ     511,DL
         3 000522   300000 236106                    LDQ     0,QL,PR3
         3 000523   000232 756100                    STQ     154,,PR0

      269    11908    2                B$JIT.DCBNO = B$JIT.VIRTUAL.DCB#(2);

  11908  3 000524   000217 236100                    LDQ     143,,PR0
         3 000525   000011 772000                    QRL     9
         3 000526   000022 552104                    STBQ    18,'04'O,PR0

      270    11909    2                B$JIT.VIRTUAL.DCB#(2) = 0;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:39   

  11909  3 000527   000000 236003                    LDQ     0,DU
         3 000530   000217 552110                    STBQ    143,'10'O,PR0

      271    11910    2                CALL FMM$DFLOPN;

  11910  3 000531   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000532   000000 701000 xent               TSX1    FMM$DFLOPN
         3 000533   000000 011000                    NOP     0

      272    11911    2                END;

      273    11912
      274    11913        /* Associate any needed shared processors. Note that the data
      275    11914           init flag in B$U.FLG is **NOT** set.
      276    11915        */
      277    11916    1           CALL SSR$REG(%SS_AP);

  11916  3 000534   000024 630400 4                  EPPR0   20
         3 000535   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000536   000000 701000 xent               TSX1    SSR$REG
         3 000537   000000 011000                    NOP     0

      278    11917
      279    11918        /* If a program with PROCACC has just been restored write a PSTART record to *S
      280    11919        */
      281    11920    1           IF (B$JIT.CPFLAGS1 & %CP_PROCACCT#)

  11920  3 000540   000000 470400 xsym               LDP0    B$JIT$
         3 000541   000143 236100                    LDQ     99,,PR0
         3 000542   000003 376000 2                  ANQ     JPPRIV+1
         3 000543   000554 600000 3                  TZE     s:11928

      282    11921    2           THEN DO;

      283    11922    2                ACCT_TYP = %PSTART#;

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:40   
  11922  3 000544   001000 236003                    LDQ     512,DU
         3 000545   200012 756100                    STQ     ACCT_TYP,,AUTO

      284    11923    2                CALL JSU$WSTAR(ACCT_TYP);

  11923  3 000546   200012 631500                    EPPR1   ACCT_TYP,,AUTO
         3 000547   200020 451500                    STP1    SYSFLG+2,,AUTO
         3 000550   200020 630500                    EPPR0   SYSFLG+2,,AUTO
         3 000551   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000552   000000 701000 xent               TSX1    JSU$WSTAR
         3 000553   000000 011000                    NOP     0

      285    11924    2                END;

      286    11925
      287    11926        /* Reset the 'GET-in-progress' flag and return.
      288    11927        */
      289    11928    1           B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_GETTING#);

  11928  3 000554   000000 470400 xsym               LDP0    B$JIT$
         3 000555   000315 220100                    LDX0    205,,PR0
         3 000556   757777 360003                    ANX0    -8193,DU
         3 000557   000315 740100                    STX0    205,,PR0

      290    11929
      291    11930        /* Restore the real max core value and abort the user if common data
      292    11931           pages have caused him to exceed his limit.
      293    11932        */
      294    11933    1           B$JIT.MAXCORE = MAXCORE;

  11933  3 000560   200013 221100                    LDX1    MAXCORE,,AUTO
         3 000561   000210 741100                    STX1    136,,PR0

      295    11934    1           IF B$JIT.CURRCORE > B$JIT.MAXCORE AND (NOT B$JIT.PRIV.ACTIVE&%PR_MAXMEM#)

  11934  3 000562   000210 722100                    LXL2    136,,PR0
         3 000563   000210 102100                    CMPX2   136,,PR0
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:41   
         3 000564   000574 602000 3                  TNC     s:11945
         3 000565   000574 600000 3                  TZE     s:11945
         3 000566   000013 236100                    LDQ     11,,PR0
         3 000567   000006 376000 xsym               ANQ     B_VECTNIL+6
         3 000570   000574 601000 3                  TNZ     s:11945

      296    11935    2           THEN DO;

      297    11936    2                ERR = %E$MEMLIMIT;

  11936  3 000571   001135 235007                    LDA     605,DL
         3 000572   200010 755100                    STA     ERR,,AUTO

      298    11937    2                GOTO GET_ERR2;

  11937  3 000573   000623 710000 3                  TRA     GET_ERR2

      299    11938    2                END;
      300    11939        /*E*   ERROR: JQS-E$MEMLIMIT-E
      301    11940            MESSAGE: User or installation memory limit exceeded while restoring SAVE image.
      302    11941               DESCRIPTION:  This error results in a class 2 exit control condition.
      303    11942                             %RS_LIMX# will be set in B$JIT.RNST and
      304    11943                             %XL_MEM# will be set in B$JIT.XLIMFLG.
      305    11944        */
      306    11945    1           RETURN;

  11945  3 000574   000000 702200 xent               TSX2  ! X66_ARET

      307    11946
      308    11947
      309    11948    1   GET_ERR:
      310    11949    1           IF ERR = 0 THEN ERR = B$JIT.ERR.CODE;

  11949  3 000575   200010 235100       GET_ERR      LDA     ERR,,AUTO
         3 000576   000604 601000 3                  TNZ     s:11950

  11949  3 000577   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:42   
         3 000600   000012 236100                    LDQ     10,,PR0
         3 000601   000003 772000                    QRL     3
         3 000602   037777 376007                    ANQ     16383,DL
         3 000603   200010 756100                    STQ     ERR,,AUTO

      311    11950    1           IF (B$JIT.JUNK & %JJ_GETTING#)

  11950  3 000604   000000 470400 xsym               LDP0    B$JIT$
         3 000605   000315 220100                    LDX0    205,,PR0
         3 000606   020000 360003                    ANX0    8192,DU
         3 000607   000623 600000 3                  TZE     GET_ERR2

      312    11951    2           THEN DO;

      313    11952    2                CALL M$MCLOSE(J_FPT_CL_RELG) ALTRET(GE1);

  11952  3 000610   000005 630400 4                  EPPR0   5
         3 000611   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000612   000000 701000 xent               TSX1    M$MCLOSE
         3 000613   000614 702000 3                  TSX2    GE1

  11952  3 000614                       GE1          null
      314    11953    2   GE1:         ;
      315    11954    2                CALL JQU$REOPEN;

  11954  3 000614   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000615   000000 701000 xent               TSX1    JQU$REOPEN
         3 000616   000000 011000                    NOP     0

      316    11955    2                B$JIT.JUNK = (B$JIT.JUNK &~ %JJ_GETTING#);

  11955  3 000617   000000 470400 xsym               LDP0    B$JIT$
         3 000620   000315 220100                    LDX0    205,,PR0
         3 000621   757777 360003                    ANX0    -8193,DU
         3 000622   000315 740100                    STX0    205,,PR0

      317    11956    2                END;
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:43   

  11950  3 000623                       GET_ERR2     null
      318    11957
      319    11958    1   GET_ERR2: ;
      320    11959    1           CALL JSR$RUNDOWN

  11959  3 000623   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000624   000000 701000 xent               TSX1    JSR$RUNDOWN
         3 000625   000627 702000 3                  TSX2    ZAPUSR
         3 000626   000632 710000 3                  TRA     JQS_ERROR_EXIT

      321    11960    2           WHENALTRETURN DO;

  11955  3 000627                       ZAPUSR       null
      322    11961    2   ZAPUSR:      ;
      323    11962    2                CALL JSD$ZAPUSR;

  11962  3 000627   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000630   000000 701000 xent               TSX1    JSD$ZAPUSR
         3 000631   000000 011000                    NOP     0

      324    11963    2                END;

  11959  3 000632                       JQS_ERROR_E* null
      325    11964
      326    11965    1   JQS_ERROR_EXIT: ;
      327    11966    1           B$JIT.ERR = JERR;

  11966  3 000632   000000 236000 2                  LDQ     JERR
         3 000633   000000 470400 xsym               LDP0    B$JIT$
         3 000634   000012 756100                    STQ     10,,PR0

      328    11967    1           B$JIT.ERR.CODE = ERR;

  11967  3 000635   200010 236100                    LDQ     ERR,,AUTO
         3 000636   000003 736000                    QLS     3
         3 000637   000012 676100                    ERQ     10,,PR0
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:44   
         3 000640   377770 376007                    ANQ     131064,DL
         3 000641   000012 656100                    ERSQ    10,,PR0

  11967  3 000642                       NO_SFILE     null
      329    11968    1   NO_SFILE: ;
      330    11969    1           B$JIT.DCBNO=0;

  11969  3 000642   000000 236003                    LDQ     0,DU
         3 000643   000022 552104                    STBQ    18,'04'O,PR0

      331    11970        /* Restore the real max core value    */
      332    11971    1           B$JIT.MAXCORE = MAXCORE;

  11971  3 000644   200013 220100                    LDX0    MAXCORE,,AUTO
         3 000645   000210 740100                    STX0    136,,PR0

      333    11972    1           ALTRETURN;

  11972  3 000646   000000 702200 xent               TSX2  ! X66_AALT

JERR
 Sect OctLoc
   2     000   122123 400004                                                    RS..

JWARN
 Sect OctLoc
   2     001   122123 405120                                                    RS.P

JPPRIV
 Sect OctLoc
   2     002   122123 405160                                                    RS.p

(unnamed)
 Sect OctLoc
   2     003   000000 001000                                                    ....

(unnamed)
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:45   
 Sect OctLoc
   4     000   000000 000501   000003 006000   000012 006000   000000 006000    ................
   4     004   000002 006000   000000 006000   000000 006000   000000 000500    ................
   4     010   000012 006000   000007 006000   775777 777777   000000 000064    ...............4
   4     014   000013 006000   000000 000050   000015 006000   000000 006000    .......(........
   4     020   000002 006000   000015 006000   000000 006003   000000 000043    ...............#
   4     024   000023 006000                                                    ....
      334    11973
      335    11974    1   END JQS$SAVE;

PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:46   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JQS$SAVE.
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:47   

 **** Variables and constants ****

  ****  Section 002 RoData JQS$SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 JERR                       2-0-0/b STRC        r     1 JPPRIV
     1-0-0/b STRC        r     1 JWARN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ACCT$                     3-0-0/w PTR         r     1 @NAME$
     5-0-0/w PTR         r     1 @PASS$                     6-0-0/w PTR         r     1 @PSID$
     7-0-0/w UBIN        r     1 ACCESS                    *0-0-0/w PTR         r     1 ACCT$
    12-0-0/w UBIN(9)     r     1 ACCT_TYP                  11-0-0/w UBIN        r     1 DEL_REC
    10-0-0/w UBIN        r     1 ERR                       10-0-0/w BIT         r     1 JIT_ERR
    15-0-0/w SBIN        r     1 LMN_UTS                   13-0-0/w UBIN(18)    r     1 MAXCORE
    *0-0-0/w PTR         r     1 NAME$                     *0-0-0/w PTR         r     1 PASS$
    *0-0-0/w PTR         r     1 PSID$                     16-0-0/b BIT         r     1 SYSFLG
    14-0-0/w PTR         r     1 T$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$M$LM$
     0-0-0/w PTR         r     1 B$SBUF1$                   0-0-0/d STRC(1080)  r     1 J_FPT_CL_REL
     0-0-0/d STRC(1080)  r     1 J_FPT_CL_RELG              0-0-0/c CHAR(8)     r     1 J_SYSTXT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:48   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1440)  r     1 B$HEAD                     0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure JQS$SAVE requires 423 words for executable code.
   Procedure JQS$SAVE requires 22 words of local(AUTO) storage.

    No errors detected in file JQS$SAVGET.:E05TSI    .
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:49   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:50   
          MINI XREF LISTING

ACCESS
     10800**DCL     11749<<ASSIGN  11750<>CALL    11793<>CALL    11793<>CALL    11794<>CALL    11794<>CALL
ACCT$
        11**DCL         9--PROC    11764<>CALL    11802--ENTRY   11815<>CALL
ACCT_TYP
     10804**DCL     11922<<ASSIGN  11923<>CALL
B$DO.ECCINFO
      3725**DCL      3726--REDEF
B$HEAD
     10979**DCL     11869--CALL    11869--CALL
B$HEAD.PRIV
     10980**DCL     11876>>ASSIGN
B$JIT.CPFLAGS1
      4346**DCL     11920>>IF
B$JIT.CPFLAGS1.SLEAZE
      4351**DCL      4351--REDEF
B$JIT.CURRCORE
      4419**DCL     11934>>IF
B$JIT.DCB$
      4425**DCL     11893<<ASSIGN  11900<<ASSIGN  11907<<ASSIGN
B$JIT.DCBNO
      4338**DCL     11894<<ASSIGN  11901<<ASSIGN  11908<<ASSIGN  11969<<ASSIGN
B$JIT.ERR
      4257**DCL     11817>>ASSIGN  11819<<ASSIGN  11966<<ASSIGN
B$JIT.ERR.CODE
      4258**DCL     11781>>ASSIGN  11949>>ASSIGN  11967<<ASSIGN
B$JIT.ERR.MID
      4258**DCL      4258--REDEF
B$JIT.JRESPEAK
      4419**DCL      4420--REDEF
B$JIT.JUNK
      4457**DCL     11734<<ASSIGN  11734>>ASSIGN  11771<<ASSIGN  11771>>ASSIGN  11795<<ASSIGN  11795>>ASSIGN
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:51   
     11825<<ASSIGN  11825>>ASSIGN  11850<<ASSIGN  11850>>ASSIGN  11852<<ASSIGN  11852>>ASSIGN  11879<<ASSIGN
     11879>>ASSIGN  11928<<ASSIGN  11928>>ASSIGN  11950>>IF      11955<<ASSIGN  11955>>ASSIGN
B$JIT.MAXCORE
      4418**DCL     11744>>ASSIGN  11745<<ASSIGN  11775<<ASSIGN  11810>>ASSIGN  11811<<ASSIGN  11933<<ASSIGN
     11934>>IF      11971<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      4528**DCL      4528--REDEF    4529--REDEF
B$JIT.PNR
      4432**DCL      4432--REDEF
B$JIT.PRIV.ACTIVE
      4258**DCL     11883<<ASSIGN  11883>>ASSIGN  11934>>IF
B$JIT.PRIV.AUTH
      4298**DCL     11877>>IF
B$JIT.PRIV.PRC
      4305**DCL     11861<<ASSIGN  11872<<ASSIGN  11876<<ASSIGN  11877>>IF      11877>>IF      11881<<ASSIGN
     11882>>IF
B$JIT.TSLINE
      4526**DCL      4527--REDEF
B$JIT.USRERR
      4393**DCL     11838<<ASSIGN  11860<<ASSIGN  11871<<ASSIGN
B$JIT.VIRTUAL.DCB#
      4422**DCL     11891>>IF      11893--ASSIGN  11894>>ASSIGN  11895<<ASSIGN  11898>>IF      11900--ASSIGN
     11901>>ASSIGN  11902<<ASSIGN  11905>>IF      11907--ASSIGN  11908>>ASSIGN  11909<<ASSIGN
B$JIT$
     10810**DCL      4252--IMP-PTR 11734>>ASSIGN  11734>>ASSIGN  11744>>ASSIGN  11745>>ASSIGN  11771>>ASSIGN
     11771>>ASSIGN  11775>>ASSIGN  11781>>ASSIGN  11795>>ASSIGN  11795>>ASSIGN  11810>>ASSIGN  11811>>ASSIGN
     11817>>ASSIGN  11819>>ASSIGN  11825>>ASSIGN  11825>>ASSIGN  11838>>ASSIGN  11850>>ASSIGN  11850>>ASSIGN
     11852>>ASSIGN  11852>>ASSIGN  11860>>ASSIGN  11861>>ASSIGN  11871>>ASSIGN  11872>>ASSIGN  11876>>ASSIGN
     11877>>IF      11877>>IF      11877>>IF      11879>>ASSIGN  11879>>ASSIGN  11881>>ASSIGN  11882>>IF
     11883>>ASSIGN  11883>>ASSIGN  11891>>IF      11893>>ASSIGN  11893>>ASSIGN  11894>>ASSIGN  11894>>ASSIGN
     11895>>ASSIGN  11898>>IF      11900>>ASSIGN  11900>>ASSIGN  11901>>ASSIGN  11901>>ASSIGN  11902>>ASSIGN
     11905>>IF      11907>>ASSIGN  11907>>ASSIGN  11908>>ASSIGN  11908>>ASSIGN  11909>>ASSIGN  11920>>IF
     11928>>ASSIGN  11928>>ASSIGN  11933>>ASSIGN  11934>>IF      11934>>IF      11934>>IF      11949>>ASSIGN
     11950>>IF      11955>>ASSIGN  11955>>ASSIGN  11966>>ASSIGN  11967>>ASSIGN  11969>>ASSIGN  11971>>ASSIGN
B$M$LM$
     10811**DCL     11836>>IF      11851>>IF      11853>>ASSIGN  11855>>IF      11877>>IF
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:52   
B$SBUF1$
     10812**DCL     11869<>CALL    11876>>ASSIGN
B$U.MISC
      3704**DCL      3705--REDEF
B$USER.MISC
      3780**DCL      3781--REDEF
DEL_REC
     10803**DCL     11759<<ASSIGN  11760<>CALL
ERR
     10801**DCL     10802--REDEF   11727<<ASSIGN  11733<>CALL    11750<>CALL    11764<>CALL    11768<>CALL
     11770<>CALL    11770<>CALL    11781>>IF      11781<<ASSIGN  11783>>IF      11783>>IF      11803<<ASSIGN
     11815<>CALL    11826<>CALL    11827>>ASSIGN  11835<>CALL    11858<>CALL    11869<>CALL    11885<>CALL
     11936<<ASSIGN  11949>>IF      11949<<ASSIGN  11967>>ASSIGN
F$DCB.ACCT
     10103**DCL     11855>>IF
F$DCB.ACTPOS
     10118**DCL     10118--REDEF
F$DCB.ARS
     10093**DCL     10093--REDEF
F$DCB.ATTR
     10111**DCL     10112--REDEF
F$DCB.BORROW
     10126**DCL     10126--REDEF   10126--REDEF   10126--REDEF
F$DCB.DCBNAME.L
     10140**DCL     10140--IMP-SIZ
F$DCB.EOMCHAR
     10097**DCL     10097--REDEF
F$DCB.EXPIRE
     10109**DCL     11836>>IF
F$DCB.FFLG.DELF
     10098**DCL     11877>>IF
F$DCB.FFLG.EXEC
     10098**DCL     11851>>IF      11853<<ASSIGN
F$DCB.FLDID
     10121**DCL     10121--REDEF
F$DCB.FORM$
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:53   
     10115**DCL     10115--REDEF
F$DCB.FSECT
     10131**DCL     10131--REDEF
F$DCB.FSN
     10108**DCL     10108--REDEF   10108--REDEF   10109--REDEF
F$DCB.HEADER$
     10114**DCL     10114--REDEF
F$DCB.IXTNSIZE
     10112**DCL     10112--REDEF
F$DCB.LASTSTA$
     10102**DCL     10102--REDEF
F$DCB.LVL
     10127**DCL     10127--REDEF
F$DCB.NAME.C
     10102**DCL     10102--REDEF
F$DCB.NOEOF
     10123**DCL     10123--REDEF
F$DCB.NRECS
     10113**DCL     10113--REDEF
F$DCB.NRECX
     10132**DCL     10132--REDEF
F$DCB.OHDR
     10124**DCL     10124--REDEF
F$DCB.ORG
     10107**DCL     10107--REDEF
F$DCB.PRECNO
     10130**DCL     10130--REDEF
F$DCB.RCSZ
     10135**DCL     10135--REDEF
F$DCB.RES
     10103**DCL     10103--REDEF
F$DCB.SETX
     10115**DCL     10115--REDEF
F$DCB.TAB$
     10114**DCL     10115--REDEF
F$DCB.TDA
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:54   
     10129**DCL     10129--REDEF
F$DCB.WSN
     10104**DCL     10104--REDEF
FMM$DFLOPN
     10903**DCL-ENT 11896--CALL    11903--CALL    11910--CALL
GE1
     11952**LABEL   11952--CALLALT
GET_ERR
     11949**LABEL   11826--CALLALT 11835--CALLALT
GET_ERR2
     11950**LABEL   11937--GOTO
JERR
     10927**DCL     11966>>ASSIGN
JIT_ERR
     10802**DCL     11817<<ASSIGN  11819>>ASSIGN
JLS$GET_IMAGE
     10907**DCL-ENT 11826--CALL
JLS$SAVE_IMAGE
     10906**DCL-ENT 11768--CALL
JLU$SAVE_AMR
     10908**DCL-ENT 11760--CALL
JLU$TRUNCDCBS
     10909**DCL-ENT 11738--CALL
JPPRIV
     10943**DCL     11860>>ASSIGN  11871>>ASSIGN
JQS_ERROR_EXIT
     11959**LABEL   11796--GOTO
JQU$OPN_STAR
     10910**DCL-ENT 11764--CALL    11815--CALL
JQU$REOPEN
     10904**DCL-ENT 11831--CALL    11954--CALL
JQU$VALID
     10905**DCL-ENT 11733--CALL
JSD$ZAPUSR
     10912**DCL-ENT 11962--CALL
JSF$OPENLM
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:55   
     10914**DCL-ENT 11835--CALL
JSF$READ
     10915**DCL-ENT 11869--CALL
JSR$RUNDOWN
     10911**DCL-ENT 11818--CALL    11959--CALL
JSU$WSTAR
     10916**DCL-ENT 11923--CALL
JWARN
     10935**DCL     11838>>ASSIGN
J_FPT_CL_REL
     10881**DCL     11792<>CALL
J_FPT_CL_REL.SN_
     10881**DCL     10881--REDEF
J_FPT_CL_REL.UTL_
     10882**DCL     10882--REDEF
J_FPT_CL_REL.V.DCB#
     10887**DCL     11729<<ASSIGN  11805<<ASSIGN
J_FPT_CL_REL.V.EXPIRE#
     10896**DCL     10896--REDEF
J_FPT_CL_REL.V.TYPE#
     10894**DCL     10894--REDEF
J_FPT_CL_REL.V.XTNSIZE#
     10891**DCL     10891--REDEF   10893--REDEF
J_FPT_CL_RELG
     10839**DCL     11769<>CALL    11952<>CALL
J_FPT_CL_RELG.SN_
     10839**DCL     10839--REDEF
J_FPT_CL_RELG.UTL_
     10840**DCL     10840--REDEF
J_FPT_CL_RELG.V.DCB#
     10845**DCL     11728<<ASSIGN  11804<<ASSIGN
J_FPT_CL_RELG.V.EXPIRE#
     10854**DCL     10854--REDEF
J_FPT_CL_RELG.V.TYPE#
     10852**DCL     10852--REDEF
J_FPT_CL_RELG.V.XTNSIZE#
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:56   
     10849**DCL     10849--REDEF   10851--REDEF
J_SYSTXT
     10814**DCL     11855>>IF
LMN_UTS
     10807**DCL     11827<<ASSIGN  11836>>IF
M$MCLOSE
     10922**DCL-ENT 11769--CALL    11792--CALL    11952--CALL
MAXCORE
     10805**DCL     11744<<ASSIGN  11775>>ASSIGN  11810<<ASSIGN  11933>>ASSIGN  11971>>ASSIGN
MME$WFVP
     10918**DCL-ENT 11770--CALL    11793--CALL    11794--CALL    11885--CALL
MME$WGVP
     10917**DCL-ENT 11750--CALL    11858--CALL
NAME$
        10**DCL         9--PROC    11764<>CALL    11802--ENTRY   11815<>CALL
NO_SFILE
     11967**LABEL   11820--GOTO
OPEN_VIRTUAL
     11891**LABEL   11862--GOTO
PASS$
        12**DCL         9--PROC    11764<>CALL    11802--ENTRY   11815<>CALL
PSID$
        13**DCL         9--PROC    11764<>CALL    11802--ENTRY   11815<>CALL
RELEASE_SBUF1
     11885**LABEL   11873--GOTO
SAVE_ERR
     11781**LABEL   11733--CALLALT 11750--CALLALT 11760--CALLALT 11764--CALLALT 11768--CALLALT 11769--CALLALT
     11770--CALLALT
SC_IOERRNF_Q
     10920**DCL-ENT 11784--CALL
SSR$REG
     10919**DCL-ENT 11916--CALL
SYSFLG
     10808**DCL     11856<<ASSIGN  11857<<ASSIGN  11875>>IF
T$
     10806**DCL     11768<>CALL    11826<>CALL
PL6.E3A0      #001=JQS$SAVE File=JQS$SAVGET.:E05TSI                              TUE 07/29/97 23:40 Page:57   
UMD$CHKOPN
     10921**DCL-ENT 11754--CALL
ZAPUSR
     11955**LABEL   11818--CALLALT
