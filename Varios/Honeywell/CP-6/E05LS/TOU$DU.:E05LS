VERSION E05

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:1    
        1        1        /*M* TOU$DU     DEckfile Editor Routine Utilities program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$DU
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     Utility Routines For DEER processor
       14       14              DESCRIPTION: This module is an  outer block  which  contains
       15       15                           the  entry points and  procedure blocks of  the
       16       16                           utilities for the deckfile editor. The routines
       17       17                           in TOU$DU  interface with  CP-6 Monitor Service
       18       18                           routines and provide capabilities for:
       19       19                           --- sets, opens, next volumes, and closes for IFAD
       20       20                           --- sets, opens, and closes for DECKFILES
       21       21                           --- reads from the user terminal
       22       22                           --- writes to the user's terminal
       23       23                           --- writes to the line printer
       24       24                           --- system error message printing
       25       25                           --- setting prompts for user reads
       26       26                           --- obtaining / releasing dynamic memory
       27       27                           --- updating history records
       28       28              REFERENCE:   CP-6 Release D00A
       29       29              LAST UPDATE: 08/12/85
       30       30        */
       31       31        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:2    
       32       32        /*F*  NAME:        TOU$DU
       33       33              DESCRIPTION: Procedure Nesting Hierarchy
       34       34
       35       35              TOU$DU: procedure ALTRET
       36       36
       37       37              TOU$DU_SET_IFAD_FID: entry ALTRET
       38       38              TOU$DU_OPEN_IFAD: entry ALTRET
       39       39              TOU$DU_NEXT_IFAD: entry ALTRET
       40       40              TOU$DU_CLOSE_IFAD: entry ALTRET
       41       41              TOU$DU_SET_MCA: entry ALTRET
       42       42              TOU$DU_OPEN_MCA: entry ALTRET
       43       43              TOU$DU_CLOSE_MCA: entry ALTRET
       44       44              TOU$DU_MCA_RESET_STATUS: entry ALTRET
       45       45              TOU$DU_SET_DF_FID: entry ALTRET
       46       46              TOU$DU_OPEN_DF: entry ALTRET
       47       47              TOU$DU_CLOSE_DF: entry ALTRET
       48       48              TOU$DU_USER_READ: entry ALTRET
       49       49              TOU$DU_USER_WRITE: entry ALTRET
       50       50              TOU$DU_PRINTER_WRITE: entry ALTRET
       51       51              TOU$DU_PRINTER_OVERWRITE: entry ALTRET
       52       52              TOU$DU_OPERATOR_WRITE: entry ALTRET
       53       53              TOU$DU_OPERATOR_TEXT: entry ALTRET
       54       54              TOU$DU_SYSTEM_ERRMSG: entry ALTRET
       55       55              TOU$DU_SET_EDIT_PROMPT: entry ALTRET
       56       56              TOU$DU_SET_PROMPT: entry ALTRET
       57       57              TOU$DU_GET_DATA_SEGMENT: entry ALTRET
       58       58              TOU$DU_FREE_DATA_SEGMENT: entry ALTRET
       59       59              TOU$DU_UPDATE_LOG: entry ALTRET
       60       60              TOU$DU_GET_SITE: entry ALTRET
       61       61
       62       62                 DU_SET_IFAD_FID: procedure (E,H,HL,T,D,DL) ALTRET
       63       63                    DU_IFAD_FROM_HOLD: procedure ALTRET
       64       64                    DU_IFAD_FROM_MERGE: procedure ALTRET
       65       65                       DU_IFAD_TAPE_FROM_MR: procedure ALTRET
       66       66                       DU_IFAD_DISK_FROM_MR: procedure ALTRET
       67       67                 DU_OPEN_IFAD: procedure (T,D,DL,NV) ALTRET
       68       68                 DU_NEXT_IFAD: procedure ALTRET
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:3    
       69       69                 DU_CLOSE_IFAD: procedure ALTRET
       70       70                 DU_SET_IFAD_IMU_NUMBER: procedure (I,IL,N) ALTRET
       71       71                 DU_VALIDATE_IMU_NUMBER: procedure (I) ALTRET
       72       72                 DU_OPEN_MCA: procedure (FID, IMU#) ALTRET
       73       73                 DU_CLOSE_MCA: procedure ALTRET
       74       74                 DU_SET_DF_FID: procedure (E,H,HL,NA,NAL) ALTRET
       75       75                    DU_DF_FROM_HOLD: procedure ALTRET
       76       76                    DU_DF_FROM_MERGE: procedure ALTRET
       77       77                       DU_DF_FROM_MR: procedure ALTRET
       78       78                 DU_OPEN_DF: procedure (E,NA,NAL,OT,NE) ALTRET
       79       79                    DU_SET_DF_NAME_ACCOUNT: procedure
       80       80                    DU_SIGNAL_OPEN_ERROR: procedure
       81       81                 DU_CLOSE_DF: procedure (CT) ALTRET
       82       82                 DU_SET_FULL_FID: procedure (E, EL, T, TL)
       83       83                 DU_USER_READ: procedure (C, L) ALTRET
       84       84                 DU_USER_WRITE: procedure (MC) ALTRET
       85       85                 DU_PRINTER_WRITE: procedure (MC) ALTRET
       86       86                 DU_PRINTER_OVERWRITE: procedure (MC) ALTRET
       87       87                 DU_OPERATOR_WRITE: procedure (CMD$)
       88       88                    DU_OW_SETUP_BUFFER: procedure
       89       89                 DU_ISSUE_OP_MSG: procedure
       90       90                 DU_PRINT_OP_REPLY: procedure
       91       91                 DU_OPERATOR_TEXT: procedure (MC)
       92       92                    DU_OT_SETUP_BUFFER: procedure (L, LGT)
       93       93                    DU_OT_STRIP_TRAILING_BLANKS: procedure (B, I)
       94       94                 DU_HEADER_WRITE: procedure (HC)
       95       95                 DU_FETCH_TEXT: procedure (MC)
       96       96                 DU_SYSTEM_ERRMSG: procedure
       97       97                 DU_SET_EDIT_PROMPT: procedure (BR) ALTRET
       98       98                 DU_SET_PROMPT: procedure (BR,H,HL) ALTRET
       99       99                 DU_GET_DATA_SEGMENT: procedure (NW, DV) ALTRET
      100      100                 DU_FREE_DATA_SEGMENT: procedure (NW, DV) ALTRET
      101      101                 DU_UPDATE_LOG: procedure ALTRET
      102      102                 DU_GET_SITE: procedure ALTRET
      103      103        */
      104      104        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:4    
      105      105        TOU$DU: PROC ALTRET ;
      106      106
      107      107        /* Include Files */
      108      108
      109      109           %INCLUDE B$JIT ;
      110      712           %INCLUDE CP_6 ;
      111     6271           %INCLUDE CP_6_SUBS ;
      112     6811           %INCLUDE B_ERRORS_C ;
      113     7938           %INCLUDE TD$STRUCT ;
      114     8039           %INCLUDE TOU_DEER_M ;
      115     9450           %INCLUDE TOU_RQSTS_E ;
      116     9525           %INCLUDE TO_PERR_C ;
      117    10110           %INCLUDE XU_MACRO_C ;
      118    13216           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:5    
      119    13217        /* Variables */
      120    13218    1      DCL 1 BUFFER,
      121    13219    1            2 REPLY_PENDING          BIT (1) CALIGNED,
      122    13220    1            2 LGTH                   UBIN BYTE CALIGNED,
      123    13221    1            2 TEXT_                  CHAR (%BUF_RCD_LGTH) CALIGNED,
      124    13222    1            2 TEXT (0:%(BUF_RCD_LGTH - 1)) REDEF TEXT_ CHAR (1) CALIGNED,
      125    13223    1            2 REPLY,
      126    13224    1              3 TYC                  UBIN WORD ALIGNED,
      127    13225    1              3 LGTH                 UBIN WORD ALIGNED ;
      128    13226    1      DCL LO_FID      CHAR (40) CALIGNED ;
      129    13227    1      DCL LO_FID_LGTH UBIN WORD ALIGNED ;
      130    13228           %DUP (STCLASS = SYMREF) ;
      131    13371    1      DCL B$JIT$                     PTR SYMREF ;
      132    13372    1      DCL B$TCB$                     PTR SYMREF ;
      133    13373    1      DCL M$IFAD                     DCB ;
      134    13374    1      DCL M$DECKFILE                 DCB ;
      135    13375    1      DCL M$SI                       DCB ;
      136    13376    1      DCL M$DO                       DCB ;
      137    13377    1      DCL FID_RES                    CHAR (4) STATIC CALIGNED;
      138    13378    1      DCL FID_ASN                    UBIN BYTE STATIC CALIGNED;
      139    13379           %VLR_FID   (FPTN    = FID_RESULTS);
      140    13398           %FPT_FID   (FPTN    = FID_INFO,
      141    13399                       ACCT    = FID_ACCT,
      142    13400                       ASN     = FID_ASN,
      143    13401                       NAME    = FID_NAME,
      144    13402                       PASS    = FID_PASS,
      145    13403                       RES     = FID_RES,
      146    13404                       RESULTS = FID_RESULTS,
      147    13405                       SN      = FID_SN,
      148    13406                       WSN     = FID_WSN);
      149    13429           %VLP_ACCT  (FPTN    = FID_ACCT);
      150    13442           %VLP_NAME  (FPTN    = FID_NAME,
      151    13443                       LEN     = 31);
      152    13470           %VLP_PASS  (FPTN    = FID_PASS);
      153    13483           %VLP_SN    (FPTN    = FID_SN,
      154    13484                       N       = %MAX_VOLS,
      155    13485                       SN      = "' ', ' ', ' ', ' ', ' ', ' '");
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:6    
      156    13498           %VLP_WSN   (FPTN    = FID_WSN);
      157    13511           %M$DCB (ASN   = DEVICE,
      158    13512                   CTG   = YES,
      159    13513                   DCBN  = M$LO,
      160    13514                   DISP  = NAMED,
      161    13515                   EXIST = NEWFILE,
      162    13516                   FUN   = CREATE,
      163    13517                   LINES = 66,
      164    13518                   ORG   = UR,
      165    13519                   RES   = 'LP') ;
      166    13593           %B$TCB ;
      167    13596           %B$ALT ;
      168    13604           %F$DCB ;
      169    13661
      170    13662        /* External Entry Points */
      171    13663
      172    13664    1      DCL TOU$REPLACE                ENTRY (2) ;
      173    13665           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:7    
      174    13666        /*D*  NAME:        TOU$DU_SET_IFAD_FID
      175    13667              ENTRY:
      176    13668              AUTHOR:      Scott S. Sheppard
      177    13669              INTERFACE:   DU_SET_IFAD_FID
      178    13670              DESCRIPTION: This entry point calls procedure
      179    13671                           DU_SET_IFAD_FID with parameters.
      180    13672        */
      181    13673
      182    13674    1   TOU$DU_SET_IFAD_FID: ENTRY ALTRET ;
      183    13675
      184    13676    1      CALL DU_SET_IFAD_FID (DUP.IFAD.ME_ALLOWED,
      185    13677    1              DUP.IFAD.ENTERED,
      186    13678    1              DUP.HOLD_AREA,
      187    13679    1              DUP.HOLD_AREA_LGTH,
      188    13680    1              DUP.IFAD.DEVICE_INPUT,
      189    13681    1              DUP.IFAD.FID,
      190    13682    1              DUP.IFAD.FID_LGTH) ALTRET (TOU$DU_ALTRETURN) ;
      191    13683    1      RETURN ;
      192    13684
      193    13685        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:8    
      194    13686        /*D*  NAME:        TOU$DU_OPEN_IFAD
      195    13687              ENTRY:
      196    13688              AUTHOR:      Scott S. Sheppard
      197    13689              INTERFACE:   DU_OPEN_IFAD
      198    13690              DESCRIPTION: This entry point calls procedure
      199    13691                           DU_OPEN_IFAD with parameters.
      200    13692        */
      201    13693
      202    13694    1   TOU$DU_OPEN_IFAD: ENTRY ALTRET ;
      203    13695
      204    13696    1      CALL DU_OPEN_IFAD (DUP.IFAD.DEVICE_INPUT,
      205    13697    1              DUP.IFAD.FID,
      206    13698    1              DUP.IFAD.FID_LGTH,
      207    13699    1              DUP.IFAD.NUM_VOLUMES) ALTRET (TOU$DU_ALTRETURN) ;
      208    13700    1      RETURN ;
      209    13701
      210    13702        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:9    
      211    13703        /*D*  NAME:        TOU$DU_NEXT_IFAD
      212    13704              ENTRY:
      213    13705              AUTHOR:      Scott S. Sheppard
      214    13706              INTERFACE:   DU_NEXT_IFAD
      215    13707              DESCRIPTION: This entry point calls procedure
      216    13708                           DU_NEXT_IFAD with parameters.
      217    13709        */
      218    13710
      219    13711    1   TOU$DU_NEXT_IFAD: ENTRY ALTRET ;
      220    13712
      221    13713    1      CALL DU_NEXT_IFAD ALTRET (TOU$DU_ALTRETURN) ;
      222    13714    1      RETURN ;
      223    13715
      224    13716        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:10   
      225    13717        /*D*  NAME:        TOU$DU_CLOSE_IFAD
      226    13718              ENTRY:
      227    13719              AUTHOR:      Scott S. Sheppard
      228    13720              INTERFACE:   DU_CLOSE_IFAD
      229    13721              DESCRIPTION: This entry point calls procedure
      230    13722                           DU_CLOSE_IFAD with parameters.
      231    13723        */
      232    13724
      233    13725    1   TOU$DU_CLOSE_IFAD: ENTRY ALTRET ;
      234    13726
      235    13727    1      CALL DU_CLOSE_IFAD ALTRET (TOU$DU_ALTRETURN) ;
      236    13728    1      RETURN ;
      237    13729
      238    13730        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:11   
      239    13731        /*D*  NAME:        TOU$DU_SET_MCA
      240    13732              ENTRY:
      241    13733              AUTHOR:      Scott S. Sheppard
      242    13734              INTERFACE:   DU_SET_IFAD_FID
      243    13735                           DU_SET_IFAD_IMU_NUMBER
      244    13736              DESCRIPTION: This entry point calls procedures to properly
      245    13737                           set up the FID and IMU number for IFAD input.
      246    13738        */
      247    13739
      248    13740    1   TOU$DU_SET_MCA: ENTRY ALTRET ;
      249    13741
      250    13742    1      CALL DU_SET_IFAD_FID (DUP.IFAD.ME_ALLOWED,
      251    13743    1              DUP.IFAD.ENTERED,
      252    13744    1              DUP.HOLD_AREA,
      253    13745    1              DUP.HOLD_AREA_LGTH,
      254    13746    1              DUP.IFAD.DEVICE_INPUT,
      255    13747    1              DUP.IFAD.FID,
      256    13748    1              DUP.IFAD.FID_LGTH) ALTRET (TOU$DU_ALTRETURN) ;
      257    13749
      258    13750    1      CALL DU_SET_IFAD_IMU_NUMBER (DUP.IFAD.FID,
      259    13751    1              DUP.IFAD.FID_LGTH,
      260    13752    1              DUP.IFAD.IMU_NUMBER) ALTRET (TOU$DU_ALTRETURN) ;
      261    13753
      262    13754    1      CALL DU_VALIDATE_IMU_NUMBER (DUP.IFAD.IMU_NUMBER)
      263    13755    1              ALTRET (TOU$DU_ALTRETURN) ;
      264    13756    1      RETURN ;
      265    13757
      266    13758        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:12   
      267    13759        /*D*  NAME:        TOU$DU_OPEN_MCA
      268    13760              ENTRY:
      269    13761              AUTHOR:      Scott S. Sheppard
      270    13762              INTERFACE:   DU_OPEN_MCA
      271    13763              DESCRIPTION: This entry point calls procedure
      272    13764                           DU_OPEN_MCA with parameters.
      273    13765        */
      274    13766
      275    13767    1   TOU$DU_OPEN_MCA: ENTRY ALTRET ;
      276    13768
      277    13769    1      CALL DU_OPEN_MCA (DUP.IFAD.FID,
      278    13770    1              DUP.IFAD.IMU_NUMBER) ALTRET (TOU$DU_ALTRETURN) ;
      279    13771    1      RETURN ;
      280    13772
      281    13773        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:13   
      282    13774        /*D*  NAME:        TOU$DU_CLOSE_MCA
      283    13775              ENTRY:
      284    13776              AUTHOR:      Scott S. Sheppard
      285    13777              INTERFACE:   DU_CLOSE_MCA
      286    13778              DESCRIPTION: This entry point calls procedure
      287    13779                           DU_CLOSE_MCA with parameters.
      288    13780        */
      289    13781
      290    13782    1   TOU$DU_CLOSE_MCA: ENTRY ALTRET ;
      291    13783
      292    13784    1      CALL DU_CLOSE_MCA ALTRET (TOU$DU_ALTRETURN) ;
      293    13785    1      RETURN ;
      294    13786
      295    13787        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:14   
      296    13788        /*D*  NAME:        TOU$DU_MCA_RESET_STATUS
      297    13789              ENTRY:
      298    13790              AUTHOR:      Kathy Larkin
      299    13791              INTERFACE:   DU_MCA_RESET_STATUS
      300    13792              DESCRIPTION: This entry  point  calls  DU_MCA_RESET_STATUS to
      301    13793                           issue a reset status command ('40'O) to the MCA.
      302    13794                           This is done prior to reading a diskette header.
      303    13795        */
      304    13796
      305    13797    1   TOU$DU_MCA_RESET_STATUS: ENTRY ALTRET ;
      306    13798
      307    13799    1      CALL DU_MCA_RESET_STATUS ALTRET (TOU$DU_ALTRETURN) ;
      308    13800    1      RETURN ;
      309    13801
      310    13802        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:15   
      311    13803        /*D*  NAME:        TOU$DU_SET_DF_FID
      312    13804              ENTRY:
      313    13805              AUTHOR:      Scott S. Sheppard
      314    13806              INTERFACE:   DU_SET_DF_FID
      315    13807              DESCRIPTION: This entry point calls procedure DU_SET_DF_FID
      316    13808        */
      317    13809
      318    13810    1   TOU$DU_SET_DF_FID: ENTRY ALTRET ;
      319    13811
      320    13812    1      CALL DU_SET_DF_FID (DUP.DF.ENTERED,
      321    13813    1              DUP.HOLD_AREA,
      322    13814    1              DUP.HOLD_AREA_LGTH,
      323    13815    1              DUP.DF.FID,
      324    13816    1              DUP.DF.FID_LGTH) ALTRET (TOU$DU_ALTRETURN) ;
      325    13817    1      RETURN ;
      326    13818
      327    13819        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:16   
      328    13820        /*D*  NAME:        TOU$DU_OPEN_DF
      329    13821              ENTRY:
      330    13822              AUTHOR:      Scott S. Sheppard
      331    13823              INTERFACE:   DU_OPEN_DF
      332    13824              DESCRIPTION: This entry point calls procedure
      333    13825                           DU_OPEN_DF with parameters.
      334    13826        */
      335    13827
      336    13828    1   TOU$DU_OPEN_DF: ENTRY ALTRET ;
      337    13829
      338    13830    1      CALL DU_OPEN_DF (DUP.DF.ENTERED,
      339    13831    1              DUP.DF.FID,
      340    13832    1              DUP.DF.FID_LGTH,
      341    13833    1              DUP.DF.OPEN_TYPE,
      342    13834    1              DUP.DF.REPORT_ERROR,
      343    13835    1              DUP.DF.NO_EXIST) ALTRET (TOU$DU_ALTRETURN) ;
      344    13836    1      RETURN ;
      345    13837
      346    13838        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:17   
      347    13839        /*D*  NAME:        TOU$DU_CLOSE_DF
      348    13840              ENTRY:
      349    13841              AUTHOR:      Scott S. Sheppard
      350    13842              INTERFACE:   DU_CLOSE_DF
      351    13843              DESCRIPTION: This entry point calls procedure
      352    13844                           DU_CLOSE_DF with parameters.
      353    13845        */
      354    13846
      355    13847    1   TOU$DU_CLOSE_DF: ENTRY ALTRET ;
      356    13848
      357    13849    1      CALL DU_CLOSE_DF (DUP.DF.CLOSE_TYPE) ALTRET (TOU$DU_ALTRETURN) ;
      358    13850    1      RETURN ;
      359    13851
      360    13852        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:18   
      361    13853        /*D* NAME:         TOU$DU_SET_LO_FID
      362    13854             AUTHOR:       Kathy Larkin
      363    13855             PURPOSE:      Set M$LO to FID specified by user
      364    13856             INTERFACE:    DU_SET_FULL_FID - expand user fid
      365    13857                           DU_OPEN_LO - opens M$LO to fid
      366    13858             PARAMETERS:   None passed.
      367    13859             DATA:         DUP.HOLD_AREA - text of fid name
      368    13860                           DUP.HOLD_AREA_LGTH - length of text string
      369    13861                           DUP.TEMP.OPEN_TYPE - user specified on, over, into
      370    13862                           LO_FID - fid text with account appended
      371    13863                           LO_FID_LGTH - length of LO_FID text string
      372    13864             DESCRIPTION:  This procedure calls DU_SET_FULL_FID to append
      373    13865                           an  account name  to the  fid supplied  in the
      374    13866                           LIST   command,   if   necessary,   and  calls
      375    13867                           DU_OPEN_LO to set M$LO parameters and open the
      376    13868                           DCB.
      377    13869        */
      378    13870        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:19   
      379    13871
      380    13872    1   TOU$DU_SET_LO_FID: ENTRY ALTRET ;
      381    13873
      382    13874        /* Code */
      383    13875
      384    13876    1      CALL DU_SET_FULL_FID (DUP.HOLD_AREA,
      385    13877    1              DUP.HOLD_AREA_LGTH,
      386    13878    1              LO_FID,
      387    13879    1              LO_FID_LGTH) ;
      388    13880    1      CALL DU_OPEN_LO (LO_FID,
      389    13881    1              DUP.TEMP.OPEN_TYPE)
      390    13882    1              ALTRET (TOU$DU_ALTRETURN) ;
      391    13883    1      RETURN;
      392    13884        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:20   
      393    13885        /*D*  NAME:        TOU$DU_USER_READ
      394    13886              ENTRY:
      395    13887              AUTHOR:      Scott S. Sheppard
      396    13888              INTERFACE:   DU_USER_READ
      397    13889              DESCRIPTION: This entry point calls procedure
      398    13890                           DU_USER_READ with parameters.
      399    13891        */
      400    13892
      401    13893    1   TOU$DU_USER_READ: ENTRY ALTRET ;
      402    13894
      403    13895    1      CALL DU_USER_READ (DUP.RESPONSE, DUP.RESPONSE_LGTH)
      404    13896    1              ALTRET (TOU$DU_ALTRETURN) ;
      405    13897    1      RETURN ;
      406    13898
      407    13899        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:21   
      408    13900        /*D*  NAME:        TOU$DU_USER_WRITE
      409    13901              ENTRY:
      410    13902              AUTHOR:      Scott S. Sheppard
      411    13903              INTERFACE:   DU_USER_WRITE
      412    13904              DESCRIPTION: This entry point calls procedure
      413    13905                           DU_USER_WRITE with parameters.
      414    13906        */
      415    13907
      416    13908    1   TOU$DU_USER_WRITE: ENTRY ALTRET ;
      417    13909
      418    13910    1      CALL DU_USER_WRITE (DUP.MSG_CODE)
      419    13911    1              ALTRET (TOU$DU_ALTRETURN) ;
      420    13912    1      RETURN ;
      421    13913
      422    13914        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:22   
      423    13915        /*D*  NAME:        TOU$DU_PRINTER_WRITE
      424    13916              ENTRY:
      425    13917              AUTHOR:      Scott S. Sheppard
      426    13918              INTERFACE:   DU_PRINTER_WRITE
      427    13919              DESCRIPTION: This entry point calls procedure
      428    13920                           DU_PRINTER_WRITE with parameters.
      429    13921        */
      430    13922
      431    13923    1   TOU$DU_PRINTER_WRITE: ENTRY ALTRET ;
      432    13924
      433    13925    1      CALL DU_PRINTER_WRITE (DUP.MSG_CODE) ALTRET (TOU$DU_ALTRETURN) ;
      434    13926    1      RETURN ;
      435    13927
      436    13928        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:23   
      437    13929        /*D*  NAME:        TOU$DU_PRINTER_OVERWRITE
      438    13930              ENTRY:
      439    13931              AUTHOR:      Scott S. Sheppard
      440    13932              INTERFACE:   DU_PRINTER_OVERWRITE
      441    13933              DESCRIPTION: This entry point calls procedure
      442    13934                           DU_PRINTER_OVERWRITE with parameters.
      443    13935        */
      444    13936
      445    13937    1   TOU$DU_PRINTER_OVERWRITE: ENTRY ALTRET ;
      446    13938
      447    13939    1      CALL DU_PRINTER_OVERWRITE (DUP.MSG_CODE) ALTRET (TOU$DU_ALTRETURN) ;
      448    13940    1      RETURN ;
      449    13941
      450    13942        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:24   
      451    13943        /*D*  NAME:        TOU$DU_OPERATOR_WRITE
      452    13944              ENTRY:
      453    13945              AUTHOR:      Kathy Larkin
      454    13946              INTERFACE:   DU_OPERATOR_WRITE
      455    13947              DESCRIPTION: This entry point calls procedure
      456    13948                           DU_OPERATOR_WRITE to send a message
      457    13949                           to the system operator, and print a
      458    13950                           reply, if required.
      459    13951        */
      460    13952    1   TOU$DU_OPERATOR_WRITE: ENTRY ALTRET ;
      461    13953
      462    13954    1      CALL DU_OPERATOR_WRITE (DUP.CMD$) ;
      463    13955    1      RETURN;
      464    13956
      465    13957        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:25   
      466    13958        /*D*  NAME:        TOU$DU_OPERATOR_TEXT
      467    13959              ENTRY:
      468    13960              AUTHOR:      Kathy Larkin
      469    13961              INTERFACE:   DU_OPERATOR_TEXT
      470    13962              DESCRIPTION: This    entry     point     calls    procedure
      471    13963                           DU_OPERATOR_TEXT to  print the text associated
      472    13964                           with   DUP.MSG_CODE,  located   in  the  error
      473    13965                           message data base,  at the operator's console.
      474    13966                           A reply is read  into DUP.RESPONSE if the text
      475    13967                           message ended in a question mark.
      476    13968        */
      477    13969    1   TOU$DU_OPERATOR_TEXT: ENTRY ALTRET ;
      478    13970
      479    13971    1      CALL DU_OPERATOR_TEXT (DUP.MSG_CODE) ;
      480    13972    1      RETURN ;
      481    13973
      482    13974        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:26   
      483    13975        /*D*  NAME:        TOU$DU_SYSTEM_ERRMSG
      484    13976              ENTRY:
      485    13977              AUTHOR:      Scott S. Sheppard
      486    13978              INTERFACE:   DU_SYSTEM_ERRMSG
      487    13979              DESCRIPTION: This  entry point  calls  procedure
      488    13980                           DU_SYSTEM_ERRMSG.   The entry point
      489    13981                           has an altret only so that it is of
      490    13982                           the same form as the others.
      491    13983        */
      492    13984
      493    13985    1   TOU$DU_SYSTEM_ERRMSG: ENTRY ALTRET ;
      494    13986
      495    13987    1      CALL DU_SYSTEM_ERRMSG (DUP.FAULT_ERROR) ;
      496    13988    1      RETURN ;
      497    13989
      498    13990        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:27   
      499    13991        /*D*  NAME:        TOU$DU_SET_EDIT_PROMPT
      500    13992              ENTRY:
      501    13993              AUTHOR:      Scott S. Sheppard
      502    13994              INTERFACE:   DU_SET_EDIT_PROMPT
      503    13995              DESCRIPTION: This entry point calls procedure
      504    13996                           DU_SET_EDIT_PROMPT with parameters.
      505    13997        */
      506    13998
      507    13999    1   TOU$DU_SET_EDIT_PROMPT: ENTRY ALTRET ;
      508    14000
      509    14001    1      CALL DU_SET_EDIT_PROMPT (DUP.BATCH_MODE) ALTRET (TOU$DU_ALTRETURN);
      510    14002    1      RETURN ;
      511    14003
      512    14004        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:28   
      513    14005        /*D*  NAME:        TOU$DU_SET_PROMPT
      514    14006              ENTRY:
      515    14007              AUTHOR:      Scott S. Sheppard
      516    14008              INTERFACE:   DU_SET_PROMPT
      517    14009              DESCRIPTION: This entry point calls procedure
      518    14010                           DU_SET_PROMPT with parameters.
      519    14011        */
      520    14012
      521    14013    1   TOU$DU_SET_PROMPT: ENTRY ALTRET ;
      522    14014
      523    14015    1      CALL DU_SET_PROMPT (DUP.BATCH_MODE, DUP.HOLD_AREA, DUP.HOLD_AREA_LGTH)
      524    14016    1              ALTRET (TOU$DU_ALTRETURN) ;
      525    14017    1      RETURN ;
      526    14018
      527    14019        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:29   
      528    14020        /*D*  NAME:        TOU$DU_GET_DATA_SEGMENT
      529    14021              ENTRY:
      530    14022              AUTHOR:      Scott S. Sheppard
      531    14023              INTERFACE:   DU_GET_DATA_SEGMENT
      532    14024              DESCRIPTION: This entry point calls procedure
      533    14025                           DU_GET_DATA_SEGMENT with parameters.
      534    14026        */
      535    14027
      536    14028    1   TOU$DU_GET_DATA_SEGMENT: ENTRY ALTRET ;
      537    14029
      538    14030    1      CALL DU_GET_DATA_SEGMENT (DUP.NUM_WORDS, DUP.DS_V)
      539    14031    1              ALTRET (TOU$DU_ALTRETURN) ;
      540    14032    1      RETURN ;
      541    14033
      542    14034        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:30   
      543    14035        /*D*  NAME:        TOU$DU_FREE_DATA_SEGMENT
      544    14036              ENTRY:
      545    14037              AUTHOR:      Scott S. Sheppard
      546    14038              INTERFACE:   DU_FREE_DATA_SEGMENT
      547    14039              DESCRIPTION: This entry point calls procedure
      548    14040                           DU_FREE_DATA_SEGMENT with parameters.
      549    14041        */
      550    14042
      551    14043    1   TOU$DU_FREE_DATA_SEGMENT: ENTRY ALTRET ;
      552    14044
      553    14045    1      CALL DU_FREE_DATA_SEGMENT (DUP.NUM_WORDS, DUP.DS_V)
      554    14046    1              ALTRET (TOU$DU_ALTRETURN) ;
      555    14047    1      RETURN ;
      556    14048
      557    14049        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:31   
      558    14050        /*D*  NAME:        TOU$DU_UPDATE_LOG
      559    14051              ENTRY:
      560    14052              AUTHOR:      Scott S. Sheppard
      561    14053              INTERFACE:   DU_UPDATE_LOG
      562    14054              DESCRIPTION: This entry point calls procedure DU_UPDATE_LOG
      563    14055        */
      564    14056
      565    14057    1   TOU$DU_UPDATE_LOG: ENTRY ALTRET ;
      566    14058
      567    14059    1      CALL DU_UPDATE_LOG (DUP.LOG.TYPE,
      568    14060    1              DUP.LOG.CATALOG,
      569    14061    1              DUP.LOG.DECK,
      570    14062    1              DUP.HOLD_AREA) ALTRET (TOU$DU_ALTRETURN) ;
      571    14063    1      RETURN ;
      572    14064
      573    14065        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:32   
      574    14066        /*D*  NAME:        TOU$DU_GET_SITE
      575    14067              ENTRY:
      576    14068              AUTHOR:      Scott S. Sheppard
      577    14069              INTERFACE:   DU_GET_SITE
      578    14070              DESCRIPTION: This entry point calls procedure DU_GET_SITE
      579    14071        */
      580    14072
      581    14073    1   TOU$DU_GET_SITE: ENTRY ALTRET ;
      582    14074
      583    14075    1      CALL DU_GET_SITE (DUP.SITE_NAME.TEXT, DUP.SITE_NAME.LGTH,
      584    14076    1              DUP.SITE_ID, DUP.CPU_TYPE) ALTRET (TOU$DU_ALTRETURN) ;
      585    14077    1      RETURN ;
      586    14078
      587    14079        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:33   
      588    14080        /*D*  NAME:        TOU$DU_ALTRETURN
      589    14081              LABEL:
      590    14082              AUTHOR:      Scott S. Sheppard
      591    14083              DESCRIPTION: This label is specified by all TOU$DU entry
      592    14084                           points as the alternate return label.  This
      593    14085                           label allows the called entry to  altreturn
      594    14086                           to the calling procedure.
      595    14087        */
      596    14088
      597    14089    1   TOU$DU_ALTRETURN:
      598    14090    1      ALTRETURN ;
      599    14091
      600    14092        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:34   
      601    14093        /*I*  NAME:        DU_SET_IFAD_FID
      602    14094              AUTHOR:      Scott S. Sheppard
      603    14095                           Kathy Larkin
      604    14096              PURPOSE:     Sets IFAD File Id
      605    14097              INTERFACE:   DU_USER_WRITE
      606    14098                           DU_SET_FID
      607    14099                           DU_UNFID_DCB
      608    14100                           DCBNUM function
      609    14101                           DCBADDR function
      610    14102              INPUT:       IFAD_ENTERED - set if IFAD descriptor entered
      611    14103                           F$DCB.AMR#   - set if M$IFAD dcb has a merge rcd
      612    14104              OUTPUT:      FID_ open params set
      613    14105                           IFAD_FID
      614    14106                           IFAD_FID_LGTH
      615    14107              DESCRIPTION: This procedure calls the correct procedure to set
      616    14108                           the IFAD descriptor field.  The routine checks to
      617    14109                           determine if the FID was entered or if a !SET cmd
      618    14110                           was issued under IBEX.If both of these conditions
      619    14111                           are false,the procedure reports that IFAD must be
      620    14112                           set and ALTRETURNS.
      621    14113        */
      622    14114
      623    14115    1   DU_SET_IFAD_FID: PROC (ME_ALLOWED,
      624    14116    1              IFAD_ENTERED,
      625    14117    1              HELD_IFAD,
      626    14118    1              HELD_IFAD_LGTH,
      627    14119    1              DEVICE_INPUT,
      628    14120    1              IFAD_FID,
      629    14121    1              IFAD_FID_LGTH) ALTRET ;
      630    14122        %EJECT;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:35   
      631    14123    2      DCL ME_ALLOWED                 BIT (1) CALIGNED ;
      632    14124    2      DCL IFAD_ENTERED               BIT (1) CALIGNED ;
      633    14125    2      DCL HELD_IFAD                  CHAR (40) CALIGNED ;
      634    14126    2      DCL HELD_IFAD_LGTH             UBIN WORD ALIGNED ;
      635    14127    2      DCL DEVICE_INPUT               BIT (1) CALIGNED ;
      636    14128    2      DCL IFAD_FID                   CHAR (40) CALIGNED ;
      637    14129    2      DCL IFAD_FID_LGTH              UBIN WORD ALIGNED ;
      638    14130    2      DCL DCB$                       PTR ALIGNED ;
      639    14131
      640    14132        /* Code */
      641    14133
      642    14134    2      DCB$ = DCBADDR (DCBNUM (M$IFAD));
      643    14135    2      IF IFAD_ENTERED
      644    14136    3      THEN DO;
      645    14137    3              IFAD_FID = HELD_IFAD;
      646    14138    3              IFAD_FID_LGTH = HELD_IFAD_LGTH;
      647    14139    3              CALL DU_SET_FID (IFAD_FID) ALTRET (ERROR);
      648    14140    3              CALL DU_CHECK_IFAD_ASN (FID_ASN, FID_RES);
      649    14141    3           END /* THEN DO */;
      650    14142    2      ELSE IF DCB$ -> F$DCB.AMR#
      651    14143    3         THEN DO;
      652    14144    3                 CALL DU_UNFID_DCB (DCBNUM (M$IFAD), IFAD_FID, IFAD_FID_LGTH)
      653    14145    3                         ALTRET (ERROR);
      654    14146    3                 CALL DU_CHECK_IFAD_ASN (DCB$ -> F$DCB.ASN#, DCB$ -> F$DCB.RES#);
      655    14147    3              END /* THEN DO */;
      656    14148    3         ELSE DO ;
      657    14149    3                 CALL DU_USER_WRITE (%E$DSIF_NO_IFAD) ;
      658    14150    3   ERROR:
      659    14151    3                 ALTRETURN ;
      660    14152    3              END /* ELSE */ ;
      661    14153    2      RETURN ;
      662    14154
      663    14155        /* END DU_SET_IFAD_FID */
      664    14156        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:36   
      665    14157        /*I*  NAME:        DU_CHECK_IFAD_ASN
      666    14158              AUTHOR:      Scott S. Sheppard
      667    14159                           Kathy Larkin
      668    14160              PURPOSE:     Checks IFAD ASN
      669    14161              INTERFACE:   DU_USER_WRITE
      670    14162                           DU_SET_FULL_FID
      671    14163                           M$FID Monitor Service
      672    14164              INPUT:       HELD_IFAD      - FID entered as part of the DEER
      673    14165                                            command
      674    14166                           HELD_IFAD_LGTH
      675    14167                           ME_ALLOWED - flag if IFAD can be !SET to 'ME'
      676    14168              OUTPUT:      DEVICE_INPUT   - set if M$IFAD is associated with
      677    14169                                          a device
      678    14170                           IFAD_FID   - NAME.ACCOUNT or FT#nnnnnn for IFAD
      679    14171                           IFAD_FID_LGTH
      680    14172              DESCRIPTION: This procedure sets the IFAD descriptor field
      681    14173                           using the file identifier saved from the DEER
      682    14174                           command. The procedure validates that the fid
      683    14175                           entered is acceptable for IFAD.
      684    14176        */
      685    14177        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:37   
      686    14178    2   DU_CHECK_IFAD_ASN: PROC (IFAD_ASN, IFAD_RES) ALTRET ;
      687    14179
      688    14180    3      DCL IFAD_ASN    UBIN BYTE HALIGNED;
      689    14181    3      DCL IFAD_RES    CHAR (4) CALIGNED;
      690    14182
      691    14183        /* Code */
      692    14184
      693    14185    4      DO CASE (IFAD_ASN) ;
      694    14186    4         CASE (%DEVICE#) ;
      695    14187    4            DEVICE_INPUT = %TRUE ;
      696    14188    5            DO SELECT (SUBSTR (IFAD_RES, 0, 2)) ;
      697    14189    5               SELECT ('FT') ;
      698    14190                       /* Free Tape is legal */
      699    14191    5               SELECT ('ME') ;
      700    14192    5               IF ME_ALLOWED
      701    14193    5               THEN /* Do Nothing */ ;
      702    14194    6               ELSE DO ;
      703    14195    6                       CALL DU_USER_WRITE (%E$DIFH_NOT_ME) ;
      704    14196    6                       ALTRETURN ;
      705    14197    6                    END /* ELSE */ ;
      706    14198    5               SELECT (ELSE) ;
      707    14199    5            CALL DU_USER_WRITE (%E$DIFM_DEVICE) ;
      708    14200    5            ALTRETURN ;
      709    14201    5            END /* SELECT */ ;
      710    14202    4         CASE (%FILE#) ;
      711    14203    4            DEVICE_INPUT = %FALSE ;
      712    14204    4            CALL DU_SET_FULL_FID (IFAD_FID, IFAD_FID_LGTH, IFAD_FID, IFAD_FID_LGTH);
      713    14205    4         CASE (ELSE) ;
      714    14206    4            CALL DU_USER_WRITE (%E$DIFM_ASN) ;
      715    14207    4            ALTRETURN ;
      716    14208    4      END /* CASE */ ;
      717    14209    3      RETURN ;
      718    14210
      719    14211    3   END DU_CHECK_IFAD_ASN ;
      720    14212    2   END DU_SET_IFAD_FID ;
      721    14213        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:38   
      722    14214        /*I*  NAME:        DU_OPEN_IFAD
      723    14215              AUTHOR:      Scott S. Sheppard
      724    14216              PURPOSE:     Opens IFAD input source
      725    14217              INTERFACE:   DU_USER_WRITE
      726    14218                           DU_SYSTEM_ERRMSG
      727    14219                           DU_SET_IFAD_SNS
      728    14220                           DU_SET_IFAD_NAME_ACCOUNT
      729    14221                           M$OPEN
      730    14222              INPUT:       F$DCB.FCD# - set if dcb is currently open
      731    14223              OUTPUT:      IFAD input source is opened.
      732    14224                           NUM_VOLUMES - number of IFAD volumes
      733    14225              DESCRIPTION: This procedure opens the IFAD input source.
      734    14226                           It activates the M$IFAD dcb.
      735    14227        */
      736    14228
      737    14229    1   DU_OPEN_IFAD: PROC (DEVICE_INPUT,
      738    14230    1              IFAD_FID,
      739    14231    1              IFAD_FID_LGTH,
      740    14232    1              NUM_VOLUMES) ALTRET ;
      741    14233
      742    14234    2      DCL DEVICE_INPUT               BIT (1) CALIGNED ;
      743    14235    2      DCL IFAD_FID                   CHAR (40) CALIGNED ;
      744    14236    2      DCL IFAD_FID_LGTH              UBIN WORD ALIGNED ;
      745    14237    2      DCL NUM_VOLUMES                UBIN WORD ALIGNED ;
      746    14238    2      DCL IFAD_TEXT_FID              CHAR (40) STATIC CALIGNED ;
      747    14239           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:39   
      748    14240        /* Function Parameter Tables */
      749    14241
      750    14242           %FPT_OPEN (FPTN  = IFAD_TAPE_DEVICE,
      751    14243                      ASN   = DEVICE,
      752    14244                      CVOL  = YES,
      753    14245                      DCB   = M$IFAD,
      754    14246                      FUN   = IN,
      755    14247                      ORG   = FREE,
      756    14248                      SN    = IFAD_SN) ;
      757    14357
      758    14358           %FPT_OPEN (FPTN  = IFAD_DISK_FILE,
      759    14359                      ACCT  = IFAD_ACCT,
      760    14360                      ASN   = FILE,
      761    14361                      DCB   = M$IFAD,
      762    14362                      FUN   = IN,
      763    14363                      NAME  = IFAD_NAME) ;
      764    14472
      765    14473           %FPT_FID (FPTN    = SETUP_IFAD_TAPE,
      766    14474                     ACCT    = IFAD_ACCT,
      767    14475                     ASN     = IFAD_TAPE_DEVICE.V.ASN#,
      768    14476                     NAME    = IFAD_NAME,
      769    14477                     PASS    = IFAD_PASS,
      770    14478                     RES     = IFAD_TAPE_DEVICE.V.RES#,
      771    14479                     SACCT   = YES,
      772    14480                     SNAME   = YES,
      773    14481                     SPASS   = YES,
      774    14482                     SRES    = NO,
      775    14483                     SSN     = NO,
      776    14484                     SWSN    = YES,
      777    14485                     SN      = IFAD_SN,
      778    14486                     TEXTFID = IFAD_TEXT_FID,
      779    14487                     WSN     = IFAD_WSN) ;
      780    14510           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:40   
      781    14511           %FPT_FID (FPTN    = SETUP_IFAD_DISK,
      782    14512                     ACCT    = IFAD_ACCT,
      783    14513                     ASN     = IFAD_DISK_FILE.V.ASN#,
      784    14514                     NAME    = IFAD_NAME,
      785    14515                     PASS    = IFAD_PASS,
      786    14516                     RES     = IFAD_DISK_FILE.V.RES#,
      787    14517                     SACCT   = NO,
      788    14518                     SNAME   = NO,
      789    14519                     SPASS   = YES,
      790    14520                     SRES    = NO,
      791    14521                     SSN     = YES,
      792    14522                     SWSN    = YES,
      793    14523                     SN      = IFAD_SN,
      794    14524                     TEXTFID = IFAD_TEXT_FID,
      795    14525                     WSN     = IFAD_WSN) ;
      796    14548
      797    14549        /* Variable Length Parameters */
      798    14550
      799    14551           %VLP_SN (FPTN = IFAD_SN,
      800    14552                    N    = %MAX_VOLS,
      801    14553                    SN   = "' ', ' ', ' ', ' ', ' ', ' '") ;
      802    14566
      803    14567           %VLP_NAME (FPTN = IFAD_NAME,
      804    14568                      LEN  = 31) ;
      805    14595
      806    14596           %VLP_ACCT (FPTN = IFAD_ACCT) ;
      807    14609
      808    14610           %VLP_PASS (FPTN = IFAD_PASS) ;
      809    14623
      810    14624           %VLP_WSN (FPTN = IFAD_WSN) ;
      811    14637           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:41   
      812    14638        /* Code */
      813    14639
      814    14640    2      IF DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.FCD#
      815    14641    3      THEN DO ;
      816    14642    3              CALL DU_USER_WRITE (%E$DOI_ALREADY_OPEN) ;
      817    14643    3              ALTRETURN ;
      818    14644    3           END /* THEN */ ;
      819    14645    3      ELSE DO ;
      820    14646    3              IFAD_TEXT_FID = IFAD_FID ;
      821    14647    3              IF DEVICE_INPUT
      822    14648    4              THEN DO ;
      823    14649    4                      CALL M$FID (SETUP_IFAD_TAPE) ALTRET (OPEN_ERR) ;
      824    14650    4                      CALL M$OPEN (IFAD_TAPE_DEVICE) ALTRET (OPEN_ERR) ;
      825    14651    4                      NUM_VOLUMES = IFAD_SN.NUM# ;
      826    14652    4                   END /* THEN */ ;
      827    14653    4              ELSE DO ;
      828    14654    4                      CALL M$FID (SETUP_IFAD_DISK) ALTRET (OPEN_ERR) ;
      829    14655    4                      CALL M$OPEN (IFAD_DISK_FILE) ALTRET (OPEN_ERR) ;
      830    14656    4                      NUM_VOLUMES = 1 ;
      831    14657    4                   END /* ELSE */ ;
      832    14658    3              RETURN ;
      833    14659    3           END /* ELSE */ ;
      834    14660
      835    14661    2   OPEN_ERR:
      836    14662    2      IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOFILE
      837    14663    2      THEN CALL DU_USER_WRITE (%E$DOI_NO_FILE) ;
      838    14664    3      ELSE DO ;
      839    14665    3              CALL DU_USER_WRITE (%E$DOI_OPEN_ERROR) ;
      840    14666    3              CALL DU_SYSTEM_ERRMSG (%FALSE) ;
      841    14667    3           END /* ELSE */ ;
      842    14668    2      ALTRETURN ;
      843    14669
      844    14670    2   END DU_OPEN_IFAD ;
      845    14671        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:42   
      846    14672        /*I*  NAME:        DU_NEXT_IFAD
      847    14673              AUTHOR:      Scott S. Sheppard
      848    14674              PURPOSE:     Mounts Next IFAD volume
      849    14675              INTERFACE:   M$CVOL Monitor Service     DCBNUM Function
      850    14676                           DU_USER_WRITE              DCBADDR Function
      851    14677                           DU_SYSTEM_ERRMSG
      852    14678              INPUT:       No system data accessed.
      853    14679              OUTPUT:      M$IFAD current volume closed, next mounted
      854    14680              DESCRIPTION: This procedure closes the current volume of the
      855    14681                           IFAD input tape  and mounts the next  volume of
      856    14682                           the volume set.
      857    14683        */
      858    14684
      859    14685    1   DU_NEXT_IFAD: PROC ALTRET ;
      860    14686
      861    14687           %FPT_CVOL (FPTN = NEXT_IFAD,
      862    14688                      DCB  = M$IFAD) ;
      863    14703
      864    14704        /* Code */
      865    14705
      866    14706    2      CALL M$CVOL (NEXT_IFAD) ALTRET (CVOL_ERROR) ;
      867    14707    2      RETURN ;
      868    14708
      869    14709    2   CVOL_ERROR:
      870    14710    2      CALL DU_USER_WRITE (%E$DNI_CVOL_ERROR) ;
      871    14711    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
      872    14712    2      ALTRETURN ;
      873    14713
      874    14714    2   END DU_NEXT_IFAD ;
      875    14715        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:43   
      876    14716        /*I*  NAME:        DU_CLOSE_IFAD
      877    14717              AUTHOR:      Scott S. Sheppard
      878    14718              PURPOSE:     Closes IFAD
      879    14719              INTERFACE:   M$CLOSE Monitor Service     DCBNUM Function
      880    14720                           DU_USER_WRITE               DCBADDR Function
      881    14721                           DU_SYSTEM_ERRMSG
      882    14722              INPUT:       F$DCB.FCD# - IFAD Open flag
      883    14723              OUTPUT:      M$IFAD DCB closed.
      884    14724              DESCRIPTION: This procedure closes the IFAD input source.
      885    14725                           If tape is used, the tape is rewound.
      886    14726        */
      887    14727
      888    14728    1   DU_CLOSE_IFAD: PROC ALTRET ;
      889    14729
      890    14730           %FPT_CLOSE (FPTN = CLOSE_IFAD,
      891    14731                       DCB  = M$IFAD,
      892    14732                       POS  = REL) ;
      893    14774
      894    14775        /* Code */
      895    14776
      896    14777    2      IF DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.FCD#
      897    14778    2      THEN CALL M$CLOSE (CLOSE_IFAD) ALTRET (CLOSE_ERROR) ;
      898    14779    2      ELSE /* IFAD Not Open */ ;
      899    14780    2      RETURN ;
      900    14781
      901    14782    2   CLOSE_ERROR:
      902    14783    2      CALL DU_USER_WRITE (%E$DCI_CLOSE_ERROR) ;
      903    14784    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
      904    14785    2      ALTRETURN ;
      905    14786
      906    14787    2   END DU_CLOSE_IFAD ;
      907    14788        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:44   
      908    14789        /*I* NAME:         DU_OPEN_LO
      909    14790             AUTHOR:       Kathy Larkin
      910    14791             PURPOSE:      Set M$LO parameters and open
      911    14792             INTERFACE:    DU_SET_FID - performs M$FID
      912    14793                           M$OPEN Monitor Service
      913    14794                           DU_SYSTEM_ERRMSG error service
      914    14795             PARAMETERS:   LO_FID - input - fid text
      915    14796                           OPEN_TYPE - user specified on (to), over, into fid
      916    14797             DATA:         FID_ params (global VLP's) set by DU_SET_FID
      917    14798             DESCRIPTION:  Calls M$FID to  set fid parameters for M$OPEN.
      918    14799                           FPT  is  chosen   depending  on  whether  user
      919    14800                           entered 'ON' (or 'TO'), 'OVER', or 'INTO' fid.
      920    14801                           In  the case of  'ON' or 'TO'  the M$OPEN will
      921    14802                           error if the  file already exists.  For 'OVER'
      922    14803                           a  new file  will be  created and any existing
      923    14804                           file  of  the  same  name is overwritten.  For
      924    14805                           'INTO' any existing file will be extended.
      925    14806        */
      926    14807
      927    14808    1   DU_OPEN_LO: PROC (LO_FID, OPEN_TYPE) ALTRET;
      928    14809
      929    14810        /* Variables */
      930    14811
      931    14812    2      DCL LO_FID      CHAR (40) CALIGNED ;
      932    14813    2      DCL OPEN_TYPE   UBIN WORD ALIGNED ;
      933    14814
      934    14815        /* FPTs and VLPs */
      935    14816
      936    14817           %FPT_OPEN      (FPTN           = OPEN_LO,
      937    14818                           ACCT           = FID_ACCT,
      938    14819                           DCB            = M$LO,
      939    14820                           CTG            = YES,
      940    14821                           NAME           = FID_NAME,
      941    14822                           PASS           = FID_PASS,
      942    14823                           SN             = FID_SN,
      943    14824                           WSN            = FID_WSN) ;
      944    14933        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:45   
      945    14934        /* Code */
      946    14935
      947    14936    2      CALL DU_CLOSE_LO_IF_OPEN ALTRET (LO_ERROR) ;
      948    14937
      949    14938    2      CALL DU_SET_FID (LO_FID) ALTRET (LO_ERROR) ;
      950    14939    2      OPEN_LO.V.RES# = FID_RES;
      951    14940    2      OPEN_LO.V.ASN# = FID_ASN;
      952    14941    3      DO CASE (OPEN_TYPE) ;
      953    14942    3         CASE (%ON) ;
      954    14943    3            OPEN_LO.V.EXIST# = %ERROR# ;
      955    14944    3            OPEN_LO.V.FUN# = %CREATE# ;
      956    14945    3            CALL M$OPEN (OPEN_LO) ALTRET (LO_ERROR) ;
      957    14946    3         CASE (%OVER) ;
      958    14947    3            OPEN_LO.V.EXIST# = %NEWFILE# ;
      959    14948    3            OPEN_LO.V.FUN# = %CREATE# ;
      960    14949    3            CALL M$OPEN (OPEN_LO) ALTRET (LO_ERROR) ;
      961    14950    3         CASE (%INTO) ;
      962    14951    3            OPEN_LO.V.EXIST# = %OLDFILE# ;
      963    14952    3            OPEN_LO.V.FUN# = %UPDATE# ;
      964    14953    3            CALL M$OPEN (OPEN_LO) ALTRET (LO_ERROR) ;
      965    14954    3      END /* CASE */ ;
      966    14955    2      RETURN ;
      967    14956
      968    14957    2   LO_ERROR:
      969    14958    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
      970    14959    2      ALTRETURN ;
      971    14960
      972    14961    2   END DU_OPEN_LO ;
      973    14962        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:46   
      974    14963        /*I* NAME:         DU_CLOSE_LO_IF_OPEN
      975    14964             AUTHOR:       Kathy Larkin
      976    14965             PURPOSE:      Close M$LO DCB if open
      977    14966             INTERFACE:    M$CLOSE Monitor Service
      978    14967                           DU_SYSTEM_ERRMSG
      979    14968             PARAMETERS:   None passed.
      980    14969             DATA:         F$DCB.FCD# - input - set if DCB open
      981    14970             DESCRIPTION:  This procedure  will check to see  if the M$LO
      982    14971                           DCB  is open.  If  so, it will  be closed.  If
      983    14972                           not, no action is taken.
      984    14973        */
      985    14974
      986    14975    1   DU_CLOSE_LO_IF_OPEN: PROC ALTRET ;
      987    14976
      988    14977           %FPT_CLOSE      (FPTN          = CLOSE_LO,
      989    14978                            DCB           = M$LO) ;
      990    15020
      991    15021        /* Code */
      992    15022
      993    15023    2      IF DCBADDR (DCBNUM (M$LO)) -> F$DCB.FCD#
      994    15024    2      THEN CALL M$CLOSE (CLOSE_LO) ALTRET (CLOSE_ERR) ;
      995    15025    2      ELSE /* DCB not open */ ;
      996    15026    2      RETURN ;
      997    15027
      998    15028    2   CLOSE_ERR:
      999    15029    2      ALTRETURN ;
     1000    15030
     1001    15031    2   END DU_CLOSE_LO_IF_OPEN ;
     1002    15032        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:47   
     1003    15033        /*I* NAME:         DU_SET_IFAD_IMU_NUMBER
     1004    15034             AUTHOR:       Scott S. Sheppard
     1005    15035             PURPOSE:      Determines the IMU number
     1006    15036             INTERFACE:    INDEX
     1007    15037                           CHARBIN
     1008    15038                           DU_USER_WRITE
     1009    15039             PARAMETERS:   IFAD_FID - input / output
     1010    15040                           IFAD_FID_LGTH - input / output
     1011    15041                           IFAD_IMU_NUMBER - output
     1012    15042             DATA:         No external data accessed.
     1013    15043             DESCRIPTION:  This procedure is  necessary because CP-6 does
     1014    15044                           not  treat  an  IMU  as  a  resource. When the
     1015    15045                           string  'IMUnn' is encountered,  it is treated
     1016    15046                           as a file name  by CP-6. This procedure really
     1017    15047                           accepts   a   file   name,   strips   off  the
     1018    15048                           dot-account  portion,  and  computes  the  IMU
     1019    15049                           number from the characters that follow the IMU
     1020    15050                           portion. This procedure  will ALTRETURN if the
     1021    15051                           file name does not  begin with IMU followed by
     1022    15052                           a series of digits.
     1023    15053        */
     1024    15054        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:48   
     1025    15055    1   DU_SET_IFAD_IMU_NUMBER: PROC (IFAD_FID, IFAD_FID_LGTH, IFAD_IMU_NUMBER) ALTRET;
     1026    15056
     1027    15057    2      DCL IFAD_FID                   CHAR (40) CALIGNED ;
     1028    15058    2      DCL IFAD_FID_LGTH              UBIN WORD ALIGNED ;
     1029    15059    2      DCL IFAD_IMU_NUMBER            UBIN WORD ALIGNED ;
     1030    15060    2      DCL I                          UBIN WORD ALIGNED ;
     1031    15061
     1032    15062        /* Code */
     1033    15063
     1034    15064    2      IF (SUBSTR (IFAD_FID, 0, 3) = 'IMU') OR
     1035    15065    2              (SUBSTR (IFAD_FID, 0, 3) = 'IMX')
     1036    15066    3      THEN DO ;
     1037    15067    3              CALL INDEX (IFAD_FID_LGTH, '.', IFAD_FID, 0) ALTRET (ERROR) ;
     1038    15068    3              IFAD_FID = SUBSTR (IFAD_FID, 0, IFAD_FID_LGTH) ;
     1039    15069    4              DO I = 3 TO IFAD_FID_LGTH - 1 ;
     1040    15070    5                 DO SELECT (SUBSTR (IFAD_FID, I, 1)) ;
     1041    15071    5                    SELECT ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9') ;
     1042    15072                            /* digits are valid */
     1043    15073    5                    SELECT (ELSE) ;
     1044    15074    5                 CALL DU_USER_WRITE (%E$DSIIN_BAD_IMX#) ;
     1045    15075    5                 ALTRETURN ;
     1046    15076    5                 END /* SELECT */ ;
     1047    15077    4              END /* DO */ ;
     1048    15078    3              CALL CHARBIN (IFAD_IMU_NUMBER, SUBSTR (IFAD_FID,3,IFAD_FID_LGTH-3));
     1049    15079    3              RETURN ;
     1050    15080    3           END /* THEN */ ;
     1051    15081    3      ELSE DO ;
     1052    15082    3   ERROR:
     1053    15083    3              CALL DU_USER_WRITE (%E$DSIIN_NOT_IMX) ;
     1054    15084    3              ALTRETURN ;
     1055    15085    3           END /* ELSE */ ;
     1056    15086
     1057    15087    2   END DU_SET_IFAD_IMU_NUMBER ;
     1058    15088        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:49   
     1059    15089        /*I* NAME:         DU_VALIDATE_IMU_NUMBER
     1060    15090             AUTHOR:       Scott S. Sheppard
     1061    15091             PURPOSE:      validates the IMU number
     1062    15092             INTERFACE:    M$OPEN
     1063    15093                           M$READ
     1064    15094                           M$CLOSE
     1065    15095                           DU_USER_WRITE
     1066    15096                           DU_SYSTEM_ERRMSG
     1067    15097             PARAMETERS:   IMU# - input
     1068    15098             DATA:         No external data accessed.
     1069    15099             DESCRIPTION:  This  procedure  checks  to  see  that the IMU
     1070    15100                           specified actually exists. Generally IMU's and
     1071    15101                           IOM's are configured  on systems with the IOM,
     1072    15102                           or in this case  IMU, number ranging from 0 to
     1073    15103                           3.  This procedure  reads the  :CONFIG file to
     1074    15104                           obtain  the  head   record;  the  head  record
     1075    15105                           contains the number of IOM's configured on the
     1076    15106                           system. If the IMU number specified is greater
     1077    15107                           than the number of  IOM's present, there is no
     1078    15108                           way  that the  IMU can  exist.  This  is not a
     1079    15109                           fool  proof check, but  will catch many errors
     1080    15110                           before the TDOPEN is issued.
     1081    15111        */
     1082    15112        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:50   
     1083    15113    1   DU_VALIDATE_IMU_NUMBER: PROC (IMU#) ALTRET ;
     1084    15114
     1085    15115    2      DCL IMU#        UBIN WORD ALIGNED ;
     1086    15116    2      DCL M$MERGE     DCB ;
     1087    15117    2      DCL 1 HEAD_KEY  CONSTANT ALIGNED,
     1088    15118    2            2 SIZE    UBIN BYTE UNAL INIT (1),
     1089    15119    2            2 DATA    UBIN BYTE UNAL INIT (0) ;
     1090    15120    2      DCL HEAD_BUFFER (0:2000) UBIN WORD BASED (DUP.BCD_V.PTR$) ALIGNED ;
     1091    15121    2      DCL TD$HEAD$    PTR ALIGNED ;
     1092    15122           %TD$HEAD (STCLASS = "BASED (TD$HEAD$)") ;
     1093    15158           %FPT_OPEN (FPTN = OPEN_CONFIG,
     1094    15159                      DCB  = M$MERGE,
     1095    15160                      NAME = FILE_NAME,
     1096    15161                      ASN  = FILE,
     1097    15162                      ACCT = ACCOUNT_NAME,
     1098    15163                      ACS  = DIRECT,
     1099    15164                      DISP = NAMED,
     1100    15165                      ORG  = KEYED,
     1101    15166                      FUN  = IN,
     1102    15167                      SHARE = IN) ;
     1103    15276           %FPT_READ (FPTN = READ_CONFIG,
     1104    15277                      DCB  = M$MERGE,
     1105    15278                      KEYS = YES) ;
     1106    15317           %FPT_CLOSE (FPTN = CLOSE_CONFIG,
     1107    15318                       DCB = M$MERGE,
     1108    15319                       DISP = SAVE) ;
     1109    15361           %VLP_NAME (FPTN = FILE_NAME,
     1110    15362                      LEN  = 11,
     1111    15363                      NAME = ':CONFIG') ;
     1112    15390           %VLP_ACCT (FPTN = ACCOUNT_NAME,
     1113    15391                      ACCT = ':SYS') ;
     1114    15404           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:51   
     1115    15405        /* Code */
     1116    15406
     1117    15407    2      CALL M$OPEN (OPEN_CONFIG) ALTRET (ERROR) ;
     1118    15408    2      READ_CONFIG.KEY_ = VECTOR (HEAD_KEY) ;
     1119    15409    2      READ_CONFIG.BUF_ = VECTOR (HEAD_BUFFER) ;
     1120    15410    2      CALL M$READ (READ_CONFIG) ALTRET (ERROR) ;
     1121    15411    2      CALL M$CLOSE (CLOSE_CONFIG) ALTRET (ERROR) ;
     1122    15412
     1123    15413    2      TD$HEAD$ = ADDR (HEAD_BUFFER) ;
     1124    15414    2      IF IMU# < TD$HEAD.NUMIOMS
     1125    15415    2      THEN RETURN ;
     1126    15416    3      ELSE DO ;
     1127    15417    3              CALL DU_USER_WRITE (%E$DSIIN_BAD_IMX#) ;
     1128    15418    3              ALTRETURN ;
     1129    15419    3           END /* ELSE */ ;
     1130    15420
     1131    15421    2   ERROR:
     1132    15422    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1133    15423    2      CALL M$CLOSE (CLOSE_CONFIG) ;
     1134    15424    2      ALTRETURN ;
     1135    15425
     1136    15426    2   END DU_VALIDATE_IMU_NUMBER ;
     1137    15427        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:52   
     1138    15428        /*I* NAME:         DU_OPEN_MCA
     1139    15429             AUTHOR:       Scott S. Sheppard
     1140    15430             PURPOSE:      Opens the IMU (MCA) for input
     1141    15431             INTERFACE:    M$TDOPEN
     1142    15432                           M$FID
     1143    15433                           DU_USER_WRITE
     1144    15434                           DU_SYSTEM_ERRMSG
     1145    15435             PARAMETERS:   IFAD_FID - identifier of the IFAD IMU
     1146    15436                           IMU - number of the IMU to use
     1147    15437             DATA:         No external data accessed.
     1148    15438             DESCRIPTION:  This  procedure opens a  specified IMU so that
     1149    15439                           diskettes may be inserted, read, and stored in
     1150    15440                           the deckfile. The information on the diskettes
     1151    15441                           is  transferred to the  HOST via communication
     1152    15442                           with the MCA using channel 3.
     1153    15443
     1154    15444                           M$FID is called so that  all  values currently
     1155    15445                           remaining in the  M$IFAD DCB  (from a previous
     1156    15446                           usage) are wiped out. Allowing those values to
     1157    15447                           remain caused errors when the  M$IFAD DCB  was
     1158    15448                           used to toggle  between device and file input.
     1159    15449                           Similar problems could occur when using M$IFAD
     1160    15450                           in conjunction with IMU input.
     1161    15451        */
     1162    15452        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:53   
     1163    15453    1   DU_OPEN_MCA: PROC (IFAD_FID, IMU) ALTRET ;
     1164    15454
     1165    15455    2      DCL IFAD_FID              CHAR (40) CALIGNED ;
     1166    15456    2      DCL IMU                   UBIN WORD ALIGNED ;
     1167    15457    2      DCL IFAD_TEXT_FID         CHAR (40) STATIC CALIGNED ;
     1168    15458    2      DCL IFAD_DEVICE           UBIN BYTE STATIC CALIGNED INIT (3) ;
     1169    15459    2      DCL IFAD_RES              CHAR (4) STATIC CALIGNED INIT ('IM') ;
     1170    15460           %FPT_TDOPEN (FPTN = MCA_FOR_INPUT,
     1171    15461                        CHAN = 3,
     1172    15462                        DCB  = M$IFAD) ;
     1173    15479           %FPT_FID (FPTN    = SETUP_IFAD_IMU,
     1174    15480                     ACCT    = IFAD_ACCT,
     1175    15481                     ASN     = IFAD_DEVICE,
     1176    15482                     NAME    = IFAD_NAME,
     1177    15483                     PASS    = IFAD_PASS,
     1178    15484                     RES     = IFAD_RES,
     1179    15485                     SACCT   = YES,
     1180    15486                     SNAME   = YES,
     1181    15487                     SPASS   = YES,
     1182    15488                     SRES    = YES,
     1183    15489                     SSN     = YES,
     1184    15490                     SWSN    = YES,
     1185    15491                     SN      = IFAD_SN,
     1186    15492                     TEXTFID = IFAD_TEXT_FID,
     1187    15493                     WSN     = IFAD_WSN) ;
     1188    15516           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:54   
     1189    15517        /* Variable Length Parameters */
     1190    15518
     1191    15519           %VLP_SN (FPTN = IFAD_SN,
     1192    15520                    N    = %MAX_VOLS,
     1193    15521                    SN   = "' ', ' ', ' ', ' ', ' ', ' '") ;
     1194    15534
     1195    15535           %VLP_NAME (FPTN = IFAD_NAME,
     1196    15536                      LEN  = 31) ;
     1197    15563
     1198    15564           %VLP_ACCT (FPTN = IFAD_ACCT) ;
     1199    15577
     1200    15578           %VLP_PASS (FPTN = IFAD_PASS) ;
     1201    15591
     1202    15592           %VLP_WSN (FPTN = IFAD_WSN) ;
     1203    15605
     1204    15606        /* Code */
     1205    15607
     1206    15608    2      IFAD_TEXT_FID = IFAD_FID ;
     1207    15609    2      CALL M$FID (SETUP_IFAD_IMU) ALTRET (ERROR) ;
     1208    15610    2      MCA_FOR_INPUT.V.DEVICE.IOM# = IMU ;
     1209    15611    2      MCA_FOR_INPUT.V.TEST# = %TD_TEST_MCA ;
     1210    15612    2      CALL M$TDOPEN (MCA_FOR_INPUT) ALTRET (ERROR) ;
     1211    15613    2      RETURN ;
     1212    15614
     1213    15615    2   ERROR:
     1214    15616    2      CALL DU_USER_WRITE (%E$DOI_OPEN_ERROR) ;
     1215    15617    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1216    15618    2      ALTRETURN ;
     1217    15619
     1218    15620    2   END DU_OPEN_MCA ;
     1219    15621        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:55   
     1220    15622        /*I* NAME:         DU_CLOSE_MCA
     1221    15623             AUTHOR:       Scott S. Sheppard
     1222    15624             PURPOSE:      Closes the IMU (MCA)
     1223    15625             INTERFACE:    M$TDCLOSE
     1224    15626                           DU_USER_WRITE
     1225    15627                           DU_SYSTEM_ERRMSG
     1226    15628             PARAMETERS:   None passed.
     1227    15629             DATA:         No external data accessed.
     1228    15630             DESCRIPTION:  This  procedure closes the current IMU that is
     1229    15631                           currently associated with the M$IFAD dcb.
     1230    15632        */
     1231    15633
     1232    15634    1   DU_CLOSE_MCA: PROC ALTRET ;
     1233    15635
     1234    15636           %FPT_TDCLOSE (FPTN = MCA_FINISHED,
     1235    15637                         DCB  = M$IFAD) ;
     1236    15651
     1237    15652        /* Code */
     1238    15653
     1239    15654    2      IF DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.FCD#
     1240    15655    2      THEN CALL M$TDCLOSE (MCA_FINISHED) ALTRET (ERROR) ;
     1241    15656    2      ELSE /* IFAD Not Open */ ;
     1242    15657    2      RETURN ;
     1243    15658
     1244    15659    2   ERROR:
     1245    15660    2      CALL DU_USER_WRITE (%E$DCI_CLOSE_ERROR) ;
     1246    15661    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1247    15662    2      ALTRETURN ;
     1248    15663
     1249    15664    2   END DU_CLOSE_MCA ;
     1250    15665        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:56   
     1251    15666        /*I* NAME:         DU_MCA_RESET_STATUS
     1252    15667             AUTHOR:       Kathy Larkin
     1253    15668             PURPOSE:      Issue reset status to MCA
     1254    15669             INTERFACE:    M$TDIO monitor service
     1255    15670             PARAMETERS:   None passed.
     1256    15671             DATA:         No external data accessed.
     1257    15672             DESCRIPTION:  This  procedure sets  up the  IDCW to  issue a
     1258    15673                           reset status command  to the MCA.  This should
     1259    15674                           result in a major status of Channel Ready, and
     1260    15675                           a  sub-status of  Maint. Session  Normal term.
     1261    15676                           If these status  values are not received, this
     1262    15677                           procedure  will  ALTRETURN,  aborting the DEER
     1263    15678                           Merge command.
     1264    15679        */
     1265    15680        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:57   
     1266    15681    1   DU_MCA_RESET_STATUS: PROC ALTRET ;
     1267    15682
     1268    15683    2      DCL IDCW        BIT (36) DALIGNED ;
     1269    15684    2      DCL 1 STATUS ALIGNED,
     1270    15685    2            2 *       BIT (2) UNAL,
     1271    15686    2            2 MAJOR   BIT (4) UNAL,
     1272    15687    2            2 *       BIT (1) UNAL,
     1273    15688    2            2 SUB     BIT (5) UNAL,
     1274    15689    2            2 *       BIT (60) UNAL ;
     1275    15690           %F$DCB ;
     1276    15747           %FPT_TDIO (FPTN = INIT_MCA,
     1277    15748                      DCB = M$IFAD,
     1278    15749                      TIMEOUT = 0,
     1279    15750                      WAIT = YES) ;
     1280    15767
     1281    15768        /* Code */
     1282    15769
     1283    15770    2      IDCW = '400000700201'O ;
     1284    15771    2      INIT_MCA.DCWLIST_ = VECTOR (IDCW) ;
     1285    15772    2      CALL M$TDIO (INIT_MCA) ALTRET (ERROR) ;
     1286    15773    2      STATUS = DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.TDSTAT# ;
     1287    15774    2      IF (STATUS.MAJOR = %CHAN_READY) & (STATUS.SUB = %SESS_NORM_TERM)
     1288    15775    2      THEN RETURN ;
     1289    15776    2      ELSE ;
     1290    15777
     1291    15778    2   ERROR:
     1292    15779    2      CALL DU_USER_WRITE (%E$DMRS_MCA) ;
     1293    15780    2      ALTRETURN ;
     1294    15781
     1295    15782    2   END DU_MCA_RESET_STATUS ;
     1296    15783        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:58   
     1297    15784        /*I*  NAME:        DU_SET_DF_FID
     1298    15785              AUTHOR:      Scott S. Sheppard
     1299    15786              PURPOSE:     Sets up Deckfile Name_account Field
     1300    15787              INTERFACE:   DU_DF_FROM_HOLD
     1301    15788                           DU_DF_FROM_MERGE
     1302    15789                           DU_USER_WRITE
     1303    15790                           DCBNUM
     1304    15791                           DCBADDR
     1305    15792              INPUT:       DF_ENTERED - flag set if name.account typed in
     1306    15793                           F$DCB.AMR# - flag set if a merge record exists
     1307    15794              OUTPUT:      DF_FID - name and account variable
     1308    15795                           DF_FID_LGTH - length of name and account
     1309    15796              DESCRIPTION: This procedure sets the DF name_account field.
     1310    15797                           This routine is  the  only  part  of  the  T&D
     1311    15798                           deckfile editor system that assigns a value to
     1312    15799                           the DF name_account.    All  other  procedures
     1313    15800                           access the DF name_account as read only.
     1314    15801        */
     1315    15802        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:59   
     1316    15803    1   DU_SET_DF_FID: PROC (DF_ENTERED,
     1317    15804    1              HELD_DF,
     1318    15805    1              HELD_DF_LGTH,
     1319    15806    1              DF_FID,
     1320    15807    1              DF_FID_LGTH) ALTRET ;
     1321    15808
     1322    15809    2      DCL DF_ENTERED                 BIT (1) CALIGNED ;
     1323    15810    2      DCL HELD_DF                    CHAR (40) CALIGNED ;
     1324    15811    2      DCL HELD_DF_LGTH               UBIN WORD ALIGNED ;
     1325    15812    2      DCL DF_FID                     CHAR (40) CALIGNED ;
     1326    15813    2      DCL DF_FID_LGTH                UBIN WORD ALIGNED ;
     1327    15814
     1328    15815        /* Code */
     1329    15816
     1330    15817    2      IF DF_ENTERED
     1331    15818    2      THEN CALL DU_DF_FROM_HOLD ALTRET (ERROR) ;
     1332    15819    2      ELSE IF DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.AMR#
     1333    15820    2         THEN CALL DU_DF_FROM_MERGE ALTRET (ERROR) ;
     1334    15821    3         ELSE DO ;
     1335    15822                      /* Default Deckfile FID is used. */
     1336    15823    3                 DF_FID = %DEFAULT_DECKFILE ;
     1337    15824    3                 DF_FID_LGTH = %DEFAULT_DECKFILE_LGTH ;
     1338    15825    3              END /* ELSE */ ;
     1339    15826    2      RETURN ;
     1340    15827
     1341    15828    2   ERROR:
     1342    15829    2      ALTRETURN ;
     1343    15830
     1344    15831        /* END DU_SET_DF_FID */
     1345    15832        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:60   
     1346    15833        /*I*  NAME:        DU_DF_FROM_HOLD
     1347    15834              AUTHOR:      Scott S. Sheppard
     1348    15835              PURPOSE:     Sets Deckfile File Id from Hold Area
     1349    15836              INTERFACE:   DU_USER_WRITE
     1350    15837                           DU_SET_FULL_FID
     1351    15838                           DU_SET_FID - Performs M$FID
     1352    15839              INPUT:       HELD_DF         - FID entered as part of the DEER
     1353    15840                                             command
     1354    15841                           HELD_DF_LGTH    - number of caharcters in FID
     1355    15842              OUTPUT:      DF_FID       - name.account field for deckfile
     1356    15843                           DF_FID_LGTH
     1357    15844              DESCRIPTION: This procedure sets the  DF  descriptor field
     1358    15845                           using the file identifier saved from the DEER
     1359    15846                           command.   This procedure also ensures that a
     1360    15847                           tape identifier is not used for deckfiles.
     1361    15848        */
     1362    15849        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:61   
     1363    15850    2   DU_DF_FROM_HOLD: PROC ALTRET ;
     1364    15851
     1365    15852        /* Code */
     1366    15853
     1367    15854    3      CALL DU_SET_FID (HELD_DF) ALTRET (FID_ERROR) ;
     1368    15855    4      DO CASE (FID_ASN) ;
     1369    15856    4         CASE (%FILE#) ;
     1370    15857    4            CALL DU_SET_FULL_FID (HELD_DF,
     1371    15858    4                    HELD_DF_LGTH,
     1372    15859    4                    DF_FID,
     1373    15860    4                    DF_FID_LGTH) ;
     1374    15861    4         CASE (ELSE) ;
     1375    15862    4            DF_FID = HELD_DF ;
     1376    15863    4            DF_FID_LGTH = HELD_DF_LGTH ;
     1377    15864    4            CALL DU_USER_WRITE (%E$DDFH_ASN) ;
     1378    15865    4            ALTRETURN ;
     1379    15866    4      END /* CASE */ ;
     1380    15867    3      RETURN ;
     1381    15868
     1382    15869    3   FID_ERROR:
     1383    15870    3      DF_FID = HELD_DF ;
     1384    15871    3      DF_FID_LGTH = HELD_DF_LGTH ;
     1385    15872    3      CALL DU_USER_WRITE (%E$DDFH_FID_ERROR) ;
     1386    15873    3      ALTRETURN ;
     1387    15874
     1388    15875    3   END DU_DF_FROM_HOLD ;
     1389    15876        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:62   
     1390    15877        /*I*  NAME:        DU_DF_FROM_MERGE
     1391    15878              AUTHOR:      Scott S. Sheppard
     1392    15879              PURPOSE:     Sets Name.Account for a File Identifier
     1393    15880              INTERFACE:   DU_USER_WRITE
     1394    15881                           DU_DF_FROM_MR
     1395    15882              INPUT:       F$DCB.ASN#
     1396    15883                           F$DCB.RES#
     1397    15884              OUTPUT:      DF_FID
     1398    15885                           DF_FID_LGTH
     1399    15886              DESCRIPTION: This procedure checks the ASN for the M$DECKFILE
     1400    15887                           dcb and calls a routine to set the fid.
     1401    15888        */
     1402    15889
     1403    15890    2   DU_DF_FROM_MERGE: PROC ALTRET ;
     1404    15891
     1405    15892        /* Code */
     1406    15893
     1407    15894    4      DO CASE (DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.ASN#) ;
     1408    15895    4         CASE (%FILE#) ;
     1409    15896    4            CALL DU_UNFID_DCB (DCBNUM (M$DECKFILE), DF_FID, DF_FID_LGTH) ALTRET (ERROR)
             15896                     ;
     1410    15897    4         CASE (ELSE) ;
     1411    15898    4            CALL DU_USER_WRITE (%E$DDFM_ASN) ;
     1412    15899    4   ERROR:
     1413    15900    4            ALTRETURN ;
     1414    15901    4      END /* CASE */ ;
     1415    15902    3      RETURN ;
     1416    15903
     1417    15904    3   END DU_DF_FROM_MERGE;
     1418    15905    2   END DU_SET_DF_FID;
     1419    15906        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:63   
     1420    15907        /*I*  NAME:        DU_OPEN_DF
     1421    15908              AUTHOR:      Scott S. Sheppard
     1422    15909              PURPOSE:     Opens the deckfile for update
     1423    15910              INTERFACE:   DU_USER_WRITE
     1424    15911                           DU_PRINTER_WRITE
     1425    15912                           DU_SIGNAL_OPEN_ERROR
     1426    15913                           DU_SYSTEM_ERRMSG
     1427    15914                           DU_SET_DF_NAME_ACCOUNT
     1428    15915                           M$OPEN
     1429    15916                           DCBNUM
     1430    15917                           DCBADDR
     1431    15918              INPUT:       DF_ENTERED - Name and Account entered from user
     1432    15919                           DF_FID - NAME.ACCOUNT of deckfile
     1433    15920                           DF_OPEN_TYPE - Access deckfile open flag
     1434    15921                           DF_REPORT_ERROR - should errors be reported if
     1435    15922                                             the open of the deckfile fails
     1436    15923                           DF_NO_EXIST  - Set if creation of a deckfile
     1437    15924                                          which should not previously exist
     1438    15925                           F$DCB.FCD#   - Deckfile currently open flag
     1439    15926                           F$DCB.AMR#   - Set if !SET command was used
     1440    15927              OUTPUT:      M$DECKFILE DCB opened
     1441    15928              DESCRIPTION: This procedure opens the deckfile based on the
     1442    15929                           parameters as: FUN = CREATE   or  FUN = UPDATE
     1443    15930                                       EXIST = NEWFILE  or  EXIST = ERROR
     1444    15931                           The open also accesses the deckfile  specified
     1445    15932                           by  name and acct  if these items were present
     1446    15933                           in the deckfile editor command.
     1447    15934        */
     1448    15935        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:64   
     1449    15936    1   DU_OPEN_DF: PROC (DF_ENTERED,
     1450    15937    1              DF_FID,
     1451    15938    1              DF_FID_LGTH,
     1452    15939    1              DF_OPEN_TYPE,
     1453    15940    1              DF_REPORT_ERROR,
     1454    15941    1              DF_NO_EXIST) ALTRET ;
     1455    15942
     1456    15943    2      DCL DF_ENTERED                 BIT (1) CALIGNED ;
     1457    15944    2      DCL DF_FID                     CHAR (40) CALIGNED ;
     1458    15945    2      DCL DF_FID_LGTH                UBIN WORD ALIGNED ;
     1459    15946    2      DCL DF_OPEN_TYPE               UBIN WORD ALIGNED ;
     1460    15947    2      DCL DF_REPORT_ERROR            BIT (1) CALIGNED ;
     1461    15948    2      DCL DF_NO_EXIST                BIT (1) CALIGNED ;
     1462    15949           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:65   
     1463    15950        /* Function Parameter Tables */
     1464    15951
     1465    15952           %FPT_OPEN (FPTN     = CREATE_OVER_FID,
     1466    15953                      ACCT     = FID_ACCT,
     1467    15954                      ACS      = DIRECT,
     1468    15955                      ASN      = FILE,
     1469    15956                      BUPM     = YES,
     1470    15957                      DCB      = M$DECKFILE,
     1471    15958                      DISP     = NAMED,
     1472    15959                      EXIST    = NEWFILE,
     1473    15960                      EXPIRE   = NEVER,
     1474    15961                      FUN      = CREATE,
     1475    15962                      IXTNSIZE = 30,
     1476    15963                      NAME     = FID_NAME,
     1477    15964                      ORG      = KEYED,
     1478    15965                      PASS     = FID_PASS,
     1479    15966                      SHARE    = IN,
     1480    15967                      SN       = FID_SN,
     1481    15968                      TYPE     = 'DB',
     1482    15969                      WSN      = FID_WSN,
     1483    15970                      XTNSIZE  = 30) ;
     1484    16079
     1485    16080           %FPT_OPEN (FPTN     = CREATE_NEW_FID,
     1486    16081                      ACCT     = FID_ACCT,
     1487    16082                      ACS      = DIRECT,
     1488    16083                      ASN      = FILE,
     1489    16084                      BUPM     = YES,
     1490    16085                      DCB      = M$DECKFILE,
     1491    16086                      DISP     = NAMED,
     1492    16087                      EXIST    = ERROR,
     1493    16088                      EXPIRE   = NEVER,
     1494    16089                      FUN      = CREATE,
     1495    16090                      IXTNSIZE = 30,
     1496    16091                      NAME     = FID_NAME,
     1497    16092                      ORG      = KEYED,
     1498    16093                      PASS     = FID_PASS,
     1499    16094                      SHARE    = IN,
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:66   
     1500    16095                      SN       = FID_SN,
     1501    16096                      TYPE     = 'DB',
     1502    16097                      WSN      = FID_WSN,
     1503    16098                      XTNSIZE  = 30) ;
     1504    16207           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:67   
     1505    16208           %FPT_OPEN (FPTN     = UPDATE_FID,
     1506    16209                      ACCT     = FID_ACCT,
     1507    16210                      ACS      = DIRECT,
     1508    16211                      ASN      = FILE,
     1509    16212                      BUPM     = YES,
     1510    16213                      DCB      = M$DECKFILE,
     1511    16214                      EXIST    = OLDFILE,
     1512    16215                      EXPIRE   = NEVER,
     1513    16216                      FUN      = UPDATE,
     1514    16217                      NAME     = FID_NAME,
     1515    16218                      PASS     = FID_PASS,
     1516    16219                      SHARE    = IN,
     1517    16220                      SN       = FID_SN,
     1518    16221                      WSN      = FID_WSN);
     1519    16330
     1520    16331           %FPT_OPEN (FPTN     = READ_FID,
     1521    16332                      ACCT     = FID_ACCT,
     1522    16333                      ACS      = DIRECT,
     1523    16334                      ASN      = FILE,
     1524    16335                      DCB      = M$DECKFILE,
     1525    16336                      EXIST    = OLDFILE,
     1526    16337                      FUN      = IN,
     1527    16338                      NAME     = FID_NAME,
     1528    16339                      PASS     = FID_PASS,
     1529    16340                      SHARE    = IN,
     1530    16341                      SN       = FID_SN,
     1531    16342                      WSN      = FID_WSN);
     1532    16451
     1533    16452           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:68   
     1534    16453        /* Code */
     1535    16454
     1536    16455    2      IF DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FCD#
     1537    16456    3      THEN DO ;
     1538    16457    3              CALL DU_USER_WRITE (%E$DOD_ALREADY_OPEN) ;
     1539    16458    3              ALTRETURN ;
     1540    16459    3           END /* THEN */ ;
     1541    16460    3      ELSE DO ;
     1542    16461    3              CALL DU_SET_FID (DF_FID) ALTRET (ERROR);
     1543    16462    4              DO CASE (DF_OPEN_TYPE) ;
     1544    16463    4                 CASE (%CREATE_FILE) ;
     1545    16464    4                    IF DF_ENTERED
     1546    16465    4                    THEN IF DF_NO_EXIST
     1547    16466    4                       THEN CALL M$OPEN (CREATE_NEW_FID) ALTRET (ERROR) ;
     1548    16467    4                       ELSE CALL M$OPEN (CREATE_OVER_FID) ALTRET (ERROR) ;
     1549    16468    4                    ELSE CALL M$OPEN (CREATE_OVER_FID) ALTRET (ERROR) ;
     1550    16469    4                 CASE (%UPDATE_FILE) ;
     1551    16470    4                    CALL M$OPEN (UPDATE_FID) ALTRET (ERROR) ;
     1552    16471    4                    IF (DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FFLG.UPD#)
     1553    16472    4                            & (DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FFLG.WNEW#)
     1554    16473    4                    THEN /* Update Open Successful. */ ;
     1555    16474    5                    ELSE DO ;
     1556    16475    5                            CALL DU_USER_WRITE (%E$DOD_CANT_ACCESS) ;
     1557    16476    5                            ALTRETURN ;
     1558    16477    5                         END /* ELSE */ ;
     1559    16478    4                 CASE (%READ_FILE) ;
     1560    16479    4                    CALL M$OPEN (READ_FID) ALTRET (ERROR) ;
     1561    16480    4                 CASE (ELSE) ;
     1562    16481    4   ERROR:
     1563    16482    4                    CALL DU_SIGNAL_OPEN_ERROR ;
     1564    16483    4                    ALTRETURN ;
     1565    16484    4              END /* CASE */ ;
     1566    16485    3              RETURN ;
     1567    16486    3           END /* ELSE */ ;
     1568    16487
     1569    16488        /* END DU_OPEN_DF */
     1570    16489        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:69   
     1571    16490        /*I*  NAME:        DU_SIGNAL_OPEN_ERROR
     1572    16491              AUTHOR:      Scott S. Sheppard
     1573    16492              PURPOSE:     Informs of Deckfile Open Failure
     1574    16493              INTERFACE:   DU_USER_WRITE
     1575    16494                           DU_SYSTEM_ERRMSG
     1576    16495              INPUT:       B$ALT.ERR.ERR#
     1577    16496                           DF_REPORT_ERROR
     1578    16497              OUTPUT:      No system data altered.
     1579    16498              DESCRIPTION: This procedure prints the appropriate error message
     1580    16499                           when a deckfile open fails.
     1581    16500        */
     1582    16501
     1583    16502    2   DU_SIGNAL_OPEN_ERROR: PROC ;
     1584    16503
     1585    16504        /* Code */
     1586    16505
     1587    16506    4      DO CASE (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR#) ;
     1588    16507    4         CASE (%E$CREATERR) ;
     1589    16508    4            CALL DU_USER_WRITE (%E$DOD_CANT_OVERWRITE) ;
     1590    16509    4         CASE (%E$CLSREL) ;
     1591    16510    4            CALL DU_USER_WRITE (%E$DOD_CANT_ACCESS) ;
     1592    16511    4         CASE (%E$NOFILE) ;
     1593    16512    4            IF DF_REPORT_ERROR
     1594    16513    4            THEN CALL DU_USER_WRITE (%E$DOD_NO_FILE) ;
     1595    16514    4            ELSE /* checking for a deckfile which didn't exist. */ ;
     1596    16515    4         CASE (%E$DCBOPEN) ;
     1597    16516    4            CALL DU_USER_WRITE (%E$DOD_ALREADY_OPEN) ;
     1598    16517    4         CASE (ELSE) ;
     1599    16518    4            CALL DU_USER_WRITE (%E$DOD_OPEN_ERROR) ;
     1600    16519    4            CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1601    16520    4      END /* CASE */ ;
     1602    16521    3      RETURN ;
     1603    16522
     1604    16523    3   END DU_SIGNAL_OPEN_ERROR ;
     1605    16524    2   END DU_OPEN_DF ;
     1606    16525        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:70   
     1607    16526        /*I*  NAME:        DU_CLOSE_DF
     1608    16527              AUTHOR:      Scott S. Sheppard
     1609    16528              PURPOSE:     Closes the deckfile
     1610    16529              INTERFACE:   M$CLOSE Monitor Service
     1611    16530                           DU_USER_WRITE
     1612    16531                           DU_SYSTEM_ERRMSG
     1613    16532                           DCBADDR function
     1614    16533                           DCBNUM function
     1615    16534              INPUT:       F$DCB.FCD# - Deckfile Open flag
     1616    16535                           DF_CLOSE_TYPE - save or discard deckfile
     1617    16536              OUTPUT:      M$DECKFILE DCB closed
     1618    16537              DESCRIPTION: This   procedure   closes   the  deckfile  and
     1619    16538                           saves or discards its contents as specified by
     1620    16539                           the close type parameter.
     1621    16540        */
     1622    16541        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:71   
     1623    16542    1   DU_CLOSE_DF: PROC (DF_CLOSE_TYPE) ALTRET ;
     1624    16543
     1625    16544    2      DCL DF_CLOSE_TYPE              UBIN WORD ALIGNED ;
     1626    16545           %FPT_CLOSE (FPTN = SAVE_DECKFILE,
     1627    16546                       DCB  = M$DECKFILE,
     1628    16547                       DISP = SAVE);
     1629    16589           %FPT_CLOSE (FPTN = DISCARD_DECKFILE,
     1630    16590                       DCB  = M$DECKFILE,
     1631    16591                       DISP = RELEASE,
     1632    16592                       RELG = YES) ;
     1633    16634
     1634    16635        /* Code */
     1635    16636
     1636    16637    2      IF DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FCD#
     1637    16638    3      THEN DO CASE (DF_CLOSE_TYPE) ;
     1638    16639    3              CASE (%SAVE_FILE) ;
     1639    16640    3                 CALL M$CLOSE (SAVE_DECKFILE) ALTRET (CLOSE_ERROR) ;
     1640    16641    3              CASE (%DISCARD_FILE) ;
     1641    16642    3                 CALL M$CLOSE (DISCARD_DECKFILE) ALTRET (CLOSE_ERROR) ;
     1642    16643    3              CASE (ELSE) ;
     1643    16644    3   CLOSE_ERROR:
     1644    16645    3                 CALL DU_USER_WRITE (%E$DCD_CLOSE_ERROR) ;
     1645    16646    3                 CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1646    16647    3                 ALTRETURN ;
     1647    16648    3           END /* CASE */ ;
     1648    16649    2      ELSE /* Deckfile Not Open */ ;
     1649    16650    2      RETURN ;
     1650    16651
     1651    16652    2   END DU_CLOSE_DF ;
     1652    16653        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:72   
     1653    16654        /*I*  NAME:        DU_SET_FULL_FID
     1654    16655              AUTHOR:      Scott S. Sheppard
     1655    16656              PURPOSE:     Sets Name.Account for a File Identifier
     1656    16657              INTERFACE:   INDEX Function
     1657    16658                           CONCAT function
     1658    16659                           MINIMUM function
     1659    16660              INPUT:       ENTERED_FID    - FID entered as part of the DEER
     1660    16661                                            command
     1661    16662                           ENTERED_LGTH   - number of characters entered
     1662    16663              OUTPUT:      TARGET_FID     - output parameter for full fid
     1663    16664                           TARGET_LGTH    - length of the full fid
     1664    16665              DESCRIPTION: This procedure assigns a target string a full file
     1665    16666                           identifier. This procedure appends the .account to
     1666    16667                           the fid if it was not present for a non-star file.
     1667    16668        */
     1668    16669
     1669    16670    1   DU_SET_FULL_FID: PROC (ENTERED_FID, ENTERED_LGTH, TARGET_FID, TARGET_LGTH) ;
     1670    16671
     1671    16672    2      DCL ENTERED_FID                CHAR (40) CALIGNED ;
     1672    16673    2      DCL ENTERED_LGTH               UBIN WORD ALIGNED ;
     1673    16674    2      DCL TARGET_FID                 CHAR (40) CALIGNED ;
     1674    16675    2      DCL TARGET_LGTH                UBIN WORD ALIGNED ;
     1675    16676    2      DCL DOT_INX                    UBIN WORD ALIGNED ;
     1676    16677    2      DCL ACCT_LGTH                  UBIN WORD ALIGNED ;
     1677    16678           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:73   
     1678    16679        /* Code */
     1679    16680
     1680    16681    2      CALL INDEX (DOT_INX, '.', ENTERED_FID, 0) ;
     1681    16682    2      IF SUBSTR (ENTERED_FID, 0, 1) = '*'
     1682    16683    3      THEN DO ;
     1683    16684    3              TARGET_LGTH = MINIMUM (ENTERED_LGTH, DOT_INX) ;
     1684    16685    3              TARGET_FID = SUBSTR (ENTERED_FID, 0, TARGET_LGTH) ;
     1685    16686    3           END /* THEN */ ;
     1686    16687    2      ELSE IF DOT_INX < ENTERED_LGTH - 1
     1687    16688    3         THEN DO ;
     1688    16689    3                 TARGET_FID = ENTERED_FID ;
     1689    16690    3                 TARGET_LGTH = ENTERED_LGTH ;
     1690    16691    3              END /* THEN */ ;
     1691    16692    2         ELSE IF DOT_INX = ENTERED_LGTH - 1
     1692    16693    3            THEN DO ;
     1693    16694    3                    CALL CONCAT (TARGET_FID,
     1694    16695    3                            SUBSTR (ENTERED_FID, 0, ENTERED_LGTH),
     1695    16696    3                            B$JIT.FACCN) ;
     1696    16697    3                    CALL INDEX (ACCT_LGTH, ' ', B$JIT.FACCN, 0) ;
     1697    16698    3                    TARGET_LGTH = ENTERED_LGTH + ACCT_LGTH ;
     1698    16699    3                 END /* THEN */ ;
     1699    16700    3            ELSE DO ;
     1700    16701    3                    CALL CONCAT (TARGET_FID,
     1701    16702    3                            SUBSTR (ENTERED_FID, 0, ENTERED_LGTH),
     1702    16703    3                            '.',
     1703    16704    3                            B$JIT.FACCN) ;
     1704    16705    3                    CALL INDEX (ACCT_LGTH, ' ', B$JIT.FACCN, 0) ;
     1705    16706    3                    TARGET_LGTH = ENTERED_LGTH + 1 + ACCT_LGTH ;
     1706    16707    3                 END /* ELSE */ ;
     1707    16708    2      RETURN ;
     1708    16709
     1709    16710    2   END DU_SET_FULL_FID ;
     1710    16711        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:74   
     1711    16712        /*I* NAME:         DU_SET_FID
     1712    16713             AUTHOR:       Kathy Larkin
     1713    16714             PURPOSE:      Converts FID to DCB file id for M$OPEN
     1714    16715             INTERFACE:    M$FID Monitor Service
     1715    16716                           DU_USER_WRITE - error message routine
     1716    16717                           DU_SYSTEM_ERRMSG - system error message routine
     1717    16718             PARAMETERS:   TEXT_FID - text string of fid
     1718    16719             DATA:         M$FID Params (global to TOU$DU)
     1719    16720                            - FID_RESULTS  - FID_PASS
     1720    16721                            - FID_ACCT     - FID_RES
     1721    16722                            - FID_ASN      - FID_SN
     1722    16723                            - FID_NAME     - FID_WSN
     1723    16724             DESCRIPTION:  Sets  up global  M$OPEN parameters  by calling
     1724    16725                           M$FID.  Gets account from JIT if was not given.
     1725    16726        */
     1726    16727
     1727    16728    1   DU_SET_FID: PROC (TEXT_FID) ALTRET;
     1728    16729
     1729    16730    2      DCL TEXT_FID    CHAR (40) CALIGNED;
     1730    16731
     1731    16732        /* Code */
     1732    16733
     1733    16734    2      FID_INFO.TEXTFID_ = VECTOR (TEXT_FID);
     1734    16735    2      CALL M$FID (FID_INFO) ALTRET (FID_ERROR);
     1735    16736    2      IF FID_RESULTS.ACCT
     1736    16737    2      THEN /* Account field is available */;
     1737    16738    2      ELSE FID_ACCT.ACCT# = B$JIT.FACCN /* Get account from JIT */;
     1738    16739    2      RETURN;
     1739    16740
     1740    16741    2   FID_ERROR:
     1741    16742    2      CALL DU_USER_WRITE (%E$DDFH_FID_ERROR);
     1742    16743    2      CALL DU_SYSTEM_ERRMSG (%FALSE);
     1743    16744    2      ALTRETURN;
     1744    16745
     1745    16746    2   END DU_SET_FID;
     1746    16747        %EJECT;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:75   
     1747    16748        /*I* NAME:         DU_UNFID_DCB
     1748    16749             AUTHOR:       Kathy Larkin
     1749    16750             PURPOSE:      Converts DCB file id to text string
     1750    16751             INTERFACE:    M$UNFID Monitor Service
     1751    16752                           DU_SYSTEM_ERRMSG - prints M$UNFID altret error message
     1752    16753             PARAMETERS:   DCB_NUM - number of the DCB to UNFID - input
     1753    16754                           STRING - fid text string - output
     1754    16755                           LENGTH - length of returned string - output
     1755    16756             DESCRIPTION:  Converts DCB fid to  text string.  Used if DCB
     1756    16757                           was !SET.
     1757    16758        */
     1758    16759    1   DU_UNFID_DCB: PROC (DCB_NUM, STRING, LENGTH) ALTRET;
     1759    16760
     1760    16761    2      DCL DCB_NUM     UBIN WORD ALIGNED;
     1761    16762    2      DCL STRING      CHAR (40) CALIGNED;
     1762    16763    2      DCL LENGTH      UBIN WORD ALIGNED;
     1763    16764           %FPT_UNFID      (FPTN  = UNFID_DCB);
     1764    16782
     1765    16783        /* Code */
     1766    16784
     1767    16785    2      UNFID_DCB.TEXTFID_ = VECTOR (STRING);
     1768    16786    2      UNFID_DCB.LEN_ = VECTOR (LENGTH);
     1769    16787    2      UNFID_DCB.V.DCB# = DCB_NUM;
     1770    16788    2      CALL M$UNFID (UNFID_DCB) ALTRET (UNFID_ERROR);
     1771    16789    2      RETURN;
     1772    16790
     1773    16791    2   UNFID_ERROR:
     1774    16792    2      CALL DU_SYSTEM_ERRMSG (%FALSE);
     1775    16793    2      ALTRETURN;
     1776    16794    2   END DU_UNFID_DCB;
     1777    16795        %EJECT;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:76   
     1778    16796        /*I*  NAME:        DU_USER_READ
     1779    16797              AUTHOR:      Scott S. Sheppard
     1780    16798              PURPOSE:     Obtains A User Response
     1781    16799              INTERFACE:   DU_USER_WRITE
     1782    16800                           DU_SYSTEM_ERRMSG
     1783    16801                           M$READ monitor service
     1784    16802                           DCBNUM function
     1785    16803                           DCBADDR function
     1786    16804                           VECTOR Function
     1787    16805              INPUT:       LGTH - number of characters to expect
     1788    16806              OUTPUT:      RESPONSE - user entered information
     1789    16807                           LGTH - number of characters in the user response
     1790    16808              DESCRIPTION: This procedure accepts information from the
     1791    16809                           DEER user.
     1792    16810        */
     1793    16811        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:77   
     1794    16812    1   DU_USER_READ: PROC (RESPONSE, LGTH) ALTRET ;
     1795    16813
     1796    16814    2      DCL RESPONSE                   CHAR (40) CALIGNED ;
     1797    16815    2      DCL LGTH                       UBIN WORD ALIGNED ;
     1798    16816           %FPT_READ (FPTN = FROM_USER,
     1799    16817                      DCB  = M$SI) ;
     1800    16856
     1801    16857        /* Code */
     1802    16858
     1803    16859    2      RESPONSE = ' ' ;
     1804    16860    2      FROM_USER.BUF_ = VECTOR (RESPONSE) ;
     1805    16861    2      FROM_USER.BUF_.BOUND = LGTH - 1 ;
     1806    16862    2      CALL M$READ (FROM_USER) ALTRET (USER_READ_ERROR) ;
     1807    16863    2      LGTH = DCBADDR (DCBNUM (M$SI)) -> F$DCB.ARS# ;
     1808    16864    2      RETURN ;
     1809    16865
     1810    16866    2   USER_READ_ERROR:
     1811    16867    2      CALL DU_USER_WRITE (%E$DUR_READ) ;
     1812    16868    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1813    16869    2      ALTRETURN ;
     1814    16870
     1815    16871    2   END DU_USER_READ ;
     1816    16872        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:78   
     1817    16873        /*I*  NAME:        DU_USER_WRITE
     1818    16874              AUTHOR:      Scott S. Sheppard
     1819    16875              PURPOSE:     Output to user
     1820    16876              INTERFACE:   M$WRITE Monitor Service
     1821    16877                           DU_FETCH_TEXT
     1822    16878                           DU_SYSTEM_ERRMSG
     1823    16879                           VECTOR Function
     1824    16880              INPUT:       MSG_CODE        - Coded message number
     1825    16881                           DUP.NUM_LINES   - Number of lines of text
     1826    16882                           DUP.MSG_V       - Vector to message buffer
     1827    16883              OUTPUT:      Text lines written to M$DO.
     1828    16884              DESCRIPTION: This procedure writes a message to the M$DO data
     1829    16885                           control block destination.      The text for the
     1830    16886                           message is obtained by a call to  DU_FETCH_TEXT.
     1831    16887                           The  text  is  separated into  single lines  and
     1832    16888                           written  1 line at a time with calls to M$WRITE.
     1833    16889        */
     1834    16890        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:79   
     1835    16891    1   DU_USER_WRITE: PROC (MSG_CODE) ALTRET ;
     1836    16892
     1837    16893    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     1838    16894    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     1839    16895    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     1840    16896    2                      BASED (DUP.MSG_V.PTR$) ;
     1841    16897           %FPT_WRITE (FPTN = TO_USER,
     1842    16898                       DCB  = M$DO) ;
     1843    16929
     1844    16930        /* Code */
     1845    16931
     1846    16932           /* Fetch text from Message Data Base */
     1847    16933    2      CALL DU_FETCH_TEXT (MSG_CODE) ;
     1848    16934
     1849    16935           /* Loop through and print one line at a time */
     1850    16936    3      DO LINE_NUMBER = 0 TO DUP.NUM_LINES-1 ;
     1851    16937    3         TO_USER.BUF_ = VECTOR (SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH)) ;
     1852    16938    3         CALL M$WRITE (TO_USER) ALTRET (WRITE_ERROR) ;
     1853    16939    3      END /* DO */ ;
     1854    16940    2      RETURN ;
     1855    16941
     1856    16942    2   WRITE_ERROR:
     1857    16943    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1858    16944    2      ALTRETURN ;
     1859    16945
     1860    16946    2   END DU_USER_WRITE ;
     1861    16947        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:80   
     1862    16948        /*I*  NAME:        DU_PRINTER_WRITE
     1863    16949              AUTHOR:      Scott S. Sheppard
     1864    16950              PURPOSE:     Routes output to the Edit Listing
     1865    16951              INTERFACE:   M$WRITE Monitor Service
     1866    16952                           DU_HEADER_WRITE  DU_FETCH_TEXT  DU_SYSTEM_ERRMSG
     1867    16953              INPUT:       MSG_CODE   - Coded message number
     1868    16954                           DUP.LINE_VFC - vertical format control
     1869    16955                           DUP.LINE#  - current line number of current page
     1870    16956                           DUP.PAGE#  - current page number
     1871    16957                           DUP.MSG_V  - vector to array of text lines to write
     1872    16958                           DUP.NUM_LINES  - number of text lines to write
     1873    16959              OUTPUT:      Text lines written to M$LO.
     1874    16960              DESCRIPTION: This procedure writes a message to the  M$LO  data control
     1875    16961                           destination. The text of the message is obtained by a call
     1876    16962                           to DU_FETCH_TEXT.  If the text will not fit on the current
     1877    16963                           page,  DU_HEADER_WRITE  is  called  and  the  lost text is
     1878    16964                           refetched. The message text is printed one line at a time.
     1879    16965        */
     1880    16966
     1881    16967    1   DU_PRINTER_WRITE: PROC (MSG_CODE) ALTRET ;
     1882    16968
     1883    16969    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     1884    16970    2      DCL 1 PL   STATIC CALIGNED,
     1885    16971    2            2 CARRIAGE_CONTROL       CHAR (1)  UNAL,
     1886    16972    2            2 TEXT_LINE_             CHAR (%MAX_LGTH) UNAL ;
     1887    16973    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     1888    16974    2      DCL SKIPPED     UBIN WORD ALIGNED ;
     1889    16975    2      DCL LAST_LINE   UBIN WORD ALIGNED ;
     1890    16976    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     1891    16977    2                      BASED (DUP.MSG_V.PTR$) ;
     1892    16978           %FPT_WRITE (FPTN = TO_PRINTER,
     1893    16979                       DCB  = M$LO,
     1894    16980                       VFC  = YES,
     1895    16981                       BUF  = PL) ;
     1896    17012           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:81   
     1897    17013        /* Code */
     1898    17014
     1899    17015           /* Fetch text first to see if it fits on the current page */
     1900    17016    2      CALL DU_FETCH_TEXT (MSG_CODE) ;
     1901    17017    2      IF DUP.LINE_VFC = %SKIP_WRITE
     1902    17018    2      THEN SKIPPED = 1 ;
     1903    17019    2      ELSE SKIPPED = 0 ;
     1904    17020    2      IF DUP.FORCE_NEW_PAGE
     1905    17021    3      THEN DO ;
     1906    17022    3              CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;
     1907    17023    3              CALL DU_FETCH_TEXT (MSG_CODE) ;
     1908    17024    3              DUP.BOTTOM_LINE# = DCBADDR (DCBNUM (M$LO)) -> F$DCB.LINES# ;
     1909    17025    3           END /* THEN */ ;
     1910    17026    3      ELSE DO ;
     1911    17027    3              LAST_LINE = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;
     1912    17028    3              IF LAST_LINE > DUP.BOTTOM_LINE# & DUP.BOTTOM_LINE# > 0
     1913    17029    4              THEN DO ;
     1914    17030    4                      CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;
     1915    17031    4                      CALL DU_FETCH_TEXT (MSG_CODE) ;
     1916    17032    4                   END /* THEN */ ;
     1917    17033    3              ELSE /* Text will fit on this page. */ ;
     1918    17034    3           END /* ELSE */ ;
     1919    17035           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:82   
     1920    17036           /* Write text fetched from message data base. */
     1921    17037    2      PL.CARRIAGE_CONTROL = DUP.LINE_VFC ;
     1922    17038    2      PL.TEXT_LINE_ = SUBSTR (MSG_B(0), 2, %MAX_LGTH) ;
     1923    17039    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;
     1924    17040    2      PL.CARRIAGE_CONTROL = %NEXT_WRITE ;
     1925    17041    3      DO LINE_NUMBER = 1 TO DUP.NUM_LINES-1 ;
     1926    17042    3         PL.TEXT_LINE_ = SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH) ;
     1927    17043    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;
     1928    17044    3      END /* DO */ ;
     1929    17045    2      DUP.CURRENT_LINE# = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;
     1930    17046    2      RETURN ;
     1931    17047
     1932    17048    2   PRINTER_WRITE_ERROR:
     1933    17049    2      CALL DU_USER_WRITE (%E$DPW_WRITE) ;
     1934    17050    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     1935    17051    2   ERROR:
     1936    17052    2      ALTRETURN ;
     1937    17053
     1938    17054    2   END DU_PRINTER_WRITE ;
     1939    17055        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:83   
     1940    17056        /*I*  NAME:        DU_PRINTER_OVERWRITE
     1941    17057              AUTHOR:      Scott S. Sheppard
     1942    17058              PURPOSE:     Routes output to the Edit Listing
     1943    17059              INTERFACE:   M$WRITE Monitor Service
     1944    17060                           DU_HEADER_WRITE  DU_FETCH_TEXT  DU_SYSTEM_ERRMSG
     1945    17061              INPUT:       MSG_CODE   - Coded message number
     1946    17062                           DUP.LINE_VFC - vertical format control
     1947    17063                           DUP.LINE#  - current line number of current page
     1948    17064                           DUP.MSG_V  - vector to array of text lines to write
     1949    17065                           DUP.NUM_LINES  - number of text lines to write
     1950    17066              OUTPUT:      Text lines written to M$LO.
     1951    17067              DESCRIPTION: This procedure writes a message to the  M$LO  data control
     1952    17068                           destination. The text of the message is obtained by a call
     1953    17069                           to DU_FETCH_TEXT.  If the text will not fit on the current
     1954    17070                           page,  DU_HEADER_WRITE  is  called  and  the  lost text is
     1955    17071                           refetched. The message text is printed one line at a time.
     1956    17072        */
     1957    17073
     1958    17074    1   DU_PRINTER_OVERWRITE: PROC (MSG_CODE) ALTRET ;
     1959    17075
     1960    17076    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     1961    17077    2      DCL 1 PL   STATIC CALIGNED,
     1962    17078    2            2 CARRIAGE_CONTROL       CHAR (1)  UNAL,
     1963    17079    2            2 TEXT_LINE_             CHAR (%MAX_LGTH) UNAL ;
     1964    17080    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     1965    17081    2      DCL SKIPPED     UBIN WORD ALIGNED ;
     1966    17082    2      DCL LAST_LINE   UBIN WORD ALIGNED ;
     1967    17083    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     1968    17084    2                      BASED (DUP.MSG_V.PTR$) ;
     1969    17085           %FPT_WRITE (FPTN = TO_PRINTER,
     1970    17086                       DCB  = M$LO,
     1971    17087                       VFC  = YES,
     1972    17088                       BUF  = PL) ;
     1973    17119           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:84   
     1974    17120        /* Code */
     1975    17121
     1976    17122           /* Fetch text first to see if it fits on the current page */
     1977    17123    2      CALL DU_FETCH_TEXT (MSG_CODE) ;
     1978    17124    2      IF DUP.LINE_VFC = %SKIP_WRITE
     1979    17125    2      THEN SKIPPED = 1 ;
     1980    17126    2      ELSE SKIPPED = 0 ;
     1981    17127    2      IF DUP.FORCE_NEW_PAGE
     1982    17128    3      THEN DO ;
     1983    17129    3              CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;
     1984    17130    3              CALL DU_FETCH_TEXT (MSG_CODE) ;
     1985    17131    3              DUP.BOTTOM_LINE# = DCBADDR (DCBNUM (M$LO)) -> F$DCB.LINES# ;
     1986    17132    3           END /* THEN */ ;
     1987    17133    3      ELSE DO ;
     1988    17134    3              LAST_LINE = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;
     1989    17135    3              IF LAST_LINE > DUP.BOTTOM_LINE# & DUP.BOTTOM_LINE# > 0
     1990    17136    4              THEN DO ;
     1991    17137    4                      CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;
     1992    17138    4                      CALL DU_FETCH_TEXT (MSG_CODE) ;
     1993    17139    4                   END /* THEN */ ;
     1994    17140    3              ELSE /* Text will fit on this page. */ ;
     1995    17141    3           END /* ELSE */ ;
     1996    17142           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:85   
     1997    17143           /* Write text fetched from message data base. */
     1998    17144    2      PL.TEXT_LINE_ = SUBSTR (MSG_B(0), 2, %MAX_LGTH) ;
     1999    17145    2      PL.CARRIAGE_CONTROL = DUP.LINE_VFC ;
     2000    17146    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;
     2001    17147    2      PL.CARRIAGE_CONTROL = %OVER_WRITE ;
     2002    17148    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;
     2003    17149    3      DO LINE_NUMBER = 1 TO DUP.NUM_LINES-1 ;
     2004    17150    3         PL.TEXT_LINE_ = SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH) ;
     2005    17151    3         PL.CARRIAGE_CONTROL = %NEXT_WRITE ;
     2006    17152    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;
     2007    17153    3         PL.CARRIAGE_CONTROL = %OVER_WRITE ;
     2008    17154    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;
     2009    17155    3      END /* DO */ ;
     2010    17156    2      DUP.CURRENT_LINE# = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;
     2011    17157    2      RETURN ;
     2012    17158
     2013    17159    2   PRINTER_WRITE_ERROR:
     2014    17160    2      CALL DU_USER_WRITE (%E$DPW_WRITE) ;
     2015    17161    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2016    17162    2   ERROR:
     2017    17163    2      ALTRETURN ;
     2018    17164
     2019    17165    2   END DU_PRINTER_OVERWRITE ;
     2020    17166        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:86   
     2021    17167        /*I* NAME:         DU_OPERATOR_WRITE
     2022    17168             AUTHOR:       Kathy Larkin
     2023    17169             PURPOSE:      Send a message to the operator.
     2024    17170             INTERFACE:    DU_OW_SETUP_BUFFER
     2025    17171                           DU_ISSUE_OP_MSG
     2026    17172                           DU_PRINT_OP_REPLY
     2027    17173             PARAMETERS:   None passed.
     2028    17174             DATA:         No external data accessed.
     2029    17175             DESCRIPTION:  The MSG command has been implemented into DEER
     2030    17176                           so  that a DEER  user can send  the operator a
     2031    17177                           message without  exiting DEER.  This procedure
     2032    17178                           sets up a buffer from the parse control blocks
     2033    17179                           and sends the message.  If the message ends in
     2034    17180                           a question mark, it is assumed that a reply is
     2035    17181                           expected,  and this  reply is  printed through
     2036    17182                           M$DO.
     2037    17183        */
     2038    17184        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:87   
     2039    17185    1   DU_OPERATOR_WRITE: PROC (CMD$) ;
     2040    17186
     2041    17187    2      DCL CMD$                       PTR ALIGNED ;
     2042    17188        /* BUFFER has been declared in TOU$DU_OPERATOR_WRITE.  The
     2043    17189           declaration is included as commentary here for reference.
     2044    17190
     2045    17191           DCL 1 BUFFER,
     2046    17192                 2 REPLY_PENDING          BIT (1) CALIGNED,
     2047    17193                 2 LGTH                   UBIN BYTE CALIGNED,
     2048    17194                 2 TEXT_                  CHAR (%BUF_RCD_LGTH) CALIGNED,
     2049    17195                 2 TEXT (0:(%BUF_RCD_LGTH - 1)) REDEF TEXT_ CHAR (1) CALIGNED,
     2050    17196                 2 REPLY,
     2051    17197                   3 TYC                  UBIN WORD ALIGNED,
     2052    17198                   3 LGTH                 UBIN WORD ALIGNED ;
     2053    17199        */
     2054    17200
     2055    17201        /* Code */
     2056    17202
     2057    17203    2      CALL DU_OW_SETUP_BUFFER ALTRET (ERROR) ;
     2058    17204    2      CALL DU_ISSUE_OP_MSG ALTRET (ERROR) ;
     2059    17205    2      CALL DU_PRINT_OP_REPLY ;
     2060    17206
     2061    17207    2   ERROR:
     2062    17208    2      RETURN ;
     2063    17209
     2064    17210        /* END DU_OPERATOR_WRITE */
     2065    17211        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:88   
     2066    17212        /*I* NAME:         DU_OW_SETUP_BUFFER
     2067    17213             AUTHOR:       Kathy Larkin
     2068    17214             PURPOSE:      Set up message buffer from user input.
     2069    17215             INTERFACE:    DU_USER_WRITE
     2070    17216             PARAMETERS:   None passed.
     2071    17217             DATA:         CMD$ - input
     2072    17218                           BUFFER - output
     2073    17219             DESCRIPTION:  This procedure sets up the message buffer from
     2074    17220                           the   parse   control   blocks   returned   by
     2075    17221                           XUR$GETCMD  when the MSG  command is issued by
     2076    17222                           the user.  The list of blocks is pointed to by
     2077    17223                           CMD$.   Various  fields  of  BUFFER are set as
     2078    17224                           necessary.
     2079    17225        */
     2080    17226        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:89   
     2081    17227    2   DU_OW_SETUP_BUFFER: PROC ALTRET ;
     2082    17228
     2083    17229    3      DCL OUTBLK$                    PTR ALIGNED ;
     2084    17230           %PARSE$OUT (STCLASS = BASED) ;
     2085    17275           %PARSE$SYM (STCLASS = BASED) ;
     2086    17313
     2087    17314        /* Code */
     2088    17315
     2089    17316    3      OUTBLK$ = CMD$ -> OUT$BLK.SUBLK$(0) ;
     2090    17317    3      IF OUTBLK$ -> OUT$SYM.COUNT <= %BUF_RCD_LGTH
     2091    17318    4      THEN DO ;
     2092    17319    4              BUFFER.LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
     2093    17320    4              BUFFER.TEXT_ = OUTBLK$ -> OUT$SYM.TEXT ;
     2094    17321    4              IF BUFFER.TEXT (BUFFER.LGTH - 1) = '?'
     2095    17322    4              THEN BUFFER.REPLY_PENDING = %TRUE ;
     2096    17323    4              ELSE BUFFER.REPLY_PENDING = %FALSE ;
     2097    17324    4              BUFFER.REPLY = '0'O ;
     2098    17325    4              RETURN ;
     2099    17326    4           END /* THEN */ ;
     2100    17327    4      ELSE DO ;
     2101    17328    4              CALL DU_USER_WRITE (%E$DOW_MSG_TOO_LONG) ;
     2102    17329    4              ALTRETURN ;
     2103    17330    4           END /* ELSE */ ;
     2104    17331
     2105    17332    3   END DU_OW_SETUP_BUFFER ;
     2106    17333    2   END DU_OPERATOR_WRITE ;
     2107    17334        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:90   
     2108    17335        /*I* NAME:         DU_ISSUE_OP_MSG
     2109    17336             AUTHOR:       Kathy Larkin
     2110    17337             PURPOSE:      Send message, receive reply.
     2111    17338             INTERFACE:    M$KEYIN
     2112    17339                           DU_USER_WRITE
     2113    17340                           DU_SYSTEM_ERRMSG
     2114    17341             PARAMETERS:   BUFFER - input / output
     2115    17342             DATA:         No external data accessed.
     2116    17343             DESCRIPTION:  This procedure sets up the KEYIN FPT and sends
     2117    17344                           the  message  in  BUFFER.TEXT_ to  the  system
     2118    17345                           operator.   If  a  reply  was requested, it is
     2119    17346                           read into BUFFER.TEXT_.
     2120    17347        */
     2121    17348        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:91   
     2122    17349    1   DU_ISSUE_OP_MSG: PROC ALTRET ;
     2123    17350
     2124    17351          %FPT_KEYIN (FPTN = SEND_MSG,
     2125    17352                      OCTYPE = DEVICE) ;
     2126    17371
     2127    17372        /* Code */
     2128    17373
     2129    17374    2      SEND_MSG.MESS_ = VECTOR (SUBSTR (BUFFER.TEXT_, 0, BUFFER.LGTH)) ;
     2130    17375    2      IF BUFFER.REPLY_PENDING
     2131    17376    2      THEN SEND_MSG.REPLY_ = VECTOR (BUFFER.TEXT_) ;
     2132    17377    2      ELSE SEND_MSG.REPLY_ = VECTOR (NIL) ;
     2133    17378    2      SEND_MSG.RESULTS_ = VECTOR (BUFFER.REPLY) ;
     2134    17379    2      CALL M$KEYIN (SEND_MSG) ALTRET (ERROR) ;
     2135    17380    2      RETURN ;
     2136    17381
     2137    17382    2   ERROR:
     2138    17383    2      CALL DU_USER_WRITE (%E$DIOM_MSG) ;
     2139    17384    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2140    17385    2      ALTRETURN ;
     2141    17386
     2142    17387    2   END DU_ISSUE_OP_MSG ;
     2143    17388        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:92   
     2144    17389        /*I* NAME:         DU_PRINT_OP_REPLY
     2145    17390             AUTHOR:       Kathy Larkin
     2146    17391             PURPOSE:      Print the operator's reply.
     2147    17392             INTERFACE:    M$WRITE
     2148    17393             PARAMETERS:   None passed.
     2149    17394             DATA:         No external data accessed.
     2150    17395             DESCRIPTION:  The  operator's  reply  to  the MSG command is
     2151    17396                           printed for the user through M$DO.
     2152    17397        */
     2153    17398
     2154    17399    1   DU_PRINT_OP_REPLY: PROC ALTRET ;
     2155    17400
     2156    17401           %FPT_WRITE (FPTN = MSG_RESP,
     2157    17402                       DCB  = M$DO) ;
     2158    17433
     2159    17434        /* Code */
     2160    17435
     2161    17436    2      IF BUFFER.REPLY_PENDING
     2162    17437    3      THEN DO ;
     2163    17438    3              MSG_RESP.BUF_ = VECTOR (SUBSTR (BUFFER.TEXT_, 0, BUFFER.REPLY.LGTH)) ;
     2164    17439    3              CALL M$WRITE (MSG_RESP) ALTRET (ERROR) ;
     2165    17440    3           END /* THEN */ ;
     2166    17441    2      ELSE ;
     2167    17442    2      RETURN ;
     2168    17443
     2169    17444    2   ERROR:
     2170    17445    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2171    17446    2      ALTRETURN ;
     2172    17447
     2173    17448    2   END DU_PRINT_OP_REPLY ;
     2174    17449        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:93   
     2175    17450        /*I* NAME:         DU_OPERATOR_TEXT
     2176    17451             AUTHOR:       Kathy Larkin
     2177    17452             PURPOSE:      Send message text to operator, receive reply.
     2178    17453             INTERFACE:    DU_OT_SETUP_BUFFER
     2179    17454                           DU_FETCH_TEXT
     2180    17455                           DU_ISSUE_OP_MSG
     2181    17456                           DU_OT_STRIP_TRAILING_BLANKS
     2182    17457                           MINIMUM function
     2183    17458             PARAMETERS:   MSG_CODE - input - to fetch message text
     2184    17459             DATA:         BUFFER - output
     2185    17460                           DUP.RESPONSE - output
     2186    17461             DESCRIPTION:  This  procedure prints text  at the operator's
     2187    17462                           console and may receive  a reply.  The text in
     2188    17463                           the message  database associated with MSG_CODE
     2189    17464                           is retrieved by  DU_FETCH_TEXT, and printed by
     2190    17465                           DU_ISSUE_OP_MSG, one line at a time.
     2191    17466        */
     2192    17467        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:94   
     2193    17468    1   DU_OPERATOR_TEXT: PROC (MSG_CODE) ;
     2194    17469
     2195    17470    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     2196    17471    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     2197    17472    2      DCL INDX        SBIN WORD ALIGNED ;
     2198    17473    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     2199    17474    2                      BASED (DUP.MSG_V.PTR$) ;
     2200    17475
     2201    17476        /* Code */
     2202    17477
     2203    17478    2      CALL DU_FETCH_TEXT (MSG_CODE) ;
     2204    17479    3      DO LINE_NUMBER = 0 TO DUP.NUM_LINES - 1 ;
     2205    17480    3         CALL DU_OT_STRIP_TRAILING_BLANKS (MSG_B (LINE_NUMBER), INDX) ;
     2206    17481    3         CALL DU_OT_SETUP_BUFFER (LINE_NUMBER, INDX + 1) ;
     2207    17482    3         CALL DU_ISSUE_OP_MSG ALTRET (END_PROCESS) ;
     2208    17483    3      END /* DO */ ;
     2209    17484
     2210    17485    2      IF BUFFER.REPLY_PENDING
     2211    17486    3      THEN DO ;
     2212    17487    3              DUP.RESPONSE = SUBSTR (BUFFER.TEXT_, 0, 40) ;
     2213    17488    3              DUP.RESPONSE_LGTH = MINIMUM (BUFFER.REPLY.LGTH, 40) ;
     2214    17489    3           END /* THEN */ ;
     2215    17490    2      ELSE ;
     2216    17491    2   END_PROCESS:
     2217    17492    2      RETURN ;
     2218    17493
     2219    17494        /* END DU_OPERATOR_TEXT */
     2220    17495        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:95   
     2221    17496        /*I* NAME:         DU_OT_STRIP_TRAILING_BLANKS
     2222    17497             AUTHOR:       Kathy Larkin
     2223    17498             PURPOSE:      Find the last character in the message.
     2224    17499             INTERFACE:    DU_USER_WRITE
     2225    17500             PARAMETERS:   TEXT_BUF - input - holds message
     2226    17501                           INDX - output - location of last character
     2227    17502             DATA:         No external data accessed.
     2228    17503             DESCRIPTION:  Effectively  strips  off  trailing  blanks  by
     2229    17504                           searching  from  right  to  left for the first
     2230    17505                           non-blank character.
     2231    17506        */
     2232    17507
     2233    17508    2   DU_OT_STRIP_TRAILING_BLANKS: PROC (TEXT_BUF, INDX) ALTRET ;
     2234    17509
     2235    17510    3      DCL TEXT_BUF    (0:%(BUF_RCD_LGTH-1)) CHAR(1) CALIGNED ;
     2236    17511    3      DCL INDX        SBIN WORD ALIGNED ;
     2237    17512
     2238    17513        /* Code */
     2239    17514
     2240    17515    3      INDX = %BUF_RCD_LGTH - 1 ;
     2241    17516    4      DO WHILE (TEXT_BUF (INDX) = ' ') & (INDX >= 0) ;
     2242    17517    4         INDX = INDX - 1 ;
     2243    17518    4      END /* UNTIL */ ;
     2244    17519
     2245    17520    3      IF INDX >= 0
     2246    17521    3      THEN RETURN ;
     2247    17522    4      ELSE DO ;
     2248    17523    4              CALL DU_USER_WRITE (%E$DOT_NO_TEXT) ;
     2249    17524    4              ALTRETURN ;
     2250    17525    4           END /* ELSE */ ;
     2251    17526
     2252    17527    3   END DU_OT_STRIP_TRAILING_BLANKS ;
     2253    17528        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:96   
     2254    17529        /*I* NAME:         DU_OT_SETUP_BUFFER
     2255    17530             AUTHOR:       Kathy Larkin
     2256    17531             PURPOSE:      Set up message buffer.
     2257    17532             INTERFACE:    None called.
     2258    17533             PARAMETERS:   LINE_NUMBER - input - MSG_B array index
     2259    17534                           LENGTH - input - length of the message
     2260    17535             DATA:         BUFFER - output
     2261    17536             DESCRIPTION:  This procedure sets up the message buffer with
     2262    17537                           one  line  of  text  from  MSG_B.  If the last
     2263    17538                           character  of the message  is a question mark,
     2264    17539                           BUFFER.REPLY_PENDING is set.
     2265    17540        */
     2266    17541
     2267    17542    2   DU_OT_SETUP_BUFFER: PROC (LINE_NUMBER, LENGTH) ;
     2268    17543
     2269    17544    3      DCL LINE_NUMBER                UBIN WORD ALIGNED ;
     2270    17545    3      DCL LENGTH                     UBIN WORD ALIGNED ;
     2271    17546
     2272    17547        /* Code */
     2273    17548
     2274    17549    3      BUFFER.LGTH = LENGTH ;
     2275    17550    3      BUFFER.TEXT_ = MSG_B (LINE_NUMBER) ;
     2276    17551    3      IF BUFFER.TEXT (LENGTH - 1) = '?'
     2277    17552    3      THEN BUFFER.REPLY_PENDING = %TRUE ;
     2278    17553    3      ELSE BUFFER.REPLY_PENDING = %FALSE ;
     2279    17554    3      BUFFER.REPLY = '0'O ;
     2280    17555    3      RETURN ;
     2281    17556
     2282    17557    3   END DU_OT_SETUP_BUFFER ;
     2283    17558    2   END DU_OPERATOR_TEXT ;
     2284    17559        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:97   
     2285    17560        /*I*  NAME:        DU_HEADER_WRITE
     2286    17561              AUTHOR:      Scott S. Sheppard
     2287    17562              PURPOSE:     Prints LP Headers
     2288    17563              INTERFACE:   M$WRITE Monitor Service
     2289    17564                           DU_FETCH_TEXT
     2290    17565                           DU_USER_WRITE
     2291    17566                           DU_SYSTEM_ERRMSG
     2292    17567              INPUT:       HDR_CODE - Integer header number
     2293    17568                           DUP.MSG_V - vector to message buffer
     2294    17569                           DUP.NUM_LINES  - number of lines in header
     2295    17570              OUTPUT:      DUP.CURRENT_PAGE#  - Current page incremented by 1
     2296    17571                           DUP.CURRENT_LINE#  - set to number of header lines
     2297    17572              DESCRIPTION: This procedure writes text to the M$LO dcb as
     2298    17573                           header lines for the tops of the listing pages.
     2299    17574        */
     2300    17575
     2301    17576    1   DU_HEADER_WRITE: PROC (HDR_CODE) ALTRET ;
     2302    17577
     2303    17578    2      DCL HDR_CODE    UBIN WORD ALIGNED ;
     2304    17579    2      DCL 1 HL        STATIC CALIGNED,
     2305    17580    2            2 CARRIAGE_CONTROL       CHAR (1)  UNAL,
     2306    17581    2            2 TEXT_LINE_             CHAR (%MAX_LGTH) UNAL ;
     2307    17582    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     2308    17583    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     2309    17584    2                      BASED (DUP.MSG_V.PTR$) ;
     2310    17585           %FPT_WRITE (FPTN = TO_PRINTER,
     2311    17586                       DCB  = M$LO,
     2312    17587                       VFC  = YES,
     2313    17588                       BUF  = HL) ;
     2314    17619           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:98   
     2315    17620        /* Code */
     2316    17621
     2317    17622    2      DUP.CURRENT_PAGE# = DUP.CURRENT_PAGE# + 1 ;
     2318    17623    2      CALL DU_FETCH_TEXT (HDR_CODE) ;
     2319    17624
     2320    17625    2      HL.CARRIAGE_CONTROL = %TOP_WRITE ;
     2321    17626    2      HL.TEXT_LINE_ = SUBSTR (MSG_B(0), 2, %MAX_LGTH) ;
     2322    17627    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINT_HEADER_ERROR) ;
     2323    17628
     2324    17629    2      HL.CARRIAGE_CONTROL = %NEXT_WRITE ;
     2325    17630    3      DO LINE_NUMBER = 1 TO DUP.NUM_LINES-1 ;
     2326    17631    3         HL.TEXT_LINE_ = SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH) ;
     2327    17632    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINT_HEADER_ERROR) ;
     2328    17633    3      END /* DO */ ;
     2329    17634
     2330    17635    2      DUP.CURRENT_LINE# = DUP.NUM_LINES ;
     2331    17636    2      DUP.FORCE_NEW_PAGE = %FALSE ;
     2332    17637    2      RETURN ;
     2333    17638
     2334    17639    2   PRINT_HEADER_ERROR:
     2335    17640    2      CALL DU_USER_WRITE (%E$DHW_WRITE) ;
     2336    17641    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2337    17642    2      ALTRETURN ;
     2338    17643
     2339    17644    2   END DU_HEADER_WRITE ;
     2340    17645        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:99   
     2341    17646        /*I*  NAME:        DU_FETCH_TEXT
     2342    17647              AUTHOR:      Scott S. Sheppard
     2343    17648              PURPOSE:     Fetches Text From Message Data Base
     2344    17649              INTERFACE:   M$ERRMSG     TOU$REPLACE
     2345    17650              INPUT:       MSG_CODE - Integer message number
     2346    17651              OUTPUT:      MSG_B      - array of records to print
     2347    17652                           DUP.NUM_LINES  - number of lines in the buffer
     2348    17653              DESCRIPTION: This procedure reads text messages from the DEER
     2349    17654                           message data base.    The read is based on a key
     2350    17655                           TOU-999, where 999 is a valid integer.  The text
     2351    17656                           returned is stored in the DUP message buffer.
     2352    17657        */
     2353    17658
     2354    17659    1   DU_FETCH_TEXT: PROC (MSG_CODE) ;
     2355    17660
     2356    17661    2      DCL MSG_CODE UBIN WORD ALIGNED ;
     2357    17662    2      DCL MSG_B    (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     2358    17663    2                   BASED (DUP.MSG_V.PTR$) ;
     2359    17664    2      DCL MSG_B_   CHAR (%(BUF_RCD_LGTH * MAX_BUF)) CALIGNED
     2360    17665    2                   BASED (DUP.MSG_V.PTR$) ;
     2361    17666           %FPT_ERRMSG (FPTN     = MESSAGE_FETCH,
     2362    17667                        CODE     = MESSAGE_CODE,
     2363    17668                        FILEACCT = MSG_ACCT,
     2364    17669                        FILENAME = MSG_NAME,
     2365    17670                        INCLCODE = NO,
     2366    17671                        RESULTS  = FETCH_STATS) ;
     2367    17698           %VLP_ERRCODE (FPTN = MESSAGE_CODE,
     2368    17699                         FCG  = 'TO',
     2369    17700                         MID  = 'U',
     2370    17701                         SEV  = 0) ;
     2371    17746           %VLP_NAME (FPTN = MSG_NAME,
     2372    17747                      NAME = %MSG_DB_NAME,
     2373    17748                      LEN  = 31) ;
     2374    17775           %VLP_ACCT (FPTN = MSG_ACCT,
     2375    17776                      ACCT = %MSG_DB_ACCT) ;
     2376    17789           %VLR_ERRMSG (FPTN = FETCH_STATS) ;
     2377    17811           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:100  
     2378    17812        /* Code */
     2379    17813
     2380    17814    2      MESSAGE_FETCH.BUF_ = DUP.MSG_V ;
     2381    17815    2      MESSAGE_CODE.ERR# = MSG_CODE ;
     2382    17816    2      CALL M$ERRMSG (MESSAGE_FETCH) ALTRET (BAD_MESSAGE_FETCH) ;
     2383    17817    2      DUP.NUM_LINES = FETCH_STATS.RECCNT ;
     2384    17818    2      CALL TOU$REPLACE (MSG_B_, %(BUF_RCD_LGTH * MAX_BUF)) ;
     2385    17819    2      RETURN ;
     2386    17820
     2387    17821    2   BAD_MESSAGE_FETCH:
     2388    17822    2      MSG_B(0) = '  Attempt to fetch the message TEXT failed miserably.' ;
     2389    17823    2      MSG_B(1) = '  Problem related to file :ERRMSG.:SYS' ;
     2390    17824    2      DUP.NUM_LINES = 3 ;
     2391    17825
     2392    17826    2      IF FETCH_STATS.NOFILE
     2393    17827    2      THEN MSG_B(2) = '  Unable to open message file.' ;
     2394    17828    2      ELSE IF FETCH_STATS.NOMSG
     2395    17829    2         THEN MSG_B(2) = '  No message found for code.' ;
     2396    17830    2         ELSE IF FETCH_STATS.BUFERR
     2397    17831    2            THEN MSG_B(2) = '  Message buffer not there or bad.' ;
     2398    17832    2            ELSE IF FETCH_STATS.BADCALL
     2399    17833    2               THEN MSG_B(2) = '  Call had bad parameter(s).' ;
     2400    17834    2               ELSE DUP.NUM_LINES = 2 ;
     2401    17835    2      RETURN ;
     2402    17836
     2403    17837    2   END DU_FETCH_TEXT ;
     2404    17838        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:101  
     2405    17839        /*I*  NAME:        DU_SYSTEM_ERRMSG
     2406    17840              AUTHOR:      Scott S. Sheppard
     2407    17841              PURPOSE:     Prints Sytem Error Message to M$DO and M$LO
     2408    17842              INTERFACE:   M$ERRMSG Monitor Service
     2409    17843              INPUT:       FAULT_ERROR- fault error flag
     2410    17844                           B$TCB$     - pointer to task control block
     2411    17845                           B$TCB.ALT$ - pointer to exceptional condition frame
     2412    17846                           B$TCB.STK$ - pointer to procedure stack
     2413    17847                           B$ALT.ERR  - standard format error code
     2414    17848                           DUP.MSG_V  - vector to the message output buffer
     2415    17849              OUTPUT:      Message written to M$DO and M$LO
     2416    17850              DESCRIPTION: This procedure fetches an error code from the exceptional
     2417    17851                           and calls M$ERRMSG to display an error message.   If  the
     2418    17852                           fault error bit is set, the error is a fault.
     2419    17853        */
     2420    17854        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:102  
     2421    17855    1   DU_SYSTEM_ERRMSG: PROC (FAULT_ERROR) ;
     2422    17856
     2423    17857    2      DCL FAULT_ERROR       BIT (1) CALIGNED ;
     2424    17858    2      DCL ALT$        PTR ALIGNED;
     2425    17859           %FPT_ERRMSG (FPTN     = SYSTEM_ERRMSG,
     2426    17860                        CODE     = ERROR_CODE,
     2427    17861                        FLAGLEV  = 4,
     2428    17862                        INCLCODE = YES,
     2429    17863                        OUTDCB1  = M$DO,
     2430    17864                        SOURCE   = PASS) ;
     2431    17891           %VLP_ERRCODE (FPTN = ERROR_CODE) ;
     2432    17936
     2433    17937        /* Code */
     2434    17938
     2435    17939    2      SYSTEM_ERRMSG.BUF_ = DUP.MSG_V ;
     2436    17940    2      IF FAULT_ERROR
     2437    17941    2      THEN ALT$ = B$TCB$ -> B$TCB.STK$ ;
     2438    17942    2      ELSE ALT$ = B$TCB$ -> B$TCB.ALT$ ;
     2439    17943    2      ERROR_CODE = ALT$ -> B$ALT.ERR;
     2440    17944    2      SYSTEM_ERRMSG.V.DCB# = ALT$ -> B$ALT.DCB#;
     2441    17945    2      SYSTEM_ERRMSG.V.FLAGLEV# = ERROR_CODE.SEV ;
     2442    17946    2      CALL M$ERRMSG (SYSTEM_ERRMSG) ;
     2443    17947    2      RETURN ;
     2444    17948
     2445    17949    2   END DU_SYSTEM_ERRMSG ;
     2446    17950        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:103  
     2447    17951        /*I*  NAME:        DU_SET_EDIT_PROMPT
     2448    17952              AUTHOR:      Scott S. Sheppard
     2449    17953              PURPOSE:     Sets Prompt for Deckfile Editor
     2450    17954              INTERFACE:   M$PROMPT Monitor Service
     2451    17955              INPUT:       BATCH_RUN - Batch Execution Flag
     2452    17956              OUTPUT:      Prompt changed to '???'
     2453    17957              DESCRIPTION: This procedure sets the prompt for M$READS to
     2454    17958                           to '???' for on-line execution of the editor.
     2455    17959                           The '???' is the recognized prompt for TOLTS.
     2456    17960        */
     2457    17961
     2458    17962    1   DU_SET_EDIT_PROMPT: PROC (BATCH_RUN) ALTRET ;
     2459    17963
     2460    17964    2      DCL BATCH_RUN                  BIT (1) CALIGNED ;
     2461    17965    2      DCL THREE_QUESTION_MARKS       CHAR (3) CONSTANT INIT ('???') ;
     2462    17966           %FPT_PROMPT (FPTN    = ON_LINE,
     2463    17967                        PROMPT  = THREE_QUESTION_MARKS) ;
     2464    17995
     2465    17996        /* Code */
     2466    17997
     2467    17998    2      IF BATCH_RUN
     2468    17999    2      THEN /* Do not adjust the prompt. */ ;
     2469    18000    2      ELSE CALL M$PROMPT (ON_LINE) ALTRET (PROMPT_ERROR) ;
     2470    18001    2      RETURN ;
     2471    18002
     2472    18003    2   PROMPT_ERROR:
     2473    18004    2      CALL DU_USER_WRITE (%E$DSEP_PROMPT) ;
     2474    18005    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2475    18006    2      ALTRETURN ;
     2476    18007
     2477    18008    2   END DU_SET_EDIT_PROMPT ;
     2478    18009        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:104  
     2479    18010        /*I*  NAME:        DU_SET_PROMPT
     2480    18011              AUTHOR:      Scott S. Sheppard
     2481    18012              PURPOSE:     Sets Prompt for Deckfile Editor
     2482    18013              INTERFACE:   M$PROMPT Monitor Service
     2483    18014                           DU_USER_WRITE
     2484    18015                           DU_SYSTEM_ERRMSG
     2485    18016              INPUT:       PROMPT_BUFFER - desired prompt message
     2486    18017                           LGTH          - number of characters in prompt
     2487    18018              OUTPUT:      Prompt changed to PROMPT_BUFFER
     2488    18019              DESCRIPTION: This procedure sets the prompt for M$READS
     2489    18020                           to any value specified.  The desired value
     2490    18021                           is placed in the DUP holding area, and the
     2491    18022                           length of the  prompt is set to  DUP  hold
     2492    18023                           area length.  The hold area and its length
     2493    18024                           are passed to this procedure. This is done
     2494    18025                           only in on-line mode because adjusting the
     2495    18026                           prompt in batch mode results in  an  error
     2496    18027                           since the M$SI dcb is not ORG=TERMINAL for
     2497    18028                           batch mode.
     2498    18029        */
     2499    18030        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:105  
     2500    18031    1   DU_SET_PROMPT: PROC (BATCH_RUN, PROMPT_BUFFER, LGTH) ALTRET ;
     2501    18032
     2502    18033    2      DCL BATCH_RUN                  BIT (1) CALIGNED ;
     2503    18034    2      DCL PROMPT_BUFFER              CHAR (%MAX_LGTH) CALIGNED ;
     2504    18035    2      DCL LGTH                       UBIN WORD ALIGNED ;
     2505    18036    2      DCL SET_PROMPT_ITEM            CHAR (%MAX_LGTH) CALIGNED ;
     2506    18037           %FPT_PROMPT (FPTN = SET_PROMPT) ;
     2507    18065
     2508    18066        /* Code */
     2509    18067
     2510    18068    2      IF BATCH_RUN
     2511    18069    2      THEN /* Do not adjust the prompt. */ ;
     2512    18070    3      ELSE DO ;
     2513    18071    3              SET_PROMPT_ITEM = PROMPT_BUFFER ;
     2514    18072    3              SET_PROMPT.PROMPT_ = VECTOR (SUBSTR (SET_PROMPT_ITEM, 0, LGTH)) ;
     2515    18073    3              CALL M$PROMPT (SET_PROMPT) ALTRET (PROMPT_ERROR) ;
     2516    18074    3           END /* ELSE */ ;
     2517    18075    2      RETURN ;
     2518    18076
     2519    18077    2   PROMPT_ERROR:
     2520    18078    2      CALL DU_USER_WRITE (%E$DSP_PROMPT) ;
     2521    18079    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2522    18080    2      ALTRETURN ;
     2523    18081
     2524    18082    2   END DU_SET_PROMPT ;
     2525    18083        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:106  
     2526    18084        /*I*  NAME:        DU_GET_DATA_SEGMENT
     2527    18085              AUTHOR:      Scott S. Sheppard
     2528    18086              PURPOSE:     Gets Dynamic Memory Space
     2529    18087              INTERFACE:   M$GDS Monitor Service
     2530    18088                           DU_USER_WRITE
     2531    18089                           DU_SYSTEM_ERRMSG
     2532    18090              INPUT:       WORD_COUNT   - number of words needed by DEER
     2533    18091              OUTPUT:      WORD_VECTOR  - vector to the set of words
     2534    18092              DESCRIPTION: This procedure gets a set of dynamic words to be
     2535    18093                           used as data area for DEER.
     2536    18094        */
     2537    18095
     2538    18096    1   DU_GET_DATA_SEGMENT: PROC (WORD_COUNT, WORD_VECTOR) ALTRET ;
     2539    18097
     2540    18098    2      DCL WORD_COUNT     UBIN HALF HALIGNED ;
     2541    18099    2      DCL WORD_VECTOR    BIT (72) DALIGNED ;
     2542    18100           %FPT_GDS (FPTN    = GET_BUFFER,
     2543    18101                     FREE    = YES) ;
     2544    18117
     2545    18118        /* Code */
     2546    18119
     2547    18120    2      GET_BUFFER.V.SEGSIZE# = WORD_COUNT ;
     2548    18121    2      GET_BUFFER.RESULTS_ = VECTOR (WORD_VECTOR) ;
     2549    18122    2      CALL M$GDS (GET_BUFFER) ALTRET (GET_ERROR) ;
     2550    18123    2      RETURN ;
     2551    18124
     2552    18125    2   GET_ERROR:
     2553    18126    2      CALL DU_USER_WRITE (%E$DGDS_GDS) ;
     2554    18127    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2555    18128    2      ALTRETURN ;
     2556    18129
     2557    18130    2   END DU_GET_DATA_SEGMENT ;
     2558    18131        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:107  
     2559    18132        /*I*  NAME:        DU_FREE_DATA_SEGMENT
     2560    18133              AUTHOR:      Scott S. Sheppard
     2561    18134              PURPOSE:     Frees Dynamic Space
     2562    18135              INTERFACE:   M$FDS Monitor Service
     2563    18136                           DU_USER_WRITE
     2564    18137                           DU_SYSTEM_ERRMSG
     2565    18138              INPUT:       WORD_COUNT   - number of words held by DEER
     2566    18139                           WORD_VECTOR  - vector to buffer
     2567    18140              OUTPUT:      WORD_VECTOR  - vector to buffer
     2568    18141              DESCRIPTION: This procedure frees the dynamically acquired words
     2569    18142                           that are held by DEER.
     2570    18143        */
     2571    18144
     2572    18145    1   DU_FREE_DATA_SEGMENT: PROC (WORD_COUNT, WORD_VECTOR) ALTRET ;
     2573    18146
     2574    18147    2      DCL WORD_COUNT  UBIN HALF HALIGNED ;
     2575    18148    2      DCL WORD_VECTOR BIT (72) DALIGNED ;
     2576    18149           %FPT_FDS (FPTN = FREE_BUFFER) ;
     2577    18164
     2578    18165        /* Code */
     2579    18166
     2580    18167    2      FREE_BUFFER.V.SEGSIZE# = WORD_COUNT ;
     2581    18168    2      FREE_BUFFER.RESULTS_ = VECTOR (WORD_VECTOR) ;
     2582    18169    2      CALL M$FDS (FREE_BUFFER) ALTRET (FREE_ERROR) ;
     2583    18170    2      RETURN ;
     2584    18171
     2585    18172    2   FREE_ERROR:
     2586    18173    2      CALL DU_USER_WRITE (%E$DFDS_FDS) ;
     2587    18174    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2588    18175    2      ALTRETURN ;
     2589    18176
     2590    18177    2   END DU_FREE_DATA_SEGMENT ;
     2591    18178        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:108  
     2592    18179        /*I*  NAME:        DU_UPDATE_LOG
     2593    18180              AUTHOR:      Scott S. Sheppard
     2594    18181              INTERFACE:   M$TIME
     2595    18182              INPUT:       COMMAND
     2596    18183                           CATALOG_ID
     2597    18184                           DECK_ID
     2598    18185                           IFAD_ID
     2599    18186                           LOG_B.COUNT
     2600    18187              OUTPUT:      LOG_B.ACCESSES.TYPE
     2601    18188                           LOG_B.ACCESSES.CATALOG
     2602    18189                           LOG_B.ACCESSES.DECK
     2603    18190                           LOG_B.ACCESSES.IFAD
     2604    18191                           LOG_B.ACCESSES.DATE
     2605    18192                           LOG_B.ACCESSES.TIME
     2606    18193                           LOG_B.COUNT
     2607    18194              DESCRIPTION: This procedure adds  a new entry to the deckfile
     2608    18195                           history log by assigning the supplied values and
     2609    18196                           recording the date and time.
     2610    18197        */
     2611    18198        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:109  
     2612    18199    1   DU_UPDATE_LOG: PROC (COMMAND, CATALOG_ID, DECK_ID, IFAD_ID) ALTRET ;
     2613    18200
     2614    18201    2      DCL COMMAND     UBIN WORD ALIGNED ;
     2615    18202    2      DCL CATALOG_ID  CHAR (21) CALIGNED ;
     2616    18203    2      DCL DECK_ID     CHAR (23) CALIGNED ;
     2617    18204    2      DCL IFAD_ID     CHAR (40) CALIGNED ;
     2618    18205    2      DCL ERROR_GIVEN BIT (1) STATIC CALIGNED INIT (%FALSE) ;
     2619    18206           %LOG_B (STCLASS = "BASED (DUP.LOG_V.PTR$)") ;
     2620    18232           %FPT_TIME (FPTN = STORE_WHEN,
     2621    18233                      DEST = LOCAL) ;
     2622    18252
     2623    18253        /* Code */
     2624    18254
     2625    18255    2      IF LOG_B.COUNT < %MAX_ACCESSES
     2626    18256    3      THEN DO ;
     2627    18257    3              LOG_B.ACCESSES.TYPE(LOG_B.COUNT) = COMMAND ;
     2628    18258    3              LOG_B.ACCESSES.CATALOG(LOG_B.COUNT) = CATALOG_ID ;
     2629    18259    3              LOG_B.ACCESSES.DECK(LOG_B.COUNT) = DECK_ID ;
     2630    18260    3              LOG_B.ACCESSES.IFAD(LOG_B.COUNT) = IFAD_ID ;
     2631    18261    3              STORE_WHEN.DATE_ = VECTOR (LOG_B.ACCESSES.DATE(LOG_B.COUNT)) ;
     2632    18262    3              STORE_WHEN.TIME_ = VECTOR (LOG_B.ACCESSES.TIME(LOG_B.COUNT)) ;
     2633    18263    3              CALL M$TIME (STORE_WHEN) ALTRET (ERROR) ;
     2634    18264    3              LOG_B.COUNT = LOG_B.COUNT + 1 ;
     2635    18265    3           END /* THEN */ ;
     2636    18266    2      ELSE IF ERROR_GIVEN
     2637    18267    2         THEN /* user has already been informed of lack of space. */ ;
     2638    18268    3         ELSE DO ;
     2639    18269    3                 CALL DU_USER_WRITE (%E$DUL_TOO_MANY) ;
     2640    18270    3                 ERROR_GIVEN = %TRUE ;
     2641    18271    3              END /* ELSE */ ;
     2642    18272    2      RETURN ;
     2643    18273
     2644    18274    2   ERROR:
     2645    18275    2      ALTRETURN ;
     2646    18276
     2647    18277    2   END DU_UPDATE_LOG ;
     2648    18278        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:110  
     2649    18279        /*I* NAME:         DU_GET_SITE
     2650    18280             AUTHOR:       Scott S. Sheppard
     2651    18281             PURPOSE:      Obtains Customer Site Information
     2652    18282             INTERFACE:    M$MONINFO Monitor Service
     2653    18283                           DU_USER_WRITE
     2654    18284                           DU_SYSTEM_ERRMSG
     2655    18285             PARAMETERS:   SITE_NAME - output
     2656    18286                           SITE_NAME_LGTH - output
     2657    18287                           SITE_ID - output
     2658    18288                           CPU_TYPE - output
     2659    18289             DATA:         No external data accessed.
     2660    18290             DESCRIPTION:  This procedure obtains the site name, unique
     2661    18291                           site identifier, and  boot cpu type  for the
     2662    18292                           customer site.
     2663    18293        */
     2664    18294
     2665    18295    1   DU_GET_SITE: PROC (SITE_NAME, SITE_NAME_LGTH, SITE_ID, CPU_TYPE) ALTRET ;
     2666    18296
     2667    18297    2      DCL SITE_NAME                  CHAR (119) CALIGNED ;
     2668    18298    2      DCL SITE_NAME_LGTH             UBIN BYTE CALIGNED ;
     2669    18299    2      DCL SITE_ID                    CHAR (6) CALIGNED ;
     2670    18300    2      DCL CPU_TYPE                   UBIN BYTE;
     2671    18301           %FPT_MONINFO (FPTN     = GET_SITE,
     2672    18302                         SITEINFO = CUSTOMER) ;
     2673    18317           %VLR_SITEINFO (FPTN = CUSTOMER) ;
     2674    18336           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:111  
     2675    18337        /* Code */
     2676    18338
     2677    18339    2      CALL M$MONINFO (GET_SITE) WHENRETURN
     2678    18340    3           DO ;
     2679    18341    3              SITE_NAME = CUSTOMER.SITE_NAME#.C ;
     2680    18342    3              SITE_NAME_LGTH = CUSTOMER.SITE_NAME#.L ;
     2681    18343    3              SITE_ID = CUSTOMER.SITE_ID# ;
     2682    18344    3              CPU_TYPE = CUSTOMER.CPU_TYPE#;
     2683    18345    3              RETURN ;
     2684    18346    3           END /* WHENRETURN */ ;
     2685    18347    2      WHENALTRETURN
     2686    18348    3           DO ;
     2687    18349    3              CALL DU_USER_WRITE (%E$DGS_NO_SITE) ;
     2688    18350    3              CALL DU_SYSTEM_ERRMSG (%FALSE) ;
     2689    18351    3              ALTRETURN ;
     2690    18352    3           END /* WHENALTRETURN */ ;
     2691    18353
     2692    18354    2   END DU_GET_SITE ;
     2693    18355    1   END TOU$DU ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:112  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
   TD$STRUCT.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOU$DU.

   Procedure TOU$DU requires 2187 words for executable code.
   Procedure TOU$DU requires 94 words of local(AUTO) storage.

    No errors detected in file TOU$DU.:E05TSI    .

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:113  

 Object Unit name= TOU$DU                                     File name= TOU$DU.:E05TOU
 UTS= JUL 30 '97 06:42:42.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$IFAD
    2   DCB   even  none     0      0  M$DECKFILE
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  M$DO
    5   Data  even  none  1254   2346  TOU$DU
    6   DCB   even  none    98    142  M$LO
    7   DCB   even  none     0      0  M$MERGE
    8  RoData even  UTS     68    104  TOU$DU
    9   Proc  even  none  2187   4213  TOU$DU
   10  RoData even  none   135    207  TOU$DU
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:114  

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes    yes     yes      Std        0  TOU$DU
     9      3          yes     yes      Std        0  TOU$DU_SET_IFAD_FID
     9     20          yes     yes      Std        0  TOU$DU_OPEN_IFAD
     9     33          yes     yes      Std        0  TOU$DU_NEXT_IFAD
     9     40          yes     yes      Std        0  TOU$DU_CLOSE_IFAD
     9     45          yes     yes      Std        0  TOU$DU_SET_MCA
     9     74          yes     yes      Std        0  TOU$DU_OPEN_MCA
     9    105          yes     yes      Std        0  TOU$DU_CLOSE_MCA
     9    112          yes     yes      Std        0  TOU$DU_MCA_RESET_STATUS
     9    117          yes     yes      Std        0  TOU$DU_SET_DF_FID
     9    132          yes     yes      Std        0  TOU$DU_OPEN_DF
     9    147          yes     yes      Std        0  TOU$DU_CLOSE_DF
     9    156          yes     yes      Std        0  TOU$DU_SET_LO_FID
     9    201          yes     yes      Std        0  TOU$DU_USER_READ
     9    212          yes     yes      Std        0  TOU$DU_USER_WRITE
     9    221          yes     yes      Std        0  TOU$DU_PRINTER_WRITE
     9    230          yes     yes      Std        0  TOU$DU_PRINTER_OVERWRITE
     9    237          yes     yes      Std        0  TOU$DU_OPERATOR_WRITE
     9    246          yes     yes      Std        0  TOU$DU_OPERATOR_TEXT
     9    255          yes     yes      Std        0  TOU$DU_SYSTEM_ERRMSG
     9    264          yes     yes      Std        0  TOU$DU_SET_EDIT_PROMPT
     9    273          yes     yes      Std        0  TOU$DU_SET_PROMPT
     9    304          yes     yes      Std        0  TOU$DU_GET_DATA_SEGMENT
     9    315          yes     yes      Std        0  TOU$DU_FREE_DATA_SEGMENT
     9    326          yes     yes      Std        0  TOU$DU_UPDATE_LOG
     9    341          yes     yes      Std        0  TOU$DU_GET_SITE
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:115  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 TOU$REPLACE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  DUP                                   B$JIT$
     B$TCB$                                M$IFAD                                M$DECKFILE
     M$SI                                  M$DO                                  M$LO
     M$MERGE                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:116  


        1        1        /*M* TOU$DU     DEckfile Editor Routine Utilities program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$DU
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     Utility Routines For DEER processor
       14       14              DESCRIPTION: This module is an  outer block  which  contains
       15       15                           the  entry points and  procedure blocks of  the
       16       16                           utilities for the deckfile editor. The routines
       17       17                           in TOU$DU  interface with  CP-6 Monitor Service
       18       18                           routines and provide capabilities for:
       19       19                           --- sets, opens, next volumes, and closes for IFAD
       20       20                           --- sets, opens, and closes for DECKFILES
       21       21                           --- reads from the user terminal
       22       22                           --- writes to the user's terminal
       23       23                           --- writes to the line printer
       24       24                           --- system error message printing
       25       25                           --- setting prompts for user reads
       26       26                           --- obtaining / releasing dynamic memory
       27       27                           --- updating history records
       28       28              REFERENCE:   CP-6 Release D00A
       29       29              LAST UPDATE: 08/12/85
       30       30        */
       31       31        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:117  
       32       32        /*F*  NAME:        TOU$DU
       33       33              DESCRIPTION: Procedure Nesting Hierarchy
       34       34
       35       35              TOU$DU: procedure ALTRET
       36       36
       37       37              TOU$DU_SET_IFAD_FID: entry ALTRET
       38       38              TOU$DU_OPEN_IFAD: entry ALTRET
       39       39              TOU$DU_NEXT_IFAD: entry ALTRET
       40       40              TOU$DU_CLOSE_IFAD: entry ALTRET
       41       41              TOU$DU_SET_MCA: entry ALTRET
       42       42              TOU$DU_OPEN_MCA: entry ALTRET
       43       43              TOU$DU_CLOSE_MCA: entry ALTRET
       44       44              TOU$DU_MCA_RESET_STATUS: entry ALTRET
       45       45              TOU$DU_SET_DF_FID: entry ALTRET
       46       46              TOU$DU_OPEN_DF: entry ALTRET
       47       47              TOU$DU_CLOSE_DF: entry ALTRET
       48       48              TOU$DU_USER_READ: entry ALTRET
       49       49              TOU$DU_USER_WRITE: entry ALTRET
       50       50              TOU$DU_PRINTER_WRITE: entry ALTRET
       51       51              TOU$DU_PRINTER_OVERWRITE: entry ALTRET
       52       52              TOU$DU_OPERATOR_WRITE: entry ALTRET
       53       53              TOU$DU_OPERATOR_TEXT: entry ALTRET
       54       54              TOU$DU_SYSTEM_ERRMSG: entry ALTRET
       55       55              TOU$DU_SET_EDIT_PROMPT: entry ALTRET
       56       56              TOU$DU_SET_PROMPT: entry ALTRET
       57       57              TOU$DU_GET_DATA_SEGMENT: entry ALTRET
       58       58              TOU$DU_FREE_DATA_SEGMENT: entry ALTRET
       59       59              TOU$DU_UPDATE_LOG: entry ALTRET
       60       60              TOU$DU_GET_SITE: entry ALTRET
       61       61
       62       62                 DU_SET_IFAD_FID: procedure (E,H,HL,T,D,DL) ALTRET
       63       63                    DU_IFAD_FROM_HOLD: procedure ALTRET
       64       64                    DU_IFAD_FROM_MERGE: procedure ALTRET
       65       65                       DU_IFAD_TAPE_FROM_MR: procedure ALTRET
       66       66                       DU_IFAD_DISK_FROM_MR: procedure ALTRET
       67       67                 DU_OPEN_IFAD: procedure (T,D,DL,NV) ALTRET
       68       68                 DU_NEXT_IFAD: procedure ALTRET
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:118  
       69       69                 DU_CLOSE_IFAD: procedure ALTRET
       70       70                 DU_SET_IFAD_IMU_NUMBER: procedure (I,IL,N) ALTRET
       71       71                 DU_VALIDATE_IMU_NUMBER: procedure (I) ALTRET
       72       72                 DU_OPEN_MCA: procedure (FID, IMU#) ALTRET
       73       73                 DU_CLOSE_MCA: procedure ALTRET
       74       74                 DU_SET_DF_FID: procedure (E,H,HL,NA,NAL) ALTRET
       75       75                    DU_DF_FROM_HOLD: procedure ALTRET
       76       76                    DU_DF_FROM_MERGE: procedure ALTRET
       77       77                       DU_DF_FROM_MR: procedure ALTRET
       78       78                 DU_OPEN_DF: procedure (E,NA,NAL,OT,NE) ALTRET
       79       79                    DU_SET_DF_NAME_ACCOUNT: procedure
       80       80                    DU_SIGNAL_OPEN_ERROR: procedure
       81       81                 DU_CLOSE_DF: procedure (CT) ALTRET
       82       82                 DU_SET_FULL_FID: procedure (E, EL, T, TL)
       83       83                 DU_USER_READ: procedure (C, L) ALTRET
       84       84                 DU_USER_WRITE: procedure (MC) ALTRET
       85       85                 DU_PRINTER_WRITE: procedure (MC) ALTRET
       86       86                 DU_PRINTER_OVERWRITE: procedure (MC) ALTRET
       87       87                 DU_OPERATOR_WRITE: procedure (CMD$)
       88       88                    DU_OW_SETUP_BUFFER: procedure
       89       89                 DU_ISSUE_OP_MSG: procedure
       90       90                 DU_PRINT_OP_REPLY: procedure
       91       91                 DU_OPERATOR_TEXT: procedure (MC)
       92       92                    DU_OT_SETUP_BUFFER: procedure (L, LGT)
       93       93                    DU_OT_STRIP_TRAILING_BLANKS: procedure (B, I)
       94       94                 DU_HEADER_WRITE: procedure (HC)
       95       95                 DU_FETCH_TEXT: procedure (MC)
       96       96                 DU_SYSTEM_ERRMSG: procedure
       97       97                 DU_SET_EDIT_PROMPT: procedure (BR) ALTRET
       98       98                 DU_SET_PROMPT: procedure (BR,H,HL) ALTRET
       99       99                 DU_GET_DATA_SEGMENT: procedure (NW, DV) ALTRET
      100      100                 DU_FREE_DATA_SEGMENT: procedure (NW, DV) ALTRET
      101      101                 DU_UPDATE_LOG: procedure ALTRET
      102      102                 DU_GET_SITE: procedure ALTRET
      103      103        */
      104      104        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:119  
      105      105        TOU$DU: PROC ALTRET ;

    105  9 000000   000000 700200 xent  TOU$DU       TSX0  ! X66_AUTO_0
         9 000001   000136 000000                    ZERO    94,0
         9 000002   000005 710000 9                  TRA     s:13676

      106      106
      107      107        /* Include Files */
      108      108
      109      109           %INCLUDE B$JIT ;
      110      712           %INCLUDE CP_6 ;
      111     6271           %INCLUDE CP_6_SUBS ;
      112     6811           %INCLUDE B_ERRORS_C ;
      113     7938           %INCLUDE TD$STRUCT ;
      114     8039           %INCLUDE TOU_DEER_M ;
      115     9450           %INCLUDE TOU_RQSTS_E ;
      116     9525           %INCLUDE TO_PERR_C ;
      117    10110           %INCLUDE XU_MACRO_C ;
      118    13216           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:120  
      119    13217        /* Variables */
      120    13218    1      DCL 1 BUFFER,
      121    13219    1            2 REPLY_PENDING          BIT (1) CALIGNED,
      122    13220    1            2 LGTH                   UBIN BYTE CALIGNED,
      123    13221    1            2 TEXT_                  CHAR (%BUF_RCD_LGTH) CALIGNED,
      124    13222    1            2 TEXT (0:%(BUF_RCD_LGTH - 1)) REDEF TEXT_ CHAR (1) CALIGNED,
      125    13223    1            2 REPLY,
      126    13224    1              3 TYC                  UBIN WORD ALIGNED,
      127    13225    1              3 LGTH                 UBIN WORD ALIGNED ;
      128    13226    1      DCL LO_FID      CHAR (40) CALIGNED ;
      129    13227    1      DCL LO_FID_LGTH UBIN WORD ALIGNED ;
      130    13228           %DUP (STCLASS = SYMREF) ;
      131    13371    1      DCL B$JIT$                     PTR SYMREF ;
      132    13372    1      DCL B$TCB$                     PTR SYMREF ;
      133    13373    1      DCL M$IFAD                     DCB ;
      134    13374    1      DCL M$DECKFILE                 DCB ;
      135    13375    1      DCL M$SI                       DCB ;
      136    13376    1      DCL M$DO                       DCB ;
      137    13377    1      DCL FID_RES                    CHAR (4) STATIC CALIGNED;
      138    13378    1      DCL FID_ASN                    UBIN BYTE STATIC CALIGNED;
      139    13379           %VLR_FID   (FPTN    = FID_RESULTS);
      140    13398           %FPT_FID   (FPTN    = FID_INFO,
      141    13399                       ACCT    = FID_ACCT,
      142    13400                       ASN     = FID_ASN,
      143    13401                       NAME    = FID_NAME,
      144    13402                       PASS    = FID_PASS,
      145    13403                       RES     = FID_RES,
      146    13404                       RESULTS = FID_RESULTS,
      147    13405                       SN      = FID_SN,
      148    13406                       WSN     = FID_WSN);
      149    13429           %VLP_ACCT  (FPTN    = FID_ACCT);
      150    13442           %VLP_NAME  (FPTN    = FID_NAME,
      151    13443                       LEN     = 31);
      152    13470           %VLP_PASS  (FPTN    = FID_PASS);
      153    13483           %VLP_SN    (FPTN    = FID_SN,
      154    13484                       N       = %MAX_VOLS,
      155    13485                       SN      = "' ', ' ', ' ', ' ', ' ', ' '");
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:121  
      156    13498           %VLP_WSN   (FPTN    = FID_WSN);
      157    13511           %M$DCB (ASN   = DEVICE,
      158    13512                   CTG   = YES,
      159    13513                   DCBN  = M$LO,
      160    13514                   DISP  = NAMED,
      161    13515                   EXIST = NEWFILE,
      162    13516                   FUN   = CREATE,
      163    13517                   LINES = 66,
      164    13518                   ORG   = UR,
      165    13519                   RES   = 'LP') ;
      166    13593           %B$TCB ;
      167    13596           %B$ALT ;
      168    13604           %F$DCB ;
      169    13661
      170    13662        /* External Entry Points */
      171    13663
      172    13664    1      DCL TOU$REPLACE                ENTRY (2) ;
      173    13665           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:122  
      174    13666        /*D*  NAME:        TOU$DU_SET_IFAD_FID
      175    13667              ENTRY:
      176    13668              AUTHOR:      Scott S. Sheppard
      177    13669              INTERFACE:   DU_SET_IFAD_FID
      178    13670              DESCRIPTION: This entry point calls procedure
      179    13671                           DU_SET_IFAD_FID with parameters.
      180    13672        */
      181    13673
      182    13674    1   TOU$DU_SET_IFAD_FID: ENTRY ALTRET ;

  13674  9 000003   000000 700200 xent  TOU$DU_SET_* TSX0  ! X66_AUTO_0
         9 000004   000136 000000                    ZERO    94,0

      183    13675
      184    13676    1      CALL DU_SET_IFAD_FID (DUP.IFAD.ME_ALLOWED,

  13676  9 000005   000000 237000 10                 LDAQ    0
         9 000006   200066 757100                    STAQ    @LINE_NUMBER+1,,AUTO
         9 000007   000002 237000 10                 LDAQ    2
         9 000010   200064 757100                    STAQ    @SITE_ID+1,,AUTO
         9 000011   000004 237000 10                 LDAQ    4
         9 000012   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000013   000006 236000 10                 LDQ     6
         9 000014   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000015   000355 701000 9                  TSX1    DU_SET_IFAD_FID
         9 000016   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      185    13677    1              DUP.IFAD.ENTERED,
      186    13678    1              DUP.HOLD_AREA,
      187    13679    1              DUP.HOLD_AREA_LGTH,
      188    13680    1              DUP.IFAD.DEVICE_INPUT,
      189    13681    1              DUP.IFAD.FID,
      190    13682    1              DUP.IFAD.FID_LGTH) ALTRET (TOU$DU_ALTRETURN) ;
      191    13683    1      RETURN ;

  13683  9 000017   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:123  
      192    13684
      193    13685        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:124  
      194    13686        /*D*  NAME:        TOU$DU_OPEN_IFAD
      195    13687              ENTRY:
      196    13688              AUTHOR:      Scott S. Sheppard
      197    13689              INTERFACE:   DU_OPEN_IFAD
      198    13690              DESCRIPTION: This entry point calls procedure
      199    13691                           DU_OPEN_IFAD with parameters.
      200    13692        */
      201    13693
      202    13694    1   TOU$DU_OPEN_IFAD: ENTRY ALTRET ;

  13694  9 000020   000000 700200 xent  TOU$DU_OPEN* TSX0  ! X66_AUTO_0
         9 000021   000136 000000                    ZERO    94,0

      203    13695
      204    13696    1      CALL DU_OPEN_IFAD (DUP.IFAD.DEVICE_INPUT,

  13696  9 000022   000007 236000 10                 LDQ     7
         9 000023   200064 756100                    STQ     @SITE_ID+1,,AUTO
         9 000024   000000 237000 10                 LDAQ    0
         9 000025   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000026   000003 236000 10                 LDQ     3
         9 000027   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000030   000555 701000 9                  TSX1    DU_OPEN_IFAD
         9 000031   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      205    13697    1              DUP.IFAD.FID,
      206    13698    1              DUP.IFAD.FID_LGTH,
      207    13699    1              DUP.IFAD.NUM_VOLUMES) ALTRET (TOU$DU_ALTRETURN) ;
      208    13700    1      RETURN ;

  13700  9 000032   000000 702200 xent               TSX2  ! X66_ARET

      209    13701
      210    13702        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:125  
      211    13703        /*D*  NAME:        TOU$DU_NEXT_IFAD
      212    13704              ENTRY:
      213    13705              AUTHOR:      Scott S. Sheppard
      214    13706              INTERFACE:   DU_NEXT_IFAD
      215    13707              DESCRIPTION: This entry point calls procedure
      216    13708                           DU_NEXT_IFAD with parameters.
      217    13709        */
      218    13710
      219    13711    1   TOU$DU_NEXT_IFAD: ENTRY ALTRET ;

  13711  9 000033   000000 700200 xent  TOU$DU_NEXT* TSX0  ! X66_AUTO_0
         9 000034   000136 000000                    ZERO    94,0

      220    13712
      221    13713    1      CALL DU_NEXT_IFAD ALTRET (TOU$DU_ALTRETURN) ;

  13713  9 000035   000662 701000 9                  TSX1    DU_NEXT_IFAD
         9 000036   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      222    13714    1      RETURN ;

  13714  9 000037   000000 702200 xent               TSX2  ! X66_ARET

      223    13715
      224    13716        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:126  
      225    13717        /*D*  NAME:        TOU$DU_CLOSE_IFAD
      226    13718              ENTRY:
      227    13719              AUTHOR:      Scott S. Sheppard
      228    13720              INTERFACE:   DU_CLOSE_IFAD
      229    13721              DESCRIPTION: This entry point calls procedure
      230    13722                           DU_CLOSE_IFAD with parameters.
      231    13723        */
      232    13724
      233    13725    1   TOU$DU_CLOSE_IFAD: ENTRY ALTRET ;

  13725  9 000040   000000 700200 xent  TOU$DU_CLOS* TSX0  ! X66_AUTO_0
         9 000041   000136 000000                    ZERO    94,0

      234    13726
      235    13727    1      CALL DU_CLOSE_IFAD ALTRET (TOU$DU_ALTRETURN) ;

  13727  9 000042   000703 701000 9                  TSX1    DU_CLOSE_IFAD
         9 000043   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      236    13728    1      RETURN ;

  13728  9 000044   000000 702200 xent               TSX2  ! X66_ARET

      237    13729
      238    13730        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:127  
      239    13731        /*D*  NAME:        TOU$DU_SET_MCA
      240    13732              ENTRY:
      241    13733              AUTHOR:      Scott S. Sheppard
      242    13734              INTERFACE:   DU_SET_IFAD_FID
      243    13735                           DU_SET_IFAD_IMU_NUMBER
      244    13736              DESCRIPTION: This entry point calls procedures to properly
      245    13737                           set up the FID and IMU number for IFAD input.
      246    13738        */
      247    13739
      248    13740    1   TOU$DU_SET_MCA: ENTRY ALTRET ;

  13740  9 000045   000000 700200 xent  TOU$DU_SET_* TSX0  ! X66_AUTO_0
         9 000046   000136 000000                    ZERO    94,0

      249    13741
      250    13742    1      CALL DU_SET_IFAD_FID (DUP.IFAD.ME_ALLOWED,

  13742  9 000047   000000 237000 10                 LDAQ    0
         9 000050   200066 757100                    STAQ    @LINE_NUMBER+1,,AUTO
         9 000051   000002 237000 10                 LDAQ    2
         9 000052   200064 757100                    STAQ    @SITE_ID+1,,AUTO
         9 000053   000004 237000 10                 LDAQ    4
         9 000054   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000055   000006 236000 10                 LDQ     6
         9 000056   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000057   000355 701000 9                  TSX1    DU_SET_IFAD_FID
         9 000060   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      251    13743    1              DUP.IFAD.ENTERED,
      252    13744    1              DUP.HOLD_AREA,
      253    13745    1              DUP.HOLD_AREA_LGTH,
      254    13746    1              DUP.IFAD.DEVICE_INPUT,
      255    13747    1              DUP.IFAD.FID,
      256    13748    1              DUP.IFAD.FID_LGTH) ALTRET (TOU$DU_ALTRETURN) ;
      257    13749
      258    13750    1      CALL DU_SET_IFAD_IMU_NUMBER (DUP.IFAD.FID,

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:128  
  13750  9 000061   000010 237000 10                 LDAQ    8
         9 000062   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000063   000000 236000 10                 LDQ     0
         9 000064   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000065   001046 701000 9                  TSX1    DU_SET_IFAD_IMU_NUMBER
         9 000066   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      259    13751    1              DUP.IFAD.FID_LGTH,
      260    13752    1              DUP.IFAD.IMU_NUMBER) ALTRET (TOU$DU_ALTRETURN) ;
      261    13753
      262    13754    1      CALL DU_VALIDATE_IMU_NUMBER (DUP.IFAD.IMU_NUMBER)

  13754  9 000067   000011 236000 10                 LDQ     9
         9 000070   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000071   001216 701000 9                  TSX1    DU_VALIDATE_IMU_NUMBER
         9 000072   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      263    13755    1              ALTRET (TOU$DU_ALTRETURN) ;
      264    13756    1      RETURN ;

  13756  9 000073   000000 702200 xent               TSX2  ! X66_ARET

      265    13757
      266    13758        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:129  
      267    13759        /*D*  NAME:        TOU$DU_OPEN_MCA
      268    13760              ENTRY:
      269    13761              AUTHOR:      Scott S. Sheppard
      270    13762              INTERFACE:   DU_OPEN_MCA
      271    13763              DESCRIPTION: This entry point calls procedure
      272    13764                           DU_OPEN_MCA with parameters.
      273    13765        */
      274    13766
      275    13767    1   TOU$DU_OPEN_MCA: ENTRY ALTRET ;

  13767  9 000074   000000 700200 xent  TOU$DU_OPEN* TSX0  ! X66_AUTO_0
         9 000075   000136 000000                    ZERO    94,0

      276    13768
      277    13769    1      CALL DU_OPEN_MCA (DUP.IFAD.FID,

  13769  9 000076   000011 236000 10                 LDQ     9
         9 000077   200062 756100                    STQ     @SITE_NAME+1,,AUTO
         9 000100   000000 236000 10                 LDQ     0
         9 000101   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000102   001272 701000 9                  TSX1    DU_OPEN_MCA
         9 000103   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      278    13770    1              DUP.IFAD.IMU_NUMBER) ALTRET (TOU$DU_ALTRETURN) ;
      279    13771    1      RETURN ;

  13771  9 000104   000000 702200 xent               TSX2  ! X66_ARET

      280    13772
      281    13773        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:130  
      282    13774        /*D*  NAME:        TOU$DU_CLOSE_MCA
      283    13775              ENTRY:
      284    13776              AUTHOR:      Scott S. Sheppard
      285    13777              INTERFACE:   DU_CLOSE_MCA
      286    13778              DESCRIPTION: This entry point calls procedure
      287    13779                           DU_CLOSE_MCA with parameters.
      288    13780        */
      289    13781
      290    13782    1   TOU$DU_CLOSE_MCA: ENTRY ALTRET ;

  13782  9 000105   000000 700200 xent  TOU$DU_CLOS* TSX0  ! X66_AUTO_0
         9 000106   000136 000000                    ZERO    94,0

      291    13783
      292    13784    1      CALL DU_CLOSE_MCA ALTRET (TOU$DU_ALTRETURN) ;

  13784  9 000107   001333 701000 9                  TSX1    DU_CLOSE_MCA
         9 000110   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      293    13785    1      RETURN ;

  13785  9 000111   000000 702200 xent               TSX2  ! X66_ARET

      294    13786
      295    13787        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:131  
      296    13788        /*D*  NAME:        TOU$DU_MCA_RESET_STATUS
      297    13789              ENTRY:
      298    13790              AUTHOR:      Kathy Larkin
      299    13791              INTERFACE:   DU_MCA_RESET_STATUS
      300    13792              DESCRIPTION: This entry  point  calls  DU_MCA_RESET_STATUS to
      301    13793                           issue a reset status command ('40'O) to the MCA.
      302    13794                           This is done prior to reading a diskette header.
      303    13795        */
      304    13796
      305    13797    1   TOU$DU_MCA_RESET_STATUS: ENTRY ALTRET ;

  13797  9 000112   000000 700200 xent  TOU$DU_MCA_* TSX0  ! X66_AUTO_0
         9 000113   000136 000000                    ZERO    94,0

      306    13798
      307    13799    1      CALL DU_MCA_RESET_STATUS ALTRET (TOU$DU_ALTRETURN) ;

  13799  9 000114   001363 701000 9                  TSX1    DU_MCA_RESET_STATUS
         9 000115   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      308    13800    1      RETURN ;

  13800  9 000116   000000 702200 xent               TSX2  ! X66_ARET

      309    13801
      310    13802        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:132  
      311    13803        /*D*  NAME:        TOU$DU_SET_DF_FID
      312    13804              ENTRY:
      313    13805              AUTHOR:      Scott S. Sheppard
      314    13806              INTERFACE:   DU_SET_DF_FID
      315    13807              DESCRIPTION: This entry point calls procedure DU_SET_DF_FID
      316    13808        */
      317    13809
      318    13810    1   TOU$DU_SET_DF_FID: ENTRY ALTRET ;

  13810  9 000117   000000 700200 xent  TOU$DU_SET_* TSX0  ! X66_AUTO_0
         9 000120   000136 000000                    ZERO    94,0

      319    13811
      320    13812    1      CALL DU_SET_DF_FID (DUP.DF.ENTERED,

  13812  9 000121   000012 237000 10                 LDAQ    10
         9 000122   200064 757100                    STAQ    @SITE_ID+1,,AUTO
         9 000123   000014 237000 10                 LDAQ    12
         9 000124   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000125   000016 236000 10                 LDQ     14
         9 000126   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000127   001435 701000 9                  TSX1    DU_SET_DF_FID
         9 000130   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      321    13813    1              DUP.HOLD_AREA,
      322    13814    1              DUP.HOLD_AREA_LGTH,
      323    13815    1              DUP.DF.FID,
      324    13816    1              DUP.DF.FID_LGTH) ALTRET (TOU$DU_ALTRETURN) ;
      325    13817    1      RETURN ;

  13817  9 000131   000000 702200 xent               TSX2  ! X66_ARET

      326    13818
      327    13819        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:133  
      328    13820        /*D*  NAME:        TOU$DU_OPEN_DF
      329    13821              ENTRY:
      330    13822              AUTHOR:      Scott S. Sheppard
      331    13823              INTERFACE:   DU_OPEN_DF
      332    13824              DESCRIPTION: This entry point calls procedure
      333    13825                           DU_OPEN_DF with parameters.
      334    13826        */
      335    13827
      336    13828    1   TOU$DU_OPEN_DF: ENTRY ALTRET ;

  13828  9 000132   000000 700200 xent  TOU$DU_OPEN* TSX0  ! X66_AUTO_0
         9 000133   000136 000000                    ZERO    94,0

      337    13829
      338    13830    1      CALL DU_OPEN_DF (DUP.DF.ENTERED,

  13830  9 000134   000017 236000 10                 LDQ     15
         9 000135   200066 756100                    STQ     @LINE_NUMBER+1,,AUTO
         9 000136   000020 237000 10                 LDAQ    16
         9 000137   200064 757100                    STAQ    @SITE_ID+1,,AUTO
         9 000140   000012 237000 10                 LDAQ    10
         9 000141   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000142   000016 236000 10                 LDQ     14
         9 000143   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000144   001617 701000 9                  TSX1    DU_OPEN_DF
         9 000145   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      339    13831    1              DUP.DF.FID,
      340    13832    1              DUP.DF.FID_LGTH,
      341    13833    1              DUP.DF.OPEN_TYPE,
      342    13834    1              DUP.DF.REPORT_ERROR,
      343    13835    1              DUP.DF.NO_EXIST) ALTRET (TOU$DU_ALTRETURN) ;
      344    13836    1      RETURN ;

  13836  9 000146   000000 702200 xent               TSX2  ! X66_ARET

      345    13837
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:134  
      346    13838        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:135  
      347    13839        /*D*  NAME:        TOU$DU_CLOSE_DF
      348    13840              ENTRY:
      349    13841              AUTHOR:      Scott S. Sheppard
      350    13842              INTERFACE:   DU_CLOSE_DF
      351    13843              DESCRIPTION: This entry point calls procedure
      352    13844                           DU_CLOSE_DF with parameters.
      353    13845        */
      354    13846
      355    13847    1   TOU$DU_CLOSE_DF: ENTRY ALTRET ;

  13847  9 000147   000000 700200 xent  TOU$DU_CLOS* TSX0  ! X66_AUTO_0
         9 000150   000136 000000                    ZERO    94,0

      356    13848
      357    13849    1      CALL DU_CLOSE_DF (DUP.DF.CLOSE_TYPE) ALTRET (TOU$DU_ALTRETURN) ;

  13849  9 000151   000022 236000 10                 LDQ     18
         9 000152   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000153   002113 701000 9                  TSX1    DU_CLOSE_DF
         9 000154   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      358    13850    1      RETURN ;

  13850  9 000155   000000 702200 xent               TSX2  ! X66_ARET

      359    13851
      360    13852        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:136  
      361    13853        /*D* NAME:         TOU$DU_SET_LO_FID
      362    13854             AUTHOR:       Kathy Larkin
      363    13855             PURPOSE:      Set M$LO to FID specified by user
      364    13856             INTERFACE:    DU_SET_FULL_FID - expand user fid
      365    13857                           DU_OPEN_LO - opens M$LO to fid
      366    13858             PARAMETERS:   None passed.
      367    13859             DATA:         DUP.HOLD_AREA - text of fid name
      368    13860                           DUP.HOLD_AREA_LGTH - length of text string
      369    13861                           DUP.TEMP.OPEN_TYPE - user specified on, over, into
      370    13862                           LO_FID - fid text with account appended
      371    13863                           LO_FID_LGTH - length of LO_FID text string
      372    13864             DESCRIPTION:  This procedure calls DU_SET_FULL_FID to append
      373    13865                           an  account name  to the  fid supplied  in the
      374    13866                           LIST   command,   if   necessary,   and  calls
      375    13867                           DU_OPEN_LO to set M$LO parameters and open the
      376    13868                           DCB.
      377    13869        */
      378    13870        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:137  
      379    13871
      380    13872    1   TOU$DU_SET_LO_FID: ENTRY ALTRET ;

  13872  9 000156   000000 700200 xent  TOU$DU_SET_* TSX0  ! X66_AUTO_0
         9 000157   000136 000000                    ZERO    94,0

      381    13873
      382    13874        /* Code */
      383    13875
      384    13876    1      CALL DU_SET_FULL_FID (DUP.HOLD_AREA,

  13876  9 000160   200056 630500                    EPPR0   LO_FID_LGTH,,AUTO
         9 000161   200102 450500                    STP0    @TARGET_FID+1,,AUTO
         9 000162   200044 631500                    EPPR1   LO_FID,,AUTO
         9 000163   200101 451500                    STP1    @ENTERED_LGTH+1,,AUTO
         9 000164   000002 236000 10                 LDQ     2
         9 000165   200100 756100                    STQ     @ENTERED_FID+1,,AUTO
         9 000166   000005 236000 10                 LDQ     5
         9 000167   200077 756100                    STQ     @LENGTH+2,,AUTO
         9 000170   002160 701000 9                  TSX1    DU_SET_FULL_FID
         9 000171   000000 011000                    NOP     0

      385    13877    1              DUP.HOLD_AREA_LGTH,
      386    13878    1              LO_FID,
      387    13879    1              LO_FID_LGTH) ;
      388    13880    1      CALL DU_OPEN_LO (LO_FID,

  13880  9 000172   000023 236000 10                 LDQ     19
         9 000173   200062 756100                    STQ     @SITE_NAME+1,,AUTO
         9 000174   200044 630500                    EPPR0   LO_FID,,AUTO
         9 000175   200061 450500                    STP0    LO_FID_LGTH+3,,AUTO
         9 000176   000733 701000 9                  TSX1    DU_OPEN_LO
         9 000177   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      389    13881    1              DUP.TEMP.OPEN_TYPE)
      390    13882    1              ALTRET (TOU$DU_ALTRETURN) ;
      391    13883    1      RETURN;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:138  

  13883  9 000200   000000 702200 xent               TSX2  ! X66_ARET

      392    13884        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:139  
      393    13885        /*D*  NAME:        TOU$DU_USER_READ
      394    13886              ENTRY:
      395    13887              AUTHOR:      Scott S. Sheppard
      396    13888              INTERFACE:   DU_USER_READ
      397    13889              DESCRIPTION: This entry point calls procedure
      398    13890                           DU_USER_READ with parameters.
      399    13891        */
      400    13892
      401    13893    1   TOU$DU_USER_READ: ENTRY ALTRET ;

  13893  9 000201   000000 700200 xent  TOU$DU_USER* TSX0  ! X66_AUTO_0
         9 000202   000136 000000                    ZERO    94,0

      402    13894
      403    13895    1      CALL DU_USER_READ (DUP.RESPONSE, DUP.RESPONSE_LGTH)

  13895  9 000203   000024 236000 10                 LDQ     20
         9 000204   200062 756100                    STQ     @SITE_NAME+1,,AUTO
         9 000205   000025 236000 10                 LDQ     21
         9 000206   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000207   002416 701000 9                  TSX1    DU_USER_READ
         9 000210   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      404    13896    1              ALTRET (TOU$DU_ALTRETURN) ;
      405    13897    1      RETURN ;

  13897  9 000211   000000 702200 xent               TSX2  ! X66_ARET

      406    13898
      407    13899        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:140  
      408    13900        /*D*  NAME:        TOU$DU_USER_WRITE
      409    13901              ENTRY:
      410    13902              AUTHOR:      Scott S. Sheppard
      411    13903              INTERFACE:   DU_USER_WRITE
      412    13904              DESCRIPTION: This entry point calls procedure
      413    13905                           DU_USER_WRITE with parameters.
      414    13906        */
      415    13907
      416    13908    1   TOU$DU_USER_WRITE: ENTRY ALTRET ;

  13908  9 000212   000000 700200 xent  TOU$DU_USER* TSX0  ! X66_AUTO_0
         9 000213   000136 000000                    ZERO    94,0

      417    13909
      418    13910    1      CALL DU_USER_WRITE (DUP.MSG_CODE)

  13910  9 000214   000026 236000 10                 LDQ     22
         9 000215   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000216   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000217   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      419    13911    1              ALTRET (TOU$DU_ALTRETURN) ;
      420    13912    1      RETURN ;

  13912  9 000220   000000 702200 xent               TSX2  ! X66_ARET

      421    13913
      422    13914        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:141  
      423    13915        /*D*  NAME:        TOU$DU_PRINTER_WRITE
      424    13916              ENTRY:
      425    13917              AUTHOR:      Scott S. Sheppard
      426    13918              INTERFACE:   DU_PRINTER_WRITE
      427    13919              DESCRIPTION: This entry point calls procedure
      428    13920                           DU_PRINTER_WRITE with parameters.
      429    13921        */
      430    13922
      431    13923    1   TOU$DU_PRINTER_WRITE: ENTRY ALTRET ;

  13923  9 000221   000000 700200 xent  TOU$DU_PRIN* TSX0  ! X66_AUTO_0
         9 000222   000136 000000                    ZERO    94,0

      432    13924
      433    13925    1      CALL DU_PRINTER_WRITE (DUP.MSG_CODE) ALTRET (TOU$DU_ALTRETURN) ;

  13925  9 000223   000026 236000 10                 LDQ     22
         9 000224   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000225   002525 701000 9                  TSX1    DU_PRINTER_WRITE
         9 000226   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      434    13926    1      RETURN ;

  13926  9 000227   000000 702200 xent               TSX2  ! X66_ARET

      435    13927
      436    13928        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:142  
      437    13929        /*D*  NAME:        TOU$DU_PRINTER_OVERWRITE
      438    13930              ENTRY:
      439    13931              AUTHOR:      Scott S. Sheppard
      440    13932              INTERFACE:   DU_PRINTER_OVERWRITE
      441    13933              DESCRIPTION: This entry point calls procedure
      442    13934                           DU_PRINTER_OVERWRITE with parameters.
      443    13935        */
      444    13936
      445    13937    1   TOU$DU_PRINTER_OVERWRITE: ENTRY ALTRET ;

  13937  9 000230   000000 700200 xent  TOU$DU_PRIN* TSX0  ! X66_AUTO_0
         9 000231   000136 000000                    ZERO    94,0

      446    13938
      447    13939    1      CALL DU_PRINTER_OVERWRITE (DUP.MSG_CODE) ALTRET (TOU$DU_ALTRETURN) ;

  13939  9 000232   000026 236000 10                 LDQ     22
         9 000233   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000234   002675 701000 9                  TSX1    DU_PRINTER_OVERWRITE
         9 000235   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      448    13940    1      RETURN ;

  13940  9 000236   000000 702200 xent               TSX2  ! X66_ARET

      449    13941
      450    13942        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:143  
      451    13943        /*D*  NAME:        TOU$DU_OPERATOR_WRITE
      452    13944              ENTRY:
      453    13945              AUTHOR:      Kathy Larkin
      454    13946              INTERFACE:   DU_OPERATOR_WRITE
      455    13947              DESCRIPTION: This entry point calls procedure
      456    13948                           DU_OPERATOR_WRITE to send a message
      457    13949                           to the system operator, and print a
      458    13950                           reply, if required.
      459    13951        */
      460    13952    1   TOU$DU_OPERATOR_WRITE: ENTRY ALTRET ;

  13952  9 000237   000000 700200 xent  TOU$DU_OPER* TSX0  ! X66_AUTO_0
         9 000240   000136 000000                    ZERO    94,0

      461    13953
      462    13954    1      CALL DU_OPERATOR_WRITE (DUP.CMD$) ;

  13954  9 000241   000027 236000 10                 LDQ     23
         9 000242   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000243   003061 701000 9                  TSX1    DU_OPERATOR_WRITE
         9 000244   000000 011000                    NOP     0

      463    13955    1      RETURN;

  13955  9 000245   000000 702200 xent               TSX2  ! X66_ARET

      464    13956
      465    13957        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:144  
      466    13958        /*D*  NAME:        TOU$DU_OPERATOR_TEXT
      467    13959              ENTRY:
      468    13960              AUTHOR:      Kathy Larkin
      469    13961              INTERFACE:   DU_OPERATOR_TEXT
      470    13962              DESCRIPTION: This    entry     point     calls    procedure
      471    13963                           DU_OPERATOR_TEXT to  print the text associated
      472    13964                           with   DUP.MSG_CODE,  located   in  the  error
      473    13965                           message data base,  at the operator's console.
      474    13966                           A reply is read  into DUP.RESPONSE if the text
      475    13967                           message ended in a question mark.
      476    13968        */
      477    13969    1   TOU$DU_OPERATOR_TEXT: ENTRY ALTRET ;

  13969  9 000246   000000 700200 xent  TOU$DU_OPER* TSX0  ! X66_AUTO_0
         9 000247   000136 000000                    ZERO    94,0

      478    13970
      479    13971    1      CALL DU_OPERATOR_TEXT (DUP.MSG_CODE) ;

  13971  9 000250   000026 236000 10                 LDQ     22
         9 000251   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000252   003242 701000 9                  TSX1    DU_OPERATOR_TEXT
         9 000253   000000 011000                    NOP     0

      480    13972    1      RETURN ;

  13972  9 000254   000000 702200 xent               TSX2  ! X66_ARET

      481    13973
      482    13974        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:145  
      483    13975        /*D*  NAME:        TOU$DU_SYSTEM_ERRMSG
      484    13976              ENTRY:
      485    13977              AUTHOR:      Scott S. Sheppard
      486    13978              INTERFACE:   DU_SYSTEM_ERRMSG
      487    13979              DESCRIPTION: This  entry point  calls  procedure
      488    13980                           DU_SYSTEM_ERRMSG.   The entry point
      489    13981                           has an altret only so that it is of
      490    13982                           the same form as the others.
      491    13983        */
      492    13984
      493    13985    1   TOU$DU_SYSTEM_ERRMSG: ENTRY ALTRET ;

  13985  9 000255   000000 700200 xent  TOU$DU_SYST* TSX0  ! X66_AUTO_0
         9 000256   000136 000000                    ZERO    94,0

      494    13986
      495    13987    1      CALL DU_SYSTEM_ERRMSG (DUP.FAULT_ERROR) ;

  13987  9 000257   000030 236000 10                 LDQ     24
         9 000260   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 000261   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 000262   000000 011000                    NOP     0

      496    13988    1      RETURN ;

  13988  9 000263   000000 702200 xent               TSX2  ! X66_ARET

      497    13989
      498    13990        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:146  
      499    13991        /*D*  NAME:        TOU$DU_SET_EDIT_PROMPT
      500    13992              ENTRY:
      501    13993              AUTHOR:      Scott S. Sheppard
      502    13994              INTERFACE:   DU_SET_EDIT_PROMPT
      503    13995              DESCRIPTION: This entry point calls procedure
      504    13996                           DU_SET_EDIT_PROMPT with parameters.
      505    13997        */
      506    13998
      507    13999    1   TOU$DU_SET_EDIT_PROMPT: ENTRY ALTRET ;

  13999  9 000264   000000 700200 xent  TOU$DU_SET_* TSX0  ! X66_AUTO_0
         9 000265   000136 000000                    ZERO    94,0

      508    14000
      509    14001    1      CALL DU_SET_EDIT_PROMPT (DUP.BATCH_MODE) ALTRET (TOU$DU_ALTRETURN);

  14001  9 000266   000031 236000 10                 LDQ     25
         9 000267   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000270   003637 701000 9                  TSX1    DU_SET_EDIT_PROMPT
         9 000271   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      510    14002    1      RETURN ;

  14002  9 000272   000000 702200 xent               TSX2  ! X66_ARET

      511    14003
      512    14004        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:147  
      513    14005        /*D*  NAME:        TOU$DU_SET_PROMPT
      514    14006              ENTRY:
      515    14007              AUTHOR:      Scott S. Sheppard
      516    14008              INTERFACE:   DU_SET_PROMPT
      517    14009              DESCRIPTION: This entry point calls procedure
      518    14010                           DU_SET_PROMPT with parameters.
      519    14011        */
      520    14012
      521    14013    1   TOU$DU_SET_PROMPT: ENTRY ALTRET ;

  14013  9 000273   000000 700200 xent  TOU$DU_SET_* TSX0  ! X66_AUTO_0
         9 000274   000136 000000                    ZERO    94,0

      522    14014
      523    14015    1      CALL DU_SET_PROMPT (DUP.BATCH_MODE, DUP.HOLD_AREA, DUP.HOLD_AREA_LGTH)

  14015  9 000275   000014 237000 10                 LDAQ    12
         9 000276   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000277   000031 236000 10                 LDQ     25
         9 000300   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000301   003665 701000 9                  TSX1    DU_SET_PROMPT
         9 000302   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      524    14016    1              ALTRET (TOU$DU_ALTRETURN) ;
      525    14017    1      RETURN ;

  14017  9 000303   000000 702200 xent               TSX2  ! X66_ARET

      526    14018
      527    14019        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:148  
      528    14020        /*D*  NAME:        TOU$DU_GET_DATA_SEGMENT
      529    14021              ENTRY:
      530    14022              AUTHOR:      Scott S. Sheppard
      531    14023              INTERFACE:   DU_GET_DATA_SEGMENT
      532    14024              DESCRIPTION: This entry point calls procedure
      533    14025                           DU_GET_DATA_SEGMENT with parameters.
      534    14026        */
      535    14027
      536    14028    1   TOU$DU_GET_DATA_SEGMENT: ENTRY ALTRET ;

  14028  9 000304   000000 700200 xent  TOU$DU_GET_* TSX0  ! X66_AUTO_0
         9 000305   000136 000000                    ZERO    94,0

      537    14029
      538    14030    1      CALL DU_GET_DATA_SEGMENT (DUP.NUM_WORDS, DUP.DS_V)

  14030  9 000306   000032 236000 10                 LDQ     26
         9 000307   200062 756100                    STQ     @SITE_NAME+1,,AUTO
         9 000310   000033 236000 10                 LDQ     27
         9 000311   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000312   003730 701000 9                  TSX1    DU_GET_DATA_SEGMENT
         9 000313   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      539    14031    1              ALTRET (TOU$DU_ALTRETURN) ;
      540    14032    1      RETURN ;

  14032  9 000314   000000 702200 xent               TSX2  ! X66_ARET

      541    14033
      542    14034        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:149  
      543    14035        /*D*  NAME:        TOU$DU_FREE_DATA_SEGMENT
      544    14036              ENTRY:
      545    14037              AUTHOR:      Scott S. Sheppard
      546    14038              INTERFACE:   DU_FREE_DATA_SEGMENT
      547    14039              DESCRIPTION: This entry point calls procedure
      548    14040                           DU_FREE_DATA_SEGMENT with parameters.
      549    14041        */
      550    14042
      551    14043    1   TOU$DU_FREE_DATA_SEGMENT: ENTRY ALTRET ;

  14043  9 000315   000000 700200 xent  TOU$DU_FREE* TSX0  ! X66_AUTO_0
         9 000316   000136 000000                    ZERO    94,0

      552    14044
      553    14045    1      CALL DU_FREE_DATA_SEGMENT (DUP.NUM_WORDS, DUP.DS_V)

  14045  9 000317   000032 236000 10                 LDQ     26
         9 000320   200062 756100                    STQ     @SITE_NAME+1,,AUTO
         9 000321   000033 236000 10                 LDQ     27
         9 000322   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000323   003760 701000 9                  TSX1    DU_FREE_DATA_SEGMENT
         9 000324   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      554    14046    1              ALTRET (TOU$DU_ALTRETURN) ;
      555    14047    1      RETURN ;

  14047  9 000325   000000 702200 xent               TSX2  ! X66_ARET

      556    14048
      557    14049        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:150  
      558    14050        /*D*  NAME:        TOU$DU_UPDATE_LOG
      559    14051              ENTRY:
      560    14052              AUTHOR:      Scott S. Sheppard
      561    14053              INTERFACE:   DU_UPDATE_LOG
      562    14054              DESCRIPTION: This entry point calls procedure DU_UPDATE_LOG
      563    14055        */
      564    14056
      565    14057    1   TOU$DU_UPDATE_LOG: ENTRY ALTRET ;

  14057  9 000326   000000 700200 xent  TOU$DU_UPDA* TSX0  ! X66_AUTO_0
         9 000327   000136 000000                    ZERO    94,0

      566    14058
      567    14059    1      CALL DU_UPDATE_LOG (DUP.LOG.TYPE,

  14059  9 000330   000005 236000 10                 LDQ     5
         9 000331   200064 756100                    STQ     @SITE_ID+1,,AUTO
         9 000332   000034 237000 10                 LDAQ    28
         9 000333   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000334   000036 236000 10                 LDQ     30
         9 000335   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000336   004010 701000 9                  TSX1    DU_UPDATE_LOG
         9 000337   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      568    14060    1              DUP.LOG.CATALOG,
      569    14061    1              DUP.LOG.DECK,
      570    14062    1              DUP.HOLD_AREA) ALTRET (TOU$DU_ALTRETURN) ;
      571    14063    1      RETURN ;

  14063  9 000340   000000 702200 xent               TSX2  ! X66_ARET

      572    14064
      573    14065        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:151  
      574    14066        /*D*  NAME:        TOU$DU_GET_SITE
      575    14067              ENTRY:
      576    14068              AUTHOR:      Scott S. Sheppard
      577    14069              INTERFACE:   DU_GET_SITE
      578    14070              DESCRIPTION: This entry point calls procedure DU_GET_SITE
      579    14071        */
      580    14072
      581    14073    1   TOU$DU_GET_SITE: ENTRY ALTRET ;

  14073  9 000341   000000 700200 xent  TOU$DU_GET_* TSX0  ! X66_AUTO_0
         9 000342   000136 000000                    ZERO    94,0

      582    14074
      583    14075    1      CALL DU_GET_SITE (DUP.SITE_NAME.TEXT, DUP.SITE_NAME.LGTH,

  14075  9 000343   000037 236000 10                 LDQ     31
         9 000344   200064 756100                    STQ     @SITE_ID+1,,AUTO
         9 000345   000040 237000 10                 LDAQ    32
         9 000346   200062 757100                    STAQ    @SITE_NAME+1,,AUTO
         9 000347   000042 236000 10                 LDQ     34
         9 000350   200061 756100                    STQ     LO_FID_LGTH+3,,AUTO
         9 000351   004150 701000 9                  TSX1    DU_GET_SITE
         9 000352   000354 702000 9                  TSX2    TOU$DU_ALTRETURN

      584    14076    1              DUP.SITE_ID, DUP.CPU_TYPE) ALTRET (TOU$DU_ALTRETURN) ;
      585    14077    1      RETURN ;

  14077  9 000353   000000 702200 xent               TSX2  ! X66_ARET

      586    14078
      587    14079        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:152  
      588    14080        /*D*  NAME:        TOU$DU_ALTRETURN
      589    14081              LABEL:
      590    14082              AUTHOR:      Scott S. Sheppard
      591    14083              DESCRIPTION: This label is specified by all TOU$DU entry
      592    14084                           points as the alternate return label.  This
      593    14085                           label allows the called entry to  altreturn
      594    14086                           to the calling procedure.
      595    14087        */
      596    14088
      597    14089    1   TOU$DU_ALTRETURN:
      598    14090    1      ALTRETURN ;

  14090  9 000354   000000 702200 xent  TOU$DU_ALTR* TSX2  ! X66_AALT

      599    14091
      600    14092        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:153  
      601    14093        /*I*  NAME:        DU_SET_IFAD_FID
      602    14094              AUTHOR:      Scott S. Sheppard
      603    14095                           Kathy Larkin
      604    14096              PURPOSE:     Sets IFAD File Id
      605    14097              INTERFACE:   DU_USER_WRITE
      606    14098                           DU_SET_FID
      607    14099                           DU_UNFID_DCB
      608    14100                           DCBNUM function
      609    14101                           DCBADDR function
      610    14102              INPUT:       IFAD_ENTERED - set if IFAD descriptor entered
      611    14103                           F$DCB.AMR#   - set if M$IFAD dcb has a merge rcd
      612    14104              OUTPUT:      FID_ open params set
      613    14105                           IFAD_FID
      614    14106                           IFAD_FID_LGTH
      615    14107              DESCRIPTION: This procedure calls the correct procedure to set
      616    14108                           the IFAD descriptor field.  The routine checks to
      617    14109                           determine if the FID was entered or if a !SET cmd
      618    14110                           was issued under IBEX.If both of these conditions
      619    14111                           are false,the procedure reports that IFAD must be
      620    14112                           set and ALTRETURNS.
      621    14113        */
      622    14114
      623    14115    1   DU_SET_IFAD_FID: PROC (ME_ALLOWED,

  14115  9 000355   200060 741300       DU_SET_IFAD* STX1  ! LO_FID_LGTH+2,,AUTO

      624    14116    1              IFAD_ENTERED,
      625    14117    1              HELD_IFAD,
      626    14118    1              HELD_IFAD_LGTH,
      627    14119    1              DEVICE_INPUT,
      628    14120    1              IFAD_FID,
      629    14121    1              IFAD_FID_LGTH) ALTRET ;
      630    14122        %EJECT;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:154  
      631    14123    2      DCL ME_ALLOWED                 BIT (1) CALIGNED ;
      632    14124    2      DCL IFAD_ENTERED               BIT (1) CALIGNED ;
      633    14125    2      DCL HELD_IFAD                  CHAR (40) CALIGNED ;
      634    14126    2      DCL HELD_IFAD_LGTH             UBIN WORD ALIGNED ;
      635    14127    2      DCL DEVICE_INPUT               BIT (1) CALIGNED ;
      636    14128    2      DCL IFAD_FID                   CHAR (40) CALIGNED ;
      637    14129    2      DCL IFAD_FID_LGTH              UBIN WORD ALIGNED ;
      638    14130    2      DCL DCB$                       PTR ALIGNED ;
      639    14131
      640    14132        /* Code */
      641    14133
      642    14134    2      DCB$ = DCBADDR (DCBNUM (M$IFAD));

  14134  9 000356   000000 236007 xsym               LDQ     M$IFAD,DL
         9 000357   000043 470400 10                 LDP0    35
         9 000360   000000 471500                    LDP1    0,,PR0
         9 000361   100000 236106                    LDQ     0,QL,PR1
         9 000362   200070 756100                    STQ     DCB$,,AUTO

      643    14135    2      IF IFAD_ENTERED

  14135  9 000363   200062 473500                    LDP3    @IFAD_ENTERED,,AUTO
         9 000364   000000 066500                    CMPB    filb='0'B
         9 000365   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1
         9 000366   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 000367   000414 600000 9                  TZE     s:14142

      644    14136    3      THEN DO;

      645    14137    3              IFAD_FID = HELD_IFAD;

  14137  9 000370   200063 474500                    LDP4    @HELD_IFAD,,AUTO
         9 000371   200066 475500                    LDP5    @IFAD_FID,,AUTO
         9 000372   040100 100500                    MLR     fill='040'O
         9 000373   400000 000050                    ADSC9   0,,PR4                   cn=0,n=40
         9 000374   500000 000050                    ADSC9   0,,PR5                   cn=0,n=40

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:155  
      646    14138    3              IFAD_FID_LGTH = HELD_IFAD_LGTH;

  14138  9 000375   200064 476500                    LDP6    @HELD_IFAD_LGTH,,AUTO
         9 000376   200067 477500                    LDP7    @IFAD_FID_LGTH,,AUTO
         9 000377   600000 235100                    LDA     0,,PR6
         9 000400   700000 755100                    STA     0,,PR7

      647    14139    3              CALL DU_SET_FID (IFAD_FID) ALTRET (ERROR);

  14139  9 000401   200066 236100                    LDQ     @IFAD_FID,,AUTO
         9 000402   200073 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 000403   002336 701000 9                  TSX1    DU_SET_FID
         9 000404   000445 702000 9                  TSX2    ERROR

      648    14140    3              CALL DU_CHECK_IFAD_ASN (FID_ASN, FID_RES);

  14140  9 000405   000044 236000 10                 LDQ     36
         9 000406   200074 756100                    STQ     @DCB_NUM+1,,AUTO
         9 000407   000045 236000 10                 LDQ     37
         9 000410   200073 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 000411   000451 701000 9                  TSX1    DU_CHECK_IFAD_ASN
         9 000412   000000 011000                    NOP     0

      649    14141    3           END /* THEN DO */;

  14141  9 000413   000447 710000 9                  TRA     s:14153

      650    14142    2      ELSE IF DCB$ -> F$DCB.AMR#

  14142  9 000414   200070 474500                    LDP4    DCB$,,AUTO
         9 000415   400031 236100                    LDQ     25,,PR4
         9 000416   010000 316007                    CANQ    4096,DL
         9 000417   000441 600000 9                  TZE     s:14149

      651    14143    3         THEN DO;

      652    14144    3                 CALL DU_UNFID_DCB (DCBNUM (M$IFAD), IFAD_FID, IFAD_FID_LGTH)
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:156  

  14144  9 000420   000000 236007 xsym               LDQ     M$IFAD,DL
         9 000421   200132 756100                    STQ     ALT$+4,,AUTO
         9 000422   200066 237100                    LDAQ    @IFAD_FID,,AUTO
         9 000423   200074 757100                    STAQ    @DCB_NUM+1,,AUTO
         9 000424   200132 635500                    EPPR5   ALT$+4,,AUTO
         9 000425   200073 455500                    STP5    LINE_NUMBER+3,,AUTO
         9 000426   002370 701000 9                  TSX1    DU_UNFID_DCB
         9 000427   000445 702000 9                  TSX2    ERROR

      653    14145    3                         ALTRET (ERROR);
      654    14146    3                 CALL DU_CHECK_IFAD_ASN (DCB$ -> F$DCB.ASN#, DCB$ -> F$DCB.RES#);

  14146  9 000430   200070 236100                    LDQ     DCB$,,AUTO
         9 000431   000026 036003                    ADLQ    22,DU
         9 000432   200074 756100                    STQ     @DCB_NUM+1,,AUTO
         9 000433   200070 236100                    LDQ     DCB$,,AUTO
         9 000434   000046 036000 10                 ADLQ    38
         9 000435   200073 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 000436   000451 701000 9                  TSX1    DU_CHECK_IFAD_ASN
         9 000437   000000 011000                    NOP     0

      655    14147    3              END /* THEN DO */;

  14147  9 000440   000447 710000 9                  TRA     s:14153

      656    14148    3         ELSE DO ;

      657    14149    3                 CALL DU_USER_WRITE (%E$DSIF_NO_IFAD) ;

  14149  9 000441   000050 236000 10                 LDQ     40
         9 000442   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000443   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000444   000000 011000                    NOP     0

      658    14150    3   ERROR:
      659    14151    3                 ALTRETURN ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:157  

  14151  9 000445   200060 221300       ERROR        LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000446   000000 702211                    TSX2  ! 0,X1

      660    14152    3              END /* ELSE */ ;
      661    14153    2      RETURN ;

  14153  9 000447   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000450   000001 702211                    TSX2  ! 1,X1

      662    14154
      663    14155        /* END DU_SET_IFAD_FID */
      664    14156        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:158  
      665    14157        /*I*  NAME:        DU_CHECK_IFAD_ASN
      666    14158              AUTHOR:      Scott S. Sheppard
      667    14159                           Kathy Larkin
      668    14160              PURPOSE:     Checks IFAD ASN
      669    14161              INTERFACE:   DU_USER_WRITE
      670    14162                           DU_SET_FULL_FID
      671    14163                           M$FID Monitor Service
      672    14164              INPUT:       HELD_IFAD      - FID entered as part of the DEER
      673    14165                                            command
      674    14166                           HELD_IFAD_LGTH
      675    14167                           ME_ALLOWED - flag if IFAD can be !SET to 'ME'
      676    14168              OUTPUT:      DEVICE_INPUT   - set if M$IFAD is associated with
      677    14169                                          a device
      678    14170                           IFAD_FID   - NAME.ACCOUNT or FT#nnnnnn for IFAD
      679    14171                           IFAD_FID_LGTH
      680    14172              DESCRIPTION: This procedure sets the IFAD descriptor field
      681    14173                           using the file identifier saved from the DEER
      682    14174                           command. The procedure validates that the fid
      683    14175                           entered is acceptable for IFAD.
      684    14176        */
      685    14177        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:159  
      686    14178    2   DU_CHECK_IFAD_ASN: PROC (IFAD_ASN, IFAD_RES) ALTRET ;

  14178  9 000451   200072 741300       DU_CHECK_IF* STX1  ! LINE_NUMBER+2,,AUTO

      687    14179
      688    14180    3      DCL IFAD_ASN    UBIN BYTE HALIGNED;
      689    14181    3      DCL IFAD_RES    CHAR (4) CALIGNED;
      690    14182
      691    14183        /* Code */
      692    14184
      693    14185    4      DO CASE (IFAD_ASN) ;

  14185  9 000452   200073 470500                    LDP0    @IFAD_ASN,,AUTO
         9 000453   000100 101500                    MRL     fill='000'O
         9 000454   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 000455   200130 000002                    ADSC9   ALT$+2,,AUTO             cn=0,n=2
         9 000456   200130 220100                    LDX0    ALT$+2,,AUTO
         9 000457   000004 100003                    CMPX0   4,DU
         9 000460   000462 602010 9                  TNC     s:14185+8,X0
         9 000461   000545 710000 9                  TRA     s:14206
         9 000462   000545 710000 9                  TRA     s:14206
         9 000463   000527 710000 9                  TRA     s:14203
         9 000464   000545 710000 9                  TRA     s:14206
         9 000465   000466 710000 9                  TRA     s:14187

      694    14186    4         CASE (%DEVICE#) ;

      695    14187    4            DEVICE_INPUT = %TRUE ;

  14187  9 000466   200065 471500                    LDP1    @DEVICE_INPUT,,AUTO
         9 000467   003100 060400                    CSL     bolr='003'O
         9 000470   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         9 000471   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      696    14188    5            DO SELECT (SUBSTR (IFAD_RES, 0, 2)) ;

  14188  9 000472   200074 473500                    LDP3    @IFAD_RES,,AUTO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:160  
         9 000473   040000 106500                    CMPC    fill='040'O
         9 000474   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         9 000475   000002 000002 8                  ADSC9   THREE_QUESTION_MARKS+1   cn=0,n=2
         9 000476   000521 602000 9                  TNC     s:14199
         9 000477   000505 600000 9                  TZE     s:14189
         9 000500   040000 106500                    CMPC    fill='040'O
         9 000501   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         9 000502   000003 000002 8                  ADSC9   THREE_QUESTION_MARKS+2   cn=0,n=2
         9 000503   000521 601000 9                  TNZ     s:14199
         9 000504   000506 710000 9                  TRA     s:14192

      697    14189    5               SELECT ('FT') ;

  14189  9 000505   000553 710000 9                  TRA     s:14209

      698    14190                       /* Free Tape is legal */
      699    14191    5               SELECT ('ME') ;

      700    14192    5               IF ME_ALLOWED

  14192  9 000506   200061 474500                    LDP4    @ME_ALLOWED,,AUTO
         9 000507   000000 066500                    CMPB    filb='0'B
         9 000510   400000 000001                    BDSC    0,,PR4                   by=0,bit=0,n=1
         9 000511   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 000512   000553 601000 9                  TNZ     s:14209

      701    14193    5               THEN /* Do Nothing */ ;
      702    14194    6               ELSE DO ;

      703    14195    6                       CALL DU_USER_WRITE (%E$DIFH_NOT_ME) ;

  14195  9 000513   000052 236000 10                 LDQ     42
         9 000514   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000515   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000516   000000 011000                    NOP     0

      704    14196    6                       ALTRETURN ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:161  

  14196  9 000517   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 000520   000000 702211                    TSX2  ! 0,X1

      705    14197    6                    END /* ELSE */ ;
      706    14198    5               SELECT (ELSE) ;

      707    14199    5            CALL DU_USER_WRITE (%E$DIFM_DEVICE) ;

  14199  9 000521   000054 236000 10                 LDQ     44
         9 000522   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000523   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000524   000000 011000                    NOP     0

      708    14200    5            ALTRETURN ;

  14200  9 000525   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 000526   000000 702211                    TSX2  ! 0,X1

      709    14201    5            END /* SELECT */ ;

      710    14202    4         CASE (%FILE#) ;

      711    14203    4            DEVICE_INPUT = %FALSE ;

  14203  9 000527   200065 471500                    LDP1    @DEVICE_INPUT,,AUTO
         9 000530   003100 060400                    CSL     bolr='003'O
         9 000531   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         9 000532   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      712    14204    4            CALL DU_SET_FULL_FID (IFAD_FID, IFAD_FID_LGTH, IFAD_FID, IFAD_FID_LGTH);

  14204  9 000533   200067 236100                    LDQ     @IFAD_FID_LGTH,,AUTO
         9 000534   200102 756100                    STQ     @TARGET_FID+1,,AUTO
         9 000535   200066 236100                    LDQ     @IFAD_FID,,AUTO
         9 000536   200067 235100                    LDA     @IFAD_FID_LGTH,,AUTO
         9 000537   200100 757100                    STAQ    @ENTERED_FID+1,,AUTO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:162  
         9 000540   200066 236100                    LDQ     @IFAD_FID,,AUTO
         9 000541   200077 756100                    STQ     @LENGTH+2,,AUTO
         9 000542   002160 701000 9                  TSX1    DU_SET_FULL_FID
         9 000543   000000 011000                    NOP     0
         9 000544   000553 710000 9                  TRA     s:14209

      713    14205    4         CASE (ELSE) ;

      714    14206    4            CALL DU_USER_WRITE (%E$DIFM_ASN) ;

  14206  9 000545   000056 236000 10                 LDQ     46
         9 000546   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000547   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000550   000000 011000                    NOP     0

      715    14207    4            ALTRETURN ;

  14207  9 000551   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 000552   000000 702211                    TSX2  ! 0,X1

      716    14208    4      END /* CASE */ ;

      717    14209    3      RETURN ;

  14209  9 000553   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 000554   000001 702211                    TSX2  ! 1,X1

      718    14210
      719    14211    3   END DU_CHECK_IFAD_ASN ;
      720    14212    2   END DU_SET_IFAD_FID ;
      721    14213        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:163  
      722    14214        /*I*  NAME:        DU_OPEN_IFAD
      723    14215              AUTHOR:      Scott S. Sheppard
      724    14216              PURPOSE:     Opens IFAD input source
      725    14217              INTERFACE:   DU_USER_WRITE
      726    14218                           DU_SYSTEM_ERRMSG
      727    14219                           DU_SET_IFAD_SNS
      728    14220                           DU_SET_IFAD_NAME_ACCOUNT
      729    14221                           M$OPEN
      730    14222              INPUT:       F$DCB.FCD# - set if dcb is currently open
      731    14223              OUTPUT:      IFAD input source is opened.
      732    14224                           NUM_VOLUMES - number of IFAD volumes
      733    14225              DESCRIPTION: This procedure opens the IFAD input source.
      734    14226                           It activates the M$IFAD dcb.
      735    14227        */
      736    14228
      737    14229    1   DU_OPEN_IFAD: PROC (DEVICE_INPUT,

  14229  9 000555   200060 741300       DU_OPEN_IFAD STX1  ! LO_FID_LGTH+2,,AUTO

      738    14230    1              IFAD_FID,
      739    14231    1              IFAD_FID_LGTH,
      740    14232    1              NUM_VOLUMES) ALTRET ;
      741    14233
      742    14234    2      DCL DEVICE_INPUT               BIT (1) CALIGNED ;
      743    14235    2      DCL IFAD_FID                   CHAR (40) CALIGNED ;
      744    14236    2      DCL IFAD_FID_LGTH              UBIN WORD ALIGNED ;
      745    14237    2      DCL NUM_VOLUMES                UBIN WORD ALIGNED ;
      746    14238    2      DCL IFAD_TEXT_FID              CHAR (40) STATIC CALIGNED ;
      747    14239           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:164  
      748    14240        /* Function Parameter Tables */
      749    14241
      750    14242           %FPT_OPEN (FPTN  = IFAD_TAPE_DEVICE,
      751    14243                      ASN   = DEVICE,
      752    14244                      CVOL  = YES,
      753    14245                      DCB   = M$IFAD,
      754    14246                      FUN   = IN,
      755    14247                      ORG   = FREE,
      756    14248                      SN    = IFAD_SN) ;
      757    14357
      758    14358           %FPT_OPEN (FPTN  = IFAD_DISK_FILE,
      759    14359                      ACCT  = IFAD_ACCT,
      760    14360                      ASN   = FILE,
      761    14361                      DCB   = M$IFAD,
      762    14362                      FUN   = IN,
      763    14363                      NAME  = IFAD_NAME) ;
      764    14472
      765    14473           %FPT_FID (FPTN    = SETUP_IFAD_TAPE,
      766    14474                     ACCT    = IFAD_ACCT,
      767    14475                     ASN     = IFAD_TAPE_DEVICE.V.ASN#,
      768    14476                     NAME    = IFAD_NAME,
      769    14477                     PASS    = IFAD_PASS,
      770    14478                     RES     = IFAD_TAPE_DEVICE.V.RES#,
      771    14479                     SACCT   = YES,
      772    14480                     SNAME   = YES,
      773    14481                     SPASS   = YES,
      774    14482                     SRES    = NO,
      775    14483                     SSN     = NO,
      776    14484                     SWSN    = YES,
      777    14485                     SN      = IFAD_SN,
      778    14486                     TEXTFID = IFAD_TEXT_FID,
      779    14487                     WSN     = IFAD_WSN) ;
      780    14510           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:165  
      781    14511           %FPT_FID (FPTN    = SETUP_IFAD_DISK,
      782    14512                     ACCT    = IFAD_ACCT,
      783    14513                     ASN     = IFAD_DISK_FILE.V.ASN#,
      784    14514                     NAME    = IFAD_NAME,
      785    14515                     PASS    = IFAD_PASS,
      786    14516                     RES     = IFAD_DISK_FILE.V.RES#,
      787    14517                     SACCT   = NO,
      788    14518                     SNAME   = NO,
      789    14519                     SPASS   = YES,
      790    14520                     SRES    = NO,
      791    14521                     SSN     = YES,
      792    14522                     SWSN    = YES,
      793    14523                     SN      = IFAD_SN,
      794    14524                     TEXTFID = IFAD_TEXT_FID,
      795    14525                     WSN     = IFAD_WSN) ;
      796    14548
      797    14549        /* Variable Length Parameters */
      798    14550
      799    14551           %VLP_SN (FPTN = IFAD_SN,
      800    14552                    N    = %MAX_VOLS,
      801    14553                    SN   = "' ', ' ', ' ', ' ', ' ', ' '") ;
      802    14566
      803    14567           %VLP_NAME (FPTN = IFAD_NAME,
      804    14568                      LEN  = 31) ;
      805    14595
      806    14596           %VLP_ACCT (FPTN = IFAD_ACCT) ;
      807    14609
      808    14610           %VLP_PASS (FPTN = IFAD_PASS) ;
      809    14623
      810    14624           %VLP_WSN (FPTN = IFAD_WSN) ;
      811    14637           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:166  
      812    14638        /* Code */
      813    14639
      814    14640    2      IF DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.FCD#

  14640  9 000556   000000 236007 xsym               LDQ     M$IFAD,DL
         9 000557   000043 470400 10                 LDP0    35
         9 000560   000000 471500                    LDP1    0,,PR0
         9 000561   100000 473506                    LDP3    0,QL,PR1
         9 000562   300031 236100                    LDQ     25,,PR3
         9 000563   020000 316007                    CANQ    8192,DL
         9 000564   000573 600000 9                  TZE     s:14646

      815    14641    3      THEN DO ;

      816    14642    3              CALL DU_USER_WRITE (%E$DOI_ALREADY_OPEN) ;

  14642  9 000565   000060 236000 10                 LDQ     48
         9 000566   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000567   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000570   000000 011000                    NOP     0

      817    14643    3              ALTRETURN ;

  14643  9 000571   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000572   000000 702211                    TSX2  ! 0,X1

      818    14644    3           END /* THEN */ ;
      819    14645    3      ELSE DO ;

      820    14646    3              IFAD_TEXT_FID = IFAD_FID ;

  14646  9 000573   200062 473500                    LDP3    @IFAD_FID,,AUTO
         9 000574   040000 100500                    MLR     fill='040'O
         9 000575   300000 000050                    ADSC9   0,,PR3                   cn=0,n=40
         9 000576   000074 000050 5                  ADSC9   IFAD_TEXT_FID            cn=0,n=40

      821    14647    3              IF DEVICE_INPUT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:167  

  14647  9 000577   200061 474500                    LDP4    @DEVICE_INPUT,,AUTO
         9 000600   000000 066500                    CMPB    filb='0'B
         9 000601   400000 000001                    BDSC    0,,PR4                   by=0,bit=0,n=1
         9 000602   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 000603   000620 600000 9                  TZE     s:14654

      822    14648    4              THEN DO ;

      823    14649    4                      CALL M$FID (SETUP_IFAD_TAPE) ALTRET (OPEN_ERR) ;

  14649  9 000604   000272 630400 5                  EPPR0   SETUP_IFAD_TAPE
         9 000605   420001 713400                    CLIMB   alt,+8193
         9 000606   404400 401760                    pmme    nvectors=10
         9 000607   000635 702000 9                  TSX2    OPEN_ERR

      824    14650    4                      CALL M$OPEN (IFAD_TAPE_DEVICE) ALTRET (OPEN_ERR) ;

  14650  9 000610   000106 630400 5                  EPPR0   IFAD_TAPE_DEVICE
         9 000611   450000 713400                    CLIMB   alt,open
         9 000612   410400 401760                    pmme    nvectors=18
         9 000613   000635 702000 9                  TSX2    OPEN_ERR

      825    14651    4                      NUM_VOLUMES = IFAD_SN.NUM# ;

  14651  9 000614   000352 235000 5                  LDA     IFAD_SN
         9 000615   200064 470500                    LDP0    @NUM_VOLUMES,,AUTO
         9 000616   000000 755100                    STA     0,,PR0

      826    14652    4                   END /* THEN */ ;

  14652  9 000617   000633 710000 9                  TRA     s:14658

      827    14653    4              ELSE DO ;

      828    14654    4                      CALL M$FID (SETUP_IFAD_DISK) ALTRET (OPEN_ERR) ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:168  
  14654  9 000620   000322 630400 5                  EPPR0   SETUP_IFAD_DISK
         9 000621   420001 713400                    CLIMB   alt,+8193
         9 000622   404400 401760                    pmme    nvectors=10
         9 000623   000635 702000 9                  TSX2    OPEN_ERR

      829    14655    4                      CALL M$OPEN (IFAD_DISK_FILE) ALTRET (OPEN_ERR) ;

  14655  9 000624   000200 630400 5                  EPPR0   IFAD_DISK_FILE
         9 000625   450000 713400                    CLIMB   alt,open
         9 000626   410400 401760                    pmme    nvectors=18
         9 000627   000635 702000 9                  TSX2    OPEN_ERR

      830    14656    4                      NUM_VOLUMES = 1 ;

  14656  9 000630   000001 235007                    LDA     1,DL
         9 000631   200064 470500                    LDP0    @NUM_VOLUMES,,AUTO
         9 000632   000000 755100                    STA     0,,PR0

      831    14657    4                   END /* ELSE */ ;

      832    14658    3              RETURN ;

  14658  9 000633   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000634   000001 702211                    TSX2  ! 1,X1

      833    14659    3           END /* ELSE */ ;
      834    14660
      835    14661    2   OPEN_ERR:
      836    14662    2      IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOFILE

  14662  9 000635   000000 470400 xsym  OPEN_ERR     LDP0    B$TCB$
         9 000636   000000 471500                    LDP1    0,,PR0
         9 000637   100102 236100                    LDQ     66,,PR1
         9 000640   377770 376007                    ANQ     131064,DL
         9 000641   001610 116007                    CMPQ    904,DL
         9 000642   000650 601000 9                  TNZ     s:14665

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:169  
      837    14663    2      THEN CALL DU_USER_WRITE (%E$DOI_NO_FILE) ;

  14663  9 000643   000062 236000 10                 LDQ     50
         9 000644   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000645   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000646   000000 011000                    NOP     0
         9 000647   000660 710000 9                  TRA     s:14668

      838    14664    3      ELSE DO ;

      839    14665    3              CALL DU_USER_WRITE (%E$DOI_OPEN_ERROR) ;

  14665  9 000650   000064 236000 10                 LDQ     52
         9 000651   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000652   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000653   000000 011000                    NOP     0

      840    14666    3              CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  14666  9 000654   000065 236000 10                 LDQ     53
         9 000655   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 000656   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 000657   000000 011000                    NOP     0

      841    14667    3           END /* ELSE */ ;

      842    14668    2      ALTRETURN ;

  14668  9 000660   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000661   000000 702211                    TSX2  ! 0,X1

      843    14669
      844    14670    2   END DU_OPEN_IFAD ;
      845    14671        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:170  
      846    14672        /*I*  NAME:        DU_NEXT_IFAD
      847    14673              AUTHOR:      Scott S. Sheppard
      848    14674              PURPOSE:     Mounts Next IFAD volume
      849    14675              INTERFACE:   M$CVOL Monitor Service     DCBNUM Function
      850    14676                           DU_USER_WRITE              DCBADDR Function
      851    14677                           DU_SYSTEM_ERRMSG
      852    14678              INPUT:       No system data accessed.
      853    14679              OUTPUT:      M$IFAD current volume closed, next mounted
      854    14680              DESCRIPTION: This procedure closes the current volume of the
      855    14681                           IFAD input tape  and mounts the next  volume of
      856    14682                           the volume set.
      857    14683        */
      858    14684
      859    14685    1   DU_NEXT_IFAD: PROC ALTRET ;

  14685  9 000662   200060 741300       DU_NEXT_IFAD STX1  ! LO_FID_LGTH+2,,AUTO

      860    14686
      861    14687           %FPT_CVOL (FPTN = NEXT_IFAD,
      862    14688                      DCB  = M$IFAD) ;
      863    14703
      864    14704        /* Code */
      865    14705
      866    14706    2      CALL M$CVOL (NEXT_IFAD) ALTRET (CVOL_ERROR) ;

  14706  9 000663   000402 630400 5                  EPPR0   NEXT_IFAD
         9 000664   450004 713400                    CLIMB   alt,+20484
         9 000665   401000 401760                    pmme    nvectors=3
         9 000666   000671 702000 9                  TSX2    CVOL_ERROR

      867    14707    2      RETURN ;

  14707  9 000667   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000670   000001 702211                    TSX2  ! 1,X1

      868    14708
      869    14709    2   CVOL_ERROR:
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:171  
      870    14710    2      CALL DU_USER_WRITE (%E$DNI_CVOL_ERROR) ;

  14710  9 000671   000067 236000 10    CVOL_ERROR   LDQ     55
         9 000672   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000673   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000674   000000 011000                    NOP     0

      871    14711    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  14711  9 000675   000065 236000 10                 LDQ     53
         9 000676   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 000677   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 000700   000000 011000                    NOP     0

      872    14712    2      ALTRETURN ;

  14712  9 000701   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000702   000000 702211                    TSX2  ! 0,X1

      873    14713
      874    14714    2   END DU_NEXT_IFAD ;
      875    14715        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:172  
      876    14716        /*I*  NAME:        DU_CLOSE_IFAD
      877    14717              AUTHOR:      Scott S. Sheppard
      878    14718              PURPOSE:     Closes IFAD
      879    14719              INTERFACE:   M$CLOSE Monitor Service     DCBNUM Function
      880    14720                           DU_USER_WRITE               DCBADDR Function
      881    14721                           DU_SYSTEM_ERRMSG
      882    14722              INPUT:       F$DCB.FCD# - IFAD Open flag
      883    14723              OUTPUT:      M$IFAD DCB closed.
      884    14724              DESCRIPTION: This procedure closes the IFAD input source.
      885    14725                           If tape is used, the tape is rewound.
      886    14726        */
      887    14727
      888    14728    1   DU_CLOSE_IFAD: PROC ALTRET ;

  14728  9 000703   200060 741300       DU_CLOSE_IF* STX1  ! LO_FID_LGTH+2,,AUTO

      889    14729
      890    14730           %FPT_CLOSE (FPTN = CLOSE_IFAD,
      891    14731                       DCB  = M$IFAD,
      892    14732                       POS  = REL) ;
      893    14774
      894    14775        /* Code */
      895    14776
      896    14777    2      IF DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.FCD#

  14777  9 000704   000000 236007 xsym               LDQ     M$IFAD,DL
         9 000705   000043 470400 10                 LDP0    35
         9 000706   000000 471500                    LDP1    0,,PR0
         9 000707   100000 473506                    LDP3    0,QL,PR1
         9 000710   300031 236100                    LDQ     25,,PR3
         9 000711   020000 316007                    CANQ    8192,DL
         9 000712   000717 600000 9                  TZE     s:14780

      897    14778    2      THEN CALL M$CLOSE (CLOSE_IFAD) ALTRET (CLOSE_ERROR) ;

  14778  9 000713   000412 630400 5                  EPPR0   CLOSE_IFAD
         9 000714   450001 713400                    CLIMB   alt,close
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:173  
         9 000715   406000 401760                    pmme    nvectors=13
         9 000716   000721 702000 9                  TSX2    CLOSE_ERROR

      898    14779    2      ELSE /* IFAD Not Open */ ;
      899    14780    2      RETURN ;

  14780  9 000717   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000720   000001 702211                    TSX2  ! 1,X1

      900    14781
      901    14782    2   CLOSE_ERROR:
      902    14783    2      CALL DU_USER_WRITE (%E$DCI_CLOSE_ERROR) ;

  14783  9 000721   000071 236000 10    CLOSE_ERROR  LDQ     57
         9 000722   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 000723   002464 701000 9                  TSX1    DU_USER_WRITE
         9 000724   000000 011000                    NOP     0

      903    14784    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  14784  9 000725   000065 236000 10                 LDQ     53
         9 000726   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 000727   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 000730   000000 011000                    NOP     0

      904    14785    2      ALTRETURN ;

  14785  9 000731   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 000732   000000 702211                    TSX2  ! 0,X1

      905    14786
      906    14787    2   END DU_CLOSE_IFAD ;
      907    14788        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:174  
      908    14789        /*I* NAME:         DU_OPEN_LO
      909    14790             AUTHOR:       Kathy Larkin
      910    14791             PURPOSE:      Set M$LO parameters and open
      911    14792             INTERFACE:    DU_SET_FID - performs M$FID
      912    14793                           M$OPEN Monitor Service
      913    14794                           DU_SYSTEM_ERRMSG error service
      914    14795             PARAMETERS:   LO_FID - input - fid text
      915    14796                           OPEN_TYPE - user specified on (to), over, into fid
      916    14797             DATA:         FID_ params (global VLP's) set by DU_SET_FID
      917    14798             DESCRIPTION:  Calls M$FID to  set fid parameters for M$OPEN.
      918    14799                           FPT  is  chosen   depending  on  whether  user
      919    14800                           entered 'ON' (or 'TO'), 'OVER', or 'INTO' fid.
      920    14801                           In  the case of  'ON' or 'TO'  the M$OPEN will
      921    14802                           error if the  file already exists.  For 'OVER'
      922    14803                           a  new file  will be  created and any existing
      923    14804                           file  of  the  same  name is overwritten.  For
      924    14805                           'INTO' any existing file will be extended.
      925    14806        */
      926    14807
      927    14808    1   DU_OPEN_LO: PROC (LO_FID, OPEN_TYPE) ALTRET;

  14808  9 000733   200060 741300       DU_OPEN_LO   STX1  ! LO_FID_LGTH+2,,AUTO

      928    14809
      929    14810        /* Variables */
      930    14811
      931    14812    2      DCL LO_FID      CHAR (40) CALIGNED ;
      932    14813    2      DCL OPEN_TYPE   UBIN WORD ALIGNED ;
      933    14814
      934    14815        /* FPTs and VLPs */
      935    14816
      936    14817           %FPT_OPEN      (FPTN           = OPEN_LO,
      937    14818                           ACCT           = FID_ACCT,
      938    14819                           DCB            = M$LO,
      939    14820                           CTG            = YES,
      940    14821                           NAME           = FID_NAME,
      941    14822                           PASS           = FID_PASS,
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:175  
      942    14823                           SN             = FID_SN,
      943    14824                           WSN            = FID_WSN) ;
      944    14933        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:176  
      945    14934        /* Code */
      946    14935
      947    14936    2      CALL DU_CLOSE_LO_IF_OPEN ALTRET (LO_ERROR) ;

  14936  9 000734   001026 701000 9                  TSX1    DU_CLOSE_LO_IF_OPEN
         9 000735   001020 702000 9                  TSX2    LO_ERROR

      948    14937
      949    14938    2      CALL DU_SET_FID (LO_FID) ALTRET (LO_ERROR) ;

  14938  9 000736   200061 236100                    LDQ     @LO_FID,,AUTO
         9 000737   200073 756100                    STQ     @IFAD_ASN,,AUTO
         9 000740   002336 701000 9                  TSX1    DU_SET_FID
         9 000741   001020 702000 9                  TSX2    LO_ERROR

      950    14939    2      OPEN_LO.V.RES# = FID_RES;

  14939  9 000742   000000 236000 5                  LDQ     FID_RES
         9 000743   000520 756000 5                  STQ     OPEN_LO+40

      951    14940    2      OPEN_LO.V.ASN# = FID_ASN;

  14940  9 000744   000001 236000 5                  LDQ     FID_ASN
         9 000745   000033 772000                    QRL     27
         9 000746   000515 552004 5                  STBQ    OPEN_LO+37,'04'O

      952    14941    3      DO CASE (OPEN_TYPE) ;

  14941  9 000747   200062 470500                    LDP0    @OPEN_TYPE,,AUTO
         9 000750   000000 235100                    LDA     0,,PR0
         9 000751   000004 115007                    CMPA    4,DL
         9 000752   000754 602005 9                  TNC     s:14941+5,AL
         9 000753   001016 710000 9                  TRA     s:14955
         9 000754   001016 710000 9                  TRA     s:14955
         9 000755   001004 710000 9                  TRA     s:14951
         9 000756   000760 710000 9                  TRA     s:14943
         9 000757   000773 710000 9                  TRA     s:14947
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:177  

      953    14942    3         CASE (%ON) ;

      954    14943    3            OPEN_LO.V.EXIST# = %ERROR# ;

  14943  9 000760   000514 236000 5                  LDQ     OPEN_LO+36
         9 000761   000072 376000 10                 ANQ     58
         9 000762   000200 276007                    ORQ     128,DL
         9 000763   000514 756000 5                  STQ     OPEN_LO+36

      955    14944    3            OPEN_LO.V.FUN# = %CREATE# ;

  14944  9 000764   003000 236007                    LDQ     1536,DL
         9 000765   000515 552010 5                  STBQ    OPEN_LO+37,'10'O

      956    14945    3            CALL M$OPEN (OPEN_LO) ALTRET (LO_ERROR) ;

  14945  9 000766   000450 630400 5                  EPPR0   OPEN_LO
         9 000767   450000 713400                    CLIMB   alt,open
         9 000770   410400 401760                    pmme    nvectors=18
         9 000771   001020 702000 9                  TSX2    LO_ERROR
         9 000772   001016 710000 9                  TRA     s:14955

      957    14946    3         CASE (%OVER) ;

      958    14947    3            OPEN_LO.V.EXIST# = %NEWFILE# ;

  14947  9 000773   000600 236007                    LDQ     384,DL
         9 000774   000514 256000 5                  ORSQ    OPEN_LO+36

      959    14948    3            OPEN_LO.V.FUN# = %CREATE# ;

  14948  9 000775   003000 236007                    LDQ     1536,DL
         9 000776   000515 552010 5                  STBQ    OPEN_LO+37,'10'O

      960    14949    3            CALL M$OPEN (OPEN_LO) ALTRET (LO_ERROR) ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:178  
  14949  9 000777   000450 630400 5                  EPPR0   OPEN_LO
         9 001000   450000 713400                    CLIMB   alt,open
         9 001001   410400 401760                    pmme    nvectors=18
         9 001002   001020 702000 9                  TSX2    LO_ERROR
         9 001003   001016 710000 9                  TRA     s:14955

      961    14950    3         CASE (%INTO) ;

      962    14951    3            OPEN_LO.V.EXIST# = %OLDFILE# ;

  14951  9 001004   000514 236000 5                  LDQ     OPEN_LO+36
         9 001005   000072 376000 10                 ANQ     58
         9 001006   000400 276007                    ORQ     256,DL
         9 001007   000514 756000 5                  STQ     OPEN_LO+36

      963    14952    3            OPEN_LO.V.FUN# = %UPDATE# ;

  14952  9 001010   001000 236007                    LDQ     512,DL
         9 001011   000515 552010 5                  STBQ    OPEN_LO+37,'10'O

      964    14953    3            CALL M$OPEN (OPEN_LO) ALTRET (LO_ERROR) ;

  14953  9 001012   000450 630400 5                  EPPR0   OPEN_LO
         9 001013   450000 713400                    CLIMB   alt,open
         9 001014   410400 401760                    pmme    nvectors=18
         9 001015   001020 702000 9                  TSX2    LO_ERROR

      965    14954    3      END /* CASE */ ;

      966    14955    2      RETURN ;

  14955  9 001016   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001017   000001 702211                    TSX2  ! 1,X1

      967    14956
      968    14957    2   LO_ERROR:
      969    14958    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:179  

  14958  9 001020   000065 236000 10    LO_ERROR     LDQ     53
         9 001021   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 001022   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 001023   000000 011000                    NOP     0

      970    14959    2      ALTRETURN ;

  14959  9 001024   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001025   000000 702211                    TSX2  ! 0,X1

      971    14960
      972    14961    2   END DU_OPEN_LO ;
      973    14962        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:180  
      974    14963        /*I* NAME:         DU_CLOSE_LO_IF_OPEN
      975    14964             AUTHOR:       Kathy Larkin
      976    14965             PURPOSE:      Close M$LO DCB if open
      977    14966             INTERFACE:    M$CLOSE Monitor Service
      978    14967                           DU_SYSTEM_ERRMSG
      979    14968             PARAMETERS:   None passed.
      980    14969             DATA:         F$DCB.FCD# - input - set if DCB open
      981    14970             DESCRIPTION:  This procedure  will check to see  if the M$LO
      982    14971                           DCB  is open.  If  so, it will  be closed.  If
      983    14972                           not, no action is taken.
      984    14973        */
      985    14974
      986    14975    1   DU_CLOSE_LO_IF_OPEN: PROC ALTRET ;

  14975  9 001026   200064 741300       DU_CLOSE_LO* STX1  ! @NUM_VOLUMES,,AUTO

      987    14976
      988    14977           %FPT_CLOSE      (FPTN          = CLOSE_LO,
      989    14978                            DCB           = M$LO) ;
      990    15020
      991    15021        /* Code */
      992    15022
      993    15023    2      IF DCBADDR (DCBNUM (M$LO)) -> F$DCB.FCD#

  15023  9 001027   000000 236007 xsym               LDQ     M$LO,DL
         9 001030   000043 470400 10                 LDP0    35
         9 001031   000000 471500                    LDP1    0,,PR0
         9 001032   100000 473506                    LDP3    0,QL,PR1
         9 001033   300031 236100                    LDQ     25,,PR3
         9 001034   020000 316007                    CANQ    8192,DL
         9 001035   001042 600000 9                  TZE     s:15026

      994    15024    2      THEN CALL M$CLOSE (CLOSE_LO) ALTRET (CLOSE_ERR) ;

  15024  9 001036   000542 630400 5                  EPPR0   CLOSE_LO
         9 001037   450001 713400                    CLIMB   alt,close
         9 001040   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:181  
         9 001041   001044 702000 9                  TSX2    CLOSE_ERR

      995    15025    2      ELSE /* DCB not open */ ;
      996    15026    2      RETURN ;

  15026  9 001042   200064 221300                    LDX1  ! @NUM_VOLUMES,,AUTO
         9 001043   000001 702211                    TSX2  ! 1,X1

      997    15027
      998    15028    2   CLOSE_ERR:
      999    15029    2      ALTRETURN ;

  15029  9 001044   200064 221300       CLOSE_ERR    LDX1  ! @NUM_VOLUMES,,AUTO
         9 001045   000000 702211                    TSX2  ! 0,X1

     1000    15030
     1001    15031    2   END DU_CLOSE_LO_IF_OPEN ;
     1002    15032        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:182  
     1003    15033        /*I* NAME:         DU_SET_IFAD_IMU_NUMBER
     1004    15034             AUTHOR:       Scott S. Sheppard
     1005    15035             PURPOSE:      Determines the IMU number
     1006    15036             INTERFACE:    INDEX
     1007    15037                           CHARBIN
     1008    15038                           DU_USER_WRITE
     1009    15039             PARAMETERS:   IFAD_FID - input / output
     1010    15040                           IFAD_FID_LGTH - input / output
     1011    15041                           IFAD_IMU_NUMBER - output
     1012    15042             DATA:         No external data accessed.
     1013    15043             DESCRIPTION:  This procedure is  necessary because CP-6 does
     1014    15044                           not  treat  an  IMU  as  a  resource. When the
     1015    15045                           string  'IMUnn' is encountered,  it is treated
     1016    15046                           as a file name  by CP-6. This procedure really
     1017    15047                           accepts   a   file   name,   strips   off  the
     1018    15048                           dot-account  portion,  and  computes  the  IMU
     1019    15049                           number from the characters that follow the IMU
     1020    15050                           portion. This procedure  will ALTRETURN if the
     1021    15051                           file name does not  begin with IMU followed by
     1022    15052                           a series of digits.
     1023    15053        */
     1024    15054        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:183  
     1025    15055    1   DU_SET_IFAD_IMU_NUMBER: PROC (IFAD_FID, IFAD_FID_LGTH, IFAD_IMU_NUMBER) ALTRET;

  15055  9 001046   200060 741300       DU_SET_IFAD* STX1  ! LO_FID_LGTH+2,,AUTO

     1026    15056
     1027    15057    2      DCL IFAD_FID                   CHAR (40) CALIGNED ;
     1028    15058    2      DCL IFAD_FID_LGTH              UBIN WORD ALIGNED ;
     1029    15059    2      DCL IFAD_IMU_NUMBER            UBIN WORD ALIGNED ;
     1030    15060    2      DCL I                          UBIN WORD ALIGNED ;
     1031    15061
     1032    15062        /* Code */
     1033    15063
     1034    15064    2      IF (SUBSTR (IFAD_FID, 0, 3) = 'IMU') OR

  15064  9 001047   200061 470500                    LDP0    @IFAD_FID,,AUTO
         9 001050   040000 106500                    CMPC    fill='040'O
         9 001051   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
         9 001052   000004 000003 8                  ADSC9   THREE_QUESTION_MARKS+3   cn=0,n=3
         9 001053   001060 600000 9                  TZE     s:15067
         9 001054   040000 106500                    CMPC    fill='040'O
         9 001055   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
         9 001056   000005 000003 8                  ADSC9   THREE_QUESTION_MARKS+4   cn=0,n=3
         9 001057   001210 601000 9                  TNZ     ERROR

     1035    15065    2              (SUBSTR (IFAD_FID, 0, 3) = 'IMX')
     1036    15066    3      THEN DO ;

     1037    15067    3              CALL INDEX (IFAD_FID_LGTH, '.', IFAD_FID, 0) ALTRET (ERROR) ;

  15067  9 001060   200062 471500                    LDP1    @IFAD_FID_LGTH,,AUTO
         9 001061   000000 124500                    SCM     mask='000'O
         9 001062   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40
         9 001063   000073 000001 10                 ADSC9   59                       cn=0,n=1
         9 001064   100000 000100                    ARG     0,,PR1
         9 001065   001210 606400 9                  TTN     ERROR

     1038    15068    3              IFAD_FID = SUBSTR (IFAD_FID, 0, IFAD_FID_LGTH) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:184  

  15068  9 001066   100000 720100                    LXL0    0,,PR1
         9 001067   040100 100540                    MLR     fill='040'O
         9 001070   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 001071   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40

     1039    15069    4              DO I = 3 TO IFAD_FID_LGTH - 1 ;

  15069  9 001072   000003 235007                    LDA     3,DL
         9 001073   200064 755100                    STA     I,,AUTO
         9 001074   001172 710000 9                  TRA     s:15077+2

     1040    15070    5                 DO SELECT (SUBSTR (IFAD_FID, I, 1)) ;

  15070  9 001075   200061 470500                    LDP0    @IFAD_FID,,AUTO
         9 001076   200064 235100                    LDA     I,,AUTO
         9 001077   040000 106505                    CMPC    fill='040'O
         9 001100   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001101   000074 000001 10                 ADSC9   60                       cn=0,n=1
         9 001102   001142 602000 9                  TNC     s:15070+37
         9 001103   001161 600000 9                  TZE     s:15071
         9 001104   040000 106505                    CMPC    fill='040'O
         9 001105   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001106   000075 000001 10                 ADSC9   61                       cn=0,n=1
         9 001107   001123 602000 9                  TNC     s:15070+22
         9 001110   001161 600000 9                  TZE     s:15071
         9 001111   040000 106505                    CMPC    fill='040'O
         9 001112   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001113   000076 000001 10                 ADSC9   62                       cn=0,n=1
         9 001114   001162 602000 9                  TNC     s:15074
         9 001115   001161 600000 9                  TZE     s:15071
         9 001116   040000 106505                    CMPC    fill='040'O
         9 001117   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001120   000077 000001 10                 ADSC9   63                       cn=0,n=1
         9 001121   001162 601000 9                  TNZ     s:15074
         9 001122   001161 710000 9                  TRA     s:15071
         9 001123   040000 106505                    CMPC    fill='040'O
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:185  
         9 001124   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001125   000100 000001 10                 ADSC9   64                       cn=0,n=1
         9 001126   001135 602000 9                  TNC     s:15070+32
         9 001127   001161 600000 9                  TZE     s:15071
         9 001130   040000 106505                    CMPC    fill='040'O
         9 001131   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001132   000101 000001 10                 ADSC9   65                       cn=0,n=1
         9 001133   001162 601000 9                  TNZ     s:15074
         9 001134   001161 710000 9                  TRA     s:15071
         9 001135   040000 106505                    CMPC    fill='040'O
         9 001136   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001137   000102 000001 10                 ADSC9   66                       cn=0,n=1
         9 001140   001162 601000 9                  TNZ     s:15074
         9 001141   001161 710000 9                  TRA     s:15071
         9 001142   040000 106505                    CMPC    fill='040'O
         9 001143   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001144   000103 000001 10                 ADSC9   67                       cn=0,n=1
         9 001145   001154 602000 9                  TNC     s:15070+47
         9 001146   001161 600000 9                  TZE     s:15071
         9 001147   040000 106505                    CMPC    fill='040'O
         9 001150   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001151   000104 000001 10                 ADSC9   68                       cn=0,n=1
         9 001152   001162 601000 9                  TNZ     s:15074
         9 001153   001161 710000 9                  TRA     s:15071
         9 001154   040000 106505                    CMPC    fill='040'O
         9 001155   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001156   000105 000001 10                 ADSC9   69                       cn=0,n=1
         9 001157   001162 601000 9                  TNZ     s:15074
         9 001160   001161 710000 9                  TRA     s:15071

     1041    15071    5                    SELECT ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9') ;

  15071  9 001161   001170 710000 9                  TRA     s:15077

     1042    15072                            /* digits are valid */
     1043    15073    5                    SELECT (ELSE) ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:186  
     1044    15074    5                 CALL DU_USER_WRITE (%E$DSIIN_BAD_IMX#) ;

  15074  9 001162   000107 236000 10                 LDQ     71
         9 001163   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001164   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001165   000000 011000                    NOP     0

     1045    15075    5                 ALTRETURN ;

  15075  9 001166   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001167   000000 702211                    TSX2  ! 0,X1

     1046    15076    5                 END /* SELECT */ ;

     1047    15077    4              END /* DO */ ;

  15077  9 001170   000001 035007                    ADLA    1,DL
         9 001171   200064 755100                    STA     I,,AUTO
         9 001172   200062 471500                    LDP1    @IFAD_FID_LGTH,,AUTO
         9 001173   200064 236100                    LDQ     I,,AUTO
         9 001174   100000 116100                    CMPQ    0,,PR1
         9 001175   001075 602000 9                  TNC     s:15070

     1048    15078    3              CALL CHARBIN (IFAD_IMU_NUMBER, SUBSTR (IFAD_FID,3,IFAD_FID_LGTH-3));

  15078  9 001176   100000 720100                    LXL0    0,,PR1
         9 001177   777775 621010                    EAX1    -3,X0
         9 001200   000100 305540                    DTB
         9 001201   000000 630011                    NDSC9   0,,PR0                   cn=3,s=nosgn,sf=0,n=*X1
         9 001202   200130 000010                    NDSC9   ALT$+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         9 001203   200063 473500                    LDP3    @IFAD_IMU_NUMBER,,AUTO
         9 001204   200131 235100                    LDA     ALT$+3,,AUTO
         9 001205   300000 755100                    STA     0,,PR3

     1049    15079    3              RETURN ;

  15079  9 001206   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:187  
         9 001207   000001 702211                    TSX2  ! 1,X1

     1050    15080    3           END /* THEN */ ;
     1051    15081    3      ELSE DO ;

     1052    15082    3   ERROR:
     1053    15083    3              CALL DU_USER_WRITE (%E$DSIIN_NOT_IMX) ;

  15083  9 001210   000111 236000 10    ERROR        LDQ     73
         9 001211   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001212   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001213   000000 011000                    NOP     0

     1054    15084    3              ALTRETURN ;

  15084  9 001214   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001215   000000 702211                    TSX2  ! 0,X1

     1055    15085    3           END /* ELSE */ ;
     1056    15086
     1057    15087    2   END DU_SET_IFAD_IMU_NUMBER ;
     1058    15088        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:188  
     1059    15089        /*I* NAME:         DU_VALIDATE_IMU_NUMBER
     1060    15090             AUTHOR:       Scott S. Sheppard
     1061    15091             PURPOSE:      validates the IMU number
     1062    15092             INTERFACE:    M$OPEN
     1063    15093                           M$READ
     1064    15094                           M$CLOSE
     1065    15095                           DU_USER_WRITE
     1066    15096                           DU_SYSTEM_ERRMSG
     1067    15097             PARAMETERS:   IMU# - input
     1068    15098             DATA:         No external data accessed.
     1069    15099             DESCRIPTION:  This  procedure  checks  to  see  that the IMU
     1070    15100                           specified actually exists. Generally IMU's and
     1071    15101                           IOM's are configured  on systems with the IOM,
     1072    15102                           or in this case  IMU, number ranging from 0 to
     1073    15103                           3.  This procedure  reads the  :CONFIG file to
     1074    15104                           obtain  the  head   record;  the  head  record
     1075    15105                           contains the number of IOM's configured on the
     1076    15106                           system. If the IMU number specified is greater
     1077    15107                           than the number of  IOM's present, there is no
     1078    15108                           way  that the  IMU can  exist.  This  is not a
     1079    15109                           fool  proof check, but  will catch many errors
     1080    15110                           before the TDOPEN is issued.
     1081    15111        */
     1082    15112        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:189  
     1083    15113    1   DU_VALIDATE_IMU_NUMBER: PROC (IMU#) ALTRET ;

  15113  9 001216   200060 741300       DU_VALIDATE* STX1  ! LO_FID_LGTH+2,,AUTO

     1084    15114
     1085    15115    2      DCL IMU#        UBIN WORD ALIGNED ;
     1086    15116    2      DCL M$MERGE     DCB ;
     1087    15117    2      DCL 1 HEAD_KEY  CONSTANT ALIGNED,
     1088    15118    2            2 SIZE    UBIN BYTE UNAL INIT (1),
     1089    15119    2            2 DATA    UBIN BYTE UNAL INIT (0) ;
     1090    15120    2      DCL HEAD_BUFFER (0:2000) UBIN WORD BASED (DUP.BCD_V.PTR$) ALIGNED ;
     1091    15121    2      DCL TD$HEAD$    PTR ALIGNED ;
     1092    15122           %TD$HEAD (STCLASS = "BASED (TD$HEAD$)") ;
     1093    15158           %FPT_OPEN (FPTN = OPEN_CONFIG,
     1094    15159                      DCB  = M$MERGE,
     1095    15160                      NAME = FILE_NAME,
     1096    15161                      ASN  = FILE,
     1097    15162                      ACCT = ACCOUNT_NAME,
     1098    15163                      ACS  = DIRECT,
     1099    15164                      DISP = NAMED,
     1100    15165                      ORG  = KEYED,
     1101    15166                      FUN  = IN,
     1102    15167                      SHARE = IN) ;
     1103    15276           %FPT_READ (FPTN = READ_CONFIG,
     1104    15277                      DCB  = M$MERGE,
     1105    15278                      KEYS = YES) ;
     1106    15317           %FPT_CLOSE (FPTN = CLOSE_CONFIG,
     1107    15318                       DCB = M$MERGE,
     1108    15319                       DISP = SAVE) ;
     1109    15361           %VLP_NAME (FPTN = FILE_NAME,
     1110    15362                      LEN  = 11,
     1111    15363                      NAME = ':CONFIG') ;
     1112    15390           %VLP_ACCT (FPTN = ACCOUNT_NAME,
     1113    15391                      ACCT = ':SYS') ;
     1114    15404           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:190  
     1115    15405        /* Code */
     1116    15406
     1117    15407    2      CALL M$OPEN (OPEN_CONFIG) ALTRET (ERROR) ;

  15407  9 001217   000600 630400 5                  EPPR0   OPEN_CONFIG
         9 001220   450000 713400                    CLIMB   alt,open
         9 001221   410400 401760                    pmme    nvectors=18
         9 001222   001261 702000 9                  TSX2    ERROR

     1118    15408    2      READ_CONFIG.KEY_ = VECTOR (HEAD_KEY) ;

  15408  9 001223   000112 237000 10                 LDAQ    74
         9 001224   000674 757000 5                  STAQ    READ_CONFIG+2

     1119    15409    2      READ_CONFIG.BUF_ = VECTOR (HEAD_BUFFER) ;

  15409  9 001225   000114 235000 10                 LDA     76
         9 001226   000103 236000 xsym               LDQ     DUP+67
         9 001227   000676 757000 5                  STAQ    READ_CONFIG+4

     1120    15410    2      CALL M$READ (READ_CONFIG) ALTRET (ERROR) ;

  15410  9 001230   000672 630400 5                  EPPR0   READ_CONFIG
         9 001231   440000 713400                    CLIMB   alt,read
         9 001232   401400 401760                    pmme    nvectors=4
         9 001233   001261 702000 9                  TSX2    ERROR

     1121    15411    2      CALL M$CLOSE (CLOSE_CONFIG) ALTRET (ERROR) ;

  15411  9 001234   000710 630400 5                  EPPR0   CLOSE_CONFIG
         9 001235   450001 713400                    CLIMB   alt,close
         9 001236   406000 401760                    pmme    nvectors=13
         9 001237   001261 702000 9                  TSX2    ERROR

     1122    15412
     1123    15413    2      TD$HEAD$ = ADDR (HEAD_BUFFER) ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:191  
  15413  9 001240   000103 236000 xsym               LDQ     DUP+67
         9 001241   200062 756100                    STQ     TD$HEAD$,,AUTO

     1124    15414    2      IF IMU# < TD$HEAD.NUMIOMS

  15414  9 001242   200061 470500                    LDP0    @IMU#,,AUTO
         9 001243   200062 471500                    LDP1    TD$HEAD$,,AUTO
         9 001244   100000 236100                    LDQ     0,,PR1
         9 001245   777777 376007                    ANQ     -1,DL
         9 001246   000000 116100                    CMPQ    0,,PR0
         9 001247   001253 602000 9                  TNC     s:15417
         9 001250   001253 600000 9                  TZE     s:15417

     1125    15415    2      THEN RETURN ;

  15415  9 001251   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001252   000001 702211                    TSX2  ! 1,X1

     1126    15416    3      ELSE DO ;

     1127    15417    3              CALL DU_USER_WRITE (%E$DSIIN_BAD_IMX#) ;

  15417  9 001253   000107 236000 10                 LDQ     71
         9 001254   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001255   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001256   000000 011000                    NOP     0

     1128    15418    3              ALTRETURN ;

  15418  9 001257   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001260   000000 702211                    TSX2  ! 0,X1

     1129    15419    3           END /* ELSE */ ;
     1130    15420
     1131    15421    2   ERROR:
     1132    15422    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:192  
  15422  9 001261   000065 236000 10    ERROR        LDQ     53
         9 001262   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 001263   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 001264   000000 011000                    NOP     0

     1133    15423    2      CALL M$CLOSE (CLOSE_CONFIG) ;

  15423  9 001265   000710 630400 5                  EPPR0   CLOSE_CONFIG
         9 001266   050001 713400                    CLIMB   close
         9 001267   406000 401760                    pmme    nvectors=13

     1134    15424    2      ALTRETURN ;

  15424  9 001270   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001271   000000 702211                    TSX2  ! 0,X1

     1135    15425
     1136    15426    2   END DU_VALIDATE_IMU_NUMBER ;
     1137    15427        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:193  
     1138    15428        /*I* NAME:         DU_OPEN_MCA
     1139    15429             AUTHOR:       Scott S. Sheppard
     1140    15430             PURPOSE:      Opens the IMU (MCA) for input
     1141    15431             INTERFACE:    M$TDOPEN
     1142    15432                           M$FID
     1143    15433                           DU_USER_WRITE
     1144    15434                           DU_SYSTEM_ERRMSG
     1145    15435             PARAMETERS:   IFAD_FID - identifier of the IFAD IMU
     1146    15436                           IMU - number of the IMU to use
     1147    15437             DATA:         No external data accessed.
     1148    15438             DESCRIPTION:  This  procedure opens a  specified IMU so that
     1149    15439                           diskettes may be inserted, read, and stored in
     1150    15440                           the deckfile. The information on the diskettes
     1151    15441                           is  transferred to the  HOST via communication
     1152    15442                           with the MCA using channel 3.
     1153    15443
     1154    15444                           M$FID is called so that  all  values currently
     1155    15445                           remaining in the  M$IFAD DCB  (from a previous
     1156    15446                           usage) are wiped out. Allowing those values to
     1157    15447                           remain caused errors when the  M$IFAD DCB  was
     1158    15448                           used to toggle  between device and file input.
     1159    15449                           Similar problems could occur when using M$IFAD
     1160    15450                           in conjunction with IMU input.
     1161    15451        */
     1162    15452        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:194  
     1163    15453    1   DU_OPEN_MCA: PROC (IFAD_FID, IMU) ALTRET ;

  15453  9 001272   200060 741300       DU_OPEN_MCA  STX1  ! LO_FID_LGTH+2,,AUTO

     1164    15454
     1165    15455    2      DCL IFAD_FID              CHAR (40) CALIGNED ;
     1166    15456    2      DCL IMU                   UBIN WORD ALIGNED ;
     1167    15457    2      DCL IFAD_TEXT_FID         CHAR (40) STATIC CALIGNED ;
     1168    15458    2      DCL IFAD_DEVICE           UBIN BYTE STATIC CALIGNED INIT (3) ;
     1169    15459    2      DCL IFAD_RES              CHAR (4) STATIC CALIGNED INIT ('IM') ;
     1170    15460           %FPT_TDOPEN (FPTN = MCA_FOR_INPUT,
     1171    15461                        CHAN = 3,
     1172    15462                        DCB  = M$IFAD) ;
     1173    15479           %FPT_FID (FPTN    = SETUP_IFAD_IMU,
     1174    15480                     ACCT    = IFAD_ACCT,
     1175    15481                     ASN     = IFAD_DEVICE,
     1176    15482                     NAME    = IFAD_NAME,
     1177    15483                     PASS    = IFAD_PASS,
     1178    15484                     RES     = IFAD_RES,
     1179    15485                     SACCT   = YES,
     1180    15486                     SNAME   = YES,
     1181    15487                     SPASS   = YES,
     1182    15488                     SRES    = YES,
     1183    15489                     SSN     = YES,
     1184    15490                     SWSN    = YES,
     1185    15491                     SN      = IFAD_SN,
     1186    15492                     TEXTFID = IFAD_TEXT_FID,
     1187    15493                     WSN     = IFAD_WSN) ;
     1188    15516           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:195  
     1189    15517        /* Variable Length Parameters */
     1190    15518
     1191    15519           %VLP_SN (FPTN = IFAD_SN,
     1192    15520                    N    = %MAX_VOLS,
     1193    15521                    SN   = "' ', ' ', ' ', ' ', ' ', ' '") ;
     1194    15534
     1195    15535           %VLP_NAME (FPTN = IFAD_NAME,
     1196    15536                      LEN  = 31) ;
     1197    15563
     1198    15564           %VLP_ACCT (FPTN = IFAD_ACCT) ;
     1199    15577
     1200    15578           %VLP_PASS (FPTN = IFAD_PASS) ;
     1201    15591
     1202    15592           %VLP_WSN (FPTN = IFAD_WSN) ;
     1203    15605
     1204    15606        /* Code */
     1205    15607
     1206    15608    2      IFAD_TEXT_FID = IFAD_FID ;

  15608  9 001273   200061 470500                    LDP0    @IFAD_FID,,AUTO
         9 001274   040000 100500                    MLR     fill='040'O
         9 001275   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40
         9 001276   000753 000050 5                  ADSC9   IFAD_TEXT_FID            cn=0,n=40

     1207    15609    2      CALL M$FID (SETUP_IFAD_IMU) ALTRET (ERROR) ;

  15609  9 001277   001004 630400 5                  EPPR0   SETUP_IFAD_IMU
         9 001300   420001 713400                    CLIMB   alt,+8193
         9 001301   404400 401760                    pmme    nvectors=10
         9 001302   001321 702000 9                  TSX2    ERROR

     1208    15610    2      MCA_FOR_INPUT.V.DEVICE.IOM# = IMU ;

  15610  9 001303   200062 470500                    LDP0    @IMU,,AUTO
         9 001304   000000 236100                    LDQ     0,,PR0
         9 001305   000011 736000                    QLS     9
         9 001306   001000 676000 5                  ERQ     MCA_FOR_INPUT+8
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:196  
         9 001307   007000 376007                    ANQ     3584,DL
         9 001310   001000 656000 5                  ERSQ    MCA_FOR_INPUT+8

     1209    15611    2      MCA_FOR_INPUT.V.TEST# = %TD_TEST_MCA ;

  15611  9 001311   070000 236003                    LDQ     28672,DU
         9 001312   001002 752040 5                  STCQ    MCA_FOR_INPUT+10,'40'O

     1210    15612    2      CALL M$TDOPEN (MCA_FOR_INPUT) ALTRET (ERROR) ;

  15612  9 001313   000770 630400 5                  EPPR0   MCA_FOR_INPUT
         9 001314   470002 713400                    CLIMB   alt,+28674
         9 001315   401400 401760                    pmme    nvectors=4
         9 001316   001321 702000 9                  TSX2    ERROR

     1211    15613    2      RETURN ;

  15613  9 001317   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001320   000001 702211                    TSX2  ! 1,X1

     1212    15614
     1213    15615    2   ERROR:
     1214    15616    2      CALL DU_USER_WRITE (%E$DOI_OPEN_ERROR) ;

  15616  9 001321   000064 236000 10    ERROR        LDQ     52
         9 001322   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001323   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001324   000000 011000                    NOP     0

     1215    15617    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  15617  9 001325   000065 236000 10                 LDQ     53
         9 001326   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 001327   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 001330   000000 011000                    NOP     0

     1216    15618    2      ALTRETURN ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:197  

  15618  9 001331   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001332   000000 702211                    TSX2  ! 0,X1

     1217    15619
     1218    15620    2   END DU_OPEN_MCA ;
     1219    15621        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:198  
     1220    15622        /*I* NAME:         DU_CLOSE_MCA
     1221    15623             AUTHOR:       Scott S. Sheppard
     1222    15624             PURPOSE:      Closes the IMU (MCA)
     1223    15625             INTERFACE:    M$TDCLOSE
     1224    15626                           DU_USER_WRITE
     1225    15627                           DU_SYSTEM_ERRMSG
     1226    15628             PARAMETERS:   None passed.
     1227    15629             DATA:         No external data accessed.
     1228    15630             DESCRIPTION:  This  procedure closes the current IMU that is
     1229    15631                           currently associated with the M$IFAD dcb.
     1230    15632        */
     1231    15633
     1232    15634    1   DU_CLOSE_MCA: PROC ALTRET ;

  15634  9 001333   200060 741300       DU_CLOSE_MCA STX1  ! LO_FID_LGTH+2,,AUTO

     1233    15635
     1234    15636           %FPT_TDCLOSE (FPTN = MCA_FINISHED,
     1235    15637                         DCB  = M$IFAD) ;
     1236    15651
     1237    15652        /* Code */
     1238    15653
     1239    15654    2      IF DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.FCD#

  15654  9 001334   000000 236007 xsym               LDQ     M$IFAD,DL
         9 001335   000043 470400 10                 LDP0    35
         9 001336   000000 471500                    LDP1    0,,PR0
         9 001337   100000 473506                    LDP3    0,QL,PR1
         9 001340   300031 236100                    LDQ     25,,PR3
         9 001341   020000 316007                    CANQ    8192,DL
         9 001342   001347 600000 9                  TZE     s:15657

     1240    15655    2      THEN CALL M$TDCLOSE (MCA_FINISHED) ALTRET (ERROR) ;

  15655  9 001343   001064 630400 5                  EPPR0   MCA_FINISHED
         9 001344   470003 713400                    CLIMB   alt,+28675
         9 001345   400000 401760                    pmme    nvectors=1
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:199  
         9 001346   001351 702000 9                  TSX2    ERROR

     1241    15656    2      ELSE /* IFAD Not Open */ ;
     1242    15657    2      RETURN ;

  15657  9 001347   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001350   000001 702211                    TSX2  ! 1,X1

     1243    15658
     1244    15659    2   ERROR:
     1245    15660    2      CALL DU_USER_WRITE (%E$DCI_CLOSE_ERROR) ;

  15660  9 001351   000071 236000 10    ERROR        LDQ     57
         9 001352   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001353   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001354   000000 011000                    NOP     0

     1246    15661    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  15661  9 001355   000065 236000 10                 LDQ     53
         9 001356   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 001357   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 001360   000000 011000                    NOP     0

     1247    15662    2      ALTRETURN ;

  15662  9 001361   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001362   000000 702211                    TSX2  ! 0,X1

     1248    15663
     1249    15664    2   END DU_CLOSE_MCA ;
     1250    15665        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:200  
     1251    15666        /*I* NAME:         DU_MCA_RESET_STATUS
     1252    15667             AUTHOR:       Kathy Larkin
     1253    15668             PURPOSE:      Issue reset status to MCA
     1254    15669             INTERFACE:    M$TDIO monitor service
     1255    15670             PARAMETERS:   None passed.
     1256    15671             DATA:         No external data accessed.
     1257    15672             DESCRIPTION:  This  procedure sets  up the  IDCW to  issue a
     1258    15673                           reset status command  to the MCA.  This should
     1259    15674                           result in a major status of Channel Ready, and
     1260    15675                           a  sub-status of  Maint. Session  Normal term.
     1261    15676                           If these status  values are not received, this
     1262    15677                           procedure  will  ALTRETURN,  aborting the DEER
     1263    15678                           Merge command.
     1264    15679        */
     1265    15680        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:201  
     1266    15681    1   DU_MCA_RESET_STATUS: PROC ALTRET ;

  15681  9 001363   200060 741300       DU_MCA_RESE* STX1  ! LO_FID_LGTH+2,,AUTO

     1267    15682
     1268    15683    2      DCL IDCW        BIT (36) DALIGNED ;
     1269    15684    2      DCL 1 STATUS ALIGNED,
     1270    15685    2            2 *       BIT (2) UNAL,
     1271    15686    2            2 MAJOR   BIT (4) UNAL,
     1272    15687    2            2 *       BIT (1) UNAL,
     1273    15688    2            2 SUB     BIT (5) UNAL,
     1274    15689    2            2 *       BIT (60) UNAL ;
     1275    15690           %F$DCB ;
     1276    15747           %FPT_TDIO (FPTN = INIT_MCA,
     1277    15748                      DCB = M$IFAD,
     1278    15749                      TIMEOUT = 0,
     1279    15750                      WAIT = YES) ;
     1280    15767
     1281    15768        /* Code */
     1282    15769
     1283    15770    2      IDCW = '400000700201'O ;

  15770  9 001364   000006 236000 8                  LDQ     THREE_QUESTION_MARKS+5
         9 001365   200062 756100                    STQ     IDCW,,AUTO

     1284    15771    2      INIT_MCA.DCWLIST_ = VECTOR (IDCW) ;

  15771  9 001366   000115 235000 10                 LDA     77
         9 001367   200130 452500                    STP2    ALT$+2,,AUTO
         9 001370   200130 236100                    LDQ     ALT$+2,,AUTO
         9 001371   000062 036003                    ADLQ    50,DU
         9 001372   001072 757000 5                  STAQ    INIT_MCA+2

     1285    15772    2      CALL M$TDIO (INIT_MCA) ALTRET (ERROR) ;

  15772  9 001373   001070 630400 5                  EPPR0   INIT_MCA
         9 001374   470004 713400                    CLIMB   alt,+28676
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:202  
         9 001375   401000 401760                    pmme    nvectors=3
         9 001376   001427 702000 9                  TSX2    ERROR

     1286    15773    2      STATUS = DCBADDR (DCBNUM (M$IFAD)) -> F$DCB.TDSTAT# ;

  15773  9 001377   000000 236007 xsym               LDQ     M$IFAD,DL
         9 001400   000043 470400 10                 LDP0    35
         9 001401   000000 471500                    LDP1    0,,PR0
         9 001402   100000 473506                    LDP3    0,QL,PR1
         9 001403   000100 100500                    MLR     fill='000'O
         9 001404   300027 000010                    ADSC9   23,,PR3                  cn=0,n=8
         9 001405   200064 000010                    ADSC9   STATUS,,AUTO             cn=0,n=8

     1287    15774    2      IF (STATUS.MAJOR = %CHAN_READY) & (STATUS.SUB = %SESS_NORM_TERM)

  15774  9 001406   400000 220003                    LDX0    -131072,DU
         9 001407   200064 236100                    LDQ     STATUS,,AUTO
         9 001410   170000 316003                    CANQ    61440,DU
         9 001411   001413 600000 9                  TZE     s:15774+5
         9 001412   000000 220003                    LDX0    0,DU
         9 001413   400000 221003                    LDX1    -131072,DU
         9 001414   003700 376003                    ANQ     1984,DU
         9 001415   000200 116003                    CMPQ    128,DU
         9 001416   001420 600000 9                  TZE     s:15774+10
         9 001417   000000 221003                    LDX1    0,DU
         9 001420   000000 636011                    EAQ     0,X1
         9 001421   200130 756100                    STQ     ALT$+2,,AUTO
         9 001422   000000 636010                    EAQ     0,X0
         9 001423   200130 376100                    ANQ     ALT$+2,,AUTO
         9 001424   001427 600000 9                  TZE     ERROR

     1288    15775    2      THEN RETURN ;

  15775  9 001425   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001426   000001 702211                    TSX2  ! 1,X1

     1289    15776    2      ELSE ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:203  
     1290    15777
     1291    15778    2   ERROR:
     1292    15779    2      CALL DU_USER_WRITE (%E$DMRS_MCA) ;

  15779  9 001427   000117 236000 10    ERROR        LDQ     79
         9 001430   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001431   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001432   000000 011000                    NOP     0

     1293    15780    2      ALTRETURN ;

  15780  9 001433   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001434   000000 702211                    TSX2  ! 0,X1

     1294    15781
     1295    15782    2   END DU_MCA_RESET_STATUS ;
     1296    15783        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:204  
     1297    15784        /*I*  NAME:        DU_SET_DF_FID
     1298    15785              AUTHOR:      Scott S. Sheppard
     1299    15786              PURPOSE:     Sets up Deckfile Name_account Field
     1300    15787              INTERFACE:   DU_DF_FROM_HOLD
     1301    15788                           DU_DF_FROM_MERGE
     1302    15789                           DU_USER_WRITE
     1303    15790                           DCBNUM
     1304    15791                           DCBADDR
     1305    15792              INPUT:       DF_ENTERED - flag set if name.account typed in
     1306    15793                           F$DCB.AMR# - flag set if a merge record exists
     1307    15794              OUTPUT:      DF_FID - name and account variable
     1308    15795                           DF_FID_LGTH - length of name and account
     1309    15796              DESCRIPTION: This procedure sets the DF name_account field.
     1310    15797                           This routine is  the  only  part  of  the  T&D
     1311    15798                           deckfile editor system that assigns a value to
     1312    15799                           the DF name_account.    All  other  procedures
     1313    15800                           access the DF name_account as read only.
     1314    15801        */
     1315    15802        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:205  
     1316    15803    1   DU_SET_DF_FID: PROC (DF_ENTERED,

  15803  9 001435   200060 741300       DU_SET_DF_F* STX1  ! LO_FID_LGTH+2,,AUTO

     1317    15804    1              HELD_DF,
     1318    15805    1              HELD_DF_LGTH,
     1319    15806    1              DF_FID,
     1320    15807    1              DF_FID_LGTH) ALTRET ;
     1321    15808
     1322    15809    2      DCL DF_ENTERED                 BIT (1) CALIGNED ;
     1323    15810    2      DCL HELD_DF                    CHAR (40) CALIGNED ;
     1324    15811    2      DCL HELD_DF_LGTH               UBIN WORD ALIGNED ;
     1325    15812    2      DCL DF_FID                     CHAR (40) CALIGNED ;
     1326    15813    2      DCL DF_FID_LGTH                UBIN WORD ALIGNED ;
     1327    15814
     1328    15815        /* Code */
     1329    15816
     1330    15817    2      IF DF_ENTERED

  15817  9 001436   200061 470500                    LDP0    @DF_ENTERED,,AUTO
         9 001437   000000 066500                    CMPB    filb='0'B
         9 001440   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         9 001441   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 001442   001446 600000 9                  TZE     s:15819

     1331    15818    2      THEN CALL DU_DF_FROM_HOLD ALTRET (ERROR) ;

  15818  9 001443   001473 701000 9                  TSX1    DU_DF_FROM_HOLD
         9 001444   001471 702000 9                  TSX2    ERROR
         9 001445   001467 710000 9                  TRA     s:15826

     1332    15819    2      ELSE IF DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.AMR#

  15819  9 001446   000000 236007 xsym               LDQ     M$DECKFILE,DL
         9 001447   000043 471400 10                 LDP1    35
         9 001450   100000 473500                    LDP3    0,,PR1
         9 001451   300000 474506                    LDP4    0,QL,PR3
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:206  
         9 001452   400031 236100                    LDQ     25,,PR4
         9 001453   010000 316007                    CANQ    4096,DL
         9 001454   001460 600000 9                  TZE     s:15823

     1333    15820    2         THEN CALL DU_DF_FROM_MERGE ALTRET (ERROR) ;

  15820  9 001455   001561 701000 9                  TSX1    DU_DF_FROM_MERGE
         9 001456   001471 702000 9                  TSX2    ERROR
         9 001457   001467 710000 9                  TRA     s:15826

     1334    15821    3         ELSE DO ;

     1335    15822                      /* Default Deckfile FID is used. */
     1336    15823    3                 DF_FID = %DEFAULT_DECKFILE ;

  15823  9 001460   200064 474500                    LDP4    @DF_FID,,AUTO
         9 001461   040100 100400                    MLR     fill='040'O
         9 001462   000007 000027 8                  ADSC9   THREE_QUESTION_MARKS+6   cn=0,n=23
         9 001463   400000 000050                    ADSC9   0,,PR4                   cn=0,n=40

     1337    15824    3                 DF_FID_LGTH = %DEFAULT_DECKFILE_LGTH ;

  15824  9 001464   000027 235007                    LDA     23,DL
         9 001465   200065 475500                    LDP5    @DF_FID_LGTH,,AUTO
         9 001466   500000 755100                    STA     0,,PR5

     1338    15825    3              END /* ELSE */ ;

     1339    15826    2      RETURN ;

  15826  9 001467   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001470   000001 702211                    TSX2  ! 1,X1

     1340    15827
     1341    15828    2   ERROR:
     1342    15829    2      ALTRETURN ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:207  
  15829  9 001471   200060 221300       ERROR        LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001472   000000 702211                    TSX2  ! 0,X1

     1343    15830
     1344    15831        /* END DU_SET_DF_FID */
     1345    15832        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:208  
     1346    15833        /*I*  NAME:        DU_DF_FROM_HOLD
     1347    15834              AUTHOR:      Scott S. Sheppard
     1348    15835              PURPOSE:     Sets Deckfile File Id from Hold Area
     1349    15836              INTERFACE:   DU_USER_WRITE
     1350    15837                           DU_SET_FULL_FID
     1351    15838                           DU_SET_FID - Performs M$FID
     1352    15839              INPUT:       HELD_DF         - FID entered as part of the DEER
     1353    15840                                             command
     1354    15841                           HELD_DF_LGTH    - number of caharcters in FID
     1355    15842              OUTPUT:      DF_FID       - name.account field for deckfile
     1356    15843                           DF_FID_LGTH
     1357    15844              DESCRIPTION: This procedure sets the  DF  descriptor field
     1358    15845                           using the file identifier saved from the DEER
     1359    15846                           command.   This procedure also ensures that a
     1360    15847                           tape identifier is not used for deckfiles.
     1361    15848        */
     1362    15849        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:209  
     1363    15850    2   DU_DF_FROM_HOLD: PROC ALTRET ;

  15850  9 001473   200066 741300       DU_DF_FROM_* STX1  ! @IFAD_FID,,AUTO

     1364    15851
     1365    15852        /* Code */
     1366    15853
     1367    15854    3      CALL DU_SET_FID (HELD_DF) ALTRET (FID_ERROR) ;

  15854  9 001474   200062 236100                    LDQ     @HELD_DF,,AUTO
         9 001475   200073 756100                    STQ     @IFAD_ASN,,AUTO
         9 001476   002336 701000 9                  TSX1    DU_SET_FID
         9 001477   001542 702000 9                  TSX2    FID_ERROR

     1368    15855    4      DO CASE (FID_ASN) ;

  15855  9 001500   000001 236000 5                  LDQ     FID_ASN
         9 001501   000033 772000                    QRL     27
         9 001502   000002 116007                    CMPQ    2,DL
         9 001503   001505 602006 9                  TNC     s:15855+5,QL
         9 001504   001521 710000 9                  TRA     s:15862
         9 001505   001521 710000 9                  TRA     s:15862
         9 001506   001507 710000 9                  TRA     s:15857

     1369    15856    4         CASE (%FILE#) ;

     1370    15857    4            CALL DU_SET_FULL_FID (HELD_DF,

  15857  9 001507   200065 236100                    LDQ     @DF_FID_LGTH,,AUTO
         9 001510   200102 756100                    STQ     @TARGET_FID+1,,AUTO
         9 001511   200064 236100                    LDQ     @DF_FID,,AUTO
         9 001512   200063 235100                    LDA     @HELD_DF_LGTH,,AUTO
         9 001513   200100 757100                    STAQ    @ENTERED_FID+1,,AUTO
         9 001514   200062 236100                    LDQ     @HELD_DF,,AUTO
         9 001515   200077 756100                    STQ     @LENGTH+2,,AUTO
         9 001516   002160 701000 9                  TSX1    DU_SET_FULL_FID
         9 001517   000000 011000                    NOP     0
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:210  
         9 001520   001540 710000 9                  TRA     s:15867

     1371    15858    4                    HELD_DF_LGTH,
     1372    15859    4                    DF_FID,
     1373    15860    4                    DF_FID_LGTH) ;
     1374    15861    4         CASE (ELSE) ;

     1375    15862    4            DF_FID = HELD_DF ;

  15862  9 001521   200062 470500                    LDP0    @HELD_DF,,AUTO
         9 001522   200064 471500                    LDP1    @DF_FID,,AUTO
         9 001523   040100 100500                    MLR     fill='040'O
         9 001524   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40
         9 001525   100000 000050                    ADSC9   0,,PR1                   cn=0,n=40

     1376    15863    4            DF_FID_LGTH = HELD_DF_LGTH ;

  15863  9 001526   200063 473500                    LDP3    @HELD_DF_LGTH,,AUTO
         9 001527   200065 474500                    LDP4    @DF_FID_LGTH,,AUTO
         9 001530   300000 235100                    LDA     0,,PR3
         9 001531   400000 755100                    STA     0,,PR4

     1377    15864    4            CALL DU_USER_WRITE (%E$DDFH_ASN) ;

  15864  9 001532   000121 236000 10                 LDQ     81
         9 001533   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001534   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001535   000000 011000                    NOP     0

     1378    15865    4            ALTRETURN ;

  15865  9 001536   200066 221300                    LDX1  ! @IFAD_FID,,AUTO
         9 001537   000000 702211                    TSX2  ! 0,X1

     1379    15866    4      END /* CASE */ ;

     1380    15867    3      RETURN ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:211  

  15867  9 001540   200066 221300                    LDX1  ! @IFAD_FID,,AUTO
         9 001541   000001 702211                    TSX2  ! 1,X1

     1381    15868
     1382    15869    3   FID_ERROR:
     1383    15870    3      DF_FID = HELD_DF ;

  15870  9 001542   200062 470500       FID_ERROR    LDP0    @HELD_DF,,AUTO
         9 001543   200064 471500                    LDP1    @DF_FID,,AUTO
         9 001544   040100 100500                    MLR     fill='040'O
         9 001545   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40
         9 001546   100000 000050                    ADSC9   0,,PR1                   cn=0,n=40

     1384    15871    3      DF_FID_LGTH = HELD_DF_LGTH ;

  15871  9 001547   200063 473500                    LDP3    @HELD_DF_LGTH,,AUTO
         9 001550   200065 474500                    LDP4    @DF_FID_LGTH,,AUTO
         9 001551   300000 235100                    LDA     0,,PR3
         9 001552   400000 755100                    STA     0,,PR4

     1385    15872    3      CALL DU_USER_WRITE (%E$DDFH_FID_ERROR) ;

  15872  9 001553   000123 236000 10                 LDQ     83
         9 001554   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001555   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001556   000000 011000                    NOP     0

     1386    15873    3      ALTRETURN ;

  15873  9 001557   200066 221300                    LDX1  ! @IFAD_FID,,AUTO
         9 001560   000000 702211                    TSX2  ! 0,X1

     1387    15874
     1388    15875    3   END DU_DF_FROM_HOLD ;
     1389    15876        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:212  
     1390    15877        /*I*  NAME:        DU_DF_FROM_MERGE
     1391    15878              AUTHOR:      Scott S. Sheppard
     1392    15879              PURPOSE:     Sets Name.Account for a File Identifier
     1393    15880              INTERFACE:   DU_USER_WRITE
     1394    15881                           DU_DF_FROM_MR
     1395    15882              INPUT:       F$DCB.ASN#
     1396    15883                           F$DCB.RES#
     1397    15884              OUTPUT:      DF_FID
     1398    15885                           DF_FID_LGTH
     1399    15886              DESCRIPTION: This procedure checks the ASN for the M$DECKFILE
     1400    15887                           dcb and calls a routine to set the fid.
     1401    15888        */
     1402    15889
     1403    15890    2   DU_DF_FROM_MERGE: PROC ALTRET ;

  15890  9 001561   200066 741300       DU_DF_FROM_* STX1  ! @IFAD_FID,,AUTO

     1404    15891
     1405    15892        /* Code */
     1406    15893
     1407    15894    4      DO CASE (DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.ASN#) ;

  15894  9 001562   000000 236007 xsym               LDQ     M$DECKFILE,DL
         9 001563   000043 470400 10                 LDP0    35
         9 001564   000000 471500                    LDP1    0,,PR0
         9 001565   100000 473506                    LDP3    0,QL,PR1
         9 001566   300032 236100                    LDQ     26,,PR3
         9 001567   000011 772000                    QRL     9
         9 001570   000777 376007                    ANQ     511,DL
         9 001571   000002 116007                    CMPQ    2,DL
         9 001572   001574 602006 9                  TNC     s:15894+10,QL
         9 001573   001607 710000 9                  TRA     s:15898
         9 001574   001607 710000 9                  TRA     s:15898
         9 001575   001576 710000 9                  TRA     s:15896

     1408    15895    4         CASE (%FILE#) ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:213  
     1409    15896    4           CALL DU_UNFID_DCB (DCBNUM (M$DECKFILE), DF_FID, DF_FID_LGTH) ALTRET (ERROR)
             15896                     ;

  15896  9 001576   000000 236007 xsym               LDQ     M$DECKFILE,DL
         9 001577   200133 756100                    STQ     ALT$+5,,AUTO
         9 001600   200064 237100                    LDAQ    @DF_FID,,AUTO
         9 001601   200074 757100                    STAQ    @IFAD_RES,,AUTO
         9 001602   200133 633500                    EPPR3   ALT$+5,,AUTO
         9 001603   200073 453500                    STP3    @IFAD_ASN,,AUTO
         9 001604   002370 701000 9                  TSX1    DU_UNFID_DCB
         9 001605   001613 702000 9                  TSX2    ERROR
         9 001606   001615 710000 9                  TRA     s:15902

     1410    15897    4         CASE (ELSE) ;

     1411    15898    4            CALL DU_USER_WRITE (%E$DDFM_ASN) ;

  15898  9 001607   000125 236000 10                 LDQ     85
         9 001610   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001611   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001612   000000 011000                    NOP     0

     1412    15899    4   ERROR:
     1413    15900    4            ALTRETURN ;

  15900  9 001613   200066 221300       ERROR        LDX1  ! @IFAD_FID,,AUTO
         9 001614   000000 702211                    TSX2  ! 0,X1

     1414    15901    4      END /* CASE */ ;

     1415    15902    3      RETURN ;

  15902  9 001615   200066 221300                    LDX1  ! @IFAD_FID,,AUTO
         9 001616   000001 702211                    TSX2  ! 1,X1

     1416    15903
     1417    15904    3   END DU_DF_FROM_MERGE;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:214  
     1418    15905    2   END DU_SET_DF_FID;
     1419    15906        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:215  
     1420    15907        /*I*  NAME:        DU_OPEN_DF
     1421    15908              AUTHOR:      Scott S. Sheppard
     1422    15909              PURPOSE:     Opens the deckfile for update
     1423    15910              INTERFACE:   DU_USER_WRITE
     1424    15911                           DU_PRINTER_WRITE
     1425    15912                           DU_SIGNAL_OPEN_ERROR
     1426    15913                           DU_SYSTEM_ERRMSG
     1427    15914                           DU_SET_DF_NAME_ACCOUNT
     1428    15915                           M$OPEN
     1429    15916                           DCBNUM
     1430    15917                           DCBADDR
     1431    15918              INPUT:       DF_ENTERED - Name and Account entered from user
     1432    15919                           DF_FID - NAME.ACCOUNT of deckfile
     1433    15920                           DF_OPEN_TYPE - Access deckfile open flag
     1434    15921                           DF_REPORT_ERROR - should errors be reported if
     1435    15922                                             the open of the deckfile fails
     1436    15923                           DF_NO_EXIST  - Set if creation of a deckfile
     1437    15924                                          which should not previously exist
     1438    15925                           F$DCB.FCD#   - Deckfile currently open flag
     1439    15926                           F$DCB.AMR#   - Set if !SET command was used
     1440    15927              OUTPUT:      M$DECKFILE DCB opened
     1441    15928              DESCRIPTION: This procedure opens the deckfile based on the
     1442    15929                           parameters as: FUN = CREATE   or  FUN = UPDATE
     1443    15930                                       EXIST = NEWFILE  or  EXIST = ERROR
     1444    15931                           The open also accesses the deckfile  specified
     1445    15932                           by  name and acct  if these items were present
     1446    15933                           in the deckfile editor command.
     1447    15934        */
     1448    15935        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:216  
     1449    15936    1   DU_OPEN_DF: PROC (DF_ENTERED,

  15936  9 001617   200060 741300       DU_OPEN_DF   STX1  ! LO_FID_LGTH+2,,AUTO

     1450    15937    1              DF_FID,
     1451    15938    1              DF_FID_LGTH,
     1452    15939    1              DF_OPEN_TYPE,
     1453    15940    1              DF_REPORT_ERROR,
     1454    15941    1              DF_NO_EXIST) ALTRET ;
     1455    15942
     1456    15943    2      DCL DF_ENTERED                 BIT (1) CALIGNED ;
     1457    15944    2      DCL DF_FID                     CHAR (40) CALIGNED ;
     1458    15945    2      DCL DF_FID_LGTH                UBIN WORD ALIGNED ;
     1459    15946    2      DCL DF_OPEN_TYPE               UBIN WORD ALIGNED ;
     1460    15947    2      DCL DF_REPORT_ERROR            BIT (1) CALIGNED ;
     1461    15948    2      DCL DF_NO_EXIST                BIT (1) CALIGNED ;
     1462    15949           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:217  
     1463    15950        /* Function Parameter Tables */
     1464    15951
     1465    15952           %FPT_OPEN (FPTN     = CREATE_OVER_FID,
     1466    15953                      ACCT     = FID_ACCT,
     1467    15954                      ACS      = DIRECT,
     1468    15955                      ASN      = FILE,
     1469    15956                      BUPM     = YES,
     1470    15957                      DCB      = M$DECKFILE,
     1471    15958                      DISP     = NAMED,
     1472    15959                      EXIST    = NEWFILE,
     1473    15960                      EXPIRE   = NEVER,
     1474    15961                      FUN      = CREATE,
     1475    15962                      IXTNSIZE = 30,
     1476    15963                      NAME     = FID_NAME,
     1477    15964                      ORG      = KEYED,
     1478    15965                      PASS     = FID_PASS,
     1479    15966                      SHARE    = IN,
     1480    15967                      SN       = FID_SN,
     1481    15968                      TYPE     = 'DB',
     1482    15969                      WSN      = FID_WSN,
     1483    15970                      XTNSIZE  = 30) ;
     1484    16079
     1485    16080           %FPT_OPEN (FPTN     = CREATE_NEW_FID,
     1486    16081                      ACCT     = FID_ACCT,
     1487    16082                      ACS      = DIRECT,
     1488    16083                      ASN      = FILE,
     1489    16084                      BUPM     = YES,
     1490    16085                      DCB      = M$DECKFILE,
     1491    16086                      DISP     = NAMED,
     1492    16087                      EXIST    = ERROR,
     1493    16088                      EXPIRE   = NEVER,
     1494    16089                      FUN      = CREATE,
     1495    16090                      IXTNSIZE = 30,
     1496    16091                      NAME     = FID_NAME,
     1497    16092                      ORG      = KEYED,
     1498    16093                      PASS     = FID_PASS,
     1499    16094                      SHARE    = IN,
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:218  
     1500    16095                      SN       = FID_SN,
     1501    16096                      TYPE     = 'DB',
     1502    16097                      WSN      = FID_WSN,
     1503    16098                      XTNSIZE  = 30) ;
     1504    16207           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:219  
     1505    16208           %FPT_OPEN (FPTN     = UPDATE_FID,
     1506    16209                      ACCT     = FID_ACCT,
     1507    16210                      ACS      = DIRECT,
     1508    16211                      ASN      = FILE,
     1509    16212                      BUPM     = YES,
     1510    16213                      DCB      = M$DECKFILE,
     1511    16214                      EXIST    = OLDFILE,
     1512    16215                      EXPIRE   = NEVER,
     1513    16216                      FUN      = UPDATE,
     1514    16217                      NAME     = FID_NAME,
     1515    16218                      PASS     = FID_PASS,
     1516    16219                      SHARE    = IN,
     1517    16220                      SN       = FID_SN,
     1518    16221                      WSN      = FID_WSN);
     1519    16330
     1520    16331           %FPT_OPEN (FPTN     = READ_FID,
     1521    16332                      ACCT     = FID_ACCT,
     1522    16333                      ACS      = DIRECT,
     1523    16334                      ASN      = FILE,
     1524    16335                      DCB      = M$DECKFILE,
     1525    16336                      EXIST    = OLDFILE,
     1526    16337                      FUN      = IN,
     1527    16338                      NAME     = FID_NAME,
     1528    16339                      PASS     = FID_PASS,
     1529    16340                      SHARE    = IN,
     1530    16341                      SN       = FID_SN,
     1531    16342                      WSN      = FID_WSN);
     1532    16451
     1533    16452           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:220  
     1534    16453        /* Code */
     1535    16454
     1536    16455    2      IF DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FCD#

  16455  9 001620   000000 236007 xsym               LDQ     M$DECKFILE,DL
         9 001621   000043 470400 10                 LDP0    35
         9 001622   000000 471500                    LDP1    0,,PR0
         9 001623   100000 473506                    LDP3    0,QL,PR1
         9 001624   300031 236100                    LDQ     25,,PR3
         9 001625   020000 316007                    CANQ    8192,DL
         9 001626   001635 600000 9                  TZE     s:16461

     1537    16456    3      THEN DO ;

     1538    16457    3              CALL DU_USER_WRITE (%E$DOD_ALREADY_OPEN) ;

  16457  9 001627   000127 236000 10                 LDQ     87
         9 001630   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001631   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001632   000000 011000                    NOP     0

     1539    16458    3              ALTRETURN ;

  16458  9 001633   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001634   000000 702211                    TSX2  ! 0,X1

     1540    16459    3           END /* THEN */ ;
     1541    16460    3      ELSE DO ;

     1542    16461    3              CALL DU_SET_FID (DF_FID) ALTRET (ERROR);

  16461  9 001635   200062 236100                    LDQ     @DF_FID,,AUTO
         9 001636   200073 756100                    STQ     @IFAD_ASN,,AUTO
         9 001637   002336 701000 9                  TSX1    DU_SET_FID
         9 001640   001740 702000 9                  TSX2    ERROR

     1543    16462    4              DO CASE (DF_OPEN_TYPE) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:221  

  16462  9 001641   200064 470500                    LDP0    @DF_OPEN_TYPE,,AUTO
         9 001642   000000 235100                    LDA     0,,PR0
         9 001643   000003 115007                    CMPA    3,DL
         9 001644   001646 602005 9                  TNC     s:16462+5,AL
         9 001645   001740 710000 9                  TRA     ERROR
         9 001646   001651 710000 9                  TRA     s:16464
         9 001647   001702 710000 9                  TRA     s:16470
         9 001650   001733 710000 9                  TRA     s:16479

     1544    16463    4                 CASE (%CREATE_FILE) ;

     1545    16464    4                    IF DF_ENTERED

  16464  9 001651   200061 471500                    LDP1    @DF_ENTERED,,AUTO
         9 001652   000000 066500                    CMPB    filb='0'B
         9 001653   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         9 001654   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 001655   001675 600000 9                  TZE     s:16468

     1546    16465    4                    THEN IF DF_NO_EXIST

  16465  9 001656   200066 473500                    LDP3    @DF_NO_EXIST,,AUTO
         9 001657   000000 066500                    CMPB    filb='0'B
         9 001660   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1
         9 001661   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 001662   001670 600000 9                  TZE     s:16467

     1547    16466    4                       THEN CALL M$OPEN (CREATE_NEW_FID) ALTRET (ERROR) ;

  16466  9 001663   001174 630400 5                  EPPR0   CREATE_NEW_FID
         9 001664   450000 713400                    CLIMB   alt,open
         9 001665   410400 401760                    pmme    nvectors=18
         9 001666   001740 702000 9                  TSX2    ERROR
         9 001667   001744 710000 9                  TRA     s:16485

     1548    16467    4                       ELSE CALL M$OPEN (CREATE_OVER_FID) ALTRET (ERROR) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:222  

  16467  9 001670   001102 630400 5                  EPPR0   CREATE_OVER_FID
         9 001671   450000 713400                    CLIMB   alt,open
         9 001672   410400 401760                    pmme    nvectors=18
         9 001673   001740 702000 9                  TSX2    ERROR
         9 001674   001744 710000 9                  TRA     s:16485

     1549    16468    4                    ELSE CALL M$OPEN (CREATE_OVER_FID) ALTRET (ERROR) ;

  16468  9 001675   001102 630400 5                  EPPR0   CREATE_OVER_FID
         9 001676   450000 713400                    CLIMB   alt,open
         9 001677   410400 401760                    pmme    nvectors=18
         9 001700   001740 702000 9                  TSX2    ERROR
         9 001701   001744 710000 9                  TRA     s:16485

     1550    16469    4                 CASE (%UPDATE_FILE) ;

     1551    16470    4                    CALL M$OPEN (UPDATE_FID) ALTRET (ERROR) ;

  16470  9 001702   001266 630400 5                  EPPR0   UPDATE_FID
         9 001703   450000 713400                    CLIMB   alt,open
         9 001704   410400 401760                    pmme    nvectors=18
         9 001705   001740 702000 9                  TSX2    ERROR

     1552    16471    4                    IF (DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FFLG.UPD#)

  16471  9 001706   000000 236007 xsym               LDQ     M$DECKFILE,DL
         9 001707   000043 470400 10                 LDP0    35
         9 001710   000000 471500                    LDP1    0,,PR0
         9 001711   100000 473506                    LDP3    0,QL,PR1
         9 001712   000000 236007 xsym               LDQ     M$DECKFILE,DL
         9 001713   100000 474506                    LDP4    0,QL,PR1
         9 001714   400004 236100                    LDQ     4,,PR4
         9 001715   000002 736000                    QLS     2
         9 001716   400000 376003                    ANQ     -131072,DU
         9 001717   200130 756100                    STQ     ALT$+2,,AUTO
         9 001720   300004 236100                    LDQ     4,,PR3
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:223  
         9 001721   000003 736000                    QLS     3
         9 001722   400000 376003                    ANQ     -131072,DU
         9 001723   200130 376100                    ANQ     ALT$+2,,AUTO
         9 001724   001744 601000 9                  TNZ     s:16485

     1553    16472    4                            & (DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FFLG.WNEW#)
     1554    16473    4                    THEN /* Update Open Successful. */ ;
     1555    16474    5                    ELSE DO ;

     1556    16475    5                            CALL DU_USER_WRITE (%E$DOD_CANT_ACCESS) ;

  16475  9 001725   000131 236000 10                 LDQ     89
         9 001726   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 001727   002464 701000 9                  TSX1    DU_USER_WRITE
         9 001730   000000 011000                    NOP     0

     1557    16476    5                            ALTRETURN ;

  16476  9 001731   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001732   000000 702211                    TSX2  ! 0,X1

     1558    16477    5                         END /* ELSE */ ;
     1559    16478    4                 CASE (%READ_FILE) ;

     1560    16479    4                    CALL M$OPEN (READ_FID) ALTRET (ERROR) ;

  16479  9 001733   001360 630400 5                  EPPR0   READ_FID
         9 001734   450000 713400                    CLIMB   alt,open
         9 001735   410400 401760                    pmme    nvectors=18
         9 001736   001740 702000 9                  TSX2    ERROR
         9 001737   001744 710000 9                  TRA     s:16485

     1561    16480    4                 CASE (ELSE) ;

     1562    16481    4   ERROR:
     1563    16482    4                    CALL DU_SIGNAL_OPEN_ERROR ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:224  
  16482  9 001740   001746 701000 9     ERROR        TSX1    DU_SIGNAL_OPEN_ERROR
         9 001741   000000 011000                    NOP     0

     1564    16483    4                    ALTRETURN ;

  16483  9 001742   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001743   000000 702211                    TSX2  ! 0,X1

     1565    16484    4              END /* CASE */ ;

     1566    16485    3              RETURN ;

  16485  9 001744   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 001745   000001 702211                    TSX2  ! 1,X1

     1567    16486    3           END /* ELSE */ ;
     1568    16487
     1569    16488        /* END DU_OPEN_DF */
     1570    16489        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:225  
     1571    16490        /*I*  NAME:        DU_SIGNAL_OPEN_ERROR
     1572    16491              AUTHOR:      Scott S. Sheppard
     1573    16492              PURPOSE:     Informs of Deckfile Open Failure
     1574    16493              INTERFACE:   DU_USER_WRITE
     1575    16494                           DU_SYSTEM_ERRMSG
     1576    16495              INPUT:       B$ALT.ERR.ERR#
     1577    16496                           DF_REPORT_ERROR
     1578    16497              OUTPUT:      No system data altered.
     1579    16498              DESCRIPTION: This procedure prints the appropriate error message
     1580    16499                           when a deckfile open fails.
     1581    16500        */
     1582    16501
     1583    16502    2   DU_SIGNAL_OPEN_ERROR: PROC ;

  16502  9 001746   200070 741300       DU_SIGNAL_O* STX1  ! DCB$,,AUTO

     1584    16503
     1585    16504        /* Code */
     1586    16505
     1587    16506    4      DO CASE (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR#) ;

  16506  9 001747   000000 470400 xsym               LDP0    B$TCB$
         9 001750   000000 471500                    LDP1    0,,PR0
         9 001751   100102 236100                    LDQ     66,,PR1
         9 001752   000003 772000                    QRL     3
         9 001753   037777 376007                    ANQ     16383,DL
         9 001754   000144 136007                    SBLQ    100,DL
         9 001755   000070 116007                    CMPQ    56,DL
         9 001756   001760 602006 9                  TNC     s:16506+9,QL
         9 001757   002101 710000 9                  TRA     s:16518
         9 001760   002074 710000 9                  TRA     s:16516
         9 001761   002101 710000 9                  TRA     s:16518
         9 001762   002101 710000 9                  TRA     s:16518
         9 001763   002101 710000 9                  TRA     s:16518
         9 001764   002101 710000 9                  TRA     s:16518
         9 001765   002101 710000 9                  TRA     s:16518
         9 001766   002101 710000 9                  TRA     s:16518
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:226  
         9 001767   002101 710000 9                  TRA     s:16518
         9 001770   002101 710000 9                  TRA     s:16518
         9 001771   002101 710000 9                  TRA     s:16518
         9 001772   002050 710000 9                  TRA     s:16508
         9 001773   002101 710000 9                  TRA     s:16518
         9 001774   002101 710000 9                  TRA     s:16518
         9 001775   002062 710000 9                  TRA     s:16512
         9 001776   002101 710000 9                  TRA     s:16518
         9 001777   002101 710000 9                  TRA     s:16518
         9 002000   002101 710000 9                  TRA     s:16518
         9 002001   002101 710000 9                  TRA     s:16518
         9 002002   002101 710000 9                  TRA     s:16518
         9 002003   002101 710000 9                  TRA     s:16518
         9 002004   002101 710000 9                  TRA     s:16518
         9 002005   002101 710000 9                  TRA     s:16518
         9 002006   002101 710000 9                  TRA     s:16518
         9 002007   002101 710000 9                  TRA     s:16518
         9 002010   002101 710000 9                  TRA     s:16518
         9 002011   002101 710000 9                  TRA     s:16518
         9 002012   002101 710000 9                  TRA     s:16518
         9 002013   002101 710000 9                  TRA     s:16518
         9 002014   002101 710000 9                  TRA     s:16518
         9 002015   002101 710000 9                  TRA     s:16518
         9 002016   002101 710000 9                  TRA     s:16518
         9 002017   002101 710000 9                  TRA     s:16518
         9 002020   002101 710000 9                  TRA     s:16518
         9 002021   002101 710000 9                  TRA     s:16518
         9 002022   002101 710000 9                  TRA     s:16518
         9 002023   002101 710000 9                  TRA     s:16518
         9 002024   002101 710000 9                  TRA     s:16518
         9 002025   002101 710000 9                  TRA     s:16518
         9 002026   002101 710000 9                  TRA     s:16518
         9 002027   002101 710000 9                  TRA     s:16518
         9 002030   002101 710000 9                  TRA     s:16518
         9 002031   002101 710000 9                  TRA     s:16518
         9 002032   002101 710000 9                  TRA     s:16518
         9 002033   002101 710000 9                  TRA     s:16518
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:227  
         9 002034   002101 710000 9                  TRA     s:16518
         9 002035   002101 710000 9                  TRA     s:16518
         9 002036   002101 710000 9                  TRA     s:16518
         9 002037   002101 710000 9                  TRA     s:16518
         9 002040   002101 710000 9                  TRA     s:16518
         9 002041   002101 710000 9                  TRA     s:16518
         9 002042   002101 710000 9                  TRA     s:16518
         9 002043   002101 710000 9                  TRA     s:16518
         9 002044   002101 710000 9                  TRA     s:16518
         9 002045   002101 710000 9                  TRA     s:16518
         9 002046   002101 710000 9                  TRA     s:16518
         9 002047   002055 710000 9                  TRA     s:16510

     1588    16507    4         CASE (%E$CREATERR) ;

     1589    16508    4            CALL DU_USER_WRITE (%E$DOD_CANT_OVERWRITE) ;

  16508  9 002050   000133 236000 10                 LDQ     91
         9 002051   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002052   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002053   000000 011000                    NOP     0
         9 002054   002111 710000 9                  TRA     s:16521

     1590    16509    4         CASE (%E$CLSREL) ;

     1591    16510    4            CALL DU_USER_WRITE (%E$DOD_CANT_ACCESS) ;

  16510  9 002055   000131 236000 10                 LDQ     89
         9 002056   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002057   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002060   000000 011000                    NOP     0
         9 002061   002111 710000 9                  TRA     s:16521

     1592    16511    4         CASE (%E$NOFILE) ;

     1593    16512    4            IF DF_REPORT_ERROR

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:228  
  16512  9 002062   200065 473500                    LDP3    @DF_REPORT_ERROR,,AUTO
         9 002063   000000 066500                    CMPB    filb='0'B
         9 002064   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1
         9 002065   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 002066   002111 600000 9                  TZE     s:16521

     1594    16513    4            THEN CALL DU_USER_WRITE (%E$DOD_NO_FILE) ;

  16513  9 002067   000135 236000 10                 LDQ     93
         9 002070   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002071   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002072   000000 011000                    NOP     0
         9 002073   002111 710000 9                  TRA     s:16521

     1595    16514    4            ELSE /* checking for a deckfile which didn't exist. */ ;
     1596    16515    4         CASE (%E$DCBOPEN) ;

     1597    16516    4            CALL DU_USER_WRITE (%E$DOD_ALREADY_OPEN) ;

  16516  9 002074   000127 236000 10                 LDQ     87
         9 002075   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002076   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002077   000000 011000                    NOP     0
         9 002100   002111 710000 9                  TRA     s:16521

     1598    16517    4         CASE (ELSE) ;

     1599    16518    4            CALL DU_USER_WRITE (%E$DOD_OPEN_ERROR) ;

  16518  9 002101   000137 236000 10                 LDQ     95
         9 002102   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002103   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002104   000000 011000                    NOP     0

     1600    16519    4            CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  16519  9 002105   000065 236000 10                 LDQ     53
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:229  
         9 002106   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002107   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 002110   000000 011000                    NOP     0

     1601    16520    4      END /* CASE */ ;

     1602    16521    3      RETURN ;

  16521  9 002111   200070 221300                    LDX1  ! DCB$,,AUTO
         9 002112   000001 702211                    TSX2  ! 1,X1

     1603    16522
     1604    16523    3   END DU_SIGNAL_OPEN_ERROR ;
     1605    16524    2   END DU_OPEN_DF ;
     1606    16525        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:230  
     1607    16526        /*I*  NAME:        DU_CLOSE_DF
     1608    16527              AUTHOR:      Scott S. Sheppard
     1609    16528              PURPOSE:     Closes the deckfile
     1610    16529              INTERFACE:   M$CLOSE Monitor Service
     1611    16530                           DU_USER_WRITE
     1612    16531                           DU_SYSTEM_ERRMSG
     1613    16532                           DCBADDR function
     1614    16533                           DCBNUM function
     1615    16534              INPUT:       F$DCB.FCD# - Deckfile Open flag
     1616    16535                           DF_CLOSE_TYPE - save or discard deckfile
     1617    16536              OUTPUT:      M$DECKFILE DCB closed
     1618    16537              DESCRIPTION: This   procedure   closes   the  deckfile  and
     1619    16538                           saves or discards its contents as specified by
     1620    16539                           the close type parameter.
     1621    16540        */
     1622    16541        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:231  
     1623    16542    1   DU_CLOSE_DF: PROC (DF_CLOSE_TYPE) ALTRET ;

  16542  9 002113   200060 741300       DU_CLOSE_DF  STX1  ! LO_FID_LGTH+2,,AUTO

     1624    16543
     1625    16544    2      DCL DF_CLOSE_TYPE              UBIN WORD ALIGNED ;
     1626    16545           %FPT_CLOSE (FPTN = SAVE_DECKFILE,
     1627    16546                       DCB  = M$DECKFILE,
     1628    16547                       DISP = SAVE);
     1629    16589           %FPT_CLOSE (FPTN = DISCARD_DECKFILE,
     1630    16590                       DCB  = M$DECKFILE,
     1631    16591                       DISP = RELEASE,
     1632    16592                       RELG = YES) ;
     1633    16634
     1634    16635        /* Code */
     1635    16636
     1636    16637    2      IF DCBADDR (DCBNUM (M$DECKFILE)) -> F$DCB.FCD#

  16637  9 002114   000000 236007 xsym               LDQ     M$DECKFILE,DL
         9 002115   000043 470400 10                 LDP0    35
         9 002116   000000 471500                    LDP1    0,,PR0
         9 002117   100000 473506                    LDP3    0,QL,PR1
         9 002120   300031 236100                    LDQ     25,,PR3
         9 002121   020000 316007                    CANQ    8192,DL
         9 002122   002156 600000 9                  TZE     s:16650

     1637    16638    3      THEN DO CASE (DF_CLOSE_TYPE) ;

  16638  9 002123   200061 473500                    LDP3    @DF_CLOSE_TYPE,,AUTO
         9 002124   300000 235100                    LDA     0,,PR3
         9 002125   000002 115007                    CMPA    2,DL
         9 002126   002130 602005 9                  TNC     s:16638+5,AL
         9 002127   002144 710000 9                  TRA     CLOSE_ERROR
         9 002130   002132 710000 9                  TRA     s:16640
         9 002131   002137 710000 9                  TRA     s:16642

     1638    16639    3              CASE (%SAVE_FILE) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:232  

     1639    16640    3                 CALL M$CLOSE (SAVE_DECKFILE) ALTRET (CLOSE_ERROR) ;

  16640  9 002132   001452 630400 5                  EPPR0   SAVE_DECKFILE
         9 002133   450001 713400                    CLIMB   alt,close
         9 002134   406000 401760                    pmme    nvectors=13
         9 002135   002144 702000 9                  TSX2    CLOSE_ERROR
         9 002136   002156 710000 9                  TRA     s:16650

     1640    16641    3              CASE (%DISCARD_FILE) ;

     1641    16642    3                 CALL M$CLOSE (DISCARD_DECKFILE) ALTRET (CLOSE_ERROR) ;

  16642  9 002137   001510 630400 5                  EPPR0   DISCARD_DECKFILE
         9 002140   450001 713400                    CLIMB   alt,close
         9 002141   406000 401760                    pmme    nvectors=13
         9 002142   002144 702000 9                  TSX2    CLOSE_ERROR
         9 002143   002156 710000 9                  TRA     s:16650

     1642    16643    3              CASE (ELSE) ;

     1643    16644    3   CLOSE_ERROR:
     1644    16645    3                 CALL DU_USER_WRITE (%E$DCD_CLOSE_ERROR) ;

  16645  9 002144   000141 236000 10    CLOSE_ERROR  LDQ     97
         9 002145   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002146   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002147   000000 011000                    NOP     0

     1645    16646    3                 CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  16646  9 002150   000065 236000 10                 LDQ     53
         9 002151   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002152   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 002153   000000 011000                    NOP     0

     1646    16647    3                 ALTRETURN ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:233  

  16647  9 002154   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 002155   000000 702211                    TSX2  ! 0,X1

     1647    16648    3           END /* CASE */ ;

     1648    16649    2      ELSE /* Deckfile Not Open */ ;
     1649    16650    2      RETURN ;

  16650  9 002156   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 002157   000001 702211                    TSX2  ! 1,X1

     1650    16651
     1651    16652    2   END DU_CLOSE_DF ;
     1652    16653        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:234  
     1653    16654        /*I*  NAME:        DU_SET_FULL_FID
     1654    16655              AUTHOR:      Scott S. Sheppard
     1655    16656              PURPOSE:     Sets Name.Account for a File Identifier
     1656    16657              INTERFACE:   INDEX Function
     1657    16658                           CONCAT function
     1658    16659                           MINIMUM function
     1659    16660              INPUT:       ENTERED_FID    - FID entered as part of the DEER
     1660    16661                                            command
     1661    16662                           ENTERED_LGTH   - number of characters entered
     1662    16663              OUTPUT:      TARGET_FID     - output parameter for full fid
     1663    16664                           TARGET_LGTH    - length of the full fid
     1664    16665              DESCRIPTION: This procedure assigns a target string a full file
     1665    16666                           identifier. This procedure appends the .account to
     1666    16667                           the fid if it was not present for a non-star file.
     1667    16668        */
     1668    16669
     1669    16670    1   DU_SET_FULL_FID: PROC (ENTERED_FID, ENTERED_LGTH, TARGET_FID, TARGET_LGTH) ;

  16670  9 002160   200076 741300       DU_SET_FULL* STX1  ! @LENGTH+1,,AUTO

     1670    16671
     1671    16672    2      DCL ENTERED_FID                CHAR (40) CALIGNED ;
     1672    16673    2      DCL ENTERED_LGTH               UBIN WORD ALIGNED ;
     1673    16674    2      DCL TARGET_FID                 CHAR (40) CALIGNED ;
     1674    16675    2      DCL TARGET_LGTH                UBIN WORD ALIGNED ;
     1675    16676    2      DCL DOT_INX                    UBIN WORD ALIGNED ;
     1676    16677    2      DCL ACCT_LGTH                  UBIN WORD ALIGNED ;
     1677    16678           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:235  
     1678    16679        /* Code */
     1679    16680
     1680    16681    2      CALL INDEX (DOT_INX, '.', ENTERED_FID, 0) ;

  16681  9 002161   200077 470500                    LDP0    @ENTERED_FID,,AUTO
         9 002162   000000 124500                    SCM     mask='000'O
         9 002163   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40
         9 002164   000073 000001 10                 ADSC9   59                       cn=0,n=1
         9 002165   200103 000100                    ARG     DOT_INX,,AUTO

     1681    16682    2      IF SUBSTR (ENTERED_FID, 0, 1) = '*'

  16682  9 002166   040000 106500                    CMPC    fill='040'O
         9 002167   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 002170   000142 000001 10                 ADSC9   98                       cn=0,n=1
         9 002171   002210 601000 9                  TNZ     s:16687

     1682    16683    3      THEN DO ;

     1683    16684    3              TARGET_LGTH = MINIMUM (ENTERED_LGTH, DOT_INX) ;

  16684  9 002172   200103 236100                    LDQ     DOT_INX,,AUTO
         9 002173   200100 471500                    LDP1    @ENTERED_LGTH,,AUTO
         9 002174   100000 116100                    CMPQ    0,,PR1
         9 002175   002200 602000 9                  TNC     s:16684+6
         9 002176   002200 600000 9                  TZE     s:16684+6
         9 002177   100000 236100                    LDQ     0,,PR1
         9 002200   200102 473500                    LDP3    @TARGET_LGTH,,AUTO
         9 002201   300000 756100                    STQ     0,,PR3

     1684    16685    3              TARGET_FID = SUBSTR (ENTERED_FID, 0, TARGET_LGTH) ;

  16685  9 002202   300000 720100                    LXL0    0,,PR3
         9 002203   200101 474500                    LDP4    @TARGET_FID,,AUTO
         9 002204   040100 100540                    MLR     fill='040'O
         9 002205   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 002206   400000 000050                    ADSC9   0,,PR4                   cn=0,n=40
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:236  

     1685    16686    3           END /* THEN */ ;

  16686  9 002207   002334 710000 9                  TRA     s:16708

     1686    16687    2      ELSE IF DOT_INX < ENTERED_LGTH - 1

  16687  9 002210   200100 471500                    LDP1    @ENTERED_LGTH,,AUTO
         9 002211   100000 236100                    LDQ     0,,PR1
         9 002212   000001 136007                    SBLQ    1,DL
         9 002213   002227 604000 9                  TMI     s:16692
         9 002214   200103 116100                    CMPQ    DOT_INX,,AUTO
         9 002215   002227 602000 9                  TNC     s:16692
         9 002216   002227 600000 9                  TZE     s:16692

     1687    16688    3         THEN DO ;

     1688    16689    3                 TARGET_FID = ENTERED_FID ;

  16689  9 002217   200101 473500                    LDP3    @TARGET_FID,,AUTO
         9 002220   040100 100500                    MLR     fill='040'O
         9 002221   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40
         9 002222   300000 000050                    ADSC9   0,,PR3                   cn=0,n=40

     1689    16690    3                 TARGET_LGTH = ENTERED_LGTH ;

  16690  9 002223   200102 474500                    LDP4    @TARGET_LGTH,,AUTO
         9 002224   100000 235100                    LDA     0,,PR1
         9 002225   400000 755100                    STA     0,,PR4

     1690    16691    3              END /* THEN */ ;

  16691  9 002226   002334 710000 9                  TRA     s:16708

     1691    16692    2         ELSE IF DOT_INX = ENTERED_LGTH - 1

  16692  9 002227   000000 116003                    CMPQ    0,DU
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:237  
         9 002230   002267 604000 9                  TMI     s:16701
         9 002231   200103 116100                    CMPQ    DOT_INX,,AUTO
         9 002232   002267 601000 9                  TNZ     s:16701

     1692    16693    3            THEN DO ;

     1693    16694    3                    CALL CONCAT (TARGET_FID,

  16694  9 002233   100000 720100                    LXL0    0,,PR1
         9 002234   200101 473500                    LDP3    @TARGET_FID,,AUTO
         9 002235   040100 100540                    MLR     fill='040'O
         9 002236   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 002237   300000 000050                    ADSC9   0,,PR3                   cn=0,n=40
         9 002240   000000 636010                    EAQ     0,X0
         9 002241   000022 772000                    QRL     18
         9 002242   000050 116007                    CMPQ    40,DL
         9 002243   002255 603000 9                  TRC     s:16697
         9 002244   200130 740100                    STX0    ALT$+2,,AUTO
         9 002245   777727 620010                    EAX0    -41,X0
         9 002246   777777 660003                    ERX0    -1,DU
         9 002247   000000 474400 xsym               LDP4    B$JIT$
         9 002250   200130 235100                    LDA     ALT$+2,,AUTO
         9 002251   000022 771000                    ARL     18
         9 002252   040145 100500                    MLR     fill='040'O
         9 002253   400006 000010                    ADSC9   6,,PR4                   cn=0,n=8
         9 002254   300000 000010                    ADSC9   0,A,PR3                  cn=0,n=*X0

     1694    16695    3                            SUBSTR (ENTERED_FID, 0, ENTERED_LGTH),
     1695    16696    3                            B$JIT.FACCN) ;
     1696    16697    3                    CALL INDEX (ACCT_LGTH, ' ', B$JIT.FACCN, 0) ;

  16697  9 002255   000000 474400 xsym               LDP4    B$JIT$
         9 002256   000000 124500                    SCM     mask='000'O
         9 002257   400006 000010                    ADSC9   6,,PR4                   cn=0,n=8
         9 002260   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002261   200104 000100                    ARG     ACCT_LGTH,,AUTO

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:238  
     1697    16698    3                    TARGET_LGTH = ENTERED_LGTH + ACCT_LGTH ;

  16698  9 002262   100000 236100                    LDQ     0,,PR1
         9 002263   200104 036100                    ADLQ    ACCT_LGTH,,AUTO
         9 002264   200102 475500                    LDP5    @TARGET_LGTH,,AUTO
         9 002265   500000 756100                    STQ     0,,PR5

     1698    16699    3                 END /* THEN */ ;

  16699  9 002266   002334 710000 9                  TRA     s:16708

     1699    16700    3            ELSE DO ;

     1700    16701    3                    CALL CONCAT (TARGET_FID,

  16701  9 002267   100000 720100                    LXL0    0,,PR1
         9 002270   200101 473500                    LDP3    @TARGET_FID,,AUTO
         9 002271   040100 100540                    MLR     fill='040'O
         9 002272   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 002273   300000 000050                    ADSC9   0,,PR3                   cn=0,n=40
         9 002274   000000 636010                    EAQ     0,X0
         9 002275   000022 772000                    QRL     18
         9 002276   000050 116007                    CMPQ    40,DL
         9 002277   002322 603000 9                  TRC     s:16705
         9 002300   200130 740100                    STX0    ALT$+2,,AUTO
         9 002301   777727 620010                    EAX0    -41,X0
         9 002302   777777 660003                    ERX0    -1,DU
         9 002303   200130 235100                    LDA     ALT$+2,,AUTO
         9 002304   000022 771000                    ARL     18
         9 002305   040145 100400                    MLR     fill='040'O
         9 002306   000073 000001 10                 ADSC9   59                       cn=0,n=1
         9 002307   300000 000010                    ADSC9   0,A,PR3                  cn=0,n=*X0
         9 002310   200130 236100                    LDQ     ALT$+2,,AUTO
         9 002311   000022 772000                    QRL     18
         9 002312   000047 116007                    CMPQ    39,DL
         9 002313   002322 603000 9                  TRC     s:16705
         9 002314   777730 620006                    EAX0    -40,QL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:239  
         9 002315   777777 660003                    ERX0    -1,DU
         9 002316   000000 474400 xsym               LDP4    B$JIT$
         9 002317   040146 100500                    MLR     fill='040'O
         9 002320   400006 000010                    ADSC9   6,,PR4                   cn=0,n=8
         9 002321   300000 200010                    ADSC9   0,Q,PR3                  cn=1,n=*X0

     1701    16702    3                            SUBSTR (ENTERED_FID, 0, ENTERED_LGTH),
     1702    16703    3                            '.',
     1703    16704    3                            B$JIT.FACCN) ;
     1704    16705    3                    CALL INDEX (ACCT_LGTH, ' ', B$JIT.FACCN, 0) ;

  16705  9 002322   000000 474400 xsym               LDP4    B$JIT$
         9 002323   000000 124500                    SCM     mask='000'O
         9 002324   400006 000010                    ADSC9   6,,PR4                   cn=0,n=8
         9 002325   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002326   200104 000100                    ARG     ACCT_LGTH,,AUTO

     1705    16706    3                    TARGET_LGTH = ENTERED_LGTH + 1 + ACCT_LGTH ;

  16706  9 002327   100000 236100                    LDQ     0,,PR1
         9 002330   200104 036100                    ADLQ    ACCT_LGTH,,AUTO
         9 002331   000001 036007                    ADLQ    1,DL
         9 002332   200102 475500                    LDP5    @TARGET_LGTH,,AUTO
         9 002333   500000 756100                    STQ     0,,PR5

     1706    16707    3                 END /* ELSE */ ;

     1707    16708    2      RETURN ;

  16708  9 002334   200076 221300                    LDX1  ! @LENGTH+1,,AUTO
         9 002335   000001 702211                    TSX2  ! 1,X1

     1708    16709
     1709    16710    2   END DU_SET_FULL_FID ;
     1710    16711        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:240  
     1711    16712        /*I* NAME:         DU_SET_FID
     1712    16713             AUTHOR:       Kathy Larkin
     1713    16714             PURPOSE:      Converts FID to DCB file id for M$OPEN
     1714    16715             INTERFACE:    M$FID Monitor Service
     1715    16716                           DU_USER_WRITE - error message routine
     1716    16717                           DU_SYSTEM_ERRMSG - system error message routine
     1717    16718             PARAMETERS:   TEXT_FID - text string of fid
     1718    16719             DATA:         M$FID Params (global to TOU$DU)
     1719    16720                            - FID_RESULTS  - FID_PASS
     1720    16721                            - FID_ACCT     - FID_RES
     1721    16722                            - FID_ASN      - FID_SN
     1722    16723                            - FID_NAME     - FID_WSN
     1723    16724             DESCRIPTION:  Sets  up global  M$OPEN parameters  by calling
     1724    16725                           M$FID.  Gets account from JIT if was not given.
     1725    16726        */
     1726    16727
     1727    16728    1   DU_SET_FID: PROC (TEXT_FID) ALTRET;

  16728  9 002336   200072 741300       DU_SET_FID   STX1  ! LINE_NUMBER+2,,AUTO

     1728    16729
     1729    16730    2      DCL TEXT_FID    CHAR (40) CALIGNED;
     1730    16731
     1731    16732        /* Code */
     1732    16733
     1733    16734    2      FID_INFO.TEXTFID_ = VECTOR (TEXT_FID);

  16734  9 002337   000143 235000 10                 LDA     99
         9 002340   200073 236100                    LDQ     @TEXT_FID,,AUTO
         9 002341   000016 757000 5                  STAQ    FID_INFO+2

     1734    16735    2      CALL M$FID (FID_INFO) ALTRET (FID_ERROR);

  16735  9 002342   000014 630400 5                  EPPR0   FID_INFO
         9 002343   420001 713400                    CLIMB   alt,+8193
         9 002344   404400 401760                    pmme    nvectors=10
         9 002345   002356 702000 9                  TSX2    FID_ERROR
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:241  

     1735    16736    2      IF FID_RESULTS.ACCT

  16736  9 002346   000002 236000 5                  LDQ     FID_RESULTS
         9 002347   200000 316003                    CANQ    65536,DU
         9 002350   002354 601000 9                  TNZ     s:16739

     1736    16737    2      THEN /* Account field is available */;
     1737    16738    2      ELSE FID_ACCT.ACCT# = B$JIT.FACCN /* Get account from JIT */;

  16738  9 002351   000000 470400 xsym               LDP0    B$JIT$
         9 002352   000006 237100                    LDAQ    6,,PR0
         9 002353   000044 757000 5                  STAQ    FID_ACCT

     1738    16739    2      RETURN;

  16739  9 002354   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 002355   000001 702211                    TSX2  ! 1,X1

     1739    16740
     1740    16741    2   FID_ERROR:
     1741    16742    2      CALL DU_USER_WRITE (%E$DDFH_FID_ERROR);

  16742  9 002356   000123 236000 10    FID_ERROR    LDQ     83
         9 002357   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002360   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002361   000000 011000                    NOP     0

     1742    16743    2      CALL DU_SYSTEM_ERRMSG (%FALSE);

  16743  9 002362   000065 236000 10                 LDQ     53
         9 002363   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002364   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 002365   000000 011000                    NOP     0

     1743    16744    2      ALTRETURN;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:242  
  16744  9 002366   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 002367   000000 702211                    TSX2  ! 0,X1

     1744    16745
     1745    16746    2   END DU_SET_FID;
     1746    16747        %EJECT;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:243  
     1747    16748        /*I* NAME:         DU_UNFID_DCB
     1748    16749             AUTHOR:       Kathy Larkin
     1749    16750             PURPOSE:      Converts DCB file id to text string
     1750    16751             INTERFACE:    M$UNFID Monitor Service
     1751    16752                           DU_SYSTEM_ERRMSG - prints M$UNFID altret error message
     1752    16753             PARAMETERS:   DCB_NUM - number of the DCB to UNFID - input
     1753    16754                           STRING - fid text string - output
     1754    16755                           LENGTH - length of returned string - output
     1755    16756             DESCRIPTION:  Converts DCB fid to  text string.  Used if DCB
     1756    16757                           was !SET.
     1757    16758        */
     1758    16759    1   DU_UNFID_DCB: PROC (DCB_NUM, STRING, LENGTH) ALTRET;

  16759  9 002370   200072 741300       DU_UNFID_DCB STX1  ! LINE_NUMBER+2,,AUTO

     1759    16760
     1760    16761    2      DCL DCB_NUM     UBIN WORD ALIGNED;
     1761    16762    2      DCL STRING      CHAR (40) CALIGNED;
     1762    16763    2      DCL LENGTH      UBIN WORD ALIGNED;
     1763    16764           %FPT_UNFID      (FPTN  = UNFID_DCB);
     1764    16782
     1765    16783        /* Code */
     1766    16784
     1767    16785    2      UNFID_DCB.TEXTFID_ = VECTOR (STRING);

  16785  9 002371   000143 235000 10                 LDA     99
         9 002372   200074 236100                    LDQ     @STRING,,AUTO
         9 002373   001550 757000 5                  STAQ    UNFID_DCB+2

     1768    16786    2      UNFID_DCB.LEN_ = VECTOR (LENGTH);

  16786  9 002374   777640 235007                    LDA     -96,DL
         9 002375   200075 236100                    LDQ     @LENGTH,,AUTO
         9 002376   001570 757000 5                  STAQ    UNFID_DCB+18

     1769    16787    2      UNFID_DCB.V.DCB# = DCB_NUM;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:244  
  16787  9 002377   200073 470500                    LDP0    @DCB_NUM,,AUTO
         9 002400   000000 720100                    LXL0    0,,PR0
         9 002401   001572 740000 5                  STX0    UNFID_DCB+20

     1770    16788    2      CALL M$UNFID (UNFID_DCB) ALTRET (UNFID_ERROR);

  16788  9 002402   001546 630400 5                  EPPR0   UNFID_DCB
         9 002403   420021 713400                    CLIMB   alt,+8209
         9 002404   404400 401760                    pmme    nvectors=10
         9 002405   002410 702000 9                  TSX2    UNFID_ERROR

     1771    16789    2      RETURN;

  16789  9 002406   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 002407   000001 702211                    TSX2  ! 1,X1

     1772    16790
     1773    16791    2   UNFID_ERROR:
     1774    16792    2      CALL DU_SYSTEM_ERRMSG (%FALSE);

  16792  9 002410   000065 236000 10    UNFID_ERROR  LDQ     53
         9 002411   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002412   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 002413   000000 011000                    NOP     0

     1775    16793    2      ALTRETURN;

  16793  9 002414   200072 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 002415   000000 702211                    TSX2  ! 0,X1

     1776    16794    2   END DU_UNFID_DCB;
     1777    16795        %EJECT;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:245  
     1778    16796        /*I*  NAME:        DU_USER_READ
     1779    16797              AUTHOR:      Scott S. Sheppard
     1780    16798              PURPOSE:     Obtains A User Response
     1781    16799              INTERFACE:   DU_USER_WRITE
     1782    16800                           DU_SYSTEM_ERRMSG
     1783    16801                           M$READ monitor service
     1784    16802                           DCBNUM function
     1785    16803                           DCBADDR function
     1786    16804                           VECTOR Function
     1787    16805              INPUT:       LGTH - number of characters to expect
     1788    16806              OUTPUT:      RESPONSE - user entered information
     1789    16807                           LGTH - number of characters in the user response
     1790    16808              DESCRIPTION: This procedure accepts information from the
     1791    16809                           DEER user.
     1792    16810        */
     1793    16811        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:246  
     1794    16812    1   DU_USER_READ: PROC (RESPONSE, LGTH) ALTRET ;

  16812  9 002416   200060 741300       DU_USER_READ STX1  ! LO_FID_LGTH+2,,AUTO

     1795    16813
     1796    16814    2      DCL RESPONSE                   CHAR (40) CALIGNED ;
     1797    16815    2      DCL LGTH                       UBIN WORD ALIGNED ;
     1798    16816           %FPT_READ (FPTN = FROM_USER,
     1799    16817                      DCB  = M$SI) ;
     1800    16856
     1801    16857        /* Code */
     1802    16858
     1803    16859    2      RESPONSE = ' ' ;

  16859  9 002417   200061 470500                    LDP0    @RESPONSE,,AUTO
         9 002420   040100 100400                    MLR     fill='040'O
         9 002421   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002422   000000 000050                    ADSC9   0,,PR0                   cn=0,n=40

     1804    16860    2      FROM_USER.BUF_ = VECTOR (RESPONSE) ;

  16860  9 002423   000143 235000 10                 LDA     99
         9 002424   200061 236100                    LDQ     @RESPONSE,,AUTO
         9 002425   001600 757000 5                  STAQ    FROM_USER+4

     1805    16861    2      FROM_USER.BUF_.BOUND = LGTH - 1 ;

  16861  9 002426   200062 471500                    LDP1    @LGTH,,AUTO
         9 002427   100000 236100                    LDQ     0,,PR1
         9 002430   000001 136007                    SBLQ    1,DL
         9 002431   000020 736000                    QLS     16
         9 002432   001600 676000 5                  ERQ     FROM_USER+4
         9 002433   000034 376000 xsym               ANQ     B_VECTNIL+28
         9 002434   001600 656000 5                  ERSQ    FROM_USER+4

     1806    16862    2      CALL M$READ (FROM_USER) ALTRET (USER_READ_ERROR) ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:247  
  16862  9 002435   001574 630400 5                  EPPR0   FROM_USER
         9 002436   440000 713400                    CLIMB   alt,read
         9 002437   401400 401760                    pmme    nvectors=4
         9 002440   002452 702000 9                  TSX2    USER_READ_ERROR

     1807    16863    2      LGTH = DCBADDR (DCBNUM (M$SI)) -> F$DCB.ARS# ;

  16863  9 002441   000000 236007 xsym               LDQ     M$SI,DL
         9 002442   000043 470400 10                 LDP0    35
         9 002443   000000 471500                    LDP1    0,,PR0
         9 002444   100000 473506                    LDP3    0,QL,PR1
         9 002445   300000 235100                    LDA     0,,PR3
         9 002446   200062 473500                    LDP3    @LGTH,,AUTO
         9 002447   300000 755100                    STA     0,,PR3

     1808    16864    2      RETURN ;

  16864  9 002450   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 002451   000001 702211                    TSX2  ! 1,X1

     1809    16865
     1810    16866    2   USER_READ_ERROR:
     1811    16867    2      CALL DU_USER_WRITE (%E$DUR_READ) ;

  16867  9 002452   000145 236000 10    USER_READ_E* LDQ     101
         9 002453   200121 756100                    STQ     ACCT_LGTH+13,,AUTO
         9 002454   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002455   000000 011000                    NOP     0

     1812    16868    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  16868  9 002456   000065 236000 10                 LDQ     53
         9 002457   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002460   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 002461   000000 011000                    NOP     0

     1813    16869    2      ALTRETURN ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:248  

  16869  9 002462   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 002463   000000 702211                    TSX2  ! 0,X1

     1814    16870
     1815    16871    2   END DU_USER_READ ;
     1816    16872        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:249  
     1817    16873        /*I*  NAME:        DU_USER_WRITE
     1818    16874              AUTHOR:      Scott S. Sheppard
     1819    16875              PURPOSE:     Output to user
     1820    16876              INTERFACE:   M$WRITE Monitor Service
     1821    16877                           DU_FETCH_TEXT
     1822    16878                           DU_SYSTEM_ERRMSG
     1823    16879                           VECTOR Function
     1824    16880              INPUT:       MSG_CODE        - Coded message number
     1825    16881                           DUP.NUM_LINES   - Number of lines of text
     1826    16882                           DUP.MSG_V       - Vector to message buffer
     1827    16883              OUTPUT:      Text lines written to M$DO.
     1828    16884              DESCRIPTION: This procedure writes a message to the M$DO data
     1829    16885                           control block destination.      The text for the
     1830    16886                           message is obtained by a call to  DU_FETCH_TEXT.
     1831    16887                           The  text  is  separated into  single lines  and
     1832    16888                           written  1 line at a time with calls to M$WRITE.
     1833    16889        */
     1834    16890        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:250  
     1835    16891    1   DU_USER_WRITE: PROC (MSG_CODE) ALTRET ;

  16891  9 002464   200120 741300       DU_USER_WRI* STX1  ! ACCT_LGTH+12,,AUTO

     1836    16892
     1837    16893    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     1838    16894    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     1839    16895    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     1840    16896    2                      BASED (DUP.MSG_V.PTR$) ;
     1841    16897           %FPT_WRITE (FPTN = TO_USER,
     1842    16898                       DCB  = M$DO) ;
     1843    16929
     1844    16930        /* Code */
     1845    16931
     1846    16932           /* Fetch text from Message Data Base */
     1847    16933    2      CALL DU_FETCH_TEXT (MSG_CODE) ;

  16933  9 002465   200121 236100                    LDQ     @MSG_CODE,,AUTO
         9 002466   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002467   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 002470   000000 011000                    NOP     0

     1848    16934
     1849    16935           /* Loop through and print one line at a time */
     1850    16936    3      DO LINE_NUMBER = 0 TO DUP.NUM_LINES-1 ;

  16936  9 002471   200122 450100                    STZ     LINE_NUMBER,,AUTO
         9 002472   002512 710000 9                  TRA     s:16939+3

     1851    16937    3         TO_USER.BUF_ = VECTOR (SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH)) ;

  16937  9 002473   000146 235000 10                 LDA     102
         9 002474   200122 236100                    LDQ     LINE_NUMBER,,AUTO
         9 002475   200130 755100                    STA     ALT$+2,,AUTO
         9 002476   000036 402003                    MPY     30,DU
         9 002477   400000 036007                    ADLQ    -131072,DL
         9 002500   000025 036000 xsym               ADLQ    DUP+21
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:251  
         9 002501   200130 235100                    LDA     ALT$+2,,AUTO
         9 002502   001616 757000 5                  STAQ    TO_USER+4

     1852    16938    3         CALL M$WRITE (TO_USER) ALTRET (WRITE_ERROR) ;

  16938  9 002503   001612 630400 5                  EPPR0   TO_USER
         9 002504   440001 713400                    CLIMB   alt,write
         9 002505   401400 401760                    pmme    nvectors=4
         9 002506   002517 702000 9                  TSX2    WRITE_ERROR

     1853    16939    3      END /* DO */ ;

  16939  9 002507   200122 235100                    LDA     LINE_NUMBER,,AUTO
         9 002510   000001 035007                    ADLA    1,DL
         9 002511   200122 755100                    STA     LINE_NUMBER,,AUTO
         9 002512   200122 236100                    LDQ     LINE_NUMBER,,AUTO
         9 002513   000022 116000 xsym               CMPQ    DUP+18
         9 002514   002473 602000 9                  TNC     s:16937

     1854    16940    2      RETURN ;

  16940  9 002515   200120 221300                    LDX1  ! ACCT_LGTH+12,,AUTO
         9 002516   000001 702211                    TSX2  ! 1,X1

     1855    16941
     1856    16942    2   WRITE_ERROR:
     1857    16943    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  16943  9 002517   000065 236000 10    WRITE_ERROR  LDQ     53
         9 002520   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002521   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 002522   000000 011000                    NOP     0

     1858    16944    2      ALTRETURN ;

  16944  9 002523   200120 221300                    LDX1  ! ACCT_LGTH+12,,AUTO
         9 002524   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:252  

     1859    16945
     1860    16946    2   END DU_USER_WRITE ;
     1861    16947        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:253  
     1862    16948        /*I*  NAME:        DU_PRINTER_WRITE
     1863    16949              AUTHOR:      Scott S. Sheppard
     1864    16950              PURPOSE:     Routes output to the Edit Listing
     1865    16951              INTERFACE:   M$WRITE Monitor Service
     1866    16952                           DU_HEADER_WRITE  DU_FETCH_TEXT  DU_SYSTEM_ERRMSG
     1867    16953              INPUT:       MSG_CODE   - Coded message number
     1868    16954                           DUP.LINE_VFC - vertical format control
     1869    16955                           DUP.LINE#  - current line number of current page
     1870    16956                           DUP.PAGE#  - current page number
     1871    16957                           DUP.MSG_V  - vector to array of text lines to write
     1872    16958                           DUP.NUM_LINES  - number of text lines to write
     1873    16959              OUTPUT:      Text lines written to M$LO.
     1874    16960              DESCRIPTION: This procedure writes a message to the  M$LO  data control
     1875    16961                           destination. The text of the message is obtained by a call
     1876    16962                           to DU_FETCH_TEXT.  If the text will not fit on the current
     1877    16963                           page,  DU_HEADER_WRITE  is  called  and  the  lost text is
     1878    16964                           refetched. The message text is printed one line at a time.
     1879    16965        */
     1880    16966
     1881    16967    1   DU_PRINTER_WRITE: PROC (MSG_CODE) ALTRET ;

  16967  9 002525   200060 741300       DU_PRINTER_* STX1  ! LO_FID_LGTH+2,,AUTO

     1882    16968
     1883    16969    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     1884    16970    2      DCL 1 PL   STATIC CALIGNED,
     1885    16971    2            2 CARRIAGE_CONTROL       CHAR (1)  UNAL,
     1886    16972    2            2 TEXT_LINE_             CHAR (%MAX_LGTH) UNAL ;
     1887    16973    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     1888    16974    2      DCL SKIPPED     UBIN WORD ALIGNED ;
     1889    16975    2      DCL LAST_LINE   UBIN WORD ALIGNED ;
     1890    16976    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     1891    16977    2                      BASED (DUP.MSG_V.PTR$) ;
     1892    16978           %FPT_WRITE (FPTN = TO_PRINTER,
     1893    16979                       DCB  = M$LO,
     1894    16980                       VFC  = YES,
     1895    16981                       BUF  = PL) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:254  
     1896    17012           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:255  
     1897    17013        /* Code */
     1898    17014
     1899    17015           /* Fetch text first to see if it fits on the current page */
     1900    17016    2      CALL DU_FETCH_TEXT (MSG_CODE) ;

  17016  9 002526   200061 236100                    LDQ     @MSG_CODE,,AUTO
         9 002527   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002530   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 002531   000000 011000                    NOP     0

     1901    17017    2      IF DUP.LINE_VFC = %SKIP_WRITE

  17017  9 002532   000026 236000 xsym               LDQ     DUP+22
         9 002533   777000 376003                    ANQ     -512,DU
         9 002534   142000 116003                    CMPQ    50176,DU
         9 002535   002541 601000 9                  TNZ     s:17019

     1902    17018    2      THEN SKIPPED = 1 ;

  17018  9 002536   000001 235007                    LDA     1,DL
         9 002537   200063 755100                    STA     SKIPPED,,AUTO
         9 002540   002542 710000 9                  TRA     s:17020

     1903    17019    2      ELSE SKIPPED = 0 ;

  17019  9 002541   200063 450100                    STZ     SKIPPED,,AUTO

     1904    17020    2      IF DUP.FORCE_NEW_PAGE

  17020  9 002542   000056 234000 xsym               SZN     DUP+46
         9 002543   002564 605000 9                  TPL     s:17027

     1905    17021    3      THEN DO ;

     1906    17022    3              CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;

  17022  9 002544   000147 236000 10                 LDQ     103
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:256  
         9 002545   200067 756100                    STQ     @IFAD_FID_LGTH,,AUTO
         9 002546   003415 701000 9                  TSX1    DU_HEADER_WRITE
         9 002547   002673 702000 9                  TSX2    ERROR

     1907    17023    3              CALL DU_FETCH_TEXT (MSG_CODE) ;

  17023  9 002550   200061 236100                    LDQ     @MSG_CODE,,AUTO
         9 002551   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002552   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 002553   000000 011000                    NOP     0

     1908    17024    3              DUP.BOTTOM_LINE# = DCBADDR (DCBNUM (M$LO)) -> F$DCB.LINES# ;

  17024  9 002554   000000 236007 xsym               LDQ     M$LO,DL
         9 002555   000043 470400 10                 LDP0    35
         9 002556   000000 471500                    LDP1    0,,PR0
         9 002557   100000 473506                    LDP3    0,QL,PR1
         9 002560   300044 236100                    LDQ     36,,PR3
         9 002561   000022 772000                    QRL     18
         9 002562   000031 756000 xsym               STQ     DUP+25

     1909    17025    3           END /* THEN */ ;

  17025  9 002563   002616 710000 9                  TRA     s:17037

     1910    17026    3      ELSE DO ;

     1911    17027    3              LAST_LINE = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;

  17027  9 002564   000030 236000 xsym               LDQ     DUP+24
         9 002565   200063 036100                    ADLQ    SKIPPED,,AUTO
         9 002566   000022 036000 xsym               ADLQ    DUP+18
         9 002567   200064 756100                    STQ     LAST_LINE,,AUTO

     1912    17028    3              IF LAST_LINE > DUP.BOTTOM_LINE# & DUP.BOTTOM_LINE# > 0

  17028  9 002570   400000 220003                    LDX0    -131072,DU
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:257  
         9 002571   000031 116000 xsym               CMPQ    DUP+25
         9 002572   002574 600000 9                  TZE     s:17028+4
         9 002573   002575 603000 9                  TRC     s:17028+5
         9 002574   000000 220003                    LDX0    0,DU
         9 002575   400000 221003                    LDX1    -131072,DU
         9 002576   000031 235000 xsym               LDA     DUP+25
         9 002577   002601 601000 9                  TNZ     s:17028+9
         9 002600   000000 221003                    LDX1    0,DU
         9 002601   000000 636011                    EAQ     0,X1
         9 002602   200130 756100                    STQ     ALT$+2,,AUTO
         9 002603   000000 636010                    EAQ     0,X0
         9 002604   200130 376100                    ANQ     ALT$+2,,AUTO
         9 002605   002616 600000 9                  TZE     s:17037

     1913    17029    4              THEN DO ;

     1914    17030    4                      CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;

  17030  9 002606   000147 236000 10                 LDQ     103
         9 002607   200067 756100                    STQ     @IFAD_FID_LGTH,,AUTO
         9 002610   003415 701000 9                  TSX1    DU_HEADER_WRITE
         9 002611   002673 702000 9                  TSX2    ERROR

     1915    17031    4                      CALL DU_FETCH_TEXT (MSG_CODE) ;

  17031  9 002612   200061 236100                    LDQ     @MSG_CODE,,AUTO
         9 002613   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002614   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 002615   000000 011000                    NOP     0

     1916    17032    4                   END /* THEN */ ;

     1917    17033    3              ELSE /* Text will fit on this page. */ ;
     1918    17034    3           END /* ELSE */ ;

     1919    17035           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:258  
     1920    17036           /* Write text fetched from message data base. */
     1921    17037    2      PL.CARRIAGE_CONTROL = DUP.LINE_VFC ;

  17037  9 002616   000026 236000 xsym               LDQ     DUP+22
         9 002617   001626 552040 5                  STBQ    PL,'40'O

     1922    17038    2      PL.TEXT_LINE_ = SUBSTR (MSG_B(0), 2, %MAX_LGTH) ;

  17038  9 002620   000025 470400 xsym               LDP0    DUP+21
         9 002621   040000 100500                    MLR     fill='040'O
         9 002622   000000 400156                    ADSC9   0,,PR0                   cn=2,n=110
         9 002623   001626 200156 5                  ADSC9   PL                       cn=1,n=110

     1923    17039    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;

  17039  9 002624   001662 630400 5                  EPPR0   TO_PRINTER
         9 002625   440001 713400                    CLIMB   alt,write
         9 002626   401400 401760                    pmme    nvectors=4
         9 002627   002663 702000 9                  TSX2    PRINTER_WRITE_ERROR

     1924    17040    2      PL.CARRIAGE_CONTROL = %NEXT_WRITE ;

  17040  9 002630   141000 236003                    LDQ     49664,DU
         9 002631   001626 552040 5                  STBQ    PL,'40'O

     1925    17041    3      DO LINE_NUMBER = 1 TO DUP.NUM_LINES-1 ;

  17041  9 002632   000001 235007                    LDA     1,DL
         9 002633   200062 755100                    STA     LINE_NUMBER,,AUTO
         9 002634   002652 710000 9                  TRA     s:17044+3

     1926    17042    3         PL.TEXT_LINE_ = SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH) ;

  17042  9 002635   200062 236100                    LDQ     LINE_NUMBER,,AUTO
         9 002636   000170 402007                    MPY     120,DL
         9 002637   000025 470400 xsym               LDP0    DUP+21
         9 002640   040000 100506                    MLR     fill='040'O
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:259  
         9 002641   000000 400156                    ADSC9   0,Q,PR0                  cn=2,n=110
         9 002642   001626 200156 5                  ADSC9   PL                       cn=1,n=110

     1927    17043    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;

  17043  9 002643   001662 630400 5                  EPPR0   TO_PRINTER
         9 002644   440001 713400                    CLIMB   alt,write
         9 002645   401400 401760                    pmme    nvectors=4
         9 002646   002663 702000 9                  TSX2    PRINTER_WRITE_ERROR

     1928    17044    3      END /* DO */ ;

  17044  9 002647   200062 235100                    LDA     LINE_NUMBER,,AUTO
         9 002650   000001 035007                    ADLA    1,DL
         9 002651   200062 755100                    STA     LINE_NUMBER,,AUTO
         9 002652   200062 236100                    LDQ     LINE_NUMBER,,AUTO
         9 002653   000022 116000 xsym               CMPQ    DUP+18
         9 002654   002635 602000 9                  TNC     s:17042

     1929    17045    2      DUP.CURRENT_LINE# = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;

  17045  9 002655   000030 236000 xsym               LDQ     DUP+24
         9 002656   200063 036100                    ADLQ    SKIPPED,,AUTO
         9 002657   000022 036000 xsym               ADLQ    DUP+18
         9 002660   000030 756000 xsym               STQ     DUP+24

     1930    17046    2      RETURN ;

  17046  9 002661   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 002662   000001 702211                    TSX2  ! 1,X1

     1931    17047
     1932    17048    2   PRINTER_WRITE_ERROR:
     1933    17049    2      CALL DU_USER_WRITE (%E$DPW_WRITE) ;

  17049  9 002663   000151 236000 10    PRINTER_WRI* LDQ     105
         9 002664   200121 756100                    STQ     @MSG_CODE,,AUTO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:260  
         9 002665   002464 701000 9                  TSX1    DU_USER_WRITE
         9 002666   000000 011000                    NOP     0

     1934    17050    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  17050  9 002667   000065 236000 10                 LDQ     53
         9 002670   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002671   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 002672   000000 011000                    NOP     0

     1935    17051    2   ERROR:
     1936    17052    2      ALTRETURN ;

  17052  9 002673   200060 221300       ERROR        LDX1  ! LO_FID_LGTH+2,,AUTO
         9 002674   000000 702211                    TSX2  ! 0,X1

     1937    17053
     1938    17054    2   END DU_PRINTER_WRITE ;
     1939    17055        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:261  
     1940    17056        /*I*  NAME:        DU_PRINTER_OVERWRITE
     1941    17057              AUTHOR:      Scott S. Sheppard
     1942    17058              PURPOSE:     Routes output to the Edit Listing
     1943    17059              INTERFACE:   M$WRITE Monitor Service
     1944    17060                           DU_HEADER_WRITE  DU_FETCH_TEXT  DU_SYSTEM_ERRMSG
     1945    17061              INPUT:       MSG_CODE   - Coded message number
     1946    17062                           DUP.LINE_VFC - vertical format control
     1947    17063                           DUP.LINE#  - current line number of current page
     1948    17064                           DUP.MSG_V  - vector to array of text lines to write
     1949    17065                           DUP.NUM_LINES  - number of text lines to write
     1950    17066              OUTPUT:      Text lines written to M$LO.
     1951    17067              DESCRIPTION: This procedure writes a message to the  M$LO  data control
     1952    17068                           destination. The text of the message is obtained by a call
     1953    17069                           to DU_FETCH_TEXT.  If the text will not fit on the current
     1954    17070                           page,  DU_HEADER_WRITE  is  called  and  the  lost text is
     1955    17071                           refetched. The message text is printed one line at a time.
     1956    17072        */
     1957    17073
     1958    17074    1   DU_PRINTER_OVERWRITE: PROC (MSG_CODE) ALTRET ;

  17074  9 002675   200060 741300       DU_PRINTER_* STX1  ! LO_FID_LGTH+2,,AUTO

     1959    17075
     1960    17076    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     1961    17077    2      DCL 1 PL   STATIC CALIGNED,
     1962    17078    2            2 CARRIAGE_CONTROL       CHAR (1)  UNAL,
     1963    17079    2            2 TEXT_LINE_             CHAR (%MAX_LGTH) UNAL ;
     1964    17080    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     1965    17081    2      DCL SKIPPED     UBIN WORD ALIGNED ;
     1966    17082    2      DCL LAST_LINE   UBIN WORD ALIGNED ;
     1967    17083    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     1968    17084    2                      BASED (DUP.MSG_V.PTR$) ;
     1969    17085           %FPT_WRITE (FPTN = TO_PRINTER,
     1970    17086                       DCB  = M$LO,
     1971    17087                       VFC  = YES,
     1972    17088                       BUF  = PL) ;
     1973    17119           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:262  
     1974    17120        /* Code */
     1975    17121
     1976    17122           /* Fetch text first to see if it fits on the current page */
     1977    17123    2      CALL DU_FETCH_TEXT (MSG_CODE) ;

  17123  9 002676   200061 236100                    LDQ     @MSG_CODE,,AUTO
         9 002677   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002700   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 002701   000000 011000                    NOP     0

     1978    17124    2      IF DUP.LINE_VFC = %SKIP_WRITE

  17124  9 002702   000026 236000 xsym               LDQ     DUP+22
         9 002703   777000 376003                    ANQ     -512,DU
         9 002704   142000 116003                    CMPQ    50176,DU
         9 002705   002711 601000 9                  TNZ     s:17126

     1979    17125    2      THEN SKIPPED = 1 ;

  17125  9 002706   000001 235007                    LDA     1,DL
         9 002707   200063 755100                    STA     SKIPPED,,AUTO
         9 002710   002712 710000 9                  TRA     s:17127

     1980    17126    2      ELSE SKIPPED = 0 ;

  17126  9 002711   200063 450100                    STZ     SKIPPED,,AUTO

     1981    17127    2      IF DUP.FORCE_NEW_PAGE

  17127  9 002712   000056 234000 xsym               SZN     DUP+46
         9 002713   002734 605000 9                  TPL     s:17134

     1982    17128    3      THEN DO ;

     1983    17129    3              CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;

  17129  9 002714   000147 236000 10                 LDQ     103
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:263  
         9 002715   200067 756100                    STQ     @IFAD_FID_LGTH,,AUTO
         9 002716   003415 701000 9                  TSX1    DU_HEADER_WRITE
         9 002717   003057 702000 9                  TSX2    ERROR

     1984    17130    3              CALL DU_FETCH_TEXT (MSG_CODE) ;

  17130  9 002720   200061 236100                    LDQ     @MSG_CODE,,AUTO
         9 002721   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002722   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 002723   000000 011000                    NOP     0

     1985    17131    3              DUP.BOTTOM_LINE# = DCBADDR (DCBNUM (M$LO)) -> F$DCB.LINES# ;

  17131  9 002724   000000 236007 xsym               LDQ     M$LO,DL
         9 002725   000043 470400 10                 LDP0    35
         9 002726   000000 471500                    LDP1    0,,PR0
         9 002727   100000 473506                    LDP3    0,QL,PR1
         9 002730   300044 236100                    LDQ     36,,PR3
         9 002731   000022 772000                    QRL     18
         9 002732   000031 756000 xsym               STQ     DUP+25

     1986    17132    3           END /* THEN */ ;

  17132  9 002733   002766 710000 9                  TRA     s:17144

     1987    17133    3      ELSE DO ;

     1988    17134    3              LAST_LINE = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;

  17134  9 002734   000030 236000 xsym               LDQ     DUP+24
         9 002735   200063 036100                    ADLQ    SKIPPED,,AUTO
         9 002736   000022 036000 xsym               ADLQ    DUP+18
         9 002737   200064 756100                    STQ     LAST_LINE,,AUTO

     1989    17135    3              IF LAST_LINE > DUP.BOTTOM_LINE# & DUP.BOTTOM_LINE# > 0

  17135  9 002740   400000 220003                    LDX0    -131072,DU
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:264  
         9 002741   000031 116000 xsym               CMPQ    DUP+25
         9 002742   002744 600000 9                  TZE     s:17135+4
         9 002743   002745 603000 9                  TRC     s:17135+5
         9 002744   000000 220003                    LDX0    0,DU
         9 002745   400000 221003                    LDX1    -131072,DU
         9 002746   000031 235000 xsym               LDA     DUP+25
         9 002747   002751 601000 9                  TNZ     s:17135+9
         9 002750   000000 221003                    LDX1    0,DU
         9 002751   000000 636011                    EAQ     0,X1
         9 002752   200130 756100                    STQ     ALT$+2,,AUTO
         9 002753   000000 636010                    EAQ     0,X0
         9 002754   200130 376100                    ANQ     ALT$+2,,AUTO
         9 002755   002766 600000 9                  TZE     s:17144

     1990    17136    4              THEN DO ;

     1991    17137    4                      CALL DU_HEADER_WRITE (DUP.HDR_CODE) ALTRET (ERROR) ;

  17137  9 002756   000147 236000 10                 LDQ     103
         9 002757   200067 756100                    STQ     @IFAD_FID_LGTH,,AUTO
         9 002760   003415 701000 9                  TSX1    DU_HEADER_WRITE
         9 002761   003057 702000 9                  TSX2    ERROR

     1992    17138    4                      CALL DU_FETCH_TEXT (MSG_CODE) ;

  17138  9 002762   200061 236100                    LDQ     @MSG_CODE,,AUTO
         9 002763   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 002764   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 002765   000000 011000                    NOP     0

     1993    17139    4                   END /* THEN */ ;

     1994    17140    3              ELSE /* Text will fit on this page. */ ;
     1995    17141    3           END /* ELSE */ ;

     1996    17142           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:265  
     1997    17143           /* Write text fetched from message data base. */
     1998    17144    2      PL.TEXT_LINE_ = SUBSTR (MSG_B(0), 2, %MAX_LGTH) ;

  17144  9 002766   000025 470400 xsym               LDP0    DUP+21
         9 002767   040000 100500                    MLR     fill='040'O
         9 002770   000000 400156                    ADSC9   0,,PR0                   cn=2,n=110
         9 002771   001676 200156 5                  ADSC9   PL                       cn=1,n=110

     1999    17145    2      PL.CARRIAGE_CONTROL = DUP.LINE_VFC ;

  17145  9 002772   000026 236000 xsym               LDQ     DUP+22
         9 002773   001676 552040 5                  STBQ    PL,'40'O

     2000    17146    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;

  17146  9 002774   001732 630400 5                  EPPR0   TO_PRINTER
         9 002775   440001 713400                    CLIMB   alt,write
         9 002776   401400 401760                    pmme    nvectors=4
         9 002777   003047 702000 9                  TSX2    PRINTER_WRITE_ERROR

     2001    17147    2      PL.CARRIAGE_CONTROL = %OVER_WRITE ;

  17147  9 003000   140000 236003                    LDQ     49152,DU
         9 003001   001676 552040 5                  STBQ    PL,'40'O

     2002    17148    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;

  17148  9 003002   001732 630400 5                  EPPR0   TO_PRINTER
         9 003003   440001 713400                    CLIMB   alt,write
         9 003004   401400 401760                    pmme    nvectors=4
         9 003005   003047 702000 9                  TSX2    PRINTER_WRITE_ERROR

     2003    17149    3      DO LINE_NUMBER = 1 TO DUP.NUM_LINES-1 ;

  17149  9 003006   000001 235007                    LDA     1,DL
         9 003007   200062 755100                    STA     LINE_NUMBER,,AUTO
         9 003010   003036 710000 9                  TRA     s:17155+3
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:266  

     2004    17150    3         PL.TEXT_LINE_ = SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH) ;

  17150  9 003011   200062 236100                    LDQ     LINE_NUMBER,,AUTO
         9 003012   000170 402007                    MPY     120,DL
         9 003013   000025 470400 xsym               LDP0    DUP+21
         9 003014   040000 100506                    MLR     fill='040'O
         9 003015   000000 400156                    ADSC9   0,Q,PR0                  cn=2,n=110
         9 003016   001676 200156 5                  ADSC9   PL                       cn=1,n=110

     2005    17151    3         PL.CARRIAGE_CONTROL = %NEXT_WRITE ;

  17151  9 003017   141000 236003                    LDQ     49664,DU
         9 003020   001676 552040 5                  STBQ    PL,'40'O

     2006    17152    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;

  17152  9 003021   001732 630400 5                  EPPR0   TO_PRINTER
         9 003022   440001 713400                    CLIMB   alt,write
         9 003023   401400 401760                    pmme    nvectors=4
         9 003024   003047 702000 9                  TSX2    PRINTER_WRITE_ERROR

     2007    17153    3         PL.CARRIAGE_CONTROL = %OVER_WRITE ;

  17153  9 003025   140000 236003                    LDQ     49152,DU
         9 003026   001676 552040 5                  STBQ    PL,'40'O

     2008    17154    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINTER_WRITE_ERROR) ;

  17154  9 003027   001732 630400 5                  EPPR0   TO_PRINTER
         9 003030   440001 713400                    CLIMB   alt,write
         9 003031   401400 401760                    pmme    nvectors=4
         9 003032   003047 702000 9                  TSX2    PRINTER_WRITE_ERROR

     2009    17155    3      END /* DO */ ;

  17155  9 003033   200062 235100                    LDA     LINE_NUMBER,,AUTO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:267  
         9 003034   000001 035007                    ADLA    1,DL
         9 003035   200062 755100                    STA     LINE_NUMBER,,AUTO
         9 003036   200062 236100                    LDQ     LINE_NUMBER,,AUTO
         9 003037   000022 116000 xsym               CMPQ    DUP+18
         9 003040   003011 602000 9                  TNC     s:17150

     2010    17156    2      DUP.CURRENT_LINE# = DUP.CURRENT_LINE# + SKIPPED + DUP.NUM_LINES ;

  17156  9 003041   000030 236000 xsym               LDQ     DUP+24
         9 003042   200063 036100                    ADLQ    SKIPPED,,AUTO
         9 003043   000022 036000 xsym               ADLQ    DUP+18
         9 003044   000030 756000 xsym               STQ     DUP+24

     2011    17157    2      RETURN ;

  17157  9 003045   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003046   000001 702211                    TSX2  ! 1,X1

     2012    17158
     2013    17159    2   PRINTER_WRITE_ERROR:
     2014    17160    2      CALL DU_USER_WRITE (%E$DPW_WRITE) ;

  17160  9 003047   000151 236000 10    PRINTER_WRI* LDQ     105
         9 003050   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003051   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003052   000000 011000                    NOP     0

     2015    17161    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  17161  9 003053   000065 236000 10                 LDQ     53
         9 003054   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 003055   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 003056   000000 011000                    NOP     0

     2016    17162    2   ERROR:
     2017    17163    2      ALTRETURN ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:268  
  17163  9 003057   200060 221300       ERROR        LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003060   000000 702211                    TSX2  ! 0,X1

     2018    17164
     2019    17165    2   END DU_PRINTER_OVERWRITE ;
     2020    17166        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:269  
     2021    17167        /*I* NAME:         DU_OPERATOR_WRITE
     2022    17168             AUTHOR:       Kathy Larkin
     2023    17169             PURPOSE:      Send a message to the operator.
     2024    17170             INTERFACE:    DU_OW_SETUP_BUFFER
     2025    17171                           DU_ISSUE_OP_MSG
     2026    17172                           DU_PRINT_OP_REPLY
     2027    17173             PARAMETERS:   None passed.
     2028    17174             DATA:         No external data accessed.
     2029    17175             DESCRIPTION:  The MSG command has been implemented into DEER
     2030    17176                           so  that a DEER  user can send  the operator a
     2031    17177                           message without  exiting DEER.  This procedure
     2032    17178                           sets up a buffer from the parse control blocks
     2033    17179                           and sends the message.  If the message ends in
     2034    17180                           a question mark, it is assumed that a reply is
     2035    17181                           expected,  and this  reply is  printed through
     2036    17182                           M$DO.
     2037    17183        */
     2038    17184        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:270  
     2039    17185    1   DU_OPERATOR_WRITE: PROC (CMD$) ;

  17185  9 003061   200060 741300       DU_OPERATOR* STX1  ! LO_FID_LGTH+2,,AUTO

     2040    17186
     2041    17187    2      DCL CMD$                       PTR ALIGNED ;
     2042    17188        /* BUFFER has been declared in TOU$DU_OPERATOR_WRITE.  The
     2043    17189           declaration is included as commentary here for reference.
     2044    17190
     2045    17191           DCL 1 BUFFER,
     2046    17192                 2 REPLY_PENDING          BIT (1) CALIGNED,
     2047    17193                 2 LGTH                   UBIN BYTE CALIGNED,
     2048    17194                 2 TEXT_                  CHAR (%BUF_RCD_LGTH) CALIGNED,
     2049    17195                 2 TEXT (0:(%BUF_RCD_LGTH - 1)) REDEF TEXT_ CHAR (1) CALIGNED,
     2050    17196                 2 REPLY,
     2051    17197                   3 TYC                  UBIN WORD ALIGNED,
     2052    17198                   3 LGTH                 UBIN WORD ALIGNED ;
     2053    17199        */
     2054    17200
     2055    17201        /* Code */
     2056    17202
     2057    17203    2      CALL DU_OW_SETUP_BUFFER ALTRET (ERROR) ;

  17203  9 003062   003072 701000 9                  TSX1    DU_OW_SETUP_BUFFER
         9 003063   003070 702000 9                  TSX2    ERROR

     2058    17204    2      CALL DU_ISSUE_OP_MSG ALTRET (ERROR) ;

  17204  9 003064   003143 701000 9                  TSX1    DU_ISSUE_OP_MSG
         9 003065   003070 702000 9                  TSX2    ERROR

     2059    17205    2      CALL DU_PRINT_OP_REPLY ;

  17205  9 003066   003214 701000 9                  TSX1    DU_PRINT_OP_REPLY
         9 003067   000000 011000                    NOP     0

     2060    17206
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:271  
     2061    17207    2   ERROR:
     2062    17208    2      RETURN ;

  17208  9 003070   200060 221300       ERROR        LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003071   000001 702211                    TSX2  ! 1,X1

     2063    17209
     2064    17210        /* END DU_OPERATOR_WRITE */
     2065    17211        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:272  
     2066    17212        /*I* NAME:         DU_OW_SETUP_BUFFER
     2067    17213             AUTHOR:       Kathy Larkin
     2068    17214             PURPOSE:      Set up message buffer from user input.
     2069    17215             INTERFACE:    DU_USER_WRITE
     2070    17216             PARAMETERS:   None passed.
     2071    17217             DATA:         CMD$ - input
     2072    17218                           BUFFER - output
     2073    17219             DESCRIPTION:  This procedure sets up the message buffer from
     2074    17220                           the   parse   control   blocks   returned   by
     2075    17221                           XUR$GETCMD  when the MSG  command is issued by
     2076    17222                           the user.  The list of blocks is pointed to by
     2077    17223                           CMD$.   Various  fields  of  BUFFER are set as
     2078    17224                           necessary.
     2079    17225        */
     2080    17226        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:273  
     2081    17227    2   DU_OW_SETUP_BUFFER: PROC ALTRET ;

  17227  9 003072   200062 741300       DU_OW_SETUP* STX1  ! LINE_NUMBER,,AUTO

     2082    17228
     2083    17229    3      DCL OUTBLK$                    PTR ALIGNED ;
     2084    17230           %PARSE$OUT (STCLASS = BASED) ;
     2085    17275           %PARSE$SYM (STCLASS = BASED) ;
     2086    17313
     2087    17314        /* Code */
     2088    17315
     2089    17316    3      OUTBLK$ = CMD$ -> OUT$BLK.SUBLK$(0) ;

  17316  9 003073   200061 470500                    LDP0    @CMD$,,AUTO
         9 003074   000000 471500                    LDP1    0,,PR0
         9 003075   100003 236100                    LDQ     3,,PR1
         9 003076   200063 756100                    STQ     OUTBLK$,,AUTO

     2090    17317    3      IF OUTBLK$ -> OUT$SYM.COUNT <= %BUF_RCD_LGTH

  17317  9 003077   200063 473500                    LDP3    OUTBLK$,,AUTO
         9 003100   300004 236100                    LDQ     4,,PR3
         9 003101   777000 376003                    ANQ     -512,DU
         9 003102   171000 116003                    CMPQ    61952,DU
         9 003103   003135 603000 9                  TRC     s:17328

     2091    17318    4      THEN DO ;

     2092    17319    4              BUFFER.LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

  17319  9 003104   300004 236100                    LDQ     4,,PR3
         9 003105   000011 772000                    QRL     9
         9 003106   200003 552120                    STBQ    BUFFER,'20'O,AUTO

     2093    17320    4              BUFFER.TEXT_ = OUTBLK$ -> OUT$SYM.TEXT ;

  17320  9 003107   300004 236100                    LDQ     4,,PR3
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:274  
         9 003110   000033 772000                    QRL     27
         9 003111   000000 620006                    EAX0    0,QL
         9 003112   040100 100540                    MLR     fill='040'O
         9 003113   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         9 003114   200003 400170                    ADSC9   BUFFER,,AUTO             cn=2,n=120

     2094    17321    4              IF BUFFER.TEXT (BUFFER.LGTH - 1) = '?'

  17321  9 003115   200003 236100                    LDQ     BUFFER,,AUTO
         9 003116   000022 772000                    QRL     18
         9 003117   000777 376007                    ANQ     511,DL
         9 003120   040000 106506                    CMPC    fill='040'O
         9 003121   200003 200001                    ADSC9   BUFFER,Q,AUTO            cn=1,n=1
         9 003122   000152 000001 10                 ADSC9   106                      cn=0,n=1
         9 003123   003127 601000 9                  TNZ     s:17323

     2095    17322    4              THEN BUFFER.REPLY_PENDING = %TRUE ;

  17322  9 003124   400000 236003                    LDQ     -131072,DU
         9 003125   200003 256100                    ORSQ    BUFFER,,AUTO
         9 003126   003131 710000 9                  TRA     s:17324

     2096    17323    4              ELSE BUFFER.REPLY_PENDING = %FALSE ;

  17323  9 003127   000031 236000 xsym               LDQ     B_VECTNIL+25
         9 003130   200003 356100                    ANSQ    BUFFER,,AUTO

     2097    17324    4              BUFFER.REPLY = '0'O ;

  17324  9 003131   000000 235003                    LDA     0,DU
         9 003132   000000 236003                    LDQ     0,DU
         9 003133   200042 757100                    STAQ    BUFFER+31,,AUTO

     2098    17325    4              RETURN ;

  17325  9 003134   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:275  
     2099    17326    4           END /* THEN */ ;
     2100    17327    4      ELSE DO ;

     2101    17328    4              CALL DU_USER_WRITE (%E$DOW_MSG_TOO_LONG) ;

  17328  9 003135   000154 236000 10                 LDQ     108
         9 003136   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003137   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003140   000000 011000                    NOP     0

     2102    17329    4              ALTRETURN ;

  17329  9 003141   200062 221300                    LDX1  ! LINE_NUMBER,,AUTO
         9 003142   000000 702211                    TSX2  ! 0,X1

     2103    17330    4           END /* ELSE */ ;
     2104    17331
     2105    17332    3   END DU_OW_SETUP_BUFFER ;
     2106    17333    2   END DU_OPERATOR_WRITE ;
     2107    17334        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:276  
     2108    17335        /*I* NAME:         DU_ISSUE_OP_MSG
     2109    17336             AUTHOR:       Kathy Larkin
     2110    17337             PURPOSE:      Send message, receive reply.
     2111    17338             INTERFACE:    M$KEYIN
     2112    17339                           DU_USER_WRITE
     2113    17340                           DU_SYSTEM_ERRMSG
     2114    17341             PARAMETERS:   BUFFER - input / output
     2115    17342             DATA:         No external data accessed.
     2116    17343             DESCRIPTION:  This procedure sets up the KEYIN FPT and sends
     2117    17344                           the  message  in  BUFFER.TEXT_ to  the  system
     2118    17345                           operator.   If  a  reply  was requested, it is
     2119    17346                           read into BUFFER.TEXT_.
     2120    17347        */
     2121    17348        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:277  
     2122    17349    1   DU_ISSUE_OP_MSG: PROC ALTRET ;

  17349  9 003143   200064 741300       DU_ISSUE_OP* STX1  ! LAST_LINE,,AUTO

     2123    17350
     2124    17351          %FPT_KEYIN (FPTN = SEND_MSG,
     2125    17352                      OCTYPE = DEVICE) ;
     2126    17371
     2127    17372        /* Code */
     2128    17373
     2129    17374    2      SEND_MSG.MESS_ = VECTOR (SUBSTR (BUFFER.TEXT_, 0, BUFFER.LGTH)) ;

  17374  9 003144   200003 220100                    LDX0    BUFFER,,AUTO
         9 003145   000777 360003                    ANX0    511,DU
         9 003146   000000 635010                    EAA     0,X0
         9 003147   000002 771000                    ARL     2
         9 003150   000140 135007                    SBLA    96,DL
         9 003151   200130 452500                    STP2    ALT$+2,,AUTO
         9 003152   200130 236100                    LDQ     ALT$+2,,AUTO
         9 003153   000155 036000 10                 ADLQ    109
         9 003154   001750 757000 5                  STAQ    SEND_MSG+2

     2130    17375    2      IF BUFFER.REPLY_PENDING

  17375  9 003155   200003 234100                    SZN     BUFFER,,AUTO
         9 003156   003165 605000 9                  TPL     s:17377

     2131    17376    2      THEN SEND_MSG.REPLY_ = VECTOR (BUFFER.TEXT_) ;

  17376  9 003157   000156 235000 10                 LDA     110
         9 003160   200130 452500                    STP2    ALT$+2,,AUTO
         9 003161   200130 236100                    LDQ     ALT$+2,,AUTO
         9 003162   000155 036000 10                 ADLQ    109
         9 003163   001752 757000 5                  STAQ    SEND_MSG+4
         9 003164   003167 710000 9                  TRA     s:17378

     2132    17377    2      ELSE SEND_MSG.REPLY_ = VECTOR (NIL) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:278  

  17377  9 003165   000160 237000 10                 LDAQ    112
         9 003166   001752 757000 5                  STAQ    SEND_MSG+4

     2133    17378    2      SEND_MSG.RESULTS_ = VECTOR (BUFFER.REPLY) ;

  17378  9 003167   000115 235000 10                 LDA     77
         9 003170   200130 452500                    STP2    ALT$+2,,AUTO
         9 003171   200130 236100                    LDQ     ALT$+2,,AUTO
         9 003172   000042 036003                    ADLQ    34,DU
         9 003173   001754 757000 5                  STAQ    SEND_MSG+6

     2134    17379    2      CALL M$KEYIN (SEND_MSG) ALTRET (ERROR) ;

  17379  9 003174   001746 630400 5                  EPPR0   SEND_MSG
         9 003175   520000 713400                    CLIMB   alt,+40960
         9 003176   401400 401760                    pmme    nvectors=4
         9 003177   003202 702000 9                  TSX2    ERROR

     2135    17380    2      RETURN ;

  17380  9 003200   200064 221300                    LDX1  ! LAST_LINE,,AUTO
         9 003201   000001 702211                    TSX2  ! 1,X1

     2136    17381
     2137    17382    2   ERROR:
     2138    17383    2      CALL DU_USER_WRITE (%E$DIOM_MSG) ;

  17383  9 003202   000162 236000 10    ERROR        LDQ     114
         9 003203   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003204   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003205   000000 011000                    NOP     0

     2139    17384    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  17384  9 003206   000065 236000 10                 LDQ     53
         9 003207   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:279  
         9 003210   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 003211   000000 011000                    NOP     0

     2140    17385    2      ALTRETURN ;

  17385  9 003212   200064 221300                    LDX1  ! LAST_LINE,,AUTO
         9 003213   000000 702211                    TSX2  ! 0,X1

     2141    17386
     2142    17387    2   END DU_ISSUE_OP_MSG ;
     2143    17388        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:280  
     2144    17389        /*I* NAME:         DU_PRINT_OP_REPLY
     2145    17390             AUTHOR:       Kathy Larkin
     2146    17391             PURPOSE:      Print the operator's reply.
     2147    17392             INTERFACE:    M$WRITE
     2148    17393             PARAMETERS:   None passed.
     2149    17394             DATA:         No external data accessed.
     2150    17395             DESCRIPTION:  The  operator's  reply  to  the MSG command is
     2151    17396                           printed for the user through M$DO.
     2152    17397        */
     2153    17398
     2154    17399    1   DU_PRINT_OP_REPLY: PROC ALTRET ;

  17399  9 003214   200062 741300       DU_PRINT_OP* STX1  ! LINE_NUMBER,,AUTO

     2155    17400
     2156    17401           %FPT_WRITE (FPTN = MSG_RESP,
     2157    17402                       DCB  = M$DO) ;
     2158    17433
     2159    17434        /* Code */
     2160    17435
     2161    17436    2      IF BUFFER.REPLY_PENDING

  17436  9 003215   200003 234100                    SZN     BUFFER,,AUTO
         9 003216   003232 605000 9                  TPL     s:17442

     2162    17437    3      THEN DO ;

     2163    17438    3              MSG_RESP.BUF_ = VECTOR (SUBSTR (BUFFER.TEXT_, 0, BUFFER.REPLY.LGTH)) ;

  17438  9 003217   200043 235100                    LDA     BUFFER+32,,AUTO
         9 003220   000020 735000                    ALS     16
         9 003221   000140 135007                    SBLA    96,DL
         9 003222   200130 452500                    STP2    ALT$+2,,AUTO
         9 003223   200130 236100                    LDQ     ALT$+2,,AUTO
         9 003224   000155 036000 10                 ADLQ    109
         9 003225   001770 757000 5                  STAQ    MSG_RESP+4

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:281  
     2164    17439    3              CALL M$WRITE (MSG_RESP) ALTRET (ERROR) ;

  17439  9 003226   001764 630400 5                  EPPR0   MSG_RESP
         9 003227   440001 713400                    CLIMB   alt,write
         9 003230   401400 401760                    pmme    nvectors=4
         9 003231   003234 702000 9                  TSX2    ERROR

     2165    17440    3           END /* THEN */ ;

     2166    17441    2      ELSE ;
     2167    17442    2      RETURN ;

  17442  9 003232   200062 221300                    LDX1  ! LINE_NUMBER,,AUTO
         9 003233   000001 702211                    TSX2  ! 1,X1

     2168    17443
     2169    17444    2   ERROR:
     2170    17445    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  17445  9 003234   000065 236000 10    ERROR        LDQ     53
         9 003235   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 003236   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 003237   000000 011000                    NOP     0

     2171    17446    2      ALTRETURN ;

  17446  9 003240   200062 221300                    LDX1  ! LINE_NUMBER,,AUTO
         9 003241   000000 702211                    TSX2  ! 0,X1

     2172    17447
     2173    17448    2   END DU_PRINT_OP_REPLY ;
     2174    17449        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:282  
     2175    17450        /*I* NAME:         DU_OPERATOR_TEXT
     2176    17451             AUTHOR:       Kathy Larkin
     2177    17452             PURPOSE:      Send message text to operator, receive reply.
     2178    17453             INTERFACE:    DU_OT_SETUP_BUFFER
     2179    17454                           DU_FETCH_TEXT
     2180    17455                           DU_ISSUE_OP_MSG
     2181    17456                           DU_OT_STRIP_TRAILING_BLANKS
     2182    17457                           MINIMUM function
     2183    17458             PARAMETERS:   MSG_CODE - input - to fetch message text
     2184    17459             DATA:         BUFFER - output
     2185    17460                           DUP.RESPONSE - output
     2186    17461             DESCRIPTION:  This  procedure prints text  at the operator's
     2187    17462                           console and may receive  a reply.  The text in
     2188    17463                           the message  database associated with MSG_CODE
     2189    17464                           is retrieved by  DU_FETCH_TEXT, and printed by
     2190    17465                           DU_ISSUE_OP_MSG, one line at a time.
     2191    17466        */
     2192    17467        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:283  
     2193    17468    1   DU_OPERATOR_TEXT: PROC (MSG_CODE) ;

  17468  9 003242   200060 741300       DU_OPERATOR* STX1  ! LO_FID_LGTH+2,,AUTO

     2194    17469
     2195    17470    2      DCL MSG_CODE    UBIN WORD ALIGNED ;
     2196    17471    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     2197    17472    2      DCL INDX        SBIN WORD ALIGNED ;
     2198    17473    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     2199    17474    2                      BASED (DUP.MSG_V.PTR$) ;
     2200    17475
     2201    17476        /* Code */
     2202    17477
     2203    17478    2      CALL DU_FETCH_TEXT (MSG_CODE) ;

  17478  9 003243   200061 236100                    LDQ     @MSG_CODE,,AUTO
         9 003244   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 003245   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 003246   000000 011000                    NOP     0

     2204    17479    3      DO LINE_NUMBER = 0 TO DUP.NUM_LINES - 1 ;

  17479  9 003247   200062 450100                    STZ     LINE_NUMBER,,AUTO
         9 003250   003277 710000 9                  TRA     s:17483+3

     2205    17480    3         CALL DU_OT_STRIP_TRAILING_BLANKS (MSG_B (LINE_NUMBER), INDX) ;

  17480  9 003251   200063 630500                    EPPR0   INDX,,AUTO
         9 003252   200066 450500                    STP0    @DF_NO_EXIST,,AUTO
         9 003253   200062 236100                    LDQ     LINE_NUMBER,,AUTO
         9 003254   000036 402003                    MPY     30,DU
         9 003255   000025 036000 xsym               ADLQ    DUP+21
         9 003256   200065 756100                    STQ     @DF_REPORT_ERROR,,AUTO
         9 003257   003317 701000 9                  TSX1    DU_OT_STRIP_TRAILING_BLANKS
         9 003260   000000 011000                    NOP     0

     2206    17481    3         CALL DU_OT_SETUP_BUFFER (LINE_NUMBER, INDX + 1) ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:284  

  17481  9 003261   200063 235100                    LDA     INDX,,AUTO
         9 003262   000001 035007                    ADLA    1,DL
         9 003263   200134 755100                    STA     ALT$+6,,AUTO
         9 003264   200134 630500                    EPPR0   ALT$+6,,AUTO
         9 003265   200066 450500                    STP0    @DF_NO_EXIST,,AUTO
         9 003266   200062 631500                    EPPR1   LINE_NUMBER,,AUTO
         9 003267   200065 451500                    STP1    @DF_REPORT_ERROR,,AUTO
         9 003270   003362 701000 9                  TSX1    DU_OT_SETUP_BUFFER
         9 003271   000000 011000                    NOP     0

     2207    17482    3         CALL DU_ISSUE_OP_MSG ALTRET (END_PROCESS) ;

  17482  9 003272   003143 701000 9                  TSX1    DU_ISSUE_OP_MSG
         9 003273   003315 702000 9                  TSX2    END_PROCESS

     2208    17483    3      END /* DO */ ;

  17483  9 003274   200062 235100                    LDA     LINE_NUMBER,,AUTO
         9 003275   000001 035007                    ADLA    1,DL
         9 003276   200062 755100                    STA     LINE_NUMBER,,AUTO
         9 003277   200062 236100                    LDQ     LINE_NUMBER,,AUTO
         9 003300   000022 116000 xsym               CMPQ    DUP+18
         9 003301   003251 602000 9                  TNC     s:17480

     2209    17484
     2210    17485    2      IF BUFFER.REPLY_PENDING

  17485  9 003302   200003 234100                    SZN     BUFFER,,AUTO
         9 003303   003315 605000 9                  TPL     END_PROCESS

     2211    17486    3      THEN DO ;

     2212    17487    3              DUP.RESPONSE = SUBSTR (BUFFER.TEXT_, 0, 40) ;

  17487  9 003304   040000 100500                    MLR     fill='040'O
         9 003305   200003 400050                    ADSC9   BUFFER,,AUTO             cn=2,n=40
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:285  
         9 003306   000004 000050 xsym               ADSC9   DUP+4                    cn=0,n=40

     2213    17488    3              DUP.RESPONSE_LGTH = MINIMUM (BUFFER.REPLY.LGTH, 40) ;

  17488  9 003307   000050 236007                    LDQ     40,DL
         9 003310   200043 116100                    CMPQ    BUFFER+32,,AUTO
         9 003311   003314 602000 9                  TNC     s:17488+5
         9 003312   003314 600000 9                  TZE     s:17488+5
         9 003313   200043 236100                    LDQ     BUFFER+32,,AUTO
         9 003314   000016 756000 xsym               STQ     DUP+14

     2214    17489    3           END /* THEN */ ;

     2215    17490    2      ELSE ;
     2216    17491    2   END_PROCESS:
     2217    17492    2      RETURN ;

  17492  9 003315   200060 221300       END_PROCESS  LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003316   000001 702211                    TSX2  ! 1,X1

     2218    17493
     2219    17494        /* END DU_OPERATOR_TEXT */
     2220    17495        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:286  
     2221    17496        /*I* NAME:         DU_OT_STRIP_TRAILING_BLANKS
     2222    17497             AUTHOR:       Kathy Larkin
     2223    17498             PURPOSE:      Find the last character in the message.
     2224    17499             INTERFACE:    DU_USER_WRITE
     2225    17500             PARAMETERS:   TEXT_BUF - input - holds message
     2226    17501                           INDX - output - location of last character
     2227    17502             DATA:         No external data accessed.
     2228    17503             DESCRIPTION:  Effectively  strips  off  trailing  blanks  by
     2229    17504                           searching  from  right  to  left for the first
     2230    17505                           non-blank character.
     2231    17506        */
     2232    17507
     2233    17508    2   DU_OT_STRIP_TRAILING_BLANKS: PROC (TEXT_BUF, INDX) ALTRET ;

  17508  9 003317   200064 741300       DU_OT_STRIP* STX1  ! LAST_LINE,,AUTO

     2234    17509
     2235    17510    3      DCL TEXT_BUF    (0:%(BUF_RCD_LGTH-1)) CHAR(1) CALIGNED ;
     2236    17511    3      DCL INDX        SBIN WORD ALIGNED ;
     2237    17512
     2238    17513        /* Code */
     2239    17514
     2240    17515    3      INDX = %BUF_RCD_LGTH - 1 ;

  17515  9 003320   000167 235007                    LDA     119,DL
         9 003321   200066 470500                    LDP0    @INDX,,AUTO
         9 003322   000000 755100                    STA     0,,PR0

     2241    17516    4      DO WHILE (TEXT_BUF (INDX) = ' ') & (INDX >= 0) ;

  17516  9 003323   003327 710000 9                  TRA     s:17518

     2242    17517    4         INDX = INDX - 1 ;

  17517  9 003324   200066 470500                    LDP0    @INDX,,AUTO
         9 003325   000001 336007                    LCQ     1,DL
         9 003326   000000 056100                    ASQ     0,,PR0
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:287  

     2243    17518    4      END /* UNTIL */ ;

  17518  9 003327   000000 235100                    LDA     0,,PR0
         9 003330   400000 220003                    LDX0    -131072,DU
         9 003331   200065 471500                    LDP1    @TEXT_BUF,,AUTO
         9 003332   040000 106505                    CMPC    fill='040'O
         9 003333   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1
         9 003334   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 003335   003337 600000 9                  TZE     s:17518+8
         9 003336   000000 220003                    LDX0    0,DU
         9 003337   400000 221003                    LDX1    -131072,DU
         9 003340   000000 115003                    CMPA    0,DU
         9 003341   003343 605000 9                  TPL     s:17518+12
         9 003342   000000 221003                    LDX1    0,DU
         9 003343   000000 636011                    EAQ     0,X1
         9 003344   200130 756100                    STQ     ALT$+2,,AUTO
         9 003345   000000 636010                    EAQ     0,X0
         9 003346   200130 376100                    ANQ     ALT$+2,,AUTO
         9 003347   003324 601000 9                  TNZ     s:17517

     2244    17519
     2245    17520    3      IF INDX >= 0

  17520  9 003350   000000 235100                    LDA     0,,PR0
         9 003351   003354 604000 9                  TMI     s:17523

     2246    17521    3      THEN RETURN ;

  17521  9 003352   200064 221300                    LDX1  ! LAST_LINE,,AUTO
         9 003353   000001 702211                    TSX2  ! 1,X1

     2247    17522    4      ELSE DO ;

     2248    17523    4              CALL DU_USER_WRITE (%E$DOT_NO_TEXT) ;

  17523  9 003354   000164 236000 10                 LDQ     116
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:288  
         9 003355   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003356   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003357   000000 011000                    NOP     0

     2249    17524    4              ALTRETURN ;

  17524  9 003360   200064 221300                    LDX1  ! LAST_LINE,,AUTO
         9 003361   000000 702211                    TSX2  ! 0,X1

     2250    17525    4           END /* ELSE */ ;
     2251    17526
     2252    17527    3   END DU_OT_STRIP_TRAILING_BLANKS ;
     2253    17528        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:289  
     2254    17529        /*I* NAME:         DU_OT_SETUP_BUFFER
     2255    17530             AUTHOR:       Kathy Larkin
     2256    17531             PURPOSE:      Set up message buffer.
     2257    17532             INTERFACE:    None called.
     2258    17533             PARAMETERS:   LINE_NUMBER - input - MSG_B array index
     2259    17534                           LENGTH - input - length of the message
     2260    17535             DATA:         BUFFER - output
     2261    17536             DESCRIPTION:  This procedure sets up the message buffer with
     2262    17537                           one  line  of  text  from  MSG_B.  If the last
     2263    17538                           character  of the message  is a question mark,
     2264    17539                           BUFFER.REPLY_PENDING is set.
     2265    17540        */
     2266    17541
     2267    17542    2   DU_OT_SETUP_BUFFER: PROC (LINE_NUMBER, LENGTH) ;

  17542  9 003362   200064 741300       DU_OT_SETUP* STX1  ! LAST_LINE,,AUTO

     2268    17543
     2269    17544    3      DCL LINE_NUMBER                UBIN WORD ALIGNED ;
     2270    17545    3      DCL LENGTH                     UBIN WORD ALIGNED ;
     2271    17546
     2272    17547        /* Code */
     2273    17548
     2274    17549    3      BUFFER.LGTH = LENGTH ;

  17549  9 003363   200066 470500                    LDP0    @LENGTH,,AUTO
         9 003364   000000 236100                    LDQ     0,,PR0
         9 003365   000022 736000                    QLS     18
         9 003366   200003 552120                    STBQ    BUFFER,'20'O,AUTO

     2275    17550    3      BUFFER.TEXT_ = MSG_B (LINE_NUMBER) ;

  17550  9 003367   200065 471500                    LDP1    @LINE_NUMBER,,AUTO
         9 003370   100000 235100                    LDA     0,,PR1
         9 003371   000044 733000                    LRS     36
         9 003372   000170 402007                    MPY     120,DL
         9 003373   000025 473400 xsym               LDP3    DUP+21
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:290  
         9 003374   040100 100506                    MLR     fill='040'O
         9 003375   300000 000170                    ADSC9   0,Q,PR3                  cn=0,n=120
         9 003376   200003 400170                    ADSC9   BUFFER,,AUTO             cn=2,n=120

     2276    17551    3      IF BUFFER.TEXT (LENGTH - 1) = '?'

  17551  9 003377   000000 235100                    LDA     0,,PR0
         9 003400   040000 106505                    CMPC    fill='040'O
         9 003401   200003 200001                    ADSC9   BUFFER,A,AUTO            cn=1,n=1
         9 003402   000152 000001 10                 ADSC9   106                      cn=0,n=1
         9 003403   003407 601000 9                  TNZ     s:17553

     2277    17552    3      THEN BUFFER.REPLY_PENDING = %TRUE ;

  17552  9 003404   400000 236003                    LDQ     -131072,DU
         9 003405   200003 256100                    ORSQ    BUFFER,,AUTO
         9 003406   003411 710000 9                  TRA     s:17554

     2278    17553    3      ELSE BUFFER.REPLY_PENDING = %FALSE ;

  17553  9 003407   000031 236000 xsym               LDQ     B_VECTNIL+25
         9 003410   200003 356100                    ANSQ    BUFFER,,AUTO

     2279    17554    3      BUFFER.REPLY = '0'O ;

  17554  9 003411   000000 235003                    LDA     0,DU
         9 003412   000000 236003                    LDQ     0,DU
         9 003413   200042 757100                    STAQ    BUFFER+31,,AUTO

     2280    17555    3      RETURN ;

  17555  9 003414   000001 702211                    TSX2  ! 1,X1

     2281    17556
     2282    17557    3   END DU_OT_SETUP_BUFFER ;
     2283    17558    2   END DU_OPERATOR_TEXT ;
     2284    17559        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:291  
     2285    17560        /*I*  NAME:        DU_HEADER_WRITE
     2286    17561              AUTHOR:      Scott S. Sheppard
     2287    17562              PURPOSE:     Prints LP Headers
     2288    17563              INTERFACE:   M$WRITE Monitor Service
     2289    17564                           DU_FETCH_TEXT
     2290    17565                           DU_USER_WRITE
     2291    17566                           DU_SYSTEM_ERRMSG
     2292    17567              INPUT:       HDR_CODE - Integer header number
     2293    17568                           DUP.MSG_V - vector to message buffer
     2294    17569                           DUP.NUM_LINES  - number of lines in header
     2295    17570              OUTPUT:      DUP.CURRENT_PAGE#  - Current page incremented by 1
     2296    17571                           DUP.CURRENT_LINE#  - set to number of header lines
     2297    17572              DESCRIPTION: This procedure writes text to the M$LO dcb as
     2298    17573                           header lines for the tops of the listing pages.
     2299    17574        */
     2300    17575
     2301    17576    1   DU_HEADER_WRITE: PROC (HDR_CODE) ALTRET ;

  17576  9 003415   200066 741300       DU_HEADER_W* STX1  ! @LENGTH,,AUTO

     2302    17577
     2303    17578    2      DCL HDR_CODE    UBIN WORD ALIGNED ;
     2304    17579    2      DCL 1 HL        STATIC CALIGNED,
     2305    17580    2            2 CARRIAGE_CONTROL       CHAR (1)  UNAL,
     2306    17581    2            2 TEXT_LINE_             CHAR (%MAX_LGTH) UNAL ;
     2307    17582    2      DCL LINE_NUMBER UBIN WORD ALIGNED ;
     2308    17583    2      DCL MSG_B       (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     2309    17584    2                      BASED (DUP.MSG_V.PTR$) ;
     2310    17585           %FPT_WRITE (FPTN = TO_PRINTER,
     2311    17586                       DCB  = M$LO,
     2312    17587                       VFC  = YES,
     2313    17588                       BUF  = HL) ;
     2314    17619           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:292  
     2315    17620        /* Code */
     2316    17621
     2317    17622    2      DUP.CURRENT_PAGE# = DUP.CURRENT_PAGE# + 1 ;

  17622  9 003416   000027 235000 xsym               LDA     DUP+23
         9 003417   000001 035007                    ADLA    1,DL
         9 003420   000027 755000 xsym               STA     DUP+23

     2318    17623    2      CALL DU_FETCH_TEXT (HDR_CODE) ;

  17623  9 003421   200067 236100                    LDQ     @HDR_CODE,,AUTO
         9 003422   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 003423   003503 701000 9                  TSX1    DU_FETCH_TEXT
         9 003424   000000 011000                    NOP     0

     2319    17624
     2320    17625    2      HL.CARRIAGE_CONTROL = %TOP_WRITE ;

  17625  9 003425   160000 236003                    LDQ     57344,DU
         9 003426   002000 552040 5                  STBQ    HL,'40'O

     2321    17626    2      HL.TEXT_LINE_ = SUBSTR (MSG_B(0), 2, %MAX_LGTH) ;

  17626  9 003427   000025 470400 xsym               LDP0    DUP+21
         9 003430   040000 100500                    MLR     fill='040'O
         9 003431   000000 400156                    ADSC9   0,,PR0                   cn=2,n=110
         9 003432   002000 200156 5                  ADSC9   HL                       cn=1,n=110

     2322    17627    2      CALL M$WRITE (TO_PRINTER) ALTRET (PRINT_HEADER_ERROR) ;

  17627  9 003433   002034 630400 5                  EPPR0   TO_PRINTER
         9 003434   440001 713400                    CLIMB   alt,write
         9 003435   401400 401760                    pmme    nvectors=4
         9 003436   003471 702000 9                  TSX2    PRINT_HEADER_ERROR

     2323    17628
     2324    17629    2      HL.CARRIAGE_CONTROL = %NEXT_WRITE ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:293  

  17629  9 003437   141000 236003                    LDQ     49664,DU
         9 003440   002000 552040 5                  STBQ    HL,'40'O

     2325    17630    3      DO LINE_NUMBER = 1 TO DUP.NUM_LINES-1 ;

  17630  9 003441   000001 235007                    LDA     1,DL
         9 003442   200070 755100                    STA     LINE_NUMBER,,AUTO
         9 003443   003461 710000 9                  TRA     s:17633+3

     2326    17631    3         HL.TEXT_LINE_ = SUBSTR (MSG_B(LINE_NUMBER), 2, %MAX_LGTH) ;

  17631  9 003444   200070 236100                    LDQ     LINE_NUMBER,,AUTO
         9 003445   000170 402007                    MPY     120,DL
         9 003446   000025 470400 xsym               LDP0    DUP+21
         9 003447   040000 100506                    MLR     fill='040'O
         9 003450   000000 400156                    ADSC9   0,Q,PR0                  cn=2,n=110
         9 003451   002000 200156 5                  ADSC9   HL                       cn=1,n=110

     2327    17632    3         CALL M$WRITE (TO_PRINTER) ALTRET (PRINT_HEADER_ERROR) ;

  17632  9 003452   002034 630400 5                  EPPR0   TO_PRINTER
         9 003453   440001 713400                    CLIMB   alt,write
         9 003454   401400 401760                    pmme    nvectors=4
         9 003455   003471 702000 9                  TSX2    PRINT_HEADER_ERROR

     2328    17633    3      END /* DO */ ;

  17633  9 003456   200070 235100                    LDA     LINE_NUMBER,,AUTO
         9 003457   000001 035007                    ADLA    1,DL
         9 003460   200070 755100                    STA     LINE_NUMBER,,AUTO
         9 003461   200070 236100                    LDQ     LINE_NUMBER,,AUTO
         9 003462   000022 116000 xsym               CMPQ    DUP+18
         9 003463   003444 602000 9                  TNC     s:17631

     2329    17634
     2330    17635    2      DUP.CURRENT_LINE# = DUP.NUM_LINES ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:294  

  17635  9 003464   000022 235000 xsym               LDA     DUP+18
         9 003465   000030 755000 xsym               STA     DUP+24

     2331    17636    2      DUP.FORCE_NEW_PAGE = %FALSE ;

  17636  9 003466   000056 450000 xsym               STZ     DUP+46

     2332    17637    2      RETURN ;

  17637  9 003467   200066 221300                    LDX1  ! @LENGTH,,AUTO
         9 003470   000001 702211                    TSX2  ! 1,X1

     2333    17638
     2334    17639    2   PRINT_HEADER_ERROR:
     2335    17640    2      CALL DU_USER_WRITE (%E$DHW_WRITE) ;

  17640  9 003471   000166 236000 10    PRINT_HEADE* LDQ     118
         9 003472   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003473   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003474   000000 011000                    NOP     0

     2336    17641    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  17641  9 003475   000065 236000 10                 LDQ     53
         9 003476   200125 756100                    STQ     LINE_NUMBER+3,,AUTO
         9 003477   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 003500   000000 011000                    NOP     0

     2337    17642    2      ALTRETURN ;

  17642  9 003501   200066 221300                    LDX1  ! @LENGTH,,AUTO
         9 003502   000000 702211                    TSX2  ! 0,X1

     2338    17643
     2339    17644    2   END DU_HEADER_WRITE ;
     2340    17645        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:295  
     2341    17646        /*I*  NAME:        DU_FETCH_TEXT
     2342    17647              AUTHOR:      Scott S. Sheppard
     2343    17648              PURPOSE:     Fetches Text From Message Data Base
     2344    17649              INTERFACE:   M$ERRMSG     TOU$REPLACE
     2345    17650              INPUT:       MSG_CODE - Integer message number
     2346    17651              OUTPUT:      MSG_B      - array of records to print
     2347    17652                           DUP.NUM_LINES  - number of lines in the buffer
     2348    17653              DESCRIPTION: This procedure reads text messages from the DEER
     2349    17654                           message data base.    The read is based on a key
     2350    17655                           TOU-999, where 999 is a valid integer.  The text
     2351    17656                           returned is stored in the DUP message buffer.
     2352    17657        */
     2353    17658
     2354    17659    1   DU_FETCH_TEXT: PROC (MSG_CODE) ;

  17659  9 003503   200124 741300       DU_FETCH_TE* STX1  ! LINE_NUMBER+2,,AUTO

     2355    17660
     2356    17661    2      DCL MSG_CODE UBIN WORD ALIGNED ;
     2357    17662    2      DCL MSG_B    (0:%(MAX_BUF - 1)) CHAR (%BUF_RCD_LGTH) CALIGNED
     2358    17663    2                   BASED (DUP.MSG_V.PTR$) ;
     2359    17664    2      DCL MSG_B_   CHAR (%(BUF_RCD_LGTH * MAX_BUF)) CALIGNED
     2360    17665    2                   BASED (DUP.MSG_V.PTR$) ;
     2361    17666           %FPT_ERRMSG (FPTN     = MESSAGE_FETCH,
     2362    17667                        CODE     = MESSAGE_CODE,
     2363    17668                        FILEACCT = MSG_ACCT,
     2364    17669                        FILENAME = MSG_NAME,
     2365    17670                        INCLCODE = NO,
     2366    17671                        RESULTS  = FETCH_STATS) ;
     2367    17698           %VLP_ERRCODE (FPTN = MESSAGE_CODE,
     2368    17699                         FCG  = 'TO',
     2369    17700                         MID  = 'U',
     2370    17701                         SEV  = 0) ;
     2371    17746           %VLP_NAME (FPTN = MSG_NAME,
     2372    17747                      NAME = %MSG_DB_NAME,
     2373    17748                      LEN  = 31) ;
     2374    17775           %VLP_ACCT (FPTN = MSG_ACCT,
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:296  
     2375    17776                      ACCT = %MSG_DB_ACCT) ;
     2376    17789           %VLR_ERRMSG (FPTN = FETCH_STATS) ;
     2377    17811           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:297  
     2378    17812        /* Code */
     2379    17813
     2380    17814    2      MESSAGE_FETCH.BUF_ = DUP.MSG_V ;

  17814  9 003504   000024 237000 xsym               LDAQ    DUP+20
         9 003505   002054 757000 5                  STAQ    MESSAGE_FETCH+4

     2381    17815    2      MESSAGE_CODE.ERR# = MSG_CODE ;

  17815  9 003506   200125 470500                    LDP0    @MSG_CODE,,AUTO
         9 003507   000000 236100                    LDQ     0,,PR0
         9 003510   000003 736000                    QLS     3
         9 003511   002102 676000 5                  ERQ     MESSAGE_CODE
         9 003512   377770 376007                    ANQ     131064,DL
         9 003513   002102 656000 5                  ERSQ    MESSAGE_CODE

     2382    17816    2      CALL M$ERRMSG (MESSAGE_FETCH) ALTRET (BAD_MESSAGE_FETCH) ;

  17816  9 003514   002050 630400 5                  EPPR0   MESSAGE_FETCH
         9 003515   420000 713400                    CLIMB   alt,+8192
         9 003516   405000 401760                    pmme    nvectors=11
         9 003517   003534 702000 9                  TSX2    BAD_MESSAGE_FETCH

     2383    17817    2      DUP.NUM_LINES = FETCH_STATS.RECCNT ;

  17817  9 003520   002116 236000 5                  LDQ     FETCH_STATS
         9 003521   000777 376007                    ANQ     511,DL
         9 003522   000022 756000 xsym               STQ     DUP+18

     2384    17818    2      CALL TOU$REPLACE (MSG_B_, %(BUF_RCD_LGTH * MAX_BUF)) ;

  17818  9 003523   000170 236000 10                 LDQ     120
         9 003524   000025 235000 xsym               LDA     DUP+21
         9 003525   200130 757100                    STAQ    ALT$+2,,AUTO
         9 003526   200130 630500                    EPPR0   ALT$+2,,AUTO
         9 003527   000020 631400 xsym               EPPR1   B_VECTNIL+16
         9 003530   000000 701000 xent               TSX1    TOU$REPLACE
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:298  
         9 003531   000000 011000                    NOP     0

     2385    17819    2      RETURN ;

  17819  9 003532   200124 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 003533   000001 702211                    TSX2  ! 1,X1

     2386    17820
     2387    17821    2   BAD_MESSAGE_FETCH:
     2388    17822    2      MSG_B(0) = '  Attempt to fetch the message TEXT failed miserably.' ;

  17822  9 003534   000025 470400 xsym  BAD_MESSAGE* LDP0    DUP+21
         9 003535   040100 100400                    MLR     fill='040'O
         9 003536   000015 000065 8                  ADSC9   THREE_QUESTION_MARKS+12  cn=0,n=53
         9 003537   000000 000170                    ADSC9   0,,PR0                   cn=0,n=120

     2389    17823    2      MSG_B(1) = '  Problem related to file :ERRMSG.:SYS' ;

  17823  9 003540   000025 470400 xsym               LDP0    DUP+21
         9 003541   040100 100400                    MLR     fill='040'O
         9 003542   000033 000046 8                  ADSC9   THREE_QUESTION_MARKS+26  cn=0,n=38
         9 003543   000036 000170                    ADSC9   30,,PR0                  cn=0,n=120

     2390    17824    2      DUP.NUM_LINES = 3 ;

  17824  9 003544   000003 235007                    LDA     3,DL
         9 003545   000022 755000 xsym               STA     DUP+18

     2391    17825
     2392    17826    2      IF FETCH_STATS.NOFILE

  17826  9 003546   002116 236000 5                  LDQ     FETCH_STATS
         9 003547   200000 316003                    CANQ    65536,DU
         9 003550   003555 600000 9                  TZE     s:17828

     2393    17827    2      THEN MSG_B(2) = '  Unable to open message file.' ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:299  
  17827  9 003551   040100 100400                    MLR     fill='040'O
         9 003552   000045 000036 8                  ADSC9   THREE_QUESTION_MARKS+36  cn=0,n=30
         9 003553   000074 000170                    ADSC9   60,,PR0                  cn=0,n=120
         9 003554   003601 710000 9                  TRA     s:17835

     2394    17828    2      ELSE IF FETCH_STATS.NOMSG

  17828  9 003555   100000 316003                    CANQ    32768,DU
         9 003556   003563 600000 9                  TZE     s:17830

     2395    17829    2         THEN MSG_B(2) = '  No message found for code.' ;

  17829  9 003557   040100 100400                    MLR     fill='040'O
         9 003560   000055 000034 8                  ADSC9   THREE_QUESTION_MARKS+44  cn=0,n=28
         9 003561   000074 000170                    ADSC9   60,,PR0                  cn=0,n=120
         9 003562   003601 710000 9                  TRA     s:17835

     2396    17830    2         ELSE IF FETCH_STATS.BUFERR

  17830  9 003563   002116 430000 5                  FSZN    FETCH_STATS
         9 003564   003571 605000 9                  TPL     s:17832

     2397    17831    2            THEN MSG_B(2) = '  Message buffer not there or bad.' ;

  17831  9 003565   040100 100400                    MLR     fill='040'O
         9 003566   000064 000042 8                  ADSC9   THREE_QUESTION_MARKS+51  cn=0,n=34
         9 003567   000074 000170                    ADSC9   60,,PR0                  cn=0,n=120
         9 003570   003601 710000 9                  TRA     s:17835

     2398    17832    2            ELSE IF FETCH_STATS.BADCALL

  17832  9 003571   002116 234000 5                  SZN     FETCH_STATS
         9 003572   003577 605000 9                  TPL     s:17834

     2399    17833    2               THEN MSG_B(2) = '  Call had bad parameter(s).' ;

  17833  9 003573   040100 100400                    MLR     fill='040'O
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:300  
         9 003574   000075 000034 8                  ADSC9   THREE_QUESTION_MARKS+60  cn=0,n=28
         9 003575   000074 000170                    ADSC9   60,,PR0                  cn=0,n=120
         9 003576   003601 710000 9                  TRA     s:17835

     2400    17834    2               ELSE DUP.NUM_LINES = 2 ;

  17834  9 003577   000002 235007                    LDA     2,DL
         9 003600   000022 755000 xsym               STA     DUP+18

     2401    17835    2      RETURN ;

  17835  9 003601   200124 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 003602   000001 702211                    TSX2  ! 1,X1

     2402    17836
     2403    17837    2   END DU_FETCH_TEXT ;
     2404    17838        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:301  
     2405    17839        /*I*  NAME:        DU_SYSTEM_ERRMSG
     2406    17840              AUTHOR:      Scott S. Sheppard
     2407    17841              PURPOSE:     Prints Sytem Error Message to M$DO and M$LO
     2408    17842              INTERFACE:   M$ERRMSG Monitor Service
     2409    17843              INPUT:       FAULT_ERROR- fault error flag
     2410    17844                           B$TCB$     - pointer to task control block
     2411    17845                           B$TCB.ALT$ - pointer to exceptional condition frame
     2412    17846                           B$TCB.STK$ - pointer to procedure stack
     2413    17847                           B$ALT.ERR  - standard format error code
     2414    17848                           DUP.MSG_V  - vector to the message output buffer
     2415    17849              OUTPUT:      Message written to M$DO and M$LO
     2416    17850              DESCRIPTION: This procedure fetches an error code from the exceptional
     2417    17851                           and calls M$ERRMSG to display an error message.   If  the
     2418    17852                           fault error bit is set, the error is a fault.
     2419    17853        */
     2420    17854        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:302  
     2421    17855    1   DU_SYSTEM_ERRMSG: PROC (FAULT_ERROR) ;

  17855  9 003603   200124 741300       DU_SYSTEM_E* STX1  ! LINE_NUMBER+2,,AUTO

     2422    17856
     2423    17857    2      DCL FAULT_ERROR       BIT (1) CALIGNED ;
     2424    17858    2      DCL ALT$        PTR ALIGNED;
     2425    17859           %FPT_ERRMSG (FPTN     = SYSTEM_ERRMSG,
     2426    17860                        CODE     = ERROR_CODE,
     2427    17861                        FLAGLEV  = 4,
     2428    17862                        INCLCODE = YES,
     2429    17863                        OUTDCB1  = M$DO,
     2430    17864                        SOURCE   = PASS) ;
     2431    17891           %VLP_ERRCODE (FPTN = ERROR_CODE) ;
     2432    17936
     2433    17937        /* Code */
     2434    17938
     2435    17939    2      SYSTEM_ERRMSG.BUF_ = DUP.MSG_V ;

  17939  9 003604   000024 237000 xsym               LDAQ    DUP+20
         9 003605   002126 757000 5                  STAQ    SYSTEM_ERRMSG+4

     2436    17940    2      IF FAULT_ERROR

  17940  9 003606   200125 470500                    LDP0    @FAULT_ERROR,,AUTO
         9 003607   000000 066500                    CMPB    filb='0'B
         9 003610   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         9 003611   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 003612   003617 600000 9                  TZE     s:17942

     2437    17941    2      THEN ALT$ = B$TCB$ -> B$TCB.STK$ ;

  17941  9 003613   000000 471400 xsym               LDP1    B$TCB$
         9 003614   100001 236100                    LDQ     1,,PR1
         9 003615   200126 756100                    STQ     ALT$,,AUTO
         9 003616   003622 710000 9                  TRA     s:17943

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:303  
     2438    17942    2      ELSE ALT$ = B$TCB$ -> B$TCB.ALT$ ;

  17942  9 003617   000000 471400 xsym               LDP1    B$TCB$
         9 003620   100000 236100                    LDQ     0,,PR1
         9 003621   200126 756100                    STQ     ALT$,,AUTO

     2439    17943    2      ERROR_CODE = ALT$ -> B$ALT.ERR;

  17943  9 003622   200126 473500                    LDP3    ALT$,,AUTO
         9 003623   300102 236100                    LDQ     66,,PR3
         9 003624   002154 756000 5                  STQ     ERROR_CODE

     2440    17944    2      SYSTEM_ERRMSG.V.DCB# = ALT$ -> B$ALT.DCB#;

  17944  9 003625   300101 720100                    LXL0    65,,PR3
         9 003626   002150 740000 5                  STX0    SYSTEM_ERRMSG+22

     2441    17945    2      SYSTEM_ERRMSG.V.FLAGLEV# = ERROR_CODE.SEV ;

  17945  9 003627   000007 376007                    ANQ     7,DL
         9 003630   000011 736000                    QLS     9
         9 003631   002151 552010 5                  STBQ    SYSTEM_ERRMSG+23,'10'O

     2442    17946    2      CALL M$ERRMSG (SYSTEM_ERRMSG) ;

  17946  9 003632   002122 630400 5                  EPPR0   SYSTEM_ERRMSG
         9 003633   020000 713400                    CLIMB   8192
         9 003634   405000 401760                    pmme    nvectors=11

     2443    17947    2      RETURN ;

  17947  9 003635   200124 221300                    LDX1  ! LINE_NUMBER+2,,AUTO
         9 003636   000001 702211                    TSX2  ! 1,X1

     2444    17948
     2445    17949    2   END DU_SYSTEM_ERRMSG ;
     2446    17950        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:304  
     2447    17951        /*I*  NAME:        DU_SET_EDIT_PROMPT
     2448    17952              AUTHOR:      Scott S. Sheppard
     2449    17953              PURPOSE:     Sets Prompt for Deckfile Editor
     2450    17954              INTERFACE:   M$PROMPT Monitor Service
     2451    17955              INPUT:       BATCH_RUN - Batch Execution Flag
     2452    17956              OUTPUT:      Prompt changed to '???'
     2453    17957              DESCRIPTION: This procedure sets the prompt for M$READS to
     2454    17958                           to '???' for on-line execution of the editor.
     2455    17959                           The '???' is the recognized prompt for TOLTS.
     2456    17960        */
     2457    17961
     2458    17962    1   DU_SET_EDIT_PROMPT: PROC (BATCH_RUN) ALTRET ;

  17962  9 003637   200060 741300       DU_SET_EDIT* STX1  ! LO_FID_LGTH+2,,AUTO

     2459    17963
     2460    17964    2      DCL BATCH_RUN                  BIT (1) CALIGNED ;
     2461    17965    2      DCL THREE_QUESTION_MARKS       CHAR (3) CONSTANT INIT ('???') ;
     2462    17966           %FPT_PROMPT (FPTN    = ON_LINE,
     2463    17967                        PROMPT  = THREE_QUESTION_MARKS) ;
     2464    17995
     2465    17996        /* Code */
     2466    17997
     2467    17998    2      IF BATCH_RUN

  17998  9 003640   200061 470500                    LDP0    @BATCH_RUN,,AUTO
         9 003641   000000 066500                    CMPB    filb='0'B
         9 003642   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         9 003643   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 003644   003651 601000 9                  TNZ     s:18001

     2468    17999    2      THEN /* Do not adjust the prompt. */ ;
     2469    18000    2      ELSE CALL M$PROMPT (ON_LINE) ALTRET (PROMPT_ERROR) ;

  18000  9 003645   002156 630400 5                  EPPR0   ON_LINE
         9 003646   560002 713400                    CLIMB   alt,+57346
         9 003647   401000 401760                    pmme    nvectors=3
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:305  
         9 003650   003653 702000 9                  TSX2    PROMPT_ERROR

     2470    18001    2      RETURN ;

  18001  9 003651   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003652   000001 702211                    TSX2  ! 1,X1

     2471    18002
     2472    18003    2   PROMPT_ERROR:
     2473    18004    2      CALL DU_USER_WRITE (%E$DSEP_PROMPT) ;

  18004  9 003653   000172 236000 10    PROMPT_ERROR LDQ     122
         9 003654   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003655   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003656   000000 011000                    NOP     0

     2474    18005    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  18005  9 003657   000065 236000 10                 LDQ     53
         9 003660   200125 756100                    STQ     @FAULT_ERROR,,AUTO
         9 003661   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 003662   000000 011000                    NOP     0

     2475    18006    2      ALTRETURN ;

  18006  9 003663   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003664   000000 702211                    TSX2  ! 0,X1

     2476    18007
     2477    18008    2   END DU_SET_EDIT_PROMPT ;
     2478    18009        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:306  
     2479    18010        /*I*  NAME:        DU_SET_PROMPT
     2480    18011              AUTHOR:      Scott S. Sheppard
     2481    18012              PURPOSE:     Sets Prompt for Deckfile Editor
     2482    18013              INTERFACE:   M$PROMPT Monitor Service
     2483    18014                           DU_USER_WRITE
     2484    18015                           DU_SYSTEM_ERRMSG
     2485    18016              INPUT:       PROMPT_BUFFER - desired prompt message
     2486    18017                           LGTH          - number of characters in prompt
     2487    18018              OUTPUT:      Prompt changed to PROMPT_BUFFER
     2488    18019              DESCRIPTION: This procedure sets the prompt for M$READS
     2489    18020                           to any value specified.  The desired value
     2490    18021                           is placed in the DUP holding area, and the
     2491    18022                           length of the  prompt is set to  DUP  hold
     2492    18023                           area length.  The hold area and its length
     2493    18024                           are passed to this procedure. This is done
     2494    18025                           only in on-line mode because adjusting the
     2495    18026                           prompt in batch mode results in  an  error
     2496    18027                           since the M$SI dcb is not ORG=TERMINAL for
     2497    18028                           batch mode.
     2498    18029        */
     2499    18030        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:307  
     2500    18031    1   DU_SET_PROMPT: PROC (BATCH_RUN, PROMPT_BUFFER, LGTH) ALTRET ;

  18031  9 003665   200060 741300       DU_SET_PROM* STX1  ! LO_FID_LGTH+2,,AUTO

     2501    18032
     2502    18033    2      DCL BATCH_RUN                  BIT (1) CALIGNED ;
     2503    18034    2      DCL PROMPT_BUFFER              CHAR (%MAX_LGTH) CALIGNED ;
     2504    18035    2      DCL LGTH                       UBIN WORD ALIGNED ;
     2505    18036    2      DCL SET_PROMPT_ITEM            CHAR (%MAX_LGTH) CALIGNED ;
     2506    18037           %FPT_PROMPT (FPTN = SET_PROMPT) ;
     2507    18065
     2508    18066        /* Code */
     2509    18067
     2510    18068    2      IF BATCH_RUN

  18068  9 003666   200061 470500                    LDP0    @BATCH_RUN,,AUTO
         9 003667   000000 066500                    CMPB    filb='0'B
         9 003670   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         9 003671   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         9 003672   003714 601000 9                  TNZ     s:18075

     2511    18069    2      THEN /* Do not adjust the prompt. */ ;
     2512    18070    3      ELSE DO ;

     2513    18071    3              SET_PROMPT_ITEM = PROMPT_BUFFER ;

  18071  9 003673   200062 471500                    LDP1    @PROMPT_BUFFER,,AUTO
         9 003674   040100 100500                    MLR     fill='040'O
         9 003675   100000 000156                    ADSC9   0,,PR1                   cn=0,n=110
         9 003676   200064 000156                    ADSC9   SET_PROMPT_ITEM,,AUTO    cn=0,n=110

     2514    18072    3              SET_PROMPT.PROMPT_ = VECTOR (SUBSTR (SET_PROMPT_ITEM, 0, LGTH)) ;

  18072  9 003677   200063 473500                    LDP3    @LGTH,,AUTO
         9 003700   300000 720100                    LXL0    0,,PR3
         9 003701   000000 635010                    EAA     0,X0
         9 003702   000002 771000                    ARL     2
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:308  
         9 003703   000140 135007                    SBLA    96,DL
         9 003704   200130 452500                    STP2    ALT$+2,,AUTO
         9 003705   200130 236100                    LDQ     ALT$+2,,AUTO
         9 003706   000064 036003                    ADLQ    52,DU
         9 003707   002174 757000 5                  STAQ    SET_PROMPT+4

     2515    18073    3              CALL M$PROMPT (SET_PROMPT) ALTRET (PROMPT_ERROR) ;

  18073  9 003710   002170 630400 5                  EPPR0   SET_PROMPT
         9 003711   560002 713400                    CLIMB   alt,+57346
         9 003712   401000 401760                    pmme    nvectors=3
         9 003713   003716 702000 9                  TSX2    PROMPT_ERROR

     2516    18074    3           END /* ELSE */ ;

     2517    18075    2      RETURN ;

  18075  9 003714   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003715   000001 702211                    TSX2  ! 1,X1

     2518    18076
     2519    18077    2   PROMPT_ERROR:
     2520    18078    2      CALL DU_USER_WRITE (%E$DSP_PROMPT) ;

  18078  9 003716   000174 236000 10    PROMPT_ERROR LDQ     124
         9 003717   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003720   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003721   000000 011000                    NOP     0

     2521    18079    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  18079  9 003722   000065 236000 10                 LDQ     53
         9 003723   200125 756100                    STQ     @FAULT_ERROR,,AUTO
         9 003724   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 003725   000000 011000                    NOP     0

     2522    18080    2      ALTRETURN ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:309  

  18080  9 003726   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003727   000000 702211                    TSX2  ! 0,X1

     2523    18081
     2524    18082    2   END DU_SET_PROMPT ;
     2525    18083        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:310  
     2526    18084        /*I*  NAME:        DU_GET_DATA_SEGMENT
     2527    18085              AUTHOR:      Scott S. Sheppard
     2528    18086              PURPOSE:     Gets Dynamic Memory Space
     2529    18087              INTERFACE:   M$GDS Monitor Service
     2530    18088                           DU_USER_WRITE
     2531    18089                           DU_SYSTEM_ERRMSG
     2532    18090              INPUT:       WORD_COUNT   - number of words needed by DEER
     2533    18091              OUTPUT:      WORD_VECTOR  - vector to the set of words
     2534    18092              DESCRIPTION: This procedure gets a set of dynamic words to be
     2535    18093                           used as data area for DEER.
     2536    18094        */
     2537    18095
     2538    18096    1   DU_GET_DATA_SEGMENT: PROC (WORD_COUNT, WORD_VECTOR) ALTRET ;

  18096  9 003730   200060 741300       DU_GET_DATA* STX1  ! LO_FID_LGTH+2,,AUTO

     2539    18097
     2540    18098    2      DCL WORD_COUNT     UBIN HALF HALIGNED ;
     2541    18099    2      DCL WORD_VECTOR    BIT (72) DALIGNED ;
     2542    18100           %FPT_GDS (FPTN    = GET_BUFFER,
     2543    18101                     FREE    = YES) ;
     2544    18117
     2545    18118        /* Code */
     2546    18119
     2547    18120    2      GET_BUFFER.V.SEGSIZE# = WORD_COUNT ;

  18120  9 003731   200061 470500                    LDP0    @WORD_COUNT,,AUTO
         9 003732   000000 100500                    MLR     fill='000'O
         9 003733   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         9 003734   002206 400002 5                  ADSC9   GET_BUFFER+4             cn=2,n=2

     2548    18121    2      GET_BUFFER.RESULTS_ = VECTOR (WORD_VECTOR) ;

  18121  9 003735   000115 235000 10                 LDA     77
         9 003736   200062 236100                    LDQ     @WORD_VECTOR,,AUTO
         9 003737   002204 757000 5                  STAQ    GET_BUFFER+2

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:311  
     2549    18122    2      CALL M$GDS (GET_BUFFER) ALTRET (GET_ERROR) ;

  18122  9 003740   002202 630400 5                  EPPR0   GET_BUFFER
         9 003741   430001 713400                    CLIMB   alt,gds
         9 003742   400400 401760                    pmme    nvectors=2
         9 003743   003746 702000 9                  TSX2    GET_ERROR

     2550    18123    2      RETURN ;

  18123  9 003744   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003745   000001 702211                    TSX2  ! 1,X1

     2551    18124
     2552    18125    2   GET_ERROR:
     2553    18126    2      CALL DU_USER_WRITE (%E$DGDS_GDS) ;

  18126  9 003746   000176 236000 10    GET_ERROR    LDQ     126
         9 003747   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 003750   002464 701000 9                  TSX1    DU_USER_WRITE
         9 003751   000000 011000                    NOP     0

     2554    18127    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  18127  9 003752   000065 236000 10                 LDQ     53
         9 003753   200125 756100                    STQ     @FAULT_ERROR,,AUTO
         9 003754   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 003755   000000 011000                    NOP     0

     2555    18128    2      ALTRETURN ;

  18128  9 003756   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003757   000000 702211                    TSX2  ! 0,X1

     2556    18129
     2557    18130    2   END DU_GET_DATA_SEGMENT ;
     2558    18131        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:312  
     2559    18132        /*I*  NAME:        DU_FREE_DATA_SEGMENT
     2560    18133              AUTHOR:      Scott S. Sheppard
     2561    18134              PURPOSE:     Frees Dynamic Space
     2562    18135              INTERFACE:   M$FDS Monitor Service
     2563    18136                           DU_USER_WRITE
     2564    18137                           DU_SYSTEM_ERRMSG
     2565    18138              INPUT:       WORD_COUNT   - number of words held by DEER
     2566    18139                           WORD_VECTOR  - vector to buffer
     2567    18140              OUTPUT:      WORD_VECTOR  - vector to buffer
     2568    18141              DESCRIPTION: This procedure frees the dynamically acquired words
     2569    18142                           that are held by DEER.
     2570    18143        */
     2571    18144
     2572    18145    1   DU_FREE_DATA_SEGMENT: PROC (WORD_COUNT, WORD_VECTOR) ALTRET ;

  18145  9 003760   200060 741300       DU_FREE_DAT* STX1  ! LO_FID_LGTH+2,,AUTO

     2573    18146
     2574    18147    2      DCL WORD_COUNT  UBIN HALF HALIGNED ;
     2575    18148    2      DCL WORD_VECTOR BIT (72) DALIGNED ;
     2576    18149           %FPT_FDS (FPTN = FREE_BUFFER) ;
     2577    18164
     2578    18165        /* Code */
     2579    18166
     2580    18167    2      FREE_BUFFER.V.SEGSIZE# = WORD_COUNT ;

  18167  9 003761   200061 470500                    LDP0    @WORD_COUNT,,AUTO
         9 003762   000000 100500                    MLR     fill='000'O
         9 003763   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         9 003764   002214 400002 5                  ADSC9   FREE_BUFFER+4            cn=2,n=2

     2581    18168    2      FREE_BUFFER.RESULTS_ = VECTOR (WORD_VECTOR) ;

  18168  9 003765   000115 235000 10                 LDA     77
         9 003766   200062 236100                    LDQ     @WORD_VECTOR,,AUTO
         9 003767   002212 757000 5                  STAQ    FREE_BUFFER+2

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:313  
     2582    18169    2      CALL M$FDS (FREE_BUFFER) ALTRET (FREE_ERROR) ;

  18169  9 003770   002210 630400 5                  EPPR0   FREE_BUFFER
         9 003771   430002 713400                    CLIMB   alt,fds
         9 003772   400400 401760                    pmme    nvectors=2
         9 003773   003776 702000 9                  TSX2    FREE_ERROR

     2583    18170    2      RETURN ;

  18170  9 003774   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 003775   000001 702211                    TSX2  ! 1,X1

     2584    18171
     2585    18172    2   FREE_ERROR:
     2586    18173    2      CALL DU_USER_WRITE (%E$DFDS_FDS) ;

  18173  9 003776   000200 236000 10    FREE_ERROR   LDQ     128
         9 003777   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 004000   002464 701000 9                  TSX1    DU_USER_WRITE
         9 004001   000000 011000                    NOP     0

     2587    18174    2      CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  18174  9 004002   000065 236000 10                 LDQ     53
         9 004003   200125 756100                    STQ     @FAULT_ERROR,,AUTO
         9 004004   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 004005   000000 011000                    NOP     0

     2588    18175    2      ALTRETURN ;

  18175  9 004006   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 004007   000000 702211                    TSX2  ! 0,X1

     2589    18176
     2590    18177    2   END DU_FREE_DATA_SEGMENT ;
     2591    18178        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:314  
     2592    18179        /*I*  NAME:        DU_UPDATE_LOG
     2593    18180              AUTHOR:      Scott S. Sheppard
     2594    18181              INTERFACE:   M$TIME
     2595    18182              INPUT:       COMMAND
     2596    18183                           CATALOG_ID
     2597    18184                           DECK_ID
     2598    18185                           IFAD_ID
     2599    18186                           LOG_B.COUNT
     2600    18187              OUTPUT:      LOG_B.ACCESSES.TYPE
     2601    18188                           LOG_B.ACCESSES.CATALOG
     2602    18189                           LOG_B.ACCESSES.DECK
     2603    18190                           LOG_B.ACCESSES.IFAD
     2604    18191                           LOG_B.ACCESSES.DATE
     2605    18192                           LOG_B.ACCESSES.TIME
     2606    18193                           LOG_B.COUNT
     2607    18194              DESCRIPTION: This procedure adds  a new entry to the deckfile
     2608    18195                           history log by assigning the supplied values and
     2609    18196                           recording the date and time.
     2610    18197        */
     2611    18198        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:315  
     2612    18199    1   DU_UPDATE_LOG: PROC (COMMAND, CATALOG_ID, DECK_ID, IFAD_ID) ALTRET ;

  18199  9 004010   200060 741300       DU_UPDATE_L* STX1  ! LO_FID_LGTH+2,,AUTO

     2613    18200
     2614    18201    2      DCL COMMAND     UBIN WORD ALIGNED ;
     2615    18202    2      DCL CATALOG_ID  CHAR (21) CALIGNED ;
     2616    18203    2      DCL DECK_ID     CHAR (23) CALIGNED ;
     2617    18204    2      DCL IFAD_ID     CHAR (40) CALIGNED ;
     2618    18205    2      DCL ERROR_GIVEN BIT (1) STATIC CALIGNED INIT (%FALSE) ;
     2619    18206           %LOG_B (STCLASS = "BASED (DUP.LOG_V.PTR$)") ;
     2620    18232           %FPT_TIME (FPTN = STORE_WHEN,
     2621    18233                      DEST = LOCAL) ;
     2622    18252
     2623    18253        /* Code */
     2624    18254
     2625    18255    2      IF LOG_B.COUNT < %MAX_ACCESSES

  18255  9 004011   000137 470400 xsym               LDP0    DUP+95
         9 004012   000100 101500                    MRL     fill='000'O
         9 004013   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004014   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004015   200130 236100                    LDQ     ALT$+2,,AUTO
         9 004016   000454 116007                    CMPQ    300,DL
         9 004017   004134 605000 9                  TPL     s:18266

     2626    18256    3      THEN DO ;

     2627    18257    3              LOG_B.ACCESSES.TYPE(LOG_B.COUNT) = COMMAND ;

  18257  9 004020   000100 101500                    MRL     fill='000'O
         9 004021   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004022   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004023   200130 236100                    LDQ     ALT$+2,,AUTO
         9 004024   000150 402007                    MPY     104,DL
         9 004025   200061 471500                    LDP1    @COMMAND,,AUTO
         9 004026   000106 101500                    MRL     fill='000'O
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:316  
         9 004027   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         9 004030   000000 200001                    ADSC9   0,Q,PR0                  cn=1,n=1

     2628    18258    3              LOG_B.ACCESSES.CATALOG(LOG_B.COUNT) = CATALOG_ID ;

  18258  9 004031   000137 470400 xsym               LDP0    DUP+95
         9 004032   000100 101500                    MRL     fill='000'O
         9 004033   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004034   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004035   200130 236100                    LDQ     ALT$+2,,AUTO
         9 004036   000150 402007                    MPY     104,DL
         9 004037   200062 473500                    LDP3    @CATALOG_ID,,AUTO
         9 004040   040106 100500                    MLR     fill='040'O
         9 004041   300000 000025                    ADSC9   0,,PR3                   cn=0,n=21
         9 004042   000005 200025                    ADSC9   5,Q,PR0                  cn=1,n=21

     2629    18259    3              LOG_B.ACCESSES.DECK(LOG_B.COUNT) = DECK_ID ;

  18259  9 004043   000137 470400 xsym               LDP0    DUP+95
         9 004044   000100 101500                    MRL     fill='000'O
         9 004045   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004046   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004047   200130 236100                    LDQ     ALT$+2,,AUTO
         9 004050   000150 402007                    MPY     104,DL
         9 004051   200063 474500                    LDP4    @DECK_ID,,AUTO
         9 004052   040106 100500                    MLR     fill='040'O
         9 004053   400000 000027                    ADSC9   0,,PR4                   cn=0,n=23
         9 004054   000012 400027                    ADSC9   10,Q,PR0                 cn=2,n=23

     2630    18260    3              LOG_B.ACCESSES.IFAD(LOG_B.COUNT) = IFAD_ID ;

  18260  9 004055   000137 470400 xsym               LDP0    DUP+95
         9 004056   000100 101500                    MRL     fill='000'O
         9 004057   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004060   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004061   200130 236100                    LDQ     ALT$+2,,AUTO
         9 004062   000150 402007                    MPY     104,DL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:317  
         9 004063   200064 475500                    LDP5    @IFAD_ID,,AUTO
         9 004064   040106 100500                    MLR     fill='040'O
         9 004065   500000 000050                    ADSC9   0,,PR5                   cn=0,n=40
         9 004066   000020 200050                    ADSC9   16,Q,PR0                 cn=1,n=40

     2631    18261    3              STORE_WHEN.DATE_ = VECTOR (LOG_B.ACCESSES.DATE(LOG_B.COUNT)) ;

  18261  9 004067   000137 470400 xsym               LDP0    DUP+95
         9 004070   000100 101500                    MRL     fill='000'O
         9 004071   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004072   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004073   200130 236100                    LDQ     ALT$+2,,AUTO
         9 004074   000115 235000 10                 LDA     77
         9 004075   200131 755100                    STA     ALT$+3,,AUTO
         9 004076   000032 402003                    MPY     26,DU
         9 004077   400000 036007                    ADLQ    -131072,DL
         9 004100   000137 036000 xsym               ADLQ    DUP+95
         9 004101   200131 235100                    LDA     ALT$+3,,AUTO
         9 004102   002222 757000 5                  STAQ    STORE_WHEN+2

     2632    18262    3              STORE_WHEN.TIME_ = VECTOR (LOG_B.ACCESSES.TIME(LOG_B.COUNT)) ;

  18262  9 004103   000100 101500                    MRL     fill='000'O
         9 004104   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004105   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004106   200130 236100                    LDQ     ALT$+2,,AUTO
         9 004107   000150 402007                    MPY     104,DL
         9 004110   000201 235000 10                 LDA     129
         9 004111   000020 736000                    QLS     16
         9 004112   000202 036000 10                 ADLQ    130
         9 004113   000137 036000 xsym               ADLQ    DUP+95
         9 004114   002224 757000 5                  STAQ    STORE_WHEN+4

     2633    18263    3              CALL M$TIME (STORE_WHEN) ALTRET (ERROR) ;

  18263  9 004115   002220 630400 5                  EPPR0   STORE_WHEN
         9 004116   420004 713400                    CLIMB   alt,+8196
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:318  
         9 004117   402000 401760                    pmme    nvectors=5
         9 004120   004146 702000 9                  TSX2    ERROR

     2634    18264    3              LOG_B.COUNT = LOG_B.COUNT + 1 ;

  18264  9 004121   000137 470400 xsym               LDP0    DUP+95
         9 004122   000100 101500                    MRL     fill='000'O
         9 004123   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 004124   200131 000004                    ADSC9   ALT$+3,,AUTO             cn=0,n=4
         9 004125   200131 236100                    LDQ     ALT$+3,,AUTO
         9 004126   000001 036007                    ADLQ    1,DL
         9 004127   200130 756100                    STQ     ALT$+2,,AUTO
         9 004130   000100 101500                    MRL     fill='000'O
         9 004131   200130 000004                    ADSC9   ALT$+2,,AUTO             cn=0,n=4
         9 004132   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     2635    18265    3           END /* THEN */ ;

  18265  9 004133   004144 710000 9                  TRA     s:18272

     2636    18266    2      ELSE IF ERROR_GIVEN

  18266  9 004134   002216 234000 5                  SZN     ERROR_GIVEN
         9 004135   004144 604000 9                  TMI     s:18272

     2637    18267    2         THEN /* user has already been informed of lack of space. */ ;
     2638    18268    3         ELSE DO ;

     2639    18269    3                 CALL DU_USER_WRITE (%E$DUL_TOO_MANY) ;

  18269  9 004136   000204 236000 10                 LDQ     132
         9 004137   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 004140   002464 701000 9                  TSX1    DU_USER_WRITE
         9 004141   000000 011000                    NOP     0

     2640    18270    3                 ERROR_GIVEN = %TRUE ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:319  
  18270  9 004142   400000 236003                    LDQ     -131072,DU
         9 004143   002216 756000 5                  STQ     ERROR_GIVEN

     2641    18271    3              END /* ELSE */ ;

     2642    18272    2      RETURN ;

  18272  9 004144   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 004145   000001 702211                    TSX2  ! 1,X1

     2643    18273
     2644    18274    2   ERROR:
     2645    18275    2      ALTRETURN ;

  18275  9 004146   200060 221300       ERROR        LDX1  ! LO_FID_LGTH+2,,AUTO
         9 004147   000000 702211                    TSX2  ! 0,X1

     2646    18276
     2647    18277    2   END DU_UPDATE_LOG ;
     2648    18278        %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:320  
     2649    18279        /*I* NAME:         DU_GET_SITE
     2650    18280             AUTHOR:       Scott S. Sheppard
     2651    18281             PURPOSE:      Obtains Customer Site Information
     2652    18282             INTERFACE:    M$MONINFO Monitor Service
     2653    18283                           DU_USER_WRITE
     2654    18284                           DU_SYSTEM_ERRMSG
     2655    18285             PARAMETERS:   SITE_NAME - output
     2656    18286                           SITE_NAME_LGTH - output
     2657    18287                           SITE_ID - output
     2658    18288                           CPU_TYPE - output
     2659    18289             DATA:         No external data accessed.
     2660    18290             DESCRIPTION:  This procedure obtains the site name, unique
     2661    18291                           site identifier, and  boot cpu type  for the
     2662    18292                           customer site.
     2663    18293        */
     2664    18294
     2665    18295    1   DU_GET_SITE: PROC (SITE_NAME, SITE_NAME_LGTH, SITE_ID, CPU_TYPE) ALTRET ;

  18295  9 004150   200060 741300       DU_GET_SITE  STX1  ! LO_FID_LGTH+2,,AUTO

     2666    18296
     2667    18297    2      DCL SITE_NAME                  CHAR (119) CALIGNED ;
     2668    18298    2      DCL SITE_NAME_LGTH             UBIN BYTE CALIGNED ;
     2669    18299    2      DCL SITE_ID                    CHAR (6) CALIGNED ;
     2670    18300    2      DCL CPU_TYPE                   UBIN BYTE;
     2671    18301           %FPT_MONINFO (FPTN     = GET_SITE,
     2672    18302                         SITEINFO = CUSTOMER) ;
     2673    18317           %VLR_SITEINFO (FPTN = CUSTOMER) ;
     2674    18336           %EJECT ;
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:321  
     2675    18337        /* Code */
     2676    18338
     2677    18339    2      CALL M$MONINFO (GET_SITE) WHENRETURN

  18339  9 004151   002234 630400 5                  EPPR0   GET_SITE
         9 004152   420023 713400                    CLIMB   alt,+8211
         9 004153   402400 401760                    pmme    nvectors=6
         9 004154   004201 702000 9                  TSX2    s:18349

     2678    18340    3           DO ;

     2679    18341    3              SITE_NAME = CUSTOMER.SITE_NAME#.C ;

  18341  9 004155   200061 470500                    LDP0    @SITE_NAME,,AUTO
         9 004156   040100 100400                    MLR     fill='040'O
         9 004157   002251 200167 5                  ADSC9   CUSTOMER+1               cn=1,n=119
         9 004160   000000 000167                    ADSC9   0,,PR0                   cn=0,n=119

     2680    18342    3              SITE_NAME_LGTH = CUSTOMER.SITE_NAME#.L ;

  18342  9 004161   200062 471500                    LDP1    @SITE_NAME_LGTH,,AUTO
         9 004162   000100 100400                    MLR     fill='000'O
         9 004163   002251 000001 5                  ADSC9   CUSTOMER+1               cn=0,n=1
         9 004164   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2681    18343    3              SITE_ID = CUSTOMER.SITE_ID# ;

  18343  9 004165   200063 473500                    LDP3    @SITE_ID,,AUTO
         9 004166   040100 100400                    MLR     fill='040'O
         9 004167   002336 000006 5                  ADSC9   CUSTOMER+54              cn=0,n=6
         9 004170   300000 000006                    ADSC9   0,,PR3                   cn=0,n=6

     2682    18344    3              CPU_TYPE = CUSTOMER.CPU_TYPE#;

  18344  9 004171   200064 474500                    LDP4    @CPU_TYPE,,AUTO
         9 004172   002337 236000 5                  LDQ     CUSTOMER+55
         9 004173   000011 772000                    QRL     9
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:322  
         9 004174   000777 376007                    ANQ     511,DL
         9 004175   000033 736000                    QLS     27
         9 004176   400000 756100                    STQ     0,,PR4

     2683    18345    3              RETURN ;

  18345  9 004177   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 004200   000001 702211                    TSX2  ! 1,X1

     2684    18346    3           END /* WHENRETURN */ ;
     2685    18347    2      WHENALTRETURN
     2686    18348    3           DO ;

     2687    18349    3              CALL DU_USER_WRITE (%E$DGS_NO_SITE) ;

  18349  9 004201   000206 236000 10                 LDQ     134
         9 004202   200121 756100                    STQ     @MSG_CODE,,AUTO
         9 004203   002464 701000 9                  TSX1    DU_USER_WRITE
         9 004204   000000 011000                    NOP     0

     2688    18350    3              CALL DU_SYSTEM_ERRMSG (%FALSE) ;

  18350  9 004205   000065 236000 10                 LDQ     53
         9 004206   200125 756100                    STQ     @FAULT_ERROR,,AUTO
         9 004207   003603 701000 9                  TSX1    DU_SYSTEM_ERRMSG
         9 004210   000000 011000                    NOP     0

     2689    18351    3              ALTRETURN ;

  18351  9 004211   200060 221300                    LDX1  ! LO_FID_LGTH+2,,AUTO
         9 004212   000000 702211                    TSX2  ! 0,X1

FID_RESULTS
 Sect OctLoc
   5     002   ****** ******   ****** ******   ****** ******   ****** ******    ................

FID_INFO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:323  
 Sect OctLoc
   5     014   000003 777640   000040 006000   000000 177640   000000 006014    ..... ..........
   5     020   000007 777640   000046 006000   000001 777640   000044 006000    .....&.......$..
   5     024   000001 777640   000056 006000   000011 777640   000060 006000    .............0..
   5     030   000001 777640   000072 006000   000000 177640   000001 006000    .....:..........
   5     034   000000 777640   000000 006000   000011 777640   000002 006000    ................
   5     040   777000 000000   000000 000000   000000 000000   ****** ******    ................

FID_ACCT
 Sect OctLoc
   5     044   040040 040040   040040 040040

FID_NAME
 Sect OctLoc
   5     046   037040 040040   040040 040040   040040 040040   040040 040040    .
   5     052   040040 040040   040040 040040   040040 040040   040040 040040

FID_PASS
 Sect OctLoc
   5     056   040040 040040   040040 040040

FID_SN
 Sect OctLoc
   5     060   000000 000006   040040 040040   040040 040040   040040 040040    ....
   5     064   040040 040040   040040 040040   040040 040040   040040 040040
   5     070   040040 040040   040040 040040

FID_WSN
 Sect OctLoc
   5     072   040040 040040   040040 040040

IFAD_TEXT_FID
 Sect OctLoc
   5     074   ****** ******   ****** ******   ****** ******   ****** ******    ................

IFAD_TAPE_DEVICE
 Sect OctLoc
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:324  
   5     106   000025 777640   000152 006000   000011 777640   000352 006000    .....j..........
   5     112   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     152*  000000 000044   000000 002003   252525 023000   000040 252520    ...$......... ..
   5     156   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   5     162   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5     166   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5     172   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5     176   000000 000000   ****** ******                                    ........

IFAD_DISK_FILE
 Sect OctLoc
   5     200   000025 777640   000244 006000   000000 177640   000000 006014    ................
   5     204   000000 177640   000000 006014   000007 777640   000364 006000    ................
   5     210   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     224*  000001 777640   000374 006000   000000 177640   000000 006014    ................
   5     230   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     244*  000000 000042   000000 002001   252525 000000   000040 252520    ..."......... ..
   5     250   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   5     254   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5     260   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5     264   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5     270   000000 000000   ****** ******                                    ........

SETUP_IFAD_TAPE
 Sect OctLoc
   5     272   000003 777640   000316 006000   000011 777640   000074 006000    .............<..
   5     276   000007 777640   000364 006000   000001 777640   000374 006000    ................
   5     302   000001 777640   000376 006000   000011 777640   000352 006000    ................
   5     306   000001 777640   000400 006000   000000 177640   000153 606000    .............k..
   5     312   000000 777640   000156 006000   000000 177640   000000 006014    .....n..........
   5     316   727000 000000   000000 000000   000000 000000   ****** ******    ................

SETUP_IFAD_DISK
 Sect OctLoc
   5     322   000003 777640   000346 006000   000011 777640   000074 006000    .............<..
   5     326   000007 777640   000364 006000   000001 777640   000374 006000    ................
   5     332   000001 777640   000376 006000   000011 777640   000352 006000    ................
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:325  
   5     336   000001 777640   000400 006000   000000 177640   000245 606000    ................
   5     342   000000 777640   000250 006000   000000 177640   000000 006014    ................
   5     346   167000 000000   000000 000000   000000 000000   ****** ******    w...............

IFAD_SN
 Sect OctLoc
   5     352   000000 000006   040040 040040   040040 040040   040040 040040    ....
   5     356   040040 040040   040040 040040   040040 040040   040040 040040
   5     362   040040 040040   040040 040040

IFAD_NAME
 Sect OctLoc
   5     364   037040 040040   040040 040040   040040 040040   040040 040040    .
   5     370   040040 040040   040040 040040   040040 040040   040040 040040

IFAD_ACCT
 Sect OctLoc
   5     374   040040 040040   040040 040040

IFAD_PASS
 Sect OctLoc
   5     376   040040 040040   040040 040040

IFAD_WSN
 Sect OctLoc
   5     400   040040 040040   040040 040040

NEXT_IFAD
 Sect OctLoc
   5     402   000001 777640   000410 006000   000000 177640   000000 006014    ................
   5     406   000000 177640   000000 006014   000000 000000   000000 000000    ................

CLOSE_IFAD
 Sect OctLoc
   5     412   000003 777640   000444 006000   000000 177640   000000 006014    ................
   5     416   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     442*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:326  
   5     446   003220 000000   000000 000000                                    ........

OPEN_LO
 Sect OctLoc
   5     450   000025 777640   000514 006000   000011 777640   000060 006000    .............0..
   5     454   000000 177640   000000 006014   000007 777640   000046 006000    .............&..
   5     460   000001 777640   000056 006000   000000 177640   000000 006014    ................
   5     464   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     474*  000001 777640   000044 006000   000000 177640   000000 006014    .....$..........
   5     500   000000 177640   000000 006014   000001 777640   000072 006000    .............:..
   5     504   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     514*  000000 000102   000000 000000   252525 000000   000040 252520    ...B......... ..
   5     520   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   5     524   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5     530   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5     534   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5     540   000000 000000   ****** ******                                    ........

CLOSE_LO
 Sect OctLoc
   5     542   000003 777640   000574 006000   000000 177640   000000 006014    ................
   5     546   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     572*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   5     576   000220 000000   000000 000000                                    ........

OPEN_CONFIG
 Sect OctLoc
   5     600   000025 777640   000644 006000   000000 177640   000000 006014    ................
   5     604   000000 177640   000000 006014   000002 777640   000746 006000    ................
   5     610   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     624*  000001 777640   000751 006000   000000 177640   000000 006014    ................
   5     630   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     644*  000000 000062   000000 002001   252525 002002   000040 252520    ...2......... ..
   5     650   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   5     654   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5     660   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5     664   040040 040040   000000 000000   000000 000000   000000 000000        ............
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:327  
   5     670   000000 000000   ****** ******                                    ........

READ_CONFIG
 Sect OctLoc
   5     672   000005 777640   000702 006000   000000 177640   000000 006014    ................
   5     676   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     702   000000 600000   000000 000000   000000 000000   000000 000000    ................
   5     706   000000 000000   000000 000000                                    ........

CLOSE_CONFIG
 Sect OctLoc
   5     710   000003 777640   000742 006000   000000 177640   000000 006014    ................
   5     714   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5     740*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   5     744   000220 000000   000000 000000                                    ........

FILE_NAME
 Sect OctLoc
   5     746   007072 103117   116106 111107   040040 040040                    .:CONFIG

ACCOUNT_NAME
 Sect OctLoc
   5     751   072123 131123   040040 040040                                    :SYS

IFAD_TEXT_FID
 Sect OctLoc
   5     753   ****** ******   ****** ******   ****** ******   ****** ******    ................

IFAD_DEVICE
 Sect OctLoc
   5     765   003*** ******                                                    ....

IFAD_RES
 Sect OctLoc
   5     766   111115 040040                                                    IM

MCA_FOR_INPUT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:328  
 Sect OctLoc
   5     770   000003 777640   001000 006000   000000 177640   000000 006014    ................
   5     774   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1000   000000 000003   000000 000000   000000 000000   000000 000000    ................

SETUP_IFAD_IMU
 Sect OctLoc
   5    1004   000003 777640   001030 006000   000011 777640   000753 006000    ................
   5    1010   000007 777640   001046 006000   000001 777640   001056 006000    .....&..........
   5    1014   000001 777640   001060 006000   000011 777640   001034 006000    .....0..........
   5    1020   000001 777640   001062 006000   000000 177640   000765 006000    .....2..........
   5    1024   000000 777640   000766 006000   000000 177640   000000 006014    ................
   5    1030   777000 000000   000000 000000   000000 000000   ****** ******    ................

IFAD_SN
 Sect OctLoc
   5    1034   000000 000006   040040 040040   040040 040040   040040 040040    ....
   5    1040   040040 040040   040040 040040   040040 040040   040040 040040
   5    1044   040040 040040   040040 040040

IFAD_NAME
 Sect OctLoc
   5    1046   037040 040040   040040 040040   040040 040040   040040 040040    .
   5    1052   040040 040040   040040 040040   040040 040040   040040 040040

IFAD_ACCT
 Sect OctLoc
   5    1056   040040 040040   040040 040040

IFAD_PASS
 Sect OctLoc
   5    1060   040040 040040   040040 040040

IFAD_WSN
 Sect OctLoc
   5    1062   040040 040040   040040 040040

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:329  
MCA_FINISHED
 Sect OctLoc
   5    1064   000001 777640   001066 006000   000000 ******   ****** ******    .....6..........

INIT_MCA
 Sect OctLoc
   5    1070   000003 777640   001076 006000   000000 177640   000000 006014    .....>..........
   5    1074   000000 177640   000000 006014   000000 400000   000000 700000    ................
   5    1100   000000 000000   000000 000000                                    ........

CREATE_OVER_FID
 Sect OctLoc
   5    1102   000025 777640   001146 006000   000011 777640   000060 006000    .....f.......0..
   5    1106   000000 177640   000000 006014   000007 777640   000046 006000    .............&..
   5    1112   000001 777640   000056 006000   000000 177640   000000 006014    ................
   5    1116   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1126*  000001 777640   000044 006000   000000 177640   000000 006014    .....$..........
   5    1132   000000 177640   000000 006014   000001 777640   000072 006000    .............:..
   5    1136   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1146*  000000 000662   000000 003001   252525 002002   104102 254520    ............DB..
   5    1152   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   5    1156   000000 000036   000000 000036   000000 000000   777777 777777    ................
   5    1162   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5    1166   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5    1172   000000 000000   ****** ******                                    ........

CREATE_NEW_FID
 Sect OctLoc
   5    1174   000025 777640   001240 006000   000011 777640   000060 006000    .............0..
   5    1200   000000 177640   000000 006014   000007 777640   000046 006000    .............&..
   5    1204   000001 777640   000056 006000   000000 177640   000000 006014    ................
   5    1210   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1220*  000001 777640   000044 006000   000000 177640   000000 006014    .....$..........
   5    1224   000000 177640   000000 006014   000001 777640   000072 006000    .............:..
   5    1230   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1240*  000000 000262   000000 003001   252525 002002   104102 254520    ............DB..
   5    1244   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:330  
   5    1250   000000 000036   000000 000036   000000 000000   777777 777777    ................
   5    1254   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5    1260   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5    1264   000000 000000   ****** ******                                    ........

UPDATE_FID
 Sect OctLoc
   5    1266   000025 777640   001332 006000   000011 777640   000060 006000    .............0..
   5    1272   000000 177640   000000 006014   000007 777640   000046 006000    .............&..
   5    1276   000001 777640   000056 006000   000000 177640   000000 006014    ................
   5    1302   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1312*  000001 777640   000044 006000   000000 177640   000000 006014    .....$..........
   5    1316   000000 177640   000000 006014   000001 777640   000072 006000    .............:..
   5    1322   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1332*  000000 000462   000000 001001   252525 000002   000040 254520    ............. ..
   5    1336   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   5    1342   000000 000000   000000 000000   000000 000000   777777 777777    ................
   5    1346   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5    1352   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5    1356   000000 000000   ****** ******                                    ........

READ_FID
 Sect OctLoc
   5    1360   000025 777640   001424 006000   000011 777640   000060 006000    .............0..
   5    1364   000000 177640   000000 006014   000007 777640   000046 006000    .............&..
   5    1370   000001 777640   000056 006000   000000 177640   000000 006014    ................
   5    1374   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1404*  000001 777640   000044 006000   000000 177640   000000 006014    .....$..........
   5    1410   000000 177640   000000 006014   000001 777640   000072 006000    .............:..
   5    1414   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1424*  000000 000462   000000 002001   252525 000002   000040 252520    ............. ..
   5    1430   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   5    1434   000000 000000   000000 000000   000000 000000   000000 000000    ................
   5    1440   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   5    1444   040040 040040   000000 000000   000000 000000   000000 000000        ............
   5    1450   000000 000000   ****** ******                                    ........

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:331  
SAVE_DECKFILE
 Sect OctLoc
   5    1452   000003 777640   001504 006000   000000 177640   000000 006014    ................
   5    1456   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1502*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   5    1506   000220 000000   000000 000000                                    ........

DISCARD_DECKFILE
 Sect OctLoc
   5    1510   000003 777640   001542 006000   000000 177640   000000 006014    ................
   5    1514   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1540*  000000 177640   000000 006014   000000 200001   000000 000040    ...............
   5    1544   000220 000000   000000 000000                                    ........

UNFID_DCB
 Sect OctLoc
   5    1546   000001 777640   001572 006000   000000 177640   000000 006014    ................
   5    1552   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1572*  000000 000000   0***** ******                                    ........

FROM_USER
 Sect OctLoc
   5    1574   000005 777640   001604 006000   000000 177640   000000 006014    ................
   5    1600   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1604   000000 400000   000000 000000   000000 000000   000000 000000    ................
   5    1610   000000 000000   000000 000000                                    ........

TO_USER
 Sect OctLoc
   5    1612   000003 777640   001622 006000   000000 177640   000000 006014    ................
   5    1616   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1622   000000 400400   000000 000000   000000 000000   000000 000000    ................

PL
 Sect OctLoc
   5    1626   ****** ******   ****** ******   ****** ******   ****** ******    ................

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:332  
TO_PRINTER
 Sect OctLoc
   5    1662   000003 777640   001672 006000   000000 177640   000000 006014    ................
   5    1666   000033 577640   001626 006000   000000 177640   000000 006014    ................
   5    1672   000000 400400   000000 000000   000000 000000   100000 000000    ............@...

PL
 Sect OctLoc
   5    1676   ****** ******   ****** ******   ****** ******   ****** ******    ................

TO_PRINTER
 Sect OctLoc
   5    1732   000003 777640   001742 006000   000000 177640   000000 006014    ................
   5    1736   000033 577640   001676 006000   000000 177640   000000 006014    ................
   5    1742   000000 400400   000000 000000   000000 000000   100000 000000    ............@...

SEND_MSG
 Sect OctLoc
   5    1746   000005 777640   001756 006000   000000 17764*   000000 006014    ................
   5    1752   000000 17764*   000000 006014   000000 177640   000000 006014    ................
   5    1756   040040 040040   040040 040040   000000 000000   402000 000000            ........
   5    1762   000000 000000   000000 000000                                    ........

MSG_RESP
 Sect OctLoc
   5    1764   000003 777640   001774 006000   000000 177640   000000 006014    ................
   5    1770   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    1774   000000 400400   000000 000000   000000 000000   000000 000000    ................

HL
 Sect OctLoc
   5    2000   ****** ******   ****** ******   ****** ******   ****** ******    ................

TO_PRINTER
 Sect OctLoc
   5    2034   000003 777640   002044 006000   000000 177640   000000 006014    .....$..........
   5    2040   000033 577640   002000 006000   000000 177640   000000 006014    ................
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:333  
   5    2044   000000 400400   000000 000000   000000 000000   100000 000000    ............@...

MESSAGE_FETCH
 Sect OctLoc
   5    2050   000003 777640   002076 006000   000000 777640   002102 006000    .....>.......B..
   5    2054   000000 177640   000000 006014   000007 777640   002103 006000    .............C..
   5    2060   000001 777640   002113 006000   000000 177640   000000 006014    .....K..........
   5    2064   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    2070   000000 177640   000000 006014   000003 777640   002116 006000    .............N..
   5    2074   000000 177640   000000 006014   000000 000000   000000 000000    ................
   5    2100   371000 030001   040000 000000                                    .... ...

MESSAGE_CODE
 Sect OctLoc
   5    2102   241725 000000                                                    ....

MSG_NAME
 Sect OctLoc
   5    2103   007072 105122   122115 123107   040040 040040   040040 040040    .:ERRMSG
   5    2107   040040 040040   040040 040040   040040 040040   040040 040040

MSG_ACCT
 Sect OctLoc
   5    2113   072123 131123   040040 040040                                    :SYS

FETCH_STATS
 Sect OctLoc
   5    2116   00000* ***000   000000 000000   000000 000000   ****** ******    ................

SYSTEM_ERRMSG
 Sect OctLoc
   5    2122   000003 777640   002150 006000   000000 777640   002154 006000    .....h.......l..
   5    2126   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    2146*  000000 177640   000000 006014   000000 000000   000000 004000    ................
   5    2152   375000 030001   040000 000000                                    .... ...

ERROR_CODE
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:334  
 Sect OctLoc
   5    2154   000000 000000                                                    ....

ON_LINE
 Sect OctLoc
   5    2156   000003 777640   002164 006000   000000 177640   000000 006014    .....t..........
   5    2162   000000 577640   000001 006000   000000 000000   000000 000000    ................
   5    2166   000000 000000   000000 000000                                    ........

SET_PROMPT
 Sect OctLoc
   5    2170   000003 777640   002176 006000   000000 177640   000000 006014    .....~..........
   5    2174   000000 177640   000000 006014   000000 000000   000000 000000    ................
   5    2200   000000 000000   000000 000000                                    ........

GET_BUFFER
 Sect OctLoc
   5    2202   000001 777640   002206 006000   000000 177640   000000 006014    ................
   5    2206   100600 000000   ****** ******                                    @.......

FREE_BUFFER
 Sect OctLoc
   5    2210   000001 777640   002214 006000   000000 177640   000000 006014    ................
   5    2214   000000 000000   ****** ******                                    ........

ERROR_GIVEN
 Sect OctLoc
   5    2216   0***** ******                                                    ....

STORE_WHEN
 Sect OctLoc
   5    2220   000001 777640   002232 006000   000000 177640   000000 006014    ................
   5    2224   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    2230   000000 177640   000000 006014   000003 000000   ****** ******    ................

GET_SITE
 Sect OctLoc
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:335  
   5    2234   000075 777640   002250 006000   000000 177640   000000 006014    .=..............
   5    2240   000000 177640   000000 006014   000000 177640   000000 006014    ................
   5    2244   000000 177640   000000 006014   000000 177640   000000 006014    ................

CUSTOMER
 Sect OctLoc
   5    2250   040040 040040   001040 040040   040040 040040   040040 040040        .
   5    2254   040040 040040   040040 040040   040040 040040   040040 040040
   5    2304*  040040 040040   040040 040040   040040 040040   032007 052052                ..**
   5    2310   052103 120055   066040 101124   040131 117125   122040 123105    *CP-6 AT YOUR SE
   5    2314   122126 111103   105041 007040   040040 040040   040040 040040    RVICE!.
   5    2320   040040 040040   040040 040040   040040 040040   040040 040040
   5    2330*  040040 040040   040040 040040   040040 040040   000000 000000                ....
   5    2334   040040 040040   000000 000000   040040 040040   040040 000000        ....      ..
   5    2340   060060 060060   040040 040040   000000 000000   000000 000000    0000    ........
   5    2344   000000 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   6     000   000000 000000   000000 000000   000000 000000   000000 000501    ................
   6     004   000000 000000   000000 000000   000000 006014   000000 006014    ................
   6     010   001040 040040   040040 040040   040040 040040   040040 040040    .
   6     014   040040 040040   040040 040040   040040 040040   040040 040040
   6     024*  040040 040040   040040 040040   114120 040040   040040 040040            LP
   6     030   040040 040040   000000 207015   004003 003002   000000 000000        ............
   6     034   000000 000000   000000 000000   000000 000000   000002 776003    ................
   6     040   001000 000000   000000 000002   000000 000000   000000 000000    ................
   6     044   000102 000111   040040 040040   000000 006014   000000 006014    .B.I    ........
   6     050   000000 006014   000000 000000   000000 000000   000000 006014    ................
   6     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
   6     060   000000 010000   000000 000000   000000 000000   000000 000000    ................
   6     064   000000 000020   000000 000000   000000 006014   000000 000000    ................
   6     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
   6     074   000000 000000   000000 006014   000000 000000   000000 000000    ................
   6     100   000000 000000   000000 000000   000000 000000   000000 000000    ................
   6     104   ****** ******   ****** ******   000000 000000   ****** ******    ................
   6     110   000000 000000   000000 000000   000000 000000   000000 000000    ................
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:336  
   6     124*  000000 000000   000000 000000   000000 000000   ****** ******    ................
   6     134*  ****** ******   ****** ******   ****** ******   000000 070707    ..............8.
   6     140   ****** ******   ****** ******                                    ........

HEAD_KEY
 Sect OctLoc
   8     000   001000 ******                                                    ....

THREE_QUESTION_MARKS
 Sect OctLoc
   8     001   077077 077***                                                    ???.

(unnamed)
 Sect OctLoc
   8     002   106124 040040   115105 040040   111115 125040   111115 130040    FT  ME  IMU IMX
   8     006   400000 700201   124101 116104   104137 104105   103113 137106    ....TANDD_DECK_F
   8     012   111114 105137   111104 056072   106105 104040   040040 101164    ILE_ID.:FED   At
   8     016   164145 155160   164040 164157   040146 145164   143150 040164    tempt to fetch t
   8     022   150145 040155   145163 163141   147145 040124   105130 124040    he message TEXT
   8     026   146141 151154   145144 040155   151163 145162   141142 154171    failed miserably
   8     032   056040 040040   040040 120162   157142 154145   155040 162145    .     Problem re
   8     036   154141 164145   144040 164157   040146 151154   145040 072105    lated to file :E
   8     042   122122 115123   107056 072123   131123 040040   040040 125156    RRMSG.:SYS    Un
   8     046   141142 154145   040164 157040   157160 145156   040155 145163    able to open mes
   8     052   163141 147145   040146 151154   145056 040040   040040 116157    sage file.    No
   8     056   040155 145163   163141 147145   040146 157165   156144 040146     message found f
   8     062   157162 040143   157144 145056   040040 115145   163163 141147    or code.  Messag
   8     066   145040 142165   146146 145162   040156 157164   040164 150145    e buffer not the
   8     072   162145 040157   162040 142141   144056 040040   040040 103141    re or bad.    Ca
   8     076   154154 040150   141144 040142   141144 040160   141162 141155    ll had bad param
   8     102   145164 145162   050163 051056                                    eter(s).

(unnamed)
 Sect OctLoc
  10     000   000063 206000   000076 006000   000154 006000   000057 406000    .3...>...l.../..
  10     004   000057 206000   000142 006000   000057 006000   000061 006000    ./...b.../...1..
  10     010   000076 006000   000062 006000   000107 006000   000121 006000    .>...2...G...Q..
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:337  
  10     014   000142 006000   000154 006000   000104 006000   000104 206000    .b...l...D...D..
  10     020   000105 006000   000104 406000   000106 006000   000140 006000    .E...D...F...`..
  10     024   000016 006000   000004 006000   000020 006000   000017 006000    ................
  10     030   000000 406000   000000 006000   000002 006000   000001 006000    ................
  10     034   000123 006000   000130 206000   000122 006000   000220 006000    .S...X...R......
  10     040   000160 006000   000216 006000   000160 206000   000000 006003    .p.......p......
  10     044   000000 006000   000001 006000   000032 400000   000000 000315    ................
  10     050   000047 006000   000000 000316   000051 006000   000000 000317    .'.......)......
  10     054   000053 006000   000000 000320   000055 006000   000000 000325    .+.......-......
  10     060   000057 006000   000000 000324   000061 006000   000000 000326    ./.......1......
  10     064   000063 006000   000002 006000   000000 000327   000066 006000    .3...........6..
  10     070   000000 000330   000070 006000   777777 777177   056040 040040    .....8.......
  10     074   063040 040040   067040 040040   070040 040040   071040 040040    3   7   8   9
  10     100   065040 040040   066040 040040   064040 040040   061040 040040    5   6   4   1
  10     104   062040 040040   060040 040040   000000 000353   000106 006000    2   0   .....F..
  10     110   000000 000354   000110 006000   000000 777640   000000 006000    .....H..........
  10     114   003720 777640   000001 777640   000000 000360   000116 006000    .............N..
  10     120   000000 000331   000120 006000   000000 000332   000122 006000    .....P.......R..
  10     124   000000 000333   000124 006000   000000 000340   000126 006000    .....T.......V..
  10     130   000000 000336   000130 006000   000000 000335   000132 006000    .....X.......Z..
  10     134   000000 000337   000134 006000   000000 000341   000136 006000    .....\.......^..
  10     140   000000 000342   000140 006000   052040 040040   000011 777640    .....`..*   ....
  10     144   000000 000343   000144 006000   000033 377640   000021 006000    .....d..........
  10     150   000000 000344   000150 006000   077040 040040   000000 000355    .....h..?   ....
  10     154   000153 006000   000003 400000   000035 777640   000000 000356    .k..............
  10     160   000000 177640   000000 006014   000157 006000   000000 000357    .........o......
  10     164   000163 006000   000000 000345   000165 006000   000000 004540    .s.......u......
  10     170   000167 006000   000000 000346   000171 006000   000000 000347    .w.......y......
  10     174   000173 006000   000000 000350   000175 006000   000000 000351    .{.......}......
  10     200   000177 006000   000002 577640   000002 400000   000000 000352    ................
  10     204   000203 006000   000000 000436   000205 006000                    ............
     2690    18352    3           END /* WHENALTRETURN */ ;
     2691    18353
     2692    18354    2   END DU_GET_SITE ;
     2693    18355    1   END TOU$DU ;

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:338  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
   TD$STRUCT.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOU$DU.
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:339  

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   105- 18355    648   104     9      0  y y y    0   1 TOU$DU
                                  9      3    y y    0     TOU$DU_SET_IFAD_FID
                                  9     20    y y    0     TOU$DU_OPEN_IFAD
                                  9     33    y y    0     TOU$DU_NEXT_IFAD
                                  9     40    y y    0     TOU$DU_CLOSE_IFAD
                                  9     45    y y    0     TOU$DU_SET_MCA
                                  9     74    y y    0     TOU$DU_OPEN_MCA
                                  9    105    y y    0     TOU$DU_CLOSE_MCA
                                  9    112    y y    0     TOU$DU_MCA_RESET_STATUS
                                  9    117    y y    0     TOU$DU_SET_DF_FID
                                  9    132    y y    0     TOU$DU_OPEN_DF
                                  9    147    y y    0     TOU$DU_CLOSE_DF
                                  9    156    y y    0     TOU$DU_SET_LO_FID
                                  9    201    y y    0     TOU$DU_USER_READ
                                  9    212    y y    0     TOU$DU_USER_WRITE
                                  9    221    y y    0     TOU$DU_PRINTER_WRITE
                                  9    230    y y    0     TOU$DU_PRINTER_OVERWRITE
                                  9    237    y y    0     TOU$DU_OPERATOR_WRITE
                                  9    246    y y    0     TOU$DU_OPERATOR_TEXT
                                  9    255    y y    0     TOU$DU_SYSTEM_ERRMSG
                                  9    264    y y    0     TOU$DU_SET_EDIT_PROMPT
                                  9    273    y y    0     TOU$DU_SET_PROMPT
                                  9    304    y y    0     TOU$DU_GET_DATA_SEGMENT
                                  9    315    y y    0     TOU$DU_FREE_DATA_SEGMENT
                                  9    326    y y    0     TOU$DU_UPDATE_LOG
                                  9    341    y y    0     TOU$DU_GET_SITE
  1 14115- 14212     41    15     9    355  y y y    7     2 DU_SET_IFAD_FID
  2 14178- 14211     23     4     9    451  y y y    2      3 DU_CHECK_IFAD_ASN
  3 14229- 14670     26    27     9    555  y y y    4     2 DU_OPEN_IFAD
  4 14685- 14714      6     2     9    662  y y y    0     2 DU_NEXT_IFAD
  5 14728- 14787      7     2     9    703  y y y    0     2 DU_CLOSE_IFAD
  6 14808- 14961     22    10     9    733  y y y    2     2 DU_OPEN_LO
  7 14975- 15031      5     2     9   1026  y y y    0     2 DU_CLOSE_LO_IF_OPEN
  8 15055- 15087     18     7     9   1046  y y y    3     2 DU_SET_IFAD_IMU_NUMBER
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:340  
  9 15113- 15426     15    18     9   1216  y y y    1     2 DU_VALIDATE_IMU_NUMBER
 10 15453- 15620     10    19     9   1272  y y y    2     2 DU_OPEN_MCA
 11 15634- 15664      7     2     9   1333  y y y    0     2 DU_CLOSE_MCA
 12 15681- 15782      9    11     9   1363  y y y    0     2 DU_MCA_RESET_STATUS
 13 15803- 15905     36    10     9   1435  y y y    5     2 DU_SET_DF_FID
 14 15850- 15875     16     0     9   1473  y y y    0      3 DU_DF_FROM_HOLD
 15 15890- 15904      9     0     9   1561  y y y    0      3 DU_DF_FROM_MERGE
 16 15936- 16524     43    20     9   1617  y y y    6     2 DU_OPEN_DF
 17 16502- 16523     16     0     9   1746  y   y    0      3 DU_SIGNAL_OPEN_ERROR
 18 16542- 16652     13     6     9   2113  y y y    1     2 DU_CLOSE_DF
 19 16670- 16710     24    10     9   2160  y   y    4     2 DU_SET_FULL_FID
 20 16728- 16746      9     2     9   2336  y y y    1     2 DU_SET_FID
 21 16759- 16794      8    11     9   2370  y y y    3     2 DU_UNFID_DCB
 22 16812- 16871     10     8     9   2416  y y y    2     2 DU_USER_READ
 23 16891- 16946      9     7     9   2464  y y y    1     2 DU_USER_WRITE
 24 16967- 17054     32    11     9   2525  y y y    1     2 DU_PRINTER_WRITE
 25 17074- 17165     36    11     9   2675  y y y    1     2 DU_PRINTER_OVERWRITE
 26 17185- 17333     19     2     9   3061  y   y    1     2 DU_OPERATOR_WRITE
 27 17227- 17332     14     6     9   3072  y y y    0      3 DU_OW_SETUP_BUFFER
 28 17349- 17387     11     5     9   3143  y y y    0     2 DU_ISSUE_OP_MSG
 29 17399- 17448      9     3     9   3214  y y y    0     2 DU_PRINT_OP_REPLY
 30 17468- 17558     31     5     9   3242  y   y    1     2 DU_OPERATOR_TEXT
 31 17508- 17527     10     4     9   3317  y y y    2      3 DU_OT_STRIP_TRAILING_BLANKS
 32 17542- 17557      8     4     9   3362  y   y    2      3 DU_OT_SETUP_BUFFER
 33 17576- 17644     17     9     9   3415  y y y    1     2 DU_HEADER_WRITE
 34 17659- 17837     20    17     9   3503  y   y    1     2 DU_FETCH_TEXT
 35 17855- 17949     10    10     9   3603  y   y    1     2 DU_SYSTEM_ERRMSG
 36 17962- 18008      7     5     9   3637  y y y    1     2 DU_SET_EDIT_PROMPT
 37 18031- 18082     11    10     9   3665  y y y    3     2 DU_SET_PROMPT
 38 18096- 18130      8     8     9   3730  y y y    2     2 DU_GET_DATA_SEGMENT
 39 18145- 18177      8     8     9   3760  y y y    2     2 DU_FREE_DATA_SEGMENT
 40 18199- 18277     19    22     9   4010  y y y    4     2 DU_UPDATE_LOG
 41 18295- 18354     12    15     9   4150  y y y    4     2 DU_GET_SITE
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:341  

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

             105   9      0 Proc    0                             13674   9      3 Entry   0
        $$ 13676   9      5 Call    0                             13683   9     17 Return  0
           13694   9     20 Entry   0                          $$ 13696   9     22 Call    0
           13700   9     32 Return  0                             13711   9     33 Entry   0
           13713   9     35 Call    0                             13714   9     37 Return  0
           13725   9     40 Entry   0                             13727   9     42 Call    0
           13728   9     44 Return  0                             13740   9     45 Entry   0
        $$ 13742   9     47 Call    0                           $ 13750   9     61 Call    0
           13754   9     67 Call    0                             13756   9     73 Return  0
           13767   9     74 Entry   0                           $ 13769   9     76 Call    0
           13771   9    104 Return  0                             13782   9    105 Entry   0
           13784   9    107 Call    0                             13785   9    111 Return  0
           13797   9    112 Entry   0                             13799   9    114 Call    0
           13800   9    116 Return  0                             13810   9    117 Entry   0
        $$ 13812   9    121 Call    0                             13817   9    131 Return  0
           13828   9    132 Entry   0                          $$ 13830   9    134 Call    0
           13836   9    146 Return  0                             13847   9    147 Entry   0
           13849   9    151 Call    0                             13850   9    155 Return  0
           13872   9    156 Entry   0                         $$$ 13876   9    160 Call    0
         $ 13880   9    172 Call    0                             13883   9    200 Return  0
           13893   9    201 Entry   0                           $ 13895   9    203 Call    0
           13897   9    211 Return  0                             13908   9    212 Entry   0
           13910   9    214 Call    0                             13912   9    220 Return  0
           13923   9    221 Entry   0                             13925   9    223 Call    0
           13926   9    227 Return  0                             13937   9    230 Entry   0
           13939   9    232 Call    0                             13940   9    236 Return  0
           13952   9    237 Entry   0                             13954   9    241 Call    0
           13955   9    245 Return  0                             13969   9    246 Entry   0
           13971   9    250 Call    0                             13972   9    254 Return  0
           13985   9    255 Entry   0                             13987   9    257 Call    0
           13988   9    263 Return  0                             13999   9    264 Entry   0
           14001   9    266 Call    0                             14002   9    272 Return  0
           14013   9    273 Entry   0                           $ 14015   9    275 Call    0
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:342  
           14017   9    303 Return  0                             14028   9    304 Entry   0
         $ 14030   9    306 Call    0                             14032   9    314 Return  0
           14043   9    315 Entry   0                           $ 14045   9    317 Call    0
           14047   9    325 Return  0                             14057   9    326 Entry   0
        $$ 14059   9    330 Call    0                             14063   9    340 Return  0
           14073   9    341 Entry   0                          $$ 14075   9    343 Call    0
           14077   9    353 Return  0                             14090   9    354 Altret  0 TOU$DU_ALTRETURN
           14115   9    355 Proc    1                          $$ 14134   9    356 Assign  1
        $$ 14135   9    363 If      1                             14136   9    370 Do      1
        $$ 14137   9    370 Assign  1                          $$ 14138   9    375 Assign  1
           14139   9    401 Call    1                           $ 14140   9    405 Call    1
           14141   9    413 EndDo   1                           $ 14142   9    414 If      1
           14143   9    420 Do      1                          $$ 14144   9    420 Call    1
         $ 14146   9    430 Call    1                             14147   9    440 EndDo   1
           14148   9    441 Do      1                             14149   9    441 Call    1
           14151   9    445 Altret  1 ERROR                       14153   9    447 Return  1
           14178   9    451 Proc    2                       $$$$$ 14185   9    452 DoCase  2
           14186   9    466 Case    2                         $$$ 14187   9    466 Assign  2
      $$$$ 14188   9    472 Do Sel  2                             14189   9    505 Select  2
           14191   9    506 Select  2                          $$ 14192   9    506 If      2
           14194   9    513 Do      2                             14195   9    513 Call    2
           14196   9    517 Altret  2                             14198   9    521 Select  2
           14199   9    521 Call    2                             14200   9    525 Altret  2
           14201   9    527 EndSel  2                             14202   9    527 Case    2
       $$$ 14203   9    527 Assign  2                          $$ 14204   9    533 Call    2
           14205   9    545 Case    2                             14206   9    545 Call    2
           14207   9    551 Altret  2                             14208   9    553 EndCse  2
           14209   9    553 Return  2                             14229   9    555 Proc    3
       $$$ 14640   9    556 If      3                             14641   9    565 Do      3
           14642   9    565 Call    3                             14643   9    571 Altret  3
           14645   9    573 Do      3                           $ 14646   9    573 Assign  3
        $$ 14647   9    577 If      3                             14648   9    604 Do      3
$$$$$$$$$$ 14649   9    604 MonCal  3                  $$$$$$$$$$ 14650   9    610 MonCal  3
           14651   9    614 Assign  3                             14652   9    617 EndDo   3
           14653   9    620 Do      3                  $$$$$$$$$$ 14654   9    620 MonCal  3
$$$$$$$$$$ 14655   9    624 MonCal  3                             14656   9    630 Assign  3
           14657   9    633 EndDo   3                             14658   9    633 Return  3
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:343  
        $$ 14662   9    635 If      3 OPEN_ERR                    14663   9    643 Call    3
           14664   9    650 Do      3                             14665   9    650 Call    3
           14666   9    654 Call    3                             14667   9    660 EndDo   3
           14668   9    660 Altret  3                             14685   9    662 Proc    4
$$$$$$$$$$ 14706   9    663 MonCal  4                             14707   9    667 Return  4
           14710   9    671 Call    4 CVOL_ERROR                  14711   9    675 Call    4
           14712   9    701 Altret  4                             14728   9    703 Proc    5
       $$$ 14777   9    704 If      5                  $$$$$$$$$$ 14778   9    713 MonCal  5
           14780   9    717 Return  5                             14783   9    721 Call    5 CLOSE_ERROR
           14784   9    725 Call    5                             14785   9    731 Altret  5
           14808   9    733 Proc    6                             14936   9    734 Call    6
           14938   9    736 Call    6                             14939   9    742 Assign  6
           14940   9    744 Assign  6                         $$$ 14941   9    747 DoCase  6
           14942   9    760 Case    6                             14943   9    760 Assign  6
           14944   9    764 Assign  6                  $$$$$$$$$$ 14945   9    766 MonCal  6
           14946   9    773 Case    6                             14947   9    773 Assign  6
           14948   9    775 Assign  6                  $$$$$$$$$$ 14949   9    777 MonCal  6
           14950   9   1004 Case    6                             14951   9   1004 Assign  6
           14952   9   1010 Assign  6                  $$$$$$$$$$ 14953   9   1012 MonCal  6
           14954   9   1016 EndCse  6                             14955   9   1016 Return  6
           14958   9   1020 Call    6 LO_ERROR                    14959   9   1024 Altret  6
           14975   9   1026 Proc    7                         $$$ 15023   9   1027 If      7
$$$$$$$$$$ 15024   9   1036 MonCal  7                             15026   9   1042 Return  7
           15029   9   1044 Altret  7 CLOSE_ERR                   15055   9   1046 Proc    8
      $$$$ 15064   9   1047 If      8                             15066   9   1060 Do      8
       $$$ 15067   9   1060 IntCal  8                             15068   9   1066 Assign  8
           15069   9   1072 DoIndx  8                  $$$$$$$$$$ 15070   9   1075 Do Sel  8
           15071   9   1161 Select  8                             15073   9   1162 Select  8
           15074   9   1162 Call    8                             15075   9   1166 Altret  8
           15076   9   1170 EndSel  8                           $ 15077   9   1170 EndInd  8
 $$$$$$$$$ 15078   9   1176 IntCal  8                             15079   9   1206 Return  8
           15081   9   1210 Do      8                             15083   9   1210 Call    8 ERROR
           15084   9   1214 Altret  8                             15113   9   1216 Proc    9
$$$$$$$$$$ 15407   9   1217 MonCal  9                             15408   9   1223 Assign  9
           15409   9   1225 Assign  9                  $$$$$$$$$$ 15410   9   1230 MonCal  9
$$$$$$$$$$ 15411   9   1234 MonCal  9                             15413   9   1240 Assign  9
        $$ 15414   9   1242 If      9                             15415   9   1251 Return  9
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:344  
           15416   9   1253 Do      9                             15417   9   1253 Call    9
           15418   9   1257 Altret  9                             15422   9   1261 Call    9 ERROR
$$$$$$$$$$ 15423   9   1265 MonCal  9                             15424   9   1270 Altret  9
           15453   9   1272 Proc   10                           $ 15608   9   1273 Assign 10
$$$$$$$$$$ 15609   9   1277 MonCal 10                          $$ 15610   9   1303 Assign 10
           15611   9   1311 Assign 10                  $$$$$$$$$$ 15612   9   1313 MonCal 10
           15613   9   1317 Return 10                             15616   9   1321 Call   10 ERROR
           15617   9   1325 Call   10                             15618   9   1331 Altret 10
           15634   9   1333 Proc   11                         $$$ 15654   9   1334 If     11
 $$$$$$$$$ 15655   9   1343 MonCal 11                             15657   9   1347 Return 11
           15660   9   1351 Call   11 ERROR                       15661   9   1355 Call   11
           15662   9   1361 Altret 11                             15681   9   1363 Proc   12
           15770   9   1364 Assign 12                             15771   9   1366 Assign 12
$$$$$$$$$$ 15772   9   1373 MonCal 12                        $$$$ 15773   9   1377 Assign 12
       $$$ 15774   9   1406 If     12                             15775   9   1425 Return 12
           15779   9   1427 Call   12 ERROR                       15780   9   1433 Altret 12
           15803   9   1435 Proc   13                          $$ 15817   9   1436 If     13
           15818   9   1443 Call   13                         $$$ 15819   9   1446 If     13
           15820   9   1455 Call   13                             15821   9   1460 Do     13
         $ 15823   9   1460 Assign 13                             15824   9   1464 Assign 13
           15825   9   1467 EndDo  13                             15826   9   1467 Return 13
           15829   9   1471 Altret 13 ERROR                       15850   9   1473 Proc   14
           15854   9   1474 Call   14                           $ 15855   9   1500 DoCase 14
           15856   9   1507 Case   14                          $$ 15857   9   1507 Call   14
           15861   9   1521 Case   14                          $$ 15862   9   1521 Assign 14
        $$ 15863   9   1526 Assign 14                             15864   9   1532 Call   14
           15865   9   1536 Altret 14                             15866   9   1540 EndCse 14
           15867   9   1540 Return 14                          $$ 15870   9   1542 Assign 14 FID_ERROR
        $$ 15871   9   1547 Assign 14                             15872   9   1553 Call   14
           15873   9   1557 Altret 14                             15890   9   1561 Proc   15
     $$$$$ 15894   9   1562 DoCase 15                             15895   9   1576 Case   15
        $$ 15896   9   1576 Call   15                             15897   9   1607 Case   15
           15898   9   1607 Call   15                             15900   9   1613 Altret 15 ERROR
           15901   9   1615 EndCse 15                             15902   9   1615 Return 15
           15936   9   1617 Proc   16                         $$$ 16455   9   1620 If     16
           16456   9   1627 Do     16                             16457   9   1627 Call   16
           16458   9   1633 Altret 16                             16460   9   1635 Do     16
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:345  
           16461   9   1635 Call   16                          $$ 16462   9   1641 DoCase 16
           16463   9   1651 Case   16                          $$ 16464   9   1651 If     16
        $$ 16465   9   1656 If     16                  $$$$$$$$$$ 16466   9   1663 MonCal 16
$$$$$$$$$$ 16467   9   1670 MonCal 16                  $$$$$$$$$$ 16468   9   1675 MonCal 16
           16469   9   1702 Case   16                  $$$$$$$$$$ 16470   9   1702 MonCal 16
   $$$$$$$ 16471   9   1706 If     16                             16474   9   1725 Do     16
           16475   9   1725 Call   16                             16476   9   1731 Altret 16
           16478   9   1733 Case   16                  $$$$$$$$$$ 16479   9   1733 MonCal 16
           16480   9   1740 Case   16                             16482   9   1740 Call   16 ERROR
           16483   9   1742 Altret 16                             16484   9   1744 EndCse 16
           16485   9   1744 Return 16                             16502   9   1746 Proc   17
$$$$$$$$$$ 16506   9   1747 DoCase 17                             16507   9   2050 Case   17
           16508   9   2050 Call   17                             16509   9   2055 Case   17
           16510   9   2055 Call   17                             16511   9   2062 Case   17
        $$ 16512   9   2062 If     17                             16513   9   2067 Call   17
           16515   9   2074 Case   17                             16516   9   2074 Call   17
           16517   9   2101 Case   17                             16518   9   2101 Call   17
           16519   9   2105 Call   17                             16520   9   2111 EndCse 17
           16521   9   2111 Return 17                             16542   9   2113 Proc   18
       $$$ 16637   9   2114 If     18                          $$ 16638   9   2123 DoCase 18
           16639   9   2132 Case   18                  $$$$$$$$$$ 16640   9   2132 MonCal 18
           16641   9   2137 Case   18                  $$$$$$$$$$ 16642   9   2137 MonCal 18
           16643   9   2144 Case   18                             16645   9   2144 Call   18 CLOSE_ERROR
           16646   9   2150 Call   18                             16647   9   2154 Altret 18
           16648   9   2156 EndCse 18                             16650   9   2156 Return 18
           16670   9   2160 Proc   19                         $$$ 16681   9   2161 IntCal 19
           16682   9   2166 If     19                             16683   9   2172 Do     19
       $$$ 16684   9   2172 Assign 19                           $ 16685   9   2202 Assign 19
           16686   9   2207 EndDo  19                          $$ 16687   9   2210 If     19
           16688   9   2217 Do     19                           $ 16689   9   2217 Assign 19
           16690   9   2223 Assign 19                             16691   9   2226 EndDo  19
           16692   9   2227 If     19                             16693   9   2233 Do     19
   $$$$$$$ 16694   9   2233 IntCal 19                         $$$ 16697   9   2255 IntCal 19
         $ 16698   9   2262 Assign 19                             16699   9   2266 EndDo  19
           16700   9   2267 Do     19                  $$$$$$$$$$ 16701   9   2267 IntCal 19
       $$$ 16705   9   2322 IntCal 19                           $ 16706   9   2327 Assign 19
           16707   9   2334 EndDo  19                             16708   9   2334 Return 19
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:346  
           16728   9   2336 Proc   20                             16734   9   2337 Assign 20
$$$$$$$$$$ 16735   9   2342 MonCal 20                             16736   9   2346 If     20
           16738   9   2351 Assign 20                             16739   9   2354 Return 20
           16742   9   2356 Call   20 FID_ERROR                   16743   9   2362 Call   20
           16744   9   2366 Altret 20                             16759   9   2370 Proc   21
           16785   9   2371 Assign 21                             16786   9   2374 Assign 21
           16787   9   2377 Assign 21                  $$$$$$$$$$ 16788   9   2402 MonCal 21
           16789   9   2406 Return 21                             16792   9   2410 Call   21 UNFID_ERROR
           16793   9   2414 Altret 21                             16812   9   2416 Proc   22
         $ 16859   9   2417 Assign 22                             16860   9   2423 Assign 22
        $$ 16861   9   2426 Assign 22                  $$$$$$$$$$ 16862   9   2435 MonCal 22
      $$$$ 16863   9   2441 Assign 22                             16864   9   2450 Return 22
           16867   9   2452 Call   22 USER_READ_ERROR             16868   9   2456 Call   22
           16869   9   2462 Altret 22                             16891   9   2464 Proc   23
           16933   9   2465 Call   23                             16936   9   2471 DoIndx 23
       $$$ 16937   9   2473 Assign 23                  $$$$$$$$$$ 16938   9   2503 MonCal 23
           16939   9   2507 EndInd 23                             16940   9   2515 Return 23
           16943   9   2517 Call   23 WRITE_ERROR                 16944   9   2523 Altret 23
           16967   9   2525 Proc   24                             17016   9   2526 Call   24
           17017   9   2532 If     24                             17018   9   2536 Assign 24
           17019   9   2541 Assign 24                             17020   9   2542 If     24
           17021   9   2544 Do     24                             17022   9   2544 Call   24
           17023   9   2550 Call   24                        $$$$ 17024   9   2554 Assign 24
           17025   9   2563 EndDo  24                             17026   9   2564 Do     24
           17027   9   2564 Assign 24                         $$$ 17028   9   2570 If     24
           17029   9   2606 Do     24                             17030   9   2606 Call   24
           17031   9   2612 Call   24                             17032   9   2616 EndDo  24
           17034   9   2616 EndDo  24                             17037   9   2616 Assign 24
         $ 17038   9   2620 Assign 24                  $$$$$$$$$$ 17039   9   2624 MonCal 24
           17040   9   2630 Assign 24                             17041   9   2632 DoIndx 24
       $$$ 17042   9   2635 Assign 24                  $$$$$$$$$$ 17043   9   2643 MonCal 24
           17044   9   2647 EndInd 24                             17045   9   2655 Assign 24
           17046   9   2661 Return 24
           17049   9   2663 Call   24 PRINTER_WRITE_ERROR
           17050   9   2667 Call   24                             17052   9   2673 Altret 24 ERROR
           17074   9   2675 Proc   25                             17123   9   2676 Call   25
           17124   9   2702 If     25                             17125   9   2706 Assign 25
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:347  
           17126   9   2711 Assign 25                             17127   9   2712 If     25
           17128   9   2714 Do     25                             17129   9   2714 Call   25
           17130   9   2720 Call   25                        $$$$ 17131   9   2724 Assign 25
           17132   9   2733 EndDo  25                             17133   9   2734 Do     25
           17134   9   2734 Assign 25                         $$$ 17135   9   2740 If     25
           17136   9   2756 Do     25                             17137   9   2756 Call   25
           17138   9   2762 Call   25                             17139   9   2766 EndDo  25
           17141   9   2766 EndDo  25                           $ 17144   9   2766 Assign 25
           17145   9   2772 Assign 25                  $$$$$$$$$$ 17146   9   2774 MonCal 25
           17147   9   3000 Assign 25                  $$$$$$$$$$ 17148   9   3002 MonCal 25
           17149   9   3006 DoIndx 25                         $$$ 17150   9   3011 Assign 25
           17151   9   3017 Assign 25                  $$$$$$$$$$ 17152   9   3021 MonCal 25
           17153   9   3025 Assign 25                  $$$$$$$$$$ 17154   9   3027 MonCal 25
           17155   9   3033 EndInd 25                             17156   9   3041 Assign 25
           17157   9   3045 Return 25
           17160   9   3047 Call   25 PRINTER_WRITE_ERROR
           17161   9   3053 Call   25                             17163   9   3057 Altret 25 ERROR
           17185   9   3061 Proc   26                             17203   9   3062 Call   26
           17204   9   3064 Call   26                             17205   9   3066 Call   26
           17208   9   3070 Return 26 ERROR                       17227   9   3072 Proc   27
        $$ 17316   9   3073 Assign 27                           $ 17317   9   3077 If     27
           17318   9   3104 Do     27                             17319   9   3104 Assign 27
         $ 17320   9   3107 Assign 27                           $ 17321   9   3115 If     27
           17322   9   3124 Assign 27                             17323   9   3127 Assign 27
           17324   9   3131 Assign 27                             17325   9   3134 Return 27
           17327   9   3135 Do     27                             17328   9   3135 Call   27
           17329   9   3141 Altret 27                             17349   9   3143 Proc   28
        $$ 17374   9   3144 Assign 28                             17375   9   3155 If     28
         $ 17376   9   3157 Assign 28                             17377   9   3165 Assign 28
           17378   9   3167 Assign 28                  $$$$$$$$$$ 17379   9   3174 MonCal 28
           17380   9   3200 Return 28                             17383   9   3202 Call   28 ERROR
           17384   9   3206 Call   28                             17385   9   3212 Altret 28
           17399   9   3214 Proc   29                             17436   9   3215 If     29
           17437   9   3217 Do     29                           $ 17438   9   3217 Assign 29
$$$$$$$$$$ 17439   9   3226 MonCal 29                             17440   9   3232 EndDo  29
           17442   9   3232 Return 29                             17445   9   3234 Call   29 ERROR
           17446   9   3240 Altret 29                             17468   9   3242 Proc   30
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:348  
           17478   9   3243 Call   30                             17479   9   3247 DoIndx 30
       $$$ 17480   9   3251 Call   30                          $$ 17481   9   3261 Call   30
           17482   9   3272 Call   30                             17483   9   3274 EndInd 30
           17485   9   3302 If     30                             17486   9   3304 Do     30
           17487   9   3304 Assign 30                             17488   9   3307 Assign 30
           17489   9   3315 EndDo  30                             17492   9   3315 Return 30 END_PROCESS
           17508   9   3317 Proc   31                             17515   9   3320 Assign 31
           17516   9   3323 DoWhil 31                           $ 17517   9   3324 Assign 31
     $$$$$ 17518   9   3327 EndWhi 31                             17520   9   3350 If     31
           17521   9   3352 Return 31                             17522   9   3354 Do     31
           17523   9   3354 Call   31                             17524   9   3360 Altret 31
           17542   9   3362 Proc   32                           $ 17549   9   3363 Assign 32
     $$$$$ 17550   9   3367 Assign 32                           $ 17551   9   3377 If     32
           17552   9   3404 Assign 32                             17553   9   3407 Assign 32
           17554   9   3411 Assign 32                             17555   9   3414 Return 32
           17576   9   3415 Proc   33                             17622   9   3416 Assign 33
           17623   9   3421 Call   33                             17625   9   3425 Assign 33
         $ 17626   9   3427 Assign 33                  $$$$$$$$$$ 17627   9   3433 MonCal 33
           17629   9   3437 Assign 33                             17630   9   3441 DoIndx 33
       $$$ 17631   9   3444 Assign 33                  $$$$$$$$$$ 17632   9   3452 MonCal 33
           17633   9   3456 EndInd 33                             17635   9   3464 Assign 33
           17636   9   3466 Assign 33                             17637   9   3467 Return 33
           17640   9   3471 Call   33 PRINT_HEADER_ERROR
           17641   9   3475 Call   33                             17642   9   3501 Altret 33
           17659   9   3503 Proc   34                             17814   9   3504 Assign 34
        $$ 17815   9   3506 Assign 34                  $$$$$$$$$$ 17816   9   3514 MonCal 34
           17817   9   3520 Assign 34                           $ 17818   9   3523 Call   34
           17819   9   3532 Return 34
         $ 17822   9   3534 Assign 34 BAD_MESSAGE_FETCH         $ 17823   9   3540 Assign 34
           17824   9   3544 Assign 34                             17826   9   3546 If     34
           17827   9   3551 Assign 34                             17828   9   3555 If     34
           17829   9   3557 Assign 34                             17830   9   3563 If     34
           17831   9   3565 Assign 34                             17832   9   3571 If     34
           17833   9   3573 Assign 34                             17834   9   3577 Assign 34
           17835   9   3601 Return 34                             17855   9   3603 Proc   35
           17939   9   3604 Assign 35                          $$ 17940   9   3606 If     35
         $ 17941   9   3613 Assign 35                             17942   9   3617 Assign 35
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:349  
           17943   9   3622 Assign 35                             17944   9   3625 Assign 35
           17945   9   3627 Assign 35                  $$$$$$$$$$ 17946   9   3632 MonCal 35
           17947   9   3635 Return 35                             17962   9   3637 Proc   36
        $$ 17998   9   3640 If     36                  $$$$$$$$$$ 18000   9   3645 MonCal 36
           18001   9   3651 Return 36                             18004   9   3653 Call   36 PROMPT_ERROR
           18005   9   3657 Call   36                             18006   9   3663 Altret 36
           18031   9   3665 Proc   37                          $$ 18068   9   3666 If     37
           18070   9   3673 Do     37                           $ 18071   9   3673 Assign 37
       $$$ 18072   9   3677 Assign 37                  $$$$$$$$$$ 18073   9   3710 MonCal 37
           18074   9   3714 EndDo  37                             18075   9   3714 Return 37
           18078   9   3716 Call   37 PROMPT_ERROR                18079   9   3722 Call   37
           18080   9   3726 Altret 37                             18096   9   3730 Proc   38
         $ 18120   9   3731 Assign 38                             18121   9   3735 Assign 38
$$$$$$$$$$ 18122   9   3740 MonCal 38                             18123   9   3744 Return 38
           18126   9   3746 Call   38 GET_ERROR                   18127   9   3752 Call   38
           18128   9   3756 Altret 38                             18145   9   3760 Proc   39
         $ 18167   9   3761 Assign 39                             18168   9   3765 Assign 39
$$$$$$$$$$ 18169   9   3770 MonCal 39                             18170   9   3774 Return 39
           18173   9   3776 Call   39 FREE_ERROR                  18174   9   4002 Call   39
           18175   9   4006 Altret 39                             18199   9   4010 Proc   40
       $$$ 18255   9   4011 If     40                             18256   9   4020 Do     40
    $$$$$$ 18257   9   4020 Assign 40                     $$$$$$$ 18258   9   4031 Assign 40
   $$$$$$$ 18259   9   4043 Assign 40                     $$$$$$$ 18260   9   4055 Assign 40
    $$$$$$ 18261   9   4067 Assign 40                       $$$$$ 18262   9   4103 Assign 40
$$$$$$$$$$ 18263   9   4115 MonCal 40                       $$$$$ 18264   9   4121 Assign 40
           18265   9   4133 EndDo  40                             18266   9   4134 If     40
           18268   9   4136 Do     40                             18269   9   4136 Call   40
           18270   9   4142 Assign 40                             18271   9   4144 EndDo  40
           18272   9   4144 Return 40                             18275   9   4146 Altret 40 ERROR
           18295   9   4150 Proc   41                  $$$$$$$$$$ 18339   9   4151 MonCal 41
           18340   9   4155 Do     41                           $ 18341   9   4155 Assign 41
         $ 18342   9   4161 Assign 41                           $ 18343   9   4165 Assign 41
        $$ 18344   9   4171 Assign 41                             18345   9   4177 Return 41
           18348   9   4201 Do     41                             18349   9   4201 Call   41
           18350   9   4205 Call   41                             18351   9   4211 Altret 41


PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:350  
  **** Statement type totals  ****

   130 Assign   125 Call      47 MonCal    46 If        22 Case      67 Return
    43 Altret     7 IntCal     2 Do Sel     2 EndSel     5 Select     6 DoIndx
     1 DoWhil     7 DoCase    36 Do         6 EndInd     1 EndWhi     7 EndCse
    21 EndDo     42 Proc      25 Entry     36 Labels

 # major stmts=  488 Code/major= 4.48 # stmts=  648 Code/stmt= 3.37  Point total=113.1
 Cost/major stmt=  8.6 Cost/stmt=  6.5 Total cost=   4212.2

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$
   6-8  $$$$$$$
  8-10  $$$$
 10-12  $
 12-14  $
 14-16
 16-18
 18-20
 20-22
 22-??  $$$$$$$$
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:351  

 **** Variables and constants ****

  ****  Section 005  Data  TOU$DU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   751-0-0/c STRC(72)    r     1 ACCOUNT_NAME            2216-0-0/c BIT         r     1 ERROR_GIVEN
     1-0-0/c UBIN(9)     r     1 FID_ASN                   46-0-0/c STRC(288)   r     1 FID_NAME
    56-0-0/c STRC(72)    r     1 FID_PASS                   0-0-0/c CHAR(4)     r     1 FID_RES
    60-0-0/d STRC(360)   r     1 FID_SN                    72-0-0/c STRC(72)    r     1 FID_WSN
   746-0-0/c STRC(108)   r     1 FILE_NAME               2234-0-0/d STRC(432)   r     1 GET_SITE
   374-0-0/c STRC(72)    r     1 IFAD_ACCT               1056-0-0/c STRC(72)    r     1 IFAD_ACCT
   765-0-0/c UBIN(9)     r     1 IFAD_DEVICE              364-0-0/c STRC(288)   r     1 IFAD_NAME
  1046-0-0/c STRC(288)   r     1 IFAD_NAME                376-0-0/c STRC(72)    r     1 IFAD_PASS
  1060-0-0/c STRC(72)    r     1 IFAD_PASS                766-0-0/c CHAR(4)     r     1 IFAD_RES
  1034-0-0/d STRC(360)   r     1 IFAD_SN                   74-0-0/c CHAR(40)    r     1 IFAD_TEXT_FID
   753-0-0/c CHAR(40)    r     1 IFAD_TEXT_FID            400-0-0/c STRC(72)    r     1 IFAD_WSN
  1062-0-0/c STRC(72)    r     1 IFAD_WSN                2113-0-0/c STRC(72)    r     1 MSG_ACCT
  2103-0-0/c STRC(288)   r     1 MSG_NAME

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

   710-0-0/d STRC(1080)  r     1 CLOSE_CONFIG
   742-0-0/d STRC(144)   r         2 V

   412-0-0/d STRC(1080)  r     1 CLOSE_IFAD
   444-0-0/d STRC(144)   r         2 V

   542-0-0/d STRC(1080)  r     1 CLOSE_LO
   574-0-0/d STRC(144)   r         2 V

  1174-0-0/d STRC(2088)  r     1 CREATE_NEW_FID
  1240-0-0/d STRC(756)   r         2 V

  1102-0-0/d STRC(2088)  r     1 CREATE_OVER_FID
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:352  
  1146-0-0/d STRC(756)   r         2 V

  2250-0-0/d STRC(2232)  r     1 CUSTOMER
  2251-0-0/w STRC(1080)  r         2 SITE_NAME#
  2251-0-0/b UBIN(9)     r          3 L
  2251-1-0/c CHAR(119)   r          3 C
  2336-0-0/c CHAR(6)     r         2 SITE_ID#
  2337-2-0/b UBIN(9)     r         2 CPU_TYPE#

  1510-0-0/d STRC(1080)  r     1 DISCARD_DECKFILE
  1542-0-0/d STRC(144)   r         2 V

  2154-0-0/w STRC        r     1 ERROR_CODE
  2154-3-6/b UBIN(3)     r         2 SEV

  2116-0-0/d STRC(144)   r     1 FETCH_STATS
  2116-0-0/b BIT         r         2 BADCALL
  2116-0-1/b BIT         r         2 NOFILE
  2116-0-2/b BIT         r         2 NOMSG
  2116-0-8/b BIT         r         2 BUFERR
  2116-3-0/b UBIN(9)     r         2 RECCNT

    44-0-0/c STRC(72)    r     1 FID_ACCT
    44-0-0/c CHAR(8)     r         2 ACCT#

    14-0-0/d STRC(864)   r     1 FID_INFO
    16-0-0/b BIT (72)    r         2 TEXTFID_
    40-0-0/d STRC(108)   r         2 V

     2-0-0/d STRC(324)   r     1 FID_RESULTS
     2-0-1/b BIT         r         2 ACCT

  2210-0-0/d STRC(216)   r     1 FREE_BUFFER
  2212-0-0/b BIT (72)    r         2 RESULTS_
  2214-0-0/d STRC        r         2 V
  2214-2-0/b UBIN(18)    r          3 SEGSIZE#

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:353  
  1574-0-0/d STRC(504)   r     1 FROM_USER
  1600-0-0/w STRC(72)    r         2 BUF_
  1600-0-0/b UBIN(20)    r          3 BOUND
  1604-0-0/d STRC(216)   r         2 V

  2202-0-0/d STRC(216)   r     1 GET_BUFFER
  2204-0-0/b BIT (72)    r         2 RESULTS_
  2206-0-0/d STRC        r         2 V
  2206-2-0/b UBIN(18)    r          3 SEGSIZE#

  2000-0-0/c STRC(999)   r     1 HL
  2000-0-0/c CHAR        r         2 CARRIAGE_CONTROL
  2000-1-0/c CHAR(110)   r         2 TEXT_LINE_

   200-0-0/d STRC(2088)  r     1 IFAD_DISK_FILE
   244-0-0/d STRC(756)   r         2 V
   245-3-0/b UBIN(9)     r          3 ASN#
   250-0-0/c CHAR(4)     r          3 RES#

   352-0-0/d STRC(360)   r     1 IFAD_SN
   352-0-0/w SBIN        r         2 NUM#

   106-0-0/d STRC(2088)  r     1 IFAD_TAPE_DEVICE
   152-0-0/d STRC(756)   r         2 V
   153-3-0/b UBIN(9)     r          3 ASN#
   156-0-0/c CHAR(4)     r          3 RES#

  1070-0-0/d STRC(360)   r     1 INIT_MCA
  1072-0-0/b BIT (72)    r         2 DCWLIST_
  1076-0-0/d STRC(144)   r         2 V

  1064-0-0/d STRC(144)   r     1 MCA_FINISHED
  1066-0-0/d STRC(18)    r         2 V

   770-0-0/d STRC(432)   r     1 MCA_FOR_INPUT
  1000-0-0/d STRC(144)   r         2 V
  1000-2-0/b STRC(18)    r          3 DEVICE
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:354  
  1000-2-6/b UBIN(3)     r           4 IOM#
  1002-0-0/b UBIN(6)     r          3 TEST#

  2102-0-0/w STRC        r     1 MESSAGE_CODE
  2102-2-1/b UBIN(14)    r         2 ERR#

  2050-0-0/d STRC(936)   r     1 MESSAGE_FETCH
  2054-0-0/b BIT (72)    r         2 BUF_
  2076-0-0/d STRC(144)   r         2 V

  1764-0-0/d STRC(432)   r     1 MSG_RESP
  1770-0-0/w STRC(72)    r         2 BUF_
  1774-0-0/d STRC(144)   r         2 V

   402-0-0/d STRC(288)   r     1 NEXT_IFAD
   410-0-0/d STRC(72)    r         2 V

  2156-0-0/d STRC(360)   r     1 ON_LINE
  2164-0-0/d STRC(144)   r         2 V

   600-0-0/d STRC(2088)  r     1 OPEN_CONFIG
   644-0-0/d STRC(756)   r         2 V

   450-0-0/d STRC(2088)  r     1 OPEN_LO
   514-0-0/d STRC(756)   r         2 V
   514-3-0/b UBIN(2)     r          3 EXIST#
   515-2-0/b UBIN(9)     r          3 FUN#
   515-3-0/b UBIN(9)     r          3 ASN#
   520-0-0/c CHAR(4)     r          3 RES#

  1626-0-0/c STRC(999)   r     1 PL
  1626-0-0/c CHAR        r         2 CARRIAGE_CONTROL
  1626-1-0/c CHAR(110)   r         2 TEXT_LINE_

  1676-0-0/c STRC(999)   r     1 PL
  1676-0-0/c CHAR        r         2 CARRIAGE_CONTROL
  1676-1-0/c CHAR(110)   r         2 TEXT_LINE_
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:355  

   672-0-0/d STRC(504)   r     1 READ_CONFIG
   674-0-0/w STRC(72)    r         2 KEY_
   676-0-0/w STRC(72)    r         2 BUF_
   702-0-0/d STRC(216)   r         2 V

  1360-0-0/d STRC(2088)  r     1 READ_FID
  1424-0-0/d STRC(756)   r         2 V

  1452-0-0/d STRC(1080)  r     1 SAVE_DECKFILE
  1504-0-0/d STRC(144)   r         2 V

  1746-0-0/d STRC(504)   r     1 SEND_MSG
  1750-0-0/w STRC(72)    r         2 MESS_
  1752-0-0/w STRC(72)    r         2 REPLY_
  1754-0-0/b BIT (72)    r         2 RESULTS_
  1756-0-0/d STRC(216)   r         2 V

   322-0-0/d STRC(864)   r     1 SETUP_IFAD_DISK
   346-0-0/d STRC(108)   r         2 V

  1004-0-0/d STRC(864)   r     1 SETUP_IFAD_IMU
  1030-0-0/d STRC(108)   r         2 V

   272-0-0/d STRC(864)   r     1 SETUP_IFAD_TAPE
   316-0-0/d STRC(108)   r         2 V

  2170-0-0/d STRC(360)   r     1 SET_PROMPT
  2174-0-0/d VECT        r         2 PROMPT_
  2176-0-0/d STRC(144)   r         2 V

  2220-0-0/d STRC(432)   r     1 STORE_WHEN
  2222-0-0/w STRC(72)    r         2 DATE_
  2224-0-0/w STRC(72)    r         2 TIME_
  2232-0-0/d STRC        r         2 V

  2122-0-0/d STRC(936)   r     1 SYSTEM_ERRMSG
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:356  
  2126-0-0/b BIT (72)    r         2 BUF_
  2150-0-0/d STRC(144)   r         2 V
  2150-0-0/b UBIN(18)    r          3 DCB#
  2151-2-0/b UBIN(9)     r          3 FLAGLEV#

  1662-0-0/d STRC(432)   r     1 TO_PRINTER
  1672-0-0/d STRC(144)   r         2 V

  1732-0-0/d STRC(432)   r     1 TO_PRINTER
  1742-0-0/d STRC(144)   r         2 V

  2034-0-0/d STRC(432)   r     1 TO_PRINTER
  2044-0-0/d STRC(144)   r         2 V

  1612-0-0/d STRC(432)   r     1 TO_USER
  1616-0-0/w STRC(72)    r         2 BUF_
  1622-0-0/d STRC(144)   r         2 V

  1546-0-0/d STRC(792)   r     1 UNFID_DCB
  1550-0-0/b BIT (72)    r         2 TEXTFID_
  1570-0-0/b BIT (72)    r         2 LEN_
  1572-0-0/d STRC        r         2 V
  1572-0-0/b UBIN(18)    r          3 DCB#

  1266-0-0/d STRC(2088)  r     1 UPDATE_FID
  1332-0-0/d STRC(756)   r         2 V


  ****  Section 008 RoData TOU$DU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18)    r     1 HEAD_KEY                   1-0-0/c CHAR(3)     r     1 THREE_QUESTION_MARKS

  ****  Auto variables  ****

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:357  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    61-0-0/w PTR         r     1 @BATCH_RUN                61-0-0/w PTR         r     1 @BATCH_RUN
    62-0-0/w PTR         r     1 @CATALOG_ID               61-0-0/w PTR         r     1 @CMD$
    61-0-0/w PTR         r     1 @COMMAND                  64-0-0/w PTR         r     1 @CPU_TYPE
    73-0-0/w PTR         r     1 @DCB_NUM                  63-0-0/w PTR         r     1 @DECK_ID
    65-0-0/w PTR         r     1 @DEVICE_INPUT             61-0-0/w PTR         r     1 @DEVICE_INPUT
    61-0-0/w PTR         r     1 @DF_CLOSE_TYPE            61-0-0/w PTR         r     1 @DF_ENTERED
    61-0-0/w PTR         r     1 @DF_ENTERED               64-0-0/w PTR         r     1 @DF_FID
    62-0-0/w PTR         r     1 @DF_FID                   65-0-0/w PTR         r     1 @DF_FID_LGTH
    63-0-0/w PTR         r     1 @DF_FID_LGTH              66-0-0/w PTR         r     1 @DF_NO_EXIST
    64-0-0/w PTR         r     1 @DF_OPEN_TYPE             65-0-0/w PTR         r     1 @DF_REPORT_ERROR
    77-0-0/w PTR         r     1 @ENTERED_FID             100-0-0/w PTR         r     1 @ENTERED_LGTH
   125-0-0/w PTR         r     1 @FAULT_ERROR              67-0-0/w PTR         r     1 @HDR_CODE
    62-0-0/w PTR         r     1 @HELD_DF                  63-0-0/w PTR         r     1 @HELD_DF_LGTH
    63-0-0/w PTR         r     1 @HELD_IFAD                64-0-0/w PTR         r     1 @HELD_IFAD_LGTH
    73-0-0/w PTR         r     1 @IFAD_ASN                 62-0-0/w PTR         r     1 @IFAD_ENTERED
    66-0-0/w PTR         r     1 @IFAD_FID                 62-0-0/w PTR         r     1 @IFAD_FID
    61-0-0/w PTR         r     1 @IFAD_FID                 61-0-0/w PTR         r     1 @IFAD_FID
    67-0-0/w PTR         r     1 @IFAD_FID_LGTH            63-0-0/w PTR         r     1 @IFAD_FID_LGTH
    62-0-0/w PTR         r     1 @IFAD_FID_LGTH            64-0-0/w PTR         r     1 @IFAD_ID
    63-0-0/w PTR         r     1 @IFAD_IMU_NUMBER          74-0-0/w PTR         r     1 @IFAD_RES
    62-0-0/w PTR         r     1 @IMU                      61-0-0/w PTR         r     1 @IMU#
    66-0-0/w PTR         r     1 @INDX                     75-0-0/w PTR         r     1 @LENGTH
    66-0-0/w PTR         r     1 @LENGTH                   62-0-0/w PTR         r     1 @LGTH
    63-0-0/w PTR         r     1 @LGTH                     65-0-0/w PTR         r     1 @LINE_NUMBER
    61-0-0/w PTR         r     1 @LO_FID                   61-0-0/w PTR         r     1 @ME_ALLOWED
   121-0-0/w PTR         r     1 @MSG_CODE                 61-0-0/w PTR         r     1 @MSG_CODE
    61-0-0/w PTR         r     1 @MSG_CODE                 61-0-0/w PTR         r     1 @MSG_CODE
   125-0-0/w PTR         r     1 @MSG_CODE                 64-0-0/w PTR         r     1 @NUM_VOLUMES
    62-0-0/w PTR         r     1 @OPEN_TYPE                62-0-0/w PTR         r     1 @PROMPT_BUFFER
    61-0-0/w PTR         r     1 @RESPONSE                 63-0-0/w PTR         r     1 @SITE_ID
    61-0-0/w PTR         r     1 @SITE_NAME                62-0-0/w PTR         r     1 @SITE_NAME_LGTH
    74-0-0/w PTR         r     1 @STRING                  101-0-0/w PTR         r     1 @TARGET_FID
   102-0-0/w PTR         r     1 @TARGET_LGTH              65-0-0/w PTR         r     1 @TEXT_BUF
    73-0-0/w PTR         r     1 @TEXT_FID                 61-0-0/w PTR         r     1 @WORD_COUNT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:358  
    61-0-0/w PTR         r     1 @WORD_COUNT               62-0-0/w PTR         r     1 @WORD_VECTOR
    62-0-0/w PTR         r     1 @WORD_VECTOR             104-0-0/w UBIN        r     1 ACCT_LGTH
   126-0-0/w PTR         r     1 ALT$                      *0-0-0/c BIT         r     1 BATCH_RUN
    *0-0-0/c BIT         r     1 BATCH_RUN                 *0-0-0/c CHAR(21)    r     1 CATALOG_ID
    *0-0-0/w PTR         r     1 CMD$                      *0-0-0/w UBIN        r     1 COMMAND
    *0-0-0/w UBIN(9)     r     1 CPU_TYPE                  70-0-0/w PTR         r     1 DCB$
    *0-0-0/w UBIN        r     1 DCB_NUM                   *0-0-0/c CHAR(23)    r     1 DECK_ID
    *0-0-0/c BIT         r     1 DEVICE_INPUT              *0-0-0/c BIT         r     1 DEVICE_INPUT
    *0-0-0/w UBIN        r     1 DF_CLOSE_TYPE             *0-0-0/c BIT         r     1 DF_ENTERED
    *0-0-0/c BIT         r     1 DF_ENTERED                *0-0-0/c CHAR(40)    r     1 DF_FID
    *0-0-0/c CHAR(40)    r     1 DF_FID                    *0-0-0/w UBIN        r     1 DF_FID_LGTH
    *0-0-0/w UBIN        r     1 DF_FID_LGTH               *0-0-0/c BIT         r     1 DF_NO_EXIST
    *0-0-0/w UBIN        r     1 DF_OPEN_TYPE              *0-0-0/c BIT         r     1 DF_REPORT_ERROR
   103-0-0/w UBIN        r     1 DOT_INX                   *0-0-0/c CHAR(40)    r     1 ENTERED_FID
    *0-0-0/w UBIN        r     1 ENTERED_LGTH              *0-0-0/c BIT         r     1 FAULT_ERROR
    *0-0-0/w UBIN        r     1 HDR_CODE                  *0-0-0/c CHAR(40)    r     1 HELD_DF
    *0-0-0/w UBIN        r     1 HELD_DF_LGTH              *0-0-0/c CHAR(40)    r     1 HELD_IFAD
    *0-0-0/w UBIN        r     1 HELD_IFAD_LGTH            64-0-0/w UBIN        r     1 I
    62-0-0/d BIT         r     1 IDCW                      *0-0-0/h UBIN(9)     r     1 IFAD_ASN
    *0-0-0/c BIT         r     1 IFAD_ENTERED              *0-0-0/c CHAR(40)    r     1 IFAD_FID
    *0-0-0/c CHAR(40)    r     1 IFAD_FID                  *0-0-0/c CHAR(40)    r     1 IFAD_FID
    *0-0-0/c CHAR(40)    r     1 IFAD_FID                  *0-0-0/w UBIN        r     1 IFAD_FID_LGTH
    *0-0-0/w UBIN        r     1 IFAD_FID_LGTH             *0-0-0/w UBIN        r     1 IFAD_FID_LGTH
    *0-0-0/c CHAR(40)    r     1 IFAD_ID                   *0-0-0/w UBIN        r     1 IFAD_IMU_NUMBER
    *0-0-0/c CHAR(4)     r     1 IFAD_RES                  *0-0-0/w UBIN        r     1 IMU
    *0-0-0/w UBIN        r     1 IMU#                      63-0-0/w SBIN        r     1 INDX
    *0-0-0/w SBIN        r     1 INDX                      64-0-0/w UBIN        r     1 LAST_LINE
    64-0-0/w UBIN        r     1 LAST_LINE                 *0-0-0/w UBIN        r     1 LENGTH
    *0-0-0/w UBIN        r     1 LENGTH                    *0-0-0/w UBIN        r     1 LGTH
    *0-0-0/w UBIN        r     1 LGTH                     122-0-0/w UBIN        r     1 LINE_NUMBER
    62-0-0/w UBIN        r     1 LINE_NUMBER               62-0-0/w UBIN        r     1 LINE_NUMBER
    62-0-0/w UBIN        r     1 LINE_NUMBER               *0-0-0/w UBIN        r     1 LINE_NUMBER
    70-0-0/w UBIN        r     1 LINE_NUMBER               44-0-0/c CHAR(40)    r     1 LO_FID
    *0-0-0/c CHAR(40)    r     1 LO_FID                    56-0-0/w UBIN        r     1 LO_FID_LGTH
    *0-0-0/c BIT         r     1 ME_ALLOWED                *0-0-0/w UBIN        r     1 MSG_CODE
    *0-0-0/w UBIN        r     1 MSG_CODE                  *0-0-0/w UBIN        r     1 MSG_CODE
    *0-0-0/w UBIN        r     1 MSG_CODE                  *0-0-0/w UBIN        r     1 MSG_CODE
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:359  
    *0-0-0/w UBIN        r     1 NUM_VOLUMES               *0-0-0/w UBIN        r     1 OPEN_TYPE
    63-0-0/w PTR         r     1 OUTBLK$                   *0-0-0/c CHAR(110)   r     1 PROMPT_BUFFER
    *0-0-0/c CHAR(40)    r     1 RESPONSE                  64-0-0/c CHAR(110)   r     1 SET_PROMPT_ITEM
    *0-0-0/c CHAR(6)     r     1 SITE_ID                   *0-0-0/c CHAR(119)   r     1 SITE_NAME
    *0-0-0/c UBIN(9)     r     1 SITE_NAME_LGTH            63-0-0/w UBIN        r     1 SKIPPED
    63-0-0/w UBIN        r     1 SKIPPED                   *0-0-0/c CHAR(40)    r     1 STRING
    *0-0-0/c CHAR(40)    r     1 TARGET_FID                *0-0-0/w UBIN        r     1 TARGET_LGTH
    62-0-0/w PTR         r     1 TD$HEAD$                  *0-0-0/c CHAR        r     1 TEXT_BUF(0:119)
    *0-0-0/c CHAR(40)    r     1 TEXT_FID                  *0-0-0/h UBIN(18)    r     1 WORD_COUNT
    *0-0-0/h UBIN(18)    r     1 WORD_COUNT                *0-0-0/d BIT (72)    r     1 WORD_VECTOR
    *0-0-0/d BIT (72)    r     1 WORD_VECTOR

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(1188)  r     1 BUFFER
     3-0-0/c BIT         r         2 REPLY_PENDING
     3-1-0/c UBIN(9)     r         2 LGTH
     3-2-0/c CHAR(120)   r         2 TEXT_
     3-2-0/c CHAR        r         2 TEXT(0:119)
    42-0-0/w STRC(72)    r         2 REPLY
    43-0-0/w UBIN        r          3 LGTH

    64-0-0/w STRC(72)    r     1 STATUS
    64-0-2/b BIT (4)     r         2 MAJOR
    64-0-7/b BIT (5)     r         2 SUB


  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:360  

     0-0-0/d STRC(5220)  r     1 DUP
     0-0-0/c BIT         r         2 BATCH_MODE
     0-2-0/c BIT         r         2 FAULT_ERROR
     1-0-0/h UBIN(18)    r         2 NUM_WORDS
     2-0-0/d BIT (72)    r         2 DS_V
     4-0-0/c CHAR(40)    r         2 RESPONSE
    16-0-0/w UBIN        r         2 RESPONSE_LGTH
    17-0-0/w PTR         r         2 CMD$
    20-0-0/w UBIN        r         2 MSG_CODE
    21-0-0/w UBIN        r         2 HDR_CODE
    22-0-0/w UBIN        r         2 NUM_LINES
    24-0-0/d STRC(72)    r         2 MSG_V
    25-0-0/b PTR         r          3 PTR$
    26-0-0/c CHAR        r         2 LINE_VFC
    27-0-0/w UBIN        r         2 CURRENT_PAGE#
    30-0-0/w UBIN        r         2 CURRENT_LINE#
    31-0-0/w UBIN        r         2 BOTTOM_LINE#
    56-0-0/c BIT         r         2 FORCE_NEW_PAGE
    57-0-0/w STRC(576)   r         2 IFAD
    57-0-0/c BIT         r          3 ME_ALLOWED
    57-1-0/c BIT         r          3 ENTERED
    57-2-0/c BIT         r          3 DEVICE_INPUT
    61-0-0/w UBIN        r          3 NUM_VOLUMES
    62-0-0/w UBIN        r          3 IMU_NUMBER
    63-1-0/c CHAR(40)    r          3 FID
    76-0-0/w UBIN        r          3 FID_LGTH
   102-0-0/d STRC(72)    r         2 BCD_V
   103-0-0/b PTR         r          3 PTR$
   104-0-0/w STRC(504)   r         2 DF
   104-0-0/c BIT         r          3 ENTERED
   104-1-0/c BIT         r          3 NO_EXIST
   104-2-0/c BIT         r          3 REPORT_ERROR
   105-0-0/w UBIN        r          3 OPEN_TYPE
   106-0-0/w UBIN        r          3 CLOSE_TYPE
   107-0-0/c CHAR(40)    r          3 FID
   121-0-0/w UBIN        r          3 FID_LGTH
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:361  
   122-0-0/w STRC(432)   r         2 LOG
   122-0-0/w UBIN        r          3 TYPE
   123-0-0/c CHAR(21)    r          3 CATALOG
   130-1-0/c CHAR(23)    r          3 DECK
   136-0-0/d STRC(72)    r         2 LOG_V
   137-0-0/b PTR         r          3 PTR$
   140-0-0/w STRC(72)    r         2 TEMP
   140-0-0/w UBIN        r          3 OPEN_TYPE
   142-0-0/c CHAR(40)    r         2 HOLD_AREA
   154-0-0/w UBIN        r         2 HOLD_AREA_LGTH
   160-0-0/c STRC(1080)  r         2 SITE_NAME
   160-0-0/c UBIN(9)     r          3 LGTH
   160-1-0/c CHAR(119)   r          3 TEXT
   216-0-0/c CHAR(6)     r         2 SITE_ID
   220-0-0/w UBIN(9)     r         2 CPU_TYPE


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 HEAD_BUFFER(0:2000)
     0-0-0N  NULL        r     1 M$DECKFILE                 0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$IFAD                     0-0-0N  NULL        r     1 M$MERGE
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$UC
     0-0-0/c CHAR(120)   r     1 MSG_B(0:19)                0-0-0/c CHAR(120)   r     1 MSG_B(0:19)
     0-0-0/c CHAR(120)   r     1 MSG_B(0:19)                0-0-0/c CHAR(120)   r     1 MSG_B(0:19)
     0-0-0/c CHAR(120)   r     1 MSG_B(0:19)                0-0-0/c CHAR(120)   r     1 MSG_B(0:19)
     0-0-0/c CHAR(2400)  r     1 MSG_B_

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT
   101-0-0/w UBIN        r         2 DCB#
   102-0-0/b STRC        r         2 ERR
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:362  
   102-2-1/b UBIN(14)    r          3 ERR#

     0-0-0/d STRC(8856)  r     1 B$JIT
     6-0-0/c CHAR(8)     r         2 FACCN

     0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w PTR         r         2 ALT$
     1-0-0/w PTR         r         2 STK$

     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w SBIN        r         2 ARS#
     4-0-0/b STRC(18)    r         2 FFLG
     4-0-2/b BIT         r          3 WNEW#
     4-0-3/b BIT         r          3 UPD#
    26-0-0/c CHAR(4)     r         2 RES#
    31-2-4/b BIT         r         2 FCD#
    31-2-5/b BIT         r         2 AMR#
    32-2-0/b UBIN(9)     r         2 ASN#
    44-0-0/b UBIN(18)    r         2 LINES#
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L

     0-0-0/d ASTR(3528)  r     1 F$DCB
    27-0-0/b BIT (72)    r         2 TDSTAT#
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L

     0-0-0/c STRC(18665) r     1 LOG_B
     0-0-0/c UBIN(9)     r         2 COUNT
     0-1-0/c STRC(936)   r         2 ACCESSES(0:299)
     0-1-0/c UBIN(9)     r          3 TYPE
     0-2-0/c CHAR(8)     r          3 DATE
     2-2-0/c CHAR(11)    r          3 TIME
     5-1-0/c CHAR(21)    r          3 CATALOG
    12-2-0/c CHAR(23)    r          3 DECK
    20-1-0/c CHAR(40)    r          3 IFAD

PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:363  
     0-0-0/d ASTR(3528)  r     1 M$LO
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L

     0-0-0/w STRC(144)   r     1 OUT$BLK
     3-0-0/b PTR         r         2 SUBLK$(0:0)

     0-0-0/w ASTR(153)   r     1 OUT$SYM
     4-0-0/c UBIN(9)     r         2 COUNT
     4-1-0/c ACHR        r         2 TEXT

     0-0-0/w STRC(648)   r     1 TD$HEAD
     0-2-0/b UBIN(18)    r         2 NUMIOMS



   Procedure TOU$DU requires 2187 words for executable code.
   Procedure TOU$DU requires 94 words of local(AUTO) storage.

    No errors detected in file TOU$DU.:E05TSI    .
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:364  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:365  
          MINI XREF LISTING

ACCOUNT_NAME IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15402**DCL     15237--DCLINIT
ACCT_LGTH IN PROCEDURE DU_SET_FULL_FID
     16677**DCL     16697<<CALLBLT 16698>>ASSIGN  16705<<CALLBLT 16706>>ASSIGN
ALT$ IN PROCEDURE DU_SYSTEM_ERRMSG
     17858**DCL     17941<<ASSIGN  17942<<ASSIGN  17943>>ASSIGN  17944>>ASSIGN
B$ALT.CODE
     13598**DCL     13598--REDEF   13599--REDEF   13599--REDEF
B$ALT.DCB#
     13599**DCL     17944>>ASSIGN
B$ALT.ERR
     13599**DCL     17943>>ASSIGN
B$ALT.ERR.ERR#
     13600**DCL     13600--REDEF   14662>>IF      16506>>DOCASE
B$ALT.EVID
     13599**DCL     13599--REDEF   13599--REDEF
B$JIT.CPFLAGS1.SLEAZE
       530**DCL       530--REDEF
B$JIT.ERR.MID
       437**DCL       437--REDEF
B$JIT.FACCN
       436**DCL     16694>>CALLBLT 16697>>CALLBLT 16701>>CALLBLT 16705>>CALLBLT 16738>>ASSIGN
B$JIT.JRESPEAK
       598**DCL       599--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       707**DCL       707--REDEF     708--REDEF
B$JIT.PNR
       611**DCL       611--REDEF
B$JIT.TSLINE
       705**DCL       706--REDEF
B$JIT$
     13371**DCL       431--IMP-PTR 16694>>CALLBLT 16697>>CALLBLT 16701>>CALLBLT 16705>>CALLBLT 16738>>ASSIGN
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:366  
B$TCB.ALT$
     13594**DCL     14662>>IF      16506>>DOCASE  17942>>ASSIGN
B$TCB.STK$
     13594**DCL     17941>>ASSIGN
B$TCB$
     13372**DCL     14662>>IF      16506>>DOCASE  17941>>ASSIGN  17942>>ASSIGN
BAD_MESSAGE_FETCH IN PROCEDURE DU_FETCH_TEXT
     17822**LABEL   17816--CALLALT
BATCH_RUN IN PROCEDURE DU_SET_EDIT_PROMPT
     17964**DCL     17962--PROC    17998>>IF
BATCH_RUN IN PROCEDURE DU_SET_PROMPT
     18033**DCL     18031--PROC    18068>>IF
BUFFER.LGTH
     13220**DCL     17319<<ASSIGN  17321>>IF      17374>>ASSIGN  17549<<ASSIGN
BUFFER.REPLY
     13223**DCL     17324<<ASSIGN  17378--ASSIGN  17554<<ASSIGN
BUFFER.REPLY.LGTH
     13225**DCL     17438>>ASSIGN  17488>>ASSIGN
BUFFER.REPLY_PENDING
     13219**DCL     17322<<ASSIGN  17323<<ASSIGN  17375>>IF      17436>>IF      17485>>IF      17552<<ASSIGN
     17553<<ASSIGN
BUFFER.TEXT
     13222**DCL     17321>>IF      17551>>IF
BUFFER.TEXT_
     13221**DCL     13222--REDEF   17320<<ASSIGN  17374--ASSIGN  17376--ASSIGN  17438--ASSIGN  17487>>ASSIGN
     17550<<ASSIGN
CATALOG_ID IN PROCEDURE DU_UPDATE_LOG
     18202**DCL     18199--PROC    18258>>ASSIGN
CLOSE_CONFIG IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15342**DCL     15411<>CALL    15423<>CALL
CLOSE_CONFIG.SN_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15342**DCL     15342--REDEF
CLOSE_CONFIG.UTL_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15343**DCL     15343--REDEF
CLOSE_CONFIG.V IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15347**DCL     15342--DCLINIT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:367  
CLOSE_CONFIG.V.EXPIRE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15357**DCL     15357--REDEF
CLOSE_CONFIG.V.TYPE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15355**DCL     15355--REDEF
CLOSE_CONFIG.V.XTNSIZE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15352**DCL     15352--REDEF   15354--REDEF
CLOSE_ERR IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15029**LABEL   15024--CALLALT
CLOSE_ERROR IN PROCEDURE DU_CLOSE_DF
     16645**LABEL   16640--CALLALT 16642--CALLALT
CLOSE_ERROR IN PROCEDURE DU_CLOSE_IFAD
     14783**LABEL   14778--CALLALT
CLOSE_IFAD IN PROCEDURE DU_CLOSE_IFAD
     14755**DCL     14778<>CALL
CLOSE_IFAD.SN_ IN PROCEDURE DU_CLOSE_IFAD
     14755**DCL     14755--REDEF
CLOSE_IFAD.UTL_ IN PROCEDURE DU_CLOSE_IFAD
     14756**DCL     14756--REDEF
CLOSE_IFAD.V IN PROCEDURE DU_CLOSE_IFAD
     14760**DCL     14755--DCLINIT
CLOSE_IFAD.V.EXPIRE# IN PROCEDURE DU_CLOSE_IFAD
     14770**DCL     14770--REDEF
CLOSE_IFAD.V.TYPE# IN PROCEDURE DU_CLOSE_IFAD
     14768**DCL     14768--REDEF
CLOSE_IFAD.V.XTNSIZE# IN PROCEDURE DU_CLOSE_IFAD
     14765**DCL     14765--REDEF   14767--REDEF
CLOSE_LO IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15001**DCL     15024<>CALL
CLOSE_LO.SN_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15001**DCL     15001--REDEF
CLOSE_LO.UTL_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15002**DCL     15002--REDEF
CLOSE_LO.V IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15006**DCL     15001--DCLINIT
CLOSE_LO.V.EXPIRE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15016**DCL     15016--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:368  
CLOSE_LO.V.TYPE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15014**DCL     15014--REDEF
CLOSE_LO.V.XTNSIZE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15011**DCL     15011--REDEF   15013--REDEF
CMD$ IN PROCEDURE DU_OPERATOR_WRITE
     17187**DCL     17185--PROC    17316>>ASSIGN
COMMAND IN PROCEDURE DU_UPDATE_LOG
     18201**DCL     18199--PROC    18257>>ASSIGN
CPU_TYPE IN PROCEDURE DU_GET_SITE
     18300**DCL     18295--PROC    18344<<ASSIGN
CREATE_NEW_FID IN PROCEDURE DU_OPEN_DF
     16163**DCL     16466<>CALL
CREATE_NEW_FID.ACSVEH_ IN PROCEDURE DU_OPEN_DF
     16165**DCL     16166--REDEF
CREATE_NEW_FID.ALTKEYS_ IN PROCEDURE DU_OPEN_DF
     16171**DCL     16172--REDEF   16172--REDEF
CREATE_NEW_FID.HDR_ IN PROCEDURE DU_OPEN_DF
     16170**DCL     16171--REDEF
CREATE_NEW_FID.TAB_ IN PROCEDURE DU_OPEN_DF
     16169**DCL     16170--REDEF
CREATE_NEW_FID.UHL_ IN PROCEDURE DU_OPEN_DF
     16163**DCL     16164--REDEF   16164--REDEF
CREATE_NEW_FID.V IN PROCEDURE DU_OPEN_DF
     16172**DCL     16163--DCLINIT
CREATE_NEW_FID.V.FSN# IN PROCEDURE DU_OPEN_DF
     16203**DCL     16203--REDEF   16203--REDEF
CREATE_NEW_FID.WSN_ IN PROCEDURE DU_OPEN_DF
     16169**DCL     16169--REDEF
CREATE_OVER_FID IN PROCEDURE DU_OPEN_DF
     16035**DCL     16467<>CALL    16468<>CALL
CREATE_OVER_FID.ACSVEH_ IN PROCEDURE DU_OPEN_DF
     16037**DCL     16038--REDEF
CREATE_OVER_FID.ALTKEYS_ IN PROCEDURE DU_OPEN_DF
     16043**DCL     16044--REDEF   16044--REDEF
CREATE_OVER_FID.HDR_ IN PROCEDURE DU_OPEN_DF
     16042**DCL     16043--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:369  
CREATE_OVER_FID.TAB_ IN PROCEDURE DU_OPEN_DF
     16041**DCL     16042--REDEF
CREATE_OVER_FID.UHL_ IN PROCEDURE DU_OPEN_DF
     16035**DCL     16036--REDEF   16036--REDEF
CREATE_OVER_FID.V IN PROCEDURE DU_OPEN_DF
     16044**DCL     16035--DCLINIT
CREATE_OVER_FID.V.FSN# IN PROCEDURE DU_OPEN_DF
     16075**DCL     16075--REDEF   16075--REDEF
CREATE_OVER_FID.WSN_ IN PROCEDURE DU_OPEN_DF
     16041**DCL     16041--REDEF
CUSTOMER IN PROCEDURE DU_GET_SITE
     18328**DCL     18313--DCLINIT
CUSTOMER.CPU_TYPE# IN PROCEDURE DU_GET_SITE
     18332**DCL     18344>>ASSIGN
CUSTOMER.SITE_ID# IN PROCEDURE DU_GET_SITE
     18332**DCL     18343>>ASSIGN
CUSTOMER.SITE_NAME#.C IN PROCEDURE DU_GET_SITE
     18329**DCL     18341>>ASSIGN
CUSTOMER.SITE_NAME#.L IN PROCEDURE DU_GET_SITE
     18329**DCL     18342>>ASSIGN
CVOL_ERROR IN PROCEDURE DU_NEXT_IFAD
     14710**LABEL   14706--CALLALT
DCB$ IN PROCEDURE DU_SET_IFAD_FID
     14130**DCL     14134<<ASSIGN  14142>>IF      14146>>CALL    14146>>CALL
DCB_NUM IN PROCEDURE DU_UNFID_DCB
     16761**DCL     16759--PROC    16787>>ASSIGN
DECK_ID IN PROCEDURE DU_UPDATE_LOG
     18203**DCL     18199--PROC    18259>>ASSIGN
DEVICE_INPUT IN PROCEDURE DU_OPEN_IFAD
     14234**DCL     14229--PROC    14647>>IF
DEVICE_INPUT IN PROCEDURE DU_SET_IFAD_FID
     14127**DCL     14115--PROC    14187<<ASSIGN  14203<<ASSIGN
DF_CLOSE_TYPE IN PROCEDURE DU_CLOSE_DF
     16544**DCL     16542--PROC    16638>>DOCASE
DF_ENTERED IN PROCEDURE DU_OPEN_DF
     15943**DCL     15936--PROC    16464>>IF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:370  
DF_ENTERED IN PROCEDURE DU_SET_DF_FID
     15809**DCL     15803--PROC    15817>>IF
DF_FID IN PROCEDURE DU_OPEN_DF
     15944**DCL     15936--PROC    16461<>CALL
DF_FID IN PROCEDURE DU_SET_DF_FID
     15812**DCL     15803--PROC    15823<<ASSIGN  15857<>CALL    15862<<ASSIGN  15870<<ASSIGN  15896<>CALL
DF_FID_LGTH IN PROCEDURE DU_OPEN_DF
     15945**DCL     15936--PROC
DF_FID_LGTH IN PROCEDURE DU_SET_DF_FID
     15813**DCL     15803--PROC    15824<<ASSIGN  15857<>CALL    15863<<ASSIGN  15871<<ASSIGN  15896<>CALL
DF_NO_EXIST IN PROCEDURE DU_OPEN_DF
     15948**DCL     15936--PROC    16465>>IF
DF_OPEN_TYPE IN PROCEDURE DU_OPEN_DF
     15946**DCL     15936--PROC    16462>>DOCASE
DF_REPORT_ERROR IN PROCEDURE DU_OPEN_DF
     15947**DCL     15936--PROC    16512>>IF
DISCARD_DECKFILE IN PROCEDURE DU_CLOSE_DF
     16615**DCL     16642<>CALL
DISCARD_DECKFILE.SN_ IN PROCEDURE DU_CLOSE_DF
     16615**DCL     16615--REDEF
DISCARD_DECKFILE.UTL_ IN PROCEDURE DU_CLOSE_DF
     16616**DCL     16616--REDEF
DISCARD_DECKFILE.V IN PROCEDURE DU_CLOSE_DF
     16620**DCL     16615--DCLINIT
DISCARD_DECKFILE.V.EXPIRE# IN PROCEDURE DU_CLOSE_DF
     16630**DCL     16630--REDEF
DISCARD_DECKFILE.V.TYPE# IN PROCEDURE DU_CLOSE_DF
     16628**DCL     16628--REDEF
DISCARD_DECKFILE.V.XTNSIZE# IN PROCEDURE DU_CLOSE_DF
     16625**DCL     16625--REDEF   16627--REDEF
DOT_INX IN PROCEDURE DU_SET_FULL_FID
     16676**DCL     16681<<CALLBLT 16684>>ASSIGN  16687>>IF      16692>>IF
DUP.BATCH_MODE
     13239**DCL     14001<>CALL    14015<>CALL
DUP.BCD_V.PTR$
     13311**DCL     15120--IMP-PTR 15409>>ASSIGN  15413>>ASSIGN
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:371  
DUP.BOTTOM_LINE#
     13275**DCL     17024<<ASSIGN  17028>>IF      17028>>IF      17131<<ASSIGN  17135>>IF      17135>>IF
DUP.CMD$
     13255**DCL     13954<>CALL
DUP.CPU_TYPE
     13368**DCL     14075<>CALL
DUP.CURRENT_LINE#
     13273**DCL     17027>>ASSIGN  17045<<ASSIGN  17045>>ASSIGN  17134>>ASSIGN  17156<<ASSIGN  17156>>ASSIGN
     17635<<ASSIGN
DUP.CURRENT_PAGE#
     13271**DCL     17622<<ASSIGN  17622>>ASSIGN
DUP.DF.CLOSE_TYPE
     13323**DCL     13849<>CALL
DUP.DF.ENTERED
     13315**DCL     13812<>CALL    13830<>CALL
DUP.DF.FID
     13325**DCL     13812<>CALL    13830<>CALL
DUP.DF.FID_LGTH
     13327**DCL     13812<>CALL    13830<>CALL
DUP.DF.NO_EXIST
     13317**DCL     13830<>CALL
DUP.DF.OPEN_TYPE
     13321**DCL     13830<>CALL
DUP.DF.REPORT_ERROR
     13319**DCL     13830<>CALL
DUP.DS_V
     13248**DCL     14030<>CALL    14045<>CALL
DUP.FAULT_ERROR
     13243**DCL     13987<>CALL
DUP.FORCE_NEW_PAGE
     13279**DCL     17020>>IF      17127>>IF      17636<<ASSIGN
DUP.HDR_CODE
     13260**DCL     17022<>CALL    17030<>CALL    17129<>CALL    17137<>CALL
DUP.HOLD_AREA
     13350**DCL     13676<>CALL    13742<>CALL    13812<>CALL    13876<>CALL    14015<>CALL    14059<>CALL
DUP.HOLD_AREA_LGTH
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:372  
     13352**DCL     13676<>CALL    13742<>CALL    13812<>CALL    13876<>CALL    14015<>CALL
DUP.IFAD.DEVICE_INPUT
     13287**DCL     13676<>CALL    13696<>CALL    13742<>CALL
DUP.IFAD.ENTERED
     13285**DCL     13676<>CALL    13742<>CALL
DUP.IFAD.FID
     13299**DCL     13676<>CALL    13696<>CALL    13742<>CALL    13750<>CALL    13769<>CALL
DUP.IFAD.FID_LGTH
     13301**DCL     13676<>CALL    13696<>CALL    13742<>CALL    13750<>CALL
DUP.IFAD.IMU_NUMBER
     13295**DCL     13750<>CALL    13754<>CALL    13769<>CALL
DUP.IFAD.ME_ALLOWED
     13283**DCL     13676<>CALL    13742<>CALL
DUP.IFAD.NUM_VOLUMES
     13293**DCL     13696<>CALL
DUP.LINE_VFC
     13269**DCL     17017>>IF      17037>>ASSIGN  17124>>IF      17145>>ASSIGN
DUP.LOG.CATALOG
     13333**DCL     14059<>CALL
DUP.LOG.DECK
     13335**DCL     14059<>CALL
DUP.LOG.TYPE
     13331**DCL     14059<>CALL
DUP.LOG_V
     13337**DCL     13342--REDEF
DUP.LOG_V.PTR$
     13340**DCL     18215--IMP-PTR 18255>>IF      18257>>ASSIGN  18257>>ASSIGN  18258>>ASSIGN  18258>>ASSIGN
     18259>>ASSIGN  18259>>ASSIGN  18260>>ASSIGN  18260>>ASSIGN  18261>>ASSIGN  18261>>ASSIGN  18262>>ASSIGN
     18262>>ASSIGN  18264>>ASSIGN  18264>>ASSIGN
DUP.MSG_CODE
     13258**DCL     13910<>CALL    13925<>CALL    13939<>CALL    13971<>CALL
DUP.MSG_V
     13264**DCL     17814>>ASSIGN  17939>>ASSIGN
DUP.MSG_V.PTR$
     13267**DCL     16895--IMP-PTR 16937>>ASSIGN  16976--IMP-PTR 17038>>ASSIGN  17042>>ASSIGN  17083--IMP-PTR
     17144>>ASSIGN  17150>>ASSIGN  17473--IMP-PTR 17480>>CALL    17550>>ASSIGN  17583--IMP-PTR 17626>>ASSIGN
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:373  
     17631>>ASSIGN  17662--IMP-PTR 17664--IMP-PTR 17818>>CALL    17822>>ASSIGN  17823>>ASSIGN  17827>>ASSIGN
     17829>>ASSIGN  17831>>ASSIGN  17833>>ASSIGN
DUP.NUM_LINES
     13262**DCL     16936>>DOINDEX 17027>>ASSIGN  17041>>DOINDEX 17045>>ASSIGN  17134>>ASSIGN  17149>>DOINDEX
     17156>>ASSIGN  17479>>DOINDEX 17630>>DOINDEX 17635>>ASSIGN  17817<<ASSIGN  17824<<ASSIGN  17834<<ASSIGN
DUP.NUM_WORDS
     13246**DCL     14030<>CALL    14045<>CALL
DUP.RESPONSE
     13251**DCL     13895<>CALL    17487<<ASSIGN
DUP.RESPONSE_LGTH
     13253**DCL     13895<>CALL    17488<<ASSIGN
DUP.SITE_ID
     13366**DCL     14075<>CALL
DUP.SITE_NAME.LGTH
     13362**DCL     14075<>CALL
DUP.SITE_NAME.TEXT
     13364**DCL     14075<>CALL
DUP.TEMP.OPEN_TYPE
     13345**DCL     13880<>CALL
DU_CHECK_IFAD_ASN IN PROCEDURE DU_SET_IFAD_FID
     14178**PROC    14140--CALL    14146--CALL
DU_CLOSE_DF
     16542**PROC    13849--CALL
DU_CLOSE_IFAD
     14728**PROC    13727--CALL
DU_CLOSE_LO_IF_OPEN
     14975**PROC    14936--CALL
DU_CLOSE_MCA
     15634**PROC    13784--CALL
DU_DF_FROM_HOLD IN PROCEDURE DU_SET_DF_FID
     15850**PROC    15818--CALL
DU_DF_FROM_MERGE IN PROCEDURE DU_SET_DF_FID
     15890**PROC    15820--CALL
DU_FETCH_TEXT
     17659**PROC    16933--CALL    17016--CALL    17023--CALL    17031--CALL    17123--CALL    17130--CALL
     17138--CALL    17478--CALL    17623--CALL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:374  
DU_FREE_DATA_SEGMENT
     18145**PROC    14045--CALL
DU_GET_DATA_SEGMENT
     18096**PROC    14030--CALL
DU_GET_SITE
     18295**PROC    14075--CALL
DU_HEADER_WRITE
     17576**PROC    17022--CALL    17030--CALL    17129--CALL    17137--CALL
DU_ISSUE_OP_MSG
     17349**PROC    17204--CALL    17482--CALL
DU_MCA_RESET_STATUS
     15681**PROC    13799--CALL
DU_NEXT_IFAD
     14685**PROC    13713--CALL
DU_OPEN_DF
     15936**PROC    13830--CALL
DU_OPEN_IFAD
     14229**PROC    13696--CALL
DU_OPEN_LO
     14808**PROC    13880--CALL
DU_OPEN_MCA
     15453**PROC    13769--CALL
DU_OPERATOR_TEXT
     17468**PROC    13971--CALL
DU_OPERATOR_WRITE
     17185**PROC    13954--CALL
DU_OT_SETUP_BUFFER IN PROCEDURE DU_OPERATOR_TEXT
     17542**PROC    17481--CALL
DU_OT_STRIP_TRAILING_BLANKS IN PROCEDURE DU_OPERATOR_TEXT
     17508**PROC    17480--CALL
DU_OW_SETUP_BUFFER IN PROCEDURE DU_OPERATOR_WRITE
     17227**PROC    17203--CALL
DU_PRINTER_OVERWRITE
     17074**PROC    13939--CALL
DU_PRINTER_WRITE
     16967**PROC    13925--CALL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:375  
DU_PRINT_OP_REPLY
     17399**PROC    17205--CALL
DU_SET_DF_FID
     15803**PROC    13812--CALL
DU_SET_EDIT_PROMPT
     17962**PROC    14001--CALL
DU_SET_FID
     16728**PROC    14139--CALL    14938--CALL    15854--CALL    16461--CALL
DU_SET_FULL_FID
     16670**PROC    13876--CALL    14204--CALL    15857--CALL
DU_SET_IFAD_FID
     14115**PROC    13676--CALL    13742--CALL
DU_SET_IFAD_IMU_NUMBER
     15055**PROC    13750--CALL
DU_SET_PROMPT
     18031**PROC    14015--CALL
DU_SIGNAL_OPEN_ERROR IN PROCEDURE DU_OPEN_DF
     16502**PROC    16482--CALL
DU_SYSTEM_ERRMSG
     17855**PROC    13987--CALL    14666--CALL    14711--CALL    14784--CALL    14958--CALL    15422--CALL
     15617--CALL    15661--CALL    16519--CALL    16646--CALL    16743--CALL    16792--CALL    16868--CALL
     16943--CALL    17050--CALL    17161--CALL    17384--CALL    17445--CALL    17641--CALL    18005--CALL
     18079--CALL    18127--CALL    18174--CALL    18350--CALL
DU_UNFID_DCB
     16759**PROC    14144--CALL    15896--CALL
DU_UPDATE_LOG
     18199**PROC    14059--CALL
DU_USER_READ
     16812**PROC    13895--CALL
DU_USER_WRITE
     16891**PROC    13910--CALL    14149--CALL    14195--CALL    14199--CALL    14206--CALL    14642--CALL
     14663--CALL    14665--CALL    14710--CALL    14783--CALL    15074--CALL    15083--CALL    15417--CALL
     15616--CALL    15660--CALL    15779--CALL    15864--CALL    15872--CALL    15898--CALL    16457--CALL
     16475--CALL    16508--CALL    16510--CALL    16513--CALL    16516--CALL    16518--CALL    16645--CALL
     16742--CALL    16867--CALL    17049--CALL    17160--CALL    17328--CALL    17383--CALL    17523--CALL
     17640--CALL    18004--CALL    18078--CALL    18126--CALL    18173--CALL    18269--CALL    18349--CALL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:376  
DU_VALIDATE_IMU_NUMBER
     15113**PROC    13754--CALL
END_PROCESS IN PROCEDURE DU_OPERATOR_TEXT
     17492**LABEL   17482--CALLALT
ENTERED_FID IN PROCEDURE DU_SET_FULL_FID
     16672**DCL     16670--PROC    16681>>CALLBLT 16682>>IF      16685>>ASSIGN  16689>>ASSIGN  16694>>CALLBLT
     16701>>CALLBLT
ENTERED_LGTH IN PROCEDURE DU_SET_FULL_FID
     16673**DCL     16670--PROC    16684>>ASSIGN  16687>>IF      16690>>ASSIGN  16692>>IF      16694>>CALLBLT
     16698>>ASSIGN  16701>>CALLBLT 16706>>ASSIGN
ERROR IN PROCEDURE DU_CLOSE_MCA
     15660**LABEL   15655--CALLALT
ERROR IN PROCEDURE DU_DF_FROM_MERGE
     15900**LABEL   15896--CALLALT
ERROR IN PROCEDURE DU_ISSUE_OP_MSG
     17383**LABEL   17379--CALLALT
ERROR IN PROCEDURE DU_MCA_RESET_STATUS
     15779**LABEL   15772--CALLALT
ERROR IN PROCEDURE DU_OPEN_DF
     16482**LABEL   16461--CALLALT 16466--CALLALT 16467--CALLALT 16468--CALLALT 16470--CALLALT 16479--CALLALT
ERROR IN PROCEDURE DU_OPEN_MCA
     15616**LABEL   15609--CALLALT 15612--CALLALT
ERROR IN PROCEDURE DU_OPERATOR_WRITE
     17208**LABEL   17203--CALLALT 17204--CALLALT
ERROR IN PROCEDURE DU_PRINTER_OVERWRITE
     17163**LABEL   17129--CALLALT 17137--CALLALT
ERROR IN PROCEDURE DU_PRINTER_WRITE
     17052**LABEL   17022--CALLALT 17030--CALLALT
ERROR IN PROCEDURE DU_PRINT_OP_REPLY
     17445**LABEL   17439--CALLALT
ERROR IN PROCEDURE DU_SET_DF_FID
     15829**LABEL   15818--CALLALT 15820--CALLALT
ERROR IN PROCEDURE DU_SET_IFAD_FID
     14151**LABEL   14139--CALLALT 14144--CALLALT
ERROR IN PROCEDURE DU_SET_IFAD_IMU_NUMBER
     15083**LABEL   15067--CALLALT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:377  
ERROR IN PROCEDURE DU_UPDATE_LOG
     18275**LABEL   18263--CALLALT
ERROR IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15422**LABEL   15407--CALLALT 15410--CALLALT 15411--CALLALT
ERROR_CODE IN PROCEDURE DU_SYSTEM_ERRMSG
     17903**DCL     17875--DCLINIT 17943<<ASSIGN
ERROR_CODE.SEV IN PROCEDURE DU_SYSTEM_ERRMSG
     17933**DCL     17945>>ASSIGN
ERROR_GIVEN IN PROCEDURE DU_UPDATE_LOG
     18205**DCL     18266>>IF      18270<<ASSIGN
F$DCB.ACTPOS
     13637**DCL     13637--REDEF
F$DCB.AMR#
     13624**DCL     14142>>IF      15819>>IF
F$DCB.ARS#
     13611**DCL     13611--REDEF   16863>>ASSIGN
F$DCB.ASN#
     13626**DCL     14146<>CALL    15894>>DOCASE
F$DCB.ATTR
     13630**DCL     13631--REDEF
F$DCB.BORROW
     13645**DCL     13645--REDEF   13645--REDEF   13645--REDEF
F$DCB.DCBNAME.L
     13659**DCL     13659--IMP-SIZ
F$DCB.EOMCHAR#
     13615**DCL     13615--REDEF
F$DCB.FCD#
     13624**DCL     14640>>IF      14777>>IF      15023>>IF      15654>>IF      16455>>IF      16637>>IF
F$DCB.FFLG.UPD#
     13616**DCL     16471>>IF
F$DCB.FFLG.WNEW#
     13616**DCL     16471>>IF
F$DCB.FLDID
     13640**DCL     13640--REDEF
F$DCB.FORM$
     13634**DCL     13634--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:378  
F$DCB.FSECT
     13650**DCL     13650--REDEF
F$DCB.FSN#
     13627**DCL     13627--REDEF   13627--REDEF   13628--REDEF
F$DCB.HEADER$
     13633**DCL     13633--REDEF
F$DCB.IXTNSIZE#
     13631**DCL     13631--REDEF
F$DCB.LASTSTA$
     13620**DCL     13620--REDEF
F$DCB.LINES#
     13633**DCL     17024>>ASSIGN  17131>>ASSIGN
F$DCB.LVL
     13646**DCL     13646--REDEF
F$DCB.NAME#.C
     13621**DCL     13621--REDEF
F$DCB.NOEOF
     13643**DCL     13643--REDEF
F$DCB.NRECS#
     13632**DCL     13632--REDEF
F$DCB.NRECX
     13651**DCL     13651--REDEF
F$DCB.OHDR
     13643**DCL     13643--REDEF
F$DCB.ORG#
     13626**DCL     13626--REDEF
F$DCB.PRECNO
     13649**DCL     13649--REDEF
F$DCB.RCSZ
     13655**DCL     13655--REDEF
F$DCB.RES#
     13622**DCL     13622--REDEF   14146<>CALL
F$DCB.SETX
     13634**DCL     13634--REDEF
F$DCB.TAB$
     13634**DCL     13634--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:379  
F$DCB.TDA
     13648**DCL     13649--REDEF
F$DCB.WSN#
     13622**DCL     13622--REDEF
F$DCB.ACTPOS IN PROCEDURE DU_MCA_RESET_STATUS
     15723**DCL     15723--REDEF
F$DCB.ARS# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL     15697--REDEF
F$DCB.ATTR IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL     15717--REDEF
F$DCB.BORROW IN PROCEDURE DU_MCA_RESET_STATUS
     15731**DCL     15731--REDEF   15731--REDEF   15731--REDEF
F$DCB.DCBNAME.L IN PROCEDURE DU_MCA_RESET_STATUS
     15745**DCL     15745--IMP-SIZ
F$DCB.EOMCHAR# IN PROCEDURE DU_MCA_RESET_STATUS
     15701**DCL     15701--REDEF
F$DCB.FLDID IN PROCEDURE DU_MCA_RESET_STATUS
     15726**DCL     15726--REDEF
F$DCB.FORM$ IN PROCEDURE DU_MCA_RESET_STATUS
     15720**DCL     15720--REDEF
F$DCB.FSECT IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL     15736--REDEF
F$DCB.FSN# IN PROCEDURE DU_MCA_RESET_STATUS
     15713**DCL     15713--REDEF   15713--REDEF   15714--REDEF
F$DCB.HEADER$ IN PROCEDURE DU_MCA_RESET_STATUS
     15719**DCL     15719--REDEF
F$DCB.IXTNSIZE# IN PROCEDURE DU_MCA_RESET_STATUS
     15717**DCL     15717--REDEF
F$DCB.LASTSTA$ IN PROCEDURE DU_MCA_RESET_STATUS
     15706**DCL     15706--REDEF
F$DCB.LVL IN PROCEDURE DU_MCA_RESET_STATUS
     15732**DCL     15732--REDEF
F$DCB.NAME#.C IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL     15707--REDEF
F$DCB.NOEOF IN PROCEDURE DU_MCA_RESET_STATUS
     15729**DCL     15729--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:380  
F$DCB.NRECS# IN PROCEDURE DU_MCA_RESET_STATUS
     15718**DCL     15718--REDEF
F$DCB.NRECX IN PROCEDURE DU_MCA_RESET_STATUS
     15737**DCL     15737--REDEF
F$DCB.OHDR IN PROCEDURE DU_MCA_RESET_STATUS
     15729**DCL     15729--REDEF
F$DCB.ORG# IN PROCEDURE DU_MCA_RESET_STATUS
     15712**DCL     15712--REDEF
F$DCB.PRECNO IN PROCEDURE DU_MCA_RESET_STATUS
     15735**DCL     15735--REDEF
F$DCB.RCSZ IN PROCEDURE DU_MCA_RESET_STATUS
     15741**DCL     15741--REDEF
F$DCB.RES# IN PROCEDURE DU_MCA_RESET_STATUS
     15708**DCL     15708--REDEF
F$DCB.SETX IN PROCEDURE DU_MCA_RESET_STATUS
     15720**DCL     15720--REDEF
F$DCB.TAB$ IN PROCEDURE DU_MCA_RESET_STATUS
     15720**DCL     15720--REDEF
F$DCB.TDA IN PROCEDURE DU_MCA_RESET_STATUS
     15734**DCL     15735--REDEF
F$DCB.TDSTAT# IN PROCEDURE DU_MCA_RESET_STATUS
     15708**DCL     15773>>ASSIGN
F$DCB.WSN# IN PROCEDURE DU_MCA_RESET_STATUS
     15708**DCL     15708--REDEF
FAULT_ERROR IN PROCEDURE DU_SYSTEM_ERRMSG
     17857**DCL     17855--PROC    17940>>IF
FETCH_STATS IN PROCEDURE DU_FETCH_TEXT
     17800**DCL     17686--DCLINIT
FETCH_STATS.BADCALL IN PROCEDURE DU_FETCH_TEXT
     17800**DCL     17832>>IF
FETCH_STATS.BUFERR IN PROCEDURE DU_FETCH_TEXT
     17802**DCL     17830>>IF
FETCH_STATS.NOFILE IN PROCEDURE DU_FETCH_TEXT
     17800**DCL     17826>>IF
FETCH_STATS.NOMSG IN PROCEDURE DU_FETCH_TEXT
     17800**DCL     17828>>IF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:381  
FETCH_STATS.RECCNT IN PROCEDURE DU_FETCH_TEXT
     17804**DCL     17817>>ASSIGN
FID_ACCT
     13440**DCL     13418--DCLINIT 14894--DCLINIT 16040--DCLINIT 16168--DCLINIT 16291--DCLINIT 16412--DCLINIT
FID_ACCT.ACCT#
     13440**DCL     16738<<ASSIGN
FID_ASN
     13378**DCL     13420--DCLINIT 14140<>CALL    14940>>ASSIGN  15855>>DOCASE
FID_ERROR IN PROCEDURE DU_DF_FROM_HOLD
     15870**LABEL   15854--CALLALT
FID_ERROR IN PROCEDURE DU_SET_FID
     16742**LABEL   16735--CALLALT
FID_INFO
     13417**DCL     16735<>CALL
FID_INFO.TEXTFID_
     13417**DCL     16734<<ASSIGN
FID_INFO.V
     13421**DCL     13417--DCLINIT
FID_NAME
     13468**DCL     13418--DCLINIT 14890--DCLINIT 16036--DCLINIT 16164--DCLINIT 16287--DCLINIT 16408--DCLINIT
FID_PASS
     13481**DCL     13419--DCLINIT 14891--DCLINIT 16037--DCLINIT 16165--DCLINIT 16288--DCLINIT 16409--DCLINIT
FID_RES
     13377**DCL     13420--DCLINIT 14140<>CALL    14939>>ASSIGN
FID_RESULTS
     13390**DCL     13421--DCLINIT
FID_RESULTS.ACCT
     13390**DCL     16736>>IF
FID_SN
     13496**DCL     13419--DCLINIT 14889--DCLINIT 16035--DCLINIT 16163--DCLINIT 16286--DCLINIT 16407--DCLINIT
FID_WSN
     13509**DCL     13419--DCLINIT 14895--DCLINIT 16041--DCLINIT 16169--DCLINIT 16292--DCLINIT 16413--DCLINIT
FILE_NAME IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15388**DCL     15233--DCLINIT
FREE_BUFFER IN PROCEDURE DU_FREE_DATA_SEGMENT
     18160**DCL     18169<>CALL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:382  
FREE_BUFFER.RESULTS_ IN PROCEDURE DU_FREE_DATA_SEGMENT
     18160**DCL     18168<<ASSIGN
FREE_BUFFER.V IN PROCEDURE DU_FREE_DATA_SEGMENT
     18160**DCL     18160--DCLINIT
FREE_BUFFER.V.SEGSIZE# IN PROCEDURE DU_FREE_DATA_SEGMENT
     18162**DCL     18167<<ASSIGN
FREE_ERROR IN PROCEDURE DU_FREE_DATA_SEGMENT
     18173**LABEL   18169--CALLALT
FROM_USER IN PROCEDURE DU_USER_READ
     16834**DCL     16862<>CALL
FROM_USER.BUF_ IN PROCEDURE DU_USER_READ
     16836**DCL     16860<<ASSIGN
FROM_USER.BUF_.BOUND IN PROCEDURE DU_USER_READ
     16836**DCL     16861<<ASSIGN
FROM_USER.STATION_ IN PROCEDURE DU_USER_READ
     16837**DCL     16838--REDEF
FROM_USER.V IN PROCEDURE DU_USER_READ
     16838**DCL     16834--DCLINIT
FROM_USER.V.DVBYTE.REREAD# IN PROCEDURE DU_USER_READ
     16849**DCL     16849--REDEF
FROM_USER.V.INDX# IN PROCEDURE DU_USER_READ
     16847**DCL     16847--REDEF
GET_BUFFER IN PROCEDURE DU_GET_DATA_SEGMENT
     18112**DCL     18122<>CALL
GET_BUFFER.RESULTS_ IN PROCEDURE DU_GET_DATA_SEGMENT
     18112**DCL     18121<<ASSIGN
GET_BUFFER.V IN PROCEDURE DU_GET_DATA_SEGMENT
     18112**DCL     18112--DCLINIT
GET_BUFFER.V.SEGSIZE# IN PROCEDURE DU_GET_DATA_SEGMENT
     18115**DCL     18120<<ASSIGN
GET_ERROR IN PROCEDURE DU_GET_DATA_SEGMENT
     18126**LABEL   18122--CALLALT
GET_SITE IN PROCEDURE DU_GET_SITE
     18313**DCL     18339<>CALL
HDR_CODE IN PROCEDURE DU_HEADER_WRITE
     17578**DCL     17576--PROC    17623<>CALL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:383  
HEAD_BUFFER IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15120**DCL     15409--ASSIGN  15413--ASSIGN
HEAD_KEY IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15117**DCL     15408--ASSIGN
HELD_DF IN PROCEDURE DU_SET_DF_FID
     15810**DCL     15803--PROC    15854<>CALL    15857<>CALL    15862>>ASSIGN  15870>>ASSIGN
HELD_DF_LGTH IN PROCEDURE DU_SET_DF_FID
     15811**DCL     15803--PROC    15857<>CALL    15863>>ASSIGN  15871>>ASSIGN
HELD_IFAD IN PROCEDURE DU_SET_IFAD_FID
     14125**DCL     14115--PROC    14137>>ASSIGN
HELD_IFAD_LGTH IN PROCEDURE DU_SET_IFAD_FID
     14126**DCL     14115--PROC    14138>>ASSIGN
HL IN PROCEDURE DU_HEADER_WRITE
     17579**DCL     17606--DCLINIT 17607--DCLINIT
HL.CARRIAGE_CONTROL IN PROCEDURE DU_HEADER_WRITE
     17580**DCL     17625<<ASSIGN  17629<<ASSIGN
HL.TEXT_LINE_ IN PROCEDURE DU_HEADER_WRITE
     17581**DCL     17626<<ASSIGN  17631<<ASSIGN
I IN PROCEDURE DU_SET_IFAD_IMU_NUMBER
     15060**DCL     15069<<DOINDEX 15070>>DOSELCT
IDCW IN PROCEDURE DU_MCA_RESET_STATUS
     15683**DCL     15770<<ASSIGN  15771--ASSIGN
IFAD_ACCT IN PROCEDURE DU_OPEN_IFAD
     14607**DCL     14433--DCLINIT 14499--DCLINIT 14537--DCLINIT
IFAD_ACCT IN PROCEDURE DU_OPEN_MCA
     15575**DCL     15505--DCLINIT
IFAD_ASN IN PROCEDURE DU_CHECK_IFAD_ASN
     14180**DCL     14178--PROC    14185>>DOCASE
IFAD_DEVICE IN PROCEDURE DU_OPEN_MCA
     15458**DCL     15507--DCLINIT
IFAD_DISK_FILE IN PROCEDURE DU_OPEN_IFAD
     14428**DCL     14655<>CALL
IFAD_DISK_FILE.ACSVEH_ IN PROCEDURE DU_OPEN_IFAD
     14430**DCL     14431--REDEF
IFAD_DISK_FILE.ALTKEYS_ IN PROCEDURE DU_OPEN_IFAD
     14436**DCL     14437--REDEF   14437--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:384  
IFAD_DISK_FILE.HDR_ IN PROCEDURE DU_OPEN_IFAD
     14435**DCL     14436--REDEF
IFAD_DISK_FILE.TAB_ IN PROCEDURE DU_OPEN_IFAD
     14434**DCL     14435--REDEF
IFAD_DISK_FILE.UHL_ IN PROCEDURE DU_OPEN_IFAD
     14428**DCL     14429--REDEF   14429--REDEF
IFAD_DISK_FILE.V IN PROCEDURE DU_OPEN_IFAD
     14437**DCL     14428--DCLINIT
IFAD_DISK_FILE.V.ASN# IN PROCEDURE DU_OPEN_IFAD
     14447**DCL     14539--DCLINIT
IFAD_DISK_FILE.V.FSN# IN PROCEDURE DU_OPEN_IFAD
     14468**DCL     14468--REDEF   14468--REDEF
IFAD_DISK_FILE.V.RES# IN PROCEDURE DU_OPEN_IFAD
     14452**DCL     14539--DCLINIT
IFAD_DISK_FILE.WSN_ IN PROCEDURE DU_OPEN_IFAD
     14434**DCL     14434--REDEF
IFAD_ENTERED IN PROCEDURE DU_SET_IFAD_FID
     14124**DCL     14115--PROC    14135>>IF
IFAD_FID IN PROCEDURE DU_OPEN_IFAD
     14235**DCL     14229--PROC    14646>>ASSIGN
IFAD_FID IN PROCEDURE DU_OPEN_MCA
     15455**DCL     15453--PROC    15608>>ASSIGN
IFAD_FID IN PROCEDURE DU_SET_IFAD_FID
     14128**DCL     14115--PROC    14137<<ASSIGN  14139<>CALL    14144<>CALL    14204<>CALL    14204<>CALL
IFAD_FID IN PROCEDURE DU_SET_IFAD_IMU_NUMBER
     15057**DCL     15055--PROC    15064>>IF      15064>>IF      15067>>CALLBLT 15068<<ASSIGN  15068>>ASSIGN
     15070>>DOSELCT 15078>>CALLBLT
IFAD_FID_LGTH IN PROCEDURE DU_OPEN_IFAD
     14236**DCL     14229--PROC
IFAD_FID_LGTH IN PROCEDURE DU_SET_IFAD_FID
     14129**DCL     14115--PROC    14138<<ASSIGN  14144<>CALL    14204<>CALL    14204<>CALL
IFAD_FID_LGTH IN PROCEDURE DU_SET_IFAD_IMU_NUMBER
     15058**DCL     15055--PROC    15067<<CALLBLT 15068>>ASSIGN  15069>>DOINDEX 15078>>CALLBLT
IFAD_ID IN PROCEDURE DU_UPDATE_LOG
     18204**DCL     18199--PROC    18260>>ASSIGN
IFAD_IMU_NUMBER IN PROCEDURE DU_SET_IFAD_IMU_NUMBER
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:385  
     15059**DCL     15055--PROC    15078<<CALLBLT
IFAD_NAME IN PROCEDURE DU_OPEN_IFAD
     14593**DCL     14429--DCLINIT 14499--DCLINIT 14537--DCLINIT
IFAD_NAME IN PROCEDURE DU_OPEN_MCA
     15561**DCL     15505--DCLINIT
IFAD_PASS IN PROCEDURE DU_OPEN_IFAD
     14621**DCL     14500--DCLINIT 14538--DCLINIT
IFAD_PASS IN PROCEDURE DU_OPEN_MCA
     15589**DCL     15506--DCLINIT
IFAD_RES IN PROCEDURE DU_CHECK_IFAD_ASN
     14181**DCL     14178--PROC    14188>>DOSELCT
IFAD_RES IN PROCEDURE DU_OPEN_MCA
     15459**DCL     15507--DCLINIT
IFAD_SN IN PROCEDURE DU_OPEN_IFAD
     14564**DCL     14313--DCLINIT 14500--DCLINIT 14538--DCLINIT
IFAD_SN.NUM# IN PROCEDURE DU_OPEN_IFAD
     14564**DCL     14651>>ASSIGN
IFAD_SN IN PROCEDURE DU_OPEN_MCA
     15532**DCL     15506--DCLINIT
IFAD_TAPE_DEVICE IN PROCEDURE DU_OPEN_IFAD
     14313**DCL     14650<>CALL
IFAD_TAPE_DEVICE.ACSVEH_ IN PROCEDURE DU_OPEN_IFAD
     14315**DCL     14316--REDEF
IFAD_TAPE_DEVICE.ALTKEYS_ IN PROCEDURE DU_OPEN_IFAD
     14321**DCL     14322--REDEF   14322--REDEF
IFAD_TAPE_DEVICE.HDR_ IN PROCEDURE DU_OPEN_IFAD
     14320**DCL     14321--REDEF
IFAD_TAPE_DEVICE.TAB_ IN PROCEDURE DU_OPEN_IFAD
     14319**DCL     14320--REDEF
IFAD_TAPE_DEVICE.UHL_ IN PROCEDURE DU_OPEN_IFAD
     14313**DCL     14314--REDEF   14314--REDEF
IFAD_TAPE_DEVICE.V IN PROCEDURE DU_OPEN_IFAD
     14322**DCL     14313--DCLINIT
IFAD_TAPE_DEVICE.V.ASN# IN PROCEDURE DU_OPEN_IFAD
     14332**DCL     14501--DCLINIT
IFAD_TAPE_DEVICE.V.FSN# IN PROCEDURE DU_OPEN_IFAD
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:386  
     14353**DCL     14353--REDEF   14353--REDEF
IFAD_TAPE_DEVICE.V.RES# IN PROCEDURE DU_OPEN_IFAD
     14337**DCL     14501--DCLINIT
IFAD_TAPE_DEVICE.WSN_ IN PROCEDURE DU_OPEN_IFAD
     14319**DCL     14319--REDEF
IFAD_TEXT_FID IN PROCEDURE DU_OPEN_IFAD
     14238**DCL     14498--DCLINIT 14536--DCLINIT 14646<<ASSIGN
IFAD_TEXT_FID IN PROCEDURE DU_OPEN_MCA
     15457**DCL     15504--DCLINIT 15608<<ASSIGN
IFAD_WSN IN PROCEDURE DU_OPEN_IFAD
     14635**DCL     14500--DCLINIT 14538--DCLINIT
IFAD_WSN IN PROCEDURE DU_OPEN_MCA
     15603**DCL     15506--DCLINIT
IMU IN PROCEDURE DU_OPEN_MCA
     15456**DCL     15453--PROC    15610>>ASSIGN
IMU# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15115**DCL     15113--PROC    15414>>IF
INDX IN PROCEDURE DU_OPERATOR_TEXT
     17472**DCL     17480<>CALL    17481>>CALL
INDX IN PROCEDURE DU_OT_STRIP_TRAILING_BLANKS
     17511**DCL     17508--PROC    17515<<ASSIGN  17516>>DOWHILE 17516>>DOWHILE 17517<<ASSIGN  17517>>ASSIGN
     17520>>IF
INIT_MCA IN PROCEDURE DU_MCA_RESET_STATUS
     15761**DCL     15772<>CALL
INIT_MCA.DCWLIST_ IN PROCEDURE DU_MCA_RESET_STATUS
     15761**DCL     15771<<ASSIGN
INIT_MCA.V IN PROCEDURE DU_MCA_RESET_STATUS
     15762**DCL     15761--DCLINIT
LAST_LINE IN PROCEDURE DU_PRINTER_OVERWRITE
     17082**DCL     17134<<ASSIGN  17135>>IF
LAST_LINE IN PROCEDURE DU_PRINTER_WRITE
     16975**DCL     17027<<ASSIGN  17028>>IF
LENGTH IN PROCEDURE DU_OT_SETUP_BUFFER
     17545**DCL     17542--PROC    17549>>ASSIGN  17551>>IF
LENGTH IN PROCEDURE DU_UNFID_DCB
     16763**DCL     16759--PROC    16786--ASSIGN
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:387  
LGTH IN PROCEDURE DU_SET_PROMPT
     18035**DCL     18031--PROC    18072>>ASSIGN
LGTH IN PROCEDURE DU_USER_READ
     16815**DCL     16812--PROC    16861>>ASSIGN  16863<<ASSIGN
LINE_NUMBER IN PROCEDURE DU_HEADER_WRITE
     17582**DCL     17630<<DOINDEX 17631>>ASSIGN
LINE_NUMBER IN PROCEDURE DU_OPERATOR_TEXT
     17471**DCL     17479<<DOINDEX 17480>>CALL    17481<>CALL
LINE_NUMBER IN PROCEDURE DU_OT_SETUP_BUFFER
     17544**DCL     17542--PROC    17550>>ASSIGN
LINE_NUMBER IN PROCEDURE DU_PRINTER_OVERWRITE
     17080**DCL     17149<<DOINDEX 17150>>ASSIGN
LINE_NUMBER IN PROCEDURE DU_PRINTER_WRITE
     16973**DCL     17041<<DOINDEX 17042>>ASSIGN
LINE_NUMBER IN PROCEDURE DU_USER_WRITE
     16894**DCL     16936<<DOINDEX 16937>>ASSIGN
LOG_B.ACCESSES.CATALOG IN PROCEDURE DU_UPDATE_LOG
     18225**DCL     18258<<ASSIGN
LOG_B.ACCESSES.DATE IN PROCEDURE DU_UPDATE_LOG
     18221**DCL     18261--ASSIGN
LOG_B.ACCESSES.DECK IN PROCEDURE DU_UPDATE_LOG
     18227**DCL     18259<<ASSIGN
LOG_B.ACCESSES.IFAD IN PROCEDURE DU_UPDATE_LOG
     18229**DCL     18260<<ASSIGN
LOG_B.ACCESSES.TIME IN PROCEDURE DU_UPDATE_LOG
     18223**DCL     18262--ASSIGN
LOG_B.ACCESSES.TYPE IN PROCEDURE DU_UPDATE_LOG
     18219**DCL     18257<<ASSIGN
LOG_B.COUNT IN PROCEDURE DU_UPDATE_LOG
     18216**DCL     18255>>IF      18257>>ASSIGN  18258>>ASSIGN  18259>>ASSIGN  18260>>ASSIGN  18261>>ASSIGN
     18262>>ASSIGN  18264<<ASSIGN  18264>>ASSIGN
LO_ERROR IN PROCEDURE DU_OPEN_LO
     14958**LABEL   14936--CALLALT 14938--CALLALT 14945--CALLALT 14949--CALLALT 14953--CALLALT
LO_FID
     13226**DCL     13876<>CALL    13880<>CALL
LO_FID IN PROCEDURE DU_OPEN_LO
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:388  
     14812**DCL     14808--PROC    14938<>CALL
LO_FID_LGTH
     13227**DCL     13876<>CALL
M$CLOSE
      6199**DCL-ENT 14778--CALL    15024--CALL    15411--CALL    15423--CALL    16640--CALL    16642--CALL
M$CVOL
      6202**DCL-ENT 14706--CALL
M$DECKFILE
     13374**DCL     15819--IF      15894--DOCASE  15896<>CALL    16455--IF      16471--IF      16471--IF
     16637--IF
M$ERRMSG
      6262**DCL-ENT 17816--CALL    17946--CALL
M$FDS
      6234**DCL-ENT 18169--CALL
M$FID
      6262**DCL-ENT 14649--CALL    14654--CALL    15609--CALL    16735--CALL
M$GDS
      6234**DCL-ENT 18122--CALL
M$IFAD
     13373**DCL     14134--ASSIGN  14144<>CALL    14640--IF      14777--IF      15654--IF      15773--ASSIGN
M$KEYIN
      6204**DCL-ENT 17379--CALL
M$LO
     13520**DCL     15023--IF      17024--ASSIGN  17131--ASSIGN
M$LO.ACTPOS
     13561**DCL     13561--REDEF
M$LO.ARS#
     13520**DCL     13520--REDEF
M$LO.ATTR#
     13550**DCL     13550--REDEF   13552--REDEF
M$LO.BORROW
     13572**DCL     13572--REDEF   13572--REDEF   13572--REDEF
M$LO.DCBNAME.L
     13591**DCL     13591--IMP-SIZ 15023>>IF      17024>>ASSIGN  17131>>ASSIGN
M$LO.EOMCHAR#
     13527**DCL     13528--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:389  
M$LO.FLDID
     13564**DCL     13565--REDEF
M$LO.FORM$
     13556**DCL     13556--REDEF
M$LO.FSECT
     13579**DCL     13579--REDEF
M$LO.FSN#
     13546**DCL     13546--REDEF   13546--REDEF   13547--REDEF
M$LO.HEADER$
     13555**DCL     13556--REDEF
M$LO.IXTNSIZE#
     13552**DCL     13553--REDEF
M$LO.LASTSTA$
     13536**DCL     13536--REDEF
M$LO.LVL
     13573**DCL     13573--REDEF
M$LO.NAME#.C
     13536**DCL     13537--REDEF
M$LO.NOEOF
     13568**DCL     13568--REDEF
M$LO.NRECS#
     13553**DCL     13553--REDEF
M$LO.NRECX
     13580**DCL     13580--REDEF
M$LO.OHDR
     13569**DCL     13569--REDEF
M$LO.ORG#
     13544**DCL     13545--REDEF
M$LO.PRECNO
     13577**DCL     13577--REDEF
M$LO.RCSZ
     13585**DCL     13585--REDEF
M$LO.RES#
     13538**DCL     13538--REDEF
M$LO.SETX
     13557**DCL     13557--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:390  
M$LO.TAB$
     13556**DCL     13556--REDEF
M$LO.TDA
     13576**DCL     13577--REDEF
M$LO.WSN#
     13538**DCL     13539--REDEF
M$MONINFO
      6267**DCL-ENT 18339--CALL
M$OPEN
      6199**DCL-ENT 14650--CALL    14655--CALL    14945--CALL    14949--CALL    14953--CALL    15407--CALL
     16466--CALL    16467--CALL    16468--CALL    16470--CALL    16479--CALL
M$PROMPT
      6223**DCL-ENT 18000--CALL    18073--CALL
M$READ
      6200**DCL-ENT 15410--CALL    16862--CALL
M$SI
     13375**DCL     16863--ASSIGN
M$TDCLOSE
      6249**DCL-ENT 15655--CALL
M$TDIO
      6249**DCL-ENT 15772--CALL
M$TDOPEN
      6248**DCL-ENT 15612--CALL
M$TIME
      6266**DCL-ENT 18263--CALL
M$UNFID
      6262**DCL-ENT 16788--CALL
M$WRITE
      6200**DCL-ENT 16938--CALL    17039--CALL    17043--CALL    17146--CALL    17148--CALL    17152--CALL
     17154--CALL    17439--CALL    17627--CALL    17632--CALL
MCA_FINISHED IN PROCEDURE DU_CLOSE_MCA
     15648**DCL     15655<>CALL
MCA_FINISHED.V IN PROCEDURE DU_CLOSE_MCA
     15648**DCL     15648--DCLINIT
MCA_FOR_INPUT IN PROCEDURE DU_OPEN_MCA
     15473**DCL     15612<>CALL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:391  
MCA_FOR_INPUT.V IN PROCEDURE DU_OPEN_MCA
     15474**DCL     15473--DCLINIT
MCA_FOR_INPUT.V.DEVICE.IOM# IN PROCEDURE DU_OPEN_MCA
     15475**DCL     15610<<ASSIGN
MCA_FOR_INPUT.V.TEST# IN PROCEDURE DU_OPEN_MCA
     15476**DCL     15611<<ASSIGN
MESSAGE_CODE IN PROCEDURE DU_FETCH_TEXT
     17713**DCL     17682--DCLINIT
MESSAGE_CODE.ERR# IN PROCEDURE DU_FETCH_TEXT
     17743**DCL     17815<<ASSIGN
MESSAGE_FETCH IN PROCEDURE DU_FETCH_TEXT
     17682**DCL     17816<>CALL
MESSAGE_FETCH.BUF_ IN PROCEDURE DU_FETCH_TEXT
     17682**DCL     17814<<ASSIGN
MESSAGE_FETCH.V IN PROCEDURE DU_FETCH_TEXT
     17686**DCL     17682--DCLINIT
ME_ALLOWED IN PROCEDURE DU_SET_IFAD_FID
     14123**DCL     14115--PROC    14192>>IF
MSG_ACCT IN PROCEDURE DU_FETCH_TEXT
     17787**DCL     17683--DCLINIT
MSG_B IN PROCEDURE DU_FETCH_TEXT
     17662**DCL     17822<<ASSIGN  17823<<ASSIGN  17827<<ASSIGN  17829<<ASSIGN  17831<<ASSIGN  17833<<ASSIGN
MSG_B IN PROCEDURE DU_HEADER_WRITE
     17583**DCL     17626>>ASSIGN  17631>>ASSIGN
MSG_B IN PROCEDURE DU_OPERATOR_TEXT
     17473**DCL     17480<>CALL    17550>>ASSIGN
MSG_B IN PROCEDURE DU_PRINTER_OVERWRITE
     17083**DCL     17144>>ASSIGN  17150>>ASSIGN
MSG_B IN PROCEDURE DU_PRINTER_WRITE
     16976**DCL     17038>>ASSIGN  17042>>ASSIGN
MSG_B IN PROCEDURE DU_USER_WRITE
     16895**DCL     16937--ASSIGN
MSG_B_ IN PROCEDURE DU_FETCH_TEXT
     17664**DCL     17818<>CALL
MSG_CODE IN PROCEDURE DU_FETCH_TEXT
     17661**DCL     17659--PROC    17815>>ASSIGN
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:392  
MSG_CODE IN PROCEDURE DU_OPERATOR_TEXT
     17470**DCL     17468--PROC    17478<>CALL
MSG_CODE IN PROCEDURE DU_PRINTER_OVERWRITE
     17076**DCL     17074--PROC    17123<>CALL    17130<>CALL    17138<>CALL
MSG_CODE IN PROCEDURE DU_PRINTER_WRITE
     16969**DCL     16967--PROC    17016<>CALL    17023<>CALL    17031<>CALL
MSG_CODE IN PROCEDURE DU_USER_WRITE
     16893**DCL     16891--PROC    16933<>CALL
MSG_NAME IN PROCEDURE DU_FETCH_TEXT
     17773**DCL     17683--DCLINIT
MSG_RESP IN PROCEDURE DU_PRINT_OP_REPLY
     17419**DCL     17439<>CALL
MSG_RESP.BUF_ IN PROCEDURE DU_PRINT_OP_REPLY
     17419**DCL     17438<<ASSIGN
MSG_RESP.STATION_ IN PROCEDURE DU_PRINT_OP_REPLY
     17421**DCL     17421--REDEF
MSG_RESP.V IN PROCEDURE DU_PRINT_OP_REPLY
     17422**DCL     17419--DCLINIT
MSG_RESP.V.DVBYTE.VFC# IN PROCEDURE DU_PRINT_OP_REPLY
     17428**DCL     17428--REDEF
NEXT_IFAD IN PROCEDURE DU_NEXT_IFAD
     14699**DCL     14706<>CALL
NEXT_IFAD.V IN PROCEDURE DU_NEXT_IFAD
     14700**DCL     14699--DCLINIT
NUM_VOLUMES IN PROCEDURE DU_OPEN_IFAD
     14237**DCL     14229--PROC    14651<<ASSIGN  14656<<ASSIGN
ON_LINE IN PROCEDURE DU_SET_EDIT_PROMPT
     17983**DCL     18000<>CALL
ON_LINE.V IN PROCEDURE DU_SET_EDIT_PROMPT
     17991**DCL     17985--DCLINIT
OPEN_CONFIG IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15232**DCL     15407<>CALL
OPEN_CONFIG.ACSVEH_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15234**DCL     15235--REDEF
OPEN_CONFIG.ALTKEYS_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15240**DCL     15241--REDEF   15241--REDEF
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:393  
OPEN_CONFIG.HDR_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15239**DCL     15240--REDEF
OPEN_CONFIG.TAB_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15238**DCL     15239--REDEF
OPEN_CONFIG.UHL_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15232**DCL     15233--REDEF   15233--REDEF
OPEN_CONFIG.V IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15241**DCL     15232--DCLINIT
OPEN_CONFIG.V.FSN# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15272**DCL     15272--REDEF   15272--REDEF
OPEN_CONFIG.WSN_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15238**DCL     15238--REDEF
OPEN_ERR IN PROCEDURE DU_OPEN_IFAD
     14662**LABEL   14649--CALLALT 14650--CALLALT 14654--CALLALT 14655--CALLALT
OPEN_LO IN PROCEDURE DU_OPEN_LO
     14889**DCL     14945<>CALL    14949<>CALL    14953<>CALL
OPEN_LO.ACSVEH_ IN PROCEDURE DU_OPEN_LO
     14891**DCL     14892--REDEF
OPEN_LO.ALTKEYS_ IN PROCEDURE DU_OPEN_LO
     14897**DCL     14898--REDEF   14898--REDEF
OPEN_LO.HDR_ IN PROCEDURE DU_OPEN_LO
     14896**DCL     14897--REDEF
OPEN_LO.TAB_ IN PROCEDURE DU_OPEN_LO
     14895**DCL     14896--REDEF
OPEN_LO.UHL_ IN PROCEDURE DU_OPEN_LO
     14889**DCL     14890--REDEF   14890--REDEF
OPEN_LO.V IN PROCEDURE DU_OPEN_LO
     14898**DCL     14889--DCLINIT
OPEN_LO.V.ASN# IN PROCEDURE DU_OPEN_LO
     14908**DCL     14940<<ASSIGN
OPEN_LO.V.EXIST# IN PROCEDURE DU_OPEN_LO
     14902**DCL     14943<<ASSIGN  14947<<ASSIGN  14951<<ASSIGN
OPEN_LO.V.FSN# IN PROCEDURE DU_OPEN_LO
     14929**DCL     14929--REDEF   14929--REDEF
OPEN_LO.V.FUN# IN PROCEDURE DU_OPEN_LO
     14908**DCL     14944<<ASSIGN  14948<<ASSIGN  14952<<ASSIGN
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:394  
OPEN_LO.V.RES# IN PROCEDURE DU_OPEN_LO
     14913**DCL     14939<<ASSIGN
OPEN_LO.WSN_ IN PROCEDURE DU_OPEN_LO
     14895**DCL     14895--REDEF
OPEN_TYPE IN PROCEDURE DU_OPEN_LO
     14813**DCL     14808--PROC    14941>>DOCASE
OUT$BLK.SUBLK$ IN PROCEDURE DU_OW_SETUP_BUFFER
     17269**DCL     17316>>ASSIGN
OUT$SYM.COUNT IN PROCEDURE DU_OW_SETUP_BUFFER
     17305**DCL     17308--IMP-SIZ 17317>>IF      17319>>ASSIGN  17320>>ASSIGN
OUT$SYM.TEXT IN PROCEDURE DU_OW_SETUP_BUFFER
     17308**DCL     17320>>ASSIGN
OUTBLK$ IN PROCEDURE DU_OW_SETUP_BUFFER
     17229**DCL     17316<<ASSIGN  17317>>IF      17319>>ASSIGN  17320>>ASSIGN  17320>>ASSIGN
PL IN PROCEDURE DU_PRINTER_OVERWRITE
     17077**DCL     17106--DCLINIT 17107--DCLINIT
PL.CARRIAGE_CONTROL IN PROCEDURE DU_PRINTER_OVERWRITE
     17078**DCL     17145<<ASSIGN  17147<<ASSIGN  17151<<ASSIGN  17153<<ASSIGN
PL.TEXT_LINE_ IN PROCEDURE DU_PRINTER_OVERWRITE
     17079**DCL     17144<<ASSIGN  17150<<ASSIGN
PL IN PROCEDURE DU_PRINTER_WRITE
     16970**DCL     16999--DCLINIT 17000--DCLINIT
PL.CARRIAGE_CONTROL IN PROCEDURE DU_PRINTER_WRITE
     16971**DCL     17037<<ASSIGN  17040<<ASSIGN
PL.TEXT_LINE_ IN PROCEDURE DU_PRINTER_WRITE
     16972**DCL     17038<<ASSIGN  17042<<ASSIGN
PRINTER_WRITE_ERROR IN PROCEDURE DU_PRINTER_OVERWRITE
     17160**LABEL   17146--CALLALT 17148--CALLALT 17152--CALLALT 17154--CALLALT
PRINTER_WRITE_ERROR IN PROCEDURE DU_PRINTER_WRITE
     17049**LABEL   17039--CALLALT 17043--CALLALT
PRINT_HEADER_ERROR IN PROCEDURE DU_HEADER_WRITE
     17640**LABEL   17627--CALLALT 17632--CALLALT
PROMPT_BUFFER IN PROCEDURE DU_SET_PROMPT
     18034**DCL     18031--PROC    18071>>ASSIGN
PROMPT_ERROR IN PROCEDURE DU_SET_EDIT_PROMPT
     18004**LABEL   18000--CALLALT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:395  
PROMPT_ERROR IN PROCEDURE DU_SET_PROMPT
     18078**LABEL   18073--CALLALT
READ_CONFIG IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15295**DCL     15410<>CALL
READ_CONFIG.BUF_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15297**DCL     15409<<ASSIGN
READ_CONFIG.KEY_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15295**DCL     15408<<ASSIGN
READ_CONFIG.STATION_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15298**DCL     15299--REDEF
READ_CONFIG.V IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15299**DCL     15295--DCLINIT
READ_CONFIG.V.DVBYTE.REREAD# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15310**DCL     15310--REDEF
READ_CONFIG.V.INDX# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15308**DCL     15308--REDEF
READ_FID IN PROCEDURE DU_OPEN_DF
     16407**DCL     16479<>CALL
READ_FID.ACSVEH_ IN PROCEDURE DU_OPEN_DF
     16409**DCL     16410--REDEF
READ_FID.ALTKEYS_ IN PROCEDURE DU_OPEN_DF
     16415**DCL     16416--REDEF   16416--REDEF
READ_FID.HDR_ IN PROCEDURE DU_OPEN_DF
     16414**DCL     16415--REDEF
READ_FID.TAB_ IN PROCEDURE DU_OPEN_DF
     16413**DCL     16414--REDEF
READ_FID.UHL_ IN PROCEDURE DU_OPEN_DF
     16407**DCL     16408--REDEF   16408--REDEF
READ_FID.V IN PROCEDURE DU_OPEN_DF
     16416**DCL     16407--DCLINIT
READ_FID.V.FSN# IN PROCEDURE DU_OPEN_DF
     16447**DCL     16447--REDEF   16447--REDEF
READ_FID.WSN_ IN PROCEDURE DU_OPEN_DF
     16413**DCL     16413--REDEF
RESPONSE IN PROCEDURE DU_USER_READ
     16814**DCL     16812--PROC    16859<<ASSIGN  16860--ASSIGN
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:396  
SAVE_DECKFILE IN PROCEDURE DU_CLOSE_DF
     16570**DCL     16640<>CALL
SAVE_DECKFILE.SN_ IN PROCEDURE DU_CLOSE_DF
     16570**DCL     16570--REDEF
SAVE_DECKFILE.UTL_ IN PROCEDURE DU_CLOSE_DF
     16571**DCL     16571--REDEF
SAVE_DECKFILE.V IN PROCEDURE DU_CLOSE_DF
     16575**DCL     16570--DCLINIT
SAVE_DECKFILE.V.EXPIRE# IN PROCEDURE DU_CLOSE_DF
     16585**DCL     16585--REDEF
SAVE_DECKFILE.V.TYPE# IN PROCEDURE DU_CLOSE_DF
     16583**DCL     16583--REDEF
SAVE_DECKFILE.V.XTNSIZE# IN PROCEDURE DU_CLOSE_DF
     16580**DCL     16580--REDEF   16582--REDEF
SEND_MSG IN PROCEDURE DU_ISSUE_OP_MSG
     17363**DCL     17379<>CALL
SEND_MSG.MESS_ IN PROCEDURE DU_ISSUE_OP_MSG
     17363**DCL     17374<<ASSIGN
SEND_MSG.REPLY_ IN PROCEDURE DU_ISSUE_OP_MSG
     17364**DCL     17376<<ASSIGN  17377<<ASSIGN
SEND_MSG.RESULTS_ IN PROCEDURE DU_ISSUE_OP_MSG
     17365**DCL     17378<<ASSIGN
SEND_MSG.V IN PROCEDURE DU_ISSUE_OP_MSG
     17366**DCL     17363--DCLINIT
SETUP_IFAD_DISK IN PROCEDURE DU_OPEN_IFAD
     14536**DCL     14654<>CALL
SETUP_IFAD_DISK.V IN PROCEDURE DU_OPEN_IFAD
     14540**DCL     14536--DCLINIT
SETUP_IFAD_IMU IN PROCEDURE DU_OPEN_MCA
     15504**DCL     15609<>CALL
SETUP_IFAD_IMU.V IN PROCEDURE DU_OPEN_MCA
     15508**DCL     15504--DCLINIT
SETUP_IFAD_TAPE IN PROCEDURE DU_OPEN_IFAD
     14498**DCL     14649<>CALL
SETUP_IFAD_TAPE.V IN PROCEDURE DU_OPEN_IFAD
     14502**DCL     14498--DCLINIT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:397  
SET_PROMPT IN PROCEDURE DU_SET_PROMPT
     18053**DCL     18073<>CALL
SET_PROMPT.PROMPT_ IN PROCEDURE DU_SET_PROMPT
     18059**DCL     18072<<ASSIGN
SET_PROMPT.V IN PROCEDURE DU_SET_PROMPT
     18061**DCL     18055--DCLINIT
SET_PROMPT_ITEM IN PROCEDURE DU_SET_PROMPT
     18036**DCL     18071<<ASSIGN  18072--ASSIGN
SITE_ID IN PROCEDURE DU_GET_SITE
     18299**DCL     18295--PROC    18343<<ASSIGN
SITE_NAME IN PROCEDURE DU_GET_SITE
     18297**DCL     18295--PROC    18341<<ASSIGN
SITE_NAME_LGTH IN PROCEDURE DU_GET_SITE
     18298**DCL     18295--PROC    18342<<ASSIGN
SKIPPED IN PROCEDURE DU_PRINTER_OVERWRITE
     17081**DCL     17125<<ASSIGN  17126<<ASSIGN  17134>>ASSIGN  17156>>ASSIGN
SKIPPED IN PROCEDURE DU_PRINTER_WRITE
     16974**DCL     17018<<ASSIGN  17019<<ASSIGN  17027>>ASSIGN  17045>>ASSIGN
STATUS IN PROCEDURE DU_MCA_RESET_STATUS
     15684**DCL     15773<<ASSIGN
STATUS.MAJOR IN PROCEDURE DU_MCA_RESET_STATUS
     15686**DCL     15774>>IF
STATUS.SUB IN PROCEDURE DU_MCA_RESET_STATUS
     15688**DCL     15774>>IF
STORE_WHEN IN PROCEDURE DU_UPDATE_LOG
     18244**DCL     18263<>CALL
STORE_WHEN.DATE_ IN PROCEDURE DU_UPDATE_LOG
     18244**DCL     18261<<ASSIGN
STORE_WHEN.TIME_ IN PROCEDURE DU_UPDATE_LOG
     18246**DCL     18262<<ASSIGN
STORE_WHEN.V IN PROCEDURE DU_UPDATE_LOG
     18248**DCL     18244--DCLINIT
STRING IN PROCEDURE DU_UNFID_DCB
     16762**DCL     16759--PROC    16785--ASSIGN
SYSTEM_ERRMSG IN PROCEDURE DU_SYSTEM_ERRMSG
     17875**DCL     17946<>CALL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:398  
SYSTEM_ERRMSG.BUF_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17875**DCL     17939<<ASSIGN
SYSTEM_ERRMSG.V IN PROCEDURE DU_SYSTEM_ERRMSG
     17879**DCL     17875--DCLINIT
SYSTEM_ERRMSG.V.DCB# IN PROCEDURE DU_SYSTEM_ERRMSG
     17879**DCL     17944<<ASSIGN
SYSTEM_ERRMSG.V.FLAGLEV# IN PROCEDURE DU_SYSTEM_ERRMSG
     17881**DCL     17945<<ASSIGN
TARGET_FID IN PROCEDURE DU_SET_FULL_FID
     16674**DCL     16670--PROC    16685<<ASSIGN  16689<<ASSIGN  16694<<CALLBLT 16701<<CALLBLT
TARGET_LGTH IN PROCEDURE DU_SET_FULL_FID
     16675**DCL     16670--PROC    16684<<ASSIGN  16685>>ASSIGN  16690<<ASSIGN  16698<<ASSIGN  16706<<ASSIGN
TD$HEAD.NUMIOMS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15125**DCL     15414>>IF
TD$HEAD$ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15121**DCL     15123--IMP-PTR 15413<<ASSIGN  15414>>IF
TEXT_BUF IN PROCEDURE DU_OT_STRIP_TRAILING_BLANKS
     17510**DCL     17508--PROC    17516>>DOWHILE
TEXT_FID IN PROCEDURE DU_SET_FID
     16730**DCL     16728--PROC    16734--ASSIGN
THREE_QUESTION_MARKS IN PROCEDURE DU_SET_EDIT_PROMPT
     17965**DCL     17989--DCLINIT
TOU$DU_ALTRETURN
     14090**LABEL   13676--CALLALT 13696--CALLALT 13713--CALLALT 13727--CALLALT 13742--CALLALT 13750--CALLALT
     13754--CALLALT 13769--CALLALT 13784--CALLALT 13799--CALLALT 13812--CALLALT 13830--CALLALT 13849--CALLALT
     13880--CALLALT 13895--CALLALT 13910--CALLALT 13925--CALLALT 13939--CALLALT 14001--CALLALT 14015--CALLALT
     14030--CALLALT 14045--CALLALT 14059--CALLALT 14075--CALLALT
TOU$REPLACE
     13664**DCL-ENT 17818--CALL
TO_PRINTER IN PROCEDURE DU_HEADER_WRITE
     17605**DCL     17627<>CALL    17632<>CALL
TO_PRINTER.STATION_ IN PROCEDURE DU_HEADER_WRITE
     17607**DCL     17607--REDEF
TO_PRINTER.V IN PROCEDURE DU_HEADER_WRITE
     17608**DCL     17605--DCLINIT
TO_PRINTER.V.DVBYTE.VFC# IN PROCEDURE DU_HEADER_WRITE
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:399  
     17614**DCL     17614--REDEF
TO_PRINTER IN PROCEDURE DU_PRINTER_OVERWRITE
     17105**DCL     17146<>CALL    17148<>CALL    17152<>CALL    17154<>CALL
TO_PRINTER.STATION_ IN PROCEDURE DU_PRINTER_OVERWRITE
     17107**DCL     17107--REDEF
TO_PRINTER.V IN PROCEDURE DU_PRINTER_OVERWRITE
     17108**DCL     17105--DCLINIT
TO_PRINTER.V.DVBYTE.VFC# IN PROCEDURE DU_PRINTER_OVERWRITE
     17114**DCL     17114--REDEF
TO_PRINTER IN PROCEDURE DU_PRINTER_WRITE
     16998**DCL     17039<>CALL    17043<>CALL
TO_PRINTER.STATION_ IN PROCEDURE DU_PRINTER_WRITE
     17000**DCL     17000--REDEF
TO_PRINTER.V IN PROCEDURE DU_PRINTER_WRITE
     17001**DCL     16998--DCLINIT
TO_PRINTER.V.DVBYTE.VFC# IN PROCEDURE DU_PRINTER_WRITE
     17007**DCL     17007--REDEF
TO_USER IN PROCEDURE DU_USER_WRITE
     16915**DCL     16938<>CALL
TO_USER.BUF_ IN PROCEDURE DU_USER_WRITE
     16915**DCL     16937<<ASSIGN
TO_USER.STATION_ IN PROCEDURE DU_USER_WRITE
     16917**DCL     16917--REDEF
TO_USER.V IN PROCEDURE DU_USER_WRITE
     16918**DCL     16915--DCLINIT
TO_USER.V.DVBYTE.VFC# IN PROCEDURE DU_USER_WRITE
     16924**DCL     16924--REDEF
UNFID_DCB IN PROCEDURE DU_UNFID_DCB
     16775**DCL     16788<>CALL
UNFID_DCB.LEN_ IN PROCEDURE DU_UNFID_DCB
     16778**DCL     16786<<ASSIGN
UNFID_DCB.TEXTFID_ IN PROCEDURE DU_UNFID_DCB
     16775**DCL     16785<<ASSIGN
UNFID_DCB.V IN PROCEDURE DU_UNFID_DCB
     16779**DCL     16775--DCLINIT
UNFID_DCB.V.DCB# IN PROCEDURE DU_UNFID_DCB
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:400  
     16779**DCL     16787<<ASSIGN
UNFID_ERROR IN PROCEDURE DU_UNFID_DCB
     16792**LABEL   16788--CALLALT
UPDATE_FID IN PROCEDURE DU_OPEN_DF
     16286**DCL     16470<>CALL
UPDATE_FID.ACSVEH_ IN PROCEDURE DU_OPEN_DF
     16288**DCL     16289--REDEF
UPDATE_FID.ALTKEYS_ IN PROCEDURE DU_OPEN_DF
     16294**DCL     16295--REDEF   16295--REDEF
UPDATE_FID.HDR_ IN PROCEDURE DU_OPEN_DF
     16293**DCL     16294--REDEF
UPDATE_FID.TAB_ IN PROCEDURE DU_OPEN_DF
     16292**DCL     16293--REDEF
UPDATE_FID.UHL_ IN PROCEDURE DU_OPEN_DF
     16286**DCL     16287--REDEF   16287--REDEF
UPDATE_FID.V IN PROCEDURE DU_OPEN_DF
     16295**DCL     16286--DCLINIT
UPDATE_FID.V.FSN# IN PROCEDURE DU_OPEN_DF
     16326**DCL     16326--REDEF   16326--REDEF
UPDATE_FID.WSN_ IN PROCEDURE DU_OPEN_DF
     16292**DCL     16292--REDEF
USER_READ_ERROR IN PROCEDURE DU_USER_READ
     16867**LABEL   16862--CALLALT
WORD_COUNT IN PROCEDURE DU_FREE_DATA_SEGMENT
     18147**DCL     18145--PROC    18167>>ASSIGN
WORD_COUNT IN PROCEDURE DU_GET_DATA_SEGMENT
     18098**DCL     18096--PROC    18120>>ASSIGN
WORD_VECTOR IN PROCEDURE DU_FREE_DATA_SEGMENT
     18148**DCL     18145--PROC    18168--ASSIGN
WORD_VECTOR IN PROCEDURE DU_GET_DATA_SEGMENT
     18099**DCL     18096--PROC    18121--ASSIGN
WRITE_ERROR IN PROCEDURE DU_USER_WRITE
     16943**LABEL   16938--CALLALT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:401  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:402  
              FULL UREF LISTING

ACCOUNT_NAME.ACCT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15402**DCL
B$ALT
     13598**DCL
B$ALT.BRKCNT
     13599**DCL
B$ALT.ERR.CODE
     13600**DCL
B$ALT.ERR.FCG
     13600**DCL
B$ALT.ERR.MID
     13600**DCL
B$ALT.ERR.MON
     13600**DCL
B$ALT.ERR.SEV
     13600**DCL
B$ALT.EVSC
     13599**DCL
B$ALT.FPT
     13598**DCL
B$ALT.FPT.FCG
     13598**DCL
B$ALT.FPT.PMME
     13598**DCL
B$ALT.P#
     13602**DCL
B$ALT.SSFRAME
     13598**DCL
B$ALT.SUBC
     13599**DCL
B$JIT
       431**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:403  
B$JIT.ACCEPT_FLAGS
       584**DCL
B$JIT.ACCEPT_FLAGS.ANNOUNCE
       584**DCL
B$JIT.ACCEPT_FLAGS.BROADCAST
       584**DCL
B$JIT.ACCEPT_FLAGS.SEND
       584**DCL
B$JIT.ACCESS
       704**DCL
B$JIT.ACCESS.FORMS
       704**DCL
B$JIT.ACCESS.PACKS
       704**DCL
B$JIT.ACCESS.TAPES
       704**DCL
B$JIT.ACCN
       436**DCL
B$JIT.APATTR
       709**DCL
B$JIT.ARECX
       704**DCL
B$JIT.BILL
       584**DCL
B$JIT.BLINDACCTNG
       584**DCL
B$JIT.BUDLIM
       573**DCL
B$JIT.CALCNT
       610**DCL
B$JIT.CCARS
       524**DCL
B$JIT.CCBUF
       524**DCL
B$JIT.CCDISP
       524**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:404  
B$JIT.CHECK_CFU
       606**DCL
B$JIT.CLRES
       703**DCL
B$JIT.CPFLAGS1
       525**DCL
B$JIT.CPFLAGS1.BRK
       529**DCL
B$JIT.CPFLAGS1.BUFFULL
       529**DCL
B$JIT.CPFLAGS1.CFREAD
       529**DCL
B$JIT.CPFLAGS1.DELTA
       530**DCL
B$JIT.CPFLAGS1.DONTRFEXT3
       526**DCL
B$JIT.CPFLAGS1.DRIBBLE
       528**DCL
B$JIT.CPFLAGS1.ECHO
       529**DCL
B$JIT.CPFLAGS1.ECHO_LINK
       526**DCL
B$JIT.CPFLAGS1.EXIT#
       528**DCL
B$JIT.CPFLAGS1.FIRSTCP
       527**DCL
B$JIT.CPFLAGS1.INITIALIZE
       528**DCL
B$JIT.CPFLAGS1.JSTEP
       525**DCL
B$JIT.CPFLAGS1.KEEPDS
       528**DCL
B$JIT.CPFLAGS1.LASTCP
       527**DCL
B$JIT.CPFLAGS1.LASTCPEXISTS
       527**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:405  
B$JIT.CPFLAGS1.LNKPMME
       526**DCL
B$JIT.CPFLAGS1.LOGOFF
       525**DCL
B$JIT.CPFLAGS1.NOTIFY
       528**DCL
B$JIT.CPFLAGS1.PROCACCT
       528**DCL
B$JIT.CPFLAGS1.PROTECT
       529**DCL
B$JIT.CPFLAGS1.RUND
       525**DCL
B$JIT.CPFLAGS1.SCREECH
       529**DCL
B$JIT.CPFLAGS1.SKIPABORT
       528**DCL
B$JIT.CPFLAGS1.SOMENOTIFY
       527**DCL
B$JIT.CPFLAGS1.SSTART
       526**DCL
B$JIT.CPFLAGS1.STARPROC
       527**DCL
B$JIT.CPFLAGS1.STARSACC
       527**DCL
B$JIT.CPFLAGS1.STEPACCT
       529**DCL
B$JIT.CPFLAGS1.STEPLMT
       529**DCL
B$JIT.CPFLAGS1.TESTMODE
       527**DCL
B$JIT.CPFLAGS1.TRMNATE
       528**DCL
B$JIT.CPFLAGS1.WHEN_INPUT
       526**DCL
B$JIT.CPFLAGS1.YC
       525**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:406  
B$JIT.CPFLAGS1.YCGET
       526**DCL
B$JIT.CPFLAGS1.YCPMME
       526**DCL
B$JIT.CSLEV
       591**DCL
B$JIT.CTIME
       609**DCL
B$JIT.CURPNUM
       690**DCL
B$JIT.CURRCORE
       598**DCL
B$JIT.CURSUDO
       705**DCL
B$JIT.CURTMPDP
       605**DCL
B$JIT.DCB$
       604**DCL
B$JIT.DCBNO
       517**DCL
B$JIT.DDLL
       594**DCL
B$JIT.DDUL
       594**DCL
B$JIT.DEFEXP
       604**DCL
B$JIT.DEFPRI
       584**DCL
B$JIT.DLL
       594**DCL
B$JIT.DO$
       604**DCL
B$JIT.DUL
       594**DCL
B$JIT.ENQS
       709**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:407  
B$JIT.ERR
       436**DCL
B$JIT.ERR.CODE
       437**DCL
B$JIT.ERR.FCG
       436**DCL
B$JIT.ERR.MON
       437**DCL
B$JIT.ERR.SEV
       437**DCL
B$JIT.ERR.UMID
       437**DCL
B$JIT.EUP
       596**DCL
B$JIT.EXTUS
       612**DCL
B$JIT.FACNACS
       604**DCL
B$JIT.FACNCM
       606**DCL
B$JIT.FBUC
       596**DCL
B$JIT.FBUL
       596**DCL
B$JIT.FEXT
       604**DCL
B$JIT.FPSN
       517**DCL
B$JIT.FRS
       632**DCL
B$JIT.GAC
       605**DCL
B$JIT.HIGHPNUM
       690**DCL
B$JIT.HPSN
       604**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:408  
B$JIT.IDELTAT
       610**DCL
B$JIT.INSTWORD
       524**DCL
B$JIT.INTER
       703**DCL
B$JIT.INTTIME
       609**DCL
B$JIT.JOBNAME
       585**DCL
B$JIT.JOBUNIT
       525**DCL
B$JIT.JORG
       572**DCL
B$JIT.JPEAK
       598**DCL
B$JIT.JSLEV
       573**DCL
B$JIT.JTMPDPPK
       605**DCL
B$JIT.JUNK
       636**DCL
B$JIT.JUNK2
       690**DCL
B$JIT.LANG
       572**DCL
B$JIT.LBJID
       612**DCL
B$JIT.LLL
       600**DCL
B$JIT.LNKCNT
       636**DCL
B$JIT.LOCK
       585**DCL
B$JIT.LOGONTIME
       573**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:409  
B$JIT.LUL
       600**DCL
B$JIT.MAXCORE
       597**DCL
B$JIT.MAXENQ
       709**DCL
B$JIT.MAXEXP
       604**DCL
B$JIT.MAXPRI
       584**DCL
B$JIT.MAXTMPDP
       605**DCL
B$JIT.MMFLGS
       597**DCL
B$JIT.MMFLGS.FREE_PPGS
       597**DCL
B$JIT.MODE
       431**DCL
B$JIT.MOUNTS
       704**DCL
B$JIT.MRT
       610**DCL
B$JIT.MSGID
       585**DCL
B$JIT.MSGID.PRIMARY
       585**DCL
B$JIT.MSGID.XT
       586**DCL
B$JIT.NEXTCC
       578**DCL
B$JIT.NODOEVER
       703**DCL
B$JIT.NOLOEVER
       703**DCL
B$JIT.NOPOEVER
       703**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:410  
B$JIT.NUTS
       611**DCL
B$JIT.OLTA
       704**DCL
B$JIT.ORIGINATOR_MODE
       703**DCL
B$JIT.ORIGINATOR_PORT
       706**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.DEVICE
       707**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.TNAME
       707**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST
       707**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST.SYSID
       707**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT
       708**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.SYSID
       708**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.TSLINE
       708**DCL
B$JIT.OUTPRIO
       517**DCL
B$JIT.PCADS
       600**DCL
B$JIT.PCC
       595**DCL
B$JIT.PCD
       595**DCL
B$JIT.PCDD
       596**DCL
B$JIT.PCDDS
       599**DCL
B$JIT.PCDS
       595**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:411  
B$JIT.PCL
       600**DCL
B$JIT.PCP
       595**DCL
B$JIT.PCROS
       595**DCL
B$JIT.PCV
       600**DCL
B$JIT.PLL
       594**DCL
B$JIT.PMEMTIM
       610**DCL
B$JIT.PMME_COUNT
       708**DCL
B$JIT.PMME_DATA
       708**DCL
B$JIT.PMME_DATA.CPU
       708**DCL
B$JIT.PMME_DATA.I_O
       708**DCL
B$JIT.PMME_DATA.MISC1
       708**DCL
B$JIT.PMME_DATA.MISC2
       709**DCL
B$JIT.PPC
       597**DCL
B$JIT.PPRIV
       492**DCL
B$JIT.PPRIV.CNTRLC
       492**DCL
B$JIT.PPRIV.CNTRLD
       492**DCL
B$JIT.PPRIV.EFT
       492**DCL
B$JIT.PPRIV.EL
       492**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:412  
B$JIT.PPRIV.LABEL
       493**DCL
B$JIT.PPRIV.NETCON
       493**DCL
B$JIT.PPRIV.PADMIN
       494**DCL
B$JIT.PPRIV.PIGC
       493**DCL
B$JIT.PPRIV.PIGD
       493**DCL
B$JIT.PPRIV.PIGETTE
       495**DCL
B$JIT.PPRIV.RATES
       494**DCL
B$JIT.PPRIV.REPLAY
       494**DCL
B$JIT.PPRIV.SPIDERC
       493**DCL
B$JIT.PPRIV.SPIDERD
       493**DCL
B$JIT.PPRIV.SUPER
       493**DCL
B$JIT.PPRIV.SUPERAUTH
       493**DCL
B$JIT.PPRIV.SUPERD
       494**DCL
B$JIT.PPRIV.SUPERFORM
       494**DCL
B$JIT.PPRIV.SUPERWSN
       494**DCL
B$JIT.PPRIV.SYSCON
       494**DCL
B$JIT.PPRIV.VOLINIT
       494**DCL
B$JIT.PRDPRM
       605**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:413  
B$JIT.PRFLAGS
       520**DCL
B$JIT.PRFLAGS.COMMENT
       520**DCL
B$JIT.PRFLAGS.CONTINUED
       520**DCL
B$JIT.PRFLAGS.CORRECT
       521**DCL
B$JIT.PRFLAGS.EXPOUND
       521**DCL
B$JIT.PRFLAGS.LIST
       520**DCL
B$JIT.PRFLAGS.LS
       520**DCL
B$JIT.PRFLAGS.NOSCAN
       521**DCL
B$JIT.PRFLAGS.NSSYNTAX
       520**DCL
B$JIT.PRFLAGS.OU
       520**DCL
B$JIT.PRFLAGS.OUTPUT
       520**DCL
B$JIT.PRFLAGS.POINT
       521**DCL
B$JIT.PRFLAGS.POSITION
       521**DCL
B$JIT.PRFLAGS.SI
       520**DCL
B$JIT.PRFLAGS.UI
       520**DCL
B$JIT.PRFLAGS.WHEN
       521**DCL
B$JIT.PRIINC
       611**DCL
B$JIT.PRIOB
       609**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:414  
B$JIT.PRIOCORE
       597**DCL
B$JIT.PRIOR_CP
       700**DCL
B$JIT.PRIV
       437**DCL
B$JIT.PRIV.ACTIVE
       437**DCL
B$JIT.PRIV.ACTIVE.ASAVE
       439**DCL
B$JIT.PRIV.ACTIVE.CFEP
       440**DCL
B$JIT.PRIV.ACTIVE.CQ
       440**DCL
B$JIT.PRIV.ACTIVE.DISPJOB
       439**DCL
B$JIT.PRIV.ACTIVE.DOMANE
       438**DCL
B$JIT.PRIV.ACTIVE.EXMM
       441**DCL
B$JIT.PRIV.ACTIVE.EXPM
       440**DCL
B$JIT.PRIV.ACTIVE.FMBLK
       437**DCL
B$JIT.PRIV.ACTIVE.FMDIAG
       438**DCL
B$JIT.PRIV.ACTIVE.FMEFT
       437**DCL
B$JIT.PRIV.ACTIVE.FMREAD
       438**DCL
B$JIT.PRIV.ACTIVE.FMSEC
       438**DCL
B$JIT.PRIV.ACTIVE.GPP
       439**DCL
B$JIT.PRIV.ACTIVE.INTCON
       440**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:415  
B$JIT.PRIV.ACTIVE.IOQ
       440**DCL
B$JIT.PRIV.ACTIVE.IOQW
       440**DCL
B$JIT.PRIV.ACTIVE.JIT
       441**DCL
B$JIT.PRIV.ACTIVE.MAXMEM
       441**DCL
B$JIT.PRIV.ACTIVE.MFEP
       440**DCL
B$JIT.PRIV.ACTIVE.MODE
       438**DCL
B$JIT.PRIV.ACTIVE.MSYS
       441**DCL
B$JIT.PRIV.ACTIVE.PM
       440**DCL
B$JIT.PRIV.ACTIVE.SCREECH
       439**DCL
B$JIT.PRIV.ACTIVE.SNAP
       439**DCL
B$JIT.PRIV.ACTIVE.SPCLMM
       441**DCL
B$JIT.PRIV.ACTIVE.SYSACCT
       438**DCL
B$JIT.PRIV.ACTIVE.SYSCON
       439**DCL
B$JIT.PRIV.ACTIVE.SYSLOG
       440**DCL
B$JIT.PRIV.ACTIVE.TND
       440**DCL
B$JIT.PRIV.AUTH
       477**DCL
B$JIT.PRIV.AUTH.ASAVE
       478**DCL
B$JIT.PRIV.AUTH.CFEP
       479**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:416  
B$JIT.PRIV.AUTH.CQ
       479**DCL
B$JIT.PRIV.AUTH.DISPJOB
       478**DCL
B$JIT.PRIV.AUTH.DOMANE
       477**DCL
B$JIT.PRIV.AUTH.EXMM
       480**DCL
B$JIT.PRIV.AUTH.EXPM
       479**DCL
B$JIT.PRIV.AUTH.FMBLK
       477**DCL
B$JIT.PRIV.AUTH.FMDIAG
       477**DCL
B$JIT.PRIV.AUTH.FMEFT
       477**DCL
B$JIT.PRIV.AUTH.FMREAD
       477**DCL
B$JIT.PRIV.AUTH.FMSEC
       477**DCL
B$JIT.PRIV.AUTH.GPP
       479**DCL
B$JIT.PRIV.AUTH.INTCON
       479**DCL
B$JIT.PRIV.AUTH.IOQ
       479**DCL
B$JIT.PRIV.AUTH.IOQW
       479**DCL
B$JIT.PRIV.AUTH.JIT
       480**DCL
B$JIT.PRIV.AUTH.MAXMEM
       480**DCL
B$JIT.PRIV.AUTH.MFEP
       479**DCL
B$JIT.PRIV.AUTH.MODE
       477**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:417  
B$JIT.PRIV.AUTH.MSYS
       480**DCL
B$JIT.PRIV.AUTH.PM
       480**DCL
B$JIT.PRIV.AUTH.SCREECH
       478**DCL
B$JIT.PRIV.AUTH.SNAP
       478**DCL
B$JIT.PRIV.AUTH.SPCLMM
       480**DCL
B$JIT.PRIV.AUTH.SYSACCT
       477**DCL
B$JIT.PRIV.AUTH.SYSCON
       478**DCL
B$JIT.PRIV.AUTH.SYSLOG
       479**DCL
B$JIT.PRIV.AUTH.TND
       480**DCL
B$JIT.PRIV.JOB
       480**DCL
B$JIT.PRIV.JOB.ASAVE
       482**DCL
B$JIT.PRIV.JOB.CFEP
       483**DCL
B$JIT.PRIV.JOB.CQ
       483**DCL
B$JIT.PRIV.JOB.DISPJOB
       482**DCL
B$JIT.PRIV.JOB.DOMANE
       481**DCL
B$JIT.PRIV.JOB.EXMM
       484**DCL
B$JIT.PRIV.JOB.EXPM
       483**DCL
B$JIT.PRIV.JOB.FMBLK
       481**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:418  
B$JIT.PRIV.JOB.FMDIAG
       481**DCL
B$JIT.PRIV.JOB.FMEFT
       480**DCL
B$JIT.PRIV.JOB.FMREAD
       481**DCL
B$JIT.PRIV.JOB.FMSEC
       481**DCL
B$JIT.PRIV.JOB.GPP
       482**DCL
B$JIT.PRIV.JOB.INTCON
       483**DCL
B$JIT.PRIV.JOB.IOQ
       483**DCL
B$JIT.PRIV.JOB.IOQW
       483**DCL
B$JIT.PRIV.JOB.JIT
       484**DCL
B$JIT.PRIV.JOB.MAXMEM
       484**DCL
B$JIT.PRIV.JOB.MFEP
       483**DCL
B$JIT.PRIV.JOB.MODE
       481**DCL
B$JIT.PRIV.JOB.MSYS
       484**DCL
B$JIT.PRIV.JOB.PM
       483**DCL
B$JIT.PRIV.JOB.SCREECH
       482**DCL
B$JIT.PRIV.JOB.SNAP
       482**DCL
B$JIT.PRIV.JOB.SPCLMM
       484**DCL
B$JIT.PRIV.JOB.SYSACCT
       481**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:419  
B$JIT.PRIV.JOB.SYSCON
       482**DCL
B$JIT.PRIV.JOB.SYSLOG
       483**DCL
B$JIT.PRIV.JOB.TND
       484**DCL
B$JIT.PRIV.PRC
       484**DCL
B$JIT.PRIV.PRC.ASAVE
       486**DCL
B$JIT.PRIV.PRC.CFEP
       487**DCL
B$JIT.PRIV.PRC.CQ
       487**DCL
B$JIT.PRIV.PRC.DISPJOB
       486**DCL
B$JIT.PRIV.PRC.DOMANE
       485**DCL
B$JIT.PRIV.PRC.EXMM
       488**DCL
B$JIT.PRIV.PRC.EXPM
       487**DCL
B$JIT.PRIV.PRC.FMBLK
       484**DCL
B$JIT.PRIV.PRC.FMDIAG
       485**DCL
B$JIT.PRIV.PRC.FMEFT
       484**DCL
B$JIT.PRIV.PRC.FMREAD
       485**DCL
B$JIT.PRIV.PRC.FMSEC
       485**DCL
B$JIT.PRIV.PRC.GPP
       486**DCL
B$JIT.PRIV.PRC.INTCON
       487**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:420  
B$JIT.PRIV.PRC.IOQ
       487**DCL
B$JIT.PRIV.PRC.IOQW
       487**DCL
B$JIT.PRIV.PRC.JIT
       488**DCL
B$JIT.PRIV.PRC.MAXMEM
       488**DCL
B$JIT.PRIV.PRC.MFEP
       487**DCL
B$JIT.PRIV.PRC.MODE
       485**DCL
B$JIT.PRIV.PRC.MSYS
       488**DCL
B$JIT.PRIV.PRC.PM
       487**DCL
B$JIT.PRIV.PRC.SCREECH
       486**DCL
B$JIT.PRIV.PRC.SNAP
       486**DCL
B$JIT.PRIV.PRC.SPCLMM
       488**DCL
B$JIT.PRIV.PRC.SYSACCT
       485**DCL
B$JIT.PRIV.PRC.SYSCON
       486**DCL
B$JIT.PRIV.PRC.SYSLOG
       486**DCL
B$JIT.PRIV.PRC.TND
       487**DCL
B$JIT.PRIV.SAVED
       488**DCL
B$JIT.PRIV.SAVED.ASAVE
       490**DCL
B$JIT.PRIV.SAVED.CFEP
       491**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:421  
B$JIT.PRIV.SAVED.CQ
       491**DCL
B$JIT.PRIV.SAVED.DISPJOB
       490**DCL
B$JIT.PRIV.SAVED.DOMANE
       489**DCL
B$JIT.PRIV.SAVED.EXMM
       492**DCL
B$JIT.PRIV.SAVED.EXPM
       491**DCL
B$JIT.PRIV.SAVED.FMBLK
       488**DCL
B$JIT.PRIV.SAVED.FMDIAG
       489**DCL
B$JIT.PRIV.SAVED.FMEFT
       488**DCL
B$JIT.PRIV.SAVED.FMREAD
       489**DCL
B$JIT.PRIV.SAVED.FMSEC
       488**DCL
B$JIT.PRIV.SAVED.GPP
       490**DCL
B$JIT.PRIV.SAVED.INTCON
       491**DCL
B$JIT.PRIV.SAVED.IOQ
       491**DCL
B$JIT.PRIV.SAVED.IOQW
       491**DCL
B$JIT.PRIV.SAVED.JIT
       491**DCL
B$JIT.PRIV.SAVED.MAXMEM
       492**DCL
B$JIT.PRIV.SAVED.MFEP
       491**DCL
B$JIT.PRIV.SAVED.MODE
       489**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:422  
B$JIT.PRIV.SAVED.MSYS
       492**DCL
B$JIT.PRIV.SAVED.PM
       491**DCL
B$JIT.PRIV.SAVED.SCREECH
       490**DCL
B$JIT.PRIV.SAVED.SNAP
       490**DCL
B$JIT.PRIV.SAVED.SPCLMM
       492**DCL
B$JIT.PRIV.SAVED.SYSACCT
       489**DCL
B$JIT.PRIV.SAVED.SYSCON
       490**DCL
B$JIT.PRIV.SAVED.SYSLOG
       490**DCL
B$JIT.PRIV.SAVED.TND
       491**DCL
B$JIT.PROG_ENTRY
       586**DCL
B$JIT.PROMPTS
       585**DCL
B$JIT.PSEUDOPGS
       599**DCL
B$JIT.PSEUDO_COUNT
       700**DCL
B$JIT.PSEUDO_TEXT
       700**DCL
B$JIT.PSLEV
       573**DCL
B$JIT.PTSIZ
       600**DCL
B$JIT.PUL
       594**DCL
B$JIT.QUAN
       609**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:423  
B$JIT.REMCPO
       709**DCL
B$JIT.REMDO
       709**DCL
B$JIT.REMLO
       709**DCL
B$JIT.RERUN
       611**DCL
B$JIT.RESCORE
       705**DCL
B$JIT.RESPEAK
       599**DCL
B$JIT.RNST
       615**DCL
B$JIT.RUNFLAGS
       632**DCL
B$JIT.SAVEDCB$
       606**DCL
B$JIT.SCHTIME
       609**DCL
B$JIT.SINPUTSZ
       585**DCL
B$JIT.SPEAK
       598**DCL
B$JIT.SRESPEAK
       599**DCL
B$JIT.SSLEV
       573**DCL
B$JIT.STAR
       604**DCL
B$JIT.STAR.DA
       604**DCL
B$JIT.STDLOPGS
       704**DCL
B$JIT.STEPCC
       663**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:424  
B$JIT.STEPS
       657**DCL
B$JIT.STEPUNIT
       525**DCL
B$JIT.STIME
       609**DCL
B$JIT.STMPDPPK
       605**DCL
B$JIT.SVLDTF
       677**DCL
B$JIT.SVTUS
       612**DCL
B$JIT.SWITCH
       524**DCL
B$JIT.SYSID
       436**DCL
B$JIT.TDP
       596**DCL
B$JIT.TMPGAC
       605**DCL
B$JIT.TMPGAC.N
       605**DCL
B$JIT.TMPGAC.TIME
       605**DCL
B$JIT.TPEXT
       610**DCL
B$JIT.TPSVT
       610**DCL
B$JIT.TSLINE.FEX
       705**DCL
B$JIT.TSLINE.LEV
       706**DCL
B$JIT.TSLINE.PORT
       705**DCL
B$JIT.TSLINE.SPEED
       705**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:425  
B$JIT.TSLINE.SUBDEVICE
       706**DCL
B$JIT.TSLINE.SUBSUBDEVICE
       706**DCL
B$JIT.TSLINE.TTYP
       706**DCL
B$JIT.TUEXT
       610**DCL
B$JIT.TUSVT
       610**DCL
B$JIT.UMEMTIM
       610**DCL
B$JIT.UNAME
       436**DCL
B$JIT.USER
       436**DCL
B$JIT.USERWORD
       524**DCL
B$JIT.USRDCB
       585**DCL
B$JIT.USRERR
       572**DCL
B$JIT.USRERR.CODE
       572**DCL
B$JIT.USRERR.FCG
       572**DCL
B$JIT.USRERR.MID
       572**DCL
B$JIT.USRERR.MON
       572**DCL
B$JIT.USRERR.SEV
       572**DCL
B$JIT.USRIC
       573**DCL
B$JIT.USRRNST
       572**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:426  
B$JIT.UTIMER
       611**DCL
B$JIT.VIRTUAL
       601**DCL
B$JIT.VIRTUAL.DCB#
       601**DCL
B$JIT.WOO
       436**DCL
B$JIT.XCONF
       657**DCL
B$JIT.XLIMFLG
       667**DCL
B$JIT.XTIME
       609**DCL
B$JIT.YC0SZ
       573**DCL
B$JIT.YC2SZ
       591**DCL
B$TCB
     13594**DCL
B$TCB.CURRSZ
     13594**DCL
B$TCB.TCBAVSZ
     13594**DCL
BUFFER
     13218**DCL
BUFFER.REPLY.TYC
     13224**DCL
CLOSE_CONFIG.ACCESS_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15344**DCL
CLOSE_CONFIG.ACCT_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15346**DCL
CLOSE_CONFIG.ACSVEH_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15345**DCL
CLOSE_CONFIG.ALTKEYS_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15347**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:427  
CLOSE_CONFIG.IFPARAM_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15347**DCL
CLOSE_CONFIG.INSTATTR_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15345**DCL
CLOSE_CONFIG.IRREC_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15342**DCL
CLOSE_CONFIG.NAME_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15343**DCL
CLOSE_CONFIG.PASS_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15344**DCL
CLOSE_CONFIG.PROCATTR_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15346**DCL
CLOSE_CONFIG.RECFIELD_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15343**DCL
CLOSE_CONFIG.UATTR_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15345**DCL
CLOSE_CONFIG.V.ALTBLD# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15356**DCL
CLOSE_CONFIG.V.BUPM# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15355**DCL
CLOSE_CONFIG.V.CLDCB# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15355**DCL
CLOSE_CONFIG.V.CLINFO# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15357**DCL
CLOSE_CONFIG.V.CLSYSID# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15354**DCL
CLOSE_CONFIG.V.DCB# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15348**DCL
CLOSE_CONFIG.V.DESC IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15352**DCL
CLOSE_CONFIG.V.DESC.ACTIVE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15354**DCL
CLOSE_CONFIG.V.DESC.ARCHIVE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15353**DCL
CLOSE_CONFIG.V.DESC.BAD# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15353**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:428  
CLOSE_CONFIG.V.DESC.BUF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15353**DCL
CLOSE_CONFIG.V.DESC.BUPM# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15353**DCL
CLOSE_CONFIG.V.DESC.DELF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15352**DCL
CLOSE_CONFIG.V.DESC.FETCH# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15354**DCL
CLOSE_CONFIG.V.DESC.NBUF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15354**DCL
CLOSE_CONFIG.V.DESC.NOLIST# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15353**DCL
CLOSE_CONFIG.V.DESC.ODSTOW# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15353**DCL
CLOSE_CONFIG.V.DESC.QS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15353**DCL
CLOSE_CONFIG.V.DESC.TERMINATE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15354**DCL
CLOSE_CONFIG.V.DESC.TPB# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15354**DCL
CLOSE_CONFIG.V.DISP# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15351**DCL
CLOSE_CONFIG.V.EFTOPER IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15349**DCL
CLOSE_CONFIG.V.EFTOPER.ASTOW# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15350**DCL
CLOSE_CONFIG.V.EFTOPER.BACKUP# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15349**DCL
CLOSE_CONFIG.V.EFTOPER.DELFDE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15351**DCL
CLOSE_CONFIG.V.EFTOPER.ISTOW# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15350**DCL
CLOSE_CONFIG.V.EFTOPER.UPDDESC# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15350**DCL
CLOSE_CONFIG.V.GHSTACS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15356**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:429  
CLOSE_CONFIG.V.LRDL0# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15358**DCL
CLOSE_CONFIG.V.LSLIDE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15358**DCL
CLOSE_CONFIG.V.NOMARKS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15356**DCL
CLOSE_CONFIG.V.OPER IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15348**DCL
CLOSE_CONFIG.V.OPER.CHGATT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15348**DCL
CLOSE_CONFIG.V.OPER.REBLD# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15349**DCL
CLOSE_CONFIG.V.OPER.RELG# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15348**DCL
CLOSE_CONFIG.V.POS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15355**DCL
CLOSE_CONFIG.V.SPARE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15358**DCL
CLOSE_CONFIG.V.TRUNCATE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15351**DCL
CLOSE_CONFIG.V_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15342**DCL
CLOSE_IFAD.ACCESS_ IN PROCEDURE DU_CLOSE_IFAD
     14757**DCL
CLOSE_IFAD.ACCT_ IN PROCEDURE DU_CLOSE_IFAD
     14759**DCL
CLOSE_IFAD.ACSVEH_ IN PROCEDURE DU_CLOSE_IFAD
     14758**DCL
CLOSE_IFAD.ALTKEYS_ IN PROCEDURE DU_CLOSE_IFAD
     14760**DCL
CLOSE_IFAD.IFPARAM_ IN PROCEDURE DU_CLOSE_IFAD
     14760**DCL
CLOSE_IFAD.INSTATTR_ IN PROCEDURE DU_CLOSE_IFAD
     14758**DCL
CLOSE_IFAD.IRREC_ IN PROCEDURE DU_CLOSE_IFAD
     14755**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:430  
CLOSE_IFAD.NAME_ IN PROCEDURE DU_CLOSE_IFAD
     14756**DCL
CLOSE_IFAD.PASS_ IN PROCEDURE DU_CLOSE_IFAD
     14757**DCL
CLOSE_IFAD.PROCATTR_ IN PROCEDURE DU_CLOSE_IFAD
     14759**DCL
CLOSE_IFAD.RECFIELD_ IN PROCEDURE DU_CLOSE_IFAD
     14756**DCL
CLOSE_IFAD.UATTR_ IN PROCEDURE DU_CLOSE_IFAD
     14758**DCL
CLOSE_IFAD.V.ALTBLD# IN PROCEDURE DU_CLOSE_IFAD
     14769**DCL
CLOSE_IFAD.V.BUPM# IN PROCEDURE DU_CLOSE_IFAD
     14768**DCL
CLOSE_IFAD.V.CLDCB# IN PROCEDURE DU_CLOSE_IFAD
     14768**DCL
CLOSE_IFAD.V.CLINFO# IN PROCEDURE DU_CLOSE_IFAD
     14770**DCL
CLOSE_IFAD.V.CLSYSID# IN PROCEDURE DU_CLOSE_IFAD
     14767**DCL
CLOSE_IFAD.V.DCB# IN PROCEDURE DU_CLOSE_IFAD
     14761**DCL
CLOSE_IFAD.V.DESC IN PROCEDURE DU_CLOSE_IFAD
     14765**DCL
CLOSE_IFAD.V.DESC.ACTIVE# IN PROCEDURE DU_CLOSE_IFAD
     14767**DCL
CLOSE_IFAD.V.DESC.ARCHIVE# IN PROCEDURE DU_CLOSE_IFAD
     14766**DCL
CLOSE_IFAD.V.DESC.BAD# IN PROCEDURE DU_CLOSE_IFAD
     14766**DCL
CLOSE_IFAD.V.DESC.BUF# IN PROCEDURE DU_CLOSE_IFAD
     14766**DCL
CLOSE_IFAD.V.DESC.BUPM# IN PROCEDURE DU_CLOSE_IFAD
     14766**DCL
CLOSE_IFAD.V.DESC.DELF# IN PROCEDURE DU_CLOSE_IFAD
     14765**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:431  
CLOSE_IFAD.V.DESC.FETCH# IN PROCEDURE DU_CLOSE_IFAD
     14767**DCL
CLOSE_IFAD.V.DESC.NBUF# IN PROCEDURE DU_CLOSE_IFAD
     14767**DCL
CLOSE_IFAD.V.DESC.NOLIST# IN PROCEDURE DU_CLOSE_IFAD
     14766**DCL
CLOSE_IFAD.V.DESC.ODSTOW# IN PROCEDURE DU_CLOSE_IFAD
     14766**DCL
CLOSE_IFAD.V.DESC.QS# IN PROCEDURE DU_CLOSE_IFAD
     14766**DCL
CLOSE_IFAD.V.DESC.TERMINATE# IN PROCEDURE DU_CLOSE_IFAD
     14767**DCL
CLOSE_IFAD.V.DESC.TPB# IN PROCEDURE DU_CLOSE_IFAD
     14767**DCL
CLOSE_IFAD.V.DISP# IN PROCEDURE DU_CLOSE_IFAD
     14764**DCL
CLOSE_IFAD.V.EFTOPER IN PROCEDURE DU_CLOSE_IFAD
     14762**DCL
CLOSE_IFAD.V.EFTOPER.ASTOW# IN PROCEDURE DU_CLOSE_IFAD
     14763**DCL
CLOSE_IFAD.V.EFTOPER.BACKUP# IN PROCEDURE DU_CLOSE_IFAD
     14762**DCL
CLOSE_IFAD.V.EFTOPER.DELFDE# IN PROCEDURE DU_CLOSE_IFAD
     14764**DCL
CLOSE_IFAD.V.EFTOPER.ISTOW# IN PROCEDURE DU_CLOSE_IFAD
     14763**DCL
CLOSE_IFAD.V.EFTOPER.UPDDESC# IN PROCEDURE DU_CLOSE_IFAD
     14763**DCL
CLOSE_IFAD.V.GHSTACS# IN PROCEDURE DU_CLOSE_IFAD
     14769**DCL
CLOSE_IFAD.V.LRDL0# IN PROCEDURE DU_CLOSE_IFAD
     14771**DCL
CLOSE_IFAD.V.LSLIDE# IN PROCEDURE DU_CLOSE_IFAD
     14771**DCL
CLOSE_IFAD.V.NOMARKS# IN PROCEDURE DU_CLOSE_IFAD
     14769**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:432  
CLOSE_IFAD.V.OPER IN PROCEDURE DU_CLOSE_IFAD
     14761**DCL
CLOSE_IFAD.V.OPER.CHGATT# IN PROCEDURE DU_CLOSE_IFAD
     14761**DCL
CLOSE_IFAD.V.OPER.REBLD# IN PROCEDURE DU_CLOSE_IFAD
     14762**DCL
CLOSE_IFAD.V.OPER.RELG# IN PROCEDURE DU_CLOSE_IFAD
     14761**DCL
CLOSE_IFAD.V.POS# IN PROCEDURE DU_CLOSE_IFAD
     14768**DCL
CLOSE_IFAD.V.SPARE# IN PROCEDURE DU_CLOSE_IFAD
     14771**DCL
CLOSE_IFAD.V.TRUNCATE# IN PROCEDURE DU_CLOSE_IFAD
     14764**DCL
CLOSE_IFAD.V_ IN PROCEDURE DU_CLOSE_IFAD
     14755**DCL
CLOSE_LO.ACCESS_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15003**DCL
CLOSE_LO.ACCT_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15005**DCL
CLOSE_LO.ACSVEH_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15004**DCL
CLOSE_LO.ALTKEYS_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15006**DCL
CLOSE_LO.IFPARAM_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15006**DCL
CLOSE_LO.INSTATTR_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15004**DCL
CLOSE_LO.IRREC_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15001**DCL
CLOSE_LO.NAME_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15002**DCL
CLOSE_LO.PASS_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15003**DCL
CLOSE_LO.PROCATTR_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15005**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:433  
CLOSE_LO.RECFIELD_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15002**DCL
CLOSE_LO.UATTR_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15004**DCL
CLOSE_LO.V.ALTBLD# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15015**DCL
CLOSE_LO.V.BUPM# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15014**DCL
CLOSE_LO.V.CLDCB# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15014**DCL
CLOSE_LO.V.CLINFO# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15016**DCL
CLOSE_LO.V.CLSYSID# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15013**DCL
CLOSE_LO.V.DCB# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15007**DCL
CLOSE_LO.V.DESC IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15011**DCL
CLOSE_LO.V.DESC.ACTIVE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15013**DCL
CLOSE_LO.V.DESC.ARCHIVE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15012**DCL
CLOSE_LO.V.DESC.BAD# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15012**DCL
CLOSE_LO.V.DESC.BUF# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15012**DCL
CLOSE_LO.V.DESC.BUPM# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15012**DCL
CLOSE_LO.V.DESC.DELF# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15011**DCL
CLOSE_LO.V.DESC.FETCH# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15013**DCL
CLOSE_LO.V.DESC.NBUF# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15013**DCL
CLOSE_LO.V.DESC.NOLIST# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15012**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:434  
CLOSE_LO.V.DESC.ODSTOW# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15012**DCL
CLOSE_LO.V.DESC.QS# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15012**DCL
CLOSE_LO.V.DESC.TERMINATE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15013**DCL
CLOSE_LO.V.DESC.TPB# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15013**DCL
CLOSE_LO.V.DISP# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15010**DCL
CLOSE_LO.V.EFTOPER IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15008**DCL
CLOSE_LO.V.EFTOPER.ASTOW# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15009**DCL
CLOSE_LO.V.EFTOPER.BACKUP# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15008**DCL
CLOSE_LO.V.EFTOPER.DELFDE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15010**DCL
CLOSE_LO.V.EFTOPER.ISTOW# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15009**DCL
CLOSE_LO.V.EFTOPER.UPDDESC# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15009**DCL
CLOSE_LO.V.GHSTACS# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15015**DCL
CLOSE_LO.V.LRDL0# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15017**DCL
CLOSE_LO.V.LSLIDE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15017**DCL
CLOSE_LO.V.NOMARKS# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15015**DCL
CLOSE_LO.V.OPER IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15007**DCL
CLOSE_LO.V.OPER.CHGATT# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15007**DCL
CLOSE_LO.V.OPER.REBLD# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15008**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:435  
CLOSE_LO.V.OPER.RELG# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15007**DCL
CLOSE_LO.V.POS# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15014**DCL
CLOSE_LO.V.SPARE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15017**DCL
CLOSE_LO.V.TRUNCATE# IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15010**DCL
CLOSE_LO.V_ IN PROCEDURE DU_CLOSE_LO_IF_OPEN
     15001**DCL
CREATE_NEW_FID.ACCESS_ IN PROCEDURE DU_OPEN_DF
     16165**DCL
CREATE_NEW_FID.ACCT_ IN PROCEDURE DU_OPEN_DF
     16167**DCL
CREATE_NEW_FID.FORM_ IN PROCEDURE DU_OPEN_DF
     16171**DCL
CREATE_NEW_FID.FPARAM_ IN PROCEDURE DU_OPEN_DF
     16168**DCL
CREATE_NEW_FID.FPRG_ IN PROCEDURE DU_OPEN_DF
     16172**DCL
CREATE_NEW_FID.IFPARAM_ IN PROCEDURE DU_OPEN_DF
     16168**DCL
CREATE_NEW_FID.INSTATTR_ IN PROCEDURE DU_OPEN_DF
     16167**DCL
CREATE_NEW_FID.IRKEYS_ IN PROCEDURE DU_OPEN_DF
     16172**DCL
CREATE_NEW_FID.IRREC_ IN PROCEDURE DU_OPEN_DF
     16171**DCL
CREATE_NEW_FID.NAME_ IN PROCEDURE DU_OPEN_DF
     16164**DCL
CREATE_NEW_FID.NODENAME_ IN PROCEDURE DU_OPEN_DF
     16169**DCL
CREATE_NEW_FID.PASS_ IN PROCEDURE DU_OPEN_DF
     16165**DCL
CREATE_NEW_FID.PROCATTR_ IN PROCEDURE DU_OPEN_DF
     16167**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:436  
CREATE_NEW_FID.RECFIELD_ IN PROCEDURE DU_OPEN_DF
     16170**DCL
CREATE_NEW_FID.SETSTA_ IN PROCEDURE DU_OPEN_DF
     16164**DCL
CREATE_NEW_FID.SN_ IN PROCEDURE DU_OPEN_DF
     16163**DCL
CREATE_NEW_FID.UATTR_ IN PROCEDURE DU_OPEN_DF
     16166**DCL
CREATE_NEW_FID.V.ACS# IN PROCEDURE DU_OPEN_DF
     16183**DCL
CREATE_NEW_FID.V.ANSISPANSEQ# IN PROCEDURE DU_OPEN_DF
     16196**DCL
CREATE_NEW_FID.V.ASN# IN PROCEDURE DU_OPEN_DF
     16182**DCL
CREATE_NEW_FID.V.ATTR# IN PROCEDURE DU_OPEN_DF
     16199**DCL
CREATE_NEW_FID.V.AU# IN PROCEDURE DU_OPEN_DF
     16201**DCL
CREATE_NEW_FID.V.BLKL# IN PROCEDURE DU_OPEN_DF
     16189**DCL
CREATE_NEW_FID.V.BLOCKED# IN PROCEDURE DU_OPEN_DF
     16184**DCL
CREATE_NEW_FID.V.BUPM# IN PROCEDURE DU_OPEN_DF
     16185**DCL
CREATE_NEW_FID.V.CHAIN# IN PROCEDURE DU_OPEN_DF
     16198**DCL
CREATE_NEW_FID.V.CNVRT# IN PROCEDURE DU_OPEN_DF
     16192**DCL
CREATE_NEW_FID.V.COMP# IN PROCEDURE DU_OPEN_DF
     16184**DCL
CREATE_NEW_FID.V.COPIES# IN PROCEDURE DU_OPEN_DF
     16204**DCL
CREATE_NEW_FID.V.CTG# IN PROCEDURE DU_OPEN_DF
     16176**DCL
CREATE_NEW_FID.V.CVOL# IN PROCEDURE DU_OPEN_DF
     16177**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:437  
CREATE_NEW_FID.V.DBGDCBNO# IN PROCEDURE DU_OPEN_DF
     16203**DCL
CREATE_NEW_FID.V.DBGSYSID# IN PROCEDURE DU_OPEN_DF
     16203**DCL
CREATE_NEW_FID.V.DCB# IN PROCEDURE DU_OPEN_DF
     16172**DCL
CREATE_NEW_FID.V.DCBCONLGL# IN PROCEDURE DU_OPEN_DF
     16194**DCL
CREATE_NEW_FID.V.DELETE# IN PROCEDURE DU_OPEN_DF
     16174**DCL
CREATE_NEW_FID.V.DENSITY# IN PROCEDURE DU_OPEN_DF
     16204**DCL
CREATE_NEW_FID.V.DISP# IN PROCEDURE DU_OPEN_DF
     16188**DCL
CREATE_NEW_FID.V.DVFC# IN PROCEDURE DU_OPEN_DF
     16199**DCL
CREATE_NEW_FID.V.EBCDIC# IN PROCEDURE DU_OPEN_DF
     16192**DCL
CREATE_NEW_FID.V.EVENT# IN PROCEDURE DU_OPEN_DF
     16202**DCL
CREATE_NEW_FID.V.EXIST# IN PROCEDURE DU_OPEN_DF
     16176**DCL
CREATE_NEW_FID.V.EXPIRE# IN PROCEDURE DU_OPEN_DF
     16192**DCL
CREATE_NEW_FID.V.FINDPOS# IN PROCEDURE DU_OPEN_DF
     16178**DCL
CREATE_NEW_FID.V.FUN# IN PROCEDURE DU_OPEN_DF
     16182**DCL
CREATE_NEW_FID.V.GHSTACS# IN PROCEDURE DU_OPEN_DF
     16187**DCL
CREATE_NEW_FID.V.IGNOREFSN# IN PROCEDURE DU_OPEN_DF
     16196**DCL
CREATE_NEW_FID.V.INITZ IN PROCEDURE DU_OPEN_DF
     16173**DCL
CREATE_NEW_FID.V.INITZ.REASSIGN# IN PROCEDURE DU_OPEN_DF
     16173**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:438  
CREATE_NEW_FID.V.INITZ.SCRUB# IN PROCEDURE DU_OPEN_DF
     16173**DCL
CREATE_NEW_FID.V.IOERROK# IN PROCEDURE DU_OPEN_DF
     16194**DCL
CREATE_NEW_FID.V.IXTNSIZE# IN PROCEDURE DU_OPEN_DF
     16191**DCL
CREATE_NEW_FID.V.JRNLBYPASS# IN PROCEDURE DU_OPEN_DF
     16186**DCL
CREATE_NEW_FID.V.KEYL# IN PROCEDURE DU_OPEN_DF
     16188**DCL
CREATE_NEW_FID.V.KEYTYPE# IN PROCEDURE DU_OPEN_DF
     16198**DCL
CREATE_NEW_FID.V.KEYX# IN PROCEDURE DU_OPEN_DF
     16187**DCL
CREATE_NEW_FID.V.LINES# IN PROCEDURE DU_OPEN_DF
     16202**DCL
CREATE_NEW_FID.V.LOAD# IN PROCEDURE DU_OPEN_DF
     16186**DCL
CREATE_NEW_FID.V.LRDL0# IN PROCEDURE DU_OPEN_DF
     16190**DCL
CREATE_NEW_FID.V.LSLIDE# IN PROCEDURE DU_OPEN_DF
     16189**DCL
CREATE_NEW_FID.V.LSTAOR# IN PROCEDURE DU_OPEN_DF
     16186**DCL
CREATE_NEW_FID.V.MAXVOL# IN PROCEDURE DU_OPEN_DF
     16198**DCL
CREATE_NEW_FID.V.NRECS# IN PROCEDURE DU_OPEN_DF
     16191**DCL
CREATE_NEW_FID.V.OPER IN PROCEDURE DU_OPEN_DF
     16174**DCL
CREATE_NEW_FID.V.OPER.MNTONLY# IN PROCEDURE DU_OPEN_DF
     16176**DCL
CREATE_NEW_FID.V.OPER.NXTA# IN PROCEDURE DU_OPEN_DF
     16175**DCL
CREATE_NEW_FID.V.OPER.NXTF# IN PROCEDURE DU_OPEN_DF
     16175**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:439  
CREATE_NEW_FID.V.OPER.TEST# IN PROCEDURE DU_OPEN_DF
     16174**DCL
CREATE_NEW_FID.V.OPER.THISF# IN PROCEDURE DU_OPEN_DF
     16175**DCL
CREATE_NEW_FID.V.ORG# IN PROCEDURE DU_OPEN_DF
     16183**DCL
CREATE_NEW_FID.V.OVERFDE# IN PROCEDURE DU_OPEN_DF
     16195**DCL
CREATE_NEW_FID.V.QISS# IN PROCEDURE DU_OPEN_DF
     16201**DCL
CREATE_NEW_FID.V.RECL# IN PROCEDURE DU_OPEN_DF
     16189**DCL
CREATE_NEW_FID.V.RES# IN PROCEDURE DU_OPEN_DF
     16187**DCL
CREATE_NEW_FID.V.SEED# IN PROCEDURE DU_OPEN_DF
     16205**DCL
CREATE_NEW_FID.V.SEEDSPECIFIED# IN PROCEDURE DU_OPEN_DF
     16196**DCL
CREATE_NEW_FID.V.SEQ# IN PROCEDURE DU_OPEN_DF
     16200**DCL
CREATE_NEW_FID.V.SEQCOL# IN PROCEDURE DU_OPEN_DF
     16200**DCL
CREATE_NEW_FID.V.SEQID# IN PROCEDURE DU_OPEN_DF
     16202**DCL
CREATE_NEW_FID.V.SETDCB# IN PROCEDURE DU_OPEN_DF
     16173**DCL
CREATE_NEW_FID.V.SHARE# IN PROCEDURE DU_OPEN_DF
     16177**DCL
CREATE_NEW_FID.V.SPANNED# IN PROCEDURE DU_OPEN_DF
     16185**DCL
CREATE_NEW_FID.V.SPARE# IN PROCEDURE DU_OPEN_DF
     16190**DCL
CREATE_NEW_FID.V.SRCHCOND IN PROCEDURE DU_OPEN_DF
     16178**DCL
CREATE_NEW_FID.V.SRCHCOND.ANYF# IN PROCEDURE DU_OPEN_DF
     16181**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:440  
CREATE_NEW_FID.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_OPEN_DF
     16180**DCL
CREATE_NEW_FID.V.SRCHCOND.BAD# IN PROCEDURE DU_OPEN_DF
     16179**DCL
CREATE_NEW_FID.V.SRCHCOND.BUF# IN PROCEDURE DU_OPEN_DF
     16179**DCL
CREATE_NEW_FID.V.SRCHCOND.DELF# IN PROCEDURE DU_OPEN_DF
     16178**DCL
CREATE_NEW_FID.V.SRCHCOND.NOLIST# IN PROCEDURE DU_OPEN_DF
     16178**DCL
CREATE_NEW_FID.V.SRCHCOND.QS# IN PROCEDURE DU_OPEN_DF
     16180**DCL
CREATE_NEW_FID.V.SRCHCOND.REV# IN PROCEDURE DU_OPEN_DF
     16181**DCL
CREATE_NEW_FID.V.TERMCONLGL# IN PROCEDURE DU_OPEN_DF
     16195**DCL
CREATE_NEW_FID.V.TYPE# IN PROCEDURE DU_OPEN_DF
     16184**DCL
CREATE_NEW_FID.V.UOPT# IN PROCEDURE DU_OPEN_DF
     16182**DCL
CREATE_NEW_FID.V.VOL# IN PROCEDURE DU_OPEN_DF
     16197**DCL
CREATE_NEW_FID.V.VOLACCESS# IN PROCEDURE DU_OPEN_DF
     16201**DCL
CREATE_NEW_FID.V.XONLY# IN PROCEDURE DU_OPEN_DF
     16193**DCL
CREATE_NEW_FID.V.XTEND# IN PROCEDURE DU_OPEN_DF
     16193**DCL
CREATE_NEW_FID.V.XTNSIZE# IN PROCEDURE DU_OPEN_DF
     16191**DCL
CREATE_NEW_FID.VIRTUAL_ IN PROCEDURE DU_OPEN_DF
     16164**DCL
CREATE_NEW_FID.V_ IN PROCEDURE DU_OPEN_DF
     16163**DCL
CREATE_NEW_FID.WINDOW_ IN PROCEDURE DU_OPEN_DF
     16166**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:441  
CREATE_OVER_FID.ACCESS_ IN PROCEDURE DU_OPEN_DF
     16037**DCL
CREATE_OVER_FID.ACCT_ IN PROCEDURE DU_OPEN_DF
     16039**DCL
CREATE_OVER_FID.FORM_ IN PROCEDURE DU_OPEN_DF
     16043**DCL
CREATE_OVER_FID.FPARAM_ IN PROCEDURE DU_OPEN_DF
     16040**DCL
CREATE_OVER_FID.FPRG_ IN PROCEDURE DU_OPEN_DF
     16044**DCL
CREATE_OVER_FID.IFPARAM_ IN PROCEDURE DU_OPEN_DF
     16040**DCL
CREATE_OVER_FID.INSTATTR_ IN PROCEDURE DU_OPEN_DF
     16039**DCL
CREATE_OVER_FID.IRKEYS_ IN PROCEDURE DU_OPEN_DF
     16044**DCL
CREATE_OVER_FID.IRREC_ IN PROCEDURE DU_OPEN_DF
     16043**DCL
CREATE_OVER_FID.NAME_ IN PROCEDURE DU_OPEN_DF
     16036**DCL
CREATE_OVER_FID.NODENAME_ IN PROCEDURE DU_OPEN_DF
     16041**DCL
CREATE_OVER_FID.PASS_ IN PROCEDURE DU_OPEN_DF
     16037**DCL
CREATE_OVER_FID.PROCATTR_ IN PROCEDURE DU_OPEN_DF
     16039**DCL
CREATE_OVER_FID.RECFIELD_ IN PROCEDURE DU_OPEN_DF
     16042**DCL
CREATE_OVER_FID.SETSTA_ IN PROCEDURE DU_OPEN_DF
     16036**DCL
CREATE_OVER_FID.SN_ IN PROCEDURE DU_OPEN_DF
     16035**DCL
CREATE_OVER_FID.UATTR_ IN PROCEDURE DU_OPEN_DF
     16038**DCL
CREATE_OVER_FID.V.ACS# IN PROCEDURE DU_OPEN_DF
     16055**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:442  
CREATE_OVER_FID.V.ANSISPANSEQ# IN PROCEDURE DU_OPEN_DF
     16068**DCL
CREATE_OVER_FID.V.ASN# IN PROCEDURE DU_OPEN_DF
     16054**DCL
CREATE_OVER_FID.V.ATTR# IN PROCEDURE DU_OPEN_DF
     16071**DCL
CREATE_OVER_FID.V.AU# IN PROCEDURE DU_OPEN_DF
     16073**DCL
CREATE_OVER_FID.V.BLKL# IN PROCEDURE DU_OPEN_DF
     16061**DCL
CREATE_OVER_FID.V.BLOCKED# IN PROCEDURE DU_OPEN_DF
     16056**DCL
CREATE_OVER_FID.V.BUPM# IN PROCEDURE DU_OPEN_DF
     16057**DCL
CREATE_OVER_FID.V.CHAIN# IN PROCEDURE DU_OPEN_DF
     16070**DCL
CREATE_OVER_FID.V.CNVRT# IN PROCEDURE DU_OPEN_DF
     16064**DCL
CREATE_OVER_FID.V.COMP# IN PROCEDURE DU_OPEN_DF
     16056**DCL
CREATE_OVER_FID.V.COPIES# IN PROCEDURE DU_OPEN_DF
     16076**DCL
CREATE_OVER_FID.V.CTG# IN PROCEDURE DU_OPEN_DF
     16048**DCL
CREATE_OVER_FID.V.CVOL# IN PROCEDURE DU_OPEN_DF
     16049**DCL
CREATE_OVER_FID.V.DBGDCBNO# IN PROCEDURE DU_OPEN_DF
     16075**DCL
CREATE_OVER_FID.V.DBGSYSID# IN PROCEDURE DU_OPEN_DF
     16075**DCL
CREATE_OVER_FID.V.DCB# IN PROCEDURE DU_OPEN_DF
     16044**DCL
CREATE_OVER_FID.V.DCBCONLGL# IN PROCEDURE DU_OPEN_DF
     16066**DCL
CREATE_OVER_FID.V.DELETE# IN PROCEDURE DU_OPEN_DF
     16046**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:443  
CREATE_OVER_FID.V.DENSITY# IN PROCEDURE DU_OPEN_DF
     16076**DCL
CREATE_OVER_FID.V.DISP# IN PROCEDURE DU_OPEN_DF
     16060**DCL
CREATE_OVER_FID.V.DVFC# IN PROCEDURE DU_OPEN_DF
     16071**DCL
CREATE_OVER_FID.V.EBCDIC# IN PROCEDURE DU_OPEN_DF
     16064**DCL
CREATE_OVER_FID.V.EVENT# IN PROCEDURE DU_OPEN_DF
     16074**DCL
CREATE_OVER_FID.V.EXIST# IN PROCEDURE DU_OPEN_DF
     16048**DCL
CREATE_OVER_FID.V.EXPIRE# IN PROCEDURE DU_OPEN_DF
     16064**DCL
CREATE_OVER_FID.V.FINDPOS# IN PROCEDURE DU_OPEN_DF
     16050**DCL
CREATE_OVER_FID.V.FUN# IN PROCEDURE DU_OPEN_DF
     16054**DCL
CREATE_OVER_FID.V.GHSTACS# IN PROCEDURE DU_OPEN_DF
     16059**DCL
CREATE_OVER_FID.V.IGNOREFSN# IN PROCEDURE DU_OPEN_DF
     16068**DCL
CREATE_OVER_FID.V.INITZ IN PROCEDURE DU_OPEN_DF
     16045**DCL
CREATE_OVER_FID.V.INITZ.REASSIGN# IN PROCEDURE DU_OPEN_DF
     16045**DCL
CREATE_OVER_FID.V.INITZ.SCRUB# IN PROCEDURE DU_OPEN_DF
     16045**DCL
CREATE_OVER_FID.V.IOERROK# IN PROCEDURE DU_OPEN_DF
     16066**DCL
CREATE_OVER_FID.V.IXTNSIZE# IN PROCEDURE DU_OPEN_DF
     16063**DCL
CREATE_OVER_FID.V.JRNLBYPASS# IN PROCEDURE DU_OPEN_DF
     16058**DCL
CREATE_OVER_FID.V.KEYL# IN PROCEDURE DU_OPEN_DF
     16060**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:444  
CREATE_OVER_FID.V.KEYTYPE# IN PROCEDURE DU_OPEN_DF
     16070**DCL
CREATE_OVER_FID.V.KEYX# IN PROCEDURE DU_OPEN_DF
     16059**DCL
CREATE_OVER_FID.V.LINES# IN PROCEDURE DU_OPEN_DF
     16074**DCL
CREATE_OVER_FID.V.LOAD# IN PROCEDURE DU_OPEN_DF
     16058**DCL
CREATE_OVER_FID.V.LRDL0# IN PROCEDURE DU_OPEN_DF
     16062**DCL
CREATE_OVER_FID.V.LSLIDE# IN PROCEDURE DU_OPEN_DF
     16061**DCL
CREATE_OVER_FID.V.LSTAOR# IN PROCEDURE DU_OPEN_DF
     16058**DCL
CREATE_OVER_FID.V.MAXVOL# IN PROCEDURE DU_OPEN_DF
     16070**DCL
CREATE_OVER_FID.V.NRECS# IN PROCEDURE DU_OPEN_DF
     16063**DCL
CREATE_OVER_FID.V.OPER IN PROCEDURE DU_OPEN_DF
     16046**DCL
CREATE_OVER_FID.V.OPER.MNTONLY# IN PROCEDURE DU_OPEN_DF
     16048**DCL
CREATE_OVER_FID.V.OPER.NXTA# IN PROCEDURE DU_OPEN_DF
     16047**DCL
CREATE_OVER_FID.V.OPER.NXTF# IN PROCEDURE DU_OPEN_DF
     16047**DCL
CREATE_OVER_FID.V.OPER.TEST# IN PROCEDURE DU_OPEN_DF
     16046**DCL
CREATE_OVER_FID.V.OPER.THISF# IN PROCEDURE DU_OPEN_DF
     16047**DCL
CREATE_OVER_FID.V.ORG# IN PROCEDURE DU_OPEN_DF
     16055**DCL
CREATE_OVER_FID.V.OVERFDE# IN PROCEDURE DU_OPEN_DF
     16067**DCL
CREATE_OVER_FID.V.QISS# IN PROCEDURE DU_OPEN_DF
     16073**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:445  
CREATE_OVER_FID.V.RECL# IN PROCEDURE DU_OPEN_DF
     16061**DCL
CREATE_OVER_FID.V.RES# IN PROCEDURE DU_OPEN_DF
     16059**DCL
CREATE_OVER_FID.V.SEED# IN PROCEDURE DU_OPEN_DF
     16077**DCL
CREATE_OVER_FID.V.SEEDSPECIFIED# IN PROCEDURE DU_OPEN_DF
     16068**DCL
CREATE_OVER_FID.V.SEQ# IN PROCEDURE DU_OPEN_DF
     16072**DCL
CREATE_OVER_FID.V.SEQCOL# IN PROCEDURE DU_OPEN_DF
     16072**DCL
CREATE_OVER_FID.V.SEQID# IN PROCEDURE DU_OPEN_DF
     16074**DCL
CREATE_OVER_FID.V.SETDCB# IN PROCEDURE DU_OPEN_DF
     16045**DCL
CREATE_OVER_FID.V.SHARE# IN PROCEDURE DU_OPEN_DF
     16049**DCL
CREATE_OVER_FID.V.SPANNED# IN PROCEDURE DU_OPEN_DF
     16057**DCL
CREATE_OVER_FID.V.SPARE# IN PROCEDURE DU_OPEN_DF
     16062**DCL
CREATE_OVER_FID.V.SRCHCOND IN PROCEDURE DU_OPEN_DF
     16050**DCL
CREATE_OVER_FID.V.SRCHCOND.ANYF# IN PROCEDURE DU_OPEN_DF
     16053**DCL
CREATE_OVER_FID.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_OPEN_DF
     16052**DCL
CREATE_OVER_FID.V.SRCHCOND.BAD# IN PROCEDURE DU_OPEN_DF
     16051**DCL
CREATE_OVER_FID.V.SRCHCOND.BUF# IN PROCEDURE DU_OPEN_DF
     16051**DCL
CREATE_OVER_FID.V.SRCHCOND.DELF# IN PROCEDURE DU_OPEN_DF
     16050**DCL
CREATE_OVER_FID.V.SRCHCOND.NOLIST# IN PROCEDURE DU_OPEN_DF
     16050**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:446  
CREATE_OVER_FID.V.SRCHCOND.QS# IN PROCEDURE DU_OPEN_DF
     16052**DCL
CREATE_OVER_FID.V.SRCHCOND.REV# IN PROCEDURE DU_OPEN_DF
     16053**DCL
CREATE_OVER_FID.V.TERMCONLGL# IN PROCEDURE DU_OPEN_DF
     16067**DCL
CREATE_OVER_FID.V.TYPE# IN PROCEDURE DU_OPEN_DF
     16056**DCL
CREATE_OVER_FID.V.UOPT# IN PROCEDURE DU_OPEN_DF
     16054**DCL
CREATE_OVER_FID.V.VOL# IN PROCEDURE DU_OPEN_DF
     16069**DCL
CREATE_OVER_FID.V.VOLACCESS# IN PROCEDURE DU_OPEN_DF
     16073**DCL
CREATE_OVER_FID.V.XONLY# IN PROCEDURE DU_OPEN_DF
     16065**DCL
CREATE_OVER_FID.V.XTEND# IN PROCEDURE DU_OPEN_DF
     16065**DCL
CREATE_OVER_FID.V.XTNSIZE# IN PROCEDURE DU_OPEN_DF
     16063**DCL
CREATE_OVER_FID.VIRTUAL_ IN PROCEDURE DU_OPEN_DF
     16036**DCL
CREATE_OVER_FID.V_ IN PROCEDURE DU_OPEN_DF
     16035**DCL
CREATE_OVER_FID.WINDOW_ IN PROCEDURE DU_OPEN_DF
     16038**DCL
CUSTOMER.ANSPROT# IN PROCEDURE DU_GET_SITE
     18330**DCL
CUSTOMER.MINI_ID# IN PROCEDURE DU_GET_SITE
     18328**DCL
CUSTOMER.MON_UTS# IN PROCEDURE DU_GET_SITE
     18331**DCL
CUSTOMER.PATCHWEEK# IN PROCEDURE DU_GET_SITE
     18333**DCL
CUSTOMER.SALUTATION# IN PROCEDURE DU_GET_SITE
     18329**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:447  
CUSTOMER.SALUTATION#.C IN PROCEDURE DU_GET_SITE
     18330**DCL
CUSTOMER.SALUTATION#.L IN PROCEDURE DU_GET_SITE
     18330**DCL
CUSTOMER.SITE_NAME# IN PROCEDURE DU_GET_SITE
     18328**DCL
CUSTOMER.TIMEZONE# IN PROCEDURE DU_GET_SITE
     18333**DCL
CUSTOMER.UTC_OFFSET# IN PROCEDURE DU_GET_SITE
     18334**DCL
CUSTOMER.VERSION# IN PROCEDURE DU_GET_SITE
     18331**DCL
DISCARD_DECKFILE.ACCESS_ IN PROCEDURE DU_CLOSE_DF
     16617**DCL
DISCARD_DECKFILE.ACCT_ IN PROCEDURE DU_CLOSE_DF
     16619**DCL
DISCARD_DECKFILE.ACSVEH_ IN PROCEDURE DU_CLOSE_DF
     16618**DCL
DISCARD_DECKFILE.ALTKEYS_ IN PROCEDURE DU_CLOSE_DF
     16620**DCL
DISCARD_DECKFILE.IFPARAM_ IN PROCEDURE DU_CLOSE_DF
     16620**DCL
DISCARD_DECKFILE.INSTATTR_ IN PROCEDURE DU_CLOSE_DF
     16618**DCL
DISCARD_DECKFILE.IRREC_ IN PROCEDURE DU_CLOSE_DF
     16615**DCL
DISCARD_DECKFILE.NAME_ IN PROCEDURE DU_CLOSE_DF
     16616**DCL
DISCARD_DECKFILE.PASS_ IN PROCEDURE DU_CLOSE_DF
     16617**DCL
DISCARD_DECKFILE.PROCATTR_ IN PROCEDURE DU_CLOSE_DF
     16619**DCL
DISCARD_DECKFILE.RECFIELD_ IN PROCEDURE DU_CLOSE_DF
     16616**DCL
DISCARD_DECKFILE.UATTR_ IN PROCEDURE DU_CLOSE_DF
     16618**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:448  
DISCARD_DECKFILE.V.ALTBLD# IN PROCEDURE DU_CLOSE_DF
     16629**DCL
DISCARD_DECKFILE.V.BUPM# IN PROCEDURE DU_CLOSE_DF
     16628**DCL
DISCARD_DECKFILE.V.CLDCB# IN PROCEDURE DU_CLOSE_DF
     16628**DCL
DISCARD_DECKFILE.V.CLINFO# IN PROCEDURE DU_CLOSE_DF
     16630**DCL
DISCARD_DECKFILE.V.CLSYSID# IN PROCEDURE DU_CLOSE_DF
     16627**DCL
DISCARD_DECKFILE.V.DCB# IN PROCEDURE DU_CLOSE_DF
     16621**DCL
DISCARD_DECKFILE.V.DESC IN PROCEDURE DU_CLOSE_DF
     16625**DCL
DISCARD_DECKFILE.V.DESC.ACTIVE# IN PROCEDURE DU_CLOSE_DF
     16627**DCL
DISCARD_DECKFILE.V.DESC.ARCHIVE# IN PROCEDURE DU_CLOSE_DF
     16626**DCL
DISCARD_DECKFILE.V.DESC.BAD# IN PROCEDURE DU_CLOSE_DF
     16626**DCL
DISCARD_DECKFILE.V.DESC.BUF# IN PROCEDURE DU_CLOSE_DF
     16626**DCL
DISCARD_DECKFILE.V.DESC.BUPM# IN PROCEDURE DU_CLOSE_DF
     16626**DCL
DISCARD_DECKFILE.V.DESC.DELF# IN PROCEDURE DU_CLOSE_DF
     16625**DCL
DISCARD_DECKFILE.V.DESC.FETCH# IN PROCEDURE DU_CLOSE_DF
     16627**DCL
DISCARD_DECKFILE.V.DESC.NBUF# IN PROCEDURE DU_CLOSE_DF
     16627**DCL
DISCARD_DECKFILE.V.DESC.NOLIST# IN PROCEDURE DU_CLOSE_DF
     16626**DCL
DISCARD_DECKFILE.V.DESC.ODSTOW# IN PROCEDURE DU_CLOSE_DF
     16626**DCL
DISCARD_DECKFILE.V.DESC.QS# IN PROCEDURE DU_CLOSE_DF
     16626**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:449  
DISCARD_DECKFILE.V.DESC.TERMINATE# IN PROCEDURE DU_CLOSE_DF
     16627**DCL
DISCARD_DECKFILE.V.DESC.TPB# IN PROCEDURE DU_CLOSE_DF
     16627**DCL
DISCARD_DECKFILE.V.DISP# IN PROCEDURE DU_CLOSE_DF
     16624**DCL
DISCARD_DECKFILE.V.EFTOPER IN PROCEDURE DU_CLOSE_DF
     16622**DCL
DISCARD_DECKFILE.V.EFTOPER.ASTOW# IN PROCEDURE DU_CLOSE_DF
     16623**DCL
DISCARD_DECKFILE.V.EFTOPER.BACKUP# IN PROCEDURE DU_CLOSE_DF
     16622**DCL
DISCARD_DECKFILE.V.EFTOPER.DELFDE# IN PROCEDURE DU_CLOSE_DF
     16624**DCL
DISCARD_DECKFILE.V.EFTOPER.ISTOW# IN PROCEDURE DU_CLOSE_DF
     16623**DCL
DISCARD_DECKFILE.V.EFTOPER.UPDDESC# IN PROCEDURE DU_CLOSE_DF
     16623**DCL
DISCARD_DECKFILE.V.GHSTACS# IN PROCEDURE DU_CLOSE_DF
     16629**DCL
DISCARD_DECKFILE.V.LRDL0# IN PROCEDURE DU_CLOSE_DF
     16631**DCL
DISCARD_DECKFILE.V.LSLIDE# IN PROCEDURE DU_CLOSE_DF
     16631**DCL
DISCARD_DECKFILE.V.NOMARKS# IN PROCEDURE DU_CLOSE_DF
     16629**DCL
DISCARD_DECKFILE.V.OPER IN PROCEDURE DU_CLOSE_DF
     16621**DCL
DISCARD_DECKFILE.V.OPER.CHGATT# IN PROCEDURE DU_CLOSE_DF
     16621**DCL
DISCARD_DECKFILE.V.OPER.REBLD# IN PROCEDURE DU_CLOSE_DF
     16622**DCL
DISCARD_DECKFILE.V.OPER.RELG# IN PROCEDURE DU_CLOSE_DF
     16621**DCL
DISCARD_DECKFILE.V.POS# IN PROCEDURE DU_CLOSE_DF
     16628**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:450  
DISCARD_DECKFILE.V.SPARE# IN PROCEDURE DU_CLOSE_DF
     16631**DCL
DISCARD_DECKFILE.V.TRUNCATE# IN PROCEDURE DU_CLOSE_DF
     16624**DCL
DISCARD_DECKFILE.V_ IN PROCEDURE DU_CLOSE_DF
     16615**DCL
DUP
     13237**DCL
DUP.BCD_V
     13308**DCL
DUP.BINARY_V
     13303**DCL
DUP.BINARY_V.PTR$
     13306**DCL
DUP.BREAK_DISABLED
     13357**DCL
DUP.BREAK_RETURN
     13359**DCL
DUP.BREAK_TERMINATE
     13355**DCL
DUP.DF
     13314**DCL
DUP.ERROR_IMAGE
     13277**DCL
DUP.IFAD
     13282**DCL
DUP.IFAD.CONFIG_TAB
     13291**DCL
DUP.IFAD.DRIVE_NUMBER
     13297**DCL
DUP.IFAD.IMU_TAB
     13289**DCL
DUP.LOG
     13330**DCL
DUP.LOG_V_
     13342**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:451  
DUP.PROCESS_COMPLETE
     13241**DCL
DUP.SITE_NAME
     13361**DCL
DUP.TEMP
     13344**DCL
DUP.TEMP.CLOSE_TYPE
     13347**DCL
ERROR_CODE.ERR# IN PROCEDURE DU_SYSTEM_ERRMSG
     17933**DCL
ERROR_CODE.FCG IN PROCEDURE DU_SYSTEM_ERRMSG
     17919**DCL
ERROR_CODE.MID IN PROCEDURE DU_SYSTEM_ERRMSG
     17932**DCL
ERROR_CODE.MON IN PROCEDURE DU_SYSTEM_ERRMSG
     17932**DCL
F$DCB
     13605**DCL
F$DCB.ACCT#
     13621**DCL
F$DCB.ACS#
     13629**DCL
F$DCB.AFTRBLK
     13645**DCL
F$DCB.AGE
     13656**DCL
F$DCB.ALTKEYX
     13636**DCL
F$DCB.AMFLG
     13642**DCL
F$DCB.AMFLG.ACCF
     13642**DCL
F$DCB.AMFLG.ACSF
     13642**DCL
F$DCB.AMFLG.INSF
     13642**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:452  
F$DCB.AMFLG.PROF
     13642**DCL
F$DCB.AMFLG.SNLF
     13642**DCL
F$DCB.AMFLG.USRF
     13642**DCL
F$DCB.AMRSETSTA
     13623**DCL
F$DCB.ANSISPANSEQ#
     13639**DCL
F$DCB.ATTR.APL#
     13631**DCL
F$DCB.ATTR.BIN#
     13631**DCL
F$DCB.ATTR.DENS#
     13630**DCL
F$DCB.ATTR.GRLGL#
     13630**DCL
F$DCB.ATTR.LOWERCASE#
     13631**DCL
F$DCB.ATTR.NATL#
     13630**DCL
F$DCB.ATTR.NOXLATE#
     13630**DCL
F$DCB.ATTR.TRANSLGL#
     13630**DCL
F$DCB.ATTR.TRUOVRPRT#
     13630**DCL
F$DCB.ATTR.UPPERCASE#
     13630**DCL
F$DCB.AU#
     13623**DCL
F$DCB.AUTHFFLG
     13637**DCL
F$DCB.AUTHFFLG.AU#
     13639**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:453  
F$DCB.AUTHFFLG.AURD#
     13639**DCL
F$DCB.AUTHFFLG.CREATE#
     13639**DCL
F$DCB.AUTHFFLG.DELF#
     13638**DCL
F$DCB.AUTHFFLG.DELR#
     13638**DCL
F$DCB.AUTHFFLG.EXEC#
     13638**DCL
F$DCB.AUTHFFLG.NOLIST#
     13638**DCL
F$DCB.AUTHFFLG.READ#
     13638**DCL
F$DCB.AUTHFFLG.REATTR#
     13638**DCL
F$DCB.AUTHFFLG.TCTL#
     13639**DCL
F$DCB.AUTHFFLG.UPD#
     13638**DCL
F$DCB.AUTHFFLG.WNEW#
     13638**DCL
F$DCB.BADARS#
     13640**DCL
F$DCB.BFR
     13656**DCL
F$DCB.BFR.BUFUP
     13657**DCL
F$DCB.BFR.BUFX
     13657**DCL
F$DCB.BFR.CHNG
     13657**DCL
F$DCB.BFR.CVM
     13657**DCL
F$DCB.BFR.DA
     13657**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:454  
F$DCB.BFR.SCRUB
     13657**DCL
F$DCB.BFR1
     13657**DCL
F$DCB.BFR1.CX
     13658**DCL
F$DCB.BFR1.FLAGS
     13657**DCL
F$DCB.BFR1.FLAGS.ONE_WORD_HEADER
     13657**DCL
F$DCB.BFR1.SIZ
     13658**DCL
F$DCB.BLKL#
     13627**DCL
F$DCB.BLKLEN
     13650**DCL
F$DCB.BLOCKED#
     13625**DCL
F$DCB.BOL#
     13628**DCL
F$DCB.BUPF
     13615**DCL
F$DCB.BUPM#
     13626**DCL
F$DCB.BYTESLEFT
     13649**DCL
F$DCB.CACHE
     13644**DCL
F$DCB.CBUFNUM
     13648**DCL
F$DCB.CFU$
     13646**DCL
F$DCB.CHAIN#
     13632**DCL
F$DCB.CHANTIME#
     13632**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:455  
F$DCB.CNVRT#
     13624**DCL
F$DCB.CODE16$
     13636**DCL
F$DCB.COMP#
     13625**DCL
F$DCB.CONNCT#
     13631**DCL
F$DCB.CONT
     13644**DCL
F$DCB.CRECNO
     13649**DCL
F$DCB.CRECX
     13648**DCL
F$DCB.CSEED
     13649**DCL
F$DCB.CTG#
     13625**DCL
F$DCB.CTLCMDIN
     13653**DCL
F$DCB.CVOL#
     13625**DCL
F$DCB.CWORD
     13654**DCL
F$DCB.CX
     13654**DCL
F$DCB.DBGDCBNO#
     13627**DCL
F$DCB.DBGSYSID#
     13627**DCL
F$DCB.DCB#
     13639**DCL
F$DCB.DCBNAME
     13658**DCL
F$DCB.DCBNAME.N
     13659**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:456  
F$DCB.DCBNAME.S
     13659**DCL
F$DCB.DCBNAME.X
     13659**DCL
F$DCB.DCT$
     13634**DCL
F$DCB.DDEV
     13617**DCL
F$DCB.DDEV.CP#
     13617**DCL
F$DCB.DDEV.GR#
     13618**DCL
F$DCB.DDEV.IC#
     13617**DCL
F$DCB.DDEV.LP#
     13617**DCL
F$DCB.DDEV.UCOUT#
     13618**DCL
F$DCB.DDEV.XEQ#
     13618**DCL
F$DCB.DECRYPT
     13652**DCL
F$DCB.DENSITY#
     13632**DCL
F$DCB.DESC
     13618**DCL
F$DCB.DESC.ACTIVE#
     13620**DCL
F$DCB.DESC.ARCHIVE#
     13619**DCL
F$DCB.DESC.BAD#
     13619**DCL
F$DCB.DESC.BUF#
     13619**DCL
F$DCB.DESC.BUPM#
     13619**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:457  
F$DCB.DESC.DELF#
     13618**DCL
F$DCB.DESC.FETCH#
     13620**DCL
F$DCB.DESC.NBUF#
     13619**DCL
F$DCB.DESC.NOLIST#
     13619**DCL
F$DCB.DESC.ODSTOW#
     13619**DCL
F$DCB.DESC.QS#
     13619**DCL
F$DCB.DESC.TERMINATE#
     13620**DCL
F$DCB.DESC.TPB#
     13620**DCL
F$DCB.DEVADR
     13634**DCL
F$DCB.DEVADR.CHAN#
     13635**DCL
F$DCB.DEVADR.DVN#
     13635**DCL
F$DCB.DEVADR.IOM#
     13635**DCL
F$DCB.DISP#
     13626**DCL
F$DCB.DQH$
     13633**DCL
F$DCB.DVBYTE
     13614**DCL
F$DCB.DVBYTE.BIN#
     13614**DCL
F$DCB.DVBYTE.TOP#
     13614**DCL
F$DCB.DVBYTE.TRANS#
     13614**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:458  
F$DCB.DVBYTE.VFC#
     13614**DCL
F$DCB.DVFC#
     13633**DCL
F$DCB.DVTYPE#
     13626**DCL
F$DCB.EBCDIC#
     13624**DCL
F$DCB.ENQF
     13644**DCL
F$DCB.EOMVAL#
     13615**DCL
F$DCB.EOMVAL#.VALUE#
     13616**DCL
F$DCB.EOMVAL#.VFLG#
     13615**DCL
F$DCB.EOP
     13641**DCL
F$DCB.EVENT
     13636**DCL
F$DCB.EXIST#
     13625**DCL
F$DCB.EXPIRE#
     13628**DCL
F$DCB.FCI#
     13624**DCL
F$DCB.FCN
     13650**DCL
F$DCB.FCN.CNT
     13650**DCL
F$DCB.FCN.F
     13650**DCL
F$DCB.FDCM
     13649**DCL
F$DCB.FEPIO
     13656**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:459  
F$DCB.FEPIO.BPP
     13656**DCL
F$DCB.FEPIO.BUFX
     13656**DCL
F$DCB.FEPIO.EVENT
     13656**DCL
F$DCB.FEPIO.KEYX
     13656**DCL
F$DCB.FEPIO.KPP
     13656**DCL
F$DCB.FEPIO2
     13658**DCL
F$DCB.FEPIO3
     13658**DCL
F$DCB.FEPSIZ
     13655**DCL
F$DCB.FEPSIZ.BUF
     13655**DCL
F$DCB.FEPSIZ.KEY
     13655**DCL
F$DCB.FEXT
     13641**DCL
F$DCB.FEXTX
     13628**DCL
F$DCB.FFLG
     13616**DCL
F$DCB.FFLG.AU#
     13617**DCL
F$DCB.FFLG.AURD#
     13617**DCL
F$DCB.FFLG.CREATE#
     13617**DCL
F$DCB.FFLG.DELF#
     13616**DCL
F$DCB.FFLG.DELR#
     13616**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:460  
F$DCB.FFLG.EXEC#
     13617**DCL
F$DCB.FFLG.NOLIST#
     13616**DCL
F$DCB.FFLG.READ#
     13616**DCL
F$DCB.FFLG.REATTR#
     13616**DCL
F$DCB.FFLG.TCTL#
     13617**DCL
F$DCB.FIELDX
     13636**DCL
F$DCB.FLPW#
     13611**DCL
F$DCB.FMOD
     13641**DCL
F$DCB.FPRGX
     13636**DCL
F$DCB.FPSTR
     13651**DCL
F$DCB.FTAM
     13645**DCL
F$DCB.FTAM.CTX
     13646**DCL
F$DCB.FTAM.PMME
     13646**DCL
F$DCB.FTAM.USR
     13646**DCL
F$DCB.FUN#
     13626**DCL
F$DCB.GDISP
     13652**DCL
F$DCB.GHSTACS#
     13635**DCL
F$DCB.GRPOS
     13644**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:461  
F$DCB.GTYP
     13641**DCL
F$DCB.HASH
     13649**DCL
F$DCB.IASN
     13654**DCL
F$DCB.ID
     13655**DCL
F$DCB.ID.DA
     13655**DCL
F$DCB.ID.GX
     13655**DCL
F$DCB.IFMT
     13653**DCL
F$DCB.IGNOREFSN#
     13623**DCL
F$DCB.INDX
     13650**DCL
F$DCB.IOERROK#
     13623**DCL
F$DCB.IORG
     13648**DCL
F$DCB.IRRECX
     13640**DCL
F$DCB.IWL
     13653**DCL
F$DCB.IWL.HDRIWL
     13653**DCL
F$DCB.IWL.SEQIWL
     13653**DCL
F$DCB.IWL.TABIWL
     13653**DCL
F$DCB.JRNLBYPASS#
     13635**DCL
F$DCB.KEYL#
     13628**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:462  
F$DCB.KEYTYPE#
     13637**DCL
F$DCB.KEYX#
     13628**DCL
F$DCB.KFIELDX
     13637**DCL
F$DCB.LASTKEY
     13645**DCL
F$DCB.LASTKEY$
     13645**DCL
F$DCB.LDCTX
     13634**DCL
F$DCB.LDFLG
     13643**DCL
F$DCB.LOAD#
     13623**DCL
F$DCB.LOGSEC
     13652**DCL
F$DCB.LPOOL
     13646**DCL
F$DCB.LRDL0#
     13629**DCL
F$DCB.LSLIDE#
     13629**DCL
F$DCB.LSTAOR#
     13623**DCL
F$DCB.LSTBLK
     13645**DCL
F$DCB.MAXVOL#
     13632**DCL
F$DCB.MEDIA
     13653**DCL
F$DCB.MODCNT
     13651**DCL
F$DCB.MOUNT
     13643**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:463  
F$DCB.MOVED
     13654**DCL
F$DCB.MPC$
     13634**DCL
F$DCB.MUST_CVOL
     13642**DCL
F$DCB.NAME#
     13621**DCL
F$DCB.NAME#.C17
     13621**DCL
F$DCB.NAME#.C17.CC
     13621**DCL
F$DCB.NAME#.L
     13621**DCL
F$DCB.NEW_FSECT
     13643**DCL
F$DCB.OLDIOERR
     13652**DCL
F$DCB.OWNER
     13643**DCL
F$DCB.PASS#
     13621**DCL
F$DCB.PASSF#
     13624**DCL
F$DCB.PATH
     13640**DCL
F$DCB.PATH.CHAN#
     13640**DCL
F$DCB.PATH.IOM#
     13640**DCL
F$DCB.PGINGRAN
     13652**DCL
F$DCB.PRIVOPN
     13652**DCL
F$DCB.PSN#
     13621**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:464  
F$DCB.QISS#
     13623**DCL
F$DCB.RA
     13644**DCL
F$DCB.RDL0#
     13615**DCL
F$DCB.REALSPAN
     13652**DCL
F$DCB.RECL#
     13627**DCL
F$DCB.RESNT
     13622**DCL
F$DCB.RESNT.NUM
     13622**DCL
F$DCB.RESNT.TYP
     13622**DCL
F$DCB.RETRYCNT#
     13618**DCL
F$DCB.RPOS
     13644**DCL
F$DCB.SEED#
     13641**DCL
F$DCB.SEGX
     13651**DCL
F$DCB.SEQ#
     13633**DCL
F$DCB.SEQCOL#
     13633**DCL
F$DCB.SEQID#
     13633**DCL
F$DCB.SETSTA$
     13620**DCL
F$DCB.SEZ_OK
     13642**DCL
F$DCB.SHARE#
     13625**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:465  
F$DCB.SHARED
     13641**DCL
F$DCB.SLIDE#
     13615**DCL
F$DCB.SPAN
     13643**DCL
F$DCB.SPANNED#
     13625**DCL
F$DCB.SPARE#
     13629**DCL
F$DCB.STARF
     13641**DCL
F$DCB.STARTX
     13637**DCL
F$DCB.STARX
     13644**DCL
F$DCB.STR#
     13651**DCL
F$DCB.SYSID#
     13628**DCL
F$DCB.TAPTYP
     13647**DCL
F$DCB.TAPTYP.CP6F
     13647**DCL
F$DCB.TAPTYP.HAVLASTKEY
     13647**DCL
F$DCB.TAPTYP.MANAGED
     13648**DCL
F$DCB.TAPTYP.NOCVOL
     13648**DCL
F$DCB.TAPTYP.PASTFM
     13648**DCL
F$DCB.TAPTYP.RWASC
     13647**DCL
F$DCB.TAPTYP.USRBUF
     13647**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:466  
F$DCB.TDALVL
     13646**DCL
F$DCB.TDEXTST$
     13620**DCL
F$DCB.TDFLG
     13631**DCL
F$DCB.TDFLG.SDSK#
     13631**DCL
F$DCB.TDSTAT#
     13622**DCL
F$DCB.TRNC
     13644**DCL
F$DCB.TYC
     13611**DCL
F$DCB.TYC.BLNKTP#
     13611**DCL
F$DCB.TYC.BOF#
     13611**DCL
F$DCB.TYC.BOT#
     13611**DCL
F$DCB.TYC.CDALRT#
     13613**DCL
F$DCB.TYC.CGCRCW
     13614**DCL
F$DCB.TYC.CGCWRV
     13614**DCL
F$DCB.TYC.CGFULL
     13613**DCL
F$DCB.TYC.CGKEYV
     13613**DCL
F$DCB.TYC.CGLWRV
     13613**DCL
F$DCB.TYC.DACT#
     13612**DCL
F$DCB.TYC.DI#
     13612**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:467  
F$DCB.TYC.EGV#
     13611**DCL
F$DCB.TYC.EOD#
     13612**DCL
F$DCB.TYC.EOF#
     13612**DCL
F$DCB.TYC.EOT#
     13611**DCL
F$DCB.TYC.FRAW#
     13613**DCL
F$DCB.TYC.IOERR#
     13612**DCL
F$DCB.TYC.LAST#
     13613**DCL
F$DCB.TYC.LD#
     13612**DCL
F$DCB.TYC.LDISC#
     13612**DCL
F$DCB.TYC.MTRAP#
     13612**DCL
F$DCB.TYC.OPER#
     13611**DCL
F$DCB.TYC.PROT#
     13613**DCL
F$DCB.TYC.TIMO#
     13613**DCL
F$DCB.TYC.XTRARD
     13613**DCL
F$DCB.TYPE#
     13622**DCL
F$DCB.UB$
     13650**DCL
F$DCB.UBYTES
     13650**DCL
F$DCB.UCOUT
     13647**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:468  
F$DCB.UNIQUEBLD
     13654**DCL
F$DCB.UOPT#
     13624**DCL
F$DCB.UPDCNT
     13654**DCL
F$DCB.VFCCHAR#
     13636**DCL
F$DCB.VOL#
     13632**DCL
F$DCB.VOLACCESS#
     13624**DCL
F$DCB.WAIT
     13644**DCL
F$DCB.WCDATA
     13647**DCL
F$DCB.WIDTH#
     13618**DCL
F$DCB.WRCMP
     13647**DCL
F$DCB.WSR#
     13629**DCL
F$DCB.XTEND#
     13625**DCL
F$DCB.XTNSIZE#
     13629**DCL
F$DCB IN PROCEDURE DU_MCA_RESET_STATUS
     15691**DCL
F$DCB.ACCT# IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL
F$DCB.ACS# IN PROCEDURE DU_MCA_RESET_STATUS
     15715**DCL
F$DCB.AFTRBLK IN PROCEDURE DU_MCA_RESET_STATUS
     15731**DCL
F$DCB.AGE IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:469  
F$DCB.ALTKEYX IN PROCEDURE DU_MCA_RESET_STATUS
     15722**DCL
F$DCB.AMFLG IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.AMFLG.ACCF IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.AMFLG.ACSF IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.AMFLG.INSF IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.AMFLG.PROF IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.AMFLG.SNLF IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.AMFLG.USRF IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.AMR# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.AMRSETSTA IN PROCEDURE DU_MCA_RESET_STATUS
     15709**DCL
F$DCB.ANSISPANSEQ# IN PROCEDURE DU_MCA_RESET_STATUS
     15725**DCL
F$DCB.ASN# IN PROCEDURE DU_MCA_RESET_STATUS
     15712**DCL
F$DCB.ATTR.APL# IN PROCEDURE DU_MCA_RESET_STATUS
     15717**DCL
F$DCB.ATTR.BIN# IN PROCEDURE DU_MCA_RESET_STATUS
     15717**DCL
F$DCB.ATTR.DENS# IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL
F$DCB.ATTR.GRLGL# IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL
F$DCB.ATTR.LOWERCASE# IN PROCEDURE DU_MCA_RESET_STATUS
     15717**DCL
F$DCB.ATTR.NATL# IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:470  
F$DCB.ATTR.NOXLATE# IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL
F$DCB.ATTR.TRANSLGL# IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL
F$DCB.ATTR.TRUOVRPRT# IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL
F$DCB.ATTR.UPPERCASE# IN PROCEDURE DU_MCA_RESET_STATUS
     15716**DCL
F$DCB.AU# IN PROCEDURE DU_MCA_RESET_STATUS
     15709**DCL
F$DCB.AUTHFFLG IN PROCEDURE DU_MCA_RESET_STATUS
     15723**DCL
F$DCB.AUTHFFLG.AU# IN PROCEDURE DU_MCA_RESET_STATUS
     15725**DCL
F$DCB.AUTHFFLG.AURD# IN PROCEDURE DU_MCA_RESET_STATUS
     15725**DCL
F$DCB.AUTHFFLG.CREATE# IN PROCEDURE DU_MCA_RESET_STATUS
     15725**DCL
F$DCB.AUTHFFLG.DELF# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
F$DCB.AUTHFFLG.DELR# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
F$DCB.AUTHFFLG.EXEC# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
F$DCB.AUTHFFLG.NOLIST# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
F$DCB.AUTHFFLG.READ# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
F$DCB.AUTHFFLG.REATTR# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
F$DCB.AUTHFFLG.TCTL# IN PROCEDURE DU_MCA_RESET_STATUS
     15725**DCL
F$DCB.AUTHFFLG.UPD# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
F$DCB.AUTHFFLG.WNEW# IN PROCEDURE DU_MCA_RESET_STATUS
     15724**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:471  
F$DCB.BADARS# IN PROCEDURE DU_MCA_RESET_STATUS
     15726**DCL
F$DCB.BFR IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
F$DCB.BFR.BUFUP IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR.BUFX IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR.CHNG IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR.CVM IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR.DA IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR.SCRUB IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR1 IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR1.CX IN PROCEDURE DU_MCA_RESET_STATUS
     15744**DCL
F$DCB.BFR1.FLAGS IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR1.FLAGS.ONE_WORD_HEADER IN PROCEDURE DU_MCA_RESET_STATUS
     15743**DCL
F$DCB.BFR1.SIZ IN PROCEDURE DU_MCA_RESET_STATUS
     15744**DCL
F$DCB.BLKL# IN PROCEDURE DU_MCA_RESET_STATUS
     15713**DCL
F$DCB.BLKLEN IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL
F$DCB.BLOCKED# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
F$DCB.BOL# IN PROCEDURE DU_MCA_RESET_STATUS
     15714**DCL
F$DCB.BUPF IN PROCEDURE DU_MCA_RESET_STATUS
     15701**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:472  
F$DCB.BUPM# IN PROCEDURE DU_MCA_RESET_STATUS
     15712**DCL
F$DCB.BYTESLEFT IN PROCEDURE DU_MCA_RESET_STATUS
     15735**DCL
F$DCB.CACHE IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.CBUFNUM IN PROCEDURE DU_MCA_RESET_STATUS
     15734**DCL
F$DCB.CFU$ IN PROCEDURE DU_MCA_RESET_STATUS
     15732**DCL
F$DCB.CHAIN# IN PROCEDURE DU_MCA_RESET_STATUS
     15718**DCL
F$DCB.CHANTIME# IN PROCEDURE DU_MCA_RESET_STATUS
     15718**DCL
F$DCB.CNVRT# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.CODE16$ IN PROCEDURE DU_MCA_RESET_STATUS
     15722**DCL
F$DCB.COMP# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
F$DCB.CONNCT# IN PROCEDURE DU_MCA_RESET_STATUS
     15717**DCL
F$DCB.CONT IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.CRECNO IN PROCEDURE DU_MCA_RESET_STATUS
     15735**DCL
F$DCB.CRECX IN PROCEDURE DU_MCA_RESET_STATUS
     15734**DCL
F$DCB.CSEED IN PROCEDURE DU_MCA_RESET_STATUS
     15735**DCL
F$DCB.CTG# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
F$DCB.CTLCMDIN IN PROCEDURE DU_MCA_RESET_STATUS
     15739**DCL
F$DCB.CVOL# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:473  
F$DCB.CWORD IN PROCEDURE DU_MCA_RESET_STATUS
     15740**DCL
F$DCB.CX IN PROCEDURE DU_MCA_RESET_STATUS
     15740**DCL
F$DCB.DBGDCBNO# IN PROCEDURE DU_MCA_RESET_STATUS
     15713**DCL
F$DCB.DBGSYSID# IN PROCEDURE DU_MCA_RESET_STATUS
     15713**DCL
F$DCB.DCB# IN PROCEDURE DU_MCA_RESET_STATUS
     15725**DCL
F$DCB.DCBNAME IN PROCEDURE DU_MCA_RESET_STATUS
     15744**DCL
F$DCB.DCBNAME.N IN PROCEDURE DU_MCA_RESET_STATUS
     15745**DCL
F$DCB.DCBNAME.S IN PROCEDURE DU_MCA_RESET_STATUS
     15745**DCL
F$DCB.DCBNAME.X IN PROCEDURE DU_MCA_RESET_STATUS
     15745**DCL
F$DCB.DCT$ IN PROCEDURE DU_MCA_RESET_STATUS
     15720**DCL
F$DCB.DDEV IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.DDEV.CP# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.DDEV.GR# IN PROCEDURE DU_MCA_RESET_STATUS
     15704**DCL
F$DCB.DDEV.IC# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.DDEV.LP# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.DDEV.UCOUT# IN PROCEDURE DU_MCA_RESET_STATUS
     15704**DCL
F$DCB.DDEV.XEQ# IN PROCEDURE DU_MCA_RESET_STATUS
     15704**DCL
F$DCB.DECRYPT IN PROCEDURE DU_MCA_RESET_STATUS
     15738**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:474  
F$DCB.DENSITY# IN PROCEDURE DU_MCA_RESET_STATUS
     15718**DCL
F$DCB.DESC IN PROCEDURE DU_MCA_RESET_STATUS
     15704**DCL
F$DCB.DESC.ACTIVE# IN PROCEDURE DU_MCA_RESET_STATUS
     15706**DCL
F$DCB.DESC.ARCHIVE# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.BAD# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.BUF# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.BUPM# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.DELF# IN PROCEDURE DU_MCA_RESET_STATUS
     15704**DCL
F$DCB.DESC.FETCH# IN PROCEDURE DU_MCA_RESET_STATUS
     15706**DCL
F$DCB.DESC.NBUF# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.NOLIST# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.ODSTOW# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.QS# IN PROCEDURE DU_MCA_RESET_STATUS
     15705**DCL
F$DCB.DESC.TERMINATE# IN PROCEDURE DU_MCA_RESET_STATUS
     15706**DCL
F$DCB.DESC.TPB# IN PROCEDURE DU_MCA_RESET_STATUS
     15706**DCL
F$DCB.DEVADR IN PROCEDURE DU_MCA_RESET_STATUS
     15720**DCL
F$DCB.DEVADR.CHAN# IN PROCEDURE DU_MCA_RESET_STATUS
     15721**DCL
F$DCB.DEVADR.DVN# IN PROCEDURE DU_MCA_RESET_STATUS
     15721**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:475  
F$DCB.DEVADR.IOM# IN PROCEDURE DU_MCA_RESET_STATUS
     15721**DCL
F$DCB.DISP# IN PROCEDURE DU_MCA_RESET_STATUS
     15712**DCL
F$DCB.DQH$ IN PROCEDURE DU_MCA_RESET_STATUS
     15719**DCL
F$DCB.DVBYTE IN PROCEDURE DU_MCA_RESET_STATUS
     15700**DCL
F$DCB.DVBYTE.BIN# IN PROCEDURE DU_MCA_RESET_STATUS
     15700**DCL
F$DCB.DVBYTE.TOP# IN PROCEDURE DU_MCA_RESET_STATUS
     15700**DCL
F$DCB.DVBYTE.TRANS# IN PROCEDURE DU_MCA_RESET_STATUS
     15700**DCL
F$DCB.DVBYTE.VFC# IN PROCEDURE DU_MCA_RESET_STATUS
     15700**DCL
F$DCB.DVFC# IN PROCEDURE DU_MCA_RESET_STATUS
     15719**DCL
F$DCB.DVTYPE# IN PROCEDURE DU_MCA_RESET_STATUS
     15712**DCL
F$DCB.EBCDIC# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.ENQF IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.EOMVAL# IN PROCEDURE DU_MCA_RESET_STATUS
     15701**DCL
F$DCB.EOMVAL#.VALUE# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.EOMVAL#.VFLG# IN PROCEDURE DU_MCA_RESET_STATUS
     15701**DCL
F$DCB.EOP IN PROCEDURE DU_MCA_RESET_STATUS
     15727**DCL
F$DCB.EVENT IN PROCEDURE DU_MCA_RESET_STATUS
     15722**DCL
F$DCB.EXIST# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:476  
F$DCB.EXPIRE# IN PROCEDURE DU_MCA_RESET_STATUS
     15714**DCL
F$DCB.FCD# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.FCI# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.FCN IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL
F$DCB.FCN.CNT IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL
F$DCB.FCN.F IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL
F$DCB.FDCM IN PROCEDURE DU_MCA_RESET_STATUS
     15735**DCL
F$DCB.FEPIO IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
F$DCB.FEPIO.BPP IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
F$DCB.FEPIO.BUFX IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
F$DCB.FEPIO.EVENT IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
F$DCB.FEPIO.KEYX IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
F$DCB.FEPIO.KPP IN PROCEDURE DU_MCA_RESET_STATUS
     15742**DCL
F$DCB.FEPIO2 IN PROCEDURE DU_MCA_RESET_STATUS
     15744**DCL
F$DCB.FEPIO3 IN PROCEDURE DU_MCA_RESET_STATUS
     15744**DCL
F$DCB.FEPSIZ IN PROCEDURE DU_MCA_RESET_STATUS
     15741**DCL
F$DCB.FEPSIZ.BUF IN PROCEDURE DU_MCA_RESET_STATUS
     15741**DCL
F$DCB.FEPSIZ.KEY IN PROCEDURE DU_MCA_RESET_STATUS
     15741**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:477  
F$DCB.FEXT IN PROCEDURE DU_MCA_RESET_STATUS
     15727**DCL
F$DCB.FEXTX IN PROCEDURE DU_MCA_RESET_STATUS
     15714**DCL
F$DCB.FFLG IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FFLG.AU# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.FFLG.AURD# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.FFLG.CREATE# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.FFLG.DELF# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FFLG.DELR# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FFLG.EXEC# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.FFLG.NOLIST# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FFLG.READ# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FFLG.REATTR# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FFLG.TCTL# IN PROCEDURE DU_MCA_RESET_STATUS
     15703**DCL
F$DCB.FFLG.UPD# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FFLG.WNEW# IN PROCEDURE DU_MCA_RESET_STATUS
     15702**DCL
F$DCB.FIELDX IN PROCEDURE DU_MCA_RESET_STATUS
     15722**DCL
F$DCB.FLPW# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
F$DCB.FMOD IN PROCEDURE DU_MCA_RESET_STATUS
     15727**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:478  
F$DCB.FPRGX IN PROCEDURE DU_MCA_RESET_STATUS
     15722**DCL
F$DCB.FPSTR IN PROCEDURE DU_MCA_RESET_STATUS
     15737**DCL
F$DCB.FTAM IN PROCEDURE DU_MCA_RESET_STATUS
     15731**DCL
F$DCB.FTAM.CTX IN PROCEDURE DU_MCA_RESET_STATUS
     15732**DCL
F$DCB.FTAM.PMME IN PROCEDURE DU_MCA_RESET_STATUS
     15732**DCL
F$DCB.FTAM.USR IN PROCEDURE DU_MCA_RESET_STATUS
     15732**DCL
F$DCB.FUN# IN PROCEDURE DU_MCA_RESET_STATUS
     15712**DCL
F$DCB.GDISP IN PROCEDURE DU_MCA_RESET_STATUS
     15738**DCL
F$DCB.GHSTACS# IN PROCEDURE DU_MCA_RESET_STATUS
     15721**DCL
F$DCB.GRPOS IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.GTYP IN PROCEDURE DU_MCA_RESET_STATUS
     15727**DCL
F$DCB.HASH IN PROCEDURE DU_MCA_RESET_STATUS
     15735**DCL
F$DCB.IASN IN PROCEDURE DU_MCA_RESET_STATUS
     15740**DCL
F$DCB.ID IN PROCEDURE DU_MCA_RESET_STATUS
     15741**DCL
F$DCB.ID.DA IN PROCEDURE DU_MCA_RESET_STATUS
     15741**DCL
F$DCB.ID.GX IN PROCEDURE DU_MCA_RESET_STATUS
     15741**DCL
F$DCB.IFMT IN PROCEDURE DU_MCA_RESET_STATUS
     15739**DCL
F$DCB.IGNOREFSN# IN PROCEDURE DU_MCA_RESET_STATUS
     15709**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:479  
F$DCB.INDX IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL
F$DCB.IOERROK# IN PROCEDURE DU_MCA_RESET_STATUS
     15709**DCL
F$DCB.IORG IN PROCEDURE DU_MCA_RESET_STATUS
     15734**DCL
F$DCB.IRRECX IN PROCEDURE DU_MCA_RESET_STATUS
     15726**DCL
F$DCB.IWL IN PROCEDURE DU_MCA_RESET_STATUS
     15739**DCL
F$DCB.IWL.HDRIWL IN PROCEDURE DU_MCA_RESET_STATUS
     15739**DCL
F$DCB.IWL.SEQIWL IN PROCEDURE DU_MCA_RESET_STATUS
     15739**DCL
F$DCB.IWL.TABIWL IN PROCEDURE DU_MCA_RESET_STATUS
     15739**DCL
F$DCB.JRNLBYPASS# IN PROCEDURE DU_MCA_RESET_STATUS
     15721**DCL
F$DCB.KEYL# IN PROCEDURE DU_MCA_RESET_STATUS
     15714**DCL
F$DCB.KEYTYPE# IN PROCEDURE DU_MCA_RESET_STATUS
     15723**DCL
F$DCB.KEYX# IN PROCEDURE DU_MCA_RESET_STATUS
     15714**DCL
F$DCB.KFIELDX IN PROCEDURE DU_MCA_RESET_STATUS
     15723**DCL
F$DCB.LASTKEY IN PROCEDURE DU_MCA_RESET_STATUS
     15731**DCL
F$DCB.LASTKEY$ IN PROCEDURE DU_MCA_RESET_STATUS
     15731**DCL
F$DCB.LDCTX IN PROCEDURE DU_MCA_RESET_STATUS
     15720**DCL
F$DCB.LDFLG IN PROCEDURE DU_MCA_RESET_STATUS
     15729**DCL
F$DCB.LINES# IN PROCEDURE DU_MCA_RESET_STATUS
     15719**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:480  
F$DCB.LOAD# IN PROCEDURE DU_MCA_RESET_STATUS
     15709**DCL
F$DCB.LOGSEC IN PROCEDURE DU_MCA_RESET_STATUS
     15738**DCL
F$DCB.LPOOL IN PROCEDURE DU_MCA_RESET_STATUS
     15732**DCL
F$DCB.LRDL0# IN PROCEDURE DU_MCA_RESET_STATUS
     15715**DCL
F$DCB.LSLIDE# IN PROCEDURE DU_MCA_RESET_STATUS
     15715**DCL
F$DCB.LSTAOR# IN PROCEDURE DU_MCA_RESET_STATUS
     15709**DCL
F$DCB.LSTBLK IN PROCEDURE DU_MCA_RESET_STATUS
     15731**DCL
F$DCB.MAXVOL# IN PROCEDURE DU_MCA_RESET_STATUS
     15718**DCL
F$DCB.MEDIA IN PROCEDURE DU_MCA_RESET_STATUS
     15739**DCL
F$DCB.MODCNT IN PROCEDURE DU_MCA_RESET_STATUS
     15737**DCL
F$DCB.MOUNT IN PROCEDURE DU_MCA_RESET_STATUS
     15729**DCL
F$DCB.MOVED IN PROCEDURE DU_MCA_RESET_STATUS
     15740**DCL
F$DCB.MPC$ IN PROCEDURE DU_MCA_RESET_STATUS
     15720**DCL
F$DCB.MUST_CVOL IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.NAME# IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL
F$DCB.NAME#.C17 IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL
F$DCB.NAME#.C17.CC IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL
F$DCB.NAME#.L IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:481  
F$DCB.NEW_FSECT IN PROCEDURE DU_MCA_RESET_STATUS
     15729**DCL
F$DCB.OLDIOERR IN PROCEDURE DU_MCA_RESET_STATUS
     15738**DCL
F$DCB.OWNER IN PROCEDURE DU_MCA_RESET_STATUS
     15729**DCL
F$DCB.PASS# IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL
F$DCB.PASSF# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.PATH IN PROCEDURE DU_MCA_RESET_STATUS
     15726**DCL
F$DCB.PATH.CHAN# IN PROCEDURE DU_MCA_RESET_STATUS
     15726**DCL
F$DCB.PATH.IOM# IN PROCEDURE DU_MCA_RESET_STATUS
     15726**DCL
F$DCB.PGINGRAN IN PROCEDURE DU_MCA_RESET_STATUS
     15738**DCL
F$DCB.PRIVOPN IN PROCEDURE DU_MCA_RESET_STATUS
     15738**DCL
F$DCB.PSN# IN PROCEDURE DU_MCA_RESET_STATUS
     15707**DCL
F$DCB.QISS# IN PROCEDURE DU_MCA_RESET_STATUS
     15709**DCL
F$DCB.RA IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.RDL0# IN PROCEDURE DU_MCA_RESET_STATUS
     15701**DCL
F$DCB.REALSPAN IN PROCEDURE DU_MCA_RESET_STATUS
     15738**DCL
F$DCB.RECL# IN PROCEDURE DU_MCA_RESET_STATUS
     15713**DCL
F$DCB.RESNT IN PROCEDURE DU_MCA_RESET_STATUS
     15708**DCL
F$DCB.RESNT.NUM IN PROCEDURE DU_MCA_RESET_STATUS
     15708**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:482  
F$DCB.RESNT.TYP IN PROCEDURE DU_MCA_RESET_STATUS
     15708**DCL
F$DCB.RETRYCNT# IN PROCEDURE DU_MCA_RESET_STATUS
     15704**DCL
F$DCB.RPOS IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.SEED# IN PROCEDURE DU_MCA_RESET_STATUS
     15727**DCL
F$DCB.SEGX IN PROCEDURE DU_MCA_RESET_STATUS
     15737**DCL
F$DCB.SEQ# IN PROCEDURE DU_MCA_RESET_STATUS
     15719**DCL
F$DCB.SEQCOL# IN PROCEDURE DU_MCA_RESET_STATUS
     15719**DCL
F$DCB.SEQID# IN PROCEDURE DU_MCA_RESET_STATUS
     15719**DCL
F$DCB.SETSTA$ IN PROCEDURE DU_MCA_RESET_STATUS
     15706**DCL
F$DCB.SEZ_OK IN PROCEDURE DU_MCA_RESET_STATUS
     15728**DCL
F$DCB.SHARE# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
F$DCB.SHARED IN PROCEDURE DU_MCA_RESET_STATUS
     15727**DCL
F$DCB.SLIDE# IN PROCEDURE DU_MCA_RESET_STATUS
     15701**DCL
F$DCB.SPAN IN PROCEDURE DU_MCA_RESET_STATUS
     15729**DCL
F$DCB.SPANNED# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
F$DCB.SPARE# IN PROCEDURE DU_MCA_RESET_STATUS
     15715**DCL
F$DCB.STARF IN PROCEDURE DU_MCA_RESET_STATUS
     15727**DCL
F$DCB.STARTX IN PROCEDURE DU_MCA_RESET_STATUS
     15723**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:483  
F$DCB.STARX IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.STR# IN PROCEDURE DU_MCA_RESET_STATUS
     15737**DCL
F$DCB.SYSID# IN PROCEDURE DU_MCA_RESET_STATUS
     15714**DCL
F$DCB.TAPTYP IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
F$DCB.TAPTYP.CP6F IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
F$DCB.TAPTYP.HAVLASTKEY IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
F$DCB.TAPTYP.MANAGED IN PROCEDURE DU_MCA_RESET_STATUS
     15734**DCL
F$DCB.TAPTYP.NOCVOL IN PROCEDURE DU_MCA_RESET_STATUS
     15734**DCL
F$DCB.TAPTYP.PASTFM IN PROCEDURE DU_MCA_RESET_STATUS
     15734**DCL
F$DCB.TAPTYP.RWASC IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
F$DCB.TAPTYP.USRBUF IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
F$DCB.TDALVL IN PROCEDURE DU_MCA_RESET_STATUS
     15732**DCL
F$DCB.TDEXTST$ IN PROCEDURE DU_MCA_RESET_STATUS
     15706**DCL
F$DCB.TDFLG IN PROCEDURE DU_MCA_RESET_STATUS
     15717**DCL
F$DCB.TDFLG.SDSK# IN PROCEDURE DU_MCA_RESET_STATUS
     15717**DCL
F$DCB.TRNC IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.TYC IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
F$DCB.TYC.BLNKTP# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:484  
F$DCB.TYC.BOF# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
F$DCB.TYC.BOT# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
F$DCB.TYC.CDALRT# IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.CGCRCW IN PROCEDURE DU_MCA_RESET_STATUS
     15700**DCL
F$DCB.TYC.CGCWRV IN PROCEDURE DU_MCA_RESET_STATUS
     15700**DCL
F$DCB.TYC.CGFULL IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.CGKEYV IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.CGLWRV IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.DACT# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
F$DCB.TYC.DI# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
F$DCB.TYC.EGV# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
F$DCB.TYC.EOD# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
F$DCB.TYC.EOF# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
F$DCB.TYC.EOT# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
F$DCB.TYC.FRAW# IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.IOERR# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
F$DCB.TYC.LAST# IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.LD# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:485  
F$DCB.TYC.LDISC# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
F$DCB.TYC.MTRAP# IN PROCEDURE DU_MCA_RESET_STATUS
     15698**DCL
F$DCB.TYC.OPER# IN PROCEDURE DU_MCA_RESET_STATUS
     15697**DCL
F$DCB.TYC.PROT# IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.TIMO# IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYC.XTRARD IN PROCEDURE DU_MCA_RESET_STATUS
     15699**DCL
F$DCB.TYPE# IN PROCEDURE DU_MCA_RESET_STATUS
     15708**DCL
F$DCB.UB$ IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL
F$DCB.UBYTES IN PROCEDURE DU_MCA_RESET_STATUS
     15736**DCL
F$DCB.UCOUT IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
F$DCB.UNIQUEBLD IN PROCEDURE DU_MCA_RESET_STATUS
     15740**DCL
F$DCB.UOPT# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.UPDCNT IN PROCEDURE DU_MCA_RESET_STATUS
     15740**DCL
F$DCB.VFCCHAR# IN PROCEDURE DU_MCA_RESET_STATUS
     15722**DCL
F$DCB.VOL# IN PROCEDURE DU_MCA_RESET_STATUS
     15718**DCL
F$DCB.VOLACCESS# IN PROCEDURE DU_MCA_RESET_STATUS
     15710**DCL
F$DCB.WAIT IN PROCEDURE DU_MCA_RESET_STATUS
     15730**DCL
F$DCB.WCDATA IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:486  
F$DCB.WIDTH# IN PROCEDURE DU_MCA_RESET_STATUS
     15704**DCL
F$DCB.WRCMP IN PROCEDURE DU_MCA_RESET_STATUS
     15733**DCL
F$DCB.WSR# IN PROCEDURE DU_MCA_RESET_STATUS
     15715**DCL
F$DCB.XTEND# IN PROCEDURE DU_MCA_RESET_STATUS
     15711**DCL
F$DCB.XTNSIZE# IN PROCEDURE DU_MCA_RESET_STATUS
     15715**DCL
FETCH_STATS.ALTMSG IN PROCEDURE DU_FETCH_TEXT
     17801**DCL
FETCH_STATS.BADPOINT IN PROCEDURE DU_FETCH_TEXT
     17803**DCL
FETCH_STATS.BADUSUB IN PROCEDURE DU_FETCH_TEXT
     17804**DCL
FETCH_STATS.CODEUSED IN PROCEDURE DU_FETCH_TEXT
     17808**DCL
FETCH_STATS.CODEUSED.ERR# IN PROCEDURE DU_FETCH_TEXT
     17809**DCL
FETCH_STATS.CODEUSED.FCG IN PROCEDURE DU_FETCH_TEXT
     17808**DCL
FETCH_STATS.CODEUSED.MID IN PROCEDURE DU_FETCH_TEXT
     17808**DCL
FETCH_STATS.CODEUSED.MON IN PROCEDURE DU_FETCH_TEXT
     17808**DCL
FETCH_STATS.CODEUSED.SEV IN PROCEDURE DU_FETCH_TEXT
     17809**DCL
FETCH_STATS.ERRCODE1 IN PROCEDURE DU_FETCH_TEXT
     17805**DCL
FETCH_STATS.ERRCODE1.ERR# IN PROCEDURE DU_FETCH_TEXT
     17806**DCL
FETCH_STATS.ERRCODE1.FCG IN PROCEDURE DU_FETCH_TEXT
     17805**DCL
FETCH_STATS.ERRCODE1.MID IN PROCEDURE DU_FETCH_TEXT
     17805**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:487  
FETCH_STATS.ERRCODE1.MON IN PROCEDURE DU_FETCH_TEXT
     17805**DCL
FETCH_STATS.ERRCODE1.SEV IN PROCEDURE DU_FETCH_TEXT
     17806**DCL
FETCH_STATS.ERRCODE2 IN PROCEDURE DU_FETCH_TEXT
     17806**DCL
FETCH_STATS.ERRCODE2.ERR# IN PROCEDURE DU_FETCH_TEXT
     17807**DCL
FETCH_STATS.ERRCODE2.FCG IN PROCEDURE DU_FETCH_TEXT
     17807**DCL
FETCH_STATS.ERRCODE2.MID IN PROCEDURE DU_FETCH_TEXT
     17807**DCL
FETCH_STATS.ERRCODE2.MON IN PROCEDURE DU_FETCH_TEXT
     17807**DCL
FETCH_STATS.ERRCODE2.SEV IN PROCEDURE DU_FETCH_TEXT
     17808**DCL
FETCH_STATS.INERR IN PROCEDURE DU_FETCH_TEXT
     17803**DCL
FETCH_STATS.MSGCOMP IN PROCEDURE DU_FETCH_TEXT
     17801**DCL
FETCH_STATS.NNATIVE IN PROCEDURE DU_FETCH_TEXT
     17802**DCL
FETCH_STATS.OUTERR1 IN PROCEDURE DU_FETCH_TEXT
     17801**DCL
FETCH_STATS.OUTERR2 IN PROCEDURE DU_FETCH_TEXT
     17802**DCL
FETCH_STATS.TRUNCSUB IN PROCEDURE DU_FETCH_TEXT
     17803**DCL
FID_INFO.ACCT_
     13418**DCL
FID_INFO.ASN_
     13420**DCL
FID_INFO.NAME_
     13418**DCL
FID_INFO.PASS_
     13418**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:488  
FID_INFO.RESULTS_
     13420**DCL
FID_INFO.RES_
     13420**DCL
FID_INFO.SN_
     13419**DCL
FID_INFO.V.CHECK
     13424**DCL
FID_INFO.V.CHECK.AWODF#
     13426**DCL
FID_INFO.V.CHECK.CCHARS#
     13424**DCL
FID_INFO.V.CHECK.CPARTS#
     13425**DCL
FID_INFO.V.CHECK.PAOSF#
     13425**DCL
FID_INFO.V.CHECK.PPOSF#
     13425**DCL
FID_INFO.V.SCRUB
     13421**DCL
FID_INFO.V.SCRUB.SACCT#
     13421**DCL
FID_INFO.V.SCRUB.SNAME#
     13421**DCL
FID_INFO.V.SCRUB.SPASS#
     13422**DCL
FID_INFO.V.SCRUB.SRES#
     13423**DCL
FID_INFO.V.SCRUB.SSN#
     13422**DCL
FID_INFO.V.SCRUB.SSPARE1#
     13424**DCL
FID_INFO.V.SCRUB.SSPARE2#
     13423**DCL
FID_INFO.V.SCRUB.SSPARE3#
     13423**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:489  
FID_INFO.V.SCRUB.SWSN#
     13422**DCL
FID_INFO.V_
     13417**DCL
FID_INFO.WSN_
     13419**DCL
FID_NAME.L#
     13468**DCL
FID_NAME.NAME#
     13468**DCL
FID_PASS.PASS#
     13481**DCL
FID_RESULTS.ASN
     13390**DCL
FID_RESULTS.CLENGTH
     13394**DCL
FID_RESULTS.CLENGTH.ACCT
     13395**DCL
FID_RESULTS.CLENGTH.NAME
     13394**DCL
FID_RESULTS.CLENGTH.PASS
     13395**DCL
FID_RESULTS.CLENGTH.RES
     13395**DCL
FID_RESULTS.CLENGTH.SN
     13395**DCL
FID_RESULTS.CLENGTH.SPARE1
     13396**DCL
FID_RESULTS.CLENGTH.SPARE2
     13396**DCL
FID_RESULTS.CLENGTH.SPARE3
     13395**DCL
FID_RESULTS.CLENGTH.WSN
     13395**DCL
FID_RESULTS.NAME
     13390**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:490  
FID_RESULTS.PASS
     13390**DCL
FID_RESULTS.RES
     13390**DCL
FID_RESULTS.SINDEX
     13393**DCL
FID_RESULTS.SINDEX.ACCT
     13393**DCL
FID_RESULTS.SINDEX.NAME
     13393**DCL
FID_RESULTS.SINDEX.PASS
     13393**DCL
FID_RESULTS.SINDEX.RES
     13394**DCL
FID_RESULTS.SINDEX.SN
     13393**DCL
FID_RESULTS.SINDEX.SPARE1
     13394**DCL
FID_RESULTS.SINDEX.SPARE2
     13394**DCL
FID_RESULTS.SINDEX.SPARE3
     13394**DCL
FID_RESULTS.SINDEX.WSN
     13393**DCL
FID_RESULTS.SN
     13390**DCL
FID_RESULTS.SPARE1
     13391**DCL
FID_RESULTS.SPARE2
     13391**DCL
FID_RESULTS.SPARE3
     13390**DCL
FID_RESULTS.TYPE
     13391**DCL
FID_RESULTS.TYPE.ACCT
     13391**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:491  
FID_RESULTS.TYPE.NAME
     13391**DCL
FID_RESULTS.TYPE.PASS
     13391**DCL
FID_RESULTS.TYPE.RES
     13392**DCL
FID_RESULTS.TYPE.SN
     13391**DCL
FID_RESULTS.TYPE.SPARE1
     13392**DCL
FID_RESULTS.TYPE.SPARE2
     13392**DCL
FID_RESULTS.TYPE.SPARE3
     13392**DCL
FID_RESULTS.TYPE.WSN
     13392**DCL
FID_RESULTS.WSN
     13390**DCL
FID_SN.NUM#
     13496**DCL
FID_SN.SN#
     13496**DCL
FID_WSN.WSN#
     13509**DCL
FILE_NAME.L# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15388**DCL
FILE_NAME.NAME# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15388**DCL
FREE_BUFFER.V.AUTOSEG# IN PROCEDURE DU_FREE_DATA_SEGMENT
     18161**DCL
FREE_BUFFER.V.COMMON# IN PROCEDURE DU_FREE_DATA_SEGMENT
     18161**DCL
FREE_BUFFER.V_ IN PROCEDURE DU_FREE_DATA_SEGMENT
     18160**DCL
FROM_USER.BUF_.BUF$ IN PROCEDURE DU_USER_READ
     16837**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:492  
FROM_USER.IDBUF_ IN PROCEDURE DU_USER_READ
     16838**DCL
FROM_USER.KEY_ IN PROCEDURE DU_USER_READ
     16834**DCL
FROM_USER.KEY_.BOUND IN PROCEDURE DU_USER_READ
     16834**DCL
FROM_USER.KEY_.KEY$ IN PROCEDURE DU_USER_READ
     16835**DCL
FROM_USER.V.DCB# IN PROCEDURE DU_USER_READ
     16838**DCL
FROM_USER.V.DVBYTE IN PROCEDURE DU_USER_READ
     16848**DCL
FROM_USER.V.DVBYTE.BIN# IN PROCEDURE DU_USER_READ
     16849**DCL
FROM_USER.V.DVBYTE.BP# IN PROCEDURE DU_USER_READ
     16848**DCL
FROM_USER.V.DVBYTE.CONT# IN PROCEDURE DU_USER_READ
     16851**DCL
FROM_USER.V.DVBYTE.NODAT# IN PROCEDURE DU_USER_READ
     16850**DCL
FROM_USER.V.DVBYTE.TOP# IN PROCEDURE DU_USER_READ
     16848**DCL
FROM_USER.V.DVBYTE.TRANS# IN PROCEDURE DU_USER_READ
     16850**DCL
FROM_USER.V.DVBYTE.VFC# IN PROCEDURE DU_USER_READ
     16849**DCL
FROM_USER.V.EVENT# IN PROCEDURE DU_USER_READ
     16847**DCL
FROM_USER.V.FULL# IN PROCEDURE DU_USER_READ
     16840**DCL
FROM_USER.V.ID# IN PROCEDURE DU_USER_READ
     16839**DCL
FROM_USER.V.IDS# IN PROCEDURE DU_USER_READ
     16840**DCL
FROM_USER.V.IOERROK# IN PROCEDURE DU_USER_READ
     16841**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:493  
FROM_USER.V.KEYCHNG# IN PROCEDURE DU_USER_READ
     16840**DCL
FROM_USER.V.KEYR# IN PROCEDURE DU_USER_READ
     16839**DCL
FROM_USER.V.KEYS# IN PROCEDURE DU_USER_READ
     16839**DCL
FROM_USER.V.KEYTYPE# IN PROCEDURE DU_USER_READ
     16847**DCL
FROM_USER.V.ODFNC# IN PROCEDURE DU_USER_READ
     16852**DCL
FROM_USER.V.RECNUM# IN PROCEDURE DU_USER_READ
     16852**DCL
FROM_USER.V.REREADPOS# IN PROCEDURE DU_USER_READ
     16853**DCL
FROM_USER.V.SEED# IN PROCEDURE DU_USER_READ
     16848**DCL
FROM_USER.V.SINPUTSIZE# IN PROCEDURE DU_USER_READ
     16852**DCL
FROM_USER.V.STRPVFC# IN PROCEDURE DU_USER_READ
     16851**DCL
FROM_USER.V.WAIT# IN PROCEDURE DU_USER_READ
     16838**DCL
FROM_USER.V_ IN PROCEDURE DU_USER_READ
     16834**DCL
GET_BUFFER.V.AUTOSEG# IN PROCEDURE DU_GET_DATA_SEGMENT
     18113**DCL
GET_BUFFER.V.COMMON# IN PROCEDURE DU_GET_DATA_SEGMENT
     18113**DCL
GET_BUFFER.V.FREE# IN PROCEDURE DU_GET_DATA_SEGMENT
     18113**DCL
GET_BUFFER.V.PROTECTION# IN PROCEDURE DU_GET_DATA_SEGMENT
     18114**DCL
GET_BUFFER.V.VIRTONLY# IN PROCEDURE DU_GET_DATA_SEGMENT
     18114**DCL
GET_BUFFER.V_ IN PROCEDURE DU_GET_DATA_SEGMENT
     18112**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:494  
GET_SITE.HEADER_ IN PROCEDURE DU_GET_SITE
     18315**DCL
GET_SITE.MONINFO_ IN PROCEDURE DU_GET_SITE
     18313**DCL
GET_SITE.MONPTRS_ IN PROCEDURE DU_GET_SITE
     18314**DCL
GET_SITE.SITEINFO_ IN PROCEDURE DU_GET_SITE
     18313**DCL
GET_SITE.STYPE_ IN PROCEDURE DU_GET_SITE
     18315**DCL
GET_SITE.SYMBINFO_ IN PROCEDURE DU_GET_SITE
     18314**DCL
HEAD_KEY.DATA IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15119**DCL
HEAD_KEY.SIZE IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15118**DCL
IFAD_ACCT.ACCT# IN PROCEDURE DU_OPEN_IFAD
     14607**DCL
IFAD_ACCT.ACCT# IN PROCEDURE DU_OPEN_MCA
     15575**DCL
IFAD_DISK_FILE.ACCESS_ IN PROCEDURE DU_OPEN_IFAD
     14430**DCL
IFAD_DISK_FILE.ACCT_ IN PROCEDURE DU_OPEN_IFAD
     14432**DCL
IFAD_DISK_FILE.FORM_ IN PROCEDURE DU_OPEN_IFAD
     14436**DCL
IFAD_DISK_FILE.FPARAM_ IN PROCEDURE DU_OPEN_IFAD
     14433**DCL
IFAD_DISK_FILE.FPRG_ IN PROCEDURE DU_OPEN_IFAD
     14437**DCL
IFAD_DISK_FILE.IFPARAM_ IN PROCEDURE DU_OPEN_IFAD
     14433**DCL
IFAD_DISK_FILE.INSTATTR_ IN PROCEDURE DU_OPEN_IFAD
     14432**DCL
IFAD_DISK_FILE.IRKEYS_ IN PROCEDURE DU_OPEN_IFAD
     14437**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:495  
IFAD_DISK_FILE.IRREC_ IN PROCEDURE DU_OPEN_IFAD
     14436**DCL
IFAD_DISK_FILE.NAME_ IN PROCEDURE DU_OPEN_IFAD
     14429**DCL
IFAD_DISK_FILE.NODENAME_ IN PROCEDURE DU_OPEN_IFAD
     14434**DCL
IFAD_DISK_FILE.PASS_ IN PROCEDURE DU_OPEN_IFAD
     14430**DCL
IFAD_DISK_FILE.PROCATTR_ IN PROCEDURE DU_OPEN_IFAD
     14432**DCL
IFAD_DISK_FILE.RECFIELD_ IN PROCEDURE DU_OPEN_IFAD
     14435**DCL
IFAD_DISK_FILE.SETSTA_ IN PROCEDURE DU_OPEN_IFAD
     14429**DCL
IFAD_DISK_FILE.SN_ IN PROCEDURE DU_OPEN_IFAD
     14428**DCL
IFAD_DISK_FILE.UATTR_ IN PROCEDURE DU_OPEN_IFAD
     14431**DCL
IFAD_DISK_FILE.V.ACS# IN PROCEDURE DU_OPEN_IFAD
     14448**DCL
IFAD_DISK_FILE.V.ANSISPANSEQ# IN PROCEDURE DU_OPEN_IFAD
     14461**DCL
IFAD_DISK_FILE.V.ATTR# IN PROCEDURE DU_OPEN_IFAD
     14464**DCL
IFAD_DISK_FILE.V.AU# IN PROCEDURE DU_OPEN_IFAD
     14466**DCL
IFAD_DISK_FILE.V.BLKL# IN PROCEDURE DU_OPEN_IFAD
     14454**DCL
IFAD_DISK_FILE.V.BLOCKED# IN PROCEDURE DU_OPEN_IFAD
     14449**DCL
IFAD_DISK_FILE.V.BUPM# IN PROCEDURE DU_OPEN_IFAD
     14450**DCL
IFAD_DISK_FILE.V.CHAIN# IN PROCEDURE DU_OPEN_IFAD
     14463**DCL
IFAD_DISK_FILE.V.CNVRT# IN PROCEDURE DU_OPEN_IFAD
     14457**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:496  
IFAD_DISK_FILE.V.COMP# IN PROCEDURE DU_OPEN_IFAD
     14449**DCL
IFAD_DISK_FILE.V.COPIES# IN PROCEDURE DU_OPEN_IFAD
     14469**DCL
IFAD_DISK_FILE.V.CTG# IN PROCEDURE DU_OPEN_IFAD
     14441**DCL
IFAD_DISK_FILE.V.CVOL# IN PROCEDURE DU_OPEN_IFAD
     14442**DCL
IFAD_DISK_FILE.V.DBGDCBNO# IN PROCEDURE DU_OPEN_IFAD
     14468**DCL
IFAD_DISK_FILE.V.DBGSYSID# IN PROCEDURE DU_OPEN_IFAD
     14468**DCL
IFAD_DISK_FILE.V.DCB# IN PROCEDURE DU_OPEN_IFAD
     14437**DCL
IFAD_DISK_FILE.V.DCBCONLGL# IN PROCEDURE DU_OPEN_IFAD
     14459**DCL
IFAD_DISK_FILE.V.DELETE# IN PROCEDURE DU_OPEN_IFAD
     14439**DCL
IFAD_DISK_FILE.V.DENSITY# IN PROCEDURE DU_OPEN_IFAD
     14469**DCL
IFAD_DISK_FILE.V.DISP# IN PROCEDURE DU_OPEN_IFAD
     14453**DCL
IFAD_DISK_FILE.V.DVFC# IN PROCEDURE DU_OPEN_IFAD
     14464**DCL
IFAD_DISK_FILE.V.EBCDIC# IN PROCEDURE DU_OPEN_IFAD
     14457**DCL
IFAD_DISK_FILE.V.EVENT# IN PROCEDURE DU_OPEN_IFAD
     14467**DCL
IFAD_DISK_FILE.V.EXIST# IN PROCEDURE DU_OPEN_IFAD
     14441**DCL
IFAD_DISK_FILE.V.EXPIRE# IN PROCEDURE DU_OPEN_IFAD
     14457**DCL
IFAD_DISK_FILE.V.FINDPOS# IN PROCEDURE DU_OPEN_IFAD
     14443**DCL
IFAD_DISK_FILE.V.FUN# IN PROCEDURE DU_OPEN_IFAD
     14447**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:497  
IFAD_DISK_FILE.V.GHSTACS# IN PROCEDURE DU_OPEN_IFAD
     14452**DCL
IFAD_DISK_FILE.V.IGNOREFSN# IN PROCEDURE DU_OPEN_IFAD
     14461**DCL
IFAD_DISK_FILE.V.INITZ IN PROCEDURE DU_OPEN_IFAD
     14438**DCL
IFAD_DISK_FILE.V.INITZ.REASSIGN# IN PROCEDURE DU_OPEN_IFAD
     14438**DCL
IFAD_DISK_FILE.V.INITZ.SCRUB# IN PROCEDURE DU_OPEN_IFAD
     14438**DCL
IFAD_DISK_FILE.V.IOERROK# IN PROCEDURE DU_OPEN_IFAD
     14459**DCL
IFAD_DISK_FILE.V.IXTNSIZE# IN PROCEDURE DU_OPEN_IFAD
     14456**DCL
IFAD_DISK_FILE.V.JRNLBYPASS# IN PROCEDURE DU_OPEN_IFAD
     14451**DCL
IFAD_DISK_FILE.V.KEYL# IN PROCEDURE DU_OPEN_IFAD
     14453**DCL
IFAD_DISK_FILE.V.KEYTYPE# IN PROCEDURE DU_OPEN_IFAD
     14463**DCL
IFAD_DISK_FILE.V.KEYX# IN PROCEDURE DU_OPEN_IFAD
     14452**DCL
IFAD_DISK_FILE.V.LINES# IN PROCEDURE DU_OPEN_IFAD
     14467**DCL
IFAD_DISK_FILE.V.LOAD# IN PROCEDURE DU_OPEN_IFAD
     14451**DCL
IFAD_DISK_FILE.V.LRDL0# IN PROCEDURE DU_OPEN_IFAD
     14455**DCL
IFAD_DISK_FILE.V.LSLIDE# IN PROCEDURE DU_OPEN_IFAD
     14454**DCL
IFAD_DISK_FILE.V.LSTAOR# IN PROCEDURE DU_OPEN_IFAD
     14451**DCL
IFAD_DISK_FILE.V.MAXVOL# IN PROCEDURE DU_OPEN_IFAD
     14463**DCL
IFAD_DISK_FILE.V.NRECS# IN PROCEDURE DU_OPEN_IFAD
     14456**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:498  
IFAD_DISK_FILE.V.OPER IN PROCEDURE DU_OPEN_IFAD
     14439**DCL
IFAD_DISK_FILE.V.OPER.MNTONLY# IN PROCEDURE DU_OPEN_IFAD
     14441**DCL
IFAD_DISK_FILE.V.OPER.NXTA# IN PROCEDURE DU_OPEN_IFAD
     14440**DCL
IFAD_DISK_FILE.V.OPER.NXTF# IN PROCEDURE DU_OPEN_IFAD
     14440**DCL
IFAD_DISK_FILE.V.OPER.TEST# IN PROCEDURE DU_OPEN_IFAD
     14439**DCL
IFAD_DISK_FILE.V.OPER.THISF# IN PROCEDURE DU_OPEN_IFAD
     14440**DCL
IFAD_DISK_FILE.V.ORG# IN PROCEDURE DU_OPEN_IFAD
     14448**DCL
IFAD_DISK_FILE.V.OVERFDE# IN PROCEDURE DU_OPEN_IFAD
     14460**DCL
IFAD_DISK_FILE.V.QISS# IN PROCEDURE DU_OPEN_IFAD
     14466**DCL
IFAD_DISK_FILE.V.RECL# IN PROCEDURE DU_OPEN_IFAD
     14454**DCL
IFAD_DISK_FILE.V.SEED# IN PROCEDURE DU_OPEN_IFAD
     14470**DCL
IFAD_DISK_FILE.V.SEEDSPECIFIED# IN PROCEDURE DU_OPEN_IFAD
     14461**DCL
IFAD_DISK_FILE.V.SEQ# IN PROCEDURE DU_OPEN_IFAD
     14465**DCL
IFAD_DISK_FILE.V.SEQCOL# IN PROCEDURE DU_OPEN_IFAD
     14465**DCL
IFAD_DISK_FILE.V.SEQID# IN PROCEDURE DU_OPEN_IFAD
     14467**DCL
IFAD_DISK_FILE.V.SETDCB# IN PROCEDURE DU_OPEN_IFAD
     14438**DCL
IFAD_DISK_FILE.V.SHARE# IN PROCEDURE DU_OPEN_IFAD
     14442**DCL
IFAD_DISK_FILE.V.SPANNED# IN PROCEDURE DU_OPEN_IFAD
     14450**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:499  
IFAD_DISK_FILE.V.SPARE# IN PROCEDURE DU_OPEN_IFAD
     14455**DCL
IFAD_DISK_FILE.V.SRCHCOND IN PROCEDURE DU_OPEN_IFAD
     14443**DCL
IFAD_DISK_FILE.V.SRCHCOND.ANYF# IN PROCEDURE DU_OPEN_IFAD
     14446**DCL
IFAD_DISK_FILE.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_OPEN_IFAD
     14445**DCL
IFAD_DISK_FILE.V.SRCHCOND.BAD# IN PROCEDURE DU_OPEN_IFAD
     14444**DCL
IFAD_DISK_FILE.V.SRCHCOND.BUF# IN PROCEDURE DU_OPEN_IFAD
     14444**DCL
IFAD_DISK_FILE.V.SRCHCOND.DELF# IN PROCEDURE DU_OPEN_IFAD
     14443**DCL
IFAD_DISK_FILE.V.SRCHCOND.NOLIST# IN PROCEDURE DU_OPEN_IFAD
     14443**DCL
IFAD_DISK_FILE.V.SRCHCOND.QS# IN PROCEDURE DU_OPEN_IFAD
     14445**DCL
IFAD_DISK_FILE.V.SRCHCOND.REV# IN PROCEDURE DU_OPEN_IFAD
     14446**DCL
IFAD_DISK_FILE.V.TERMCONLGL# IN PROCEDURE DU_OPEN_IFAD
     14460**DCL
IFAD_DISK_FILE.V.TYPE# IN PROCEDURE DU_OPEN_IFAD
     14449**DCL
IFAD_DISK_FILE.V.UOPT# IN PROCEDURE DU_OPEN_IFAD
     14447**DCL
IFAD_DISK_FILE.V.VOL# IN PROCEDURE DU_OPEN_IFAD
     14462**DCL
IFAD_DISK_FILE.V.VOLACCESS# IN PROCEDURE DU_OPEN_IFAD
     14466**DCL
IFAD_DISK_FILE.V.XONLY# IN PROCEDURE DU_OPEN_IFAD
     14458**DCL
IFAD_DISK_FILE.V.XTEND# IN PROCEDURE DU_OPEN_IFAD
     14458**DCL
IFAD_DISK_FILE.V.XTNSIZE# IN PROCEDURE DU_OPEN_IFAD
     14456**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:500  
IFAD_DISK_FILE.VIRTUAL_ IN PROCEDURE DU_OPEN_IFAD
     14429**DCL
IFAD_DISK_FILE.V_ IN PROCEDURE DU_OPEN_IFAD
     14428**DCL
IFAD_DISK_FILE.WINDOW_ IN PROCEDURE DU_OPEN_IFAD
     14431**DCL
IFAD_NAME.L# IN PROCEDURE DU_OPEN_IFAD
     14593**DCL
IFAD_NAME.NAME# IN PROCEDURE DU_OPEN_IFAD
     14593**DCL
IFAD_NAME.L# IN PROCEDURE DU_OPEN_MCA
     15561**DCL
IFAD_NAME.NAME# IN PROCEDURE DU_OPEN_MCA
     15561**DCL
IFAD_PASS.PASS# IN PROCEDURE DU_OPEN_IFAD
     14621**DCL
IFAD_PASS.PASS# IN PROCEDURE DU_OPEN_MCA
     15589**DCL
IFAD_SN.SN# IN PROCEDURE DU_OPEN_IFAD
     14564**DCL
IFAD_SN.NUM# IN PROCEDURE DU_OPEN_MCA
     15532**DCL
IFAD_SN.SN# IN PROCEDURE DU_OPEN_MCA
     15532**DCL
IFAD_TAPE_DEVICE.ACCESS_ IN PROCEDURE DU_OPEN_IFAD
     14315**DCL
IFAD_TAPE_DEVICE.ACCT_ IN PROCEDURE DU_OPEN_IFAD
     14317**DCL
IFAD_TAPE_DEVICE.FORM_ IN PROCEDURE DU_OPEN_IFAD
     14321**DCL
IFAD_TAPE_DEVICE.FPARAM_ IN PROCEDURE DU_OPEN_IFAD
     14318**DCL
IFAD_TAPE_DEVICE.FPRG_ IN PROCEDURE DU_OPEN_IFAD
     14322**DCL
IFAD_TAPE_DEVICE.IFPARAM_ IN PROCEDURE DU_OPEN_IFAD
     14318**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:501  
IFAD_TAPE_DEVICE.INSTATTR_ IN PROCEDURE DU_OPEN_IFAD
     14317**DCL
IFAD_TAPE_DEVICE.IRKEYS_ IN PROCEDURE DU_OPEN_IFAD
     14322**DCL
IFAD_TAPE_DEVICE.IRREC_ IN PROCEDURE DU_OPEN_IFAD
     14321**DCL
IFAD_TAPE_DEVICE.NAME_ IN PROCEDURE DU_OPEN_IFAD
     14314**DCL
IFAD_TAPE_DEVICE.NODENAME_ IN PROCEDURE DU_OPEN_IFAD
     14319**DCL
IFAD_TAPE_DEVICE.PASS_ IN PROCEDURE DU_OPEN_IFAD
     14315**DCL
IFAD_TAPE_DEVICE.PROCATTR_ IN PROCEDURE DU_OPEN_IFAD
     14317**DCL
IFAD_TAPE_DEVICE.RECFIELD_ IN PROCEDURE DU_OPEN_IFAD
     14320**DCL
IFAD_TAPE_DEVICE.SETSTA_ IN PROCEDURE DU_OPEN_IFAD
     14314**DCL
IFAD_TAPE_DEVICE.SN_ IN PROCEDURE DU_OPEN_IFAD
     14313**DCL
IFAD_TAPE_DEVICE.UATTR_ IN PROCEDURE DU_OPEN_IFAD
     14316**DCL
IFAD_TAPE_DEVICE.V.ACS# IN PROCEDURE DU_OPEN_IFAD
     14333**DCL
IFAD_TAPE_DEVICE.V.ANSISPANSEQ# IN PROCEDURE DU_OPEN_IFAD
     14346**DCL
IFAD_TAPE_DEVICE.V.ATTR# IN PROCEDURE DU_OPEN_IFAD
     14349**DCL
IFAD_TAPE_DEVICE.V.AU# IN PROCEDURE DU_OPEN_IFAD
     14351**DCL
IFAD_TAPE_DEVICE.V.BLKL# IN PROCEDURE DU_OPEN_IFAD
     14339**DCL
IFAD_TAPE_DEVICE.V.BLOCKED# IN PROCEDURE DU_OPEN_IFAD
     14334**DCL
IFAD_TAPE_DEVICE.V.BUPM# IN PROCEDURE DU_OPEN_IFAD
     14335**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:502  
IFAD_TAPE_DEVICE.V.CHAIN# IN PROCEDURE DU_OPEN_IFAD
     14348**DCL
IFAD_TAPE_DEVICE.V.CNVRT# IN PROCEDURE DU_OPEN_IFAD
     14342**DCL
IFAD_TAPE_DEVICE.V.COMP# IN PROCEDURE DU_OPEN_IFAD
     14334**DCL
IFAD_TAPE_DEVICE.V.COPIES# IN PROCEDURE DU_OPEN_IFAD
     14354**DCL
IFAD_TAPE_DEVICE.V.CTG# IN PROCEDURE DU_OPEN_IFAD
     14326**DCL
IFAD_TAPE_DEVICE.V.CVOL# IN PROCEDURE DU_OPEN_IFAD
     14327**DCL
IFAD_TAPE_DEVICE.V.DBGDCBNO# IN PROCEDURE DU_OPEN_IFAD
     14353**DCL
IFAD_TAPE_DEVICE.V.DBGSYSID# IN PROCEDURE DU_OPEN_IFAD
     14353**DCL
IFAD_TAPE_DEVICE.V.DCB# IN PROCEDURE DU_OPEN_IFAD
     14322**DCL
IFAD_TAPE_DEVICE.V.DCBCONLGL# IN PROCEDURE DU_OPEN_IFAD
     14344**DCL
IFAD_TAPE_DEVICE.V.DELETE# IN PROCEDURE DU_OPEN_IFAD
     14324**DCL
IFAD_TAPE_DEVICE.V.DENSITY# IN PROCEDURE DU_OPEN_IFAD
     14354**DCL
IFAD_TAPE_DEVICE.V.DISP# IN PROCEDURE DU_OPEN_IFAD
     14338**DCL
IFAD_TAPE_DEVICE.V.DVFC# IN PROCEDURE DU_OPEN_IFAD
     14349**DCL
IFAD_TAPE_DEVICE.V.EBCDIC# IN PROCEDURE DU_OPEN_IFAD
     14342**DCL
IFAD_TAPE_DEVICE.V.EVENT# IN PROCEDURE DU_OPEN_IFAD
     14352**DCL
IFAD_TAPE_DEVICE.V.EXIST# IN PROCEDURE DU_OPEN_IFAD
     14326**DCL
IFAD_TAPE_DEVICE.V.EXPIRE# IN PROCEDURE DU_OPEN_IFAD
     14342**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:503  
IFAD_TAPE_DEVICE.V.FINDPOS# IN PROCEDURE DU_OPEN_IFAD
     14328**DCL
IFAD_TAPE_DEVICE.V.FUN# IN PROCEDURE DU_OPEN_IFAD
     14332**DCL
IFAD_TAPE_DEVICE.V.GHSTACS# IN PROCEDURE DU_OPEN_IFAD
     14337**DCL
IFAD_TAPE_DEVICE.V.IGNOREFSN# IN PROCEDURE DU_OPEN_IFAD
     14346**DCL
IFAD_TAPE_DEVICE.V.INITZ IN PROCEDURE DU_OPEN_IFAD
     14323**DCL
IFAD_TAPE_DEVICE.V.INITZ.REASSIGN# IN PROCEDURE DU_OPEN_IFAD
     14323**DCL
IFAD_TAPE_DEVICE.V.INITZ.SCRUB# IN PROCEDURE DU_OPEN_IFAD
     14323**DCL
IFAD_TAPE_DEVICE.V.IOERROK# IN PROCEDURE DU_OPEN_IFAD
     14344**DCL
IFAD_TAPE_DEVICE.V.IXTNSIZE# IN PROCEDURE DU_OPEN_IFAD
     14341**DCL
IFAD_TAPE_DEVICE.V.JRNLBYPASS# IN PROCEDURE DU_OPEN_IFAD
     14336**DCL
IFAD_TAPE_DEVICE.V.KEYL# IN PROCEDURE DU_OPEN_IFAD
     14338**DCL
IFAD_TAPE_DEVICE.V.KEYTYPE# IN PROCEDURE DU_OPEN_IFAD
     14348**DCL
IFAD_TAPE_DEVICE.V.KEYX# IN PROCEDURE DU_OPEN_IFAD
     14337**DCL
IFAD_TAPE_DEVICE.V.LINES# IN PROCEDURE DU_OPEN_IFAD
     14352**DCL
IFAD_TAPE_DEVICE.V.LOAD# IN PROCEDURE DU_OPEN_IFAD
     14336**DCL
IFAD_TAPE_DEVICE.V.LRDL0# IN PROCEDURE DU_OPEN_IFAD
     14340**DCL
IFAD_TAPE_DEVICE.V.LSLIDE# IN PROCEDURE DU_OPEN_IFAD
     14339**DCL
IFAD_TAPE_DEVICE.V.LSTAOR# IN PROCEDURE DU_OPEN_IFAD
     14336**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:504  
IFAD_TAPE_DEVICE.V.MAXVOL# IN PROCEDURE DU_OPEN_IFAD
     14348**DCL
IFAD_TAPE_DEVICE.V.NRECS# IN PROCEDURE DU_OPEN_IFAD
     14341**DCL
IFAD_TAPE_DEVICE.V.OPER IN PROCEDURE DU_OPEN_IFAD
     14324**DCL
IFAD_TAPE_DEVICE.V.OPER.MNTONLY# IN PROCEDURE DU_OPEN_IFAD
     14326**DCL
IFAD_TAPE_DEVICE.V.OPER.NXTA# IN PROCEDURE DU_OPEN_IFAD
     14325**DCL
IFAD_TAPE_DEVICE.V.OPER.NXTF# IN PROCEDURE DU_OPEN_IFAD
     14325**DCL
IFAD_TAPE_DEVICE.V.OPER.TEST# IN PROCEDURE DU_OPEN_IFAD
     14324**DCL
IFAD_TAPE_DEVICE.V.OPER.THISF# IN PROCEDURE DU_OPEN_IFAD
     14325**DCL
IFAD_TAPE_DEVICE.V.ORG# IN PROCEDURE DU_OPEN_IFAD
     14333**DCL
IFAD_TAPE_DEVICE.V.OVERFDE# IN PROCEDURE DU_OPEN_IFAD
     14345**DCL
IFAD_TAPE_DEVICE.V.QISS# IN PROCEDURE DU_OPEN_IFAD
     14351**DCL
IFAD_TAPE_DEVICE.V.RECL# IN PROCEDURE DU_OPEN_IFAD
     14339**DCL
IFAD_TAPE_DEVICE.V.SEED# IN PROCEDURE DU_OPEN_IFAD
     14355**DCL
IFAD_TAPE_DEVICE.V.SEEDSPECIFIED# IN PROCEDURE DU_OPEN_IFAD
     14346**DCL
IFAD_TAPE_DEVICE.V.SEQ# IN PROCEDURE DU_OPEN_IFAD
     14350**DCL
IFAD_TAPE_DEVICE.V.SEQCOL# IN PROCEDURE DU_OPEN_IFAD
     14350**DCL
IFAD_TAPE_DEVICE.V.SEQID# IN PROCEDURE DU_OPEN_IFAD
     14352**DCL
IFAD_TAPE_DEVICE.V.SETDCB# IN PROCEDURE DU_OPEN_IFAD
     14323**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:505  
IFAD_TAPE_DEVICE.V.SHARE# IN PROCEDURE DU_OPEN_IFAD
     14327**DCL
IFAD_TAPE_DEVICE.V.SPANNED# IN PROCEDURE DU_OPEN_IFAD
     14335**DCL
IFAD_TAPE_DEVICE.V.SPARE# IN PROCEDURE DU_OPEN_IFAD
     14340**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND IN PROCEDURE DU_OPEN_IFAD
     14328**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.ANYF# IN PROCEDURE DU_OPEN_IFAD
     14331**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_OPEN_IFAD
     14330**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.BAD# IN PROCEDURE DU_OPEN_IFAD
     14329**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.BUF# IN PROCEDURE DU_OPEN_IFAD
     14329**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.DELF# IN PROCEDURE DU_OPEN_IFAD
     14328**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.NOLIST# IN PROCEDURE DU_OPEN_IFAD
     14328**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.QS# IN PROCEDURE DU_OPEN_IFAD
     14330**DCL
IFAD_TAPE_DEVICE.V.SRCHCOND.REV# IN PROCEDURE DU_OPEN_IFAD
     14331**DCL
IFAD_TAPE_DEVICE.V.TERMCONLGL# IN PROCEDURE DU_OPEN_IFAD
     14345**DCL
IFAD_TAPE_DEVICE.V.TYPE# IN PROCEDURE DU_OPEN_IFAD
     14334**DCL
IFAD_TAPE_DEVICE.V.UOPT# IN PROCEDURE DU_OPEN_IFAD
     14332**DCL
IFAD_TAPE_DEVICE.V.VOL# IN PROCEDURE DU_OPEN_IFAD
     14347**DCL
IFAD_TAPE_DEVICE.V.VOLACCESS# IN PROCEDURE DU_OPEN_IFAD
     14351**DCL
IFAD_TAPE_DEVICE.V.XONLY# IN PROCEDURE DU_OPEN_IFAD
     14343**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:506  
IFAD_TAPE_DEVICE.V.XTEND# IN PROCEDURE DU_OPEN_IFAD
     14343**DCL
IFAD_TAPE_DEVICE.V.XTNSIZE# IN PROCEDURE DU_OPEN_IFAD
     14341**DCL
IFAD_TAPE_DEVICE.VIRTUAL_ IN PROCEDURE DU_OPEN_IFAD
     14314**DCL
IFAD_TAPE_DEVICE.V_ IN PROCEDURE DU_OPEN_IFAD
     14313**DCL
IFAD_TAPE_DEVICE.WINDOW_ IN PROCEDURE DU_OPEN_IFAD
     14316**DCL
IFAD_WSN.WSN# IN PROCEDURE DU_OPEN_IFAD
     14635**DCL
IFAD_WSN.WSN# IN PROCEDURE DU_OPEN_MCA
     15603**DCL
INIT_MCA.DATA_ IN PROCEDURE DU_MCA_RESET_STATUS
     15761**DCL
INIT_MCA.V.ALTPATH IN PROCEDURE DU_MCA_RESET_STATUS
     15763**DCL
INIT_MCA.V.ALTPATH.CHAN# IN PROCEDURE DU_MCA_RESET_STATUS
     15763**DCL
INIT_MCA.V.ALTPATH.IOM# IN PROCEDURE DU_MCA_RESET_STATUS
     15763**DCL
INIT_MCA.V.DCB# IN PROCEDURE DU_MCA_RESET_STATUS
     15762**DCL
INIT_MCA.V.EVENT# IN PROCEDURE DU_MCA_RESET_STATUS
     15764**DCL
INIT_MCA.V.PCW# IN PROCEDURE DU_MCA_RESET_STATUS
     15764**DCL
INIT_MCA.V.TIMEOUT# IN PROCEDURE DU_MCA_RESET_STATUS
     15765**DCL
INIT_MCA.V.WAIT# IN PROCEDURE DU_MCA_RESET_STATUS
     15762**DCL
INIT_MCA.V_ IN PROCEDURE DU_MCA_RESET_STATUS
     15761**DCL
LOG_B IN PROCEDURE DU_UPDATE_LOG
     18215**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:507  
LOG_B.ACCESSES IN PROCEDURE DU_UPDATE_LOG
     18218**DCL
M$ACCT
      6216**DCL-ENT
M$ACTIVATE
      6219**DCL-ENT
M$ALIB
      6212**DCL-ENT
M$ASUSER
      6214**DCL-ENT
M$ATTACH
      6221**DCL-ENT
M$BADPP
      6239**DCL-ENT
M$CGCTL
      6220**DCL-ENT
M$CGINFO
      6220**DCL-ENT
M$CHECK
      6201**DCL-ENT
M$CHGUNIT
      6259**DCL-ENT
M$CLRSTK
      6257**DCL-ENT
M$CMDVAR
      6268**DCL-ENT
M$CONFIG
      6229**DCL-ENT
M$CORRES
      6204**DCL-ENT
M$CPEXIT
      6213**DCL-ENT
M$CVM
      6237**DCL-ENT
M$DCLFLD
      6229**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:508  
M$DEACTIVATE
      6219**DCL-ENT
M$DELREC
      6201**DCL-ENT
M$DEQ
      6266**DCL-ENT
M$DETACH
      6221**DCL-ENT
M$DEVICE
      6203**DCL-ENT
M$DISPLAY
      6266**DCL-ENT
M$DISPRES
      6206**DCL-ENT
M$DLIB
      6212**DCL-ENT
M$DO
     13376**DCL
M$DRIBBLE
      6229**DCL-ENT
M$DRTN
      6257**DCL-ENT
M$DSUSER
      6214**DCL-ENT
M$ENQ
      6265**DCL-ENT
M$EOM
      6224**DCL-ENT
M$ERASE
      6230**DCL-ENT
M$ERR
      6211**DCL-ENT
M$EVENT
      6254**DCL-ENT
M$EXHUME
      6263**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:509  
M$EXIT
      6211**DCL-ENT
M$EXTEND
      6203**DCL-ENT
M$FDP
      6235**DCL-ENT
M$FEBOOT
      6227**DCL-ENT
M$FECTL
      6228**DCL-ENT
M$FEDUMP
      6227**DCL-ENT
M$FINDPROC
      6216**DCL-ENT
M$FSUSER
      6214**DCL-ENT
M$FVP
      6236**DCL-ENT
M$FWCG
      6220**DCL-ENT
M$GBPL
      6240**DCL-ENT
M$GDDL
      6236**DCL-ENT
M$GDP
      6235**DCL-ENT
M$GETDCB
      6205**DCL-ENT
M$GETMOUSE
      6245**DCL-ENT
M$GETPM
      6246**DCL-ENT
M$GJOB
      6264**DCL-ENT
M$GLINEATTR
      6224**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:510  
M$GOODPP
      6239**DCL-ENT
M$GPLATEN
      6232**DCL-ENT
M$GPROMPT
      6231**DCL-ENT
M$GTRMATTR
      6225**DCL-ENT
M$GTRMCTL
      6223**DCL-ENT
M$GTRMTAB
      6226**DCL-ENT
M$GVP
      6235**DCL-ENT
M$HELP
      6262**DCL-ENT
M$INT
      6254**DCL-ENT
M$INTRTN
      6215**DCL-ENT
M$IOQ
      6250**DCL-ENT
M$JOBSTATS
      6264**DCL-ENT
M$LDEV
      6199**DCL-ENT
M$LDTRC
      6212**DCL-ENT
M$LIMIT
      6205**DCL-ENT
M$LINES
      6204**DCL-ENT
M$LINK
      6211**DCL-ENT
M$LO.ACCT#
     13537**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:511  
M$LO.ACS#
     13548**DCL
M$LO.AFTRBLK
     13571**DCL
M$LO.AGE
     13587**DCL
M$LO.ALTKEYX
     13559**DCL
M$LO.AMFLG
     13566**DCL
M$LO.AMFLG.ACCF
     13566**DCL
M$LO.AMFLG.ACSF
     13567**DCL
M$LO.AMFLG.INSF
     13567**DCL
M$LO.AMFLG.PROF
     13567**DCL
M$LO.AMFLG.SNLF
     13567**DCL
M$LO.AMFLG.USRF
     13567**DCL
M$LO.AMR#
     13542**DCL
M$LO.AMRSETSTA
     13540**DCL
M$LO.ANSISPANSEQ#
     13563**DCL
M$LO.ASN#
     13545**DCL
M$LO.ATTR
     13550**DCL
M$LO.ATTR.APL#
     13551**DCL
M$LO.ATTR.BIN#
     13551**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:512  
M$LO.ATTR.DENS#
     13550**DCL
M$LO.ATTR.GRLGL#
     13550**DCL
M$LO.ATTR.LOWERCASE#
     13552**DCL
M$LO.ATTR.NATL#
     13551**DCL
M$LO.ATTR.NOXLATE#
     13551**DCL
M$LO.ATTR.TRANSLGL#
     13551**DCL
M$LO.ATTR.TRUOVRPRT#
     13551**DCL
M$LO.ATTR.UPPERCASE#
     13551**DCL
M$LO.AU#
     13539**DCL
M$LO.AUTHFFLG
     13561**DCL
M$LO.AUTHFFLG.AU#
     13562**DCL
M$LO.AUTHFFLG.AURD#
     13563**DCL
M$LO.AUTHFFLG.CREATE#
     13562**DCL
M$LO.AUTHFFLG.DELF#
     13562**DCL
M$LO.AUTHFFLG.DELR#
     13562**DCL
M$LO.AUTHFFLG.EXEC#
     13562**DCL
M$LO.AUTHFFLG.NOLIST#
     13562**DCL
M$LO.AUTHFFLG.READ#
     13561**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:513  
M$LO.AUTHFFLG.REATTR#
     13562**DCL
M$LO.AUTHFFLG.TCTL#
     13563**DCL
M$LO.AUTHFFLG.UPD#
     13562**DCL
M$LO.AUTHFFLG.WNEW#
     13562**DCL
M$LO.BADARS#
     13565**DCL
M$LO.BFR
     13588**DCL
M$LO.BFR.BUFUP
     13588**DCL
M$LO.BFR.BUFX
     13588**DCL
M$LO.BFR.CHNG
     13588**DCL
M$LO.BFR.CVM
     13588**DCL
M$LO.BFR.DA
     13589**DCL
M$LO.BFR.SCRUB
     13588**DCL
M$LO.BFR1
     13589**DCL
M$LO.BFR1.CX
     13590**DCL
M$LO.BFR1.FLAGS
     13589**DCL
M$LO.BFR1.FLAGS.ONE_WORD_HEADER
     13589**DCL
M$LO.BFR1.SIZ
     13590**DCL
M$LO.BLKL#
     13545**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:514  
M$LO.BLKLEN
     13578**DCL
M$LO.BLOCKED#
     13544**DCL
M$LO.BOL#
     13547**DCL
M$LO.BUPF
     13527**DCL
M$LO.BUPM#
     13544**DCL
M$LO.BYTESLEFT
     13577**DCL
M$LO.CACHE
     13570**DCL
M$LO.CBUFNUM
     13576**DCL
M$LO.CFU$
     13573**DCL
M$LO.CHAIN#
     13554**DCL
M$LO.CHANTIME#
     13553**DCL
M$LO.CNVRT#
     13541**DCL
M$LO.CODE16$
     13559**DCL
M$LO.COMP#
     13543**DCL
M$LO.CONNCT#
     13553**DCL
M$LO.CONT
     13571**DCL
M$LO.CRECNO
     13577**DCL
M$LO.CRECX
     13576**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:515  
M$LO.CSEED
     13577**DCL
M$LO.CTG#
     13542**DCL
M$LO.CTLCMDIN
     13583**DCL
M$LO.CVOL#
     13543**DCL
M$LO.CWORD
     13585**DCL
M$LO.CX
     13585**DCL
M$LO.DBGDCBNO#
     13546**DCL
M$LO.DBGSYSID#
     13546**DCL
M$LO.DCB#
     13563**DCL
M$LO.DCBNAME
     13591**DCL
M$LO.DCBNAME.N
     13591**DCL
M$LO.DCBNAME.S
     13591**DCL
M$LO.DCBNAME.X
     13591**DCL
M$LO.DCT$
     13556**DCL
M$LO.DDEV
     13531**DCL
M$LO.DDEV.CP#
     13531**DCL
M$LO.DDEV.GR#
     13532**DCL
M$LO.DDEV.IC#
     13531**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:516  
M$LO.DDEV.LP#
     13531**DCL
M$LO.DDEV.UCOUT#
     13531**DCL
M$LO.DDEV.XEQ#
     13531**DCL
M$LO.DECRYPT
     13582**DCL
M$LO.DENSITY#
     13554**DCL
M$LO.DESC
     13532**DCL
M$LO.DESC.ACTIVE#
     13534**DCL
M$LO.DESC.ARCHIVE#
     13534**DCL
M$LO.DESC.BAD#
     13533**DCL
M$LO.DESC.BUF#
     13533**DCL
M$LO.DESC.BUPM#
     13534**DCL
M$LO.DESC.DELF#
     13533**DCL
M$LO.DESC.FETCH#
     13535**DCL
M$LO.DESC.NBUF#
     13534**DCL
M$LO.DESC.NOLIST#
     13533**DCL
M$LO.DESC.ODSTOW#
     13533**DCL
M$LO.DESC.QS#
     13534**DCL
M$LO.DESC.TERMINATE#
     13535**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:517  
M$LO.DESC.TPB#
     13535**DCL
M$LO.DEVADR
     13557**DCL
M$LO.DEVADR.CHAN#
     13557**DCL
M$LO.DEVADR.DVN#
     13557**DCL
M$LO.DEVADR.IOM#
     13557**DCL
M$LO.DISP#
     13545**DCL
M$LO.DQH$
     13556**DCL
M$LO.DVBYTE
     13526**DCL
M$LO.DVBYTE.BIN#
     13526**DCL
M$LO.DVBYTE.TOP#
     13526**DCL
M$LO.DVBYTE.TRANS#
     13526**DCL
M$LO.DVBYTE.VFC#
     13526**DCL
M$LO.DVFC#
     13555**DCL
M$LO.DVTYPE#
     13545**DCL
M$LO.EBCDIC#
     13542**DCL
M$LO.ENQF
     13570**DCL
M$LO.EOMVAL#
     13528**DCL
M$LO.EOMVAL#.VALUE#
     13528**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:518  
M$LO.EOMVAL#.VFLG#
     13528**DCL
M$LO.EOP
     13566**DCL
M$LO.EVENT
     13560**DCL
M$LO.EXIST#
     13543**DCL
M$LO.EXPIRE#
     13547**DCL
M$LO.FCD#
     13542**DCL
M$LO.FCI#
     13542**DCL
M$LO.FCN
     13578**DCL
M$LO.FCN.CNT
     13578**DCL
M$LO.FCN.F
     13578**DCL
M$LO.FDCM
     13578**DCL
M$LO.FEPIO
     13586**DCL
M$LO.FEPIO.BPP
     13587**DCL
M$LO.FEPIO.BUFX
     13587**DCL
M$LO.FEPIO.EVENT
     13586**DCL
M$LO.FEPIO.KEYX
     13586**DCL
M$LO.FEPIO.KPP
     13587**DCL
M$LO.FEPIO2
     13590**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:519  
M$LO.FEPIO3
     13590**DCL
M$LO.FEPSIZ
     13585**DCL
M$LO.FEPSIZ.BUF
     13585**DCL
M$LO.FEPSIZ.KEY
     13585**DCL
M$LO.FEXT
     13565**DCL
M$LO.FEXTX
     13547**DCL
M$LO.FFLG
     13528**DCL
M$LO.FFLG.AU#
     13530**DCL
M$LO.FFLG.AURD#
     13530**DCL
M$LO.FFLG.CREATE#
     13530**DCL
M$LO.FFLG.DELF#
     13529**DCL
M$LO.FFLG.DELR#
     13528**DCL
M$LO.FFLG.EXEC#
     13530**DCL
M$LO.FFLG.NOLIST#
     13529**DCL
M$LO.FFLG.READ#
     13528**DCL
M$LO.FFLG.REATTR#
     13529**DCL
M$LO.FFLG.TCTL#
     13530**DCL
M$LO.FFLG.UPD#
     13529**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:520  
M$LO.FFLG.WNEW#
     13529**DCL
M$LO.FIELDX
     13559**DCL
M$LO.FLPW#
     13520**DCL
M$LO.FMOD
     13566**DCL
M$LO.FPRGX
     13559**DCL
M$LO.FPSTR
     13579**DCL
M$LO.FTAM
     13572**DCL
M$LO.FTAM.CTX
     13572**DCL
M$LO.FTAM.PMME
     13573**DCL
M$LO.FTAM.USR
     13572**DCL
M$LO.FUN#
     13545**DCL
M$LO.GDISP
     13581**DCL
M$LO.GHSTACS#
     13558**DCL
M$LO.GRPOS
     13570**DCL
M$LO.GTYP
     13566**DCL
M$LO.HASH
     13577**DCL
M$LO.IASN
     13584**DCL
M$LO.ID
     13586**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:521  
M$LO.ID.DA
     13586**DCL
M$LO.ID.GX
     13586**DCL
M$LO.IFMT
     13582**DCL
M$LO.IGNOREFSN#
     13539**DCL
M$LO.INDX
     13579**DCL
M$LO.IOERROK#
     13540**DCL
M$LO.IORG
     13576**DCL
M$LO.IRRECX
     13564**DCL
M$LO.IWL
     13583**DCL
M$LO.IWL.HDRIWL
     13583**DCL
M$LO.IWL.SEQIWL
     13583**DCL
M$LO.IWL.TABIWL
     13583**DCL
M$LO.JRNLBYPASS#
     13558**DCL
M$LO.KEYL#
     13548**DCL
M$LO.KEYTYPE#
     13560**DCL
M$LO.KEYX#
     13548**DCL
M$LO.KFIELDX
     13560**DCL
M$LO.LASTKEY
     13572**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:522  
M$LO.LASTKEY$
     13572**DCL
M$LO.LDCTX
     13557**DCL
M$LO.LDFLG
     13569**DCL
M$LO.LINES#
     13554**DCL
M$LO.LOAD#
     13539**DCL
M$LO.LOGSEC
     13581**DCL
M$LO.LPOOL
     13573**DCL
M$LO.LRDL0#
     13549**DCL
M$LO.LSLIDE#
     13549**DCL
M$LO.LSTAOR#
     13540**DCL
M$LO.LSTBLK
     13571**DCL
M$LO.MAXVOL#
     13553**DCL
M$LO.MEDIA
     13582**DCL
M$LO.MODCNT
     13580**DCL
M$LO.MOUNT
     13568**DCL
M$LO.MOVED
     13584**DCL
M$LO.MPC$
     13556**DCL
M$LO.MUST_CVOL
     13568**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:523  
M$LO.NAME#
     13536**DCL
M$LO.NAME#.C17
     13537**DCL
M$LO.NAME#.C17.CC
     13537**DCL
M$LO.NAME#.L
     13536**DCL
M$LO.NEW_FSECT
     13568**DCL
M$LO.OLDIOERR
     13581**DCL
M$LO.OWNER
     13569**DCL
M$LO.PASS#
     13537**DCL
M$LO.PASSF#
     13541**DCL
M$LO.PATH
     13564**DCL
M$LO.PATH.CHAN#
     13564**DCL
M$LO.PATH.IOM#
     13564**DCL
M$LO.PGINGRAN
     13582**DCL
M$LO.PRIVOPN
     13581**DCL
M$LO.PSN#
     13537**DCL
M$LO.QISS#
     13539**DCL
M$LO.RA
     13569**DCL
M$LO.RDL0#
     13527**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:524  
M$LO.REALSPAN
     13582**DCL
M$LO.RECL#
     13546**DCL
M$LO.RESNT
     13538**DCL
M$LO.RESNT.NUM
     13538**DCL
M$LO.RESNT.TYP
     13538**DCL
M$LO.RETRYCNT#
     13532**DCL
M$LO.RPOS
     13570**DCL
M$LO.SEED#
     13565**DCL
M$LO.SEGX
     13580**DCL
M$LO.SEQ#
     13555**DCL
M$LO.SEQCOL#
     13555**DCL
M$LO.SEQID#
     13555**DCL
M$LO.SETSTA$
     13535**DCL
M$LO.SEZ_OK
     13568**DCL
M$LO.SHARE#
     13543**DCL
M$LO.SHARED
     13566**DCL
M$LO.SLIDE#
     13527**DCL
M$LO.SPAN
     13569**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:525  
M$LO.SPANNED#
     13544**DCL
M$LO.SPARE#
     13549**DCL
M$LO.STARF
     13565**DCL
M$LO.STARTX
     13561**DCL
M$LO.STARX
     13570**DCL
M$LO.STR#
     13580**DCL
M$LO.SYSID#
     13547**DCL
M$LO.TAPTYP
     13574**DCL
M$LO.TAPTYP.CP6F
     13574**DCL
M$LO.TAPTYP.HAVLASTKEY
     13575**DCL
M$LO.TAPTYP.MANAGED
     13575**DCL
M$LO.TAPTYP.NOCVOL
     13575**DCL
M$LO.TAPTYP.PASTFM
     13575**DCL
M$LO.TAPTYP.RWASC
     13574**DCL
M$LO.TAPTYP.USRBUF
     13575**DCL
M$LO.TDALVL
     13573**DCL
M$LO.TDEXTST$
     13536**DCL
M$LO.TDFLG
     13552**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:526  
M$LO.TDFLG.SDSK#
     13552**DCL
M$LO.TDSTAT#
     13539**DCL
M$LO.TRNC
     13571**DCL
M$LO.TYC
     13520**DCL
M$LO.TYC.BLNKTP#
     13521**DCL
M$LO.TYC.BOF#
     13521**DCL
M$LO.TYC.BOT#
     13521**DCL
M$LO.TYC.CDALRT#
     13524**DCL
M$LO.TYC.CGCRCW
     13525**DCL
M$LO.TYC.CGCWRV
     13525**DCL
M$LO.TYC.CGFULL
     13525**DCL
M$LO.TYC.CGKEYV
     13524**DCL
M$LO.TYC.CGLWRV
     13524**DCL
M$LO.TYC.DACT#
     13523**DCL
M$LO.TYC.DI#
     13522**DCL
M$LO.TYC.EGV#
     13520**DCL
M$LO.TYC.EOD#
     13522**DCL
M$LO.TYC.EOF#
     13521**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:527  
M$LO.TYC.EOT#
     13521**DCL
M$LO.TYC.FRAW#
     13523**DCL
M$LO.TYC.IOERR#
     13522**DCL
M$LO.TYC.LAST#
     13524**DCL
M$LO.TYC.LD#
     13522**DCL
M$LO.TYC.LDISC#
     13523**DCL
M$LO.TYC.MTRAP#
     13522**DCL
M$LO.TYC.OPER#
     13520**DCL
M$LO.TYC.PROT#
     13523**DCL
M$LO.TYC.TIMO#
     13523**DCL
M$LO.TYC.XTRARD
     13524**DCL
M$LO.TYPE#
     13538**DCL
M$LO.UB$
     13579**DCL
M$LO.UBYTES
     13579**DCL
M$LO.UCOUT
     13574**DCL
M$LO.UNIQUEBLD
     13584**DCL
M$LO.UOPT#
     13541**DCL
M$LO.UPDCNT
     13584**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:528  
M$LO.VFCCHAR#
     13560**DCL
M$LO.VOL#
     13553**DCL
M$LO.VOLACCESS#
     13540**DCL
M$LO.WAIT
     13571**DCL
M$LO.WCDATA
     13574**DCL
M$LO.WIDTH#
     13532**DCL
M$LO.WRCMP
     13574**DCL
M$LO.WSR#
     13549**DCL
M$LO.XTEND#
     13543**DCL
M$LO.XTNSIZE#
     13548**DCL
M$MADMUCK
      6207**DCL-ENT
M$MAKUSER
      6238**DCL-ENT
M$MBS
      6206**DCL-ENT
M$MDFFLD
      6230**DCL-ENT
M$MERC
      6255**DCL-ENT
M$MERCS
      6256**DCL-ENT
M$MERGE IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15116**DCL
M$MIRROR
      6250**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:529  
M$MPL
      6240**DCL-ENT
M$NODEINFO
      6231**DCL-ENT
M$NXTUSR
      6265**DCL-ENT
M$OCMSG
      6263**DCL-ENT
M$OLAY
      6211**DCL-ENT
M$PAS
      6240**DCL-ENT
M$PATHCON
      6263**DCL-ENT
M$PDS
      6234**DCL-ENT
M$PFIL
      6201**DCL-ENT
M$PLATEN
      6225**DCL-ENT
M$PRECORD
      6203**DCL-ENT
M$PROCNAME
      6216**DCL-ENT
M$PROFILE
      6227**DCL-ENT
M$RACST
      6207**DCL-ENT
M$RDSYSLOG
      6248**DCL-ENT
M$RELDCB
      6205**DCL-ENT
M$RELRES
      6206**DCL-ENT
M$RELSTARF
      6208**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:530  
M$REM
      6208**DCL-ENT
M$RENV
      6255**DCL-ENT
M$REQUIRE
      6207**DCL-ENT
M$RETRY
      6256**DCL-ENT
M$RETRYS
      6256**DCL-ENT
M$REW
      6202**DCL-ENT
M$RLSFLD
      6230**DCL-ENT
M$RPRIV
      6258**DCL-ENT
M$RSPP
      6237**DCL-ENT
M$RSWITCH
      6259**DCL-ENT
M$RUE
      6265**DCL-ENT
M$SAD
      6238**DCL-ENT
M$SAVE
      6214**DCL-ENT
M$SCON
      6215**DCL-ENT
M$SCREECH
      6213**DCL-ENT
M$SENV
      6255**DCL-ENT
M$SETFMA
      6199**DCL-ENT
M$SETFP
      6228**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:531  
M$SINPUT
      6226**DCL-ENT
M$SLCFLD
      6231**DCL-ENT
M$SMOUSE
      6245**DCL-ENT
M$SMPRT
      6237**DCL-ENT
M$SPRIV
      6258**DCL-ENT
M$SSC
      6238**DCL-ENT
M$SSWITCH
      6258**DCL-ENT
M$STATE
      6267**DCL-ENT
M$STD
      6239**DCL-ENT
M$STIMER
      6253**DCL-ENT
M$STLPP
      6236**DCL-ENT
M$STRAP
      6253**DCL-ENT
M$STRMATTR
      6225**DCL-ENT
M$STRMCTL
      6223**DCL-ENT
M$STRMTAB
      6226**DCL-ENT
M$SYMBIO
      6264**DCL-ENT
M$SYSCON
      6250**DCL-ENT
M$SYSID
      6268**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:532  
M$TDREQCPU
      6249**DCL-ENT
M$TEMPWROC
      6243**DCL-ENT
M$TRAP
      6253**DCL-ENT
M$TRMISC
      6228**DCL-ENT
M$TRMPRG
      6224**DCL-ENT
M$TRTN
      6257**DCL-ENT
M$TRUNC
      6200**DCL-ENT
M$TTIMER
      6253**DCL-ENT
M$UC
      6223**DCL
M$UMPL
      6240**DCL-ENT
M$UNLATCH
      6219**DCL-ENT
M$UNSHARE
      6216**DCL-ENT
M$USRFIELD
      6259**DCL-ENT
M$VIRTUAL
      6234**DCL-ENT
M$WAIT
      6257**DCL-ENT
M$WEOF
      6202**DCL-ENT
M$WRSYSLOG
      6248**DCL-ENT
M$XCON
      6254**DCL-ENT
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:533  
M$XCONRTN
      6215**DCL-ENT
M$XEQTIME
      6267**DCL-ENT
M$XFLUSH
      6208**DCL-ENT
M$XMOUSE
      6245**DCL-ENT
M$XXX
      6211**DCL-ENT
M$YC
      6213**DCL-ENT
MCA_FINISHED.V.DCB# IN PROCEDURE DU_CLOSE_MCA
     15648**DCL
MCA_FINISHED.V_ IN PROCEDURE DU_CLOSE_MCA
     15648**DCL
MCA_FOR_INPUT.CHAIN_ IN PROCEDURE DU_OPEN_MCA
     15473**DCL
MCA_FOR_INPUT.V.DCB# IN PROCEDURE DU_OPEN_MCA
     15474**DCL
MCA_FOR_INPUT.V.DEVICE IN PROCEDURE DU_OPEN_MCA
     15475**DCL
MCA_FOR_INPUT.V.DEVICE.CHAN# IN PROCEDURE DU_OPEN_MCA
     15476**DCL
MCA_FOR_INPUT.V.DEVICE.DVN# IN PROCEDURE DU_OPEN_MCA
     15475**DCL
MCA_FOR_INPUT.V.NCHANS# IN PROCEDURE DU_OPEN_MCA
     15477**DCL
MCA_FOR_INPUT.V.SPEVENT# IN PROCEDURE DU_OPEN_MCA
     15476**DCL
MCA_FOR_INPUT.VFC_ IN PROCEDURE DU_OPEN_MCA
     15473**DCL
MCA_FOR_INPUT.V_ IN PROCEDURE DU_OPEN_MCA
     15473**DCL
MCA_FOR_INPUT.WINDOW_ IN PROCEDURE DU_OPEN_MCA
     15474**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:534  
MESSAGE_CODE.FCG IN PROCEDURE DU_FETCH_TEXT
     17729**DCL
MESSAGE_CODE.MID IN PROCEDURE DU_FETCH_TEXT
     17742**DCL
MESSAGE_CODE.MON IN PROCEDURE DU_FETCH_TEXT
     17742**DCL
MESSAGE_CODE.SEV IN PROCEDURE DU_FETCH_TEXT
     17743**DCL
MESSAGE_FETCH.ALTCODE_ IN PROCEDURE DU_FETCH_TEXT
     17686**DCL
MESSAGE_FETCH.CODE_ IN PROCEDURE DU_FETCH_TEXT
     17682**DCL
MESSAGE_FETCH.FIELD1_ IN PROCEDURE DU_FETCH_TEXT
     17684**DCL
MESSAGE_FETCH.FIELD2_ IN PROCEDURE DU_FETCH_TEXT
     17685**DCL
MESSAGE_FETCH.FIELD3_ IN PROCEDURE DU_FETCH_TEXT
     17685**DCL
MESSAGE_FETCH.FILEACCT_ IN PROCEDURE DU_FETCH_TEXT
     17683**DCL
MESSAGE_FETCH.FILENAME_ IN PROCEDURE DU_FETCH_TEXT
     17683**DCL
MESSAGE_FETCH.FILEPASS_ IN PROCEDURE DU_FETCH_TEXT
     17684**DCL
MESSAGE_FETCH.RESULTS_ IN PROCEDURE DU_FETCH_TEXT
     17685**DCL
MESSAGE_FETCH.V.DCB# IN PROCEDURE DU_FETCH_TEXT
     17686**DCL
MESSAGE_FETCH.V.FLAGLEV# IN PROCEDURE DU_FETCH_TEXT
     17688**DCL
MESSAGE_FETCH.V.INCLCODE# IN PROCEDURE DU_FETCH_TEXT
     17691**DCL
MESSAGE_FETCH.V.L6_ALTCODE# IN PROCEDURE DU_FETCH_TEXT
     17694**DCL
MESSAGE_FETCH.V.L6_CODE# IN PROCEDURE DU_FETCH_TEXT
     17694**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:535  
MESSAGE_FETCH.V.LANG# IN PROCEDURE DU_FETCH_TEXT
     17695**DCL
MESSAGE_FETCH.V.LEAVETOKEN# IN PROCEDURE DU_FETCH_TEXT
     17689**DCL
MESSAGE_FETCH.V.MY_LANG# IN PROCEDURE DU_FETCH_TEXT
     17695**DCL
MESSAGE_FETCH.V.NREAD# IN PROCEDURE DU_FETCH_TEXT
     17692**DCL
MESSAGE_FETCH.V.OUTDCB1# IN PROCEDURE DU_FETCH_TEXT
     17687**DCL
MESSAGE_FETCH.V.OUTDCB2# IN PROCEDURE DU_FETCH_TEXT
     17687**DCL
MESSAGE_FETCH.V.POINTER# IN PROCEDURE DU_FETCH_TEXT
     17692**DCL
MESSAGE_FETCH.V.SOURCE# IN PROCEDURE DU_FETCH_TEXT
     17693**DCL
MESSAGE_FETCH.V.SUBAC# IN PROCEDURE DU_FETCH_TEXT
     17690**DCL
MESSAGE_FETCH.V.SUBDC# IN PROCEDURE DU_FETCH_TEXT
     17690**DCL
MESSAGE_FETCH.V.SUBFILE# IN PROCEDURE DU_FETCH_TEXT
     17689**DCL
MESSAGE_FETCH.V.SUBFN# IN PROCEDURE DU_FETCH_TEXT
     17689**DCL
MESSAGE_FETCH.V.SUBLANG# IN PROCEDURE DU_FETCH_TEXT
     17693**DCL
MESSAGE_FETCH.V.SUBMESS# IN PROCEDURE DU_FETCH_TEXT
     17692**DCL
MESSAGE_FETCH.V.SUBSN# IN PROCEDURE DU_FETCH_TEXT
     17690**DCL
MESSAGE_FETCH.V.TYC# IN PROCEDURE DU_FETCH_TEXT
     17691**DCL
MESSAGE_FETCH.V.VFC# IN PROCEDURE DU_FETCH_TEXT
     17688**DCL
MESSAGE_FETCH.V_ IN PROCEDURE DU_FETCH_TEXT
     17682**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:536  
MSG_ACCT.ACCT# IN PROCEDURE DU_FETCH_TEXT
     17787**DCL
MSG_NAME.L# IN PROCEDURE DU_FETCH_TEXT
     17773**DCL
MSG_NAME.NAME# IN PROCEDURE DU_FETCH_TEXT
     17773**DCL
MSG_RESP.BUF_.BOUND IN PROCEDURE DU_PRINT_OP_REPLY
     17419**DCL
MSG_RESP.BUF_.BUF$ IN PROCEDURE DU_PRINT_OP_REPLY
     17421**DCL
MSG_RESP.IDBUF_ IN PROCEDURE DU_PRINT_OP_REPLY
     17421**DCL
MSG_RESP.KEY_ IN PROCEDURE DU_PRINT_OP_REPLY
     17419**DCL
MSG_RESP.V.DCB# IN PROCEDURE DU_PRINT_OP_REPLY
     17422**DCL
MSG_RESP.V.DVBYTE IN PROCEDURE DU_PRINT_OP_REPLY
     17427**DCL
MSG_RESP.V.DVBYTE.BIN# IN PROCEDURE DU_PRINT_OP_REPLY
     17428**DCL
MSG_RESP.V.DVBYTE.BP# IN PROCEDURE DU_PRINT_OP_REPLY
     17428**DCL
MSG_RESP.V.DVBYTE.CONT# IN PROCEDURE DU_PRINT_OP_REPLY
     17430**DCL
MSG_RESP.V.DVBYTE.NODAT# IN PROCEDURE DU_PRINT_OP_REPLY
     17429**DCL
MSG_RESP.V.DVBYTE.REREAD# IN PROCEDURE DU_PRINT_OP_REPLY
     17428**DCL
MSG_RESP.V.DVBYTE.RRR# IN PROCEDURE DU_PRINT_OP_REPLY
     17429**DCL
MSG_RESP.V.DVBYTE.TOP# IN PROCEDURE DU_PRINT_OP_REPLY
     17427**DCL
MSG_RESP.V.DVBYTE.TRANS# IN PROCEDURE DU_PRINT_OP_REPLY
     17429**DCL
MSG_RESP.V.EVENT# IN PROCEDURE DU_PRINT_OP_REPLY
     17427**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:537  
MSG_RESP.V.FULL# IN PROCEDURE DU_PRINT_OP_REPLY
     17424**DCL
MSG_RESP.V.ID# IN PROCEDURE DU_PRINT_OP_REPLY
     17423**DCL
MSG_RESP.V.IOERROK# IN PROCEDURE DU_PRINT_OP_REPLY
     17426**DCL
MSG_RESP.V.KEYTYPE# IN PROCEDURE DU_PRINT_OP_REPLY
     17426**DCL
MSG_RESP.V.NEWKEY# IN PROCEDURE DU_PRINT_OP_REPLY
     17425**DCL
MSG_RESP.V.NOTIME# IN PROCEDURE DU_PRINT_OP_REPLY
     17425**DCL
MSG_RESP.V.ODFNC# IN PROCEDURE DU_PRINT_OP_REPLY
     17431**DCL
MSG_RESP.V.ONEWKEY# IN PROCEDURE DU_PRINT_OP_REPLY
     17424**DCL
MSG_RESP.V.REWRITE# IN PROCEDURE DU_PRINT_OP_REPLY
     17425**DCL
MSG_RESP.V.SEED# IN PROCEDURE DU_PRINT_OP_REPLY
     17427**DCL
MSG_RESP.V.WAIT# IN PROCEDURE DU_PRINT_OP_REPLY
     17422**DCL
MSG_RESP.V_ IN PROCEDURE DU_PRINT_OP_REPLY
     17419**DCL
NEXT_IFAD.UHL_ IN PROCEDURE DU_NEXT_IFAD
     14699**DCL
NEXT_IFAD.UTL_ IN PROCEDURE DU_NEXT_IFAD
     14699**DCL
NEXT_IFAD.V.DCB# IN PROCEDURE DU_NEXT_IFAD
     14700**DCL
NEXT_IFAD.V_ IN PROCEDURE DU_NEXT_IFAD
     14699**DCL
ON_LINE.PROMPT_ IN PROCEDURE DU_SET_EDIT_PROMPT
     17989**DCL
ON_LINE.STATION_ IN PROCEDURE DU_SET_EDIT_PROMPT
     17987**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:538  
ON_LINE.V.DCB# IN PROCEDURE DU_SET_EDIT_PROMPT
     17991**DCL
ON_LINE.V.DVBYTE# IN PROCEDURE DU_SET_EDIT_PROMPT
     17991**DCL
ON_LINE.V.DVBYTE#.BIN# IN PROCEDURE DU_SET_EDIT_PROMPT
     17992**DCL
ON_LINE.V.DVBYTE#.TRANS# IN PROCEDURE DU_SET_EDIT_PROMPT
     17992**DCL
ON_LINE.V.DVBYTE#.VFC# IN PROCEDURE DU_SET_EDIT_PROMPT
     17992**DCL
ON_LINE.V_ IN PROCEDURE DU_SET_EDIT_PROMPT
     17985**DCL
OPEN_CONFIG.ACCESS_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15234**DCL
OPEN_CONFIG.ACCT_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15236**DCL
OPEN_CONFIG.FORM_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15240**DCL
OPEN_CONFIG.FPARAM_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15237**DCL
OPEN_CONFIG.FPRG_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15241**DCL
OPEN_CONFIG.IFPARAM_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15237**DCL
OPEN_CONFIG.INSTATTR_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15236**DCL
OPEN_CONFIG.IRKEYS_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15241**DCL
OPEN_CONFIG.IRREC_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15240**DCL
OPEN_CONFIG.NAME_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15233**DCL
OPEN_CONFIG.NODENAME_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15238**DCL
OPEN_CONFIG.PASS_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15234**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:539  
OPEN_CONFIG.PROCATTR_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15236**DCL
OPEN_CONFIG.RECFIELD_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15239**DCL
OPEN_CONFIG.SETSTA_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15233**DCL
OPEN_CONFIG.SN_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15232**DCL
OPEN_CONFIG.UATTR_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15235**DCL
OPEN_CONFIG.V.ACS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15252**DCL
OPEN_CONFIG.V.ANSISPANSEQ# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15265**DCL
OPEN_CONFIG.V.ASN# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15251**DCL
OPEN_CONFIG.V.ATTR# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15268**DCL
OPEN_CONFIG.V.AU# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15270**DCL
OPEN_CONFIG.V.BLKL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15258**DCL
OPEN_CONFIG.V.BLOCKED# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15253**DCL
OPEN_CONFIG.V.BUPM# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15254**DCL
OPEN_CONFIG.V.CHAIN# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15267**DCL
OPEN_CONFIG.V.CNVRT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15261**DCL
OPEN_CONFIG.V.COMP# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15253**DCL
OPEN_CONFIG.V.COPIES# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15273**DCL
OPEN_CONFIG.V.CTG# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15245**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:540  
OPEN_CONFIG.V.CVOL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15246**DCL
OPEN_CONFIG.V.DBGDCBNO# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15272**DCL
OPEN_CONFIG.V.DBGSYSID# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15272**DCL
OPEN_CONFIG.V.DCB# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15241**DCL
OPEN_CONFIG.V.DCBCONLGL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15263**DCL
OPEN_CONFIG.V.DELETE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15243**DCL
OPEN_CONFIG.V.DENSITY# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15273**DCL
OPEN_CONFIG.V.DISP# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15257**DCL
OPEN_CONFIG.V.DVFC# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15268**DCL
OPEN_CONFIG.V.EBCDIC# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15261**DCL
OPEN_CONFIG.V.EVENT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15271**DCL
OPEN_CONFIG.V.EXIST# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15245**DCL
OPEN_CONFIG.V.EXPIRE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15261**DCL
OPEN_CONFIG.V.FINDPOS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15247**DCL
OPEN_CONFIG.V.FUN# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15251**DCL
OPEN_CONFIG.V.GHSTACS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15256**DCL
OPEN_CONFIG.V.IGNOREFSN# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15265**DCL
OPEN_CONFIG.V.INITZ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15242**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:541  
OPEN_CONFIG.V.INITZ.REASSIGN# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15242**DCL
OPEN_CONFIG.V.INITZ.SCRUB# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15242**DCL
OPEN_CONFIG.V.IOERROK# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15263**DCL
OPEN_CONFIG.V.IXTNSIZE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15260**DCL
OPEN_CONFIG.V.JRNLBYPASS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15255**DCL
OPEN_CONFIG.V.KEYL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15257**DCL
OPEN_CONFIG.V.KEYTYPE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15267**DCL
OPEN_CONFIG.V.KEYX# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15256**DCL
OPEN_CONFIG.V.LINES# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15271**DCL
OPEN_CONFIG.V.LOAD# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15255**DCL
OPEN_CONFIG.V.LRDL0# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15259**DCL
OPEN_CONFIG.V.LSLIDE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15258**DCL
OPEN_CONFIG.V.LSTAOR# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15255**DCL
OPEN_CONFIG.V.MAXVOL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15267**DCL
OPEN_CONFIG.V.NRECS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15260**DCL
OPEN_CONFIG.V.OPER IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15243**DCL
OPEN_CONFIG.V.OPER.MNTONLY# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15245**DCL
OPEN_CONFIG.V.OPER.NXTA# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15244**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:542  
OPEN_CONFIG.V.OPER.NXTF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15244**DCL
OPEN_CONFIG.V.OPER.TEST# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15243**DCL
OPEN_CONFIG.V.OPER.THISF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15244**DCL
OPEN_CONFIG.V.ORG# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15252**DCL
OPEN_CONFIG.V.OVERFDE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15264**DCL
OPEN_CONFIG.V.QISS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15270**DCL
OPEN_CONFIG.V.RECL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15258**DCL
OPEN_CONFIG.V.RES# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15256**DCL
OPEN_CONFIG.V.SEED# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15274**DCL
OPEN_CONFIG.V.SEEDSPECIFIED# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15265**DCL
OPEN_CONFIG.V.SEQ# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15269**DCL
OPEN_CONFIG.V.SEQCOL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15269**DCL
OPEN_CONFIG.V.SEQID# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15271**DCL
OPEN_CONFIG.V.SETDCB# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15242**DCL
OPEN_CONFIG.V.SHARE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15246**DCL
OPEN_CONFIG.V.SPANNED# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15254**DCL
OPEN_CONFIG.V.SPARE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15259**DCL
OPEN_CONFIG.V.SRCHCOND IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15247**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:543  
OPEN_CONFIG.V.SRCHCOND.ANYF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15250**DCL
OPEN_CONFIG.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15249**DCL
OPEN_CONFIG.V.SRCHCOND.BAD# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15248**DCL
OPEN_CONFIG.V.SRCHCOND.BUF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15248**DCL
OPEN_CONFIG.V.SRCHCOND.DELF# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15247**DCL
OPEN_CONFIG.V.SRCHCOND.NOLIST# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15247**DCL
OPEN_CONFIG.V.SRCHCOND.QS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15249**DCL
OPEN_CONFIG.V.SRCHCOND.REV# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15250**DCL
OPEN_CONFIG.V.TERMCONLGL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15264**DCL
OPEN_CONFIG.V.TYPE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15253**DCL
OPEN_CONFIG.V.UOPT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15251**DCL
OPEN_CONFIG.V.VOL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15266**DCL
OPEN_CONFIG.V.VOLACCESS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15270**DCL
OPEN_CONFIG.V.XONLY# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15262**DCL
OPEN_CONFIG.V.XTEND# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15262**DCL
OPEN_CONFIG.V.XTNSIZE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15260**DCL
OPEN_CONFIG.VIRTUAL_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15233**DCL
OPEN_CONFIG.V_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15232**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:544  
OPEN_CONFIG.WINDOW_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15235**DCL
OPEN_LO.ACCESS_ IN PROCEDURE DU_OPEN_LO
     14891**DCL
OPEN_LO.ACCT_ IN PROCEDURE DU_OPEN_LO
     14893**DCL
OPEN_LO.FORM_ IN PROCEDURE DU_OPEN_LO
     14897**DCL
OPEN_LO.FPARAM_ IN PROCEDURE DU_OPEN_LO
     14894**DCL
OPEN_LO.FPRG_ IN PROCEDURE DU_OPEN_LO
     14898**DCL
OPEN_LO.IFPARAM_ IN PROCEDURE DU_OPEN_LO
     14894**DCL
OPEN_LO.INSTATTR_ IN PROCEDURE DU_OPEN_LO
     14893**DCL
OPEN_LO.IRKEYS_ IN PROCEDURE DU_OPEN_LO
     14898**DCL
OPEN_LO.IRREC_ IN PROCEDURE DU_OPEN_LO
     14897**DCL
OPEN_LO.NAME_ IN PROCEDURE DU_OPEN_LO
     14890**DCL
OPEN_LO.NODENAME_ IN PROCEDURE DU_OPEN_LO
     14895**DCL
OPEN_LO.PASS_ IN PROCEDURE DU_OPEN_LO
     14891**DCL
OPEN_LO.PROCATTR_ IN PROCEDURE DU_OPEN_LO
     14893**DCL
OPEN_LO.RECFIELD_ IN PROCEDURE DU_OPEN_LO
     14896**DCL
OPEN_LO.SETSTA_ IN PROCEDURE DU_OPEN_LO
     14890**DCL
OPEN_LO.SN_ IN PROCEDURE DU_OPEN_LO
     14889**DCL
OPEN_LO.UATTR_ IN PROCEDURE DU_OPEN_LO
     14892**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:545  
OPEN_LO.V.ACS# IN PROCEDURE DU_OPEN_LO
     14909**DCL
OPEN_LO.V.ANSISPANSEQ# IN PROCEDURE DU_OPEN_LO
     14922**DCL
OPEN_LO.V.ATTR# IN PROCEDURE DU_OPEN_LO
     14925**DCL
OPEN_LO.V.AU# IN PROCEDURE DU_OPEN_LO
     14927**DCL
OPEN_LO.V.BLKL# IN PROCEDURE DU_OPEN_LO
     14915**DCL
OPEN_LO.V.BLOCKED# IN PROCEDURE DU_OPEN_LO
     14910**DCL
OPEN_LO.V.BUPM# IN PROCEDURE DU_OPEN_LO
     14911**DCL
OPEN_LO.V.CHAIN# IN PROCEDURE DU_OPEN_LO
     14924**DCL
OPEN_LO.V.CNVRT# IN PROCEDURE DU_OPEN_LO
     14918**DCL
OPEN_LO.V.COMP# IN PROCEDURE DU_OPEN_LO
     14910**DCL
OPEN_LO.V.COPIES# IN PROCEDURE DU_OPEN_LO
     14930**DCL
OPEN_LO.V.CTG# IN PROCEDURE DU_OPEN_LO
     14902**DCL
OPEN_LO.V.CVOL# IN PROCEDURE DU_OPEN_LO
     14903**DCL
OPEN_LO.V.DBGDCBNO# IN PROCEDURE DU_OPEN_LO
     14929**DCL
OPEN_LO.V.DBGSYSID# IN PROCEDURE DU_OPEN_LO
     14929**DCL
OPEN_LO.V.DCB# IN PROCEDURE DU_OPEN_LO
     14898**DCL
OPEN_LO.V.DCBCONLGL# IN PROCEDURE DU_OPEN_LO
     14920**DCL
OPEN_LO.V.DELETE# IN PROCEDURE DU_OPEN_LO
     14900**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:546  
OPEN_LO.V.DENSITY# IN PROCEDURE DU_OPEN_LO
     14930**DCL
OPEN_LO.V.DISP# IN PROCEDURE DU_OPEN_LO
     14914**DCL
OPEN_LO.V.DVFC# IN PROCEDURE DU_OPEN_LO
     14925**DCL
OPEN_LO.V.EBCDIC# IN PROCEDURE DU_OPEN_LO
     14918**DCL
OPEN_LO.V.EVENT# IN PROCEDURE DU_OPEN_LO
     14928**DCL
OPEN_LO.V.EXPIRE# IN PROCEDURE DU_OPEN_LO
     14918**DCL
OPEN_LO.V.FINDPOS# IN PROCEDURE DU_OPEN_LO
     14904**DCL
OPEN_LO.V.GHSTACS# IN PROCEDURE DU_OPEN_LO
     14913**DCL
OPEN_LO.V.IGNOREFSN# IN PROCEDURE DU_OPEN_LO
     14922**DCL
OPEN_LO.V.INITZ IN PROCEDURE DU_OPEN_LO
     14899**DCL
OPEN_LO.V.INITZ.REASSIGN# IN PROCEDURE DU_OPEN_LO
     14899**DCL
OPEN_LO.V.INITZ.SCRUB# IN PROCEDURE DU_OPEN_LO
     14899**DCL
OPEN_LO.V.IOERROK# IN PROCEDURE DU_OPEN_LO
     14920**DCL
OPEN_LO.V.IXTNSIZE# IN PROCEDURE DU_OPEN_LO
     14917**DCL
OPEN_LO.V.JRNLBYPASS# IN PROCEDURE DU_OPEN_LO
     14912**DCL
OPEN_LO.V.KEYL# IN PROCEDURE DU_OPEN_LO
     14914**DCL
OPEN_LO.V.KEYTYPE# IN PROCEDURE DU_OPEN_LO
     14924**DCL
OPEN_LO.V.KEYX# IN PROCEDURE DU_OPEN_LO
     14913**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:547  
OPEN_LO.V.LINES# IN PROCEDURE DU_OPEN_LO
     14928**DCL
OPEN_LO.V.LOAD# IN PROCEDURE DU_OPEN_LO
     14912**DCL
OPEN_LO.V.LRDL0# IN PROCEDURE DU_OPEN_LO
     14916**DCL
OPEN_LO.V.LSLIDE# IN PROCEDURE DU_OPEN_LO
     14915**DCL
OPEN_LO.V.LSTAOR# IN PROCEDURE DU_OPEN_LO
     14912**DCL
OPEN_LO.V.MAXVOL# IN PROCEDURE DU_OPEN_LO
     14924**DCL
OPEN_LO.V.NRECS# IN PROCEDURE DU_OPEN_LO
     14917**DCL
OPEN_LO.V.OPER IN PROCEDURE DU_OPEN_LO
     14900**DCL
OPEN_LO.V.OPER.MNTONLY# IN PROCEDURE DU_OPEN_LO
     14902**DCL
OPEN_LO.V.OPER.NXTA# IN PROCEDURE DU_OPEN_LO
     14901**DCL
OPEN_LO.V.OPER.NXTF# IN PROCEDURE DU_OPEN_LO
     14901**DCL
OPEN_LO.V.OPER.TEST# IN PROCEDURE DU_OPEN_LO
     14900**DCL
OPEN_LO.V.OPER.THISF# IN PROCEDURE DU_OPEN_LO
     14901**DCL
OPEN_LO.V.ORG# IN PROCEDURE DU_OPEN_LO
     14909**DCL
OPEN_LO.V.OVERFDE# IN PROCEDURE DU_OPEN_LO
     14921**DCL
OPEN_LO.V.QISS# IN PROCEDURE DU_OPEN_LO
     14927**DCL
OPEN_LO.V.RECL# IN PROCEDURE DU_OPEN_LO
     14915**DCL
OPEN_LO.V.SEED# IN PROCEDURE DU_OPEN_LO
     14931**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:548  
OPEN_LO.V.SEEDSPECIFIED# IN PROCEDURE DU_OPEN_LO
     14922**DCL
OPEN_LO.V.SEQ# IN PROCEDURE DU_OPEN_LO
     14926**DCL
OPEN_LO.V.SEQCOL# IN PROCEDURE DU_OPEN_LO
     14926**DCL
OPEN_LO.V.SEQID# IN PROCEDURE DU_OPEN_LO
     14928**DCL
OPEN_LO.V.SETDCB# IN PROCEDURE DU_OPEN_LO
     14899**DCL
OPEN_LO.V.SHARE# IN PROCEDURE DU_OPEN_LO
     14903**DCL
OPEN_LO.V.SPANNED# IN PROCEDURE DU_OPEN_LO
     14911**DCL
OPEN_LO.V.SPARE# IN PROCEDURE DU_OPEN_LO
     14916**DCL
OPEN_LO.V.SRCHCOND IN PROCEDURE DU_OPEN_LO
     14904**DCL
OPEN_LO.V.SRCHCOND.ANYF# IN PROCEDURE DU_OPEN_LO
     14907**DCL
OPEN_LO.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_OPEN_LO
     14906**DCL
OPEN_LO.V.SRCHCOND.BAD# IN PROCEDURE DU_OPEN_LO
     14905**DCL
OPEN_LO.V.SRCHCOND.BUF# IN PROCEDURE DU_OPEN_LO
     14905**DCL
OPEN_LO.V.SRCHCOND.DELF# IN PROCEDURE DU_OPEN_LO
     14904**DCL
OPEN_LO.V.SRCHCOND.NOLIST# IN PROCEDURE DU_OPEN_LO
     14904**DCL
OPEN_LO.V.SRCHCOND.QS# IN PROCEDURE DU_OPEN_LO
     14906**DCL
OPEN_LO.V.SRCHCOND.REV# IN PROCEDURE DU_OPEN_LO
     14907**DCL
OPEN_LO.V.TERMCONLGL# IN PROCEDURE DU_OPEN_LO
     14921**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:549  
OPEN_LO.V.TYPE# IN PROCEDURE DU_OPEN_LO
     14910**DCL
OPEN_LO.V.UOPT# IN PROCEDURE DU_OPEN_LO
     14908**DCL
OPEN_LO.V.VOL# IN PROCEDURE DU_OPEN_LO
     14923**DCL
OPEN_LO.V.VOLACCESS# IN PROCEDURE DU_OPEN_LO
     14927**DCL
OPEN_LO.V.XONLY# IN PROCEDURE DU_OPEN_LO
     14919**DCL
OPEN_LO.V.XTEND# IN PROCEDURE DU_OPEN_LO
     14919**DCL
OPEN_LO.V.XTNSIZE# IN PROCEDURE DU_OPEN_LO
     14917**DCL
OPEN_LO.VIRTUAL_ IN PROCEDURE DU_OPEN_LO
     14890**DCL
OPEN_LO.V_ IN PROCEDURE DU_OPEN_LO
     14889**DCL
OPEN_LO.WINDOW_ IN PROCEDURE DU_OPEN_LO
     14892**DCL
OUT$BLK IN PROCEDURE DU_OW_SETUP_BUFFER
     17236**DCL
OUT$BLK.CODE IN PROCEDURE DU_OW_SETUP_BUFFER
     17244**DCL
OUT$BLK.CPOS IN PROCEDURE DU_OW_SETUP_BUFFER
     17262**DCL
OUT$BLK.NDTYPE IN PROCEDURE DU_OW_SETUP_BUFFER
     17239**DCL
OUT$BLK.NSUBLKS IN PROCEDURE DU_OW_SETUP_BUFFER
     17248**DCL
OUT$BLK.SCRITCH IN PROCEDURE DU_OW_SETUP_BUFFER
     17252**DCL
OUT$BLK.TEMP IN PROCEDURE DU_OW_SETUP_BUFFER
     17237**DCL
OUT$SYM IN PROCEDURE DU_OW_SETUP_BUFFER
     17282**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:550  
OUT$SYM.CODE IN PROCEDURE DU_OW_SETUP_BUFFER
     17288**DCL
OUT$SYM.CPOS IN PROCEDURE DU_OW_SETUP_BUFFER
     17297**DCL
OUT$SYM.NDTYPE IN PROCEDURE DU_OW_SETUP_BUFFER
     17285**DCL
OUT$SYM.NSUBLKS IN PROCEDURE DU_OW_SETUP_BUFFER
     17291**DCL
OUT$SYM.SCRITCH IN PROCEDURE DU_OW_SETUP_BUFFER
     17294**DCL
OUT$SYM.TEMP IN PROCEDURE DU_OW_SETUP_BUFFER
     17283**DCL
OUT$SYM.TEXTC$ IN PROCEDURE DU_OW_SETUP_BUFFER
     17300**DCL
READ_CONFIG.BUF_.BOUND IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15297**DCL
READ_CONFIG.BUF_.BUF$ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15298**DCL
READ_CONFIG.IDBUF_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15299**DCL
READ_CONFIG.KEY_.BOUND IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15295**DCL
READ_CONFIG.KEY_.KEY$ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15296**DCL
READ_CONFIG.V.DCB# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15299**DCL
READ_CONFIG.V.DVBYTE IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15309**DCL
READ_CONFIG.V.DVBYTE.BIN# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15310**DCL
READ_CONFIG.V.DVBYTE.BP# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15309**DCL
READ_CONFIG.V.DVBYTE.CONT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15312**DCL
READ_CONFIG.V.DVBYTE.NODAT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15311**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:551  
READ_CONFIG.V.DVBYTE.TOP# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15309**DCL
READ_CONFIG.V.DVBYTE.TRANS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15311**DCL
READ_CONFIG.V.DVBYTE.VFC# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15310**DCL
READ_CONFIG.V.EVENT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15308**DCL
READ_CONFIG.V.FULL# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15301**DCL
READ_CONFIG.V.ID# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15300**DCL
READ_CONFIG.V.IDS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15301**DCL
READ_CONFIG.V.IOERROK# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15302**DCL
READ_CONFIG.V.KEYCHNG# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15301**DCL
READ_CONFIG.V.KEYR# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15300**DCL
READ_CONFIG.V.KEYS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15300**DCL
READ_CONFIG.V.KEYTYPE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15308**DCL
READ_CONFIG.V.ODFNC# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15313**DCL
READ_CONFIG.V.RECNUM# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15313**DCL
READ_CONFIG.V.REREADPOS# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15314**DCL
READ_CONFIG.V.SEED# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15309**DCL
READ_CONFIG.V.SINPUTSIZE# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15313**DCL
READ_CONFIG.V.STRPVFC# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15312**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:552  
READ_CONFIG.V.WAIT# IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15299**DCL
READ_CONFIG.V_ IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15295**DCL
READ_FID.ACCESS_ IN PROCEDURE DU_OPEN_DF
     16409**DCL
READ_FID.ACCT_ IN PROCEDURE DU_OPEN_DF
     16411**DCL
READ_FID.FORM_ IN PROCEDURE DU_OPEN_DF
     16415**DCL
READ_FID.FPARAM_ IN PROCEDURE DU_OPEN_DF
     16412**DCL
READ_FID.FPRG_ IN PROCEDURE DU_OPEN_DF
     16416**DCL
READ_FID.IFPARAM_ IN PROCEDURE DU_OPEN_DF
     16412**DCL
READ_FID.INSTATTR_ IN PROCEDURE DU_OPEN_DF
     16411**DCL
READ_FID.IRKEYS_ IN PROCEDURE DU_OPEN_DF
     16416**DCL
READ_FID.IRREC_ IN PROCEDURE DU_OPEN_DF
     16415**DCL
READ_FID.NAME_ IN PROCEDURE DU_OPEN_DF
     16408**DCL
READ_FID.NODENAME_ IN PROCEDURE DU_OPEN_DF
     16413**DCL
READ_FID.PASS_ IN PROCEDURE DU_OPEN_DF
     16409**DCL
READ_FID.PROCATTR_ IN PROCEDURE DU_OPEN_DF
     16411**DCL
READ_FID.RECFIELD_ IN PROCEDURE DU_OPEN_DF
     16414**DCL
READ_FID.SETSTA_ IN PROCEDURE DU_OPEN_DF
     16408**DCL
READ_FID.SN_ IN PROCEDURE DU_OPEN_DF
     16407**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:553  
READ_FID.UATTR_ IN PROCEDURE DU_OPEN_DF
     16410**DCL
READ_FID.V.ACS# IN PROCEDURE DU_OPEN_DF
     16427**DCL
READ_FID.V.ANSISPANSEQ# IN PROCEDURE DU_OPEN_DF
     16440**DCL
READ_FID.V.ASN# IN PROCEDURE DU_OPEN_DF
     16426**DCL
READ_FID.V.ATTR# IN PROCEDURE DU_OPEN_DF
     16443**DCL
READ_FID.V.AU# IN PROCEDURE DU_OPEN_DF
     16445**DCL
READ_FID.V.BLKL# IN PROCEDURE DU_OPEN_DF
     16433**DCL
READ_FID.V.BLOCKED# IN PROCEDURE DU_OPEN_DF
     16428**DCL
READ_FID.V.BUPM# IN PROCEDURE DU_OPEN_DF
     16429**DCL
READ_FID.V.CHAIN# IN PROCEDURE DU_OPEN_DF
     16442**DCL
READ_FID.V.CNVRT# IN PROCEDURE DU_OPEN_DF
     16436**DCL
READ_FID.V.COMP# IN PROCEDURE DU_OPEN_DF
     16428**DCL
READ_FID.V.COPIES# IN PROCEDURE DU_OPEN_DF
     16448**DCL
READ_FID.V.CTG# IN PROCEDURE DU_OPEN_DF
     16420**DCL
READ_FID.V.CVOL# IN PROCEDURE DU_OPEN_DF
     16421**DCL
READ_FID.V.DBGDCBNO# IN PROCEDURE DU_OPEN_DF
     16447**DCL
READ_FID.V.DBGSYSID# IN PROCEDURE DU_OPEN_DF
     16447**DCL
READ_FID.V.DCB# IN PROCEDURE DU_OPEN_DF
     16416**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:554  
READ_FID.V.DCBCONLGL# IN PROCEDURE DU_OPEN_DF
     16438**DCL
READ_FID.V.DELETE# IN PROCEDURE DU_OPEN_DF
     16418**DCL
READ_FID.V.DENSITY# IN PROCEDURE DU_OPEN_DF
     16448**DCL
READ_FID.V.DISP# IN PROCEDURE DU_OPEN_DF
     16432**DCL
READ_FID.V.DVFC# IN PROCEDURE DU_OPEN_DF
     16443**DCL
READ_FID.V.EBCDIC# IN PROCEDURE DU_OPEN_DF
     16436**DCL
READ_FID.V.EVENT# IN PROCEDURE DU_OPEN_DF
     16446**DCL
READ_FID.V.EXIST# IN PROCEDURE DU_OPEN_DF
     16420**DCL
READ_FID.V.EXPIRE# IN PROCEDURE DU_OPEN_DF
     16436**DCL
READ_FID.V.FINDPOS# IN PROCEDURE DU_OPEN_DF
     16422**DCL
READ_FID.V.FUN# IN PROCEDURE DU_OPEN_DF
     16426**DCL
READ_FID.V.GHSTACS# IN PROCEDURE DU_OPEN_DF
     16431**DCL
READ_FID.V.IGNOREFSN# IN PROCEDURE DU_OPEN_DF
     16440**DCL
READ_FID.V.INITZ IN PROCEDURE DU_OPEN_DF
     16417**DCL
READ_FID.V.INITZ.REASSIGN# IN PROCEDURE DU_OPEN_DF
     16417**DCL
READ_FID.V.INITZ.SCRUB# IN PROCEDURE DU_OPEN_DF
     16417**DCL
READ_FID.V.IOERROK# IN PROCEDURE DU_OPEN_DF
     16438**DCL
READ_FID.V.IXTNSIZE# IN PROCEDURE DU_OPEN_DF
     16435**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:555  
READ_FID.V.JRNLBYPASS# IN PROCEDURE DU_OPEN_DF
     16430**DCL
READ_FID.V.KEYL# IN PROCEDURE DU_OPEN_DF
     16432**DCL
READ_FID.V.KEYTYPE# IN PROCEDURE DU_OPEN_DF
     16442**DCL
READ_FID.V.KEYX# IN PROCEDURE DU_OPEN_DF
     16431**DCL
READ_FID.V.LINES# IN PROCEDURE DU_OPEN_DF
     16446**DCL
READ_FID.V.LOAD# IN PROCEDURE DU_OPEN_DF
     16430**DCL
READ_FID.V.LRDL0# IN PROCEDURE DU_OPEN_DF
     16434**DCL
READ_FID.V.LSLIDE# IN PROCEDURE DU_OPEN_DF
     16433**DCL
READ_FID.V.LSTAOR# IN PROCEDURE DU_OPEN_DF
     16430**DCL
READ_FID.V.MAXVOL# IN PROCEDURE DU_OPEN_DF
     16442**DCL
READ_FID.V.NRECS# IN PROCEDURE DU_OPEN_DF
     16435**DCL
READ_FID.V.OPER IN PROCEDURE DU_OPEN_DF
     16418**DCL
READ_FID.V.OPER.MNTONLY# IN PROCEDURE DU_OPEN_DF
     16420**DCL
READ_FID.V.OPER.NXTA# IN PROCEDURE DU_OPEN_DF
     16419**DCL
READ_FID.V.OPER.NXTF# IN PROCEDURE DU_OPEN_DF
     16419**DCL
READ_FID.V.OPER.TEST# IN PROCEDURE DU_OPEN_DF
     16418**DCL
READ_FID.V.OPER.THISF# IN PROCEDURE DU_OPEN_DF
     16419**DCL
READ_FID.V.ORG# IN PROCEDURE DU_OPEN_DF
     16427**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:556  
READ_FID.V.OVERFDE# IN PROCEDURE DU_OPEN_DF
     16439**DCL
READ_FID.V.QISS# IN PROCEDURE DU_OPEN_DF
     16445**DCL
READ_FID.V.RECL# IN PROCEDURE DU_OPEN_DF
     16433**DCL
READ_FID.V.RES# IN PROCEDURE DU_OPEN_DF
     16431**DCL
READ_FID.V.SEED# IN PROCEDURE DU_OPEN_DF
     16449**DCL
READ_FID.V.SEEDSPECIFIED# IN PROCEDURE DU_OPEN_DF
     16440**DCL
READ_FID.V.SEQ# IN PROCEDURE DU_OPEN_DF
     16444**DCL
READ_FID.V.SEQCOL# IN PROCEDURE DU_OPEN_DF
     16444**DCL
READ_FID.V.SEQID# IN PROCEDURE DU_OPEN_DF
     16446**DCL
READ_FID.V.SETDCB# IN PROCEDURE DU_OPEN_DF
     16417**DCL
READ_FID.V.SHARE# IN PROCEDURE DU_OPEN_DF
     16421**DCL
READ_FID.V.SPANNED# IN PROCEDURE DU_OPEN_DF
     16429**DCL
READ_FID.V.SPARE# IN PROCEDURE DU_OPEN_DF
     16434**DCL
READ_FID.V.SRCHCOND IN PROCEDURE DU_OPEN_DF
     16422**DCL
READ_FID.V.SRCHCOND.ANYF# IN PROCEDURE DU_OPEN_DF
     16425**DCL
READ_FID.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_OPEN_DF
     16424**DCL
READ_FID.V.SRCHCOND.BAD# IN PROCEDURE DU_OPEN_DF
     16423**DCL
READ_FID.V.SRCHCOND.BUF# IN PROCEDURE DU_OPEN_DF
     16423**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:557  
READ_FID.V.SRCHCOND.DELF# IN PROCEDURE DU_OPEN_DF
     16422**DCL
READ_FID.V.SRCHCOND.NOLIST# IN PROCEDURE DU_OPEN_DF
     16422**DCL
READ_FID.V.SRCHCOND.QS# IN PROCEDURE DU_OPEN_DF
     16424**DCL
READ_FID.V.SRCHCOND.REV# IN PROCEDURE DU_OPEN_DF
     16425**DCL
READ_FID.V.TERMCONLGL# IN PROCEDURE DU_OPEN_DF
     16439**DCL
READ_FID.V.TYPE# IN PROCEDURE DU_OPEN_DF
     16428**DCL
READ_FID.V.UOPT# IN PROCEDURE DU_OPEN_DF
     16426**DCL
READ_FID.V.VOL# IN PROCEDURE DU_OPEN_DF
     16441**DCL
READ_FID.V.VOLACCESS# IN PROCEDURE DU_OPEN_DF
     16445**DCL
READ_FID.V.XONLY# IN PROCEDURE DU_OPEN_DF
     16437**DCL
READ_FID.V.XTEND# IN PROCEDURE DU_OPEN_DF
     16437**DCL
READ_FID.V.XTNSIZE# IN PROCEDURE DU_OPEN_DF
     16435**DCL
READ_FID.VIRTUAL_ IN PROCEDURE DU_OPEN_DF
     16408**DCL
READ_FID.V_ IN PROCEDURE DU_OPEN_DF
     16407**DCL
READ_FID.WINDOW_ IN PROCEDURE DU_OPEN_DF
     16410**DCL
SAVE_DECKFILE.ACCESS_ IN PROCEDURE DU_CLOSE_DF
     16572**DCL
SAVE_DECKFILE.ACCT_ IN PROCEDURE DU_CLOSE_DF
     16574**DCL
SAVE_DECKFILE.ACSVEH_ IN PROCEDURE DU_CLOSE_DF
     16573**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:558  
SAVE_DECKFILE.ALTKEYS_ IN PROCEDURE DU_CLOSE_DF
     16575**DCL
SAVE_DECKFILE.IFPARAM_ IN PROCEDURE DU_CLOSE_DF
     16575**DCL
SAVE_DECKFILE.INSTATTR_ IN PROCEDURE DU_CLOSE_DF
     16573**DCL
SAVE_DECKFILE.IRREC_ IN PROCEDURE DU_CLOSE_DF
     16570**DCL
SAVE_DECKFILE.NAME_ IN PROCEDURE DU_CLOSE_DF
     16571**DCL
SAVE_DECKFILE.PASS_ IN PROCEDURE DU_CLOSE_DF
     16572**DCL
SAVE_DECKFILE.PROCATTR_ IN PROCEDURE DU_CLOSE_DF
     16574**DCL
SAVE_DECKFILE.RECFIELD_ IN PROCEDURE DU_CLOSE_DF
     16571**DCL
SAVE_DECKFILE.UATTR_ IN PROCEDURE DU_CLOSE_DF
     16573**DCL
SAVE_DECKFILE.V.ALTBLD# IN PROCEDURE DU_CLOSE_DF
     16584**DCL
SAVE_DECKFILE.V.BUPM# IN PROCEDURE DU_CLOSE_DF
     16583**DCL
SAVE_DECKFILE.V.CLDCB# IN PROCEDURE DU_CLOSE_DF
     16583**DCL
SAVE_DECKFILE.V.CLINFO# IN PROCEDURE DU_CLOSE_DF
     16585**DCL
SAVE_DECKFILE.V.CLSYSID# IN PROCEDURE DU_CLOSE_DF
     16582**DCL
SAVE_DECKFILE.V.DCB# IN PROCEDURE DU_CLOSE_DF
     16576**DCL
SAVE_DECKFILE.V.DESC IN PROCEDURE DU_CLOSE_DF
     16580**DCL
SAVE_DECKFILE.V.DESC.ACTIVE# IN PROCEDURE DU_CLOSE_DF
     16582**DCL
SAVE_DECKFILE.V.DESC.ARCHIVE# IN PROCEDURE DU_CLOSE_DF
     16581**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:559  
SAVE_DECKFILE.V.DESC.BAD# IN PROCEDURE DU_CLOSE_DF
     16581**DCL
SAVE_DECKFILE.V.DESC.BUF# IN PROCEDURE DU_CLOSE_DF
     16581**DCL
SAVE_DECKFILE.V.DESC.BUPM# IN PROCEDURE DU_CLOSE_DF
     16581**DCL
SAVE_DECKFILE.V.DESC.DELF# IN PROCEDURE DU_CLOSE_DF
     16580**DCL
SAVE_DECKFILE.V.DESC.FETCH# IN PROCEDURE DU_CLOSE_DF
     16582**DCL
SAVE_DECKFILE.V.DESC.NBUF# IN PROCEDURE DU_CLOSE_DF
     16582**DCL
SAVE_DECKFILE.V.DESC.NOLIST# IN PROCEDURE DU_CLOSE_DF
     16581**DCL
SAVE_DECKFILE.V.DESC.ODSTOW# IN PROCEDURE DU_CLOSE_DF
     16581**DCL
SAVE_DECKFILE.V.DESC.QS# IN PROCEDURE DU_CLOSE_DF
     16581**DCL
SAVE_DECKFILE.V.DESC.TERMINATE# IN PROCEDURE DU_CLOSE_DF
     16582**DCL
SAVE_DECKFILE.V.DESC.TPB# IN PROCEDURE DU_CLOSE_DF
     16582**DCL
SAVE_DECKFILE.V.DISP# IN PROCEDURE DU_CLOSE_DF
     16579**DCL
SAVE_DECKFILE.V.EFTOPER IN PROCEDURE DU_CLOSE_DF
     16577**DCL
SAVE_DECKFILE.V.EFTOPER.ASTOW# IN PROCEDURE DU_CLOSE_DF
     16578**DCL
SAVE_DECKFILE.V.EFTOPER.BACKUP# IN PROCEDURE DU_CLOSE_DF
     16577**DCL
SAVE_DECKFILE.V.EFTOPER.DELFDE# IN PROCEDURE DU_CLOSE_DF
     16579**DCL
SAVE_DECKFILE.V.EFTOPER.ISTOW# IN PROCEDURE DU_CLOSE_DF
     16578**DCL
SAVE_DECKFILE.V.EFTOPER.UPDDESC# IN PROCEDURE DU_CLOSE_DF
     16578**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:560  
SAVE_DECKFILE.V.GHSTACS# IN PROCEDURE DU_CLOSE_DF
     16584**DCL
SAVE_DECKFILE.V.LRDL0# IN PROCEDURE DU_CLOSE_DF
     16586**DCL
SAVE_DECKFILE.V.LSLIDE# IN PROCEDURE DU_CLOSE_DF
     16586**DCL
SAVE_DECKFILE.V.NOMARKS# IN PROCEDURE DU_CLOSE_DF
     16584**DCL
SAVE_DECKFILE.V.OPER IN PROCEDURE DU_CLOSE_DF
     16576**DCL
SAVE_DECKFILE.V.OPER.CHGATT# IN PROCEDURE DU_CLOSE_DF
     16576**DCL
SAVE_DECKFILE.V.OPER.REBLD# IN PROCEDURE DU_CLOSE_DF
     16577**DCL
SAVE_DECKFILE.V.OPER.RELG# IN PROCEDURE DU_CLOSE_DF
     16576**DCL
SAVE_DECKFILE.V.POS# IN PROCEDURE DU_CLOSE_DF
     16583**DCL
SAVE_DECKFILE.V.SPARE# IN PROCEDURE DU_CLOSE_DF
     16586**DCL
SAVE_DECKFILE.V.TRUNCATE# IN PROCEDURE DU_CLOSE_DF
     16579**DCL
SAVE_DECKFILE.V_ IN PROCEDURE DU_CLOSE_DF
     16570**DCL
SEND_MSG.MESS_.BOUND IN PROCEDURE DU_ISSUE_OP_MSG
     17363**DCL
SEND_MSG.MESS_.BUF$ IN PROCEDURE DU_ISSUE_OP_MSG
     17364**DCL
SEND_MSG.REPLY_.BOUND IN PROCEDURE DU_ISSUE_OP_MSG
     17364**DCL
SEND_MSG.REPLY_.BUF$ IN PROCEDURE DU_ISSUE_OP_MSG
     17365**DCL
SEND_MSG.V.DCB# IN PROCEDURE DU_ISSUE_OP_MSG
     17368**DCL
SEND_MSG.V.EVENT# IN PROCEDURE DU_ISSUE_OP_MSG
     17366**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:561  
SEND_MSG.V.OCTYPE# IN PROCEDURE DU_ISSUE_OP_MSG
     17367**DCL
SEND_MSG.V.WAIT# IN PROCEDURE DU_ISSUE_OP_MSG
     17367**DCL
SEND_MSG.V.WHO# IN PROCEDURE DU_ISSUE_OP_MSG
     17368**DCL
SEND_MSG.V.WSN# IN PROCEDURE DU_ISSUE_OP_MSG
     17366**DCL
SEND_MSG.V_ IN PROCEDURE DU_ISSUE_OP_MSG
     17363**DCL
SETUP_IFAD_DISK.ACCT_ IN PROCEDURE DU_OPEN_IFAD
     14537**DCL
SETUP_IFAD_DISK.ASN_ IN PROCEDURE DU_OPEN_IFAD
     14539**DCL
SETUP_IFAD_DISK.NAME_ IN PROCEDURE DU_OPEN_IFAD
     14537**DCL
SETUP_IFAD_DISK.PASS_ IN PROCEDURE DU_OPEN_IFAD
     14537**DCL
SETUP_IFAD_DISK.RESULTS_ IN PROCEDURE DU_OPEN_IFAD
     14539**DCL
SETUP_IFAD_DISK.RES_ IN PROCEDURE DU_OPEN_IFAD
     14539**DCL
SETUP_IFAD_DISK.SN_ IN PROCEDURE DU_OPEN_IFAD
     14538**DCL
SETUP_IFAD_DISK.TEXTFID_ IN PROCEDURE DU_OPEN_IFAD
     14536**DCL
SETUP_IFAD_DISK.V.CHECK IN PROCEDURE DU_OPEN_IFAD
     14543**DCL
SETUP_IFAD_DISK.V.CHECK.AWODF# IN PROCEDURE DU_OPEN_IFAD
     14545**DCL
SETUP_IFAD_DISK.V.CHECK.CCHARS# IN PROCEDURE DU_OPEN_IFAD
     14543**DCL
SETUP_IFAD_DISK.V.CHECK.CPARTS# IN PROCEDURE DU_OPEN_IFAD
     14544**DCL
SETUP_IFAD_DISK.V.CHECK.PAOSF# IN PROCEDURE DU_OPEN_IFAD
     14544**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:562  
SETUP_IFAD_DISK.V.CHECK.PPOSF# IN PROCEDURE DU_OPEN_IFAD
     14544**DCL
SETUP_IFAD_DISK.V.SCRUB IN PROCEDURE DU_OPEN_IFAD
     14540**DCL
SETUP_IFAD_DISK.V.SCRUB.SACCT# IN PROCEDURE DU_OPEN_IFAD
     14540**DCL
SETUP_IFAD_DISK.V.SCRUB.SNAME# IN PROCEDURE DU_OPEN_IFAD
     14540**DCL
SETUP_IFAD_DISK.V.SCRUB.SPASS# IN PROCEDURE DU_OPEN_IFAD
     14541**DCL
SETUP_IFAD_DISK.V.SCRUB.SRES# IN PROCEDURE DU_OPEN_IFAD
     14542**DCL
SETUP_IFAD_DISK.V.SCRUB.SSN# IN PROCEDURE DU_OPEN_IFAD
     14541**DCL
SETUP_IFAD_DISK.V.SCRUB.SSPARE1# IN PROCEDURE DU_OPEN_IFAD
     14543**DCL
SETUP_IFAD_DISK.V.SCRUB.SSPARE2# IN PROCEDURE DU_OPEN_IFAD
     14542**DCL
SETUP_IFAD_DISK.V.SCRUB.SSPARE3# IN PROCEDURE DU_OPEN_IFAD
     14542**DCL
SETUP_IFAD_DISK.V.SCRUB.SWSN# IN PROCEDURE DU_OPEN_IFAD
     14541**DCL
SETUP_IFAD_DISK.V_ IN PROCEDURE DU_OPEN_IFAD
     14536**DCL
SETUP_IFAD_DISK.WSN_ IN PROCEDURE DU_OPEN_IFAD
     14538**DCL
SETUP_IFAD_IMU.ACCT_ IN PROCEDURE DU_OPEN_MCA
     15505**DCL
SETUP_IFAD_IMU.ASN_ IN PROCEDURE DU_OPEN_MCA
     15507**DCL
SETUP_IFAD_IMU.NAME_ IN PROCEDURE DU_OPEN_MCA
     15505**DCL
SETUP_IFAD_IMU.PASS_ IN PROCEDURE DU_OPEN_MCA
     15505**DCL
SETUP_IFAD_IMU.RESULTS_ IN PROCEDURE DU_OPEN_MCA
     15507**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:563  
SETUP_IFAD_IMU.RES_ IN PROCEDURE DU_OPEN_MCA
     15507**DCL
SETUP_IFAD_IMU.SN_ IN PROCEDURE DU_OPEN_MCA
     15506**DCL
SETUP_IFAD_IMU.TEXTFID_ IN PROCEDURE DU_OPEN_MCA
     15504**DCL
SETUP_IFAD_IMU.V.CHECK IN PROCEDURE DU_OPEN_MCA
     15511**DCL
SETUP_IFAD_IMU.V.CHECK.AWODF# IN PROCEDURE DU_OPEN_MCA
     15513**DCL
SETUP_IFAD_IMU.V.CHECK.CCHARS# IN PROCEDURE DU_OPEN_MCA
     15511**DCL
SETUP_IFAD_IMU.V.CHECK.CPARTS# IN PROCEDURE DU_OPEN_MCA
     15512**DCL
SETUP_IFAD_IMU.V.CHECK.PAOSF# IN PROCEDURE DU_OPEN_MCA
     15512**DCL
SETUP_IFAD_IMU.V.CHECK.PPOSF# IN PROCEDURE DU_OPEN_MCA
     15512**DCL
SETUP_IFAD_IMU.V.SCRUB IN PROCEDURE DU_OPEN_MCA
     15508**DCL
SETUP_IFAD_IMU.V.SCRUB.SACCT# IN PROCEDURE DU_OPEN_MCA
     15508**DCL
SETUP_IFAD_IMU.V.SCRUB.SNAME# IN PROCEDURE DU_OPEN_MCA
     15508**DCL
SETUP_IFAD_IMU.V.SCRUB.SPASS# IN PROCEDURE DU_OPEN_MCA
     15509**DCL
SETUP_IFAD_IMU.V.SCRUB.SRES# IN PROCEDURE DU_OPEN_MCA
     15510**DCL
SETUP_IFAD_IMU.V.SCRUB.SSN# IN PROCEDURE DU_OPEN_MCA
     15509**DCL
SETUP_IFAD_IMU.V.SCRUB.SSPARE1# IN PROCEDURE DU_OPEN_MCA
     15511**DCL
SETUP_IFAD_IMU.V.SCRUB.SSPARE2# IN PROCEDURE DU_OPEN_MCA
     15510**DCL
SETUP_IFAD_IMU.V.SCRUB.SSPARE3# IN PROCEDURE DU_OPEN_MCA
     15510**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:564  
SETUP_IFAD_IMU.V.SCRUB.SWSN# IN PROCEDURE DU_OPEN_MCA
     15509**DCL
SETUP_IFAD_IMU.V_ IN PROCEDURE DU_OPEN_MCA
     15504**DCL
SETUP_IFAD_IMU.WSN_ IN PROCEDURE DU_OPEN_MCA
     15506**DCL
SETUP_IFAD_TAPE.ACCT_ IN PROCEDURE DU_OPEN_IFAD
     14499**DCL
SETUP_IFAD_TAPE.ASN_ IN PROCEDURE DU_OPEN_IFAD
     14501**DCL
SETUP_IFAD_TAPE.NAME_ IN PROCEDURE DU_OPEN_IFAD
     14499**DCL
SETUP_IFAD_TAPE.PASS_ IN PROCEDURE DU_OPEN_IFAD
     14499**DCL
SETUP_IFAD_TAPE.RESULTS_ IN PROCEDURE DU_OPEN_IFAD
     14501**DCL
SETUP_IFAD_TAPE.RES_ IN PROCEDURE DU_OPEN_IFAD
     14501**DCL
SETUP_IFAD_TAPE.SN_ IN PROCEDURE DU_OPEN_IFAD
     14500**DCL
SETUP_IFAD_TAPE.TEXTFID_ IN PROCEDURE DU_OPEN_IFAD
     14498**DCL
SETUP_IFAD_TAPE.V.CHECK IN PROCEDURE DU_OPEN_IFAD
     14505**DCL
SETUP_IFAD_TAPE.V.CHECK.AWODF# IN PROCEDURE DU_OPEN_IFAD
     14507**DCL
SETUP_IFAD_TAPE.V.CHECK.CCHARS# IN PROCEDURE DU_OPEN_IFAD
     14505**DCL
SETUP_IFAD_TAPE.V.CHECK.CPARTS# IN PROCEDURE DU_OPEN_IFAD
     14506**DCL
SETUP_IFAD_TAPE.V.CHECK.PAOSF# IN PROCEDURE DU_OPEN_IFAD
     14506**DCL
SETUP_IFAD_TAPE.V.CHECK.PPOSF# IN PROCEDURE DU_OPEN_IFAD
     14506**DCL
SETUP_IFAD_TAPE.V.SCRUB IN PROCEDURE DU_OPEN_IFAD
     14502**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:565  
SETUP_IFAD_TAPE.V.SCRUB.SACCT# IN PROCEDURE DU_OPEN_IFAD
     14502**DCL
SETUP_IFAD_TAPE.V.SCRUB.SNAME# IN PROCEDURE DU_OPEN_IFAD
     14502**DCL
SETUP_IFAD_TAPE.V.SCRUB.SPASS# IN PROCEDURE DU_OPEN_IFAD
     14503**DCL
SETUP_IFAD_TAPE.V.SCRUB.SRES# IN PROCEDURE DU_OPEN_IFAD
     14504**DCL
SETUP_IFAD_TAPE.V.SCRUB.SSN# IN PROCEDURE DU_OPEN_IFAD
     14503**DCL
SETUP_IFAD_TAPE.V.SCRUB.SSPARE1# IN PROCEDURE DU_OPEN_IFAD
     14505**DCL
SETUP_IFAD_TAPE.V.SCRUB.SSPARE2# IN PROCEDURE DU_OPEN_IFAD
     14504**DCL
SETUP_IFAD_TAPE.V.SCRUB.SSPARE3# IN PROCEDURE DU_OPEN_IFAD
     14504**DCL
SETUP_IFAD_TAPE.V.SCRUB.SWSN# IN PROCEDURE DU_OPEN_IFAD
     14503**DCL
SETUP_IFAD_TAPE.V_ IN PROCEDURE DU_OPEN_IFAD
     14498**DCL
SETUP_IFAD_TAPE.WSN_ IN PROCEDURE DU_OPEN_IFAD
     14500**DCL
SET_PROMPT.STATION_ IN PROCEDURE DU_SET_PROMPT
     18057**DCL
SET_PROMPT.V.DCB# IN PROCEDURE DU_SET_PROMPT
     18061**DCL
SET_PROMPT.V.DVBYTE# IN PROCEDURE DU_SET_PROMPT
     18061**DCL
SET_PROMPT.V.DVBYTE#.BIN# IN PROCEDURE DU_SET_PROMPT
     18062**DCL
SET_PROMPT.V.DVBYTE#.TRANS# IN PROCEDURE DU_SET_PROMPT
     18062**DCL
SET_PROMPT.V.DVBYTE#.VFC# IN PROCEDURE DU_SET_PROMPT
     18062**DCL
SET_PROMPT.V_ IN PROCEDURE DU_SET_PROMPT
     18055**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:566  
STORE_WHEN.DATE_.BOUND IN PROCEDURE DU_UPDATE_LOG
     18244**DCL
STORE_WHEN.DATE_.DATE$ IN PROCEDURE DU_UPDATE_LOG
     18245**DCL
STORE_WHEN.DAY_ IN PROCEDURE DU_UPDATE_LOG
     18247**DCL
STORE_WHEN.TIME_.BOUND IN PROCEDURE DU_UPDATE_LOG
     18246**DCL
STORE_WHEN.TIME_.TIME$ IN PROCEDURE DU_UPDATE_LOG
     18247**DCL
STORE_WHEN.TSTAMP_ IN PROCEDURE DU_UPDATE_LOG
     18247**DCL
STORE_WHEN.V.DEST# IN PROCEDURE DU_UPDATE_LOG
     18248**DCL
STORE_WHEN.V.DEST_BASIS# IN PROCEDURE DU_UPDATE_LOG
     18249**DCL
STORE_WHEN.V.SOURCE# IN PROCEDURE DU_UPDATE_LOG
     18248**DCL
STORE_WHEN.V.SOURCE_BASIS# IN PROCEDURE DU_UPDATE_LOG
     18249**DCL
STORE_WHEN.V_ IN PROCEDURE DU_UPDATE_LOG
     18244**DCL
SYSTEM_ERRMSG.ALTCODE_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17879**DCL
SYSTEM_ERRMSG.CODE_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17875**DCL
SYSTEM_ERRMSG.FIELD1_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17877**DCL
SYSTEM_ERRMSG.FIELD2_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17878**DCL
SYSTEM_ERRMSG.FIELD3_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17878**DCL
SYSTEM_ERRMSG.FILEACCT_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17876**DCL
SYSTEM_ERRMSG.FILENAME_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17876**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:567  
SYSTEM_ERRMSG.FILEPASS_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17877**DCL
SYSTEM_ERRMSG.RESULTS_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17878**DCL
SYSTEM_ERRMSG.V.INCLCODE# IN PROCEDURE DU_SYSTEM_ERRMSG
     17884**DCL
SYSTEM_ERRMSG.V.L6_ALTCODE# IN PROCEDURE DU_SYSTEM_ERRMSG
     17887**DCL
SYSTEM_ERRMSG.V.L6_CODE# IN PROCEDURE DU_SYSTEM_ERRMSG
     17887**DCL
SYSTEM_ERRMSG.V.LANG# IN PROCEDURE DU_SYSTEM_ERRMSG
     17888**DCL
SYSTEM_ERRMSG.V.LEAVETOKEN# IN PROCEDURE DU_SYSTEM_ERRMSG
     17882**DCL
SYSTEM_ERRMSG.V.MY_LANG# IN PROCEDURE DU_SYSTEM_ERRMSG
     17888**DCL
SYSTEM_ERRMSG.V.NREAD# IN PROCEDURE DU_SYSTEM_ERRMSG
     17885**DCL
SYSTEM_ERRMSG.V.OUTDCB1# IN PROCEDURE DU_SYSTEM_ERRMSG
     17880**DCL
SYSTEM_ERRMSG.V.OUTDCB2# IN PROCEDURE DU_SYSTEM_ERRMSG
     17880**DCL
SYSTEM_ERRMSG.V.POINTER# IN PROCEDURE DU_SYSTEM_ERRMSG
     17885**DCL
SYSTEM_ERRMSG.V.SOURCE# IN PROCEDURE DU_SYSTEM_ERRMSG
     17886**DCL
SYSTEM_ERRMSG.V.SUBAC# IN PROCEDURE DU_SYSTEM_ERRMSG
     17883**DCL
SYSTEM_ERRMSG.V.SUBDC# IN PROCEDURE DU_SYSTEM_ERRMSG
     17883**DCL
SYSTEM_ERRMSG.V.SUBFILE# IN PROCEDURE DU_SYSTEM_ERRMSG
     17882**DCL
SYSTEM_ERRMSG.V.SUBFN# IN PROCEDURE DU_SYSTEM_ERRMSG
     17882**DCL
SYSTEM_ERRMSG.V.SUBLANG# IN PROCEDURE DU_SYSTEM_ERRMSG
     17886**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:568  
SYSTEM_ERRMSG.V.SUBMESS# IN PROCEDURE DU_SYSTEM_ERRMSG
     17885**DCL
SYSTEM_ERRMSG.V.SUBSN# IN PROCEDURE DU_SYSTEM_ERRMSG
     17883**DCL
SYSTEM_ERRMSG.V.TYC# IN PROCEDURE DU_SYSTEM_ERRMSG
     17884**DCL
SYSTEM_ERRMSG.V.VFC# IN PROCEDURE DU_SYSTEM_ERRMSG
     17881**DCL
SYSTEM_ERRMSG.V_ IN PROCEDURE DU_SYSTEM_ERRMSG
     17875**DCL
TD$HEAD IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15123**DCL
TD$HEAD.APMPC_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15132**DCL
TD$HEAD.AP_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15152**DCL
TD$HEAD.CONSOLE_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15138**DCL
TD$HEAD.CP_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15144**DCL
TD$HEAD.CR_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15142**DCL
TD$HEAD.DEVNAME IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15156**DCL
TD$HEAD.DISKMPC_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15130**DCL
TD$HEAD.DP_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15146**DCL
TD$HEAD.FEP_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15136**DCL
TD$HEAD.IOM_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15124**DCL
TD$HEAD.LP_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15140**DCL
TD$HEAD.MT_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15148**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:569  
TD$HEAD.NUMAPMPCS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15133**DCL
TD$HEAD.NUMAPS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15153**DCL
TD$HEAD.NUMCONSOLES IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15139**DCL
TD$HEAD.NUMCPS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15145**DCL
TD$HEAD.NUMCRS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15143**DCL
TD$HEAD.NUMDISKMPCS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15131**DCL
TD$HEAD.NUMDPS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15147**DCL
TD$HEAD.NUMFEPS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15137**DCL
TD$HEAD.NUMLPS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15141**DCL
TD$HEAD.NUMMTS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15149**DCL
TD$HEAD.NUMODS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15155**DCL
TD$HEAD.NUMOPCS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15135**DCL
TD$HEAD.NUMTAPEMPCS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15129**DCL
TD$HEAD.NUMUNITMPCS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15127**DCL
TD$HEAD.NUMXXS IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15151**DCL
TD$HEAD.OD_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15154**DCL
TD$HEAD.OPC_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15134**DCL
TD$HEAD.TAPEMPC_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15128**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:570  
TD$HEAD.UNITMPC_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15126**DCL
TD$HEAD.XX_INDX IN PROCEDURE DU_VALIDATE_IMU_NUMBER
     15150**DCL
TOU$DU
       105**PROC
TOU$DU_CLOSE_DF
     13847**ENTRY
TOU$DU_CLOSE_IFAD
     13725**ENTRY
TOU$DU_CLOSE_MCA
     13782**ENTRY
TOU$DU_FREE_DATA_SEGMENT
     14043**ENTRY
TOU$DU_GET_DATA_SEGMENT
     14028**ENTRY
TOU$DU_GET_SITE
     14073**ENTRY
TOU$DU_MCA_RESET_STATUS
     13797**ENTRY
TOU$DU_NEXT_IFAD
     13711**ENTRY
TOU$DU_OPEN_DF
     13828**ENTRY
TOU$DU_OPEN_IFAD
     13694**ENTRY
TOU$DU_OPEN_MCA
     13767**ENTRY
TOU$DU_OPERATOR_TEXT
     13969**ENTRY
TOU$DU_OPERATOR_WRITE
     13952**ENTRY
TOU$DU_PRINTER_OVERWRITE
     13937**ENTRY
TOU$DU_PRINTER_WRITE
     13923**ENTRY
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:571  
TOU$DU_SET_DF_FID
     13810**ENTRY
TOU$DU_SET_EDIT_PROMPT
     13999**ENTRY
TOU$DU_SET_IFAD_FID
     13674**ENTRY
TOU$DU_SET_LO_FID
     13872**ENTRY
TOU$DU_SET_MCA
     13740**ENTRY
TOU$DU_SET_PROMPT
     14013**ENTRY
TOU$DU_SYSTEM_ERRMSG
     13985**ENTRY
TOU$DU_UPDATE_LOG
     14057**ENTRY
TOU$DU_USER_READ
     13893**ENTRY
TOU$DU_USER_WRITE
     13908**ENTRY
TO_PRINTER.BUF_ IN PROCEDURE DU_HEADER_WRITE
     17605**DCL
TO_PRINTER.BUF_.BOUND IN PROCEDURE DU_HEADER_WRITE
     17605**DCL
TO_PRINTER.BUF_.BUF$ IN PROCEDURE DU_HEADER_WRITE
     17607**DCL
TO_PRINTER.IDBUF_ IN PROCEDURE DU_HEADER_WRITE
     17607**DCL
TO_PRINTER.KEY_ IN PROCEDURE DU_HEADER_WRITE
     17605**DCL
TO_PRINTER.V.DCB# IN PROCEDURE DU_HEADER_WRITE
     17608**DCL
TO_PRINTER.V.DVBYTE IN PROCEDURE DU_HEADER_WRITE
     17613**DCL
TO_PRINTER.V.DVBYTE.BIN# IN PROCEDURE DU_HEADER_WRITE
     17614**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:572  
TO_PRINTER.V.DVBYTE.BP# IN PROCEDURE DU_HEADER_WRITE
     17614**DCL
TO_PRINTER.V.DVBYTE.CONT# IN PROCEDURE DU_HEADER_WRITE
     17616**DCL
TO_PRINTER.V.DVBYTE.NODAT# IN PROCEDURE DU_HEADER_WRITE
     17615**DCL
TO_PRINTER.V.DVBYTE.REREAD# IN PROCEDURE DU_HEADER_WRITE
     17614**DCL
TO_PRINTER.V.DVBYTE.RRR# IN PROCEDURE DU_HEADER_WRITE
     17615**DCL
TO_PRINTER.V.DVBYTE.TOP# IN PROCEDURE DU_HEADER_WRITE
     17613**DCL
TO_PRINTER.V.DVBYTE.TRANS# IN PROCEDURE DU_HEADER_WRITE
     17615**DCL
TO_PRINTER.V.EVENT# IN PROCEDURE DU_HEADER_WRITE
     17613**DCL
TO_PRINTER.V.FULL# IN PROCEDURE DU_HEADER_WRITE
     17610**DCL
TO_PRINTER.V.ID# IN PROCEDURE DU_HEADER_WRITE
     17609**DCL
TO_PRINTER.V.IOERROK# IN PROCEDURE DU_HEADER_WRITE
     17612**DCL
TO_PRINTER.V.KEYTYPE# IN PROCEDURE DU_HEADER_WRITE
     17612**DCL
TO_PRINTER.V.NEWKEY# IN PROCEDURE DU_HEADER_WRITE
     17611**DCL
TO_PRINTER.V.NOTIME# IN PROCEDURE DU_HEADER_WRITE
     17611**DCL
TO_PRINTER.V.ODFNC# IN PROCEDURE DU_HEADER_WRITE
     17617**DCL
TO_PRINTER.V.ONEWKEY# IN PROCEDURE DU_HEADER_WRITE
     17610**DCL
TO_PRINTER.V.REWRITE# IN PROCEDURE DU_HEADER_WRITE
     17611**DCL
TO_PRINTER.V.SEED# IN PROCEDURE DU_HEADER_WRITE
     17613**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:573  
TO_PRINTER.V.WAIT# IN PROCEDURE DU_HEADER_WRITE
     17608**DCL
TO_PRINTER.V_ IN PROCEDURE DU_HEADER_WRITE
     17605**DCL
TO_PRINTER.BUF_ IN PROCEDURE DU_PRINTER_OVERWRITE
     17105**DCL
TO_PRINTER.BUF_.BOUND IN PROCEDURE DU_PRINTER_OVERWRITE
     17105**DCL
TO_PRINTER.BUF_.BUF$ IN PROCEDURE DU_PRINTER_OVERWRITE
     17107**DCL
TO_PRINTER.IDBUF_ IN PROCEDURE DU_PRINTER_OVERWRITE
     17107**DCL
TO_PRINTER.KEY_ IN PROCEDURE DU_PRINTER_OVERWRITE
     17105**DCL
TO_PRINTER.V.DCB# IN PROCEDURE DU_PRINTER_OVERWRITE
     17108**DCL
TO_PRINTER.V.DVBYTE IN PROCEDURE DU_PRINTER_OVERWRITE
     17113**DCL
TO_PRINTER.V.DVBYTE.BIN# IN PROCEDURE DU_PRINTER_OVERWRITE
     17114**DCL
TO_PRINTER.V.DVBYTE.BP# IN PROCEDURE DU_PRINTER_OVERWRITE
     17114**DCL
TO_PRINTER.V.DVBYTE.CONT# IN PROCEDURE DU_PRINTER_OVERWRITE
     17116**DCL
TO_PRINTER.V.DVBYTE.NODAT# IN PROCEDURE DU_PRINTER_OVERWRITE
     17115**DCL
TO_PRINTER.V.DVBYTE.REREAD# IN PROCEDURE DU_PRINTER_OVERWRITE
     17114**DCL
TO_PRINTER.V.DVBYTE.RRR# IN PROCEDURE DU_PRINTER_OVERWRITE
     17115**DCL
TO_PRINTER.V.DVBYTE.TOP# IN PROCEDURE DU_PRINTER_OVERWRITE
     17113**DCL
TO_PRINTER.V.DVBYTE.TRANS# IN PROCEDURE DU_PRINTER_OVERWRITE
     17115**DCL
TO_PRINTER.V.EVENT# IN PROCEDURE DU_PRINTER_OVERWRITE
     17113**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:574  
TO_PRINTER.V.FULL# IN PROCEDURE DU_PRINTER_OVERWRITE
     17110**DCL
TO_PRINTER.V.ID# IN PROCEDURE DU_PRINTER_OVERWRITE
     17109**DCL
TO_PRINTER.V.IOERROK# IN PROCEDURE DU_PRINTER_OVERWRITE
     17112**DCL
TO_PRINTER.V.KEYTYPE# IN PROCEDURE DU_PRINTER_OVERWRITE
     17112**DCL
TO_PRINTER.V.NEWKEY# IN PROCEDURE DU_PRINTER_OVERWRITE
     17111**DCL
TO_PRINTER.V.NOTIME# IN PROCEDURE DU_PRINTER_OVERWRITE
     17111**DCL
TO_PRINTER.V.ODFNC# IN PROCEDURE DU_PRINTER_OVERWRITE
     17117**DCL
TO_PRINTER.V.ONEWKEY# IN PROCEDURE DU_PRINTER_OVERWRITE
     17110**DCL
TO_PRINTER.V.REWRITE# IN PROCEDURE DU_PRINTER_OVERWRITE
     17111**DCL
TO_PRINTER.V.SEED# IN PROCEDURE DU_PRINTER_OVERWRITE
     17113**DCL
TO_PRINTER.V.WAIT# IN PROCEDURE DU_PRINTER_OVERWRITE
     17108**DCL
TO_PRINTER.V_ IN PROCEDURE DU_PRINTER_OVERWRITE
     17105**DCL
TO_PRINTER.BUF_ IN PROCEDURE DU_PRINTER_WRITE
     16998**DCL
TO_PRINTER.BUF_.BOUND IN PROCEDURE DU_PRINTER_WRITE
     16998**DCL
TO_PRINTER.BUF_.BUF$ IN PROCEDURE DU_PRINTER_WRITE
     17000**DCL
TO_PRINTER.IDBUF_ IN PROCEDURE DU_PRINTER_WRITE
     17000**DCL
TO_PRINTER.KEY_ IN PROCEDURE DU_PRINTER_WRITE
     16998**DCL
TO_PRINTER.V.DCB# IN PROCEDURE DU_PRINTER_WRITE
     17001**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:575  
TO_PRINTER.V.DVBYTE IN PROCEDURE DU_PRINTER_WRITE
     17006**DCL
TO_PRINTER.V.DVBYTE.BIN# IN PROCEDURE DU_PRINTER_WRITE
     17007**DCL
TO_PRINTER.V.DVBYTE.BP# IN PROCEDURE DU_PRINTER_WRITE
     17007**DCL
TO_PRINTER.V.DVBYTE.CONT# IN PROCEDURE DU_PRINTER_WRITE
     17009**DCL
TO_PRINTER.V.DVBYTE.NODAT# IN PROCEDURE DU_PRINTER_WRITE
     17008**DCL
TO_PRINTER.V.DVBYTE.REREAD# IN PROCEDURE DU_PRINTER_WRITE
     17007**DCL
TO_PRINTER.V.DVBYTE.RRR# IN PROCEDURE DU_PRINTER_WRITE
     17008**DCL
TO_PRINTER.V.DVBYTE.TOP# IN PROCEDURE DU_PRINTER_WRITE
     17006**DCL
TO_PRINTER.V.DVBYTE.TRANS# IN PROCEDURE DU_PRINTER_WRITE
     17008**DCL
TO_PRINTER.V.EVENT# IN PROCEDURE DU_PRINTER_WRITE
     17006**DCL
TO_PRINTER.V.FULL# IN PROCEDURE DU_PRINTER_WRITE
     17003**DCL
TO_PRINTER.V.ID# IN PROCEDURE DU_PRINTER_WRITE
     17002**DCL
TO_PRINTER.V.IOERROK# IN PROCEDURE DU_PRINTER_WRITE
     17005**DCL
TO_PRINTER.V.KEYTYPE# IN PROCEDURE DU_PRINTER_WRITE
     17005**DCL
TO_PRINTER.V.NEWKEY# IN PROCEDURE DU_PRINTER_WRITE
     17004**DCL
TO_PRINTER.V.NOTIME# IN PROCEDURE DU_PRINTER_WRITE
     17004**DCL
TO_PRINTER.V.ODFNC# IN PROCEDURE DU_PRINTER_WRITE
     17010**DCL
TO_PRINTER.V.ONEWKEY# IN PROCEDURE DU_PRINTER_WRITE
     17003**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:576  
TO_PRINTER.V.REWRITE# IN PROCEDURE DU_PRINTER_WRITE
     17004**DCL
TO_PRINTER.V.SEED# IN PROCEDURE DU_PRINTER_WRITE
     17006**DCL
TO_PRINTER.V.WAIT# IN PROCEDURE DU_PRINTER_WRITE
     17001**DCL
TO_PRINTER.V_ IN PROCEDURE DU_PRINTER_WRITE
     16998**DCL
TO_USER.BUF_.BOUND IN PROCEDURE DU_USER_WRITE
     16915**DCL
TO_USER.BUF_.BUF$ IN PROCEDURE DU_USER_WRITE
     16917**DCL
TO_USER.IDBUF_ IN PROCEDURE DU_USER_WRITE
     16917**DCL
TO_USER.KEY_ IN PROCEDURE DU_USER_WRITE
     16915**DCL
TO_USER.V.DCB# IN PROCEDURE DU_USER_WRITE
     16918**DCL
TO_USER.V.DVBYTE IN PROCEDURE DU_USER_WRITE
     16923**DCL
TO_USER.V.DVBYTE.BIN# IN PROCEDURE DU_USER_WRITE
     16924**DCL
TO_USER.V.DVBYTE.BP# IN PROCEDURE DU_USER_WRITE
     16924**DCL
TO_USER.V.DVBYTE.CONT# IN PROCEDURE DU_USER_WRITE
     16926**DCL
TO_USER.V.DVBYTE.NODAT# IN PROCEDURE DU_USER_WRITE
     16925**DCL
TO_USER.V.DVBYTE.REREAD# IN PROCEDURE DU_USER_WRITE
     16924**DCL
TO_USER.V.DVBYTE.RRR# IN PROCEDURE DU_USER_WRITE
     16925**DCL
TO_USER.V.DVBYTE.TOP# IN PROCEDURE DU_USER_WRITE
     16923**DCL
TO_USER.V.DVBYTE.TRANS# IN PROCEDURE DU_USER_WRITE
     16925**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:577  
TO_USER.V.EVENT# IN PROCEDURE DU_USER_WRITE
     16923**DCL
TO_USER.V.FULL# IN PROCEDURE DU_USER_WRITE
     16920**DCL
TO_USER.V.ID# IN PROCEDURE DU_USER_WRITE
     16919**DCL
TO_USER.V.IOERROK# IN PROCEDURE DU_USER_WRITE
     16922**DCL
TO_USER.V.KEYTYPE# IN PROCEDURE DU_USER_WRITE
     16922**DCL
TO_USER.V.NEWKEY# IN PROCEDURE DU_USER_WRITE
     16921**DCL
TO_USER.V.NOTIME# IN PROCEDURE DU_USER_WRITE
     16921**DCL
TO_USER.V.ODFNC# IN PROCEDURE DU_USER_WRITE
     16927**DCL
TO_USER.V.ONEWKEY# IN PROCEDURE DU_USER_WRITE
     16920**DCL
TO_USER.V.REWRITE# IN PROCEDURE DU_USER_WRITE
     16921**DCL
TO_USER.V.SEED# IN PROCEDURE DU_USER_WRITE
     16923**DCL
TO_USER.V.WAIT# IN PROCEDURE DU_USER_WRITE
     16918**DCL
TO_USER.V_ IN PROCEDURE DU_USER_WRITE
     16915**DCL
UNFID_DCB.ACCT_ IN PROCEDURE DU_UNFID_DCB
     16776**DCL
UNFID_DCB.ASN_ IN PROCEDURE DU_UNFID_DCB
     16778**DCL
UNFID_DCB.NAME_ IN PROCEDURE DU_UNFID_DCB
     16776**DCL
UNFID_DCB.PASS_ IN PROCEDURE DU_UNFID_DCB
     16776**DCL
UNFID_DCB.RES_ IN PROCEDURE DU_UNFID_DCB
     16778**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:578  
UNFID_DCB.SN_ IN PROCEDURE DU_UNFID_DCB
     16777**DCL
UNFID_DCB.V.FORCE# IN PROCEDURE DU_UNFID_DCB
     16779**DCL
UNFID_DCB.V_ IN PROCEDURE DU_UNFID_DCB
     16775**DCL
UNFID_DCB.WSN_ IN PROCEDURE DU_UNFID_DCB
     16777**DCL
UPDATE_FID.ACCESS_ IN PROCEDURE DU_OPEN_DF
     16288**DCL
UPDATE_FID.ACCT_ IN PROCEDURE DU_OPEN_DF
     16290**DCL
UPDATE_FID.FORM_ IN PROCEDURE DU_OPEN_DF
     16294**DCL
UPDATE_FID.FPARAM_ IN PROCEDURE DU_OPEN_DF
     16291**DCL
UPDATE_FID.FPRG_ IN PROCEDURE DU_OPEN_DF
     16295**DCL
UPDATE_FID.IFPARAM_ IN PROCEDURE DU_OPEN_DF
     16291**DCL
UPDATE_FID.INSTATTR_ IN PROCEDURE DU_OPEN_DF
     16290**DCL
UPDATE_FID.IRKEYS_ IN PROCEDURE DU_OPEN_DF
     16295**DCL
UPDATE_FID.IRREC_ IN PROCEDURE DU_OPEN_DF
     16294**DCL
UPDATE_FID.NAME_ IN PROCEDURE DU_OPEN_DF
     16287**DCL
UPDATE_FID.NODENAME_ IN PROCEDURE DU_OPEN_DF
     16292**DCL
UPDATE_FID.PASS_ IN PROCEDURE DU_OPEN_DF
     16288**DCL
UPDATE_FID.PROCATTR_ IN PROCEDURE DU_OPEN_DF
     16290**DCL
UPDATE_FID.RECFIELD_ IN PROCEDURE DU_OPEN_DF
     16293**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:579  
UPDATE_FID.SETSTA_ IN PROCEDURE DU_OPEN_DF
     16287**DCL
UPDATE_FID.SN_ IN PROCEDURE DU_OPEN_DF
     16286**DCL
UPDATE_FID.UATTR_ IN PROCEDURE DU_OPEN_DF
     16289**DCL
UPDATE_FID.V.ACS# IN PROCEDURE DU_OPEN_DF
     16306**DCL
UPDATE_FID.V.ANSISPANSEQ# IN PROCEDURE DU_OPEN_DF
     16319**DCL
UPDATE_FID.V.ASN# IN PROCEDURE DU_OPEN_DF
     16305**DCL
UPDATE_FID.V.ATTR# IN PROCEDURE DU_OPEN_DF
     16322**DCL
UPDATE_FID.V.AU# IN PROCEDURE DU_OPEN_DF
     16324**DCL
UPDATE_FID.V.BLKL# IN PROCEDURE DU_OPEN_DF
     16312**DCL
UPDATE_FID.V.BLOCKED# IN PROCEDURE DU_OPEN_DF
     16307**DCL
UPDATE_FID.V.BUPM# IN PROCEDURE DU_OPEN_DF
     16308**DCL
UPDATE_FID.V.CHAIN# IN PROCEDURE DU_OPEN_DF
     16321**DCL
UPDATE_FID.V.CNVRT# IN PROCEDURE DU_OPEN_DF
     16315**DCL
UPDATE_FID.V.COMP# IN PROCEDURE DU_OPEN_DF
     16307**DCL
UPDATE_FID.V.COPIES# IN PROCEDURE DU_OPEN_DF
     16327**DCL
UPDATE_FID.V.CTG# IN PROCEDURE DU_OPEN_DF
     16299**DCL
UPDATE_FID.V.CVOL# IN PROCEDURE DU_OPEN_DF
     16300**DCL
UPDATE_FID.V.DBGDCBNO# IN PROCEDURE DU_OPEN_DF
     16326**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:580  
UPDATE_FID.V.DBGSYSID# IN PROCEDURE DU_OPEN_DF
     16326**DCL
UPDATE_FID.V.DCB# IN PROCEDURE DU_OPEN_DF
     16295**DCL
UPDATE_FID.V.DCBCONLGL# IN PROCEDURE DU_OPEN_DF
     16317**DCL
UPDATE_FID.V.DELETE# IN PROCEDURE DU_OPEN_DF
     16297**DCL
UPDATE_FID.V.DENSITY# IN PROCEDURE DU_OPEN_DF
     16327**DCL
UPDATE_FID.V.DISP# IN PROCEDURE DU_OPEN_DF
     16311**DCL
UPDATE_FID.V.DVFC# IN PROCEDURE DU_OPEN_DF
     16322**DCL
UPDATE_FID.V.EBCDIC# IN PROCEDURE DU_OPEN_DF
     16315**DCL
UPDATE_FID.V.EVENT# IN PROCEDURE DU_OPEN_DF
     16325**DCL
UPDATE_FID.V.EXIST# IN PROCEDURE DU_OPEN_DF
     16299**DCL
UPDATE_FID.V.EXPIRE# IN PROCEDURE DU_OPEN_DF
     16315**DCL
UPDATE_FID.V.FINDPOS# IN PROCEDURE DU_OPEN_DF
     16301**DCL
UPDATE_FID.V.FUN# IN PROCEDURE DU_OPEN_DF
     16305**DCL
UPDATE_FID.V.GHSTACS# IN PROCEDURE DU_OPEN_DF
     16310**DCL
UPDATE_FID.V.IGNOREFSN# IN PROCEDURE DU_OPEN_DF
     16319**DCL
UPDATE_FID.V.INITZ IN PROCEDURE DU_OPEN_DF
     16296**DCL
UPDATE_FID.V.INITZ.REASSIGN# IN PROCEDURE DU_OPEN_DF
     16296**DCL
UPDATE_FID.V.INITZ.SCRUB# IN PROCEDURE DU_OPEN_DF
     16296**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:581  
UPDATE_FID.V.IOERROK# IN PROCEDURE DU_OPEN_DF
     16317**DCL
UPDATE_FID.V.IXTNSIZE# IN PROCEDURE DU_OPEN_DF
     16314**DCL
UPDATE_FID.V.JRNLBYPASS# IN PROCEDURE DU_OPEN_DF
     16309**DCL
UPDATE_FID.V.KEYL# IN PROCEDURE DU_OPEN_DF
     16311**DCL
UPDATE_FID.V.KEYTYPE# IN PROCEDURE DU_OPEN_DF
     16321**DCL
UPDATE_FID.V.KEYX# IN PROCEDURE DU_OPEN_DF
     16310**DCL
UPDATE_FID.V.LINES# IN PROCEDURE DU_OPEN_DF
     16325**DCL
UPDATE_FID.V.LOAD# IN PROCEDURE DU_OPEN_DF
     16309**DCL
UPDATE_FID.V.LRDL0# IN PROCEDURE DU_OPEN_DF
     16313**DCL
UPDATE_FID.V.LSLIDE# IN PROCEDURE DU_OPEN_DF
     16312**DCL
UPDATE_FID.V.LSTAOR# IN PROCEDURE DU_OPEN_DF
     16309**DCL
UPDATE_FID.V.MAXVOL# IN PROCEDURE DU_OPEN_DF
     16321**DCL
UPDATE_FID.V.NRECS# IN PROCEDURE DU_OPEN_DF
     16314**DCL
UPDATE_FID.V.OPER IN PROCEDURE DU_OPEN_DF
     16297**DCL
UPDATE_FID.V.OPER.MNTONLY# IN PROCEDURE DU_OPEN_DF
     16299**DCL
UPDATE_FID.V.OPER.NXTA# IN PROCEDURE DU_OPEN_DF
     16298**DCL
UPDATE_FID.V.OPER.NXTF# IN PROCEDURE DU_OPEN_DF
     16298**DCL
UPDATE_FID.V.OPER.TEST# IN PROCEDURE DU_OPEN_DF
     16297**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:582  
UPDATE_FID.V.OPER.THISF# IN PROCEDURE DU_OPEN_DF
     16298**DCL
UPDATE_FID.V.ORG# IN PROCEDURE DU_OPEN_DF
     16306**DCL
UPDATE_FID.V.OVERFDE# IN PROCEDURE DU_OPEN_DF
     16318**DCL
UPDATE_FID.V.QISS# IN PROCEDURE DU_OPEN_DF
     16324**DCL
UPDATE_FID.V.RECL# IN PROCEDURE DU_OPEN_DF
     16312**DCL
UPDATE_FID.V.RES# IN PROCEDURE DU_OPEN_DF
     16310**DCL
UPDATE_FID.V.SEED# IN PROCEDURE DU_OPEN_DF
     16328**DCL
UPDATE_FID.V.SEEDSPECIFIED# IN PROCEDURE DU_OPEN_DF
     16319**DCL
UPDATE_FID.V.SEQ# IN PROCEDURE DU_OPEN_DF
     16323**DCL
UPDATE_FID.V.SEQCOL# IN PROCEDURE DU_OPEN_DF
     16323**DCL
UPDATE_FID.V.SEQID# IN PROCEDURE DU_OPEN_DF
     16325**DCL
UPDATE_FID.V.SETDCB# IN PROCEDURE DU_OPEN_DF
     16296**DCL
UPDATE_FID.V.SHARE# IN PROCEDURE DU_OPEN_DF
     16300**DCL
UPDATE_FID.V.SPANNED# IN PROCEDURE DU_OPEN_DF
     16308**DCL
UPDATE_FID.V.SPARE# IN PROCEDURE DU_OPEN_DF
     16313**DCL
UPDATE_FID.V.SRCHCOND IN PROCEDURE DU_OPEN_DF
     16301**DCL
UPDATE_FID.V.SRCHCOND.ANYF# IN PROCEDURE DU_OPEN_DF
     16304**DCL
UPDATE_FID.V.SRCHCOND.ARCHIVE# IN PROCEDURE DU_OPEN_DF
     16303**DCL
PL6.E3A0      #001=TOU$DU File=TOU$DU.:E05TSI                                    WED 07/30/97 06:42 Page:583  
UPDATE_FID.V.SRCHCOND.BAD# IN PROCEDURE DU_OPEN_DF
     16302**DCL
UPDATE_FID.V.SRCHCOND.BUF# IN PROCEDURE DU_OPEN_DF
     16302**DCL
UPDATE_FID.V.SRCHCOND.DELF# IN PROCEDURE DU_OPEN_DF
     16301**DCL
UPDATE_FID.V.SRCHCOND.NOLIST# IN PROCEDURE DU_OPEN_DF
     16301**DCL
UPDATE_FID.V.SRCHCOND.QS# IN PROCEDURE DU_OPEN_DF
     16303**DCL
UPDATE_FID.V.SRCHCOND.REV# IN PROCEDURE DU_OPEN_DF
     16304**DCL
UPDATE_FID.V.TERMCONLGL# IN PROCEDURE DU_OPEN_DF
     16318**DCL
UPDATE_FID.V.TYPE# IN PROCEDURE DU_OPEN_DF
     16307**DCL
UPDATE_FID.V.UOPT# IN PROCEDURE DU_OPEN_DF
     16305**DCL
UPDATE_FID.V.VOL# IN PROCEDURE DU_OPEN_DF
     16320**DCL
UPDATE_FID.V.VOLACCESS# IN PROCEDURE DU_OPEN_DF
     16324**DCL
UPDATE_FID.V.XONLY# IN PROCEDURE DU_OPEN_DF
     16316**DCL
UPDATE_FID.V.XTEND# IN PROCEDURE DU_OPEN_DF
     16316**DCL
UPDATE_FID.V.XTNSIZE# IN PROCEDURE DU_OPEN_DF
     16314**DCL
UPDATE_FID.VIRTUAL_ IN PROCEDURE DU_OPEN_DF
     16287**DCL
UPDATE_FID.V_ IN PROCEDURE DU_OPEN_DF
     16286**DCL
UPDATE_FID.WINDOW_ IN PROCEDURE DU_OPEN_DF
     16289**DCL
