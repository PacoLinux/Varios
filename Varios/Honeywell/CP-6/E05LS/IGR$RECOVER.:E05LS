VERSION E05

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:1    
        1        1        /*M* IGR$RECOVER  GHOST1 Recovery functions and patch file converter  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8
        9        9         /*P* NAME:     IGR$RECOVER.
       10       10
       11       11              PURPOSE:  To perform the GHOST1 functions that
       12       12                        require accessing the System Area of
       13       13                        the system disk.
       14       14
       15       15              DESCRIPTION:
       16       16                        When IGR$RECOVER is entered following
       17       17                        a tape boot the patch card images on the
       18       18                        System Area of the disk must be converted
       19       19                        to file managed files.
       20       20
       21       21                        When entered following a recovery, the
       22       22                        user's JITs in the dump file(s) in the
       23       23                        System Dump Area must be accessed to:
       24       24
       25       25                        o Update the :ACCTLG.
       26       26
       27       27                        o Enter the ASL recovery routine for each
       28       28                          user that was associated with an ASL when
       29       29                          the Screech occurred.
       30       30
       31       31                        o Release any * files that were open for
       32       32                          each user.
       33       33
       34       34                        IGR$RECOVER first takes trap control and exit
       35       35                        control to insure that we dont abort GHOST1.
       36       36
       37       37                        The system pack is then opened and the System
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:2    
       38       38                        Area Directory is read into a temporary buffer
       39       39                        (RV_USRDIR).
       40       40
       41       41                        The proper routine is then entered depending
       42       42                        on how GHOST1 is running:
       43       43                           BUILD_PATCH  if following a Tape Boot
       44       44                           RCVR_AJITS   if following a Recovery
       45       45
       46       46                        Both of thses routines exit through the EXIT_DP
       47       47                        routine, which closes the system pack, re-establishes
       48       48                        any previously set trap control and exit control,
       49       49                        and returns to IGM$MAIN.
       50       50
       51       51         */
       52       52
       53       53        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:3    
       54       54        IGR$RECOVER: PROC;
       55       55
       56       56        /**********************************************************/
       57       57    1   DCL IGR_RCVR_ASL SBIN CONSTANT SYMDEF INIT(1);
       58       58    1   DCL IGR_DEBUG SBIN STATIC SYMDEF INIT(0);
       59       59        /**********************************************************/
       60       60
       61       61        %INCLUDE CP_6;
       62      142        %INCLUDE IR_DATA_M;
       63      306        %INCLUDE NI$TABLES;
       64      522                                                /* AUTO STORAGE                       */
       65      523    1   DCL T$ PTR;
       66      524    1   DCL JITSZ SBIN(36);
       67      525    1   DCL JITSPG SBIN(36);
       68      526    1   DCL GOT_DIR SBIN;
       69      527    1   DCL I UBIN(36);
       70      528    1   DCL J UBIN(36);
       71      529                                                /* USED TO ACCESS THE SYSTEM DISK     */
       72      530
       73      531        %FPT_OPEN (FPTN=OPN_DP,
       74      532                   DCB=M$DP,
       75      533                   RES='DP',
       76      534                   ASN=DEVICE,
       77      535                   SN=SYSPACK,
       78      536                   FUN=UPDATE);
       79      645
       80      646        %VLP_SN (FPTN=SYSPACK,SN='CP-6''S');
       81      659
       82      660        %FPT_READ (FPTN=RD_DP,
       83      661                   DCB=M$DP,
       84      662                   BUF=RV_USRDIR,
       85      663                   KEYS=YES,
       86      664                   KEY=DP_GRAN);
       87      703
       88      704
       89      705        %FPT_READ (FPTN=RAPAGE,
       90      706                   DCB=M$DP,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:4    
       91      707                   BUF=APAGE,
       92      708                   KEYS=YES,
       93      709                   KEY=DP_GRAN);
       94      748
       95      749        %FPT_WRITE (FPTN=WT_DP,
       96      750                   DCB=M$DP,
       97      751                   BUF=RV_USRDIR,
       98      752                   KEY=DP_GRAN);
       99      783
      100      784        %FPT_CLOSE (FPTN=CLS_DP,
      101      785                   DCB=M$DP,
      102      786                   DISP=SAVE);
      103      828
      104      829        %FPT_CLOSE (FPTN=CLS_EI,
      105      830                    DCB=M$EI,
      106      831                    DISP=SAVE);
      107      873
      108      874                                                /*  GET SOME BUFFERS                  */
      109      875        %RV_BUFF;
      110      911        %RV_USRDIR;
      111      915
      112      916    1   DCL APAGE(0:1023) UBIN(36) STATIC;
      113      917
      114      918    1   DCL ASL_FPARAM(0:1023) UBIN WORD STATIC;
      115      919
      116      920    1   DCL DP_GRAN SBIN STATIC INIT(0);
      117      921
      118      922    1   DCL SYSDIR_GRAN SBIN STATIC INIT(0);    /* DA OF SYS AREA DIRECTORY           */
      119      923    1   DCL SYSAREA_LOWDA SBIN STATIC INIT(0);  /* DA OF FIRST SYS AREA GRAN          */
      120      924
      121      925
      122      926        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:5    
      123      927                                                /* USED FOLLOWING RECOVERY            */
      124      928
      125      929        %INCLUDE AZ_MACRO_C;
      126     3516        %INCLUDE AZ_SUBS_C;
      127     3585        %INCLUDE B_SEGIDS_C;
      128     4124        %LIST;
      129     4125        %LOGOFF$PARAM (NAME=LPARAM,STCLASS=STATIC);
              4126        %LSET LISTDIR='0'B;
              4130    1   DCL 1 LPARAM STATIC,
              4131    1         2 CODE SBIN,
              4136    1         2 ERR SBIN,
              4142    1         2 DCB1 UBIN HALF UNAL,
              4146    1         2 DCB_LL UBIN HALF UNAL,
              4151    1         2 UTS UBIN WORD,
              4156    1         2 JIT$ PTR,
              4160    1         2 ACCUM_CHG UBIN WORD;
      130     4166        %PLIST;
      131     4167
      132     4168        %FPT_RELSTARF;
      133     4183
      134     4184        %FPT_SAD(FPTN=SEE_CFUS,
      135     4185                 STCLASS=CONSTANT,
      136     4186                 MONSID=%DS1SID,
      137     4187                 USERSID=%SPCL4SID);
      138     4202
      139     4203        %FPT_CLOSE(FPTN=DSMNT_SET,
      140     4204                   DCB=M$DP,
      141     4205                   DISP=RELEASE);
      142     4247
      143     4248        %FPT_OPEN (FPTN=OPN_ASL,
      144     4249                   DCB=M$ASL,
      145     4250                   TEST=YES,
      146     4251                   ASN=FILE,
      147     4252                   FUN=IN,
      148     4253                   NAME=STARI,
      149     4254                   FPARAM=ASL_FPARAM);
      150     4363
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:6    
      151     4364    1   DCL 1 STARI CONSTANT,
      152     4365    1         2 L UBIN(9) UNAL INIT(2),
      153     4366    1         2 N CHAR(2) UNAL INIT('*I');
      154     4367
      155     4368
      156     4369    1   DCL AJIT$ PTR STATIC;
      157     4370
      158     4371        %FPT_ALIB (FPTN=ALIB_ASL,LIBNAME=ASL);
      159     4388        %FPT_DLIB (FPTN=DLIB_ASL,LIBNAME=ASL);
      160     4401
      161     4402    1   DCL 1 ASL STATIC DALIGNED,
      162     4403    1         2 CNT UBIN(9) UNAL INIT(0),
      163     4404    1         2 TEXT CHAR(31) UNAL INIT(' ');
      164     4405
      165     4406    1   DCL 1 B$ASL BASED,
      166     4407    1         2 CNT UBIN(9) UNAL,
      167     4408    1         2 TEXT CHAR(31) UNAL;
      168     4409
      169     4410    1   DCL FPARAM$ PTR STATIC INIT(ADDR(ASL_FPARAM));
      170     4411    1   DCL FPARAM_CODE SBIN STATIC INIT(13);
      171     4412
      172     4413    1   DCL 1 RCVR2D(0:3) STATIC ALIGNED,
      173     4414    1         2 DA UBIN WORD;
      174     4415
      175     4416    1   DCL RCVR2_LOWDA SBIN STATIC INIT(0);    /* LOW DA OF SYS RCVR AREA            */
      176     4417    1   DCL RCVR2_HIGHDA SBIN STATIC INIT(0);   /* HIGH DA OF SYS RCVR AREA           */
      177     4418
      178     4419    1   DCL RDUMP_LOWDA SBIN STATIC INIT(0);    /* LOW DA OF A RECOVERY DUMP          */
      179     4420    1   DCL RDUMP_HIGHDA SBIN STATIC INIT(0);   /* HIGH DA OF A RECOVERY DUMP         */
      180     4421
      181     4422    1   DCL DDIR_GRAN SBIN STATIC INIT(0);      /* DA OF RECOVER BUFFER-DIRECTORY     */
      182     4423
      183     4424    1   DCL DINDEX SBIN WORD STATIC INIT(0);
      184     4425    1   DCL JITRAP SBIN STATIC INIT(0);
      185     4426    1   DCL RELFTRAP SBIN STATIC INIT(0);
      186     4427        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:7    
      187     4428                                                /*  USED TO BUILD PATCH FILE          */
      188     4429
      189     4430    1   DCL DPATCHSZ UBIN WORD;
      190     4431    1   DCL APATCHSZ UBIN WORD;
      191     4432
      192     4433    1   DCL PATCH$ PTR;
      193     4434    1   DCL PATCHSTOP$ PTR;
      194     4435
      195     4436    1   DCL RUMF_SIZE UBIN STATIC INIT(0);
      196     4437    1   DCL NAME_VECTOR VECTOR;
      197     4438    1   DCL TYPE UBIN;
      198     4439
      199     4440        %LIST;
      200     4441        %RV_PFNAME;
              4442    1   DCL 1 NAME STCLASS DALIGNED,2 L UBIN(9)UNAL,2 N1 CHAR(3),2 MONID,3 VER CHAR(3),3
              4442            BOOTC CHAR(1);
      201     4444        %PLIST;
      202     4445                                           /* NAMES OF THE FILES IN THE :SYS ACCT     */
      203     4446
      204     4447    1   DCL 1 P_NAME STATIC SYMDEF ALIGNED,
      205     4448    1         2 L UBIN(9) UNAL INIT(6),
      206     4449    1         2 N1 CHAR(6) UNAL INIT(':PATCH');
      207     4450
      208     4451    1   DCL 1 RF_NAME STATIC SYMDEF ALIGNED,
      209     4452    1         2 L UBIN(9) UNAL INIT(4),
      210     4453    1         2 N1 CHAR(4) UNAL INIT(':RUM');
      211     4454
      212     4455    1   DCL 1 PLOVER_NAME STATIC SYMDEF ALIGNED,
      213     4456    1         2 L UBIN(9) UNAL INIT(7),
      214     4457    1         2 N1 CHAR(7) UNAL INIT(':PLOVER');
      215     4458
      216     4459    1   DCL 1 BOOTIME_NAME STATIC SYMDEF ALIGNED,
      217     4460    1         2 L UBIN(9) UNAL INIT(8),
      218     4461    1         2 N1 CHAR(9) UNAL INIT(':BOOTIME');
      219     4462
      220     4463    1   DCL PFCONTENTS(0:4) UBIN WORD STATIC SYMDEF INIT (0,
      221     4464    1                                        1, /* P_PO                               */
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:8    
      222     4465    1                                        0, /* P_RUM*/
      223     4466    1                                        0, /*P_PLOVER*/
      224     4467    1                                       0); /* P_BOOTIME*/
      225     4468
      226     4469    1   DCL PATCH_TYPE UBIN STATIC INIT(0);
      227     4470        %SUB P_PO=1;
      228     4471        %SUB P_RUM=2;
      229     4472        %SUB P_PLOVER=3;
      230     4473        %SUB P_BOOTIME=4;
      231     4474
      232     4475    1   DCL 1 DOCMD STATIC ALIGNED,
      233     4476    1         2 * CHAR(15) UNAL INIT('OUTPUT INTO :PF'),
      234     4477    1         2 MONID,
      235     4478    1           3 VER CHAR(3) UNAL,
      236     4479    1           3 BOOTC CHAR(1) UNAL,
      237     4480    1         2 ACCT CHAR(8) UNAL INIT('.:SYSTAC'),
      238     4481    1         2 * CHAR(53) UNAL INIT(' ');
      239     4482
      240     4483    1   DCL ECHOCMD CHAR(80) CONSTANT INIT(
      241     4484    1         'ECHO               ');
      242     4485    1   DCL SAY_KILLRUM CHAR(80) CONSTANT INIT(
      243     4486    1        'KILL RUM      "SUPPLIED BY IGR$PATCH');
      244     4487    1   DCL SAY_Q CHAR(80) CONSTANT INIT(
      245     4488    1        'QUIT       "SUPPLIED BY IGR$PATCH');
      246     4489    1   DCL SAY_ALIBR CHAR(80) CONSTANT INIT(
      247     4490    1        'ALIB RET       "SUPPLIED BY IGR$PATCH');
      248     4491
      249     4492        %FPT_OPEN (FPTN=DEL_RUM,
      250     4493                   DCB=M$RUM,
      251     4494                   DELETE=YES,
      252     4495                   ASN=FILE,
      253     4496                   FUN=IN,
      254     4497                   SCRUB=YES);
      255     4606
      256     4607        %FPT_OPEN (FPTN=OPN_PF,
      257     4608                   DCB=M$PF,
      258     4609                   ASN=FILE,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:9    
      259     4610                   CTG=YES,
      260     4611                   EXIST=NEWFILE,
      261     4612                   FUN=CREATE,
      262     4613                   NAME=PF_NAME,
      263     4614                   ACCT=SYSTAC,
      264     4615                   ORG=CONSEC,
      265     4616                   COMP=YES,
      266     4617                   DISP=NAMED);
      267     4726
      268     4727    1   DCL SYSTAC CONSTANT CHAR(8) DALIGNED INIT(':SYSTAC');
      269     4728
      270     4729        %FPT_WRITE (FPTN=WTPF,
      271     4730                    DCB=M$PF);
      272     4761
      273     4762        %FPT_WRITE(FPTN=WT_PHEAD,
      274     4763                   DCB=M$PF,
      275     4764                   BUF=P_HEADER);
      276     4795
      277     4796        %FPT_CLOSE (FPTN=CLS_PF,
      278     4797                    DCB=M$PF,
      279     4798                   RELG=YES,
      280     4799                   DISP=SAVE);
      281     4841
      282     4842        %FPT_OPEN (FPTN=OPN_RUM,
      283     4843                   DCB=M$RUM,
      284     4844                   ASN=FILE,
      285     4845                   CTG=YES,
      286     4846                   EXIST=NEWFILE,
      287     4847                   FUN=CREATE,
      288     4848                   ORG=CONSEC,
      289     4849                   COMP=YES,
      290     4850                   DISP=NAMED);
      291     4959
      292     4960        %FPT_WRITE (FPTN=WTRUM,
      293     4961                   DCB=M$RUM);
      294     4992
      295     4993        %FPT_CLOSE (FPTN=CLS_RUM,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:10   
      296     4994                   DCB=M$RUM,
      297     4995                   RELG=YES,
      298     4996                   DISP=SAVE);
      299     5038
      300     5039        %FPT_CLOSE (FPTN=REL_RUM,
      301     5040                    DCB=M$RUM,
      302     5041                    RELG=YES,
      303     5042                    DISP=RELEASE);
      304     5084
      305     5085        %FPT_TIME (DAY=P_HEADER.DAY,
      306     5086                   DATE=P_HEADER.DATE,
      307     5087                   TIME=P_HEADER.TIME);
      308     5106
      309     5107    1   DCL 1 P_HEADER STATIC ALIGNED,
      310     5108    1         2 TYP CHAR(13) UNAL INIT('" TAPE BOOT'),
      311     5109    1         2 MONID CHAR(4) UNAL INIT('A001'),
      312     5110    1         2 * CHAR(2) UNAL INIT(' '),
      313     5111    1         2 DAY CHAR(5) UNAL INIT(' '),
      314     5112    1         2 DATE CHAR(12) UNAL INIT(' '),
      315     5113    1         2 TIME CHAR(15) UNAL INIT(' '),
      316     5114    1         2 * CHAR(2) UNAL INIT(' '),
      317     5115    1         2 FILES CHAR(10) UNAL INIT(' '),
      318     5116    1         2 RECON CHAR(7) UNAL INIT(' '),
      319     5117    1         2 * CHAR(130) UNAL INIT(' ');
      320     5118
      321     5119    1   DCL SKIP_PATCH(0:4) CHAR(1) STATIC;
      322     5120    1   DCL SKIP_P4 REDEF SKIP_PATCH CHAR(5) UNAL;
      323     5121    1   DCL B$5CHAR(0:4) CHAR(1) BASED;
      324     5122
      325     5123        %SUB SKIP_MAX=6;
      326     5124    1   DCL 1 SKIP_TAB(0:SKIP_MAX) CONSTANT,
      327     5125                                 /* Skip any RUM patch cards that start like this     */
      328     5126    1         2 P CHAR(5) INIT(
      329     5127    1           'G    ',
      330     5128    1           'GO   ',
      331     5129    1           'Q    ',
      332     5130    1           'QUIT ',
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:11   
      333     5131    1           'END  ',
      334     5132    1           'ALIB ',
      335     5133    1           'ALIB ');
      336     5134
      337     5135    1   DCL B$PATCH80 CHAR(80) BASED;
      338     5136
      339     5137    1   DCL B$APATCH CHAR(APATCHSZ) BASED;
      340     5138
      341     5139    1   DCL 1 B$SYSPATCH BASED ALIGNED,
      342     5140    1         2 STOP UBIN WORD,
      343     5141    1         2 PATCH(0:0) CHAR(200) UNAL;
      344     5142
      345     5143        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:12   
      346     5144                                                /*  BASED STRUCTURES                  */
      347     5145        %INCLUDE I$DISK;
      348     5397        %INCLUDE FM$MACROS;
      349     5772        %FM$SET(BASED="BASED(F$CFU$)");
      350     5777        %FM$CFUX;
      351     5782    1   DCL 1 F$CFU$_ CONSTANT,
      352     5783    1         2 * BIT(24)INIT('0'B),
      353     5784    1         2 * BIT(12)INIT(%SPCL4SID);
      354     5785    1   DCL F$CFU$ REDEF F$CFU$_ PTR;
      355     5786        %FM$VID;
      356     5792        %RV_BUFF (NAME=RV$BUFF,STCLASS=BASED);
      357     5828 S      %INCLUDE B$JIT_C;
      358     5829        %B$JIT0;
      359     5918        %U$JIT1;
      360     5992        %M$JIT2X;
      361     5995        %F$JIT3;
      362     6000        %S$JIT4X;
      363     6003        %J$JIT5X;
      364     6006        %A$JIT6X;
      365     6009
      366     6010                                                /* EXTERNAL DATA                      */
      367     6011    1   DCL IG_BOOTFLAG UBIN WORD SYMREF;
      368     6012    1   DCL IGG_RECONUTS UBIN SYMREF;
      369     6013    1   DCL B$JIT$ PTR SYMREF;
      370     6014
      371     6015                                                /* EXTERNAL PROCEDURES                */
      372     6016    1   DCL AZA$LOGOFF ENTRY(1) ALTRET;
      373     6017    1   DCL IGA$RECOVER_ASL ENTRY;
      374     6018    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
      375     6019
      376     6020                                                /* DCBS                               */
      377     6021    1   DCL M$DP DCB;
      378     6022    1   DCL M$EI DCB;
      379     6023    1   DCL M$LO DCB;
      380     6024    1   DCL M$PF DCB;
      381     6025    1   DCL M$RUM DCB;
      382     6026    1   DCL M$ASL DCB;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:13   
      383     6027
      384     6028                                                /*  STRING SUBSTITUTIONS              */
      385     6029        %INCLUDE I_SUBS_C;
      386     6053        %INCLUDE B_ERRORS_C;
      387     7180        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:14   
      388     7181                                                /*  USED FOR ERROR MESSAGE REPORTING  */
      389     7182        %B$TCB;
      390     7185        %B$ALT;
      391     7193        %B$EXCFR;
      392     7211    1   DCL B$TCB$ PTR SYMREF;
      393     7212        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      394     7213        %SUB B$EXCFR=B$TCB$->B$TCB.STK$->B$EXCFR;
      395     7214
      396     7215    1   DCL IGR_MSG1 SBIN STATIC INIT(0);
      397     7216
      398     7217
      399     7218    1   DCL 1 ERRM1 STATIC,
      400     7219    1         2 CR BIT(18) UNAL INIT('015012'O),
      401     7220    1         2 IGR CHAR(4) UNAL INIT('IGR-'),
      402     7221    1         2 M CHAR(30) UNAL INIT(' ');
      403     7222
      404     7223        %SUB ERRM1_SIZE=36;
      405     7224
      406     7225    1   DCL 1 ERRM2 STATIC,
      407     7226    1         2 CR BIT(18) UNAL INIT('015012'O),
      408     7227    1         2 IGR CHAR(4) UNAL INIT('IGR-'),
      409     7228    1         2 M CHAR(120) UNAL INIT(' ');
      410     7229
      411     7230        %SUB ERRM2_SIZE=126;
      412     7231
      413     7232    1   DCL 1 DFMSG STATIC,
      414     7233    1         2 CR BIT(18) UNAL INIT('015012'O),
      415     7234    1         2 IGR CHAR(4) UNAL INIT('IGR-'),
      416     7235    1         2 * CHAR(5) UNAL INIT('SLOT '),
      417     7236    1         2 SLOTN CHAR(1) UNAL INIT(' '),
      418     7237    1         2 * CHAR(1) UNAL INIT(' '),
      419     7238    1         2 M CHAR(30) UNAL INIT(' '),
      420     7239    1         2 * CHAR(1) UNAL INIT(' '),
      421     7240    1         2 SDF CHAR(3) UNAL INIT(' '),
      422     7241    1         2 MONID,
      423     7242    1           3 VER CHAR(3) UNAL INIT(' '),
      424     7243    1           3 BOOT CHAR(1) UNAL INIT(' '),
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:15   
      425     7244    1         2 DUMPC CHAR(3) UNAL INIT(' ');
      426     7245
      427     7246        %SUB DFMSG_SIZE=54;
      428     7247
      429     7248    1   DCL MSGINDX SBIN STATIC INIT(0);
      430     7249
      431     7250    1   DCL B$MSG(0:127) CHAR(1) BASED;
      432     7251
      433     7252        %FPT_TEMPWROC (FPTN=REPORT_ERRM1,
      434     7253                       BUFW=ERRM1);
      435     7269        %FPT_TEMPWROC (FPTN=REPORT_ERRM2,
      436     7270                       BUFW=ERRM2);
      437     7286        %FPT_TEMPWROC (FPTN=REPORT_DFMSG,
      438     7287                       BUFW=DFMSG);
      439     7303
      440     7304        %FPT_ERRMSG (FPTN=FPT_ERRMSG,
      441     7305                     CODE=PERRC,
      442     7306                     BUF="ERRM2.M",
      443     7307                     RESULTS=VLR_ERRMSG,
      444     7308                     SUBMESS=YES);
      445     7335
      446     7336        %VLR_ERRMSG;
      447     7358    1   DCL 1 PERRC STATIC,
      448     7359    1         2 FCG BIT(12) UNAL,
      449     7360    1         2 MID BIT(6) UNAL,
      450     7361    1         2 MON BIT(1) UNAL,
      451     7362    1         2 CODE UBIN(14) UNAL,
      452     7363    1         2 SEV UBIN(3) UNAL;
      453     7364
      454     7365
      455     7366                                                /*  USED FOR TRAP CONTROL             */
      456     7367        %FPT_TRAP (FPTN=TRAPFPT,STCLASS=CONSTANT,
      457     7368                    PTC=VLP_PTC,
      458     7369                   ERRORS=IGR$TRAP,
      459     7370                   ARITHMETIC=IGR$TRAP,
      460     7371                   PROGRAMMED=IGR$TRAP,
      461     7372                   OVERFLOW=TRAP,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:16   
      462     7373                   MME=TRAP,
      463     7374                   FAULT_TAG=TRAP,
      464     7375                   MEMORY=TRAP,
      465     7376                   COMMAND=TRAP,
      466     7377                   LOCKUP=TRAP,
      467     7378                   IPR=TRAP,
      468     7379                   MISSING_SEG=TRAP,
      469     7380                   MISSING_PAGE=TRAP,
      470     7381                   SECURITY_2=TRAP,
      471     7382                   SECURITY_1=TRAP,
      472     7383                   HARDWARE=TRAP,
      473     7384                   DIVIDE_CHECK=TRAP,
      474     7385                   PMME=IGR$TRAP);
      475     7408
      476     7409        %FPT_TRAP (FPTN=RESTORET,
      477     7410                   PTC=VLP_PTC,
      478     7411                   RESTORE=YES);
      479     7434
      480     7435        %VLP_PTC;
      481     7451
      482     7452    1   DCL IGR$TRAP ENTRY ASYNC;
      483     7453    1   DCL TRAP_UNWIND REMEMBER STATIC SYMDEF DALIGNED;
      484     7454    1   DCL AR_EXIT_UNW REMEMBER DALIGNED STATIC;
      485     7455
      486     7456        %FPT_XCON (UENTRY=IGR$TRAP,
      487     7457                   PXCON=PREVXCON);
      488     7471
      489     7472    1   DCL PREVXCON BIT(72) STATIC DALIGNED;
      490     7473        %FPT_CLRSTK;
      491     7487
      492     7488        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:17   
      493     7489
      494     7490    1   IGR$PATCHF: ENTRY;
      495     7491    1      IF (IG_BOOTFLAG >= I_RECOVERY)
      496     7492    1      THEN RETURN;
      497     7493
      498     7494    1      IF (IG_BOOTFLAG >= I_DISKBOOT)
      499     7495    2      THEN DO;
      500     7496    2           P_HEADER.TYP='" DISK BOOT';
      501     7497    2           IF (IG_BOOTFLAG = I_DISKBOOT_RECON)
      502     7498    2           THEN P_HEADER.RECON='- RECON';
      503     7499                       /* Someday we may want to allow patching following a Disk Boot */
      504     7500    2           RETURN;
      505     7501    2           END;
      506     7502    1      IF (IG_BOOTFLAG = I_NEWFILES)
      507     7503    1      THEN P_HEADER.FILES='NEW FILES';
      508     7504    1      ELSE IF (IG_BOOTFLAG = I_SYSFILES) OR (IG_BOOTFLAG=I_SYSFILES_RECON)
      509     7505    1           THEN P_HEADER.FILES='SYS FILES';
      510     7506    1           ELSE P_HEADER.FILES='NO FILES';
      511     7507
      512     7508    1      IF (IG_BOOTFLAG >= I_SYSFILES_RECON)
      513     7509    1      THEN P_HEADER.RECON='- RECON';
      514     7510    1      GOTO SET_TRAP;
      515     7511
      516     7512    1   IGR$RECOVERY: ENTRY;
      517     7513    1      IF IG_BOOTFLAG < I_RECOVERY
      518     7514    1      THEN RETURN;
      519     7515
      520     7516    1   SET_TRAP: ;
      521     7517    1      REMEMBER TRAP_HAND IN TRAP_UNWIND;
      522     7518    1      CALL M$TRAP(TRAPFPT) ALTRET(SET_XCON);
      523     7519
      524     7520    1   SET_XCON: ;
      525     7521    1      CALL M$XCON(FPT_XCON) ALTRET(OPEN_DP);
      526     7522                                                /*                                    */
      527     7523                                                /*                                    */
      528     7524    1   OPEN_DP: ;
      529     7525                  /* Open the System Pack - Read VID and SAD - Go to proper routine   */
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:18   
      530     7526    1      CALL M$OPEN(OPN_DP) ALTRET(ODP_ERR);
      531     7527    1      CALL M$READ(RD_DP) ALTRET(R_VID_ERR);
      532     7528                                      /*Read the VID -- use RV_USRDIR for a buffer    */
      533     7529    1      T$=ADDR(RV_USRDIR);
      534     7530    1      DP_GRAN=T$->FM$VID.SYSDIRDA;
      535     7531    1      SYSDIR_GRAN=DP_GRAN;
      536     7532    1      IF (SYSDIR_GRAN=0) OR (T$->FM$VID.SYSSIZE=0)
      537     7533    2      THEN DO;
      538     7534    2           ERRM2.M='NO SYSTEM AREA ON THE SYS PACK';
      539     7535    2           CALL REPORT_ERRM_2;
      540     7536    2           GOTO EXIT_DP;
      541     7537    2           END;
      542     7538
      543     7539    1      CALL M$READ(RD_DP) ALTRET(R_SAD_ERR);
      544     7540                            /* Read the System Area Directory--buffer is RV_USRDIR    */
      545     7541    1      IF IG_BOOTFLAG <  I_RECOVERY
      546     7542    1      THEN GOTO BUILD_PATCH;
      547     7543    1      ELSE GOTO RCVR_AJITS;
      548     7544                                                /*                                    */
      549     7545    1   EXIT_DP: ;
      550     7546    1      CALL M$CLOSE(CLS_DP) ALTRET(CLS_DP_ERR);
      551     7547                                                /* Close the System Pack              */
      552     7548    1   EXIT_IGR: ;
      553     7549                                      /* DISMOUNT THE REST, IN CASE ASL USED THEM     */
      554     7550    1      CALL M$SAD(SEE_CFUS)ALTRET(NO_DSMNT);
      555     7551    1      I=FM$CFUX.SETH;
      556     7552    2      DO WHILE(I~=0);
      557     7553    3           IF FM$SET.SYSID(I)~=0 THEN DO;
      558     7554    3                SYSPACK.SN#(0)=FM$SET.PSN(I);
      559     7555    3                CALL M$OPEN(OPN_DP)ALTRET(NO_DSMNT_1);
      560     7556    3                CALL M$CLOSE(DSMNT_SET)ALTRET(NO_DSMNT_1);
      561     7557    3   NO_DSMNT_1:  ;
      562     7558    3                END;
      563     7559    2           I=FM$SET.SETL(I);
      564     7560    2           END;
      565     7561    1   NO_DSMNT:;
      566     7562
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:19   
      567     7563                                      /* Restore trap and exit control
      568     7564                                         Return to IGM$MAIN                         */
      569     7565    1      FPT_XCON.V_ = VECTOR(PREVXCON);
      570     7566    1      FPT_XCON.PXCON_ = VECTOR(NIL);
      571     7567    1      CALL M$XCON(FPT_XCON) ALTRET(TRAP_RESTORE);
      572     7568    1   TRAP_RESTORE: ;
      573     7569    1      CALL M$TRAP(RESTORET) ALTRET(SO_WHAT);
      574     7570    1   SO_WHAT: ;
      575     7571    1      RETURN;
      576     7572
      577     7573        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:20   
      578     7574                                      /* Errors with the System Pack or IGR$RECOVER   */
      579     7575    1   TRAP_HAND: ;
      580     7576    1      ERRM1.M = 'TRAP/XCON RECOVERING AJITS';
      581     7577    1      IGR_MSG1=1;
      582     7578    1      CALL REPORT_STK_ERR;
      583     7579    1      GOTO EXIT_DP;
      584     7580                                                /*                                    */
      585     7581    1   ODP_ERR: ;                              /*ERROR OPENING M$DP                  */
      586     7582    1      ERRM1.M = 'OPEN SYS DISK ERROR';
      587     7583    1   ODP_ERR1: ;
      588     7584    1      IGR_MSG1=1;
      589     7585    1      CALL REPORT_ERR;
      590     7586    1      GOTO EXIT_IGR;
      591     7587
      592     7588    1   CLS_DP_ERR: ;                           /*ERROR CLOSING SYSTEM PACK           */
      593     7589    1      ERRM1.M = 'CLOSE SYS DISK ERROR';
      594     7590    1      GOTO ODP_ERR1;
      595     7591
      596     7592    1   R_VID_ERR: ;                            /* ERROR READING VID                  */
      597     7593    1      ERRM1.M = 'ERROR READING VID';
      598     7594    1   ERR_DP: ;
      599     7595    1      IGR_MSG1=1;
      600     7596    1      CALL REPORT_ERR;
      601     7597    1      GOTO EXIT_DP;
      602     7598
      603     7599    1   R_SAD_ERR: ;                            /*ERROR READING SYSTEM AREA DIRECTORY*/
      604     7600    1      ERRM1.M = 'ERROR READING SAD';
      605     7601    1      GOTO ERR_DP;
      606     7602
      607     7603        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:21   
      608     7604                                                /* DO GHOST1 RECOVER FUNCTIONS        */
      609     7605    1   RCVR_AJITS: ;
      610     7606    1      RCVR2D = T$->I$DISKDIR.RCVR2;
      611     7607
      612     7608    1      RCVR2_LOWDA = T$->I$DISKDIR.DUMP.DA;
      613     7609    1      RCVR2_HIGHDA = (RCVR2_LOWDA + T$->I$DISKDIR.DUMP.SIZE) -1;
      614     7610
      615     7611    1      CALL CHKDA(RCVR2_LOWDA,RCVR2_HIGHDA,'RCVR') ALTRET(EXIT_DP);
      616     7612    1      IF RCVR2D.DA(%RV_SYSDDUMP#-1) ~= 0
      617     7613    1      THEN IG_BOOTFLAG = I_RCVR_DUMPF;
      618     7614
      619     7615    1      DINDEX = %RV_SYSDDUMP#-1;
      620     7616    2      DO WHILE (DINDEX >= 0);
      621     7617                                 /* Iniitialize the Dump File debug/error message     */
      622     7618    2           DFMSG.SDF=' ';
      623     7619    2           DFMSG.MONID.VER=' ';
      624     7620    2           DFMSG.MONID.BOOT=' ';
      625     7621    2           DFMSG.DUMPC=' ';
      626     7622    2           CALL BINCHAR(DFMSG.SLOTN,DINDEX);
      627     7623    2           DDIR_GRAN = RCVR2D.DA(DINDEX);
      628     7624
      629     7625    2           IF DDIR_GRAN = 0
      630     7626    3           THEN DO;
      631     7627    3                DFMSG.M = 'DUMP SLOT EMPTY';
      632     7628    3                IF IGR_DEBUG ~= 0
      633     7629    3                THEN CALL PRINT_DFMSG;
      634     7630    3                GOTO GET_NEXT_DUMP;
      635     7631    3                END;
      636     7632
      637     7633    2           DP_GRAN=DDIR_GRAN;
      638     7634    2           CALL M$READ(RD_DP) ALTRET(R_RB_ERR);
      639     7635    2           T$=ADDR(RV_USRDIR);
      640     7636    2           RV_BUFF=T$->RV$BUFF;
      641     7637                                                /* Read the Recovery Buffer           */
      642     7638    2           RDUMP_LOWDA=DDIR_GRAN;
      643     7639    2           RDUMP_HIGHDA = (RDUMP_LOWDA+RV_BUFF.SIZE) -1;
      644     7640
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:22   
      645     7641    2           IF (RDUMP_LOWDA < RCVR2_LOWDA)
      646     7642    2             OR (RDUMP_HIGHDA > RCVR2_HIGHDA)
      647     7643    3           THEN DO;
      648     7644    3                DFMSG.M='RCVR DUMP DISK ADDRESS BAD';
      649     7645    3                CALL REPORT_DFERR;
      650     7646    3                GOTO GET_NEXT_DUMP;
      651     7647    3                END;
      652     7648
      653     7649    2           IF RV_BUFF.BUSY = 0
      654     7650    3           THEN DO;
      655     7651    3                DFMSG.M = 'SLOT BUSY-FILE NOT';
      656     7652    3                GOTO SEE_DFMSG;
      657     7653    3                END;
      658     7654                                                /*                                    */
      659     7655    2           IF RV_BUFF.AJITSU='1'B
      660     7656    3           THEN DO;
      661     7657    3                DFMSG.M = 'AJITS ALREADY UPDATED';
      662     7658    3                GOTO SEE_DFMSG;
      663     7659    3                END;
      664     7660
      665     7661        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:23   
      666     7662    2   AJIT_GO: ;
      667     7663    2           IF RV_BUFF.JITS.SZ ~= 0
      668     7664    3           THEN DO;
      669     7665    3                DP_GRAN=RV_BUFF.USRDR.DA;
      670     7666    3                IF (DP_GRAN < RDUMP_LOWDA)
      671     7667    3                  OR ( (DP_GRAN + RV_BUFF.JITS.SZ) -1) > RDUMP_HIGHDA
      672     7668    4                THEN DO;
      673     7669    4                     DFMSG.M='RCVR DUMP JIT DISK ADDRESS BAD';
      674     7670    4                     CALL REPORT_DFERR;
      675     7671    4                     GOTO GET_NEXT_DUMP;
      676     7672    4                     END;
      677     7673    3                GOT_DIR=0;
      678     7674    3                CALL M$READ(RD_DP) ALTRET(R_DIR_ERR);
      679     7675                                                /* Read the User Directory            */
      680     7676    3                GOT_DIR=1;
      681     7677    3                GOTO R_DIR_2;
      682     7678    3   R_DIR_ERR:   ;
      683     7679    3                DFMSG.M='ERROR READING USRDIR';
      684     7680    3                CALL REPORT_DFERR;
      685     7681    3                CALL REPORT_ERRMSG;
      686     7682    3   R_DIR_2:     ;
      687     7683    3                JITSZ=LENGTHW(B$JIT);
      688     7684    3                JITSPG=1024/JITSZ;
      689     7685    3                DP_GRAN = RV_BUFF.JITS.DA;
      690     7686                                                /*                                    */
      691     7687    3                LPARAM.CODE=%AZ$RECOVERY;
      692     7688    3                LPARAM.DCB1=DCBNUM(M$EI);
      693     7689    3                LPARAM.DCB_LL=DCBNUM(M$LO);
      694     7690    3                LPARAM.UTS=RV_BUFF.UTS1;
      695     7691                                                /*                                    */
      696     7692    3   MORE_JITS:   ;
      697     7693    3                AJIT$=ADDR(APAGE);
      698     7694    3                CALL M$READ(RAPAGE) ALTRET(R_DP_ERR);
      699     7695                                                /*                                    */
      700     7696    4                DO I=0 TO JITSPG-1;
      701     7697    4                     IF AJIT$->B$JIT.USER=0 THEN GOTO JITS_DONE;
      702     7698    4                     LPARAM.ERR=0;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:24   
      703     7699    4                     LPARAM.JIT$=AJIT$;
      704     7700    4                     IF RV_USRDIR.USER.AJITUPD(AJIT$->B$JIT.USER) ='0'B
      705     7701    5                     THEN DO;
      706     7702    5                          REMEMBER AJIT_TRAP IN TRAP_UNWIND;
      707     7703    5                          REMEMBER JIT_DONE IN AR_EXIT_UNW;
      708     7704    5                          CALL AZA$LOGOFF(LPARAM);
      709     7705    5   JIT_DONE:              ;
      710     7706    5                          RV_USRDIR.USER.AJITUPD(AJIT$->B$JIT.USER) ='1'B;
      711     7707    5                          END;
      712     7708    4                     IF IGR_RCVR_ASL=0 THEN GOTO NO_ASL;
      713     7709    4                     IF RV_USRDIR.USER.ASLD(AJIT$->B$JIT.USER) ='0'B
      714     7710    4                       AND AJIT$->B$JIT.STAR.DA(7) ~= 0
      715     7711    5                     THEN DO;
      716     7712    5                          REMEMBER ASL_TRAP IN TRAP_UNWIND;
      717     7713    5                          REMEMBER ASL_ALT IN AR_EXIT_UNW;
      718     7714    5                          B$JIT$->B$JIT.STAR.DA(7) = AJIT$->B$JIT.STAR.DA(7);
      719     7715    5                          B$JIT$->B$JIT.HPSN = AJIT$->B$JIT.HPSN;
      720     7716    5                          CALL M$OPEN(OPN_ASL) ALTRET(NO_ASL);
      721     7717    5                          CALL XSF$LOCCODE(FPARAM$,FPARAM_CODE) ALTRET(NO_ASL);
      722     7718    5                          ASL=FPARAM$->B$ASL;
      723     7719    5                          CALL M$ALIB(ALIB_ASL) ALTRET(NO_ASL);
      724     7720    5                          CALL IGA$RECOVER_ASL;
      725     7721    5                          AJIT$->B$JIT.STAR.DA(7) = B$JIT$->B$JIT.STAR.DA(7);
      726     7722    5                          RV_USRDIR.USER.ASLD(AJIT$->B$JIT.USER) ='1'B;
      727     7723    5   ASL_ALT:               ;
      728     7724    5                          CALL M$DLIB(DLIB_ASL) ALTRET(NO_ASL);
      729     7725    5   NO_ASL:                ;
      730     7726    5                          B$JIT$->B$JIT.STAR.DA(7) = 0;
      731     7727    5                          B$JIT$->B$JIT.HPSN = 'SYS   ';
      732     7728    5                          END;
      733     7729    4                     IF RV_USRDIR.USER.RELSFD(AJIT$->B$JIT.USER) ='0'B
      734     7730    5                     THEN DO;
      735     7731    5                          REMEMBER RELS_TRAP IN TRAP_UNWIND;
      736     7732    5                          REMEMBER RELS_ALT IN AR_EXIT_UNW;
      737     7733    5                          FPT_RELSTARF.JIT_ = VECTOR(AJIT$->B$JIT);
      738     7734    5                          IF RV_BUFF.UTS2 > IGG_RECONUTS
      739     7735    5                          THEN CALL M$RELSTARF(FPT_RELSTARF) ALTRET(RELS_TRAP);
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:25   
      740     7736    5   RELS_ALT:              ;
      741     7737    5                          RV_USRDIR.USER.RELSFD(AJIT$->B$JIT.USER) ='1'B;
      742     7738    5                          END;
      743     7739    4                     AJIT$ = PINCRW(AJIT$,JITSZ);
      744     7740    4                     END;                  /*DO I=0 TO 5*/
      745     7741                                                /*                                    */
      746     7742    3   SKIP_GRAN:   ;
      747     7743    3                DP_GRAN=DP_GRAN+1;
      748     7744    3                IF DP_GRAN < RV_BUFF.JITS.DA + RV_BUFF.JITS.SZ
      749     7745    3                THEN GOTO MORE_JITS;
      750     7746
      751     7747    3   JITS_DONE:   ;
      752     7748    3                IF GOT_DIR=1
      753     7749    4                THEN DO;
      754     7750    4                     DP_GRAN=RV_BUFF.USRDR.DA;
      755     7751    4                     CALL M$WRITE(WT_DP) ALTRET(ERR_USRDIR);
      756     7752                            /* Re-write the User Directory with AJIT Trap bits set    */
      757     7753    4                     GOTO DIR_OK;
      758     7754    4   ERR_USRDIR:       ;
      759     7755    4                     DFMSG.M = 'ERROR WRITING USRDIR';
      760     7756    4                     CALL REPORT_DFERR;
      761     7757    4                     CALL REPORT_ERRMSG;
      762     7758    4   DIR_OK:           ;
      763     7759    4                     END;
      764     7760                                                /*                                    */
      765     7761    3                RV_BUFF.AJITSU='1'B;
      766     7762    3                IF JITRAP ~= 0
      767     7763    3                THEN RV_BUFF.AJITTR='1'B;
      768     7764    3                DP_GRAN=DDIR_GRAN;
      769     7765    3                RV_USRDIR='0'B;
      770     7766    3                T$=ADDR(RV_USRDIR);
      771     7767    3                T$->RV$BUFF=RV_BUFF;
      772     7768    3                CALL M$WRITE(WT_DP) ALTRET(ERR_RBUF);
      773     7769                            /* RE-write the Recovery Buffer with the AJITSU bit set   */
      774     7770    3                GOTO CLOSE_EI;
      775     7771    3   ERR_RBUF:    ;
      776     7772    3                DFMSG.M = 'ERR WRITING RECOVERY BUFFER';
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:26   
      777     7773    3                CALL REPORT_DFERR;
      778     7774    3                CALL REPORT_ERRMSG;
      779     7775    3   CLOSE_EI:    ;
      780     7776    3                CALL M$CLOSE(CLS_EI) ALTRET(EI_ALTR);
      781     7777    3   EI_ALTR:     ;
      782     7778    3                IF JITRAP ~=0
      783     7779    4                THEN DO;
      784     7780    4                     DFMSG.M = 'TRAP USING AJITS';
      785     7781    4                     CALL REPORT_DFERR;
      786     7782    4                     JITRAP=0;
      787     7783    4                     END;
      788     7784    4                ELSE DO;
      789     7785    4                     DFMSG.M = 'AJITS UPDATED';
      790     7786    4   SEE_DFMSG:        ;
      791     7787    4                     IF IGR_DEBUG ~= 0 THEN CALL REPORT_DFERR;
      792     7788    4                     END;
      793     7789    3                END;                       /*DO IF JITS.SZ ~=0*/
      794     7790    2   GET_NEXT_DUMP: ;
      795     7791    2           DINDEX = DINDEX-1;
      796     7792    2           END;                            /*DO DINDEX=MAX TO 0                  */
      797     7793    1      GOTO EXIT_DP;                        /* JOIN UP WITH EXIT SEQUENCE         */
      798     7794        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:27   
      799     7795                                                /* RCVR_AJITS error routines          */
      800     7796                                                /* Error with ASL Recovery            */
      801     7797    1   ASL_TRAP: ;
      802     7798    1      RV_USRDIR.USER.ASLT(AJIT$->B$JIT.USER)='1'B;
      803     7799    1      GOTO RPT_A2;
      804     7800                                                /* Error releasing the Star Files     */
      805     7801    1   RELS_TRAP: ;
      806     7802    1      RV_USRDIR.USER.RELSFT(AJIT$->B$JIT.USER)='1'B;
      807     7803    1      GOTO RPT_A2;
      808     7804                                           /*  Errors updating the Accounting Jits    */
      809     7805    1   AJIT_TRAP: ;
      810     7806    1      RV_USRDIR.USER.AJITRAP(AJIT$->B$JIT.USER)='1'B;
      811     7807    1   RPT_A2: ;
      812     7808    1      JITRAP=JITRAP+1;
      813     7809    1      RV_BUFF.AJITTRAP=B$EXCFR;
      814     7810    1      CALL M$CLRSTK(FPT_CLRSTK) ALTRET(AR_EXIT);
      815     7811    1   AR_EXIT: ;
      816     7812    1      UNWIND TO AR_EXIT_UNW;
      817     7813
      818     7814    1   R_RB_ERR: ;                             /*ERROR READING RECOVERY BUFFER*/
      819     7815    1      DFMSG.M='ERR READING RECOVERY BUFFER';
      820     7816    1      CALL REPORT_DFERR;
      821     7817    1      CALL REPORT_ERRMSG;
      822     7818    1      GOTO GET_NEXT_DUMP;
      823     7819
      824     7820    1   R_DP_ERR: ;                             /* ERROR READING THE ACCT JITS        */
      825     7821    1      ERRM1.M='ERR READING ACCT JITS';
      826     7822    1      CALL REPORT_ERR;
      827     7823    1      GOTO SKIP_GRAN;
      828     7824                                                /*                                    */
      829     7825        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:28   
      830     7826                                                /*                                    */
      831     7827                                                /* BUILD PATCH FILE AFTER A TAPE BOOT */
      832     7828    1   BUILD_PATCH: ;
      833     7829    1      REMEMBER PATCH_TRAP IN TRAP_UNWIND;
      834     7830
      835     7831    1   DEL_PATCH: ;
      836     7832    1      DEL_RUM.NAME_ = VECTOR(P_NAME);
      837     7833    1      CALL M$OPEN(DEL_RUM) ALTRET(DEL_RUMF);
      838     7834    1   DEL_RUMF: ;
      839     7835    1      DEL_RUM.NAME_ = VECTOR(RF_NAME);
      840     7836    1      CALL M$OPEN(DEL_RUM) ALTRET(DEL_PLOVER);
      841     7837    1   DEL_PLOVER: ;
      842     7838    1      DEL_RUM.NAME_ = VECTOR(PLOVER_NAME);
      843     7839    1      CALL M$OPEN(DEL_RUM) ALTRET(DEL_BOOTIME);
      844     7840    1   DEL_BOOTIME: ;
      845     7841    1      DEL_RUM.NAME_ = VECTOR(BOOTIME_NAME);
      846     7842    1      CALL M$OPEN(DEL_RUM) ALTRET(SET_PFNAME);
      847     7843
      848     7844    1   SET_PFNAME: ;
      849     7845    1      PF_NAME.L = 7;
      850     7846    1      PF_NAME.N1 = ':PF';
      851     7847    1      PF_NAME.MONID = T$->I$DISKDIR.MONID.M;
      852     7848    1      DOCMD.MONID = T$->I$DISKDIR.MONID.M;
      853     7849                                                /*                                    */
      854     7850    1      DPATCHSZ=T$->I$DISKDIR.PATCH.SIZE;
      855     7851    1      DP_GRAN=T$->I$DISKDIR.PATCH.DA;
      856     7852    1      APATCHSZ=200;
      857     7853
      858     7854    1      P_HEADER.MONID=T$->I$DISKDIR.MONID.M_CHAR4;
      859     7855    1      CALL M$TIME(FPT_TIME) ALTRET(OPEN_PATCH);
      860     7856    1   OPEN_PATCH: ;
      861     7857    1      CALL M$OPEN(OPN_PF) ALTRET(OPF_ERR);
      862     7858    1      CALL M$WRITE(WT_PHEAD) ALTRET(WPF_ERR);
      863     7859
      864     7860    1      RUMF_SIZE=0;
      865     7861    1      OPN_RUM.NAME_ = VECTOR(P_NAME);
      866     7862    1      CALL M$OPEN(OPN_RUM) ALTRET(ORUM_ERR);
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:29   
      867     7863    1      PATCH_TYPE=P_PO;
      868     7864
      869     7865    1      IF DPATCHSZ=0 OR DP_GRAN=0
      870     7866    1      THEN GOTO PATCH_EXIT;
      871     7867
      872     7868    1      CALL CHKDA(DP_GRAN,DP_GRAN+DPATCHSZ-1,'PTCH') ALTRET(PATCH_EXIT);
      873     7869
      874     7870    2      DO WHILE (DPATCHSZ > 0);
      875     7871    2           CALL M$READ(RAPAGE) ALTRET(R_PATCH_ERR);
      876     7872    2           DPATCHSZ=DPATCHSZ-1;
      877     7873    2           DP_GRAN=DP_GRAN+1;
      878     7874    2           PATCH$=ADDR(APAGE);
      879     7875    2           PATCHSTOP$=PINCRW(PATCH$,PATCH$->B$SYSPATCH.STOP);
      880     7876    2           PATCH$=PINCRW(PATCH$,1);
      881     7877
      882     7878    3           DO WHILE (PATCH$ < PATCHSTOP$);
      883     7879    3                WTPF.BUF_ = VECTOR(PATCH$->B$APATCH);
      884     7880
      885     7881    3                IF PATCH$->B$APATCH='!FIN' THEN GOTO PATCH_EXIT;
      886     7882    3                IF PATCH$->B$APATCH='!RUM'
      887     7883    4                THEN DO;
      888     7884    4                     APATCHSZ=80;
      889     7885    4                     NAME_VECTOR = VECTOR(RF_NAME);
      890     7886    4                     TYPE = P_RUM;
      891     7887    4                     CALL NEXT_FILE ALTRET(ANY_ERR);
      892     7888    4                     PATCH$=PINCRC(PATCH$,200);
      893     7889    4                     GOTO NEXT;
      894     7890    4                     END;
      895     7891    3                IF PATCH$->B$APATCH='!PLOVER'
      896     7892    4                THEN DO;
      897     7893    4                     NAME_VECTOR = VECTOR(PLOVER_NAME);
      898     7894    4                     TYPE = P_PLOVER;
      899     7895    4                     CALL NEXT_FILE ALTRET(ANY_ERR);
      900     7896    4                     GOTO SKIP_BANG;
      901     7897    4                     END;
      902     7898    3                IF PATCH$->B$APATCH='!BOOTIME'
      903     7899    4                THEN DO;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:30   
      904     7900    4                     NAME_VECTOR = VECTOR(BOOTIME_NAME);
      905     7901    4                     TYPE = P_BOOTIME;
      906     7902    4                     CALL NEXT_FILE ALTRET(ANY_ERR);
      907     7903    4                     GOTO SKIP_BANG;
      908     7904    4                     END;
      909     7905
      910     7906    3                IF PFCONTENTS(PATCH_TYPE) ~= 0
      911     7907    4                THEN DO;
      912     7908                       /* Write all !MINI !XDEL images to the :PF file in :SYSTAC     */
      913     7909    4                     CALL M$WRITE(WTPF) ALTRET(WPF_ERR);
      914     7910    4                     END;
      915     7911
      916     7912    3                IF (PATCH_TYPE = P_RUM) OR (PATCH_TYPE = P_PLOVER)
      917     7913    4                THEN DO;
      918     7914                                      /* Delete any QUIT patches in case there is
      919     7915                                         a QUIT from more than one patch source     */
      920     7916    4                     SKIP_P4=' ';
      921     7917    5                     DO I=0 TO 4;
      922     7918    5                          SKIP_PATCH(I) = PATCH$->B$5CHAR(I);
      923     7919    5                          IF SKIP_PATCH(I) = ' ' THEN GOTO CHECK_IT;
      924     7920    5                          END;
      925     7921    4   CHECK_IT:         ;
      926     7922    5                     DO I=0 TO SKIP_MAX;
      927     7923    6                          IF SKIP_PATCH=SKIP_TAB(I) THEN DO;
      928     7924    6                               CALL CONCAT (ERRM2.M,
              7924                                        'DISCOVERED ILLEGAL COMMAND IN RUM/PLOVER (',
              7924                                        SKIP_TAB.P(I),')');
      929     7925    6                               CALL REPORT_ERRM_2;
      930     7926    6                               GOTO SKIP_BANG;
      931     7927    6                               END;
      932     7928    5                          END;
      933     7929
      934     7930    4                     END;
      935     7931                                                /* Write the patch to the :RUM file   */
      936     7932    3                WTRUM.BUF_ = VECTOR(PATCH$->B$PATCH80);
      937     7933    3                CALL M$WRITE(WTRUM) ALTRET(WRUM_ERR);
      938     7934    3                RUMF_SIZE = RUMF_SIZE+1;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:31   
      939     7935    3   SKIP_BANG:   ;
      940     7936    3                PATCH$=PINCRC(PATCH$,APATCHSZ);
      941     7937    3   NEXT:        END;
      942     7938    2           END;
      943     7939
      944     7940    1   PATCH_EXIT: ;
      945     7941        /* DO THIS IF WE EVER WANT TO ALLOW PATCHING ON A DISK BOOT */
      946     7942        /*
      947     7943           T$->I$DISKDIR.PATCH.SIZE=0;
      948     7944           DP_GRAN=SYSDIR_GRAN;
      949     7945           CALL M$WRITE(WT_DP) ALTRET(PATCH_ERR);
      950     7946        */
      951     7947        /* RV_USRDIR still contains the System Area Directory */
      952     7948    1   PATCH_ERR: ;
      953     7949    1      CALL FINISH_RUM;
      954     7950    1      CALL M$CLOSE(CLS_PF) ALTRET(CPF_ERR);
      955     7951    1      GOTO EXIT_DP;
      956     7952                                      /* RESET TRAP CONTROL - XCON CONTROL AND RETURN */
      957     7953
      958     7954        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:32   
      959     7955                                                /* Error buildling :PF or :RUM files  */
      960     7956    1   PATCH_TRAP: ;
      961     7957    1      ERRM1.M='TRAP/XCON BUILDING PATCH FILE';
      962     7958    1      CALL REPORT_STK_ERR;
      963     7959    1      GOTO PATCH_ERR;
      964     7960                                           /* Error reading the system patch area     */
      965     7961    1   R_PATCH_ERR: ;
      966     7962    1      ERRM1.M='READ SYS DISK PATCH AREA';
      967     7963    1      CALL REPORT_ERR;
      968     7964    1      GOTO PATCH_ERR;
      969     7965
      970     7966                                                /* Error opening the :PF file         */
      971     7967    1   OPF_ERR: ;
      972     7968    1      ERRM1.M='OPEN :PF FILE';
      973     7969    1      CALL REPORT_ERR;
      974     7970    1      GOTO EXIT_DP;
      975     7971                                                /* Error writing :PF file             */
      976     7972    1   WPF_ERR: ;
      977     7973    1      ERRM1.M='WRITE :PF FILE';
      978     7974    1      CALL REPORT_ERR;
      979     7975    1      GOTO PATCH_ERR;
      980     7976
      981     7977                                                /* Error closing :PF file             */
      982     7978    1   CPF_ERR: ;
      983     7979    1      ERRM1.M='CLOSE :PF FILE';
      984     7980    1      CALL REPORT_ERR;
      985     7981    1      GOTO EXIT_DP;
      986     7982
      987     7983                                                /* Error opening a RUM file           */
      988     7984    1   ORUM_ERR: ;
      989     7985    1      ERRM1.M='OPEN :RUM FILE';
      990     7986    1      CALL REPORT_ERR;
      991     7987    1      GOTO PATCH_ERR;
      992     7988
      993     7989                                                /* Error writing a RUM file           */
      994     7990    1   WRUM_ERR: ;
      995     7991    1      ERRM1.M='WRITE :RUM FILE';
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:33   
      996     7992    1   ANY_ERR: ;
      997     7993    1      CALL REPORT_ERR;
      998     7994    1      GOTO PATCH_ERR;
      999     7995
     1000     7996                                                /* Close up System Disk and Return    */
     1001     7997        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:34   
     1002     7998
     1003     7999    1   NEXT_FILE: PROC ALTRET;
     1004     8000    2      ERRM1.M=' ';
     1005     8001    2      CALL FINISH_RUM;
     1006     8002    2      RUMF_SIZE=0;
     1007     8003    2      OPN_RUM.NAME_ = NAME_VECTOR;
     1008     8004    2      CALL M$OPEN(OPN_RUM) ALTRET(GIVE_ALTRET);
     1009     8005    2      PATCH_TYPE=TYPE;
     1010     8006    2      CALL M$WRITE(WTPF) ALTRET(GIVE_ALTRET);
     1011     8007    2      CALL M$WRITE(WT_PHEAD) ALTRET(GIVE_ALTRET);
     1012     8008    2      WTRUM.BUF_ = VECTOR(DOCMD);
     1013     8009    2      CALL M$WRITE(WTRUM) ALTRET(GIVE_ALTRET);
     1014     8010    2      WTRUM.BUF_ = VECTOR(ECHOCMD);
     1015     8011    2      CALL M$WRITE(WTRUM) ALTRET(GIVE_ALTRET);
     1016     8012    2      RETURN;
     1017     8013
     1018     8014    2   GIVE_ALTRET: ;
     1019     8015    2      ALTRETURN;
     1020     8016    2   END NEXT_FILE;
     1021     8017        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:35   
     1022     8018
     1023     8019    1   FINISH_RUM: PROC;
     1024     8020    2      IF PATCH_TYPE=P_PO
     1025     8021    3      THEN DO;
     1026     8022    3           IF RUMF_SIZE > 0
     1027     8023    3           THEN CALL M$CLOSE(CLS_RUM) ALTRET(CRUM_ERR);
     1028     8024    3           ELSE CALL M$CLOSE(REL_RUM) ALTRET(CRUM_ERR);
     1029     8025    3           RETURN;
     1030     8026    3           END;
     1031     8027
     1032     8028    2      IF (PATCH_TYPE = P_RUM) OR (PATCH_TYPE = P_PLOVER)
     1033     8029    3      THEN DO;
     1034     8030    3           IF RUMF_SIZE > 0
     1035     8031    4           THEN DO;
     1036     8032    4                WTRUM.BUF_ = VECTOR(SAY_KILLRUM);
     1037     8033    4                CALL M$WRITE(WTRUM) ALTRET(WRUM_FERR);
     1038     8034    4                WTRUM.BUF_ = VECTOR(SAY_ALIBR);
     1039     8035    4                CALL M$WRITE(WTRUM) ALTRET(WRUM_FERR);
     1040     8036    4                CALL M$CLOSE(CLS_RUM) ALTRET(CRUM_ERR);
     1041     8037    4                END;
     1042     8038    3           ELSE CALL M$CLOSE(REL_RUM) ALTRET(CRUM_ERR);
     1043     8039    3           RETURN;
     1044     8040    3           END;
     1045     8041
     1046     8042    2      IF PATCH_TYPE=P_BOOTIME
     1047     8043    3      THEN DO;
     1048     8044    3           IF RUMF_SIZE > 0
     1049     8045    4           THEN DO;
     1050     8046    4                CALL M$CLOSE(CLS_RUM) ALTRET(CRUM_ERR);
     1051     8047    4                END;
     1052     8048    3           ELSE CALL M$CLOSE(REL_RUM) ALTRET(CRUM_ERR);
     1053     8049    3           END;
     1054     8050    2      RETURN;
     1055     8051
     1056     8052    2   WRUM_FERR: ;
     1057     8053    2      ERRM1.M='WRITE :RUM QUIT';
     1058     8054    2      CALL REPORT_ERR;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:36   
     1059     8055    2      RETURN;
     1060     8056
     1061     8057    2   CRUM_ERR: ;
     1062     8058    2      ERRM1.M='CLOSE :RUM FILE';
     1063     8059    2      CALL REPORT_ERR;
     1064     8060    2      RETURN;
     1065     8061    2   END FINISH_RUM;
     1066     8062        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:37   
     1067     8063                                                /* CHKDA                              */
     1068     8064    1   CHKDA: PROC(LOW,HIGH,TEXT) ALTRET;
     1069     8065        %F$DCB;
     1070     8122    2   DCL LOW UBIN;
     1071     8123    2   DCL HIGH UBIN;
     1072     8124    2   DCL TEXT CHAR(4);
     1073     8125
     1074     8126    2      IF LOW > SYSDIR_GRAN AND HIGH < DCBADDR(DCBNUM(M$DP))->F$DCB.IXTNSIZE#
     1075     8127    2      THEN RETURN;
     1076     8128    2      CALL CONCAT(ERRM2.M,TEXT,' AREA DISK ADDRESS BAD');
     1077     8129    2      CALL REPORT_ERRM_2;
     1078     8130    2      ALTRETURN;
     1079     8131    2   END CHKDA;
     1080     8132        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:38   
     1081     8133
     1082     8134                                                /* REPORT ERROR                       */
     1083     8135    1   REPORT_ERR: PROC;
     1084     8136                                                /* This entry to report ALTRET errors */
     1085     8137    2      PERRC=B$ALT.ERR;
     1086     8138    2      FPT_ERRMSG.V.DCB# = B$ALT.DCB#;
     1087     8139    2      GOTO GET_ERRM;
     1088     8140
     1089     8141    2   REPORT_STK_ERR: ENTRY;
     1090     8142                                           /* This entry to report TCB Stack errors   */
     1091     8143    2      PERRC=B$EXCFR.ERR;
     1092     8144    2      FPT_ERRMSG.V.DCB# = 0;
     1093     8145    2      CALL M$CLRSTK(FPT_CLRSTK) ALTRET(GET_ERRM);
     1094     8146
     1095     8147    2   REPORT_ERRMSG: ENTRY;
     1096     8148                                                /* This entry after REPORT_DFERR      */
     1097     8149    2   GET_ERRM: ;
     1098     8150    2      CALL M$ERRMSG(FPT_ERRMSG) ALTRET(REPORT_ERR3);
     1099     8151    2   REPORT_ERR3: ;
     1100     8152                  /*  ERRMSG1 is output only if IGR_MSG1 or IGR_DEBUG is non-zero     */
     1101     8153    2      IF IGR_DEBUG + IGR_MSG1 ~= 0
     1102     8154    3      THEN DO;
     1103     8155                                                /* Dont print trailing blanks         */
     1104     8156    3           T$=ADDR(ERRM1);
     1105     8157    3           MSGINDX=ERRM1_SIZE-1;
     1106     8158    4           DO WHILE (T$->B$MSG(MSGINDX) = ' ');
     1107     8159    4                MSGINDX = MSGINDX-1;
     1108     8160    4                END;
     1109     8161    3           REPORT_ERRM1.BUFW_.BOUND = MSGINDX;
     1110     8162    3           CALL M$TEMPWROC(REPORT_ERRM1) ALTRET(TEMPWR_ALT1);
     1111     8163    3   TEMPWR_ALT1: ;
     1112     8164    3           IGR_MSG1=0;
     1113     8165    3           END;
     1114     8166
     1115     8167    2   REPORT_ERRM_2: ENTRY;
     1116     8168                                                /* This entry if no call to M$ERRMSG  */
     1117     8169    2      T$=ADDR(ERRM2);
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:39   
     1118     8170    2      MSGINDX=ERRM2_SIZE-1;
     1119     8171    3      DO WHILE (T$->B$MSG(MSGINDX) = ' ');
     1120     8172    3           MSGINDX = MSGINDX-1;
     1121     8173    3           END;
     1122     8174    2      REPORT_ERRM2.BUFW_.BOUND = MSGINDX;
     1123     8175    2      CALL M$TEMPWROC(REPORT_ERRM2) ALTRET(REPORT_EXIT);
     1124     8176    2   REPORT_EXIT: ;
     1125     8177    2      RETURN;
     1126     8178
     1127     8179    2   END REPORT_ERR;
     1128     8180        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:40   
     1129     8181    1   REPORT_DFERR: PROC;
     1130     8182    2      DFMSG.SDF = ':DF';
     1131     8183    2      DFMSG.MONID = RV_BUFF.DMONID;
     1132     8184    2      CALL BINCHAR(DFMSG.DUMPC,RV_BUFF.IDCOUNT);
     1133     8185    2   PRINT_DFMSG: ENTRY;
     1134     8186                                           /* Save for later call to REPORT_ERRMSG    */
     1135     8187    2      PERRC=B$ALT.ERR & '777777777770'O;
     1136     8188    2      FPT_ERRMSG.V.DCB# = B$ALT.DCB#;
     1137     8189                                                /* Dont print trailing blanks         */
     1138     8190    2      T$=ADDR(DFMSG);
     1139     8191    2      MSGINDX=DFMSG_SIZE-1;
     1140     8192    3      DO WHILE (T$->B$MSG(MSGINDX) = ' ');
     1141     8193    3           MSGINDX = MSGINDX-1;
     1142     8194    3           END;
     1143     8195    2      REPORT_DFMSG.BUFW_.BOUND = MSGINDX;
     1144     8196    2      CALL M$TEMPWROC(REPORT_DFMSG) ALTRET(TEMP_ALT2);
     1145     8197    2   TEMP_ALT2: ;
     1146     8198    2   END REPORT_DFERR;
     1147     8199    1   END IGR$RECOVER;
     1148     8200        %EOD;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:41   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   I_SUBS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   I$DISK.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IGR$RECOVER.

   Procedure IGR$RECOVER requires 1138 words for executable code.
   Procedure IGR$RECOVER requires 28 words of local(AUTO) storage.

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:42   

 Object Unit name= IGR$RECOVER                                File name= IGR$RECOVER.:E05TOU
 UTS= JUL 29 '97 22:37:19.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS    298    452  IGR$RECOVER
    1   Data  even  none  4948  11524  IGR$RECOVER
    2   DCB   even  none     0      0  M$UC
    3   DCB   even  none     0      0  M$DP
    4   DCB   even  none     0      0  M$EI
    5   DCB   even  none     0      0  M$LO
    6   DCB   even  none     0      0  M$PF
    7   DCB   even  none     0      0  M$RUM
    8   DCB   even  none     0      0  M$ASL
    9   Proc  even  none  1138   2162  IGR$RECOVER
   10  RoData even  none    38     46  IGR$RECOVER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes            yes      Std        0  IGR$RECOVER
     9      3                  yes      Std        0  IGR$PATCHF
     9     53                  yes      Std        0  IGR$RECOVERY
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:43   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  IGR_RCVR_ASL                       1      0  IGR_DEBUG
    1  10462  P_NAME                             1  10464  RF_NAME
    1  10466  PLOVER_NAME                        1  10470  BOOTIME_NAME
    1  10473  PFCONTENTS                         1  11504  TRAP_UNWIND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 IGR$TRAP
         yes           Std       0 IGA$RECOVER_ASL
 yes     yes           Std       1 AZA$LOGOFF
 yes     yes           Std       2 XSF$LOCCODE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  IG_BOOTFLAG                           IGG_RECONUTS
     B$JIT$                                M$DP                                  M$EI
     M$LO                                  M$PF                                  M$RUM
     M$ASL                                 B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:44   


        1        1        /*M* IGR$RECOVER  GHOST1 Recovery functions and patch file converter  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8
        9        9         /*P* NAME:     IGR$RECOVER.
       10       10
       11       11              PURPOSE:  To perform the GHOST1 functions that
       12       12                        require accessing the System Area of
       13       13                        the system disk.
       14       14
       15       15              DESCRIPTION:
       16       16                        When IGR$RECOVER is entered following
       17       17                        a tape boot the patch card images on the
       18       18                        System Area of the disk must be converted
       19       19                        to file managed files.
       20       20
       21       21                        When entered following a recovery, the
       22       22                        user's JITs in the dump file(s) in the
       23       23                        System Dump Area must be accessed to:
       24       24
       25       25                        o Update the :ACCTLG.
       26       26
       27       27                        o Enter the ASL recovery routine for each
       28       28                          user that was associated with an ASL when
       29       29                          the Screech occurred.
       30       30
       31       31                        o Release any * files that were open for
       32       32                          each user.
       33       33
       34       34                        IGR$RECOVER first takes trap control and exit
       35       35                        control to insure that we dont abort GHOST1.
       36       36
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:45   
       37       37                        The system pack is then opened and the System
       38       38                        Area Directory is read into a temporary buffer
       39       39                        (RV_USRDIR).
       40       40
       41       41                        The proper routine is then entered depending
       42       42                        on how GHOST1 is running:
       43       43                           BUILD_PATCH  if following a Tape Boot
       44       44                           RCVR_AJITS   if following a Recovery
       45       45
       46       46                        Both of thses routines exit through the EXIT_DP
       47       47                        routine, which closes the system pack, re-establishes
       48       48                        any previously set trap control and exit control,
       49       49                        and returns to IGM$MAIN.
       50       50
       51       51         */
       52       52
       53       53        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:46   
       54       54        IGR$RECOVER: PROC;

     54  9 000000   000000 700200 xent  IGR$RECOVER  TSX0  ! X66_AUTO_0
         9 000001   000034 000000                    ZERO    28,0
         9 000002   000005 710000 9                  TRA     s:7491

       55       55
       56       56        /**********************************************************/
       57       57    1   DCL IGR_RCVR_ASL SBIN CONSTANT SYMDEF INIT(1);
       58       58    1   DCL IGR_DEBUG SBIN STATIC SYMDEF INIT(0);
       59       59        /**********************************************************/
       60       60
       61       61        %INCLUDE CP_6;
       62      142        %INCLUDE IR_DATA_M;
       63      306        %INCLUDE NI$TABLES;
       64      522                                                /* AUTO STORAGE                       */
       65      523    1   DCL T$ PTR;
       66      524    1   DCL JITSZ SBIN(36);
       67      525    1   DCL JITSPG SBIN(36);
       68      526    1   DCL GOT_DIR SBIN;
       69      527    1   DCL I UBIN(36);
       70      528    1   DCL J UBIN(36);
       71      529                                                /* USED TO ACCESS THE SYSTEM DISK     */
       72      530
       73      531        %FPT_OPEN (FPTN=OPN_DP,
       74      532                   DCB=M$DP,
       75      533                   RES='DP',
       76      534                   ASN=DEVICE,
       77      535                   SN=SYSPACK,
       78      536                   FUN=UPDATE);
       79      645
       80      646        %VLP_SN (FPTN=SYSPACK,SN='CP-6''S');
       81      659
       82      660        %FPT_READ (FPTN=RD_DP,
       83      661                   DCB=M$DP,
       84      662                   BUF=RV_USRDIR,
       85      663                   KEYS=YES,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:47   
       86      664                   KEY=DP_GRAN);
       87      703
       88      704
       89      705        %FPT_READ (FPTN=RAPAGE,
       90      706                   DCB=M$DP,
       91      707                   BUF=APAGE,
       92      708                   KEYS=YES,
       93      709                   KEY=DP_GRAN);
       94      748
       95      749        %FPT_WRITE (FPTN=WT_DP,
       96      750                   DCB=M$DP,
       97      751                   BUF=RV_USRDIR,
       98      752                   KEY=DP_GRAN);
       99      783
      100      784        %FPT_CLOSE (FPTN=CLS_DP,
      101      785                   DCB=M$DP,
      102      786                   DISP=SAVE);
      103      828
      104      829        %FPT_CLOSE (FPTN=CLS_EI,
      105      830                    DCB=M$EI,
      106      831                    DISP=SAVE);
      107      873
      108      874                                                /*  GET SOME BUFFERS                  */
      109      875        %RV_BUFF;
      110      911        %RV_USRDIR;
      111      915
      112      916    1   DCL APAGE(0:1023) UBIN(36) STATIC;
      113      917
      114      918    1   DCL ASL_FPARAM(0:1023) UBIN WORD STATIC;
      115      919
      116      920    1   DCL DP_GRAN SBIN STATIC INIT(0);
      117      921
      118      922    1   DCL SYSDIR_GRAN SBIN STATIC INIT(0);    /* DA OF SYS AREA DIRECTORY           */
      119      923    1   DCL SYSAREA_LOWDA SBIN STATIC INIT(0);  /* DA OF FIRST SYS AREA GRAN          */
      120      924
      121      925
      122      926        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:48   
      123      927                                                /* USED FOLLOWING RECOVERY            */
      124      928
      125      929        %INCLUDE AZ_MACRO_C;
      126     3516        %INCLUDE AZ_SUBS_C;
      127     3585        %INCLUDE B_SEGIDS_C;
      128     4124        %LIST;
      129     4125        %LOGOFF$PARAM (NAME=LPARAM,STCLASS=STATIC);
              4126        %LSET LISTDIR='0'B;
              4130    1   DCL 1 LPARAM STATIC,
              4131    1         2 CODE SBIN,
              4136    1         2 ERR SBIN,
              4142    1         2 DCB1 UBIN HALF UNAL,
              4146    1         2 DCB_LL UBIN HALF UNAL,
              4151    1         2 UTS UBIN WORD,
              4156    1         2 JIT$ PTR,
              4160    1         2 ACCUM_CHG UBIN WORD;
      130     4166        %PLIST;
      131     4167
      132     4168        %FPT_RELSTARF;
      133     4183
      134     4184        %FPT_SAD(FPTN=SEE_CFUS,
      135     4185                 STCLASS=CONSTANT,
      136     4186                 MONSID=%DS1SID,
      137     4187                 USERSID=%SPCL4SID);
      138     4202
      139     4203        %FPT_CLOSE(FPTN=DSMNT_SET,
      140     4204                   DCB=M$DP,
      141     4205                   DISP=RELEASE);
      142     4247
      143     4248        %FPT_OPEN (FPTN=OPN_ASL,
      144     4249                   DCB=M$ASL,
      145     4250                   TEST=YES,
      146     4251                   ASN=FILE,
      147     4252                   FUN=IN,
      148     4253                   NAME=STARI,
      149     4254                   FPARAM=ASL_FPARAM);
      150     4363
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:49   
      151     4364    1   DCL 1 STARI CONSTANT,
      152     4365    1         2 L UBIN(9) UNAL INIT(2),
      153     4366    1         2 N CHAR(2) UNAL INIT('*I');
      154     4367
      155     4368
      156     4369    1   DCL AJIT$ PTR STATIC;
      157     4370
      158     4371        %FPT_ALIB (FPTN=ALIB_ASL,LIBNAME=ASL);
      159     4388        %FPT_DLIB (FPTN=DLIB_ASL,LIBNAME=ASL);
      160     4401
      161     4402    1   DCL 1 ASL STATIC DALIGNED,
      162     4403    1         2 CNT UBIN(9) UNAL INIT(0),
      163     4404    1         2 TEXT CHAR(31) UNAL INIT(' ');
      164     4405
      165     4406    1   DCL 1 B$ASL BASED,
      166     4407    1         2 CNT UBIN(9) UNAL,
      167     4408    1         2 TEXT CHAR(31) UNAL;
      168     4409
      169     4410    1   DCL FPARAM$ PTR STATIC INIT(ADDR(ASL_FPARAM));
      170     4411    1   DCL FPARAM_CODE SBIN STATIC INIT(13);
      171     4412
      172     4413    1   DCL 1 RCVR2D(0:3) STATIC ALIGNED,
      173     4414    1         2 DA UBIN WORD;
      174     4415
      175     4416    1   DCL RCVR2_LOWDA SBIN STATIC INIT(0);    /* LOW DA OF SYS RCVR AREA            */
      176     4417    1   DCL RCVR2_HIGHDA SBIN STATIC INIT(0);   /* HIGH DA OF SYS RCVR AREA           */
      177     4418
      178     4419    1   DCL RDUMP_LOWDA SBIN STATIC INIT(0);    /* LOW DA OF A RECOVERY DUMP          */
      179     4420    1   DCL RDUMP_HIGHDA SBIN STATIC INIT(0);   /* HIGH DA OF A RECOVERY DUMP         */
      180     4421
      181     4422    1   DCL DDIR_GRAN SBIN STATIC INIT(0);      /* DA OF RECOVER BUFFER-DIRECTORY     */
      182     4423
      183     4424    1   DCL DINDEX SBIN WORD STATIC INIT(0);
      184     4425    1   DCL JITRAP SBIN STATIC INIT(0);
      185     4426    1   DCL RELFTRAP SBIN STATIC INIT(0);
      186     4427        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:50   
      187     4428                                                /*  USED TO BUILD PATCH FILE          */
      188     4429
      189     4430    1   DCL DPATCHSZ UBIN WORD;
      190     4431    1   DCL APATCHSZ UBIN WORD;
      191     4432
      192     4433    1   DCL PATCH$ PTR;
      193     4434    1   DCL PATCHSTOP$ PTR;
      194     4435
      195     4436    1   DCL RUMF_SIZE UBIN STATIC INIT(0);
      196     4437    1   DCL NAME_VECTOR VECTOR;
      197     4438    1   DCL TYPE UBIN;
      198     4439
      199     4440        %LIST;
      200     4441        %RV_PFNAME;
              4442    1   DCL 1 NAME STCLASS DALIGNED,2 L UBIN(9)UNAL,2 N1 CHAR(3),2 MONID,3 VER CHAR(3),3
              4442            BOOTC CHAR(1);
      201     4444        %PLIST;
      202     4445                                           /* NAMES OF THE FILES IN THE :SYS ACCT     */
      203     4446
      204     4447    1   DCL 1 P_NAME STATIC SYMDEF ALIGNED,
      205     4448    1         2 L UBIN(9) UNAL INIT(6),
      206     4449    1         2 N1 CHAR(6) UNAL INIT(':PATCH');
      207     4450
      208     4451    1   DCL 1 RF_NAME STATIC SYMDEF ALIGNED,
      209     4452    1         2 L UBIN(9) UNAL INIT(4),
      210     4453    1         2 N1 CHAR(4) UNAL INIT(':RUM');
      211     4454
      212     4455    1   DCL 1 PLOVER_NAME STATIC SYMDEF ALIGNED,
      213     4456    1         2 L UBIN(9) UNAL INIT(7),
      214     4457    1         2 N1 CHAR(7) UNAL INIT(':PLOVER');
      215     4458
      216     4459    1   DCL 1 BOOTIME_NAME STATIC SYMDEF ALIGNED,
      217     4460    1         2 L UBIN(9) UNAL INIT(8),
      218     4461    1         2 N1 CHAR(9) UNAL INIT(':BOOTIME');
      219     4462
      220     4463    1   DCL PFCONTENTS(0:4) UBIN WORD STATIC SYMDEF INIT (0,
      221     4464    1                                        1, /* P_PO                               */
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:51   
      222     4465    1                                        0, /* P_RUM*/
      223     4466    1                                        0, /*P_PLOVER*/
      224     4467    1                                       0); /* P_BOOTIME*/
      225     4468
      226     4469    1   DCL PATCH_TYPE UBIN STATIC INIT(0);
      227     4470        %SUB P_PO=1;
      228     4471        %SUB P_RUM=2;
      229     4472        %SUB P_PLOVER=3;
      230     4473        %SUB P_BOOTIME=4;
      231     4474
      232     4475    1   DCL 1 DOCMD STATIC ALIGNED,
      233     4476    1         2 * CHAR(15) UNAL INIT('OUTPUT INTO :PF'),
      234     4477    1         2 MONID,
      235     4478    1           3 VER CHAR(3) UNAL,
      236     4479    1           3 BOOTC CHAR(1) UNAL,
      237     4480    1         2 ACCT CHAR(8) UNAL INIT('.:SYSTAC'),
      238     4481    1         2 * CHAR(53) UNAL INIT(' ');
      239     4482
      240     4483    1   DCL ECHOCMD CHAR(80) CONSTANT INIT(
      241     4484    1         'ECHO               ');
      242     4485    1   DCL SAY_KILLRUM CHAR(80) CONSTANT INIT(
      243     4486    1        'KILL RUM      "SUPPLIED BY IGR$PATCH');
      244     4487    1   DCL SAY_Q CHAR(80) CONSTANT INIT(
      245     4488    1        'QUIT       "SUPPLIED BY IGR$PATCH');
      246     4489    1   DCL SAY_ALIBR CHAR(80) CONSTANT INIT(
      247     4490    1        'ALIB RET       "SUPPLIED BY IGR$PATCH');
      248     4491
      249     4492        %FPT_OPEN (FPTN=DEL_RUM,
      250     4493                   DCB=M$RUM,
      251     4494                   DELETE=YES,
      252     4495                   ASN=FILE,
      253     4496                   FUN=IN,
      254     4497                   SCRUB=YES);
      255     4606
      256     4607        %FPT_OPEN (FPTN=OPN_PF,
      257     4608                   DCB=M$PF,
      258     4609                   ASN=FILE,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:52   
      259     4610                   CTG=YES,
      260     4611                   EXIST=NEWFILE,
      261     4612                   FUN=CREATE,
      262     4613                   NAME=PF_NAME,
      263     4614                   ACCT=SYSTAC,
      264     4615                   ORG=CONSEC,
      265     4616                   COMP=YES,
      266     4617                   DISP=NAMED);
      267     4726
      268     4727    1   DCL SYSTAC CONSTANT CHAR(8) DALIGNED INIT(':SYSTAC');
      269     4728
      270     4729        %FPT_WRITE (FPTN=WTPF,
      271     4730                    DCB=M$PF);
      272     4761
      273     4762        %FPT_WRITE(FPTN=WT_PHEAD,
      274     4763                   DCB=M$PF,
      275     4764                   BUF=P_HEADER);
      276     4795
      277     4796        %FPT_CLOSE (FPTN=CLS_PF,
      278     4797                    DCB=M$PF,
      279     4798                   RELG=YES,
      280     4799                   DISP=SAVE);
      281     4841
      282     4842        %FPT_OPEN (FPTN=OPN_RUM,
      283     4843                   DCB=M$RUM,
      284     4844                   ASN=FILE,
      285     4845                   CTG=YES,
      286     4846                   EXIST=NEWFILE,
      287     4847                   FUN=CREATE,
      288     4848                   ORG=CONSEC,
      289     4849                   COMP=YES,
      290     4850                   DISP=NAMED);
      291     4959
      292     4960        %FPT_WRITE (FPTN=WTRUM,
      293     4961                   DCB=M$RUM);
      294     4992
      295     4993        %FPT_CLOSE (FPTN=CLS_RUM,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:53   
      296     4994                   DCB=M$RUM,
      297     4995                   RELG=YES,
      298     4996                   DISP=SAVE);
      299     5038
      300     5039        %FPT_CLOSE (FPTN=REL_RUM,
      301     5040                    DCB=M$RUM,
      302     5041                    RELG=YES,
      303     5042                    DISP=RELEASE);
      304     5084
      305     5085        %FPT_TIME (DAY=P_HEADER.DAY,
      306     5086                   DATE=P_HEADER.DATE,
      307     5087                   TIME=P_HEADER.TIME);
      308     5106
      309     5107    1   DCL 1 P_HEADER STATIC ALIGNED,
      310     5108    1         2 TYP CHAR(13) UNAL INIT('" TAPE BOOT'),
      311     5109    1         2 MONID CHAR(4) UNAL INIT('A001'),
      312     5110    1         2 * CHAR(2) UNAL INIT(' '),
      313     5111    1         2 DAY CHAR(5) UNAL INIT(' '),
      314     5112    1         2 DATE CHAR(12) UNAL INIT(' '),
      315     5113    1         2 TIME CHAR(15) UNAL INIT(' '),
      316     5114    1         2 * CHAR(2) UNAL INIT(' '),
      317     5115    1         2 FILES CHAR(10) UNAL INIT(' '),
      318     5116    1         2 RECON CHAR(7) UNAL INIT(' '),
      319     5117    1         2 * CHAR(130) UNAL INIT(' ');
      320     5118
      321     5119    1   DCL SKIP_PATCH(0:4) CHAR(1) STATIC;
      322     5120    1   DCL SKIP_P4 REDEF SKIP_PATCH CHAR(5) UNAL;
      323     5121    1   DCL B$5CHAR(0:4) CHAR(1) BASED;
      324     5122
      325     5123        %SUB SKIP_MAX=6;
      326     5124    1   DCL 1 SKIP_TAB(0:SKIP_MAX) CONSTANT,
      327     5125                                 /* Skip any RUM patch cards that start like this     */
      328     5126    1         2 P CHAR(5) INIT(
      329     5127    1           'G    ',
      330     5128    1           'GO   ',
      331     5129    1           'Q    ',
      332     5130    1           'QUIT ',
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:54   
      333     5131    1           'END  ',
      334     5132    1           'ALIB ',
      335     5133    1           'ALIB ');
      336     5134
      337     5135    1   DCL B$PATCH80 CHAR(80) BASED;
      338     5136
      339     5137    1   DCL B$APATCH CHAR(APATCHSZ) BASED;
      340     5138
      341     5139    1   DCL 1 B$SYSPATCH BASED ALIGNED,
      342     5140    1         2 STOP UBIN WORD,
      343     5141    1         2 PATCH(0:0) CHAR(200) UNAL;
      344     5142
      345     5143        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:55   
      346     5144                                                /*  BASED STRUCTURES                  */
      347     5145        %INCLUDE I$DISK;
      348     5397        %INCLUDE FM$MACROS;
      349     5772        %FM$SET(BASED="BASED(F$CFU$)");
      350     5777        %FM$CFUX;
      351     5782    1   DCL 1 F$CFU$_ CONSTANT,
      352     5783    1         2 * BIT(24)INIT('0'B),
      353     5784    1         2 * BIT(12)INIT(%SPCL4SID);
      354     5785    1   DCL F$CFU$ REDEF F$CFU$_ PTR;
      355     5786        %FM$VID;
      356     5792        %RV_BUFF (NAME=RV$BUFF,STCLASS=BASED);
      357     5828 S      %INCLUDE B$JIT_C;
      358     5829        %B$JIT0;
      359     5918        %U$JIT1;
      360     5992        %M$JIT2X;
      361     5995        %F$JIT3;
      362     6000        %S$JIT4X;
      363     6003        %J$JIT5X;
      364     6006        %A$JIT6X;
      365     6009
      366     6010                                                /* EXTERNAL DATA                      */
      367     6011    1   DCL IG_BOOTFLAG UBIN WORD SYMREF;
      368     6012    1   DCL IGG_RECONUTS UBIN SYMREF;
      369     6013    1   DCL B$JIT$ PTR SYMREF;
      370     6014
      371     6015                                                /* EXTERNAL PROCEDURES                */
      372     6016    1   DCL AZA$LOGOFF ENTRY(1) ALTRET;
      373     6017    1   DCL IGA$RECOVER_ASL ENTRY;
      374     6018    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
      375     6019
      376     6020                                                /* DCBS                               */
      377     6021    1   DCL M$DP DCB;
      378     6022    1   DCL M$EI DCB;
      379     6023    1   DCL M$LO DCB;
      380     6024    1   DCL M$PF DCB;
      381     6025    1   DCL M$RUM DCB;
      382     6026    1   DCL M$ASL DCB;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:56   
      383     6027
      384     6028                                                /*  STRING SUBSTITUTIONS              */
      385     6029        %INCLUDE I_SUBS_C;
      386     6053        %INCLUDE B_ERRORS_C;
      387     7180        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:57   
      388     7181                                                /*  USED FOR ERROR MESSAGE REPORTING  */
      389     7182        %B$TCB;
      390     7185        %B$ALT;
      391     7193        %B$EXCFR;
      392     7211    1   DCL B$TCB$ PTR SYMREF;
      393     7212        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      394     7213        %SUB B$EXCFR=B$TCB$->B$TCB.STK$->B$EXCFR;
      395     7214
      396     7215    1   DCL IGR_MSG1 SBIN STATIC INIT(0);
      397     7216
      398     7217
      399     7218    1   DCL 1 ERRM1 STATIC,
      400     7219    1         2 CR BIT(18) UNAL INIT('015012'O),
      401     7220    1         2 IGR CHAR(4) UNAL INIT('IGR-'),
      402     7221    1         2 M CHAR(30) UNAL INIT(' ');
      403     7222
      404     7223        %SUB ERRM1_SIZE=36;
      405     7224
      406     7225    1   DCL 1 ERRM2 STATIC,
      407     7226    1         2 CR BIT(18) UNAL INIT('015012'O),
      408     7227    1         2 IGR CHAR(4) UNAL INIT('IGR-'),
      409     7228    1         2 M CHAR(120) UNAL INIT(' ');
      410     7229
      411     7230        %SUB ERRM2_SIZE=126;
      412     7231
      413     7232    1   DCL 1 DFMSG STATIC,
      414     7233    1         2 CR BIT(18) UNAL INIT('015012'O),
      415     7234    1         2 IGR CHAR(4) UNAL INIT('IGR-'),
      416     7235    1         2 * CHAR(5) UNAL INIT('SLOT '),
      417     7236    1         2 SLOTN CHAR(1) UNAL INIT(' '),
      418     7237    1         2 * CHAR(1) UNAL INIT(' '),
      419     7238    1         2 M CHAR(30) UNAL INIT(' '),
      420     7239    1         2 * CHAR(1) UNAL INIT(' '),
      421     7240    1         2 SDF CHAR(3) UNAL INIT(' '),
      422     7241    1         2 MONID,
      423     7242    1           3 VER CHAR(3) UNAL INIT(' '),
      424     7243    1           3 BOOT CHAR(1) UNAL INIT(' '),
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:58   
      425     7244    1         2 DUMPC CHAR(3) UNAL INIT(' ');
      426     7245
      427     7246        %SUB DFMSG_SIZE=54;
      428     7247
      429     7248    1   DCL MSGINDX SBIN STATIC INIT(0);
      430     7249
      431     7250    1   DCL B$MSG(0:127) CHAR(1) BASED;
      432     7251
      433     7252        %FPT_TEMPWROC (FPTN=REPORT_ERRM1,
      434     7253                       BUFW=ERRM1);
      435     7269        %FPT_TEMPWROC (FPTN=REPORT_ERRM2,
      436     7270                       BUFW=ERRM2);
      437     7286        %FPT_TEMPWROC (FPTN=REPORT_DFMSG,
      438     7287                       BUFW=DFMSG);
      439     7303
      440     7304        %FPT_ERRMSG (FPTN=FPT_ERRMSG,
      441     7305                     CODE=PERRC,
      442     7306                     BUF="ERRM2.M",
      443     7307                     RESULTS=VLR_ERRMSG,
      444     7308                     SUBMESS=YES);
      445     7335
      446     7336        %VLR_ERRMSG;
      447     7358    1   DCL 1 PERRC STATIC,
      448     7359    1         2 FCG BIT(12) UNAL,
      449     7360    1         2 MID BIT(6) UNAL,
      450     7361    1         2 MON BIT(1) UNAL,
      451     7362    1         2 CODE UBIN(14) UNAL,
      452     7363    1         2 SEV UBIN(3) UNAL;
      453     7364
      454     7365
      455     7366                                                /*  USED FOR TRAP CONTROL             */
      456     7367        %FPT_TRAP (FPTN=TRAPFPT,STCLASS=CONSTANT,
      457     7368                    PTC=VLP_PTC,
      458     7369                   ERRORS=IGR$TRAP,
      459     7370                   ARITHMETIC=IGR$TRAP,
      460     7371                   PROGRAMMED=IGR$TRAP,
      461     7372                   OVERFLOW=TRAP,
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:59   
      462     7373                   MME=TRAP,
      463     7374                   FAULT_TAG=TRAP,
      464     7375                   MEMORY=TRAP,
      465     7376                   COMMAND=TRAP,
      466     7377                   LOCKUP=TRAP,
      467     7378                   IPR=TRAP,
      468     7379                   MISSING_SEG=TRAP,
      469     7380                   MISSING_PAGE=TRAP,
      470     7381                   SECURITY_2=TRAP,
      471     7382                   SECURITY_1=TRAP,
      472     7383                   HARDWARE=TRAP,
      473     7384                   DIVIDE_CHECK=TRAP,
      474     7385                   PMME=IGR$TRAP);
      475     7408
      476     7409        %FPT_TRAP (FPTN=RESTORET,
      477     7410                   PTC=VLP_PTC,
      478     7411                   RESTORE=YES);
      479     7434
      480     7435        %VLP_PTC;
      481     7451
      482     7452    1   DCL IGR$TRAP ENTRY ASYNC;
      483     7453    1   DCL TRAP_UNWIND REMEMBER STATIC SYMDEF DALIGNED;
      484     7454    1   DCL AR_EXIT_UNW REMEMBER DALIGNED STATIC;
      485     7455
      486     7456        %FPT_XCON (UENTRY=IGR$TRAP,
      487     7457                   PXCON=PREVXCON);
      488     7471
      489     7472    1   DCL PREVXCON BIT(72) STATIC DALIGNED;
      490     7473        %FPT_CLRSTK;
      491     7487
      492     7488        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:60   
      493     7489
      494     7490    1   IGR$PATCHF: ENTRY;

   7490  9 000003   000000 700200 xent  IGR$PATCHF   TSX0  ! X66_AUTO_0
         9 000004   000034 000000                    ZERO    28,0

      495     7491    1      IF (IG_BOOTFLAG >= I_RECOVERY)

   7491  9 000005   000000 235000 xsym               LDA     IG_BOOTFLAG
         9 000006   000011 115007                    CMPA    9,DL
         9 000007   000011 602000 9                  TNC     s:7494

      496     7492    1      THEN RETURN;

   7492  9 000010   000000 702200 xent               TSX2  ! X66_ARET

      497     7493
      498     7494    1      IF (IG_BOOTFLAG >= I_DISKBOOT)

   7494  9 000011   000007 115007                    CMPA    7,DL
         9 000012   000024 602000 9                  TNC     s:7502

      499     7495    2      THEN DO;

      500     7496    2           P_HEADER.TYP='" DISK BOOT';

   7496  9 000013   040000 100400                    MLR     fill='040'O
         9 000014   000156 000013 0                  ADSC9   TRAPFPT+10               cn=0,n=11
         9 000015   011216 000015 1                  ADSC9   P_HEADER                 cn=0,n=13

      501     7497    2           IF (IG_BOOTFLAG = I_DISKBOOT_RECON)

   7497  9 000016   000010 115007                    CMPA    8,DL
         9 000017   000023 601000 9                  TNZ     s:7500

      502     7498    2           THEN P_HEADER.RECON='- RECON';

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:61   
   7498  9 000020   040000 100400                    MLR     fill='040'O
         9 000021   000161 000007 0                  ADSC9   TRAPFPT+13               cn=0,n=7
         9 000022   011235 600007 1                  ADSC9   P_HEADER+15              cn=3,n=7

      503     7499                       /* Someday we may want to allow patching following a Disk Boot */
      504     7500    2           RETURN;

   7500  9 000023   000000 702200 xent               TSX2  ! X66_ARET

      505     7501    2           END;
      506     7502    1      IF (IG_BOOTFLAG = I_NEWFILES)

   7502  9 000024   000002 115007                    CMPA    2,DL
         9 000025   000032 601000 9                  TNZ     s:7504

      507     7503    1      THEN P_HEADER.FILES='NEW FILES';

   7503  9 000026   040000 100400                    MLR     fill='040'O
         9 000027   000163 000011 0                  ADSC9   TRAPFPT+15               cn=0,n=9
         9 000030   011233 200012 1                  ADSC9   P_HEADER+13              cn=1,n=10
         9 000031   000045 710000 9                  TRA     s:7508

      508     7504    1      ELSE IF (IG_BOOTFLAG = I_SYSFILES) OR (IG_BOOTFLAG=I_SYSFILES_RECON)

   7504  9 000032   000003 115007                    CMPA    3,DL
         9 000033   000036 600000 9                  TZE     s:7505
         9 000034   000005 115007                    CMPA    5,DL
         9 000035   000042 601000 9                  TNZ     s:7506

      509     7505    1           THEN P_HEADER.FILES='SYS FILES';

   7505  9 000036   040000 100400                    MLR     fill='040'O
         9 000037   000166 000011 0                  ADSC9   TRAPFPT+18               cn=0,n=9
         9 000040   011233 200012 1                  ADSC9   P_HEADER+13              cn=1,n=10
         9 000041   000045 710000 9                  TRA     s:7508

      510     7506    1           ELSE P_HEADER.FILES='NO FILES';
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:62   

   7506  9 000042   040000 100400                    MLR     fill='040'O
         9 000043   000171 000010 0                  ADSC9   TRAPFPT+21               cn=0,n=8
         9 000044   011233 200012 1                  ADSC9   P_HEADER+13              cn=1,n=10

      511     7507
      512     7508    1      IF (IG_BOOTFLAG >= I_SYSFILES_RECON)

   7508  9 000045   000005 115007                    CMPA    5,DL
         9 000046   000052 602000 9                  TNC     s:7510

      513     7509    1      THEN P_HEADER.RECON='- RECON';

   7509  9 000047   040000 100400                    MLR     fill='040'O
         9 000050   000161 000007 0                  ADSC9   TRAPFPT+13               cn=0,n=7
         9 000051   011235 600007 1                  ADSC9   P_HEADER+15              cn=3,n=7

      514     7510    1      GOTO SET_TRAP;

   7510  9 000052   000061 710000 9                  TRA     SET_TRAP

      515     7511
      516     7512    1   IGR$RECOVERY: ENTRY;

   7512  9 000053   000000 700200 xent  IGR$RECOVERY TSX0  ! X66_AUTO_0
         9 000054   000034 000000                    ZERO    28,0

      517     7513    1      IF IG_BOOTFLAG < I_RECOVERY

   7513  9 000055   000000 235000 xsym               LDA     IG_BOOTFLAG
         9 000056   000011 115007                    CMPA    9,DL
         9 000057   000061 603000 9                  TRC     SET_TRAP

      518     7514    1      THEN RETURN;

   7514  9 000060   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:63   
   7513  9 000061                       SET_TRAP     null
      519     7515
      520     7516    1   SET_TRAP: ;
      521     7517    1      REMEMBER TRAP_HAND IN TRAP_UNWIND;

   7517  9 000061   000216 635000 9                  EAA     TRAP_HAND
         9 000062   011504 452400 1                  STP2    TRAP_UNWIND
         9 000063   011505 755000 1                  STA     TRAP_UNWIND+1

      522     7518    1      CALL M$TRAP(TRAPFPT) ALTRET(SET_XCON);

   7518  9 000064   000144 630400 0                  EPPR0   TRAPFPT
         9 000065   410004 713400                    CLIMB   alt,+4100
         9 000066   400400 401760                    pmme    nvectors=2
         9 000067   000070 702000 9                  TSX2    SET_XCON

   7513  9 000070                       SET_XCON     null
      523     7519
      524     7520    1   SET_XCON: ;
      525     7521    1      CALL M$XCON(FPT_XCON) ALTRET(OPEN_DP);

   7521  9 000070   011510 630400 1                  EPPR0   FPT_XCON
         9 000071   410003 713400                    CLIMB   alt,+4099
         9 000072   400400 401760                    pmme    nvectors=2
         9 000073   000074 702000 9                  TSX2    OPEN_DP

   7513  9 000074                       OPEN_DP      null
      526     7522                                                /*                                    */
      527     7523                                                /*                                    */
      528     7524    1   OPEN_DP: ;
      529     7525                  /* Open the System Pack - Read VID and SAD - Go to proper routine   */
      530     7526    1      CALL M$OPEN(OPN_DP) ALTRET(ODP_ERR);

   7526  9 000074   000002 630400 1                  EPPR0   OPN_DP
         9 000075   450000 713400                    CLIMB   alt,open
         9 000076   410400 401760                    pmme    nvectors=18
         9 000077   000226 702000 9                  TSX2    ODP_ERR
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:64   

      531     7527    1      CALL M$READ(RD_DP) ALTRET(R_VID_ERR);

   7527  9 000100   000100 630400 1                  EPPR0   RD_DP
         9 000101   440000 713400                    CLIMB   alt,read
         9 000102   401400 401760                    pmme    nvectors=4
         9 000103   000242 702000 9                  TSX2    R_VID_ERR

      532     7528                                      /*Read the VID -- use RV_USRDIR for a buffer    */
      533     7529    1      T$=ADDR(RV_USRDIR);

   7529  9 000104   000000 236000 10                 LDQ     0
         9 000105   200003 756100                    STQ     T$,,AUTO

      534     7530    1      DP_GRAN=T$->FM$VID.SYSDIRDA;

   7530  9 000106   200003 470500                    LDP0    T$,,AUTO
         9 000107   000006 235100                    LDA     6,,PR0
         9 000110   010244 755000 1                  STA     DP_GRAN

      535     7531    1      SYSDIR_GRAN=DP_GRAN;

   7531  9 000111   010245 755000 1                  STA     SYSDIR_GRAN

      536     7532    1      IF (SYSDIR_GRAN=0) OR (T$->FM$VID.SYSSIZE=0)

   7532  9 000112   000115 600000 9                  TZE     s:7534
         9 000113   000005 235100                    LDA     5,,PR0
         9 000114   000123 601000 9                  TNZ     s:7539

      537     7533    2      THEN DO;

      538     7534    2           ERRM2.M='NO SYSTEM AREA ON THE SYS PACK';

   7534  9 000115   040000 100400                    MLR     fill='040'O
         9 000116   000173 000036 0                  ADSC9   TRAPFPT+23               cn=0,n=30
         9 000117   011315 400170 1                  ADSC9   ERRM2+1                  cn=2,n=120
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:65   

      539     7535    2           CALL REPORT_ERRM_2;

   7535  9 000120   002043 701000 9                  TSX1    REPORT_ERRM_2
         9 000121   000000 011000                    NOP     0

      540     7536    2           GOTO EXIT_DP;

   7536  9 000122   000133 710000 9                  TRA     EXIT_DP

      541     7537    2           END;
      542     7538
      543     7539    1      CALL M$READ(RD_DP) ALTRET(R_SAD_ERR);

   7539  9 000123   000100 630400 1                  EPPR0   RD_DP
         9 000124   440000 713400                    CLIMB   alt,read
         9 000125   401400 401760                    pmme    nvectors=4
         9 000126   000252 702000 9                  TSX2    R_SAD_ERR

      544     7540                            /* Read the System Area Directory--buffer is RV_USRDIR    */
      545     7541    1      IF IG_BOOTFLAG <  I_RECOVERY

   7541  9 000127   000000 235000 xsym               LDA     IG_BOOTFLAG
         9 000130   000011 115007                    CMPA    9,DL
         9 000131   001113 602000 9                  TNC     BUILD_PATCH

      546     7542    1      THEN GOTO BUILD_PATCH;
      547     7543    1      ELSE GOTO RCVR_AJITS;

   7543  9 000132   000256 710000 9                  TRA     RCVR_AJITS

   7541  9 000133                       EXIT_DP      null
      548     7544                                                /*                                    */
      549     7545    1   EXIT_DP: ;
      550     7546    1      CALL M$CLOSE(CLS_DP) ALTRET(CLS_DP_ERR);

   7546  9 000133   000150 630400 1                  EPPR0   CLS_DP
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:66   
         9 000134   450001 713400                    CLIMB   alt,close
         9 000135   406000 401760                    pmme    nvectors=13
         9 000136   000236 702000 9                  TSX2    CLS_DP_ERR

   7541  9 000137                       EXIT_IGR     null
      551     7547                                                /* Close the System Pack              */
      552     7548    1   EXIT_IGR: ;
      553     7549                                      /* DISMOUNT THE REST, IN CASE ASL USED THEM     */
      554     7550    1      CALL M$SAD(SEE_CFUS)ALTRET(NO_DSMNT);

   7550  9 000137   000002 630400 0                  EPPR0   SEE_CFUS
         9 000140   430015 713400                    CLIMB   alt,+12301
         9 000141   400000 401760                    pmme    nvectors=1
         9 000142   000201 702000 9                  TSX2    NO_DSMNT

      555     7551    1      I=FM$CFUX.SETH;

   7551  9 000143   000143 470400 0                  LDP0    F$CFU$_
         9 000144   000005 236100                    LDQ     5,,PR0
         9 000145   000022 772000                    QRL     18
         9 000146   200007 756100                    STQ     I,,AUTO

      556     7552    2      DO WHILE(I~=0);

   7552  9 000147   000201 600000 9                  TZE     NO_DSMNT

      557     7553    3           IF FM$SET.SYSID(I)~=0 THEN DO;

   7553  9 000150   200007 235100                    LDA     I,,AUTO
         9 000151   000003 735000                    ALS     3
         9 000152   000143 470400 0                  LDP0    F$CFU$_
         9 000153   000002 720105                    LXL0    2,AL,PR0
         9 000154   000172 600000 9                  TZE     NO_DSMNT_1

      558     7554    3                SYSPACK.SN#(0)=FM$SET.PSN(I);

   7554  9 000155   200007 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:67   
         9 000156   000005 736000                    QLS     5
         9 000157   040000 100506                    MLR     fill='040'O
         9 000160   000000 400006                    ADSC9   0,Q,PR0                  cn=2,n=6
         9 000161   000075 000006 1                  ADSC9   SYSPACK+1                cn=0,n=6

      559     7555    3                CALL M$OPEN(OPN_DP)ALTRET(NO_DSMNT_1);

   7555  9 000162   000002 630400 1                  EPPR0   OPN_DP
         9 000163   450000 713400                    CLIMB   alt,open
         9 000164   410400 401760                    pmme    nvectors=18
         9 000165   000172 702000 9                  TSX2    NO_DSMNT_1

      560     7556    3                CALL M$CLOSE(DSMNT_SET)ALTRET(NO_DSMNT_1);

   7556  9 000166   010262 630400 1                  EPPR0   DSMNT_SET
         9 000167   450001 713400                    CLIMB   alt,close
         9 000170   406000 401760                    pmme    nvectors=13
         9 000171   000172 702000 9                  TSX2    NO_DSMNT_1

   7554  9 000172                       NO_DSMNT_1   null
      561     7557    3   NO_DSMNT_1:  ;
      562     7558    3                END;

      563     7559    2           I=FM$SET.SETL(I);

   7559  9 000172   200007 235100                    LDA     I,,AUTO
         9 000173   000003 735000                    ALS     3
         9 000174   000143 470400 0                  LDP0    F$CFU$_
         9 000175   000005 236105                    LDQ     5,AL,PR0
         9 000176   000022 772000                    QRL     18
         9 000177   200007 756100                    STQ     I,,AUTO

      564     7560    2           END;

   7560  9 000200   000150 601000 9                  TNZ     s:7553

   7557  9 000201                       NO_DSMNT     null
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:68   
      565     7561    1   NO_DSMNT:;
      566     7562
      567     7563                                      /* Restore trap and exit control
      568     7564                                         Return to IGM$MAIN                         */
      569     7565    1      FPT_XCON.V_ = VECTOR(PREVXCON);

   7565  9 000201   000002 237000 10                 LDAQ    2
         9 000202   011510 757000 1                  STAQ    FPT_XCON

      570     7566    1      FPT_XCON.PXCON_ = VECTOR(NIL);

   7566  9 000203   000004 237000 10                 LDAQ    4
         9 000204   011512 757000 1                  STAQ    FPT_XCON+2

      571     7567    1      CALL M$XCON(FPT_XCON) ALTRET(TRAP_RESTORE);

   7567  9 000205   011510 630400 1                  EPPR0   FPT_XCON
         9 000206   410003 713400                    CLIMB   alt,+4099
         9 000207   400400 401760                    pmme    nvectors=2
         9 000210   000211 702000 9                  TSX2    TRAP_RESTORE

   7566  9 000211                       TRAP_RESTORE null
      572     7568    1   TRAP_RESTORE: ;
      573     7569    1      CALL M$TRAP(RESTORET) ALTRET(SO_WHAT);

   7569  9 000211   011464 630400 1                  EPPR0   RESTORET
         9 000212   410004 713400                    CLIMB   alt,+4100
         9 000213   400400 401760                    pmme    nvectors=2
         9 000214   000215 702000 9                  TSX2    SO_WHAT

   7566  9 000215                       SO_WHAT      null
      574     7570    1   SO_WHAT: ;
      575     7571    1      RETURN;

   7571  9 000215   000000 702200 xent               TSX2  ! X66_ARET

   7566  9 000216                       TRAP_HAND    null
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:69   
      576     7572
      577     7573        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:70   
      578     7574                                      /* Errors with the System Pack or IGR$RECOVER   */
      579     7575    1   TRAP_HAND: ;
      580     7576    1      ERRM1.M = 'TRAP/XCON RECOVERING AJITS';

   7576  9 000216   040000 100400                    MLR     fill='040'O
         9 000217   000203 000032 0                  ADSC9   TRAPFPT+31               cn=0,n=26
         9 000220   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      581     7577    1      IGR_MSG1=1;

   7577  9 000221   000001 235007                    LDA     1,DL
         9 000222   011302 755000 1                  STA     IGR_MSG1

      582     7578    1      CALL REPORT_STK_ERR;

   7578  9 000223   001763 701000 9                  TSX1    REPORT_STK_ERR
         9 000224   000000 011000                    NOP     0

      583     7579    1      GOTO EXIT_DP;

   7579  9 000225   000133 710000 9                  TRA     EXIT_DP

   7577  9 000226                       ODP_ERR      null
      584     7580                                                /*                                    */
      585     7581    1   ODP_ERR: ;                              /*ERROR OPENING M$DP                  */
      586     7582    1      ERRM1.M = 'OPEN SYS DISK ERROR';

   7582  9 000226   040000 100400                    MLR     fill='040'O
         9 000227   000212 000023 0                  ADSC9   TRAPFPT+38               cn=0,n=19
         9 000230   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

   7582  9 000231                       ODP_ERR1     null
      587     7583    1   ODP_ERR1: ;
      588     7584    1      IGR_MSG1=1;

   7584  9 000231   000001 235007                    LDA     1,DL
         9 000232   011302 755000 1                  STA     IGR_MSG1
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:71   

      589     7585    1      CALL REPORT_ERR;

   7585  9 000233   001752 701000 9                  TSX1    REPORT_ERR
         9 000234   000000 011000                    NOP     0

      590     7586    1      GOTO EXIT_IGR;

   7586  9 000235   000137 710000 9                  TRA     EXIT_IGR

   7584  9 000236                       CLS_DP_ERR   null
      591     7587
      592     7588    1   CLS_DP_ERR: ;                           /*ERROR CLOSING SYSTEM PACK           */
      593     7589    1      ERRM1.M = 'CLOSE SYS DISK ERROR';

   7589  9 000236   040000 100400                    MLR     fill='040'O
         9 000237   000217 000024 0                  ADSC9   TRAPFPT+43               cn=0,n=20
         9 000240   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      594     7590    1      GOTO ODP_ERR1;

   7590  9 000241   000231 710000 9                  TRA     ODP_ERR1

   7589  9 000242                       R_VID_ERR    null
      595     7591
      596     7592    1   R_VID_ERR: ;                            /* ERROR READING VID                  */
      597     7593    1      ERRM1.M = 'ERROR READING VID';

   7593  9 000242   040000 100400                    MLR     fill='040'O
         9 000243   000224 000021 0                  ADSC9   TRAPFPT+48               cn=0,n=17
         9 000244   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

   7593  9 000245                       ERR_DP       null
      598     7594    1   ERR_DP: ;
      599     7595    1      IGR_MSG1=1;

   7595  9 000245   000001 235007                    LDA     1,DL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:72   
         9 000246   011302 755000 1                  STA     IGR_MSG1

      600     7596    1      CALL REPORT_ERR;

   7596  9 000247   001752 701000 9                  TSX1    REPORT_ERR
         9 000250   000000 011000                    NOP     0

      601     7597    1      GOTO EXIT_DP;

   7597  9 000251   000133 710000 9                  TRA     EXIT_DP

   7595  9 000252                       R_SAD_ERR    null
      602     7598
      603     7599    1   R_SAD_ERR: ;                            /*ERROR READING SYSTEM AREA DIRECTORY*/
      604     7600    1      ERRM1.M = 'ERROR READING SAD';

   7600  9 000252   040000 100400                    MLR     fill='040'O
         9 000253   000231 000021 0                  ADSC9   TRAPFPT+53               cn=0,n=17
         9 000254   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      605     7601    1      GOTO ERR_DP;

   7601  9 000255   000245 710000 9                  TRA     ERR_DP

   7600  9 000256                       RCVR_AJITS   null
      606     7602
      607     7603        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:73   
      608     7604                                                /* DO GHOST1 RECOVER FUNCTIONS        */
      609     7605    1   RCVR_AJITS: ;
      610     7606    1      RCVR2D = T$->I$DISKDIR.RCVR2;

   7606  9 000256   200003 470500                    LDP0    T$,,AUTO
         9 000257   000000 100500                    MLR     fill='000'O
         9 000260   000204 000020                    ADSC9   132,,PR0                 cn=0,n=16
         9 000261   010442 000020 1                  ADSC9   RCVR2D                   cn=0,n=16

      611     7607
      612     7608    1      RCVR2_LOWDA = T$->I$DISKDIR.DUMP.DA;

   7608  9 000262   000201 235100                    LDA     129,,PR0
         9 000263   010446 755000 1                  STA     RCVR2_LOWDA

      613     7609    1      RCVR2_HIGHDA = (RCVR2_LOWDA + T$->I$DISKDIR.DUMP.SIZE) -1;

   7609  9 000264   010446 236000 1                  LDQ     RCVR2_LOWDA
         9 000265   000202 036100                    ADLQ    130,,PR0
         9 000266   000001 136007                    SBLQ    1,DL
         9 000267   010447 756000 1                  STQ     RCVR2_HIGHDA

      614     7610
      615     7611    1      CALL CHKDA(RCVR2_LOWDA,RCVR2_HIGHDA,'RCVR') ALTRET(EXIT_DP);

   7611  9 000270   000006 237000 10                 LDAQ    6
         9 000271   200024 757100                    STAQ    @LOW+1,,AUTO
         9 000272   000010 236000 10                 LDQ     8
         9 000273   200023 756100                    STQ     TYPE+3,,AUTO
         9 000274   001717 701000 9                  TSX1    CHKDA
         9 000275   000133 702000 9                  TSX2    EXIT_DP

      616     7612    1      IF RCVR2D.DA(%RV_SYSDDUMP#-1) ~= 0

   7612  9 000276   010445 235000 1                  LDA     RCVR2D+3
         9 000277   000302 600000 9                  TZE     s:7615

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:74   
      617     7613    1      THEN IG_BOOTFLAG = I_RCVR_DUMPF;

   7613  9 000300   000012 236007                    LDQ     10,DL
         9 000301   000000 756000 xsym               STQ     IG_BOOTFLAG

      618     7614
      619     7615    1      DINDEX = %RV_SYSDDUMP#-1;

   7615  9 000302   000003 236007                    LDQ     3,DL
         9 000303   010453 756000 1                  STQ     DINDEX

      620     7616    2      DO WHILE (DINDEX >= 0);

   7616  9 000304   001030 604000 9                  TMI     s:7793

      621     7617                                 /* Iniitialize the Dump File debug/error message     */
      622     7618    2           DFMSG.SDF=' ';

   7618  9 000305   000011 236000 10                 LDQ     9
         9 000306   011367 552070 1                  STBQ    DFMSG+11,'70'O

      623     7619    2           DFMSG.MONID.VER=' ';

   7619  9 000307   040000 100400                    MLR     fill='040'O
         9 000310   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 000311   011367 600003 1                  ADSC9   DFMSG+11                 cn=3,n=3

      624     7620    2           DFMSG.MONID.BOOT=' ';

   7620  9 000312   040000 236007                    LDQ     16384,DL
         9 000313   011370 552010 1                  STBQ    DFMSG+12,'10'O

      625     7621    2           DFMSG.DUMPC=' ';

   7621  9 000314   040000 100400                    MLR     fill='040'O
         9 000315   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 000316   011370 600003 1                  ADSC9   DFMSG+12                 cn=3,n=3
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:75   

      626     7622    2           CALL BINCHAR(DFMSG.SLOTN,DINDEX);

   7622  9 000317   000000 301400                    BTD
         9 000320   010453 000004 1                  NDSC9   DINDEX                   cn=0,s=lsgnf,sf=0,n=4
         9 000321   011356 630001 1                  NDSC9   DFMSG+2                  cn=3,s=nosgn,sf=0,n=1

      627     7623    2           DDIR_GRAN = RCVR2D.DA(DINDEX);

   7623  9 000322   010453 720000 1                  LXL0    DINDEX
         9 000323   010442 235010 1                  LDA     RCVR2D,X0
         9 000324   010452 755000 1                  STA     DDIR_GRAN

      628     7624
      629     7625    2           IF DDIR_GRAN = 0

   7625  9 000325   000336 601000 9                  TNZ     s:7633

      630     7626    3           THEN DO;

      631     7627    3                DFMSG.M = 'DUMP SLOT EMPTY';

   7627  9 000326   040000 100400                    MLR     fill='040'O
         9 000327   000237 000017 0                  ADSC9   TRAPFPT+59               cn=0,n=15
         9 000330   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      632     7628    3                IF IGR_DEBUG ~= 0

   7628  9 000331   000000 235000 1                  LDA     IGR_DEBUG
         9 000332   000335 600000 9                  TZE     s:7630

      633     7629    3                THEN CALL PRINT_DFMSG;

   7629  9 000333   002115 701000 9                  TSX1    PRINT_DFMSG
         9 000334   000000 011000                    NOP     0

      634     7630    3                GOTO GET_NEXT_DUMP;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:76   

   7630  9 000335   001025 710000 9                  TRA     GET_NEXT_DUMP

      635     7631    3                END;
      636     7632
      637     7633    2           DP_GRAN=DDIR_GRAN;

   7633  9 000336   010244 755000 1                  STA     DP_GRAN

      638     7634    2           CALL M$READ(RD_DP) ALTRET(R_RB_ERR);

   7634  9 000337   000100 630400 1                  EPPR0   RD_DP
         9 000340   440000 713400                    CLIMB   alt,read
         9 000341   401400 401760                    pmme    nvectors=4
         9 000342   001075 702000 9                  TSX2    R_RB_ERR

      639     7635    2           T$=ADDR(RV_USRDIR);

   7635  9 000343   000000 236000 10                 LDQ     0
         9 000344   200003 756100                    STQ     T$,,AUTO

      640     7636    2           RV_BUFF=T$->RV$BUFF;

   7636  9 000345   200003 470500                    LDP0    T$,,AUTO
         9 000346   010000 220003                    LDX0    4096,DU
         9 000347   000040 100540                    MLR     fill='000'O
         9 000350   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 000351   000244 000010 1                  ADSC9   RV_BUFF                  cn=0,n=*X0

      641     7637                                                /* Read the Recovery Buffer           */
      642     7638    2           RDUMP_LOWDA=DDIR_GRAN;

   7638  9 000352   010452 235000 1                  LDA     DDIR_GRAN
         9 000353   010450 755000 1                  STA     RDUMP_LOWDA

      643     7639    2           RDUMP_HIGHDA = (RDUMP_LOWDA+RV_BUFF.SIZE) -1;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:77   
   7639  9 000354   010450 236000 1                  LDQ     RDUMP_LOWDA
         9 000355   000246 036000 1                  ADLQ    RV_BUFF+2
         9 000356   000001 136007                    SBLQ    1,DL
         9 000357   010451 756000 1                  STQ     RDUMP_HIGHDA

      644     7640
      645     7641    2           IF (RDUMP_LOWDA < RCVR2_LOWDA)

   7641  9 000360   010450 236000 1                  LDQ     RDUMP_LOWDA
         9 000361   010446 116000 1                  CMPQ    RCVR2_LOWDA
         9 000362   000366 604000 9                  TMI     s:7644
         9 000363   010451 236000 1                  LDQ     RDUMP_HIGHDA
         9 000364   010447 116000 1                  CMPQ    RCVR2_HIGHDA
         9 000365   000374 604400 9                  TMOZ    s:7649

      646     7642    2             OR (RDUMP_HIGHDA > RCVR2_HIGHDA)
      647     7643    3           THEN DO;

      648     7644    3                DFMSG.M='RCVR DUMP DISK ADDRESS BAD';

   7644  9 000366   040000 100400                    MLR     fill='040'O
         9 000367   000243 000032 0                  ADSC9   TRAPFPT+63               cn=0,n=26
         9 000370   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      649     7645    3                CALL REPORT_DFERR;

   7645  9 000371   002100 701000 9                  TSX1    REPORT_DFERR
         9 000372   000000 011000                    NOP     0

      650     7646    3                GOTO GET_NEXT_DUMP;

   7646  9 000373   001025 710000 9                  TRA     GET_NEXT_DUMP

      651     7647    3                END;
      652     7648
      653     7649    2           IF RV_BUFF.BUSY = 0

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:78   
   7649  9 000374   000244 235000 1                  LDA     RV_BUFF
         9 000375   000402 601000 9                  TNZ     s:7655

      654     7650    3           THEN DO;

      655     7651    3                DFMSG.M = 'SLOT BUSY-FILE NOT';

   7651  9 000376   040000 100400                    MLR     fill='040'O
         9 000377   000252 000022 0                  ADSC9   TRAPFPT+70               cn=0,n=18
         9 000400   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      656     7652    3                GOTO SEE_DFMSG;

   7652  9 000401   001021 710000 9                  TRA     SEE_DFMSG

      657     7653    3                END;
      658     7654                                                /*                                    */
      659     7655    2           IF RV_BUFF.AJITSU='1'B

   7655  9 000402   000247 236000 1                  LDQ     RV_BUFF+3
         9 000403   000040 316007                    CANQ    32,DL
         9 000404   000411 600000 9                  TZE     AJIT_GO

      660     7656    3           THEN DO;

      661     7657    3                DFMSG.M = 'AJITS ALREADY UPDATED';

   7657  9 000405   040000 100400                    MLR     fill='040'O
         9 000406   000257 000025 0                  ADSC9   TRAPFPT+75               cn=0,n=21
         9 000407   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      662     7658    3                GOTO SEE_DFMSG;

   7658  9 000410   001021 710000 9                  TRA     SEE_DFMSG

   7655  9 000411                       AJIT_GO      null
      663     7659    3                END;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:79   
      664     7660
      665     7661        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:80   
      666     7662    2   AJIT_GO: ;
      667     7663    2           IF RV_BUFF.JITS.SZ ~= 0

   7663  9 000411   000557 721000 1                  LXL1    RV_BUFF+203
         9 000412   001025 600000 9                  TZE     GET_NEXT_DUMP

      668     7664    3           THEN DO;

      669     7665    3                DP_GRAN=RV_BUFF.USRDR.DA;

   7665  9 000413   000554 235000 1                  LDA     RV_BUFF+200
         9 000414   010244 755000 1                  STA     DP_GRAN

      670     7666    3                IF (DP_GRAN < RDUMP_LOWDA)

   7666  9 000415   010244 236000 1                  LDQ     DP_GRAN
         9 000416   010450 116000 1                  CMPQ    RDUMP_LOWDA
         9 000417   000426 604000 9                  TMI     s:7669
         9 000420   000557 236000 1                  LDQ     RV_BUFF+203
         9 000421   777777 376007                    ANQ     -1,DL
         9 000422   010244 036000 1                  ADLQ    DP_GRAN
         9 000423   000001 136007                    SBLQ    1,DL
         9 000424   010451 116000 1                  CMPQ    RDUMP_HIGHDA
         9 000425   000434 604400 9                  TMOZ    s:7673

      671     7667    3                  OR ( (DP_GRAN + RV_BUFF.JITS.SZ) -1) > RDUMP_HIGHDA
      672     7668    4                THEN DO;

      673     7669    4                     DFMSG.M='RCVR DUMP JIT DISK ADDRESS BAD';

   7669  9 000426   040000 100400                    MLR     fill='040'O
         9 000427   000265 000036 0                  ADSC9   TRAPFPT+81               cn=0,n=30
         9 000430   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      674     7670    4                     CALL REPORT_DFERR;

   7670  9 000431   002100 701000 9                  TSX1    REPORT_DFERR
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:81   
         9 000432   000000 011000                    NOP     0

      675     7671    4                     GOTO GET_NEXT_DUMP;

   7671  9 000433   001025 710000 9                  TRA     GET_NEXT_DUMP

      676     7672    4                     END;
      677     7673    3                GOT_DIR=0;

   7673  9 000434   200006 450100                    STZ     GOT_DIR,,AUTO

      678     7674    3                CALL M$READ(RD_DP) ALTRET(R_DIR_ERR);

   7674  9 000435   000100 630400 1                  EPPR0   RD_DP
         9 000436   440000 713400                    CLIMB   alt,read
         9 000437   401400 401760                    pmme    nvectors=4
         9 000440   000444 702000 9                  TSX2    R_DIR_ERR

      679     7675                                                /* Read the User Directory            */
      680     7676    3                GOT_DIR=1;

   7676  9 000441   000001 235007                    LDA     1,DL
         9 000442   200006 755100                    STA     GOT_DIR,,AUTO

      681     7677    3                GOTO R_DIR_2;

   7677  9 000443   000453 710000 9                  TRA     R_DIR_2

   7676  9 000444                       R_DIR_ERR    null
      682     7678    3   R_DIR_ERR:   ;
      683     7679    3                DFMSG.M='ERROR READING USRDIR';

   7679  9 000444   040000 100400                    MLR     fill='040'O
         9 000445   000275 000024 0                  ADSC9   TRAPFPT+89               cn=0,n=20
         9 000446   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      684     7680    3                CALL REPORT_DFERR;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:82   

   7680  9 000447   002100 701000 9                  TSX1    REPORT_DFERR
         9 000450   000000 011000                    NOP     0

      685     7681    3                CALL REPORT_ERRMSG;

   7681  9 000451   001777 701000 9                  TSX1    REPORT_ERRMSG
         9 000452   000000 011000                    NOP     0

   7679  9 000453                       R_DIR_2      null
      686     7682    3   R_DIR_2:     ;
      687     7683    3                JITSZ=LENGTHW(B$JIT);

   7683  9 000453   000366 235007                    LDA     246,DL
         9 000454   200004 755100                    STA     JITSZ,,AUTO

      688     7684    3                JITSPG=1024/JITSZ;

   7684  9 000455   002000 236007                    LDQ     1024,DL
         9 000456   200004 506100                    DIV     JITSZ,,AUTO
         9 000457   200005 756100                    STQ     JITSPG,,AUTO

      689     7685    3                DP_GRAN = RV_BUFF.JITS.DA;

   7685  9 000460   000556 235000 1                  LDA     RV_BUFF+202
         9 000461   010244 755000 1                  STA     DP_GRAN

      690     7686                                                /*                                    */
      691     7687    3                LPARAM.CODE=%AZ$RECOVERY;

   7687  9 000462   000001 235007                    LDA     1,DL
         9 000463   010247 755000 1                  STA     LPARAM

      692     7688    3                LPARAM.DCB1=DCBNUM(M$EI);

   7688  9 000464   000000 236007 xsym               LDQ     M$EI,DL
         9 000465   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:83   
         9 000466   010251 740000 1                  STX0    LPARAM+2

      693     7689    3                LPARAM.DCB_LL=DCBNUM(M$LO);

   7689  9 000467   000000 236007 xsym               LDQ     M$LO,DL
         9 000470   000000 621006                    EAX1    0,QL
         9 000471   010251 441000 1                  SXL1    LPARAM+2

      694     7690    3                LPARAM.UTS=RV_BUFF.UTS1;

   7690  9 000472   000250 236000 1                  LDQ     RV_BUFF+4
         9 000473   010252 756000 1                  STQ     LPARAM+3

   7690  9 000474                       MORE_JITS    null
      695     7691                                                /*                                    */
      696     7692    3   MORE_JITS:   ;
      697     7693    3                AJIT$=ADDR(APAGE);

   7693  9 000474   000012 236000 10                 LDQ     10
         9 000475   010412 756000 1                  STQ     AJIT$

      698     7694    3                CALL M$READ(RAPAGE) ALTRET(R_DP_ERR);

   7694  9 000476   000116 630400 1                  EPPR0   RAPAGE
         9 000477   440000 713400                    CLIMB   alt,read
         9 000500   401400 401760                    pmme    nvectors=4
         9 000501   001105 702000 9                  TSX2    R_DP_ERR

      699     7695                                                /*                                    */
      700     7696    4                DO I=0 TO JITSPG-1;

   7696  9 000502   200007 450100                    STZ     I,,AUTO
         9 000503   000707 710000 9                  TRA     s:7740+3

      701     7697    4                     IF AJIT$->B$JIT.USER=0 THEN GOTO JITS_DONE;

   7697  9 000504   010412 470400 1                  LDP0    AJIT$
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:84   
         9 000505   000000 236100                    LDQ     0,,PR0
         9 000506   000777 316003                    CANQ    511,DU
         9 000507   000722 600000 9                  TZE     JITS_DONE

      702     7698    4                     LPARAM.ERR=0;

   7698  9 000510   010250 450000 1                  STZ     LPARAM+1

      703     7699    4                     LPARAM.JIT$=AJIT$;

   7699  9 000511   010412 236000 1                  LDQ     AJIT$
         9 000512   010253 756000 1                  STQ     LPARAM+4

      704     7700    4                     IF RV_USRDIR.USER.AJITUPD(AJIT$->B$JIT.USER) ='0'B

   7700  9 000513   000000 220100                    LDX0    0,,PR0
         9 000514   000777 360003                    ANX0    511,DU
         9 000515   000000 635010                    EAA     0,X0
         9 000516   000021 771000                    ARL     17
         9 000517   002245 236005 1                  LDQ     RV_USRDIR+1,AL
         9 000520   040000 316003                    CANQ    16384,DU
         9 000521   000543 601000 9                  TNZ     s:7708

      705     7701    5                     THEN DO;

      706     7702    5                          REMEMBER AJIT_TRAP IN TRAP_UNWIND;

   7702  9 000522   001051 635000 9                  EAA     AJIT_TRAP
         9 000523   011504 452400 1                  STP2    TRAP_UNWIND
         9 000524   011505 755000 1                  STA     TRAP_UNWIND+1

      707     7703    5                          REMEMBER JIT_DONE IN AR_EXIT_UNW;

   7703  9 000525   000534 635000 9                  EAA     JIT_DONE
         9 000526   011506 452400 1                  STP2    AR_EXIT_UNW
         9 000527   011507 755000 1                  STA     AR_EXIT_UNW+1

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:85   
      708     7704    5                          CALL AZA$LOGOFF(LPARAM);

   7704  9 000530   000013 630400 10                 EPPR0   11
         9 000531   000017 631400 xsym               EPPR1   B_VECTNIL+15
         9 000532   000000 701000 xent               TSX1    AZA$LOGOFF
         9 000533   000000 011000                    NOP     0

   7702  9 000534                       JIT_DONE     null
      709     7705    5   JIT_DONE:              ;
      710     7706    5                          RV_USRDIR.USER.AJITUPD(AJIT$->B$JIT.USER) ='1'B;

   7706  9 000534   010412 470400 1                  LDP0    AJIT$
         9 000535   000000 220100                    LDX0    0,,PR0
         9 000536   000777 360003                    ANX0    511,DU
         9 000537   000000 635010                    EAA     0,X0
         9 000540   000021 771000                    ARL     17
         9 000541   040000 236003                    LDQ     16384,DU
         9 000542   002245 256005 1                  ORSQ    RV_USRDIR+1,AL

      711     7707    5                          END;

      712     7708    4                     IF IGR_RCVR_ASL=0 THEN GOTO NO_ASL;

   7708  9 000543   000000 235000 0                  LDA     IGR_RCVR_ASL
         9 000544   000634 600000 9                  TZE     NO_ASL

      713     7709    4                     IF RV_USRDIR.USER.ASLD(AJIT$->B$JIT.USER) ='0'B

   7709  9 000545   000000 220100                    LDX0    0,,PR0
         9 000546   000777 360003                    ANX0    511,DU
         9 000547   000000 636010                    EAQ     0,X0
         9 000550   000021 772000                    QRL     17
         9 000551   002245 236006 1                  LDQ     RV_USRDIR+1,QL
         9 000552   002000 316003                    CANQ    1024,DU
         9 000553   000641 601000 9                  TNZ     s:7729
         9 000554   000231 235100                    LDA     153,,PR0
         9 000555   000641 600000 9                  TZE     s:7729
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:86   

      714     7710    4                       AND AJIT$->B$JIT.STAR.DA(7) ~= 0
      715     7711    5                     THEN DO;

      716     7712    5                          REMEMBER ASL_TRAP IN TRAP_UNWIND;

   7712  9 000556   001031 635000 9                  EAA     ASL_TRAP
         9 000557   011504 452400 1                  STP2    TRAP_UNWIND
         9 000560   011505 755000 1                  STA     TRAP_UNWIND+1

      717     7713    5                          REMEMBER ASL_ALT IN AR_EXIT_UNW;

   7713  9 000561   000630 635000 9                  EAA     ASL_ALT
         9 000562   011506 452400 1                  STP2    AR_EXIT_UNW
         9 000563   011507 755000 1                  STA     AR_EXIT_UNW+1

      718     7714    5                          B$JIT$->B$JIT.STAR.DA(7) = AJIT$->B$JIT.STAR.DA(7);

   7714  9 000564   000000 471400 xsym               LDP1    B$JIT$
         9 000565   000231 235100                    LDA     153,,PR0
         9 000566   100231 755100                    STA     153,,PR1

      719     7715    5                          B$JIT$->B$JIT.HPSN = AJIT$->B$JIT.HPSN;

   7715  9 000567   040100 100500                    MLR     fill='040'O
         9 000570   000234 000006                    ADSC9   156,,PR0                 cn=0,n=6
         9 000571   100234 000006                    ADSC9   156,,PR1                 cn=0,n=6

      720     7716    5                          CALL M$OPEN(OPN_ASL) ALTRET(NO_ASL);

   7716  9 000572   010320 630400 1                  EPPR0   OPN_ASL
         9 000573   450000 713400                    CLIMB   alt,open
         9 000574   410400 401760                    pmme    nvectors=18
         9 000575   000634 702000 9                  TSX2    NO_ASL

      721     7717    5                          CALL XSF$LOCCODE(FPARAM$,FPARAM_CODE) ALTRET(NO_ASL);

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:87   
   7717  9 000576   000014 630400 10                 EPPR0   12
         9 000577   000020 631400 xsym               EPPR1   B_VECTNIL+16
         9 000600   000000 701000 xent               TSX1    XSF$LOCCODE
         9 000601   000634 702000 9                  TSX2    NO_ASL

      722     7718    5                          ASL=FPARAM$->B$ASL;

   7718  9 000602   010440 470400 1                  LDP0    FPARAM$
         9 000603   000000 100500                    MLR     fill='000'O
         9 000604   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32
         9 000605   010430 000040 1                  ADSC9   ASL                      cn=0,n=32

      723     7719    5                          CALL M$ALIB(ALIB_ASL) ALTRET(NO_ASL);

   7719  9 000606   010414 630400 1                  EPPR0   ALIB_ASL
         9 000607   400007 713400                    CLIMB   alt,+7
         9 000610   401400 401760                    pmme    nvectors=4
         9 000611   000634 702000 9                  TSX2    NO_ASL

      724     7720    5                          CALL IGA$RECOVER_ASL;

   7720  9 000612   000002 631400 xsym               EPPR1   B_VECTNIL+2
         9 000613   000000 701000 xent               TSX1    IGA$RECOVER_ASL
         9 000614   000000 011000                    NOP     0

      725     7721    5                          AJIT$->B$JIT.STAR.DA(7) = B$JIT$->B$JIT.STAR.DA(7);

   7721  9 000615   000000 470400 xsym               LDP0    B$JIT$
         9 000616   010412 471400 1                  LDP1    AJIT$
         9 000617   000231 235100                    LDA     153,,PR0
         9 000620   100231 755100                    STA     153,,PR1

      726     7722    5                          RV_USRDIR.USER.ASLD(AJIT$->B$JIT.USER) ='1'B;

   7722  9 000621   100000 220100                    LDX0    0,,PR1
         9 000622   000777 360003                    ANX0    511,DU
         9 000623   000000 636010                    EAQ     0,X0
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:88   
         9 000624   000021 772000                    QRL     17
         9 000625   000000 621006                    EAX1    0,QL
         9 000626   002000 236003                    LDQ     1024,DU
         9 000627   002245 256011 1                  ORSQ    RV_USRDIR+1,X1

   7722  9 000630                       ASL_ALT      null
      727     7723    5   ASL_ALT:               ;
      728     7724    5                          CALL M$DLIB(DLIB_ASL) ALTRET(NO_ASL);

   7724  9 000630   010426 630400 1                  EPPR0   DLIB_ASL
         9 000631   400010 713400                    CLIMB   alt,+8
         9 000632   400000 401760                    pmme    nvectors=1
         9 000633   000634 702000 9                  TSX2    NO_ASL

   7722  9 000634                       NO_ASL       null
      729     7725    5   NO_ASL:                ;
      730     7726    5                          B$JIT$->B$JIT.STAR.DA(7) = 0;

   7726  9 000634   000000 470400 xsym               LDP0    B$JIT$
         9 000635   000231 450100                    STZ     153,,PR0

      731     7727    5                          B$JIT$->B$JIT.HPSN = 'SYS   ';

   7727  9 000636   040100 100400                    MLR     fill='040'O
         9 000637   000302 000006 0                  ADSC9   TRAPFPT+94               cn=0,n=6
         9 000640   000234 000006                    ADSC9   156,,PR0                 cn=0,n=6

      732     7728    5                          END;

      733     7729    4                     IF RV_USRDIR.USER.RELSFD(AJIT$->B$JIT.USER) ='0'B

   7729  9 000641   010412 470400 1                  LDP0    AJIT$
         9 000642   000000 220100                    LDX0    0,,PR0
         9 000643   000777 360003                    ANX0    511,DU
         9 000644   000000 635010                    EAA     0,X0
         9 000645   000021 771000                    ARL     17
         9 000646   002245 236005 1                  LDQ     RV_USRDIR+1,AL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:89   
         9 000647   020000 316003                    CANQ    8192,DU
         9 000650   000700 601000 9                  TNZ     s:7739

      734     7730    5                     THEN DO;

      735     7731    5                          REMEMBER RELS_TRAP IN TRAP_UNWIND;

   7731  9 000651   001041 635000 9                  EAA     RELS_TRAP
         9 000652   011504 452400 1                  STP2    TRAP_UNWIND
         9 000653   011505 755000 1                  STA     TRAP_UNWIND+1

      736     7732    5                          REMEMBER RELS_ALT IN AR_EXIT_UNW;

   7732  9 000654   000671 635000 9                  EAA     RELS_ALT
         9 000655   011506 452400 1                  STP2    AR_EXIT_UNW
         9 000656   011507 755000 1                  STA     AR_EXIT_UNW+1

      737     7733    5                          FPT_RELSTARF.JIT_ = VECTOR(AJIT$->B$JIT);

   7733  9 000657   000016 235000 10                 LDA     14
         9 000660   010412 236000 1                  LDQ     AJIT$
         9 000661   010256 757000 1                  STAQ    FPT_RELSTARF

      738     7734    5                          IF RV_BUFF.UTS2 > IGG_RECONUTS

   7734  9 000662   000000 236000 xsym               LDQ     IGG_RECONUTS
         9 000663   000251 116000 1                  CMPQ    RV_BUFF+5
         9 000664   000671 603000 9                  TRC     RELS_ALT

      739     7735    5                          THEN CALL M$RELSTARF(FPT_RELSTARF) ALTRET(RELS_TRAP);

   7735  9 000665   010256 630400 1                  EPPR0   FPT_RELSTARF
         9 000666   460010 713400                    CLIMB   alt,+24584
         9 000667   400400 401760                    pmme    nvectors=2
         9 000670   001041 702000 9                  TSX2    RELS_TRAP

   7734  9 000671                       RELS_ALT     null
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:90   
      740     7736    5   RELS_ALT:              ;
      741     7737    5                          RV_USRDIR.USER.RELSFD(AJIT$->B$JIT.USER) ='1'B;

   7737  9 000671   010412 470400 1                  LDP0    AJIT$
         9 000672   000000 220100                    LDX0    0,,PR0
         9 000673   000777 360003                    ANX0    511,DU
         9 000674   000000 635010                    EAA     0,X0
         9 000675   000021 771000                    ARL     17
         9 000676   020000 236003                    LDQ     8192,DU
         9 000677   002245 256005 1                  ORSQ    RV_USRDIR+1,AL

      742     7738    5                          END;

      743     7739    4                     AJIT$ = PINCRW(AJIT$,JITSZ);

   7739  9 000700   200004 236100                    LDQ     JITSZ,,AUTO
         9 000701   000022 736000                    QLS     18
         9 000702   010412 036000 1                  ADLQ    AJIT$
         9 000703   010412 756000 1                  STQ     AJIT$

      744     7740    4                     END;                  /*DO I=0 TO 5*/

   7740  9 000704   200007 235100                    LDA     I,,AUTO
         9 000705   000001 035007                    ADLA    1,DL
         9 000706   200007 755100                    STA     I,,AUTO
         9 000707   200007 236100                    LDQ     I,,AUTO
         9 000710   000713 604000 9                  TMI     SKIP_GRAN
         9 000711   200005 116100                    CMPQ    JITSPG,,AUTO
         9 000712   000504 604000 9                  TMI     s:7697

   7737  9 000713                       SKIP_GRAN    null
      745     7741                                                /*                                    */
      746     7742    3   SKIP_GRAN:   ;
      747     7743    3                DP_GRAN=DP_GRAN+1;

   7743  9 000713   010244 054000 1                  AOS     DP_GRAN

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:91   
      748     7744    3                IF DP_GRAN < RV_BUFF.JITS.DA + RV_BUFF.JITS.SZ

   7744  9 000714   000557 236000 1                  LDQ     RV_BUFF+203
         9 000715   777777 376007                    ANQ     -1,DL
         9 000716   000556 036000 1                  ADLQ    RV_BUFF+202
         9 000717   000474 604000 9                  TMI     MORE_JITS
         9 000720   010244 116000 1                  CMPQ    DP_GRAN
         9 000721   000474 605400 9                  TPNZ    MORE_JITS

   7744  9 000722                       JITS_DONE    null
      749     7745    3                THEN GOTO MORE_JITS;
      750     7746
      751     7747    3   JITS_DONE:   ;
      752     7748    3                IF GOT_DIR=1

   7748  9 000722   200006 235100                    LDA     GOT_DIR,,AUTO
         9 000723   000001 115007                    CMPA    1,DL
         9 000724   000743 601000 9                  TNZ     DIR_OK

      753     7749    4                THEN DO;

      754     7750    4                     DP_GRAN=RV_BUFF.USRDR.DA;

   7750  9 000725   000554 236000 1                  LDQ     RV_BUFF+200
         9 000726   010244 756000 1                  STQ     DP_GRAN

      755     7751    4                     CALL M$WRITE(WT_DP) ALTRET(ERR_USRDIR);

   7751  9 000727   000134 630400 1                  EPPR0   WT_DP
         9 000730   440001 713400                    CLIMB   alt,write
         9 000731   401400 401760                    pmme    nvectors=4
         9 000732   000734 702000 9                  TSX2    ERR_USRDIR

      756     7752                            /* Re-write the User Directory with AJIT Trap bits set    */
      757     7753    4                     GOTO DIR_OK;

   7753  9 000733   000743 710000 9                  TRA     DIR_OK
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:92   

   7750  9 000734                       ERR_USRDIR   null
      758     7754    4   ERR_USRDIR:       ;
      759     7755    4                     DFMSG.M = 'ERROR WRITING USRDIR';

   7755  9 000734   040000 100400                    MLR     fill='040'O
         9 000735   000304 000024 0                  ADSC9   TRAPFPT+96               cn=0,n=20
         9 000736   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      760     7756    4                     CALL REPORT_DFERR;

   7756  9 000737   002100 701000 9                  TSX1    REPORT_DFERR
         9 000740   000000 011000                    NOP     0

      761     7757    4                     CALL REPORT_ERRMSG;

   7757  9 000741   001777 701000 9                  TSX1    REPORT_ERRMSG
         9 000742   000000 011000                    NOP     0

   7755  9 000743                       DIR_OK       null
      762     7758    4   DIR_OK:           ;
      763     7759    4                     END;

      764     7760                                                /*                                    */
      765     7761    3                RV_BUFF.AJITSU='1'B;

   7761  9 000743   000040 236007                    LDQ     32,DL
         9 000744   000247 256000 1                  ORSQ    RV_BUFF+3

      766     7762    3                IF JITRAP ~= 0

   7762  9 000745   010454 235000 1                  LDA     JITRAP
         9 000746   000751 600000 9                  TZE     s:7764

      767     7763    3                THEN RV_BUFF.AJITTR='1'B;

   7763  9 000747   000004 236007                    LDQ     4,DL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:93   
         9 000750   000247 256000 1                  ORSQ    RV_BUFF+3

      768     7764    3                DP_GRAN=DDIR_GRAN;

   7764  9 000751   010452 236000 1                  LDQ     DDIR_GRAN
         9 000752   010244 756000 1                  STQ     DP_GRAN

      769     7765    3                RV_USRDIR='0'B;

   7765  9 000753   010000 220003                    LDX0    4096,DU
         9 000754   000040 100400                    MLR     fill='000'O
         9 000755   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         9 000756   002244 000010 1                  ADSC9   RV_USRDIR                cn=0,n=*X0

      770     7766    3                T$=ADDR(RV_USRDIR);

   7766  9 000757   000000 236000 10                 LDQ     0
         9 000760   200003 756100                    STQ     T$,,AUTO

      771     7767    3                T$->RV$BUFF=RV_BUFF;

   7767  9 000761   200003 470500                    LDP0    T$,,AUTO
         9 000762   000140 100440                    MLR     fill='000'O
         9 000763   000244 000010 1                  ADSC9   RV_BUFF                  cn=0,n=*X0
         9 000764   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      772     7768    3                CALL M$WRITE(WT_DP) ALTRET(ERR_RBUF);

   7768  9 000765   000134 630400 1                  EPPR0   WT_DP
         9 000766   440001 713400                    CLIMB   alt,write
         9 000767   401400 401760                    pmme    nvectors=4
         9 000770   000772 702000 9                  TSX2    ERR_RBUF

      773     7769                            /* RE-write the Recovery Buffer with the AJITSU bit set   */
      774     7770    3                GOTO CLOSE_EI;

   7770  9 000771   001001 710000 9                  TRA     CLOSE_EI
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:94   

   7767  9 000772                       ERR_RBUF     null
      775     7771    3   ERR_RBUF:    ;
      776     7772    3                DFMSG.M = 'ERR WRITING RECOVERY BUFFER';

   7772  9 000772   040000 100400                    MLR     fill='040'O
         9 000773   000311 000033 0                  ADSC9   TRAPFPT+101              cn=0,n=27
         9 000774   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      777     7773    3                CALL REPORT_DFERR;

   7773  9 000775   002100 701000 9                  TSX1    REPORT_DFERR
         9 000776   000000 011000                    NOP     0

      778     7774    3                CALL REPORT_ERRMSG;

   7774  9 000777   001777 701000 9                  TSX1    REPORT_ERRMSG
         9 001000   000000 011000                    NOP     0

   7772  9 001001                       CLOSE_EI     null
      779     7775    3   CLOSE_EI:    ;
      780     7776    3                CALL M$CLOSE(CLS_EI) ALTRET(EI_ALTR);

   7776  9 001001   000206 630400 1                  EPPR0   CLS_EI
         9 001002   450001 713400                    CLIMB   alt,close
         9 001003   406000 401760                    pmme    nvectors=13
         9 001004   001005 702000 9                  TSX2    EI_ALTR

   7772  9 001005                       EI_ALTR      null
      781     7777    3   EI_ALTR:     ;
      782     7778    3                IF JITRAP ~=0

   7778  9 001005   010454 235000 1                  LDA     JITRAP
         9 001006   001016 600000 9                  TZE     s:7785

      783     7779    4                THEN DO;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:95   
      784     7780    4                     DFMSG.M = 'TRAP USING AJITS';

   7780  9 001007   040000 100400                    MLR     fill='040'O
         9 001010   000320 000020 0                  ADSC9   TRAPFPT+108              cn=0,n=16
         9 001011   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      785     7781    4                     CALL REPORT_DFERR;

   7781  9 001012   002100 701000 9                  TSX1    REPORT_DFERR
         9 001013   000000 011000                    NOP     0

      786     7782    4                     JITRAP=0;

   7782  9 001014   010454 450000 1                  STZ     JITRAP

      787     7783    4                     END;

   7783  9 001015   001025 710000 9                  TRA     GET_NEXT_DUMP

      788     7784    4                ELSE DO;

      789     7785    4                     DFMSG.M = 'AJITS UPDATED';

   7785  9 001016   040000 100400                    MLR     fill='040'O
         9 001017   000324 000015 0                  ADSC9   TRAPFPT+112              cn=0,n=13
         9 001020   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

   7785  9 001021                       SEE_DFMSG    null
      790     7786    4   SEE_DFMSG:        ;
      791     7787    4                     IF IGR_DEBUG ~= 0 THEN CALL REPORT_DFERR;

   7787  9 001021   000000 235000 1                  LDA     IGR_DEBUG
         9 001022   001025 600000 9                  TZE     GET_NEXT_DUMP

   7787  9 001023   002100 701000 9                  TSX1    REPORT_DFERR
         9 001024   000000 011000                    NOP     0

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:96   
      792     7788    4                     END;

      793     7789    3                END;                       /*DO IF JITS.SZ ~=0*/

   7780  9 001025                       GET_NEXT_DU* null
      794     7790    2   GET_NEXT_DUMP: ;
      795     7791    2           DINDEX = DINDEX-1;

   7791  9 001025   000001 336007                    LCQ     1,DL
         9 001026   010453 056000 1                  ASQ     DINDEX

      796     7792    2           END;                            /*DO DINDEX=MAX TO 0                  */

   7792  9 001027   000305 605000 9                  TPL     s:7618

      797     7793    1      GOTO EXIT_DP;                        /* JOIN UP WITH EXIT SEQUENCE         */

   7793  9 001030   000133 710000 9                  TRA     EXIT_DP

   7785  9 001031                       ASL_TRAP     null
      798     7794        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:97   
      799     7795                                                /* RCVR_AJITS error routines          */
      800     7796                                                /* Error with ASL Recovery            */
      801     7797    1   ASL_TRAP: ;
      802     7798    1      RV_USRDIR.USER.ASLT(AJIT$->B$JIT.USER)='1'B;

   7798  9 001031   010412 470400 1                  LDP0    AJIT$
         9 001032   000000 220100                    LDX0    0,,PR0
         9 001033   000777 360003                    ANX0    511,DU
         9 001034   000000 635010                    EAA     0,X0
         9 001035   000021 771000                    ARL     17
         9 001036   004000 236003                    LDQ     2048,DU
         9 001037   002245 256005 1                  ORSQ    RV_USRDIR+1,AL

      803     7799    1      GOTO RPT_A2;

   7799  9 001040   001060 710000 9                  TRA     RPT_A2

   7798  9 001041                       RELS_TRAP    null
      804     7800                                                /* Error releasing the Star Files     */
      805     7801    1   RELS_TRAP: ;
      806     7802    1      RV_USRDIR.USER.RELSFT(AJIT$->B$JIT.USER)='1'B;

   7802  9 001041   010412 470400 1                  LDP0    AJIT$
         9 001042   000000 220100                    LDX0    0,,PR0
         9 001043   000777 360003                    ANX0    511,DU
         9 001044   000000 635010                    EAA     0,X0
         9 001045   000021 771000                    ARL     17
         9 001046   010000 236003                    LDQ     4096,DU
         9 001047   002245 256005 1                  ORSQ    RV_USRDIR+1,AL

      807     7803    1      GOTO RPT_A2;

   7803  9 001050   001060 710000 9                  TRA     RPT_A2

   7802  9 001051                       AJIT_TRAP    null
      808     7804                                           /*  Errors updating the Accounting Jits    */
      809     7805    1   AJIT_TRAP: ;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:98   
      810     7806    1      RV_USRDIR.USER.AJITRAP(AJIT$->B$JIT.USER)='1'B;

   7806  9 001051   010412 470400 1                  LDP0    AJIT$
         9 001052   000000 220100                    LDX0    0,,PR0
         9 001053   000777 360003                    ANX0    511,DU
         9 001054   000000 635010                    EAA     0,X0
         9 001055   000021 771000                    ARL     17
         9 001056   100000 236003                    LDQ     32768,DU
         9 001057   002245 256005 1                  ORSQ    RV_USRDIR+1,AL

   7806  9 001060                       RPT_A2       null
      811     7807    1   RPT_A2: ;
      812     7808    1      JITRAP=JITRAP+1;

   7808  9 001060   010454 054000 1                  AOS     JITRAP

      813     7809    1      RV_BUFF.AJITTRAP=B$EXCFR;

   7809  9 001061   000000 471400 xsym               LDP1    B$TCB$
         9 001062   100001 473500                    LDP3    1,,PR1
         9 001063   000000 100500                    MLR     fill='000'O
         9 001064   300000 000420                    ADSC9   0,,PR3                   cn=0,n=272
         9 001065   002040 000420 1                  ADSC9   RV_BUFF+892              cn=0,n=272

      814     7810    1      CALL M$CLRSTK(FPT_CLRSTK) ALTRET(AR_EXIT);

   7810  9 001066   011520 630400 1                  EPPR0   FPT_CLRSTK
         9 001067   410013 713400                    CLIMB   alt,+4107
         9 001070   400000 401760                    pmme    nvectors=1
         9 001071   001072 702000 9                  TSX2    AR_EXIT

   7809  9 001072                       AR_EXIT      null
      815     7811    1   AR_EXIT: ;
      816     7812    1      UNWIND TO AR_EXIT_UNW;

   7812  9 001072   011506 237200 1                  LDAQ  ! AR_EXIT_UNW
         9 001073   000000 700200 xent               TSX0  ! X66_AUNWIND
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:99   
         9 001074   000000 000200                    ZERO    0,128

   7812  9 001075                       R_RB_ERR     null
      817     7813
      818     7814    1   R_RB_ERR: ;                             /*ERROR READING RECOVERY BUFFER*/
      819     7815    1      DFMSG.M='ERR READING RECOVERY BUFFER';

   7815  9 001075   040000 100400                    MLR     fill='040'O
         9 001076   000330 000033 0                  ADSC9   TRAPFPT+116              cn=0,n=27
         9 001077   011357 200036 1                  ADSC9   DFMSG+3                  cn=1,n=30

      820     7816    1      CALL REPORT_DFERR;

   7816  9 001100   002100 701000 9                  TSX1    REPORT_DFERR
         9 001101   000000 011000                    NOP     0

      821     7817    1      CALL REPORT_ERRMSG;

   7817  9 001102   001777 701000 9                  TSX1    REPORT_ERRMSG
         9 001103   000000 011000                    NOP     0

      822     7818    1      GOTO GET_NEXT_DUMP;

   7818  9 001104   001025 710000 9                  TRA     GET_NEXT_DUMP

   7815  9 001105                       R_DP_ERR     null
      823     7819
      824     7820    1   R_DP_ERR: ;                             /* ERROR READING THE ACCT JITS        */
      825     7821    1      ERRM1.M='ERR READING ACCT JITS';

   7821  9 001105   040000 100400                    MLR     fill='040'O
         9 001106   000337 000025 0                  ADSC9   TRAPFPT+123              cn=0,n=21
         9 001107   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      826     7822    1      CALL REPORT_ERR;

   7822  9 001110   001752 701000 9                  TSX1    REPORT_ERR
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:100  
         9 001111   000000 011000                    NOP     0

      827     7823    1      GOTO SKIP_GRAN;

   7823  9 001112   000713 710000 9                  TRA     SKIP_GRAN

   7821  9 001113                       BUILD_PATCH  null
      828     7824                                                /*                                    */
      829     7825        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:101  
      830     7826                                                /*                                    */
      831     7827                                                /* BUILD PATCH FILE AFTER A TAPE BOOT */
      832     7828    1   BUILD_PATCH: ;
      833     7829    1      REMEMBER PATCH_TRAP IN TRAP_UNWIND;

   7829  9 001113   001463 635000 9                  EAA     PATCH_TRAP
         9 001114   011504 452400 1                  STP2    TRAP_UNWIND
         9 001115   011505 755000 1                  STA     TRAP_UNWIND+1

   7821  9 001116                       DEL_PATCH    null
      834     7830
      835     7831    1   DEL_PATCH: ;
      836     7832    1      DEL_RUM.NAME_ = VECTOR(P_NAME);

   7832  9 001116   000020 237000 10                 LDAQ    16
         9 001117   010534 757000 1                  STAQ    DEL_RUM+6

      837     7833    1      CALL M$OPEN(DEL_RUM) ALTRET(DEL_RUMF);

   7833  9 001120   010526 630400 1                  EPPR0   DEL_RUM
         9 001121   450000 713400                    CLIMB   alt,open
         9 001122   410400 401760                    pmme    nvectors=18
         9 001123   001124 702000 9                  TSX2    DEL_RUMF

   7832  9 001124                       DEL_RUMF     null
      838     7834    1   DEL_RUMF: ;
      839     7835    1      DEL_RUM.NAME_ = VECTOR(RF_NAME);

   7835  9 001124   000022 237000 10                 LDAQ    18
         9 001125   010534 757000 1                  STAQ    DEL_RUM+6

      840     7836    1      CALL M$OPEN(DEL_RUM) ALTRET(DEL_PLOVER);

   7836  9 001126   010526 630400 1                  EPPR0   DEL_RUM
         9 001127   450000 713400                    CLIMB   alt,open
         9 001130   410400 401760                    pmme    nvectors=18
         9 001131   001132 702000 9                  TSX2    DEL_PLOVER
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:102  

   7835  9 001132                       DEL_PLOVER   null
      841     7837    1   DEL_PLOVER: ;
      842     7838    1      DEL_RUM.NAME_ = VECTOR(PLOVER_NAME);

   7838  9 001132   000024 237000 10                 LDAQ    20
         9 001133   010534 757000 1                  STAQ    DEL_RUM+6

      843     7839    1      CALL M$OPEN(DEL_RUM) ALTRET(DEL_BOOTIME);

   7839  9 001134   010526 630400 1                  EPPR0   DEL_RUM
         9 001135   450000 713400                    CLIMB   alt,open
         9 001136   410400 401760                    pmme    nvectors=18
         9 001137   001140 702000 9                  TSX2    DEL_BOOTIME

   7838  9 001140                       DEL_BOOTIME  null
      844     7840    1   DEL_BOOTIME: ;
      845     7841    1      DEL_RUM.NAME_ = VECTOR(BOOTIME_NAME);

   7841  9 001140   000026 237000 10                 LDAQ    22
         9 001141   010534 757000 1                  STAQ    DEL_RUM+6

      846     7842    1      CALL M$OPEN(DEL_RUM) ALTRET(SET_PFNAME);

   7842  9 001142   010526 630400 1                  EPPR0   DEL_RUM
         9 001143   450000 713400                    CLIMB   alt,open
         9 001144   410400 401760                    pmme    nvectors=18
         9 001145   001146 702000 9                  TSX2    SET_PFNAME

   7841  9 001146                       SET_PFNAME   null
      847     7843
      848     7844    1   SET_PFNAME: ;
      849     7845    1      PF_NAME.L = 7;

   7845  9 001146   007000 236003                    LDQ     3584,DU
         9 001147   010460 552040 1                  STBQ    PF_NAME,'40'O

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:103  
      850     7846    1      PF_NAME.N1 = ':PF';

   7846  9 001150   000345 236000 0                  LDQ     TRAPFPT+129
         9 001151   000011 772000                    QRL     9
         9 001152   010460 552034 1                  STBQ    PF_NAME,'34'O

      851     7847    1      PF_NAME.MONID = T$->I$DISKDIR.MONID.M;

   7847  9 001153   200003 470500                    LDP0    T$,,AUTO
         9 001154   000211 236100                    LDQ     137,,PR0
         9 001155   010461 756000 1                  STQ     PF_NAME+1

      852     7848    1      DOCMD.MONID = T$->I$DISKDIR.MONID.M;

   7848  9 001156   000000 100500                    MLR     fill='000'O
         9 001157   000211 000004                    ADSC9   137,,PR0                 cn=0,n=4
         9 001160   010504 600004 1                  ADSC9   DOCMD+3                  cn=3,n=4

      853     7849                                                /*                                    */
      854     7850    1      DPATCHSZ=T$->I$DISKDIR.PATCH.SIZE;

   7850  9 001161   000176 235100                    LDA     126,,PR0
         9 001162   200011 755100                    STA     DPATCHSZ,,AUTO

      855     7851    1      DP_GRAN=T$->I$DISKDIR.PATCH.DA;

   7851  9 001163   000175 235100                    LDA     125,,PR0
         9 001164   010244 755000 1                  STA     DP_GRAN

      856     7852    1      APATCHSZ=200;

   7852  9 001165   000310 235007                    LDA     200,DL
         9 001166   200012 755100                    STA     APATCHSZ,,AUTO

      857     7853
      858     7854    1      P_HEADER.MONID=T$->I$DISKDIR.MONID.M_CHAR4;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:104  
   7854  9 001167   040000 100500                    MLR     fill='040'O
         9 001170   000211 000004                    ADSC9   137,,PR0                 cn=0,n=4
         9 001171   011221 200004 1                  ADSC9   P_HEADER+3               cn=1,n=4

      859     7855    1      CALL M$TIME(FPT_TIME) ALTRET(OPEN_PATCH);

   7855  9 001172   011202 630400 1                  EPPR0   FPT_TIME
         9 001173   420004 713400                    CLIMB   alt,+8196
         9 001174   402000 401760                    pmme    nvectors=5
         9 001175   001176 702000 9                  TSX2    OPEN_PATCH

   7854  9 001176                       OPEN_PATCH   null
      860     7856    1   OPEN_PATCH: ;
      861     7857    1      CALL M$OPEN(OPN_PF) ALTRET(OPF_ERR);

   7857  9 001176   010620 630400 1                  EPPR0   OPN_PF
         9 001177   450000 713400                    CLIMB   alt,open
         9 001200   410400 401760                    pmme    nvectors=18
         9 001201   001477 702000 9                  TSX2    OPF_ERR

      862     7858    1      CALL M$WRITE(WT_PHEAD) ALTRET(WPF_ERR);

   7858  9 001202   010726 630400 1                  EPPR0   WT_PHEAD
         9 001203   440001 713400                    CLIMB   alt,write
         9 001204   401400 401760                    pmme    nvectors=4
         9 001205   001505 702000 9                  TSX2    WPF_ERR

      863     7859
      864     7860    1      RUMF_SIZE=0;

   7860  9 001206   010456 450000 1                  STZ     RUMF_SIZE

      865     7861    1      OPN_RUM.NAME_ = VECTOR(P_NAME);

   7861  9 001207   000020 237000 10                 LDAQ    16
         9 001210   011006 757000 1                  STAQ    OPN_RUM+6

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:105  
      866     7862    1      CALL M$OPEN(OPN_RUM) ALTRET(ORUM_ERR);

   7862  9 001211   011000 630400 1                  EPPR0   OPN_RUM
         9 001212   450000 713400                    CLIMB   alt,open
         9 001213   410400 401760                    pmme    nvectors=18
         9 001214   001521 702000 9                  TSX2    ORUM_ERR

      867     7863    1      PATCH_TYPE=P_PO;

   7863  9 001215   000001 235007                    LDA     1,DL
         9 001216   010500 755000 1                  STA     PATCH_TYPE

      868     7864
      869     7865    1      IF DPATCHSZ=0 OR DP_GRAN=0

   7865  9 001217   200011 236100                    LDQ     DPATCHSZ,,AUTO
         9 001220   001454 600000 9                  TZE     PATCH_EXIT
         9 001221   010244 235000 1                  LDA     DP_GRAN
         9 001222   001454 600000 9                  TZE     PATCH_EXIT

      870     7866    1      THEN GOTO PATCH_EXIT;
      871     7867
      872     7868    1      CALL CHKDA(DP_GRAN,DP_GRAN+DPATCHSZ-1,'PTCH') ALTRET(PATCH_EXIT);

   7868  9 001223   010244 036000 1                  ADLQ    DP_GRAN
         9 001224   000001 136007                    SBLQ    1,DL
         9 001225   200032 756100                    STQ     @TEXT+5,,AUTO
         9 001226   000017 236000 10                 LDQ     15
         9 001227   200025 756100                    STQ     @HIGH+1,,AUTO
         9 001230   200032 630500                    EPPR0   @TEXT+5,,AUTO
         9 001231   200024 450500                    STP0    @LOW+1,,AUTO
         9 001232   000030 236000 10                 LDQ     24
         9 001233   200023 756100                    STQ     TYPE+3,,AUTO
         9 001234   001717 701000 9                  TSX1    CHKDA
         9 001235   001454 702000 9                  TSX2    PATCH_EXIT

      873     7869
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:106  
      874     7870    2      DO WHILE (DPATCHSZ > 0);

   7870  9 001236   200011 235100                    LDA     DPATCHSZ,,AUTO
         9 001237   001454 600000 9                  TZE     PATCH_EXIT

      875     7871    2           CALL M$READ(RAPAGE) ALTRET(R_PATCH_ERR);

   7871  9 001240   000116 630400 1                  EPPR0   RAPAGE
         9 001241   440000 713400                    CLIMB   alt,read
         9 001242   401400 401760                    pmme    nvectors=4
         9 001243   001471 702000 9                  TSX2    R_PATCH_ERR

      876     7872    2           DPATCHSZ=DPATCHSZ-1;

   7872  9 001244   200011 235100                    LDA     DPATCHSZ,,AUTO
         9 001245   000001 135007                    SBLA    1,DL
         9 001246   200011 755100                    STA     DPATCHSZ,,AUTO

      877     7873    2           DP_GRAN=DP_GRAN+1;

   7873  9 001247   010244 054000 1                  AOS     DP_GRAN

      878     7874    2           PATCH$=ADDR(APAGE);

   7874  9 001250   000012 236000 10                 LDQ     10
         9 001251   200013 756100                    STQ     PATCH$,,AUTO

      879     7875    2           PATCHSTOP$=PINCRW(PATCH$,PATCH$->B$SYSPATCH.STOP);

   7875  9 001252   200013 470500                    LDP0    PATCH$,,AUTO
         9 001253   000000 720100                    LXL0    0,,PR0
         9 001254   000000 636010                    EAQ     0,X0
         9 001255   200013 036100                    ADLQ    PATCH$,,AUTO
         9 001256   200014 756100                    STQ     PATCHSTOP$,,AUTO

      880     7876    2           PATCH$=PINCRW(PATCH$,1);

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:107  
   7876  9 001257   200013 236100                    LDQ     PATCH$,,AUTO
         9 001260   000001 036003                    ADLQ    1,DU
         9 001261   200013 756100                    STQ     PATCH$,,AUTO

      881     7877
      882     7878    3           DO WHILE (PATCH$ < PATCHSTOP$);

   7878  9 001262   200014 116100                    CMPQ    PATCHSTOP$,,AUTO
         9 001263   001452 603000 9                  TRC     s:7938

      883     7879    3                WTPF.BUF_ = VECTOR(PATCH$->B$APATCH);

   7879  9 001264   200012 235100                    LDA     APATCHSZ,,AUTO
         9 001265   000020 735000                    ALS     16
         9 001266   000140 135007                    SBLA    96,DL
         9 001267   200013 236100                    LDQ     PATCH$,,AUTO
         9 001270   010716 757000 1                  STAQ    WTPF+4

      884     7880
      885     7881    3                IF PATCH$->B$APATCH='!FIN' THEN GOTO PATCH_EXIT;

   7881  9 001271   200013 470500                    LDP0    PATCH$,,AUTO
         9 001272   200012 720100                    LXL0    APATCHSZ,,AUTO
         9 001273   040000 106540                    CMPC    fill='040'O
         9 001274   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 001275   000347 000004 0                  ADSC9   TRAPFPT+131              cn=0,n=4
         9 001276   001454 600000 9                  TZE     PATCH_EXIT

      886     7882    3                IF PATCH$->B$APATCH='!RUM'

   7882  9 001277   040000 106540                    CMPC    fill='040'O
         9 001300   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 001301   000350 000004 0                  ADSC9   TRAPFPT+132              cn=0,n=4
         9 001302   001317 601000 9                  TNZ     s:7891

      887     7883    4                THEN DO;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:108  
      888     7884    4                     APATCHSZ=80;

   7884  9 001303   000120 235007                    LDA     80,DL
         9 001304   200012 755100                    STA     APATCHSZ,,AUTO

      889     7885    4                     NAME_VECTOR = VECTOR(RF_NAME);

   7885  9 001305   000022 237000 10                 LDAQ    18
         9 001306   200016 757100                    STAQ    NAME_VECTOR,,AUTO

      890     7886    4                     TYPE = P_RUM;

   7886  9 001307   000002 235007                    LDA     2,DL
         9 001310   200020 755100                    STA     TYPE,,AUTO

      891     7887    4                     CALL NEXT_FILE ALTRET(ANY_ERR);

   7887  9 001311   001535 701000 9                  TSX1    NEXT_FILE
         9 001312   001532 702000 9                  TSX2    ANY_ERR

      892     7888    4                     PATCH$=PINCRC(PATCH$,200);

   7888  9 001313   200013 236100                    LDQ     PATCH$,,AUTO
         9 001314   000062 036003                    ADLQ    50,DU
         9 001315   200013 756100                    STQ     PATCH$,,AUTO

      893     7889    4                     GOTO NEXT;

   7889  9 001316   001450 710000 9                  TRA     NEXT

      894     7890    4                     END;
      895     7891    3                IF PATCH$->B$APATCH='!PLOVER'

   7891  9 001317   040000 106540                    CMPC    fill='040'O
         9 001320   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 001321   000351 000007 0                  ADSC9   TRAPFPT+133              cn=0,n=7
         9 001322   001332 601000 9                  TNZ     s:7898
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:109  

      896     7892    4                THEN DO;

      897     7893    4                     NAME_VECTOR = VECTOR(PLOVER_NAME);

   7893  9 001323   000024 237000 10                 LDAQ    20
         9 001324   200016 757100                    STAQ    NAME_VECTOR,,AUTO

      898     7894    4                     TYPE = P_PLOVER;

   7894  9 001325   000003 235007                    LDA     3,DL
         9 001326   200020 755100                    STA     TYPE,,AUTO

      899     7895    4                     CALL NEXT_FILE ALTRET(ANY_ERR);

   7895  9 001327   001535 701000 9                  TSX1    NEXT_FILE
         9 001330   001532 702000 9                  TSX2    ANY_ERR

      900     7896    4                     GOTO SKIP_BANG;

   7896  9 001331   001444 710000 9                  TRA     SKIP_BANG

      901     7897    4                     END;
      902     7898    3                IF PATCH$->B$APATCH='!BOOTIME'

   7898  9 001332   040000 106540                    CMPC    fill='040'O
         9 001333   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         9 001334   000353 000010 0                  ADSC9   TRAPFPT+135              cn=0,n=8
         9 001335   001345 601000 9                  TNZ     s:7906

      903     7899    4                THEN DO;

      904     7900    4                     NAME_VECTOR = VECTOR(BOOTIME_NAME);

   7900  9 001336   000026 237000 10                 LDAQ    22
         9 001337   200016 757100                    STAQ    NAME_VECTOR,,AUTO

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:110  
      905     7901    4                     TYPE = P_BOOTIME;

   7901  9 001340   000004 235007                    LDA     4,DL
         9 001341   200020 755100                    STA     TYPE,,AUTO

      906     7902    4                     CALL NEXT_FILE ALTRET(ANY_ERR);

   7902  9 001342   001535 701000 9                  TSX1    NEXT_FILE
         9 001343   001532 702000 9                  TSX2    ANY_ERR

      907     7903    4                     GOTO SKIP_BANG;

   7903  9 001344   001444 710000 9                  TRA     SKIP_BANG

      908     7904    4                     END;
      909     7905
      910     7906    3                IF PFCONTENTS(PATCH_TYPE) ~= 0

   7906  9 001345   010500 721000 1                  LXL1    PATCH_TYPE
         9 001346   010473 235011 1                  LDA     PFCONTENTS,X1
         9 001347   001354 600000 9                  TZE     s:7912

      911     7907    4                THEN DO;

      912     7908                       /* Write all !MINI !XDEL images to the :PF file in :SYSTAC     */
      913     7909    4                     CALL M$WRITE(WTPF) ALTRET(WPF_ERR);

   7909  9 001350   010712 630400 1                  EPPR0   WTPF
         9 001351   440001 713400                    CLIMB   alt,write
         9 001352   401400 401760                    pmme    nvectors=4
         9 001353   001505 702000 9                  TSX2    WPF_ERR

      914     7910    4                     END;

      915     7911
      916     7912    3                IF (PATCH_TYPE = P_RUM) OR (PATCH_TYPE = P_PLOVER)

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:111  
   7912  9 001354   010500 235000 1                  LDA     PATCH_TYPE
         9 001355   000002 115007                    CMPA    2,DL
         9 001356   001361 600000 9                  TZE     s:7916
         9 001357   000003 115007                    CMPA    3,DL
         9 001360   001432 601000 9                  TNZ     s:7932

      917     7913    4                THEN DO;

      918     7914                                      /* Delete any QUIT patches in case there is
      919     7915                                         a QUIT from more than one patch source     */
      920     7916    4                     SKIP_P4=' ';

   7916  9 001361   040000 100400                    MLR     fill='040'O
         9 001362   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 001363   011300 000005 1                  ADSC9   SKIP_PATCH               cn=0,n=5

      921     7917    5                     DO I=0 TO 4;

   7917  9 001364   200007 450100                    STZ     I,,AUTO

      922     7918    5                          SKIP_PATCH(I) = PATCH$->B$5CHAR(I);

   7918  9 001365   200013 470500                    LDP0    PATCH$,,AUTO
         9 001366   200007 235100                    LDA     I,,AUTO
         9 001367   040005 100505                    MLR     fill='040'O
         9 001370   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 001371   011300 000001 1                  ADSC9   SKIP_PATCH,A             cn=0,n=1

      923     7919    5                          IF SKIP_PATCH(I) = ' ' THEN GOTO CHECK_IT;

   7919  9 001372   040000 106405                    CMPC    fill='040'O
         9 001373   011300 000001 1                  ADSC9   SKIP_PATCH,A             cn=0,n=1
         9 001374   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 001375   001402 600000 9                  TZE     CHECK_IT

      924     7920    5                          END;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:112  
   7920  9 001376   000001 035007                    ADLA    1,DL
         9 001377   200007 755100                    STA     I,,AUTO
         9 001400   000005 115007                    CMPA    5,DL
         9 001401   001365 602000 9                  TNC     s:7918

   7918  9 001402                       CHECK_IT     null
      925     7921    4   CHECK_IT:         ;
      926     7922    5                     DO I=0 TO SKIP_MAX;

   7922  9 001402   200007 450100                    STZ     I,,AUTO

      927     7923    6                          IF SKIP_PATCH=SKIP_TAB(I) THEN DO;

   7923  9 001403   200007 236100                    LDQ     I,,AUTO
         9 001404   000005 402007                    MPY     5,DL
         9 001405   000006 106400                    CMPC    fill='000'O
         9 001406   011300 000005 1                  ADSC9   SKIP_PATCH               cn=0,n=5
         9 001407   000132 000005 0                  ADSC9   SKIP_TAB,Q               cn=0,n=5
         9 001410   001425 601000 9                  TNZ     s:7928

      928     7924    6                               CALL CONCAT (ERRM2.M,
              7924                                        'DISCOVERED ILLEGAL COMMAND IN RUM/PLOVER (',
              7924                                        SKIP_TAB.P(I),')');

   7924  9 001411   040000 100400                    MLR     fill='040'O
         9 001412   000355 000052 0                  ADSC9   TRAPFPT+137              cn=0,n=42
         9 001413   011315 400052 1                  ADSC9   ERRM2+1                  cn=2,n=42
         9 001414   040000 100406                    MLR     fill='040'O
         9 001415   000132 000005 0                  ADSC9   SKIP_TAB,Q               cn=0,n=5
         9 001416   011330 000005 1                  ADSC9   ERRM2+12                 cn=0,n=5
         9 001417   040000 100400                    MLR     fill='040'O
         9 001420   000031 000001 10                 ADSC9   25                       cn=0,n=1
         9 001421   011331 200111 1                  ADSC9   ERRM2+13                 cn=1,n=73

      929     7925    6                               CALL REPORT_ERRM_2;

   7925  9 001422   002043 701000 9                  TSX1    REPORT_ERRM_2
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:113  
         9 001423   000000 011000                    NOP     0

      930     7926    6                               GOTO SKIP_BANG;

   7926  9 001424   001444 710000 9                  TRA     SKIP_BANG

      931     7927    6                               END;
      932     7928    5                          END;

   7928  9 001425   200007 235100                    LDA     I,,AUTO
         9 001426   000001 035007                    ADLA    1,DL
         9 001427   200007 755100                    STA     I,,AUTO
         9 001430   000007 115007                    CMPA    7,DL
         9 001431   001403 602000 9                  TNC     s:7923

      933     7929
      934     7930    4                     END;

      935     7931                                                /* Write the patch to the :RUM file   */
      936     7932    3                WTRUM.BUF_ = VECTOR(PATCH$->B$PATCH80);

   7932  9 001432   000032 235000 10                 LDA     26
         9 001433   200013 236100                    LDQ     PATCH$,,AUTO
         9 001434   011076 757000 1                  STAQ    WTRUM+4

      937     7933    3                CALL M$WRITE(WTRUM) ALTRET(WRUM_ERR);

   7933  9 001435   011072 630400 1                  EPPR0   WTRUM
         9 001436   440001 713400                    CLIMB   alt,write
         9 001437   401400 401760                    pmme    nvectors=4
         9 001440   001527 702000 9                  TSX2    WRUM_ERR

      938     7934    3                RUMF_SIZE = RUMF_SIZE+1;

   7934  9 001441   010456 235000 1                  LDA     RUMF_SIZE
         9 001442   000001 035007                    ADLA    1,DL
         9 001443   010456 755000 1                  STA     RUMF_SIZE
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:114  

   7934  9 001444                       SKIP_BANG    null
      939     7935    3   SKIP_BANG:   ;
      940     7936    3                PATCH$=PINCRC(PATCH$,APATCHSZ);

   7936  9 001444   200012 236100                    LDQ     APATCHSZ,,AUTO
         9 001445   000020 736000                    QLS     16
         9 001446   200013 036100                    ADLQ    PATCH$,,AUTO
         9 001447   200013 756100                    STQ     PATCH$,,AUTO

      941     7937    3   NEXT:        END;

   7937  9 001450   200014 116100       NEXT         CMPQ    PATCHSTOP$,,AUTO
         9 001451   001264 602000 9                  TNC     s:7879

      942     7938    2           END;

   7938  9 001452   200011 235100                    LDA     DPATCHSZ,,AUTO
         9 001453   001240 601000 9                  TNZ     s:7871

   7938  9 001454                       PATCH_EXIT   null
   7938  9 001454                       PATCH_ERR    null
      943     7939
      944     7940    1   PATCH_EXIT: ;
      945     7941        /* DO THIS IF WE EVER WANT TO ALLOW PATCHING ON A DISK BOOT */
      946     7942        /*
      947     7943           T$->I$DISKDIR.PATCH.SIZE=0;
      948     7944           DP_GRAN=SYSDIR_GRAN;
      949     7945           CALL M$WRITE(WT_DP) ALTRET(PATCH_ERR);
      950     7946        */
      951     7947        /* RV_USRDIR still contains the System Area Directory */
      952     7948    1   PATCH_ERR: ;
      953     7949    1      CALL FINISH_RUM;

   7949  9 001454   001604 701000 9                  TSX1    FINISH_RUM
         9 001455   000000 011000                    NOP     0

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:115  
      954     7950    1      CALL M$CLOSE(CLS_PF) ALTRET(CPF_ERR);

   7950  9 001456   010742 630400 1                  EPPR0   CLS_PF
         9 001457   450001 713400                    CLIMB   alt,close
         9 001460   406000 401760                    pmme    nvectors=13
         9 001461   001513 702000 9                  TSX2    CPF_ERR

      955     7951    1      GOTO EXIT_DP;

   7951  9 001462   000133 710000 9                  TRA     EXIT_DP

   7938  9 001463                       PATCH_TRAP   null
      956     7952                                      /* RESET TRAP CONTROL - XCON CONTROL AND RETURN */
      957     7953
      958     7954        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:116  
      959     7955                                                /* Error buildling :PF or :RUM files  */
      960     7956    1   PATCH_TRAP: ;
      961     7957    1      ERRM1.M='TRAP/XCON BUILDING PATCH FILE';

   7957  9 001463   040000 100400                    MLR     fill='040'O
         9 001464   000370 000035 0                  ADSC9   TRAPFPT+148              cn=0,n=29
         9 001465   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      962     7958    1      CALL REPORT_STK_ERR;

   7958  9 001466   001763 701000 9                  TSX1    REPORT_STK_ERR
         9 001467   000000 011000                    NOP     0

      963     7959    1      GOTO PATCH_ERR;

   7959  9 001470   001454 710000 9                  TRA     PATCH_EXIT

   7957  9 001471                       R_PATCH_ERR  null
      964     7960                                           /* Error reading the system patch area     */
      965     7961    1   R_PATCH_ERR: ;
      966     7962    1      ERRM1.M='READ SYS DISK PATCH AREA';

   7962  9 001471   040000 100400                    MLR     fill='040'O
         9 001472   000400 000030 0                  ADSC9   TRAPFPT+156              cn=0,n=24
         9 001473   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      967     7963    1      CALL REPORT_ERR;

   7963  9 001474   001752 701000 9                  TSX1    REPORT_ERR
         9 001475   000000 011000                    NOP     0

      968     7964    1      GOTO PATCH_ERR;

   7964  9 001476   001454 710000 9                  TRA     PATCH_EXIT

   7962  9 001477                       OPF_ERR      null
      969     7965
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:117  
      970     7966                                                /* Error opening the :PF file         */
      971     7967    1   OPF_ERR: ;
      972     7968    1      ERRM1.M='OPEN :PF FILE';

   7968  9 001477   040000 100400                    MLR     fill='040'O
         9 001500   000406 000015 0                  ADSC9   TRAPFPT+162              cn=0,n=13
         9 001501   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      973     7969    1      CALL REPORT_ERR;

   7969  9 001502   001752 701000 9                  TSX1    REPORT_ERR
         9 001503   000000 011000                    NOP     0

      974     7970    1      GOTO EXIT_DP;

   7970  9 001504   000133 710000 9                  TRA     EXIT_DP

   7968  9 001505                       WPF_ERR      null
      975     7971                                                /* Error writing :PF file             */
      976     7972    1   WPF_ERR: ;
      977     7973    1      ERRM1.M='WRITE :PF FILE';

   7973  9 001505   040000 100400                    MLR     fill='040'O
         9 001506   000412 000016 0                  ADSC9   TRAPFPT+166              cn=0,n=14
         9 001507   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      978     7974    1      CALL REPORT_ERR;

   7974  9 001510   001752 701000 9                  TSX1    REPORT_ERR
         9 001511   000000 011000                    NOP     0

      979     7975    1      GOTO PATCH_ERR;

   7975  9 001512   001454 710000 9                  TRA     PATCH_EXIT

   7973  9 001513                       CPF_ERR      null
      980     7976
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:118  
      981     7977                                                /* Error closing :PF file             */
      982     7978    1   CPF_ERR: ;
      983     7979    1      ERRM1.M='CLOSE :PF FILE';

   7979  9 001513   040000 100400                    MLR     fill='040'O
         9 001514   000416 000016 0                  ADSC9   TRAPFPT+170              cn=0,n=14
         9 001515   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      984     7980    1      CALL REPORT_ERR;

   7980  9 001516   001752 701000 9                  TSX1    REPORT_ERR
         9 001517   000000 011000                    NOP     0

      985     7981    1      GOTO EXIT_DP;

   7981  9 001520   000133 710000 9                  TRA     EXIT_DP

   7979  9 001521                       ORUM_ERR     null
      986     7982
      987     7983                                                /* Error opening a RUM file           */
      988     7984    1   ORUM_ERR: ;
      989     7985    1      ERRM1.M='OPEN :RUM FILE';

   7985  9 001521   040000 100400                    MLR     fill='040'O
         9 001522   000422 000016 0                  ADSC9   TRAPFPT+174              cn=0,n=14
         9 001523   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

      990     7986    1      CALL REPORT_ERR;

   7986  9 001524   001752 701000 9                  TSX1    REPORT_ERR
         9 001525   000000 011000                    NOP     0

      991     7987    1      GOTO PATCH_ERR;

   7987  9 001526   001454 710000 9                  TRA     PATCH_EXIT

   7985  9 001527                       WRUM_ERR     null
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:119  
      992     7988
      993     7989                                                /* Error writing a RUM file           */
      994     7990    1   WRUM_ERR: ;
      995     7991    1      ERRM1.M='WRITE :RUM FILE';

   7991  9 001527   040000 100400                    MLR     fill='040'O
         9 001530   000426 000017 0                  ADSC9   TRAPFPT+178              cn=0,n=15
         9 001531   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

   7991  9 001532                       ANY_ERR      null
      996     7992    1   ANY_ERR: ;
      997     7993    1      CALL REPORT_ERR;

   7993  9 001532   001752 701000 9                  TSX1    REPORT_ERR
         9 001533   000000 011000                    NOP     0

      998     7994    1      GOTO PATCH_ERR;

   7994  9 001534   001454 710000 9                  TRA     PATCH_EXIT

      999     7995
     1000     7996                                                /* Close up System Disk and Return    */
     1001     7997        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:120  
     1002     7998
     1003     7999    1   NEXT_FILE: PROC ALTRET;

   7999  9 001535   200022 741300       NEXT_FILE    STX1  ! TYPE+2,,AUTO

     1004     8000    2      ERRM1.M=' ';

   8000  9 001536   040000 100400                    MLR     fill='040'O
         9 001537   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 001540   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

     1005     8001    2      CALL FINISH_RUM;

   8001  9 001541   001604 701000 9                  TSX1    FINISH_RUM
         9 001542   000000 011000                    NOP     0

     1006     8002    2      RUMF_SIZE=0;

   8002  9 001543   010456 450000 1                  STZ     RUMF_SIZE

     1007     8003    2      OPN_RUM.NAME_ = NAME_VECTOR;

   8003  9 001544   200016 237100                    LDAQ    NAME_VECTOR,,AUTO
         9 001545   011006 757000 1                  STAQ    OPN_RUM+6

     1008     8004    2      CALL M$OPEN(OPN_RUM) ALTRET(GIVE_ALTRET);

   8004  9 001546   011000 630400 1                  EPPR0   OPN_RUM
         9 001547   450000 713400                    CLIMB   alt,open
         9 001550   410400 401760                    pmme    nvectors=18
         9 001551   001602 702000 9                  TSX2    GIVE_ALTRET

     1009     8005    2      PATCH_TYPE=TYPE;

   8005  9 001552   200020 235100                    LDA     TYPE,,AUTO
         9 001553   010500 755000 1                  STA     PATCH_TYPE

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:121  
     1010     8006    2      CALL M$WRITE(WTPF) ALTRET(GIVE_ALTRET);

   8006  9 001554   010712 630400 1                  EPPR0   WTPF
         9 001555   440001 713400                    CLIMB   alt,write
         9 001556   401400 401760                    pmme    nvectors=4
         9 001557   001602 702000 9                  TSX2    GIVE_ALTRET

     1011     8007    2      CALL M$WRITE(WT_PHEAD) ALTRET(GIVE_ALTRET);

   8007  9 001560   010726 630400 1                  EPPR0   WT_PHEAD
         9 001561   440001 713400                    CLIMB   alt,write
         9 001562   401400 401760                    pmme    nvectors=4
         9 001563   001602 702000 9                  TSX2    GIVE_ALTRET

     1012     8008    2      WTRUM.BUF_ = VECTOR(DOCMD);

   8008  9 001564   000034 237000 10                 LDAQ    28
         9 001565   011076 757000 1                  STAQ    WTRUM+4

     1013     8009    2      CALL M$WRITE(WTRUM) ALTRET(GIVE_ALTRET);

   8009  9 001566   011072 630400 1                  EPPR0   WTRUM
         9 001567   440001 713400                    CLIMB   alt,write
         9 001570   401400 401760                    pmme    nvectors=4
         9 001571   001602 702000 9                  TSX2    GIVE_ALTRET

     1014     8010    2      WTRUM.BUF_ = VECTOR(ECHOCMD);

   8010  9 001572   000032 237000 10                 LDAQ    26
         9 001573   011076 757000 1                  STAQ    WTRUM+4

     1015     8011    2      CALL M$WRITE(WTRUM) ALTRET(GIVE_ALTRET);

   8011  9 001574   011072 630400 1                  EPPR0   WTRUM
         9 001575   440001 713400                    CLIMB   alt,write
         9 001576   401400 401760                    pmme    nvectors=4
         9 001577   001602 702000 9                  TSX2    GIVE_ALTRET
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:122  

     1016     8012    2      RETURN;

   8012  9 001600   200022 221300                    LDX1  ! TYPE+2,,AUTO
         9 001601   000001 702211                    TSX2  ! 1,X1

   8010  9 001602                       GIVE_ALTRET  null
     1017     8013
     1018     8014    2   GIVE_ALTRET: ;
     1019     8015    2      ALTRETURN;

   8015  9 001602   200022 221300                    LDX1  ! TYPE+2,,AUTO
         9 001603   000000 702211                    TSX2  ! 0,X1

     1020     8016    2   END NEXT_FILE;
     1021     8017        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:123  
     1022     8018
     1023     8019    1   FINISH_RUM: PROC;

   8019  9 001604   200024 741300       FINISH_RUM   STX1  ! @LOW+1,,AUTO

     1024     8020    2      IF PATCH_TYPE=P_PO

   8020  9 001605   010500 235000 1                  LDA     PATCH_TYPE
         9 001606   000001 115007                    CMPA    1,DL
         9 001607   001625 601000 9                  TNZ     s:8028

     1025     8021    3      THEN DO;

     1026     8022    3           IF RUMF_SIZE > 0

   8022  9 001610   010456 236000 1                  LDQ     RUMF_SIZE
         9 001611   001617 600000 9                  TZE     s:8024

     1027     8023    3           THEN CALL M$CLOSE(CLS_RUM) ALTRET(CRUM_ERR);

   8023  9 001612   011106 630400 1                  EPPR0   CLS_RUM
         9 001613   450001 713400                    CLIMB   alt,close
         9 001614   406000 401760                    pmme    nvectors=13
         9 001615   001710 702000 9                  TSX2    CRUM_ERR
         9 001616   001623 710000 9                  TRA     s:8025

     1028     8024    3           ELSE CALL M$CLOSE(REL_RUM) ALTRET(CRUM_ERR);

   8024  9 001617   011144 630400 1                  EPPR0   REL_RUM
         9 001620   450001 713400                    CLIMB   alt,close
         9 001621   406000 401760                    pmme    nvectors=13
         9 001622   001710 702000 9                  TSX2    CRUM_ERR

     1029     8025    3           RETURN;

   8025  9 001623   200024 221300                    LDX1  ! @LOW+1,,AUTO
         9 001624   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:124  

     1030     8026    3           END;
     1031     8027
     1032     8028    2      IF (PATCH_TYPE = P_RUM) OR (PATCH_TYPE = P_PLOVER)

   8028  9 001625   000002 115007                    CMPA    2,DL
         9 001626   001631 600000 9                  TZE     s:8030
         9 001627   000003 115007                    CMPA    3,DL
         9 001630   001662 601000 9                  TNZ     s:8042

     1033     8029    3      THEN DO;

     1034     8030    3           IF RUMF_SIZE > 0

   8030  9 001631   010456 236000 1                  LDQ     RUMF_SIZE
         9 001632   001654 600000 9                  TZE     s:8038

     1035     8031    4           THEN DO;

     1036     8032    4                WTRUM.BUF_ = VECTOR(SAY_KILLRUM);

   8032  9 001633   000036 237000 10                 LDAQ    30
         9 001634   011076 757000 1                  STAQ    WTRUM+4

     1037     8033    4                CALL M$WRITE(WTRUM) ALTRET(WRUM_FERR);

   8033  9 001635   011072 630400 1                  EPPR0   WTRUM
         9 001636   440001 713400                    CLIMB   alt,write
         9 001637   401400 401760                    pmme    nvectors=4
         9 001640   001701 702000 9                  TSX2    WRUM_FERR

     1038     8034    4                WTRUM.BUF_ = VECTOR(SAY_ALIBR);

   8034  9 001641   000040 237000 10                 LDAQ    32
         9 001642   011076 757000 1                  STAQ    WTRUM+4

     1039     8035    4                CALL M$WRITE(WTRUM) ALTRET(WRUM_FERR);
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:125  

   8035  9 001643   011072 630400 1                  EPPR0   WTRUM
         9 001644   440001 713400                    CLIMB   alt,write
         9 001645   401400 401760                    pmme    nvectors=4
         9 001646   001701 702000 9                  TSX2    WRUM_FERR

     1040     8036    4                CALL M$CLOSE(CLS_RUM) ALTRET(CRUM_ERR);

   8036  9 001647   011106 630400 1                  EPPR0   CLS_RUM
         9 001650   450001 713400                    CLIMB   alt,close
         9 001651   406000 401760                    pmme    nvectors=13
         9 001652   001710 702000 9                  TSX2    CRUM_ERR

     1041     8037    4                END;

   8037  9 001653   001660 710000 9                  TRA     s:8039

     1042     8038    3           ELSE CALL M$CLOSE(REL_RUM) ALTRET(CRUM_ERR);

   8038  9 001654   011144 630400 1                  EPPR0   REL_RUM
         9 001655   450001 713400                    CLIMB   alt,close
         9 001656   406000 401760                    pmme    nvectors=13
         9 001657   001710 702000 9                  TSX2    CRUM_ERR

     1043     8039    3           RETURN;

   8039  9 001660   200024 221300                    LDX1  ! @LOW+1,,AUTO
         9 001661   000001 702211                    TSX2  ! 1,X1

     1044     8040    3           END;
     1045     8041
     1046     8042    2      IF PATCH_TYPE=P_BOOTIME

   8042  9 001662   000004 115007                    CMPA    4,DL
         9 001663   001677 601000 9                  TNZ     s:8050

     1047     8043    3      THEN DO;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:126  

     1048     8044    3           IF RUMF_SIZE > 0

   8044  9 001664   010456 236000 1                  LDQ     RUMF_SIZE
         9 001665   001673 600000 9                  TZE     s:8048

     1049     8045    4           THEN DO;

     1050     8046    4                CALL M$CLOSE(CLS_RUM) ALTRET(CRUM_ERR);

   8046  9 001666   011106 630400 1                  EPPR0   CLS_RUM
         9 001667   450001 713400                    CLIMB   alt,close
         9 001670   406000 401760                    pmme    nvectors=13
         9 001671   001710 702000 9                  TSX2    CRUM_ERR

     1051     8047    4                END;

   8047  9 001672   001677 710000 9                  TRA     s:8050

     1052     8048    3           ELSE CALL M$CLOSE(REL_RUM) ALTRET(CRUM_ERR);

   8048  9 001673   011144 630400 1                  EPPR0   REL_RUM
         9 001674   450001 713400                    CLIMB   alt,close
         9 001675   406000 401760                    pmme    nvectors=13
         9 001676   001710 702000 9                  TSX2    CRUM_ERR

     1053     8049    3           END;

     1054     8050    2      RETURN;

   8050  9 001677   200024 221300                    LDX1  ! @LOW+1,,AUTO
         9 001700   000001 702211                    TSX2  ! 1,X1

   8042  9 001701                       WRUM_FERR    null
     1055     8051
     1056     8052    2   WRUM_FERR: ;
     1057     8053    2      ERRM1.M='WRITE :RUM QUIT';
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:127  

   8053  9 001701   040000 100400                    MLR     fill='040'O
         9 001702   000432 000017 0                  ADSC9   TRAPFPT+182              cn=0,n=15
         9 001703   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

     1058     8054    2      CALL REPORT_ERR;

   8054  9 001704   001752 701000 9                  TSX1    REPORT_ERR
         9 001705   000000 011000                    NOP     0

     1059     8055    2      RETURN;

   8055  9 001706   200024 221300                    LDX1  ! @LOW+1,,AUTO
         9 001707   000001 702211                    TSX2  ! 1,X1

   8053  9 001710                       CRUM_ERR     null
     1060     8056
     1061     8057    2   CRUM_ERR: ;
     1062     8058    2      ERRM1.M='CLOSE :RUM FILE';

   8058  9 001710   040000 100400                    MLR     fill='040'O
         9 001711   000436 000017 0                  ADSC9   TRAPFPT+186              cn=0,n=15
         9 001712   011304 400036 1                  ADSC9   ERRM1+1                  cn=2,n=30

     1063     8059    2      CALL REPORT_ERR;

   8059  9 001713   001752 701000 9                  TSX1    REPORT_ERR
         9 001714   000000 011000                    NOP     0

     1064     8060    2      RETURN;

   8060  9 001715   200024 221300                    LDX1  ! @LOW+1,,AUTO
         9 001716   000001 702211                    TSX2  ! 1,X1

     1065     8061    2   END FINISH_RUM;
     1066     8062        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:128  
     1067     8063                                                /* CHKDA                              */
     1068     8064    1   CHKDA: PROC(LOW,HIGH,TEXT) ALTRET;

   8064  9 001717   200022 741300       CHKDA        STX1  ! TYPE+2,,AUTO

     1069     8065        %F$DCB;
     1070     8122    2   DCL LOW UBIN;
     1071     8123    2   DCL HIGH UBIN;
     1072     8124    2   DCL TEXT CHAR(4);
     1073     8125
     1074     8126    2      IF LOW > SYSDIR_GRAN AND HIGH < DCBADDR(DCBNUM(M$DP))->F$DCB.IXTNSIZE#

   8126  9 001720   200023 470500                    LDP0    @LOW,,AUTO
         9 001721   000000 236100                    LDQ     0,,PR0
         9 001722   001725 604000 9                  TMI     s:8126+5
         9 001723   010245 116000 1                  CMPQ    SYSDIR_GRAN
         9 001724   001737 604400 9                  TMOZ    s:8128
         9 001725   000000 236007 xsym               LDQ     M$DP,DL
         9 001726   000042 471400 10                 LDP1    34
         9 001727   100000 473500                    LDP3    0,,PR1
         9 001730   300000 474506                    LDP4    0,QL,PR3
         9 001731   200024 475500                    LDP5    @HIGH,,AUTO
         9 001732   500000 236100                    LDQ     0,,PR5
         9 001733   001737 604000 9                  TMI     s:8128
         9 001734   400041 116100                    CMPQ    33,,PR4
         9 001735   001737 605000 9                  TPL     s:8128

     1075     8127    2      THEN RETURN;

   8127  9 001736   000001 702211                    TSX2  ! 1,X1

     1076     8128    2      CALL CONCAT(ERRM2.M,TEXT,' AREA DISK ADDRESS BAD');

   8128  9 001737   200025 471500                    LDP1    @TEXT,,AUTO
         9 001740   040000 100500                    MLR     fill='040'O
         9 001741   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         9 001742   011315 400004 1                  ADSC9   ERRM2+1                  cn=2,n=4
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:129  
         9 001743   040000 100400                    MLR     fill='040'O
         9 001744   000442 000026 0                  ADSC9   TRAPFPT+190              cn=0,n=22
         9 001745   011316 400164 1                  ADSC9   ERRM2+2                  cn=2,n=116

     1077     8129    2      CALL REPORT_ERRM_2;

   8129  9 001746   002043 701000 9                  TSX1    REPORT_ERRM_2
         9 001747   000000 011000                    NOP     0

     1078     8130    2      ALTRETURN;

   8130  9 001750   200022 221300                    LDX1  ! TYPE+2,,AUTO
         9 001751   000000 702211                    TSX2  ! 0,X1

     1079     8131    2   END CHKDA;
     1080     8132        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:130  
     1081     8133
     1082     8134                                                /* REPORT ERROR                       */
     1083     8135    1   REPORT_ERR: PROC;

   8135  9 001752   200026 741300       REPORT_ERR   STX1  ! @TEXT+1,,AUTO

     1084     8136                                                /* This entry to report ALTRET errors */
     1085     8137    2      PERRC=B$ALT.ERR;

   8137  9 001753   000000 470400 xsym               LDP0    B$TCB$
         9 001754   000000 471500                    LDP1    0,,PR0
         9 001755   100102 236100                    LDQ     66,,PR1
         9 001756   011462 756000 1                  STQ     PERRC

     1086     8138    2      FPT_ERRMSG.V.DCB# = B$ALT.DCB#;

   8138  9 001757   000000 471500                    LDP1    0,,PR0
         9 001760   100101 720100                    LXL0    65,,PR1
         9 001761   011452 740000 1                  STX0    FPT_ERRMSG+22

     1087     8139    2      GOTO GET_ERRM;

   8139  9 001762   002000 710000 9                  TRA     GET_ERRM

     1088     8140
     1089     8141    2   REPORT_STK_ERR: ENTRY;

   8141  9 001763   200026 741300       REPORT_STK_* STX1  ! @TEXT+1,,AUTO

     1090     8142                                           /* This entry to report TCB Stack errors   */
     1091     8143    2      PERRC=B$EXCFR.ERR;

   8143  9 001764   000000 470400 xsym               LDP0    B$TCB$
         9 001765   000001 471500                    LDP1    1,,PR0
         9 001766   100102 236100                    LDQ     66,,PR1
         9 001767   011462 756000 1                  STQ     PERRC

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:131  
     1092     8144    2      FPT_ERRMSG.V.DCB# = 0;

   8144  9 001770   000000 220003                    LDX0    0,DU
         9 001771   011452 740000 1                  STX0    FPT_ERRMSG+22

     1093     8145    2      CALL M$CLRSTK(FPT_CLRSTK) ALTRET(GET_ERRM);

   8145  9 001772   011520 630400 1                  EPPR0   FPT_CLRSTK
         9 001773   410013 713400                    CLIMB   alt,+4107
         9 001774   400000 401760                    pmme    nvectors=1
         9 001775   002000 702000 9                  TSX2    GET_ERRM
         9 001776   002000 710000 9                  TRA     GET_ERRM

     1094     8146
     1095     8147    2   REPORT_ERRMSG: ENTRY;

   8147  9 001777   200026 741300       REPORT_ERRM* STX1  ! @TEXT+1,,AUTO

   8144  9 002000                       GET_ERRM     null
     1096     8148                                                /* This entry after REPORT_DFERR      */
     1097     8149    2   GET_ERRM: ;
     1098     8150    2      CALL M$ERRMSG(FPT_ERRMSG) ALTRET(REPORT_ERR3);

   8150  9 002000   011424 630400 1                  EPPR0   FPT_ERRMSG
         9 002001   420000 713400                    CLIMB   alt,+8192
         9 002002   405000 401760                    pmme    nvectors=11
         9 002003   002004 702000 9                  TSX2    REPORT_ERR3

   8144  9 002004                       REPORT_ERR3  null
     1099     8151    2   REPORT_ERR3: ;
     1100     8152                  /*  ERRMSG1 is output only if IGR_MSG1 or IGR_DEBUG is non-zero     */
     1101     8153    2      IF IGR_DEBUG + IGR_MSG1 ~= 0

   8153  9 002004   000000 236000 1                  LDQ     IGR_DEBUG
         9 002005   011302 036000 1                  ADLQ    IGR_MSG1
         9 002006   002042 600000 9                  TZE     s:8165

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:132  
     1102     8154    3      THEN DO;

     1103     8155                                                /* Dont print trailing blanks         */
     1104     8156    3           T$=ADDR(ERRM1);

   8156  9 002007   000043 236000 10                 LDQ     35
         9 002010   200003 756100                    STQ     T$,,AUTO

     1105     8157    3           MSGINDX=ERRM1_SIZE-1;

   8157  9 002011   000043 235007                    LDA     35,DL
         9 002012   011372 755000 1                  STA     MSGINDX

     1106     8158    4           DO WHILE (T$->B$MSG(MSGINDX) = ' ');

   8158  9 002013   200003 470500                    LDP0    T$,,AUTO
         9 002014   040000 106505                    CMPC    fill='040'O
         9 002015   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 002016   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002017   002030 601000 9                  TNZ     s:8161

     1107     8159    4                MSGINDX = MSGINDX-1;

   8159  9 002020   000001 336007                    LCQ     1,DL
         9 002021   011372 056000 1                  ASQ     MSGINDX

     1108     8160    4                END;

   8160  9 002022   200003 470500                    LDP0    T$,,AUTO
         9 002023   011372 235000 1                  LDA     MSGINDX
         9 002024   040000 106505                    CMPC    fill='040'O
         9 002025   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 002026   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002027   002020 600000 9                  TZE     s:8159

     1109     8161    3           REPORT_ERRM1.BUFW_.BOUND = MSGINDX;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:133  
   8161  9 002030   011372 236000 1                  LDQ     MSGINDX
         9 002031   000020 736000                    QLS     16
         9 002032   011376 676000 1                  ERQ     REPORT_ERRM1+2
         9 002033   000034 376000 xsym               ANQ     B_VECTNIL+28
         9 002034   011376 656000 1                  ERSQ    REPORT_ERRM1+2

     1110     8162    3           CALL M$TEMPWROC(REPORT_ERRM1) ALTRET(TEMPWR_ALT1);

   8162  9 002035   011374 630400 1                  EPPR0   REPORT_ERRM1
         9 002036   510000 713400                    CLIMB   alt,+36864
         9 002037   401000 401760                    pmme    nvectors=3
         9 002040   002041 702000 9                  TSX2    TEMPWR_ALT1

   8161  9 002041                       TEMPWR_ALT1  null
     1111     8163    3   TEMPWR_ALT1: ;
     1112     8164    3           IGR_MSG1=0;

   8164  9 002041   011302 450000 1                  STZ     IGR_MSG1

     1113     8165    3           END;

   8165  9 002042   002044 710000 9                  TRA     s:8169

     1114     8166
     1115     8167    2   REPORT_ERRM_2: ENTRY;

   8167  9 002043   200026 741300       REPORT_ERRM* STX1  ! @TEXT+1,,AUTO

     1116     8168                                                /* This entry if no call to M$ERRMSG  */
     1117     8169    2      T$=ADDR(ERRM2);

   8169  9 002044   000044 236000 10                 LDQ     36
         9 002045   200003 756100                    STQ     T$,,AUTO

     1118     8170    2      MSGINDX=ERRM2_SIZE-1;

   8170  9 002046   000175 235007                    LDA     125,DL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:134  
         9 002047   011372 755000 1                  STA     MSGINDX

     1119     8171    3      DO WHILE (T$->B$MSG(MSGINDX) = ' ');

   8171  9 002050   200003 470500                    LDP0    T$,,AUTO
         9 002051   040000 106505                    CMPC    fill='040'O
         9 002052   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 002053   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002054   002065 601000 9                  TNZ     s:8174

     1120     8172    3           MSGINDX = MSGINDX-1;

   8172  9 002055   000001 336007                    LCQ     1,DL
         9 002056   011372 056000 1                  ASQ     MSGINDX

     1121     8173    3           END;

   8173  9 002057   200003 470500                    LDP0    T$,,AUTO
         9 002060   011372 235000 1                  LDA     MSGINDX
         9 002061   040000 106505                    CMPC    fill='040'O
         9 002062   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         9 002063   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002064   002055 600000 9                  TZE     s:8172

     1122     8174    2      REPORT_ERRM2.BUFW_.BOUND = MSGINDX;

   8174  9 002065   011372 236000 1                  LDQ     MSGINDX
         9 002066   000020 736000                    QLS     16
         9 002067   011406 676000 1                  ERQ     REPORT_ERRM2+2
         9 002070   000034 376000 xsym               ANQ     B_VECTNIL+28
         9 002071   011406 656000 1                  ERSQ    REPORT_ERRM2+2

     1123     8175    2      CALL M$TEMPWROC(REPORT_ERRM2) ALTRET(REPORT_EXIT);

   8175  9 002072   011404 630400 1                  EPPR0   REPORT_ERRM2
         9 002073   510000 713400                    CLIMB   alt,+36864
         9 002074   401000 401760                    pmme    nvectors=3
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:135  
         9 002075   002076 702000 9                  TSX2    REPORT_EXIT

   8174  9 002076                       REPORT_EXIT  null
     1124     8176    2   REPORT_EXIT: ;
     1125     8177    2      RETURN;

   8177  9 002076   200026 221300                    LDX1  ! @TEXT+1,,AUTO
         9 002077   000001 702211                    TSX2  ! 1,X1

     1126     8178
     1127     8179    2   END REPORT_ERR;
     1128     8180        %EJECT;
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:136  
     1129     8181    1   REPORT_DFERR: PROC;

   8181  9 002100   200022 741300       REPORT_DFERR STX1  ! TYPE+2,,AUTO

     1130     8182    2      DFMSG.SDF = ':DF';

   8182  9 002101   000450 236000 0                  LDQ     TRAPFPT+196
         9 002102   011367 552070 1                  STBQ    DFMSG+11,'70'O

     1131     8183    2      DFMSG.MONID = RV_BUFF.DMONID;

   8183  9 002103   000000 100400                    MLR     fill='000'O
         9 002104   000535 000004 1                  ADSC9   RV_BUFF+185              cn=0,n=4
         9 002105   011367 600004 1                  ADSC9   DFMSG+11                 cn=3,n=4

     1132     8184    2      CALL BINCHAR(DFMSG.DUMPC,RV_BUFF.IDCOUNT);

   8184  9 002106   000537 235000 1                  LDA     RV_BUFF+187
         9 002107   000044 773000                    LRL     36
         9 002110   200030 757100                    STAQ    @TEXT+3,,AUTO
         9 002111   000000 301500                    BTD
         9 002112   200030 000010                    NDSC9   @TEXT+3,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         9 002113   011370 630003 1                  NDSC9   DFMSG+12                 cn=3,s=nosgn,sf=0,n=3
         9 002114   002116 710000 9                  TRA     s:8187

     1133     8185    2   PRINT_DFMSG: ENTRY;

   8185  9 002115   200022 741300       PRINT_DFMSG  STX1  ! TYPE+2,,AUTO

     1134     8186                                           /* Save for later call to REPORT_ERRMSG    */
     1135     8187    2      PERRC=B$ALT.ERR & '777777777770'O;

   8187  9 002116   000000 470400 xsym               LDP0    B$TCB$
         9 002117   000000 471500                    LDP1    0,,PR0
         9 002120   100102 236100                    LDQ     66,,PR1
         9 002121   000451 376000 0                  ANQ     TRAPFPT+197
         9 002122   011462 756000 1                  STQ     PERRC
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:137  

     1136     8188    2      FPT_ERRMSG.V.DCB# = B$ALT.DCB#;

   8188  9 002123   000000 471500                    LDP1    0,,PR0
         9 002124   100101 720100                    LXL0    65,,PR1
         9 002125   011452 740000 1                  STX0    FPT_ERRMSG+22

     1137     8189                                                /* Dont print trailing blanks         */
     1138     8190    2      T$=ADDR(DFMSG);

   8190  9 002126   000045 236000 10                 LDQ     37
         9 002127   200003 756100                    STQ     T$,,AUTO

     1139     8191    2      MSGINDX=DFMSG_SIZE-1;

   8191  9 002130   000065 235007                    LDA     53,DL
         9 002131   011372 755000 1                  STA     MSGINDX

     1140     8192    3      DO WHILE (T$->B$MSG(MSGINDX) = ' ');

   8192  9 002132   200003 471500                    LDP1    T$,,AUTO
         9 002133   040000 106505                    CMPC    fill='040'O
         9 002134   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1
         9 002135   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002136   002147 601000 9                  TNZ     s:8195

     1141     8193    3           MSGINDX = MSGINDX-1;

   8193  9 002137   000001 336007                    LCQ     1,DL
         9 002140   011372 056000 1                  ASQ     MSGINDX

     1142     8194    3           END;

   8194  9 002141   200003 470500                    LDP0    T$,,AUTO
         9 002142   011372 235000 1                  LDA     MSGINDX
         9 002143   040000 106505                    CMPC    fill='040'O
         9 002144   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:138  
         9 002145   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002146   002137 600000 9                  TZE     s:8193

     1143     8195    2      REPORT_DFMSG.BUFW_.BOUND = MSGINDX;

   8195  9 002147   011372 236000 1                  LDQ     MSGINDX
         9 002150   000020 736000                    QLS     16
         9 002151   011416 676000 1                  ERQ     REPORT_DFMSG+2
         9 002152   000034 376000 xsym               ANQ     B_VECTNIL+28
         9 002153   011416 656000 1                  ERSQ    REPORT_DFMSG+2

     1144     8196    2      CALL M$TEMPWROC(REPORT_DFMSG) ALTRET(TEMP_ALT2);

   8196  9 002154   011414 630400 1                  EPPR0   REPORT_DFMSG
         9 002155   510000 713400                    CLIMB   alt,+36864
         9 002156   401000 401760                    pmme    nvectors=3
         9 002157   002160 702000 9                  TSX2    TEMP_ALT2

   8195  9 002160                       TEMP_ALT2    null
     1145     8197    2   TEMP_ALT2: ;
     1146     8198    2   END REPORT_DFERR;

   8198  9 002160   200022 221300                    LDX1  ! TYPE+2,,AUTO
         9 002161   000001 702211                    TSX2  ! 1,X1
     1147     8199    1   END IGR$RECOVER;
     1148     8200        %EOD;

PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:139  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   I_SUBS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   I$DISK.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IGR$RECOVER.
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:140  

 **** Variables and constants ****

  ****  Section 000 RoData IGR$RECOVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/c CHAR(80)    r     1 ECHOCMD                  143-0-0/w PTR         r     1 F$CFU$
   143-0-0/b STRC        r     1 F$CFU$_                    0-0-0/w SBIN        r     1 IGR_RCVR_ASL
   103-0-0/c CHAR(80)    r     1 SAY_ALIBR                 33-0-0/c CHAR(80)    r     1 SAY_KILLRUM
     2-0-0/d STRC(144)   r     1 SEE_CFUS
   132-0-0/c STRC(45)    r     1 SKIP_TAB(0:6)
     6-0-0/c STRC(27)    r     1 STARI                    130-0-0/d CHAR(8)     r     1 SYSTAC
   144-0-0/d STRC(360)   r     1 TRAPFPT

  ****  Section 001  Data  IGR$RECOVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

 10412-0-0/w PTR         r     1 AJIT$                  10414-0-0/d STRC(360)   r     1 ALIB_ASL
  4244-0-0/w UBIN        r     1 APAGE(0:1023)          11506-0-0/d REMB        r     1 AR_EXIT_UNW
 10430-0-0/d STRC(288)   r     1 ASL
  6244-0-0/w UBIN        r     1 ASL_FPARAM(0:1023)
 10470-0-0/w STRC(90)    r     1 BOOTIME_NAME             150-0-0/d STRC(1080)  r     1 CLS_DP
   206-0-0/d STRC(1080)  r     1 CLS_EI                 10742-0-0/d STRC(1080)  r     1 CLS_PF
 11106-0-0/d STRC(1080)  r     1 CLS_RUM                10452-0-0/w SBIN        r     1 DDIR_GRAN
 10526-0-0/d STRC(2088)  r     1 DEL_RUM                11354-0-0/c STRC(486)   r     1 DFMSG
 10453-0-0/w SBIN        r     1 DINDEX                 10426-0-0/d STRC(72)    r     1 DLIB_ASL
 10501-0-0/w STRC(720)   r     1 DOCMD                  10244-0-0/w SBIN        r     1 DP_GRAN
 10262-0-0/d STRC(1080)  r     1 DSMNT_SET              11303-0-0/c STRC(324)   r     1 ERRM1
 11314-0-0/c STRC(1134)  r     1 ERRM2                  10440-0-0/w PTR         r     1 FPARAM$
 10441-0-0/w SBIN        r     1 FPARAM_CODE            11520-0-0/d STRC(144)   r     1 FPT_CLRSTK
 11424-0-0/d STRC(936)   r     1 FPT_ERRMSG             10256-0-0/d STRC(144)   r     1 FPT_RELSTARF
 11202-0-0/d STRC(432)   r     1 FPT_TIME               11510-0-0/d STRC(216)   r     1 FPT_XCON
     0-0-0/w SBIN        r     1 IGR_DEBUG              11302-0-0/w SBIN        r     1 IGR_MSG1
 10454-0-0/w SBIN        r     1 JITRAP                 10247-0-0/w STRC(216)   r     1 LPARAM
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:141  
 11372-0-0/w SBIN        r     1 MSGINDX                10320-0-0/d STRC(2088)  r     1 OPN_ASL
     2-0-0/d STRC(2088)  r     1 OPN_DP                 10620-0-0/d STRC(2088)  r     1 OPN_PF
 11000-0-0/d STRC(2088)  r     1 OPN_RUM                10500-0-0/w UBIN        r     1 PATCH_TYPE
 11462-0-0/b STRC        r     1 PERRC
 10473-0-0/w UBIN        r     1 PFCONTENTS(0:4)
 10460-0-0/d STRC(72)    r     1 PF_NAME                10466-0-0/w STRC(72)    r     1 PLOVER_NAME
 11516-0-0/d BIT (72)    r     1 PREVXCON               11216-0-0/w STRC(1800)  r     1 P_HEADER
 10462-0-0/w STRC(63)    r     1 P_NAME                   116-0-0/d STRC(504)   r     1 RAPAGE
 10442-0-0/w STRC        r     1 RCVR2D(0:3)            10447-0-0/w SBIN        r     1 RCVR2_HIGHDA
 10446-0-0/w SBIN        r     1 RCVR2_LOWDA            10451-0-0/w SBIN        r     1 RDUMP_HIGHDA
 10450-0-0/w SBIN        r     1 RDUMP_LOWDA              100-0-0/d STRC(504)   r     1 RD_DP
 11144-0-0/d STRC(1080)  r     1 REL_RUM                11414-0-0/d STRC(288)   r     1 REPORT_DFMSG
 11374-0-0/d STRC(288)   r     1 REPORT_ERRM1           11404-0-0/d STRC(288)   r     1 REPORT_ERRM2
 11464-0-0/d STRC(360)   r     1 RESTORET               10464-0-0/w STRC(45)    r     1 RF_NAME
 10456-0-0/w UBIN        r     1 RUMF_SIZE                244-0-0/d STRC(36864) r     1 RV_BUFF
  2244-0-0/d STRC(36864) r     1 RV_USRDIR              11300-0-0/c CHAR(5)     r     1 SKIP_P4
 11300-0-0/c CHAR        r     1 SKIP_PATCH(0:4)
 10245-0-0/w SBIN        r     1 SYSDIR_GRAN               74-0-0/d STRC(90)    r     1 SYSPACK
 11504-0-0/d REMB        r     1 TRAP_UNWIND            11476-0-0/d STRC(216)   r     1 VLP_PTC
 11456-0-0/d STRC(144)   r     1 VLR_ERRMSG             10712-0-0/d STRC(432)   r     1 WTPF
 11072-0-0/d STRC(432)   r     1 WTRUM                    134-0-0/d STRC(432)   r     1 WT_DP
 10726-0-0/d STRC(432)   r     1 WT_PHEAD

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    24-0-0/w PTR         r     1 @HIGH                     23-0-0/w PTR         r     1 @LOW
    25-0-0/w PTR         r     1 @TEXT                     12-0-0/w UBIN        r     1 APATCHSZ
    11-0-0/w UBIN        r     1 DPATCHSZ                   6-0-0/w SBIN        r     1 GOT_DIR
    *0-0-0/w UBIN        r     1 HIGH                       7-0-0/w UBIN        r     1 I
     5-0-0/w SBIN        r     1 JITSPG                     4-0-0/w SBIN        r     1 JITSZ
    *0-0-0/w UBIN        r     1 LOW                       16-0-0/d VECT        r     1 NAME_VECTOR
    13-0-0/w PTR         r     1 PATCH$                    14-0-0/w PTR         r     1 PATCHSTOP$
     3-0-0/w PTR         r     1 T$                        *0-0-0/c CHAR(4)     r     1 TEXT
    20-0-0/w UBIN        r     1 TYPE
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:142  

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w UBIN        r     1 IGG_RECONUTS               0-0-0/w UBIN        r     1 IG_BOOTFLAG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 B$5CHAR(0:4)
     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/c ACHR        r     1 B$APATCH
     0-0-0/c STRC(288)   r     1 B$ASL                      0-0-0/w STRC(2448)  r     1 B$EXCFR
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/c CHAR        r     1 B$MSG(0:127)
     0-0-0/c CHAR(80)    r     1 B$PATCH80                  0-0-0/w STRC(1836)  r     1 B$SYSPATCH
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFUX                    0-0-0/w STRC(288)   r     1 FM$SET(0:0)
     0-0-0/w STRC(36864) r     1 FM$VID                     0-0-0/w STRC(8640)  r     1 I$DISKDIR
     0-0-0N  NULL        r     1 M$ASL                      0-0-0N  NULL        r     1 M$DP
     0-0-0N  NULL        r     1 M$EI                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$PF                       0-0-0N  NULL        r     1 M$RUM
     0-0-0/d STRC(36864) r     1 RV$BUFF


   Procedure IGR$RECOVER requires 1138 words for executable code.
   Procedure IGR$RECOVER requires 28 words of local(AUTO) storage.
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:143  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:144  
          MINI XREF LISTING

AJIT$
      4369**DCL      7693<<ASSIGN   7697>>IF       7699>>ASSIGN   7700>>IF       7706>>ASSIGN   7709>>IF
      7709>>IF       7714>>ASSIGN   7715>>ASSIGN   7721>>ASSIGN   7722>>ASSIGN   7729>>IF       7733>>ASSIGN
      7737>>ASSIGN   7739<<ASSIGN   7739>>ASSIGN   7798>>ASSIGN   7802>>ASSIGN   7806>>ASSIGN
AJIT_TRAP
      7802**LABEL    7702--REMEMBR
ALIB_ASL
      4382**DCL      7719<>CALL
ALIB_ASL.V
      4383**DCL      4383--DCLINIT
ANY_ERR
      7991**LABEL    7887--CALLALT  7895--CALLALT  7902--CALLALT
APAGE
       916**DCL       728--DCLINIT   729--DCLINIT  7693--ASSIGN   7874--ASSIGN
APATCHSZ
      4431**DCL      5137--IMP-SIZ  7852<<ASSIGN   7879>>ASSIGN   7881>>IF       7882>>IF       7884<<ASSIGN
      7891>>IF       7898>>IF       7936>>ASSIGN
AR_EXIT
      7809**LABEL    7810--CALLALT
AR_EXIT_UNW
      7454**DCL      7703<<REMEMBR  7713<<REMEMBR  7732<<REMEMBR  7812>>UNWIND
ASL
      4402**DCL      4382--DCLINIT  4399--DCLINIT  7718<<ASSIGN
ASL_ALT
      7722**LABEL    7713--REMEMBR
ASL_FPARAM
       918**DCL      4324--DCLINIT  4410--DCLINIT
ASL_TRAP
      7785**LABEL    7712--REMEMBR
AZA$LOGOFF
      6016**DCL-ENT  7704--CALL
B$5CHAR
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:145  
      5121**DCL      7918>>ASSIGN
B$ALT.CODE
      7187**DCL      7187--REDEF    7188--REDEF    7188--REDEF
B$ALT.DCB#
      7188**DCL      8138>>ASSIGN   8188>>ASSIGN
B$ALT.ERR
      7188**DCL      8137>>ASSIGN   8187>>ASSIGN
B$ALT.ERR.ERR#
      7189**DCL      7189--REDEF
B$ALT.EVID
      7188**DCL      7188--REDEF    7188--REDEF
B$APATCH
      5137**DCL      7879--ASSIGN   7881>>IF       7882>>IF       7891>>IF       7898>>IF
B$ASL
      4406**DCL      7718>>ASSIGN
B$EXCFR
      7194**DCL      7809>>ASSIGN
B$EXCFR.ASL
      7194**DCL      7194--REDEF
B$EXCFR.ERR
      7208**DCL      8143>>ASSIGN
B$EXCFR.ERR.ERR#
      7208**DCL      7208--REDEF
B$EXCFR.EVID
      7207**DCL      7207--REDEF    7208--REDEF
B$EXCFR.IR
      7195**DCL      7195--REDEF
B$EXCFR.PREVSZ
      7194**DCL      7194--REDEF
B$EXCFR.SUBC
      7206**DCL      7206--REDEF    7207--REDEF    7207--REDEF
B$JIT
      5830**DCL      7683--ASSIGN   7733--ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      5929**DCL      5929--REDEF
B$JIT.ERR.MID
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:146  
      5836**DCL      5836--REDEF
B$JIT.HPSN
      5996**DCL      7715<<ASSIGN   7715>>ASSIGN   7727<<ASSIGN
B$JIT.STAR.DA
      5996**DCL      7709>>IF       7714<<ASSIGN   7714>>ASSIGN   7721<<ASSIGN   7721>>ASSIGN   7726<<ASSIGN
B$JIT.USER
      5835**DCL      7697>>IF       7700>>IF       7706>>ASSIGN   7709>>IF       7722>>ASSIGN   7729>>IF
      7737>>ASSIGN   7798>>ASSIGN   7802>>ASSIGN   7806>>ASSIGN
B$JIT$
      6013**DCL      5830--IMP-PTR  7714>>ASSIGN   7715>>ASSIGN   7721>>ASSIGN   7726>>ASSIGN   7727>>ASSIGN
B$MSG
      7250**DCL      8158>>DOWHILE  8171>>DOWHILE  8192>>DOWHILE
B$PATCH80
      5135**DCL      7932--ASSIGN
B$SYSPATCH.STOP
      5140**DCL      7875>>ASSIGN
B$TCB.ALT$
      7183**DCL      8137>>ASSIGN   8138>>ASSIGN   8187>>ASSIGN   8188>>ASSIGN
B$TCB.STK$
      7183**DCL      7809>>ASSIGN   8143>>ASSIGN
B$TCB$
      7211**DCL      7809>>ASSIGN   8137>>ASSIGN   8138>>ASSIGN   8143>>ASSIGN   8187>>ASSIGN   8188>>ASSIGN
BOOTIME_NAME
      4459**DCL      7841--ASSIGN   7900--ASSIGN
BUILD_PATCH
      7821**LABEL    7542--GOTO
CHECK_IT
      7918**LABEL    7919--GOTO
CHKDA
      8064**PROC     7611--CALL     7868--CALL
CLOSE_EI
      7772**LABEL    7770--GOTO
CLS_DP
       809**DCL      7546<>CALL
CLS_DP.SN_
       809**DCL       809--REDEF
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:147  
CLS_DP.UTL_
       810**DCL       810--REDEF
CLS_DP.V
       814**DCL       809--DCLINIT
CLS_DP.V.EXPIRE#
       824**DCL       824--REDEF
CLS_DP.V.TYPE#
       822**DCL       822--REDEF
CLS_DP.V.XTNSIZE#
       819**DCL       819--REDEF     821--REDEF
CLS_DP_ERR
      7584**LABEL    7546--CALLALT
CLS_EI
       854**DCL      7776<>CALL
CLS_EI.SN_
       854**DCL       854--REDEF
CLS_EI.UTL_
       855**DCL       855--REDEF
CLS_EI.V
       859**DCL       854--DCLINIT
CLS_EI.V.EXPIRE#
       869**DCL       869--REDEF
CLS_EI.V.TYPE#
       867**DCL       867--REDEF
CLS_EI.V.XTNSIZE#
       864**DCL       864--REDEF     866--REDEF
CLS_PF
      4822**DCL      7950<>CALL
CLS_PF.SN_
      4822**DCL      4822--REDEF
CLS_PF.UTL_
      4823**DCL      4823--REDEF
CLS_PF.V
      4827**DCL      4822--DCLINIT
CLS_PF.V.EXPIRE#
      4837**DCL      4837--REDEF
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:148  
CLS_PF.V.TYPE#
      4835**DCL      4835--REDEF
CLS_PF.V.XTNSIZE#
      4832**DCL      4832--REDEF    4834--REDEF
CLS_RUM
      5019**DCL      8023<>CALL     8036<>CALL     8046<>CALL
CLS_RUM.SN_
      5019**DCL      5019--REDEF
CLS_RUM.UTL_
      5020**DCL      5020--REDEF
CLS_RUM.V
      5024**DCL      5019--DCLINIT
CLS_RUM.V.EXPIRE#
      5034**DCL      5034--REDEF
CLS_RUM.V.TYPE#
      5032**DCL      5032--REDEF
CLS_RUM.V.XTNSIZE#
      5029**DCL      5029--REDEF    5031--REDEF
CPF_ERR
      7973**LABEL    7950--CALLALT
CRUM_ERR IN PROCEDURE FINISH_RUM
      8053**LABEL    8023--CALLALT  8024--CALLALT  8036--CALLALT  8038--CALLALT  8046--CALLALT  8048--CALLALT
DDIR_GRAN
      4422**DCL      7623<<ASSIGN   7625>>IF       7633>>ASSIGN   7638>>ASSIGN   7764>>ASSIGN
DEL_BOOTIME
      7838**LABEL    7839--CALLALT
DEL_PLOVER
      7835**LABEL    7836--CALLALT
DEL_RUM
      4562**DCL      7833<>CALL     7836<>CALL     7839<>CALL     7842<>CALL
DEL_RUM.ACSVEH_
      4564**DCL      4565--REDEF
DEL_RUM.ALTKEYS_
      4570**DCL      4571--REDEF    4571--REDEF
DEL_RUM.HDR_
      4569**DCL      4570--REDEF
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:149  
DEL_RUM.NAME_
      4563**DCL      7832<<ASSIGN   7835<<ASSIGN   7838<<ASSIGN   7841<<ASSIGN
DEL_RUM.TAB_
      4568**DCL      4569--REDEF
DEL_RUM.UHL_
      4562**DCL      4563--REDEF    4563--REDEF
DEL_RUM.V
      4571**DCL      4562--DCLINIT
DEL_RUM.V.FSN#
      4602**DCL      4602--REDEF    4602--REDEF
DEL_RUM.WSN_
      4568**DCL      4568--REDEF
DEL_RUMF
      7832**LABEL    7833--CALLALT
DFMSG
      7232**DCL      7298--DCLINIT  7299--DCLINIT  8190--ASSIGN
DFMSG.DUMPC
      7244**DCL      7621<<ASSIGN   8184<<CALLBLT
DFMSG.M
      7238**DCL      7627<<ASSIGN   7644<<ASSIGN   7651<<ASSIGN   7657<<ASSIGN   7669<<ASSIGN   7679<<ASSIGN
      7755<<ASSIGN   7772<<ASSIGN   7780<<ASSIGN   7785<<ASSIGN   7815<<ASSIGN
DFMSG.MONID
      7241**DCL      8183<<ASSIGN
DFMSG.MONID.BOOT
      7243**DCL      7620<<ASSIGN
DFMSG.MONID.VER
      7242**DCL      7619<<ASSIGN
DFMSG.SDF
      7240**DCL      7618<<ASSIGN   8182<<ASSIGN
DFMSG.SLOTN
      7236**DCL      7622<<CALLBLT
DINDEX
      4424**DCL      7615<<ASSIGN   7616>>DOWHILE  7622>>CALLBLT  7623>>ASSIGN   7791<<ASSIGN   7791>>ASSIGN
DIR_OK
      7755**LABEL    7753--GOTO
DLIB_ASL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:150  
      4399**DCL      7724<>CALL
DOCMD
      4475**DCL      8008--ASSIGN
DOCMD.MONID
      4477**DCL      7848<<ASSIGN
DPATCHSZ
      4430**DCL      7850<<ASSIGN   7865>>IF       7868>>CALL     7870>>DOWHILE  7872<<ASSIGN   7872>>ASSIGN
DP_GRAN
       920**DCL       681--DCLINIT   682--DCLINIT   726--DCLINIT   727--DCLINIT   769--DCLINIT  7530<<ASSIGN
      7531>>ASSIGN   7633<<ASSIGN   7665<<ASSIGN   7666>>IF       7666>>IF       7685<<ASSIGN   7743<<ASSIGN
      7743>>ASSIGN   7744>>IF       7750<<ASSIGN   7764<<ASSIGN   7851<<ASSIGN   7865>>IF       7868<>CALL
      7868>>CALL     7873<<ASSIGN   7873>>ASSIGN
DSMNT_SET
      4228**DCL      7556<>CALL
DSMNT_SET.SN_
      4228**DCL      4228--REDEF
DSMNT_SET.UTL_
      4229**DCL      4229--REDEF
DSMNT_SET.V
      4233**DCL      4228--DCLINIT
DSMNT_SET.V.EXPIRE#
      4243**DCL      4243--REDEF
DSMNT_SET.V.TYPE#
      4241**DCL      4241--REDEF
DSMNT_SET.V.XTNSIZE#
      4238**DCL      4238--REDEF    4240--REDEF
ECHOCMD
      4483**DCL      8010--ASSIGN
EI_ALTR
      7772**LABEL    7776--CALLALT
ERRM1
      7218**DCL      7264--DCLINIT  7265--DCLINIT  8156--ASSIGN
ERRM1.M
      7221**DCL      7576<<ASSIGN   7582<<ASSIGN   7589<<ASSIGN   7593<<ASSIGN   7600<<ASSIGN   7821<<ASSIGN
      7957<<ASSIGN   7962<<ASSIGN   7968<<ASSIGN   7973<<ASSIGN   7979<<ASSIGN   7985<<ASSIGN   7991<<ASSIGN
      8000<<ASSIGN   8053<<ASSIGN   8058<<ASSIGN
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:151  
ERRM2
      7225**DCL      7281--DCLINIT  7282--DCLINIT  8169--ASSIGN
ERRM2.M
      7228**DCL      7320--DCLINIT  7534<<ASSIGN   7924<<CALLBLT  8128<<CALLBLT
ERR_DP
      7593**LABEL    7601--GOTO
ERR_RBUF
      7767**LABEL    7768--CALLALT
ERR_USRDIR
      7750**LABEL    7751--CALLALT
EXIT_DP
      7541**LABEL    7536--GOTO     7579--GOTO     7597--GOTO     7611--CALLALT  7793--GOTO     7951--GOTO
      7970--GOTO     7981--GOTO
EXIT_IGR
      7541**LABEL    7586--GOTO
F$CFU$
      5785**DCL      5773--IMP-PTR  5778--IMP-PTR  7551>>ASSIGN   7553>>IF       7554>>ASSIGN   7559>>ASSIGN
F$CFU$_
      5782**DCL      5785--REDEF
F$DCB.ACTPOS IN PROCEDURE CHKDA
      8098**DCL      8098--REDEF
F$DCB.ARS# IN PROCEDURE CHKDA
      8072**DCL      8072--REDEF
F$DCB.ATTR IN PROCEDURE CHKDA
      8091**DCL      8092--REDEF
F$DCB.BORROW IN PROCEDURE CHKDA
      8106**DCL      8106--REDEF    8106--REDEF    8106--REDEF
F$DCB.DCBNAME.L IN PROCEDURE CHKDA
      8120**DCL      8120--IMP-SIZ
F$DCB.EOMCHAR# IN PROCEDURE CHKDA
      8076**DCL      8076--REDEF
F$DCB.FLDID IN PROCEDURE CHKDA
      8101**DCL      8101--REDEF
F$DCB.FORM$ IN PROCEDURE CHKDA
      8095**DCL      8095--REDEF
F$DCB.FSECT IN PROCEDURE CHKDA
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:152  
      8111**DCL      8111--REDEF
F$DCB.FSN# IN PROCEDURE CHKDA
      8088**DCL      8088--REDEF    8088--REDEF    8089--REDEF
F$DCB.HEADER$ IN PROCEDURE CHKDA
      8094**DCL      8094--REDEF
F$DCB.IXTNSIZE# IN PROCEDURE CHKDA
      8092**DCL      8092--REDEF    8126>>IF
F$DCB.LASTSTA$ IN PROCEDURE CHKDA
      8081**DCL      8081--REDEF
F$DCB.LVL IN PROCEDURE CHKDA
      8107**DCL      8107--REDEF
F$DCB.NAME#.C IN PROCEDURE CHKDA
      8082**DCL      8082--REDEF
F$DCB.NOEOF IN PROCEDURE CHKDA
      8104**DCL      8104--REDEF
F$DCB.NRECS# IN PROCEDURE CHKDA
      8093**DCL      8093--REDEF
F$DCB.NRECX IN PROCEDURE CHKDA
      8112**DCL      8112--REDEF
F$DCB.OHDR IN PROCEDURE CHKDA
      8104**DCL      8104--REDEF
F$DCB.ORG# IN PROCEDURE CHKDA
      8087**DCL      8087--REDEF
F$DCB.PRECNO IN PROCEDURE CHKDA
      8110**DCL      8110--REDEF
F$DCB.RCSZ IN PROCEDURE CHKDA
      8116**DCL      8116--REDEF
F$DCB.RES# IN PROCEDURE CHKDA
      8083**DCL      8083--REDEF
F$DCB.SETX IN PROCEDURE CHKDA
      8095**DCL      8095--REDEF
F$DCB.TAB$ IN PROCEDURE CHKDA
      8095**DCL      8095--REDEF
F$DCB.TDA IN PROCEDURE CHKDA
      8109**DCL      8110--REDEF
F$DCB.WSN# IN PROCEDURE CHKDA
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:153  
      8083**DCL      8083--REDEF
FINISH_RUM
      8019**PROC     7949--CALL     8001--CALL
FM$CFUX.SETH
      5779**DCL      7551>>ASSIGN
FM$SET.PSN
      5773**DCL      7554>>ASSIGN
FM$SET.SETL
      5775**DCL      7559>>ASSIGN
FM$SET.SYSID
      5774**DCL      7553>>IF
FM$SET.USERLIST
      5774**DCL      5774--REDEF
FM$VID.DTT
      5789**DCL      5789--REDEF
FM$VID.SYSDIRDA
      5787**DCL      7530>>ASSIGN
FM$VID.SYSSIZE
      5787**DCL      7532>>IF
FPARAM$
      4410**DCL      7717<>CALL     7718>>ASSIGN
FPARAM_CODE
      4411**DCL      7717<>CALL
FPT_CLRSTK
      7484**DCL      7810<>CALL     8145<>CALL
FPT_CLRSTK.V
      7484**DCL      7484--DCLINIT
FPT_ERRMSG
      7319**DCL      8150<>CALL
FPT_ERRMSG.V
      7323**DCL      7319--DCLINIT
FPT_ERRMSG.V.DCB#
      7323**DCL      8138<<ASSIGN   8144<<ASSIGN   8188<<ASSIGN
FPT_RELSTARF
      4179**DCL      7735<>CALL
FPT_RELSTARF.JIT_
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:154  
      4179**DCL      7733<<ASSIGN
FPT_TIME
      5098**DCL      7855<>CALL
FPT_TIME.V
      5102**DCL      5098--DCLINIT
FPT_XCON
      7468**DCL      7521<>CALL     7567<>CALL
FPT_XCON.PXCON_
      7468**DCL      7566<<ASSIGN
FPT_XCON.V
      7469**DCL      7468--DCLINIT
FPT_XCON.V_
      7468**DCL      7565<<ASSIGN
GET_ERRM IN PROCEDURE REPORT_ERR
      8144**LABEL    8139--GOTO     8145--CALLALT
GET_NEXT_DUMP
      7780**LABEL    7630--GOTO     7646--GOTO     7671--GOTO     7818--GOTO
GIVE_ALTRET IN PROCEDURE NEXT_FILE
      8010**LABEL    8004--CALLALT  8006--CALLALT  8007--CALLALT  8009--CALLALT  8011--CALLALT
GOT_DIR
       526**DCL      7673<<ASSIGN   7676<<ASSIGN   7748>>IF
HIGH IN PROCEDURE CHKDA
      8123**DCL      8064--PROC     8126>>IF
I
       527**DCL      7551<<ASSIGN   7552>>DOWHILE  7553>>IF       7554>>ASSIGN   7559<<ASSIGN   7559>>ASSIGN
      7696<<DOINDEX  7917<<DOINDEX  7918>>ASSIGN   7918>>ASSIGN   7919>>IF       7922<<DOINDEX  7923>>IF
      7924>>CALLBLT
I$DISKDIR.DUMP.DA
      5346**DCL      7608>>ASSIGN
I$DISKDIR.DUMP.SIZE
      5347**DCL      7609>>ASSIGN
I$DISKDIR.FW.NAME
      5395**DCL      5396--REDEF
I$DISKDIR.MONID.M
      5355**DCL      5358--REDEF    7847>>ASSIGN   7848>>ASSIGN
I$DISKDIR.MONID.M_CHAR4
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:155  
      5358**DCL      7854>>ASSIGN
I$DISKDIR.PATCH.DA
      5341**DCL      7851>>ASSIGN
I$DISKDIR.PATCH.SIZE
      5342**DCL      7850>>ASSIGN
I$DISKDIR.RCVR2
      5349**DCL      7606>>ASSIGN
IGA$RECOVER_ASL
      6017**DCL-ENT  7720--CALL
IGG_RECONUTS
      6012**DCL      7734>>IF
IGR$TRAP
      7452**DCL-ENT  7397--DCLINIT  7397--DCLINIT  7398--DCLINIT  7398--DCLINIT  7469--DCLINIT
IGR_DEBUG
        58**DCL      7628>>IF       7787>>IF       8153>>IF
IGR_MSG1
      7215**DCL      7577<<ASSIGN   7584<<ASSIGN   7595<<ASSIGN   8153>>IF       8164<<ASSIGN
IGR_RCVR_ASL
        57**DCL      7708>>IF
IG_BOOTFLAG
      6011**DCL      7491>>IF       7494>>IF       7497>>IF       7502>>IF       7504>>IF       7504>>IF
      7508>>IF       7513>>IF       7541>>IF       7613<<ASSIGN
JITRAP
      4425**DCL      7762>>IF       7778>>IF       7782<<ASSIGN   7808<<ASSIGN   7808>>ASSIGN
JITSPG
       525**DCL      7684<<ASSIGN   7696>>DOINDEX
JITSZ
       524**DCL      7683<<ASSIGN   7684>>ASSIGN   7739>>ASSIGN
JITS_DONE
      7744**LABEL    7697--GOTO
JIT_DONE
      7702**LABEL    7703--REMEMBR
LOW IN PROCEDURE CHKDA
      8122**DCL      8064--PROC     8126>>IF
LPARAM
      4130**DCL      7704<>CALL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:156  
LPARAM.CODE
      4131**DCL      7687<<ASSIGN
LPARAM.DCB1
      4142**DCL      7688<<ASSIGN
LPARAM.DCB_LL
      4146**DCL      7689<<ASSIGN
LPARAM.ERR
      4136**DCL      7698<<ASSIGN
LPARAM.JIT$
      4156**DCL      7699<<ASSIGN
LPARAM.UTS
      4151**DCL      7690<<ASSIGN
M$ALIB
        83**DCL-ENT  7719--CALL
M$CLOSE
        70**DCL-ENT  7546--CALL     7556--CALL     7776--CALL     7950--CALL     8023--CALL     8024--CALL
      8036--CALL     8038--CALL     8046--CALL     8048--CALL
M$CLRSTK
       128**DCL-ENT  7810--CALL     8145--CALL
M$DLIB
        83**DCL-ENT  7724--CALL
M$DP
      6021**DCL      8126--IF
M$EI
      6022**DCL      7688>>ASSIGN
M$ERRMSG
       133**DCL-ENT  8150--CALL
M$LO
      6023**DCL      7689>>ASSIGN
M$OPEN
        70**DCL-ENT  7526--CALL     7555--CALL     7716--CALL     7833--CALL     7836--CALL     7839--CALL
      7842--CALL     7857--CALL     7862--CALL     8004--CALL
M$READ
        71**DCL-ENT  7527--CALL     7539--CALL     7634--CALL     7674--CALL     7694--CALL     7871--CALL
M$RELSTARF
        79**DCL-ENT  7735--CALL
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:157  
M$SAD
       109**DCL-ENT  7550--CALL
M$TEMPWROC
       114**DCL-ENT  8162--CALL     8175--CALL     8196--CALL
M$TIME
       137**DCL-ENT  7855--CALL
M$TRAP
       124**DCL-ENT  7518--CALL     7569--CALL
M$WRITE
        71**DCL-ENT  7751--CALL     7768--CALL     7858--CALL     7909--CALL     7933--CALL     8006--CALL
      8007--CALL     8009--CALL     8011--CALL     8033--CALL     8035--CALL
M$XCON
       125**DCL-ENT  7521--CALL     7567--CALL
MORE_JITS
      7690**LABEL    7745--GOTO
MSGINDX
      7248**DCL      8157<<ASSIGN   8158>>DOWHILE  8159<<ASSIGN   8159>>ASSIGN   8161>>ASSIGN   8170<<ASSIGN
      8171>>DOWHILE  8172<<ASSIGN   8172>>ASSIGN   8174>>ASSIGN   8191<<ASSIGN   8192>>DOWHILE  8193<<ASSIGN
      8193>>ASSIGN   8195>>ASSIGN
NAME_VECTOR
      4437**DCL      7885<<ASSIGN   7893<<ASSIGN   7900<<ASSIGN   8003>>ASSIGN
NEXT
      7937**LABEL    7889--GOTO
NEXT_FILE
      7999**PROC     7887--CALL     7895--CALL     7902--CALL
NO_ASL
      7722**LABEL    7708--GOTO     7716--CALLALT  7717--CALLALT  7719--CALLALT  7724--CALLALT
NO_DSMNT
      7557**LABEL    7550--CALLALT
NO_DSMNT_1
      7554**LABEL    7555--CALLALT  7556--CALLALT
ODP_ERR
      7577**LABEL    7526--CALLALT
ODP_ERR1
      7582**LABEL    7590--GOTO
OPEN_DP
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:158  
      7513**LABEL    7521--CALLALT
OPEN_PATCH
      7854**LABEL    7855--CALLALT
OPF_ERR
      7962**LABEL    7857--CALLALT
OPN_ASL
      4319**DCL      7716<>CALL
OPN_ASL.ACSVEH_
      4321**DCL      4322--REDEF
OPN_ASL.ALTKEYS_
      4327**DCL      4328--REDEF    4328--REDEF
OPN_ASL.HDR_
      4326**DCL      4327--REDEF
OPN_ASL.TAB_
      4325**DCL      4326--REDEF
OPN_ASL.UHL_
      4319**DCL      4320--REDEF    4320--REDEF
OPN_ASL.V
      4328**DCL      4319--DCLINIT
OPN_ASL.V.FSN#
      4359**DCL      4359--REDEF    4359--REDEF
OPN_ASL.WSN_
      4325**DCL      4325--REDEF
OPN_DP
       601**DCL      7526<>CALL     7555<>CALL
OPN_DP.ACSVEH_
       603**DCL       604--REDEF
OPN_DP.ALTKEYS_
       609**DCL       610--REDEF     610--REDEF
OPN_DP.HDR_
       608**DCL       609--REDEF
OPN_DP.TAB_
       607**DCL       608--REDEF
OPN_DP.UHL_
       601**DCL       602--REDEF     602--REDEF
OPN_DP.V
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:159  
       610**DCL       601--DCLINIT
OPN_DP.V.FSN#
       641**DCL       641--REDEF     641--REDEF
OPN_DP.WSN_
       607**DCL       607--REDEF
OPN_PF
      4682**DCL      7857<>CALL
OPN_PF.ACSVEH_
      4684**DCL      4685--REDEF
OPN_PF.ALTKEYS_
      4690**DCL      4691--REDEF    4691--REDEF
OPN_PF.HDR_
      4689**DCL      4690--REDEF
OPN_PF.TAB_
      4688**DCL      4689--REDEF
OPN_PF.UHL_
      4682**DCL      4683--REDEF    4683--REDEF
OPN_PF.V
      4691**DCL      4682--DCLINIT
OPN_PF.V.FSN#
      4722**DCL      4722--REDEF    4722--REDEF
OPN_PF.WSN_
      4688**DCL      4688--REDEF
OPN_RUM
      4915**DCL      7862<>CALL     8004<>CALL
OPN_RUM.ACSVEH_
      4917**DCL      4918--REDEF
OPN_RUM.ALTKEYS_
      4923**DCL      4924--REDEF    4924--REDEF
OPN_RUM.HDR_
      4922**DCL      4923--REDEF
OPN_RUM.NAME_
      4916**DCL      7861<<ASSIGN   8003<<ASSIGN
OPN_RUM.TAB_
      4921**DCL      4922--REDEF
OPN_RUM.UHL_
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:160  
      4915**DCL      4916--REDEF    4916--REDEF
OPN_RUM.V
      4924**DCL      4915--DCLINIT
OPN_RUM.V.FSN#
      4955**DCL      4955--REDEF    4955--REDEF
OPN_RUM.WSN_
      4921**DCL      4921--REDEF
ORUM_ERR
      7979**LABEL    7862--CALLALT
PATCH$
      4433**DCL      7874<<ASSIGN   7875>>ASSIGN   7875>>ASSIGN   7876<<ASSIGN   7876>>ASSIGN   7878>>DOWHILE
      7879>>ASSIGN   7881>>IF       7882>>IF       7888<<ASSIGN   7888>>ASSIGN   7891>>IF       7898>>IF
      7918>>ASSIGN   7932>>ASSIGN   7936<<ASSIGN   7936>>ASSIGN
PATCHSTOP$
      4434**DCL      7875<<ASSIGN   7878>>DOWHILE
PATCH_ERR
      7938**LABEL    7959--GOTO     7964--GOTO     7975--GOTO     7987--GOTO     7994--GOTO
PATCH_EXIT
      7938**LABEL    7866--GOTO     7868--CALLALT  7881--GOTO
PATCH_TRAP
      7938**LABEL    7829--REMEMBR
PATCH_TYPE
      4469**DCL      7863<<ASSIGN   7906>>IF       7912>>IF       7912>>IF       8005<<ASSIGN   8020>>IF
      8028>>IF       8028>>IF       8042>>IF
PERRC
      7358**DCL      7319--DCLINIT  8137<<ASSIGN   8143<<ASSIGN   8187<<ASSIGN
PFCONTENTS
      4463**DCL      7906>>IF
PF_NAME
      4442**DCL      4683--DCLINIT
PF_NAME.L
      4442**DCL      7845<<ASSIGN
PF_NAME.MONID
      4442**DCL      7847<<ASSIGN
PF_NAME.N1
      4442**DCL      7846<<ASSIGN
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:161  
PLOVER_NAME
      4455**DCL      7838--ASSIGN   7893--ASSIGN
PREVXCON
      7472**DCL      7468--DCLINIT  7565--ASSIGN
PRINT_DFMSG IN PROCEDURE REPORT_DFERR
      8185**ENTRY    7629--CALL
P_HEADER
      5107**DCL      4782--DCLINIT  4783--DCLINIT
P_HEADER.DATE
      5112**DCL      5098--DCLINIT  5099--DCLINIT
P_HEADER.DAY
      5111**DCL      5101--DCLINIT
P_HEADER.FILES
      5115**DCL      7503<<ASSIGN   7505<<ASSIGN   7506<<ASSIGN
P_HEADER.MONID
      5109**DCL      7854<<ASSIGN
P_HEADER.RECON
      5116**DCL      7498<<ASSIGN   7509<<ASSIGN
P_HEADER.TIME
      5113**DCL      5100--DCLINIT  5101--DCLINIT
P_HEADER.TYP
      5108**DCL      7496<<ASSIGN
P_NAME
      4447**DCL      7832--ASSIGN   7861--ASSIGN
RAPAGE
       726**DCL      7694<>CALL     7871<>CALL
RAPAGE.STATION_
       729**DCL       730--REDEF
RAPAGE.V
       730**DCL       726--DCLINIT
RAPAGE.V.DVBYTE.REREAD#
       741**DCL       741--REDEF
RAPAGE.V.INDX#
       739**DCL       739--REDEF
RCVR2D
      4413**DCL      7606<<ASSIGN
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:162  
RCVR2D.DA
      4414**DCL      7612>>IF       7623>>ASSIGN
RCVR2_HIGHDA
      4417**DCL      7609<<ASSIGN   7611<>CALL     7641>>IF
RCVR2_LOWDA
      4416**DCL      7608<<ASSIGN   7609>>ASSIGN   7611<>CALL     7641>>IF
RCVR_AJITS
      7600**LABEL    7543--GOTO
RDUMP_HIGHDA
      4420**DCL      7639<<ASSIGN   7641>>IF       7666>>IF
RDUMP_LOWDA
      4419**DCL      7638<<ASSIGN   7639>>ASSIGN   7641>>IF       7666>>IF
RD_DP
       681**DCL      7527<>CALL     7539<>CALL     7634<>CALL     7674<>CALL
RD_DP.STATION_
       684**DCL       685--REDEF
RD_DP.V
       685**DCL       681--DCLINIT
RD_DP.V.DVBYTE.REREAD#
       696**DCL       696--REDEF
RD_DP.V.INDX#
       694**DCL       694--REDEF
RELS_ALT
      7734**LABEL    7732--REMEMBR
RELS_TRAP
      7798**LABEL    7731--REMEMBR  7735--CALLALT
REL_RUM
      5065**DCL      8024<>CALL     8038<>CALL     8048<>CALL
REL_RUM.SN_
      5065**DCL      5065--REDEF
REL_RUM.UTL_
      5066**DCL      5066--REDEF
REL_RUM.V
      5070**DCL      5065--DCLINIT
REL_RUM.V.EXPIRE#
      5080**DCL      5080--REDEF
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:163  
REL_RUM.V.TYPE#
      5078**DCL      5078--REDEF
REL_RUM.V.XTNSIZE#
      5075**DCL      5075--REDEF    5077--REDEF
REPORT_DFERR
      8181**PROC     7645--CALL     7670--CALL     7680--CALL     7756--CALL     7773--CALL     7781--CALL
      7787--CALL     7816--CALL
REPORT_DFMSG
      7298**DCL      8196<>CALL
REPORT_DFMSG.BUFW_.BOUND
      7298**DCL      8195<<ASSIGN
REPORT_DFMSG.V
      7301**DCL      7298--DCLINIT
REPORT_ERR
      8135**PROC     7585--CALL     7596--CALL     7822--CALL     7963--CALL     7969--CALL     7974--CALL
      7980--CALL     7986--CALL     7993--CALL     8054--CALL     8059--CALL
REPORT_ERR3 IN PROCEDURE REPORT_ERR
      8144**LABEL    8150--CALLALT
REPORT_ERRM1
      7264**DCL      8162<>CALL
REPORT_ERRM1.BUFW_.BOUND
      7264**DCL      8161<<ASSIGN
REPORT_ERRM1.V
      7267**DCL      7264--DCLINIT
REPORT_ERRM2
      7281**DCL      8175<>CALL
REPORT_ERRM2.BUFW_.BOUND
      7281**DCL      8174<<ASSIGN
REPORT_ERRM2.V
      7284**DCL      7281--DCLINIT
REPORT_ERRMSG IN PROCEDURE REPORT_ERR
      8147**ENTRY    7681--CALL     7757--CALL     7774--CALL     7817--CALL
REPORT_ERRM_2 IN PROCEDURE REPORT_ERR
      8167**ENTRY    7535--CALL     7925--CALL     8129--CALL
REPORT_EXIT IN PROCEDURE REPORT_ERR
      8174**LABEL    8175--CALLALT
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:164  
REPORT_STK_ERR IN PROCEDURE REPORT_ERR
      8141**ENTRY    7578--CALL     7958--CALL
RESTORET
      7422**DCL      7569<>CALL
RESTORET.V
      7422**DCL      7422--DCLINIT
RF_NAME
      4451**DCL      7835--ASSIGN   7885--ASSIGN
RPT_A2
      7806**LABEL    7799--GOTO     7803--GOTO
RUMF_SIZE
      4436**DCL      7860<<ASSIGN   7934<<ASSIGN   7934>>ASSIGN   8002<<ASSIGN   8022>>IF       8030>>IF
      8044>>IF
RV$BUFF
      5793**DCL      7636>>ASSIGN   7767<<ASSIGN
RV_BUFF
       876**DCL      7636<<ASSIGN   7767>>ASSIGN
RV_BUFF.AJITSU
       877**DCL      7655>>IF       7761<<ASSIGN
RV_BUFF.AJITTR
       877**DCL      7763<<ASSIGN
RV_BUFF.AJITTRAP
       908**DCL      7809<<ASSIGN
RV_BUFF.BUSY
       876**DCL      7649>>IF
RV_BUFF.DMONID
       891**DCL      8183>>ASSIGN
RV_BUFF.IDCOUNT
       892**DCL      8184>>CALLBLT
RV_BUFF.JITS.DA
       894**DCL      7685>>ASSIGN   7744>>IF
RV_BUFF.JITS.SZ
       894**DCL      7663>>IF       7666>>IF       7744>>IF
RV_BUFF.SIZE
       876**DCL      7639>>ASSIGN
RV_BUFF.USRDR.DA
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:165  
       893**DCL      7665>>ASSIGN   7750>>ASSIGN
RV_BUFF.UTS1
       878**DCL      7690>>ASSIGN
RV_BUFF.UTS2
       878**DCL      7734>>IF
RV_USRDIR
       912**DCL       683--DCLINIT   684--DCLINIT   770--DCLINIT   771--DCLINIT  7529--ASSIGN   7635--ASSIGN
      7765<<ASSIGN   7766--ASSIGN
RV_USRDIR.USER.AJITRAP
       912**DCL      7806<<ASSIGN
RV_USRDIR.USER.AJITUPD
       912**DCL      7700>>IF       7706<<ASSIGN
RV_USRDIR.USER.ASLD
       913**DCL      7709>>IF       7722<<ASSIGN
RV_USRDIR.USER.ASLT
       913**DCL      7798<<ASSIGN
RV_USRDIR.USER.RELSFD
       912**DCL      7729>>IF       7737<<ASSIGN
RV_USRDIR.USER.RELSFT
       913**DCL      7802<<ASSIGN
R_DIR_2
      7679**LABEL    7677--GOTO
R_DIR_ERR
      7676**LABEL    7674--CALLALT
R_DP_ERR
      7815**LABEL    7694--CALLALT
R_PATCH_ERR
      7957**LABEL    7871--CALLALT
R_RB_ERR
      7812**LABEL    7634--CALLALT
R_SAD_ERR
      7595**LABEL    7539--CALLALT
R_VID_ERR
      7589**LABEL    7527--CALLALT
SAY_ALIBR
      4489**DCL      8034--ASSIGN
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:166  
SAY_KILLRUM
      4485**DCL      8032--ASSIGN
SEE_CFUS
      4198**DCL      7550<>CALL
SEE_CFUS.V
      4198**DCL      4198--DCLINIT
SEE_DFMSG
      7785**LABEL    7652--GOTO     7658--GOTO
SET_PFNAME
      7841**LABEL    7842--CALLALT
SET_TRAP
      7513**LABEL    7510--GOTO
SET_XCON
      7513**LABEL    7518--CALLALT
SKIP_BANG
      7934**LABEL    7896--GOTO     7903--GOTO     7926--GOTO
SKIP_GRAN
      7737**LABEL    7823--GOTO
SKIP_P4
      5120**DCL      7916<<ASSIGN
SKIP_PATCH
      5119**DCL      5120--REDEF    7918<<ASSIGN   7919>>IF       7923>>IF
SKIP_TAB
      5124**DCL      7923>>IF
SKIP_TAB.P
      5126**DCL      7924>>CALLBLT
SO_WHAT
      7566**LABEL    7569--CALLALT
STARI
      4364**DCL      4320--DCLINIT
SYSDIR_GRAN
       922**DCL      7531<<ASSIGN   7532>>IF       8126>>IF
SYSPACK
       657**DCL       601--DCLINIT
SYSPACK.SN#
       657**DCL      7554<<ASSIGN
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:167  
SYSTAC
      4727**DCL      4687--DCLINIT
T$
       523**DCL      7529<<ASSIGN   7530>>ASSIGN   7532>>IF       7606>>ASSIGN   7608>>ASSIGN   7609>>ASSIGN
      7635<<ASSIGN   7636>>ASSIGN   7766<<ASSIGN   7767>>ASSIGN   7847>>ASSIGN   7848>>ASSIGN   7850>>ASSIGN
      7851>>ASSIGN   7854>>ASSIGN   8156<<ASSIGN   8158>>DOWHILE  8169<<ASSIGN   8171>>DOWHILE  8190<<ASSIGN
      8192>>DOWHILE
TEMPWR_ALT1 IN PROCEDURE REPORT_ERR
      8161**LABEL    8162--CALLALT
TEMP_ALT2 IN PROCEDURE REPORT_DFERR
      8195**LABEL    8196--CALLALT
TEXT IN PROCEDURE CHKDA
      8124**DCL      8064--PROC     8128>>CALLBLT
TRAPFPT
      7396**DCL      7518<>CALL
TRAPFPT.V
      7396**DCL      7396--DCLINIT
TRAP_HAND
      7566**LABEL    7517--REMEMBR
TRAP_RESTORE
      7566**LABEL    7567--CALLALT
TRAP_UNWIND
      7453**DCL      7517<<REMEMBR  7702<<REMEMBR  7712<<REMEMBR  7731<<REMEMBR  7829<<REMEMBR
TYPE
      4438**DCL      7886<<ASSIGN   7894<<ASSIGN   7901<<ASSIGN   8005>>ASSIGN
VLP_PTC
      7446**DCL      7396--DCLINIT  7422--DCLINIT
VLR_ERRMSG
      7347**DCL      7323--DCLINIT
WPF_ERR
      7968**LABEL    7858--CALLALT  7909--CALLALT
WRUM_ERR
      7985**LABEL    7933--CALLALT
WRUM_FERR IN PROCEDURE FINISH_RUM
      8042**LABEL    8033--CALLALT  8035--CALLALT
WTPF
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:168  
      4747**DCL      7909<>CALL     8006<>CALL
WTPF.BUF_
      4747**DCL      7879<<ASSIGN
WTPF.STATION_
      4749**DCL      4749--REDEF
WTPF.V
      4750**DCL      4747--DCLINIT
WTPF.V.DVBYTE.VFC#
      4756**DCL      4756--REDEF
WTRUM
      4978**DCL      7933<>CALL     8009<>CALL     8011<>CALL     8033<>CALL     8035<>CALL
WTRUM.BUF_
      4978**DCL      7932<<ASSIGN   8008<<ASSIGN   8010<<ASSIGN   8032<<ASSIGN   8034<<ASSIGN
WTRUM.STATION_
      4980**DCL      4980--REDEF
WTRUM.V
      4981**DCL      4978--DCLINIT
WTRUM.V.DVBYTE.VFC#
      4987**DCL      4987--REDEF
WT_DP
       769**DCL      7751<>CALL     7768<>CALL
WT_DP.STATION_
       771**DCL       771--REDEF
WT_DP.V
       772**DCL       769--DCLINIT
WT_DP.V.DVBYTE.VFC#
       778**DCL       778--REDEF
WT_PHEAD
      4781**DCL      7858<>CALL     8007<>CALL
WT_PHEAD.STATION_
      4783**DCL      4783--REDEF
WT_PHEAD.V
      4784**DCL      4781--DCLINIT
WT_PHEAD.V.DVBYTE.VFC#
      4790**DCL      4790--REDEF
XSF$LOCCODE
PL6.E3A0      #001=IGR$RECOVER File=IGR$RECOVER.:E05TSI                          TUE 07/29/97 22:37 Page:169  
      6018**DCL-ENT  7717--CALL

PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:170  
     1149        1        /*T***********************************************************/
     1150        2        /*T*                                                         */
     1151        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1152        4        /*T*                                                         */
     1153        5        /*T***********************************************************/
     1154        6
     1155        7                                                /*  ASYNC ROUTINES                    */
     1156        8        IGR$TRAP: PROC ASYNC;
     1157        9    1   DCL TRAP_UNWIND REMEMBER DALIGNED SYMREF;
     1158       10
     1159       11    1      UNWIND TO TRAP_UNWIND;
     1160       12    1   END IGR$TRAP;

PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:171  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IGR$TRAP.

   Procedure IGR$TRAP requires 5 words for executable code.
   Procedure IGR$TRAP requires 4 words of local(AUTO) storage.

    No errors detected in file IGR$RECOVER.:E05TSI    .

PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:172  

 Object Unit name= IGR$TRAP                                   File name= IGR$RECOVER.:E05TOU
 UTS= JUL 29 '97 22:38:10.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     5      5  IGR$TRAP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes     Async       0  IGR$TRAP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AAUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     TRAP_UNWIND
PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:173  


     1149        1        /*T***********************************************************/
     1150        2        /*T*                                                         */
     1151        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1152        4        /*T*                                                         */
     1153        5        /*T***********************************************************/
     1154        6
     1155        7                                                /*  ASYNC ROUTINES                    */
     1156        8        IGR$TRAP: PROC ASYNC;

      8  0 000000   000000 700200 xent  IGR$TRAP     TSX0  ! X66_AAUTO
         0 000001   000004 000000                    ZERO    4,0

     1157        9    1   DCL TRAP_UNWIND REMEMBER DALIGNED SYMREF;
     1158       10
     1159       11    1      UNWIND TO TRAP_UNWIND;

     11  0 000002   000000 237200 xsym               LDAQ  ! TRAP_UNWIND
         0 000003   000000 700200 xent               TSX0  ! X66_AAUNWIND
         0 000004   000000 000200                    ZERO    0,128
     1160       12    1   END IGR$TRAP;

PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:174  
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IGR$TRAP.
PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:175  

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 TRAP_UNWIND


   Procedure IGR$TRAP requires 5 words for executable code.
   Procedure IGR$TRAP requires 4 words of local(AUTO) storage.

    No errors detected in file IGR$RECOVER.:E05TSI    .
PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:176  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=IGR$TRAP File=IGR$RECOVER.:E05TSI                             TUE 07/29/97 22:38 Page:177  
          MINI XREF LISTING

TRAP_UNWIND
         9**DCL        11>>UNWIND
