VERSION E05

PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:1    
        1        1        /*M*     KPD$UNDUMP Checks a FEP and shows drive types and status              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPD$UNDUMP
        8        8                 PURPOSE:       Builds an ANLZable dumpfile from one on Rfep diskettes.
        9        9                 DESCRIPTION:   This command mimics the activities of NODEADMN and FROG
       10       10                                for getting a dump from an RFEP that won't connect.
       11       11        */
       12       12        KPD$UNDUMP: PROC( OUT$ );
       13       13        /**/
       14       14        /*  Include files  */
       15       15        /**/
       16       16        %INCLUDE XU_MACRO_C;
       17     3122        %INCLUDE KP_DATA_R;
       18     4374        %INCLUDE XU_SUBS_C;
       19     4466        %INCLUDE KP_MSG;
       20     4559        %INCLUDE KL_MACRO_C;
       21     7911        %INCLUDE KL_AFCN_C;
       22     8012        %INCLUDE IR_DATA_M;
       23     8176        %GI_RCVR_EQU;
       24     8188        /**/
       25     8189        /*  Entry declarations  */
       26     8190        /**/
       27     8191        %KP_ENTRIES (OMIT=KPD$UNDUMP);
       28     8297    1   DCL GIJ$INITDUMP ENTRY(0) ALTRET;
       29     8298    1   DCL GIJ$DUMPMSG ENTRY(1);
       30     8299        /**/
       31     8300        /*  BASED DATA  */
       32     8301        /**/
       33     8302        %PARSE$OUT    ( NAME    = OUT$BLK,
       34     8303                        STCLASS = BASED );
       35     8348        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       36     8424        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:2    
       37     8425        /**/
       38     8426        /*  Local goodies  */
       39     8427        /**/
       40     8428    1   DCL OUT$ PTR;
       41     8429    1   DCL NSUBLKS UBIN WORD;
       42     8430    1   DCL FEP_NUM UBIN WORD;
       43     8431    1   DCL PART SBIN WORD;
       44     8432    1   DCL PART$ PTR;
       45     8433    1   DCL OPT SBIN WORD;
       46     8434    1   DCL OPT$ PTR;
       47     8435    1   DCL DRIVE_NUMBER SBIN;
       48     8436    1   DCL I SBIN;
       49     8437        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:3    
       50     8438        /**/
       51     8439        /*  Communication among fakers.  */
       52     8440        /**/
       53     8441        %ERROR(GI_PGS_PER_BIT~=4,,'*** fix the next line and a couple in GIJ$DUMPMSG');
       54     8442        %KL_DUMPMSG (FPTN=TO_HOST,STCLASS=STATIC SYMDEF,DSIZE=2048);
       55     8483        %KL_DUMPMSG (FPTN=TO_FEP,STCLASS=STATIC SYMDEF,DSIZE=16);
       56     8524    1   DCL UNDUMP_DRIVE SBIN STATIC SYMDEF;
       57     8525    1   DCL GJA_NODE# UBIN STATIC SYMDEF INIT(0);
       58     8526        /**/
       59     8527        /*  EQUs for readability & abbreviation  */
       60     8528        /**/
       61     8529        %EQU RESPONSE# = CHARTEXT('KP_FECG_IN$ -> KP$MSG.CHECK_RSP');
       62     8530        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:4    
       63     8531        /**/
       64     8532        /*  Make sure he is allowed to do this thing.  */
       65     8533        /**/
       66     8534    1           CALL KPU$SECURITY(%KP_PRIV_WR#) ALTRET(CANT_OPEN);
       67     8535        /**/
       68     8536        /*  Setup  */
       69     8537        /**/
       70     8538    1           CALL KPD$DISK_TYPE (IN_OPTS,%DT_RFEP#);
       71     8539    1           GJA_NODE# = 0; /* Start with no node specified */
       72     8540        /**/
       73     8541        /*  Loop, processing options.  */
       74     8542        /**/
       75     8543    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;
       76     8544    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);
       77     8545    3              DO CASE(PART$ -> OUT$BLK.CODE);
       78     8546    3               CASE(1);                    /* DRIVE ID                           */
       79     8547    3                 CALL KPU$FEP_AND_DRIVE(
       80     8548    3                   PART$ -> OUT$BLK,
       81     8549    3                   FEP_NUM,UNDUMP_DRIVE) ALTRET(CANT_OPEN);
       82     8550    3               CASE(2);                    /* NODE ID                            */
       83     8551    3                 CALL KPU$FEP_AND_DRIVE(
       84     8552    3                   PART$ -> OUT$BLK,
       85     8553    3                   GJA_NODE#,I) ALTRET(BAD_OPTS);
       86     8554    3               END;                        /* END CASE                           */
       87     8555    2              END;                         /* END DO INDEX                       */
       88     8556        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:5    
       89     8557    1           CALL KPX$OPEN( FEP_NUM, UNDUMP_DRIVE ) ALTRET(CANT_OPEN);
       90     8558        /**/
       91     8559        /*  Start by having the FEP-faker check for a dump.  If this works, he        */
       92     8560        /*  will write a DUMP_REQUEST to the host.                                    */
       93     8561        /**/
       94     8562    1           CALL GIJ$INITDUMP ALTRET(NODUMP);
       95     8563    1           CALL KPT$TERM_MSG(%T$DUMPING);
       96     8564        /**/
       97     8565        /*  The host will return a DUMP_GRANT, which we now hand to the FEP.  He      */
       98     8566        /*  responds with a DUMP_RVBUF.  The host returns DUMP_ACK.                   */
       99     8567        /**/
      100     8568    1           CALL GIJ$DUMPMSG (TO_FEP);
      101     8569        /**/
      102     8570        /*  The FEP will then send a number of memory pages, each of which is         */
      103     8571        /*  answered by a DUMP_ACK.                                                   */
      104     8572        /**/
      105     8573    1           CALL GIJ$DUMPMSG (TO_FEP);
      106     8574    2           DO WHILE (TO_HOST.TYPE = %GI_DUMP_PAGE);
      107     8575    2              CALL GIJ$DUMPMSG (TO_FEP);
      108     8576    2              END;
      109     8577        /**/
      110     8578        /*  The last message from the FEP was DUMP_EOD.  Let the host have it, but    */
      111     8579        /*  he will not respond.                                                      */
      112     8580        /**/
      113     8581        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:6    
      114     8582        /**/
      115     8583        /*  We're finished, and it all went OK.  */
      116     8584        /**/
      117     8585    1           CALL KPX$CLOSE( FEP_NUM, UNDUMP_DRIVE ) ALTRET(CANT_CLOSE);
      118     8586        /**/
      119     8587    1           RETURN;
      120     8588        /**/
      121     8589        /* Get here when things become severely fouled */
      122     8590        /**/
      123     8591    1   BAD_OPTS: ;
      124     8592    1   PIGETTE_ERR: ;
      125     8593    1   CANT_CLOSE: ;
      126     8594    1   CANT_OPEN: ;
      127     8595    1   NODUMP: ;
      128     8596    1           RETURN;
      129     8597    1   END KPD$UNDUMP;
      130     8598        %EOD;

PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:7    
--  Include file information  --

   IR_DATA_M.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPD$UNDUMP.

   Procedure KPD$UNDUMP requires 98 words for executable code.
   Procedure KPD$UNDUMP requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:8    

 Object Unit name= KPD$UNDUMP                                 File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:18:07.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   524   1014  KPD$UNDUMP
    2   Proc  even  none    98    142  KPD$UNDUMP
    3  RoData even  none     8     10  KPD$UNDUMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KPD$UNDUMP

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  TO_HOST                            1   1003  TO_FEP
    1   1012  UNDUMP_DRIVE                       1   1013  GJA_NODE#
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:9    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KPU$SECURITY
 yes     yes           Std       2 KPX$OPEN
 yes     yes           Std       0 GIJ$INITDUMP
         yes           Std       1 GIJ$DUMPMSG
         yes           Std       1 KPT$TERM_MSG
         yes           Std       2 KPD$DISK_TYPE
 yes     yes           Std       3 KPU$FEP_AND_DRIVE
 yes     yes           Std       2 KPX$CLOSE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_RU_KEY                             IN_OPTS                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:10   


        1        1        /*M*     KPD$UNDUMP Checks a FEP and shows drive types and status              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPD$UNDUMP
        8        8                 PURPOSE:       Builds an ANLZable dumpfile from one on Rfep diskettes.
        9        9                 DESCRIPTION:   This command mimics the activities of NODEADMN and FROG
       10       10                                for getting a dump from an RFEP that won't connect.
       11       11        */
       12       12        KPD$UNDUMP: PROC( OUT$ );

     12  2 000000   000000 700200 xent  KPD$UNDUMP   TSX0  ! X66_AUTO_1
         2 000001   000020 000001                    ZERO    16,1

       13       13        /**/
       14       14        /*  Include files  */
       15       15        /**/
       16       16        %INCLUDE XU_MACRO_C;
       17     3122        %INCLUDE KP_DATA_R;
       18     4374        %INCLUDE XU_SUBS_C;
       19     4466        %INCLUDE KP_MSG;
       20     4559        %INCLUDE KL_MACRO_C;
       21     7911        %INCLUDE KL_AFCN_C;
       22     8012        %INCLUDE IR_DATA_M;
       23     8176        %GI_RCVR_EQU;
       24     8188        /**/
       25     8189        /*  Entry declarations  */
       26     8190        /**/
       27     8191        %KP_ENTRIES (OMIT=KPD$UNDUMP);
       28     8297    1   DCL GIJ$INITDUMP ENTRY(0) ALTRET;
       29     8298    1   DCL GIJ$DUMPMSG ENTRY(1);
       30     8299        /**/
       31     8300        /*  BASED DATA  */
       32     8301        /**/
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:11   
       33     8302        %PARSE$OUT    ( NAME    = OUT$BLK,
       34     8303                        STCLASS = BASED );
       35     8348        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       36     8424        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:12   
       37     8425        /**/
       38     8426        /*  Local goodies  */
       39     8427        /**/
       40     8428    1   DCL OUT$ PTR;
       41     8429    1   DCL NSUBLKS UBIN WORD;
       42     8430    1   DCL FEP_NUM UBIN WORD;
       43     8431    1   DCL PART SBIN WORD;
       44     8432    1   DCL PART$ PTR;
       45     8433    1   DCL OPT SBIN WORD;
       46     8434    1   DCL OPT$ PTR;
       47     8435    1   DCL DRIVE_NUMBER SBIN;
       48     8436    1   DCL I SBIN;
       49     8437        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:13   
       50     8438        /**/
       51     8439        /*  Communication among fakers.  */
       52     8440        /**/
       53     8441        %ERROR(GI_PGS_PER_BIT~=4,,'*** fix the next line and a couple in GIJ$DUMPMSG');
       54     8442        %KL_DUMPMSG (FPTN=TO_HOST,STCLASS=STATIC SYMDEF,DSIZE=2048);
       55     8483        %KL_DUMPMSG (FPTN=TO_FEP,STCLASS=STATIC SYMDEF,DSIZE=16);
       56     8524    1   DCL UNDUMP_DRIVE SBIN STATIC SYMDEF;
       57     8525    1   DCL GJA_NODE# UBIN STATIC SYMDEF INIT(0);
       58     8526        /**/
       59     8527        /*  EQUs for readability & abbreviation  */
       60     8528        /**/
       61     8529        %EQU RESPONSE# = CHARTEXT('KP_FECG_IN$ -> KP$MSG.CHECK_RSP');
       62     8530        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:14   
       63     8531        /**/
       64     8532        /*  Make sure he is allowed to do this thing.  */
       65     8533        /**/
       66     8534    1           CALL KPU$SECURITY(%KP_PRIV_WR#) ALTRET(CANT_OPEN);

   8534  2 000002   000000 630400 3                  EPPR0   0
         2 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000004   000000 701000 xent               TSX1    KPU$SECURITY
         2 000005   000141 702000 2                  TSX2    BAD_OPTS

       67     8535        /**/
       68     8536        /*  Setup  */
       69     8537        /**/
       70     8538    1           CALL KPD$DISK_TYPE (IN_OPTS,%DT_RFEP#);

   8538  2 000006   000001 630400 3                  EPPR0   1
         2 000007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000010   000000 701000 xent               TSX1    KPD$DISK_TYPE
         2 000011   000000 011000                    NOP     0

       71     8539    1           GJA_NODE# = 0; /* Start with no node specified */

   8539  2 000012   001013 450000 1                  STZ     GJA_NODE#

       72     8540        /**/
       73     8541        /*  Loop, processing options.  */
       74     8542        /**/
       75     8543    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;

   8543  2 000013   200006 450100                    STZ     PART,,AUTO
         2 000014   000057 710000 2                  TRA     s:8555+1

       76     8544    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);

   8544  2 000015   200003 470500                    LDP0    @OUT$,,AUTO
         2 000016   000000 471500                    LDP1    0,,PR0
         2 000017   200006 720100                    LXL0    PART,,AUTO
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:15   
         2 000020   100003 236110                    LDQ     3,X0,PR1
         2 000021   200007 756100                    STQ     PART$,,AUTO

       77     8545    3              DO CASE(PART$ -> OUT$BLK.CODE);

   8545  2 000022   200007 473500                    LDP3    PART$,,AUTO
         2 000023   300000 721100                    LXL1    0,,PR3
         2 000024   000003 101003                    CMPX1   3,DU
         2 000025   000027 602011 2                  TNC     s:8545+5,X1
         2 000026   000056 710000 2                  TRA     s:8555
         2 000027   000056 710000 2                  TRA     s:8555
         2 000030   000032 710000 2                  TRA     s:8547
         2 000031   000045 710000 2                  TRA     s:8551

       78     8546    3               CASE(1);                    /* DRIVE ID                           */

       79     8547    3                 CALL KPU$FEP_AND_DRIVE(

   8547  2 000032   000003 236000 3                  LDQ     3
         2 000033   200016 756100                    STQ     I+3,,AUTO
         2 000034   200005 631500                    EPPR1   FEP_NUM,,AUTO
         2 000035   200015 451500                    STP1    I+2,,AUTO
         2 000036   200007 236100                    LDQ     PART$,,AUTO
         2 000037   200014 756100                    STQ     I+1,,AUTO
         2 000040   200014 630500                    EPPR0   I+1,,AUTO
         2 000041   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000042   000000 701000 xent               TSX1    KPU$FEP_AND_DRIVE
         2 000043   000141 702000 2                  TSX2    BAD_OPTS
         2 000044   000056 710000 2                  TRA     s:8555

       80     8548    3                   PART$ -> OUT$BLK,
       81     8549    3                   FEP_NUM,UNDUMP_DRIVE) ALTRET(CANT_OPEN);
       82     8550    3               CASE(2);                    /* NODE ID                            */

       83     8551    3                 CALL KPU$FEP_AND_DRIVE(

   8551  2 000045   200013 634500                    EPPR4   I,,AUTO
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:16   
         2 000046   200016 454500                    STP4    I+3,,AUTO
         2 000047   000004 236000 3                  LDQ     4
         2 000050   200007 235100                    LDA     PART$,,AUTO
         2 000051   200014 757100                    STAQ    I+1,,AUTO
         2 000052   200014 630500                    EPPR0   I+1,,AUTO
         2 000053   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000054   000000 701000 xent               TSX1    KPU$FEP_AND_DRIVE
         2 000055   000141 702000 2                  TSX2    BAD_OPTS

       84     8552    3                   PART$ -> OUT$BLK,
       85     8553    3                   GJA_NODE#,I) ALTRET(BAD_OPTS);
       86     8554    3               END;                        /* END CASE                           */

       87     8555    2              END;                         /* END DO INDEX                       */

   8555  2 000056   200006 054100                    AOS     PART,,AUTO
         2 000057   200003 470500                    LDP0    @OUT$,,AUTO
         2 000060   000000 471500                    LDP1    0,,PR0
         2 000061   100001 236100                    LDQ     1,,PR1
         2 000062   000022 772000                    QRL     18
         2 000063   200006 116100                    CMPQ    PART,,AUTO
         2 000064   000015 605400 2                  TPNZ    s:8544

       88     8556        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:17   
       89     8557    1           CALL KPX$OPEN( FEP_NUM, UNDUMP_DRIVE ) ALTRET(CANT_OPEN);

   8557  2 000065   000003 236000 3                  LDQ     3
         2 000066   200015 756100                    STQ     I+2,,AUTO
         2 000067   200005 631500                    EPPR1   FEP_NUM,,AUTO
         2 000070   200014 451500                    STP1    I+1,,AUTO
         2 000071   200014 630500                    EPPR0   I+1,,AUTO
         2 000072   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000073   000000 701000 xent               TSX1    KPX$OPEN
         2 000074   000141 702000 2                  TSX2    BAD_OPTS

       90     8558        /**/
       91     8559        /*  Start by having the FEP-faker check for a dump.  If this works, he        */
       92     8560        /*  will write a DUMP_REQUEST to the host.                                    */
       93     8561        /**/
       94     8562    1           CALL GIJ$INITDUMP ALTRET(NODUMP);

   8562  2 000075   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000076   000000 701000 xent               TSX1    GIJ$INITDUMP
         2 000077   000141 702000 2                  TSX2    BAD_OPTS

       95     8563    1           CALL KPT$TERM_MSG(%T$DUMPING);

   8563  2 000100   000006 630400 3                  EPPR0   6
         2 000101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000102   000000 701000 xent               TSX1    KPT$TERM_MSG
         2 000103   000000 011000                    NOP     0

       96     8564        /**/
       97     8565        /*  The host will return a DUMP_GRANT, which we now hand to the FEP.  He      */
       98     8566        /*  responds with a DUMP_RVBUF.  The host returns DUMP_ACK.                   */
       99     8567        /**/
      100     8568    1           CALL GIJ$DUMPMSG (TO_FEP);

   8568  2 000104   000007 630400 3                  EPPR0   7
         2 000105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000106   000000 701000 xent               TSX1    GIJ$DUMPMSG
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:18   
         2 000107   000000 011000                    NOP     0

      101     8569        /**/
      102     8570        /*  The FEP will then send a number of memory pages, each of which is         */
      103     8571        /*  answered by a DUMP_ACK.                                                   */
      104     8572        /**/
      105     8573    1           CALL GIJ$DUMPMSG (TO_FEP);

   8573  2 000110   000007 630400 3                  EPPR0   7
         2 000111   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000112   000000 701000 xent               TSX1    GIJ$DUMPMSG
         2 000113   000000 011000                    NOP     0

      106     8574    2           DO WHILE (TO_HOST.TYPE = %GI_DUMP_PAGE);

   8574  2 000114   000001 236000 1                  LDQ     TO_HOST+1
         2 000115   777000 376003                    ANQ     -512,DU
         2 000116   004000 116003                    CMPQ    2048,DU
         2 000117   000130 601000 2                  TNZ     s:8585

      107     8575    2              CALL GIJ$DUMPMSG (TO_FEP);

   8575  2 000120   000007 630400 3                  EPPR0   7
         2 000121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000122   000000 701000 xent               TSX1    GIJ$DUMPMSG
         2 000123   000000 011000                    NOP     0

      108     8576    2              END;

   8576  2 000124   000001 236000 1                  LDQ     TO_HOST+1
         2 000125   777000 376003                    ANQ     -512,DU
         2 000126   004000 116003                    CMPQ    2048,DU
         2 000127   000120 600000 2                  TZE     s:8575

      109     8577        /**/
      110     8578        /*  The last message from the FEP was DUMP_EOD.  Let the host have it, but    */
      111     8579        /*  he will not respond.                                                      */
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:19   
      112     8580        /**/
      113     8581        %EJECT;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:20   
      114     8582        /**/
      115     8583        /*  We're finished, and it all went OK.  */
      116     8584        /**/
      117     8585    1           CALL KPX$CLOSE( FEP_NUM, UNDUMP_DRIVE ) ALTRET(CANT_CLOSE);

   8585  2 000130   000003 236000 3                  LDQ     3
         2 000131   200015 756100                    STQ     I+2,,AUTO
         2 000132   200005 630500                    EPPR0   FEP_NUM,,AUTO
         2 000133   200014 450500                    STP0    I+1,,AUTO
         2 000134   200014 630500                    EPPR0   I+1,,AUTO
         2 000135   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000136   000000 701000 xent               TSX1    KPX$CLOSE
         2 000137   000141 702000 2                  TSX2    BAD_OPTS

      118     8586        /**/
      119     8587    1           RETURN;

   8587  2 000140   000000 702200 xent               TSX2  ! X66_ARET

   8575  2 000141                       BAD_OPTS     null
   8575  2 000141                       PIGETTE_ERR  null
   8575  2 000141                       CANT_CLOSE   null
   8575  2 000141                       CANT_OPEN    null
   8575  2 000141                       NODUMP       null
      120     8588        /**/
      121     8589        /* Get here when things become severely fouled */
      122     8590        /**/
      123     8591    1   BAD_OPTS: ;
      124     8592    1   PIGETTE_ERR: ;
      125     8593    1   CANT_CLOSE: ;
      126     8594    1   CANT_OPEN: ;
      127     8595    1   NODUMP: ;
      128     8596    1           RETURN;

   8596  2 000141   000000 702200 xent               TSX2  ! X66_ARET
      129     8597    1   END KPD$UNDUMP;
      130     8598        %EOD;
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:21   

PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:22   
--  Include file information  --

   IR_DATA_M.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPD$UNDUMP.
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:23   

 **** Variables and constants ****

  ****  Section 001  Data  KPD$UNDUMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  1013-0-0/w UBIN        r     1 GJA_NODE#               1003-0-0/w STRC(252)   r     1 TO_FEP
     0-0-0/w STRC(18540) r     1 TO_HOST                 1012-0-0/w SBIN        r     1 UNDUMP_DRIVE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @OUT$                      5-0-0/w UBIN        r     1 FEP_NUM
    13-0-0/w SBIN        r     1 I                         *0-0-0/w PTR         r     1 OUT$
     6-0-0/w SBIN        r     1 PART                       7-0-0/w PTR         r     1 PART$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(468)   r     1 IN_OPTS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK


   Procedure KPD$UNDUMP requires 98 words for executable code.
   Procedure KPD$UNDUMP requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:25   
          MINI XREF LISTING

BAD_OPTS
      8575**LABEL    8551--CALLALT
CANT_CLOSE
      8575**LABEL    8585--CALLALT
CANT_OPEN
      8575**LABEL    8534--CALLALT  8547--CALLALT  8557--CALLALT
FEP_NUM
      8430**DCL      8547<>CALL     8557<>CALL     8585<>CALL
GIJ$DUMPMSG
      8298**DCL-ENT  8568--CALL     8573--CALL     8575--CALL
GIJ$INITDUMP
      8297**DCL-ENT  8562--CALL
GJA_NODE#
      8525**DCL      8539<<ASSIGN   8551<>CALL
I
      8436**DCL      8551<>CALL
IN_OPTS
      4129**DCL      8538<>CALL
KP$MSG.TDATA
      8375**DCL      8376--REDEF    8377--REDEF    8382--REDEF    8396--REDEF    8401--REDEF    8405--REDEF
      8411--REDEF    8414--REDEF
KPD$DISK_TYPE
      8208**DCL-ENT  8538--CALL
KPT$TERM_MSG
      8238**DCL-ENT  8563--CALL
KPU$FEP_AND_DRIVE
      8244**DCL-ENT  8547--CALL     8551--CALL
KPU$SECURITY
      8294**DCL-ENT  8534--CALL
KPX$CLOSE
      8260**DCL-ENT  8585--CALL
KPX$OPEN
PL6.E3A0      #001=KPD$UNDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:18 Page:26   
      8266**DCL-ENT  8557--CALL
KP_EXIT.V.STEPCC#
      4045**DCL      4045--REDEF
KP_INBUF
      3967**DCL      3967--REDEF
KP_RU_KEY
      3975**DCL      3976--REDEF
KP_RU_KEY.NODE
      3975**DCL      3975--REDEF
KP_RU_KEY.PAGE
      3976**DCL      3976--REDEF
KP_RU_OUTBUF
      3969**DCL      3969--REDEF
NODUMP
      8575**LABEL    8562--CALLALT
OUT$
      8428**DCL        12--PROC     8543>>DOINDEX  8544>>ASSIGN
OUT$BLK
      8309**DCL      8547<>CALL     8551<>CALL
OUT$BLK.CODE
      8317**DCL      8545>>DOCASE
OUT$BLK.NSUBLKS
      8321**DCL      8543>>DOINDEX
OUT$BLK.SUBLK$
      8342**DCL      8544>>ASSIGN
PART
      8431**DCL      8543<<DOINDEX  8544>>ASSIGN
PART$
      8432**DCL      8544<<ASSIGN   8545>>DOCASE   8547>>CALL     8551>>CALL
TO_FEP
      8503**DCL      8568<>CALL     8573<>CALL     8575<>CALL
TO_HOST.TYPE
      8474**DCL      8574>>DOWHILE
UNDUMP_DRIVE
      8524**DCL      8547<>CALL     8557<>CALL     8585<>CALL

PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:27   
      131        1        /*T***********************************************************/
      132        2        /*T*                                                         */
      133        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      134        4        /*T*                                                         */
      135        5        /*T***********************************************************/
      136        6
      137        7        /*F*    Name: GIJ$INITDUMP
      138        8                Call: CALL GIJ$INITDUMP
      139        9                Purpose:
      140       10                   This routine initiates the transmission of a dump to the
      141       11                host.  The current form is used for sending the dump from
      142       12                disk to the host for RFEP crashes.
      143       13
      144       14                If there is no dump, we ALTRETURN.
      145       15                                                                           */
      146       16
      147       17        GIJ$INITDUMP: PROC ALTRET;
      148       18
      149       19        %INCLUDE KP_DATA_R;
      150     1271        %INCLUDE IR_DATA_M;
      151     1435        %GI_RCVR_EQU;
      152     1447        %INCLUDE KL_MACRO_C;
      153     4799
      154     4800    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
      155     4801    1   DCL GID$RDDUMP ENTRY(3);
      156     4802    1   DCL GID$CHKDMP ENTRY ALTRET;
      157     4803    1   DCL GID$DISKIO ENTRY(4);
      158     4804    1   DCL KPE$ERROR ENTRY(1) ALTRET;
      159     4805
      160     4806        %KL_DUMPMSG (FPTN=DUMPMSG,
      161     4807                     STCLASS=AUTO,
      162     4808                     DSIZE=512);
      163     4849        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=BASED,BITMAP=NO);
      164     4882
      165     4883    1   DCL RVBUFSECT UBIN;
      166     4884
      167     4885    1   DCL GJA_NODE# UBIN SYMREF;
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:28   
      168     4886    1   DCL GID_VSEC_DUMP SBIN SYMREF;
      169     4887        %KP_DISKID (FPTN=DISKID, STCLASS=BASED);
      170     4899        %VLP_ERRCODE (FPTN=KP_ERRORCODE, STCLASS=SYMREF);
      171     4944
      172     4945        %EJECT;
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:29   
      173     4946
      174     4947    1           KP_ERRORCODE.ERR#=0;
      175     4948    1           CALL GID$CHKDMP;
      176     4949    1           CALL GID$DISKIO( %KP_VSEC_DISKID#, 256, ADDR(DUMPMSG.DATA), 0);
      177     4950    1           IF KP_ERRORCODE.ERR#~=0 THEN ALTRETURN;
      178     4951    2           IF ADDR(DUMPMSG.DATA)->DISKID.VERITY~='FUZZY-PIGS' THEN DO;
      179     4952    2              CALL KPE$ERROR( %E$NOT_BOOT_DISK);
      180     4953    2              ALTRETURN;
      181     4954    2              END;
      182     4955    2           IF GID_VSEC_DUMP<=0 OR GID_VSEC_DUMP>=2560 THEN DO;
      183     4956    2              CALL KPE$ERROR( %E$NOT_DUMP_DISK);
      184     4957                   /* No dump on the disk */
      185     4958    2              ALTRETURN;
      186     4959    2              END;
      187     4960    2           IF GJA_NODE#=0 THEN DO; /* Get node from diskid data */
      188     4961    2              FPT_NODEINFO.V.NODENAME# =
      189     4962    2                ADDR(DUMPMSG.DATA)->DISKID.DESTINATION_NODE;
      190     4963    2              GJA_NODE# = 100; /* Presume 100 if nothing works */
      191     4964    2              CALL M$NODEINFO (FPT_NODEINFO) ALTRET (USE_100);
      192     4965    2              IF NOT VLR_NODEINFO.HOST# THEN GJA_NODE# = VLR_NODEINFO.NODENUM#;
      193     4966    2   USE_100: ;
      194     4967    2              END;
      195     4968    1           RVBUFSECT=%(GI_RVBUF_LOC+256)/128;   /* Second page of RVBUF */
      196     4969    1           CALL GID$RDDUMP(ADDR(DUMPMSG.DATA),RVBUFSECT,1);
      197     4970    1           DUMPMSG.TYPE=%GI_DUMP_RQST;
      198     4971    1           DUMPMSG.FEX=GJA_NODE#;
      199     4972    1           DUMPMSG.DATASIZE=SIZEC(RVBUF);
      200     4973    1           DUMPMSG.RPN=0;
      201     4974    1           CALL GIJ$WRT_FROG(DUMPMSG);
      202     4975    1           RETURN;
      203     4976
      204     4977    1   END GIJ$INITDUMP;
      205     4978        %EOD;

PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:30   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GIJ$INITDUMP.

   Procedure GIJ$INITDUMP requires 86 words for executable code.
   Procedure GIJ$INITDUMP requires 142 words of local(AUTO) storage.

PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:31   

 Object Unit name= GIJ$INITDUMP                               File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:18:39.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      3      3  GIJ$INITDUMP
    2   Proc  even  none    86    126  GIJ$INITDUMP
    3  RoData even  none    11     13  GIJ$INITDUMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        0  GIJ$INITDUMP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 GID$CHKDMP
         yes           Std       4 GID$DISKIO
 yes     yes           Std       1 KPE$ERROR
         yes           Std       3 GID$RDDUMP
 yes     yes           Std       1 GIJ$WRT_FROG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:32   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_RU_KEY                             FPT_NODEINFO                          VLR_NODEINFO
     GJA_NODE#                             GID_VSEC_DUMP                         KP_ERRORCODE
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:33   


      131        1        /*T***********************************************************/
      132        2        /*T*                                                         */
      133        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      134        4        /*T*                                                         */
      135        5        /*T***********************************************************/
      136        6
      137        7        /*F*    Name: GIJ$INITDUMP
      138        8                Call: CALL GIJ$INITDUMP
      139        9                Purpose:
      140       10                   This routine initiates the transmission of a dump to the
      141       11                host.  The current form is used for sending the dump from
      142       12                disk to the host for RFEP crashes.
      143       13
      144       14                If there is no dump, we ALTRETURN.
      145       15                                                                           */
      146       16
      147       17        GIJ$INITDUMP: PROC ALTRET;

     17  2 000000   000000 700200 xent  GIJ$INITDUMP TSX0  ! X66_AUTO_0
         2 000001   000216 000000                    ZERO    142,0

      148       18
      149       19        %INCLUDE KP_DATA_R;
      150     1271        %INCLUDE IR_DATA_M;
      151     1435        %GI_RCVR_EQU;
      152     1447        %INCLUDE KL_MACRO_C;
      153     4799
      154     4800    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
      155     4801    1   DCL GID$RDDUMP ENTRY(3);
      156     4802    1   DCL GID$CHKDMP ENTRY ALTRET;
      157     4803    1   DCL GID$DISKIO ENTRY(4);
      158     4804    1   DCL KPE$ERROR ENTRY(1) ALTRET;
      159     4805
      160     4806        %KL_DUMPMSG (FPTN=DUMPMSG,
      161     4807                     STCLASS=AUTO,
      162     4808                     DSIZE=512);
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:34   
      163     4849        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=BASED,BITMAP=NO);
      164     4882
      165     4883    1   DCL RVBUFSECT UBIN;
      166     4884
      167     4885    1   DCL GJA_NODE# UBIN SYMREF;
      168     4886    1   DCL GID_VSEC_DUMP SBIN SYMREF;
      169     4887        %KP_DISKID (FPTN=DISKID, STCLASS=BASED);
      170     4899        %VLP_ERRCODE (FPTN=KP_ERRORCODE, STCLASS=SYMREF);
      171     4944
      172     4945        %EJECT;
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:35   
      173     4946
      174     4947    1           KP_ERRORCODE.ERR#=0;

   4947  2 000002   000000 236000 3                  LDQ     0
         2 000003   000000 356000 xsym               ANSQ    KP_ERRORCODE

      175     4948    1           CALL GID$CHKDMP;

   4948  2 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000005   000000 701000 xent               TSX1    GID$CHKDMP
         2 000006   000000 011000                    NOP     0

      176     4949    1           CALL GID$DISKIO( %KP_VSEC_DISKID#, 256, ADDR(DUMPMSG.DATA), 0);

   4949  2 000007   200006 630500                    EPPR0   DUMPMSG+3,,AUTO
         2 000010   200210 450500                    STP0    RVBUFSECT+2,,AUTO
         2 000011   000002 236000 3                  LDQ     2
         2 000012   200215 756100                    STQ     RVBUFSECT+7,,AUTO
         2 000013   200210 631500                    EPPR1   RVBUFSECT+2,,AUTO
         2 000014   200214 451500                    STP1    RVBUFSECT+6,,AUTO
         2 000015   000004 237000 3                  LDAQ    4
         2 000016   200212 757100                    STAQ    RVBUFSECT+4,,AUTO
         2 000017   200212 630500                    EPPR0   RVBUFSECT+4,,AUTO
         2 000020   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000021   000000 701000 xent               TSX1    GID$DISKIO
         2 000022   000000 011000                    NOP     0

      177     4950    1           IF KP_ERRORCODE.ERR#~=0 THEN ALTRETURN;

   4950  2 000023   000000 236000 xsym               LDQ     KP_ERRORCODE
         2 000024   377770 316007                    CANQ    131064,DL
         2 000025   000027 600000 2                  TZE     s:4951

   4950  2 000026   000000 702200 xent               TSX2  ! X66_AALT

      178     4951    2           IF ADDR(DUMPMSG.DATA)->DISKID.VERITY~='FUZZY-PIGS' THEN DO;

PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:36   
   4951  2 000027   040000 106500                    CMPC    fill='040'O
         2 000030   200006 000012                    ADSC9   DUMPMSG+3,,AUTO          cn=0,n=10
         2 000031   000000 000012 1                  ADSC9   0                        cn=0,n=10
         2 000032   000040 600000 2                  TZE     s:4955

      179     4952    2              CALL KPE$ERROR( %E$NOT_BOOT_DISK);

   4952  2 000033   000007 630400 3                  EPPR0   7
         2 000034   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000035   000000 701000 xent               TSX1    KPE$ERROR
         2 000036   000000 011000                    NOP     0

      180     4953    2              ALTRETURN;

   4953  2 000037   000000 702200 xent               TSX2  ! X66_AALT

      181     4954    2              END;
      182     4955    2           IF GID_VSEC_DUMP<=0 OR GID_VSEC_DUMP>=2560 THEN DO;

   4955  2 000040   000000 235000 xsym               LDA     GID_VSEC_DUMP
         2 000041   000044 604400 2                  TMOZ    s:4956
         2 000042   005000 115007                    CMPA    2560,DL
         2 000043   000051 604000 2                  TMI     s:4960

      183     4956    2              CALL KPE$ERROR( %E$NOT_DUMP_DISK);

   4956  2 000044   000011 630400 3                  EPPR0   9
         2 000045   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000046   000000 701000 xent               TSX1    KPE$ERROR
         2 000047   000000 011000                    NOP     0

      184     4957                   /* No dump on the disk */
      185     4958    2              ALTRETURN;

   4958  2 000050   000000 702200 xent               TSX2  ! X66_AALT

      186     4959    2              END;
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:37   
      187     4960    2           IF GJA_NODE#=0 THEN DO; /* Get node from diskid data */

   4960  2 000051   000000 235000 xsym               LDA     GJA_NODE#
         2 000052   000071 601000 2                  TNZ     USE_100

      188     4961    2              FPT_NODEINFO.V.NODENAME# =

   4961  2 000053   200016 237100                    LDAQ    DUMPMSG+11,,AUTO
         2 000054   000004 757000 xsym               STAQ    FPT_NODEINFO+4

      189     4962    2                ADDR(DUMPMSG.DATA)->DISKID.DESTINATION_NODE;
      190     4963    2              GJA_NODE# = 100; /* Presume 100 if nothing works */

   4963  2 000055   000144 235007                    LDA     100,DL
         2 000056   000000 755000 xsym               STA     GJA_NODE#

      191     4964    2              CALL M$NODEINFO (FPT_NODEINFO) ALTRET (USE_100);

   4964  2 000057   000000 630400 xsym               EPPR0   FPT_NODEINFO
         2 000060   560031 713400                    CLIMB   alt,+57369
         2 000061   400400 401760                    pmme    nvectors=2
         2 000062   000071 702000 2                  TSX2    USE_100

      192     4965    2              IF NOT VLR_NODEINFO.HOST# THEN GJA_NODE# = VLR_NODEINFO.NODENUM#;

   4965  2 000063   000002 236000 xsym               LDQ     VLR_NODEINFO+2
         2 000064   000400 316003                    CANQ    256,DU
         2 000065   000071 601000 2                  TNZ     USE_100

   4965  2 000066   000002 236000 xsym               LDQ     VLR_NODEINFO+2
         2 000067   000033 772000                    QRL     27
         2 000070   000000 756000 xsym               STQ     GJA_NODE#

   4965  2 000071                       USE_100      null
      193     4966    2   USE_100: ;
      194     4967    2              END;

PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:38   
      195     4968    1           RVBUFSECT=%(GI_RVBUF_LOC+256)/128;   /* Second page of RVBUF */

   4968  2 000071   000006 235007                    LDA     6,DL
         2 000072   200206 755100                    STA     RVBUFSECT,,AUTO

      196     4969    1           CALL GID$RDDUMP(ADDR(DUMPMSG.DATA),RVBUFSECT,1);

   4969  2 000073   200006 630500                    EPPR0   DUMPMSG+3,,AUTO
         2 000074   200210 450500                    STP0    RVBUFSECT+2,,AUTO
         2 000075   000012 236000 3                  LDQ     10
         2 000076   200213 756100                    STQ     RVBUFSECT+5,,AUTO
         2 000077   200206 631500                    EPPR1   RVBUFSECT,,AUTO
         2 000100   200212 451500                    STP1    RVBUFSECT+4,,AUTO
         2 000101   200210 633500                    EPPR3   RVBUFSECT+2,,AUTO
         2 000102   200211 453500                    STP3    RVBUFSECT+3,,AUTO
         2 000103   200211 630500                    EPPR0   RVBUFSECT+3,,AUTO
         2 000104   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000105   000000 701000 xent               TSX1    GID$RDDUMP
         2 000106   000000 011000                    NOP     0

      197     4970    1           DUMPMSG.TYPE=%GI_DUMP_RQST;

   4970  2 000107   001000 236003                    LDQ     512,DU
         2 000110   200004 552140                    STBQ    DUMPMSG+1,'40'O,AUTO

      198     4971    1           DUMPMSG.FEX=GJA_NODE#;

   4971  2 000111   000000 720000 xsym               LXL0    GJA_NODE#
         2 000112   200004 440100                    SXL0    DUMPMSG+1,,AUTO

      199     4972    1           DUMPMSG.DATASIZE=SIZEC(RVBUF);

   4972  2 000113   000030 221003                    LDX1    24,DU
         2 000114   200005 741100                    STX1    DUMPMSG+2,,AUTO

      200     4973    1           DUMPMSG.RPN=0;

PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:39   
   4973  2 000115   000000 222003                    LDX2    0,DU
         2 000116   200005 442100                    SXL2    DUMPMSG+2,,AUTO

      201     4974    1           CALL GIJ$WRT_FROG(DUMPMSG);

   4974  2 000117   200003 630500                    EPPR0   DUMPMSG,,AUTO
         2 000120   200210 450500                    STP0    RVBUFSECT+2,,AUTO
         2 000121   200210 630500                    EPPR0   RVBUFSECT+2,,AUTO
         2 000122   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000123   000000 701000 xent               TSX1    GIJ$WRT_FROG
         2 000124   000000 011000                    NOP     0

      202     4975    1           RETURN;

   4975  2 000125   000000 702200 xent               TSX2  ! X66_ARET
      203     4976
      204     4977    1   END GIJ$INITDUMP;
      205     4978        %EOD;

PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:40   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GIJ$INITDUMP.
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:41   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(4716)  r     1 DUMPMSG                  206-0-0/w UBIN        r     1 RVBUFSECT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)   r     1 FPT_NODEINFO               0-0-0/w SBIN        r     1 GID_VSEC_DUMP
     0-0-0/w UBIN        r     1 GJA_NODE#                  0-0-0/w STRC        r     1 KP_ERRORCODE
     0-0-0/d STRC(216)   r     1 VLR_NODEINFO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(2232)  r     1 DISKID                     0-0-0/w STRC(216)   r     1 RVBUF


   Procedure GIJ$INITDUMP requires 86 words for executable code.
   Procedure GIJ$INITDUMP requires 142 words of local(AUTO) storage.
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:42   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:43   
          MINI XREF LISTING

DISKID.DESTINATION_NODE
      4893**DCL      4961>>ASSIGN
DISKID.VERITY
      4889**DCL      4951>>IF
DUMPMSG
      4828**DCL      4974<>CALL
DUMPMSG.DATA
      4847**DCL      4949--CALL     4951--IF       4961--ASSIGN   4969--CALL
DUMPMSG.DATASIZE
      4845**DCL      4972<<ASSIGN
DUMPMSG.FEX
      4844**DCL      4971<<ASSIGN
DUMPMSG.RPN
      4846**DCL      4973<<ASSIGN
DUMPMSG.TYPE
      4840**DCL      4970<<ASSIGN
FPT_NODEINFO
      1088**DCL      4964<>CALL
FPT_NODEINFO.V.NODENAME#
      1088**DCL      4961<<ASSIGN
GID$CHKDMP
      4802**DCL-ENT  4948--CALL
GID$DISKIO
      4803**DCL-ENT  4949--CALL
GID$RDDUMP
      4801**DCL-ENT  4969--CALL
GID_VSEC_DUMP
      4886**DCL      4955>>IF       4955>>IF
GIJ$WRT_FROG
      4800**DCL-ENT  4974--CALL
GJA_NODE#
      4885**DCL      4960>>IF       4963<<ASSIGN   4965<<ASSIGN   4971>>ASSIGN
PL6.E3A0      #002=GIJ$INITDUMP File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:18 Page:44   
KPE$ERROR
      4804**DCL-ENT  4952--CALL     4956--CALL
KP_ERRORCODE.ERR#
      4941**DCL      4947<<ASSIGN   4950>>IF
KP_EXIT.V.STEPCC#
       942**DCL       942--REDEF
KP_INBUF
       864**DCL       864--REDEF
KP_RU_KEY
       872**DCL       873--REDEF
KP_RU_KEY.NODE
       872**DCL       872--REDEF
KP_RU_KEY.PAGE
       873**DCL       873--REDEF
KP_RU_OUTBUF
       866**DCL       866--REDEF
M$NODEINFO
       662**DCL-ENT  4964--CALL
RVBUF
      4862**DCL      4972--ASSIGN
RVBUFSECT
      4883**DCL      4968<<ASSIGN   4969<>CALL
USE_100
      4965**LABEL    4964--CALLALT
VLR_NODEINFO.HOST#
      1100**DCL      4965>>IF
VLR_NODEINFO.NODENUM#
      1100**DCL      4965>>ASSIGN

PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:45   
      206        1        /*T***********************************************************/
      207        2        /*T*                                                         */
      208        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      209        4        /*T*                                                         */
      210        5        /*T***********************************************************/
      211        6        /*F*    Name: GIJ$DUMPMSG
      212        7                Call: CALL GIJ$DUMPMSG(dumpmsg);
      213        8                Purpose:
      214        9                   This routine is called whenever NA receives a dump message
      215       10                from FROG.  If the message type is GI_DUMP_GRANT then the
      216       11                recovery buffer is sent to FROG.  If the message type is
      217       12                GI_DUMP_ACK then the next page of the dump is sent until the
      218       13                end of the dump is reached when GI_DUMP_EOD is sent.
      219       14        */
      220       15
      221       16        GIJ$DUMPMSG: PROC(DUMPMSG);
      222       17
      223       18        %INCLUDE CP_6;
      224       99        %INCLUDE IR_DATA_M;
      225      263        %GI_RCVR_EQU;
      226      275        %INCLUDE KL_MACRO_C;
      227     3627        %INCLUDE KP_MACRO_C;
      228     3836        %KP_ENTRIES;
      229     3942
      230     3943
      231     3944    1   DCL GID$RDDUMP ENTRY(3);
      232     3945    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
      233     3946        %KL_DUMPMSG (FPTN=DUMPMSG,
      234     3947                     STCLASS=PARAM,
      235     3948                     DSIZE=0);
      236     3989
      237     3990        %KL_DUMPMSG (FPTN=TO_HOST,
      238     3991                     STCLASS=SYMREF,
      239     3992                     DSIZE=2048);
      240     4033        %KL_DUMPMSG (FPTN=REPLY REDEF TO_HOST,
      241     4034                     STCLASS=,
      242     4035                     DSIZE=2048);
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:46   
      243     4076
      244     4077    1   DCL DMPX UBIN;
      245     4078    1   DCL I SBIN;
      246     4079        %RV_FEP_BUFF (FPTN=RVBASE,STCLASS=BASED);
      247     4112
      248     4113    1   DCL CURPAGE SBIN STATIC;
      249     4114    1   DCL NUMPGS SBIN STATIC INIT(1);
      250     4115    1   DCL CURSECTOR UBIN STATIC;
      251     4116    1   DCL FIRSTACK BIT(1) STATIC ALIGNED;
      252     4117        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=STATIC);
      253     4150    1   DCL BITMAP(0:4095) BIT(1) UNAL STATIC;
      254     4151    1   DCL BYTMAP(0:511) REDEF BITMAP UBIN(8) UNAL;
      255     4152    1   DCL 1 BBYTMAP(0:511) BASED CALIGNED, 2 * BIT(1), 2 N UBIN(8) UNAL;
      256     4153
      257     4154    1   DCL GJA_NODE# UBIN SYMREF;
      258     4155
      259     4156
      260     4157        %EJECT;
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:47   
      261     4158
      262     4159    1           REPLY.FEX=GJA_NODE#;
      263     4160    2           DO CASE(DUMPMSG.TYPE);
      264     4161    2            CASE(%GI_DUMP_GRANT);
      265     4162    2              CURSECTOR=%GI_RVBUF_LOC/128;
      266     4163    2              CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,2);
      267     4164    2              REPLY.TYPE=%GI_DUMP_RVBUF;
      268     4165    2              REPLY.DATASIZE=SIZEC(RVBUF)+512;
      269     4166    2              REPLY.RPN=%GI_RVBUF_LOC/256;
      270     4167    2              RVBUF=ADDR(REPLY.DATA)->RVBASE;
      271     4168    2              CALL GIJ$WRT_FROG(REPLY);
      272     4169    2              FIRSTACK='1'B;
      273     4170    3              DO I=0 TO 511;
      274     4171    3                 BYTMAP(I) = ADDR(RVBUF.DUMPMAP)->BBYTMAP.N(I);
      275     4172    3                 END;
      276     4173
      277     4174    2            CASE(%GI_DUMP_ACK);
      278     4175    3              IF FIRSTACK THEN DO;
      279     4176    3                 CURPAGE=0;
      280     4177    3                 CURSECTOR=0;
      281     4178    3                 FIRSTACK='0'B;
      282     4179    3                 NUMPGS=%GI_PGS_PER_BIT;   /* Pipeline size                      */
      283     4180    3                 END;
      284     4181    3              DO I=1 TO NUMPGS;
      285     4182    3                 IF MOD(CURPAGE,%GI_PGS_PER_BIT)=0
      286     4183    3                  THEN                     /* Time for next bit                  */
      287     4184    4                  DO;
      288     4185    4                    DMPX=CURPAGE/%GI_PGS_PER_BIT;
      289     4186    5                    DO WHILE(NOT BITMAP(DMPX));
      290     4187    5                       DMPX=DMPX+1;
      291     4188    5                       END;
      292     4189    5                    IF DMPX>=%GI_BITMAP_SIZE THEN DO;
      293     4190    5   DUMP_EOD: ;
      294     4191    5                       REPLY.TYPE=%GI_DUMP_EOD;
      295     4192    5                       REPLY.DATASIZE=1;
      296     4193    5                       CALL GIJ$WRT_FROG(REPLY);
      297     4194    5                       NUMPGS=0;
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:48   
      298     4195    5                       RETURN;
      299     4196    5                       END;
      300     4197    4                    CURPAGE=DMPX*%GI_PGS_PER_BIT;
      301     4198    4                    SUBSTR(REPLY.DATA,SIZEV(REPLY.DATA),1)=BINASC(256);
      302     4199    4                    CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,%GI_PGS_PER_BIT);
      303     4200    4                    IF SUBSTR(REPLY.DATA,SIZEV(REPLY.DATA),1)=BINASC(256)
      304     4201    4                    THEN GOTO DUMP_EOD;
      305     4202    4                    REPLY.TYPE=%GI_DUMP_PAGE;
      306     4203    4                    REPLY.DATASIZE=512+512;
      307     4204    4                    END;
      308     4205    3                 REPLY.RPN=CURPAGE+256*(CURPAGE/256);
      309     4206    3                 CALL GIJ$WRT_FROG(REPLY);
      310     4207    3                 REPLY.DATA = SUBSTR(REPLY.DATA,512);
      311     4208    3                 CURSECTOR=CURSECTOR+2;
      312     4209    3                 CURPAGE=CURPAGE+1;
      313     4210    3                 END;
      314     4211    2            END;
      315     4212    1           RETURN;
      316     4213    1   END GIJ$DUMPMSG;
      317     4214        %EOD;

PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:49   
--  Include file information  --

   KP_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GIJ$DUMPMSG.

   Procedure GIJ$DUMPMSG requires 144 words for executable code.
   Procedure GIJ$DUMPMSG requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:50   

 Object Unit name= GIJ$DUMPMSG                                File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:19:02.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   252    374  GIJ$DUMPMSG
    2   Proc  even  none   144    220  GIJ$DUMPMSG
    3  RoData even  none     8     10  GIJ$DUMPMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  GIJ$DUMPMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 GID$RDDUMP
 yes     yes           Std       1 GIJ$WRT_FROG
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:51   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TO_HOST                               GJA_NODE#
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:52   


      206        1        /*T***********************************************************/
      207        2        /*T*                                                         */
      208        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      209        4        /*T*                                                         */
      210        5        /*T***********************************************************/
      211        6        /*F*    Name: GIJ$DUMPMSG
      212        7                Call: CALL GIJ$DUMPMSG(dumpmsg);
      213        8                Purpose:
      214        9                   This routine is called whenever NA receives a dump message
      215       10                from FROG.  If the message type is GI_DUMP_GRANT then the
      216       11                recovery buffer is sent to FROG.  If the message type is
      217       12                GI_DUMP_ACK then the next page of the dump is sent until the
      218       13                end of the dump is reached when GI_DUMP_EOD is sent.
      219       14        */
      220       15
      221       16        GIJ$DUMPMSG: PROC(DUMPMSG);

     16  2 000000   000000 700200 xent  GIJ$DUMPMSG  TSX0  ! X66_AUTO_1
         2 000001   000012 000001                    ZERO    10,1

      222       17
      223       18        %INCLUDE CP_6;
      224       99        %INCLUDE IR_DATA_M;
      225      263        %GI_RCVR_EQU;
      226      275        %INCLUDE KL_MACRO_C;
      227     3627        %INCLUDE KP_MACRO_C;
      228     3836        %KP_ENTRIES;
      229     3942
      230     3943
      231     3944    1   DCL GID$RDDUMP ENTRY(3);
      232     3945    1   DCL GIJ$WRT_FROG ENTRY(1) ALTRET;
      233     3946        %KL_DUMPMSG (FPTN=DUMPMSG,
      234     3947                     STCLASS=PARAM,
      235     3948                     DSIZE=0);
      236     3989
      237     3990        %KL_DUMPMSG (FPTN=TO_HOST,
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:53   
      238     3991                     STCLASS=SYMREF,
      239     3992                     DSIZE=2048);
      240     4033        %KL_DUMPMSG (FPTN=REPLY REDEF TO_HOST,
      241     4034                     STCLASS=,
      242     4035                     DSIZE=2048);
      243     4076
      244     4077    1   DCL DMPX UBIN;
      245     4078    1   DCL I SBIN;
      246     4079        %RV_FEP_BUFF (FPTN=RVBASE,STCLASS=BASED);
      247     4112
      248     4113    1   DCL CURPAGE SBIN STATIC;
      249     4114    1   DCL NUMPGS SBIN STATIC INIT(1);
      250     4115    1   DCL CURSECTOR UBIN STATIC;
      251     4116    1   DCL FIRSTACK BIT(1) STATIC ALIGNED;
      252     4117        %RV_FEP_BUFF (FPTN=RVBUF,STCLASS=STATIC);
      253     4150    1   DCL BITMAP(0:4095) BIT(1) UNAL STATIC;
      254     4151    1   DCL BYTMAP(0:511) REDEF BITMAP UBIN(8) UNAL;
      255     4152    1   DCL 1 BBYTMAP(0:511) BASED CALIGNED, 2 * BIT(1), 2 N UBIN(8) UNAL;
      256     4153
      257     4154    1   DCL GJA_NODE# UBIN SYMREF;
      258     4155
      259     4156
      260     4157        %EJECT;
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:54   
      261     4158
      262     4159    1           REPLY.FEX=GJA_NODE#;

   4159  2 000002   000000 720000 xsym               LXL0    GJA_NODE#
         2 000003   000001 440000 xsym               SXL0    TO_HOST+1

      263     4160    2           DO CASE(DUMPMSG.TYPE);

   4160  2 000004   200003 470500                    LDP0    @DUMPMSG,,AUTO
         2 000005   000001 236100                    LDQ     1,,PR0
         2 000006   000033 772000                    QRL     27
         2 000007   000006 116007                    CMPQ    6,DL
         2 000010   000012 602006 2                  TNC     s:4160+6,QL
         2 000011   000217 710000 2                  TRA     s:4212
         2 000012   000217 710000 2                  TRA     s:4212
         2 000013   000217 710000 2                  TRA     s:4212
         2 000014   000020 710000 2                  TRA     s:4162
         2 000015   000217 710000 2                  TRA     s:4212
         2 000016   000217 710000 2                  TRA     s:4212
         2 000017   000075 710000 2                  TRA     s:4175

      264     4161    2            CASE(%GI_DUMP_GRANT);

      265     4162    2              CURSECTOR=%GI_RVBUF_LOC/128;

   4162  2 000020   000004 235007                    LDA     4,DL
         2 000021   000002 755000 1                  STA     CURSECTOR

      266     4163    2              CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,2);

   4163  2 000022   000000 236000 3                  LDQ     0
         2 000023   200006 756100                    STQ     I+1,,AUTO
         2 000024   000002 237000 3                  LDAQ    2
         2 000025   200010 757100                    STAQ    I+3,,AUTO
         2 000026   200006 631500                    EPPR1   I+1,,AUTO
         2 000027   200007 451500                    STP1    I+2,,AUTO
         2 000030   200007 630500                    EPPR0   I+2,,AUTO
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:55   
         2 000031   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000032   000000 701000 xent               TSX1    GID$RDDUMP
         2 000033   000000 011000                    NOP     0

      267     4164    2              REPLY.TYPE=%GI_DUMP_RVBUF;

   4164  2 000034   003000 236003                    LDQ     1536,DU
         2 000035   000001 552040 xsym               STBQ    TO_HOST+1,'40'O

      268     4165    2              REPLY.DATASIZE=SIZEC(RVBUF)+512;

   4165  2 000036   002030 220003                    LDX0    1048,DU
         2 000037   000002 740000 xsym               STX0    TO_HOST+2

      269     4166    2              REPLY.RPN=%GI_RVBUF_LOC/256;

   4166  2 000040   000002 221003                    LDX1    2,DU
         2 000041   000002 441000 xsym               SXL1    TO_HOST+2

      270     4167    2              RVBUF=ADDR(REPLY.DATA)->RVBASE;

   4167  2 000042   000000 100400                    MLR     fill='000'O
         2 000043   000003 001030 xsym               ADSC9   TO_HOST+3                cn=0,n=536
         2 000044   000004 001030 1                  ADSC9   RVBUF                    cn=0,n=536

      271     4168    2              CALL GIJ$WRT_FROG(REPLY);

   4168  2 000045   000004 630400 3                  EPPR0   4
         2 000046   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000047   000000 701000 xent               TSX1    GIJ$WRT_FROG
         2 000050   000000 011000                    NOP     0

      272     4169    2              FIRSTACK='1'B;

   4169  2 000051   400000 236003                    LDQ     -131072,DU
         2 000052   000003 756000 1                  STQ     FIRSTACK

PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:56   
      273     4170    3              DO I=0 TO 511;

   4170  2 000053   200005 450100                    STZ     I,,AUTO

      274     4171    3                 BYTMAP(I) = ADDR(RVBUF.DUMPMAP)->BBYTMAP.N(I);

   4171  2 000054   200005 236100                    LDQ     I,,AUTO
         2 000055   000011 402007                    MPY     9,DL
         2 000056   000000 116003                    CMPQ    0,DU
         2 000057   000061 605000 2                  TPL     s:4171+5
         2 000060   000044 036003                    ADLQ    36,DU
         2 000061   200005 235100                    LDA     I,,AUTO
         2 000062   000003 735000                    ALS     3
         2 000063   000065 605000 2                  TPL     s:4171+9
         2 000064   000044 035003                    ADLA    36,DU
         2 000065   003005 060406                    CSL     bolr='003'O
         2 000066   000004 010010 1                  BDSC    RVBUF,Q                  by=0,bit=1,n=8
         2 000067   000212 000010 1                  BDSC    BITMAP,A                 by=0,bit=0,n=8

      275     4172    3                 END;

   4172  2 000070   200005 054100                    AOS     I,,AUTO
         2 000071   200005 235100                    LDA     I,,AUTO
         2 000072   000777 115007                    CMPA    511,DL
         2 000073   000054 604400 2                  TMOZ    s:4171
         2 000074   000217 710000 2                  TRA     s:4212

      276     4173
      277     4174    2            CASE(%GI_DUMP_ACK);

      278     4175    3              IF FIRSTACK THEN DO;

   4175  2 000075   000003 234000 1                  SZN     FIRSTACK
         2 000076   000104 605000 2                  TPL     s:4181

      279     4176    3                 CURPAGE=0;

PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:57   
   4176  2 000077   000000 450000 1                  STZ     CURPAGE

      280     4177    3                 CURSECTOR=0;

   4177  2 000100   000002 450000 1                  STZ     CURSECTOR

      281     4178    3                 FIRSTACK='0'B;

   4178  2 000101   000003 450000 1                  STZ     FIRSTACK

      282     4179    3                 NUMPGS=%GI_PGS_PER_BIT;   /* Pipeline size                      */

   4179  2 000102   000004 235007                    LDA     4,DL
         2 000103   000001 755000 1                  STA     NUMPGS

      283     4180    3                 END;

      284     4181    3              DO I=1 TO NUMPGS;

   4181  2 000104   000001 235007                    LDA     1,DL
         2 000105   200005 755100                    STA     I,,AUTO
         2 000106   000214 710000 2                  TRA     s:4210+1

      285     4182    3                 IF MOD(CURPAGE,%GI_PGS_PER_BIT)=0

   4182  2 000107   000000 236000 1                  LDQ     CURPAGE
         2 000110   000004 506007                    DIV     4,DL
         2 000111   000044 733000                    LRS     36
         2 000112   000000 116003                    CMPQ    0,DU
         2 000113   000172 601000 2                  TNZ     s:4205

      286     4183    3                  THEN                     /* Time for next bit                  */
      287     4184    4                  DO;

      288     4185    4                    DMPX=CURPAGE/%GI_PGS_PER_BIT;

   4185  2 000114   000000 236000 1                  LDQ     CURPAGE
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:58   
         2 000115   000004 506007                    DIV     4,DL
         2 000116   200004 756100                    STQ     DMPX,,AUTO

      289     4186    5                    DO WHILE(NOT BITMAP(DMPX));

   4186  2 000117   000123 710000 2                  TRA     s:4188

      290     4187    5                       DMPX=DMPX+1;

   4187  2 000120   200004 235100                    LDA     DMPX,,AUTO
         2 000121   000001 035007                    ADLA    1,DL
         2 000122   200004 755100                    STA     DMPX,,AUTO

      291     4188    5                       END;

   4188  2 000123   200004 235100                    LDA     DMPX,,AUTO
         2 000124   000000 066405                    CMPB    filb='0'B
         2 000125   000212 000001 1                  BDSC    BITMAP,A                 by=0,bit=0,n=1
         2 000126   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 000127   000120 600000 2                  TZE     s:4187

      292     4189    5                    IF DMPX>=%GI_BITMAP_SIZE THEN DO;

   4189  2 000130   010000 115007                    CMPA    4096,DL
         2 000131   000144 602000 2                  TNC     s:4197

      293     4190    5   DUMP_EOD: ;

   4190  2 000132                       DUMP_EOD     null
      294     4191    5                       REPLY.TYPE=%GI_DUMP_EOD;

   4191  2 000132   006000 236003                    LDQ     3072,DU
         2 000133   000001 552040 xsym               STBQ    TO_HOST+1,'40'O

      295     4192    5                       REPLY.DATASIZE=1;

   4192  2 000134   000001 220003                    LDX0    1,DU
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:59   
         2 000135   000002 740000 xsym               STX0    TO_HOST+2

      296     4193    5                       CALL GIJ$WRT_FROG(REPLY);

   4193  2 000136   000004 630400 3                  EPPR0   4
         2 000137   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000140   000000 701000 xent               TSX1    GIJ$WRT_FROG
         2 000141   000000 011000                    NOP     0

      297     4194    5                       NUMPGS=0;

   4194  2 000142   000001 450000 1                  STZ     NUMPGS

      298     4195    5                       RETURN;

   4195  2 000143   000000 702200 xent               TSX2  ! X66_ARET

      299     4196    5                       END;
      300     4197    4                    CURPAGE=DMPX*%GI_PGS_PER_BIT;

   4197  2 000144   000002 735000                    ALS     2
         2 000145   000000 755000 1                  STA     CURPAGE

      301     4198    4                    SUBSTR(REPLY.DATA,SIZEV(REPLY.DATA),1)=BINASC(256);

   4198  2 000146   000400 236007                    LDQ     256,DL
         2 000147   001002 552004 xsym               STBQ    TO_HOST+514,'04'O

      302     4199    4                    CALL GID$RDDUMP(ADDR(REPLY.DATA),CURSECTOR,%GI_PGS_PER_BIT);

   4199  2 000150   000000 236000 3                  LDQ     0
         2 000151   200006 756100                    STQ     I+1,,AUTO
         2 000152   000006 237000 3                  LDAQ    6
         2 000153   200010 757100                    STAQ    I+3,,AUTO
         2 000154   200006 630500                    EPPR0   I+1,,AUTO
         2 000155   200007 450500                    STP0    I+2,,AUTO
         2 000156   200007 630500                    EPPR0   I+2,,AUTO
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:60   
         2 000157   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000160   000000 701000 xent               TSX1    GID$RDDUMP
         2 000161   000000 011000                    NOP     0

      303     4200    4                    IF SUBSTR(REPLY.DATA,SIZEV(REPLY.DATA),1)=BINASC(256)

   4200  2 000162   001002 236000 xsym               LDQ     TO_HOST+514
         2 000163   000777 376007                    ANQ     511,DL
         2 000164   000400 116007                    CMPQ    256,DL
         2 000165   000132 600000 2                  TZE     DUMP_EOD

      304     4201    4                    THEN GOTO DUMP_EOD;
      305     4202    4                    REPLY.TYPE=%GI_DUMP_PAGE;

   4202  2 000166   004000 236003                    LDQ     2048,DU
         2 000167   000001 552040 xsym               STBQ    TO_HOST+1,'40'O

      306     4203    4                    REPLY.DATASIZE=512+512;

   4203  2 000170   002000 220003                    LDX0    1024,DU
         2 000171   000002 740000 xsym               STX0    TO_HOST+2

      307     4204    4                    END;

      308     4205    3                 REPLY.RPN=CURPAGE+256*(CURPAGE/256);

   4205  2 000172   000000 236000 1                  LDQ     CURPAGE
         2 000173   000400 506007                    DIV     256,DL
         2 000174   000010 736000                    QLS     8
         2 000175   000000 036000 1                  ADLQ    CURPAGE
         2 000176   000000 620006                    EAX0    0,QL
         2 000177   000002 440000 xsym               SXL0    TO_HOST+2

      309     4206    3                 CALL GIJ$WRT_FROG(REPLY);

   4206  2 000200   000004 630400 3                  EPPR0   4
         2 000201   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:61   
         2 000202   000000 701000 xent               TSX1    GIJ$WRT_FROG
         2 000203   000000 011000                    NOP     0

      310     4207    3                 REPLY.DATA = SUBSTR(REPLY.DATA,512);

   4207  2 000204   040000 100400                    MLR     fill='040'O
         2 000205   000203 003000 xsym               ADSC9   TO_HOST+131              cn=0,n=1536
         2 000206   000003 004000 xsym               ADSC9   TO_HOST+3                cn=0,n=2048

      311     4208    3                 CURSECTOR=CURSECTOR+2;

   4208  2 000207   000002 235000 1                  LDA     CURSECTOR
         2 000210   000002 035007                    ADLA    2,DL
         2 000211   000002 755000 1                  STA     CURSECTOR

      312     4209    3                 CURPAGE=CURPAGE+1;

   4209  2 000212   000000 054000 1                  AOS     CURPAGE

      313     4210    3                 END;

   4210  2 000213   200005 054100                    AOS     I,,AUTO
         2 000214   200005 236100                    LDQ     I,,AUTO
         2 000215   000001 116000 1                  CMPQ    NUMPGS
         2 000216   000107 604400 2                  TMOZ    s:4182

      314     4211    2            END;

      315     4212    1           RETURN;

   4212  2 000217   000000 702200 xent               TSX2  ! X66_ARET
      316     4213    1   END GIJ$DUMPMSG;
      317     4214        %EOD;

PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:62   
--  Include file information  --

   KP_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GIJ$DUMPMSG.
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:63   

 **** Variables and constants ****

  ****  Section 001  Data  GIJ$DUMPMSG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   212-0-0/b BIT         r     1 BITMAP(0:4095)           212-0-0/b UBIN(8)     r     1 BYTMAP(0:511)
     0-0-0/w SBIN        r     1 CURPAGE                    2-0-0/w UBIN        r     1 CURSECTOR
     3-0-0/w BIT         r     1 FIRSTACK                   1-0-0/w SBIN        r     1 NUMPGS
     4-0-0/w STRC(4824)  r     1 RVBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DUMPMSG                   4-0-0/w UBIN        r     1 DMPX
    *0-0-0/w ASTR(108)   r     1 DUMPMSG                    5-0-0/w SBIN        r     1 I

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 GJA_NODE#                  0-0-0/w STRC(18540) r     1 REPLY
     0-0-0/w STRC(18540) r     1 TO_HOST

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(9)     r     1 BBYTMAP(0:511)             0-0-0/w STRC(4824)  r     1 RVBASE

PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:64   

   Procedure GIJ$DUMPMSG requires 144 words for executable code.
   Procedure GIJ$DUMPMSG requires 10 words of local(AUTO) storage.
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:65   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:66   
          MINI XREF LISTING

BBYTMAP.N
      4152**DCL      4171>>ASSIGN
BITMAP
      4150**DCL      4151--REDEF    4186>>DOWHILE
BYTMAP
      4151**DCL      4171<<ASSIGN
CURPAGE
      4113**DCL      4176<<ASSIGN   4182>>IF       4185>>ASSIGN   4197<<ASSIGN   4205>>ASSIGN   4205>>ASSIGN
      4209<<ASSIGN   4209>>ASSIGN
CURSECTOR
      4115**DCL      4162<<ASSIGN   4163<>CALL     4177<<ASSIGN   4199<>CALL     4208<<ASSIGN   4208>>ASSIGN
DMPX
      4077**DCL      4185<<ASSIGN   4186>>DOWHILE  4187<<ASSIGN   4187>>ASSIGN   4189>>IF       4197>>ASSIGN
DUMPMSG
      3968**DCL        16--PROC
DUMPMSG.DATASIZE
      3985**DCL      3987--IMP-SIZ
DUMPMSG.TYPE
      3980**DCL      4160>>DOCASE
DUMP_EOD
      4190**LABEL    4201--GOTO
FIRSTACK
      4116**DCL      4169<<ASSIGN   4175>>IF       4178<<ASSIGN
GID$RDDUMP
      3944**DCL-ENT  4163--CALL     4199--CALL
GIJ$WRT_FROG
      3945**DCL-ENT  4168--CALL     4193--CALL     4206--CALL
GJA_NODE#
      4154**DCL      4159>>ASSIGN
I
      4078**DCL      4170<<DOINDEX  4171>>ASSIGN   4171>>ASSIGN   4181<<DOINDEX
NUMPGS
PL6.E3A0      #003=GIJ$DUMPMSG File=KPD$UNDUMP.:E05TSI                           WED 07/30/97 01:19 Page:67   
      4114**DCL      4179<<ASSIGN   4181>>DOINDEX  4194<<ASSIGN
REPLY
      4055**DCL      4168<>CALL     4193<>CALL     4206<>CALL
REPLY.DATA
      4074**DCL      4163--CALL     4167--ASSIGN   4198<<ASSIGN   4198--ASSIGN   4199--CALL     4200>>IF
      4200--IF       4207<<ASSIGN   4207>>ASSIGN
REPLY.DATASIZE
      4072**DCL      4165<<ASSIGN   4192<<ASSIGN   4203<<ASSIGN
REPLY.FEX
      4071**DCL      4159<<ASSIGN
REPLY.RPN
      4073**DCL      4166<<ASSIGN   4205<<ASSIGN
REPLY.TYPE
      4067**DCL      4164<<ASSIGN   4191<<ASSIGN   4202<<ASSIGN
RVBASE
      4092**DCL      4167>>ASSIGN
RVBUF
      4130**DCL      4165--ASSIGN   4167<<ASSIGN
RVBUF.DUMPMAP
      4135**DCL      4171--ASSIGN
TO_HOST
      4012**DCL      4055--REDEF

PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:68   
      318        1        /*T***********************************************************/
      319        2        /*T*                                                         */
      320        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      321        4        /*T*                                                         */
      322        5        /*T***********************************************************/
      323        6        /*F*    NAME: GIJ$WRT_FROG
      324        7                Purpose:  Send message from NA to FROG for dumping FEPs.
      325        8                Call:    CALL GIJ$WRT_FROG(BUF) ALTRET;
      326        9                Description:  This routine sends a message to KFD$DUMPMSG in
      327       10                FROG.  Major sights along the way are GJA$NETWORK_MANAGER,
      328       11                KLI$AMSG and KFC$CSCGMSG.  The argument to this routine is
      329       12                a buffer described by the KL_DUMPMSG macro in KL_MACRO_C.
      330       13                DATASIZE in KL_DUMPMSG must be set by the caller.
      331       14                                                                           */
      332       15
      333       16        GIJ$WRT_FROG: PROC(BUF) ALTRET;
      334       17
      335       18        %INCLUDE KL_MACRO_C;
      336     3370        %INCLUDE KL_AFCN_C;
      337     3471
      338     3472        %KL_DUMPMSG (FPTN=BUF,STCLASS=PARAM);
      339     3513    1   DCL KFD$DUMPMSG ENTRY(1);
      340     3514
      341     3515        %EJECT;
PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:69   
      342     3516
      343     3517    1           CALL KFD$DUMPMSG(BUF);
      344     3518    1           RETURN;
      345     3519
      346     3520    1   END GIJ$WRT_FROG;
      347     3521        %EOD;

PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:70   
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GIJ$WRT_FROG.

   Procedure GIJ$WRT_FROG requires 7 words for executable code.
   Procedure GIJ$WRT_FROG requires 4 words of local(AUTO) storage.

PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:71   

 Object Unit name= GIJ$WRT_FROG                               File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:19:21.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     7      7  GIJ$WRT_FROG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  GIJ$WRT_FROG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KFD$DUMPMSG
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:72   


      318        1        /*T***********************************************************/
      319        2        /*T*                                                         */
      320        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      321        4        /*T*                                                         */
      322        5        /*T***********************************************************/
      323        6        /*F*    NAME: GIJ$WRT_FROG
      324        7                Purpose:  Send message from NA to FROG for dumping FEPs.
      325        8                Call:    CALL GIJ$WRT_FROG(BUF) ALTRET;
      326        9                Description:  This routine sends a message to KFD$DUMPMSG in
      327       10                FROG.  Major sights along the way are GJA$NETWORK_MANAGER,
      328       11                KLI$AMSG and KFC$CSCGMSG.  The argument to this routine is
      329       12                a buffer described by the KL_DUMPMSG macro in KL_MACRO_C.
      330       13                DATASIZE in KL_DUMPMSG must be set by the caller.
      331       14                                                                           */
      332       15
      333       16        GIJ$WRT_FROG: PROC(BUF) ALTRET;

     16  0 000000   000000 700200 xent  GIJ$WRT_FROG TSX0  ! X66_AUTO_1
         0 000001   000004 000001                    ZERO    4,1

      334       17
      335       18        %INCLUDE KL_MACRO_C;
      336     3370        %INCLUDE KL_AFCN_C;
      337     3471
      338     3472        %KL_DUMPMSG (FPTN=BUF,STCLASS=PARAM);
      339     3513    1   DCL KFD$DUMPMSG ENTRY(1);
      340     3514
      341     3515        %EJECT;
PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:73   
      342     3516
      343     3517    1           CALL KFD$DUMPMSG(BUF);

   3517  0 000002   200003 630500                    EPPR0   @BUF,,AUTO
         0 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000004   000000 701000 xent               TSX1    KFD$DUMPMSG
         0 000005   000000 011000                    NOP     0

      344     3518    1           RETURN;

   3518  0 000006   000000 702200 xent               TSX2  ! X66_ARET
      345     3519
      346     3520    1   END GIJ$WRT_FROG;
      347     3521        %EOD;

PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:74   
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GIJ$WRT_FROG.
PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:75   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF                      *0-0-0/w ASTR(108)   r     1 BUF


   Procedure GIJ$WRT_FROG requires 7 words for executable code.
   Procedure GIJ$WRT_FROG requires 4 words of local(AUTO) storage.
PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:76   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=GIJ$WRT_FROG File=KPD$UNDUMP.:E05TSI                          WED 07/30/97 01:19 Page:77   
          MINI XREF LISTING

BUF
      3492**DCL        16--PROC     3517<>CALL
BUF.DATASIZE
      3509**DCL      3511--IMP-SIZ  3517>>CALL
KFD$DUMPMSG
      3513**DCL-ENT  3517--CALL

PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:78   
      348        1        /*T***********************************************************/
      349        2        /*T*                                                         */
      350        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      351        4        /*T*                                                         */
      352        5        /*T***********************************************************/
      353        6        /*F*    NAME: KFD$WRT_NA
      354        7                Purpose:  Send message to FROG from NA for dumping FEPs.
      355        8                Call:    CALL KFD$WRT_NA(BUF) ALTRET;
      356        9                Description:  This routine sends a message to NA.
      357       10                The argument to this routine is
      358       11                a buffer described by the KL_DUMPMSG macro in KL_MACRO_C.
      359       12                DATASIZE in KL_DUMPMSG must be set by the caller.
      360       13                                                                           */
      361       14
      362       15        KFD$WRT_NA: PROC(BUF,SIZE) ALTRET;
      363       16
      364       17        %INCLUDE KL_MACRO_C;
      365     3369        %INCLUDE KL_AFCN_C;
      366     3470
      367     3471        %KL_DUMPMSG (FPTN=BUF,STCLASS=PARAM);
      368     3512    1   DCL SIZE SBIN;
      369     3513
      370     3514        %KL_DUMPMSG (FPTN=TO_FEP,STCLASS=SYMREF,DSIZE=BUF.DATASIZE);
      371     3555    1   DCL KFD$DUMPMSG ENTRY(1);
      372     3556
      373     3557        %EJECT;
PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:79   
      374     3558
      375     3559    1           TO_FEP = BUF;
      376     3560    1           RETURN;
      377     3561
      378     3562    1   END KFD$WRT_NA;
      379     3563        %EOD;

PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:80   
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KFD$WRT_NA.

   Procedure KFD$WRT_NA requires 9 words for executable code.
   Procedure KFD$WRT_NA requires 6 words of local(AUTO) storage.

PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:81   

 Object Unit name= KFD$WRT_NA                                 File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:19:29.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     9     11  KFD$WRT_NA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  KFD$WRT_NA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     TO_FEP
PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:82   


      348        1        /*T***********************************************************/
      349        2        /*T*                                                         */
      350        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      351        4        /*T*                                                         */
      352        5        /*T***********************************************************/
      353        6        /*F*    NAME: KFD$WRT_NA
      354        7                Purpose:  Send message to FROG from NA for dumping FEPs.
      355        8                Call:    CALL KFD$WRT_NA(BUF) ALTRET;
      356        9                Description:  This routine sends a message to NA.
      357       10                The argument to this routine is
      358       11                a buffer described by the KL_DUMPMSG macro in KL_MACRO_C.
      359       12                DATASIZE in KL_DUMPMSG must be set by the caller.
      360       13                                                                           */
      361       14
      362       15        KFD$WRT_NA: PROC(BUF,SIZE) ALTRET;

     15  0 000000   000000 700200 xent  KFD$WRT_NA   TSX0  ! X66_AUTO_2
         0 000001   000006 000002                    ZERO    6,2

      363       16
      364       17        %INCLUDE KL_MACRO_C;
      365     3369        %INCLUDE KL_AFCN_C;
      366     3470
      367     3471        %KL_DUMPMSG (FPTN=BUF,STCLASS=PARAM);
      368     3512    1   DCL SIZE SBIN;
      369     3513
      370     3514        %KL_DUMPMSG (FPTN=TO_FEP,STCLASS=SYMREF,DSIZE=BUF.DATASIZE);
      371     3555    1   DCL KFD$DUMPMSG ENTRY(1);
      372     3556
      373     3557        %EJECT;
PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:83   
      374     3558
      375     3559    1           TO_FEP = BUF;

   3559  0 000002   200003 470500                    LDP0    @BUF,,AUTO
         0 000003   000002 220100                    LDX0    2,,PR0
         0 000004   000014 621010                    EAX1    12,X0
         0 000005   000040 100540                    MLR     fill='000'O
         0 000006   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         0 000007   000000 000011 xsym               ADSC9   TO_FEP                   cn=0,n=*X1

      376     3560    1           RETURN;

   3560  0 000010   000000 702200 xent               TSX2  ! X66_ARET
      377     3561
      378     3562    1   END KFD$WRT_NA;
      379     3563        %EOD;

PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:84   
--  Include file information  --

   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KFD$WRT_NA.
PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:85   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF                       4-0-0/w PTR         r     1 @SIZE
    *0-0-0/w ASTR(108)   r     1 BUF                       *0-0-0/w SBIN        r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(108)   r     1 TO_FEP


   Procedure KFD$WRT_NA requires 9 words for executable code.
   Procedure KFD$WRT_NA requires 6 words of local(AUTO) storage.
PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:86   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KFD$WRT_NA File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:87   
          MINI XREF LISTING

BUF
      3491**DCL        15--PROC     3559>>ASSIGN
BUF.DATASIZE
      3508**DCL      3510--IMP-SIZ  3553--IMP-SIZ  3559>>ASSIGN   3559>>ASSIGN
SIZE
      3512**DCL        15--PROC
TO_FEP
      3534**DCL      3559<<ASSIGN

PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:88   
      380        1        /*T***********************************************************/
      381        2        /*T*                                                         */
      382        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      383        4        /*T*                                                         */
      384        5        /*T***********************************************************/
      385        6        /*F*     NAME:          GID$RDDUMP
      386        7                 PURPOSE:       Read dump diskette.
      387        8                 DESCRIPTION:
      388        9          GID$RDDUMP is used after the LCP-6 monitor recovers from a dump and
      389       10          is ready to pass the dump image back to the host.
      390       11          Parameters:
      391       12            BUF$ - buffer address TO DUMP FROM.
      392       13            RSECT - sector number to dump into, relative to beginning of dump.
      393       14            NPGS - number of pages to dump.
      394       15        */
      395       16        GID$RDDUMP: PROC(BUF$,RSECT,NPGS);
      396       17        /**/
      397       18        /*  INCLUDE FILES  */
      398       19        /**/
      399       20        %INCLUDE KP_SUBS;
      400      204        /**/
      401      205        /*  Parameters  */
      402      206        /**/
      403      207    1   DCL BUF$ PTR;
      404      208    1   DCL RSECT SBIN;
      405      209    1   DCL NPGS SBIN;
      406      210        /**/
      407      211        /*  ENTRY DCLS  */
      408      212        /**/
      409      213    1   DCL GID$DISKIO ENTRY(4);
      410      214        /**/
      411      215        /*  AUTO  */
      412      216        /**/
      413      217    1   DCL NUM_BYTES UBIN;
      414      218        /**/
      415      219        /*  SYMREFS  */
      416      220        /**/
PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:89   
      417      221    1   DCL GID_VSEC_DUMP SBIN WORD SYMREF;
      418      222        /**/
      419      223    1           NUM_BYTES = NPGS*256*2;
      420      224    1           CALL GID$DISKIO (RSECT+GID_VSEC_DUMP,
      421      225    1             NUM_BYTES,
      422      226    1             BUF$,
      423      227    1             0);
      424      228    1           RETURN;
      425      229        /**/
      426      230    1           END GID$RDDUMP;
      427      231        %EOD;

PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:90   
--  Include file information  --

   KP_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GID$RDDUMP.

   Procedure GID$RDDUMP requires 22 words for executable code.
   Procedure GID$RDDUMP requires 14 words of local(AUTO) storage.

PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:91   

 Object Unit name= GID$RDDUMP                                 File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:19:38.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    22     26  GID$RDDUMP
    1  RoData even  none     1      1  GID$RDDUMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  GID$RDDUMP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 GID$DISKIO
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GID_VSEC_DUMP                         B_VECTNIL
PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:92   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:93   


      380        1        /*T***********************************************************/
      381        2        /*T*                                                         */
      382        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      383        4        /*T*                                                         */
      384        5        /*T***********************************************************/
      385        6        /*F*     NAME:          GID$RDDUMP
      386        7                 PURPOSE:       Read dump diskette.
      387        8                 DESCRIPTION:
      388        9          GID$RDDUMP is used after the LCP-6 monitor recovers from a dump and
      389       10          is ready to pass the dump image back to the host.
      390       11          Parameters:
      391       12            BUF$ - buffer address TO DUMP FROM.
      392       13            RSECT - sector number to dump into, relative to beginning of dump.
      393       14            NPGS - number of pages to dump.
      394       15        */
      395       16        GID$RDDUMP: PROC(BUF$,RSECT,NPGS);

     16  0 000000   000000 700200 xent  GID$RDDUMP   TSX0  ! X66_AUTO_3
         0 000001   000016 000003                    ZERO    14,3

      396       17        /**/
      397       18        /*  INCLUDE FILES  */
      398       19        /**/
      399       20        %INCLUDE KP_SUBS;
      400      204        /**/
      401      205        /*  Parameters  */
      402      206        /**/
      403      207    1   DCL BUF$ PTR;
      404      208    1   DCL RSECT SBIN;
      405      209    1   DCL NPGS SBIN;
      406      210        /**/
      407      211        /*  ENTRY DCLS  */
      408      212        /**/
      409      213    1   DCL GID$DISKIO ENTRY(4);
      410      214        /**/
      411      215        /*  AUTO  */
PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:94   
      412      216        /**/
      413      217    1   DCL NUM_BYTES UBIN;
      414      218        /**/
      415      219        /*  SYMREFS  */
      416      220        /**/
      417      221    1   DCL GID_VSEC_DUMP SBIN WORD SYMREF;
      418      222        /**/
      419      223    1           NUM_BYTES = NPGS*256*2;

    223  0 000002   200005 470500                    LDP0    @NPGS,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000011 735000                    ALS     9
         0 000005   200006 755100                    STA     NUM_BYTES,,AUTO

      420      224    1           CALL GID$DISKIO (RSECT+GID_VSEC_DUMP,

    224  0 000006   200004 471500                    LDP1    @RSECT,,AUTO
         0 000007   100000 236100                    LDQ     0,,PR1
         0 000010   000000 036000 xsym               ADLQ    GID_VSEC_DUMP
         0 000011   200010 756100                    STQ     NUM_BYTES+2,,AUTO
         0 000012   000000 236000 1                  LDQ     0
         0 000013   200003 235100                    LDA     @BUF$,,AUTO
         0 000014   200014 757100                    STAQ    NUM_BYTES+6,,AUTO
         0 000015   200006 633500                    EPPR3   NUM_BYTES,,AUTO
         0 000016   200013 453500                    STP3    NUM_BYTES+5,,AUTO
         0 000017   200010 634500                    EPPR4   NUM_BYTES+2,,AUTO
         0 000020   200012 454500                    STP4    NUM_BYTES+4,,AUTO
         0 000021   200012 630500                    EPPR0   NUM_BYTES+4,,AUTO
         0 000022   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000023   000000 701000 xent               TSX1    GID$DISKIO
         0 000024   000000 011000                    NOP     0

      421      225    1             NUM_BYTES,
      422      226    1             BUF$,
      423      227    1             0);
      424      228    1           RETURN;

PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:95   
    228  0 000025   000000 702200 xent               TSX2  ! X66_ARET
      425      229        /**/
      426      230    1           END GID$RDDUMP;
      427      231        %EOD;

PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:96   
--  Include file information  --

   KP_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GID$RDDUMP.
PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:97   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF$                      5-0-0/w PTR         r     1 @NPGS
     4-0-0/w PTR         r     1 @RSECT                    *0-0-0/w PTR         r     1 BUF$
    *0-0-0/w SBIN        r     1 NPGS                       6-0-0/w UBIN        r     1 NUM_BYTES
    *0-0-0/w SBIN        r     1 RSECT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 GID_VSEC_DUMP


   Procedure GID$RDDUMP requires 22 words for executable code.
   Procedure GID$RDDUMP requires 14 words of local(AUTO) storage.
PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:98   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=GID$RDDUMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:99   
          MINI XREF LISTING

BUF$
       207**DCL        16--PROC      224<>CALL
GID$DISKIO
       213**DCL-ENT   224--CALL
GID_VSEC_DUMP
       221**DCL       224>>CALL
NPGS
       209**DCL        16--PROC      223>>ASSIGN
NUM_BYTES
       217**DCL       223<<ASSIGN    224<>CALL
RSECT
       208**DCL        16--PROC      224>>CALL

PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:100  
      428        1        /*T***********************************************************/
      429        2        /*T*                                                         */
      430        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      431        4        /*T*                                                         */
      432        5        /*T***********************************************************/
      433        6        /*F*     NAME:          GID$CHKDMP
      434        7                 PURPOSE:       Checks for an existing dump.
      435        8                 DESCRIPTION:
      436        9          GID$CHKDMP is used after the LCP-6 monitor has been booted.  It checks
      437       10          for the presence of a dump image to pass back to the host.
      438       11
      439       12          If there is no dump, this routine ALTRETs.
      440       13        */
      441       14        GID$CHKDMP: PROC ALTRET;
      442       15        /**/
      443       16        /*  INCLUDE FILES  */
      444       17        /**/
      445       18        %INCLUDE KP_SUBS;
      446      202        %INCLUDE KP_MACRO_C;
      447      411        /**/
      448      412        /*  ENTRY DCLS  */
      449      413        /**/
      450      414    1   DCL GID$DISKIO ENTRY(4);
      451      415        /**/
      452      416        /*  SYMDEFS  */
      453      417        /**/
      454      418    1   DCL GID_VSEC_DUMP SBIN WORD STATIC SYMDEF;
      455      419    1   DCL 1 GID_VSEC_DUMP_ REDEF GID_VSEC_DUMP,
      456      420    1         2 * BIT(20) UNAL,
      457      421    1         2 HOB UBIN(8) UNAL,
      458      422    1         2 LOB UBIN(8) UNAL;
      459      423        /**/
      460      424        /*  AUTO  */
      461      425        /**/
      462      426        %KP_DISKDIR (FPTN = KP_DISKDIR, STCLASS = AUTO);
      463      436    1   DCL NUM_BYTES UBIN;
      464      437        %EJECT;
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:101  
      465      438        /**/
      466      439        /*  Start off by callibrating the diskette drives.  */
      467      440        /**/
      468      441    1           CALL GID$DISKIO (0,0,ADDR(NIL),2);
      469      442        /**/
      470      443        /*  Fetch the disk directory, source of all wisdom.  */
      471      444        /**/
      472      445    1           NUM_BYTES = SIZEC(KP_DISKDIR);
      473      446    1           CALL GID$DISKIO (%KP_VSEC_DISKDIR#,
      474      447    1             NUM_BYTES,
      475      448    1             ADDR(KP_DISKDIR),
      476      449    1             0);
      477      450        /**/
      478      451        /*  Set up things for later dump reading.  */
      479      452        /**/
      480      453    1           GID_VSEC_DUMP = 0;
      481      454    1           GID_VSEC_DUMP_.HOB = KP_DISKDIR.DUMP_VSEC.HOB;
      482      455    1           GID_VSEC_DUMP_.LOB = KP_DISKDIR.DUMP_VSEC.LOB;
      483      456        /**/
      484      457        /*  Bail out if there was no dump.  */
      485      458        /**/
      486      459    1           IF GID_VSEC_DUMP = 0 THEN
      487      460    1              ALTRETURN;
      488      461        /**/
      489      462        /*  Finis!  */
      490      463        /**/
      491      464    1           RETURN;
      492      465        /**/
      493      466    1           END GID$CHKDMP;
      494      467        %EOD;

PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:102  
--  Include file information  --

   KP_MACRO_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GID$CHKDMP.

   Procedure GID$CHKDMP requires 45 words for executable code.
   Procedure GID$CHKDMP requires 74 words of local(AUTO) storage.

PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:103  

 Object Unit name= GID$CHKDMP                                 File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:19:42.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     1      1  GID$CHKDMP
    1   Proc  even  none    45     55  GID$CHKDMP
    2  RoData even  none     5      5  GID$CHKDMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  GID$CHKDMP

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  GID_VSEC_DUMP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 GID$DISKIO
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:104  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:105  


      428        1        /*T***********************************************************/
      429        2        /*T*                                                         */
      430        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      431        4        /*T*                                                         */
      432        5        /*T***********************************************************/
      433        6        /*F*     NAME:          GID$CHKDMP
      434        7                 PURPOSE:       Checks for an existing dump.
      435        8                 DESCRIPTION:
      436        9          GID$CHKDMP is used after the LCP-6 monitor has been booted.  It checks
      437       10          for the presence of a dump image to pass back to the host.
      438       11
      439       12          If there is no dump, this routine ALTRETs.
      440       13        */
      441       14        GID$CHKDMP: PROC ALTRET;

     14  1 000000   000000 700200 xent  GID$CHKDMP   TSX0  ! X66_AUTO_0
         1 000001   000112 000000                    ZERO    74,0

      442       15        /**/
      443       16        /*  INCLUDE FILES  */
      444       17        /**/
      445       18        %INCLUDE KP_SUBS;
      446      202        %INCLUDE KP_MACRO_C;
      447      411        /**/
      448      412        /*  ENTRY DCLS  */
      449      413        /**/
      450      414    1   DCL GID$DISKIO ENTRY(4);
      451      415        /**/
      452      416        /*  SYMDEFS  */
      453      417        /**/
      454      418    1   DCL GID_VSEC_DUMP SBIN WORD STATIC SYMDEF;
      455      419    1   DCL 1 GID_VSEC_DUMP_ REDEF GID_VSEC_DUMP,
      456      420    1         2 * BIT(20) UNAL,
      457      421    1         2 HOB UBIN(8) UNAL,
      458      422    1         2 LOB UBIN(8) UNAL;
      459      423        /**/
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:106  
      460      424        /*  AUTO  */
      461      425        /**/
      462      426        %KP_DISKDIR (FPTN = KP_DISKDIR, STCLASS = AUTO);
      463      436    1   DCL NUM_BYTES UBIN;
      464      437        %EJECT;
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:107  
      465      438        /**/
      466      439        /*  Start off by callibrating the diskette drives.  */
      467      440        /**/
      468      441    1           CALL GID$DISKIO (0,0,ADDR(NIL),2);

    441  1 000002   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000003   200104 756100                    STQ     NUM_BYTES+1,,AUTO
         1 000004   000000 236000 2                  LDQ     0
         1 000005   200111 756100                    STQ     NUM_BYTES+6,,AUTO
         1 000006   200104 630500                    EPPR0   NUM_BYTES+1,,AUTO
         1 000007   200110 450500                    STP0    NUM_BYTES+5,,AUTO
         1 000010   000002 237000 2                  LDAQ    2
         1 000011   200106 757100                    STAQ    NUM_BYTES+3,,AUTO
         1 000012   200106 630500                    EPPR0   NUM_BYTES+3,,AUTO
         1 000013   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000014   000000 701000 xent               TSX1    GID$DISKIO
         1 000015   000000 011000                    NOP     0

      469      442        /**/
      470      443        /*  Fetch the disk directory, source of all wisdom.  */
      471      444        /**/
      472      445    1           NUM_BYTES = SIZEC(KP_DISKDIR);

    445  1 000016   000400 235007                    LDA     256,DL
         1 000017   200103 755100                    STA     NUM_BYTES,,AUTO

      473      446    1           CALL GID$DISKIO (%KP_VSEC_DISKDIR#,

    446  1 000020   200003 630500                    EPPR0   KP_DISKDIR,,AUTO
         1 000021   200104 450500                    STP0    NUM_BYTES+1,,AUTO
         1 000022   000002 236000 2                  LDQ     2
         1 000023   200111 756100                    STQ     NUM_BYTES+6,,AUTO
         1 000024   200104 631500                    EPPR1   NUM_BYTES+1,,AUTO
         1 000025   200110 451500                    STP1    NUM_BYTES+5,,AUTO
         1 000026   200103 633500                    EPPR3   NUM_BYTES,,AUTO
         1 000027   200107 453500                    STP3    NUM_BYTES+4,,AUTO
         1 000030   000004 236000 2                  LDQ     4
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:108  
         1 000031   200106 756100                    STQ     NUM_BYTES+3,,AUTO
         1 000032   200106 630500                    EPPR0   NUM_BYTES+3,,AUTO
         1 000033   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000034   000000 701000 xent               TSX1    GID$DISKIO
         1 000035   000000 011000                    NOP     0

      474      447    1             NUM_BYTES,
      475      448    1             ADDR(KP_DISKDIR),
      476      449    1             0);
      477      450        /**/
      478      451        /*  Set up things for later dump reading.  */
      479      452        /**/
      480      453    1           GID_VSEC_DUMP = 0;

    453  1 000036   000000 450000 0                  STZ     GID_VSEC_DUMP

      481      454    1           GID_VSEC_DUMP_.HOB = KP_DISKDIR.DUMP_VSEC.HOB;

    454  1 000037   200003 236100                    LDQ     KP_DISKDIR,,AUTO
         1 000040   000023 772000                    QRL     19
         1 000041   000000 676000 0                  ERQ     GID_VSEC_DUMP
         1 000042   177400 376007                    ANQ     65280,DL
         1 000043   000000 656000 0                  ERSQ    GID_VSEC_DUMP

      482      455    1           GID_VSEC_DUMP_.LOB = KP_DISKDIR.DUMP_VSEC.LOB;

    455  1 000044   200003 236100                    LDQ     KP_DISKDIR,,AUTO
         1 000045   000022 772000                    QRL     18
         1 000046   000000 676000 0                  ERQ     GID_VSEC_DUMP
         1 000047   000377 376007                    ANQ     255,DL
         1 000050   000000 656000 0                  ERSQ    GID_VSEC_DUMP

      483      456        /**/
      484      457        /*  Bail out if there was no dump.  */
      485      458        /**/
      486      459    1           IF GID_VSEC_DUMP = 0 THEN

PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:109  
    459  1 000051   000000 235000 0                  LDA     GID_VSEC_DUMP
         1 000052   000054 601000 1                  TNZ     s:464

      487      460    1              ALTRETURN;

    460  1 000053   000000 702200 xent               TSX2  ! X66_AALT

      488      461        /**/
      489      462        /*  Finis!  */
      490      463        /**/
      491      464    1           RETURN;

    464  1 000054   000000 702200 xent               TSX2  ! X66_ARET
      492      465        /**/
      493      466    1           END GID$CHKDMP;
      494      467        %EOD;

PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:110  
--  Include file information  --

   KP_MACRO_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure GID$CHKDMP.
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:111  

 **** Variables and constants ****

  ****  Section 000  Data  GID$CHKDMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 GID_VSEC_DUMP              0-0-0/w STRC        r     1 GID_VSEC_DUMP_

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/c STRC(2304)  r     1 KP_DISKDIR               103-0-0/w UBIN        r     1 NUM_BYTES


   Procedure GID$CHKDMP requires 45 words for executable code.
   Procedure GID$CHKDMP requires 74 words of local(AUTO) storage.
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:112  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=GID$CHKDMP File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:113  
          MINI XREF LISTING

GID$DISKIO
       414**DCL-ENT   441--CALL      446--CALL
GID_VSEC_DUMP
       418**DCL       419--REDEF     453<<ASSIGN    459>>IF
GID_VSEC_DUMP_.HOB
       421**DCL       454<<ASSIGN
GID_VSEC_DUMP_.LOB
       422**DCL       455<<ASSIGN
KP_DISKDIR
       427**DCL       445--ASSIGN    446--CALL
KP_DISKDIR.DUMP_VSEC.HOB
       429**DCL       454>>ASSIGN
KP_DISKDIR.DUMP_VSEC.LOB
       430**DCL       455>>ASSIGN
NUM_BYTES
       436**DCL       445<<ASSIGN    446<>CALL

PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:114  
      495        1        /*M* GID$DISKIO Perform actual diskette I/O.  */
      496        2        /*T***********************************************************/
      497        3        /*T*                                                         */
      498        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      499        5        /*T*                                                         */
      500        6        /*T***********************************************************/
      501        7        /*F*     NAME:          GID$DISKIO
      502        8                 PURPOSE:       Perform actual diskette I/O.
      503        9                 DESCRIPTION:
      504       10          GID$DISKIO performs all the actual diskette I/O for the GID
      505       11          routines.
      506       12
      507       13          The parameters are:
      508       14            VSECTOR = the virtual sector number of the first sector to
      509       15                      be accessed.
      510       16            NBYTES = the number of sequential bytes to be accessed.
      511       17            BUF$ = pointer to the data buffer.
      512       18            FUNK = a parameter that dictates the function to be performed,
      513       19                   as follows:
      514       20                      0 = READ from diskette
      515       21                      1 = WRITE to diskette
      516       22                      2 = initialize & setup diskettes
      517       23
      518       24            NOTE:  If this routine is called to perform diskette I/O WITHOUT
      519       25            previously requesting an initialize, the initialize is performed
      520       26            automatically.
      521       27        */
      522       28        GID$DISKIO: PROC(VSECTOR,NBYTES,BUF$,FUNK);
      523       29        /**/
      524       30        /*  INCLUDE FILES  */
      525       31        /**/
      526       32        %INCLUDE KP_DATA_R;
      527     1284        %EJECT;
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:115  
      528     1285        /**/
      529     1286        /*  Parameters  */
      530     1287        /**/
      531     1288    1   DCL VSECTOR SBIN;
      532     1289    1   DCL NBYTES UBIN;
      533     1290    1   DCL BUF$ PTR;
      534     1291    1   DCL FUNK SBIN;
      535     1292        /**/
      536     1293        /*  SYMREFS  */
      537     1294        /**/
      538     1295    1   DCL UNDUMP_DRIVE SBIN SYMREF;
      539     1296        %VLP_ERRCODE (FPTN=KP_ERRORCODE, STCLASS=SYMREF);
      540     1341        /**/
      541     1342        /*  ENTRY DCLS  */
      542     1343        /**/
      543     1344        %KP_ENTRIES;
      544     1450        /**/
      545     1451        /*  AUTO  */
      546     1452    1   DCL VSECS UBIN;
      547     1453        /**/
      548     1454    1           VSECS = (NBYTES+255)/256;
      549     1455    2           DO CASE(FUNK);
      550     1456    2              CASE(0);                     /* READ                               */
      551     1457    2                CALL KPU$READ_BLOCK (KP_FEP_NO,UNDUMP_DRIVE,VSECTOR,BUF$,VSECS)
      552     1458    3                WHENALTRETURN DO;
      553     1459    3                   IF KP_ERRORCODE.ERR#~=%E$KP_NO_DRIVE OR VSECTOR>2560
      554     1460    3                     OR VSECTOR+VSECS<=2560 THEN EXIT;
      555     1461    3                   IF VSECTOR<2560 THEN CALL KPU$READ_BLOCK
      556     1462    3                      (KP_FEP_NO,UNDUMP_DRIVE,VSECTOR,BUF$,2560-VSECTOR);
      557     1463    3                   CALL KPT$TERM_MSG(%T$NEXTDISK);
      558     1464    3                   CALL KPT$TERM_MSG(%T$WAITING);
      559     1465    3                   CALL KPI$IO_SVC (%KP_UC_READ#);
      560     1466    3                   IF SUBSTR(KP_INBUF,0,1)='Q' OR SUBSTR(KP_INBUF,0,1)='q'
      561     1467    3                   THEN EXIT;
      562     1468    3                   UNDUMP_DRIVE = UNDUMP_DRIVE-1;
      563     1469    3                   CALL KPU$READ_BLOCK (KP_FEP_NO,UNDUMP_DRIVE,2560,
      564     1470    3                     PINCRW(BUF$,64*(2560-VSECTOR)),VSECS+VSECTOR-2560);
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:116  
      565     1471    3                   END;
      566     1472    2              CASE(1);                     /* WRITE                              */
      567     1473    2                CALL KPU$WRITE_BLOCK (KP_FEP_NO,UNDUMP_DRIVE,VSECTOR,BUF$,VSECS);
      568     1474    2              CASE(2);                     /* INIT                               */
      569     1475    2              END;                         /* END CASE                           */
      570     1476    1           RETURN;
      571     1477    1           END GID$DISKIO;

PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:117  
--  Include file information  --

   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GID$DISKIO.

   Procedure GID$DISKIO requires 119 words for executable code.
   Procedure GID$DISKIO requires 16 words of local(AUTO) storage.

    No errors detected in file KPD$UNDUMP.:E05TSI    .

PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:118  

 Object Unit name= GID$DISKIO                                 File name= KPD$UNDUMP.:E05TOU
 UTS= JUL 30 '97 01:19:48.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   119    167  GID$DISKIO
    2  RoData even  none    12     14  GID$DISKIO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  GID$DISKIO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 KPU$READ_BLOCK
         yes           Std       1 KPT$TERM_MSG
 yes     yes           Std       1 KPI$IO_SVC
 yes     yes           Std       5 KPU$WRITE_BLOCK
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:119  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_FEP_NO                             KP_RU_KEY                             UNDUMP_DRIVE
     KP_ERRORCODE                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:120  


      495        1        /*M* GID$DISKIO Perform actual diskette I/O.  */
      496        2        /*T***********************************************************/
      497        3        /*T*                                                         */
      498        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      499        5        /*T*                                                         */
      500        6        /*T***********************************************************/
      501        7        /*F*     NAME:          GID$DISKIO
      502        8                 PURPOSE:       Perform actual diskette I/O.
      503        9                 DESCRIPTION:
      504       10          GID$DISKIO performs all the actual diskette I/O for the GID
      505       11          routines.
      506       12
      507       13          The parameters are:
      508       14            VSECTOR = the virtual sector number of the first sector to
      509       15                      be accessed.
      510       16            NBYTES = the number of sequential bytes to be accessed.
      511       17            BUF$ = pointer to the data buffer.
      512       18            FUNK = a parameter that dictates the function to be performed,
      513       19                   as follows:
      514       20                      0 = READ from diskette
      515       21                      1 = WRITE to diskette
      516       22                      2 = initialize & setup diskettes
      517       23
      518       24            NOTE:  If this routine is called to perform diskette I/O WITHOUT
      519       25            previously requesting an initialize, the initialize is performed
      520       26            automatically.
      521       27        */
      522       28        GID$DISKIO: PROC(VSECTOR,NBYTES,BUF$,FUNK);

     28  1 000000   000000 700200 xent  GID$DISKIO   TSX0  ! X66_AUTO_4
         1 000001   000020 000004                    ZERO    16,4

      523       29        /**/
      524       30        /*  INCLUDE FILES  */
      525       31        /**/
      526       32        %INCLUDE KP_DATA_R;
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:121  
      527     1284        %EJECT;
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:122  
      528     1285        /**/
      529     1286        /*  Parameters  */
      530     1287        /**/
      531     1288    1   DCL VSECTOR SBIN;
      532     1289    1   DCL NBYTES UBIN;
      533     1290    1   DCL BUF$ PTR;
      534     1291    1   DCL FUNK SBIN;
      535     1292        /**/
      536     1293        /*  SYMREFS  */
      537     1294        /**/
      538     1295    1   DCL UNDUMP_DRIVE SBIN SYMREF;
      539     1296        %VLP_ERRCODE (FPTN=KP_ERRORCODE, STCLASS=SYMREF);
      540     1341        /**/
      541     1342        /*  ENTRY DCLS  */
      542     1343        /**/
      543     1344        %KP_ENTRIES;
      544     1450        /**/
      545     1451        /*  AUTO  */
      546     1452    1   DCL VSECS UBIN;
      547     1453        /**/
      548     1454    1           VSECS = (NBYTES+255)/256;

   1454  1 000002   200004 470500                    LDP0    @NBYTES,,AUTO
         1 000003   000000 236100                    LDQ     0,,PR0
         1 000004   000377 036007                    ADLQ    255,DL
         1 000005   000010 772000                    QRL     8
         1 000006   200007 756100                    STQ     VSECS,,AUTO

      549     1455    2           DO CASE(FUNK);

   1455  1 000007   200006 471500                    LDP1    @FUNK,,AUTO
         1 000010   100000 235100                    LDA     0,,PR1
         1 000011   000002 115007                    CMPA    2,DL
         1 000012   000014 602005 1                  TNC     s:1455+5,AL
         1 000013   000166 710000 1                  TRA     s:1476
         1 000014   000016 710000 1                  TRA     s:1457
         1 000015   000152 710000 1                  TRA     s:1473
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:123  

      550     1456    2              CASE(0);                     /* READ                               */

      551     1457    2                CALL KPU$READ_BLOCK (KP_FEP_NO,UNDUMP_DRIVE,VSECTOR,BUF$,VSECS)

   1457  1 000016   200007 633500                    EPPR3   VSECS,,AUTO
         1 000017   200014 453500                    STP3    VSECS+5,,AUTO
         1 000020   200005 236100                    LDQ     @BUF$,,AUTO
         1 000021   200003 235100                    LDA     @VSECTOR,,AUTO
         1 000022   200012 757100                    STAQ    VSECS+3,,AUTO
         1 000023   000000 237000 2                  LDAQ    0
         1 000024   200010 757100                    STAQ    VSECS+1,,AUTO
         1 000025   200010 630500                    EPPR0   VSECS+1,,AUTO
         1 000026   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000027   000000 701000 xent               TSX1    KPU$READ_BLOCK
         1 000030   000032 702000 1                  TSX2    s:1459
         1 000031   000151 710000 1                  TRA     s:1471

      552     1458    3                WHENALTRETURN DO;

      553     1459    3                   IF KP_ERRORCODE.ERR#~=%E$KP_NO_DRIVE OR VSECTOR>2560

   1459  1 000032   000000 236000 xsym               LDQ     KP_ERRORCODE
         1 000033   377770 376007                    ANQ     131064,DL
         1 000034   003120 116007                    CMPQ    1616,DL
         1 000035   000151 601000 1                  TNZ     s:1471
         1 000036   200003 470500                    LDP0    @VSECTOR,,AUTO
         1 000037   000000 235100                    LDA     0,,PR0
         1 000040   005000 115007                    CMPA    2560,DL
         1 000041   000151 605400 1                  TPNZ    s:1471
         1 000042   000000 236100                    LDQ     0,,PR0
         1 000043   200007 036100                    ADLQ    VSECS,,AUTO
         1 000044   005000 116007                    CMPQ    2560,DL
         1 000045   000151 604400 1                  TMOZ    s:1471

      554     1460    3                     OR VSECTOR+VSECS<=2560 THEN EXIT;
      555     1461    3                   IF VSECTOR<2560 THEN CALL KPU$READ_BLOCK
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:124  

   1461  1 000046   005000 115007                    CMPA    2560,DL
         1 000047   000071 605000 1                  TPL     s:1463

   1461  1 000050   000000 235100                    LDA     0,,PR0
         1 000051   000027 675000 xsym               ERA     B_VECTNIL+23
         1 000052   005001 035007                    ADLA    2561,DL
         1 000053   200010 755100                    STA     VSECS+1,,AUTO
         1 000054   200010 631500                    EPPR1   VSECS+1,,AUTO
         1 000055   200015 451500                    STP1    VSECS+6,,AUTO
         1 000056   200005 236100                    LDQ     @BUF$,,AUTO
         1 000057   200014 756100                    STQ     VSECS+5,,AUTO
         1 000060   200003 236100                    LDQ     @VSECTOR,,AUTO
         1 000061   000001 235000 2                  LDA     1
         1 000062   200012 757100                    STAQ    VSECS+3,,AUTO
         1 000063   000000 236000 2                  LDQ     0
         1 000064   200011 756100                    STQ     VSECS+2,,AUTO
         1 000065   200011 630500                    EPPR0   VSECS+2,,AUTO
         1 000066   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000067   000000 701000 xent               TSX1    KPU$READ_BLOCK
         1 000070   000000 011000                    NOP     0

      556     1462    3                      (KP_FEP_NO,UNDUMP_DRIVE,VSECTOR,BUF$,2560-VSECTOR);
      557     1463    3                   CALL KPT$TERM_MSG(%T$NEXTDISK);

   1463  1 000071   000003 630400 2                  EPPR0   3
         1 000072   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000073   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000074   000000 011000                    NOP     0

      558     1464    3                   CALL KPT$TERM_MSG(%T$WAITING);

   1464  1 000075   000005 630400 2                  EPPR0   5
         1 000076   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000077   000000 701000 xent               TSX1    KPT$TERM_MSG
         1 000100   000000 011000                    NOP     0

PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:125  
      559     1465    3                   CALL KPI$IO_SVC (%KP_UC_READ#);

   1465  1 000101   000007 630400 2                  EPPR0   7
         1 000102   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000103   000000 701000 xent               TSX1    KPI$IO_SVC
         1 000104   000000 011000                    NOP     0

      560     1466    3                   IF SUBSTR(KP_INBUF,0,1)='Q' OR SUBSTR(KP_INBUF,0,1)='q'

   1466  1 000105   000000 236000 xsym               LDQ     KP_INBUF
         1 000106   777000 376003                    ANQ     -512,DU
         1 000107   121000 116003                    CMPQ    41472,DU
         1 000110   000151 600000 1                  TZE     s:1471
         1 000111   000000 236000 xsym               LDQ     KP_INBUF
         1 000112   777000 376003                    ANQ     -512,DU
         1 000113   161000 116003                    CMPQ    57856,DU
         1 000114   000151 600000 1                  TZE     s:1471

      561     1467    3                   THEN EXIT;
      562     1468    3                   UNDUMP_DRIVE = UNDUMP_DRIVE-1;

   1468  1 000115   000001 336007                    LCQ     1,DL
         1 000116   000000 056000 xsym               ASQ     UNDUMP_DRIVE

      563     1469    3                   CALL KPU$READ_BLOCK (KP_FEP_NO,UNDUMP_DRIVE,2560,

   1469  1 000117   200003 470500                    LDP0    @VSECTOR,,AUTO
         1 000120   000000 236100                    LDQ     0,,PR0
         1 000121   200005 471500                    LDP1    @BUF$,,AUTO
         1 000122   100000 473500                    LDP3    0,,PR1
         1 000123   200010 756100                    STQ     VSECS+1,,AUTO
         1 000124   200007 036100                    ADLQ    VSECS,,AUTO
         1 000125   200010 235100                    LDA     VSECS+1,,AUTO
         1 000126   000006 735000                    ALS     6
         1 000127   277777 620005                    EAX0    98303,AL
         1 000130   777777 660003                    ERX0    -1,DU
         1 000131   300000 634510                    EPPR4   0,X0,PR3
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:126  
         1 000132   200011 454500                    STP4    VSECS+2,,AUTO
         1 000133   005000 136007                    SBLQ    2560,DL
         1 000134   200012 756100                    STQ     VSECS+3,,AUTO
         1 000135   200012 633500                    EPPR3   VSECS+3,,AUTO
         1 000136   200017 453500                    STP3    VSECS+8,,AUTO
         1 000137   200011 635500                    EPPR5   VSECS+2,,AUTO
         1 000140   200016 455500                    STP5    VSECS+7,,AUTO
         1 000141   000012 237000 2                  LDAQ    10
         1 000142   200014 757100                    STAQ    VSECS+5,,AUTO
         1 000143   000000 236000 2                  LDQ     0
         1 000144   200013 756100                    STQ     VSECS+4,,AUTO
         1 000145   200013 630500                    EPPR0   VSECS+4,,AUTO
         1 000146   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000147   000000 701000 xent               TSX1    KPU$READ_BLOCK
         1 000150   000000 011000                    NOP     0

      564     1470    3                     PINCRW(BUF$,64*(2560-VSECTOR)),VSECS+VSECTOR-2560);
      565     1471    3                   END;

   1471  1 000151   000166 710000 1                  TRA     s:1476

      566     1472    2              CASE(1);                     /* WRITE                              */

      567     1473    2                CALL KPU$WRITE_BLOCK (KP_FEP_NO,UNDUMP_DRIVE,VSECTOR,BUF$,VSECS);

   1473  1 000152   200007 633500                    EPPR3   VSECS,,AUTO
         1 000153   200014 453500                    STP3    VSECS+5,,AUTO
         1 000154   200005 236100                    LDQ     @BUF$,,AUTO
         1 000155   200003 235100                    LDA     @VSECTOR,,AUTO
         1 000156   200012 757100                    STAQ    VSECS+3,,AUTO
         1 000157   000000 237000 2                  LDAQ    0
         1 000160   200010 757100                    STAQ    VSECS+1,,AUTO
         1 000161   200010 630500                    EPPR0   VSECS+1,,AUTO
         1 000162   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000163   000000 701000 xent               TSX1    KPU$WRITE_BLOCK
         1 000164   000000 011000                    NOP     0
         1 000165   000166 710000 1                  TRA     s:1476
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:127  

      568     1474    2              CASE(2);                     /* INIT                               */

      569     1475    2              END;                         /* END CASE                           */

      570     1476    1           RETURN;

   1476  1 000166   000000 702200 xent               TSX2  ! X66_ARET
      571     1477    1           END GID$DISKIO;

PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:128  
--  Include file information  --

   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GID$DISKIO.
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:129  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @BUF$                      6-0-0/w PTR         r     1 @FUNK
     4-0-0/w PTR         r     1 @NBYTES                    3-0-0/w PTR         r     1 @VSECTOR
    *0-0-0/w PTR         r     1 BUF$                      *0-0-0/w SBIN        r     1 FUNK
    *0-0-0/w UBIN        r     1 NBYTES                     7-0-0/w UBIN        r     1 VSECS
    *0-0-0/w SBIN        r     1 VSECTOR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 KP_ERRORCODE               0-0-0/w SBIN        r     1 KP_FEP_NO
     0-0-0/c CHAR(512)   r     1 KP_INBUF                   0-0-0/w SBIN        r     1 UNDUMP_DRIVE


   Procedure GID$DISKIO requires 119 words for executable code.
   Procedure GID$DISKIO requires 16 words of local(AUTO) storage.

    No errors detected in file KPD$UNDUMP.:E05TSI    .
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:130  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:131  
          MINI XREF LISTING

BUF$
      1290**DCL        28--PROC     1457<>CALL     1461<>CALL     1469>>CALL     1473<>CALL
FUNK
      1291**DCL        28--PROC     1455>>DOCASE
KPI$IO_SVC
      1379**DCL-ENT  1465--CALL
KPT$TERM_MSG
      1391**DCL-ENT  1463--CALL     1464--CALL
KPU$READ_BLOCK
      1432**DCL-ENT  1457--CALL     1461--CALL     1469--CALL
KPU$WRITE_BLOCK
      1433**DCL-ENT  1473--CALL
KP_ERRORCODE.ERR#
      1338**DCL      1459>>IF
KP_EXIT.V.STEPCC#
       955**DCL       955--REDEF
KP_FEP_NO
       883**DCL      1457<>CALL     1461<>CALL     1469<>CALL     1473<>CALL
KP_INBUF
       877**DCL       877--REDEF    1466>>IF       1466>>IF
KP_RU_KEY
       885**DCL       886--REDEF
KP_RU_KEY.NODE
       885**DCL       885--REDEF
KP_RU_KEY.PAGE
       886**DCL       886--REDEF
KP_RU_OUTBUF
       879**DCL       879--REDEF
NBYTES
      1289**DCL        28--PROC     1454>>ASSIGN
UNDUMP_DRIVE
      1295**DCL      1457<>CALL     1461<>CALL     1468<<ASSIGN   1468>>ASSIGN   1469<>CALL     1473<>CALL
PL6.E3A0      #008=GID$DISKIO File=KPD$UNDUMP.:E05TSI                            WED 07/30/97 01:19 Page:132  
VSECS
      1452**DCL      1454<<ASSIGN   1457<>CALL     1459>>IF       1469>>CALL     1473<>CALL
VSECTOR
      1288**DCL        28--PROC     1457<>CALL     1459>>IF       1459>>IF       1461>>IF       1461<>CALL
      1461>>CALL     1469>>CALL     1469>>CALL     1473<>CALL
