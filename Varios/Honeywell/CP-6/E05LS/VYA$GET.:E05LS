VERSION E05

PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CCC,CTI=8 */
        7        7        /*M*  VYA$GET allocates dynamic data segments      */
        8        8        /*P*  NAME: VYA$GET
        9        9              PURPOSE: Allocates dynamic data segments
       10       10              DESCRIPTION: Allocates dynamic data segments */
       11       11        /*D*  NAME: VYA$GET
       12       12              CALL: CALL VYA$GET( START$, TYPE, SIZE );
       13       13              INPUT: TYPE     - data segment number.
       14       14                     SIZE     - request size in words.
       15       15              OUTPUT: START$  - pointer to start of area allocated.
       16       16              DESCRIPTION: Allocates dynamic data segments.
       17       17                           An unused space list is maintained. If the
       18       18                           request may be honored from the available space
       19       19                           no additional pages are acquired. Otherwise additional
       20       20                           pages are acquired from the monitor. The pointer,
       21       21                           START$, is returned pointing to the start of the
       22       22                           area returned. The address space is treated like a stack.
       23       23                                                                        */
       24       24        VYA$GET:
       25       25              PROC( START$, TYPE, SIZE );
       26       26        %INCLUDE VY_INC_C;
       27     9202        %E;

              9210    1   /*******************************************************************************
              9211    1   *                                                                              *
              9212    1   *                          ENTRY                                                 *
              9213    1   *                                                                              *
              9214    1   *******************************************************************************/

       28     9218    1   DCL VYE$ERROR       ENTRY(4);
       29     9219    1   DCL VYE$ERR         ENTRY(3);
       30     9220    1   DCL VYD$B2C         ENTRY(5);
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:2    
       31     9221        %P;

              9229    1   /*******************************************************************************
              9230    1   *                                                                              *
              9231    1   *                          PARAMETERS                                              *
              9232    1   *                                                                              *
              9233    1   *******************************************************************************/

       32     9237    1   DCL START$          PTR;                /* Return pointer for allocated area */
       33     9238    1   DCL TYPE            UBIN(36);   /* Alias for which segment to allocate from */
       34     9239    1   DCL SIZE            UBIN(36);           /* Size in words of the request */
       35     9240        %S;

              9248    1   /*******************************************************************************
              9249    1   *                                                                              *
              9250    1   *                          SBIN                                                 *
              9251    1   *                                                                              *
              9252    1   *******************************************************************************/

       36     9256    1   DCL DIFF            SBIN WORD ALIGNED   STATIC/*AUTO*/;
       37     9257        %U;

              9265    1   /*******************************************************************************
              9266    1   *                                                                              *
              9267    1   *                          UBIN                                                 *
              9268    1   *                                                                              *
              9269    1   *******************************************************************************/

       38     9273    1   DCL GET             UBIN(36)  ALIGNED   STATIC/*AUTO*/;
       39     9274    1   DCL WGET             UBIN(36)  ALIGNED   STATIC/*AUTO*/;
       40     9275        %FPT_GDS( FPTN=FPT_GDS, RESULTS=VY_M_VECTOR, STCLASS=STATIC);
       41     9291        %FPT_GDP( FPTN=FPT_GDP, RESULTS=VY_M_VECTOR_DP, STCLASS=STATIC);
       42     9305        %EJECT;
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:3    
       43     9306    2         DO CASE( TYPE );
       44     9307    2           CASE(     0, 1, 2, 3, 4, 5, 6, 7 );
       45     9308    2             DIFF = VY_M_ALL(TYPE) - VY_M_FREE(TYPE);
       46     9309    3             IF SIZE > DIFF THEN DO;
       47     9310    3                 GET = (( SIZE - DIFF + 1023/*@PAGE_SIZE1*/ ) / 1024/*@PAGE_SIZE*/ ) *
              9310                          1024/*@PAGE_SIZE*/;
       48     9311    3                 FPT_GDS.V.SEGSIZE# = GET;
       49     9312    3                 IF TYPE = 1 THEN FPT_GDS.V.COMMON# = '1'B/*@TRUE_B*/;
       50     9313    3                 ELSE FPT_GDS.V.COMMON# = '0'B/*@FALSE_B*/;
       51     9314    3                 VY_M_VECTOR.F.SEGID = VY_M_SEGID(TYPE);
       52     9315    3                 CALL M$GDS( FPT_GDS )  ALTRET( NOROOM_SEGS );
       53     9316                                                /* Increase allocated counter */
       54     9317    3                 VY_M_ALL(TYPE) = VY_M_ALL(TYPE) + GET; /* Increase allocated */
       55     9318                                        /* Check if base pointer needs to be set     */
       56     9319    4                 IF VY_M_BASE_PTR(TYPE) = ADDR(NIL) THEN DO;
       57     9320    4                     VY_M_BASE_PTR(TYPE) = VY_M_VECTOR.P.POINTER;
       58     9321    4                     VY_M_SEGID(TYPE) = VY_M_VECTOR.F.SEGID;
       59     9322    4                    END;
       60     9323    3                END;
       61     9324    2             START$ = PINCRW( VY_M_BASE_PTR(TYPE),   VY_M_FREE(TYPE)   );
       62     9325                                            /* Set free allocated word in segment     */
       63     9326    2             VY_M_FREE(TYPE) = VY_M_FREE(TYPE) + SIZE;
       64     9327    2           CASE(8);
       65     9328    2             DIFF = VY_M_ALL(8) - VY_M_FREE(8);
       66     9329    3             IF SIZE > DIFF THEN DO;
       67     9330    3                 GET = (( SIZE - DIFF + 1023/*@PAGE_SIZE1*/) / 1024/*@PAGE_SIZE*/);
       68     9331    3                 WGET = GET * 1024/*@PAGE_SIZE*/;
       69     9332    3                 FPT_GDP.V.PAGES#   = GET;
       70     9333    3                 CALL M$GDP( FPT_GDP )  ALTRET( NOROOM_PAGE );
       71     9334                                                /* Increase allocated counter */
       72     9335    3                 VY_M_ALL(8) = VY_M_ALL(8) + WGET; /* Increase allocated */
       73     9336                                        /* Check if base pointer needs to be set     */
       74     9337    3                 IF VY_M_BASE_PTR(8) = ADDR(NIL) THEN
       75     9338    3                     VY_M_BASE_PTR(8) = VY_M_VECTOR_DP.P.POINTER;
       76     9339    3                END;
       77     9340    2             START$ = PINCRW( VY_M_BASE_PTR(8),   VY_M_FREE(8)   );
       78     9341                                                /* Set free allocated word in segment */
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:4    
       79     9342    2             VY_M_FREE(8) = VY_M_FREE(8) + SIZE;
       80     9343    2           CASE(ELSE);
       81     9344        /*E*  ERROR: VYA-E$INTERNAL_ALL_TYPE_VY-0
       82     9345              MESSAGE: Internal link error; Bad type passed to VYA$GET: TYPE = %U1.
       83     9346              DESCRIPTION: Self-explanatory.
       84     9347        */
       85     9348                  %NUMBER(
       86     9349                  NUM1=TYPE, BASE1=10, SIZE1=12 );
       87     9366                  %SCREAM(
       88     9367                  ERR#=%E$INTERNAL_ALL_TYPE_VY,
       89     9368                  LEVEL=%@E$F_VY,
       90     9369                  MID="'A'");
       91     9372    2           END;
       92     9373    1         RETURN;
       93     9374    1   NOROOM_SEGS:;
       94     9375        /*E*  ERROR: VYA-E$INTERNAL_ALL_REQ_SEG_VY-0
       95     9376              MESSAGE: Data segment allocation request failed.
       96     9377              DESCRIPTION: Self-explanatory.
       97     9378        */
       98     9379              %SCREAM(
       99     9380              ERR#=%E$INTERNAL_ALL_REQ_SEG_VY,
      100     9381              LEVEL=%@E$F_VY,
      101     9382              MID="'A'");
      102     9385    1   NOROOM_PAGE:;
      103     9386        /*E*  ERROR: VYA-E$INTERNAL_ALL_REQ_PAGE_VY-0
      104     9387              MESSAGE: Data page allocation request failed.
      105     9388              DESCRIPTION: Self-explanatory.
      106     9389        */
      107     9390              %SCREAM(
      108     9391              ERR#=%E$INTERNAL_ALL_REQ_PAGE_VY,
      109     9392              LEVEL=%@E$F_VY,
      110     9393              MID="'A'");
      111     9396    1   END VYA$GET;

PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:5    
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   VY_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VY_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VY_MACRO_C.:E05TOU  is referenced.
   VY_PERR_C.:E05TOU  is referenced.
   VY_SUBS_C.:E05TOU  is referenced.
   VY_INC_NO_C.:E05TOU  is referenced.
   VY_SWITCH_C.:E05TOU  is referenced.
   VY_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VYA$GET.

   Procedure VYA$GET requires 137 words for executable code.
   Procedure VYA$GET requires 12 words of local(AUTO) storage.

    No errors detected in file VYA$GET.:E05TSI    .

PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:6    

 Object Unit name= VYA$GET                                    File name= VYA$GET.:E05TOU
 UTS= JUL 30 '97 08:51:26.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    16     20  VYA$GET
    2   Proc  even  none   137    211  VYA$GET
    3  RoData even  none    22     26  VYA$GET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  VYA$GET

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 VYD$B2C
         yes           Std       4 VYE$ERROR
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VY_M_VECTOR                           VY_M_VECTOR_DP
     VY_ERRORS                             VY_M_FREE                             VY_M_ALL
     VY_M_BASE_PTR                         VY_M_SEGID                            VY_EFIELD1
     VY_PAR_UNWIND                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:8    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CCC,CTI=8 */
        7        7        /*M*  VYA$GET allocates dynamic data segments      */
        8        8        /*P*  NAME: VYA$GET
        9        9              PURPOSE: Allocates dynamic data segments
       10       10              DESCRIPTION: Allocates dynamic data segments */
       11       11        /*D*  NAME: VYA$GET
       12       12              CALL: CALL VYA$GET( START$, TYPE, SIZE );
       13       13              INPUT: TYPE     - data segment number.
       14       14                     SIZE     - request size in words.
       15       15              OUTPUT: START$  - pointer to start of area allocated.
       16       16              DESCRIPTION: Allocates dynamic data segments.
       17       17                           An unused space list is maintained. If the
       18       18                           request may be honored from the available space
       19       19                           no additional pages are acquired. Otherwise additional
       20       20                           pages are acquired from the monitor. The pointer,
       21       21                           START$, is returned pointing to the start of the
       22       22                           area returned. The address space is treated like a stack.
       23       23                                                                        */
       24       24        VYA$GET:
       25       25              PROC( START$, TYPE, SIZE );

     25  2 000000   000000 700200 xent  VYA$GET      TSX0  ! X66_AUTO_3
         2 000001   000014 000003                    ZERO    12,3

       26       26        %INCLUDE VY_INC_C;
       27     9202        %E;

              9210    1   /*******************************************************************************
              9211    1   *                                                                              *
              9212    1   *                          ENTRY                                                 *
              9213    1   *                                                                              *
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:9    
              9214    1   *******************************************************************************/

       28     9218    1   DCL VYE$ERROR       ENTRY(4);
       29     9219    1   DCL VYE$ERR         ENTRY(3);
       30     9220    1   DCL VYD$B2C         ENTRY(5);
       31     9221        %P;

              9229    1   /*******************************************************************************
              9230    1   *                                                                              *
              9231    1   *                          PARAMETERS                                             *
              9232    1   *                                                                              *
              9233    1   *******************************************************************************/

       32     9237    1   DCL START$          PTR;                /* Return pointer for allocated area */
       33     9238    1   DCL TYPE            UBIN(36);   /* Alias for which segment to allocate from */
       34     9239    1   DCL SIZE            UBIN(36);           /* Size in words of the request */
       35     9240        %S;

              9248    1   /*******************************************************************************
              9249    1   *                                                                              *
              9250    1   *                          SBIN                                                 *
              9251    1   *                                                                              *
              9252    1   *******************************************************************************/

       36     9256    1   DCL DIFF            SBIN WORD ALIGNED   STATIC/*AUTO*/;
       37     9257        %U;

              9265    1   /*******************************************************************************
              9266    1   *                                                                              *
              9267    1   *                          UBIN                                                 *
              9268    1   *                                                                              *
              9269    1   *******************************************************************************/

       38     9273    1   DCL GET             UBIN(36)  ALIGNED   STATIC/*AUTO*/;
       39     9274    1   DCL WGET             UBIN(36)  ALIGNED   STATIC/*AUTO*/;
       40     9275        %FPT_GDS( FPTN=FPT_GDS, RESULTS=VY_M_VECTOR, STCLASS=STATIC);
       41     9291        %FPT_GDP( FPTN=FPT_GDP, RESULTS=VY_M_VECTOR_DP, STCLASS=STATIC);
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:10   
       42     9305        %EJECT;
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:11   
       43     9306    2         DO CASE( TYPE );

   9306  2 000002   200004 470500                    LDP0    @TYPE,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000011 115007                    CMPA    9,DL
         2 000005   000007 602005 2                  TNC     s:9306+5,AL
         2 000006   000160 710000 2                  TRA     s:9355
         2 000007   000020 710000 2                  TRA     s:9308
         2 000010   000020 710000 2                  TRA     s:9308
         2 000011   000020 710000 2                  TRA     s:9308
         2 000012   000020 710000 2                  TRA     s:9308
         2 000013   000020 710000 2                  TRA     s:9308
         2 000014   000020 710000 2                  TRA     s:9308
         2 000015   000020 710000 2                  TRA     s:9308
         2 000016   000020 710000 2                  TRA     s:9308
         2 000017   000112 710000 2                  TRA     s:9328

       44     9307    2           CASE(     0, 1, 2, 3, 4, 5, 6, 7 );

       45     9308    2             DIFF = VY_M_ALL(TYPE) - VY_M_FREE(TYPE);

   9308  2 000020   000000 720100                    LXL0    0,,PR0
         2 000021   000000 236010 xsym               LDQ     VY_M_ALL,X0
         2 000022   000000 136010 xsym               SBLQ    VY_M_FREE,X0
         2 000023   000000 756000 1                  STQ     DIFF

       46     9309    3             IF SIZE > DIFF THEN DO;

   9309  2 000024   200005 471500                    LDP1    @SIZE,,AUTO
         2 000025   000030 604000 2                  TMI     s:9310
         2 000026   100000 116100                    CMPQ    0,,PR1
         2 000027   000076 603000 2                  TRC     s:9324

       47     9310    3                 GET = (( SIZE - DIFF + 1023/*@PAGE_SIZE1*/ ) / 1024/*@PAGE_SIZE*/ ) *
              9310                          1024/*@PAGE_SIZE*/;

   9310  2 000030   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:12   
         2 000031   000000 136000 1                  SBLQ    DIFF
         2 000032   001777 036007                    ADLQ    1023,DL
         2 000033   002000 506007                    DIV     1024,DL
         2 000034   000012 736000                    QLS     10
         2 000035   000001 756000 1                  STQ     GET

       48     9311    3                 FPT_GDS.V.SEGSIZE# = GET;

   9311  2 000036   000000 621006                    EAX1    0,QL
         2 000037   000010 441000 1                  SXL1    FPT_GDS+4

       49     9312    3                 IF TYPE = 1 THEN FPT_GDS.V.COMMON# = '1'B/*@TRUE_B*/;

   9312  2 000040   000000 235100                    LDA     0,,PR0
         2 000041   000001 115007                    CMPA    1,DL
         2 000042   000046 601000 2                  TNZ     s:9313

   9312  2 000043   200000 236003                    LDQ     65536,DU
         2 000044   000010 256000 1                  ORSQ    FPT_GDS+4
         2 000045   000050 710000 2                  TRA     s:9314

       50     9313    3                 ELSE FPT_GDS.V.COMMON# = '0'B/*@FALSE_B*/;

   9313  2 000046   000000 236000 3                  LDQ     0
         2 000047   000010 356000 1                  ANSQ    FPT_GDS+4

       51     9314    3                 VY_M_VECTOR.F.SEGID = VY_M_SEGID(TYPE);

   9314  2 000050   000000 720100                    LXL0    0,,PR0
         2 000051   000000 236010 xsym               LDQ     VY_M_SEGID,X0
         2 000052   000001 752003 xsym               STCQ    VY_M_VECTOR+1,'03'O

       52     9315    3                 CALL M$GDS( FPT_GDS )  ALTRET( NOROOM_SEGS );

   9315  2 000053   000004 630400 1                  EPPR0   FPT_GDS
         2 000054   430001 713400                    CLIMB   alt,gds
         2 000055   400400 401760                    pmme    nvectors=2
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:13   
         2 000056   000200 702000 2                  TSX2    NOROOM_SEGS

       53     9316                                                /* Increase allocated counter */
       54     9317    3                 VY_M_ALL(TYPE) = VY_M_ALL(TYPE) + GET; /* Increase allocated */

   9317  2 000057   200004 470500                    LDP0    @TYPE,,AUTO
         2 000060   000000 720100                    LXL0    0,,PR0
         2 000061   000000 236010 xsym               LDQ     VY_M_ALL,X0
         2 000062   000001 036000 1                  ADLQ    GET
         2 000063   000000 756010 xsym               STQ     VY_M_ALL,X0

       55     9318                                        /* Check if base pointer needs to be set     */
       56     9319    4                 IF VY_M_BASE_PTR(TYPE) = ADDR(NIL) THEN DO;

   9319  2 000064   000000 720100                    LXL0    0,,PR0
         2 000065   000000 236010 xsym               LDQ     VY_M_BASE_PTR,X0
         2 000066   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000067   000076 601000 2                  TNZ     s:9324

       57     9320    4                     VY_M_BASE_PTR(TYPE) = VY_M_VECTOR.P.POINTER;

   9320  2 000070   000001 236000 xsym               LDQ     VY_M_VECTOR+1
         2 000071   000000 756010 xsym               STQ     VY_M_BASE_PTR,X0

       58     9321    4                     VY_M_SEGID(TYPE) = VY_M_VECTOR.F.SEGID;

   9321  2 000072   000000 720100                    LXL0    0,,PR0
         2 000073   000001 236000 xsym               LDQ     VY_M_VECTOR+1
         2 000074   007777 376007                    ANQ     4095,DL
         2 000075   000000 756010 xsym               STQ     VY_M_SEGID,X0

       59     9322    4                    END;

       60     9323    3                END;

       61     9324    2             START$ = PINCRW( VY_M_BASE_PTR(TYPE),   VY_M_FREE(TYPE)   );

PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:14   
   9324  2 000076   000000 720100                    LXL0    0,,PR0
         2 000077   000000 236010 xsym               LDQ     VY_M_FREE,X0
         2 000100   000000 471410 xsym               LDP1    VY_M_BASE_PTR,X0
         2 000101   100000 633506                    EPPR3   0,QL,PR1
         2 000102   200003 474500                    LDP4    @START$,,AUTO
         2 000103   400000 453500                    STP3    0,,PR4

       62     9325                                            /* Set free allocated word in segment     */
       63     9326    2             VY_M_FREE(TYPE) = VY_M_FREE(TYPE) + SIZE;

   9326  2 000104   000000 720100                    LXL0    0,,PR0
         2 000105   200005 471500                    LDP1    @SIZE,,AUTO
         2 000106   000000 236010 xsym               LDQ     VY_M_FREE,X0
         2 000107   100000 036100                    ADLQ    0,,PR1
         2 000110   000000 756010 xsym               STQ     VY_M_FREE,X0
         2 000111   000177 710000 2                  TRA     s:9373

       64     9327    2           CASE(8);

       65     9328    2             DIFF = VY_M_ALL(8) - VY_M_FREE(8);

   9328  2 000112   000010 236000 xsym               LDQ     VY_M_ALL+8
         2 000113   000010 136000 xsym               SBLQ    VY_M_FREE+8
         2 000114   000000 756000 1                  STQ     DIFF

       66     9329    3             IF SIZE > DIFF THEN DO;

   9329  2 000115   200005 471500                    LDP1    @SIZE,,AUTO
         2 000116   000121 604000 2                  TMI     s:9330
         2 000117   100000 116100                    CMPQ    0,,PR1
         2 000120   000146 603000 2                  TRC     s:9340

       67     9330    3                 GET = (( SIZE - DIFF + 1023/*@PAGE_SIZE1*/) / 1024/*@PAGE_SIZE*/);

   9330  2 000121   100000 236100                    LDQ     0,,PR1
         2 000122   000000 136000 1                  SBLQ    DIFF
         2 000123   001777 036007                    ADLQ    1023,DL
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:15   
         2 000124   002000 506007                    DIV     1024,DL
         2 000125   000001 756000 1                  STQ     GET

       68     9331    3                 WGET = GET * 1024/*@PAGE_SIZE*/;

   9331  2 000126   000001 235000 1                  LDA     GET
         2 000127   000012 735000                    ALS     10
         2 000130   000002 755000 1                  STA     WGET

       69     9332    3                 FPT_GDP.V.PAGES#   = GET;

   9332  2 000131   000016 756000 1                  STQ     FPT_GDP+4

       70     9333    3                 CALL M$GDP( FPT_GDP )  ALTRET( NOROOM_PAGE );

   9333  2 000132   000012 630400 1                  EPPR0   FPT_GDP
         2 000133   430003 713400                    CLIMB   alt,+12291
         2 000134   400400 401760                    pmme    nvectors=2
         2 000135   000204 702000 2                  TSX2    NOROOM_PAGE

       71     9334                                                /* Increase allocated counter */
       72     9335    3                 VY_M_ALL(8) = VY_M_ALL(8) + WGET; /* Increase allocated */

   9335  2 000136   000010 236000 xsym               LDQ     VY_M_ALL+8
         2 000137   000002 036000 1                  ADLQ    WGET
         2 000140   000010 756000 xsym               STQ     VY_M_ALL+8

       73     9336                                        /* Check if base pointer needs to be set     */
       74     9337    3                 IF VY_M_BASE_PTR(8) = ADDR(NIL) THEN

   9337  2 000141   000010 236000 xsym               LDQ     VY_M_BASE_PTR+8
         2 000142   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000143   000146 601000 2                  TNZ     s:9340

       75     9338    3                     VY_M_BASE_PTR(8) = VY_M_VECTOR_DP.P.POINTER;

   9338  2 000144   000001 236000 xsym               LDQ     VY_M_VECTOR_DP+1
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:16   
         2 000145   000010 756000 xsym               STQ     VY_M_BASE_PTR+8

       76     9339    3                END;

       77     9340    2             START$ = PINCRW( VY_M_BASE_PTR(8),   VY_M_FREE(8)   );

   9340  2 000146   000010 236000 xsym               LDQ     VY_M_FREE+8
         2 000147   000022 736000                    QLS     18
         2 000150   000010 036000 xsym               ADLQ    VY_M_BASE_PTR+8
         2 000151   200003 470500                    LDP0    @START$,,AUTO
         2 000152   000000 756100                    STQ     0,,PR0

       78     9341                                                /* Set free allocated word in segment */
       79     9342    2             VY_M_FREE(8) = VY_M_FREE(8) + SIZE;

   9342  2 000153   200005 471500                    LDP1    @SIZE,,AUTO
         2 000154   000010 236000 xsym               LDQ     VY_M_FREE+8
         2 000155   100000 036100                    ADLQ    0,,PR1
         2 000156   000010 756000 xsym               STQ     VY_M_FREE+8
         2 000157   000177 710000 2                  TRA     s:9373

       80     9343    2           CASE(ELSE);

       81     9344        /*E*  ERROR: VYA-E$INTERNAL_ALL_TYPE_VY-0
       82     9345              MESSAGE: Internal link error; Bad type passed to VYA$GET: TYPE = %U1.
       83     9346              DESCRIPTION: Self-explanatory.
       84     9347        */
       85     9348                  %NUMBER(
       86     9349                  NUM1=TYPE, BASE1=10, SIZE1=12 );

   9355  2 000160   000001 236000 3                  LDQ     1
         2 000161   200012 756100                    STQ     @SIZE+5,,AUTO
         2 000162   200004 236100                    LDQ     @TYPE,,AUTO
         2 000163   000002 235000 3                  LDA     2
         2 000164   200010 757100                    STAQ    @SIZE+3,,AUTO
         2 000165   000004 237000 3                  LDAQ    4
         2 000166   200006 757100                    STAQ    @SIZE+1,,AUTO
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:17   
         2 000167   200006 630500                    EPPR0   @SIZE+1,,AUTO
         2 000170   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000171   000000 701000 xent               TSX1    VYD$B2C
         2 000172   000000 011000                    NOP     0

       87     9366                  %SCREAM(
       88     9367                  ERR#=%E$INTERNAL_ALL_TYPE_VY,
       89     9368                  LEVEL=%@E$F_VY,
       90     9369                  MID="'A'");

   9370  2 000173   000010 630400 3                  EPPR0   8
         2 000174   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000175   000000 701000 xent               TSX1    VYE$ERROR
         2 000176   000000 011000                    NOP     0

       91     9372    2           END;

       92     9373    1         RETURN;

   9373  2 000177   000000 702200 xent               TSX2  ! X66_ARET

   9342  2 000200                       NOROOM_SEGS  null
       93     9374    1   NOROOM_SEGS:;
       94     9375        /*E*  ERROR: VYA-E$INTERNAL_ALL_REQ_SEG_VY-0
       95     9376              MESSAGE: Data segment allocation request failed.
       96     9377              DESCRIPTION: Self-explanatory.
       97     9378        */
       98     9379              %SCREAM(
       99     9380              ERR#=%E$INTERNAL_ALL_REQ_SEG_VY,
      100     9381              LEVEL=%@E$F_VY,
      101     9382              MID="'A'");

   9383  2 000200   000015 630400 3                  EPPR0   13
         2 000201   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000202   000000 701000 xent               TSX1    VYE$ERROR
         2 000203   000000 011000                    NOP     0

PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:18   
   9383  2 000204                       NOROOM_PAGE  null
      102     9385    1   NOROOM_PAGE:;
      103     9386        /*E*  ERROR: VYA-E$INTERNAL_ALL_REQ_PAGE_VY-0
      104     9387              MESSAGE: Data page allocation request failed.
      105     9388              DESCRIPTION: Self-explanatory.
      106     9389        */
      107     9390              %SCREAM(
      108     9391              ERR#=%E$INTERNAL_ALL_REQ_PAGE_VY,
      109     9392              LEVEL=%@E$F_VY,
      110     9393              MID="'A'");

   9394  2 000204   000022 630400 3                  EPPR0   18
         2 000205   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000206   000000 701000 xent               TSX1    VYE$ERROR
         2 000207   000000 011000                    NOP     0

      111     9396    1   END VYA$GET;

   9396  2 000210   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:19   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   VY_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VY_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VY_MACRO_C.:E05TOU  is referenced.
   VY_PERR_C.:E05TOU  is referenced.
   VY_SUBS_C.:E05TOU  is referenced.
   VY_INC_NO_C.:E05TOU  is referenced.
   VY_SWITCH_C.:E05TOU  is referenced.
   VY_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VYA$GET.
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:20   

 **** Variables and constants ****

  ****  Section 001  Data  VYA$GET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 DIFF                      12-0-0/d STRC(216)   r     1 FPT_GDP
     4-0-0/d STRC(216)   r     1 FPT_GDS                    1-0-0/w UBIN        r     1 GET
     2-0-0/w UBIN        r     1 WGET

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @SIZE                      3-0-0/w PTR         r     1 @START$
     4-0-0/w PTR         r     1 @TYPE                     *0-0-0/w UBIN        r     1 SIZE
    *0-0-0/w PTR         r     1 START$                    *0-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 VY_EFIELD1
     0-0-0/w SBIN        r     1 VY_M_ALL(0:8)
     0-0-0/w PTR         r     1 VY_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VY_M_FREE(0:8)
     0-0-0/w UBIN        r     1 VY_M_SEGID(0:8)
     0-0-0/w STRC(72)    r     1 VY_M_VECTOR                0-0-0/w STRC(72)    r     1 VY_M_VECTOR_DP


   Procedure VYA$GET requires 137 words for executable code.
   Procedure VYA$GET requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:21   

    No errors detected in file VYA$GET.:E05TSI    .
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:23   
          MINI XREF LISTING

DIFF
      9256**DCL      9308<<ASSIGN   9309>>IF       9310>>ASSIGN   9328<<ASSIGN   9329>>IF       9330>>ASSIGN
FPT_GDP
      9302**DCL      9333<>CALL
FPT_GDP.V
      9302**DCL      9302--DCLINIT
FPT_GDP.V.PAGES#
      9303**DCL      9332<<ASSIGN
FPT_GDS
      9286**DCL      9315<>CALL
FPT_GDS.V
      9286**DCL      9286--DCLINIT
FPT_GDS.V.COMMON#
      9287**DCL      9312<<ASSIGN   9313<<ASSIGN
FPT_GDS.V.SEGSIZE#
      9289**DCL      9311<<ASSIGN
GET
      9273**DCL      9310<<ASSIGN   9311>>ASSIGN   9317>>ASSIGN   9330<<ASSIGN   9331>>ASSIGN   9332>>ASSIGN
M$GDP
      1659**DCL-ENT  9333--CALL
M$GDS
      1658**DCL-ENT  9315--CALL
NOROOM_PAGE
      9383**LABEL    9333--CALLALT
NOROOM_SEGS
      9342**LABEL    9315--CALLALT
SIZE
      9239**DCL        24--PROC     9309>>IF       9310>>ASSIGN   9326>>ASSIGN   9329>>IF       9330>>ASSIGN
      9342>>ASSIGN
START$
      9237**DCL        24--PROC     9324<<ASSIGN   9340<<ASSIGN
TYPE
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:24   
      9238**DCL        24--PROC     9306>>DOCASE   9308>>ASSIGN   9308>>ASSIGN   9312>>IF       9314>>ASSIGN
      9317>>ASSIGN   9317>>ASSIGN   9319>>IF       9320>>ASSIGN   9321>>ASSIGN   9324>>ASSIGN   9324>>ASSIGN
      9326>>ASSIGN   9326>>ASSIGN   9355<>CALL
VYD$B2C
      9220**DCL-ENT  9355--CALL
VYE$ERROR
      9218**DCL-ENT  9370--CALL     9383--CALL     9394--CALL
VY_BIAS.A
      5402**DCL      5402--REDEF
VY_CBUF.CHARS_A
      5393**DCL      5393--REDEF
VY_EBUF.CHARS_A
      5694**DCL      5695--REDEF
VY_EFIELD1.CHARS
      5695**DCL      5695--REDEF
VY_EFIELD1.CHARS_A
      5695**DCL      9355<>CALL
VY_EFIELD2.CHARS
      5696**DCL      5696--REDEF
VY_EFIELD3.CHARS
      5697**DCL      5697--REDEF
VY_ERRORS
      5398**DCL      5400--REDEF
VY_ERRORS.CONFLICT_A
      5399**DCL      5400--REDEF
VY_ERRORS.UNSAT_A
      5398**DCL      5399--REDEF
VY_IMAGE_DATA.CPAGE#_A
      5286**DCL      5287--REDEF
VY_IMAGE_DATA.NODE_A$
      5298**DCL      5299--REDEF
VY_IMAGE_DATA.START_A$
      5290**DCL      5291--REDEF
VY_IMAGE_DATA.STOP_A$
      5294**DCL      5295--REDEF
VY_IMAGE_PROC.CPAGE#_A
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:25   
      5309**DCL      5310--REDEF
VY_IMAGE_PROC.NODE_A$
      5321**DCL      5322--REDEF
VY_IMAGE_PROC.START_A$
      5313**DCL      5314--REDEF
VY_IMAGE_PROC.STOP_A$
      5317**DCL      5318--REDEF
VY_IMAGE_ROS.CPAGE#_A
      5332**DCL      5333--REDEF
VY_IMAGE_ROS.NODE_A$
      5344**DCL      5345--REDEF
VY_IMAGE_ROS.START_A$
      5336**DCL      5337--REDEF
VY_IMAGE_ROS.STOP_A$
      5340**DCL      5341--REDEF
VY_MAP_HDR.CHARS
      5759**DCL      5760--REDEF    5760--REDEF
VY_MAP_LIT_LO_FPT_WRITE.STATION_
      5088**DCL      5088--REDEF
VY_MAP_LIT_LO_FPT_WRITE.V.DVBYTE.VFC#
      5095**DCL      5095--REDEF
VY_MAP_LO_FPT_WRITE.STATION_
      5057**DCL      5057--REDEF
VY_MAP_LO_FPT_WRITE.V.DVBYTE.VFC#
      5064**DCL      5064--REDEF
VY_MBUF.CHARS
      5758**DCL      5759--REDEF    5759--REDEF
VY_M_ALL
      5403**DCL      9308>>ASSIGN   9317<<ASSIGN   9317>>ASSIGN   9328>>ASSIGN   9335<<ASSIGN   9335>>ASSIGN
VY_M_BASE_PTR
      5404**DCL      9319>>IF       9320<<ASSIGN   9324>>ASSIGN   9337>>IF       9338<<ASSIGN   9340>>ASSIGN
VY_M_FREE
      5403**DCL      9308>>ASSIGN   9324>>ASSIGN   9326<<ASSIGN   9326>>ASSIGN   9328>>ASSIGN   9340>>ASSIGN
      9342<<ASSIGN   9342>>ASSIGN
VY_M_SEGID
      5404**DCL      9314>>ASSIGN   9321<<ASSIGN
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:26   
VY_M_VECTOR
      5122**DCL      9286--DCLINIT
VY_M_VECTOR.F
      5127**DCL      5131--REDEF
VY_M_VECTOR.F.SEGID
      5130**DCL      9314<<ASSIGN   9321>>ASSIGN
VY_M_VECTOR.P.POINTER
      5132**DCL      9320>>ASSIGN
VY_M_VECTOR_DP
      5157**DCL      9302--DCLINIT
VY_M_VECTOR_DP.F
      5162**DCL      5166--REDEF
VY_M_VECTOR_DP.P.POINTER
      5167**DCL      9338>>ASSIGN
VY_O.DUPL_ATTCH
      5540**DCL      5544--REDEF
VY_O.MAP_ATTCH
      5528**DCL      5539--REDEF
VY_O.PRIMARY_OPTION
      5522**DCL      5527--REDEF
VY_O.SEV_ATTCH
      5545**DCL      5547--REDEF
VY_OD.DUPL_ATTCH
      5684**DCL      5688--REDEF
VY_OD.MAP_ATTCH
      5672**DCL      5683--REDEF
VY_OD.PRIMARY_OPTION
      5666**DCL      5671--REDEF
VY_OD.SEV_ATTCH
      5689**DCL      5691--REDEF
VY_OL_KEY_BUF.FORM0
      5195**DCL      5198--REDEF    5205--REDEF
VY_OU_HEAD.REC_A
      5383**DCL      5384--REDEF
VY_O_KEY_BUF.FORM0
      5172**DCL      5175--REDEF    5182--REDEF
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:27   
VY_O_KEY_BUF_L.FORM0
      5218**DCL      5221--REDEF    5228--REDEF
VY_PAR_UNWIND
      5753**DCL      5753--REDEF
VY_PASS2_REF.OU.L_START
      5720**DCL      5721--REDEF
VY_PASS2_REF.OU.L_STOP
      5721**DCL      5722--REDEF
VY_PASS2_REF.OU.MAX
      5719**DCL      5720--REDEF
VY_PASS2_REF.OU.SIZE
      5722**DCL      5723--REDEF
VY_PASS2_REF.SAT.COUNT
      5726**DCL      5727--REDEF
VY_PASS2_REF.SAT.ENT_SIZE
      5728**DCL      5729--REDEF
VY_PASS2_REF.SAT.L_START
      5724**DCL      5725--REDEF
VY_PASS2_REF.SAT.L_STOP
      5725**DCL      5726--REDEF
VY_PASS2_REF.SAT.MAX
      5723**DCL      5724--REDEF
VY_PASS2_REF.UNSAT.L_START
      5730**DCL      5731--REDEF
VY_PASS2_REF.UNSAT.L_STOP
      5731**DCL      5732--REDEF
VY_PASS2_REF.UNSAT.L_WHERE
      5732**DCL      5733--REDEF
VY_PASS2_REF.UNSAT.MAX
      5729**DCL      5730--REDEF
VY_PASS2_REF.UNSAT.PAGE#
      5734**DCL      5735--REDEF
VY_PASS2_REF.UNSAT.SIZE
      5733**DCL      5734--REDEF
VY_PROGRAM_BIAS.A
      5401**DCL      5401--REDEF
PL6.E3A0      #001=VYA$GET File=VYA$GET.:E05TSI                                  WED 07/30/97 08:51 Page:28   
VY_RU_HEAD.DATA_SEGMENT
      5369**DCL      5369--REDEF
VY_RU_HEAD.L
      5365**DCL      5366--REDEF
VY_RU_HEAD.MAP_BITS
      5366**DCL      5368--REDEF
VY_RU_HEAD.PBIT
      5362**DCL      5362--REDEF
VY_RU_HEAD_BUF.DATA_SEGMENT
      5379**DCL      5379--REDEF
VY_RU_HEAD_BUF.L
      5374**DCL      5375--REDEF
VY_RU_HEAD_BUF.MAP_BITS
      5376**DCL      5378--REDEF
VY_RU_HEAD_BUF.PBIT
      5371**DCL      5372--REDEF
VY_R_KEY_BUF.FORM0
      5241**DCL      5245--REDEF    5251--REDEF
VY_SI_KEY_BUF.KEY
      5749**DCL      5749--REDEF
VY_SPC.B$.MINE
      5744**DCL      5745--REDEF
VY_SPC.B$.NAME
      5741**DCL      5741--REDEF
VY_SPC.B$.SKIP
      5743**DCL      5744--REDEF
VY_SPC.B$.VALUE
      5742**DCL      5743--REDEF
VY_SPC.SEG.NAME
      5736**DCL      5737--REDEF
VY_SPC.SEG.VALUE
      5737**DCL      5738--REDEF
VY_TSX0_OVERLAY.H
      5708**DCL      5709--REDEF
WGET
      9274**DCL      9331<<ASSIGN   9335>>ASSIGN
