VERSION E05

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:1    
        1        1        /*M* VXM$NODE - maps a node.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC */
        8        8        VXM$NODE: PROC;
        9        9
       10       10        %INCLUDE VX_INC_C;
       11    10726        %B$DNAME( NAME=B$DNAME, STCLASS=BASED);
       12    10745        %VX$NODE;

             10757    1   /*******************************************************************************
             10758    1   *                                                                              *
             10759    1   *                          VX$NODE                                                 *
             10760    1   *                                                                              *
             10761    1   *******************************************************************************/

             10777    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10778    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10779    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10780    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10781    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10782    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10783                              to list of file nodes for this node            */
             10784    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10785    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10785                  /* Head pointer to shared library list */
             10786    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10786                  /* Head pointer to list of shared libraries
             10787                                          which have been mapped to included libraries */
             10788    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10789    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10790    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10791    1         2 ADDR_START REDEF  ADDR_START_A,
             10792    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:2    
             10793    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10794    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10795    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10796    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10797    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10798    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10799    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10800    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10801    1         2 START_PAGE# REDEF START_PAGE#_A,
             10802    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10803    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10804    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10805    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10806    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10807    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10808    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10809    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10810    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10810                  /* Starting pointer for common sections for this node */
             10811    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10811                  /* Stopping pointer for common sections for this node */
             10812    1         2 L_START,
             10813    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10814    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10815    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10816    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10817    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10818    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10819    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10820    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10821    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10822    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10823    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10824    1         2 L_STOP,
             10825    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10826    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10827    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:3    
             10828    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10829    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10830    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10831    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10832    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10833    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10834    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10835    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10836    1         2 L_SIZE,
             10837    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10838    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10839    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10840    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10841    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10842    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10843    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10844    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10845    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10846    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10847    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10848    1         2 L_PREV_SIZE,
             10849    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10850    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10851    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10852    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10853    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10854    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10855    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10856    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10857    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10858    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10859    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10860    1         2 BIT_MAP                ALIGNED,
             10861    1           3 DATA                  ALIGNED,
             10862    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10863    1           3 RPROC                 ALIGNED,
             10864    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:4    
             10865    1           3 ROS                   ALIGNED,
             10866    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10867    1         2 L_SC_START,
             10868    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10869    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10870    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10871    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10872    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10873    1         2 L_SC_STOP,
             10874    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10875    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10876    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10877    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10878    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10879    1         2 PROMOTE_HEAD,
             10880    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10881    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10882    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10883    1         2 PROMOTE_TAIL,
             10884    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10885    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10886    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10887    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10888    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10889    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10890    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10891    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       13    10895        %VX$SC;

             10908    1   /*******************************************************************************
             10909    1   *                                                                              *
             10910    1   *                          VX$SC                                                 *
             10911    1   *                                                                              *
             10912    1   *******************************************************************************/

             10917    1   DCL 1 VX$SC BASED ALIGNED,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:5    
             10918    1         2 SEG UBIN(3) UNAL,
             10919                /*K*  SEG - The segment number of this section */
             10920    1         2 TYPE UBIN(6) UNAL,
             10921                /*K*  TYPE -
             10922                      Type code      Section type
             10923                      ---------      ------------
             10924                          0          Data control section with write access.
             10925                          1          Procedure control section.
             10926                          2          Unlabeled common, name pointer must be zero.
             10927                          3          Labeled common, with mandatory name pointer.
             10928                                     This is for labeled common which must be
             10929                                     in the root.
             10930                          4          Labeled common, with mandatory name pointer.
             10931                                     This is for labeled common which need not
             10932                                     be in the root.
             10933                          5          DCB, word 1 is name pointer.
             10934                          6          Data control section with read only access,
             10935                                     word 1 = 0 or name pointer.      */
             10936    1         2 EMPTY BIT(1) UNAL,
             10937                /*K*  EMPTY is the empty bit.  This bit is set if the control
             10938                      section is of size zero.  */
             10939    1         2 ATTR UNAL,
             10940    1           3 INT  UBIN(2) UNAL,
             10941                  /*K*  INT is the Section initialization.  */
             10942    1           3 SEGMENT BIT(1) UNAL,
             10943                  /*K* SEGMENT is set if the Section is defined in a data
             10944                       segment.  */
             10945    1           3 ALL BIT(1) UNAL,
             10946                  /*K*  ALL is set if the Section is allocated.  */
             10947    1           3 PRE_DCB BIT(1) UNAL,
             10948                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             10949    1           3 MES_INIT BIT(1) UNAL,
             10950    1           3 ALIGN UBIN(2) UNAL,
             10951                  /*K*  ALIGN is the Section alignment.  */
             10952    1         2 ADDRESS UBIN HALF UNAL,
             10953                /*K*  ADDRESS is the address within the Instruction Segment of
             10954                      the entry point of the external procedure.  */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:6    
             10955    1         2 NAME_DISP SBIN HALF UNAL,
             10956                /*K*  NAME_DISP is the Name index.  */
             10957    1         2 SIZE UBIN HALF UNAL,
             10958                /*K*  SIZE is the size, in words, of the section.  */
             10959    1         2 NODE# UBIN HALF UNAL,
             10960                /*K*  NODE# is the Node number of section.  */
             10961    1         2 COM_LINK UBIN HALF UNAL;
             10962                /*K*  COM_LINK is used internally by linker to link common sections */

             10972    1   /*******************************************************************************
             10973    1   *                                                                              *
             10974    1   *                          VX$SECT                                                 *
             10975    1   *                                                                              *
             10976    1   *******************************************************************************/

             10981    1   DCL 1 VX$SECT BASED ALIGNED,
             10982    1         2 TYPE UBIN BYTE UNAL,
             10983                /*K*  TYPE -
             10984                      Type code      Section type
             10985                      ---------      ------------
             10986                          0          Data control section with write access.
             10987                          1          Procedure control section.
             10988                          2          Unlabeled common, name pointer must be zero.
             10989                          3          Labeled common, with mandatory name pointer.
             10990                                     This is for labeled common which must be
             10991                                     in the root.
             10992                          4          Labeled common, with mandatory name pointer.
             10993                                     This is for labeled common which need not
             10994                                     be in the root.
             10995                          5          DCB, word 1 is name pointer.
             10996                          6          Data control section with read only access,
             10997                                     word 1 = 0 or name pointer.
             10998                          7          Constant labeled common, with mandatory name pointer.
             10999                                     This is for labeled common which must be
             11000                                     in the root.
             11001                          8          Constant labeled common, with mandatory name pointer.
             11002                                     This is for labeled common which need not
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:7    
             11003                                     be in the root.                        */
             11004    1         2 * BIT(1),
             11005                /*K*  * is reserved for future use and must be zero. */
             11006    1         2 INITZERO BIT(1),
             11007                /*K*  INITZERO - if 1, initialize with zero.  */
             11008    1         2 INITUTS BIT(1),
             11009                /*K*  INITUTS - if 1, initialize with UTS.  */
             11010    1         2 SEGMENT BIT(1),
             11011                /*K*  SEGMENT - if 1, specifies that this section is
             11012                                to be placed in the segment specified by
             11013                                SEG_NPOINTER.  */
             11014    1         2 * BIT(3),
             11015                /*K*  * is reserved for future use and must be zero. */
             11016    1         2 BOUND UBIN(2) UNAL,
             11017                /*K*  BOUND - bits 6-7 - defines starting location.
             11018                              00 - starts on even word
             11019                              01 - starts on odd word
             11020                              10 - starts on multiple of 8
             11021                              11 - starts on page boundary     */
             11022    1         2 SIZE UBIN HALF UNAL,
             11023                /*K*  SIZE is the size, in words, of the section.  */
             11024    1         2 NPOINTER SBIN HALF UNAL,
             11025                /*K*  NPOINTER is the word displacement into the name record
             11026                      (TYPE 1) locating the name of this section.  If the
             11027                      field is negative, the section has no name.  */
             11028    1         2 MBZ UBIN HALF UNAL,
             11029                /*K*  MBZ is reserved for future expansion and must be zero. */
             11030    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             11031                /*K*  SEG_NPOINTER locates a name in the Definition Names
             11032                      Section.  The name must be a valid segment name
             11033                      recognized by the linker.  */
             11034    1         2 G66 REDEF MBZ,
             11035                /*K*  G66 is not used on CP-6. */
             11036    1           3 * BIT(9),
             11037    1           3 NSAB BIT(9);
       14    11040        %VXD$TMPLT( SEGDEF=YES );

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:8    
             11053    1   /*******************************************************************************
             11054    1   *                                                                              *
             11055    1   *                          VXD$TMPLT                                               *
             11056    1   *                                                                              *
             11057    1   *******************************************************************************/

             11061        /*
             11062                  VXD$TMPLT (B$RU_DEF) is used to reference fields common to
             11063                  ENTDEFs, SYMDEFs and SEGDEFs.
             11064        */
             11066    1   DCL 1 VXD$TMPLT BASED ALIGNED,
             11067    1         2 VALUE SBIN UNAL,
             11068                /*K*  VALUE is the value if this entry is a constant.  */
             11069    1         2 AD REDEF VALUE,
             11070                /*K*  AD is the address if this entry is not constant.  */
             11071    1           3 LFLAGS UNAL,
             11072                  /*K*  LFLAGS is the field reserved for loader to flag load
             11073                        time attributes of the definition and must be zero
             11074                        in the object unit. */
             11075    1             4 SOURCE UBIN(3) UNAL,
             11076                    /*K*  SOURCE - Source of this DEF */
             11077    1             4 DEFINED BIT(1) UNAL,
             11078                    /*K*  DEFINED - Set if this DEF defined */
             11079    1             4 MULTIPLE BIT(1) UNAL,
             11080                    /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             11081    1             4 USED BIT(1) UNAL,
             11082                    /*K*  USED - Set if this DEF is used. */
             11083    1           3 LOOKUP_SECTNUM BIT(1) UNAL,
             11084                  /*K*  LOOKUP_SECTNUM is set if the section number is greater
             11085                        than 2048 (RU).  */
             11086    1           3 SECTNUM UBIN(11) UNAL,
             11087                  /*K*  SECTNUM contains an entry number into the section
             11088                        table (TYPE 3).  */
             11089    1           3 ISADDR UBIN HALF UNAL,
             11090                  /*K*  ISADDR - Is Address (RU)  */
             11091    1           3 OFFSET REDEF ISADDR UBIN HALF UNAL,
             11092                  /*K*  OFFSET is the word offset from the origin of the section. */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:9    
             11093    1         2 NPOINTER SBIN HALF UNAL,
             11094                /*K*  NPOINTER is a word displacement into the name record
             11095                      (TYPE 1) locating the name (of this entry). */
             11096    1         2 CONSTNT BIT(1) UNAL,
             11097                /*K*  CONSTNT is a flag bit to determine the interpretation
             11098                      of word 0.
             11099                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             11100                                    SECTNUM, and ISADDR or OFFSET.
             11101                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
             11102    1         2 LFLAGS UNAL,
             11103                /*K*  LFLAGS is the field reserved for loader to flag load
             11104                      time attributes and must be zero in the object unit. */
             11105    1           3 MULTIPLE BIT(1) UNAL,
             11106                  /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             11107    1           3 USED BIT(1) UNAL,
             11108                  /*K*  USED - Set if this DEF is used. */
             11109    1           3 SOURCE UBIN(4) UNAL,
             11110                  /*K*  SOURCE - Source of this DEF */
             11111    1           3 IS_DCB BIT(1) UNAL,
             11112                  /*K* IS_DCB - Set if this is a DCB */
             11113    1           3 * BIT(10) UNAL,
             11114                  /*K*  * is reserved for future use and must be zero.  */
             11115    1         2 PROTECTION REDEF LFLAGS,
             11116                /*K*  PROTECTION is used for non-constant SYMDEF OR SEGDEF.  */
             11117    1           3 TYPE UBIN(5) UNAL,
             11118                  /*K*  TYPE is the Protection type.  */
             11119    1           3 * UBIN(12) UNAL;
             11120                  /*K*  * is reserved for future use and must be zero.  */

             11139    1   /*******************************************************************************
             11140    1   *                                                                              *
             11141    1   *                          B$SEGDEF                                                *
             11142    1   *                                                                              *
             11143    1   *******************************************************************************/

             11148    1   DCL 1 B$SEGDEF BASED ALIGNED,
             11149    1         2 VALUE SBIN UNAL,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:10   
             11150                /*K*  VALUE is the value of the constant segment definition
             11151                      pointer if CONSTANT=1.  */
             11152    1         2 S REDEF VALUE,
             11153    1           3 * UBIN(24) UNAL,
             11154    1           3 SEGID UBIN(12) UNAL,
             11155                  /*K*  SEGID - Segid of constant value */
             11156    1         2 AD REDEF VALUE,
             11157                /*K*  AD - Address (not constant )  */
             11158    1           3 LFLAGS UNAL,
             11159                  /*K*  LFLAGS is the field reserved for loader to flag load
             11160                        time attributes of the definition and must be zero
             11161                        in object unit.  */
             11162    1             4 SOURCE UBIN(3) UNAL,
             11163                    /*K*  SOURCE - Source of this SEGDEF */
             11164    1             4 DEFINED BIT(1) UNAL,
             11165                    /*K*  DEFINED - Set if this SEGDEF is defined */
             11166    1             4 MULTIPLE BIT(1) UNAL,
             11167                    /*K*  MULTIPLE - Set if this SEGDEF is multiply defined */
             11168    1             4 USED BIT(1) UNAL,
             11169                    /*K*  USED - Set if this SEGDEF is used */
             11170    1             4 * BIT(3) UNAL,
             11171                    /*K*  * is reserved for future use and must be zero. */
             11172    1           3 OU UNAL,
             11173    1             4 SECTNUM UBIN BYTE UNAL,
             11174                    /*K*  SECTNUM is the Section number.  */
             11175    1             4 OFFSET UBIN HALF UNAL,
             11176                    /*K*  OFFSET is the offset within section. */
             11177    1           3 ISADDR REDEF OU UBIN(27) UNAL,
             11178                  /*K*  ISADDR - IS Address (RU)  */
             11179    1         2 NPOINTER SBIN HALF UNAL,
             11180                /*K*  NPOINTER is the word displacement into DEFNAMES record. */
             11181    1         2 CONSTNT BIT(1) UNAL,
             11182                /*K*  CONSTNT is a flag bit to determine the interpretation
             11183                      of word 0.
             11184                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             11185                                    SECTNUM, and ISADDR or OFFSET.
             11186                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:11   
             11187    1         2 LFLAGS UNAL,
             11188                /*K*  LFLAGS is the field reserved for loader to flag load time
             11189                      attributes and must be zero in the object unit.  */
             11190    1           3 MULTIPLE BIT(1) UNAL,
             11191                  /*K*  MULTIPLE - Set if this SEGDEF is multiply defined */
             11192    1           3 USED BIT(1) UNAL,
             11193                  /*K*  USED - Set if this SEGDEF is used */
             11194    1           3 SOURCE UBIN(4) UNAL,
             11195                  /*K*  SOURCE - Source of this SEGDEF */
             11196    1           3 * BIT(11) UNAL,
             11197                  /*K*  * is reserved for future use and must be zero. */
             11198    1         2 SEG REDEF LFLAGS UNAL,          /* Not constant SEGDEF (RU) */
             11199    1           3 TYPE UBIN(5) UNAL,            /* Segment protection type (RU) */
             11200    1           3 SEGID UBIN(12) UNAL;          /* Segid of segment (RU) */
       15    11204        %VXR$TMPLT;

             11217    1   /*******************************************************************************
             11218    1   *                                                                              *
             11219    1   *                          VXR$TMPLT                                               *
             11220    1   *                                                                              *
             11221    1   *******************************************************************************/

             11226    1   DCL 1 VXR$TMPLT BASED ALIGNED,
             11227    1         2 NPOINTER SBIN HALF UNAL,
             11228                /*K*  NPOINTER is the word index to the symbol name.  */
             11229    1         2 SREF BIT(1) UNAL,
             11230                /*K*  SREF is set is this is a secondary reference.  */
             11231    1         2 READ_ONLY BIT(1) UNAL,
             11232    1         2 GOT BIT(1) UNAL,
             11233                /*K*  GOT is set if got the OU name displacement.  */
             11234    1         2 STATE REDEF GOT BIT(1) UNAL,
             11235    1         2 OPOINTER UBIN(15) UNAL;
             11236                /*K*  OPOINTER is the word index to the OU name.  */

             11258    1   /*******************************************************************************
             11259    1   *                                                                              *
             11260    1   *                          VXR$SAT                                                 *
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:12   
             11261    1   *                                                                              *
             11262    1   *******************************************************************************/

             11266    1   DCL 1 VXR$SAT                 ALIGNED   BASED,
             11267    1         2 VALUE        UBIN(36)  ALIGNED,
             11268    1         2 SEG   REDEF  VALUE,
             11269    1           3 OFFSET     UBIN(18)  UNAL,
             11270    1           3 *          BIT(6)    UNAL,
             11271    1           3 SEGID      UBIN(12)  UNAL,
             11272    1         2 BELOW        BIT(1)    UNAL,
             11273    1         2 *            BIT(17)   UNAL,
             11274    1         2 NODE#        UBIN(18)  UNAL;
       16    11276        %VX$WORD;

             11288    1   /*******************************************************************************
             11289    1   *                                                                              *
             11290    1   *                          VX$WORD                                                 *
             11291    1   *                                                                              *
             11292    1   *******************************************************************************/

             11297    1   DCL VX$WORD_A(0:0)       UBIN(36) ALIGNED    BASED PTR;
             11298    1   DCL VX$HALF_A(0:0)       UBIN(18) HALIGNED   BASED PTR;
             11299    1   DCL VX$BYTE_A(0:0)       UBIN( 9) CALIGNED   BASED PTR;
             11300    1   DCL VX$CHAR_A(0:0)       CHAR( 1) UNAL       BASED PTR;
             11301        /**/
             11302    1   DCL VX$WORD_SBIN_A(0:0)  SBIN WORD ALIGNED   BASED     PTR;
             11303    1   DCL VX$HALF_SBIN_A(0:0)  SBIN HALF HALIGNED  BASED     PTR;
             11304    1   DCL VX$BYTE_SBIN_A(0:0)  SBIN HALF CALIGNED  BASED     PTR;
             11305    1   DCL VX$BIT_A(0:0)        BIT(36)   ALIGNED   BASED     PTR;
       17    11308        %T$C;

             11320    1   /*******************************************************************************
             11321    1   *                                                                              *
             11322    1   *                          T$C                                                 *
             11323    1   *                                                                              *
             11324    1   *******************************************************************************/

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:13   
             11329    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             11330    1         2 COUNT        UBIN( 9) UNAL,
             11331    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             11332    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             11333    1         2 COUNT        UBIN( 9) UNAL,
             11334    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       18    11337        %SET LISTMAC='1'B;
       19    11338        %SET LISTSUB='1'B;
       20    11339        %SET LISTEXP='1'B;
       21    11340        %BANNER( ARG=SUBS );
             11341        %LSET LISTDIR='0'B;

             11348    1   /*******************************************************************************
             11349    1   *                                                                              *
             11350    1   *                          SUBS                                                 *
             11351    1   *                                                                              *
             11352    1   *******************************************************************************/

       22    11356        %B$RECORDSUBS;
             11357        %EQU TYPHEAD=0 ;
             11358        %EQU TYPDNAM=1 ;
             11359        %EQU TYPRNAM=2 ;
             11360        %EQU TYPSECT=3 ;
             11361        %EQU TYPEDEF=4 ;
             11362        %EQU TYPEREF=5 ;
             11363        %EQU TYPSDEF=6 ;
             11364        %EQU TYPSREF=7 ;
             11365        %EQU TYPSEGDEF=8 ;
             11366        %EQU TYPSEGREF=9 ;
             11367        %EQU TYPPROG=10 ;
             11368        %EQU SUBTYPPROG=0 ;
             11369        %EQU SUBTYPREL=1 ;
             11370        %EQU TYPLOGBLK=11 ;
             11371        %EQU TYPINTNTRY=12 ;
             11372        %EQU TYPEXST=13 ;
             11373        %EQU TYPVREBL=14 ;
             11374        %EQU TYPDBGNAM=15 ;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:14   
             11375        %EQU TYPLV1LB=16 ;
             11376        %EQU TYPLV1=17 ;
             11377        %EQU TYPDATASEG=18 ;
             11378        %EQU TYPRUM=20 ;
             11379        %EQU TYPBIRTH=21 ;
             11380        %EQU TYPPLOVER=22 ;
             11381        %EQU TYPCOMPID=23 ;
             11382        %EQU TYPROS=30 ;
       23    11384        %B$SECTIONSUBS;
             11385        %EQU DATASECTION=0 ;
             11386        %EQU CODESECTION=1 ;
             11387        %EQU UCOMSECTION=2 ;
             11388        %EQU RLCOMSECTION=3 ;
             11389        %EQU LCOMSECTION=4 ;
             11390        %EQU DCBSECTION=5 ;
             11391        %EQU ROSECTION=6 ;
             11392        %EQU RORLCOMSECTION=7 ;
             11393        %EQU ROLCOMSECTION=8 ;
             11394        %EQU EVENBOUNDSECTION=0 ;
             11395        %EQU ODDBOUNDSECTION=1 ;
             11396        %EQU EIGHTBOUNDSECTION=2 ;
             11397        %EQU PAGEBOUNDSECTION=3 ;
       24    11399        %SUB_LINKFLAGS;
             11400        %EQU SOURCE_OBJECT#=0 ;
             11401        %EQU SOURCE_SLIB#=1 ;
             11402        %EQU SOURCE_ALIB#=2 ;
             11403        %EQU SOURCE_ULIB#=3 ;
             11404        %EQU SOURCE_RLIB#=4 ;
             11405        %EQU SOURCE_REMOVED#=5 ;
             11406        %EQU SOURCE_LINKER#=6 ;
       25    11408        %B;
             11409        %LSET LISTDIR='0'B;

             11416    1   /*******************************************************************************
             11417    1   *                                                                              *
             11418    1   *                          BIT                                                 *
             11419    1   *                                                                              *
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:15   
             11420    1   *******************************************************************************/

       26    11424    1   DCL USED_BIT             BIT(1)    ALIGNED   AUTO;
       27    11425    1   DCL MULTIPLE_BIT         BIT(1)    ALIGNED   AUTO;
       28    11426    1   DCL NOT_WROTE            BIT(1)    ALIGNED   AUTO;
       29    11427    1   DCL NOT_NODE_LINE        BIT(1)    ALIGNED   AUTO;
       30    11428    1   DCL NOT_DIAG_NODE_LINE   BIT(1)    ALIGNED   AUTO;
       31    11429        %C;
             11430        %LSET LISTDIR='0'B;

             11437    1   /*******************************************************************************
             11438    1   *                                                                              *
             11439    1   *                          CHAR                                                 *
             11440    1   *                                                                              *
             11441    1   *******************************************************************************/

       32    11445    1   DCL INTERPR_HDR          CHAR(65)            CONSTANT  INIT(
       33    11446    1              'B<OCTAL_NUMBER><CON_DEF><SOURCE><USED><MULT_DEF><DEFINITION_NAME>');
       34    11447    1   DCL INTERPR(0:6)         CHAR(69)            CONSTANT  INIT(
       35    11448    1   'A    <CON_DEF>   <USED>    <MULT_DEF>                      <SOURCE>',
       36    11449    1   'AYES:    =       <BLANK>       +          OBJECT FILE      <BLANK> ',
       37    11450    1   'ANO : <BLANK>      *        <BLANK>       SHARED LIB.         S    ',
       38    11451    1   'A                                         ALT. SHARED LIB.    A    ',
       39    11452    1   'A                                         PRIVATE LIB.        P    ',
       40    11453    1   'A                                         RUN FILE            R    ' ,
       41    11454    1   'B                                         REMOVED             r    '  );
       42    11455    1   DCL LOW_HIGH_SIZE_LIT  CHAR(0)   STATIC  INIT(
       43    11456    1   'A               LOW      HIGH      SIZE');
       44    11457    1   DCL LOW_HIGH_SIZE_UNDERLINE  CHAR(0)  STATIC  INIT(
       45    11458    1   'A            ------    ------    ------');
       46    11459    1   DCL  PROCT_TYPE (0:1/*@PROC*/)  CHAR(39)  STATIC  INIT(
       47    11460    1   'ADATA                                  ',
       48    11461    1   'BPROCEDURE                             ' );
       49    11462    1   DCL SC_TYPE(0:8) CHAR(8) CONSTANT INIT(
       50    11463    1              'DATA    ',
       51    11464    1              'PROC    ',
       52    11465    1              'BLKCOM  ',
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:16   
       53    11466    1              'LBLCOM-R',
       54    11467    1              'LBLCOM  ',
       55    11468    1              'DCB     ',
       56    11469    1            'RODATA  ',
       57    11470    1            'ROLCOM-R',
       58    11471    1            'ROLCOM  ');
       59    11472    1   DCL SOURCE_FROM(0:5)    CHAR(1)             CONSTANT INIT(
       60    11473    1              ' ',
       61    11474    1              'S',
       62    11475    1              'A',
       63    11476    1              'P',
       64    11477    1              'R' ,
       65    11478    1              'r' );
       66    11479    1   DCL UNNAMED         CHAR(9)             CONSTANT  INIT(
       67    11480    1              '<UNNAMED>');
       68    11481    1   DCL REF$MES              CHAR(REF_MES_SIZE)         BASED;
       69    11482    1   DCL REF_PRIMARY(0:2)     CHAR(55)            CONSTANT  INIT(
       70    11483    1              'B******* UNRESOLVED PRIMARY ENTRY REFERENCES *******',
       71    11484    1              'B******* UNRESOLVED PRIMARY DATA REFERENCES  *******',
       72    11485    1              'B******* UNRESOLVED PRIMARY SEGMENT REFERENCES *******' );
       73    11486    1   DCL REF_SECONDARY(0:2)   CHAR(57)            CONSTANT  INIT(
       74    11487    1              'B******* UNRESOLVED SECONDARY ENTRY REFERENCES *******',
       75    11488    1              'B******* UNRESOLVED SECONDARY DATA REFERENCES  *******',
       76    11489    1              'B******* UNRESOLVED SECONDARY SEGMENT REFERENCES *******' );
       77    11490    1   DCL DEF_MULTIPLE(0:2)         CHAR(58)            CONSTANT  INIT(
       78    11491    1              'B******* AMBIGUOUSLY DEFINED ENTRY DEFINITIONS *******',
       79    11492    1              'B******* AMBIGUOUSLY DEFINED DATA DEFINITIONS *******',
       80    11493    1              'B******* AMBIGUOUSLY DEFINED SEGMENT DEFINITIONS *******' );
       81    11494    1   DCL DEF_CONSTANT              CHAR(37)            CONSTANT  INIT(
       82    11495    1              'B******* CONSTANT DEFINITIONS *******');
       83    11496    1   DCL DEF_SORT_NAME(0:2)        CHAR(80)            CONSTANT  INIT(
       84    11497    1   'B******* RELOCATABLE ENTRY DEFINITIONS SORTED BY NAME *******',
       85    11498    1   'B******* RELOCATABLE & CONSTANT DATA DEFINITIONS SORTED BY NAME  *******',
       86    11499    1   'B******* RELOCATABLE & CONSTANT SEGMENT DEFINITIONS SORTED BY NAME *******' );
       87    11500    1   DCL DEF_SORT_VALUE(0:2)       CHAR(80)            CONSTANT  INIT(
       88    11501    1   'B******* RELOCATABLE ENTRY DEFINITIONS SORTED BY VALUE *******',
       89    11502    1   'B******* RELOCATABLE & CONSTANT DATA DEFINITIONS SORTED BY VALUE *******',
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:17   
       90    11503    1   'B******* RELOCATABLE & CONSTANT SEGMENT DEFINITIONS SORTED BY VALUE *******' );
       91    11504    1   DCL CSSBY      CHAR(0)             CONSTANT  INIT(
       92    11505    1         'B******** CONTROL SECTIONS SORTED BY VALUE ********');
       93    11506    1   DCL SEG_CSSBY  CHAR(0)             CONSTANT  INIT(
       94    11507    1   'B******** DATA SEGMENT CONTROL SECTIONS SORTED BY VALUE ********');
       95    11508    1   DCL DCB_TEXT    CHAR(0)   CONSTANT  INIT(
       96    11509    1         'B******** DCBS ********');
       97    11510    1   DCL DIAG_NODE_HDR CHAR(73)  STATIC INIT('B******* NODE = ');
       98    11511        %E;
             11512        %LSET LISTDIR='0'B;

             11519    1   /*******************************************************************************
             11520    1   *                                                                              *
             11521    1   *                          ENTRY                                                 *
             11522    1   *                                                                              *
             11523    1   *******************************************************************************/

       99    11527        %ENTRIES;
             11528    1   DCL VXE$ERROR       ENTRY(4);
             11529    1   DCL VXE$ERR         ENTRY(3);
             11530    1   DCL VXE$MERC        ENTRY;
             11531    1   DCL VXE$ERRMSG      ENTRY(3);
             11532    1   DCL VXR$READ        ENTRY( 3 );
             11533    1   DCL VXW$WRITE       ENTRY( 3 );
             11534    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             11535    1   DCL VXD$B2C         ENTRY( 5 );
             11536    1   DCL VXD$C2B         ENTRY( 3 );
             11537    1   DCL VXA$GET         ENTRY( 3 );
             11538    1   DCL VXF$FREE        ENTRY( 3 );
             11539    1   DCL VXQ$SORT        ENTRY( 7 );
             11540    1   DCL VXY$YESNO       ENTRY( 1 );
      100    11542        %ENTRIES_IO;
             11543    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11544    1   DCL VXF$CLOSE       ENTRY(3);
             11545    1   DCL VXU$PREAD       ENTRY(12);
             11546    1   DCL VXK$KEY         ENTRY(4);
             11547    1   DCL VXI$READ        ENTRY(4)  ALTRET;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:18   
             11548    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
      101    11550    1   DCL VXQ$SORT_V           ENTRY( 7 );
      102    11551        %PTR;
             11552        %LSET LISTDIR='0'B;

             11559    1   /*******************************************************************************
             11560    1   *                                                                              *
             11561    1   *                          PTR                                                 *
             11562    1   *                                                                              *
             11563    1   *******************************************************************************/

      103    11567    1   DCL NAME$           PTR  ALIGNED   AUTO;
      104    11568    1   DCL DNAME$          PTR  ALIGNED   AUTO;
      105    11569    1   DCL START$          PTR  ALIGNED   AUTO;
      106    11570    1   DCL SNAME$          PTR  ALIGNED   AUTO;
      107    11571    1   DCL S$          PTR  ALIGNED   AUTO;
      108    11572    1   DCL DCB_HEAD$        PTR  ALIGNED   AUTO;
      109    11573    1   DCL DCB_TAIL$        PTR  ALIGNED   AUTO;
      110    11574    1   DCL BASE$            PTR  ALIGNED   AUTO;
      111    11575        %POINTER;
             11576    1   DCL P$         PTR       ALIGNED AUTO;
             11577    1   DCL Q$         PTR       ALIGNED AUTO;
             11578    1   DCL R$         PTR       ALIGNED AUTO;
      112    11580    1   DCL CURR$           PTR  ALIGNED   AUTO;
      113    11581        %U;
             11582        %LSET LISTDIR='0'B;

             11589    1   /*******************************************************************************
             11590    1   *                                                                              *
             11591    1   *                          UBIN                                                 *
             11592    1   *                                                                              *
             11593    1   *******************************************************************************/

      114    11597        %INDEX;
             11598    1   DCL I          UBIN(36) ALIGNED AUTO;
             11599    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11600    1   DCL J          UBIN(36) ALIGNED AUTO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:19   
             11601    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11602    1   DCL K          UBIN(36) ALIGNED AUTO;
             11603    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11604    1   DCL L          UBIN(36) ALIGNED AUTO;
             11605    1   DCL SL REDEF L    SBIN WORD ALIGNED;
      115    11607    1   DCL RTYPE           UBIN(36)  ALIGNED   AUTO;
      116    11608    1   DCL NPAGE           UBIN(36)  ALIGNED   AUTO;
      117    11609    1   DCL TSIZE_READ      UBIN(36)  ALIGNED   AUTO;
      118    11610    1   DCL SIZE            UBIN(36)  ALIGNED   AUTO;
      119    11611    1   DCL FSIZE           UBIN(36)  ALIGNED   AUTO;
      120    11612    1   DCL II              UBIN(36)  ALIGNED   AUTO;
      121    11613    1   DCL T_INX           UBIN(36)  ALIGNED   AUTO;
      122    11614    1   DCL BIT_INX         UBIN(36)  ALIGNED   AUTO;
      123    11615    1   DCL CON_INX         UBIN(36)  ALIGNED   AUTO;
      124    11616    1   DCL FIELD_SIZE      UBIN(36)  ALIGNED   AUTO;
      125    11617    1   DCL NUM_START       UBIN(36)  ALIGNED   AUTO;
      126    11618    1   DCL NAME_COL        UBIN(36)  ALIGNED   AUTO;
      127    11619    1   DCL WAY             UBIN(36)  ALIGNED   AUTO;
      128    11620    1   DCL N_D             UBIN(36)  ALIGNED   AUTO;
      129    11621    1   DCL TIES            UBIN(36)  ALIGNED   AUTO;
      130    11622    1   DCL GET             UBIN(36)  ALIGNED   AUTO;
      131    11623    1   DCL TSIZE           UBIN(36)  ALIGNED   AUTO;
      132    11624    1   DCL PAGE_SIZE       UBIN(36)  ALIGNED   AUTO;
      133    11625    1   DCL INIT_SIZE       UBIN(36)  ALIGNED   AUTO;
      134    11626    1   DCL REF_MES_SIZE    UBIN(36)  ALIGNED   AUTO;
      135    11627    1   DCL DIAG_TABS(0:2)  UBIN(36)  ALIGNED   CONSTANT  INIT( 7, 37, 9999999);
      136    11628    1   DCL SEGMENT     UBIN(36)  ALIGNED   AUTO;
      137    11629    1   DCL TRIGGER     UBIN(36)  ALIGNED   AUTO;
      138    11630    1   DCL VALUE       UBIN(36)  ALIGNED   AUTO;
      139    11631    1   DCL VALUE_A(0:1)  REDEF  VALUE  UBIN(18) UNAL;
      140    11632        /**/
      141    11633        /**/
      142    11634        /**/
      143    11635        %MOVE_NAME_DCL;
             11636    1   DCL MOVE_SIZE           UBIN  ALIGNED   AUTO;
             11637    1   DCL T$VAR             CHAR(MOVE_SIZE)   BASED;
             11638    1   DCL SOURCE$              PTR  ALIGNED   AUTO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:20   
      144    11640        %BUMP_CTAB_DCL;
             11641    1   DCL LAST_TAB             UBIN(36)  ALIGNED   AUTO;
      145    11643        %M_NUMBER_DCL;
             11644    1   DCL THREE$BITS(0:11)          BIT(3)    UNAL BASED;
             11645    1   DCL 1 WORK_BUF           ALIGNED   STATIC,
             11646    1         2 COMPOSITE         ALIGNED,
             11647    1           3 H                UBIN(6)   UNAL INIT( BITBIN('06'O) ),
             11648    1           3 UBN              UBIN(3)   UNAL,
             11649    1         2 CHR REDEF COMPOSITE    CHAR(1) ALIGNED;
             11650    1   DCL SIG                  BIT(1)    ALIGNED   STATIC    INIT('0'B);
             11651    1   DCL K_INDEX              UBIN(36)  ALIGNED   AUTO;
             11652    1   DCL L_INDEX              UBIN(36)  ALIGNED   AUTO;
      146    11654        %S;
             11655        %LSET LISTDIR='0'B;

             11662    1   /*******************************************************************************
             11663    1   *                                                                              *
             11664    1   *                          SBIN                                                 *
             11665    1   *                                                                              *
             11666    1   *******************************************************************************/

      147    11670    1   DCL S_STOP(0:1/*@PROC*/)       SBIN WORD ALIGNED AUTO;
      148    11671    1   DCL S_SIZE(0:1/*@PROC*/)       SBIN WORD ALIGNED AUTO;
      149    11672    1   DCL S_START(0:1/*@PROC*/)      SBIN WORD ALIGNED AUTO;
      150    11673    1   DCL AREA_LEFT        SBIN WORD ALIGNED   AUTO;
      151    11674        %BANNER(ARG="VX$TREE_HEADER - VX$TREE_NODE");
             11675        %LSET LISTDIR='0'B;

             11682    1   /*******************************************************************************
             11683    1   *                                                                              *
             11684    1   *                          VX$TREE_HEADER - VX$TREE_NODE                           *
             11685    1   *                                                                              *
             11686    1   *******************************************************************************/

      152    11690        %B$TREE_TABLE(HDR_NAME=VX$TREE_HEADER,NODE_NAME=VX$TREE_NODE);
             11691    1   DCL 1 VX$TREE_HEADER BASED ALIGNED,
             11692              /*K*  HDR_NAME is the Tree table header.  */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:21   
             11693    1         2 NODES UBIN HALF UNAL,
             11694                /*K*  NODES is the number of nodes in the tree table.  */
             11695    1         2 SIZE UBIN HALF UNAL,
             11696                /*K*  SIZE is the total word size of the tree table
             11697                      (HDR + NODES + TEST pool).   */
             11698    1         2 LIB$ PTR,
             11699                /*K*  LIB$ is the pointer to the name of the shared library
             11700                      currently associated.  */
             11701    1         2 PRECSIZE UBIN HALF UNAL,
             11702                /*K*  PRECSIZE  is the maximum program record size in the
             11703                      Run Unit (from the Head record).  */
             11704    1         2 MAX_LIB_DATA UBIN HALF UNAL;
             11705                /*K*  MAX_LIB_DATA is the maximum reserved in the program
             11706                      image for the shared library data.  */
             11707    1   DCL 1 VX$TREE_NODE BASED ALIGNED,
             11708              /*K*  NODE_NAME is the node specification.  */
             11709    1         2 NAME$ PTR,
             11710                /*K*  NAME$ is the pointer to the name of the node.  */
             11711    1         2 FLGS,
             11712                /*K*  FLGS are control flags used by M$OLAY.  */
             11713    1           3 NOW_IN BIT(1) UNAL,
             11714                  /*K*  NOW_IN is set if this node is now in memory.  */
             11715    1           3 WAS_IN BIT(1) UNAL,
             11716                  /*K*  WAS_IN is set if this node was in memory.  */
             11717    1           3 * BIT(7) UNAL,
             11718                  /*K*  * is reserved for future use and must be zero.  */
             11719    1         2 AFLGS,
             11720                /*K*  AFLGS are access flags.  */
             11721    1           3 * BIT(6) UNAL,
             11722                  /*K*  * is reserved for future use and must be zero.  */
             11723    1           3 NOPATH BIT(1) UNAL,
             11724                  /*K*  NOPATH is set if this node is independently loaded
             11725                        (no backward path).  */
             11726    1           3 ENTER BIT(1) UNAL,
             11727                  /*K*  ENTER is set if ENTRY$ is valid.  */
             11728    1           3 CANCEL BIT(1) UNAL,
             11729                  /*K*  CANCEL is set if the overlay was removed by
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:22   
             11730                        "CANCEL=YES".   */
             11731    1         2 BACK# SBIN HALF UNAL,
             11732                /*K*  BACK# is the backward link (parent).  */
             11733    1         2 FORWARD# SBIN HALF UNAL,
             11734                /*K*  FORWARD# is the forward link (daughter).  */
             11735    1         2 OVERLAY# SBIN HALF UNAL,
             11736                /*K*  OVERLAY# is the overlay link (same level).   */
             11737    1         2 PADDR UBIN HALF UNAL,
             11738                /*K*  PADDR is the address of procedure.  */
             11739    1         2 PSIZE UBIN HALF UNAL,
             11740                /*K*  PSIZE is the size of procedure.  */
             11741    1         2 DADDR UBIN HALF UNAL,
             11742                /*K*  DADDR is the address of data.  */
             11743    1         2 DSIZE UBIN HALF UNAL,
             11744                /*K*  DSIZE is the size of data.  */
             11745    1         2 ENTRY$ EPTR;
             11746                /*K*  ENTRY$ is the overlay entry point (see ENTER).  */
      153    11748        %BANNER(ARG=FPTS);
             11749        %LSET LISTDIR='0'B;

             11756    1   /*******************************************************************************
             11757    1   *                                                                              *
             11758    1   *                          FPTS                                                 *
             11759    1   *                                                                              *
             11760    1   *******************************************************************************/

      154    11764        %PLIST;
      155    11765        %FPT_WRITE( FPTN=VX_MAP_LO_FPT_WRITE,
      156    11766                   STCLASS=SYMREF);
      157    11797        %FPT_WRITE( FPTN=VX_MAP_LIT_LO_FPT_WRITE,
      158    11798                   STCLASS=SYMREF);
      159    11829        /**/
      160    11830        %FPT_WRITE( FPTN=DIAG_LIT_FPT_WRITE,
      161    11831                    DCB=M$DO,
      162    11832                    BUF=VX_MBUF,
      163    11833                    VFC=YES);
      164    11864        /**/
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:23   
      165    11865        %FPT_WRITE( FPTN=DIAG_FPT_WRITE,
      166    11866                    DCB=M$DO,
      167    11867                    BUF=VX_MBUF,
      168    11868                    VFC=YES);
      169    11899
      170    11900    1   DCL   M$DO      DCB;
      171    11901
      172    11902        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:24   
      173    11903        /*
      174    11904              Variables for map(ping)
      175    11905        */
      176    11906    1   DCL VX_MAP$               PTR  ALIGNED   SYMREF;
      177    11907    1   DCL VX_MAP_ROS$           PTR  ALIGNED   SYMREF;
      178    11908    1   DCL VX_MAP_AREA$          PTR  ALIGNED   SYMREF;
      179    11909    1   DCL VX_MAP_TREE_START$    PTR  ALIGNED   SYMREF;
      180    11910    1   DCL VX_MAP_AREA_SIZE      UBIN(36) ALIGNED SYMREF;
      181    11911    1   DCL VX_MAP_NUM            SBIN WORD ALIGNED   SYMREF;
      182    11912    1   DCL VX_MAP_REC_SIZE_A(0:9)   UBIN(36)  ALIGNED   SYMREF;
      183    11913    1   DCL VX_CTAB               UBIN(36) ALIGNED SYMREF;
      184    11914    1   DCL VX_MAP_TABS_A(0:4)    UBIN(36)  ALIGNED   SYMREF;
      185    11915
      186    11916    1   DCL VX_MAP_WIDTH          UBIN(36)  ALIGNED   SYMREF;
      187    11917    1   DCL VX_MAP_WIDTH_HDR      UBIN(36)  ALIGNED   SYMREF;
      188    11918    1   DCL VX_MAX_CTAB           UBIN(36)  ALIGNED   SYMREF;
      189    11919    1   DCL 1 VX_MBUF ALIGNED SYMREF,
      190    11920    1         2 CHARS CHAR(132) UNAL,
      191    11921    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      192    11922    1         2 LIT_BUF REDEF CHARS UNAL,
      193    11923    1           3 VFC CHAR(1) UNAL,
      194    11924    1           3 CHARS CHAR(131) UNAL;
      195    11925    1   DCL VX_HDR_FIELD1              UBIN(36)  ALIGNED   SYMREF;
      196    11926    1   DCL VX_HDR_FIELD2              UBIN(36)  ALIGNED   SYMREF;
      197    11927    1   DCL 1 VX_MAP_HDR0 ALIGNED SYMREF,
      198    11928    1         2 CHARS CHAR(132) UNAL,
      199    11929    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      200    11930    1         2 LIT_BUF REDEF CHARS UNAL,
      201    11931    1           3 VFC CHAR(1) UNAL,
      202    11932    1           3 CHARS CHAR(131) UNAL;
      203    11933    1   DCL 1 VX_MAP_HDR ALIGNED SYMREF,
      204    11934    1         2 CHARS CHAR(132) UNAL,
      205    11935    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      206    11936    1         2 LIT_BUF REDEF CHARS UNAL,
      207    11937    1           3 VFC CHAR(1) UNAL,
      208    11938    1           3 CHARS CHAR(131) UNAL;
      209    11939    1   DCL 1 VX_MAP_HDR1 ALIGNED SYMREF,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:25   
      210    11940    1         2 CHARS CHAR(132) UNAL,
      211    11941    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      212    11942    1         2 LIT_BUF REDEF CHARS UNAL,
      213    11943    1           3 VFC CHAR(1) UNAL,
      214    11944    1           3 CHARS CHAR(131) UNAL;
      215    11945    1   DCL 1 VX_MAP_UTS_HDR ALIGNED SYMREF,
      216    11946    1         2 CHARS CHAR(132) UNAL,
      217    11947    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      218    11948    1         2 LIT_BUF REDEF CHARS UNAL,
      219    11949    1           3 VFC CHAR(1) UNAL,
      220    11950    1           3 CHARS CHAR(131) UNAL;
      221    11951        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:26   
      222    11952    1         VX_MAP_LO_FPT_WRITE.BUF_.BOUND = VX_MAP_WIDTH_HDR;
      223    11953    2         IF VX_O.OPT.MAP >= 0 THEN DO;
      224    11954    2             VX_MAP_LO_FPT_WRITE.BUF_.BUF$ = ADDR( VX_MAP_HDR0 );
      225    11955    2             CALL M$WRITE( VX_MAP_LO_FPT_WRITE)           ALTRET(MAP_IO_ERROR);
      226    11956    2             VX_MAP_LO_FPT_WRITE.BUF_.BUF$ = ADDR( VX_MAP_HDR );
      227    11957    2             CALL M$WRITE( VX_MAP_LO_FPT_WRITE)           ALTRET(MAP_IO_ERROR);
      228    11958    2             VX_MAP_LO_FPT_WRITE.BUF_.BUF$ = ADDR( VX_MAP_UTS_HDR );
      229    11959    2             CALL M$WRITE( VX_MAP_LO_FPT_WRITE)           ALTRET(MAP_IO_ERROR);
      230    11960    2            END;
      231    11961    1         VX_MAP_LIT_LO_FPT_WRITE.BUF_ = VECTOR( VX_MAP_HDR1 );
      232    11962    1         CALL INSERT(VX_MAP_HDR1.CHARS, VX_HDR_FIELD2+7, 7, ' ' );
      233    11963    1         VX_MAP_LO_FPT_WRITE.BUF_.BUF$      =    ADDR( VX_MBUF );
      234    11964    1         VX_MAP_LO_FPT_WRITE.BUF_.BOUND     =    VX_MAP_WIDTH;
      235    11965    1         R$ = ADDR( VX_CURR$ -> VX$TREE_NODE.NAME$ );
      236    11966    1         P$ = PINCRW( VX_MAP_TREE_START$, R$ -> VX$HALF_A(0) );
      237    11967    1         CALL INSERT(VX_MAP_HDR1.CHARS, VX_HDR_FIELD1+8, 31, P$->T$C_UNAL.CHARS );
      238    11968    1         CALL INSERT(DIAG_NODE_HDR, 16, , P$->T$C_UNAL.CHARS, ' *******');
      239    11969    1         SIZE =
      240    11970    1                 ( VX_CURR$ -> VX$TREE_NODE.PSIZE + 1024/*@PAGE_SIZE*/ -1 ) / 1024
             11970                          /*@PAGE_SIZE*/
      241    11971    1                 +
      242    11972    1                 ( VX_CURR$ -> VX$TREE_NODE.DSIZE + 1024/*@PAGE_SIZE*/ -1 ) / 1024
             11972                          /*@PAGE_SIZE*/;
      243    11973    1         CALL VXD$B2C( VX_MAP_HDR1.CHARS_A, VX_HDR_FIELD2+7, 7, SIZE, 10 );
      244    11974    1         NOT_DIAG_NODE_LINE = '1'B/*@TRUE_B*/;
      245    11975    2         IF VX_O.OPT.MAP >= 0 THEN DO;
      246    11976    2             CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE )          ALTRET( MAP_IO_ERROR );
      247    11977    2             NOT_NODE_LINE = '0'B/*@FALSE_B*/;
      248    11978    2            END;
      249    11979    2         ELSE DO;
      250    11980    2             NOT_NODE_LINE = '1'B/*@TRUE_B*/;
      251    11981    2             GOTO READ_RECORDS;
      252    11982    2            END;
      253    11983    2         IF VX_MAP_NUM = 0 THEN DO;
      254    11984                  %WR_LIT( MES1=INTERPR_HDR );
      255    11994    3             DO I = 0 TO 6;
      256    11995                      %WR_LIT( MES1="INTERPR(I)" );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:27   
      257    12005    3                END;
      258    12006    2            END;
      259    12007    2         IF VX_MAP_NUM > 0 OR VX_CURR$ -> VX$TREE_NODE.FORWARD# > 0 THEN DO;
      260    12008                  %WR_LIT( MES1=LOW_HIGH_SIZE_LIT );
      261    12018                  %WR_LIT( MES1=LOW_HIGH_SIZE_UNDERLINE );
      262    12028    2             S_START(0/*@DATA*/) = VX_CURR$ -> VX$TREE_NODE.DADDR;
      263    12029    2             S_STOP(0/*@DATA*/)  = VX_CURR$ -> VX$TREE_NODE.DADDR
      264    12030    2                     +
      265    12031    2                     VX_CURR$ -> VX$TREE_NODE.DSIZE  - 1;
      266    12032    2             S_SIZE(0/*@DATA*/)  = VX_CURR$ -> VX$TREE_NODE.DSIZE;
      267    12033    2             S_START(1/*@PROC*/) = VX_CURR$ -> VX$TREE_NODE.PADDR;
      268    12034    2             S_STOP(1/*@PROC*/)  = VX_CURR$ -> VX$TREE_NODE.PADDR
      269    12035    2                     +
      270    12036    2                     VX_CURR$ -> VX$TREE_NODE.PSIZE  - 1;
      271    12037    2             S_SIZE(1/*@PROC*/)  = VX_CURR$ -> VX$TREE_NODE.PSIZE;
      272    12038    3             DO I = 0/*@DATA*/ TO 1/*@PROC*/;
      273    12039    4                 IF S_SIZE(I) > 0 THEN DO;
      274    12040    4                     CALL VXD$B2C( PROCT_TYPE(I), 13, 6, S_START(I), 8 );
      275    12041    4                     CALL VXD$B2C( PROCT_TYPE(I), 23, 6, S_STOP(I), 8 );
      276    12042    4                    END;
      277    12043    3                 ELSE CALL INSERT( PROCT_TYPE(I), 13, , ' ' );
      278    12044    3                 CALL VXD$B2C( PROCT_TYPE(I), 33, 6, S_SIZE(I), 8 );
      279    12045                      %WR_LIT( MES1="PROCT_TYPE(I)" );
      280    12055    3                END;
      281    12056    2            END;
      282    12057        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:28   
      283    12058        /*
      284    12059                        Read in the records
      285    12060        */
      286    12061    1   READ_RECORDS:
      287    12062    1         VX_MAP_LO_FPT_WRITE.BUF_      = VECTOR( VX_MBUF );
      288    12063    1         VX_MAP$ -> VX$NODE.NUM = VX_MAP_NUM;
      289    12064    1         START$ = VX_MAP_AREA$;
      290    12065    1         AREA_LEFT = VX_MAP_AREA_SIZE;
      291    12066    2         DO I = 1 TO 9;
      292    12067    2             VX_MAP$ -> VX$NODE.L_START_A$(I)  = ADDR(NIL);
      293    12068    2             VX_MAP$ -> VX$NODE.L_STOP_A$(I)   = ADDR(NIL);
      294    12069    2             VX_MAP$ -> VX$NODE.L_SIZE_A(I) = 0;
      295    12070    2             VX_MAP$ -> VX$NODE.L_PREV_SIZE_A(I) = 0;
      296    12071    3             DO CASE(I);
      297    12072    3               CASE(     1,
      298    12073    3                     4,
      299    12074    3                     6,
      300    12075    3                     8  );        /* Defs */
      301    12076    3                 TSIZE = VX_MAP_REC_SIZE_A(I);
      302    12077    3                 PAGE_SIZE = TSIZE;
      303    12078    3                 INIT_SIZE = TSIZE;
      304    12079        /**/
      305    12080    3               CASE( ELSE );
      306    12081    3                 TSIZE = BITBIN('777777'O);
      307    12082    3                 PAGE_SIZE = BITBIN('4000'O);;
      308    12083    3                 INIT_SIZE = PAGE_SIZE;
      309    12084    3               END;                        /* Do case(i); */
      310    12085    3             IF PAGE_SIZE > 0 AND TSIZE > 0 THEN DO;
      311    12086    4                 IF INIT_SIZE > AREA_LEFT THEN DO;
      312    12087    4                     GET = ( INIT_SIZE - AREA_LEFT ) ;
      313    12088                          %ALLOCATE(
      314    12089                          PTR$=NAME$,
      315    12090                          TYPE=@MAP_DS,
      316    12091                          SIZE=GET);
      317    12098    4                     VX_MAP_AREA_SIZE = VX_MAP_AREA_SIZE + GET;
      318    12099    4                     AREA_LEFT = AREA_LEFT + GET;
      319    12100    4                    END;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:29   
      320    12101    3                 CALL VXU$PREAD(     NPAGE,
      321    12102    3                         TSIZE_READ,
      322    12103    3                         1/*@RF*/,
      323    12104    3                         1/*@RF*/,
      324    12105    3                         I,
      325    12106    3                         START$,
      326    12107    3                         PAGE_SIZE,
      327    12108    3                         TSIZE,
      328    12109    3                         4/*@MAP_DS*/,
      329    12110    3                         INIT_SIZE,
      330    12111    3                         VX_MAP$,
      331    12112    3                         -1 );
      332    12113    4                 IF TSIZE_READ <= 0 THEN DO;
      333    12114    4                     VX_MAP$ -> VX$NODE.L_START_A$(I) = ADDR(NIL);
      334    12115    4                     VX_MAP$ -> VX$NODE.L_STOP_A$(I)  = ADDR(NIL);
      335    12116    4                    END;
      336    12117    4                 ELSE DO;
      337    12118    4                     START$ = PINCRW( START$, TSIZE_READ );
      338    12119    4                     AREA_LEFT = AREA_LEFT - TSIZE_READ;
      339    12120    4                     IF AREA_LEFT < 0 THEN AREA_LEFT = 0;
      340    12121    5                     IF NPAGE > 1 AND I > 3 THEN DO;
      341    12122    6                         IF MOD( I, 2 ) = 1 THEN DO;
      342    12123    6                             NAME$ = VX_MAP$ -> VX$NODE.L_START.RN$;
      343    12124    6                             N_D = 0;
      344    12125    6                             TIES = 1;
      345    12126    6                             SIZE = SIZEW( VXR$TMPLT );
      346    12127    6                            END;
      347    12128    6                         ELSE DO;
      348    12129    6                             NAME$ = VX_MAP$ -> VX$NODE.L_START.DN$;
      349    12130    6                             SIZE = SIZEW( VXD$TMPLT );
      350    12131    6                             N_D = 2;
      351    12132    6                             TIES = 0;
      352    12133    6                            END;
      353    12134    5                         CALL VXQ$SORT( NAME$,
      354    12135    5                                 VX_MAP$ -> VX$NODE.L_START_A$(I),
      355    12136    5                                 VX_MAP$ -> VX$NODE.L_STOP_A$(I),
      356    12137    5                                 SIZE,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:30   
      357    12138    5                                 1/*@BY_NAME*/,
      358    12139    5                                 N_D,
      359    12140    5                                 TIES );
      360    12141    5                        END;
      361    12142    4                    END;                   /* If TSIZE_READ <= 0 then do; */
      362    12143    3                END;
      363    12144    2            END;
      364    12145        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:31   
      365    12146        /*
      366    12147                        References - primary/secondary
      367    12148        */
      368    12149    1         VX_MBUF.CHARS_A(0) = 'A';
      369    12150    1         NAME$ = VX_MAP$ -> VX$NODE.L_START.RN$;
      370    12151    1         DNAME$ = VX_MAP$ -> VX$NODE.L_START.DN$;
      371    12152    2         DO II = 0 TO 1;
      372    12153    2             BIT_INX = 0;
      373    12154    3             DO I = 1 TO SIZEW( VX_REF_REC_A ) - 1;
      374    12155    3                 NOT_WROTE = '1'B/*@TRUE_B*/;
      375    12156    3                 RTYPE = VX_REF_REC_A(I);
      376    12157    3                 P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);
      377    12158    3                 IF P$ ~= ADDR(NIL) AND
      378    12159    3                         ( ( II = 0 AND VX_RU_HEAD_BUF.MAP_BITS_A.PRIMARY(BIT_INX) )
      379    12160    3                         OR
      380    12161    3                         ( II = 1 AND VX_RU_HEAD_BUF.MAP_BITS_A.SECONDARY(BIT_INX) ) )
      381    12162    4                 THEN DO;
      382    12163    5                     IF II = 0 THEN DO;
      383    12164    5                         R$ = ADDR( REF_PRIMARY(BIT_INX) );
      384    12165    5                         REF_MES_SIZE = LENGTHC( REF_PRIMARY(0) );
      385    12166    5                        END;
      386    12167    5                     ELSE DO;
      387    12168    5                         R$ = ADDR( REF_SECONDARY(BIT_INX) );
      388    12169    5                         REF_MES_SIZE = LENGTHC( REF_SECONDARY(0) );
      389    12170    5                        END;               /* Else do; - if ii = 0 then do; */
      390    12171    4                     Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);
      391    12172    5                     DO WHILE ( P$ <= Q$ );
      392    12173    5                         SIZE = PINCRW( NAME$, P$ -> VXR$TMPLT.NPOINTER ) -> B$DNAME.
             12173                                  COUNT;
      393    12174    5                         FSIZE = SIZE;
      394    12175    5                         IF P$ -> VXR$TMPLT.GOT THEN
      395    12176    5                             FSIZE = FSIZE
      396    12177    5                                     +
      397    12178    5                                     PINCRW( DNAME$, P$ -> VXR$TMPLT.OPOINTER ) ->
             12178                                              B$DNAME.COUNT + 1;
      398    12179    5                         IF (VX_CTAB > 1)  OR  (FSIZE + DIAG_TABS(VX_CTAB) > 80)
      399    12180    6                         THEN DO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:32   
      400    12181    7                             IF NOT_NODE_LINE THEN DO;
      401    12182    7                                 CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET(
             12182                                          MAP_IO_ERROR);
      402    12183    7                                 NOT_NODE_LINE = '0'B/*@FALSE_B*/;
      403    12184    7                                END;
      404    12185    7                             IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;
      405    12186    7                                 DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);
      406    12187    7                                 CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);
      407    12188    7                                 NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;
      408    12189    7                                END;
      409    12190    7                             IF NOT_WROTE THEN DO;
      410    12191    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;
      411    12192                                      %WR_LIT(DIAG=YES, MES1="R$ -> REF$MES" );
      412    12202    7                                END;       /* If NOT_WROTE */
      413    12203                                  %M_WRITE( DIAG=YES );
      414    12212    6                            END;
      415    12213    5                         IF II = 0
      416    12214    5                         THEN
      417    12215    6                         DO;
      418    12216    6                             IF P$->VXR$TMPLT.SREF
      419    12217    6                             THEN GOTO NEXT;
      420    12218    6                            END;
      421    12219    5                         ELSE
      422    12220    6                         DO;
      423    12221    6                             IF NOT P$->VXR$TMPLT.SREF
      424    12222    6                             THEN GOTO NEXT;
      425    12223    6                            END;
      426    12224                              %MOVE_NAME(
      427    12225                              REF1="VXR$TMPLT.NPOINTER",
      428    12226                              NAME$=NAME$,
      429    12227                              TABBER="DIAG_TABS(VX_CTAB)");
      430    12231    6                         IF P$ -> VXR$TMPLT.GOT THEN DO;
      431    12232    6                             T_INX = DIAG_TABS(VX_CTAB)+SIZE;
      432    12233    6                             VX_MBUF.CHARS_A(T_INX+1) = 'i';
      433    12234    6                             VX_MBUF.CHARS_A(T_INX+2) = 'n';
      434    12235                                  %MOVE_NAME(
      435    12236                                  REF1="VXR$TMPLT.OPOINTER",
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:33   
      436    12237                                  NAME$=DNAME$,
      437    12238                                  TABBER="T_INX+4");
      438    12242    6                            END;
      439    12243                              %BUMP_CTAB(TAB_A=DIAG_TABS, INC=FSIZE, SPACE=4);
      440    12249    5   NEXT:
      441    12250    5                         P$ = PINCRW( P$, SIZEW( VXR$TMPLT ) );
      442    12251    5                        END;               /* Do while */
      443    12252    5                     IF VX_CTAB ~= 0 THEN DO;
      444    12253    6                         IF NOT_NODE_LINE THEN DO;
      445    12254    6                             CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET(
             12254                                      MAP_IO_ERROR);
      446    12255    6                             NOT_NODE_LINE = '0'B/*@FALSE_B*/;
      447    12256    6                            END;
      448    12257    6                         IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;
      449    12258    6                             DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);
      450    12259    6                             CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);
      451    12260    6                             NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;
      452    12261    6                            END;
      453    12262    6                         IF NOT_WROTE THEN DO;
      454    12263                                  %WR_LIT( DIAG=YES, MES1="R$ -> REF$MES" );
      455    12273    6                            END;
      456    12274                              %M_WRITE(DIAG=YES, BEFORE="VX_MBUF.LIT_BUF.VFC='B';");
      457    12283    5                        END;
      458    12284    5                     ELSE DO;
      459    12285    6                         IF NOT NOT_WROTE THEN DO;
      460    12286                                  %M_WRITE( DIAG=YES);
      461    12295    6                            END;           /* If ~NOT_WROTE then do; */
      462    12296    5                        END;               /* Else do */
      463    12297    4                    END;                   /* If P$ ~= addr(nil ) ... */
      464    12298    3                 BIT_INX = BIT_INX + 1;
      465    12299    3                END;                       /* Do i = 1 to ... */
      466    12300    2            END;                           /* Do ii = 0 to 1; */
      467    12301        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:34   
      468    12302        /*
      469    12303                        Multiply defined symbols
      470    12304        */
      471    12305    1         BIT_INX = 0;
      472    12306    2         DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;
      473    12307    2             NOT_WROTE = '1'B/*@TRUE_B*/;
      474    12308    2             RTYPE = VX_DEF_REC_A(I);
      475    12309    2             P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);
      476    12310    2             IF P$ ~= ADDR(NIL)
      477    12311    2                     AND  VX_RU_HEAD_BUF.MAP_BITS_A.MULTIPLE(BIT_INX)
      478    12312    3             THEN DO;
      479    12313    3                 Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);
      480    12314    4                 DO WHILE ( P$ <= Q$ );
      481    12315    4                     S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );
      482    12316    5                     IF RTYPE ~= 4 THEN DO;
      483    12317    5                         IF P$ -> VXD$TMPLT.CONSTNT AND NOT P$ -> VXD$TMPLT.LFLAGS.
             12317                                  MULTIPLE THEN GOTO SKIP_IT;
      484    12318    5                        END;
      485    12319    4                     IF NOT P$ -> VXD$TMPLT.AD.LFLAGS.MULTIPLE THEN GOTO SKIP_IT;
      486    12320    4                     SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );
      487    12321    4                     SIZE = SNAME$ -> B$DNAME.COUNT;
      488    12322    4                     IF  (VX_CTAB > 1)  OR  (SIZE + DIAG_TABS(VX_CTAB) > 80)
      489    12323    5                     THEN DO;
      490    12324    6                         IF NOT_NODE_LINE THEN DO;
      491    12325    6                             CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET(
             12325                                      MAP_IO_ERROR);
      492    12326    6                             NOT_NODE_LINE = '0'B/*@FALSE_B*/;
      493    12327    6                            END;
      494    12328    6                         IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;
      495    12329    6                             DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);
      496    12330    6                             CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);
      497    12331    6                             NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;
      498    12332    6                            END;
      499    12333    6                         IF NOT_WROTE THEN DO;
      500    12334    6                             NOT_WROTE = '0'B/*@FALSE_B*/;
      501    12335                                  %WR_LIT( DIAG=YES, MES1="DEF_MULTIPLE(BIT_INX)" );
      502    12345    6                            END;           /* If NOT_WROTE */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:35   
      503    12346                              %M_WRITE( DIAG=YES );
      504    12355    5                        END;
      505    12356    4                     IF S$ > Q$ THEN GOTO JUMP_OUT;
      506    12357    5                     DO WHILE(
      507    12358    5                             SNAME$ -> B$DNAME.TEXT
      508    12359    5                             =
      509    12360    5                             PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) -> B$DNAME.TEXT
             12360                                      );
      510    12361    5                         S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );
      511    12362    5                         IF S$ > Q$ THEN GOTO JUMP_OUT;
      512    12363    5                        END;
      513    12364    4   JUMP_OUT:
      514    12365                          %MOVE_NAME(
      515    12366                          REF1="VXD$TMPLT.NPOINTER",
      516    12367                          NAME$=DNAME$,
      517    12368                          TABBER="VX_MAP_TABS_A(VX_CTAB)");
      518    12372                          %BUMP_CTAB(TAB_A=DIAG_TABS, INC=SIZE, SPACE=4);
      519    12378    4   SKIP_IT:
      520    12379    4                     P$ = S$;
      521    12380    4                    END;                   /* Do while */
      522    12381    4                 IF VX_CTAB ~= 0 THEN DO;
      523    12382    5                     IF NOT_NODE_LINE THEN DO;
      524    12383    5                         CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET( MAP_IO_ERROR);
      525    12384    5                         NOT_NODE_LINE = '0'B/*@FALSE_B*/;
      526    12385    5                        END;
      527    12386    5                     IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;
      528    12387    5                         DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);
      529    12388    5                         CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);
      530    12389    5                         NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;
      531    12390    5                        END;
      532    12391    5                     IF NOT_WROTE THEN DO;
      533    12392                              %WR_LIT( DIAG=YES, MES1="DEF_MULTIPLE(BIT_INX)");
      534    12402    5                        END;
      535    12403                          %M_WRITE( DIAG=YES,
      536    12404                          BEFORE="VX_MBUF.LIT_BUF.VFC='B';");
      537    12413    4                    END;
      538    12414    4                 ELSE DO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:36   
      539    12415    5                     IF NOT NOT_WROTE THEN DO;
      540    12416                              %M_WRITE( DIAG=YES );
      541    12425    5                        END;               /* If ~NOT_WROTE then do; */
      542    12426    4                    END;                   /* Else do */
      543    12427    3                END;                       /* If P$ ~= addr(nil ) ... */
      544    12428    2             BIT_INX = BIT_INX + 1;
      545    12429    2            END;                           /* Do i = 1 to ... */
      546    12430    1         IF VX_O.OPT.MAP < 0 THEN RETURN;
      547    12431        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:37   
      548    12432        /*
      549    12433                        Control sections
      550    12434        */
      551    12435              %SUB @M_SC_START_ADR =    12/*@M_SC_START_ADR*/;
      552    12436    1         P$ = VX_MAP$ -> VX$NODE.L_START.SC$;
      553    12437    2         IF P$ ~= ADDR(NIL) THEN DO;
      554    12438    2             Q$ = VX_MAP$ -> VX$NODE.L_STOP.SC$;
      555    12439    2             NAME$ = VX_MAP$ -> VX$NODE.L_START.DN$;
      556    12440    2             DCB_HEAD$ = ADDR(NIL);
      557    12441    2             DCB_TAIL$ = ADDR(NIL);
      558    12442    2             BASE$ = P$;
      559    12443    2             TRIGGER = 0;
      560    12444                  %WR_LIT( MES1=CSSBY );
      561    12454    3             DO WHILE( P$ <= Q$  );
      562    12455    3                 IF P$ -> VX$SC.ATTR.SEGMENT THEN GOTO PRINT_SEG_SECTIONS;
      563    12456    3                 S$ = PINCRW( P$, SIZEW( VX$SC ) );
      564    12457    3                 IF P$ -> VX$SC.SIZE <= 0 THEN GOTO EMPTY_SC;
      565    12458    4                 IF S$ <= Q$ THEN DO;
      566    12459    5                     DO WHILE( S$ -> VX$SC.ADDRESS = P$ -> VX$SC.ADDRESS );
      567    12460    5                         S$ = PINCRW( S$, SIZEW( VX$SC ) );
      568    12461    5                         IF S$ > Q$ THEN GOTO LAST_SC;
      569    12462    5                        END;
      570    12463    4                    END;
      571    12464    3   LAST_SC:
      572    12465    4                 DO CASE( P$ -> VX$SC.TYPE );
      573    12466    4                   CASE( 0, 2, 4, 3 );
      574    12467    4                     TRIGGER = 1;
      575    12468    4                   CASE(1,6,7,8);
      576    12469    5                     IF TRIGGER = 1 THEN DO;
      577    12470    5                         TRIGGER = 2;
      578    12471                              %M_WRITE( CLEAR=" ", ZERO=" " );
      579    12480    5                        END;
      580    12481        /**/
      581    12482    4                   CASE( 5 );
      582    12483    5                     IF DCB_HEAD$ = ADDR(NIL) THEN DO;
      583    12484    5                         DCB_HEAD$ = P$;
      584    12485    5                        END;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:38   
      585    12486    5                     ELSE DO;
      586    12487    5                         DCB_TAIL$ -> VX$SC.COM_LINK = POFFW( P$, BASE$ );
      587    12488    5                        END;
      588    12489    4                     P$ -> VX$SC.COM_LINK = POFFW( P$, BASE$ );
      589    12490    4                     DCB_TAIL$ = P$;
      590    12491    4                     GOTO EMPTY_SC;
      591    12492    4                   END;                    /* Do case */
      592    12493                      %M_NUMBER(
      593    12494                      VAR="R$=ADDR(P$ -> VX$SC.ADDRESS);",
      594    12495                      START=@M_SC_START_ADR,
      595    12496                      FLD_SIZE=6);
      596    12513
      597    12514    3                 CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7,
      598    12515    3                         LENGTHC( SC_TYPE(0) ), SC_TYPE( P$->VX$SC.TYPE ) );
      599    12516    4                 IF P$ -> VX$SC.NAME_DISP >= 0 THEN DO;
      600    12517                          %MOVE_NAME(
      601    12518                          REF1="VX$SC.NAME_DISP",
      602    12519                          TABBER="@M_SC_START_ADR+8+LENGTHC(SC_TYPE(0))");
      603    12523    4                     IF SOURCE$->B$DNAME.COUNT > 31 THEN
      604    12524    4                         CALL INSERT ( VX_MBUF.CHARS,
      605    12525    4                                 12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0))+31,
      606    12526    4                                     /* Len */,
      607    12527    4                                 '...' ) ;
      608    12528    4                    END;
      609    12529    4                 ELSE DO;
      610    12530    4                     CALL INSERT( VX_MBUF.CHARS,
      611    12531    4                             12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0)),
      612    12532    4                             LENGTHC( UNNAMED), UNNAMED );
      613    12533    4                    END;
      614    12534                      %M_NUMBER(
      615    12535                      VAR="R$=ADDR(P$ -> VX$SC.SIZE );",
      616    12536                      START=59,
      617    12537                      FLD_SIZE=6);
      618    12554                      %M_WRITE;
      619    12563    3   EMPTY_SC:
      620    12564    3                 P$ = S$;
      621    12565    3                END;                       /* Do while */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:39   
      622    12566                  %M_WRITE( CLEAR=" ", ZERO=" " );
      623    12575
      624    12576        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:40   
      625    12577    3             DO WHILE( '0'B );
      626    12578    3   PRINT_SEG_SECTIONS: ;
      627    12579        /*
      628    12580                                           Print data segment control sections by value
      629    12581        */
      630    12582                      %M_WRITE( CLEAR=" ", ZERO=" " );
      631    12591    3                 SEGMENT = 0;
      632    12592                      %WR_LIT( MES1=SEG_CSSBY );
      633    12602    4                 DO WHILE( P$ <= Q$ );
      634    12603    4                     S$ = PINCRW( P$, SIZEW(VX$SC) );
      635    12604    4                     IF P$ -> VX$SC.SIZE <= 0 THEN GOTO EMPTY_SEG_SC;
      636    12605    5                     IF S$ <= Q$ THEN DO;
      637    12606    6                         DO WHILE( S$ -> VX$SC.ADDRESS = P$ -> VX$SC.ADDRESS
      638    12607    6                                 AND S$ -> VX$SC.SEG = P$ -> VX$SC.SEG );
      639    12608    6                             S$ = PINCRW( S$, SIZEW(VX$SC) );
      640    12609    6                             IF S$ > Q$ THEN GOTO LAST_SEG_SC;
      641    12610    6                            END;
      642    12611    5                        END;
      643    12612    4   LAST_SEG_SC:
      644    12613    5                     IF P$ -> VX$SC.SEG ~= SEGMENT THEN DO;
      645    12614    5                         SEGMENT = P$ -> VX$SC.SEG;
      646    12615                              %M_WRITE( CLEAR=" ", ZERO=" " );
      647    12624    5                        END;
      648    12625    4                     P$ -> VX$SC.NODE# = VX_SEGID (SEGMENT);
      649    12626                          %M_NUMBER(
      650    12627                          VAR="R$=ADDR(P$ -> VX$SC.ADDRESS );",
      651    12628                          START=@M_SC_START_ADR-6,
      652    12629                          FLD_SIZE=6 );
      653    12646                          %M_NUMBER(
      654    12647                          VAR="R$=ADDR(P$ -> VX$SC.NODE#);",
      655    12648                          START=@M_SC_START_ADR,
      656    12649                          FLD_SIZE = 6 );
      657    12666
      658    12667    4                     CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7,
      659    12668    4                             LENGTHC( SC_TYPE(0) ),  SC_TYPE( P$ -> VX$SC.TYPE ) );
      660    12669    5                     IF P$ -> VX$SC.NAME_DISP >= 0 THEN DO;
      661    12670                              %MOVE_NAME(
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:41   
      662    12671                              REF1="VX$SC.NAME_DISP",
      663    12672                              TABBER="@M_SC_START_ADR+8+LENGTHC(SC_TYPE(0))" );
      664    12676    5                         IF SOURCE$->B$DNAME.COUNT > 31 THEN
      665    12677    5                             CALL INSERT ( VX_MBUF.CHARS,
      666    12678    5                                     12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0))+31,
      667    12679    5                                         /* Len */,
      668    12680    5                                     '...' ) ;
      669    12681    5                        END;
      670    12682    5                     ELSE DO;
      671    12683    5                         CALL INSERT( VX_MBUF.CHARS,
      672    12684    5                                 12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0)),
      673    12685    5                                 LENGTHC( UNNAMED ),   UNNAMED            );
      674    12686    5                        END;
      675    12687                          %M_NUMBER(
      676    12688                          VAR="R$=ADDR(P$ -> VX$SC.SIZE);",
      677    12689                          START=59,
      678    12690                          FLD_SIZE=6 );
      679    12707                          %M_WRITE;
      680    12716    4   EMPTY_SEG_SC:
      681    12717    4                     P$ = S$;
      682    12718    4                    END;                   /* Do while */
      683    12719                      %M_WRITE( CLEAR=" ", ZERO=" " );
      684    12728    3                END;                       /* Do forever */
      685    12729
      686    12730        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:42   
      687    12731    3             IF DCB_HEAD$ ~= ADDR(NIL) AND VX_MAP_NUM = 0 THEN DO;
      688    12732                      %WR_LIT( MES1=DCB_TEXT );
      689    12742    3                 P$ = VX_MAP$ -> VX$NODE.L_START.SC$;
      690    12743    4                 DO WHILE( '1'B );
      691    12744                          %MOVE_NAME(
      692    12745                          REF1="VX$SC.NAME_DISP",
      693    12746                          PTR$="DCB_HEAD$ ->",
      694    12747                          TABBER="@M_SC_START_ADR+8+LENGTHC(SC_TYPE(0))");
      695    12751    4                     MOVE_SIZE = LENGTHC( SC_TYPE(0) );
      696    12752    5                     IF DCB_HEAD$ -> VX$SC.ATTR.PRE_DCB THEN DO;
      697    12753    5                         CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7,
      698    12754    5                                 MOVE_SIZE, 'PRE-DCB' );
      699    12755    5                        END;
      700    12756    5                     ELSE DO;
      701    12757                              %M_NUMBER(
      702    12758                              VAR="R$=ADDR(DCB_HEAD$->VX$SC.ADDRESS);",
      703    12759                              START=@M_SC_START_ADR,
      704    12760                              FLD_SIZE=6);
      705    12777    5                         CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7, MOVE_SIZE
             12777                                  ,
      706    12778    5                                 SC_TYPE( 5 ) );
      707    12779                              %M_NUMBER(
      708    12780                              VAR="R$=ADDR(DCB_HEAD$->VX$SC.SIZE);",
      709    12781                              START=50,
      710    12782                              FLD_SIZE=6);
      711    12799    5                        END;               /* Else do; */
      712    12800                          %M_WRITE(ZERO=" ");
      713    12809        /**/
      714    12810        /**/
      715    12811    4                     S$ = DCB_HEAD$;
      716    12812    4                     R$ = PINCRW( NAME$, DCB_HEAD$ -> VX$SC.NAME_DISP );
      717    12813    5                     DO WHILE(
      718    12814    5                             PINCRW( NAME$, S$ -> VX$SC.NAME_DISP ) -> B$DNAME.TEXT
      719    12815    5                             =
      720    12816    5                             R$ -> B$DNAME.TEXT );
      721    12817        /**/
      722    12818    5                         Q$ = PINCRW( P$, S$ -> VX$SC.COM_LINK );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:43   
      723    12819    5                         IF Q$ = S$ THEN GOTO DONE_DCB;
      724    12820    5                         S$ = Q$;
      725    12821    5                        END;               /* Do while */
      726    12822        /**/
      727    12823    4                     DCB_HEAD$ = S$;
      728    12824    4                    END;                   /* Do forever */
      729    12825    3   DONE_DCB:
      730    12826                      %M_WRITE(ZERO=" ");
      731    12835    3                END;                       /* If DCB_HEAD$ ~= addr(nil) ... */
      732    12836    2            END;                           /* If P$ ~= addr(nil) ... */
      733    12837        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:44   
      734    12838        /*
      735    12839                        Constant defined symbols
      736    12840        */
      737    12841    2         DO I = 1 TO 2;
      738    12842    3             IF I = 1 THEN DO;
      739    12843    3                 P$ = VX_MAP$ -> VX$NODE.L_START.DD$;
      740    12844    3                 Q$ = VX_MAP$ -> VX$NODE.L_STOP.DD$;
      741    12845    3                END;
      742    12846    3             ELSE DO;
      743    12847    3                 P$ = VX_MAP$ -> VX$NODE.L_START.SD$;
      744    12848    3                 Q$ = VX_MAP$ -> VX$NODE.L_STOP.SD$;
      745    12849    3                END;
      746    12850    3             IF P$ ~= ADDR(NIL) THEN DO;
      747    12851    3                 IF VX_RU_HEAD_BUF.MAP_BITS_A.CON(I)
      748    12852    4                 THEN DO;
      749    12853    4                     NOT_WROTE = '1'B/*@TRUE_B*/;
      750    12854    5                     DO WHILE ( P$ <= Q$ );
      751    12855    5                         S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );
      752    12856    5                         IF NOT P$ -> VXD$TMPLT.CONSTNT THEN GOTO SKIP_IT_CON;
      753    12857    5                         SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );
      754    12858    5                         SIZE = SNAME$ -> B$DNAME.COUNT;
      755    12859    5                         IF VX_CTAB > VX_MAX_CTAB
      756    12860    5                                 OR  SIZE + VX_MAP_TABS_A(VX_CTAB) > VX_MAP_WIDTH
      757    12861    6                         THEN DO;
      758    12862    7                             IF NOT_WROTE THEN DO;
      759    12863    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;
      760    12864                                      %WR_LIT( MES1="DEF_CONSTANT" );
      761    12874    7                                END;       /* If NOT_WROTE then do; */
      762    12875                                  %M_WRITE;
      763    12884    6                            END;
      764    12885    6                         IF S$ <= Q$ THEN DO;
      765    12886    7                             DO WHILE( SNAME$ -> B$DNAME.TEXT
      766    12887    7                                     =
      767    12888    7                                     PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) ->
             12888                                              B$DNAME.TEXT );
      768    12889    7                                 S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );
      769    12890    7                                 IF S$ > Q$ THEN GOTO JUMP_OUT_CON;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:45   
      770    12891    7                                END;
      771    12892    6                            END;
      772    12893    5   JUMP_OUT_CON:
      773    12894                              %MOVE_NAME(
      774    12895                              REF1="VXD$TMPLT.NPOINTER",
      775    12896                              NAME$=DNAME$,
      776    12897                              TABBER="VX_MAP_TABS_A(VX_CTAB)");
      777    12901                              %BUMP_CTAB(INC=SIZE);
      778    12907    5   SKIP_IT_CON:
      779    12908    5                         P$ = S$;
      780    12909    5                        END;               /* Do while */
      781    12910    5                     IF VX_CTAB ~= 0 THEN DO;
      782    12911    6                         IF NOT_WROTE THEN DO;
      783    12912                                  %WR_LIT( MES1="DEF_CONSTANT" );
      784    12922    6                            END;
      785    12923                              %M_WRITE(
      786    12924                              BEFORE="VX_MBUF.LIT_BUF.VFC='B';");
      787    12933    5                        END;
      788    12934    5                     ELSE DO;
      789    12935    6                         IF NOT NOT_WROTE THEN DO;
      790    12936                                  %M_WRITE;
      791    12945    6                            END;           /* If ~NOT_WROTE then do; */
      792    12946    5                        END;               /* Else do */
      793    12947    4                    END;                   /* If VX_RU_HEAD_BUF.MAP_BITS_A ... */
      794    12948    3                END;                       /* If P$ ~= addr(nil ) ... */
      795    12949    2            END;                           /* Do i = 1 to 2;    */
      796    12950
      797    12951        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:46   
      798    12952        /*
      799    12953                        Sort by name if requested
      800    12954        */
      801    12955    2         IF VX_O.MAP.NAME ~= 0 THEN DO;
      802    12956    2             BIT_INX = 0;
      803    12957    3             DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;
      804    12958    3                 NOT_WROTE = '1'B/*@TRUE_B*/;
      805    12959    3                 RTYPE = VX_DEF_REC_A(I);
      806    12960    3                 P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);
      807    12961    4                 IF P$ ~= ADDR(NIL) THEN DO;
      808    12962    4                     Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);
      809    12963    5                     DO WHILE ( P$ <= Q$ );
      810    12964    5                         S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );
      811    12965    5                         IF RTYPE ~= 4
      812    12966    5                                 AND  P$ -> VXD$TMPLT.CONSTNT
      813    12967    6                         THEN DO;
      814    12968    6                             J = P$ -> VXD$TMPLT.LFLAGS.SOURCE;
      815    12969    6                             USED_BIT = P$ -> VXD$TMPLT.LFLAGS.USED;
      816    12970    6                             CON_INX = 1;
      817    12971    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.LFLAGS.MULTIPLE;
      818    12972    6                            END;
      819    12973    6                         ELSE DO;
      820    12974    6                             J = P$ -> VXD$TMPLT.AD.LFLAGS.SOURCE;
      821    12975    6                             USED_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.USED;
      822    12976    6                             CON_INX = 0;
      823    12977    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.MULTIPLE;
      824    12978    6                            END;
      825    12979    6                         DO CASE(J);
      826    12980    6                           CASE( 1,
      827    12981    6                                 2,
      828    12982    6                                 3,
      829    12983    6                                 4 );
      830    12984    6                             IF VX_O.MAP.UDEF = 0
      831    12985    6                                     AND  ( VX_O.MAP.LDEF = 0  OR  NOT USED_BIT )
      832    12986    6                             THEN GOTO SKIP_IT_NAME;
      833    12987    6                           CASE( 5 );
      834    12988    6                             IF VX_O.MAP.LDEF = 0  AND NOT VX_RU_HEAD_BUF.LIB
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:47   
      835    12989    6                             THEN GOTO SKIP_IT_NAME;
      836    12990    6                           END;
      837    12991    5                         SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );
      838    12992    5                         SIZE = SNAME$ -> B$DNAME.COUNT;
      839    12993    5                         IF VX_CTAB > VX_MAX_CTAB
      840    12994    5                                 OR  SIZE + VX_MAP_TABS_A(VX_CTAB) > VX_MAP_WIDTH
      841    12995    6                         THEN DO;
      842    12996    7                             IF NOT_WROTE THEN DO;
      843    12997    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;
      844    12998                                      %WR_LIT( MES1="DEF_SORT_NAME(BIT_INX)" );
      845    13008    7                                END;       /* If NOT_WROTE then do; */
      846    13009                                  %M_WRITE;
      847    13018    6                            END;
      848    13019    6                         IF S$ <= Q$ THEN DO;
      849    13020    7                             DO WHILE( SNAME$ -> B$DNAME.TEXT
      850    13021    7                                     =
      851    13022    7                                     PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) ->
             13022                                              B$DNAME.TEXT );
      852    13023    7                                 S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );
      853    13024    7                                 IF S$ > Q$ THEN GOTO JUMP_OUT_NAME;
      854    13025    7                                END;
      855    13026    6                            END;
      856    13027    5   JUMP_OUT_NAME:
      857    13028    5                         NAME_COL = VX_MAP_TABS_A(VX_CTAB);
      858    13029    6                         IF CON_INX ~= 0 THEN DO;
      859    13030    6                             VX_MBUF.CHARS_A( NAME_COL - 4 ) = '=';
      860    13031    6                             R$ = ADDR( P$ -> VXD$TMPLT.VALUE );
      861    13032    6                             NUM_START = NAME_COL - 16;
      862    13033    6                             FIELD_SIZE = 12;
      863    13034    6                            END;
      864    13035    6                         ELSE DO;
      865    13036    7                             DO CASE( RTYPE );
      866    13037    7                               CASE( 4, 6 );
      867    13038    7                                 R$ = ADDR( P$ -> VXD$TMPLT.AD.ISADDR );
      868    13039    7                                 NUM_START = NAME_COL - 10;
      869    13040    7                                 FIELD_SIZE = 6;
      870    13041    7                               CASE( 8 );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:48   
      871    13042    7                                 VALUE_A(0) = P$->B$SEGDEF.AD.OU.OFFSET;
      872    13043    7                                 VALUE_A(1) = P$ -> B$SEGDEF.SEG.SEGID;
      873    13044    7                                 R$ = ADDR( VALUE );
      874    13045    7                                 NUM_START = NAME_COL - 16;
      875    13046    7                                 FIELD_SIZE = 12;
      876    13047    7                               END;
      877    13048    6                            END;
      878    13049                              %M_NUMBER(
      879    13050                              VAR=" ",
      880    13051                              START=NUM_START,
      881    13052                              FLD_SIZE=FIELD_SIZE);
      882    13069    6                         IF RTYPE = 8 THEN DO;
      883    13070    6                             CALL INSERT( VX_MBUF.CHARS, NUM_START+6, 2, '  ' );
      884    13071    6                             IF SUBSTR( VX_MBUF.CHARS, NUM_START, 6 ) = ' '
      885    13072    6                             THEN VX_MBUF.CHARS_A(NUM_START+5) = '0';
      886    13073    6                            END;
      887    13074                              %MOVE_NAME(
      888    13075                              REF1="VXD$TMPLT.NPOINTER",
      889    13076                              NAME$=DNAME$,
      890    13077                              TABBER="NAME_COL");
      891    13081    5                         VX_MBUF.CHARS_A( NAME_COL - 3 ) = SOURCE_FROM(J);
      892    13082    5                         IF NOT USED_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 2 ) = '*';
      893    13083    5                         IF MULTIPLE_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 1 ) = '+';
      894    13084                              %BUMP_CTAB(INC=SIZE);
      895    13090    5   SKIP_IT_NAME:
      896    13091    5                         P$ = S$;
      897    13092    5                        END;               /* Do while */
      898    13093    5                     IF VX_CTAB ~= 0 THEN DO;
      899    13094    6                         IF NOT_WROTE THEN DO;
      900    13095                                  %WR_LIT( MES1="DEF_SORT_NAME(BIT_INX)" );
      901    13105    6                            END;
      902    13106                              %M_WRITE(
      903    13107                              BEFORE="VX_MBUF.LIT_BUF.VFC='B';");
      904    13116    5                        END;
      905    13117    5                     ELSE DO;
      906    13118    6                         IF NOT NOT_WROTE THEN DO;
      907    13119                                  %M_WRITE;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:49   
      908    13128    6                            END;           /* If ~NOT_WROTE then do; */
      909    13129    5                        END;               /* Else do */
      910    13130    4                    END;                   /* If P$ ~= addr(nil ) ... */
      911    13131    3                 BIT_INX = BIT_INX + 1;
      912    13132    3                END;                       /* Do i = 1 to ... */
      913    13133    2            END;
      914    13134        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:50   
      915    13135        /*
      916    13136                        Sort by value if requested
      917    13137        */
      918    13138    2         IF VX_O.MAP.VALUE ~= 0 THEN DO;
      919    13139    2             BIT_INX = 0;
      920    13140    3             DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;
      921    13141    3                 NOT_WROTE = '1'B/*@TRUE_B*/;
      922    13142    3                 RTYPE = VX_DEF_REC_A(I);
      923    13143    3                 P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);
      924    13144    4                 IF P$ ~= ADDR(NIL) THEN DO;
      925    13145    4                     Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);
      926    13146    4                     CALL VXQ$SORT_V( DNAME$,
      927    13147    4                             P$,
      928    13148    4                             Q$,
      929    13149    4                             SIZEW( VXD$TMPLT ),
      930    13150    4                             0/*@BY_VALUE*/,
      931    13151    4                             2,
      932    13152    4                             RTYPE );
      933    13153    5                     DO WHILE ( P$ <= Q$ );
      934    13154    5                         S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );
      935    13155    6                         IF RTYPE ~= 4 AND P$ -> VXD$TMPLT.CONSTNT THEN DO;
      936    13156    6                             J = P$ -> VXD$TMPLT.LFLAGS.SOURCE;
      937    13157    6                             USED_BIT = P$ -> VXD$TMPLT.LFLAGS.USED;
      938    13158    6                             CON_INX = 1;
      939    13159    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.LFLAGS.MULTIPLE;
      940    13160    6                            END;
      941    13161    6                         ELSE DO;
      942    13162    6                             J = P$ -> VXD$TMPLT.AD.LFLAGS.SOURCE;
      943    13163    6                             USED_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.USED;
      944    13164    6                             CON_INX = 0;
      945    13165    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.MULTIPLE;
      946    13166    6                            END;
      947    13167    6                         DO CASE(J);
      948    13168    6                           CASE( 1,
      949    13169    6                                 2,
      950    13170    6                                 3,
      951    13171    6                                 4 );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:51   
      952    13172    6                             IF VX_O.MAP.UDEF = 0
      953    13173    6                                     AND  ( VX_O.MAP.LDEF = 0  OR  NOT USED_BIT )
      954    13174    6                             THEN GOTO SKIP_IT_VALUE;
      955    13175    6                           CASE( 5 );
      956    13176    6                             IF VX_O.MAP.LDEF = 0  AND NOT VX_RU_HEAD_BUF.LIB
      957    13177    6                             THEN GOTO SKIP_IT_VALUE;
      958    13178    6                           END;
      959    13179    5                         SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );
      960    13180    5                         SIZE = SNAME$ -> B$DNAME.COUNT;
      961    13181    5                         IF VX_CTAB > VX_MAX_CTAB
      962    13182    5                                 OR  SIZE + VX_MAP_TABS_A(VX_CTAB) > VX_MAP_WIDTH
      963    13183    6                         THEN DO;
      964    13184    7                             IF NOT_WROTE THEN DO;
      965    13185    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;
      966    13186                                      %WR_LIT( MES1="DEF_SORT_VALUE(BIT_INX)" );
      967    13196    7                                END;       /* If NOT_WROTE then do; */
      968    13197                                  %M_WRITE;
      969    13206    6                            END;
      970    13207    6                         IF S$ <= Q$ THEN DO;
      971    13208    7                             DO WHILE( SNAME$ -> B$DNAME.TEXT
      972    13209    7                                     =
      973    13210    7                                     PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) ->
             13210                                              B$DNAME.TEXT );
      974    13211    7                                 S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );
      975    13212    7                                 IF S$ > Q$ THEN GOTO JUMP_OUT_VALUE;
      976    13213    7                                END;
      977    13214    6                            END;
      978    13215    5   JUMP_OUT_VALUE:
      979    13216    5                         NAME_COL = VX_MAP_TABS_A(VX_CTAB);
      980    13217    6                         IF CON_INX ~= 0 THEN DO;
      981    13218    6                             VX_MBUF.CHARS_A( NAME_COL - 4 ) = '=';
      982    13219    6                             R$ = ADDR( P$ -> VXD$TMPLT.VALUE );
      983    13220    6                             NUM_START = NAME_COL - 16;
      984    13221    6                             FIELD_SIZE = 12;
      985    13222    6                            END;
      986    13223    6                         ELSE DO;
      987    13224    7                             DO CASE( RTYPE );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:52   
      988    13225    7                               CASE( 4, 6 );
      989    13226    7                                 R$ = ADDR( P$ -> VXD$TMPLT.AD.ISADDR );
      990    13227    7                                 NUM_START = NAME_COL - 10;
      991    13228    7                                 FIELD_SIZE = 6;
      992    13229    7                               CASE( 8 );
      993    13230    7                                 VALUE_A(0) = P$->B$SEGDEF.AD.OU.OFFSET;
      994    13231    7                                 VALUE_A(1) = P$ -> B$SEGDEF.SEG.SEGID;
      995    13232    7                                 R$ = ADDR( VALUE );
      996    13233    7                                 NUM_START = NAME_COL - 16;
      997    13234    7                                 FIELD_SIZE = 12;
      998    13235    7                               END;
      999    13236    6                            END;
     1000    13237                              %M_NUMBER(
     1001    13238                              VAR=" ",
     1002    13239                              START=NUM_START,
     1003    13240                              FLD_SIZE=FIELD_SIZE);
     1004    13257    6                         IF RTYPE = 8 THEN DO;
     1005    13258    6                             CALL INSERT( VX_MBUF.CHARS, NUM_START+6, 2, '  ' );
     1006    13259    6                             IF SUBSTR( VX_MBUF.CHARS, NUM_START, 6 ) = ' '
     1007    13260    6                             THEN VX_MBUF.CHARS_A(NUM_START+5) = '0';
     1008    13261    6                            END;
     1009    13262                              %MOVE_NAME(
     1010    13263                              REF1="VXD$TMPLT.NPOINTER",
     1011    13264                              NAME$=DNAME$,
     1012    13265                              TABBER="NAME_COL");
     1013    13269    5                         VX_MBUF.CHARS_A( NAME_COL - 3 ) = SOURCE_FROM(J);
     1014    13270    5                         IF NOT USED_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 2 ) = '*';
     1015    13271    5                         IF MULTIPLE_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 1 ) = '+';
     1016    13272                              %BUMP_CTAB(INC=SIZE);
     1017    13278    5   SKIP_IT_VALUE:
     1018    13279    5                         P$ = S$;
     1019    13280    5                        END;               /* Do while */
     1020    13281    5                     IF VX_CTAB ~= 0 THEN DO;
     1021    13282    6                         IF NOT_WROTE THEN DO;
     1022    13283                                  %WR_LIT( MES1="DEF_SORT_VALUE(BIT_INX)" );
     1023    13293    6                            END;
     1024    13294                              %M_WRITE(
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:53   
     1025    13295                              BEFORE="VX_MBUF.LIT_BUF.VFC='B';");
     1026    13304    5                        END;
     1027    13305    5                     ELSE DO;
     1028    13306    6                         IF NOT NOT_WROTE THEN DO;
     1029    13307                                  %M_WRITE;
     1030    13316    6                            END;           /* If ~NOT_WROTE then do; */
     1031    13317    5                        END;               /* Else do */
     1032    13318    4                    END;                   /* If P$ ~= addr(nil ) ... */
     1033    13319    3                 BIT_INX = BIT_INX + 1;
     1034    13320    3                END;                       /* Do i = 1 to ... */
     1035    13321    2            END;
     1036    13322    1         RETURN;
     1037    13323        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:54   
     1038    13324    1   MAP_IO_ERROR:
     1039    13325    1         CALL M$MERC                             ALTRET( MERC_ERROR );
     1040    13326              %ERROR_IT;
     1041    13329    1   MERC_ERROR:
     1042    13330    1         CALL VXE$MERC;
     1043    13331    1   END VXM$NODE;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:55   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXM$NODE.

   Procedure VXM$NODE requires 2673 words for executable code.
   Procedure VXM$NODE requires 72 words of local(AUTO) storage.

    No errors detected in file VXM$NODE.:E05TSI    .

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:56   

 Object Unit name= VXM$NODE                                   File name= VXM$NODE.:E05TOU
 UTS= JUL 30 '97 08:22:58.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2  RoData even  UTS    465    721  VXM$NODE
    3   Data  even  none    86    126  VXM$NODE
    4   DCB   even  none     0      0  M$DO
    5   Proc  even  none  2673   5161  VXM$NODE
    6  RoData even  none    67    103  VXM$NODE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  VXM$NODE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VXA$GET
         yes           Std      12 VXU$PREAD
         yes           Std       7 VXQ$SORT_V
         yes           Std       5 VXD$B2C
         yes           Std       0 VXE$MERC
         yes           Std       7 VXQ$SORT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:57   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_RU_HEAD_BUF                        VX_OU_HEAD
     VX_LO_DO_DIFFER                       VX_CURR$                              VX_ERRORS
     VX_M_FREE                             VX_M_ALL                              VX_M_BASE_PTR
     VX_O                                  VX_DEF_REC_A                          VX_REF_REC_A
     VX_SEGID                              VX_MAP_LO_FPT_WRITE                   VX_MAP_LIT_LO_FPT_WRITE
     M$DO                                  VX_MAP$                               VX_MAP_AREA$
     VX_MAP_TREE_START$                    VX_MAP_AREA_SIZE                      VX_MAP_NUM
     VX_MAP_REC_SIZE_A                     VX_CTAB                               VX_MAP_TABS_A
     VX_MAP_WIDTH                          VX_MAP_WIDTH_HDR                      VX_MAX_CTAB
     VX_MBUF                               VX_HDR_FIELD1                         VX_HDR_FIELD2
     VX_MAP_HDR0                           VX_MAP_HDR                            VX_MAP_HDR1
     VX_MAP_UTS_HDR                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:58   


        1        1        /*M* VXM$NODE - maps a node.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC */
        8        8        VXM$NODE: PROC;

      8  5 000000   000000 700200 xent  VXM$NODE     TSX0  ! X66_AUTO_0
         5 000001   000110 000000                    ZERO    72,0

        9        9
       10       10        %INCLUDE VX_INC_C;
       11    10726        %B$DNAME( NAME=B$DNAME, STCLASS=BASED);
       12    10745        %VX$NODE;

             10757    1   /*******************************************************************************
             10758    1   *                                                                              *
             10759    1   *                          VX$NODE                                                *
             10760    1   *                                                                              *
             10761    1   *******************************************************************************/

             10777    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10778    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10779    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10780    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10781    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10782    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10783                              to list of file nodes for this node            */
             10784    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10785    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10785                  /* Head pointer to shared library list */
             10786    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10786                  /* Head pointer to list of shared libraries
             10787                                          which have been mapped to included libraries */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:59   
             10788    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10789    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10790    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10791    1         2 ADDR_START REDEF  ADDR_START_A,
             10792    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10793    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10794    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10795    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10796    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10797    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10798    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10799    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10800    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10801    1         2 START_PAGE# REDEF START_PAGE#_A,
             10802    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10803    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10804    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10805    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10806    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10807    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10808    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10809    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10810    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10810                  /* Starting pointer for common sections for this node */
             10811    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10811                  /* Stopping pointer for common sections for this node */
             10812    1         2 L_START,
             10813    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10814    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10815    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10816    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10817    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10818    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10819    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10820    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10821    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10822    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:60   
             10823    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10824    1         2 L_STOP,
             10825    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10826    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10827    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10828    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10829    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10830    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10831    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10832    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10833    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10834    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10835    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10836    1         2 L_SIZE,
             10837    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10838    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10839    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10840    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10841    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10842    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10843    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10844    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10845    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10846    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10847    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10848    1         2 L_PREV_SIZE,
             10849    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10850    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10851    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10852    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10853    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10854    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10855    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10856    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10857    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10858    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10859    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:61   
             10860    1         2 BIT_MAP                ALIGNED,
             10861    1           3 DATA                  ALIGNED,
             10862    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10863    1           3 RPROC                 ALIGNED,
             10864    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10865    1           3 ROS                   ALIGNED,
             10866    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10867    1         2 L_SC_START,
             10868    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10869    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10870    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10871    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10872    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10873    1         2 L_SC_STOP,
             10874    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10875    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10876    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10877    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10878    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10879    1         2 PROMOTE_HEAD,
             10880    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10881    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10882    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10883    1         2 PROMOTE_TAIL,
             10884    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10885    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10886    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10887    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10888    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10889    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10890    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10891    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       13    10895        %VX$SC;

             10908    1   /*******************************************************************************
             10909    1   *                                                                              *
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:62   
             10910    1   *                          VX$SC                                                 *
             10911    1   *                                                                              *
             10912    1   *******************************************************************************/

             10917    1   DCL 1 VX$SC BASED ALIGNED,
             10918    1         2 SEG UBIN(3) UNAL,
             10919                /*K*  SEG - The segment number of this section */
             10920    1         2 TYPE UBIN(6) UNAL,
             10921                /*K*  TYPE -
             10922                      Type code      Section type
             10923                      ---------      ------------
             10924                          0          Data control section with write access.
             10925                          1          Procedure control section.
             10926                          2          Unlabeled common, name pointer must be zero.
             10927                          3          Labeled common, with mandatory name pointer.
             10928                                     This is for labeled common which must be
             10929                                     in the root.
             10930                          4          Labeled common, with mandatory name pointer.
             10931                                     This is for labeled common which need not
             10932                                     be in the root.
             10933                          5          DCB, word 1 is name pointer.
             10934                          6          Data control section with read only access,
             10935                                     word 1 = 0 or name pointer.      */
             10936    1         2 EMPTY BIT(1) UNAL,
             10937                /*K*  EMPTY is the empty bit.  This bit is set if the control
             10938                      section is of size zero.  */
             10939    1         2 ATTR UNAL,
             10940    1           3 INT  UBIN(2) UNAL,
             10941                  /*K*  INT is the Section initialization.  */
             10942    1           3 SEGMENT BIT(1) UNAL,
             10943                  /*K* SEGMENT is set if the Section is defined in a data
             10944                       segment.  */
             10945    1           3 ALL BIT(1) UNAL,
             10946                  /*K*  ALL is set if the Section is allocated.  */
             10947    1           3 PRE_DCB BIT(1) UNAL,
             10948                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
             10949    1           3 MES_INIT BIT(1) UNAL,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:63   
             10950    1           3 ALIGN UBIN(2) UNAL,
             10951                  /*K*  ALIGN is the Section alignment.  */
             10952    1         2 ADDRESS UBIN HALF UNAL,
             10953                /*K*  ADDRESS is the address within the Instruction Segment of
             10954                      the entry point of the external procedure.  */
             10955    1         2 NAME_DISP SBIN HALF UNAL,
             10956                /*K*  NAME_DISP is the Name index.  */
             10957    1         2 SIZE UBIN HALF UNAL,
             10958                /*K*  SIZE is the size, in words, of the section.  */
             10959    1         2 NODE# UBIN HALF UNAL,
             10960                /*K*  NODE# is the Node number of section.  */
             10961    1         2 COM_LINK UBIN HALF UNAL;
             10962                /*K*  COM_LINK is used internally by linker to link common sections */

             10972    1   /*******************************************************************************
             10973    1   *                                                                              *
             10974    1   *                          VX$SECT                                                *
             10975    1   *                                                                              *
             10976    1   *******************************************************************************/

             10981    1   DCL 1 VX$SECT BASED ALIGNED,
             10982    1         2 TYPE UBIN BYTE UNAL,
             10983                /*K*  TYPE -
             10984                      Type code      Section type
             10985                      ---------      ------------
             10986                          0          Data control section with write access.
             10987                          1          Procedure control section.
             10988                          2          Unlabeled common, name pointer must be zero.
             10989                          3          Labeled common, with mandatory name pointer.
             10990                                     This is for labeled common which must be
             10991                                     in the root.
             10992                          4          Labeled common, with mandatory name pointer.
             10993                                     This is for labeled common which need not
             10994                                     be in the root.
             10995                          5          DCB, word 1 is name pointer.
             10996                          6          Data control section with read only access,
             10997                                     word 1 = 0 or name pointer.
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:64   
             10998                          7          Constant labeled common, with mandatory name pointer.
             10999                                     This is for labeled common which must be
             11000                                     in the root.
             11001                          8          Constant labeled common, with mandatory name pointer.
             11002                                     This is for labeled common which need not
             11003                                     be in the root.                        */
             11004    1         2 * BIT(1),
             11005                /*K*  * is reserved for future use and must be zero. */
             11006    1         2 INITZERO BIT(1),
             11007                /*K*  INITZERO - if 1, initialize with zero.  */
             11008    1         2 INITUTS BIT(1),
             11009                /*K*  INITUTS - if 1, initialize with UTS.  */
             11010    1         2 SEGMENT BIT(1),
             11011                /*K*  SEGMENT - if 1, specifies that this section is
             11012                                to be placed in the segment specified by
             11013                                SEG_NPOINTER.  */
             11014    1         2 * BIT(3),
             11015                /*K*  * is reserved for future use and must be zero. */
             11016    1         2 BOUND UBIN(2) UNAL,
             11017                /*K*  BOUND - bits 6-7 - defines starting location.
             11018                              00 - starts on even word
             11019                              01 - starts on odd word
             11020                              10 - starts on multiple of 8
             11021                              11 - starts on page boundary     */
             11022    1         2 SIZE UBIN HALF UNAL,
             11023                /*K*  SIZE is the size, in words, of the section.  */
             11024    1         2 NPOINTER SBIN HALF UNAL,
             11025                /*K*  NPOINTER is the word displacement into the name record
             11026                      (TYPE 1) locating the name of this section.  If the
             11027                      field is negative, the section has no name.  */
             11028    1         2 MBZ UBIN HALF UNAL,
             11029                /*K*  MBZ is reserved for future expansion and must be zero. */
             11030    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
             11031                /*K*  SEG_NPOINTER locates a name in the Definition Names
             11032                      Section.  The name must be a valid segment name
             11033                      recognized by the linker.  */
             11034    1         2 G66 REDEF MBZ,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:65   
             11035                /*K*  G66 is not used on CP-6. */
             11036    1           3 * BIT(9),
             11037    1           3 NSAB BIT(9);
       14    11040        %VXD$TMPLT( SEGDEF=YES );

             11053    1   /*******************************************************************************
             11054    1   *                                                                              *
             11055    1   *                          VXD$TMPLT                                              *
             11056    1   *                                                                              *
             11057    1   *******************************************************************************/

             11061        /*
             11062                  VXD$TMPLT (B$RU_DEF) is used to reference fields common to
             11063                  ENTDEFs, SYMDEFs and SEGDEFs.
             11064        */
             11066    1   DCL 1 VXD$TMPLT BASED ALIGNED,
             11067    1         2 VALUE SBIN UNAL,
             11068                /*K*  VALUE is the value if this entry is a constant.  */
             11069    1         2 AD REDEF VALUE,
             11070                /*K*  AD is the address if this entry is not constant.  */
             11071    1           3 LFLAGS UNAL,
             11072                  /*K*  LFLAGS is the field reserved for loader to flag load
             11073                        time attributes of the definition and must be zero
             11074                        in the object unit. */
             11075    1             4 SOURCE UBIN(3) UNAL,
             11076                    /*K*  SOURCE - Source of this DEF */
             11077    1             4 DEFINED BIT(1) UNAL,
             11078                    /*K*  DEFINED - Set if this DEF defined */
             11079    1             4 MULTIPLE BIT(1) UNAL,
             11080                    /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             11081    1             4 USED BIT(1) UNAL,
             11082                    /*K*  USED - Set if this DEF is used. */
             11083    1           3 LOOKUP_SECTNUM BIT(1) UNAL,
             11084                  /*K*  LOOKUP_SECTNUM is set if the section number is greater
             11085                        than 2048 (RU).  */
             11086    1           3 SECTNUM UBIN(11) UNAL,
             11087                  /*K*  SECTNUM contains an entry number into the section
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:66   
             11088                        table (TYPE 3).  */
             11089    1           3 ISADDR UBIN HALF UNAL,
             11090                  /*K*  ISADDR - Is Address (RU)  */
             11091    1           3 OFFSET REDEF ISADDR UBIN HALF UNAL,
             11092                  /*K*  OFFSET is the word offset from the origin of the section. */
             11093    1         2 NPOINTER SBIN HALF UNAL,
             11094                /*K*  NPOINTER is a word displacement into the name record
             11095                      (TYPE 1) locating the name (of this entry). */
             11096    1         2 CONSTNT BIT(1) UNAL,
             11097                /*K*  CONSTNT is a flag bit to determine the interpretation
             11098                      of word 0.
             11099                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             11100                                    SECTNUM, and ISADDR or OFFSET.
             11101                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
             11102    1         2 LFLAGS UNAL,
             11103                /*K*  LFLAGS is the field reserved for loader to flag load
             11104                      time attributes and must be zero in the object unit. */
             11105    1           3 MULTIPLE BIT(1) UNAL,
             11106                  /*K*  MULTIPLE - Set if this DEF is multiply defined. */
             11107    1           3 USED BIT(1) UNAL,
             11108                  /*K*  USED - Set if this DEF is used. */
             11109    1           3 SOURCE UBIN(4) UNAL,
             11110                  /*K*  SOURCE - Source of this DEF */
             11111    1           3 IS_DCB BIT(1) UNAL,
             11112                  /*K* IS_DCB - Set if this is a DCB */
             11113    1           3 * BIT(10) UNAL,
             11114                  /*K*  * is reserved for future use and must be zero.  */
             11115    1         2 PROTECTION REDEF LFLAGS,
             11116                /*K*  PROTECTION is used for non-constant SYMDEF OR SEGDEF.  */
             11117    1           3 TYPE UBIN(5) UNAL,
             11118                  /*K*  TYPE is the Protection type.  */
             11119    1           3 * UBIN(12) UNAL;
             11120                  /*K*  * is reserved for future use and must be zero.  */

             11139    1   /*******************************************************************************
             11140    1   *                                                                              *
             11141    1   *                          B$SEGDEF                                               *
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:67   
             11142    1   *                                                                              *
             11143    1   *******************************************************************************/

             11148    1   DCL 1 B$SEGDEF BASED ALIGNED,
             11149    1         2 VALUE SBIN UNAL,
             11150                /*K*  VALUE is the value of the constant segment definition
             11151                      pointer if CONSTANT=1.  */
             11152    1         2 S REDEF VALUE,
             11153    1           3 * UBIN(24) UNAL,
             11154    1           3 SEGID UBIN(12) UNAL,
             11155                  /*K*  SEGID - Segid of constant value */
             11156    1         2 AD REDEF VALUE,
             11157                /*K*  AD - Address (not constant )  */
             11158    1           3 LFLAGS UNAL,
             11159                  /*K*  LFLAGS is the field reserved for loader to flag load
             11160                        time attributes of the definition and must be zero
             11161                        in object unit.  */
             11162    1             4 SOURCE UBIN(3) UNAL,
             11163                    /*K*  SOURCE - Source of this SEGDEF */
             11164    1             4 DEFINED BIT(1) UNAL,
             11165                    /*K*  DEFINED - Set if this SEGDEF is defined */
             11166    1             4 MULTIPLE BIT(1) UNAL,
             11167                    /*K*  MULTIPLE - Set if this SEGDEF is multiply defined */
             11168    1             4 USED BIT(1) UNAL,
             11169                    /*K*  USED - Set if this SEGDEF is used */
             11170    1             4 * BIT(3) UNAL,
             11171                    /*K*  * is reserved for future use and must be zero. */
             11172    1           3 OU UNAL,
             11173    1             4 SECTNUM UBIN BYTE UNAL,
             11174                    /*K*  SECTNUM is the Section number.  */
             11175    1             4 OFFSET UBIN HALF UNAL,
             11176                    /*K*  OFFSET is the offset within section. */
             11177    1           3 ISADDR REDEF OU UBIN(27) UNAL,
             11178                  /*K*  ISADDR - IS Address (RU)  */
             11179    1         2 NPOINTER SBIN HALF UNAL,
             11180                /*K*  NPOINTER is the word displacement into DEFNAMES record. */
             11181    1         2 CONSTNT BIT(1) UNAL,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:68   
             11182                /*K*  CONSTNT is a flag bit to determine the interpretation
             11183                      of word 0.
             11184                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             11185                                    SECTNUM, and ISADDR or OFFSET.
             11186                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
             11187    1         2 LFLAGS UNAL,
             11188                /*K*  LFLAGS is the field reserved for loader to flag load time
             11189                      attributes and must be zero in the object unit.  */
             11190    1           3 MULTIPLE BIT(1) UNAL,
             11191                  /*K*  MULTIPLE - Set if this SEGDEF is multiply defined */
             11192    1           3 USED BIT(1) UNAL,
             11193                  /*K*  USED - Set if this SEGDEF is used */
             11194    1           3 SOURCE UBIN(4) UNAL,
             11195                  /*K*  SOURCE - Source of this SEGDEF */
             11196    1           3 * BIT(11) UNAL,
             11197                  /*K*  * is reserved for future use and must be zero. */
             11198    1         2 SEG REDEF LFLAGS UNAL,          /* Not constant SEGDEF (RU) */
             11199    1           3 TYPE UBIN(5) UNAL,            /* Segment protection type (RU) */
             11200    1           3 SEGID UBIN(12) UNAL;          /* Segid of segment (RU) */
       15    11204        %VXR$TMPLT;

             11217    1   /*******************************************************************************
             11218    1   *                                                                              *
             11219    1   *                          VXR$TMPLT                                              *
             11220    1   *                                                                              *
             11221    1   *******************************************************************************/

             11226    1   DCL 1 VXR$TMPLT BASED ALIGNED,
             11227    1         2 NPOINTER SBIN HALF UNAL,
             11228                /*K*  NPOINTER is the word index to the symbol name.  */
             11229    1         2 SREF BIT(1) UNAL,
             11230                /*K*  SREF is set is this is a secondary reference.  */
             11231    1         2 READ_ONLY BIT(1) UNAL,
             11232    1         2 GOT BIT(1) UNAL,
             11233                /*K*  GOT is set if got the OU name displacement.  */
             11234    1         2 STATE REDEF GOT BIT(1) UNAL,
             11235    1         2 OPOINTER UBIN(15) UNAL;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:69   
             11236                /*K*  OPOINTER is the word index to the OU name.  */

             11258    1   /*******************************************************************************
             11259    1   *                                                                              *
             11260    1   *                          VXR$SAT                                                *
             11261    1   *                                                                              *
             11262    1   *******************************************************************************/

             11266    1   DCL 1 VXR$SAT                 ALIGNED   BASED,
             11267    1         2 VALUE        UBIN(36)  ALIGNED,
             11268    1         2 SEG   REDEF  VALUE,
             11269    1           3 OFFSET     UBIN(18)  UNAL,
             11270    1           3 *          BIT(6)    UNAL,
             11271    1           3 SEGID      UBIN(12)  UNAL,
             11272    1         2 BELOW        BIT(1)    UNAL,
             11273    1         2 *            BIT(17)   UNAL,
             11274    1         2 NODE#        UBIN(18)  UNAL;
       16    11276        %VX$WORD;

             11288    1   /*******************************************************************************
             11289    1   *                                                                              *
             11290    1   *                          VX$WORD                                                *
             11291    1   *                                                                              *
             11292    1   *******************************************************************************/

             11297    1   DCL VX$WORD_A(0:0)       UBIN(36) ALIGNED    BASED PTR;
             11298    1   DCL VX$HALF_A(0:0)       UBIN(18) HALIGNED   BASED PTR;
             11299    1   DCL VX$BYTE_A(0:0)       UBIN( 9) CALIGNED   BASED PTR;
             11300    1   DCL VX$CHAR_A(0:0)       CHAR( 1) UNAL       BASED PTR;
             11301        /**/
             11302    1   DCL VX$WORD_SBIN_A(0:0)  SBIN WORD ALIGNED   BASED     PTR;
             11303    1   DCL VX$HALF_SBIN_A(0:0)  SBIN HALF HALIGNED  BASED     PTR;
             11304    1   DCL VX$BYTE_SBIN_A(0:0)  SBIN HALF CALIGNED  BASED     PTR;
             11305    1   DCL VX$BIT_A(0:0)        BIT(36)   ALIGNED   BASED     PTR;
       17    11308        %T$C;

             11320    1   /*******************************************************************************
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:70   
             11321    1   *                                                                              *
             11322    1   *                          T$C                                                 *
             11323    1   *                                                                              *
             11324    1   *******************************************************************************/

             11329    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             11330    1         2 COUNT        UBIN( 9) UNAL,
             11331    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             11332    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             11333    1         2 COUNT        UBIN( 9) UNAL,
             11334    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       18    11337        %SET LISTMAC='1'B;
       19    11338        %SET LISTSUB='1'B;
       20    11339        %SET LISTEXP='1'B;
       21    11340        %BANNER( ARG=SUBS );
             11341        %LSET LISTDIR='0'B;

             11348    1   /*******************************************************************************
             11349    1   *                                                                              *
             11350    1   *                          SUBS                                                 *
             11351    1   *                                                                              *
             11352    1   *******************************************************************************/

       22    11356        %B$RECORDSUBS;
             11357        %EQU TYPHEAD=0 ;
             11358        %EQU TYPDNAM=1 ;
             11359        %EQU TYPRNAM=2 ;
             11360        %EQU TYPSECT=3 ;
             11361        %EQU TYPEDEF=4 ;
             11362        %EQU TYPEREF=5 ;
             11363        %EQU TYPSDEF=6 ;
             11364        %EQU TYPSREF=7 ;
             11365        %EQU TYPSEGDEF=8 ;
             11366        %EQU TYPSEGREF=9 ;
             11367        %EQU TYPPROG=10 ;
             11368        %EQU SUBTYPPROG=0 ;
             11369        %EQU SUBTYPREL=1 ;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:71   
             11370        %EQU TYPLOGBLK=11 ;
             11371        %EQU TYPINTNTRY=12 ;
             11372        %EQU TYPEXST=13 ;
             11373        %EQU TYPVREBL=14 ;
             11374        %EQU TYPDBGNAM=15 ;
             11375        %EQU TYPLV1LB=16 ;
             11376        %EQU TYPLV1=17 ;
             11377        %EQU TYPDATASEG=18 ;
             11378        %EQU TYPRUM=20 ;
             11379        %EQU TYPBIRTH=21 ;
             11380        %EQU TYPPLOVER=22 ;
             11381        %EQU TYPCOMPID=23 ;
             11382        %EQU TYPROS=30 ;
       23    11384        %B$SECTIONSUBS;
             11385        %EQU DATASECTION=0 ;
             11386        %EQU CODESECTION=1 ;
             11387        %EQU UCOMSECTION=2 ;
             11388        %EQU RLCOMSECTION=3 ;
             11389        %EQU LCOMSECTION=4 ;
             11390        %EQU DCBSECTION=5 ;
             11391        %EQU ROSECTION=6 ;
             11392        %EQU RORLCOMSECTION=7 ;
             11393        %EQU ROLCOMSECTION=8 ;
             11394        %EQU EVENBOUNDSECTION=0 ;
             11395        %EQU ODDBOUNDSECTION=1 ;
             11396        %EQU EIGHTBOUNDSECTION=2 ;
             11397        %EQU PAGEBOUNDSECTION=3 ;
       24    11399        %SUB_LINKFLAGS;
             11400        %EQU SOURCE_OBJECT#=0 ;
             11401        %EQU SOURCE_SLIB#=1 ;
             11402        %EQU SOURCE_ALIB#=2 ;
             11403        %EQU SOURCE_ULIB#=3 ;
             11404        %EQU SOURCE_RLIB#=4 ;
             11405        %EQU SOURCE_REMOVED#=5 ;
             11406        %EQU SOURCE_LINKER#=6 ;
       25    11408        %B;
             11409        %LSET LISTDIR='0'B;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:72   

             11416    1   /*******************************************************************************
             11417    1   *                                                                              *
             11418    1   *                          BIT                                                 *
             11419    1   *                                                                              *
             11420    1   *******************************************************************************/

       26    11424    1   DCL USED_BIT             BIT(1)    ALIGNED   AUTO;
       27    11425    1   DCL MULTIPLE_BIT         BIT(1)    ALIGNED   AUTO;
       28    11426    1   DCL NOT_WROTE            BIT(1)    ALIGNED   AUTO;
       29    11427    1   DCL NOT_NODE_LINE        BIT(1)    ALIGNED   AUTO;
       30    11428    1   DCL NOT_DIAG_NODE_LINE   BIT(1)    ALIGNED   AUTO;
       31    11429        %C;
             11430        %LSET LISTDIR='0'B;

             11437    1   /*******************************************************************************
             11438    1   *                                                                              *
             11439    1   *                          CHAR                                                 *
             11440    1   *                                                                              *
             11441    1   *******************************************************************************/

       32    11445    1   DCL INTERPR_HDR          CHAR(65)            CONSTANT  INIT(
       33    11446    1              'B<OCTAL_NUMBER><CON_DEF><SOURCE><USED><MULT_DEF><DEFINITION_NAME>');
       34    11447    1   DCL INTERPR(0:6)         CHAR(69)            CONSTANT  INIT(
       35    11448    1   'A    <CON_DEF>   <USED>    <MULT_DEF>                      <SOURCE>',
       36    11449    1   'AYES:    =       <BLANK>       +          OBJECT FILE      <BLANK> ',
       37    11450    1   'ANO : <BLANK>      *        <BLANK>       SHARED LIB.         S    ',
       38    11451    1   'A                                         ALT. SHARED LIB.    A    ',
       39    11452    1   'A                                         PRIVATE LIB.        P    ',
       40    11453    1   'A                                         RUN FILE            R    ' ,
       41    11454    1   'B                                         REMOVED             r    '  );
       42    11455    1   DCL LOW_HIGH_SIZE_LIT  CHAR(0)   STATIC  INIT(
       43    11456    1   'A               LOW      HIGH      SIZE');
       44    11457    1   DCL LOW_HIGH_SIZE_UNDERLINE  CHAR(0)  STATIC  INIT(
       45    11458    1   'A            ------    ------    ------');
       46    11459    1   DCL  PROCT_TYPE (0:1/*@PROC*/)  CHAR(39)  STATIC  INIT(
       47    11460    1   'ADATA                                  ',
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:73   
       48    11461    1   'BPROCEDURE                             ' );
       49    11462    1   DCL SC_TYPE(0:8) CHAR(8) CONSTANT INIT(
       50    11463    1              'DATA    ',
       51    11464    1              'PROC    ',
       52    11465    1              'BLKCOM  ',
       53    11466    1              'LBLCOM-R',
       54    11467    1              'LBLCOM  ',
       55    11468    1              'DCB     ',
       56    11469    1            'RODATA  ',
       57    11470    1            'ROLCOM-R',
       58    11471    1            'ROLCOM  ');
       59    11472    1   DCL SOURCE_FROM(0:5)    CHAR(1)             CONSTANT INIT(
       60    11473    1              ' ',
       61    11474    1              'S',
       62    11475    1              'A',
       63    11476    1              'P',
       64    11477    1              'R' ,
       65    11478    1              'r' );
       66    11479    1   DCL UNNAMED         CHAR(9)             CONSTANT  INIT(
       67    11480    1              '<UNNAMED>');
       68    11481    1   DCL REF$MES              CHAR(REF_MES_SIZE)         BASED;
       69    11482    1   DCL REF_PRIMARY(0:2)     CHAR(55)            CONSTANT  INIT(
       70    11483    1              'B******* UNRESOLVED PRIMARY ENTRY REFERENCES *******',
       71    11484    1              'B******* UNRESOLVED PRIMARY DATA REFERENCES  *******',
       72    11485    1              'B******* UNRESOLVED PRIMARY SEGMENT REFERENCES *******' );
       73    11486    1   DCL REF_SECONDARY(0:2)   CHAR(57)            CONSTANT  INIT(
       74    11487    1              'B******* UNRESOLVED SECONDARY ENTRY REFERENCES *******',
       75    11488    1              'B******* UNRESOLVED SECONDARY DATA REFERENCES  *******',
       76    11489    1              'B******* UNRESOLVED SECONDARY SEGMENT REFERENCES *******' );
       77    11490    1   DCL DEF_MULTIPLE(0:2)         CHAR(58)            CONSTANT  INIT(
       78    11491    1              'B******* AMBIGUOUSLY DEFINED ENTRY DEFINITIONS *******',
       79    11492    1              'B******* AMBIGUOUSLY DEFINED DATA DEFINITIONS *******',
       80    11493    1              'B******* AMBIGUOUSLY DEFINED SEGMENT DEFINITIONS *******' );
       81    11494    1   DCL DEF_CONSTANT              CHAR(37)            CONSTANT  INIT(
       82    11495    1              'B******* CONSTANT DEFINITIONS *******');
       83    11496    1   DCL DEF_SORT_NAME(0:2)        CHAR(80)            CONSTANT  INIT(
       84    11497    1   'B******* RELOCATABLE ENTRY DEFINITIONS SORTED BY NAME *******',
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:74   
       85    11498    1   'B******* RELOCATABLE & CONSTANT DATA DEFINITIONS SORTED BY NAME  *******',
       86    11499    1   'B******* RELOCATABLE & CONSTANT SEGMENT DEFINITIONS SORTED BY NAME *******' );
       87    11500    1   DCL DEF_SORT_VALUE(0:2)       CHAR(80)            CONSTANT  INIT(
       88    11501    1   'B******* RELOCATABLE ENTRY DEFINITIONS SORTED BY VALUE *******',
       89    11502    1   'B******* RELOCATABLE & CONSTANT DATA DEFINITIONS SORTED BY VALUE *******',
       90    11503    1   'B******* RELOCATABLE & CONSTANT SEGMENT DEFINITIONS SORTED BY VALUE *******' );
       91    11504    1   DCL CSSBY      CHAR(0)             CONSTANT  INIT(
       92    11505    1         'B******** CONTROL SECTIONS SORTED BY VALUE ********');
       93    11506    1   DCL SEG_CSSBY  CHAR(0)             CONSTANT  INIT(
       94    11507    1   'B******** DATA SEGMENT CONTROL SECTIONS SORTED BY VALUE ********');
       95    11508    1   DCL DCB_TEXT    CHAR(0)   CONSTANT  INIT(
       96    11509    1         'B******** DCBS ********');
       97    11510    1   DCL DIAG_NODE_HDR CHAR(73)  STATIC INIT('B******* NODE = ');
       98    11511        %E;
             11512        %LSET LISTDIR='0'B;

             11519    1   /*******************************************************************************
             11520    1   *                                                                              *
             11521    1   *                          ENTRY                                                 *
             11522    1   *                                                                              *
             11523    1   *******************************************************************************/

       99    11527        %ENTRIES;
             11528    1   DCL VXE$ERROR       ENTRY(4);
             11529    1   DCL VXE$ERR         ENTRY(3);
             11530    1   DCL VXE$MERC        ENTRY;
             11531    1   DCL VXE$ERRMSG      ENTRY(3);
             11532    1   DCL VXR$READ        ENTRY( 3 );
             11533    1   DCL VXW$WRITE       ENTRY( 3 );
             11534    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             11535    1   DCL VXD$B2C         ENTRY( 5 );
             11536    1   DCL VXD$C2B         ENTRY( 3 );
             11537    1   DCL VXA$GET         ENTRY( 3 );
             11538    1   DCL VXF$FREE        ENTRY( 3 );
             11539    1   DCL VXQ$SORT        ENTRY( 7 );
             11540    1   DCL VXY$YESNO       ENTRY( 1 );
      100    11542        %ENTRIES_IO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:75   
             11543    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11544    1   DCL VXF$CLOSE       ENTRY(3);
             11545    1   DCL VXU$PREAD       ENTRY(12);
             11546    1   DCL VXK$KEY         ENTRY(4);
             11547    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             11548    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
      101    11550    1   DCL VXQ$SORT_V           ENTRY( 7 );
      102    11551        %PTR;
             11552        %LSET LISTDIR='0'B;

             11559    1   /*******************************************************************************
             11560    1   *                                                                              *
             11561    1   *                          PTR                                                 *
             11562    1   *                                                                              *
             11563    1   *******************************************************************************/

      103    11567    1   DCL NAME$           PTR  ALIGNED   AUTO;
      104    11568    1   DCL DNAME$          PTR  ALIGNED   AUTO;
      105    11569    1   DCL START$          PTR  ALIGNED   AUTO;
      106    11570    1   DCL SNAME$          PTR  ALIGNED   AUTO;
      107    11571    1   DCL S$          PTR  ALIGNED   AUTO;
      108    11572    1   DCL DCB_HEAD$        PTR  ALIGNED   AUTO;
      109    11573    1   DCL DCB_TAIL$        PTR  ALIGNED   AUTO;
      110    11574    1   DCL BASE$            PTR  ALIGNED   AUTO;
      111    11575        %POINTER;
             11576    1   DCL P$         PTR       ALIGNED AUTO;
             11577    1   DCL Q$         PTR       ALIGNED AUTO;
             11578    1   DCL R$         PTR       ALIGNED AUTO;
      112    11580    1   DCL CURR$           PTR  ALIGNED   AUTO;
      113    11581        %U;
             11582        %LSET LISTDIR='0'B;

             11589    1   /*******************************************************************************
             11590    1   *                                                                              *
             11591    1   *                          UBIN                                                 *
             11592    1   *                                                                              *
             11593    1   *******************************************************************************/
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:76   

      114    11597        %INDEX;
             11598    1   DCL I          UBIN(36) ALIGNED AUTO;
             11599    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11600    1   DCL J          UBIN(36) ALIGNED AUTO;
             11601    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11602    1   DCL K          UBIN(36) ALIGNED AUTO;
             11603    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11604    1   DCL L          UBIN(36) ALIGNED AUTO;
             11605    1   DCL SL REDEF L    SBIN WORD ALIGNED;
      115    11607    1   DCL RTYPE           UBIN(36)  ALIGNED   AUTO;
      116    11608    1   DCL NPAGE           UBIN(36)  ALIGNED   AUTO;
      117    11609    1   DCL TSIZE_READ      UBIN(36)  ALIGNED   AUTO;
      118    11610    1   DCL SIZE            UBIN(36)  ALIGNED   AUTO;
      119    11611    1   DCL FSIZE           UBIN(36)  ALIGNED   AUTO;
      120    11612    1   DCL II              UBIN(36)  ALIGNED   AUTO;
      121    11613    1   DCL T_INX           UBIN(36)  ALIGNED   AUTO;
      122    11614    1   DCL BIT_INX         UBIN(36)  ALIGNED   AUTO;
      123    11615    1   DCL CON_INX         UBIN(36)  ALIGNED   AUTO;
      124    11616    1   DCL FIELD_SIZE      UBIN(36)  ALIGNED   AUTO;
      125    11617    1   DCL NUM_START       UBIN(36)  ALIGNED   AUTO;
      126    11618    1   DCL NAME_COL        UBIN(36)  ALIGNED   AUTO;
      127    11619    1   DCL WAY             UBIN(36)  ALIGNED   AUTO;
      128    11620    1   DCL N_D             UBIN(36)  ALIGNED   AUTO;
      129    11621    1   DCL TIES            UBIN(36)  ALIGNED   AUTO;
      130    11622    1   DCL GET             UBIN(36)  ALIGNED   AUTO;
      131    11623    1   DCL TSIZE           UBIN(36)  ALIGNED   AUTO;
      132    11624    1   DCL PAGE_SIZE       UBIN(36)  ALIGNED   AUTO;
      133    11625    1   DCL INIT_SIZE       UBIN(36)  ALIGNED   AUTO;
      134    11626    1   DCL REF_MES_SIZE    UBIN(36)  ALIGNED   AUTO;
      135    11627    1   DCL DIAG_TABS(0:2)  UBIN(36)  ALIGNED   CONSTANT  INIT( 7, 37, 9999999);
      136    11628    1   DCL SEGMENT     UBIN(36)  ALIGNED   AUTO;
      137    11629    1   DCL TRIGGER     UBIN(36)  ALIGNED   AUTO;
      138    11630    1   DCL VALUE       UBIN(36)  ALIGNED   AUTO;
      139    11631    1   DCL VALUE_A(0:1)  REDEF  VALUE  UBIN(18) UNAL;
      140    11632        /**/
      141    11633        /**/
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:77   
      142    11634        /**/
      143    11635        %MOVE_NAME_DCL;
             11636    1   DCL MOVE_SIZE           UBIN  ALIGNED   AUTO;
             11637    1   DCL T$VAR             CHAR(MOVE_SIZE)   BASED;
             11638    1   DCL SOURCE$              PTR  ALIGNED   AUTO;
      144    11640        %BUMP_CTAB_DCL;
             11641    1   DCL LAST_TAB             UBIN(36)  ALIGNED   AUTO;
      145    11643        %M_NUMBER_DCL;
             11644    1   DCL THREE$BITS(0:11)          BIT(3)    UNAL BASED;
             11645    1   DCL 1 WORK_BUF           ALIGNED   STATIC,
             11646    1         2 COMPOSITE         ALIGNED,
             11647    1           3 H                UBIN(6)   UNAL INIT( BITBIN('06'O) ),
             11648    1           3 UBN              UBIN(3)   UNAL,
             11649    1         2 CHR REDEF COMPOSITE    CHAR(1) ALIGNED;
             11650    1   DCL SIG                  BIT(1)    ALIGNED   STATIC    INIT('0'B);
             11651    1   DCL K_INDEX              UBIN(36)  ALIGNED   AUTO;
             11652    1   DCL L_INDEX              UBIN(36)  ALIGNED   AUTO;
      146    11654        %S;
             11655        %LSET LISTDIR='0'B;

             11662    1   /*******************************************************************************
             11663    1   *                                                                              *
             11664    1   *                          SBIN                                                 *
             11665    1   *                                                                              *
             11666    1   *******************************************************************************/

      147    11670    1   DCL S_STOP(0:1/*@PROC*/)       SBIN WORD ALIGNED AUTO;
      148    11671    1   DCL S_SIZE(0:1/*@PROC*/)       SBIN WORD ALIGNED AUTO;
      149    11672    1   DCL S_START(0:1/*@PROC*/)      SBIN WORD ALIGNED AUTO;
      150    11673    1   DCL AREA_LEFT        SBIN WORD ALIGNED   AUTO;
      151    11674        %BANNER(ARG="VX$TREE_HEADER - VX$TREE_NODE");
             11675        %LSET LISTDIR='0'B;

             11682    1   /*******************************************************************************
             11683    1   *                                                                              *
             11684    1   *                          VX$TREE_HEADER - VX$TREE_NODE                          *
             11685    1   *                                                                              *
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:78   
             11686    1   *******************************************************************************/

      152    11690        %B$TREE_TABLE(HDR_NAME=VX$TREE_HEADER,NODE_NAME=VX$TREE_NODE);
             11691    1   DCL 1 VX$TREE_HEADER BASED ALIGNED,
             11692              /*K*  HDR_NAME is the Tree table header.  */
             11693    1         2 NODES UBIN HALF UNAL,
             11694                /*K*  NODES is the number of nodes in the tree table.  */
             11695    1         2 SIZE UBIN HALF UNAL,
             11696                /*K*  SIZE is the total word size of the tree table
             11697                      (HDR + NODES + TEST pool).   */
             11698    1         2 LIB$ PTR,
             11699                /*K*  LIB$ is the pointer to the name of the shared library
             11700                      currently associated.  */
             11701    1         2 PRECSIZE UBIN HALF UNAL,
             11702                /*K*  PRECSIZE  is the maximum program record size in the
             11703                      Run Unit (from the Head record).  */
             11704    1         2 MAX_LIB_DATA UBIN HALF UNAL;
             11705                /*K*  MAX_LIB_DATA is the maximum reserved in the program
             11706                      image for the shared library data.  */
             11707    1   DCL 1 VX$TREE_NODE BASED ALIGNED,
             11708              /*K*  NODE_NAME is the node specification.  */
             11709    1         2 NAME$ PTR,
             11710                /*K*  NAME$ is the pointer to the name of the node.  */
             11711    1         2 FLGS,
             11712                /*K*  FLGS are control flags used by M$OLAY.  */
             11713    1           3 NOW_IN BIT(1) UNAL,
             11714                  /*K*  NOW_IN is set if this node is now in memory.  */
             11715    1           3 WAS_IN BIT(1) UNAL,
             11716                  /*K*  WAS_IN is set if this node was in memory.  */
             11717    1           3 * BIT(7) UNAL,
             11718                  /*K*  * is reserved for future use and must be zero.  */
             11719    1         2 AFLGS,
             11720                /*K*  AFLGS are access flags.  */
             11721    1           3 * BIT(6) UNAL,
             11722                  /*K*  * is reserved for future use and must be zero.  */
             11723    1           3 NOPATH BIT(1) UNAL,
             11724                  /*K*  NOPATH is set if this node is independently loaded
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:79   
             11725                        (no backward path).  */
             11726    1           3 ENTER BIT(1) UNAL,
             11727                  /*K*  ENTER is set if ENTRY$ is valid.  */
             11728    1           3 CANCEL BIT(1) UNAL,
             11729                  /*K*  CANCEL is set if the overlay was removed by
             11730                        "CANCEL=YES".   */
             11731    1         2 BACK# SBIN HALF UNAL,
             11732                /*K*  BACK# is the backward link (parent).  */
             11733    1         2 FORWARD# SBIN HALF UNAL,
             11734                /*K*  FORWARD# is the forward link (daughter).  */
             11735    1         2 OVERLAY# SBIN HALF UNAL,
             11736                /*K*  OVERLAY# is the overlay link (same level).   */
             11737    1         2 PADDR UBIN HALF UNAL,
             11738                /*K*  PADDR is the address of procedure.  */
             11739    1         2 PSIZE UBIN HALF UNAL,
             11740                /*K*  PSIZE is the size of procedure.  */
             11741    1         2 DADDR UBIN HALF UNAL,
             11742                /*K*  DADDR is the address of data.  */
             11743    1         2 DSIZE UBIN HALF UNAL,
             11744                /*K*  DSIZE is the size of data.  */
             11745    1         2 ENTRY$ EPTR;
             11746                /*K*  ENTRY$ is the overlay entry point (see ENTER).  */
      153    11748        %BANNER(ARG=FPTS);
             11749        %LSET LISTDIR='0'B;

             11756    1   /*******************************************************************************
             11757    1   *                                                                              *
             11758    1   *                          FPTS                                                 *
             11759    1   *                                                                              *
             11760    1   *******************************************************************************/

      154    11764        %PLIST;
      155    11765        %FPT_WRITE( FPTN=VX_MAP_LO_FPT_WRITE,
      156    11766                   STCLASS=SYMREF);
      157    11797        %FPT_WRITE( FPTN=VX_MAP_LIT_LO_FPT_WRITE,
      158    11798                   STCLASS=SYMREF);
      159    11829        /**/
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:80   
      160    11830        %FPT_WRITE( FPTN=DIAG_LIT_FPT_WRITE,
      161    11831                    DCB=M$DO,
      162    11832                    BUF=VX_MBUF,
      163    11833                    VFC=YES);
      164    11864        /**/
      165    11865        %FPT_WRITE( FPTN=DIAG_FPT_WRITE,
      166    11866                    DCB=M$DO,
      167    11867                    BUF=VX_MBUF,
      168    11868                    VFC=YES);
      169    11899
      170    11900    1   DCL   M$DO      DCB;
      171    11901
      172    11902        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:81   
      173    11903        /*
      174    11904              Variables for map(ping)
      175    11905        */
      176    11906    1   DCL VX_MAP$               PTR  ALIGNED   SYMREF;
      177    11907    1   DCL VX_MAP_ROS$           PTR  ALIGNED   SYMREF;
      178    11908    1   DCL VX_MAP_AREA$          PTR  ALIGNED   SYMREF;
      179    11909    1   DCL VX_MAP_TREE_START$    PTR  ALIGNED   SYMREF;
      180    11910    1   DCL VX_MAP_AREA_SIZE      UBIN(36) ALIGNED SYMREF;
      181    11911    1   DCL VX_MAP_NUM            SBIN WORD ALIGNED   SYMREF;
      182    11912    1   DCL VX_MAP_REC_SIZE_A(0:9)   UBIN(36)  ALIGNED   SYMREF;
      183    11913    1   DCL VX_CTAB               UBIN(36) ALIGNED SYMREF;
      184    11914    1   DCL VX_MAP_TABS_A(0:4)    UBIN(36)  ALIGNED   SYMREF;
      185    11915
      186    11916    1   DCL VX_MAP_WIDTH          UBIN(36)  ALIGNED   SYMREF;
      187    11917    1   DCL VX_MAP_WIDTH_HDR      UBIN(36)  ALIGNED   SYMREF;
      188    11918    1   DCL VX_MAX_CTAB           UBIN(36)  ALIGNED   SYMREF;
      189    11919    1   DCL 1 VX_MBUF ALIGNED SYMREF,
      190    11920    1         2 CHARS CHAR(132) UNAL,
      191    11921    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      192    11922    1         2 LIT_BUF REDEF CHARS UNAL,
      193    11923    1           3 VFC CHAR(1) UNAL,
      194    11924    1           3 CHARS CHAR(131) UNAL;
      195    11925    1   DCL VX_HDR_FIELD1              UBIN(36)  ALIGNED   SYMREF;
      196    11926    1   DCL VX_HDR_FIELD2              UBIN(36)  ALIGNED   SYMREF;
      197    11927    1   DCL 1 VX_MAP_HDR0 ALIGNED SYMREF,
      198    11928    1         2 CHARS CHAR(132) UNAL,
      199    11929    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      200    11930    1         2 LIT_BUF REDEF CHARS UNAL,
      201    11931    1           3 VFC CHAR(1) UNAL,
      202    11932    1           3 CHARS CHAR(131) UNAL;
      203    11933    1   DCL 1 VX_MAP_HDR ALIGNED SYMREF,
      204    11934    1         2 CHARS CHAR(132) UNAL,
      205    11935    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      206    11936    1         2 LIT_BUF REDEF CHARS UNAL,
      207    11937    1           3 VFC CHAR(1) UNAL,
      208    11938    1           3 CHARS CHAR(131) UNAL;
      209    11939    1   DCL 1 VX_MAP_HDR1 ALIGNED SYMREF,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:82   
      210    11940    1         2 CHARS CHAR(132) UNAL,
      211    11941    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      212    11942    1         2 LIT_BUF REDEF CHARS UNAL,
      213    11943    1           3 VFC CHAR(1) UNAL,
      214    11944    1           3 CHARS CHAR(131) UNAL;
      215    11945    1   DCL 1 VX_MAP_UTS_HDR ALIGNED SYMREF,
      216    11946    1         2 CHARS CHAR(132) UNAL,
      217    11947    1         2 CHARS_A(0:131) REDEF CHARS CHAR(1) UNAL,
      218    11948    1         2 LIT_BUF REDEF CHARS UNAL,
      219    11949    1           3 VFC CHAR(1) UNAL,
      220    11950    1           3 CHARS CHAR(131) UNAL;
      221    11951        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:83   
      222    11952    1         VX_MAP_LO_FPT_WRITE.BUF_.BOUND = VX_MAP_WIDTH_HDR;

  11952  5 000002   000000 236000 xsym               LDQ     VX_MAP_WIDTH_HDR
         5 000003   000020 736000                    QLS     16
         5 000004   000004 676000 xsym               ERQ     VX_MAP_LO_FPT_WRITE+4
         5 000005   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000006   000004 656000 xsym               ERSQ    VX_MAP_LO_FPT_WRITE+4

      223    11953    2         IF VX_O.OPT.MAP >= 0 THEN DO;

  11953  5 000007   000153 235000 xsym               LDA     VX_O+107
         5 000010   000033 604000 5                  TMI     s:11961

      224    11954    2             VX_MAP_LO_FPT_WRITE.BUF_.BUF$ = ADDR( VX_MAP_HDR0 );

  11954  5 000011   000000 236000 6                  LDQ     0
         5 000012   000005 756000 xsym               STQ     VX_MAP_LO_FPT_WRITE+5

      225    11955    2             CALL M$WRITE( VX_MAP_LO_FPT_WRITE)           ALTRET(MAP_IO_ERROR);

  11955  5 000013   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 000014   440001 713400                    CLIMB   alt,write
         5 000015   401400 401760                    pmme    nvectors=4
         5 000016   005150 702000 5                  TSX2    MAP_IO_ERROR

      226    11956    2             VX_MAP_LO_FPT_WRITE.BUF_.BUF$ = ADDR( VX_MAP_HDR );

  11956  5 000017   000001 236000 6                  LDQ     1
         5 000020   000005 756000 xsym               STQ     VX_MAP_LO_FPT_WRITE+5

      227    11957    2             CALL M$WRITE( VX_MAP_LO_FPT_WRITE)           ALTRET(MAP_IO_ERROR);

  11957  5 000021   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 000022   440001 713400                    CLIMB   alt,write
         5 000023   401400 401760                    pmme    nvectors=4
         5 000024   005150 702000 5                  TSX2    MAP_IO_ERROR

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:84   
      228    11958    2             VX_MAP_LO_FPT_WRITE.BUF_.BUF$ = ADDR( VX_MAP_UTS_HDR );

  11958  5 000025   000002 236000 6                  LDQ     2
         5 000026   000005 756000 xsym               STQ     VX_MAP_LO_FPT_WRITE+5

      229    11959    2             CALL M$WRITE( VX_MAP_LO_FPT_WRITE)           ALTRET(MAP_IO_ERROR);

  11959  5 000027   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 000030   440001 713400                    CLIMB   alt,write
         5 000031   401400 401760                    pmme    nvectors=4
         5 000032   005150 702000 5                  TSX2    MAP_IO_ERROR

      230    11960    2            END;

      231    11961    1         VX_MAP_LIT_LO_FPT_WRITE.BUF_ = VECTOR( VX_MAP_HDR1 );

  11961  5 000033   000004 237000 6                  LDAQ    4
         5 000034   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

      232    11962    1         CALL INSERT(VX_MAP_HDR1.CHARS, VX_HDR_FIELD2+7, 7, ' ' );

  11962  5 000035   000000 235000 xsym               LDA     VX_HDR_FIELD2
         5 000036   040005 100400                    MLR     fill='040'O
         5 000037   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000040   000001 600007 xsym               ADSC9   VX_MAP_HDR1+1,A          cn=3,n=7

      233    11963    1         VX_MAP_LO_FPT_WRITE.BUF_.BUF$      =    ADDR( VX_MBUF );

  11963  5 000041   000006 236000 6                  LDQ     6
         5 000042   000005 756000 xsym               STQ     VX_MAP_LO_FPT_WRITE+5

      234    11964    1         VX_MAP_LO_FPT_WRITE.BUF_.BOUND     =    VX_MAP_WIDTH;

  11964  5 000043   000000 236000 xsym               LDQ     VX_MAP_WIDTH
         5 000044   000020 736000                    QLS     16
         5 000045   000004 676000 xsym               ERQ     VX_MAP_LO_FPT_WRITE+4
         5 000046   000034 376000 xsym               ANQ     B_VECTNIL+28
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:85   
         5 000047   000004 656000 xsym               ERSQ    VX_MAP_LO_FPT_WRITE+4

      235    11965    1         R$ = ADDR( VX_CURR$ -> VX$TREE_NODE.NAME$ );

  11965  5 000050   000000 236000 xsym               LDQ     VX_CURR$
         5 000051   200022 756100                    STQ     R$,,AUTO

      236    11966    1         P$ = PINCRW( VX_MAP_TREE_START$, R$ -> VX$HALF_A(0) );

  11966  5 000052   200022 470500                    LDP0    R$,,AUTO
         5 000053   000100 100500                    MLR     fill='000'O
         5 000054   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         5 000055   200074 000004                    ADSC9   AREA_LEFT+2,,AUTO        cn=0,n=4
         5 000056   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 000057   000000 636010                    EAQ     0,X0
         5 000060   000000 036000 xsym               ADLQ    VX_MAP_TREE_START$
         5 000061   200020 756100                    STQ     P$,,AUTO

      237    11967    1         CALL INSERT(VX_MAP_HDR1.CHARS, VX_HDR_FIELD1+8, 31, P$->T$C_UNAL.CHARS );

  11967  5 000062   200020 471500                    LDP1    P$,,AUTO
         5 000063   000100 101500                    MRL     fill='000'O
         5 000064   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         5 000065   200074 000002                    ADSC9   AREA_LEFT+2,,AUTO        cn=0,n=2
         5 000066   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 000067   000000 235000 xsym               LDA     VX_HDR_FIELD1
         5 000070   040005 100540                    MLR     fill='040'O
         5 000071   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         5 000072   000002 000037 xsym               ADSC9   VX_MAP_HDR1+2,A          cn=0,n=31

      238    11968    1         CALL INSERT(DIAG_NODE_HDR, 16, , P$->T$C_UNAL.CHARS, ' *******');

  11968  5 000073   000100 101500                    MRL     fill='000'O
         5 000074   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         5 000075   200074 000002                    ADSC9   AREA_LEFT+2,,AUTO        cn=0,n=2
         5 000076   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 000077   040000 100540                    MLR     fill='040'O
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:86   
         5 000100   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         5 000101   000054 000071 3                  ADSC9   DIAG_NODE_HDR+4          cn=0,n=57
         5 000102   000000 636010                    EAQ     0,X0
         5 000103   000022 772000                    QRL     18
         5 000104   000071 116007                    CMPQ    57,DL
         5 000105   000116 603000 5                  TRC     s:11969
         5 000106   200075 740100                    STX0    AREA_LEFT+3,,AUTO
         5 000107   777706 620010                    EAX0    -58,X0
         5 000110   777777 660003                    ERX0    -1,DU
         5 000111   200075 236100                    LDQ     AREA_LEFT+3,,AUTO
         5 000112   000022 772000                    QRL     18
         5 000113   040046 100400                    MLR     fill='040'O
         5 000114   000712 000010 2                  ADSC9   DIAG_TABS+3              cn=0,n=8
         5 000115   000054 000010 3                  ADSC9   DIAG_NODE_HDR+4,Q        cn=0,n=*X0

      239    11969    1         SIZE =

  11969  5 000116   000000 473400 xsym               LDP3    VX_CURR$
         5 000117   300003 236100                    LDQ     3,,PR3
         5 000120   777777 376007                    ANQ     -1,DL
         5 000121   001777 036007                    ADLQ    1023,DL
         5 000122   000012 772000                    QRL     10
         5 000123   200074 756100                    STQ     AREA_LEFT+2,,AUTO
         5 000124   300004 236100                    LDQ     4,,PR3
         5 000125   777777 376007                    ANQ     -1,DL
         5 000126   001777 036007                    ADLQ    1023,DL
         5 000127   000012 772000                    QRL     10
         5 000130   200074 036100                    ADLQ    AREA_LEFT+2,,AUTO
         5 000131   200033 756100                    STQ     SIZE,,AUTO

      240    11970    1                 ( VX_CURR$ -> VX$TREE_NODE.PSIZE + 1024/*@PAGE_SIZE*/ -1 ) / 1024
             11970                          /*@PAGE_SIZE*/
      241    11971    1                 +
      242    11972    1                 ( VX_CURR$ -> VX$TREE_NODE.DSIZE + 1024/*@PAGE_SIZE*/ -1 ) / 1024
             11972                          /*@PAGE_SIZE*/;
      243    11973    1         CALL VXD$B2C( VX_MAP_HDR1.CHARS_A, VX_HDR_FIELD2+7, 7, SIZE, 10 );

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:87   
  11973  5 000132   000000 235000 xsym               LDA     VX_HDR_FIELD2
         5 000133   000007 035007                    ADLA    7,DL
         5 000134   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 000135   000007 236000 6                  LDQ     7
         5 000136   200101 756100                    STQ     AREA_LEFT+7,,AUTO
         5 000137   200033 634500                    EPPR4   SIZE,,AUTO
         5 000140   200100 454500                    STP4    AREA_LEFT+6,,AUTO
         5 000141   000010 236000 6                  LDQ     8
         5 000142   200077 756100                    STQ     AREA_LEFT+5,,AUTO
         5 000143   200074 635500                    EPPR5   AREA_LEFT+2,,AUTO
         5 000144   200076 455500                    STP5    AREA_LEFT+4,,AUTO
         5 000145   000005 236000 6                  LDQ     5
         5 000146   200075 756100                    STQ     AREA_LEFT+3,,AUTO
         5 000147   200075 630500                    EPPR0   AREA_LEFT+3,,AUTO
         5 000150   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000151   000000 701000 xent               TSX1    VXD$B2C
         5 000152   000000 011000                    NOP     0

      244    11974    1         NOT_DIAG_NODE_LINE = '1'B/*@TRUE_B*/;

  11974  5 000153   400000 236003                    LDQ     -131072,DU
         5 000154   200007 756100                    STQ     NOT_DIAG_NODE_LINE,,AUTO

      245    11975    2         IF VX_O.OPT.MAP >= 0 THEN DO;

  11975  5 000155   000153 235000 xsym               LDA     VX_O+107
         5 000156   000165 604000 5                  TMI     s:11980

      246    11976    2             CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE )          ALTRET( MAP_IO_ERROR );

  11976  5 000157   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 000160   440001 713400                    CLIMB   alt,write
         5 000161   401400 401760                    pmme    nvectors=4
         5 000162   005150 702000 5                  TSX2    MAP_IO_ERROR

      247    11977    2             NOT_NODE_LINE = '0'B/*@FALSE_B*/;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:88   
  11977  5 000163   200006 450100                    STZ     NOT_NODE_LINE,,AUTO

      248    11978    2            END;

  11978  5 000164   000167 710000 5                  TRA     s:11983

      249    11979    2         ELSE DO;

      250    11980    2             NOT_NODE_LINE = '1'B/*@TRUE_B*/;

  11980  5 000165   200006 756100                    STQ     NOT_NODE_LINE,,AUTO

      251    11981    2             GOTO READ_RECORDS;

  11981  5 000166   000412 710000 5                  TRA     READ_RECORDS

      252    11982    2            END;
      253    11983    2         IF VX_MAP_NUM = 0 THEN DO;

  11983  5 000167   000000 235000 xsym               LDA     VX_MAP_NUM
         5 000170   000220 601000 5                  TNZ     s:12007

      254    11984                  %WR_LIT( MES1=INTERPR_HDR );

  11985  5 000171   000012 237000 6                  LDAQ    10
         5 000172   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  11986  5 000173   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 000174   440001 713400                    CLIMB   alt,write
         5 000175   401400 401760                    pmme    nvectors=4
         5 000176   005150 702000 5                  TSX2    MAP_IO_ERROR

      255    11994    3             DO I = 0 TO 6;

  11994  5 000177   200024 450100                    STZ     I,,AUTO

      256    11995                      %WR_LIT( MES1="INTERPR(I)" );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:89   

  11996  5 000200   000014 235000 6                  LDA     12
         5 000201   200024 236100                    LDQ     I,,AUTO
         5 000202   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 000203   000016 402000 6                  MPY     14
         5 000204   000015 036000 6                  ADLQ    13
         5 000205   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 000206   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  11997  5 000207   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 000210   440001 713400                    CLIMB   alt,write
         5 000211   401400 401760                    pmme    nvectors=4
         5 000212   005150 702000 5                  TSX2    MAP_IO_ERROR

      257    12005    3                END;

  12005  5 000213   200024 235100                    LDA     I,,AUTO
         5 000214   000001 035007                    ADLA    1,DL
         5 000215   200024 755100                    STA     I,,AUTO
         5 000216   000007 115007                    CMPA    7,DL
         5 000217   000200 602000 5                  TNC     s:11996

      258    12006    2            END;

      259    12007    2         IF VX_MAP_NUM > 0 OR VX_CURR$ -> VX$TREE_NODE.FORWARD# > 0 THEN DO;

  12007  5 000220   000000 235000 xsym               LDA     VX_MAP_NUM
         5 000221   000225 605400 5                  TPNZ    s:12009
         5 000222   000000 470400 xsym               LDP0    VX_CURR$
         5 000223   000002 220100                    LDX0    2,,PR0
         5 000224   000412 604400 5                  TMOZ    READ_RECORDS

      260    12008                  %WR_LIT( MES1=LOW_HIGH_SIZE_LIT );

  12009  5 000225   000020 237000 6                  LDAQ    16
         5 000226   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:90   
  12010  5 000227   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 000230   440001 713400                    CLIMB   alt,write
         5 000231   401400 401760                    pmme    nvectors=4
         5 000232   005150 702000 5                  TSX2    MAP_IO_ERROR

      261    12018                  %WR_LIT( MES1=LOW_HIGH_SIZE_UNDERLINE );

  12019  5 000233   000022 237000 6                  LDAQ    18
         5 000234   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12020  5 000235   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 000236   440001 713400                    CLIMB   alt,write
         5 000237   401400 401760                    pmme    nvectors=4
         5 000240   005150 702000 5                  TSX2    MAP_IO_ERROR

      262    12028    2             S_START(0/*@DATA*/) = VX_CURR$ -> VX$TREE_NODE.DADDR;

  12028  5 000241   000000 470400 xsym               LDP0    VX_CURR$
         5 000242   000004 236100                    LDQ     4,,PR0
         5 000243   000022 772000                    QRL     18
         5 000244   200070 756100                    STQ     S_START,,AUTO

      263    12029    2             S_STOP(0/*@DATA*/)  = VX_CURR$ -> VX$TREE_NODE.DADDR

  12029  5 000245   000004 236100                    LDQ     4,,PR0
         5 000246   777777 376007                    ANQ     -1,DL
         5 000247   200074 756100                    STQ     AREA_LEFT+2,,AUTO
         5 000250   000004 236100                    LDQ     4,,PR0
         5 000251   000022 772000                    QRL     18
         5 000252   200074 036100                    ADLQ    AREA_LEFT+2,,AUTO
         5 000253   000001 136007                    SBLQ    1,DL
         5 000254   200064 756100                    STQ     S_STOP,,AUTO

      264    12030    2                     +
      265    12031    2                     VX_CURR$ -> VX$TREE_NODE.DSIZE  - 1;
      266    12032    2             S_SIZE(0/*@DATA*/)  = VX_CURR$ -> VX$TREE_NODE.DSIZE;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:91   
  12032  5 000255   000004 236100                    LDQ     4,,PR0
         5 000256   777777 376007                    ANQ     -1,DL
         5 000257   200066 756100                    STQ     S_SIZE,,AUTO

      267    12033    2             S_START(1/*@PROC*/) = VX_CURR$ -> VX$TREE_NODE.PADDR;

  12033  5 000260   000003 236100                    LDQ     3,,PR0
         5 000261   000022 772000                    QRL     18
         5 000262   200071 756100                    STQ     S_START+1,,AUTO

      268    12034    2             S_STOP(1/*@PROC*/)  = VX_CURR$ -> VX$TREE_NODE.PADDR

  12034  5 000263   000003 236100                    LDQ     3,,PR0
         5 000264   777777 376007                    ANQ     -1,DL
         5 000265   200074 756100                    STQ     AREA_LEFT+2,,AUTO
         5 000266   000003 236100                    LDQ     3,,PR0
         5 000267   000022 772000                    QRL     18
         5 000270   200074 036100                    ADLQ    AREA_LEFT+2,,AUTO
         5 000271   000001 136007                    SBLQ    1,DL
         5 000272   200065 756100                    STQ     S_STOP+1,,AUTO

      269    12035    2                     +
      270    12036    2                     VX_CURR$ -> VX$TREE_NODE.PSIZE  - 1;
      271    12037    2             S_SIZE(1/*@PROC*/)  = VX_CURR$ -> VX$TREE_NODE.PSIZE;

  12037  5 000273   000003 236100                    LDQ     3,,PR0
         5 000274   777777 376007                    ANQ     -1,DL
         5 000275   200067 756100                    STQ     S_SIZE+1,,AUTO

      272    12038    3             DO I = 0/*@DATA*/ TO 1/*@PROC*/;

  12038  5 000276   200024 450100                    STZ     I,,AUTO

      273    12039    4                 IF S_SIZE(I) > 0 THEN DO;

  12039  5 000277   200024 720100                    LXL0    I,,AUTO
         5 000300   200066 235110                    LDA     S_SIZE,X0,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:92   
         5 000301   000344 604400 5                  TMOZ    s:12043

      274    12040    4                     CALL VXD$B2C( PROCT_TYPE(I), 13, 6, S_START(I), 8 );

  12040  5 000302   000024 236000 6                  LDQ     20
         5 000303   200100 756100                    STQ     AREA_LEFT+6,,AUTO
         5 000304   200070 630510                    EPPR0   S_START,X0,AUTO
         5 000305   200077 450500                    STP0    AREA_LEFT+5,,AUTO
         5 000306   000025 236000 6                  LDQ     21
         5 000307   200076 756100                    STQ     AREA_LEFT+4,,AUTO
         5 000310   000026 236000 6                  LDQ     22
         5 000311   200075 756100                    STQ     AREA_LEFT+3,,AUTO
         5 000312   200024 236100                    LDQ     I,,AUTO
         5 000313   000030 402000 6                  MPY     24
         5 000314   000027 036000 6                  ADLQ    23
         5 000315   200074 756100                    STQ     AREA_LEFT+2,,AUTO
         5 000316   200074 630500                    EPPR0   AREA_LEFT+2,,AUTO
         5 000317   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000320   000000 701000 xent               TSX1    VXD$B2C
         5 000321   000000 011000                    NOP     0

      275    12041    4                     CALL VXD$B2C( PROCT_TYPE(I), 23, 6, S_STOP(I), 8 );

  12041  5 000322   000024 236000 6                  LDQ     20
         5 000323   200100 756100                    STQ     AREA_LEFT+6,,AUTO
         5 000324   200024 720100                    LXL0    I,,AUTO
         5 000325   200064 630510                    EPPR0   S_STOP,X0,AUTO
         5 000326   200077 450500                    STP0    AREA_LEFT+5,,AUTO
         5 000327   000025 236000 6                  LDQ     21
         5 000330   200076 756100                    STQ     AREA_LEFT+4,,AUTO
         5 000331   000032 236000 6                  LDQ     26
         5 000332   200075 756100                    STQ     AREA_LEFT+3,,AUTO
         5 000333   200024 236100                    LDQ     I,,AUTO
         5 000334   000030 402000 6                  MPY     24
         5 000335   000027 036000 6                  ADLQ    23
         5 000336   200074 756100                    STQ     AREA_LEFT+2,,AUTO
         5 000337   200074 630500                    EPPR0   AREA_LEFT+2,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:93   
         5 000340   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000341   000000 701000 xent               TSX1    VXD$B2C
         5 000342   000000 011000                    NOP     0

      276    12042    4                    END;

  12042  5 000343   000351 710000 5                  TRA     s:12044

      277    12043    3                 ELSE CALL INSERT( PROCT_TYPE(I), 13, , ' ' );

  12043  5 000344   200024 236100                    LDQ     I,,AUTO
         5 000345   000047 402007                    MPY     39,DL
         5 000346   040006 100400                    MLR     fill='040'O
         5 000347   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000350   000027 200032 3                  ADSC9   PROCT_TYPE+3,Q           cn=1,n=26

      278    12044    3                 CALL VXD$B2C( PROCT_TYPE(I), 33, 6, S_SIZE(I), 8 );

  12044  5 000351   000024 236000 6                  LDQ     20
         5 000352   200100 756100                    STQ     AREA_LEFT+6,,AUTO
         5 000353   200024 720100                    LXL0    I,,AUTO
         5 000354   200066 630510                    EPPR0   S_SIZE,X0,AUTO
         5 000355   200077 450500                    STP0    AREA_LEFT+5,,AUTO
         5 000356   000025 236000 6                  LDQ     21
         5 000357   200076 756100                    STQ     AREA_LEFT+4,,AUTO
         5 000360   000034 236000 6                  LDQ     28
         5 000361   200075 756100                    STQ     AREA_LEFT+3,,AUTO
         5 000362   200024 236100                    LDQ     I,,AUTO
         5 000363   000030 402000 6                  MPY     24
         5 000364   000027 036000 6                  ADLQ    23
         5 000365   200074 756100                    STQ     AREA_LEFT+2,,AUTO
         5 000366   200074 630500                    EPPR0   AREA_LEFT+2,,AUTO
         5 000367   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000370   000000 701000 xent               TSX1    VXD$B2C
         5 000371   000000 011000                    NOP     0

      279    12045                      %WR_LIT( MES1="PROCT_TYPE(I)" );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:94   

  12046  5 000372   000020 235000 6                  LDA     16
         5 000373   200024 236100                    LDQ     I,,AUTO
         5 000374   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 000375   000030 402000 6                  MPY     24
         5 000376   000027 036000 6                  ADLQ    23
         5 000377   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 000400   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12047  5 000401   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 000402   440001 713400                    CLIMB   alt,write
         5 000403   401400 401760                    pmme    nvectors=4
         5 000404   005150 702000 5                  TSX2    MAP_IO_ERROR

      280    12055    3                END;

  12055  5 000405   200024 235100                    LDA     I,,AUTO
         5 000406   000001 035007                    ADLA    1,DL
         5 000407   200024 755100                    STA     I,,AUTO
         5 000410   000002 115007                    CMPA    2,DL
         5 000411   000277 602000 5                  TNC     s:12039

      281    12056    2            END;

      282    12057        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:95   
      283    12058        /*
      284    12059                        Read in the records
      285    12060        */
      286    12061    1   READ_RECORDS:
      287    12062    1         VX_MAP_LO_FPT_WRITE.BUF_      = VECTOR( VX_MBUF );

  12062  5 000412   000036 237000 6     READ_RECORDS LDAQ    30
         5 000413   000004 757000 xsym               STAQ    VX_MAP_LO_FPT_WRITE+4

      288    12063    1         VX_MAP$ -> VX$NODE.NUM = VX_MAP_NUM;

  12063  5 000414   000000 235000 xsym               LDA     VX_MAP_NUM
         5 000415   000000 470400 xsym               LDP0    VX_MAP$
         5 000416   000010 755100                    STA     8,,PR0

      289    12064    1         START$ = VX_MAP_AREA$;

  12064  5 000417   000000 236000 xsym               LDQ     VX_MAP_AREA$
         5 000420   200012 756100                    STQ     START$,,AUTO

      290    12065    1         AREA_LEFT = VX_MAP_AREA_SIZE;

  12065  5 000421   000000 235000 xsym               LDA     VX_MAP_AREA_SIZE
         5 000422   200072 755100                    STA     AREA_LEFT,,AUTO

      291    12066    2         DO I = 1 TO 9;

  12066  5 000423   000001 235007                    LDA     1,DL
         5 000424   200024 755100                    STA     I,,AUTO

      292    12067    2             VX_MAP$ -> VX$NODE.L_START_A$(I)  = ADDR(NIL);

  12067  5 000425   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000426   000000 470400 xsym               LDP0    VX_MAP$
         5 000427   200024 720100                    LXL0    I,,AUTO
         5 000430   000030 756110                    STQ     24,X0,PR0

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:96   
      293    12068    2             VX_MAP$ -> VX$NODE.L_STOP_A$(I)   = ADDR(NIL);

  12068  5 000431   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000432   000000 470400 xsym               LDP0    VX_MAP$
         5 000433   200024 720100                    LXL0    I,,AUTO
         5 000434   000042 756110                    STQ     34,X0,PR0

      294    12069    2             VX_MAP$ -> VX$NODE.L_SIZE_A(I) = 0;

  12069  5 000435   000000 470400 xsym               LDP0    VX_MAP$
         5 000436   200024 720100                    LXL0    I,,AUTO
         5 000437   000054 450110                    STZ     44,X0,PR0

      295    12070    2             VX_MAP$ -> VX$NODE.L_PREV_SIZE_A(I) = 0;

  12070  5 000440   000000 470400 xsym               LDP0    VX_MAP$
         5 000441   200024 720100                    LXL0    I,,AUTO
         5 000442   000066 450110                    STZ     54,X0,PR0

      296    12071    3             DO CASE(I);

  12071  5 000443   200024 235100                    LDA     I,,AUTO
         5 000444   000011 115007                    CMPA    9,DL
         5 000445   000447 602005 5                  TNC     s:12071+4,AL
         5 000446   000465 710000 5                  TRA     s:12081
         5 000447   000465 710000 5                  TRA     s:12081
         5 000450   000460 710000 5                  TRA     s:12076
         5 000451   000465 710000 5                  TRA     s:12081
         5 000452   000465 710000 5                  TRA     s:12081
         5 000453   000460 710000 5                  TRA     s:12076
         5 000454   000465 710000 5                  TRA     s:12081
         5 000455   000460 710000 5                  TRA     s:12076
         5 000456   000465 710000 5                  TRA     s:12081
         5 000457   000460 710000 5                  TRA     s:12076

      297    12072    3               CASE(     1,

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:97   
      298    12073    3                     4,
      299    12074    3                     6,
      300    12075    3                     8  );        /* Defs */
      301    12076    3                 TSIZE = VX_MAP_REC_SIZE_A(I);

  12076  5 000460   000000 235005 xsym               LDA     VX_MAP_REC_SIZE_A,AL
         5 000461   200050 755100                    STA     TSIZE,,AUTO

      302    12077    3                 PAGE_SIZE = TSIZE;

  12077  5 000462   200051 755100                    STA     PAGE_SIZE,,AUTO

      303    12078    3                 INIT_SIZE = TSIZE;

  12078  5 000463   200052 755100                    STA     INIT_SIZE,,AUTO
         5 000464   000472 710000 5                  TRA     s:12085

      304    12079        /**/
      305    12080    3               CASE( ELSE );

      306    12081    3                 TSIZE = BITBIN('777777'O);

  12081  5 000465   777777 236007                    LDQ     -1,DL
         5 000466   200050 756100                    STQ     TSIZE,,AUTO

      307    12082    3                 PAGE_SIZE = BITBIN('4000'O);;

  12082  5 000467   004000 235007                    LDA     2048,DL
         5 000470   200051 755100                    STA     PAGE_SIZE,,AUTO

      308    12083    3                 INIT_SIZE = PAGE_SIZE;

  12083  5 000471   200052 755100                    STA     INIT_SIZE,,AUTO

      309    12084    3               END;                        /* Do case(i); */

      310    12085    3             IF PAGE_SIZE > 0 AND TSIZE > 0 THEN DO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:98   

  12085  5 000472   000675 600000 5                  TZE     s:12144
         5 000473   200050 236100                    LDQ     TSIZE,,AUTO
         5 000474   000675 600000 5                  TZE     s:12144

      311    12086    4                 IF INIT_SIZE > AREA_LEFT THEN DO;

  12086  5 000475   200052 236100                    LDQ     INIT_SIZE,,AUTO
         5 000476   000501 604000 5                  TMI     s:12087
         5 000477   200072 116100                    CMPQ    AREA_LEFT,,AUTO
         5 000500   000540 604400 5                  TMOZ    s:12101

      312    12087    4                     GET = ( INIT_SIZE - AREA_LEFT ) ;

  12087  5 000501   200072 136100                    SBLQ    AREA_LEFT,,AUTO
         5 000502   200047 756100                    STQ     GET,,AUTO

      313    12088                          %ALLOCATE(
      314    12089                          PTR$=NAME$,
      315    12090                          TYPE=@MAP_DS,
      316    12091                          SIZE=GET);

  12092  5 000503   000004 236000 xsym               LDQ     VX_M_ALL+4
         5 000504   000004 136000 xsym               SBLQ    VX_M_FREE+4
         5 000505   000520 604000 5                  TMI     s:12096
         5 000506   200047 116100                    CMPQ    GET,,AUTO
         5 000507   000520 602000 5                  TNC     s:12096

  12093  5 000510   000004 236000 xsym               LDQ     VX_M_FREE+4
         5 000511   000022 736000                    QLS     18
         5 000512   000004 036000 xsym               ADLQ    VX_M_BASE_PTR+4
         5 000513   200010 756100                    STQ     NAME$,,AUTO

  12094  5 000514   000004 236000 xsym               LDQ     VX_M_FREE+4
         5 000515   200047 036100                    ADLQ    GET,,AUTO
         5 000516   000004 756000 xsym               STQ     VX_M_FREE+4

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:99   
  12095  5 000517   000532 710000 5                  TRA     s:12098

  12096  5 000520   200047 630500                    EPPR0   GET,,AUTO
         5 000521   200076 450500                    STP0    AREA_LEFT+4,,AUTO
         5 000522   000040 236000 6                  LDQ     32
         5 000523   200075 756100                    STQ     AREA_LEFT+3,,AUTO
         5 000524   200010 631500                    EPPR1   NAME$,,AUTO
         5 000525   200074 451500                    STP1    AREA_LEFT+2,,AUTO
         5 000526   200074 630500                    EPPR0   AREA_LEFT+2,,AUTO
         5 000527   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000530   000000 701000 xent               TSX1    VXA$GET
         5 000531   000000 011000                    NOP     0

      317    12098    4                     VX_MAP_AREA_SIZE = VX_MAP_AREA_SIZE + GET;

  12098  5 000532   000000 236000 xsym               LDQ     VX_MAP_AREA_SIZE
         5 000533   200047 036100                    ADLQ    GET,,AUTO
         5 000534   000000 756000 xsym               STQ     VX_MAP_AREA_SIZE

      318    12099    4                     AREA_LEFT = AREA_LEFT + GET;

  12099  5 000535   200072 236100                    LDQ     AREA_LEFT,,AUTO
         5 000536   200047 036100                    ADLQ    GET,,AUTO
         5 000537   200072 756100                    STQ     AREA_LEFT,,AUTO

      319    12100    4                    END;

      320    12101    3                 CALL VXU$PREAD(     NPAGE,

  12101  5 000540   000042 237000 6                  LDAQ    34
         5 000541   200106 757100                    STAQ    AREA_LEFT+12,,AUTO
         5 000542   200052 630500                    EPPR0   INIT_SIZE,,AUTO
         5 000543   200105 450500                    STP0    AREA_LEFT+11,,AUTO
         5 000544   000040 236000 6                  LDQ     32
         5 000545   200104 756100                    STQ     AREA_LEFT+10,,AUTO
         5 000546   200050 631500                    EPPR1   TSIZE,,AUTO
         5 000547   200103 451500                    STP1    AREA_LEFT+9,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:100  
         5 000550   200051 633500                    EPPR3   PAGE_SIZE,,AUTO
         5 000551   200102 453500                    STP3    AREA_LEFT+8,,AUTO
         5 000552   200012 634500                    EPPR4   START$,,AUTO
         5 000553   200101 454500                    STP4    AREA_LEFT+7,,AUTO
         5 000554   200024 635500                    EPPR5   I,,AUTO
         5 000555   200100 455500                    STP5    AREA_LEFT+6,,AUTO
         5 000556   000044 237000 6                  LDAQ    36
         5 000557   200076 757100                    STAQ    AREA_LEFT+4,,AUTO
         5 000560   200032 636500                    EPPR6   TSIZE_READ,,AUTO
         5 000561   200075 456500                    STP6    AREA_LEFT+3,,AUTO
         5 000562   200031 637500                    EPPR7   NPAGE,,AUTO
         5 000563   200074 457500                    STP7    AREA_LEFT+2,,AUTO
         5 000564   200074 630500                    EPPR0   AREA_LEFT+2,,AUTO
         5 000565   000041 631400 6                  EPPR1   33
         5 000566   000000 701000 xent               TSX1    VXU$PREAD
         5 000567   000000 011000                    NOP     0

      321    12102    3                         TSIZE_READ,
      322    12103    3                         1/*@RF*/,
      323    12104    3                         1/*@RF*/,
      324    12105    3                         I,
      325    12106    3                         START$,
      326    12107    3                         PAGE_SIZE,
      327    12108    3                         TSIZE,
      328    12109    3                         4/*@MAP_DS*/,
      329    12110    3                         INIT_SIZE,
      330    12111    3                         VX_MAP$,
      331    12112    3                         -1 );
      332    12113    4                 IF TSIZE_READ <= 0 THEN DO;

  12113  5 000570   200032 235100                    LDA     TSIZE_READ,,AUTO
         5 000571   000603 601000 5                  TNZ     s:12118

      333    12114    4                     VX_MAP$ -> VX$NODE.L_START_A$(I) = ADDR(NIL);

  12114  5 000572   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000573   000000 470400 xsym               LDP0    VX_MAP$
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:101  
         5 000574   200024 720100                    LXL0    I,,AUTO
         5 000575   000030 756110                    STQ     24,X0,PR0

      334    12115    4                     VX_MAP$ -> VX$NODE.L_STOP_A$(I)  = ADDR(NIL);

  12115  5 000576   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000577   000000 470400 xsym               LDP0    VX_MAP$
         5 000600   200024 720100                    LXL0    I,,AUTO
         5 000601   000042 756110                    STQ     34,X0,PR0

      335    12116    4                    END;

  12116  5 000602   000675 710000 5                  TRA     s:12144

      336    12117    4                 ELSE DO;

      337    12118    4                     START$ = PINCRW( START$, TSIZE_READ );

  12118  5 000603   200032 236100                    LDQ     TSIZE_READ,,AUTO
         5 000604   000022 736000                    QLS     18
         5 000605   200012 036100                    ADLQ    START$,,AUTO
         5 000606   200012 756100                    STQ     START$,,AUTO

      338    12119    4                     AREA_LEFT = AREA_LEFT - TSIZE_READ;

  12119  5 000607   200072 236100                    LDQ     AREA_LEFT,,AUTO
         5 000610   200032 136100                    SBLQ    TSIZE_READ,,AUTO
         5 000611   200072 756100                    STQ     AREA_LEFT,,AUTO

      339    12120    4                     IF AREA_LEFT < 0 THEN AREA_LEFT = 0;

  12120  5 000612   000614 605000 5                  TPL     s:12121

  12120  5 000613   200072 450100                    STZ     AREA_LEFT,,AUTO

      340    12121    5                     IF NPAGE > 1 AND I > 3 THEN DO;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:102  
  12121  5 000614   200031 236100                    LDQ     NPAGE,,AUTO
         5 000615   000002 116007                    CMPQ    2,DL
         5 000616   000675 602000 5                  TNC     s:12144
         5 000617   200024 235100                    LDA     I,,AUTO
         5 000620   000004 115007                    CMPA    4,DL
         5 000621   000675 602000 5                  TNC     s:12144

      341    12122    6                         IF MOD( I, 2 ) = 1 THEN DO;

  12122  5 000622   200024 236100                    LDQ     I,,AUTO
         5 000623   000001 376007                    ANQ     1,DL
         5 000624   000001 116007                    CMPQ    1,DL
         5 000625   000636 601000 5                  TNZ     s:12129

      342    12123    6                             NAME$ = VX_MAP$ -> VX$NODE.L_START.RN$;

  12123  5 000626   000000 470400 xsym               LDP0    VX_MAP$
         5 000627   000032 236100                    LDQ     26,,PR0
         5 000630   200010 756100                    STQ     NAME$,,AUTO

      343    12124    6                             N_D = 0;

  12124  5 000631   200045 450100                    STZ     N_D,,AUTO

      344    12125    6                             TIES = 1;

  12125  5 000632   000001 235007                    LDA     1,DL
         5 000633   200046 755100                    STA     TIES,,AUTO

      345    12126    6                             SIZE = SIZEW( VXR$TMPLT );

  12126  5 000634   200033 755100                    STA     SIZE,,AUTO

      346    12127    6                            END;

  12127  5 000635   000645 710000 5                  TRA     s:12134

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:103  
      347    12128    6                         ELSE DO;

      348    12129    6                             NAME$ = VX_MAP$ -> VX$NODE.L_START.DN$;

  12129  5 000636   000000 470400 xsym               LDP0    VX_MAP$
         5 000637   000031 236100                    LDQ     25,,PR0
         5 000640   200010 756100                    STQ     NAME$,,AUTO

      349    12130    6                             SIZE = SIZEW( VXD$TMPLT );

  12130  5 000641   000002 235007                    LDA     2,DL
         5 000642   200033 755100                    STA     SIZE,,AUTO

      350    12131    6                             N_D = 2;

  12131  5 000643   200045 755100                    STA     N_D,,AUTO

      351    12132    6                             TIES = 0;

  12132  5 000644   200046 450100                    STZ     TIES,,AUTO

      352    12133    6                            END;

      353    12134    5                         CALL VXQ$SORT( NAME$,

  12134  5 000645   200046 631500                    EPPR1   TIES,,AUTO
         5 000646   200102 451500                    STP1    AREA_LEFT+8,,AUTO
         5 000647   200045 633500                    EPPR3   N_D,,AUTO
         5 000650   200101 453500                    STP3    AREA_LEFT+7,,AUTO
         5 000651   000044 236000 6                  LDQ     36
         5 000652   200100 756100                    STQ     AREA_LEFT+6,,AUTO
         5 000653   200033 634500                    EPPR4   SIZE,,AUTO
         5 000654   200077 454500                    STP4    AREA_LEFT+5,,AUTO
         5 000655   200024 236100                    LDQ     I,,AUTO
         5 000656   000022 736000                    QLS     18
         5 000657   000042 036003                    ADLQ    34,DU
         5 000660   000000 036000 xsym               ADLQ    VX_MAP$
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:104  
         5 000661   200076 756100                    STQ     AREA_LEFT+4,,AUTO
         5 000662   200024 236100                    LDQ     I,,AUTO
         5 000663   000022 736000                    QLS     18
         5 000664   000030 036003                    ADLQ    24,DU
         5 000665   000000 036000 xsym               ADLQ    VX_MAP$
         5 000666   200075 756100                    STQ     AREA_LEFT+3,,AUTO
         5 000667   200010 635500                    EPPR5   NAME$,,AUTO
         5 000670   200074 455500                    STP5    AREA_LEFT+2,,AUTO
         5 000671   200074 630500                    EPPR0   AREA_LEFT+2,,AUTO
         5 000672   000025 631400 xsym               EPPR1   B_VECTNIL+21
         5 000673   000000 701000 xent               TSX1    VXQ$SORT
         5 000674   000000 011000                    NOP     0

      354    12135    5                                 VX_MAP$ -> VX$NODE.L_START_A$(I),
      355    12136    5                                 VX_MAP$ -> VX$NODE.L_STOP_A$(I),
      356    12137    5                                 SIZE,
      357    12138    5                                 1/*@BY_NAME*/,
      358    12139    5                                 N_D,
      359    12140    5                                 TIES );
      360    12141    5                        END;

      361    12142    4                    END;                   /* If TSIZE_READ <= 0 then do; */

      362    12143    3                END;

      363    12144    2            END;

  12144  5 000675   200024 235100                    LDA     I,,AUTO
         5 000676   000001 035007                    ADLA    1,DL
         5 000677   200024 755100                    STA     I,,AUTO
         5 000700   000012 115007                    CMPA    10,DL
         5 000701   000425 602000 5                  TNC     s:12067

      364    12145        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:105  
      365    12146        /*
      366    12147                        References - primary/secondary
      367    12148        */
      368    12149    1         VX_MBUF.CHARS_A(0) = 'A';

  12149  5 000702   101000 236003                    LDQ     33280,DU
         5 000703   000000 552040 xsym               STBQ    VX_MBUF,'40'O

      369    12150    1         NAME$ = VX_MAP$ -> VX$NODE.L_START.RN$;

  12150  5 000704   000000 470400 xsym               LDP0    VX_MAP$
         5 000705   000032 236100                    LDQ     26,,PR0
         5 000706   200010 756100                    STQ     NAME$,,AUTO

      370    12151    1         DNAME$ = VX_MAP$ -> VX$NODE.L_START.DN$;

  12151  5 000707   000031 236100                    LDQ     25,,PR0
         5 000710   200011 756100                    STQ     DNAME$,,AUTO

      371    12152    2         DO II = 0 TO 1;

  12152  5 000711   200035 450100                    STZ     II,,AUTO

      372    12153    2             BIT_INX = 0;

  12153  5 000712   200037 450100                    STZ     BIT_INX,,AUTO

      373    12154    3             DO I = 1 TO SIZEW( VX_REF_REC_A ) - 1;

  12154  5 000713   000001 235007                    LDA     1,DL
         5 000714   200024 755100                    STA     I,,AUTO
         5 000715   001342 710000 5                  TRA     s:12299+3

      374    12155    3                 NOT_WROTE = '1'B/*@TRUE_B*/;

  12155  5 000716   400000 236003                    LDQ     -131072,DU
         5 000717   200005 756100                    STQ     NOT_WROTE,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:106  

      375    12156    3                 RTYPE = VX_REF_REC_A(I);

  12156  5 000720   200024 720100                    LXL0    I,,AUTO
         5 000721   000000 235010 xsym               LDA     VX_REF_REC_A,X0
         5 000722   200030 755100                    STA     RTYPE,,AUTO

      376    12157    3                 P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);

  12157  5 000723   000000 470400 xsym               LDP0    VX_MAP$
         5 000724   000030 236105                    LDQ     24,AL,PR0
         5 000725   200020 756100                    STQ     P$,,AUTO

      377    12158    3                 IF P$ ~= ADDR(NIL) AND

  12158  5 000726   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000727   001334 600000 5                  TZE     s:12298
         5 000730   200035 235100                    LDA     II,,AUTO
         5 000731   000740 601000 5                  TNZ     s:12158+10
         5 000732   200037 235100                    LDA     BIT_INX,,AUTO
         5 000733   000002 735000                    ALS     2
         5 000734   000000 066405                    CMPB    filb='0'B
         5 000735   000011 220001 xsym               BDSC    VX_RU_HEAD_BUF+9,A       by=1,bit=2,n=1
         5 000736   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         5 000737   000751 601000 5                  TNZ     s:12163
         5 000740   200035 235100                    LDA     II,,AUTO
         5 000741   000001 115007                    CMPA    1,DL
         5 000742   001334 601000 5                  TNZ     s:12298
         5 000743   200037 235100                    LDA     BIT_INX,,AUTO
         5 000744   000002 735000                    ALS     2
         5 000745   000000 066405                    CMPB    filb='0'B
         5 000746   000011 230001 xsym               BDSC    VX_RU_HEAD_BUF+9,A       by=1,bit=3,n=1
         5 000747   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         5 000750   001334 600000 5                  TZE     s:12298

      378    12159    3                         ( ( II = 0 AND VX_RU_HEAD_BUF.MAP_BITS_A.PRIMARY(BIT_INX) )
      379    12160    3                         OR
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:107  
      380    12161    3                         ( II = 1 AND VX_RU_HEAD_BUF.MAP_BITS_A.SECONDARY(BIT_INX) ) )
      381    12162    4                 THEN DO;

      382    12163    5                     IF II = 0 THEN DO;

  12163  5 000751   200035 235100                    LDA     II,,AUTO
         5 000752   000762 601000 5                  TNZ     s:12168

      383    12164    5                         R$ = ADDR( REF_PRIMARY(BIT_INX) );

  12164  5 000753   200037 236100                    LDQ     BIT_INX,,AUTO
         5 000754   000047 402000 6                  MPY     39
         5 000755   000046 036000 6                  ADLQ    38
         5 000756   200022 756100                    STQ     R$,,AUTO

      384    12165    5                         REF_MES_SIZE = LENGTHC( REF_PRIMARY(0) );

  12165  5 000757   000067 235007                    LDA     55,DL
         5 000760   200053 755100                    STA     REF_MES_SIZE,,AUTO

      385    12166    5                        END;

  12166  5 000761   000770 710000 5                  TRA     s:12171

      386    12167    5                     ELSE DO;

      387    12168    5                         R$ = ADDR( REF_SECONDARY(BIT_INX) );

  12168  5 000762   200037 236100                    LDQ     BIT_INX,,AUTO
         5 000763   000051 402000 6                  MPY     41
         5 000764   000050 036000 6                  ADLQ    40
         5 000765   200022 756100                    STQ     R$,,AUTO

      388    12169    5                         REF_MES_SIZE = LENGTHC( REF_SECONDARY(0) );

  12169  5 000766   000071 235007                    LDA     57,DL
         5 000767   200053 755100                    STA     REF_MES_SIZE,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:108  

      389    12170    5                        END;               /* Else do; - if ii = 0 then do; */

      390    12171    4                     Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);

  12171  5 000770   200030 721100                    LXL1    RTYPE,,AUTO
         5 000771   000042 236111                    LDQ     34,X1,PR0
         5 000772   200021 756100                    STQ     Q$,,AUTO

      391    12172    5                     DO WHILE ( P$ <= Q$ );

  12172  5 000773   200020 116100                    CMPQ    P$,,AUTO
         5 000774   001221 602000 5                  TNC     s:12252

      392    12173    5                         SIZE = PINCRW( NAME$, P$ -> VXR$TMPLT.NPOINTER ) -> B$DNAME.
             12173                                  COUNT;

  12173  5 000775   200020 470500                    LDP0    P$,,AUTO
         5 000776   000000 220100                    LDX0    0,,PR0
         5 000777   200010 471500                    LDP1    NAME$,,AUTO
         5 001000   100000 236110                    LDQ     0,X0,PR1
         5 001001   000022 772000                    QRL     18
         5 001002   200033 756100                    STQ     SIZE,,AUTO

      393    12174    5                         FSIZE = SIZE;

  12174  5 001003   200034 756100                    STQ     FSIZE,,AUTO

      394    12175    5                         IF P$ -> VXR$TMPLT.GOT THEN

  12175  5 001004   000000 236100                    LDQ     0,,PR0
         5 001005   100000 316007                    CANQ    32768,DL
         5 001006   001017 600000 5                  TZE     s:12179

      395    12176    5                             FSIZE = FSIZE

  12176  5 001007   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:109  
         5 001010   077777 360003                    ANX0    32767,DU
         5 001011   200011 473500                    LDP3    DNAME$,,AUTO
         5 001012   300000 236110                    LDQ     0,X0,PR3
         5 001013   000022 772000                    QRL     18
         5 001014   200034 036100                    ADLQ    FSIZE,,AUTO
         5 001015   000001 036007                    ADLQ    1,DL
         5 001016   200034 756100                    STQ     FSIZE,,AUTO

      396    12177    5                                     +
      397    12178    5                                     PINCRW( DNAME$, P$ -> VXR$TMPLT.OPOINTER ) ->
             12178                                              B$DNAME.COUNT + 1;
      398    12179    5                         IF (VX_CTAB > 1)  OR  (FSIZE + DIAG_TABS(VX_CTAB) > 80)

  12179  5 001017   000000 235000 xsym               LDA     VX_CTAB
         5 001020   000002 115007                    CMPA    2,DL
         5 001021   001026 603000 5                  TRC     s:12181
         5 001022   200034 236100                    LDQ     FSIZE,,AUTO
         5 001023   000707 036005 2                  ADLQ    DIAG_TABS,AL
         5 001024   000121 116007                    CMPQ    81,DL
         5 001025   001115 602000 5                  TNC     s:12213

      399    12180    6                         THEN DO;

      400    12181    7                             IF NOT_NODE_LINE THEN DO;

  12181  5 001026   200006 234100                    SZN     NOT_NODE_LINE,,AUTO
         5 001027   001035 605000 5                  TPL     s:12185

      401    12182    7                                 CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET(
             12182                                          MAP_IO_ERROR);

  12182  5 001030   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001031   440001 713400                    CLIMB   alt,write
         5 001032   401400 401760                    pmme    nvectors=4
         5 001033   005150 702000 5                  TSX2    MAP_IO_ERROR

      402    12183    7                                 NOT_NODE_LINE = '0'B/*@FALSE_B*/;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:110  

  12183  5 001034   200006 450100                    STZ     NOT_NODE_LINE,,AUTO

      403    12184    7                                END;

      404    12185    7                             IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;

  12185  5 001035   200007 234100                    SZN     NOT_DIAG_NODE_LINE,,AUTO
         5 001036   001050 605000 5                  TPL     s:12190
         5 001037   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001040   001050 605000 5                  TPL     s:12190

      405    12186    7                                 DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);

  12186  5 001041   000052 237000 6                  LDAQ    42
         5 001042   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

      406    12187    7                                CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);

  12187  5 001043   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001044   440001 713400                    CLIMB   alt,write
         5 001045   401400 401760                    pmme    nvectors=4
         5 001046   005150 702000 5                  TSX2    MAP_IO_ERROR

      407    12188    7                                 NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;

  12188  5 001047   200007 450100                    STZ     NOT_DIAG_NODE_LINE,,AUTO

      408    12189    7                                END;

      409    12190    7                             IF NOT_WROTE THEN DO;

  12190  5 001050   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 001051   001077 605000 5                  TPL     s:12205

      410    12191    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:111  
  12191  5 001052   200005 450100                    STZ     NOT_WROTE,,AUTO

      411    12192                                      %WR_LIT(DIAG=YES, MES1="R$ -> REF$MES" );

  12193  5 001053   200053 235100                    LDA     REF_MES_SIZE,,AUTO
         5 001054   000020 735000                    ALS     16
         5 001055   000140 135007                    SBLA    96,DL
         5 001056   200022 236100                    LDQ     R$,,AUTO
         5 001057   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12194  5 001060   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001061   440001 713400                    CLIMB   alt,write
         5 001062   401400 401760                    pmme    nvectors=4
         5 001063   005150 702000 5                  TSX2    MAP_IO_ERROR

  12196  5 001064   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001065   001077 605000 5                  TPL     s:12205

  12197  5 001066   200053 235100                    LDA     REF_MES_SIZE,,AUTO
         5 001067   000020 735000                    ALS     16
         5 001070   000140 135007                    SBLA    96,DL
         5 001071   200022 236100                    LDQ     R$,,AUTO
         5 001072   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

  12198  5 001073   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001074   440001 713400                    CLIMB   alt,write
         5 001075   401400 401760                    pmme    nvectors=4
         5 001076   005150 702000 5                  TSX2    MAP_IO_ERROR

      412    12202    7                                END;       /* If NOT_WROTE */

      413    12203                                  %M_WRITE( DIAG=YES );

  12205  5 001077   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 001100   440001 713400                    CLIMB   alt,write
         5 001101   401400 401760                    pmme    nvectors=4
         5 001102   005150 702000 5                  TSX2    MAP_IO_ERROR
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:112  

  12207  5 001103   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001104   001111 605000 5                  TPL     s:12209

  12207  5 001105   000112 630400 3                  EPPR0   DIAG_FPT_WRITE
         5 001106   440001 713400                    CLIMB   alt,write
         5 001107   401400 401760                    pmme    nvectors=4
         5 001110   005150 702000 5                  TSX2    MAP_IO_ERROR

  12209  5 001111   040000 100400                    MLR     fill='040'O
         5 001112   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 001113   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12210  5 001114   000000 450000 xsym               STZ     VX_CTAB

      414    12212    6                            END;

      415    12213    5                         IF II = 0

  12213  5 001115   200035 235100                    LDA     II,,AUTO
         5 001116   001124 601000 5                  TNZ     s:12221

      416    12214    5                         THEN
      417    12215    6                         DO;

      418    12216    6                             IF P$->VXR$TMPLT.SREF

  12216  5 001117   200020 470500                    LDP0    P$,,AUTO
         5 001120   000000 236100                    LDQ     0,,PR0
         5 001121   400000 316007                    CANQ    -131072,DL
         5 001122   001213 601000 5                  TNZ     NEXT

      419    12217    6                             THEN GOTO NEXT;
      420    12218    6                            END;

  12218  5 001123   001130 710000 5                  TRA     s:12228

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:113  
      421    12219    5                         ELSE
      422    12220    6                         DO;

      423    12221    6                             IF NOT P$->VXR$TMPLT.SREF

  12221  5 001124   200020 470500                    LDP0    P$,,AUTO
         5 001125   000000 236100                    LDQ     0,,PR0
         5 001126   400000 316007                    CANQ    -131072,DL
         5 001127   001213 600000 5                  TZE     NEXT

      424    12222    6                             THEN GOTO NEXT;
      425    12223    6                            END;

      426    12224                              %MOVE_NAME(
      427    12225                              REF1="VXR$TMPLT.NPOINTER",
      428    12226                              NAME$=NAME$,
      429    12227                              TABBER="DIAG_TABS(VX_CTAB)");

  12228  5 001130   000000 220100                    LDX0    0,,PR0
         5 001131   000000 636010                    EAQ     0,X0
         5 001132   200010 036100                    ADLQ    NAME$,,AUTO
         5 001133   200060 756100                    STQ     SOURCE$,,AUTO

  12229  5 001134   200060 471500                    LDP1    SOURCE$,,AUTO
         5 001135   100000 221100                    LDX1    0,,PR1
         5 001136   000000 722000 xsym               LXL2    VX_CTAB
         5 001137   000707 235012 2                  LDA     DIAG_TABS,X2
         5 001140   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 001141   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 001142   040045 100540                    MLR     fill='040'O
         5 001143   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 001144   000000 000011 xsym               ADSC9   VX_MBUF,A                cn=0,n=*X1

      430    12231    6                         IF P$ -> VXR$TMPLT.GOT THEN DO;

  12231  5 001145   000000 236100                    LDQ     0,,PR0
         5 001146   100000 316007                    CANQ    32768,DL
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:114  
         5 001147   001176 600000 5                  TZE     s:12244

      431    12232    6                             T_INX = DIAG_TABS(VX_CTAB)+SIZE;

  12232  5 001150   000707 236012 2                  LDQ     DIAG_TABS,X2
         5 001151   200033 036100                    ADLQ    SIZE,,AUTO
         5 001152   200036 756100                    STQ     T_INX,,AUTO

      432    12233    6                             VX_MBUF.CHARS_A(T_INX+1) = 'i';

  12233  5 001153   040006 100400                    MLR     fill='040'O
         5 001154   000054 000001 6                  ADSC9   44                       cn=0,n=1
         5 001155   000000 200001 xsym               ADSC9   VX_MBUF,Q                cn=1,n=1

      433    12234    6                             VX_MBUF.CHARS_A(T_INX+2) = 'n';

  12234  5 001156   040006 100400                    MLR     fill='040'O
         5 001157   000055 000001 6                  ADSC9   45                       cn=0,n=1
         5 001160   000000 400001 xsym               ADSC9   VX_MBUF,Q                cn=2,n=1

      434    12235                                  %MOVE_NAME(
      435    12236                                  REF1="VXR$TMPLT.OPOINTER",
      436    12237                                  NAME$=DNAME$,
      437    12238                                  TABBER="T_INX+4");

  12239  5 001161   000000 720100                    LXL0    0,,PR0
         5 001162   077777 360003                    ANX0    32767,DU
         5 001163   000000 636010                    EAQ     0,X0
         5 001164   200011 036100                    ADLQ    DNAME$,,AUTO
         5 001165   200060 756100                    STQ     SOURCE$,,AUTO

  12240  5 001166   200060 471500                    LDP1    SOURCE$,,AUTO
         5 001167   100000 221100                    LDX1    0,,PR1
         5 001170   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 001171   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 001172   200036 235100                    LDA     T_INX,,AUTO
         5 001173   040045 100540                    MLR     fill='040'O
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:115  
         5 001174   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 001175   000001 000011 xsym               ADSC9   VX_MBUF+1,A              cn=0,n=*X1

      438    12242    6                            END;

      439    12243                              %BUMP_CTAB(TAB_A=DIAG_TABS, INC=FSIZE, SPACE=4);

  12244  5 001176   000707 236012 2                  LDQ     DIAG_TABS,X2
         5 001177   200034 036100                    ADLQ    FSIZE,,AUTO
         5 001200   000004 036007                    ADLQ    4,DL
         5 001201   200061 756100                    STQ     LAST_TAB,,AUTO

  12245  5 001202   000707 116012 2                  CMPQ    DIAG_TABS,X2
         5 001203   001213 602000 5                  TNC     NEXT
         5 001204   001213 600000 5                  TZE     NEXT

  12246  5 001205   000000 235000 xsym               LDA     VX_CTAB
         5 001206   000001 035007                    ADLA    1,DL
         5 001207   000000 755000 xsym               STA     VX_CTAB

  12247  5 001210   000707 236005 2                  LDQ     DIAG_TABS,AL
         5 001211   200061 116100                    CMPQ    LAST_TAB,,AUTO
         5 001212   001205 602000 5                  TNC     s:12246

      440    12249    5   NEXT:
      441    12250    5                         P$ = PINCRW( P$, SIZEW( VXR$TMPLT ) );

  12250  5 001213   200020 236100       NEXT         LDQ     P$,,AUTO
         5 001214   000001 036003                    ADLQ    1,DU
         5 001215   200020 756100                    STQ     P$,,AUTO

      442    12251    5                        END;               /* Do while */

  12251  5 001216   200021 116100                    CMPQ    Q$,,AUTO
         5 001217   000775 602000 5                  TNC     s:12173
         5 001220   000775 600000 5                  TZE     s:12173

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:116  
      443    12252    5                     IF VX_CTAB ~= 0 THEN DO;

  12252  5 001221   000000 235000 xsym               LDA     VX_CTAB
         5 001222   001314 600000 5                  TZE     s:12285

      444    12253    6                         IF NOT_NODE_LINE THEN DO;

  12253  5 001223   200006 234100                    SZN     NOT_NODE_LINE,,AUTO
         5 001224   001232 605000 5                  TPL     s:12257

      445    12254    6                             CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET(
             12254                                      MAP_IO_ERROR);

  12254  5 001225   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001226   440001 713400                    CLIMB   alt,write
         5 001227   401400 401760                    pmme    nvectors=4
         5 001230   005150 702000 5                  TSX2    MAP_IO_ERROR

      446    12255    6                             NOT_NODE_LINE = '0'B/*@FALSE_B*/;

  12255  5 001231   200006 450100                    STZ     NOT_NODE_LINE,,AUTO

      447    12256    6                            END;

      448    12257    6                         IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;

  12257  5 001232   200007 234100                    SZN     NOT_DIAG_NODE_LINE,,AUTO
         5 001233   001245 605000 5                  TPL     s:12262
         5 001234   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001235   001245 605000 5                  TPL     s:12262

      449    12258    6                             DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);

  12258  5 001236   000052 237000 6                  LDAQ    42
         5 001237   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

      450    12259    6                             CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:117  

  12259  5 001240   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001241   440001 713400                    CLIMB   alt,write
         5 001242   401400 401760                    pmme    nvectors=4
         5 001243   005150 702000 5                  TSX2    MAP_IO_ERROR

      451    12260    6                             NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;

  12260  5 001244   200007 450100                    STZ     NOT_DIAG_NODE_LINE,,AUTO

      452    12261    6                            END;

      453    12262    6                         IF NOT_WROTE THEN DO;

  12262  5 001245   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 001246   001273 605000 5                  TPL     s:12275

      454    12263                                  %WR_LIT( DIAG=YES, MES1="R$ -> REF$MES" );

  12264  5 001247   200053 235100                    LDA     REF_MES_SIZE,,AUTO
         5 001250   000020 735000                    ALS     16
         5 001251   000140 135007                    SBLA    96,DL
         5 001252   200022 236100                    LDQ     R$,,AUTO
         5 001253   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12265  5 001254   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001255   440001 713400                    CLIMB   alt,write
         5 001256   401400 401760                    pmme    nvectors=4
         5 001257   005150 702000 5                  TSX2    MAP_IO_ERROR

  12267  5 001260   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001261   001273 605000 5                  TPL     s:12275

  12268  5 001262   200053 235100                    LDA     REF_MES_SIZE,,AUTO
         5 001263   000020 735000                    ALS     16
         5 001264   000140 135007                    SBLA    96,DL
         5 001265   200022 236100                    LDQ     R$,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:118  
         5 001266   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

  12269  5 001267   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001270   440001 713400                    CLIMB   alt,write
         5 001271   401400 401760                    pmme    nvectors=4
         5 001272   005150 702000 5                  TSX2    MAP_IO_ERROR

      455    12273    6                            END;

      456    12274                              %M_WRITE(DIAG=YES, BEFORE="VX_MBUF.LIT_BUF.VFC='B';");

  12275  5 001273   102000 236003                    LDQ     33792,DU
         5 001274   000000 552040 xsym               STBQ    VX_MBUF,'40'O

  12276  5 001275   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 001276   440001 713400                    CLIMB   alt,write
         5 001277   401400 401760                    pmme    nvectors=4
         5 001300   005150 702000 5                  TSX2    MAP_IO_ERROR

  12278  5 001301   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001302   001307 605000 5                  TPL     s:12280

  12278  5 001303   000112 630400 3                  EPPR0   DIAG_FPT_WRITE
         5 001304   440001 713400                    CLIMB   alt,write
         5 001305   401400 401760                    pmme    nvectors=4
         5 001306   005150 702000 5                  TSX2    MAP_IO_ERROR

  12280  5 001307   040000 100400                    MLR     fill='040'O
         5 001310   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 001311   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12281  5 001312   000000 450000 xsym               STZ     VX_CTAB

      457    12283    5                        END;

  12283  5 001313   001334 710000 5                  TRA     s:12298

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:119  
      458    12284    5                     ELSE DO;

      459    12285    6                         IF NOT NOT_WROTE THEN DO;

  12285  5 001314   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 001315   001334 604000 5                  TMI     s:12298

      460    12286                                  %M_WRITE( DIAG=YES);

  12288  5 001316   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 001317   440001 713400                    CLIMB   alt,write
         5 001320   401400 401760                    pmme    nvectors=4
         5 001321   005150 702000 5                  TSX2    MAP_IO_ERROR

  12290  5 001322   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001323   001330 605000 5                  TPL     s:12292

  12290  5 001324   000112 630400 3                  EPPR0   DIAG_FPT_WRITE
         5 001325   440001 713400                    CLIMB   alt,write
         5 001326   401400 401760                    pmme    nvectors=4
         5 001327   005150 702000 5                  TSX2    MAP_IO_ERROR

  12292  5 001330   040000 100400                    MLR     fill='040'O
         5 001331   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 001332   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12293  5 001333   000000 450000 xsym               STZ     VX_CTAB

      461    12295    6                            END;           /* If ~NOT_WROTE then do; */

      462    12296    5                        END;               /* Else do */

      463    12297    4                    END;                   /* If P$ ~= addr(nil ) ... */

      464    12298    3                 BIT_INX = BIT_INX + 1;

  12298  5 001334   200037 235100                    LDA     BIT_INX,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:120  
         5 001335   000001 035007                    ADLA    1,DL
         5 001336   200037 755100                    STA     BIT_INX,,AUTO

      465    12299    3                END;                       /* Do i = 1 to ... */

  12299  5 001337   200024 236100                    LDQ     I,,AUTO
         5 001340   000001 036007                    ADLQ    1,DL
         5 001341   200024 756100                    STQ     I,,AUTO
         5 001342   200024 235100                    LDA     I,,AUTO
         5 001343   000004 115007                    CMPA    4,DL
         5 001344   000716 602000 5                  TNC     s:12155

      466    12300    2            END;                           /* Do ii = 0 to 1; */

  12300  5 001345   200035 236100                    LDQ     II,,AUTO
         5 001346   000001 036007                    ADLQ    1,DL
         5 001347   200035 756100                    STQ     II,,AUTO
         5 001350   000002 116007                    CMPQ    2,DL
         5 001351   000712 602000 5                  TNC     s:12153

      467    12301        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:121  
      468    12302        /*
      469    12303                        Multiply defined symbols
      470    12304        */
      471    12305    1         BIT_INX = 0;

  12305  5 001352   200037 450100                    STZ     BIT_INX,,AUTO

      472    12306    2         DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;

  12306  5 001353   000001 235007                    LDA     1,DL
         5 001354   200024 755100                    STA     I,,AUTO
         5 001355   001762 710000 5                  TRA     s:12429+3

      473    12307    2             NOT_WROTE = '1'B/*@TRUE_B*/;

  12307  5 001356   400000 236003                    LDQ     -131072,DU
         5 001357   200005 756100                    STQ     NOT_WROTE,,AUTO

      474    12308    2             RTYPE = VX_DEF_REC_A(I);

  12308  5 001360   200024 720100                    LXL0    I,,AUTO
         5 001361   000000 235010 xsym               LDA     VX_DEF_REC_A,X0
         5 001362   200030 755100                    STA     RTYPE,,AUTO

      475    12309    2             P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);

  12309  5 001363   000000 470400 xsym               LDP0    VX_MAP$
         5 001364   000030 236105                    LDQ     24,AL,PR0
         5 001365   200020 756100                    STQ     P$,,AUTO

      476    12310    2             IF P$ ~= ADDR(NIL)

  12310  5 001366   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001367   001754 600000 5                  TZE     s:12428
         5 001370   200037 235100                    LDA     BIT_INX,,AUTO
         5 001371   000002 735000                    ALS     2
         5 001372   000000 066405                    CMPB    filb='0'B
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:122  
         5 001373   000011 200001 xsym               BDSC    VX_RU_HEAD_BUF+9,A       by=1,bit=0,n=1
         5 001374   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         5 001375   001754 600000 5                  TZE     s:12428

      477    12311    2                     AND  VX_RU_HEAD_BUF.MAP_BITS_A.MULTIPLE(BIT_INX)
      478    12312    3             THEN DO;

      479    12313    3                 Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);

  12313  5 001376   200030 721100                    LXL1    RTYPE,,AUTO
         5 001377   000042 236111                    LDQ     34,X1,PR0
         5 001400   200021 756100                    STQ     Q$,,AUTO

      480    12314    4                 DO WHILE ( P$ <= Q$ );

  12314  5 001401   200020 116100                    CMPQ    P$,,AUTO
         5 001402   001635 602000 5                  TNC     s:12381

      481    12315    4                     S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );

  12315  5 001403   200020 236100                    LDQ     P$,,AUTO
         5 001404   000002 036003                    ADLQ    2,DU
         5 001405   200014 756100                    STQ     S$,,AUTO

      482    12316    5                     IF RTYPE ~= 4 THEN DO;

  12316  5 001406   200030 235100                    LDA     RTYPE,,AUTO
         5 001407   000004 115007                    CMPA    4,DL
         5 001410   001417 600000 5                  TZE     s:12319

      483    12317    5                         IF P$ -> VXD$TMPLT.CONSTNT AND NOT P$ -> VXD$TMPLT.LFLAGS.
             12317                                  MULTIPLE THEN GOTO SKIP_IT;

  12317  5 001411   200020 470500                    LDP0    P$,,AUTO
         5 001412   000001 236100                    LDQ     1,,PR0
         5 001413   400000 316007                    CANQ    -131072,DL
         5 001414   001417 600000 5                  TZE     s:12319
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:123  
         5 001415   200000 316007                    CANQ    65536,DL
         5 001416   001630 600000 5                  TZE     SKIP_IT

      484    12318    5                        END;

      485    12319    4                     IF NOT P$ -> VXD$TMPLT.AD.LFLAGS.MULTIPLE THEN GOTO SKIP_IT;

  12319  5 001417   200020 470500                    LDP0    P$,,AUTO
         5 001420   000000 236100                    LDQ     0,,PR0
         5 001421   020000 316003                    CANQ    8192,DU
         5 001422   001630 600000 5                  TZE     SKIP_IT

      486    12320    4                     SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );

  12320  5 001423   000001 220100                    LDX0    1,,PR0
         5 001424   000000 636010                    EAQ     0,X0
         5 001425   200011 036100                    ADLQ    DNAME$,,AUTO
         5 001426   200013 756100                    STQ     SNAME$,,AUTO

      487    12321    4                     SIZE = SNAME$ -> B$DNAME.COUNT;

  12321  5 001427   200013 471500                    LDP1    SNAME$,,AUTO
         5 001430   100000 236100                    LDQ     0,,PR1
         5 001431   000022 772000                    QRL     18
         5 001432   200033 756100                    STQ     SIZE,,AUTO

      488    12322    4                     IF  (VX_CTAB > 1)  OR  (SIZE + DIAG_TABS(VX_CTAB) > 80)

  12322  5 001433   000000 235000 xsym               LDA     VX_CTAB
         5 001434   000002 115007                    CMPA    2,DL
         5 001435   001441 603000 5                  TRC     s:12324
         5 001436   000707 036005 2                  ADLQ    DIAG_TABS,AL
         5 001437   000121 116007                    CMPQ    81,DL
         5 001440   001534 602000 5                  TNC     s:12356

      489    12323    5                     THEN DO;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:124  
      490    12324    6                         IF NOT_NODE_LINE THEN DO;

  12324  5 001441   200006 234100                    SZN     NOT_NODE_LINE,,AUTO
         5 001442   001450 605000 5                  TPL     s:12328

      491    12325    6                             CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET(
             12325                                      MAP_IO_ERROR);

  12325  5 001443   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001444   440001 713400                    CLIMB   alt,write
         5 001445   401400 401760                    pmme    nvectors=4
         5 001446   005150 702000 5                  TSX2    MAP_IO_ERROR

      492    12326    6                             NOT_NODE_LINE = '0'B/*@FALSE_B*/;

  12326  5 001447   200006 450100                    STZ     NOT_NODE_LINE,,AUTO

      493    12327    6                            END;

      494    12328    6                         IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;

  12328  5 001450   200007 234100                    SZN     NOT_DIAG_NODE_LINE,,AUTO
         5 001451   001463 605000 5                  TPL     s:12333
         5 001452   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001453   001463 605000 5                  TPL     s:12333

      495    12329    6                             DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);

  12329  5 001454   000052 237000 6                  LDAQ    42
         5 001455   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

      496    12330    6                             CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);

  12330  5 001456   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001457   440001 713400                    CLIMB   alt,write
         5 001460   401400 401760                    pmme    nvectors=4
         5 001461   005150 702000 5                  TSX2    MAP_IO_ERROR
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:125  

      497    12331    6                             NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;

  12331  5 001462   200007 450100                    STZ     NOT_DIAG_NODE_LINE,,AUTO

      498    12332    6                            END;

      499    12333    6                         IF NOT_WROTE THEN DO;

  12333  5 001463   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 001464   001516 605000 5                  TPL     s:12348

      500    12334    6                             NOT_WROTE = '0'B/*@FALSE_B*/;

  12334  5 001465   200005 450100                    STZ     NOT_WROTE,,AUTO

      501    12335                                  %WR_LIT( DIAG=YES, MES1="DEF_MULTIPLE(BIT_INX)" );

  12336  5 001466   000056 235000 6                  LDA     46
         5 001467   200037 236100                    LDQ     BIT_INX,,AUTO
         5 001470   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 001471   000060 402000 6                  MPY     48
         5 001472   000057 036000 6                  ADLQ    47
         5 001473   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 001474   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12337  5 001475   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001476   440001 713400                    CLIMB   alt,write
         5 001477   401400 401760                    pmme    nvectors=4
         5 001500   005150 702000 5                  TSX2    MAP_IO_ERROR

  12339  5 001501   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001502   001516 605000 5                  TPL     s:12348

  12340  5 001503   000056 235000 6                  LDA     46
         5 001504   200037 236100                    LDQ     BIT_INX,,AUTO
         5 001505   200074 755100                    STA     AREA_LEFT+2,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:126  
         5 001506   000060 402000 6                  MPY     48
         5 001507   000057 036000 6                  ADLQ    47
         5 001510   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 001511   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

  12341  5 001512   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001513   440001 713400                    CLIMB   alt,write
         5 001514   401400 401760                    pmme    nvectors=4
         5 001515   005150 702000 5                  TSX2    MAP_IO_ERROR

      502    12345    6                            END;           /* If NOT_WROTE */

      503    12346                              %M_WRITE( DIAG=YES );

  12348  5 001516   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 001517   440001 713400                    CLIMB   alt,write
         5 001520   401400 401760                    pmme    nvectors=4
         5 001521   005150 702000 5                  TSX2    MAP_IO_ERROR

  12350  5 001522   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001523   001530 605000 5                  TPL     s:12352

  12350  5 001524   000112 630400 3                  EPPR0   DIAG_FPT_WRITE
         5 001525   440001 713400                    CLIMB   alt,write
         5 001526   401400 401760                    pmme    nvectors=4
         5 001527   005150 702000 5                  TSX2    MAP_IO_ERROR

  12352  5 001530   040000 100400                    MLR     fill='040'O
         5 001531   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 001532   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12353  5 001533   000000 450000 xsym               STZ     VX_CTAB

      504    12355    5                        END;

      505    12356    4                     IF S$ > Q$ THEN GOTO JUMP_OUT;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:127  
  12356  5 001534   200021 236100                    LDQ     Q$,,AUTO
         5 001535   200014 116100                    CMPQ    S$,,AUTO
         5 001536   001575 602000 5                  TNC     JUMP_OUT

      506    12357    5                     DO WHILE(

  12357  5 001537   200013 470500                    LDP0    SNAME$,,AUTO
         5 001540   000000 220100                    LDX0    0,,PR0
         5 001541   200014 471500                    LDP1    S$,,AUTO
         5 001542   100001 221100                    LDX1    1,,PR1
         5 001543   200011 473500                    LDP3    DNAME$,,AUTO
         5 001544   300000 222111                    LDX2    0,X1,PR3
         5 001545   000000 635011                    EAA     0,X1
         5 001546   000020 731000                    ARS     16
         5 001547   040145 106540                    CMPC    fill='040'O
         5 001550   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 001551   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 001552   001575 601000 5                  TNZ     JUMP_OUT

      507    12358    5                             SNAME$ -> B$DNAME.TEXT
      508    12359    5                             =
      509    12360    5                            PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) -> B$DNAME.TEXT
             12360                                      );
      510    12361    5                         S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );

  12361  5 001553   200014 236100                    LDQ     S$,,AUTO
         5 001554   000002 036003                    ADLQ    2,DU
         5 001555   200014 756100                    STQ     S$,,AUTO

      511    12362    5                         IF S$ > Q$ THEN GOTO JUMP_OUT;

  12362  5 001556   200021 116100                    CMPQ    Q$,,AUTO
         5 001557   001561 600000 5                  TZE     s:12363
         5 001560   001575 603000 5                  TRC     JUMP_OUT

      512    12363    5                        END;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:128  
  12363  5 001561   200013 470500                    LDP0    SNAME$,,AUTO
         5 001562   000000 220100                    LDX0    0,,PR0
         5 001563   200014 471500                    LDP1    S$,,AUTO
         5 001564   100001 221100                    LDX1    1,,PR1
         5 001565   200011 473500                    LDP3    DNAME$,,AUTO
         5 001566   300000 222111                    LDX2    0,X1,PR3
         5 001567   000000 635011                    EAA     0,X1
         5 001570   000020 731000                    ARS     16
         5 001571   040145 106540                    CMPC    fill='040'O
         5 001572   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 001573   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 001574   001553 600000 5                  TZE     s:12361

      513    12364    4   JUMP_OUT:
      514    12365                          %MOVE_NAME(
      515    12366                          REF1="VXD$TMPLT.NPOINTER",
      516    12367                          NAME$=DNAME$,
      517    12368                          TABBER="VX_MAP_TABS_A(VX_CTAB)");

  12369  5 001575   200020 470500       JUMP_OUT     LDP0    P$,,AUTO
         5 001576   000001 220100                    LDX0    1,,PR0
         5 001577   000000 636010                    EAQ     0,X0
         5 001600   200011 036100                    ADLQ    DNAME$,,AUTO
         5 001601   200060 756100                    STQ     SOURCE$,,AUTO

  12370  5 001602   200060 471500                    LDP1    SOURCE$,,AUTO
         5 001603   100000 221100                    LDX1    0,,PR1
         5 001604   000000 722000 xsym               LXL2    VX_CTAB
         5 001605   000000 235012 xsym               LDA     VX_MAP_TABS_A,X2
         5 001606   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 001607   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 001610   040045 100540                    MLR     fill='040'O
         5 001611   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 001612   000000 000011 xsym               ADSC9   VX_MBUF,A                cn=0,n=*X1

      518    12372                          %BUMP_CTAB(TAB_A=DIAG_TABS, INC=SIZE, SPACE=4);

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:129  
  12373  5 001613   000707 236012 2                  LDQ     DIAG_TABS,X2
         5 001614   200033 036100                    ADLQ    SIZE,,AUTO
         5 001615   000004 036007                    ADLQ    4,DL
         5 001616   200061 756100                    STQ     LAST_TAB,,AUTO

  12374  5 001617   000707 116012 2                  CMPQ    DIAG_TABS,X2
         5 001620   001630 602000 5                  TNC     SKIP_IT
         5 001621   001630 600000 5                  TZE     SKIP_IT

  12375  5 001622   000000 235000 xsym               LDA     VX_CTAB
         5 001623   000001 035007                    ADLA    1,DL
         5 001624   000000 755000 xsym               STA     VX_CTAB

  12376  5 001625   000707 236005 2                  LDQ     DIAG_TABS,AL
         5 001626   200061 116100                    CMPQ    LAST_TAB,,AUTO
         5 001627   001622 602000 5                  TNC     s:12375

      519    12378    4   SKIP_IT:
      520    12379    4                     P$ = S$;

  12379  5 001630   200014 236100       SKIP_IT      LDQ     S$,,AUTO
         5 001631   200020 756100                    STQ     P$,,AUTO

      521    12380    4                    END;                   /* Do while */

  12380  5 001632   200021 116100                    CMPQ    Q$,,AUTO
         5 001633   001403 602000 5                  TNC     s:12315
         5 001634   001403 600000 5                  TZE     s:12315

      522    12381    4                 IF VX_CTAB ~= 0 THEN DO;

  12381  5 001635   000000 235000 xsym               LDA     VX_CTAB
         5 001636   001734 600000 5                  TZE     s:12415

      523    12382    5                     IF NOT_NODE_LINE THEN DO;

  12382  5 001637   200006 234100                    SZN     NOT_NODE_LINE,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:130  
         5 001640   001646 605000 5                  TPL     s:12386

      524    12383    5                        CALL M$WRITE( VX_MAP_LIT_LO_FPT_WRITE ) ALTRET( MAP_IO_ERROR);

  12383  5 001641   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001642   440001 713400                    CLIMB   alt,write
         5 001643   401400 401760                    pmme    nvectors=4
         5 001644   005150 702000 5                  TSX2    MAP_IO_ERROR

      525    12384    5                         NOT_NODE_LINE = '0'B/*@FALSE_B*/;

  12384  5 001645   200006 450100                    STZ     NOT_NODE_LINE,,AUTO

      526    12385    5                        END;

      527    12386    5                     IF NOT_DIAG_NODE_LINE AND VX_LO_DO_DIFFER THEN DO;

  12386  5 001646   200007 234100                    SZN     NOT_DIAG_NODE_LINE,,AUTO
         5 001647   001661 605000 5                  TPL     s:12391
         5 001650   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001651   001661 605000 5                  TPL     s:12391

      528    12387    5                         DIAG_LIT_FPT_WRITE.BUF_ = VECTOR(DIAG_NODE_HDR);

  12387  5 001652   000052 237000 6                  LDAQ    42
         5 001653   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

      529    12388    5                         CALL M$WRITE(DIAG_LIT_FPT_WRITE) ALTRET(MAP_IO_ERROR);

  12388  5 001654   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001655   440001 713400                    CLIMB   alt,write
         5 001656   401400 401760                    pmme    nvectors=4
         5 001657   005150 702000 5                  TSX2    MAP_IO_ERROR

      530    12389    5                         NOT_DIAG_NODE_LINE = '0'B/*@FALSE_B*/;

  12389  5 001660   200007 450100                    STZ     NOT_DIAG_NODE_LINE,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:131  

      531    12390    5                        END;

      532    12391    5                     IF NOT_WROTE THEN DO;

  12391  5 001661   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 001662   001713 605000 5                  TPL     s:12405

      533    12392                              %WR_LIT( DIAG=YES, MES1="DEF_MULTIPLE(BIT_INX)");

  12393  5 001663   000056 235000 6                  LDA     46
         5 001664   200037 236100                    LDQ     BIT_INX,,AUTO
         5 001665   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 001666   000060 402000 6                  MPY     48
         5 001667   000057 036000 6                  ADLQ    47
         5 001670   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 001671   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12394  5 001672   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 001673   440001 713400                    CLIMB   alt,write
         5 001674   401400 401760                    pmme    nvectors=4
         5 001675   005150 702000 5                  TSX2    MAP_IO_ERROR

  12396  5 001676   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001677   001713 605000 5                  TPL     s:12405

  12397  5 001700   000056 235000 6                  LDA     46
         5 001701   200037 236100                    LDQ     BIT_INX,,AUTO
         5 001702   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 001703   000060 402000 6                  MPY     48
         5 001704   000057 036000 6                  ADLQ    47
         5 001705   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 001706   000102 757000 3                  STAQ    DIAG_LIT_FPT_WRITE+4

  12398  5 001707   000076 630400 3                  EPPR0   DIAG_LIT_FPT_WRITE
         5 001710   440001 713400                    CLIMB   alt,write
         5 001711   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:132  
         5 001712   005150 702000 5                  TSX2    MAP_IO_ERROR

      534    12402    5                        END;

      535    12403                          %M_WRITE( DIAG=YES,
      536    12404                          BEFORE="VX_MBUF.LIT_BUF.VFC='B';");

  12405  5 001713   102000 236003                    LDQ     33792,DU
         5 001714   000000 552040 xsym               STBQ    VX_MBUF,'40'O

  12406  5 001715   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 001716   440001 713400                    CLIMB   alt,write
         5 001717   401400 401760                    pmme    nvectors=4
         5 001720   005150 702000 5                  TSX2    MAP_IO_ERROR

  12408  5 001721   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001722   001727 605000 5                  TPL     s:12410

  12408  5 001723   000112 630400 3                  EPPR0   DIAG_FPT_WRITE
         5 001724   440001 713400                    CLIMB   alt,write
         5 001725   401400 401760                    pmme    nvectors=4
         5 001726   005150 702000 5                  TSX2    MAP_IO_ERROR

  12410  5 001727   040000 100400                    MLR     fill='040'O
         5 001730   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 001731   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12411  5 001732   000000 450000 xsym               STZ     VX_CTAB

      537    12413    4                    END;

  12413  5 001733   001754 710000 5                  TRA     s:12428

      538    12414    4                 ELSE DO;

      539    12415    5                     IF NOT NOT_WROTE THEN DO;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:133  
  12415  5 001734   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 001735   001754 604000 5                  TMI     s:12428

      540    12416                              %M_WRITE( DIAG=YES );

  12418  5 001736   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 001737   440001 713400                    CLIMB   alt,write
         5 001740   401400 401760                    pmme    nvectors=4
         5 001741   005150 702000 5                  TSX2    MAP_IO_ERROR

  12420  5 001742   000000 234000 xsym               SZN     VX_LO_DO_DIFFER
         5 001743   001750 605000 5                  TPL     s:12422

  12420  5 001744   000112 630400 3                  EPPR0   DIAG_FPT_WRITE
         5 001745   440001 713400                    CLIMB   alt,write
         5 001746   401400 401760                    pmme    nvectors=4
         5 001747   005150 702000 5                  TSX2    MAP_IO_ERROR

  12422  5 001750   040000 100400                    MLR     fill='040'O
         5 001751   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 001752   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12423  5 001753   000000 450000 xsym               STZ     VX_CTAB

      541    12425    5                        END;               /* If ~NOT_WROTE then do; */

      542    12426    4                    END;                   /* Else do */

      543    12427    3                END;                       /* If P$ ~= addr(nil ) ... */

      544    12428    2             BIT_INX = BIT_INX + 1;

  12428  5 001754   200037 235100                    LDA     BIT_INX,,AUTO
         5 001755   000001 035007                    ADLA    1,DL
         5 001756   200037 755100                    STA     BIT_INX,,AUTO

      545    12429    2            END;                           /* Do i = 1 to ... */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:134  

  12429  5 001757   200024 236100                    LDQ     I,,AUTO
         5 001760   000001 036007                    ADLQ    1,DL
         5 001761   200024 756100                    STQ     I,,AUTO
         5 001762   200024 235100                    LDA     I,,AUTO
         5 001763   000004 115007                    CMPA    4,DL
         5 001764   001356 602000 5                  TNC     s:12307

      546    12430    1         IF VX_O.OPT.MAP < 0 THEN RETURN;

  12430  5 001765   000153 236000 xsym               LDQ     VX_O+107
         5 001766   001770 605000 5                  TPL     s:12436

  12430  5 001767   000000 702200 xent               TSX2  ! X66_ARET

      547    12431        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:135  
      548    12432        /*
      549    12433                        Control sections
      550    12434        */
      551    12435              %SUB @M_SC_START_ADR =    12/*@M_SC_START_ADR*/;
      552    12436    1         P$ = VX_MAP$ -> VX$NODE.L_START.SC$;

  12436  5 001770   000000 470400 xsym               LDP0    VX_MAP$
         5 001771   000033 236100                    LDQ     27,,PR0
         5 001772   200020 756100                    STQ     P$,,AUTO

      553    12437    2         IF P$ ~= ADDR(NIL) THEN DO;

  12437  5 001773   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001774   003333 600000 5                  TZE     s:12841

      554    12438    2             Q$ = VX_MAP$ -> VX$NODE.L_STOP.SC$;

  12438  5 001775   000045 236100                    LDQ     37,,PR0
         5 001776   200021 756100                    STQ     Q$,,AUTO

      555    12439    2             NAME$ = VX_MAP$ -> VX$NODE.L_START.DN$;

  12439  5 001777   000031 236100                    LDQ     25,,PR0
         5 002000   200010 756100                    STQ     NAME$,,AUTO

      556    12440    2             DCB_HEAD$ = ADDR(NIL);

  12440  5 002001   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 002002   200015 756100                    STQ     DCB_HEAD$,,AUTO

      557    12441    2             DCB_TAIL$ = ADDR(NIL);

  12441  5 002003   200016 756100                    STQ     DCB_TAIL$,,AUTO

      558    12442    2             BASE$ = P$;

  12442  5 002004   200020 236100                    LDQ     P$,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:136  
         5 002005   200017 756100                    STQ     BASE$,,AUTO

      559    12443    2             TRIGGER = 0;

  12443  5 002006   200055 450100                    STZ     TRIGGER,,AUTO

      560    12444                  %WR_LIT( MES1=CSSBY );

  12445  5 002007   000062 237000 6                  LDAQ    50
         5 002010   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12446  5 002011   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 002012   440001 713400                    CLIMB   alt,write
         5 002013   401400 401760                    pmme    nvectors=4
         5 002014   005150 702000 5                  TSX2    MAP_IO_ERROR

      561    12454    3             DO WHILE( P$ <= Q$  );

  12454  5 002015   200021 236100                    LDQ     Q$,,AUTO
         5 002016   200020 116100                    CMPQ    P$,,AUTO
         5 002017   002376 602000 5                  TNC     s:12568

      562    12455    3                 IF P$ -> VX$SC.ATTR.SEGMENT THEN GOTO PRINT_SEG_SECTIONS;

  12455  5 002020   200020 470500                    LDP0    P$,,AUTO
         5 002021   000000 236100                    LDQ     0,,PR0
         5 002022   000040 316003                    CANQ    32,DU
         5 002023   002403 601000 5                  TNZ     PRINT_SEG_SECTIONS

      563    12456    3                 S$ = PINCRW( P$, SIZEW( VX$SC ) );

  12456  5 002024   200020 236100                    LDQ     P$,,AUTO
         5 002025   000003 036003                    ADLQ    3,DU
         5 002026   200014 756100                    STQ     S$,,AUTO

      564    12457    3                 IF P$ -> VX$SC.SIZE <= 0 THEN GOTO EMPTY_SC;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:137  
  12457  5 002027   000001 720100                    LXL0    1,,PR0
         5 002030   002371 600000 5                  TZE     EMPTY_SC

      565    12458    4                 IF S$ <= Q$ THEN DO;

  12458  5 002031   200021 116100                    CMPQ    Q$,,AUTO
         5 002032   002034 600000 5                  TZE     s:12459
         5 002033   002055 603000 5                  TRC     LAST_SC

      566    12459    5                     DO WHILE( S$ -> VX$SC.ADDRESS = P$ -> VX$SC.ADDRESS );

  12459  5 002034   200014 471500                    LDP1    S$,,AUTO
         5 002035   100000 236100                    LDQ     0,,PR1
         5 002036   000000 676100                    ERQ     0,,PR0
         5 002037   777777 376007                    ANQ     -1,DL
         5 002040   002055 601000 5                  TNZ     LAST_SC

      567    12460    5                         S$ = PINCRW( S$, SIZEW( VX$SC ) );

  12460  5 002041   200014 236100                    LDQ     S$,,AUTO
         5 002042   000003 036003                    ADLQ    3,DU
         5 002043   200014 756100                    STQ     S$,,AUTO

      568    12461    5                         IF S$ > Q$ THEN GOTO LAST_SC;

  12461  5 002044   200021 116100                    CMPQ    Q$,,AUTO
         5 002045   002047 600000 5                  TZE     s:12462
         5 002046   002055 603000 5                  TRC     LAST_SC

      569    12462    5                        END;

  12462  5 002047   200020 470500                    LDP0    P$,,AUTO
         5 002050   200014 471500                    LDP1    S$,,AUTO
         5 002051   100000 236100                    LDQ     0,,PR1
         5 002052   000000 676100                    ERQ     0,,PR0
         5 002053   777777 376007                    ANQ     -1,DL
         5 002054   002041 600000 5                  TZE     s:12460
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:138  

      570    12463    4                    END;

      571    12464    3   LAST_SC:
      572    12465    4                 DO CASE( P$ -> VX$SC.TYPE );

  12465  5 002055   200020 470500       LAST_SC      LDP0    P$,,AUTO
         5 002056   000000 236100                    LDQ     0,,PR0
         5 002057   000033 772000                    QRL     27
         5 002060   000077 376007                    ANQ     63,DL
         5 002061   000011 116007                    CMPQ    9,DL
         5 002062   002064 602006 5                  TNC     LAST_SC+7,QL
         5 002063   002145 710000 5                  TRA     s:12497
         5 002064   002075 710000 5                  TRA     s:12467
         5 002065   002100 710000 5                  TRA     s:12469
         5 002066   002075 710000 5                  TRA     s:12467
         5 002067   002075 710000 5                  TRA     s:12467
         5 002070   002075 710000 5                  TRA     s:12467
         5 002071   002112 710000 5                  TRA     s:12483
         5 002072   002100 710000 5                  TRA     s:12469
         5 002073   002100 710000 5                  TRA     s:12469
         5 002074   002100 710000 5                  TRA     s:12469

      573    12466    4                   CASE( 0, 2, 4, 3 );

      574    12467    4                     TRIGGER = 1;

  12467  5 002075   000001 235007                    LDA     1,DL
         5 002076   200055 755100                    STA     TRIGGER,,AUTO
         5 002077   002145 710000 5                  TRA     s:12497

      575    12468    4                   CASE(1,6,7,8);

      576    12469    5                     IF TRIGGER = 1 THEN DO;

  12469  5 002100   200055 235100                    LDA     TRIGGER,,AUTO
         5 002101   000001 115007                    CMPA    1,DL
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:139  
         5 002102   002145 601000 5                  TNZ     s:12497

      577    12470    5                         TRIGGER = 2;

  12470  5 002103   000002 235007                    LDA     2,DL
         5 002104   200055 755100                    STA     TRIGGER,,AUTO

      578    12471                              %M_WRITE( CLEAR=" ", ZERO=" " );

  12473  5 002105   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 002106   440001 713400                    CLIMB   alt,write
         5 002107   401400 401760                    pmme    nvectors=4
         5 002110   005150 702000 5                  TSX2    MAP_IO_ERROR

      579    12480    5                        END;

  12480  5 002111   002145 710000 5                  TRA     s:12497

      580    12481        /**/
      581    12482    4                   CASE( 5 );

      582    12483    5                     IF DCB_HEAD$ = ADDR(NIL) THEN DO;

  12483  5 002112   200015 236100                    LDQ     DCB_HEAD$,,AUTO
         5 002113   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 002114   002120 601000 5                  TNZ     s:12487

      583    12484    5                         DCB_HEAD$ = P$;

  12484  5 002115   200020 236100                    LDQ     P$,,AUTO
         5 002116   200015 756100                    STQ     DCB_HEAD$,,AUTO

      584    12485    5                        END;

  12485  5 002117   002131 710000 5                  TRA     s:12489

      585    12486    5                     ELSE DO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:140  

      586    12487    5                         DCB_TAIL$ -> VX$SC.COM_LINK = POFFW( P$, BASE$ );

  12487  5 002120   200017 235100                    LDA     BASE$,,AUTO
         5 002121   000022 771000                    ARL     18
         5 002122   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 002123   200020 236100                    LDQ     P$,,AUTO
         5 002124   000022 772000                    QRL     18
         5 002125   200074 136100                    SBLQ    AREA_LEFT+2,,AUTO
         5 002126   000000 620006                    EAX0    0,QL
         5 002127   200016 471500                    LDP1    DCB_TAIL$,,AUTO
         5 002130   100002 440100                    SXL0    2,,PR1

      587    12488    5                        END;

      588    12489    4                     P$ -> VX$SC.COM_LINK = POFFW( P$, BASE$ );

  12489  5 002131   200017 235100                    LDA     BASE$,,AUTO
         5 002132   000022 771000                    ARL     18
         5 002133   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 002134   200020 236100                    LDQ     P$,,AUTO
         5 002135   000022 772000                    QRL     18
         5 002136   200074 136100                    SBLQ    AREA_LEFT+2,,AUTO
         5 002137   000000 620006                    EAX0    0,QL
         5 002140   200020 470500                    LDP0    P$,,AUTO
         5 002141   000002 440100                    SXL0    2,,PR0

      589    12490    4                     DCB_TAIL$ = P$;

  12490  5 002142   200020 236100                    LDQ     P$,,AUTO
         5 002143   200016 756100                    STQ     DCB_TAIL$,,AUTO

      590    12491    4                     GOTO EMPTY_SC;

  12491  5 002144   002371 710000 5                  TRA     EMPTY_SC

      591    12492    4                   END;                    /* Do case */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:141  

      592    12493                      %M_NUMBER(
      593    12494                      VAR="R$=ADDR(P$ -> VX$SC.ADDRESS);",
      594    12495                      START=@M_SC_START_ADR,
      595    12496                      FLD_SIZE=6);

  12497  5 002145   200020 236100                    LDQ     P$,,AUTO
         5 002146   400000 036007                    ADLQ    -131072,DL
         5 002147   200022 756100                    STQ     R$,,AUTO

  12498  5 002150   000074 450000 3                  STZ     SIG

  12499  5 002151   200062 450100                    STZ     K_INDEX,,AUTO
         5 002152   002231 710000 5                  TRA     s:12511+3

  12500  5 002153   200062 235100                    LDA     K_INDEX,,AUTO
         5 002154   000014 035007                    ADLA    12,DL
         5 002155   200063 755100                    STA     L_INDEX,,AUTO

  12501  5 002156   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002157   000003 402007                    MPY     3,DL
         5 002160   200022 470500                    LDP0    R$,,AUTO
         5 002161   003100 061506                    CSR     bolr='003'O
         5 002162   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 002163   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 002164   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 002165   000033 736000                    QLS     27
         5 002166   000073 676000 3                  ERQ     WORK_BUF
         5 002167   007000 376003                    ANQ     3584,DU
         5 002170   000073 656000 3                  ERSQ    WORK_BUF

  12502  5 002171   000073 236000 3                  LDQ     WORK_BUF
         5 002172   007000 316003                    CANQ    3584,DU
         5 002173   002220 601000 5                  TNZ     s:12508

  12503  5 002174   000074 234000 3                  SZN     SIG
         5 002175   002203 605000 5                  TPL     s:12504
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:142  

  12503  5 002176   200063 235100                    LDA     L_INDEX,,AUTO
         5 002177   040005 100400                    MLR     fill='040'O
         5 002200   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002201   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002202   002226 710000 5                  TRA     s:12511

  12504  5 002203   200062 235100                    LDA     K_INDEX,,AUTO
         5 002204   000005 115007                    CMPA    5,DL
         5 002205   002213 601000 5                  TNZ     s:12505

  12504  5 002206   200063 235100                    LDA     L_INDEX,,AUTO
         5 002207   040005 100400                    MLR     fill='040'O
         5 002210   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002211   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002212   002226 710000 5                  TRA     s:12511

  12505  5 002213   200063 235100                    LDA     L_INDEX,,AUTO
         5 002214   040005 100400                    MLR     fill='040'O
         5 002215   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 002216   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12506  5 002217   002226 710000 5                  TRA     s:12511

  12508  5 002220   400000 236003                    LDQ     -131072,DU
         5 002221   000074 756000 3                  STQ     SIG

  12509  5 002222   200063 235100                    LDA     L_INDEX,,AUTO
         5 002223   040005 100400                    MLR     fill='040'O
         5 002224   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 002225   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12511  5 002226   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002227   000001 036007                    ADLQ    1,DL
         5 002230   200062 756100                    STQ     K_INDEX,,AUTO
         5 002231   200062 235100                    LDA     K_INDEX,,AUTO
         5 002232   000006 115007                    CMPA    6,DL
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:143  
         5 002233   002153 602000 5                  TNC     s:12500

      596    12513
      597    12514    3                 CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7,

  12514  5 002234   200020 470500                    LDP0    P$,,AUTO
         5 002235   000000 236100                    LDQ     0,,PR0
         5 002236   000033 772000                    QRL     27
         5 002237   000077 376007                    ANQ     63,DL
         5 002240   000003 736000                    QLS     3
         5 002241   040000 100406                    MLR     fill='040'O
         5 002242   000212 000010 2                  ADSC9   SC_TYPE,Q                cn=0,n=8
         5 002243   000004 600010 xsym               ADSC9   VX_MBUF+4                cn=3,n=8

      598    12515    3                         LENGTHC( SC_TYPE(0) ), SC_TYPE( P$->VX$SC.TYPE ) );
      599    12516    4                 IF P$ -> VX$SC.NAME_DISP >= 0 THEN DO;

  12516  5 002244   000001 220100                    LDX0    1,,PR0
         5 002245   002267 604000 5                  TMI     s:12530

      600    12517                          %MOVE_NAME(
      601    12518                          REF1="VX$SC.NAME_DISP",
      602    12519                          TABBER="@M_SC_START_ADR+8+LENGTHC(SC_TYPE(0))");

  12520  5 002246   000000 636010                    EAQ     0,X0
         5 002247   200010 036100                    ADLQ    NAME$,,AUTO
         5 002250   200060 756100                    STQ     SOURCE$,,AUTO

  12521  5 002251   200060 471500                    LDP1    SOURCE$,,AUTO
         5 002252   100000 221100                    LDX1    0,,PR1
         5 002253   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 002254   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 002255   040040 100540                    MLR     fill='040'O
         5 002256   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 002257   000007 000011 xsym               ADSC9   VX_MBUF+7                cn=0,n=*X1

      603    12523    4                     IF SOURCE$->B$DNAME.COUNT > 31 THEN
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:144  

  12523  5 002260   100000 220100                    LDX0    0,,PR1
         5 002261   000040 100003                    CMPX0   32,DU
         5 002262   002272 602000 5                  TNC     s:12538

      604    12524    4                         CALL INSERT ( VX_MBUF.CHARS,

  12524  5 002263   040000 100400                    MLR     fill='040'O
         5 002264   000715 000003 2                  ADSC9   DIAG_TABS+6              cn=0,n=3
         5 002265   000016 600111 xsym               ADSC9   VX_MBUF+14               cn=3,n=73

      605    12525    4                                 12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0))+31,
      606    12526    4                                     /* Len */,
      607    12527    4                                 '...' ) ;
      608    12528    4                    END;

  12528  5 002266   002272 710000 5                  TRA     s:12538

      609    12529    4                 ELSE DO;

      610    12530    4                     CALL INSERT( VX_MBUF.CHARS,

  12530  5 002267   040000 100400                    MLR     fill='040'O
         5 002270   000236 000011 2                  ADSC9   UNNAMED                  cn=0,n=9
         5 002271   000007 000011 xsym               ADSC9   VX_MBUF+7                cn=0,n=9

      611    12531    4                             12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0)),
      612    12532    4                             LENGTHC( UNNAMED), UNNAMED );
      613    12533    4                    END;

      614    12534                      %M_NUMBER(
      615    12535                      VAR="R$=ADDR(P$ -> VX$SC.SIZE );",
      616    12536                      START=59,
      617    12537                      FLD_SIZE=6);

  12538  5 002272   200020 236100                    LDQ     P$,,AUTO
         5 002273   000064 036000 6                  ADLQ    52
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:145  
         5 002274   200022 756100                    STQ     R$,,AUTO

  12539  5 002275   000074 450000 3                  STZ     SIG

  12540  5 002276   200062 450100                    STZ     K_INDEX,,AUTO
         5 002277   002356 710000 5                  TRA     s:12552+3

  12541  5 002300   200062 235100                    LDA     K_INDEX,,AUTO
         5 002301   000073 035007                    ADLA    59,DL
         5 002302   200063 755100                    STA     L_INDEX,,AUTO

  12542  5 002303   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002304   000003 402007                    MPY     3,DL
         5 002305   200022 470500                    LDP0    R$,,AUTO
         5 002306   003100 061506                    CSR     bolr='003'O
         5 002307   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 002310   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 002311   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 002312   000033 736000                    QLS     27
         5 002313   000073 676000 3                  ERQ     WORK_BUF
         5 002314   007000 376003                    ANQ     3584,DU
         5 002315   000073 656000 3                  ERSQ    WORK_BUF

  12543  5 002316   000073 236000 3                  LDQ     WORK_BUF
         5 002317   007000 316003                    CANQ    3584,DU
         5 002320   002345 601000 5                  TNZ     s:12549

  12544  5 002321   000074 234000 3                  SZN     SIG
         5 002322   002330 605000 5                  TPL     s:12545

  12544  5 002323   200063 235100                    LDA     L_INDEX,,AUTO
         5 002324   040005 100400                    MLR     fill='040'O
         5 002325   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002326   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002327   002353 710000 5                  TRA     s:12552

  12545  5 002330   200062 235100                    LDA     K_INDEX,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:146  
         5 002331   000005 115007                    CMPA    5,DL
         5 002332   002340 601000 5                  TNZ     s:12546

  12545  5 002333   200063 235100                    LDA     L_INDEX,,AUTO
         5 002334   040005 100400                    MLR     fill='040'O
         5 002335   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002336   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002337   002353 710000 5                  TRA     s:12552

  12546  5 002340   200063 235100                    LDA     L_INDEX,,AUTO
         5 002341   040005 100400                    MLR     fill='040'O
         5 002342   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 002343   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12547  5 002344   002353 710000 5                  TRA     s:12552

  12549  5 002345   400000 236003                    LDQ     -131072,DU
         5 002346   000074 756000 3                  STQ     SIG

  12550  5 002347   200063 235100                    LDA     L_INDEX,,AUTO
         5 002350   040005 100400                    MLR     fill='040'O
         5 002351   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 002352   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12552  5 002353   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002354   000001 036007                    ADLQ    1,DL
         5 002355   200062 756100                    STQ     K_INDEX,,AUTO
         5 002356   200062 235100                    LDA     K_INDEX,,AUTO
         5 002357   000006 115007                    CMPA    6,DL
         5 002360   002300 602000 5                  TNC     s:12541

      618    12554                      %M_WRITE;

  12556  5 002361   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 002362   440001 713400                    CLIMB   alt,write
         5 002363   401400 401760                    pmme    nvectors=4
         5 002364   005150 702000 5                  TSX2    MAP_IO_ERROR
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:147  

  12560  5 002365   040000 100400                    MLR     fill='040'O
         5 002366   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 002367   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12561  5 002370   000000 450000 xsym               STZ     VX_CTAB

      619    12563    3   EMPTY_SC:
      620    12564    3                 P$ = S$;

  12564  5 002371   200014 236100       EMPTY_SC     LDQ     S$,,AUTO
         5 002372   200020 756100                    STQ     P$,,AUTO

      621    12565    3                END;                       /* Do while */

  12565  5 002373   200021 116100                    CMPQ    Q$,,AUTO
         5 002374   002020 602000 5                  TNC     s:12455
         5 002375   002020 600000 5                  TZE     s:12455

      622    12566                  %M_WRITE( CLEAR=" ", ZERO=" " );

  12568  5 002376   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 002377   440001 713400                    CLIMB   alt,write
         5 002400   401400 401760                    pmme    nvectors=4
         5 002401   005150 702000 5                  TSX2    MAP_IO_ERROR

      623    12575
      624    12576        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:148  
      625    12577    3             DO WHILE( '0'B );

  12577  5 002402   003015 710000 5                  TRA     s:12731

  12568  5 002403                       PRINT_SEG_S* null
      626    12578    3   PRINT_SEG_SECTIONS: ;
      627    12579        /*
      628    12580                                           Print data segment control sections by value
      629    12581        */
      630    12582                      %M_WRITE( CLEAR=" ", ZERO=" " );

  12584  5 002403   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 002404   440001 713400                    CLIMB   alt,write
         5 002405   401400 401760                    pmme    nvectors=4
         5 002406   005150 702000 5                  TSX2    MAP_IO_ERROR

      631    12591    3                 SEGMENT = 0;

  12591  5 002407   200054 450100                    STZ     SEGMENT,,AUTO

      632    12592                      %WR_LIT( MES1=SEG_CSSBY );

  12593  5 002410   000066 237000 6                  LDAQ    54
         5 002411   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12594  5 002412   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 002413   440001 713400                    CLIMB   alt,write
         5 002414   401400 401760                    pmme    nvectors=4
         5 002415   005150 702000 5                  TSX2    MAP_IO_ERROR

      633    12602    4                 DO WHILE( P$ <= Q$ );

  12602  5 002416   200021 236100                    LDQ     Q$,,AUTO
         5 002417   200020 116100                    CMPQ    P$,,AUTO
         5 002420   003011 602000 5                  TNC     s:12721

      634    12603    4                     S$ = PINCRW( P$, SIZEW(VX$SC) );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:149  

  12603  5 002421   200020 236100                    LDQ     P$,,AUTO
         5 002422   000003 036003                    ADLQ    3,DU
         5 002423   200014 756100                    STQ     S$,,AUTO

      635    12604    4                     IF P$ -> VX$SC.SIZE <= 0 THEN GOTO EMPTY_SEG_SC;

  12604  5 002424   200020 470500                    LDP0    P$,,AUTO
         5 002425   000001 720100                    LXL0    1,,PR0
         5 002426   003004 600000 5                  TZE     EMPTY_SEG_SC

      636    12605    5                     IF S$ <= Q$ THEN DO;

  12605  5 002427   200021 116100                    CMPQ    Q$,,AUTO
         5 002430   002432 600000 5                  TZE     s:12606
         5 002431   002453 603000 5                  TRC     LAST_SEG_SC

      637    12606    6                         DO WHILE( S$ -> VX$SC.ADDRESS = P$ -> VX$SC.ADDRESS

  12606  5 002432   002441 710000 5                  TRA     s:12610

      638    12607    6                                 AND S$ -> VX$SC.SEG = P$ -> VX$SC.SEG );
      639    12608    6                             S$ = PINCRW( S$, SIZEW(VX$SC) );

  12608  5 002433   200014 236100                    LDQ     S$,,AUTO
         5 002434   000003 036003                    ADLQ    3,DU
         5 002435   200014 756100                    STQ     S$,,AUTO

      640    12609    6                             IF S$ > Q$ THEN GOTO LAST_SEG_SC;

  12609  5 002436   200021 116100                    CMPQ    Q$,,AUTO
         5 002437   002441 600000 5                  TZE     s:12610
         5 002440   002453 603000 5                  TRC     LAST_SEG_SC

      641    12610    6                            END;

  12610  5 002441   200020 470500                    LDP0    P$,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:150  
         5 002442   200014 471500                    LDP1    S$,,AUTO
         5 002443   100000 236100                    LDQ     0,,PR1
         5 002444   000000 676100                    ERQ     0,,PR0
         5 002445   777777 376007                    ANQ     -1,DL
         5 002446   002453 601000 5                  TNZ     LAST_SEG_SC
         5 002447   100000 236100                    LDQ     0,,PR1
         5 002450   000000 676100                    ERQ     0,,PR0
         5 002451   700000 376003                    ANQ     -32768,DU
         5 002452   002433 600000 5                  TZE     s:12608

      642    12611    5                        END;

      643    12612    4   LAST_SEG_SC:
      644    12613    5                     IF P$ -> VX$SC.SEG ~= SEGMENT THEN DO;

  12613  5 002453   200020 470500       LAST_SEG_SC  LDP0    P$,,AUTO
         5 002454   000000 236100                    LDQ     0,,PR0
         5 002455   000041 772000                    QRL     33
         5 002456   200054 116100                    CMPQ    SEGMENT,,AUTO
         5 002457   002465 600000 5                  TZE     s:12625

      645    12614    5                         SEGMENT = P$ -> VX$SC.SEG;

  12614  5 002460   200054 756100                    STQ     SEGMENT,,AUTO

      646    12615                              %M_WRITE( CLEAR=" ", ZERO=" " );

  12617  5 002461   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 002462   440001 713400                    CLIMB   alt,write
         5 002463   401400 401760                    pmme    nvectors=4
         5 002464   005150 702000 5                  TSX2    MAP_IO_ERROR

      647    12624    5                        END;

      648    12625    4                     P$ -> VX$SC.NODE# = VX_SEGID (SEGMENT);

  12625  5 002465   200054 720100                    LXL0    SEGMENT,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:151  
         5 002466   000000 721010 xsym               LXL1    VX_SEGID,X0
         5 002467   200020 470500                    LDP0    P$,,AUTO
         5 002470   000002 741100                    STX1    2,,PR0

      649    12626                          %M_NUMBER(
      650    12627                          VAR="R$=ADDR(P$ -> VX$SC.ADDRESS );",
      651    12628                          START=@M_SC_START_ADR-6,
      652    12629                          FLD_SIZE=6 );

  12630  5 002471   200020 236100                    LDQ     P$,,AUTO
         5 002472   400000 036007                    ADLQ    -131072,DL
         5 002473   200022 756100                    STQ     R$,,AUTO

  12631  5 002474   000074 450000 3                  STZ     SIG

  12632  5 002475   200062 450100                    STZ     K_INDEX,,AUTO
         5 002476   002555 710000 5                  TRA     s:12644+3

  12633  5 002477   200062 235100                    LDA     K_INDEX,,AUTO
         5 002500   000006 035007                    ADLA    6,DL
         5 002501   200063 755100                    STA     L_INDEX,,AUTO

  12634  5 002502   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002503   000003 402007                    MPY     3,DL
         5 002504   200022 470500                    LDP0    R$,,AUTO
         5 002505   003100 061506                    CSR     bolr='003'O
         5 002506   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 002507   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 002510   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 002511   000033 736000                    QLS     27
         5 002512   000073 676000 3                  ERQ     WORK_BUF
         5 002513   007000 376003                    ANQ     3584,DU
         5 002514   000073 656000 3                  ERSQ    WORK_BUF

  12635  5 002515   000073 236000 3                  LDQ     WORK_BUF
         5 002516   007000 316003                    CANQ    3584,DU
         5 002517   002544 601000 5                  TNZ     s:12641
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:152  

  12636  5 002520   000074 234000 3                  SZN     SIG
         5 002521   002527 605000 5                  TPL     s:12637

  12636  5 002522   200063 235100                    LDA     L_INDEX,,AUTO
         5 002523   040005 100400                    MLR     fill='040'O
         5 002524   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002525   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002526   002552 710000 5                  TRA     s:12644

  12637  5 002527   200062 235100                    LDA     K_INDEX,,AUTO
         5 002530   000005 115007                    CMPA    5,DL
         5 002531   002537 601000 5                  TNZ     s:12638

  12637  5 002532   200063 235100                    LDA     L_INDEX,,AUTO
         5 002533   040005 100400                    MLR     fill='040'O
         5 002534   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002535   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002536   002552 710000 5                  TRA     s:12644

  12638  5 002537   200063 235100                    LDA     L_INDEX,,AUTO
         5 002540   040005 100400                    MLR     fill='040'O
         5 002541   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 002542   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12639  5 002543   002552 710000 5                  TRA     s:12644

  12641  5 002544   400000 236003                    LDQ     -131072,DU
         5 002545   000074 756000 3                  STQ     SIG

  12642  5 002546   200063 235100                    LDA     L_INDEX,,AUTO
         5 002547   040005 100400                    MLR     fill='040'O
         5 002550   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 002551   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12644  5 002552   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002553   000001 036007                    ADLQ    1,DL
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:153  
         5 002554   200062 756100                    STQ     K_INDEX,,AUTO
         5 002555   200062 235100                    LDA     K_INDEX,,AUTO
         5 002556   000006 115007                    CMPA    6,DL
         5 002557   002477 602000 5                  TNC     s:12633

      653    12646                          %M_NUMBER(
      654    12647                          VAR="R$=ADDR(P$ -> VX$SC.NODE#);",
      655    12648                          START=@M_SC_START_ADR,
      656    12649                          FLD_SIZE = 6 );

  12650  5 002560   200020 236100                    LDQ     P$,,AUTO
         5 002561   000002 036003                    ADLQ    2,DU
         5 002562   200022 756100                    STQ     R$,,AUTO

  12651  5 002563   000074 450000 3                  STZ     SIG

  12652  5 002564   200062 450100                    STZ     K_INDEX,,AUTO
         5 002565   002644 710000 5                  TRA     s:12664+3

  12653  5 002566   200062 235100                    LDA     K_INDEX,,AUTO
         5 002567   000014 035007                    ADLA    12,DL
         5 002570   200063 755100                    STA     L_INDEX,,AUTO

  12654  5 002571   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002572   000003 402007                    MPY     3,DL
         5 002573   200022 470500                    LDP0    R$,,AUTO
         5 002574   003100 061506                    CSR     bolr='003'O
         5 002575   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 002576   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 002577   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 002600   000033 736000                    QLS     27
         5 002601   000073 676000 3                  ERQ     WORK_BUF
         5 002602   007000 376003                    ANQ     3584,DU
         5 002603   000073 656000 3                  ERSQ    WORK_BUF

  12655  5 002604   000073 236000 3                  LDQ     WORK_BUF
         5 002605   007000 316003                    CANQ    3584,DU
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:154  
         5 002606   002633 601000 5                  TNZ     s:12661

  12656  5 002607   000074 234000 3                  SZN     SIG
         5 002610   002616 605000 5                  TPL     s:12657

  12656  5 002611   200063 235100                    LDA     L_INDEX,,AUTO
         5 002612   040005 100400                    MLR     fill='040'O
         5 002613   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002614   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002615   002641 710000 5                  TRA     s:12664

  12657  5 002616   200062 235100                    LDA     K_INDEX,,AUTO
         5 002617   000005 115007                    CMPA    5,DL
         5 002620   002626 601000 5                  TNZ     s:12658

  12657  5 002621   200063 235100                    LDA     L_INDEX,,AUTO
         5 002622   040005 100400                    MLR     fill='040'O
         5 002623   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002624   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002625   002641 710000 5                  TRA     s:12664

  12658  5 002626   200063 235100                    LDA     L_INDEX,,AUTO
         5 002627   040005 100400                    MLR     fill='040'O
         5 002630   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 002631   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12659  5 002632   002641 710000 5                  TRA     s:12664

  12661  5 002633   400000 236003                    LDQ     -131072,DU
         5 002634   000074 756000 3                  STQ     SIG

  12662  5 002635   200063 235100                    LDA     L_INDEX,,AUTO
         5 002636   040005 100400                    MLR     fill='040'O
         5 002637   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 002640   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12664  5 002641   200062 236100                    LDQ     K_INDEX,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:155  
         5 002642   000001 036007                    ADLQ    1,DL
         5 002643   200062 756100                    STQ     K_INDEX,,AUTO
         5 002644   200062 235100                    LDA     K_INDEX,,AUTO
         5 002645   000006 115007                    CMPA    6,DL
         5 002646   002566 602000 5                  TNC     s:12653

      657    12666
      658    12667    4                     CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7,

  12667  5 002647   200020 470500                    LDP0    P$,,AUTO
         5 002650   000000 236100                    LDQ     0,,PR0
         5 002651   000033 772000                    QRL     27
         5 002652   000077 376007                    ANQ     63,DL
         5 002653   000003 736000                    QLS     3
         5 002654   040000 100406                    MLR     fill='040'O
         5 002655   000212 000010 2                  ADSC9   SC_TYPE,Q                cn=0,n=8
         5 002656   000004 600010 xsym               ADSC9   VX_MBUF+4                cn=3,n=8

      659    12668    4                             LENGTHC( SC_TYPE(0) ),  SC_TYPE( P$ -> VX$SC.TYPE ) );
      660    12669    5                     IF P$ -> VX$SC.NAME_DISP >= 0 THEN DO;

  12669  5 002657   000001 220100                    LDX0    1,,PR0
         5 002660   002702 604000 5                  TMI     s:12683

      661    12670                              %MOVE_NAME(
      662    12671                              REF1="VX$SC.NAME_DISP",
      663    12672                              TABBER="@M_SC_START_ADR+8+LENGTHC(SC_TYPE(0))" );

  12673  5 002661   000000 636010                    EAQ     0,X0
         5 002662   200010 036100                    ADLQ    NAME$,,AUTO
         5 002663   200060 756100                    STQ     SOURCE$,,AUTO

  12674  5 002664   200060 471500                    LDP1    SOURCE$,,AUTO
         5 002665   100000 221100                    LDX1    0,,PR1
         5 002666   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 002667   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 002670   040040 100540                    MLR     fill='040'O
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:156  
         5 002671   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 002672   000007 000011 xsym               ADSC9   VX_MBUF+7                cn=0,n=*X1

      664    12676    5                         IF SOURCE$->B$DNAME.COUNT > 31 THEN

  12676  5 002673   100000 220100                    LDX0    0,,PR1
         5 002674   000040 100003                    CMPX0   32,DU
         5 002675   002705 602000 5                  TNC     s:12691

      665    12677    5                             CALL INSERT ( VX_MBUF.CHARS,

  12677  5 002676   040000 100400                    MLR     fill='040'O
         5 002677   000715 000003 2                  ADSC9   DIAG_TABS+6              cn=0,n=3
         5 002700   000016 600111 xsym               ADSC9   VX_MBUF+14               cn=3,n=73

      666    12678    5                                     12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0))+31,
      667    12679    5                                         /* Len */,
      668    12680    5                                     '...' ) ;
      669    12681    5                        END;

  12681  5 002701   002705 710000 5                  TRA     s:12691

      670    12682    5                     ELSE DO;

      671    12683    5                         CALL INSERT( VX_MBUF.CHARS,

  12683  5 002702   040000 100400                    MLR     fill='040'O
         5 002703   000236 000011 2                  ADSC9   UNNAMED                  cn=0,n=9
         5 002704   000007 000011 xsym               ADSC9   VX_MBUF+7                cn=0,n=9

      672    12684    5                                 12/*@M_SC_START_ADR*/+8+LENGTHC(SC_TYPE(0)),
      673    12685    5                                 LENGTHC( UNNAMED ),   UNNAMED            );
      674    12686    5                        END;

      675    12687                          %M_NUMBER(
      676    12688                          VAR="R$=ADDR(P$ -> VX$SC.SIZE);",
      677    12689                          START=59,
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:157  
      678    12690                          FLD_SIZE=6 );

  12691  5 002705   200020 236100                    LDQ     P$,,AUTO
         5 002706   000064 036000 6                  ADLQ    52
         5 002707   200022 756100                    STQ     R$,,AUTO

  12692  5 002710   000074 450000 3                  STZ     SIG

  12693  5 002711   200062 450100                    STZ     K_INDEX,,AUTO
         5 002712   002771 710000 5                  TRA     s:12705+3

  12694  5 002713   200062 235100                    LDA     K_INDEX,,AUTO
         5 002714   000073 035007                    ADLA    59,DL
         5 002715   200063 755100                    STA     L_INDEX,,AUTO

  12695  5 002716   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002717   000003 402007                    MPY     3,DL
         5 002720   200022 470500                    LDP0    R$,,AUTO
         5 002721   003100 061506                    CSR     bolr='003'O
         5 002722   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 002723   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 002724   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 002725   000033 736000                    QLS     27
         5 002726   000073 676000 3                  ERQ     WORK_BUF
         5 002727   007000 376003                    ANQ     3584,DU
         5 002730   000073 656000 3                  ERSQ    WORK_BUF

  12696  5 002731   000073 236000 3                  LDQ     WORK_BUF
         5 002732   007000 316003                    CANQ    3584,DU
         5 002733   002760 601000 5                  TNZ     s:12702

  12697  5 002734   000074 234000 3                  SZN     SIG
         5 002735   002743 605000 5                  TPL     s:12698

  12697  5 002736   200063 235100                    LDA     L_INDEX,,AUTO
         5 002737   040005 100400                    MLR     fill='040'O
         5 002740   000061 000001 6                  ADSC9   49                       cn=0,n=1
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:158  
         5 002741   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002742   002766 710000 5                  TRA     s:12705

  12698  5 002743   200062 235100                    LDA     K_INDEX,,AUTO
         5 002744   000005 115007                    CMPA    5,DL
         5 002745   002753 601000 5                  TNZ     s:12699

  12698  5 002746   200063 235100                    LDA     L_INDEX,,AUTO
         5 002747   040005 100400                    MLR     fill='040'O
         5 002750   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 002751   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 002752   002766 710000 5                  TRA     s:12705

  12699  5 002753   200063 235100                    LDA     L_INDEX,,AUTO
         5 002754   040005 100400                    MLR     fill='040'O
         5 002755   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 002756   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12700  5 002757   002766 710000 5                  TRA     s:12705

  12702  5 002760   400000 236003                    LDQ     -131072,DU
         5 002761   000074 756000 3                  STQ     SIG

  12703  5 002762   200063 235100                    LDA     L_INDEX,,AUTO
         5 002763   040005 100400                    MLR     fill='040'O
         5 002764   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 002765   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12705  5 002766   200062 236100                    LDQ     K_INDEX,,AUTO
         5 002767   000001 036007                    ADLQ    1,DL
         5 002770   200062 756100                    STQ     K_INDEX,,AUTO
         5 002771   200062 235100                    LDA     K_INDEX,,AUTO
         5 002772   000006 115007                    CMPA    6,DL
         5 002773   002713 602000 5                  TNC     s:12694

      679    12707                          %M_WRITE;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:159  
  12709  5 002774   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 002775   440001 713400                    CLIMB   alt,write
         5 002776   401400 401760                    pmme    nvectors=4
         5 002777   005150 702000 5                  TSX2    MAP_IO_ERROR

  12713  5 003000   040000 100400                    MLR     fill='040'O
         5 003001   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 003002   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12714  5 003003   000000 450000 xsym               STZ     VX_CTAB

      680    12716    4   EMPTY_SEG_SC:
      681    12717    4                     P$ = S$;

  12717  5 003004   200014 236100       EMPTY_SEG_SC LDQ     S$,,AUTO
         5 003005   200020 756100                    STQ     P$,,AUTO

      682    12718    4                    END;                   /* Do while */

  12718  5 003006   200021 116100                    CMPQ    Q$,,AUTO
         5 003007   002421 602000 5                  TNC     s:12603
         5 003010   002421 600000 5                  TZE     s:12603

      683    12719                      %M_WRITE( CLEAR=" ", ZERO=" " );

  12721  5 003011   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 003012   440001 713400                    CLIMB   alt,write
         5 003013   401400 401760                    pmme    nvectors=4
         5 003014   005150 702000 5                  TSX2    MAP_IO_ERROR

      684    12728    3                END;                       /* Do forever */

      685    12729
      686    12730        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:160  
      687    12731    3             IF DCB_HEAD$ ~= ADDR(NIL) AND VX_MAP_NUM = 0 THEN DO;

  12731  5 003015   200015 236100                    LDQ     DCB_HEAD$,,AUTO
         5 003016   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 003017   003333 600000 5                  TZE     s:12841
         5 003020   000000 235000 xsym               LDA     VX_MAP_NUM
         5 003021   003333 601000 5                  TNZ     s:12841

      688    12732                      %WR_LIT( MES1=DCB_TEXT );

  12733  5 003022   000070 237000 6                  LDAQ    56
         5 003023   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12734  5 003024   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 003025   440001 713400                    CLIMB   alt,write
         5 003026   401400 401760                    pmme    nvectors=4
         5 003027   005150 702000 5                  TSX2    MAP_IO_ERROR

      689    12742    3                 P$ = VX_MAP$ -> VX$NODE.L_START.SC$;

  12742  5 003030   000000 470400 xsym               LDP0    VX_MAP$
         5 003031   000033 236100                    LDQ     27,,PR0
         5 003032   200020 756100                    STQ     P$,,AUTO

      690    12743    4                 DO WHILE( '1'B );

      691    12744                          %MOVE_NAME(
      692    12745                          REF1="VX$SC.NAME_DISP",
      693    12746                          PTR$="DCB_HEAD$ ->",
      694    12747                          TABBER="@M_SC_START_ADR+8+LENGTHC(SC_TYPE(0))");

  12748  5 003033   200015 470500                    LDP0    DCB_HEAD$,,AUTO
         5 003034   000001 220100                    LDX0    1,,PR0
         5 003035   000000 636010                    EAQ     0,X0
         5 003036   200010 036100                    ADLQ    NAME$,,AUTO
         5 003037   200060 756100                    STQ     SOURCE$,,AUTO

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:161  
  12749  5 003040   200060 471500                    LDP1    SOURCE$,,AUTO
         5 003041   100000 221100                    LDX1    0,,PR1
         5 003042   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 003043   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 003044   040040 100540                    MLR     fill='040'O
         5 003045   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 003046   000007 000011 xsym               ADSC9   VX_MBUF+7                cn=0,n=*X1

      695    12751    4                     MOVE_SIZE = LENGTHC( SC_TYPE(0) );

  12751  5 003047   000010 235007                    LDA     8,DL
         5 003050   200057 755100                    STA     MOVE_SIZE,,AUTO

      696    12752    5                     IF DCB_HEAD$ -> VX$SC.ATTR.PRE_DCB THEN DO;

  12752  5 003051   000000 236100                    LDQ     0,,PR0
         5 003052   000010 316003                    CANQ    8,DU
         5 003053   003061 600000 5                  TZE     s:12761

      697    12753    5                         CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7,

  12753  5 003054   000000 620005                    EAX0    0,AL
         5 003055   040040 100400                    MLR     fill='040'O
         5 003056   000716 000007 2                  ADSC9   DIAG_TABS+7              cn=0,n=7
         5 003057   000004 600010 xsym               ADSC9   VX_MBUF+4                cn=3,n=*X0

      698    12754    5                                 MOVE_SIZE, 'PRE-DCB' );
      699    12755    5                        END;

  12755  5 003060   003243 710000 5                  TRA     s:12802

      700    12756    5                     ELSE DO;

      701    12757                              %M_NUMBER(
      702    12758                              VAR="R$=ADDR(DCB_HEAD$->VX$SC.ADDRESS);",
      703    12759                              START=@M_SC_START_ADR,
      704    12760                              FLD_SIZE=6);
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:162  

  12761  5 003061   200015 236100                    LDQ     DCB_HEAD$,,AUTO
         5 003062   400000 036007                    ADLQ    -131072,DL
         5 003063   200022 756100                    STQ     R$,,AUTO

  12762  5 003064   000074 450000 3                  STZ     SIG

  12763  5 003065   200062 450100                    STZ     K_INDEX,,AUTO
         5 003066   003145 710000 5                  TRA     s:12775+3

  12764  5 003067   200062 235100                    LDA     K_INDEX,,AUTO
         5 003070   000014 035007                    ADLA    12,DL
         5 003071   200063 755100                    STA     L_INDEX,,AUTO

  12765  5 003072   200062 236100                    LDQ     K_INDEX,,AUTO
         5 003073   000003 402007                    MPY     3,DL
         5 003074   200022 470500                    LDP0    R$,,AUTO
         5 003075   003100 061506                    CSR     bolr='003'O
         5 003076   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 003077   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 003100   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 003101   000033 736000                    QLS     27
         5 003102   000073 676000 3                  ERQ     WORK_BUF
         5 003103   007000 376003                    ANQ     3584,DU
         5 003104   000073 656000 3                  ERSQ    WORK_BUF

  12766  5 003105   000073 236000 3                  LDQ     WORK_BUF
         5 003106   007000 316003                    CANQ    3584,DU
         5 003107   003134 601000 5                  TNZ     s:12772

  12767  5 003110   000074 234000 3                  SZN     SIG
         5 003111   003117 605000 5                  TPL     s:12768

  12767  5 003112   200063 235100                    LDA     L_INDEX,,AUTO
         5 003113   040005 100400                    MLR     fill='040'O
         5 003114   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 003115   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:163  
         5 003116   003142 710000 5                  TRA     s:12775

  12768  5 003117   200062 235100                    LDA     K_INDEX,,AUTO
         5 003120   000005 115007                    CMPA    5,DL
         5 003121   003127 601000 5                  TNZ     s:12769

  12768  5 003122   200063 235100                    LDA     L_INDEX,,AUTO
         5 003123   040005 100400                    MLR     fill='040'O
         5 003124   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 003125   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 003126   003142 710000 5                  TRA     s:12775

  12769  5 003127   200063 235100                    LDA     L_INDEX,,AUTO
         5 003130   040005 100400                    MLR     fill='040'O
         5 003131   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 003132   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12770  5 003133   003142 710000 5                  TRA     s:12775

  12772  5 003134   400000 236003                    LDQ     -131072,DU
         5 003135   000074 756000 3                  STQ     SIG

  12773  5 003136   200063 235100                    LDA     L_INDEX,,AUTO
         5 003137   040005 100400                    MLR     fill='040'O
         5 003140   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 003141   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12775  5 003142   200062 236100                    LDQ     K_INDEX,,AUTO
         5 003143   000001 036007                    ADLQ    1,DL
         5 003144   200062 756100                    STQ     K_INDEX,,AUTO
         5 003145   200062 235100                    LDA     K_INDEX,,AUTO
         5 003146   000006 115007                    CMPA    6,DL
         5 003147   003067 602000 5                  TNC     s:12764

      705    12777    5                        CALL INSERT( VX_MBUF.CHARS, 12/*@M_SC_START_ADR*/+7, MOVE_SIZE
             12777                                  ,

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:164  
  12777  5 003150   200057 720100                    LXL0    MOVE_SIZE,,AUTO
         5 003151   040040 100400                    MLR     fill='040'O
         5 003152   000224 000010 2                  ADSC9   SC_TYPE+10               cn=0,n=8
         5 003153   000004 600010 xsym               ADSC9   VX_MBUF+4                cn=3,n=*X0

      706    12778    5                                 SC_TYPE( 5 ) );
      707    12779                              %M_NUMBER(
      708    12780                              VAR="R$=ADDR(DCB_HEAD$->VX$SC.SIZE);",
      709    12781                              START=50,
      710    12782                              FLD_SIZE=6);

  12783  5 003154   200015 236100                    LDQ     DCB_HEAD$,,AUTO
         5 003155   000064 036000 6                  ADLQ    52
         5 003156   200022 756100                    STQ     R$,,AUTO

  12784  5 003157   000074 450000 3                  STZ     SIG

  12785  5 003160   200062 450100                    STZ     K_INDEX,,AUTO
         5 003161   003240 710000 5                  TRA     s:12797+3

  12786  5 003162   200062 235100                    LDA     K_INDEX,,AUTO
         5 003163   000062 035007                    ADLA    50,DL
         5 003164   200063 755100                    STA     L_INDEX,,AUTO

  12787  5 003165   200062 236100                    LDQ     K_INDEX,,AUTO
         5 003166   000003 402007                    MPY     3,DL
         5 003167   200022 470500                    LDP0    R$,,AUTO
         5 003170   003100 061506                    CSR     bolr='003'O
         5 003171   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 003172   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 003173   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 003174   000033 736000                    QLS     27
         5 003175   000073 676000 3                  ERQ     WORK_BUF
         5 003176   007000 376003                    ANQ     3584,DU
         5 003177   000073 656000 3                  ERSQ    WORK_BUF

  12788  5 003200   000073 236000 3                  LDQ     WORK_BUF
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:165  
         5 003201   007000 316003                    CANQ    3584,DU
         5 003202   003227 601000 5                  TNZ     s:12794

  12789  5 003203   000074 234000 3                  SZN     SIG
         5 003204   003212 605000 5                  TPL     s:12790

  12789  5 003205   200063 235100                    LDA     L_INDEX,,AUTO
         5 003206   040005 100400                    MLR     fill='040'O
         5 003207   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 003210   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 003211   003235 710000 5                  TRA     s:12797

  12790  5 003212   200062 235100                    LDA     K_INDEX,,AUTO
         5 003213   000005 115007                    CMPA    5,DL
         5 003214   003222 601000 5                  TNZ     s:12791

  12790  5 003215   200063 235100                    LDA     L_INDEX,,AUTO
         5 003216   040005 100400                    MLR     fill='040'O
         5 003217   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 003220   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 003221   003235 710000 5                  TRA     s:12797

  12791  5 003222   200063 235100                    LDA     L_INDEX,,AUTO
         5 003223   040005 100400                    MLR     fill='040'O
         5 003224   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 003225   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  12792  5 003226   003235 710000 5                  TRA     s:12797

  12794  5 003227   400000 236003                    LDQ     -131072,DU
         5 003230   000074 756000 3                  STQ     SIG

  12795  5 003231   200063 235100                    LDA     L_INDEX,,AUTO
         5 003232   040005 100400                    MLR     fill='040'O
         5 003233   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 003234   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:166  
  12797  5 003235   200062 236100                    LDQ     K_INDEX,,AUTO
         5 003236   000001 036007                    ADLQ    1,DL
         5 003237   200062 756100                    STQ     K_INDEX,,AUTO
         5 003240   200062 235100                    LDA     K_INDEX,,AUTO
         5 003241   000006 115007                    CMPA    6,DL
         5 003242   003162 602000 5                  TNC     s:12786

      711    12799    5                        END;               /* Else do; */

      712    12800                          %M_WRITE(ZERO=" ");

  12802  5 003243   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 003244   440001 713400                    CLIMB   alt,write
         5 003245   401400 401760                    pmme    nvectors=4
         5 003246   005150 702000 5                  TSX2    MAP_IO_ERROR

  12806  5 003247   040000 100400                    MLR     fill='040'O
         5 003250   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 003251   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

      713    12809        /**/
      714    12810        /**/
      715    12811    4                     S$ = DCB_HEAD$;

  12811  5 003252   200015 236100                    LDQ     DCB_HEAD$,,AUTO
         5 003253   200014 756100                    STQ     S$,,AUTO

      716    12812    4                     R$ = PINCRW( NAME$, DCB_HEAD$ -> VX$SC.NAME_DISP );

  12812  5 003254   200015 470500                    LDP0    DCB_HEAD$,,AUTO
         5 003255   000001 220100                    LDX0    1,,PR0
         5 003256   000000 636010                    EAQ     0,X0
         5 003257   200010 036100                    ADLQ    NAME$,,AUTO
         5 003260   200022 756100                    STQ     R$,,AUTO

      717    12813    5                     DO WHILE(

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:167  
  12813  5 003261   200014 471500                    LDP1    S$,,AUTO
         5 003262   100001 221100                    LDX1    1,,PR1
         5 003263   200010 473500                    LDP3    NAME$,,AUTO
         5 003264   300000 222111                    LDX2    0,X1,PR3
         5 003265   200022 474500                    LDP4    R$,,AUTO
         5 003266   400000 223100                    LDX3    0,,PR4
         5 003267   000000 635011                    EAA     0,X1
         5 003270   000020 731000                    ARS     16
         5 003271   040140 106545                    CMPC    fill='040'O
         5 003272   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 003273   400000 400013                    ADSC9   0,,PR4                   cn=2,n=*X3
         5 003274   003321 601000 5                  TNZ     s:12823

      718    12814    5                             PINCRW( NAME$, S$ -> VX$SC.NAME_DISP ) -> B$DNAME.TEXT
      719    12815    5                             =
      720    12816    5                             R$ -> B$DNAME.TEXT );
      721    12817        /**/
      722    12818    5                         Q$ = PINCRW( P$, S$ -> VX$SC.COM_LINK );

  12818  5 003275   200014 470500                    LDP0    S$,,AUTO
         5 003276   000002 720100                    LXL0    2,,PR0
         5 003277   000000 636010                    EAQ     0,X0
         5 003300   200020 036100                    ADLQ    P$,,AUTO
         5 003301   200021 756100                    STQ     Q$,,AUTO

      723    12819    5                         IF Q$ = S$ THEN GOTO DONE_DCB;

  12819  5 003302   200014 116100                    CMPQ    S$,,AUTO
         5 003303   003324 600000 5                  TZE     DONE_DCB

      724    12820    5                         S$ = Q$;

  12820  5 003304   200014 756100                    STQ     S$,,AUTO

      725    12821    5                        END;               /* Do while */

  12821  5 003305   200014 470500                    LDP0    S$,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:168  
         5 003306   000001 220100                    LDX0    1,,PR0
         5 003307   200010 471500                    LDP1    NAME$,,AUTO
         5 003310   100000 221110                    LDX1    0,X0,PR1
         5 003311   200022 473500                    LDP3    R$,,AUTO
         5 003312   300000 222100                    LDX2    0,,PR3
         5 003313   000000 635010                    EAA     0,X0
         5 003314   000020 731000                    ARS     16
         5 003315   040140 106545                    CMPC    fill='040'O
         5 003316   100000 400011                    ADSC9   0,A,PR1                  cn=2,n=*X1
         5 003317   300000 400012                    ADSC9   0,,PR3                   cn=2,n=*X2
         5 003320   003275 600000 5                  TZE     s:12818

      726    12822        /**/
      727    12823    4                     DCB_HEAD$ = S$;

  12823  5 003321   200014 236100                    LDQ     S$,,AUTO
         5 003322   200015 756100                    STQ     DCB_HEAD$,,AUTO

      728    12824    4                    END;                   /* Do forever */

  12824  5 003323   003033 710000 5                  TRA     s:12748

      729    12825    3   DONE_DCB:
      730    12826                      %M_WRITE(ZERO=" ");

  12828  5 003324   000000 630400 xsym  DONE_DCB     EPPR0   VX_MAP_LO_FPT_WRITE
         5 003325   440001 713400                    CLIMB   alt,write
         5 003326   401400 401760                    pmme    nvectors=4
         5 003327   005150 702000 5                  TSX2    MAP_IO_ERROR

  12832  5 003330   040000 100400                    MLR     fill='040'O
         5 003331   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 003332   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

      731    12835    3                END;                       /* If DCB_HEAD$ ~= addr(nil) ... */

      732    12836    2            END;                           /* If P$ ~= addr(nil) ... */
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:169  

      733    12837        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:170  
      734    12838        /*
      735    12839                        Constant defined symbols
      736    12840        */
      737    12841    2         DO I = 1 TO 2;

  12841  5 003333   000001 235007                    LDA     1,DL
         5 003334   200024 755100                    STA     I,,AUTO

      738    12842    3             IF I = 1 THEN DO;

  12842  5 003335   200024 235100                    LDA     I,,AUTO
         5 003336   000001 115007                    CMPA    1,DL
         5 003337   003346 601000 5                  TNZ     s:12847

      739    12843    3                 P$ = VX_MAP$ -> VX$NODE.L_START.DD$;

  12843  5 003340   000000 470400 xsym               LDP0    VX_MAP$
         5 003341   000036 236100                    LDQ     30,,PR0
         5 003342   200020 756100                    STQ     P$,,AUTO

      740    12844    3                 Q$ = VX_MAP$ -> VX$NODE.L_STOP.DD$;

  12844  5 003343   000050 236100                    LDQ     40,,PR0
         5 003344   200021 756100                    STQ     Q$,,AUTO

      741    12845    3                END;

  12845  5 003345   003353 710000 5                  TRA     s:12850

      742    12846    3             ELSE DO;

      743    12847    3                 P$ = VX_MAP$ -> VX$NODE.L_START.SD$;

  12847  5 003346   000000 470400 xsym               LDP0    VX_MAP$
         5 003347   000040 236100                    LDQ     32,,PR0
         5 003350   200020 756100                    STQ     P$,,AUTO

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:171  
      744    12848    3                 Q$ = VX_MAP$ -> VX$NODE.L_STOP.SD$;

  12848  5 003351   000052 236100                    LDQ     42,,PR0
         5 003352   200021 756100                    STQ     Q$,,AUTO

      745    12849    3                END;

      746    12850    3             IF P$ ~= ADDR(NIL) THEN DO;

  12850  5 003353   200020 236100                    LDQ     P$,,AUTO
         5 003354   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 003355   003601 600000 5                  TZE     s:12949

      747    12851    3                 IF VX_RU_HEAD_BUF.MAP_BITS_A.CON(I)

  12851  5 003356   000002 735000                    ALS     2
         5 003357   000000 066405                    CMPB    filb='0'B
         5 003360   000011 210001 xsym               BDSC    VX_RU_HEAD_BUF+9,A       by=1,bit=1,n=1
         5 003361   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         5 003362   003601 600000 5                  TZE     s:12949

      748    12852    4                 THEN DO;

      749    12853    4                     NOT_WROTE = '1'B/*@TRUE_B*/;

  12853  5 003363   400000 236003                    LDQ     -131072,DU
         5 003364   200005 756100                    STQ     NOT_WROTE,,AUTO

      750    12854    5                     DO WHILE ( P$ <= Q$ );

  12854  5 003365   200021 236100                    LDQ     Q$,,AUTO
         5 003366   200020 116100                    CMPQ    P$,,AUTO
         5 003367   003542 602000 5                  TNC     s:12910

      751    12855    5                         S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );

  12855  5 003370   200020 236100                    LDQ     P$,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:172  
         5 003371   000002 036003                    ADLQ    2,DU
         5 003372   200014 756100                    STQ     S$,,AUTO

      752    12856    5                         IF NOT P$ -> VXD$TMPLT.CONSTNT THEN GOTO SKIP_IT_CON;

  12856  5 003373   200020 470500                    LDP0    P$,,AUTO
         5 003374   000001 236100                    LDQ     1,,PR0
         5 003375   400000 316007                    CANQ    -131072,DL
         5 003376   003535 600000 5                  TZE     SKIP_IT_CON

      753    12857    5                         SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );

  12857  5 003377   000001 220100                    LDX0    1,,PR0
         5 003400   000000 636010                    EAQ     0,X0
         5 003401   200011 036100                    ADLQ    DNAME$,,AUTO
         5 003402   200013 756100                    STQ     SNAME$,,AUTO

      754    12858    5                         SIZE = SNAME$ -> B$DNAME.COUNT;

  12858  5 003403   200013 471500                    LDP1    SNAME$,,AUTO
         5 003404   100000 236100                    LDQ     0,,PR1
         5 003405   000022 772000                    QRL     18
         5 003406   200033 756100                    STQ     SIZE,,AUTO

      755    12859    5                         IF VX_CTAB > VX_MAX_CTAB

  12859  5 003407   000000 236000 xsym               LDQ     VX_MAX_CTAB
         5 003410   000000 116000 xsym               CMPQ    VX_CTAB
         5 003411   003420 602000 5                  TNC     s:12862
         5 003412   000000 720000 xsym               LXL0    VX_CTAB
         5 003413   200033 236100                    LDQ     SIZE,,AUTO
         5 003414   000000 036010 xsym               ADLQ    VX_MAP_TABS_A,X0
         5 003415   000000 116000 xsym               CMPQ    VX_MAP_WIDTH
         5 003416   003441 602000 5                  TNC     s:12885
         5 003417   003441 600000 5                  TZE     s:12885

      756    12860    5                                 OR  SIZE + VX_MAP_TABS_A(VX_CTAB) > VX_MAP_WIDTH
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:173  
      757    12861    6                         THEN DO;

      758    12862    7                             IF NOT_WROTE THEN DO;

  12862  5 003420   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 003421   003431 605000 5                  TPL     s:12877

      759    12863    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;

  12863  5 003422   200005 450100                    STZ     NOT_WROTE,,AUTO

      760    12864                                      %WR_LIT( MES1="DEF_CONSTANT" );

  12865  5 003423   000072 237000 6                  LDAQ    58
         5 003424   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12866  5 003425   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 003426   440001 713400                    CLIMB   alt,write
         5 003427   401400 401760                    pmme    nvectors=4
         5 003430   005150 702000 5                  TSX2    MAP_IO_ERROR

      761    12874    7                                END;       /* If NOT_WROTE then do; */

      762    12875                                  %M_WRITE;

  12877  5 003431   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 003432   440001 713400                    CLIMB   alt,write
         5 003433   401400 401760                    pmme    nvectors=4
         5 003434   005150 702000 5                  TSX2    MAP_IO_ERROR

  12881  5 003435   040000 100400                    MLR     fill='040'O
         5 003436   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 003437   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12882  5 003440   000000 450000 xsym               STZ     VX_CTAB

      763    12884    6                            END;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:174  

      764    12885    6                         IF S$ <= Q$ THEN DO;

  12885  5 003441   200021 236100                    LDQ     Q$,,AUTO
         5 003442   200014 116100                    CMPQ    S$,,AUTO
         5 003443   003502 602000 5                  TNC     JUMP_OUT_CON

      765    12886    7                             DO WHILE( SNAME$ -> B$DNAME.TEXT

  12886  5 003444   200013 470500                    LDP0    SNAME$,,AUTO
         5 003445   000000 220100                    LDX0    0,,PR0
         5 003446   200014 471500                    LDP1    S$,,AUTO
         5 003447   100001 221100                    LDX1    1,,PR1
         5 003450   200011 473500                    LDP3    DNAME$,,AUTO
         5 003451   300000 222111                    LDX2    0,X1,PR3
         5 003452   000000 635011                    EAA     0,X1
         5 003453   000020 731000                    ARS     16
         5 003454   040145 106540                    CMPC    fill='040'O
         5 003455   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 003456   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 003457   003502 601000 5                  TNZ     JUMP_OUT_CON

      766    12887    7                                     =
      767    12888    7                                     PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) ->
             12888                                              B$DNAME.TEXT );
      768    12889    7                                 S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );

  12889  5 003460   200014 236100                    LDQ     S$,,AUTO
         5 003461   000002 036003                    ADLQ    2,DU
         5 003462   200014 756100                    STQ     S$,,AUTO

      769    12890    7                                 IF S$ > Q$ THEN GOTO JUMP_OUT_CON;

  12890  5 003463   200021 116100                    CMPQ    Q$,,AUTO
         5 003464   003466 600000 5                  TZE     s:12891
         5 003465   003502 603000 5                  TRC     JUMP_OUT_CON

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:175  
      770    12891    7                                END;

  12891  5 003466   200013 470500                    LDP0    SNAME$,,AUTO
         5 003467   000000 220100                    LDX0    0,,PR0
         5 003470   200014 471500                    LDP1    S$,,AUTO
         5 003471   100001 221100                    LDX1    1,,PR1
         5 003472   200011 473500                    LDP3    DNAME$,,AUTO
         5 003473   300000 222111                    LDX2    0,X1,PR3
         5 003474   000000 635011                    EAA     0,X1
         5 003475   000020 731000                    ARS     16
         5 003476   040145 106540                    CMPC    fill='040'O
         5 003477   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 003500   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 003501   003460 600000 5                  TZE     s:12889

      771    12892    6                            END;

      772    12893    5   JUMP_OUT_CON:
      773    12894                              %MOVE_NAME(
      774    12895                              REF1="VXD$TMPLT.NPOINTER",
      775    12896                              NAME$=DNAME$,
      776    12897                              TABBER="VX_MAP_TABS_A(VX_CTAB)");

  12898  5 003502   200020 470500       JUMP_OUT_CON LDP0    P$,,AUTO
         5 003503   000001 220100                    LDX0    1,,PR0
         5 003504   000000 636010                    EAQ     0,X0
         5 003505   200011 036100                    ADLQ    DNAME$,,AUTO
         5 003506   200060 756100                    STQ     SOURCE$,,AUTO

  12899  5 003507   200060 471500                    LDP1    SOURCE$,,AUTO
         5 003510   100000 221100                    LDX1    0,,PR1
         5 003511   000000 722000 xsym               LXL2    VX_CTAB
         5 003512   000000 235012 xsym               LDA     VX_MAP_TABS_A,X2
         5 003513   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 003514   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 003515   040045 100540                    MLR     fill='040'O
         5 003516   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:176  
         5 003517   000000 000011 xsym               ADSC9   VX_MBUF,A                cn=0,n=*X1

      777    12901                              %BUMP_CTAB(INC=SIZE);

  12902  5 003520   000000 236012 xsym               LDQ     VX_MAP_TABS_A,X2
         5 003521   200033 036100                    ADLQ    SIZE,,AUTO
         5 003522   000013 036007                    ADLQ    11,DL
         5 003523   200061 756100                    STQ     LAST_TAB,,AUTO

  12903  5 003524   000000 116012 xsym               CMPQ    VX_MAP_TABS_A,X2
         5 003525   003535 602000 5                  TNC     SKIP_IT_CON
         5 003526   003535 600000 5                  TZE     SKIP_IT_CON

  12904  5 003527   000000 235000 xsym               LDA     VX_CTAB
         5 003530   000001 035007                    ADLA    1,DL
         5 003531   000000 755000 xsym               STA     VX_CTAB

  12905  5 003532   000000 236005 xsym               LDQ     VX_MAP_TABS_A,AL
         5 003533   200061 116100                    CMPQ    LAST_TAB,,AUTO
         5 003534   003527 602000 5                  TNC     s:12904

      778    12907    5   SKIP_IT_CON:
      779    12908    5                         P$ = S$;

  12908  5 003535   200014 236100       SKIP_IT_CON  LDQ     S$,,AUTO
         5 003536   200020 756100                    STQ     P$,,AUTO

      780    12909    5                        END;               /* Do while */

  12909  5 003537   200021 116100                    CMPQ    Q$,,AUTO
         5 003540   003370 602000 5                  TNC     s:12855
         5 003541   003370 600000 5                  TZE     s:12855

      781    12910    5                     IF VX_CTAB ~= 0 THEN DO;

  12910  5 003542   000000 235000 xsym               LDA     VX_CTAB
         5 003543   003567 600000 5                  TZE     s:12935
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:177  

      782    12911    6                         IF NOT_WROTE THEN DO;

  12911  5 003544   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 003545   003554 605000 5                  TPL     s:12925

      783    12912                                  %WR_LIT( MES1="DEF_CONSTANT" );

  12913  5 003546   000072 237000 6                  LDAQ    58
         5 003547   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  12914  5 003550   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 003551   440001 713400                    CLIMB   alt,write
         5 003552   401400 401760                    pmme    nvectors=4
         5 003553   005150 702000 5                  TSX2    MAP_IO_ERROR

      784    12922    6                            END;

      785    12923                              %M_WRITE(
      786    12924                              BEFORE="VX_MBUF.LIT_BUF.VFC='B';");

  12925  5 003554   102000 236003                    LDQ     33792,DU
         5 003555   000000 552040 xsym               STBQ    VX_MBUF,'40'O

  12926  5 003556   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 003557   440001 713400                    CLIMB   alt,write
         5 003560   401400 401760                    pmme    nvectors=4
         5 003561   005150 702000 5                  TSX2    MAP_IO_ERROR

  12930  5 003562   040000 100400                    MLR     fill='040'O
         5 003563   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 003564   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12931  5 003565   000000 450000 xsym               STZ     VX_CTAB

      787    12933    5                        END;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:178  
  12933  5 003566   003601 710000 5                  TRA     s:12949

      788    12934    5                     ELSE DO;

      789    12935    6                         IF NOT NOT_WROTE THEN DO;

  12935  5 003567   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 003570   003601 604000 5                  TMI     s:12949

      790    12936                                  %M_WRITE;

  12938  5 003571   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 003572   440001 713400                    CLIMB   alt,write
         5 003573   401400 401760                    pmme    nvectors=4
         5 003574   005150 702000 5                  TSX2    MAP_IO_ERROR

  12942  5 003575   040000 100400                    MLR     fill='040'O
         5 003576   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 003577   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  12943  5 003600   000000 450000 xsym               STZ     VX_CTAB

      791    12945    6                            END;           /* If ~NOT_WROTE then do; */

      792    12946    5                        END;               /* Else do */

      793    12947    4                    END;                   /* If VX_RU_HEAD_BUF.MAP_BITS_A ... */

      794    12948    3                END;                       /* If P$ ~= addr(nil ) ... */

      795    12949    2            END;                           /* Do i = 1 to 2;    */

  12949  5 003601   200024 235100                    LDA     I,,AUTO
         5 003602   000001 035007                    ADLA    1,DL
         5 003603   200024 755100                    STA     I,,AUTO
         5 003604   000003 115007                    CMPA    3,DL
         5 003605   003335 602000 5                  TNC     s:12842
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:179  

      796    12950
      797    12951        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:180  
      798    12952        /*
      799    12953                        Sort by name if requested
      800    12954        */
      801    12955    2         IF VX_O.MAP.NAME ~= 0 THEN DO;

  12955  5 003606   000116 236000 xsym               LDQ     VX_O+78
         5 003607   004356 600000 5                  TZE     s:13138

      802    12956    2             BIT_INX = 0;

  12956  5 003610   200037 450100                    STZ     BIT_INX,,AUTO

      803    12957    3             DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;

  12957  5 003611   000001 235007                    LDA     1,DL
         5 003612   200024 755100                    STA     I,,AUTO
         5 003613   004353 710000 5                  TRA     s:13132+3

      804    12958    3                 NOT_WROTE = '1'B/*@TRUE_B*/;

  12958  5 003614   400000 236003                    LDQ     -131072,DU
         5 003615   200005 756100                    STQ     NOT_WROTE,,AUTO

      805    12959    3                 RTYPE = VX_DEF_REC_A(I);

  12959  5 003616   200024 720100                    LXL0    I,,AUTO
         5 003617   000000 235010 xsym               LDA     VX_DEF_REC_A,X0
         5 003620   200030 755100                    STA     RTYPE,,AUTO

      806    12960    3                 P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);

  12960  5 003621   000000 470400 xsym               LDP0    VX_MAP$
         5 003622   000030 236105                    LDQ     24,AL,PR0
         5 003623   200020 756100                    STQ     P$,,AUTO

      807    12961    4                 IF P$ ~= ADDR(NIL) THEN DO;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:181  
  12961  5 003624   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 003625   004345 600000 5                  TZE     s:13131

      808    12962    4                     Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);

  12962  5 003626   200030 721100                    LXL1    RTYPE,,AUTO
         5 003627   000042 236111                    LDQ     34,X1,PR0
         5 003630   200021 756100                    STQ     Q$,,AUTO

      809    12963    5                     DO WHILE ( P$ <= Q$ );

  12963  5 003631   200020 116100                    CMPQ    P$,,AUTO
         5 003632   004301 602000 5                  TNC     s:13093

      810    12964    5                         S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );

  12964  5 003633   200020 236100                    LDQ     P$,,AUTO
         5 003634   000002 036003                    ADLQ    2,DU
         5 003635   200014 756100                    STQ     S$,,AUTO

      811    12965    5                         IF RTYPE ~= 4

  12965  5 003636   200030 235100                    LDA     RTYPE,,AUTO
         5 003637   000004 115007                    CMPA    4,DL
         5 003640   003664 600000 5                  TZE     s:12974
         5 003641   200020 470500                    LDP0    P$,,AUTO
         5 003642   000001 236100                    LDQ     1,,PR0
         5 003643   400000 316007                    CANQ    -131072,DL
         5 003644   003664 600000 5                  TZE     s:12974

      812    12966    5                                 AND  P$ -> VXD$TMPLT.CONSTNT
      813    12967    6                         THEN DO;

      814    12968    6                             J = P$ -> VXD$TMPLT.LFLAGS.SOURCE;

  12968  5 003645   000001 236100                    LDQ     1,,PR0
         5 003646   000013 772000                    QRL     11
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:182  
         5 003647   000017 376007                    ANQ     15,DL
         5 003650   200025 756100                    STQ     J,,AUTO

      815    12969    6                             USED_BIT = P$ -> VXD$TMPLT.LFLAGS.USED;

  12969  5 003651   000001 236100                    LDQ     1,,PR0
         5 003652   000024 736000                    QLS     20
         5 003653   400000 376003                    ANQ     -131072,DU
         5 003654   200003 756100                    STQ     USED_BIT,,AUTO

      816    12970    6                             CON_INX = 1;

  12970  5 003655   000001 235007                    LDA     1,DL
         5 003656   200040 755100                    STA     CON_INX,,AUTO

      817    12971    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.LFLAGS.MULTIPLE;

  12971  5 003657   000001 236100                    LDQ     1,,PR0
         5 003660   000023 736000                    QLS     19
         5 003661   400000 376003                    ANQ     -131072,DU
         5 003662   200004 756100                    STQ     MULTIPLE_BIT,,AUTO

      818    12972    6                            END;

  12972  5 003663   003701 710000 5                  TRA     s:12979

      819    12973    6                         ELSE DO;

      820    12974    6                             J = P$ -> VXD$TMPLT.AD.LFLAGS.SOURCE;

  12974  5 003664   200020 470500                    LDP0    P$,,AUTO
         5 003665   000000 236100                    LDQ     0,,PR0
         5 003666   000041 772000                    QRL     33
         5 003667   200025 756100                    STQ     J,,AUTO

      821    12975    6                             USED_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.USED;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:183  
  12975  5 003670   000000 236100                    LDQ     0,,PR0
         5 003671   000005 736000                    QLS     5
         5 003672   400000 376003                    ANQ     -131072,DU
         5 003673   200003 756100                    STQ     USED_BIT,,AUTO

      822    12976    6                             CON_INX = 0;

  12976  5 003674   200040 450100                    STZ     CON_INX,,AUTO

      823    12977    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.MULTIPLE;

  12977  5 003675   000000 236100                    LDQ     0,,PR0
         5 003676   000004 736000                    QLS     4
         5 003677   400000 376003                    ANQ     -131072,DU
         5 003700   200004 756100                    STQ     MULTIPLE_BIT,,AUTO

      824    12978    6                            END;

      825    12979    6                         DO CASE(J);

  12979  5 003701   200025 235100                    LDA     J,,AUTO
         5 003702   000006 115007                    CMPA    6,DL
         5 003703   003705 602005 5                  TNC     s:12979+4,AL
         5 003704   003727 710000 5                  TRA     s:12991
         5 003705   003727 710000 5                  TRA     s:12991
         5 003706   003713 710000 5                  TRA     s:12984
         5 003707   003713 710000 5                  TRA     s:12984
         5 003710   003713 710000 5                  TRA     s:12984
         5 003711   003713 710000 5                  TRA     s:12984
         5 003712   003722 710000 5                  TRA     s:12988

      826    12980    6                           CASE( 1,

      827    12981    6                                 2,
      828    12982    6                                 3,
      829    12983    6                                 4 );
      830    12984    6                             IF VX_O.MAP.UDEF = 0
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:184  

  12984  5 003713   000120 235000 xsym               LDA     VX_O+80
         5 003714   003721 601000 5                  TNZ     s:12984+6
         5 003715   000121 235000 xsym               LDA     VX_O+81
         5 003716   004274 600000 5                  TZE     SKIP_IT_NAME
         5 003717   200003 234100                    SZN     USED_BIT,,AUTO
         5 003720   004274 605000 5                  TPL     SKIP_IT_NAME
         5 003721   003727 710000 5                  TRA     s:12991

      831    12985    6                                     AND  ( VX_O.MAP.LDEF = 0  OR  NOT USED_BIT )
      832    12986    6                             THEN GOTO SKIP_IT_NAME;
      833    12987    6                           CASE( 5 );

      834    12988    6                             IF VX_O.MAP.LDEF = 0  AND NOT VX_RU_HEAD_BUF.LIB

  12988  5 003722   000121 235000 xsym               LDA     VX_O+81
         5 003723   003727 601000 5                  TNZ     s:12991
         5 003724   000022 236000 xsym               LDQ     VX_RU_HEAD_BUF+18
         5 003725   000200 316003                    CANQ    128,DU
         5 003726   004274 600000 5                  TZE     SKIP_IT_NAME

      835    12989    6                             THEN GOTO SKIP_IT_NAME;
      836    12990    6                           END;

      837    12991    5                         SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );

  12991  5 003727   000001 220100                    LDX0    1,,PR0
         5 003730   000000 636010                    EAQ     0,X0
         5 003731   200011 036100                    ADLQ    DNAME$,,AUTO
         5 003732   200013 756100                    STQ     SNAME$,,AUTO

      838    12992    5                         SIZE = SNAME$ -> B$DNAME.COUNT;

  12992  5 003733   200013 471500                    LDP1    SNAME$,,AUTO
         5 003734   100000 236100                    LDQ     0,,PR1
         5 003735   000022 772000                    QRL     18
         5 003736   200033 756100                    STQ     SIZE,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:185  

      839    12993    5                         IF VX_CTAB > VX_MAX_CTAB

  12993  5 003737   000000 236000 xsym               LDQ     VX_MAX_CTAB
         5 003740   000000 116000 xsym               CMPQ    VX_CTAB
         5 003741   003750 602000 5                  TNC     s:12996
         5 003742   000000 720000 xsym               LXL0    VX_CTAB
         5 003743   200033 236100                    LDQ     SIZE,,AUTO
         5 003744   000000 036010 xsym               ADLQ    VX_MAP_TABS_A,X0
         5 003745   000000 116000 xsym               CMPQ    VX_MAP_WIDTH
         5 003746   003776 602000 5                  TNC     s:13019
         5 003747   003776 600000 5                  TZE     s:13019

      840    12994    5                                 OR  SIZE + VX_MAP_TABS_A(VX_CTAB) > VX_MAP_WIDTH
      841    12995    6                         THEN DO;

      842    12996    7                             IF NOT_WROTE THEN DO;

  12996  5 003750   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 003751   003766 605000 5                  TPL     s:13011

      843    12997    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;

  12997  5 003752   200005 450100                    STZ     NOT_WROTE,,AUTO

      844    12998                                      %WR_LIT( MES1="DEF_SORT_NAME(BIT_INX)" );

  12999  5 003753   000065 235000 6                  LDA     53
         5 003754   200037 236100                    LDQ     BIT_INX,,AUTO
         5 003755   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 003756   000024 402003                    MPY     20,DU
         5 003757   000074 036000 6                  ADLQ    60
         5 003760   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 003761   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  13000  5 003762   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 003763   440001 713400                    CLIMB   alt,write
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:186  
         5 003764   401400 401760                    pmme    nvectors=4
         5 003765   005150 702000 5                  TSX2    MAP_IO_ERROR

      845    13008    7                                END;       /* If NOT_WROTE then do; */

      846    13009                                  %M_WRITE;

  13011  5 003766   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 003767   440001 713400                    CLIMB   alt,write
         5 003770   401400 401760                    pmme    nvectors=4
         5 003771   005150 702000 5                  TSX2    MAP_IO_ERROR

  13015  5 003772   040000 100400                    MLR     fill='040'O
         5 003773   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 003774   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  13016  5 003775   000000 450000 xsym               STZ     VX_CTAB

      847    13018    6                            END;

      848    13019    6                         IF S$ <= Q$ THEN DO;

  13019  5 003776   200021 236100                    LDQ     Q$,,AUTO
         5 003777   200014 116100                    CMPQ    S$,,AUTO
         5 004000   004037 602000 5                  TNC     JUMP_OUT_NAME

      849    13020    7                             DO WHILE( SNAME$ -> B$DNAME.TEXT

  13020  5 004001   200013 470500                    LDP0    SNAME$,,AUTO
         5 004002   000000 220100                    LDX0    0,,PR0
         5 004003   200014 471500                    LDP1    S$,,AUTO
         5 004004   100001 221100                    LDX1    1,,PR1
         5 004005   200011 473500                    LDP3    DNAME$,,AUTO
         5 004006   300000 222111                    LDX2    0,X1,PR3
         5 004007   000000 635011                    EAA     0,X1
         5 004010   000020 731000                    ARS     16
         5 004011   040145 106540                    CMPC    fill='040'O
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:187  
         5 004012   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 004013   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 004014   004037 601000 5                  TNZ     JUMP_OUT_NAME

      850    13021    7                                     =
      851    13022    7                                     PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) ->
             13022                                              B$DNAME.TEXT );
      852    13023    7                                 S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );

  13023  5 004015   200014 236100                    LDQ     S$,,AUTO
         5 004016   000002 036003                    ADLQ    2,DU
         5 004017   200014 756100                    STQ     S$,,AUTO

      853    13024    7                                 IF S$ > Q$ THEN GOTO JUMP_OUT_NAME;

  13024  5 004020   200021 116100                    CMPQ    Q$,,AUTO
         5 004021   004023 600000 5                  TZE     s:13025
         5 004022   004037 603000 5                  TRC     JUMP_OUT_NAME

      854    13025    7                                END;

  13025  5 004023   200013 470500                    LDP0    SNAME$,,AUTO
         5 004024   000000 220100                    LDX0    0,,PR0
         5 004025   200014 471500                    LDP1    S$,,AUTO
         5 004026   100001 221100                    LDX1    1,,PR1
         5 004027   200011 473500                    LDP3    DNAME$,,AUTO
         5 004030   300000 222111                    LDX2    0,X1,PR3
         5 004031   000000 635011                    EAA     0,X1
         5 004032   000020 731000                    ARS     16
         5 004033   040145 106540                    CMPC    fill='040'O
         5 004034   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 004035   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 004036   004015 600000 5                  TZE     s:13023

      855    13026    6                            END;

      856    13027    5   JUMP_OUT_NAME:
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:188  
      857    13028    5                         NAME_COL = VX_MAP_TABS_A(VX_CTAB);

  13028  5 004037   000000 720000 xsym  JUMP_OUT_NA* LXL0    VX_CTAB
         5 004040   000000 235010 xsym               LDA     VX_MAP_TABS_A,X0
         5 004041   200043 755100                    STA     NAME_COL,,AUTO

      858    13029    6                         IF CON_INX ~= 0 THEN DO;

  13029  5 004042   200040 236100                    LDQ     CON_INX,,AUTO
         5 004043   004056 600000 5                  TZE     s:13036

      859    13030    6                             VX_MBUF.CHARS_A( NAME_COL - 4 ) = '=';

  13030  5 004044   040005 100400                    MLR     fill='040'O
         5 004045   000075 000001 6                  ADSC9   61                       cn=0,n=1
         5 004046   777777 000001 xsym               ADSC9   VX_MBUF-1,A              cn=0,n=1

      860    13031    6                             R$ = ADDR( P$ -> VXD$TMPLT.VALUE );

  13031  5 004047   200020 236100                    LDQ     P$,,AUTO
         5 004050   200022 756100                    STQ     R$,,AUTO

      861    13032    6                             NUM_START = NAME_COL - 16;

  13032  5 004051   000020 135007                    SBLA    16,DL
         5 004052   200042 755100                    STA     NUM_START,,AUTO

      862    13033    6                             FIELD_SIZE = 12;

  13033  5 004053   000014 235007                    LDA     12,DL
         5 004054   200041 755100                    STA     FIELD_SIZE,,AUTO

      863    13034    6                            END;

  13034  5 004055   004116 710000 5                  TRA     s:13054

      864    13035    6                         ELSE DO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:189  

      865    13036    7                             DO CASE( RTYPE );

  13036  5 004056   200030 235100                    LDA     RTYPE,,AUTO
         5 004057   000004 135007                    SBLA    4,DL
         5 004060   000005 115007                    CMPA    5,DL
         5 004061   004063 602005 5                  TNC     s:13036+5,AL
         5 004062   004116 710000 5                  TRA     s:13054
         5 004063   004070 710000 5                  TRA     s:13038
         5 004064   004116 710000 5                  TRA     s:13054
         5 004065   004070 710000 5                  TRA     s:13038
         5 004066   004116 710000 5                  TRA     s:13054
         5 004067   004101 710000 5                  TRA     s:13042

      866    13037    7                               CASE( 4, 6 );

      867    13038    7                                 R$ = ADDR( P$ -> VXD$TMPLT.AD.ISADDR );

  13038  5 004070   200020 236100                    LDQ     P$,,AUTO
         5 004071   400000 036007                    ADLQ    -131072,DL
         5 004072   200022 756100                    STQ     R$,,AUTO

      868    13039    7                                 NUM_START = NAME_COL - 10;

  13039  5 004073   200043 235100                    LDA     NAME_COL,,AUTO
         5 004074   000012 135007                    SBLA    10,DL
         5 004075   200042 755100                    STA     NUM_START,,AUTO

      869    13040    7                                 FIELD_SIZE = 6;

  13040  5 004076   000006 235007                    LDA     6,DL
         5 004077   200041 755100                    STA     FIELD_SIZE,,AUTO
         5 004100   004116 710000 5                  TRA     s:13054

      870    13041    7                               CASE( 8 );

      871    13042    7                                 VALUE_A(0) = P$->B$SEGDEF.AD.OU.OFFSET;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:190  

  13042  5 004101   200020 470500                    LDP0    P$,,AUTO
         5 004102   000000 721100                    LXL1    0,,PR0
         5 004103   200056 741100                    STX1    VALUE,,AUTO

      872    13043    7                                 VALUE_A(1) = P$ -> B$SEGDEF.SEG.SEGID;

  13043  5 004104   000001 722100                    LXL2    1,,PR0
         5 004105   007777 362003                    ANX2    4095,DU
         5 004106   200056 442100                    SXL2    VALUE,,AUTO

      873    13044    7                                 R$ = ADDR( VALUE );

  13044  5 004107   200056 631500                    EPPR1   VALUE,,AUTO
         5 004110   200022 451500                    STP1    R$,,AUTO

      874    13045    7                                 NUM_START = NAME_COL - 16;

  13045  5 004111   200043 235100                    LDA     NAME_COL,,AUTO
         5 004112   000020 135007                    SBLA    16,DL
         5 004113   200042 755100                    STA     NUM_START,,AUTO

      875    13046    7                                 FIELD_SIZE = 12;

  13046  5 004114   000014 235007                    LDA     12,DL
         5 004115   200041 755100                    STA     FIELD_SIZE,,AUTO

      876    13047    7                               END;

      877    13048    6                            END;

      878    13049                              %M_NUMBER(
      879    13050                              VAR=" ",
      880    13051                              START=NUM_START,
      881    13052                              FLD_SIZE=FIELD_SIZE);

  13054  5 004116   000074 450000 3                  STZ     SIG
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:191  

  13055  5 004117   200062 450100                    STZ     K_INDEX,,AUTO
         5 004120   004201 710000 5                  TRA     s:13067+3

  13056  5 004121   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004122   200042 036100                    ADLQ    NUM_START,,AUTO
         5 004123   200063 756100                    STQ     L_INDEX,,AUTO

  13057  5 004124   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004125   000003 402007                    MPY     3,DL
         5 004126   200022 470500                    LDP0    R$,,AUTO
         5 004127   003100 061506                    CSR     bolr='003'O
         5 004130   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 004131   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
         5 004132   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 004133   000033 736000                    QLS     27
         5 004134   000073 676000 3                  ERQ     WORK_BUF
         5 004135   007000 376003                    ANQ     3584,DU
         5 004136   000073 656000 3                  ERSQ    WORK_BUF

  13058  5 004137   000073 236000 3                  LDQ     WORK_BUF
         5 004140   007000 316003                    CANQ    3584,DU
         5 004141   004170 601000 5                  TNZ     s:13064

  13059  5 004142   000074 234000 3                  SZN     SIG
         5 004143   004151 605000 5                  TPL     s:13060

  13059  5 004144   200063 235100                    LDA     L_INDEX,,AUTO
         5 004145   040005 100400                    MLR     fill='040'O
         5 004146   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 004147   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 004150   004176 710000 5                  TRA     s:13067

  13060  5 004151   200041 236100                    LDQ     FIELD_SIZE,,AUTO
         5 004152   000001 136007                    SBLQ    1,DL
         5 004153   004163 604000 5                  TMI     s:13061
         5 004154   200062 116100                    CMPQ    K_INDEX,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:192  
         5 004155   004163 601000 5                  TNZ     s:13061

  13060  5 004156   200063 235100                    LDA     L_INDEX,,AUTO
         5 004157   040005 100400                    MLR     fill='040'O
         5 004160   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 004161   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 004162   004176 710000 5                  TRA     s:13067

  13061  5 004163   200063 235100                    LDA     L_INDEX,,AUTO
         5 004164   040005 100400                    MLR     fill='040'O
         5 004165   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 004166   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  13062  5 004167   004176 710000 5                  TRA     s:13067

  13064  5 004170   400000 236003                    LDQ     -131072,DU
         5 004171   000074 756000 3                  STQ     SIG

  13065  5 004172   200063 235100                    LDA     L_INDEX,,AUTO
         5 004173   040005 100400                    MLR     fill='040'O
         5 004174   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 004175   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  13067  5 004176   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004177   000001 036007                    ADLQ    1,DL
         5 004200   200062 756100                    STQ     K_INDEX,,AUTO
         5 004201   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004202   200041 116100                    CMPQ    FIELD_SIZE,,AUTO
         5 004203   004121 602000 5                  TNC     s:13056

      882    13069    6                         IF RTYPE = 8 THEN DO;

  13069  5 004204   200030 235100                    LDA     RTYPE,,AUTO
         5 004205   000010 115007                    CMPA    8,DL
         5 004206   004222 601000 5                  TNZ     s:13078

      883    13070    6                             CALL INSERT( VX_MBUF.CHARS, NUM_START+6, 2, '  ' );
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:193  

  13070  5 004207   200042 235100                    LDA     NUM_START,,AUTO
         5 004210   040005 100400                    MLR     fill='040'O
         5 004211   000720 000002 2                  ADSC9   DIAG_TABS+9              cn=0,n=2
         5 004212   000001 400002 xsym               ADSC9   VX_MBUF+1,A              cn=2,n=2

      884    13071    6                             IF SUBSTR( VX_MBUF.CHARS, NUM_START, 6 ) = ' '

  13071  5 004213   040000 106405                    CMPC    fill='040'O
         5 004214   000000 000006 xsym               ADSC9   VX_MBUF,A                cn=0,n=6
         5 004215   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 004216   004222 601000 5                  TNZ     s:13078

      885    13072    6                             THEN VX_MBUF.CHARS_A(NUM_START+5) = '0';

  13072  5 004217   040005 100400                    MLR     fill='040'O
         5 004220   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 004221   000001 200001 xsym               ADSC9   VX_MBUF+1,A              cn=1,n=1

      886    13073    6                            END;

      887    13074                              %MOVE_NAME(
      888    13075                              REF1="VXD$TMPLT.NPOINTER",
      889    13076                              NAME$=DNAME$,
      890    13077                              TABBER="NAME_COL");

  13078  5 004222   200020 470500                    LDP0    P$,,AUTO
         5 004223   000001 220100                    LDX0    1,,PR0
         5 004224   000000 636010                    EAQ     0,X0
         5 004225   200011 036100                    ADLQ    DNAME$,,AUTO
         5 004226   200060 756100                    STQ     SOURCE$,,AUTO

  13079  5 004227   200060 471500                    LDP1    SOURCE$,,AUTO
         5 004230   100000 221100                    LDX1    0,,PR1
         5 004231   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 004232   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 004233   200043 235100                    LDA     NAME_COL,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:194  
         5 004234   040045 100540                    MLR     fill='040'O
         5 004235   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 004236   000000 000011 xsym               ADSC9   VX_MBUF,A                cn=0,n=*X1

      891    13081    5                         VX_MBUF.CHARS_A( NAME_COL - 3 ) = SOURCE_FROM(J);

  13081  5 004237   200025 235100                    LDA     J,,AUTO
         5 004240   200043 236100                    LDQ     NAME_COL,,AUTO
         5 004241   040006 100405                    MLR     fill='040'O
         5 004242   000234 000001 2                  ADSC9   SOURCE_FROM,A            cn=0,n=1
         5 004243   777777 200001 xsym               ADSC9   VX_MBUF-1,Q              cn=1,n=1

      892    13082    5                         IF NOT USED_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 2 ) = '*';

  13082  5 004244   200003 234100                    SZN     USED_BIT,,AUTO
         5 004245   004251 604000 5                  TMI     s:13083

  13082  5 004246   040006 100400                    MLR     fill='040'O
         5 004247   000076 000001 6                  ADSC9   62                       cn=0,n=1
         5 004250   777777 400001 xsym               ADSC9   VX_MBUF-1,Q              cn=2,n=1

      893    13083    5                         IF MULTIPLE_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 1 ) = '+';

  13083  5 004251   200004 234100                    SZN     MULTIPLE_BIT,,AUTO
         5 004252   004256 605000 5                  TPL     s:13085

  13083  5 004253   040006 100400                    MLR     fill='040'O
         5 004254   000077 000001 6                  ADSC9   63                       cn=0,n=1
         5 004255   777777 600001 xsym               ADSC9   VX_MBUF-1,Q              cn=3,n=1

      894    13084                              %BUMP_CTAB(INC=SIZE);

  13085  5 004256   000000 720000 xsym               LXL0    VX_CTAB
         5 004257   000000 236010 xsym               LDQ     VX_MAP_TABS_A,X0
         5 004260   200033 036100                    ADLQ    SIZE,,AUTO
         5 004261   000013 036007                    ADLQ    11,DL
         5 004262   200061 756100                    STQ     LAST_TAB,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:195  

  13086  5 004263   000000 116010 xsym               CMPQ    VX_MAP_TABS_A,X0
         5 004264   004274 602000 5                  TNC     SKIP_IT_NAME
         5 004265   004274 600000 5                  TZE     SKIP_IT_NAME

  13087  5 004266   000000 235000 xsym               LDA     VX_CTAB
         5 004267   000001 035007                    ADLA    1,DL
         5 004270   000000 755000 xsym               STA     VX_CTAB

  13088  5 004271   000000 236005 xsym               LDQ     VX_MAP_TABS_A,AL
         5 004272   200061 116100                    CMPQ    LAST_TAB,,AUTO
         5 004273   004266 602000 5                  TNC     s:13087

      895    13090    5   SKIP_IT_NAME:
      896    13091    5                         P$ = S$;

  13091  5 004274   200014 236100       SKIP_IT_NAME LDQ     S$,,AUTO
         5 004275   200020 756100                    STQ     P$,,AUTO

      897    13092    5                        END;               /* Do while */

  13092  5 004276   200021 116100                    CMPQ    Q$,,AUTO
         5 004277   003633 602000 5                  TNC     s:12964
         5 004300   003633 600000 5                  TZE     s:12964

      898    13093    5                     IF VX_CTAB ~= 0 THEN DO;

  13093  5 004301   000000 235000 xsym               LDA     VX_CTAB
         5 004302   004333 600000 5                  TZE     s:13118

      899    13094    6                         IF NOT_WROTE THEN DO;

  13094  5 004303   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 004304   004320 605000 5                  TPL     s:13108

      900    13095                                  %WR_LIT( MES1="DEF_SORT_NAME(BIT_INX)" );

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:196  
  13096  5 004305   000065 235000 6                  LDA     53
         5 004306   200037 236100                    LDQ     BIT_INX,,AUTO
         5 004307   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 004310   000024 402003                    MPY     20,DU
         5 004311   000074 036000 6                  ADLQ    60
         5 004312   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 004313   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  13097  5 004314   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 004315   440001 713400                    CLIMB   alt,write
         5 004316   401400 401760                    pmme    nvectors=4
         5 004317   005150 702000 5                  TSX2    MAP_IO_ERROR

      901    13105    6                            END;

      902    13106                              %M_WRITE(
      903    13107                              BEFORE="VX_MBUF.LIT_BUF.VFC='B';");

  13108  5 004320   102000 236003                    LDQ     33792,DU
         5 004321   000000 552040 xsym               STBQ    VX_MBUF,'40'O

  13109  5 004322   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 004323   440001 713400                    CLIMB   alt,write
         5 004324   401400 401760                    pmme    nvectors=4
         5 004325   005150 702000 5                  TSX2    MAP_IO_ERROR

  13113  5 004326   040000 100400                    MLR     fill='040'O
         5 004327   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 004330   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  13114  5 004331   000000 450000 xsym               STZ     VX_CTAB

      904    13116    5                        END;

  13116  5 004332   004345 710000 5                  TRA     s:13131

      905    13117    5                     ELSE DO;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:197  

      906    13118    6                         IF NOT NOT_WROTE THEN DO;

  13118  5 004333   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 004334   004345 604000 5                  TMI     s:13131

      907    13119                                  %M_WRITE;

  13121  5 004335   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 004336   440001 713400                    CLIMB   alt,write
         5 004337   401400 401760                    pmme    nvectors=4
         5 004340   005150 702000 5                  TSX2    MAP_IO_ERROR

  13125  5 004341   040000 100400                    MLR     fill='040'O
         5 004342   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 004343   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  13126  5 004344   000000 450000 xsym               STZ     VX_CTAB

      908    13128    6                            END;           /* If ~NOT_WROTE then do; */

      909    13129    5                        END;               /* Else do */

      910    13130    4                    END;                   /* If P$ ~= addr(nil ) ... */

      911    13131    3                 BIT_INX = BIT_INX + 1;

  13131  5 004345   200037 235100                    LDA     BIT_INX,,AUTO
         5 004346   000001 035007                    ADLA    1,DL
         5 004347   200037 755100                    STA     BIT_INX,,AUTO

      912    13132    3                END;                       /* Do i = 1 to ... */

  13132  5 004350   200024 236100                    LDQ     I,,AUTO
         5 004351   000001 036007                    ADLQ    1,DL
         5 004352   200024 756100                    STQ     I,,AUTO
         5 004353   200024 235100                    LDA     I,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:198  
         5 004354   000004 115007                    CMPA    4,DL
         5 004355   003614 602000 5                  TNC     s:12958

      913    13133    2            END;

      914    13134        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:199  
      915    13135        /*
      916    13136                        Sort by value if requested
      917    13137        */
      918    13138    2         IF VX_O.MAP.VALUE ~= 0 THEN DO;

  13138  5 004356   000117 236000 xsym               LDQ     VX_O+79
         5 004357   005147 600000 5                  TZE     s:13322

      919    13139    2             BIT_INX = 0;

  13139  5 004360   200037 450100                    STZ     BIT_INX,,AUTO

      920    13140    3             DO I = 1 TO SIZEW( VX_DEF_REC_A ) - 1;

  13140  5 004361   000001 235007                    LDA     1,DL
         5 004362   200024 755100                    STA     I,,AUTO
         5 004363   005144 710000 5                  TRA     s:13320+3

      921    13141    3                 NOT_WROTE = '1'B/*@TRUE_B*/;

  13141  5 004364   400000 236003                    LDQ     -131072,DU
         5 004365   200005 756100                    STQ     NOT_WROTE,,AUTO

      922    13142    3                 RTYPE = VX_DEF_REC_A(I);

  13142  5 004366   200024 720100                    LXL0    I,,AUTO
         5 004367   000000 235010 xsym               LDA     VX_DEF_REC_A,X0
         5 004370   200030 755100                    STA     RTYPE,,AUTO

      923    13143    3                 P$ = VX_MAP$ -> VX$NODE.L_START_A$(RTYPE);

  13143  5 004371   000000 470400 xsym               LDP0    VX_MAP$
         5 004372   000030 236105                    LDQ     24,AL,PR0
         5 004373   200020 756100                    STQ     P$,,AUTO

      924    13144    4                 IF P$ ~= ADDR(NIL) THEN DO;

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:200  
  13144  5 004374   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 004375   005136 600000 5                  TZE     s:13319

      925    13145    4                     Q$ = VX_MAP$ -> VX$NODE.L_STOP_A$(RTYPE);

  13145  5 004376   200030 721100                    LXL1    RTYPE,,AUTO
         5 004377   000042 236111                    LDQ     34,X1,PR0
         5 004400   200021 756100                    STQ     Q$,,AUTO

      926    13146    4                     CALL VXQ$SORT_V( DNAME$,

  13146  5 004401   200030 631500                    EPPR1   RTYPE,,AUTO
         5 004402   200102 451500                    STP1    AREA_LEFT+8,,AUTO
         5 004403   000100 237000 6                  LDAQ    64
         5 004404   200100 757100                    STAQ    AREA_LEFT+6,,AUTO
         5 004405   000101 236000 6                  LDQ     65
         5 004406   200077 756100                    STQ     AREA_LEFT+5,,AUTO
         5 004407   200021 633500                    EPPR3   Q$,,AUTO
         5 004410   200076 453500                    STP3    AREA_LEFT+4,,AUTO
         5 004411   200020 634500                    EPPR4   P$,,AUTO
         5 004412   200075 454500                    STP4    AREA_LEFT+3,,AUTO
         5 004413   200011 635500                    EPPR5   DNAME$,,AUTO
         5 004414   200074 455500                    STP5    AREA_LEFT+2,,AUTO
         5 004415   200074 630500                    EPPR0   AREA_LEFT+2,,AUTO
         5 004416   000025 631400 xsym               EPPR1   B_VECTNIL+21
         5 004417   000000 701000 xent               TSX1    VXQ$SORT_V
         5 004420   000000 011000                    NOP     0

      927    13147    4                             P$,
      928    13148    4                             Q$,
      929    13149    4                             SIZEW( VXD$TMPLT ),
      930    13150    4                             0/*@BY_VALUE*/,
      931    13151    4                             2,
      932    13152    4                             RTYPE );
      933    13153    5                     DO WHILE ( P$ <= Q$ );

  13153  5 004421   200021 236100                    LDQ     Q$,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:201  
         5 004422   200020 116100                    CMPQ    P$,,AUTO
         5 004423   005072 602000 5                  TNC     s:13281

      934    13154    5                         S$ = PINCRW( P$, SIZEW(VXD$TMPLT) );

  13154  5 004424   200020 236100                    LDQ     P$,,AUTO
         5 004425   000002 036003                    ADLQ    2,DU
         5 004426   200014 756100                    STQ     S$,,AUTO

      935    13155    6                         IF RTYPE ~= 4 AND P$ -> VXD$TMPLT.CONSTNT THEN DO;

  13155  5 004427   200030 235100                    LDA     RTYPE,,AUTO
         5 004430   000004 115007                    CMPA    4,DL
         5 004431   004455 600000 5                  TZE     s:13162
         5 004432   200020 470500                    LDP0    P$,,AUTO
         5 004433   000001 236100                    LDQ     1,,PR0
         5 004434   400000 316007                    CANQ    -131072,DL
         5 004435   004455 600000 5                  TZE     s:13162

      936    13156    6                             J = P$ -> VXD$TMPLT.LFLAGS.SOURCE;

  13156  5 004436   000001 236100                    LDQ     1,,PR0
         5 004437   000013 772000                    QRL     11
         5 004440   000017 376007                    ANQ     15,DL
         5 004441   200025 756100                    STQ     J,,AUTO

      937    13157    6                             USED_BIT = P$ -> VXD$TMPLT.LFLAGS.USED;

  13157  5 004442   000001 236100                    LDQ     1,,PR0
         5 004443   000024 736000                    QLS     20
         5 004444   400000 376003                    ANQ     -131072,DU
         5 004445   200003 756100                    STQ     USED_BIT,,AUTO

      938    13158    6                             CON_INX = 1;

  13158  5 004446   000001 235007                    LDA     1,DL
         5 004447   200040 755100                    STA     CON_INX,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:202  

      939    13159    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.LFLAGS.MULTIPLE;

  13159  5 004450   000001 236100                    LDQ     1,,PR0
         5 004451   000023 736000                    QLS     19
         5 004452   400000 376003                    ANQ     -131072,DU
         5 004453   200004 756100                    STQ     MULTIPLE_BIT,,AUTO

      940    13160    6                            END;

  13160  5 004454   004472 710000 5                  TRA     s:13167

      941    13161    6                         ELSE DO;

      942    13162    6                             J = P$ -> VXD$TMPLT.AD.LFLAGS.SOURCE;

  13162  5 004455   200020 470500                    LDP0    P$,,AUTO
         5 004456   000000 236100                    LDQ     0,,PR0
         5 004457   000041 772000                    QRL     33
         5 004460   200025 756100                    STQ     J,,AUTO

      943    13163    6                             USED_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.USED;

  13163  5 004461   000000 236100                    LDQ     0,,PR0
         5 004462   000005 736000                    QLS     5
         5 004463   400000 376003                    ANQ     -131072,DU
         5 004464   200003 756100                    STQ     USED_BIT,,AUTO

      944    13164    6                             CON_INX = 0;

  13164  5 004465   200040 450100                    STZ     CON_INX,,AUTO

      945    13165    6                             MULTIPLE_BIT = P$ -> VXD$TMPLT.AD.LFLAGS.MULTIPLE;

  13165  5 004466   000000 236100                    LDQ     0,,PR0
         5 004467   000004 736000                    QLS     4
         5 004470   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:203  
         5 004471   200004 756100                    STQ     MULTIPLE_BIT,,AUTO

      946    13166    6                            END;

      947    13167    6                         DO CASE(J);

  13167  5 004472   200025 235100                    LDA     J,,AUTO
         5 004473   000006 115007                    CMPA    6,DL
         5 004474   004476 602005 5                  TNC     s:13167+4,AL
         5 004475   004520 710000 5                  TRA     s:13179
         5 004476   004520 710000 5                  TRA     s:13179
         5 004477   004504 710000 5                  TRA     s:13172
         5 004500   004504 710000 5                  TRA     s:13172
         5 004501   004504 710000 5                  TRA     s:13172
         5 004502   004504 710000 5                  TRA     s:13172
         5 004503   004513 710000 5                  TRA     s:13176

      948    13168    6                           CASE( 1,

      949    13169    6                                 2,
      950    13170    6                                 3,
      951    13171    6                                 4 );
      952    13172    6                             IF VX_O.MAP.UDEF = 0

  13172  5 004504   000120 235000 xsym               LDA     VX_O+80
         5 004505   004512 601000 5                  TNZ     s:13172+6
         5 004506   000121 235000 xsym               LDA     VX_O+81
         5 004507   005065 600000 5                  TZE     SKIP_IT_VALUE
         5 004510   200003 234100                    SZN     USED_BIT,,AUTO
         5 004511   005065 605000 5                  TPL     SKIP_IT_VALUE
         5 004512   004520 710000 5                  TRA     s:13179

      953    13173    6                                     AND  ( VX_O.MAP.LDEF = 0  OR  NOT USED_BIT )
      954    13174    6                             THEN GOTO SKIP_IT_VALUE;
      955    13175    6                           CASE( 5 );

      956    13176    6                             IF VX_O.MAP.LDEF = 0  AND NOT VX_RU_HEAD_BUF.LIB
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:204  

  13176  5 004513   000121 235000 xsym               LDA     VX_O+81
         5 004514   004520 601000 5                  TNZ     s:13179
         5 004515   000022 236000 xsym               LDQ     VX_RU_HEAD_BUF+18
         5 004516   000200 316003                    CANQ    128,DU
         5 004517   005065 600000 5                  TZE     SKIP_IT_VALUE

      957    13177    6                             THEN GOTO SKIP_IT_VALUE;
      958    13178    6                           END;

      959    13179    5                         SNAME$ = PINCRW( DNAME$, P$ -> VXD$TMPLT.NPOINTER );

  13179  5 004520   000001 220100                    LDX0    1,,PR0
         5 004521   000000 636010                    EAQ     0,X0
         5 004522   200011 036100                    ADLQ    DNAME$,,AUTO
         5 004523   200013 756100                    STQ     SNAME$,,AUTO

      960    13180    5                         SIZE = SNAME$ -> B$DNAME.COUNT;

  13180  5 004524   200013 471500                    LDP1    SNAME$,,AUTO
         5 004525   100000 236100                    LDQ     0,,PR1
         5 004526   000022 772000                    QRL     18
         5 004527   200033 756100                    STQ     SIZE,,AUTO

      961    13181    5                         IF VX_CTAB > VX_MAX_CTAB

  13181  5 004530   000000 236000 xsym               LDQ     VX_MAX_CTAB
         5 004531   000000 116000 xsym               CMPQ    VX_CTAB
         5 004532   004541 602000 5                  TNC     s:13184
         5 004533   000000 720000 xsym               LXL0    VX_CTAB
         5 004534   200033 236100                    LDQ     SIZE,,AUTO
         5 004535   000000 036010 xsym               ADLQ    VX_MAP_TABS_A,X0
         5 004536   000000 116000 xsym               CMPQ    VX_MAP_WIDTH
         5 004537   004567 602000 5                  TNC     s:13207
         5 004540   004567 600000 5                  TZE     s:13207

      962    13182    5                                 OR  SIZE + VX_MAP_TABS_A(VX_CTAB) > VX_MAP_WIDTH
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:205  
      963    13183    6                         THEN DO;

      964    13184    7                             IF NOT_WROTE THEN DO;

  13184  5 004541   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 004542   004557 605000 5                  TPL     s:13199

      965    13185    7                                 NOT_WROTE = '0'B/*@FALSE_B*/;

  13185  5 004543   200005 450100                    STZ     NOT_WROTE,,AUTO

      966    13186                                      %WR_LIT( MES1="DEF_SORT_VALUE(BIT_INX)" );

  13187  5 004544   000065 235000 6                  LDA     53
         5 004545   200037 236100                    LDQ     BIT_INX,,AUTO
         5 004546   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 004547   000024 402003                    MPY     20,DU
         5 004550   000102 036000 6                  ADLQ    66
         5 004551   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 004552   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  13188  5 004553   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 004554   440001 713400                    CLIMB   alt,write
         5 004555   401400 401760                    pmme    nvectors=4
         5 004556   005150 702000 5                  TSX2    MAP_IO_ERROR

      967    13196    7                                END;       /* If NOT_WROTE then do; */

      968    13197                                  %M_WRITE;

  13199  5 004557   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 004560   440001 713400                    CLIMB   alt,write
         5 004561   401400 401760                    pmme    nvectors=4
         5 004562   005150 702000 5                  TSX2    MAP_IO_ERROR

  13203  5 004563   040000 100400                    MLR     fill='040'O
         5 004564   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:206  
         5 004565   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  13204  5 004566   000000 450000 xsym               STZ     VX_CTAB

      969    13206    6                            END;

      970    13207    6                         IF S$ <= Q$ THEN DO;

  13207  5 004567   200021 236100                    LDQ     Q$,,AUTO
         5 004570   200014 116100                    CMPQ    S$,,AUTO
         5 004571   004630 602000 5                  TNC     JUMP_OUT_VALUE

      971    13208    7                             DO WHILE( SNAME$ -> B$DNAME.TEXT

  13208  5 004572   200013 470500                    LDP0    SNAME$,,AUTO
         5 004573   000000 220100                    LDX0    0,,PR0
         5 004574   200014 471500                    LDP1    S$,,AUTO
         5 004575   100001 221100                    LDX1    1,,PR1
         5 004576   200011 473500                    LDP3    DNAME$,,AUTO
         5 004577   300000 222111                    LDX2    0,X1,PR3
         5 004600   000000 635011                    EAA     0,X1
         5 004601   000020 731000                    ARS     16
         5 004602   040145 106540                    CMPC    fill='040'O
         5 004603   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 004604   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 004605   004630 601000 5                  TNZ     JUMP_OUT_VALUE

      972    13209    7                                     =
      973    13210    7                                     PINCRW( DNAME$, S$ -> VXD$TMPLT.NPOINTER ) ->
             13210                                              B$DNAME.TEXT );
      974    13211    7                                 S$ = PINCRW( S$, SIZEW(VXD$TMPLT) );

  13211  5 004606   200014 236100                    LDQ     S$,,AUTO
         5 004607   000002 036003                    ADLQ    2,DU
         5 004610   200014 756100                    STQ     S$,,AUTO

      975    13212    7                                 IF S$ > Q$ THEN GOTO JUMP_OUT_VALUE;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:207  

  13212  5 004611   200021 116100                    CMPQ    Q$,,AUTO
         5 004612   004614 600000 5                  TZE     s:13213
         5 004613   004630 603000 5                  TRC     JUMP_OUT_VALUE

      976    13213    7                                END;

  13213  5 004614   200013 470500                    LDP0    SNAME$,,AUTO
         5 004615   000000 220100                    LDX0    0,,PR0
         5 004616   200014 471500                    LDP1    S$,,AUTO
         5 004617   100001 221100                    LDX1    1,,PR1
         5 004620   200011 473500                    LDP3    DNAME$,,AUTO
         5 004621   300000 222111                    LDX2    0,X1,PR3
         5 004622   000000 635011                    EAA     0,X1
         5 004623   000020 731000                    ARS     16
         5 004624   040145 106540                    CMPC    fill='040'O
         5 004625   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 004626   300000 400012                    ADSC9   0,A,PR3                  cn=2,n=*X2
         5 004627   004606 600000 5                  TZE     s:13211

      977    13214    6                            END;

      978    13215    5   JUMP_OUT_VALUE:
      979    13216    5                         NAME_COL = VX_MAP_TABS_A(VX_CTAB);

  13216  5 004630   000000 720000 xsym  JUMP_OUT_VA* LXL0    VX_CTAB
         5 004631   000000 235010 xsym               LDA     VX_MAP_TABS_A,X0
         5 004632   200043 755100                    STA     NAME_COL,,AUTO

      980    13217    6                         IF CON_INX ~= 0 THEN DO;

  13217  5 004633   200040 236100                    LDQ     CON_INX,,AUTO
         5 004634   004647 600000 5                  TZE     s:13224

      981    13218    6                             VX_MBUF.CHARS_A( NAME_COL - 4 ) = '=';

  13218  5 004635   040005 100400                    MLR     fill='040'O
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:208  
         5 004636   000075 000001 6                  ADSC9   61                       cn=0,n=1
         5 004637   777777 000001 xsym               ADSC9   VX_MBUF-1,A              cn=0,n=1

      982    13219    6                             R$ = ADDR( P$ -> VXD$TMPLT.VALUE );

  13219  5 004640   200020 236100                    LDQ     P$,,AUTO
         5 004641   200022 756100                    STQ     R$,,AUTO

      983    13220    6                             NUM_START = NAME_COL - 16;

  13220  5 004642   000020 135007                    SBLA    16,DL
         5 004643   200042 755100                    STA     NUM_START,,AUTO

      984    13221    6                             FIELD_SIZE = 12;

  13221  5 004644   000014 235007                    LDA     12,DL
         5 004645   200041 755100                    STA     FIELD_SIZE,,AUTO

      985    13222    6                            END;

  13222  5 004646   004707 710000 5                  TRA     s:13242

      986    13223    6                         ELSE DO;

      987    13224    7                             DO CASE( RTYPE );

  13224  5 004647   200030 235100                    LDA     RTYPE,,AUTO
         5 004650   000004 135007                    SBLA    4,DL
         5 004651   000005 115007                    CMPA    5,DL
         5 004652   004654 602005 5                  TNC     s:13224+5,AL
         5 004653   004707 710000 5                  TRA     s:13242
         5 004654   004661 710000 5                  TRA     s:13226
         5 004655   004707 710000 5                  TRA     s:13242
         5 004656   004661 710000 5                  TRA     s:13226
         5 004657   004707 710000 5                  TRA     s:13242
         5 004660   004672 710000 5                  TRA     s:13230

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:209  
      988    13225    7                               CASE( 4, 6 );

      989    13226    7                                 R$ = ADDR( P$ -> VXD$TMPLT.AD.ISADDR );

  13226  5 004661   200020 236100                    LDQ     P$,,AUTO
         5 004662   400000 036007                    ADLQ    -131072,DL
         5 004663   200022 756100                    STQ     R$,,AUTO

      990    13227    7                                 NUM_START = NAME_COL - 10;

  13227  5 004664   200043 235100                    LDA     NAME_COL,,AUTO
         5 004665   000012 135007                    SBLA    10,DL
         5 004666   200042 755100                    STA     NUM_START,,AUTO

      991    13228    7                                 FIELD_SIZE = 6;

  13228  5 004667   000006 235007                    LDA     6,DL
         5 004670   200041 755100                    STA     FIELD_SIZE,,AUTO
         5 004671   004707 710000 5                  TRA     s:13242

      992    13229    7                               CASE( 8 );

      993    13230    7                                 VALUE_A(0) = P$->B$SEGDEF.AD.OU.OFFSET;

  13230  5 004672   200020 470500                    LDP0    P$,,AUTO
         5 004673   000000 721100                    LXL1    0,,PR0
         5 004674   200056 741100                    STX1    VALUE,,AUTO

      994    13231    7                                 VALUE_A(1) = P$ -> B$SEGDEF.SEG.SEGID;

  13231  5 004675   000001 722100                    LXL2    1,,PR0
         5 004676   007777 362003                    ANX2    4095,DU
         5 004677   200056 442100                    SXL2    VALUE,,AUTO

      995    13232    7                                 R$ = ADDR( VALUE );

  13232  5 004700   200056 631500                    EPPR1   VALUE,,AUTO
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:210  
         5 004701   200022 451500                    STP1    R$,,AUTO

      996    13233    7                                 NUM_START = NAME_COL - 16;

  13233  5 004702   200043 235100                    LDA     NAME_COL,,AUTO
         5 004703   000020 135007                    SBLA    16,DL
         5 004704   200042 755100                    STA     NUM_START,,AUTO

      997    13234    7                                 FIELD_SIZE = 12;

  13234  5 004705   000014 235007                    LDA     12,DL
         5 004706   200041 755100                    STA     FIELD_SIZE,,AUTO

      998    13235    7                               END;

      999    13236    6                            END;

     1000    13237                              %M_NUMBER(
     1001    13238                              VAR=" ",
     1002    13239                              START=NUM_START,
     1003    13240                              FLD_SIZE=FIELD_SIZE);

  13242  5 004707   000074 450000 3                  STZ     SIG

  13243  5 004710   200062 450100                    STZ     K_INDEX,,AUTO
         5 004711   004772 710000 5                  TRA     s:13255+3

  13244  5 004712   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004713   200042 036100                    ADLQ    NUM_START,,AUTO
         5 004714   200063 756100                    STQ     L_INDEX,,AUTO

  13245  5 004715   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004716   000003 402007                    MPY     3,DL
         5 004717   200022 470500                    LDP0    R$,,AUTO
         5 004720   003100 061506                    CSR     bolr='003'O
         5 004721   000000 000003                    BDSC    0,Q,PR0                  by=0,bit=0,n=3
         5 004722   200074 000044                    BDSC    AREA_LEFT+2,,AUTO        by=0,bit=0,n=36
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:211  
         5 004723   200074 236100                    LDQ     AREA_LEFT+2,,AUTO
         5 004724   000033 736000                    QLS     27
         5 004725   000073 676000 3                  ERQ     WORK_BUF
         5 004726   007000 376003                    ANQ     3584,DU
         5 004727   000073 656000 3                  ERSQ    WORK_BUF

  13246  5 004730   000073 236000 3                  LDQ     WORK_BUF
         5 004731   007000 316003                    CANQ    3584,DU
         5 004732   004761 601000 5                  TNZ     s:13252

  13247  5 004733   000074 234000 3                  SZN     SIG
         5 004734   004742 605000 5                  TPL     s:13248

  13247  5 004735   200063 235100                    LDA     L_INDEX,,AUTO
         5 004736   040005 100400                    MLR     fill='040'O
         5 004737   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 004740   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 004741   004767 710000 5                  TRA     s:13255

  13248  5 004742   200041 236100                    LDQ     FIELD_SIZE,,AUTO
         5 004743   000001 136007                    SBLQ    1,DL
         5 004744   004754 604000 5                  TMI     s:13249
         5 004745   200062 116100                    CMPQ    K_INDEX,,AUTO
         5 004746   004754 601000 5                  TNZ     s:13249

  13248  5 004747   200063 235100                    LDA     L_INDEX,,AUTO
         5 004750   040005 100400                    MLR     fill='040'O
         5 004751   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 004752   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1
         5 004753   004767 710000 5                  TRA     s:13255

  13249  5 004754   200063 235100                    LDA     L_INDEX,,AUTO
         5 004755   040005 100400                    MLR     fill='040'O
         5 004756   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 004757   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  13250  5 004760   004767 710000 5                  TRA     s:13255
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:212  

  13252  5 004761   400000 236003                    LDQ     -131072,DU
         5 004762   000074 756000 3                  STQ     SIG

  13253  5 004763   200063 235100                    LDA     L_INDEX,,AUTO
         5 004764   040005 100400                    MLR     fill='040'O
         5 004765   000073 000001 3                  ADSC9   WORK_BUF                 cn=0,n=1
         5 004766   000000 000001 xsym               ADSC9   VX_MBUF,A                cn=0,n=1

  13255  5 004767   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004770   000001 036007                    ADLQ    1,DL
         5 004771   200062 756100                    STQ     K_INDEX,,AUTO
         5 004772   200062 236100                    LDQ     K_INDEX,,AUTO
         5 004773   200041 116100                    CMPQ    FIELD_SIZE,,AUTO
         5 004774   004712 602000 5                  TNC     s:13244

     1004    13257    6                         IF RTYPE = 8 THEN DO;

  13257  5 004775   200030 235100                    LDA     RTYPE,,AUTO
         5 004776   000010 115007                    CMPA    8,DL
         5 004777   005013 601000 5                  TNZ     s:13266

     1005    13258    6                             CALL INSERT( VX_MBUF.CHARS, NUM_START+6, 2, '  ' );

  13258  5 005000   200042 235100                    LDA     NUM_START,,AUTO
         5 005001   040005 100400                    MLR     fill='040'O
         5 005002   000720 000002 2                  ADSC9   DIAG_TABS+9              cn=0,n=2
         5 005003   000001 400002 xsym               ADSC9   VX_MBUF+1,A              cn=2,n=2

     1006    13259    6                             IF SUBSTR( VX_MBUF.CHARS, NUM_START, 6 ) = ' '

  13259  5 005004   040000 106405                    CMPC    fill='040'O
         5 005005   000000 000006 xsym               ADSC9   VX_MBUF,A                cn=0,n=6
         5 005006   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 005007   005013 601000 5                  TNZ     s:13266

     1007    13260    6                             THEN VX_MBUF.CHARS_A(NUM_START+5) = '0';
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:213  

  13260  5 005010   040005 100400                    MLR     fill='040'O
         5 005011   000061 000001 6                  ADSC9   49                       cn=0,n=1
         5 005012   000001 200001 xsym               ADSC9   VX_MBUF+1,A              cn=1,n=1

     1008    13261    6                            END;

     1009    13262                              %MOVE_NAME(
     1010    13263                              REF1="VXD$TMPLT.NPOINTER",
     1011    13264                              NAME$=DNAME$,
     1012    13265                              TABBER="NAME_COL");

  13266  5 005013   200020 470500                    LDP0    P$,,AUTO
         5 005014   000001 220100                    LDX0    1,,PR0
         5 005015   000000 636010                    EAQ     0,X0
         5 005016   200011 036100                    ADLQ    DNAME$,,AUTO
         5 005017   200060 756100                    STQ     SOURCE$,,AUTO

  13267  5 005020   200060 471500                    LDP1    SOURCE$,,AUTO
         5 005021   100000 221100                    LDX1    0,,PR1
         5 005022   200074 741100                    STX1    AREA_LEFT+2,,AUTO
         5 005023   200074 220100                    LDX0    AREA_LEFT+2,,AUTO
         5 005024   200043 235100                    LDA     NAME_COL,,AUTO
         5 005025   040045 100540                    MLR     fill='040'O
         5 005026   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 005027   000000 000011 xsym               ADSC9   VX_MBUF,A                cn=0,n=*X1

     1013    13269    5                         VX_MBUF.CHARS_A( NAME_COL - 3 ) = SOURCE_FROM(J);

  13269  5 005030   200025 235100                    LDA     J,,AUTO
         5 005031   200043 236100                    LDQ     NAME_COL,,AUTO
         5 005032   040006 100405                    MLR     fill='040'O
         5 005033   000234 000001 2                  ADSC9   SOURCE_FROM,A            cn=0,n=1
         5 005034   777777 200001 xsym               ADSC9   VX_MBUF-1,Q              cn=1,n=1

     1014    13270    5                         IF NOT USED_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 2 ) = '*';

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:214  
  13270  5 005035   200003 234100                    SZN     USED_BIT,,AUTO
         5 005036   005042 604000 5                  TMI     s:13271

  13270  5 005037   040006 100400                    MLR     fill='040'O
         5 005040   000076 000001 6                  ADSC9   62                       cn=0,n=1
         5 005041   777777 400001 xsym               ADSC9   VX_MBUF-1,Q              cn=2,n=1

     1015    13271    5                         IF MULTIPLE_BIT THEN VX_MBUF.CHARS_A( NAME_COL - 1 ) = '+';

  13271  5 005042   200004 234100                    SZN     MULTIPLE_BIT,,AUTO
         5 005043   005047 605000 5                  TPL     s:13273

  13271  5 005044   040006 100400                    MLR     fill='040'O
         5 005045   000077 000001 6                  ADSC9   63                       cn=0,n=1
         5 005046   777777 600001 xsym               ADSC9   VX_MBUF-1,Q              cn=3,n=1

     1016    13272                              %BUMP_CTAB(INC=SIZE);

  13273  5 005047   000000 720000 xsym               LXL0    VX_CTAB
         5 005050   000000 236010 xsym               LDQ     VX_MAP_TABS_A,X0
         5 005051   200033 036100                    ADLQ    SIZE,,AUTO
         5 005052   000013 036007                    ADLQ    11,DL
         5 005053   200061 756100                    STQ     LAST_TAB,,AUTO

  13274  5 005054   000000 116010 xsym               CMPQ    VX_MAP_TABS_A,X0
         5 005055   005065 602000 5                  TNC     SKIP_IT_VALUE
         5 005056   005065 600000 5                  TZE     SKIP_IT_VALUE

  13275  5 005057   000000 235000 xsym               LDA     VX_CTAB
         5 005060   000001 035007                    ADLA    1,DL
         5 005061   000000 755000 xsym               STA     VX_CTAB

  13276  5 005062   000000 236005 xsym               LDQ     VX_MAP_TABS_A,AL
         5 005063   200061 116100                    CMPQ    LAST_TAB,,AUTO
         5 005064   005057 602000 5                  TNC     s:13275

     1017    13278    5   SKIP_IT_VALUE:
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:215  
     1018    13279    5                         P$ = S$;

  13279  5 005065   200014 236100       SKIP_IT_VAL* LDQ     S$,,AUTO
         5 005066   200020 756100                    STQ     P$,,AUTO

     1019    13280    5                        END;               /* Do while */

  13280  5 005067   200021 116100                    CMPQ    Q$,,AUTO
         5 005070   004424 602000 5                  TNC     s:13154
         5 005071   004424 600000 5                  TZE     s:13154

     1020    13281    5                     IF VX_CTAB ~= 0 THEN DO;

  13281  5 005072   000000 235000 xsym               LDA     VX_CTAB
         5 005073   005124 600000 5                  TZE     s:13306

     1021    13282    6                         IF NOT_WROTE THEN DO;

  13282  5 005074   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 005075   005111 605000 5                  TPL     s:13296

     1022    13283                                  %WR_LIT( MES1="DEF_SORT_VALUE(BIT_INX)" );

  13284  5 005076   000065 235000 6                  LDA     53
         5 005077   200037 236100                    LDQ     BIT_INX,,AUTO
         5 005100   200074 755100                    STA     AREA_LEFT+2,,AUTO
         5 005101   000024 402003                    MPY     20,DU
         5 005102   000102 036000 6                  ADLQ    66
         5 005103   200074 235100                    LDA     AREA_LEFT+2,,AUTO
         5 005104   000004 757000 xsym               STAQ    VX_MAP_LIT_LO_FPT_WRITE+4

  13285  5 005105   000000 630400 xsym               EPPR0   VX_MAP_LIT_LO_FPT_WRITE
         5 005106   440001 713400                    CLIMB   alt,write
         5 005107   401400 401760                    pmme    nvectors=4
         5 005110   005150 702000 5                  TSX2    MAP_IO_ERROR

     1023    13293    6                            END;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:216  

     1024    13294                              %M_WRITE(
     1025    13295                              BEFORE="VX_MBUF.LIT_BUF.VFC='B';");

  13296  5 005111   102000 236003                    LDQ     33792,DU
         5 005112   000000 552040 xsym               STBQ    VX_MBUF,'40'O

  13297  5 005113   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 005114   440001 713400                    CLIMB   alt,write
         5 005115   401400 401760                    pmme    nvectors=4
         5 005116   005150 702000 5                  TSX2    MAP_IO_ERROR

  13301  5 005117   040000 100400                    MLR     fill='040'O
         5 005120   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 005121   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  13302  5 005122   000000 450000 xsym               STZ     VX_CTAB

     1026    13304    5                        END;

  13304  5 005123   005136 710000 5                  TRA     s:13319

     1027    13305    5                     ELSE DO;

     1028    13306    6                         IF NOT NOT_WROTE THEN DO;

  13306  5 005124   200005 234100                    SZN     NOT_WROTE,,AUTO
         5 005125   005136 604000 5                  TMI     s:13319

     1029    13307                                  %M_WRITE;

  13309  5 005126   000000 630400 xsym               EPPR0   VX_MAP_LO_FPT_WRITE
         5 005127   440001 713400                    CLIMB   alt,write
         5 005130   401400 401760                    pmme    nvectors=4
         5 005131   005150 702000 5                  TSX2    MAP_IO_ERROR

  13313  5 005132   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:217  
         5 005133   000714 000002 2                  ADSC9   DIAG_TABS+5              cn=0,n=2
         5 005134   000000 000204 xsym               ADSC9   VX_MBUF                  cn=0,n=132

  13314  5 005135   000000 450000 xsym               STZ     VX_CTAB

     1030    13316    6                            END;           /* If ~NOT_WROTE then do; */

     1031    13317    5                        END;               /* Else do */

     1032    13318    4                    END;                   /* If P$ ~= addr(nil ) ... */

     1033    13319    3                 BIT_INX = BIT_INX + 1;

  13319  5 005136   200037 235100                    LDA     BIT_INX,,AUTO
         5 005137   000001 035007                    ADLA    1,DL
         5 005140   200037 755100                    STA     BIT_INX,,AUTO

     1034    13320    3                END;                       /* Do i = 1 to ... */

  13320  5 005141   200024 236100                    LDQ     I,,AUTO
         5 005142   000001 036007                    ADLQ    1,DL
         5 005143   200024 756100                    STQ     I,,AUTO
         5 005144   200024 235100                    LDA     I,,AUTO
         5 005145   000004 115007                    CMPA    4,DL
         5 005146   004364 602000 5                  TNC     s:13141

     1035    13321    2            END;

     1036    13322    1         RETURN;

  13322  5 005147   000000 702200 xent               TSX2  ! X66_ARET

     1037    13323        %EJECT;
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:218  
     1038    13324    1   MAP_IO_ERROR:
     1039    13325    1         CALL M$MERC                             ALTRET( MERC_ERROR );

  13325  5 005150   410007 713400       MAP_IO_ERROR CLIMB   alt,+4103
         5 005151   000000 401760                    pmme    nvectors=0
         5 005152   005155 702000 5                  TSX2    MERC_ERROR

     1040    13326              %ERROR_IT;

  13327  5 005153   000002 713400                    CLIMB   err
         5 005154   000000 401760                    pmme    nvectors=0

     1041    13329    1   MERC_ERROR:
     1042    13330    1         CALL VXE$MERC;

  13330  5 005155   000002 631400 xsym  MERC_ERROR   EPPR1   B_VECTNIL+2
         5 005156   000000 701000 xent               TSX1    VXE$MERC
         5 005157   000000 011000                    NOP     0

     1043    13331    1   END VXM$NODE;

  13331  5 005160   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:219  
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXM$NODE.
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:220  

 **** Variables and constants ****

  ****  Section 002 RoData VXM$NODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   644-0-0/c CHAR(51)    r     1 CSSBY                    701-0-0/c CHAR(23)    r     1 DCB_TEXT
   442-0-0/c CHAR(37)    r     1 DEF_CONSTANT
   366-0-0/c CHAR(58)    r     1 DEF_MULTIPLE(0:2)
   454-0-0/c CHAR(80)    r     1 DEF_SORT_NAME(0:2)
   550-0-0/c CHAR(80)    r     1 DEF_SORT_VALUE(0:2)
   707-0-0/w UBIN        r     1 DIAG_TABS(0:2)
    21-0-0/c CHAR(69)    r     1 INTERPR(0:6)
     0-0-0/c CHAR(65)    r     1 INTERPR_HDR
   241-0-0/c CHAR(55)    r     1 REF_PRIMARY(0:2)
   313-0-0/c CHAR(57)    r     1 REF_SECONDARY(0:2)
   212-0-0/c CHAR(8)     r     1 SC_TYPE(0:8)
   661-0-0/c CHAR(64)    r     1 SEG_CSSBY
   234-0-0/c CHAR        r     1 SOURCE_FROM(0:5)
   236-0-0/c CHAR(9)     r     1 UNNAMED

  ****  Section 003  Data  VXM$NODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   112-0-0/d STRC(432)   r     1 DIAG_FPT_WRITE            76-0-0/d STRC(432)   r     1 DIAG_LIT_FPT_WRITE
    50-0-0/c CHAR(73)    r     1 DIAG_NODE_HDR              0-0-0/c CHAR(39)    r     1 LOW_HIGH_SIZE_LIT
    12-0-0/c CHAR(39)    r     1 LOW_HIGH_SIZE_UNDERLINE
    24-0-0/c CHAR(39)    r     1 PROCT_TYPE(0:1)
    74-0-0/w BIT         r     1 SIG                       73-0-0/w STRC        r     1 WORK_BUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:221  

    72-0-0/w SBIN        r     1 AREA_LEFT                 17-0-0/w PTR         r     1 BASE$
    37-0-0/w UBIN        r     1 BIT_INX                   40-0-0/w UBIN        r     1 CON_INX
    15-0-0/w PTR         r     1 DCB_HEAD$                 16-0-0/w PTR         r     1 DCB_TAIL$
    11-0-0/w PTR         r     1 DNAME$                    41-0-0/w UBIN        r     1 FIELD_SIZE
    34-0-0/w UBIN        r     1 FSIZE                     47-0-0/w UBIN        r     1 GET
    24-0-0/w UBIN        r     1 I                         35-0-0/w UBIN        r     1 II
    52-0-0/w UBIN        r     1 INIT_SIZE                 25-0-0/w UBIN        r     1 J
    62-0-0/w UBIN        r     1 K_INDEX                   61-0-0/w UBIN        r     1 LAST_TAB
    63-0-0/w UBIN        r     1 L_INDEX                   57-0-0/w UBIN        r     1 MOVE_SIZE
     4-0-0/w BIT         r     1 MULTIPLE_BIT              10-0-0/w PTR         r     1 NAME$
    43-0-0/w UBIN        r     1 NAME_COL                   7-0-0/w BIT         r     1 NOT_DIAG_NODE_LINE
     6-0-0/w BIT         r     1 NOT_NODE_LINE              5-0-0/w BIT         r     1 NOT_WROTE
    31-0-0/w UBIN        r     1 NPAGE                     42-0-0/w UBIN        r     1 NUM_START
    45-0-0/w UBIN        r     1 N_D                       20-0-0/w PTR         r     1 P$
    51-0-0/w UBIN        r     1 PAGE_SIZE                 21-0-0/w PTR         r     1 Q$
    22-0-0/w PTR         r     1 R$                        53-0-0/w UBIN        r     1 REF_MES_SIZE
    30-0-0/w UBIN        r     1 RTYPE                     14-0-0/w PTR         r     1 S$
    54-0-0/w UBIN        r     1 SEGMENT                   33-0-0/w UBIN        r     1 SIZE
    13-0-0/w PTR         r     1 SNAME$                    60-0-0/w PTR         r     1 SOURCE$
    12-0-0/w PTR         r     1 START$                    66-0-0/w SBIN        r     1 S_SIZE(0:1)
    70-0-0/w SBIN        r     1 S_START(0:1)
    64-0-0/w SBIN        r     1 S_STOP(0:1)               46-0-0/w UBIN        r     1 TIES
    55-0-0/w UBIN        r     1 TRIGGER                   50-0-0/w UBIN        r     1 TSIZE
    32-0-0/w UBIN        r     1 TSIZE_READ                36-0-0/w UBIN        r     1 T_INX
     3-0-0/w BIT         r     1 USED_BIT                  56-0-0/w UBIN        r     1 VALUE
    56-0-0/w UBIN(18)    r     1 VALUE_A(0:1)

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 VX_CTAB                    0-0-0/w PTR         r     1 VX_CURR$
     0-0-0/w UBIN        r     1 VX_DEF_REC_A(0:3)
     0-0-0/w UBIN        r     1 VX_HDR_FIELD1              0-0-0/w UBIN        r     1 VX_HDR_FIELD2
     0-0-0/w BIT         r     1 VX_LO_DO_DIFFER            0-0-0/w PTR         r     1 VX_MAP$
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:222  
     0-0-0/w PTR         r     1 VX_MAP_AREA$               0-0-0/w UBIN        r     1 VX_MAP_AREA_SIZE
     0-0-0/w STRC(1188)  r     1 VX_MAP_HDR                 0-0-0/w STRC(1188)  r     1 VX_MAP_HDR0
     0-0-0/w STRC(1188)  r     1 VX_MAP_HDR1
     0-0-0/d STRC(432)   r     1 VX_MAP_LIT_LO_FPT_WRITE
     0-0-0/d STRC(432)   r     1 VX_MAP_LO_FPT_WRITE        0-0-0/w SBIN        r     1 VX_MAP_NUM
     0-0-0/w UBIN        r     1 VX_MAP_REC_SIZE_A(0:9)
     0-0-0/w UBIN        r     1 VX_MAP_TABS_A(0:4)
     0-0-0/w PTR         r     1 VX_MAP_TREE_START$         0-0-0/w STRC(1188)  r     1 VX_MAP_UTS_HDR
     0-0-0/w UBIN        r     1 VX_MAP_WIDTH               0-0-0/w UBIN        r     1 VX_MAP_WIDTH_HDR
     0-0-0/w UBIN        r     1 VX_MAX_CTAB                0-0-0/w STRC(1188)  r     1 VX_MBUF
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w STRC(4572)  r     1 VX_O
     0-0-0/w UBIN        r     1 VX_REF_REC_A(0:3)
     0-0-0/w STRC(1440)  r     1 VX_RU_HEAD_BUF
     0-0-0/w UBIN        r     1 VX_SEGID(0:5)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(18)    r     1 B$DNAME                    0-0-0/w STRC(72)    r     1 B$SEGDEF
     0-0-0N  NULL        r     1 M$DO                       0-0-0/c ACHR        r     1 REF$MES
     0-0-0/w ASTR(9)     r     1 T$C                        0-0-0/c ASTR(9)     r     1 T$C_UNAL
     0-0-0/b BIT (3)     r     1 THREE$BITS(0:11)
     0-0-0/h UBIN(18)    r     1 VX$HALF_A(0:0)
     0-0-0/w STRC(3672)  r     1 VX$NODE                    0-0-0/w STRC(108)   r     1 VX$SC
     0-0-0/w STRC(216)   r     1 VX$TREE_NODE               0-0-0/w STRC(72)    r     1 VXD$TMPLT
     0-0-0/w STRC        r     1 VXR$TMPLT


   Procedure VXM$NODE requires 2673 words for executable code.
   Procedure VXM$NODE requires 72 words of local(AUTO) storage.
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:223  

    No errors detected in file VXM$NODE.:E05TSI    .
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:224  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:225  
          MINI XREF LISTING

AREA_LEFT
     11673**DCL     12065<<ASSIGN  12086>>IF      12087>>ASSIGN  12099<<ASSIGN  12099>>ASSIGN  12119<<ASSIGN
     12119>>ASSIGN  12120>>IF      12120<<ASSIGN
B$DNAME.COUNT
     10735**DCL     10742--IMP-SIZ 12173>>ASSIGN  12176>>ASSIGN  12229>>CALLBLT 12229>>CALLBLT 12240>>CALLBLT
     12240>>CALLBLT 12321>>ASSIGN  12357>>DOWHILE 12357>>DOWHILE 12370>>CALLBLT 12370>>CALLBLT 12521>>CALLBLT
     12521>>CALLBLT 12523>>IF      12674>>CALLBLT 12674>>CALLBLT 12676>>IF      12749>>CALLBLT 12749>>CALLBLT
     12813>>DOWHILE 12813>>DOWHILE 12858>>ASSIGN  12886>>DOWHILE 12886>>DOWHILE 12899>>CALLBLT 12899>>CALLBLT
     12992>>ASSIGN  13020>>DOWHILE 13020>>DOWHILE 13079>>CALLBLT 13079>>CALLBLT 13180>>ASSIGN  13208>>DOWHILE
     13208>>DOWHILE 13267>>CALLBLT 13267>>CALLBLT
B$DNAME.TEXT
     10742**DCL     12229>>CALLBLT 12240>>CALLBLT 12357>>DOWHILE 12357>>DOWHILE 12370>>CALLBLT 12521>>CALLBLT
     12674>>CALLBLT 12749>>CALLBLT 12813>>DOWHILE 12813>>DOWHILE 12886>>DOWHILE 12886>>DOWHILE 12899>>CALLBLT
     13020>>DOWHILE 13020>>DOWHILE 13079>>CALLBLT 13208>>DOWHILE 13208>>DOWHILE 13267>>CALLBLT
B$SEGDEF.AD.OU
     11172**DCL     11177--REDEF
B$SEGDEF.AD.OU.OFFSET
     11175**DCL     13042>>ASSIGN  13230>>ASSIGN
B$SEGDEF.LFLAGS
     11187**DCL     11198--REDEF
B$SEGDEF.SEG.SEGID
     11200**DCL     13043>>ASSIGN  13231>>ASSIGN
B$SEGDEF.VALUE
     11149**DCL     11152--REDEF   11156--REDEF
BASE$
     11574**DCL     12442<<ASSIGN  12487>>ASSIGN  12489>>ASSIGN
BIT_INX
     11614**DCL     12153<<ASSIGN  12158>>IF      12158>>IF      12164>>ASSIGN  12168>>ASSIGN  12298<<ASSIGN
     12298>>ASSIGN  12305<<ASSIGN  12310>>IF      12336>>ASSIGN  12340>>ASSIGN  12393>>ASSIGN  12397>>ASSIGN
     12428<<ASSIGN  12428>>ASSIGN  12956<<ASSIGN  12999>>ASSIGN  13096>>ASSIGN  13131<<ASSIGN  13131>>ASSIGN
     13139<<ASSIGN  13187>>ASSIGN  13284>>ASSIGN  13319<<ASSIGN  13319>>ASSIGN
CON_INX
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:226  
     11615**DCL     12970<<ASSIGN  12976<<ASSIGN  13029>>IF      13158<<ASSIGN  13164<<ASSIGN  13217>>IF
CSSBY
     11504**DCL     12445--ASSIGN
DCB_HEAD$
     11572**DCL     12440<<ASSIGN  12483>>IF      12484<<ASSIGN  12731>>IF      12748>>ASSIGN  12752>>IF
     12761>>ASSIGN  12783>>ASSIGN  12811>>ASSIGN  12812>>ASSIGN  12823<<ASSIGN
DCB_TAIL$
     11573**DCL     12441<<ASSIGN  12487>>ASSIGN  12490<<ASSIGN
DCB_TEXT
     11508**DCL     12733--ASSIGN
DEF_CONSTANT
     11494**DCL     12865--ASSIGN  12913--ASSIGN
DEF_MULTIPLE
     11490**DCL     12336--ASSIGN  12340--ASSIGN  12393--ASSIGN  12397--ASSIGN
DEF_SORT_NAME
     11496**DCL     12999--ASSIGN  13096--ASSIGN
DEF_SORT_VALUE
     11500**DCL     13187--ASSIGN  13284--ASSIGN
DIAG_FPT_WRITE
     11885**DCL     12207<>CALL    12278<>CALL    12290<>CALL    12350<>CALL    12408<>CALL    12420<>CALL
DIAG_FPT_WRITE.STATION_
     11887**DCL     11887--REDEF
DIAG_FPT_WRITE.V
     11888**DCL     11885--DCLINIT
DIAG_FPT_WRITE.V.DVBYTE.VFC#
     11894**DCL     11894--REDEF
DIAG_LIT_FPT_WRITE
     11850**DCL     12187<>CALL    12198<>CALL    12259<>CALL    12269<>CALL    12330<>CALL    12341<>CALL
     12388<>CALL    12398<>CALL
DIAG_LIT_FPT_WRITE.BUF_
     11850**DCL     12186<<ASSIGN  12197<<ASSIGN  12258<<ASSIGN  12268<<ASSIGN  12329<<ASSIGN  12340<<ASSIGN
     12387<<ASSIGN  12397<<ASSIGN
DIAG_LIT_FPT_WRITE.STATION_
     11852**DCL     11852--REDEF
DIAG_LIT_FPT_WRITE.V
     11853**DCL     11850--DCLINIT
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:227  
DIAG_LIT_FPT_WRITE.V.DVBYTE.VFC#
     11859**DCL     11859--REDEF
DIAG_NODE_HDR
     11510**DCL     11968<<CALLBLT 12186--ASSIGN  12258--ASSIGN  12329--ASSIGN  12387--ASSIGN
DIAG_TABS
     11627**DCL     12179>>IF      12229>>CALLBLT 12232>>ASSIGN  12244>>ASSIGN  12245>>DOWHILE 12322>>IF
     12373>>ASSIGN  12374>>DOWHILE
DNAME$
     11568**DCL     12151<<ASSIGN  12176>>ASSIGN  12239>>ASSIGN  12320>>ASSIGN  12357>>DOWHILE 12357>>DOWHILE
     12369>>ASSIGN  12857>>ASSIGN  12886>>DOWHILE 12886>>DOWHILE 12898>>ASSIGN  12991>>ASSIGN  13020>>DOWHILE
     13020>>DOWHILE 13078>>ASSIGN  13146<>CALL    13179>>ASSIGN  13208>>DOWHILE 13208>>DOWHILE 13266>>ASSIGN
DONE_DCB
     12828**LABEL   12819--GOTO
EMPTY_SC
     12564**LABEL   12457--GOTO    12491--GOTO
EMPTY_SEG_SC
     12717**LABEL   12604--GOTO
FIELD_SIZE
     11616**DCL     13033<<ASSIGN  13040<<ASSIGN  13046<<ASSIGN  13055>>DOINDEX 13060>>IF      13221<<ASSIGN
     13228<<ASSIGN  13234<<ASSIGN  13243>>DOINDEX 13248>>IF
FSIZE
     11611**DCL     12174<<ASSIGN  12176<<ASSIGN  12176>>ASSIGN  12179>>IF      12244>>ASSIGN
GET
     11622**DCL     12087<<ASSIGN  12092>>IF      12094>>ASSIGN  12096<>CALL    12098>>ASSIGN  12099>>ASSIGN
I
     11598**DCL     11599--REDEF   11994<<DOINDEX 11996>>ASSIGN  12038<<DOINDEX 12039>>IF      12040>>CALL
     12040>>CALL    12041>>CALL    12041>>CALL    12043>>CALLBLT 12044>>CALL    12044>>CALL    12046>>ASSIGN
     12066<<DOINDEX 12067>>ASSIGN  12068>>ASSIGN  12069>>ASSIGN  12070>>ASSIGN  12071>>DOCASE  12076>>ASSIGN
     12101<>CALL    12114>>ASSIGN  12115>>ASSIGN  12121>>IF      12122>>IF      12134>>CALL    12134>>CALL
     12154<<DOINDEX 12156>>ASSIGN  12306<<DOINDEX 12308>>ASSIGN  12841<<DOINDEX 12842>>IF      12851>>IF
     12957<<DOINDEX 12959>>ASSIGN  13140<<DOINDEX 13142>>ASSIGN
II
     11612**DCL     12152<<DOINDEX 12158>>IF      12158>>IF      12163>>IF      12213>>IF
INIT_SIZE
     11625**DCL     12078<<ASSIGN  12083<<ASSIGN  12086>>IF      12087>>ASSIGN  12101<>CALL
INTERPR
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:228  
     11447**DCL     11996--ASSIGN
INTERPR_HDR
     11445**DCL     11985--ASSIGN
J
     11600**DCL     11601--REDEF   12968<<ASSIGN  12974<<ASSIGN  12979>>DOCASE  13081>>ASSIGN  13156<<ASSIGN
     13162<<ASSIGN  13167>>DOCASE  13269>>ASSIGN
JUMP_OUT
     12369**LABEL   12356--GOTO    12362--GOTO
JUMP_OUT_CON
     12898**LABEL   12890--GOTO
JUMP_OUT_NAME
     13028**LABEL   13024--GOTO
JUMP_OUT_VALUE
     13216**LABEL   13212--GOTO
K
     11602**DCL     11603--REDEF
K_INDEX
     11651**DCL     12499<<DOINDEX 12500>>ASSIGN  12501>>ASSIGN  12504>>IF      12540<<DOINDEX 12541>>ASSIGN
     12542>>ASSIGN  12545>>IF      12632<<DOINDEX 12633>>ASSIGN  12634>>ASSIGN  12637>>IF      12652<<DOINDEX
     12653>>ASSIGN  12654>>ASSIGN  12657>>IF      12693<<DOINDEX 12694>>ASSIGN  12695>>ASSIGN  12698>>IF
     12763<<DOINDEX 12764>>ASSIGN  12765>>ASSIGN  12768>>IF      12785<<DOINDEX 12786>>ASSIGN  12787>>ASSIGN
     12790>>IF      13055<<DOINDEX 13056>>ASSIGN  13057>>ASSIGN  13060>>IF      13243<<DOINDEX 13244>>ASSIGN
     13245>>ASSIGN  13248>>IF
L
     11604**DCL     11605--REDEF
LAST_SC
     12465**LABEL   12461--GOTO
LAST_SEG_SC
     12613**LABEL   12609--GOTO
LAST_TAB
     11641**DCL     12244<<ASSIGN  12245>>DOWHILE 12373<<ASSIGN  12374>>DOWHILE 12902<<ASSIGN  12903>>DOWHILE
     13085<<ASSIGN  13086>>DOWHILE 13273<<ASSIGN  13274>>DOWHILE
LOW_HIGH_SIZE_LIT
     11455**DCL     12009--ASSIGN
LOW_HIGH_SIZE_UNDERLINE
     11457**DCL     12019--ASSIGN
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:229  
L_INDEX
     11652**DCL     12500<<ASSIGN  12503>>ASSIGN  12504>>ASSIGN  12505>>ASSIGN  12509>>ASSIGN  12541<<ASSIGN
     12544>>ASSIGN  12545>>ASSIGN  12546>>ASSIGN  12550>>ASSIGN  12633<<ASSIGN  12636>>ASSIGN  12637>>ASSIGN
     12638>>ASSIGN  12642>>ASSIGN  12653<<ASSIGN  12656>>ASSIGN  12657>>ASSIGN  12658>>ASSIGN  12662>>ASSIGN
     12694<<ASSIGN  12697>>ASSIGN  12698>>ASSIGN  12699>>ASSIGN  12703>>ASSIGN  12764<<ASSIGN  12767>>ASSIGN
     12768>>ASSIGN  12769>>ASSIGN  12773>>ASSIGN  12786<<ASSIGN  12789>>ASSIGN  12790>>ASSIGN  12791>>ASSIGN
     12795>>ASSIGN  13056<<ASSIGN  13059>>ASSIGN  13060>>ASSIGN  13061>>ASSIGN  13065>>ASSIGN  13244<<ASSIGN
     13247>>ASSIGN  13248>>ASSIGN  13249>>ASSIGN  13253>>ASSIGN
M$ERR
      5085**DCL-ENT 13327--CALL
M$MERC
      5129**DCL-ENT 13325--CALL
M$WRITE
      5074**DCL-ENT 11955--CALL    11957--CALL    11959--CALL    11976--CALL    11986--CALL    11997--CALL
     12010--CALL    12020--CALL    12047--CALL    12182--CALL    12187--CALL    12194--CALL    12198--CALL
     12205--CALL    12207--CALL    12254--CALL    12259--CALL    12265--CALL    12269--CALL    12276--CALL
     12278--CALL    12288--CALL    12290--CALL    12325--CALL    12330--CALL    12337--CALL    12341--CALL
     12348--CALL    12350--CALL    12383--CALL    12388--CALL    12394--CALL    12398--CALL    12406--CALL
     12408--CALL    12418--CALL    12420--CALL    12446--CALL    12473--CALL    12556--CALL    12568--CALL
     12584--CALL    12594--CALL    12617--CALL    12709--CALL    12721--CALL    12734--CALL    12802--CALL
     12828--CALL    12866--CALL    12877--CALL    12914--CALL    12926--CALL    12938--CALL    13000--CALL
     13011--CALL    13097--CALL    13109--CALL    13121--CALL    13188--CALL    13199--CALL    13285--CALL
     13297--CALL    13309--CALL
MAP_IO_ERROR
     13325**LABEL   11955--CALLALT 11957--CALLALT 11959--CALLALT 11976--CALLALT 11986--CALLALT 11997--CALLALT
     12010--CALLALT 12020--CALLALT 12047--CALLALT 12182--CALLALT 12187--CALLALT 12194--CALLALT 12198--CALLALT
     12205--CALLALT 12207--CALLALT 12254--CALLALT 12259--CALLALT 12265--CALLALT 12269--CALLALT 12276--CALLALT
     12278--CALLALT 12288--CALLALT 12290--CALLALT 12325--CALLALT 12330--CALLALT 12337--CALLALT 12341--CALLALT
     12348--CALLALT 12350--CALLALT 12383--CALLALT 12388--CALLALT 12394--CALLALT 12398--CALLALT 12406--CALLALT
     12408--CALLALT 12418--CALLALT 12420--CALLALT 12446--CALLALT 12473--CALLALT 12556--CALLALT 12568--CALLALT
     12584--CALLALT 12594--CALLALT 12617--CALLALT 12709--CALLALT 12721--CALLALT 12734--CALLALT 12802--CALLALT
     12828--CALLALT 12866--CALLALT 12877--CALLALT 12914--CALLALT 12926--CALLALT 12938--CALLALT 13000--CALLALT
     13011--CALLALT 13097--CALLALT 13109--CALLALT 13121--CALLALT 13188--CALLALT 13199--CALLALT 13285--CALLALT
     13297--CALLALT 13309--CALLALT
MERC_ERROR
     13330**LABEL   13325--CALLALT
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:230  
MOVE_SIZE
     11636**DCL     11637--IMP-SIZ 12751<<ASSIGN  12753>>CALLBLT 12777>>CALLBLT
MULTIPLE_BIT
     11425**DCL     12971<<ASSIGN  12977<<ASSIGN  13083>>IF      13159<<ASSIGN  13165<<ASSIGN  13271>>IF
NAME$
     11567**DCL     12093<<ASSIGN  12096<>CALL    12123<<ASSIGN  12129<<ASSIGN  12134<>CALL    12150<<ASSIGN
     12173>>ASSIGN  12228>>ASSIGN  12439<<ASSIGN  12520>>ASSIGN  12673>>ASSIGN  12748>>ASSIGN  12812>>ASSIGN
     12813>>DOWHILE 12813>>DOWHILE
NAME_COL
     11618**DCL     13028<<ASSIGN  13030>>ASSIGN  13032>>ASSIGN  13039>>ASSIGN  13045>>ASSIGN  13079>>CALLBLT
     13081>>ASSIGN  13082>>ASSIGN  13083>>ASSIGN  13216<<ASSIGN  13218>>ASSIGN  13220>>ASSIGN  13227>>ASSIGN
     13233>>ASSIGN  13267>>CALLBLT 13269>>ASSIGN  13270>>ASSIGN  13271>>ASSIGN
NEXT
     12250**LABEL   12217--GOTO    12222--GOTO
NOT_DIAG_NODE_LINE
     11428**DCL     11974<<ASSIGN  12185>>IF      12188<<ASSIGN  12257>>IF      12260<<ASSIGN  12328>>IF
     12331<<ASSIGN  12386>>IF      12389<<ASSIGN
NOT_NODE_LINE
     11427**DCL     11977<<ASSIGN  11980<<ASSIGN  12181>>IF      12183<<ASSIGN  12253>>IF      12255<<ASSIGN
     12324>>IF      12326<<ASSIGN  12382>>IF      12384<<ASSIGN
NOT_WROTE
     11426**DCL     12155<<ASSIGN  12190>>IF      12191<<ASSIGN  12262>>IF      12285>>IF      12307<<ASSIGN
     12333>>IF      12334<<ASSIGN  12391>>IF      12415>>IF      12853<<ASSIGN  12862>>IF      12863<<ASSIGN
     12911>>IF      12935>>IF      12958<<ASSIGN  12996>>IF      12997<<ASSIGN  13094>>IF      13118>>IF
     13141<<ASSIGN  13184>>IF      13185<<ASSIGN  13282>>IF      13306>>IF
NPAGE
     11608**DCL     12101<>CALL    12121>>IF
NUM_START
     11617**DCL     13032<<ASSIGN  13039<<ASSIGN  13045<<ASSIGN  13056>>ASSIGN  13070>>CALLBLT 13071>>IF
     13072>>ASSIGN  13220<<ASSIGN  13227<<ASSIGN  13233<<ASSIGN  13244>>ASSIGN  13258>>CALLBLT 13259>>IF
     13260>>ASSIGN
N_D
     11620**DCL     12124<<ASSIGN  12131<<ASSIGN  12134<>CALL
P$
     11576**DCL     11966<<ASSIGN  11967>>CALLBLT 11967>>CALLBLT 11968>>CALLBLT 11968>>CALLBLT 12157<<ASSIGN
     12158>>IF      12172>>DOWHILE 12173>>ASSIGN  12175>>IF      12176>>ASSIGN  12216>>IF      12221>>IF
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:231  
     12228>>ASSIGN  12231>>IF      12239>>ASSIGN  12250<<ASSIGN  12250>>ASSIGN  12309<<ASSIGN  12310>>IF
     12314>>DOWHILE 12315>>ASSIGN  12317>>IF      12317>>IF      12319>>IF      12320>>ASSIGN  12369>>ASSIGN
     12379<<ASSIGN  12436<<ASSIGN  12437>>IF      12442>>ASSIGN  12454>>DOWHILE 12455>>IF      12456>>ASSIGN
     12457>>IF      12459>>DOWHILE 12465>>DOCASE  12484>>ASSIGN  12487>>ASSIGN  12489>>ASSIGN  12489>>ASSIGN
     12490>>ASSIGN  12497>>ASSIGN  12514>>CALLBLT 12516>>IF      12520>>ASSIGN  12538>>ASSIGN  12564<<ASSIGN
     12602>>DOWHILE 12603>>ASSIGN  12604>>IF      12606>>DOWHILE 12606>>DOWHILE 12613>>IF      12614>>ASSIGN
     12625>>ASSIGN  12630>>ASSIGN  12650>>ASSIGN  12667>>CALLBLT 12669>>IF      12673>>ASSIGN  12691>>ASSIGN
     12717<<ASSIGN  12742<<ASSIGN  12818>>ASSIGN  12843<<ASSIGN  12847<<ASSIGN  12850>>IF      12854>>DOWHILE
     12855>>ASSIGN  12856>>IF      12857>>ASSIGN  12898>>ASSIGN  12908<<ASSIGN  12960<<ASSIGN  12961>>IF
     12963>>DOWHILE 12964>>ASSIGN  12965>>IF      12968>>ASSIGN  12969>>ASSIGN  12971>>ASSIGN  12974>>ASSIGN
     12975>>ASSIGN  12977>>ASSIGN  12991>>ASSIGN  13031>>ASSIGN  13038>>ASSIGN  13042>>ASSIGN  13043>>ASSIGN
     13078>>ASSIGN  13091<<ASSIGN  13143<<ASSIGN  13144>>IF      13146<>CALL    13153>>DOWHILE 13154>>ASSIGN
     13155>>IF      13156>>ASSIGN  13157>>ASSIGN  13159>>ASSIGN  13162>>ASSIGN  13163>>ASSIGN  13165>>ASSIGN
     13179>>ASSIGN  13219>>ASSIGN  13226>>ASSIGN  13230>>ASSIGN  13231>>ASSIGN  13266>>ASSIGN  13279<<ASSIGN
PAGE_SIZE
     11624**DCL     12077<<ASSIGN  12082<<ASSIGN  12083>>ASSIGN  12085>>IF      12101<>CALL
PRINT_SEG_SECTIONS
     12568**LABEL   12455--GOTO
PROCT_TYPE
     11459**DCL     12040<>CALL    12041<>CALL    12043<<CALLBLT 12044<>CALL    12046--ASSIGN
Q$
     11577**DCL     12171<<ASSIGN  12172>>DOWHILE 12313<<ASSIGN  12314>>DOWHILE 12356>>IF      12362>>IF
     12438<<ASSIGN  12454>>DOWHILE 12458>>IF      12461>>IF      12602>>DOWHILE 12605>>IF      12609>>IF
     12818<<ASSIGN  12819>>IF      12820>>ASSIGN  12844<<ASSIGN  12848<<ASSIGN  12854>>DOWHILE 12885>>IF
     12890>>IF      12962<<ASSIGN  12963>>DOWHILE 13019>>IF      13024>>IF      13145<<ASSIGN  13146<>CALL
     13153>>DOWHILE 13207>>IF      13212>>IF
R$
     11578**DCL     11965<<ASSIGN  11966>>ASSIGN  12164<<ASSIGN  12168<<ASSIGN  12193>>ASSIGN  12197>>ASSIGN
     12264>>ASSIGN  12268>>ASSIGN  12497<<ASSIGN  12501>>ASSIGN  12538<<ASSIGN  12542>>ASSIGN  12630<<ASSIGN
     12634>>ASSIGN  12650<<ASSIGN  12654>>ASSIGN  12691<<ASSIGN  12695>>ASSIGN  12761<<ASSIGN  12765>>ASSIGN
     12783<<ASSIGN  12787>>ASSIGN  12812<<ASSIGN  12813>>DOWHILE 12813>>DOWHILE 13031<<ASSIGN  13038<<ASSIGN
     13044<<ASSIGN  13057>>ASSIGN  13219<<ASSIGN  13226<<ASSIGN  13232<<ASSIGN  13245>>ASSIGN
READ_RECORDS
     12062**LABEL   11981--GOTO
REF$MES
     11481**DCL     12193--ASSIGN  12197--ASSIGN  12264--ASSIGN  12268--ASSIGN
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:232  
REF_MES_SIZE
     11626**DCL     11481--IMP-SIZ 12165<<ASSIGN  12169<<ASSIGN  12193>>ASSIGN  12197>>ASSIGN  12264>>ASSIGN
     12268>>ASSIGN
REF_PRIMARY
     11482**DCL     12164--ASSIGN  12165--ASSIGN
REF_SECONDARY
     11486**DCL     12168--ASSIGN  12169--ASSIGN
RTYPE
     11607**DCL     12156<<ASSIGN  12157>>ASSIGN  12171>>ASSIGN  12308<<ASSIGN  12309>>ASSIGN  12313>>ASSIGN
     12316>>IF      12959<<ASSIGN  12960>>ASSIGN  12962>>ASSIGN  12965>>IF      13036>>DOCASE  13069>>IF
     13142<<ASSIGN  13143>>ASSIGN  13145>>ASSIGN  13146<>CALL    13155>>IF      13224>>DOCASE  13257>>IF
S$
     11571**DCL     12315<<ASSIGN  12356>>IF      12357>>DOWHILE 12357>>DOWHILE 12361<<ASSIGN  12361>>ASSIGN
     12362>>IF      12379>>ASSIGN  12456<<ASSIGN  12458>>IF      12459>>DOWHILE 12460<<ASSIGN  12460>>ASSIGN
     12461>>IF      12564>>ASSIGN  12603<<ASSIGN  12605>>IF      12606>>DOWHILE 12606>>DOWHILE 12608<<ASSIGN
     12608>>ASSIGN  12609>>IF      12717>>ASSIGN  12811<<ASSIGN  12813>>DOWHILE 12813>>DOWHILE 12818>>ASSIGN
     12819>>IF      12820<<ASSIGN  12823>>ASSIGN  12855<<ASSIGN  12885>>IF      12886>>DOWHILE 12886>>DOWHILE
     12889<<ASSIGN  12889>>ASSIGN  12890>>IF      12908>>ASSIGN  12964<<ASSIGN  13019>>IF      13020>>DOWHILE
     13020>>DOWHILE 13023<<ASSIGN  13023>>ASSIGN  13024>>IF      13091>>ASSIGN  13154<<ASSIGN  13207>>IF
     13208>>DOWHILE 13208>>DOWHILE 13211<<ASSIGN  13211>>ASSIGN  13212>>IF      13279>>ASSIGN
SC_TYPE
     11462**DCL     12514--CALLBLT 12514>>CALLBLT 12521--CALLBLT 12524--CALLBLT 12530--CALLBLT 12667--CALLBLT
     12667>>CALLBLT 12674--CALLBLT 12677--CALLBLT 12683--CALLBLT 12749--CALLBLT 12751--ASSIGN  12777>>CALLBLT
SEGMENT
     11628**DCL     12591<<ASSIGN  12613>>IF      12614<<ASSIGN  12625>>ASSIGN
SEG_CSSBY
     11506**DCL     12593--ASSIGN
SIG
     11650**DCL     12498<<ASSIGN  12503>>IF      12508<<ASSIGN  12539<<ASSIGN  12544>>IF      12549<<ASSIGN
     12631<<ASSIGN  12636>>IF      12641<<ASSIGN  12651<<ASSIGN  12656>>IF      12661<<ASSIGN  12692<<ASSIGN
     12697>>IF      12702<<ASSIGN  12762<<ASSIGN  12767>>IF      12772<<ASSIGN  12784<<ASSIGN  12789>>IF
     12794<<ASSIGN  13054<<ASSIGN  13059>>IF      13064<<ASSIGN  13242<<ASSIGN  13247>>IF      13252<<ASSIGN
SIZE
     11610**DCL     11969<<ASSIGN  11973<>CALL    12126<<ASSIGN  12130<<ASSIGN  12134<>CALL    12173<<ASSIGN
     12174>>ASSIGN  12232>>ASSIGN  12321<<ASSIGN  12322>>IF      12373>>ASSIGN  12858<<ASSIGN  12859>>IF
     12902>>ASSIGN  12992<<ASSIGN  12993>>IF      13085>>ASSIGN  13180<<ASSIGN  13181>>IF      13273>>ASSIGN
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:233  
SKIP_IT
     12379**LABEL   12317--GOTO    12319--GOTO
SKIP_IT_CON
     12908**LABEL   12856--GOTO
SKIP_IT_NAME
     13091**LABEL   12986--GOTO    12989--GOTO
SKIP_IT_VALUE
     13279**LABEL   13174--GOTO    13177--GOTO
SNAME$
     11570**DCL     12320<<ASSIGN  12321>>ASSIGN  12357>>DOWHILE 12357>>DOWHILE 12857<<ASSIGN  12858>>ASSIGN
     12886>>DOWHILE 12886>>DOWHILE 12991<<ASSIGN  12992>>ASSIGN  13020>>DOWHILE 13020>>DOWHILE 13179<<ASSIGN
     13180>>ASSIGN  13208>>DOWHILE 13208>>DOWHILE
SOURCE$
     11638**DCL     12228<<ASSIGN  12229>>CALLBLT 12229>>CALLBLT 12229>>CALLBLT 12239<<ASSIGN  12240>>CALLBLT
     12240>>CALLBLT 12240>>CALLBLT 12369<<ASSIGN  12370>>CALLBLT 12370>>CALLBLT 12370>>CALLBLT 12520<<ASSIGN
     12521>>CALLBLT 12521>>CALLBLT 12521>>CALLBLT 12523>>IF      12673<<ASSIGN  12674>>CALLBLT 12674>>CALLBLT
     12674>>CALLBLT 12676>>IF      12748<<ASSIGN  12749>>CALLBLT 12749>>CALLBLT 12749>>CALLBLT 12898<<ASSIGN
     12899>>CALLBLT 12899>>CALLBLT 12899>>CALLBLT 13078<<ASSIGN  13079>>CALLBLT 13079>>CALLBLT 13079>>CALLBLT
     13266<<ASSIGN  13267>>CALLBLT 13267>>CALLBLT 13267>>CALLBLT
SOURCE_FROM
     11472**DCL     13081>>ASSIGN  13269>>ASSIGN
START$
     11569**DCL     12064<<ASSIGN  12101<>CALL    12118<<ASSIGN  12118>>ASSIGN
S_SIZE
     11671**DCL     12032<<ASSIGN  12037<<ASSIGN  12039>>IF      12044<>CALL
S_START
     11672**DCL     12028<<ASSIGN  12033<<ASSIGN  12040<>CALL
S_STOP
     11670**DCL     12029<<ASSIGN  12034<<ASSIGN  12041<>CALL
T$C.COUNT
     11330**DCL     11331--IMP-SIZ
T$C_UNAL.CHARS
     11334**DCL     11967>>CALLBLT 11968>>CALLBLT
T$C_UNAL.COUNT
     11333**DCL     11334--IMP-SIZ 11967>>CALLBLT 11968>>CALLBLT
THREE$BITS
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:234  
     11644**DCL     12501>>ASSIGN  12542>>ASSIGN  12634>>ASSIGN  12654>>ASSIGN  12695>>ASSIGN  12765>>ASSIGN
     12787>>ASSIGN  13057>>ASSIGN  13245>>ASSIGN
TIES
     11621**DCL     12125<<ASSIGN  12132<<ASSIGN  12134<>CALL
TRIGGER
     11629**DCL     12443<<ASSIGN  12467<<ASSIGN  12469>>IF      12470<<ASSIGN
TSIZE
     11623**DCL     12076<<ASSIGN  12077>>ASSIGN  12078>>ASSIGN  12081<<ASSIGN  12085>>IF      12101<>CALL
TSIZE_READ
     11609**DCL     12101<>CALL    12113>>IF      12118>>ASSIGN  12119>>ASSIGN
T_INX
     11613**DCL     12232<<ASSIGN  12233>>ASSIGN  12234>>ASSIGN  12240>>CALLBLT
UNNAMED
     11479**DCL     12530--CALLBLT 12530>>CALLBLT 12683--CALLBLT 12683>>CALLBLT
USED_BIT
     11424**DCL     12969<<ASSIGN  12975<<ASSIGN  12984>>IF      13082>>IF      13157<<ASSIGN  13163<<ASSIGN
     13172>>IF      13270>>IF
VALUE
     11630**DCL     11631--REDEF   13044--ASSIGN  13232--ASSIGN
VALUE_A
     11631**DCL     13042<<ASSIGN  13043<<ASSIGN  13230<<ASSIGN  13231<<ASSIGN
VX$HALF_A
     11298**DCL     11966>>ASSIGN
VX$NODE.ADDR_START_A
     10790**DCL     10791--REDEF
VX$NODE.ADDR_STOP_A
     10795**DCL     10796--REDEF
VX$NODE.L_PREV_SIZE
     10848**DCL     10859--REDEF
VX$NODE.L_PREV_SIZE_A
     10859**DCL     12070<<ASSIGN
VX$NODE.L_SC_START
     10867**DCL     10872--REDEF
VX$NODE.L_SC_STOP
     10873**DCL     10878--REDEF
VX$NODE.L_SIZE
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:235  
     10836**DCL     10847--REDEF
VX$NODE.L_SIZE_A
     10847**DCL     12069<<ASSIGN
VX$NODE.L_START
     10812**DCL     10823--REDEF
VX$NODE.L_START.DD$
     10819**DCL     12843>>ASSIGN
VX$NODE.L_START.DN$
     10814**DCL     12129>>ASSIGN  12151>>ASSIGN  12439>>ASSIGN
VX$NODE.L_START.RN$
     10815**DCL     12123>>ASSIGN  12150>>ASSIGN
VX$NODE.L_START.SC$
     10816**DCL     12436>>ASSIGN  12742>>ASSIGN
VX$NODE.L_START.SD$
     10821**DCL     12847>>ASSIGN
VX$NODE.L_START_A$
     10823**DCL     12067<<ASSIGN  12114<<ASSIGN  12134<>CALL    12157>>ASSIGN  12309>>ASSIGN  12960>>ASSIGN
     13143>>ASSIGN
VX$NODE.L_STOP
     10824**DCL     10835--REDEF
VX$NODE.L_STOP.DD$
     10831**DCL     12844>>ASSIGN
VX$NODE.L_STOP.SC$
     10828**DCL     12438>>ASSIGN
VX$NODE.L_STOP.SD$
     10833**DCL     12848>>ASSIGN
VX$NODE.L_STOP_A$
     10835**DCL     12068<<ASSIGN  12115<<ASSIGN  12134<>CALL    12171>>ASSIGN  12313>>ASSIGN  12962>>ASSIGN
     13145>>ASSIGN
VX$NODE.NUM
     10788**DCL     12063<<ASSIGN
VX$NODE.PROMOTE_HEAD
     10879**DCL     10882--REDEF
VX$NODE.PROMOTE_TAIL
     10883**DCL     10886--REDEF
VX$NODE.START_PAGE#_A
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:236  
     10800**DCL     10801--REDEF
VX$NODE.STOP_PAGE#_A
     10805**DCL     10806--REDEF
VX$SC
     10917**DCL     12456--ASSIGN  12460--ASSIGN  12603--ASSIGN  12608--ASSIGN
VX$SC.ADDRESS
     10952**DCL     12459>>DOWHILE 12459>>DOWHILE 12497--ASSIGN  12606>>DOWHILE 12606>>DOWHILE 12630--ASSIGN
     12761--ASSIGN
VX$SC.ATTR.PRE_DCB
     10947**DCL     12752>>IF
VX$SC.ATTR.SEGMENT
     10942**DCL     12455>>IF
VX$SC.COM_LINK
     10961**DCL     12487<<ASSIGN  12489<<ASSIGN  12818>>ASSIGN
VX$SC.NAME_DISP
     10955**DCL     12516>>IF      12520>>ASSIGN  12669>>IF      12673>>ASSIGN  12748>>ASSIGN  12812>>ASSIGN
     12813>>DOWHILE 12813>>DOWHILE
VX$SC.NODE#
     10959**DCL     12625<<ASSIGN  12650--ASSIGN
VX$SC.SEG
     10918**DCL     12606>>DOWHILE 12606>>DOWHILE 12613>>IF      12614>>ASSIGN
VX$SC.SIZE
     10957**DCL     12457>>IF      12538--ASSIGN  12604>>IF      12691--ASSIGN  12783--ASSIGN
VX$SC.TYPE
     10920**DCL     12465>>DOCASE  12514>>CALLBLT 12667>>CALLBLT
VX$SECT.MBZ
     11028**DCL     11030--REDEF   11034--REDEF
VX$TREE_NODE.DADDR
     11741**DCL     12028>>ASSIGN  12029>>ASSIGN
VX$TREE_NODE.DSIZE
     11743**DCL     11969>>ASSIGN  12029>>ASSIGN  12032>>ASSIGN
VX$TREE_NODE.FORWARD#
     11733**DCL     12007>>IF
VX$TREE_NODE.NAME$
     11709**DCL     11965--ASSIGN
VX$TREE_NODE.PADDR
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:237  
     11737**DCL     12033>>ASSIGN  12034>>ASSIGN
VX$TREE_NODE.PSIZE
     11739**DCL     11969>>ASSIGN  12034>>ASSIGN  12037>>ASSIGN
VXA$GET
     11537**DCL-ENT 12096--CALL
VXD$B2C
     11535**DCL-ENT 11973--CALL    12040--CALL    12041--CALL    12044--CALL
VXD$TMPLT
     11066**DCL     12130--ASSIGN  12315--ASSIGN  12361--ASSIGN  12855--ASSIGN  12889--ASSIGN  12964--ASSIGN
     13023--ASSIGN  13146--CALL    13154--ASSIGN  13211--ASSIGN
VXD$TMPLT.AD.ISADDR
     11089**DCL     11091--REDEF   13038--ASSIGN  13226--ASSIGN
VXD$TMPLT.AD.LFLAGS.MULTIPLE
     11079**DCL     12319>>IF      12977>>ASSIGN  13165>>ASSIGN
VXD$TMPLT.AD.LFLAGS.SOURCE
     11075**DCL     12974>>ASSIGN  13162>>ASSIGN
VXD$TMPLT.AD.LFLAGS.USED
     11081**DCL     12975>>ASSIGN  13163>>ASSIGN
VXD$TMPLT.CONSTNT
     11096**DCL     12317>>IF      12856>>IF      12965>>IF      13155>>IF
VXD$TMPLT.LFLAGS
     11102**DCL     11115--REDEF
VXD$TMPLT.LFLAGS.MULTIPLE
     11105**DCL     12317>>IF      12971>>ASSIGN  13159>>ASSIGN
VXD$TMPLT.LFLAGS.SOURCE
     11109**DCL     12968>>ASSIGN  13156>>ASSIGN
VXD$TMPLT.LFLAGS.USED
     11107**DCL     12969>>ASSIGN  13157>>ASSIGN
VXD$TMPLT.NPOINTER
     11093**DCL     12320>>ASSIGN  12357>>DOWHILE 12357>>DOWHILE 12369>>ASSIGN  12857>>ASSIGN  12886>>DOWHILE
     12886>>DOWHILE 12898>>ASSIGN  12991>>ASSIGN  13020>>DOWHILE 13020>>DOWHILE 13078>>ASSIGN  13179>>ASSIGN
     13208>>DOWHILE 13208>>DOWHILE 13266>>ASSIGN
VXD$TMPLT.VALUE
     11067**DCL     11069--REDEF   13031--ASSIGN  13219--ASSIGN
VXE$MERC
     11530**DCL-ENT 13330--CALL
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:238  
VXQ$SORT
     11539**DCL-ENT 12134--CALL
VXQ$SORT_V
     11550**DCL-ENT 13146--CALL
VXR$SAT.VALUE
     11267**DCL     11268--REDEF
VXR$TMPLT
     11226**DCL     12126--ASSIGN  12250--ASSIGN
VXR$TMPLT.GOT
     11232**DCL     11234--REDEF   12175>>IF      12231>>IF
VXR$TMPLT.NPOINTER
     11227**DCL     12173>>ASSIGN  12228>>ASSIGN
VXR$TMPLT.OPOINTER
     11235**DCL     12176>>ASSIGN  12239>>ASSIGN
VXR$TMPLT.SREF
     11229**DCL     12216>>IF      12221>>IF
VXU$PREAD
     11545**DCL-ENT 12101--CALL
VX_BIAS.A
      9576**DCL      9577--REDEF
VX_CBUF.CHARS_A
      9510**DCL      9511--REDEF
VX_CONST_DCB.ACTPOS
     10692**DCL     10692--REDEF
VX_CONST_DCB.ARS#
     10651**DCL     10651--REDEF
VX_CONST_DCB.ATTR#
     10681**DCL     10681--REDEF   10683--REDEF
VX_CONST_DCB.BORROW
     10703**DCL     10703--REDEF   10703--REDEF   10703--REDEF
VX_CONST_DCB.EOMCHAR#
     10658**DCL     10659--REDEF
VX_CONST_DCB.FLDID
     10695**DCL     10696--REDEF
VX_CONST_DCB.FORM$
     10687**DCL     10687--REDEF
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:239  
VX_CONST_DCB.FSECT
     10710**DCL     10710--REDEF
VX_CONST_DCB.FSN#
     10677**DCL     10677--REDEF   10677--REDEF   10678--REDEF
VX_CONST_DCB.HEADER$
     10686**DCL     10687--REDEF
VX_CONST_DCB.IXTNSIZE#
     10683**DCL     10684--REDEF
VX_CONST_DCB.LASTSTA$
     10667**DCL     10667--REDEF
VX_CONST_DCB.LVL
     10704**DCL     10704--REDEF
VX_CONST_DCB.NAME#.C
     10667**DCL     10668--REDEF
VX_CONST_DCB.NOEOF
     10699**DCL     10699--REDEF
VX_CONST_DCB.NRECS#
     10684**DCL     10684--REDEF
VX_CONST_DCB.NRECX
     10711**DCL     10711--REDEF
VX_CONST_DCB.OHDR
     10700**DCL     10700--REDEF
VX_CONST_DCB.ORG#
     10675**DCL     10676--REDEF
VX_CONST_DCB.PRECNO
     10708**DCL     10708--REDEF
VX_CONST_DCB.RCSZ
     10716**DCL     10716--REDEF
VX_CONST_DCB.RES#
     10669**DCL     10669--REDEF
VX_CONST_DCB.SETX
     10688**DCL     10688--REDEF
VX_CONST_DCB.TAB$
     10687**DCL     10687--REDEF
VX_CONST_DCB.TDA
     10707**DCL     10708--REDEF
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:240  
VX_CONST_DCB.WSN#
     10669**DCL     10670--REDEF
VX_CTAB
     11913**DCL     12179>>IF      12179>>IF      12210<<ASSIGN  12229>>CALLBLT 12232>>ASSIGN  12244>>ASSIGN
     12245>>DOWHILE 12246<<ASSIGN  12246>>ASSIGN  12252>>IF      12281<<ASSIGN  12293<<ASSIGN  12322>>IF
     12322>>IF      12353<<ASSIGN  12370>>CALLBLT 12373>>ASSIGN  12374>>DOWHILE 12375<<ASSIGN  12375>>ASSIGN
     12381>>IF      12411<<ASSIGN  12423<<ASSIGN  12561<<ASSIGN  12714<<ASSIGN  12859>>IF      12859>>IF
     12882<<ASSIGN  12899>>CALLBLT 12902>>ASSIGN  12903>>DOWHILE 12904<<ASSIGN  12904>>ASSIGN  12910>>IF
     12931<<ASSIGN  12943<<ASSIGN  12993>>IF      12993>>IF      13016<<ASSIGN  13028>>ASSIGN  13085>>ASSIGN
     13086>>DOWHILE 13087<<ASSIGN  13087>>ASSIGN  13093>>IF      13114<<ASSIGN  13126<<ASSIGN  13181>>IF
     13181>>IF      13204<<ASSIGN  13216>>ASSIGN  13273>>ASSIGN  13274>>DOWHILE 13275<<ASSIGN  13275>>ASSIGN
     13281>>IF      13302<<ASSIGN  13314<<ASSIGN
VX_CURR$
      9545**DCL     11965>>ASSIGN  11969>>ASSIGN  11969>>ASSIGN  12007>>IF      12028>>ASSIGN  12029>>ASSIGN
     12029>>ASSIGN  12032>>ASSIGN  12033>>ASSIGN  12034>>ASSIGN  12034>>ASSIGN  12037>>ASSIGN
VX_DEF_REC_A
     10217**DCL     12306--DOINDEX 12308>>ASSIGN  12957--DOINDEX 12959>>ASSIGN  13140--DOINDEX 13142>>ASSIGN
VX_EBUF.CHARS_A
     10099**DCL     10100--REDEF
VX_EFIELD1.CHARS
     10108**DCL     10109--REDEF
VX_EFIELD2.CHARS
     10112**DCL     10113--REDEF
VX_EFIELD3.CHARS
     10116**DCL     10117--REDEF
VX_EI_KEY_BUF.KEY
     10492**DCL     10493--REDEF
VX_ERRORS
      9553**DCL      9564--REDEF
VX_ERRORS.CONFLICT_A
      9559**DCL      9560--REDEF
VX_ERRORS.UNSAT_A
      9555**DCL      9556--REDEF
VX_HDR_FIELD1
     11925**DCL     11967>>CALLBLT
VX_HDR_FIELD2
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:241  
     11926**DCL     11962>>CALLBLT 11973>>CALL
VX_IMAGE_DATA.CPAGE#_A
      8690**DCL      8691--REDEF
VX_IMAGE_DATA.NODE_A$
      8702**DCL      8703--REDEF
VX_IMAGE_DATA.START_A$
      8694**DCL      8695--REDEF
VX_IMAGE_DATA.STOP_A$
      8698**DCL      8699--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8759**DCL      8760--REDEF
VX_IMAGE_DS3.NODE_A$
      8771**DCL      8772--REDEF
VX_IMAGE_DS3.START_A$
      8763**DCL      8764--REDEF
VX_IMAGE_DS3.STOP_A$
      8767**DCL      8768--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8782**DCL      8783--REDEF
VX_IMAGE_DS4.NODE_A$
      8794**DCL      8795--REDEF
VX_IMAGE_DS4.START_A$
      8786**DCL      8787--REDEF
VX_IMAGE_DS4.STOP_A$
      8790**DCL      8791--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8805**DCL      8806--REDEF
VX_IMAGE_DS5.NODE_A$
      8817**DCL      8818--REDEF
VX_IMAGE_DS5.START_A$
      8809**DCL      8810--REDEF
VX_IMAGE_DS5.STOP_A$
      8813**DCL      8814--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8828**DCL      8829--REDEF
VX_IMAGE_DS6.NODE_A$
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:242  
      8840**DCL      8841--REDEF
VX_IMAGE_DS6.START_A$
      8832**DCL      8833--REDEF
VX_IMAGE_DS6.STOP_A$
      8836**DCL      8837--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8851**DCL      8852--REDEF
VX_IMAGE_DS7.NODE_A$
      8863**DCL      8864--REDEF
VX_IMAGE_DS7.START_A$
      8855**DCL      8856--REDEF
VX_IMAGE_DS7.STOP_A$
      8859**DCL      8860--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8874**DCL      8875--REDEF
VX_IMAGE_DS8.NODE_A$
      8886**DCL      8887--REDEF
VX_IMAGE_DS8.START_A$
      8878**DCL      8879--REDEF
VX_IMAGE_DS8.STOP_A$
      8882**DCL      8883--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8713**DCL      8714--REDEF
VX_IMAGE_PROC.NODE_A$
      8725**DCL      8726--REDEF
VX_IMAGE_PROC.START_A$
      8717**DCL      8718--REDEF
VX_IMAGE_PROC.STOP_A$
      8721**DCL      8722--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8736**DCL      8737--REDEF
VX_IMAGE_ROS.NODE_A$
      8748**DCL      8749--REDEF
VX_IMAGE_ROS.START_A$
      8740**DCL      8741--REDEF
VX_IMAGE_ROS.STOP_A$
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:243  
      8744**DCL      8745--REDEF
VX_LO_DO_DIFFER
      9524**DCL     12185>>IF      12196>>IF      12207>>IF      12257>>IF      12267>>IF      12278>>IF
     12290>>IF      12328>>IF      12339>>IF      12350>>IF      12386>>IF      12396>>IF      12408>>IF
     12420>>IF
VX_MAP$
     11906**DCL     12063>>ASSIGN  12067>>ASSIGN  12068>>ASSIGN  12069>>ASSIGN  12070>>ASSIGN  12101<>CALL
     12114>>ASSIGN  12115>>ASSIGN  12123>>ASSIGN  12129>>ASSIGN  12134>>CALL    12134>>CALL    12150>>ASSIGN
     12151>>ASSIGN  12157>>ASSIGN  12171>>ASSIGN  12309>>ASSIGN  12313>>ASSIGN  12436>>ASSIGN  12438>>ASSIGN
     12439>>ASSIGN  12742>>ASSIGN  12843>>ASSIGN  12844>>ASSIGN  12847>>ASSIGN  12848>>ASSIGN  12960>>ASSIGN
     12962>>ASSIGN  13143>>ASSIGN  13145>>ASSIGN
VX_MAP_AREA$
     11908**DCL     12064>>ASSIGN
VX_MAP_AREA_SIZE
     11910**DCL     12065>>ASSIGN  12098<<ASSIGN  12098>>ASSIGN
VX_MAP_HDR
     11933**DCL     11956--ASSIGN
VX_MAP_HDR.CHARS
     11934**DCL     11935--REDEF   11936--REDEF
VX_MAP_HDR0
     11927**DCL     11954--ASSIGN
VX_MAP_HDR0.CHARS
     11928**DCL     11929--REDEF   11930--REDEF
VX_MAP_HDR1
     11939**DCL     11961--ASSIGN
VX_MAP_HDR1.CHARS
     11940**DCL     11941--REDEF   11942--REDEF   11962<<CALLBLT 11967<<CALLBLT
VX_MAP_HDR1.CHARS_A
     11941**DCL     11973<>CALL
VX_MAP_LIT_LO_FPT_WRITE
     11815**DCL     11976<>CALL    11986<>CALL    11997<>CALL    12010<>CALL    12020<>CALL    12047<>CALL
     12182<>CALL    12194<>CALL    12254<>CALL    12265<>CALL    12325<>CALL    12337<>CALL    12383<>CALL
     12394<>CALL    12446<>CALL    12594<>CALL    12734<>CALL    12866<>CALL    12914<>CALL    13000<>CALL
     13097<>CALL    13188<>CALL    13285<>CALL
VX_MAP_LIT_LO_FPT_WRITE.BUF_
     11815**DCL     11961<<ASSIGN  11985<<ASSIGN  11996<<ASSIGN  12009<<ASSIGN  12019<<ASSIGN  12046<<ASSIGN
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:244  
     12193<<ASSIGN  12264<<ASSIGN  12336<<ASSIGN  12393<<ASSIGN  12445<<ASSIGN  12593<<ASSIGN  12733<<ASSIGN
     12865<<ASSIGN  12913<<ASSIGN  12999<<ASSIGN  13096<<ASSIGN  13187<<ASSIGN  13284<<ASSIGN
VX_MAP_LIT_LO_FPT_WRITE.STATION_
     11817**DCL     11817--REDEF
VX_MAP_LIT_LO_FPT_WRITE.V.DVBYTE.VFC#
     11824**DCL     11824--REDEF
VX_MAP_LO_FPT_WRITE
     11783**DCL     11955<>CALL    11957<>CALL    11959<>CALL    12205<>CALL    12276<>CALL    12288<>CALL
     12348<>CALL    12406<>CALL    12418<>CALL    12473<>CALL    12556<>CALL    12568<>CALL    12584<>CALL
     12617<>CALL    12709<>CALL    12721<>CALL    12802<>CALL    12828<>CALL    12877<>CALL    12926<>CALL
     12938<>CALL    13011<>CALL    13109<>CALL    13121<>CALL    13199<>CALL    13297<>CALL    13309<>CALL
VX_MAP_LO_FPT_WRITE.BUF_
     11783**DCL     12062<<ASSIGN
VX_MAP_LO_FPT_WRITE.BUF_.BOUND
     11783**DCL     11952<<ASSIGN  11964<<ASSIGN
VX_MAP_LO_FPT_WRITE.BUF_.BUF$
     11785**DCL     11954<<ASSIGN  11956<<ASSIGN  11958<<ASSIGN  11963<<ASSIGN
VX_MAP_LO_FPT_WRITE.STATION_
     11785**DCL     11785--REDEF
VX_MAP_LO_FPT_WRITE.V.DVBYTE.VFC#
     11792**DCL     11792--REDEF
VX_MAP_NUM
     11911**DCL     11983>>IF      12007>>IF      12063>>ASSIGN  12731>>IF
VX_MAP_REC_SIZE_A
     11912**DCL     12076>>ASSIGN
VX_MAP_TABS_A
     11914**DCL     12370>>CALLBLT 12859>>IF      12899>>CALLBLT 12902>>ASSIGN  12903>>DOWHILE 12993>>IF
     13028>>ASSIGN  13085>>ASSIGN  13086>>DOWHILE 13181>>IF      13216>>ASSIGN  13273>>ASSIGN  13274>>DOWHILE
VX_MAP_TREE_START$
     11909**DCL     11966>>ASSIGN
VX_MAP_UTS_HDR
     11945**DCL     11958--ASSIGN
VX_MAP_UTS_HDR.CHARS
     11946**DCL     11947--REDEF   11948--REDEF
VX_MAP_WIDTH
     11916**DCL     11964>>ASSIGN  12859>>IF      12993>>IF      13181>>IF
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:245  
VX_MAP_WIDTH_HDR
     11917**DCL     11952>>ASSIGN
VX_MAX_CTAB
     11918**DCL     12859>>IF      12993>>IF      13181>>IF
VX_MBUF
     11919**DCL     11851--DCLINIT 11852--DCLINIT 11886--DCLINIT 11887--DCLINIT 11963--ASSIGN  12062--ASSIGN
VX_MBUF.CHARS
     11920**DCL     11921--REDEF   11922--REDEF   12209<<ASSIGN  12229<<CALLBLT 12240<<CALLBLT 12280<<ASSIGN
     12292<<ASSIGN  12352<<ASSIGN  12370<<CALLBLT 12410<<ASSIGN  12422<<ASSIGN  12514<<CALLBLT 12521<<CALLBLT
     12524<<CALLBLT 12530<<CALLBLT 12560<<ASSIGN  12667<<CALLBLT 12674<<CALLBLT 12677<<CALLBLT 12683<<CALLBLT
     12713<<ASSIGN  12749<<CALLBLT 12753<<CALLBLT 12777<<CALLBLT 12806<<ASSIGN  12832<<ASSIGN  12881<<ASSIGN
     12899<<CALLBLT 12930<<ASSIGN  12942<<ASSIGN  13015<<ASSIGN  13070<<CALLBLT 13071>>IF      13079<<CALLBLT
     13113<<ASSIGN  13125<<ASSIGN  13203<<ASSIGN  13258<<CALLBLT 13259>>IF      13267<<CALLBLT 13301<<ASSIGN
     13313<<ASSIGN
VX_MBUF.CHARS_A
     11921**DCL     12149<<ASSIGN  12233<<ASSIGN  12234<<ASSIGN  12503<<ASSIGN  12504<<ASSIGN  12505<<ASSIGN
     12509<<ASSIGN  12544<<ASSIGN  12545<<ASSIGN  12546<<ASSIGN  12550<<ASSIGN  12636<<ASSIGN  12637<<ASSIGN
     12638<<ASSIGN  12642<<ASSIGN  12656<<ASSIGN  12657<<ASSIGN  12658<<ASSIGN  12662<<ASSIGN  12697<<ASSIGN
     12698<<ASSIGN  12699<<ASSIGN  12703<<ASSIGN  12767<<ASSIGN  12768<<ASSIGN  12769<<ASSIGN  12773<<ASSIGN
     12789<<ASSIGN  12790<<ASSIGN  12791<<ASSIGN  12795<<ASSIGN  13030<<ASSIGN  13059<<ASSIGN  13060<<ASSIGN
     13061<<ASSIGN  13065<<ASSIGN  13072<<ASSIGN  13081<<ASSIGN  13082<<ASSIGN  13083<<ASSIGN  13218<<ASSIGN
     13247<<ASSIGN  13248<<ASSIGN  13249<<ASSIGN  13253<<ASSIGN  13260<<ASSIGN  13269<<ASSIGN  13270<<ASSIGN
     13271<<ASSIGN
VX_MBUF.LIT_BUF.VFC
     11923**DCL     12275<<ASSIGN  12405<<ASSIGN  12925<<ASSIGN  13108<<ASSIGN  13296<<ASSIGN
VX_M_ALL
      9587**DCL     12092>>IF
VX_M_BASE_PTR
      9589**DCL     12093>>ASSIGN
VX_M_FREE
      9585**DCL     12092>>IF      12093>>ASSIGN  12094<<ASSIGN  12094>>ASSIGN
VX_M_VECTOR.F
      8541**DCL      8545--REDEF
VX_M_VECTOR_DP.F
      8576**DCL      8580--REDEF
VX_O.ACCTN_A$
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:246  
      9705**DCL      9706--REDEF
VX_O.DCB_MATCH_A$
      9714**DCL      9715--REDEF
VX_O.DCB_MATCH_HIT_A
      9720**DCL      9721--REDEF
VX_O.FIDN_A$
      9699**DCL      9700--REDEF
VX_O.FID_A$
      9691**DCL      9692--REDEF
VX_O.INCLUDE_A$
      9711**DCL      9712--REDEF
VX_O.MAP.LDEF
      9690**DCL     12984>>IF      12988>>IF      13172>>IF      13176>>IF
VX_O.MAP.NAME
      9687**DCL     12955>>IF
VX_O.MAP.UDEF
      9689**DCL     12984>>IF      13172>>IF
VX_O.MAP.VALUE
      9688**DCL     13138>>IF
VX_O.MAP_A
      9685**DCL      9686--REDEF
VX_O.NODCB_A
      9742**DCL      9743--REDEF
VX_O.NUM_A
      9630**DCL      9632--REDEF
VX_O.OPT.MAP
      9732**DCL     11953>>IF      11975>>IF      12430>>IF
VX_O.OPT_A
      9730**DCL      9731--REDEF
VX_O.PRIV_A
      9646**DCL      9648--REDEF
VX_O.SIN_A
      9599**DCL      9600--REDEF
VX_O.TCB_A
      9726**DCL      9727--REDEF
VX_OD.ACCTN_A$
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:247  
      9903**DCL      9904--REDEF
VX_OD.DCB_MATCH_A$
      9912**DCL      9913--REDEF
VX_OD.FIDN_A$
      9897**DCL      9898--REDEF
VX_OD.FID_A$
      9889**DCL      9890--REDEF
VX_OD.INCLUDE_A$
      9909**DCL      9910--REDEF
VX_OD.MAP_A
      9883**DCL      9884--REDEF
VX_OD.NODCB_A
      9927**DCL      9928--REDEF
VX_OD.NUM_A
      9830**DCL      9831--REDEF
VX_OD.PRIV_A
      9845**DCL      9846--REDEF
VX_OD.SIN_A
      9799**DCL      9800--REDEF
VX_OD.VECTOR_A$
      9918**DCL      9919--REDEF
VX_OL.MAX_A
      9774**DCL      9776--REDEF
VX_OL.MIN_A
      9759**DCL      9760--REDEF
VX_ON.ACCTN_A$
     10048**DCL     10050--REDEF
VX_ON.DCB_MATCH_A$
     10059**DCL     10061--REDEF
VX_ON.FIDN_A$
     10041**DCL     10043--REDEF
VX_ON.FID_A$
     10032**DCL     10034--REDEF
VX_ON.INCLUDE_A$
     10055**DCL     10057--REDEF
VX_ON.MAP_A
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:248  
     10025**DCL     10027--REDEF
VX_ON.NODCB_A$
     10075**DCL     10076--REDEF
VX_ON.NUM_A
      9970**DCL      9972--REDEF
VX_ON.PRIV_A
      9986**DCL      9988--REDEF
VX_ON.SIN_A
      9938**DCL      9940--REDEF
VX_ON.VECTOR_A$
     10066**DCL     10067--REDEF
VX_OUHEAD.VERSION
      9385**DCL      9387--REDEF
VX_OU_HEAD
      9328**DCL      9367--REDEF
VX_OU_HEAD.REC_A
      9340**DCL      9343--REDEF
VX_O_KEY_BUF.FORM0
      8589**DCL      8592--REDEF    8599--REDEF
VX_O_KEY_BUF_L.FORM0
      8612**DCL      8615--REDEF    8622--REDEF
VX_PASS2_REF.OU.L_START
     10278**DCL     10283--REDEF
VX_PASS2_REF.OU.L_STOP
     10284**DCL     10289--REDEF
VX_PASS2_REF.OU.MAX
     10272**DCL     10277--REDEF
VX_PASS2_REF.OU.SIZE
     10290**DCL     10295--REDEF
VX_PASS2_REF.SAT.COUNT
     10317**DCL     10323--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10324**DCL     10330--REDEF
VX_PASS2_REF.SAT.L_START
     10303**DCL     10309--REDEF
VX_PASS2_REF.SAT.L_STOP
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:249  
     10310**DCL     10316--REDEF
VX_PASS2_REF.SAT.MAX
     10297**DCL     10302--REDEF
VX_PASS2_REF.UNSAT.L_START
     10365**DCL     10370--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10371**DCL     10376--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10377**DCL     10382--REDEF
VX_PASS2_REF.UNSAT.MAX
     10359**DCL     10364--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10389**DCL     10394--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10383**DCL     10388--REDEF
VX_PHRASE.PHRASE
      9791**DCL      9793--REDEF
VX_PROGRAM_BIAS.A
      9569**DCL      9570--REDEF
VX_REF_REC_A
     10219**DCL     12154--DOINDEX 12156>>ASSIGN
VX_RU_HEAD_BUF.LIB
      9250**DCL     12988>>IF      13176>>IF
VX_RU_HEAD_BUF.MAP_BITS_A.CON
      9206**DCL     12851>>IF
VX_RU_HEAD_BUF.MAP_BITS_A.MULTIPLE
      9204**DCL     12310>>IF
VX_RU_HEAD_BUF.MAP_BITS_A.PRIMARY
      9208**DCL     12158>>IF
VX_RU_HEAD_BUF.MAP_BITS_A.SECONDARY
      9210**DCL     12158>>IF
VX_R_KEY_BUF.FORM0
      8638**DCL      8642--REDEF    8648--REDEF
VX_SD.A
      8266**DCL      8267--REDEF
VX_SEGID
PL6.E3A0      #001=VXM$NODE File=VXM$NODE.:E05TSI                                WED 07/30/97 08:22 Page:250  
     10402**DCL     12625>>ASSIGN
VX_SPC.B$.MINE
     10460**DCL     10466--REDEF
VX_SPC.B$.NAME
     10439**DCL     10445--REDEF
VX_SPC.B$.SKIP
     10453**DCL     10459--REDEF
VX_SPC.B$.VALUE
     10446**DCL     10452--REDEF
VX_SPC.SEG.NAME
     10408**DCL     10414--REDEF
VX_SPC.SEG.VALUE
     10415**DCL     10421--REDEF
VX_TSX0_OVERLAY.H
     10183**DCL     10186--REDEF
WORK_BUF.CHR
     11649**DCL     12509>>ASSIGN  12550>>ASSIGN  12642>>ASSIGN  12662>>ASSIGN  12703>>ASSIGN  12773>>ASSIGN
     12795>>ASSIGN  13065>>ASSIGN  13253>>ASSIGN
WORK_BUF.COMPOSITE
     11646**DCL     11649--REDEF
WORK_BUF.COMPOSITE.UBN
     11648**DCL     12501<<ASSIGN  12502>>IF      12542<<ASSIGN  12543>>IF      12634<<ASSIGN  12635>>IF
     12654<<ASSIGN  12655>>IF      12695<<ASSIGN  12696>>IF      12765<<ASSIGN  12766>>IF      12787<<ASSIGN
     12788>>IF      13057<<ASSIGN  13058>>IF      13245<<ASSIGN  13246>>IF
