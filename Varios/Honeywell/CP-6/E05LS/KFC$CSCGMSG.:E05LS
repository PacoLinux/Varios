VERSION E05

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:1    
        1        1        /*M*           KFC$CSCGMSG              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        /*F*     NAME:     KFC$CSCGMSG
        9        9                 PURPOSE:  PROCESS READS FRO CSCG COMGROUP
       10       10                 DESCRIPTION:  An outstanding read is completed
       11       11                           on the m$cs dcb.  This dcb communicates with
       12       12                           KEYIN thru the CSCG comgroup.  FROG has
       13       13                           a read pending to the CSCG when actually not
       14       14                           processing a read complete.
       15       15                                This module decide what kind of keyin
       16       16                           was received and which routine to call to
       17       17                           process it.
       18       18                                KILLFROG - hnadled in this routine.
       19       19                                ENABLE,DISABLE,KILL - call KFC$FEP_KEYIN.
       20       20                 REFERENCE:  KF$KEY_MSG - structure for keyin msgs
       21       21        */
       22       22        /*D*     NAME:     KFC$CSCGMSG
       23       23                 CALL:     CALL KFC$CSCGMSG
       24       24                 INTERFACE:  KFC$WRT_CSMSG
       25       25                             KFC$FEP_KEYIN
       26       26                 INPUT:    none - keyin msg is expected in
       27       27                           KF_CSCG_INBUF
       28       28                 OUTPUT:   none
       29       29                 DESCRIPTION:  The keyid is taken the the msg and
       30       30                           a do case is performed:
       31       31                                KILLFROG - reset the run flag snd set the
       32       32                           killfrog flag.
       33       33                                ENABLE,DISABLE,KILL - CALL KFC$FEP_KEYIN
       34       34                                ELSE - write a msg back to console saying
       35       35                           'keyin not implemented'.
       36       36        */
       37       37        KFC$CSCGMSG: PROC;
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:2    
       38       38        /**/
       39       39        /*             Insert all include files here      */
       40       40        /**/
       41       41        %INCLUDE CP_6;
       42      122        %INCLUDE KF$SUBS;
       43      189        %INCLUDE F$DCB;
       44      238        %INCLUDE KF$MSG_C;
       45      305        %INCLUDE KF_DAT_R;
       46      324        %INCLUDE KF$MSG_SUBS;
       47      370        %INCLUDE KL_MACRO_C;
       48     3722        %INCLUDE KL_SUBS_C;
       49     3776        /**/
       50     3777        %INCLUDE OC_MESSHD_C;
       51     3830        %INCLUDE OC_SUBS_C;
       52     4561        /**/
       53     4562        /*                Insert all msg fpt here  */
       54     4563        /**/
       55     4564        %KF$CMSG;
       56     4568        %KL_FROG (STCLASS="BASED(Y$BUF$)");
       57     4586        /**/
       58     4587        /**********RANGE OF MSG NUMBERS FOR FROG IS 180-199     ******/
       59     4588        /**/
       60     4589        /**/
       61     4590        /*             Build all static msgs here              */
       62     4591        /**/
       63     4592        %OC_MESSHD_W (NAME=KF_CSMSG_KNI,NPARMS=0,ATR=M_COMM,
       64     4593                       MSG=KFKNI_MSG#,DELIM=";");
       65     4606        %PLIST;
       66     4607        /**/
       67     4608        /*             Insert all local dcls here         */
       68     4609        /**/
       69     4610    1   DCL FEPNAME CHAR(8);
       70     4611    1   DCL Y$NODE UBIN;
       71     4612    1   DCL Y$BUF$ PTR;
       72     4613        /**/
       73     4614        /*             Insert all entry dcls here         */
       74     4615    1   DCL KFE$ERP ENTRY(1);
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:3    
       75     4616    1   DCL KFC$WRT_CSMSG ENTRY(2) ALTRET;
       76     4617    1   DCL KFC$FEP_KEYIN ENTRY(1);
       77     4618    1   DCL KFD$FEDUMP ENTRY(1) ALTRET;
       78     4619    1   DCL KFF$FEBOOT ENTRY(4) ALTRET;
       79     4620    1   DCL KFD$DUMPMSG ENTRY(1);
       80     4621    1   DCL KFF$FREE ENTRY(1) ALTRET;
       81     4622    1   DCL KFF$STARTHANDLERS ENTRY(1) ALTRET;
       82     4623        %EJECT;
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:4    
       83     4624        /*
       84     4625                       Msg is in KF_CSCG_INBUF, handle it
       85     4626        */
       86     4627    1        Y$BUF$ = ADDR(KF_CSCG_INBUF);
       87     4628    1        KF_CSKEYID = Y$BUF$->KF$CMSG.KEYID;
       88     4629        /**/
       89     4630    2        DO   CASE (KF_CSKEYID);
       90     4631
       91     4632    2        CASE (0);                          /* Message from slug */
       92     4633
       93     4634    2           Y$NODE = KL_FROG.FEX;
       94     4635    2           CALL BINCHAR(FEPNAME,Y$NODE);
       95     4636    2           IF Y$NODE > KF_MAX_FEP
       96     4637    2           THEN
       97     4638    2                KF_MAX_FEP = Y$NODE;
       98     4639
       99     4640    2           IF KF_FEPS_BOOTING < 0          /* How did this happen? */
      100     4641    2           THEN
      101     4642    2                KF_FEPS_BOOTING = 0;
      102     4643    3           DO CASE (KL_FROG.FUNCTION);
      103     4644
      104     4645    3           CASE (%KLFR_BT);
      105     4646    3              IF KF_FEPS_BOOTING >= %KF_MAX_FEPS_BOOTING
      106     4647    3              THEN
      107     4648    3                   KF_FEP_FLAGS.BOOT(Y$NODE) = '1'B;
      108     4649    4              ELSE DO;
      109     4650    4                   KF_FEP_FLAGS.BOOT(Y$NODE) = '0'B;
      110     4651    4                   KF_FEPS_BOOTING = KF_FEPS_BOOTING + 1;
      111     4652    4                   CALL KFF$FEBOOT(Y$NODE)
      112     4653    5                   WHENALTRETURN DO;
      113     4654    5                        KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;
      114     4655    5                        GOTO BOOT_NEXT;
      115     4656    5                      END;
      116     4657    4                   KF_FEP_FLAGS.BOOTING(Y$NODE) = '1'B;
      117     4658    4                 END;
      118     4659
      119     4660    3           CASE (%KLFR_DMP);               /* SLUG wants us to DUMP a FEP        */
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:5    
      120     4661    3              CALL KFD$FEDUMP(Y$NODE);
      121     4662
      122     4663    3           CASE (%KLFR_DMPBT);             /* SLUG wants a FEP DUMP and reBOOT   */
      123     4664    3              CALL KFD$FEDUMP(Y$NODE);
      124     4665    3              IF KF_FEPS_BOOTING >= %KF_MAX_FEPS_BOOTING
      125     4666    3              THEN
      126     4667    3                   KF_FEP_FLAGS.BOOT(Y$NODE) = '1'B;
      127     4668    4              ELSE DO;
      128     4669    4                   KF_FEP_FLAGS.BOOT(Y$NODE) = '0'B;
      129     4670    4                   KF_FEPS_BOOTING = KF_FEPS_BOOTING + 1;
      130     4671    4                   CALL KFF$FEBOOT(Y$NODE)
      131     4672    5                   WHENALTRETURN DO;
      132     4673    5                        KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;
      133     4674    5                        GOTO BOOT_NEXT;
      134     4675    5                      END;
      135     4676    4                   KF_FEP_FLAGS.BOOTING(Y$NODE) = '1'B;
      136     4677    4                 END;
      137     4678
      138     4679    3           CASE (%KLFR_BTDN);              /* Boot done */
      139     4680    3              CALL KFF$FREE(Y$NODE);
      140     4681    3              IF KF_FEP_FLAGS.BOOTING(Y$NODE)
      141     4682    4              THEN DO;
      142     4683    4                   KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;
      143     4684    4                   KF_FEP_FLAGS.BOOTING(Y$NODE) = '0'B;
      144     4685    4   BOOT_NEXT:      ;
      145     4686    5                   DO Y$NODE = 0 TO KF_MAX_FEP;
      146     4687    5                        IF KF_FEP_FLAGS.BOOT(Y$NODE) AND KF_FEPS_BOOTING < %
              4687                                 KF_MAX_FEPS_BOOTING
      147     4688    6                        THEN DO;
      148     4689    6                             KF_FEPS_BOOTING = KF_FEPS_BOOTING + 1;
      149     4690    6                             KF_FEP_FLAGS.BOOT(Y$NODE) = '0'B;
      150     4691    6                             CALL BINCHAR(FEPNAME,Y$NODE);
      151     4692    6                             CALL KFF$FEBOOT(Y$NODE)
      152     4693    7                             WHENALTRETURN DO;
      153     4694    7                                  KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;
      154     4695    7                                  GOTO BOOT_NEXT;
      155     4696    7                                END;
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:6    
      156     4697    6                             KF_FEP_FLAGS.BOOTING(Y$NODE) = '1'B;
      157     4698    6                           END;
      158     4699    5                      END;
      159     4700    4                 END;
      160     4701
      161     4702    3           CASE(%KLFR_NA2FROG);
      162     4703    3              CALL KFD$DUMPMSG(KF_CSCG_INBUF);
      163     4704    3           CASE(%KLFR_UP);
      164     4705    3              CALL KFF$STARTHANDLERS(Y$NODE);
      165     4706    3           END;
      166     4707
      167     4708        /**/
      168     4709    2        CASE (KEY_KILLFROG#);
      169     4710    2           KF_RUN_FLAG = %RESET##;
      170     4711    2           KF_FLGS.KILLFROG = %LSET##;
      171     4712    2        CASE (ELSE);
      172     4713        /*
      173     4714                       Write a msg back to keyin saying that
      174     4715                       the 'KEYIN INOT IMPLEMENTED' msg is
      175     4716                       to be written on the console that the msg
      176     4717                       came from.
      177     4718        */
      178     4719    2           CALL KFC$WRT_CSMSG(ADDR(KF_CSMSG_KNI),SIZEC(KF_CSMSG_KNI))
      179     4720    2                ALTRET(BDWR);
      180     4721    2        END       /* END OF CASE STMNT*/;
      181     4722    1        RETURN;
      182     4723        /**/
      183     4724    1   BDWR: CALL KFE$ERP('KFC$BDWR');
      184     4725    1        RETURN;
      185     4726    1   END KFC$CSCGMSG;
      186     4727        %EOD;

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:7    
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KF$MSG_SUBS.:E05TOU  is referenced.
   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFC$CSCGMSG.

   Procedure KFC$CSCGMSG requires 197 words for executable code.
   Procedure KFC$CSCGMSG requires 12 words of local(AUTO) storage.

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:8    

 Object Unit name= KFC$CSCGMSG                                File name= KFC$CSCGMSG.:E05TOU
 UTS= JUL 30 '97 00:19:53.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FE
    2   DCB   even  none     0      0  M$CS
    3   DCB   even  none     0      0  M$HLPF
    4   DCB   even  none     0      0  M$PROF
    5   DCB   even  none     0      0  M$NETCON
    6   Data  even  none     5      5  KFC$CSCGMSG
    7  RoData even  UTS      2      2  KFC$CSCGMSG
    8   Proc  even  none   197    305  KFC$CSCGMSG
    9  RoData even  none     5      5  KFC$CSCGMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        0  KFC$CSCGMSG
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:9    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 KFF$FEBOOT
 yes     yes           Std       1 KFD$FEDUMP
 yes     yes           Std       1 KFF$FREE
 yes     yes           Std       1 KFF$STARTHANDLERS
         yes           Std       1 KFD$DUMPMSG
 yes     yes           Std       2 KFC$WRT_CSMSG
         yes           Std       1 KFE$ERP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KF_RUN_FLAG                           KF_CSCG_INBUF
     KF_CSKEYID                            M$FE                                  M$CS
     M$HLPF                                M$PROF                                M$NETCON
     KF_FLGS                               KF_MAX_FEP                            KF_FEP_FLAGS
     KF_FEPS_BOOTING                       B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:10   


        1        1        /*M*           KFC$CSCGMSG              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        /*F*     NAME:     KFC$CSCGMSG
        9        9                 PURPOSE:  PROCESS READS FRO CSCG COMGROUP
       10       10                 DESCRIPTION:  An outstanding read is completed
       11       11                           on the m$cs dcb.  This dcb communicates with
       12       12                           KEYIN thru the CSCG comgroup.  FROG has
       13       13                           a read pending to the CSCG when actually not
       14       14                           processing a read complete.
       15       15                                This module decide what kind of keyin
       16       16                           was received and which routine to call to
       17       17                           process it.
       18       18                                KILLFROG - hnadled in this routine.
       19       19                                ENABLE,DISABLE,KILL - call KFC$FEP_KEYIN.
       20       20                 REFERENCE:  KF$KEY_MSG - structure for keyin msgs
       21       21        */
       22       22        /*D*     NAME:     KFC$CSCGMSG
       23       23                 CALL:     CALL KFC$CSCGMSG
       24       24                 INTERFACE:  KFC$WRT_CSMSG
       25       25                             KFC$FEP_KEYIN
       26       26                 INPUT:    none - keyin msg is expected in
       27       27                           KF_CSCG_INBUF
       28       28                 OUTPUT:   none
       29       29                 DESCRIPTION:  The keyid is taken the the msg and
       30       30                           a do case is performed:
       31       31                                KILLFROG - reset the run flag snd set the
       32       32                           killfrog flag.
       33       33                                ENABLE,DISABLE,KILL - CALL KFC$FEP_KEYIN
       34       34                                ELSE - write a msg back to console saying
       35       35                           'keyin not implemented'.
       36       36        */
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:11   
       37       37        KFC$CSCGMSG: PROC;

     37  8 000000   000000 700200 xent  KFC$CSCGMSG  TSX0  ! X66_AUTO_0
         8 000001   000014 000000                    ZERO    12,0

       38       38        /**/
       39       39        /*             Insert all include files here      */
       40       40        /**/
       41       41        %INCLUDE CP_6;
       42      122        %INCLUDE KF$SUBS;
       43      189        %INCLUDE F$DCB;
       44      238        %INCLUDE KF$MSG_C;
       45      305        %INCLUDE KF_DAT_R;
       46      324        %INCLUDE KF$MSG_SUBS;
       47      370        %INCLUDE KL_MACRO_C;
       48     3722        %INCLUDE KL_SUBS_C;
       49     3776        /**/
       50     3777        %INCLUDE OC_MESSHD_C;
       51     3830        %INCLUDE OC_SUBS_C;
       52     4561        /**/
       53     4562        /*                Insert all msg fpt here  */
       54     4563        /**/
       55     4564        %KF$CMSG;
       56     4568        %KL_FROG (STCLASS="BASED(Y$BUF$)");
       57     4586        /**/
       58     4587        /**********RANGE OF MSG NUMBERS FOR FROG IS 180-199     ******/
       59     4588        /**/
       60     4589        /**/
       61     4590        /*             Build all static msgs here              */
       62     4591        /**/
       63     4592        %OC_MESSHD_W (NAME=KF_CSMSG_KNI,NPARMS=0,ATR=M_COMM,
       64     4593                       MSG=KFKNI_MSG#,DELIM=";");
       65     4606        %PLIST;
       66     4607        /**/
       67     4608        /*             Insert all local dcls here         */
       68     4609        /**/
       69     4610    1   DCL FEPNAME CHAR(8);
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:12   
       70     4611    1   DCL Y$NODE UBIN;
       71     4612    1   DCL Y$BUF$ PTR;
       72     4613        /**/
       73     4614        /*             Insert all entry dcls here         */
       74     4615    1   DCL KFE$ERP ENTRY(1);
       75     4616    1   DCL KFC$WRT_CSMSG ENTRY(2) ALTRET;
       76     4617    1   DCL KFC$FEP_KEYIN ENTRY(1);
       77     4618    1   DCL KFD$FEDUMP ENTRY(1) ALTRET;
       78     4619    1   DCL KFF$FEBOOT ENTRY(4) ALTRET;
       79     4620    1   DCL KFD$DUMPMSG ENTRY(1);
       80     4621    1   DCL KFF$FREE ENTRY(1) ALTRET;
       81     4622    1   DCL KFF$STARTHANDLERS ENTRY(1) ALTRET;
       82     4623        %EJECT;
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:13   
       83     4624        /*
       84     4625                       Msg is in KF_CSCG_INBUF, handle it
       85     4626        */
       86     4627    1        Y$BUF$ = ADDR(KF_CSCG_INBUF);

   4627  8 000002   000000 236000 9                  LDQ     0
         8 000003   200006 756100                    STQ     Y$BUF$,,AUTO

       87     4628    1        KF_CSKEYID = Y$BUF$->KF$CMSG.KEYID;

   4628  8 000004   200006 470500                    LDP0    Y$BUF$,,AUTO
         8 000005   000000 220100                    LDX0    0,,PR0
         8 000006   000000 740000 xsym               STX0    KF_CSKEYID

       88     4629        /**/
       89     4630    2        DO   CASE (KF_CSKEYID);

   4630  8 000007   000002 100003                    CMPX0   2,DU
         8 000010   000012 602010 8                  TNC     s:4630+3,X0
         8 000011   000265 710000 8                  TRA     s:4719
         8 000012   000014 710000 8                  TRA     s:4634
         8 000013   000261 710000 8                  TRA     s:4710

       90     4631
       91     4632    2        CASE (0);                          /* Message from slug */

       92     4633
       93     4634    2           Y$NODE = KL_FROG.FEX;

   4634  8 000014   000000 236100                    LDQ     0,,PR0
         8 000015   000777 376007                    ANQ     511,DL
         8 000016   200005 756100                    STQ     Y$NODE,,AUTO

       94     4635    2           CALL BINCHAR(FEPNAME,Y$NODE);

   4635  8 000017   000000 235003                    LDA     0,DU
         8 000020   200010 757100                    STAQ    Y$BUF$+2,,AUTO
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:14   
         8 000021   000100 301500                    BTD
         8 000022   200010 000010                    NDSC9   Y$BUF$+2,,AUTO           cn=0,s=lsgnf,sf=0,n=8
         8 000023   200003 030010                    NDSC9   FEPNAME,,AUTO            cn=0,s=nosgn,sf=0,n=8

       95     4636    2           IF Y$NODE > KF_MAX_FEP

   4636  8 000024   000000 236000 xsym               LDQ     KF_MAX_FEP
         8 000025   200005 116100                    CMPQ    Y$NODE,,AUTO
         8 000026   000031 603000 8                  TRC     s:4640

       96     4637    2           THEN
       97     4638    2                KF_MAX_FEP = Y$NODE;

   4638  8 000027   200005 235100                    LDA     Y$NODE,,AUTO
         8 000030   000000 755000 xsym               STA     KF_MAX_FEP

       98     4639
       99     4640    2           IF KF_FEPS_BOOTING < 0          /* How did this happen? */

   4640  8 000031   000000 235000 xsym               LDA     KF_FEPS_BOOTING
         8 000032   000034 605000 8                  TPL     s:4643

      100     4641    2           THEN
      101     4642    2                KF_FEPS_BOOTING = 0;

   4642  8 000033   000000 450000 xsym               STZ     KF_FEPS_BOOTING

      102     4643    3           DO CASE (KL_FROG.FUNCTION);

   4643  8 000034   000000 236100                    LDQ     0,,PR0
         8 000035   000011 772000                    QRL     9
         8 000036   000777 376007                    ANQ     511,DL
         8 000037   000007 116007                    CMPQ    7,DL
         8 000040   000042 602006 8                  TNC     s:4643+6,QL
         8 000041   000277 710000 8                  TRA     s:4722
         8 000042   000260 710000 8                  TRA     s:4706
         8 000043   000051 710000 8                  TRA     s:4646
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:15   
         8 000044   000105 710000 8                  TRA     s:4661
         8 000045   000114 710000 8                  TRA     s:4664
         8 000046   000156 710000 8                  TRA     s:4680
         8 000047   000245 710000 8                  TRA     s:4703
         8 000050   000252 710000 8                  TRA     s:4705

      103     4644
      104     4645    3           CASE (%KLFR_BT);

      105     4646    3              IF KF_FEPS_BOOTING >= %KF_MAX_FEPS_BOOTING

   4646  8 000051   000000 235000 xsym               LDA     KF_FEPS_BOOTING
         8 000052   000002 115007                    CMPA    2,DL
         8 000053   000061 604000 8                  TMI     s:4650

      106     4647    3              THEN
      107     4648    3                   KF_FEP_FLAGS.BOOT(Y$NODE) = '1'B;

   4648  8 000054   200005 235100                    LDA     Y$NODE,,AUTO
         8 000055   003005 060400                    CSL     bolr='003'O
         8 000056   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         8 000057   000000 000001 xsym               BDSC    KF_FEP_FLAGS,A           by=0,bit=0,n=1
         8 000060   000277 710000 8                  TRA     s:4722

      108     4649    4              ELSE DO;

      109     4650    4                   KF_FEP_FLAGS.BOOT(Y$NODE) = '0'B;

   4650  8 000061   200005 235100                    LDA     Y$NODE,,AUTO
         8 000062   003005 060400                    CSL     bolr='003'O
         8 000063   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         8 000064   000000 000001 xsym               BDSC    KF_FEP_FLAGS,A           by=0,bit=0,n=1

      110     4651    4                   KF_FEPS_BOOTING = KF_FEPS_BOOTING + 1;

   4651  8 000065   000000 054000 xsym               AOS     KF_FEPS_BOOTING

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:16   
      111     4652    4                   CALL KFF$FEBOOT(Y$NODE)

   4652  8 000066   200005 631500                    EPPR1   Y$NODE,,AUTO
         8 000067   200010 451500                    STP1    Y$BUF$+2,,AUTO
         8 000070   200010 630500                    EPPR0   Y$BUF$+2,,AUTO
         8 000071   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000072   000000 701000 xent               TSX1    KFF$FEBOOT
         8 000073   000075 702000 8                  TSX2    s:4654
         8 000074   000100 710000 8                  TRA     s:4657

      112     4653    5                   WHENALTRETURN DO;

      113     4654    5                        KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;

   4654  8 000075   000001 336007                    LCQ     1,DL
         8 000076   000000 056000 xsym               ASQ     KF_FEPS_BOOTING

      114     4655    5                        GOTO BOOT_NEXT;

   4655  8 000077   000176 710000 8                  TRA     BOOT_NEXT

      115     4656    5                      END;
      116     4657    4                   KF_FEP_FLAGS.BOOTING(Y$NODE) = '1'B;

   4657  8 000100   200005 235100                    LDA     Y$NODE,,AUTO
         8 000101   003005 060400                    CSL     bolr='003'O
         8 000102   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         8 000103   000007 040001 xsym               BDSC    KF_FEP_FLAGS+7,A         by=0,bit=4,n=1

      117     4658    4                 END;

   4658  8 000104   000277 710000 8                  TRA     s:4722

      118     4659
      119     4660    3           CASE (%KLFR_DMP);               /* SLUG wants us to DUMP a FEP        */

      120     4661    3              CALL KFD$FEDUMP(Y$NODE);
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:17   

   4661  8 000105   200005 631500                    EPPR1   Y$NODE,,AUTO
         8 000106   200010 451500                    STP1    Y$BUF$+2,,AUTO
         8 000107   200010 630500                    EPPR0   Y$BUF$+2,,AUTO
         8 000110   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000111   000000 701000 xent               TSX1    KFD$FEDUMP
         8 000112   000000 011000                    NOP     0
         8 000113   000277 710000 8                  TRA     s:4722

      121     4662
      122     4663    3           CASE (%KLFR_DMPBT);             /* SLUG wants a FEP DUMP and reBOOT   */

      123     4664    3              CALL KFD$FEDUMP(Y$NODE);

   4664  8 000114   200005 631500                    EPPR1   Y$NODE,,AUTO
         8 000115   200010 451500                    STP1    Y$BUF$+2,,AUTO
         8 000116   200010 630500                    EPPR0   Y$BUF$+2,,AUTO
         8 000117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000120   000000 701000 xent               TSX1    KFD$FEDUMP
         8 000121   000000 011000                    NOP     0

      124     4665    3              IF KF_FEPS_BOOTING >= %KF_MAX_FEPS_BOOTING

   4665  8 000122   000000 235000 xsym               LDA     KF_FEPS_BOOTING
         8 000123   000002 115007                    CMPA    2,DL
         8 000124   000132 604000 8                  TMI     s:4669

      125     4666    3              THEN
      126     4667    3                   KF_FEP_FLAGS.BOOT(Y$NODE) = '1'B;

   4667  8 000125   200005 236100                    LDQ     Y$NODE,,AUTO
         8 000126   003006 060400                    CSL     bolr='003'O
         8 000127   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         8 000130   000000 000001 xsym               BDSC    KF_FEP_FLAGS,Q           by=0,bit=0,n=1
         8 000131   000277 710000 8                  TRA     s:4722

      127     4668    4              ELSE DO;
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:18   

      128     4669    4                   KF_FEP_FLAGS.BOOT(Y$NODE) = '0'B;

   4669  8 000132   200005 236100                    LDQ     Y$NODE,,AUTO
         8 000133   003006 060400                    CSL     bolr='003'O
         8 000134   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         8 000135   000000 000001 xsym               BDSC    KF_FEP_FLAGS,Q           by=0,bit=0,n=1

      129     4670    4                   KF_FEPS_BOOTING = KF_FEPS_BOOTING + 1;

   4670  8 000136   000000 054000 xsym               AOS     KF_FEPS_BOOTING

      130     4671    4                   CALL KFF$FEBOOT(Y$NODE)

   4671  8 000137   200005 630500                    EPPR0   Y$NODE,,AUTO
         8 000140   200010 450500                    STP0    Y$BUF$+2,,AUTO
         8 000141   200010 630500                    EPPR0   Y$BUF$+2,,AUTO
         8 000142   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000143   000000 701000 xent               TSX1    KFF$FEBOOT
         8 000144   000146 702000 8                  TSX2    s:4673
         8 000145   000151 710000 8                  TRA     s:4676

      131     4672    5                   WHENALTRETURN DO;

      132     4673    5                        KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;

   4673  8 000146   000001 336007                    LCQ     1,DL
         8 000147   000000 056000 xsym               ASQ     KF_FEPS_BOOTING

      133     4674    5                        GOTO BOOT_NEXT;

   4674  8 000150   000176 710000 8                  TRA     BOOT_NEXT

      134     4675    5                      END;
      135     4676    4                   KF_FEP_FLAGS.BOOTING(Y$NODE) = '1'B;

   4676  8 000151   200005 235100                    LDA     Y$NODE,,AUTO
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:19   
         8 000152   003005 060400                    CSL     bolr='003'O
         8 000153   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         8 000154   000007 040001 xsym               BDSC    KF_FEP_FLAGS+7,A         by=0,bit=4,n=1

      136     4677    4                 END;

   4677  8 000155   000277 710000 8                  TRA     s:4722

      137     4678
      138     4679    3           CASE (%KLFR_BTDN);              /* Boot done */

      139     4680    3              CALL KFF$FREE(Y$NODE);

   4680  8 000156   200005 631500                    EPPR1   Y$NODE,,AUTO
         8 000157   200010 451500                    STP1    Y$BUF$+2,,AUTO
         8 000160   200010 630500                    EPPR0   Y$BUF$+2,,AUTO
         8 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000162   000000 701000 xent               TSX1    KFF$FREE
         8 000163   000000 011000                    NOP     0

      140     4681    3              IF KF_FEP_FLAGS.BOOTING(Y$NODE)

   4681  8 000164   200005 235100                    LDA     Y$NODE,,AUTO
         8 000165   000000 066405                    CMPB    filb='0'B
         8 000166   000007 040001 xsym               BDSC    KF_FEP_FLAGS+7,A         by=0,bit=4,n=1
         8 000167   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         8 000170   000277 600000 8                  TZE     s:4722

      141     4682    4              THEN DO;

      142     4683    4                   KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;

   4683  8 000171   000001 336007                    LCQ     1,DL
         8 000172   000000 056000 xsym               ASQ     KF_FEPS_BOOTING

      143     4684    4                   KF_FEP_FLAGS.BOOTING(Y$NODE) = '0'B;

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:20   
   4684  8 000173   003005 060400                    CSL     bolr='003'O
         8 000174   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         8 000175   000007 040001 xsym               BDSC    KF_FEP_FLAGS+7,A         by=0,bit=4,n=1

   4684  8 000176                       BOOT_NEXT    null
      144     4685    4   BOOT_NEXT:      ;
      145     4686    5                   DO Y$NODE = 0 TO KF_MAX_FEP;

   4686  8 000176   200005 450100                    STZ     Y$NODE,,AUTO
         8 000177   000241 710000 8                  TRA     s:4699+2

      146     4687    5                        IF KF_FEP_FLAGS.BOOT(Y$NODE) AND KF_FEPS_BOOTING < %
              4687                                 KF_MAX_FEPS_BOOTING

   4687  8 000200   200005 235100                    LDA     Y$NODE,,AUTO
         8 000201   000000 066405                    CMPB    filb='0'B
         8 000202   000000 000001 xsym               BDSC    KF_FEP_FLAGS,A           by=0,bit=0,n=1
         8 000203   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         8 000204   000237 600000 8                  TZE     s:4699
         8 000205   000000 236000 xsym               LDQ     KF_FEPS_BOOTING
         8 000206   000002 116007                    CMPQ    2,DL
         8 000207   000237 605000 8                  TPL     s:4699

      147     4688    6                        THEN DO;

      148     4689    6                             KF_FEPS_BOOTING = KF_FEPS_BOOTING + 1;

   4689  8 000210   000000 054000 xsym               AOS     KF_FEPS_BOOTING

      149     4690    6                             KF_FEP_FLAGS.BOOT(Y$NODE) = '0'B;

   4690  8 000211   003005 060400                    CSL     bolr='003'O
         8 000212   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         8 000213   000000 000001 xsym               BDSC    KF_FEP_FLAGS,A           by=0,bit=0,n=1

      150     4691    6                             CALL BINCHAR(FEPNAME,Y$NODE);

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:21   
   4691  8 000214   000044 773000                    LRL     36
         8 000215   200010 757100                    STAQ    Y$BUF$+2,,AUTO
         8 000216   000100 301500                    BTD
         8 000217   200010 000010                    NDSC9   Y$BUF$+2,,AUTO           cn=0,s=lsgnf,sf=0,n=8
         8 000220   200003 030010                    NDSC9   FEPNAME,,AUTO            cn=0,s=nosgn,sf=0,n=8

      151     4692    6                             CALL KFF$FEBOOT(Y$NODE)

   4692  8 000221   200005 630500                    EPPR0   Y$NODE,,AUTO
         8 000222   200010 450500                    STP0    Y$BUF$+2,,AUTO
         8 000223   200010 630500                    EPPR0   Y$BUF$+2,,AUTO
         8 000224   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000225   000000 701000 xent               TSX1    KFF$FEBOOT
         8 000226   000230 702000 8                  TSX2    s:4694
         8 000227   000233 710000 8                  TRA     s:4697

      152     4693    7                             WHENALTRETURN DO;

      153     4694    7                                  KF_FEPS_BOOTING = KF_FEPS_BOOTING - 1;

   4694  8 000230   000001 336007                    LCQ     1,DL
         8 000231   000000 056000 xsym               ASQ     KF_FEPS_BOOTING

      154     4695    7                                  GOTO BOOT_NEXT;

   4695  8 000232   000176 710000 8                  TRA     BOOT_NEXT

      155     4696    7                                END;
      156     4697    6                             KF_FEP_FLAGS.BOOTING(Y$NODE) = '1'B;

   4697  8 000233   200005 235100                    LDA     Y$NODE,,AUTO
         8 000234   003005 060400                    CSL     bolr='003'O
         8 000235   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         8 000236   000007 040001 xsym               BDSC    KF_FEP_FLAGS+7,A         by=0,bit=4,n=1

      157     4698    6                           END;

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:22   
      158     4699    5                      END;

   4699  8 000237   000001 035007                    ADLA    1,DL
         8 000240   200005 755100                    STA     Y$NODE,,AUTO
         8 000241   000000 236000 xsym               LDQ     KF_MAX_FEP
         8 000242   200005 116100                    CMPQ    Y$NODE,,AUTO
         8 000243   000200 603000 8                  TRC     s:4687

      159     4700    4                 END;

   4700  8 000244   000277 710000 8                  TRA     s:4722

      160     4701
      161     4702    3           CASE(%KLFR_NA2FROG);

      162     4703    3              CALL KFD$DUMPMSG(KF_CSCG_INBUF);

   4703  8 000245   000000 630400 9                  EPPR0   0
         8 000246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000247   000000 701000 xent               TSX1    KFD$DUMPMSG
         8 000250   000000 011000                    NOP     0
         8 000251   000277 710000 8                  TRA     s:4722

      163     4704    3           CASE(%KLFR_UP);

      164     4705    3              CALL KFF$STARTHANDLERS(Y$NODE);

   4705  8 000252   200005 631500                    EPPR1   Y$NODE,,AUTO
         8 000253   200010 451500                    STP1    Y$BUF$+2,,AUTO
         8 000254   200010 630500                    EPPR0   Y$BUF$+2,,AUTO
         8 000255   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000256   000000 701000 xent               TSX1    KFF$STARTHANDLERS
         8 000257   000000 011000                    NOP     0

      165     4706    3           END;

   4706  8 000260   000277 710000 8                  TRA     s:4722
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:23   

      166     4707
      167     4708        /**/
      168     4709    2        CASE (KEY_KILLFROG#);

      169     4710    2           KF_RUN_FLAG = %RESET##;

   4710  8 000261   000000 450000 xsym               STZ     KF_RUN_FLAG

      170     4711    2           KF_FLGS.KILLFROG = %LSET##;

   4711  8 000262   100000 236003                    LDQ     32768,DU
         8 000263   000000 256000 xsym               ORSQ    KF_FLGS
         8 000264   000277 710000 8                  TRA     s:4722

      171     4712    2        CASE (ELSE);

      172     4713        /*
      173     4714                       Write a msg back to keyin saying that
      174     4715                       the 'KEYIN INOT IMPLEMENTED' msg is
      175     4716                       to be written on the console that the msg
      176     4717                       came from.
      177     4718        */
      178     4719    2           CALL KFC$WRT_CSMSG(ADDR(KF_CSMSG_KNI),SIZEC(KF_CSMSG_KNI))

   4719  8 000265   000001 236000 9                  LDQ     1
         8 000266   200010 756100                    STQ     Y$BUF$+2,,AUTO
         8 000267   000003 236000 9                  LDQ     3
         8 000270   200013 756100                    STQ     Y$BUF$+5,,AUTO
         8 000271   200010 631500                    EPPR1   Y$BUF$+2,,AUTO
         8 000272   200012 451500                    STP1    Y$BUF$+4,,AUTO
         8 000273   200012 630500                    EPPR0   Y$BUF$+4,,AUTO
         8 000274   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000275   000000 701000 xent               TSX1    KFC$WRT_CSMSG
         8 000276   000300 702000 8                  TSX2    BDWR

      179     4720    2                ALTRET(BDWR);
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:24   
      180     4721    2        END       /* END OF CASE STMNT*/;

      181     4722    1        RETURN;

   4722  8 000277   000000 702200 xent               TSX2  ! X66_ARET

      182     4723        /**/
      183     4724    1   BDWR: CALL KFE$ERP('KFC$BDWR');

   4724  8 000300   000004 630400 9     BDWR         EPPR0   4
         8 000301   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000302   000000 701000 xent               TSX1    KFE$ERP
         8 000303   000000 011000                    NOP     0

      184     4725    1        RETURN;

   4725  8 000304   000000 702200 xent               TSX2  ! X66_ARET
      185     4726    1   END KFC$CSCGMSG;
      186     4727        %EOD;

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:25   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KF$MSG_SUBS.:E05TOU  is referenced.
   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFC$CSCGMSG.
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:26   

 **** Variables and constants ****

  ****  Section 006  Data  KFC$CSCGMSG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(180)   r     1 KF_CSMSG_KNI

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/c CHAR(8)     r     1 FEPNAME                    6-0-0/w PTR         r     1 Y$BUF$
     5-0-0/w UBIN        r     1 Y$NODE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(1024)  r     1 KF_CSCG_INBUF              0-0-0/w UBIN(18)    r     1 KF_CSKEYID
     0-0-0/w SBIN        r     1 KF_FEPS_BOOTING            0-0-0/b STRC(512)   r     1 KF_FEP_FLAGS
     0-0-0/b STRC(3)     r     1 KF_FLGS                    0-0-0/w UBIN        r     1 KF_MAX_FEP
     0-0-0/w UBIN        r     1 KF_RUN_FLAG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC        r     1 KF$CMSG
     0-0-0/w STRC        r     1 KL_FROG

PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:27   

   Procedure KFC$CSCGMSG requires 197 words for executable code.
   Procedure KFC$CSCGMSG requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:29   
          MINI XREF LISTING

BDWR
      4724**LABEL    4719--CALLALT
BOOT_NEXT
      4684**LABEL    4655--GOTO     4674--GOTO     4695--GOTO
F$DCB.ACTPOS
       215**DCL       215--REDEF
F$DCB.ARS
       190**DCL       190--REDEF
F$DCB.ATTR
       208**DCL       209--REDEF
F$DCB.BORROW
       223**DCL       223--REDEF     223--REDEF     223--REDEF
F$DCB.DCBNAME.L
       237**DCL       237--IMP-SIZ
F$DCB.EOMCHAR
       194**DCL       194--REDEF
F$DCB.FLDID
       218**DCL       218--REDEF
F$DCB.FORM$
       212**DCL       212--REDEF
F$DCB.FSECT
       228**DCL       228--REDEF
F$DCB.FSN
       205**DCL       205--REDEF     205--REDEF     206--REDEF
F$DCB.HEADER$
       211**DCL       211--REDEF
F$DCB.IXTNSIZE
       209**DCL       209--REDEF
F$DCB.LASTSTA$
       199**DCL       199--REDEF
F$DCB.LVL
       224**DCL       224--REDEF
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:30   
F$DCB.NAME.C
       199**DCL       199--REDEF
F$DCB.NOEOF
       220**DCL       220--REDEF
F$DCB.NRECS
       210**DCL       210--REDEF
F$DCB.NRECX
       229**DCL       229--REDEF
F$DCB.OHDR
       221**DCL       221--REDEF
F$DCB.ORG
       204**DCL       204--REDEF
F$DCB.PRECNO
       227**DCL       227--REDEF
F$DCB.RCSZ
       232**DCL       232--REDEF
F$DCB.RES
       200**DCL       200--REDEF
F$DCB.SETX
       212**DCL       212--REDEF
F$DCB.TAB$
       211**DCL       212--REDEF
F$DCB.TDA
       226**DCL       226--REDEF
F$DCB.WSN
       201**DCL       201--REDEF
FEPNAME
      4610**DCL      4635<<CALLBLT  4691<<CALLBLT
KF$CMSG.KEYID
      4566**DCL      4628>>ASSIGN
KFC$WRT_CSMSG
      4616**DCL-ENT  4719--CALL
KFD$DUMPMSG
      4620**DCL-ENT  4703--CALL
KFD$FEDUMP
      4618**DCL-ENT  4661--CALL     4664--CALL
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:31   
KFE$ERP
      4615**DCL-ENT  4724--CALL
KFF$FEBOOT
      4619**DCL-ENT  4652--CALL     4671--CALL     4692--CALL
KFF$FREE
      4621**DCL-ENT  4680--CALL
KFF$STARTHANDLERS
      4622**DCL-ENT  4705--CALL
KF_CSCG_INBUF
       316**DCL      4627--ASSIGN   4703<>CALL
KF_CSKEYID
       316**DCL      4628<<ASSIGN   4630>>DOCASE
KF_CSMSG_KNI
      4594**DCL      4719--CALL     4719--CALL
KF_CSMSG_KNI.FLAGS
      4601**DCL      4602--REDEF
KF_CSMSG_KNI.MSGID
      4597**DCL      4598--REDEF
KF_FEPS_BOOTING
       323**DCL      4640>>IF       4642<<ASSIGN   4646>>IF       4651<<ASSIGN   4651>>ASSIGN   4654<<ASSIGN
      4654>>ASSIGN   4665>>IF       4670<<ASSIGN   4670>>ASSIGN   4673<<ASSIGN   4673>>ASSIGN   4683<<ASSIGN
      4683>>ASSIGN   4687>>IF       4689<<ASSIGN   4689>>ASSIGN   4694<<ASSIGN   4694>>ASSIGN
KF_FEP_FLAGS.BOOT
       322**DCL      4648<<ASSIGN   4650<<ASSIGN   4667<<ASSIGN   4669<<ASSIGN   4687>>IF       4690<<ASSIGN
KF_FEP_FLAGS.BOOTING
       323**DCL      4657<<ASSIGN   4676<<ASSIGN   4681>>IF       4684<<ASSIGN   4697<<ASSIGN
KF_FLGS.KILLFROG
       322**DCL      4711<<ASSIGN
KF_MAX_FEP
       322**DCL      4636>>IF       4638<<ASSIGN   4686>>DOINDEX
KF_RUN_FLAG
       314**DCL      4710<<ASSIGN
KF_UTBL.STATION
       318**DCL       318--REDEF
KL_FROG.FEX
      4584**DCL      4634>>ASSIGN
PL6.E3A0      #001=KFC$CSCGMSG File=KFC$CSCGMSG.:E05TSI                          WED 07/30/97 00:19 Page:32   
KL_FROG.FUNCTION
      4583**DCL      4643>>DOCASE
Y$BUF$
      4612**DCL      4581--IMP-PTR  4627<<ASSIGN   4628>>ASSIGN   4634>>ASSIGN   4643>>DOCASE
Y$NODE
      4611**DCL      4634<<ASSIGN   4635>>CALLBLT  4636>>IF       4638>>ASSIGN   4648>>ASSIGN   4650>>ASSIGN
      4652<>CALL     4657>>ASSIGN   4661<>CALL     4664<>CALL     4667>>ASSIGN   4669>>ASSIGN   4671<>CALL
      4676>>ASSIGN   4680<>CALL     4681>>IF       4684>>ASSIGN   4686<<DOINDEX  4687>>IF       4690>>ASSIGN
      4691>>CALLBLT  4692<>CALL     4697>>ASSIGN   4705<>CALL

PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:33   
      187        1        /*M*      KFC$WRT_CSMSG - write a msg to the cscg */
      188        2        /*T***********************************************************/
      189        3        /*T*                                                         */
      190        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      191        5        /*T*                                                         */
      192        6        /*T***********************************************************/
      193        7        KFC$WRT_CSMSG: PROC(P$PTR$,P$SIZE) ALTRET;
      194        8        /**/
      195        9        /*D*      NAME:     KFC$WRT_CSMSG
      196       10                  PURPOSE:  Write msgs to the cnetral system com group
      197       11                  INPUT:    P$PTR$ - addr of bufr
      198       12                            P$SIZ -  size of bufr
      199       13                  DESCRIPTION:  This module receives the address and size of
      200       14                            a buffer and writes this buffer to the cscg.
      201       15                            This msg is intended for keyin.
      202       16        */
      203       17        /**/
      204       18        /*             Insert all include files here      */
      205       19        /**/
      206       20        %INCLUDE CP_6;
      207      101        %INCLUDE KF$SUBS;
      208      168        %INCLUDE F$DCB;
      209      217        %INCLUDE KF$MSG_C;
      210      284        %INCLUDE KF_DAT_R;
      211      303        %INCLUDE KF$MSG_SUBS;
      212      349        /**/
      213      350        %INCLUDE OC_MESSHD_C;
      214      403        %INCLUDE OC_SUBS_C;
      215     1134        /**/
      216     1135        /**/
      217     1136        /*             Insert all fpts here               */
      218     1137        /**/
      219     1138        %FPT_WRITE (FPTN=WRCSCGW,DCB=M$CS,BUF=NIL,WAIT=YES,
      220     1139                 STATION=VLP_STATION);
      221     1170        %VLP_STATION (STATION='KEYIN   ',MSGTYP='FROG    ');
      222     1197        /**/
      223     1198        /*             Place all local DCLS here     */
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:34   
      224     1199        /**/
      225     1200    1   DCL P$SIZE UBIN WORD;
      226     1201    1   DCL P$PTR$ PTR;
      227     1202        /**/
      228     1203        /**/
      229     1204        %EJECT;
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:35   
      230     1205    1        WRCSCGW.BUF_.BOUND = P$SIZE;
      231     1206    1        WRCSCGW.BUF_.BUF$ = P$PTR$;
      232     1207    1        CALL M$WRITE(WRCSCGW) ALTRET(BDWR);
      233     1208    1        RETURN;
      234     1209        /**/
      235     1210    1   BDWR: ALTRETURN;
      236     1211    1   END KFC$WRT_CSMSG;

PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:36   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KF$MSG_SUBS.:E05TOU  is referenced.
   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFC$WRT_CSMSG.

   Procedure KFC$WRT_CSMSG requires 17 words for executable code.
   Procedure KFC$WRT_CSMSG requires 6 words of local(AUTO) storage.

    No errors detected in file KFC$CSCGMSG.:E05TSI    .

PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:37   

 Object Unit name= KFC$WRT_CSMSG                              File name= KFC$CSCGMSG.:E05TOU
 UTS= JUL 30 '97 00:20:11.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FE
    2   DCB   even  none     0      0  M$CS
    3   DCB   even  none     0      0  M$HLPF
    4   DCB   even  none     0      0  M$PROF
    5   DCB   even  none     0      0  M$NETCON
    6   Data  even  none    20     24  KFC$WRT_CSMSG
    7   Proc  even  none    17     21  KFC$WRT_CSMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes    yes     yes      Std        2  KFC$WRT_CSMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$FE                                  M$CS
     M$HLPF                                M$PROF                                M$NETCON
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:39   


      187        1        /*M*      KFC$WRT_CSMSG - write a msg to the cscg */
      188        2        /*T***********************************************************/
      189        3        /*T*                                                         */
      190        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      191        5        /*T*                                                         */
      192        6        /*T***********************************************************/
      193        7        KFC$WRT_CSMSG: PROC(P$PTR$,P$SIZE) ALTRET;

      7  7 000000   000000 700200 xent  KFC$WRT_CSM* TSX0  ! X66_AUTO_2
         7 000001   000006 000002                    ZERO    6,2

      194        8        /**/
      195        9        /*D*      NAME:     KFC$WRT_CSMSG
      196       10                  PURPOSE:  Write msgs to the cnetral system com group
      197       11                  INPUT:    P$PTR$ - addr of bufr
      198       12                            P$SIZ -  size of bufr
      199       13                  DESCRIPTION:  This module receives the address and size of
      200       14                            a buffer and writes this buffer to the cscg.
      201       15                            This msg is intended for keyin.
      202       16        */
      203       17        /**/
      204       18        /*             Insert all include files here      */
      205       19        /**/
      206       20        %INCLUDE CP_6;
      207      101        %INCLUDE KF$SUBS;
      208      168        %INCLUDE F$DCB;
      209      217        %INCLUDE KF$MSG_C;
      210      284        %INCLUDE KF_DAT_R;
      211      303        %INCLUDE KF$MSG_SUBS;
      212      349        /**/
      213      350        %INCLUDE OC_MESSHD_C;
      214      403        %INCLUDE OC_SUBS_C;
      215     1134        /**/
      216     1135        /**/
      217     1136        /*             Insert all fpts here               */
      218     1137        /**/
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:40   
      219     1138        %FPT_WRITE (FPTN=WRCSCGW,DCB=M$CS,BUF=NIL,WAIT=YES,
      220     1139                 STATION=VLP_STATION);
      221     1170        %VLP_STATION (STATION='KEYIN   ',MSGTYP='FROG    ');
      222     1197        /**/
      223     1198        /*             Place all local DCLS here     */
      224     1199        /**/
      225     1200    1   DCL P$SIZE UBIN WORD;
      226     1201    1   DCL P$PTR$ PTR;
      227     1202        /**/
      228     1203        /**/
      229     1204        %EJECT;
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:41   
      230     1205    1        WRCSCGW.BUF_.BOUND = P$SIZE;

   1205  7 000002   200004 470500                    LDP0    @P$SIZE,,AUTO
         7 000003   000000 236100                    LDQ     0,,PR0
         7 000004   000020 736000                    QLS     16
         7 000005   000004 676000 6                  ERQ     WRCSCGW+4
         7 000006   000034 376000 xsym               ANQ     B_VECTNIL+28
         7 000007   000004 656000 6                  ERSQ    WRCSCGW+4

      231     1206    1        WRCSCGW.BUF_.BUF$ = P$PTR$;

   1206  7 000010   200003 471500                    LDP1    @P$PTR$,,AUTO
         7 000011   100000 236100                    LDQ     0,,PR1
         7 000012   000005 756000 6                  STQ     WRCSCGW+5

      232     1207    1        CALL M$WRITE(WRCSCGW) ALTRET(BDWR);

   1207  7 000013   000000 630400 6                  EPPR0   WRCSCGW
         7 000014   440001 713400                    CLIMB   alt,write
         7 000015   401400 401760                    pmme    nvectors=4
         7 000016   000020 702000 7                  TSX2    BDWR

      233     1208    1        RETURN;

   1208  7 000017   000000 702200 xent               TSX2  ! X66_ARET

      234     1209        /**/
      235     1210    1   BDWR: ALTRETURN;

   1210  7 000020   000000 702200 xent  BDWR         TSX2  ! X66_AALT
      236     1211    1   END KFC$WRT_CSMSG;

PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:42   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KF$MSG_SUBS.:E05TOU  is referenced.
   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFC$WRT_CSMSG.
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:43   

 **** Variables and constants ****

  ****  Section 006  Data  KFC$WRT_CSMSG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/w STRC(288)   r     1 VLP_STATION                0-0-0/d STRC(432)   r     1 WRCSCGW

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P$PTR$                    4-0-0/w PTR         r     1 @P$SIZE
    *0-0-0/w PTR         r     1 P$PTR$                    *0-0-0/w UBIN        r     1 P$SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$CS


   Procedure KFC$WRT_CSMSG requires 17 words for executable code.
   Procedure KFC$WRT_CSMSG requires 6 words of local(AUTO) storage.

    No errors detected in file KFC$CSCGMSG.:E05TSI    .
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:44   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:45   
          MINI XREF LISTING

BDWR
      1210**LABEL    1207--CALLALT
F$DCB.ACTPOS
       194**DCL       194--REDEF
F$DCB.ARS
       169**DCL       169--REDEF
F$DCB.ATTR
       187**DCL       188--REDEF
F$DCB.BORROW
       202**DCL       202--REDEF     202--REDEF     202--REDEF
F$DCB.DCBNAME.L
       216**DCL       216--IMP-SIZ
F$DCB.EOMCHAR
       173**DCL       173--REDEF
F$DCB.FLDID
       197**DCL       197--REDEF
F$DCB.FORM$
       191**DCL       191--REDEF
F$DCB.FSECT
       207**DCL       207--REDEF
F$DCB.FSN
       184**DCL       184--REDEF     184--REDEF     185--REDEF
F$DCB.HEADER$
       190**DCL       190--REDEF
F$DCB.IXTNSIZE
       188**DCL       188--REDEF
F$DCB.LASTSTA$
       178**DCL       178--REDEF
F$DCB.LVL
       203**DCL       203--REDEF
F$DCB.NAME.C
       178**DCL       178--REDEF
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:46   
F$DCB.NOEOF
       199**DCL       199--REDEF
F$DCB.NRECS
       189**DCL       189--REDEF
F$DCB.NRECX
       208**DCL       208--REDEF
F$DCB.OHDR
       200**DCL       200--REDEF
F$DCB.ORG
       183**DCL       183--REDEF
F$DCB.PRECNO
       206**DCL       206--REDEF
F$DCB.RCSZ
       211**DCL       211--REDEF
F$DCB.RES
       179**DCL       179--REDEF
F$DCB.SETX
       191**DCL       191--REDEF
F$DCB.TAB$
       190**DCL       191--REDEF
F$DCB.TDA
       205**DCL       205--REDEF
F$DCB.WSN
       180**DCL       180--REDEF
KF_UTBL.STATION
       297**DCL       297--REDEF
M$WRITE
        30**DCL-ENT  1207--CALL
P$PTR$
      1201**DCL         7--PROC     1206>>ASSIGN
P$SIZE
      1200**DCL         7--PROC     1205>>ASSIGN
VLP_STATION
      1182**DCL      1158--DCLINIT
VLP_STATION.MSGIDXT
      1192**DCL      1195--REDEF
PL6.E3A0      #002=KFC$WRT_CSMSG File=KFC$CSCGMSG.:E05TSI                        WED 07/30/97 00:20 Page:47   
WRCSCGW
      1156**DCL      1207<>CALL
WRCSCGW.BUF_.BOUND
      1156**DCL      1205<<ASSIGN
WRCSCGW.BUF_.BUF$
      1158**DCL      1206<<ASSIGN
WRCSCGW.STATION_
      1158**DCL      1158--REDEF
WRCSCGW.V
      1159**DCL      1156--DCLINIT
WRCSCGW.V.DVBYTE.VFC#
      1165**DCL      1165--REDEF
