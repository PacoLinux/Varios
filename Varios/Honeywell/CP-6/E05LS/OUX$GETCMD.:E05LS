VERSION E05

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:1    
        1        1        /*M* OUX$GETCMD TEMPLAT command reading and parsing routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*                                                                *
       10       10             ADMISSION:     These routines were stolen from XUR$GETCMD
       11       11                            and adapted to work in the PL-6/TEMPLAT
       12       12                            environment. Sorry 'bout that, J.T.           */
       13       13                                                /**/
       14       14        /**/
       15       15        /*
       16       16          ###  #   # #   #   #    ###  ##### #####  ###  #   # ####
       17       17         # # # #   # #   #  ###  #   # #       #   #   # ## ## #   #
       18       18         # # # #   #  # #  # #   #     #       #   #     # # # #   #
       19       19         #  ## #   #   #    ###  #     ####    #   #     #   # #   #
       20       20         #   # #   #  # #    # # #  ## #       #   #     #   # #   #
       21       21         #   # #   # #   #  ###  #   # #       #   #   # #   # #   #
       22       22          ###   ###  #   #   #    ###  #####   #    ###  #   # ####
       23       23                                                                          */
       24       24        /*D*    NAME: OUX$GETCMD
       25       25                CALL: CALL OUX$GETCMD(NODES,OUT$,PROMPT_,TXT,TSIZ,ROUTINE) ALTRET;
       26       26                INPUT:   NODES - INPUT NODES FOR X$PARSE
       27       27                         OUT$ - CELL INTO WHICH OUX_PCB.OUT$ IS STORED OR ERROR
       28       28                                CODE IN CASE OF ALTRET.
       29       29                         PROMPT_ - VECTOR FRAMING PROMPT STRING.
       30       30                         TXT - TEXT STRING TO BE USED AS FIRST LINE OF INPUT TO
       31       31                               PARSER.  MAY BE USED IF IT IS DESIRED TO PARSE
       32       32                               JIT.CCBUF FOR EXAMPLE.  (OPTIONAL)
       33       33                         TSIZ - SIZE OF TXT IN CHARACTERS.
       34       34                         ROUTINE - EPTR TO ROUTINE TO BE CALLED FOR SUCCESS AND
       35       35                                   FAILURE NODES.  (OPTIONAL)
       36       36                DESCRIPTION:
       37       37                   This routine reads command input and returns the output
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:2    
       38       38                blocks generated by X$PARSE from the command read.  As
       39       39                command input is read it is echoed if either the input or
       40       40                output DCB is not assigned to an 'IC' type device.  The
       41       41                default input DCB is M$SI and the default output DCB is M$ME.
       42       42                These defaults may be changed with a call to OUX$SETDCBS.
       43       43                   Commands may be continued by ending a command line with a
       44       44                semicolon.  If commands are being read from other than an 'IC'
       45       45                device and the command input begins with the prompt string
       46       46                then the prompt string will be deleted from the input before
       47       47                it is passed to the parser.
       48       48
       49       49                NOTE: The include file OUX_ENTRY contains ENTRY DCLs for all
       50       50                      the routines documented here.
       51       51                                                                           */
       52       52        /*D*    NAME: OUX$SETDCBS
       53       53                CALL: CALL OUX$SETDCBS(INDCB,OUTDCB);
       54       54                INPUT:   INDCB - DCB NUMBER OF INPUT DCB.
       55       55                         OUTDCB - DCB NUMBER OF OUTPUT DCB.
       56       56                DESCRIPTION:
       57       57                   This routine changes the input and output DCBs.  Either
       58       58                argument may be omitted if that DCB is not to be changed.
       59       59                                                                           */
       60       60        /*D*    NAME: OUX$SETMEM
       61       61                CALL: CALL OUX$SETMEM(MEMVEC);
       62       62                INPUT:   MEMVEC - A VECTOR FRAMING A CHUNK OF MEMORY;
       63       63                DESCRIPTION:
       64       64                   This routine may be called to set the memory to be used as
       65       65                an input buffer and parser work area.  The memory framed is
       66       66                equally devided between the two functions.  If this routine
       67       67                is not called before the first call to OUX$GETCMD or MEMVEC
       68       68                does not frame an integral number of doublewords it will
       69       69                altreturn.
       70       70                                                                           */
       71       71        /*D*    NAME: OUX$ERRPTR
       72       72                CALL: OUX$ERRPTR(CPOS,OUTDCB);
       73       73                INPUT:   CPOS - CHARACTER POSTITION AT WHICH ERROR OCCURED.
       74       74                                MOST LIKELY OBTAINED FROM OUX_PCB.HI_CHAR OR
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:3    
       75       75                                OUT$BLK.CPOS.
       76       76                         OUTDCB - DCB TO OUTPUT THROUGH.
       77       77                DESCRIPTION:
       78       78                   OUX$ECHOIF is called with OUTDCB as the parameter.  Then,
       79       79                if CPOS is within the last line of the command a '^' is
       80       80                printed under the character at CPOS.  Otherwise fifteen characters
       81       81                on either side of CPOS are printed through OUTDCB and a '^' is
       82       82                printed under the offending character.  The CPOS argument
       83       83                may be omitted in which case OUX_PCB.HI_CHAR is used.
       84       84                                                                           */
       85       85        /*D*    NAME: OUX$ECHO
       86       86                CALL: CALL OUX$ECHO(OUTDCB);
       87       87                INPUT:   OUTDCB - OUTPUT DCB NUMBER.
       88       88                DESCRIPTION:
       89       89                   Writes the last command through OUTDCB.
       90       90                                                                           */
       91       91        /*D*    NAME: OUX$ECHOIF
       92       92                CALL: CALL OUX$ECHOIF(OUTDCB);
       93       93                INPUT:   OUTDCB - DCB NUMBER OF OUTPUT DCB.
       94       94                DESCRIPTION:
       95       95                   If the last command has not already been written to
       96       96                the place to which OUTDCB is assigned the last command is
       97       97                written through OUTDCB.
       98       98                                                                           */
       99       99        /*D*    NAME: OUX$ERRMSG
      100      100                CALL: CALL OUX$ERRMSG(CODE,DCB#,OUTDCB,F1,F2,F3,FLGLEV) ALTRET;
      101      101                INPUT:   CODE - ERROR CODE.  (OPTIONAL.  IF THIS ARGUMENT
      102      102                                IS OMITTED THE SEVERITY FIELD OF THE LAST
      103      103                                CODE IS INCREMENTED.  IN THIS CASE THE
      104      104                                ALTRETURN IS TAKEN IF THE SEVERITY FIELD
      105      105                                EXCEEDS 7 OR NO MESSAGE IS FOUND.)
      106      106                         DCB# - DCB ON WHICH ERROR OCCURED. (OPTIONAL)
      107      107                         OUTDCB - DCB THAT ERROR MESSEAGE IS TO BE WRITTEN
      108      108                                  THROUGH.  (OPTIONAL.  DEFAULT IS M$DO.)
      109      109                         F1 - VECTOR FRAMING TEXTC TO BE USED FOR %U1 SUBSTITUTION.
      110      110                         F2 - VECTOR FRAMING TEXTC TO BE USED FOR %U2 SUBSTITUTION.
      111      111                         F3 - VECTOR FRAMING TEXTC TO BE USED FOR %U3 SUBSTITUTION.
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:4    
      112      112                         FLGLEV - Number of asterisks to print in front of the
      113      113                                  message (0-4).  Default is 0.
      114      114                         F1, F2, F3 AND FLGLEV ARE OPTIONAL.
      115      115                DESCRIPTION:
      116      116                   A call is made to M$ERRMSG using the parameters passed by
      117      117                the caller.
      118      118                                                                           */
      119      119        /*D*    NAME: OUX$SETERRMSG
      120      120                CALL: CALL OUX$SETERRMSG(FID) ALTRET;
      121      121                INPUT:   FID - TEXTC FID OF ERROR MESSAGE FILE TO BE USED
      122      122                               ON SUBSEQUENT CALLS TO OUX$ERRMSG.
      123      123                DESCRIPTION:
      124      124                   If the FID argument is passed then M$FID is called to
      125      125                obtain the name, account and password of the error message
      126      126                file to be used on subsequent calls to OUX$ERRMSG.  If the
      127      127                FID argument is omitted then the M$ERRMSG default file will
      128      128                be used.  If the altreturn is taken then M$FID altreted and
      129      129                the error code may be found in the altret frame.
      130      130                                                                           */
      131      131        /*D*    NAME: OUX$CORRES
      132      132                CALL: OUX$CORRES(DCB1,DCB2) ALTRET;
      133      133                INPUT:   DCB1 AND DCB2 ARE DCB NUMBERS.
      134      134                DESCRIPTION:
      135      135                   A default open is done on the DCBs if they are not open
      136      136                and the ALTRETURN is taken if the assignments of the DCBs
      137      137                correspond.
      138      138                                                                           */
      139      139        /*D*    NAME: OUX$ECHOLAST
      140      140                CALL: CALL OUX$ECHOLAST(OUTDCB);
      141      141                INPUT:   OUTDCB - DCB TO OUTPUT THROUGH
      142      142                DESCRIPTION:
      143      143                   Echos the last input line through OUTDCB.
      144      144                                                                           */
      145      145        /*D*    NAME: OUX$CLOSE_DCBS;
      146      146                CALL: CALL OUX$CLOSE_DCBS;
      147      147                DESCRIPTION:
      148      148                   Closes all open dcbs with SAVE.
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:5    
      149      149                                                                           */
      150      150        OUX$GETCMD: PROC(NODES,OUT$,PROMPT_,TXT,TSIZ,ROUTINE) ALTRET;
      151      151        /**/
      152      152    1   DCL NODES SBIN;
      153      153    1   DCL 1 VECBASE BASED,                    /* USED AS REDEF OF NODES */
      154      154    1            2 BOUND UBIN(20) UNAL,
      155      155    1            2 FLAGS BIT(16),
      156      156    1            2 P$ PTR;
      157      157    1   DCL OUT$ PTR;
      158      158    1   DCL ERR REDEF OUT$ BIT(36);
      159      159    1   DCL PROMPT_ VECTOR;
      160      160    1   DCL 1 PROMPT REDEF PROMPT_,
      161      161    1            2 BOUND UBIN(20) UNAL,
      162      162    1            2 * BIT(16),
      163      163    1            2 PTR$ PTR;
      164      164    1   DCL TXT CHAR(TSIZ);
      165      165    1   DCL TSIZ SBIN;
      166      166    1   DCL ROUTINE EPTR;
      167      167        /**/
      168      168    1   DCL X$PARSE ENTRY(1) ALTRET;
      169      169    1   DCL OUX$ERRMSG ENTRY(6) ALTRET;
      170      170    1   DCL OUX$READCMD ENTRY(2) ALTRET;
      171      171    1   DCL OUX$CORRES ENTRY(2) ALTRET;
      172      172    1   DCL OUX$PU ENTRY(1);
      173      173    1   DCL OUX$SETLAST ENTRY(1) ALTRET;
      174      174        /**/
      175      175        %INCLUDE XU_MACRO_C;
      176     3281        %P_PCB (NAME=OUX_PCB,U$=OUX$PU);
      177     3480        %INCLUDE CP_6;
      178     3561        %INCLUDE F$DCB;
      179     3610    1   DCL M$ME DCB;
      180     3611    1   DCL M$SI DCB;
      181     3612    1   DCL GDSVEC BIT(72) STATIC INIT('0'B);
      182     3613    1   DCL 1 BUFVEC STATIC ALIGNED,
      183     3614    1            2 BOUND UBIN(20) UNAL,
      184     3615    1            2 * BIT(16),
      185     3616    1            2 PTR$ PTR;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:6    
      186     3617    1   DCL INBUF CHAR(1024) BASED(BUFVEC.PTR$);
      187     3618    1   DCL 1 WVEC STATIC ALIGNED,
      188     3619    1            2 BOUND UBIN(20) UNAL,
      189     3620    1            2 * BIT(16),
      190     3621    1            2 PTR$ PTR;
      191     3622    1   DCL OUX_INDCB UBIN STATIC SYMDEF INIT(DCBNUM(M$SI));
      192     3623    1   DCL OUX_IN$ PTR STATIC SYMDEF;
      193     3624    1   DCL OUX_OUTDCB UBIN STATIC SYMDEF INIT(DCBNUM(M$ME));
      194     3625    1   DCL OUX_OUT$ PTR STATIC SYMDEF;
      195     3626        %FPT_GDS (RESULTS=GDSVEC,SEGSIZE=2048);
      196     3642        %FPT_WRITE (WAIT=YES,BUF=OUX_BUF);
      197     3673        %FPT_PROMPT;
      198     3701    1   DCL OUX_BUF CHAR(300) STATIC SYMDEF;
      199     3702    1   DCL OUX_BUFA(0:299) REDEF OUX_BUF CHAR(1);
      200     3703    1   DCL OUX_CSIZE SBIN STATIC SYMDEF;
      201     3704    1   DCL 1 READVEC STATIC ALIGNED,
      202     3705    1            2 BOUND UBIN(20) UNAL,
      203     3706    1            2 * BIT(16),
      204     3707    1            2 PTR$ PTR;
      205     3708    1   DCL ARS SBIN;
      206     3709    1   DCL CPOS SBIN STATIC ALIGNED;
      207     3710    1   DCL REM_PARSE REMEMBER STATIC DALIGNED;
      208     3711    1   DCL OUX_POFF SBIN STATIC SYMDEF INIT(1);
      209     3712    1   DCL OUX_PROMPT CHAR(32) STATIC SYMDEF INIT('*');
      210     3713    1   DCL PROMPT_FLG BIT(1) ALIGNED;
      211     3714    1   DCL OUX_ROUTINE EPTR STATIC SYMDEF INIT(ENTADDR(NIL));
      212     3715    1   DCL I SBIN;
      213     3716    1   DCL EPOS SBIN;
      214     3717    1   DCL CSIZE SBIN;
      215     3718    1   DCL START_CHAR SBIN;
      216     3719    1   DCL END_CHAR SBIN;
      217     3720    1   DCL CHARBASE CHAR(CSIZE) BASED;
      218     3721    1   DCL CHARARRAY(0:0) CHAR(1) BASED;
      219     3722    1   DCL TPOS SBIN;
      220     3723    1   DCL NLINES UBIN STATIC;
      221     3724    1   DCL LPOS(0:49) UBIN HALF UNAL STATIC INIT(0*0);
      222     3725    1   DCL NDCBS UBIN STATIC;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:7    
      223     3726    1   DCL DCBS(0:29) UBIN STATIC INIT(DCBNUM(M$SI),DCBNUM(M$ME),0*0);
      224     3727        %B$TCB;
      225     3730        %B$ALT;
      226     3738    1   DCL B$TCB$ PTR SYMREF;
      227     3739        %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:8    
      228     3740                                           /* Added these structures to inter-
      229     3741                                                face to PL-6 correctly */
      230     3742    1   DCL 1 NS_BUFR,
      231     3743    1            2 RECNO UBIN,
      232     3744    1            2 INPUT_KEY,
      233     3745    1                 3 TCHAR UBIN(8) UNAL,
      234     3746    1                 3 EDIT_VAL SBIN(28) UNAL,
      235     3747    1            2 TEXT CHAR(273);
      236     3748    1   DCL TEXTB CHAR(TEXTCOUNT) BASED;
      237     3749    1   DCL TEXTCOUNT SBIN ALIGNED;
      238     3750                                                /**/
      239     3751        %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:9    
      240     3752    1        IF GDSVEC='0'B
      241     3753    1        THEN
      242     3754    1             CALL M$GDS(FPT_GDS) ALTRET(MALT);
      243     3755    1        REMEMBER PARSEALT IN REM_PARSE;
      244     3756    1        NLINES=0;
      245     3757    1        NDCBS=1;
      246     3758    1        OUX_IN$=DCBADDR(OUX_INDCB);
      247     3759    1        OUX_OUT$=DCBADDR(OUX_OUTDCB);
      248     3760    1        DCBS(0)=OUX_INDCB;
      249     3761    1        DCBS(1)=OUX_OUTDCB;
      250     3762    1        IF ADDR(PROMPT_)~=ADDR(NIL)
      251     3763    1        THEN
      252     3764    2        DO;
      253     3765    2             PROMPT_FLG='0'B;
      254     3766    2             IF PROMPT_=VECTOR(NIL) OR PROMPT_=VECTOR(ERASE)
      255     3767    2             THEN
      256     3768    3             DO;
      257     3769    3                  IF OUX_POFF>0
      258     3770    3                  THEN
      259     3771    3                       PROMPT_FLG='1'B;
      260     3772    3                  OUX_POFF=0;
      261     3773    3                  OUX_PROMPT=' ';
      262     3774    3                END;
      263     3775    2             ELSE
      264     3776    3             DO;
      265     3777    3                  CSIZE=PROMPT.BOUND+1;
      266     3778    3                  IF OUX_POFF~=CSIZE OR OUX_PROMPT~=PROMPT.PTR$->CHARBASE
      267     3779    3                  THEN
      268     3780    3                       PROMPT_FLG='1'B;
      269     3781    3                  OUX_POFF=CSIZE;
      270     3782    3                  OUX_PROMPT=PROMPT.PTR$->CHARBASE;
      271     3783    3                END;
      272     3784    2             IF PROMPT_FLG AND DCBADDR(DCBNUM(M$UC))->F$DCB.DDEV.IC
      273     3785    2             THEN
      274     3786    3             DO;
      275     3787    3                  FPT_PROMPT.PROMPT_=PROMPT_;
      276     3788    3                  CALL M$PROMPT(FPT_PROMPT);
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:10   
      277     3789    3                END;
      278     3790    2           END;
      279     3791    1        IF ADDR(ROUTINE)=ADDR(NIL)
      280     3792    1        THEN
      281     3793    1             OUX_ROUTINE=ENTADDR(NIL);
      282     3794    1        ELSE
      283     3795    1             OUX_ROUTINE=ROUTINE;
      284     3796    1        BUFVEC=GDSVEC;
      285     3797    1        BUFVEC.BOUND=BUFVEC.BOUND/2;
      286     3798    1        WVEC=BUFVEC;
      287     3799    1        WVEC.PTR$=PINCRC(BUFVEC.PTR$,BUFVEC.BOUND+1);
      288     3800    1        READVEC=BUFVEC;
      289     3801    1        CPOS=0;
      290     3802    1        IF ADDR(TXT)=ADDR(NIL)
      291     3803    1        THEN
      292     3804    1             CALL OUX$READCMD(READVEC,ARS) ALTRET(RDALT1);
      293     3805    1        ELSE
      294     3806    2        DO;
      295     3807    2             CSIZE=TSIZ;
      296     3808    2             READVEC.PTR$->CHARBASE=TXT;
      297     3809    2             READVEC.BOUND=TSIZ-1;
      298     3810    2             CALL OUX$SETLAST(READVEC);
      299     3811    2             ARS=TSIZ;
      300     3812    2           END;
      301     3813    1        NLINES=1;
      302     3814    1        LPOS(NLINES)=ARS;
      303     3815    1        OUX_PCB.TEXT$=PINCRC(BUFVEC.PTR$,8);
      304     3816    1        OUX_PCB.ROOT$=ADDR(NODES);
      305     3817    1        OUX_PCB.WORK$=WVEC.PTR$;
      306     3818    1        OUX_PCB.WKSZ=(WVEC.BOUND+1)/4;
      307     3819    1        OUX_PCB.NCHARS=ARS-8;
      308     3820    1        CALL X$PARSE(OUX_PCB) ALTRET(PARSEALT);
      309     3821    1        OUT$=OUX_PCB.OUT$;
      310     3822    1        RETURN;
      311     3823    1   MALT: ERR=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      312     3824    1        ALTRETURN;
      313     3825    1   PARSEALT:;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:11   
      314     3826    1        ERR=OUX_PCB.ERROR;
      315     3827    1        ALTRETURN;
      316     3828    1   RDALT1: ERR=BINBIT(ARS,36);
      317     3829    1        ALTRETURN;
      318     3830         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:12   
      319     3831    1   OUX$GETMORE: ENTRY(NODES) ALTRET;
      320     3832         /**/
      321     3833    1        READVEC.PTR$=ADDR(NS_BUFR);
      322     3834    1        READVEC.BOUND=LENGTHC(NS_BUFR);
      323     3835    1        CPOS=NODES;
      324     3836    1        LPOS(NLINES)=NODES;
      325     3837    1        CALL OUX$READCMD(READVEC,ARS) ALTRET(RDALT2);
      326     3838    1        TEXTCOUNT = ARS - 8;
      327     3839    1        PINCRC(BUFVEC.PTR$,NODES+8) -> TEXTB =
      328     3840    1             ADDR(NS_BUFR.TEXT) -> TEXTB;
      329     3841    1        ARS = TEXTCOUNT;
      330     3842    1        NLINES=NLINES+1;
      331     3843    1        LPOS(NLINES)=NODES+ARS;
      332     3844    1        OUX_PCB.NCHARS=NODES+ARS;
      333     3845    1        RETURN;
      334     3846    1   RDALT2: OUX_PCB.ERROR=BINBIT(ARS,36);
      335     3847    1        UNWIND TO REM_PARSE;
      336     3848         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:13   
      337     3849    1   OUX$ERRPTR: ENTRY(NODES,OUT$) ALTRET;
      338     3850         /**/
      339     3851    1        OUX_BUF=' ';
      340     3852    1        IF ADDR(NODES)=ADDR(NIL)
      341     3853    1        THEN
      342     3854    1             EPOS=OUX_PCB.HI_CHAR;
      343     3855    1        ELSE
      344     3856    1             EPOS=NODES;
      345     3857    1        CPOS=OUX_PCB.NCHARS;
      346     3858    1        IF EPOS>15
      347     3859    1        THEN
      348     3860    2        DO;
      349     3861    2             START_CHAR = EPOS - 15;
      350     3862    2             CSIZE = 15;
      351     3863    2           END;                            /* DO IF EPOS > 15 */
      352     3864    1        ELSE
      353     3865    2        DO;
      354     3866    2             START_CHAR = 0;
      355     3867    2             CSIZE = EPOS;
      356     3868    2           END;                            /* DO IF EPOS <= 15 */
      357     3869    1        OUX_BUF = '...';
      358     3870    1        PINCRC(ADDR(OUX_BUF),3) -> CHARBASE =
      359     3871    1             PINCRC (BUFVEC.PTR$, 8+START_CHAR) -> CHARBASE;
      360     3872    1        CPOS = 3 + CSIZE;
      361     3873    1        CALL INSERT (OUX_BUF, CPOS, 3, '<?>');
      362     3874    1        CPOS = CPOS + 3;
      363     3875    1        IF OUX_PCB.NCHARS > EPOS
      364     3876    1        THEN
      365     3877    2        DO;
      366     3878    2             IF (OUX_PCB.NCHARS-EPOS) > 15
      367     3879    2             THEN
      368     3880    2                  CSIZE = 15;
      369     3881    2             ELSE
      370     3882    2                  CSIZE = OUX_PCB.NCHARS - EPOS;
      371     3883    2             PINCRC (ADDR(OUX_BUF),CPOS) -> CHARBASE =
      372     3884    2                  PINCRC(BUFVEC.PTR$,8+EPOS) -> CHARBASE;
      373     3885    2             CPOS = CPOS + CSIZE;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:14   
      374     3886    2           END;                            /* DO IF NCHARS > EPOS */
      375     3887    1        CALL INSERT (OUX_BUF, CPOS, 3, '...');
      376     3888    1        OUX_CSIZE = CPOS + 3;
      377     3889    1        RETURN;
      378     3890         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:15   
      379     3891    1   OUX$ECHOIF: ENTRY(NODES) ALTRET;
      380     3892    2        DO I=0 TO NDCBS;
      381     3893    2             CALL OUX$CORRES(NODES,DCBS(I)) ALTRET(NO_ECHO);
      382     3894    2           END;
      383     3895    1   OUX$ECHO: ENTRY(NODES) ALTRET;
      384     3896    1        NDCBS=NDCBS+1;
      385     3897    1        DCBS(NDCBS)=NODES;
      386     3898    1        FPT_WRITE.V.DCB#=NODES;
      387     3899    2        DO I=1 TO NLINES;
      388     3900    2             CALL CONCAT(OUX_BUF,SUBSTR(OUX_PROMPT,0,OUX_POFF),
      389     3901    2                  SUBSTR(INBUF,LPOS(I-1),LPOS(I)-LPOS(I-1)),
      390     3902    2                  ';');
      391     3903    2             IF I=NLINES
      392     3904    2             THEN
      393     3905    2                  FPT_WRITE.BUF_.BOUND=OUX_POFF+LPOS(I)-LPOS(I-1)-1;
      394     3906    2             ELSE
      395     3907    2                  FPT_WRITE.BUF_.BOUND=OUX_POFF+LPOS(I)-LPOS(I-1);
      396     3908    2             CALL M$WRITE(FPT_WRITE);
      397     3909    2           END;
      398     3910    1   NO_ECHO: RETURN;
      399     3911         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:16   
      400     3912    1   OUX$SETDCBS: ENTRY(NODES,OUT$) ALTRET;
      401     3913    1        IF ADDR(NODES)~=ADDR(NIL)
      402     3914    1        THEN
      403     3915    2        DO;
      404     3916    2             IF NODES=DCBNUM(NIL)
      405     3917    2             THEN
      406     3918    2                  OUX_INDCB=DCBNUM(M$SI);
      407     3919    2             ELSE
      408     3920    2                  OUX_INDCB=NODES;
      409     3921    2           END;
      410     3922    1        IF ADDR(OUT$)~=ADDR(NIL)
      411     3923    1        THEN
      412     3924    2        DO;
      413     3925    2             IF BITBIN(ERR)=DCBNUM(NIL)
      414     3926    2             THEN
      415     3927    2                  OUX_OUTDCB=DCBNUM(M$ME);
      416     3928    2             ELSE
      417     3929    2                  OUX_OUTDCB=BITBIN(ERR);
      418     3930    2           END;
      419     3931    1        RETURN;
      420     3932         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:17   
      421     3933    1   OUX$SETMEM: ENTRY(NODES) ALTRET;
      422     3934    1        IF GDSVEC~='0'B
      423     3935    1        THEN
      424     3936    1             ALTRETURN;
      425     3937    1        IF MOD(ADDR(NODES)->VECBASE.BOUND,8)~=7
      426     3938    1        THEN
      427     3939    1             ALTRETURN;
      428     3940    1        GDSVEC=ADDR(NODES)->VECBASE;
      429     3941    1        RETURN;
      430     3942    1   END OUX$GETCMD;
      431     3943        %EOD;

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:18   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$GETCMD.

   Procedure OUX$GETCMD requires 480 words for executable code.
   Procedure OUX$GETCMD requires 96 words of local(AUTO) storage.

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:19   

 Object Unit name= OUX$GETCMD                                 File name= OUX$GETCMD.:E05TOU
 UTS= JUL 30 '97 04:16:21.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   201    311  OUX$GETCMD
    1   DCB   even  none     0      0  M$UC
    2   DCB   even  none     0      0  M$ME
    3   DCB   even  none     0      0  M$SI
    4  RoData even  UTS      2      2  OUX$GETCMD
    5   Proc  even  none   480    740  OUX$GETCMD
    6  RoData even  none    12     14  OUX$GETCMD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        6  OUX$GETCMD
     5    274          yes     yes      Std        1  OUX$GETMORE
     5    365          yes     yes      Std        2  OUX$ERRPTR
     5    476          yes     yes      Std        1  OUX$ECHOIF
     5    521          yes     yes      Std        1  OUX$ECHO
     5    670          yes     yes      Std        2  OUX$SETDCBS
     5    717          yes     yes      Std        1  OUX$SETMEM
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:20   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  OUX_PCB                            0     24  OUX_INDCB
    0     25  OUX_IN$                            0     26  OUX_OUTDCB
    0     27  OUX_OUT$                           0     64  OUX_BUF
    0    177  OUX_CSIZE                          0    206  OUX_POFF
    0    207  OUX_PROMPT                         0    217  OUX_ROUTINE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 OUX$PU
 yes     yes           Std       2 OUX$READCMD
 yes     yes           Std       1 OUX$SETLAST
 yes     yes           Std       1 X$PARSE
 yes     yes           Std       2 OUX$CORRES
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$ME                                  M$SI
     B$TCB$                                B_VECTNIL
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:21   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:22   


        1        1        /*M* OUX$GETCMD TEMPLAT command reading and parsing routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*                                                                *
       10       10             ADMISSION:     These routines were stolen from XUR$GETCMD
       11       11                            and adapted to work in the PL-6/TEMPLAT
       12       12                            environment. Sorry 'bout that, J.T.           */
       13       13                                                /**/
       14       14        /**/
       15       15        /*
       16       16          ###  #   # #   #   #    ###  ##### #####  ###  #   # ####
       17       17         # # # #   # #   #  ###  #   # #       #   #   # ## ## #   #
       18       18         # # # #   #  # #  # #   #     #       #   #     # # # #   #
       19       19         #  ## #   #   #    ###  #     ####    #   #     #   # #   #
       20       20         #   # #   #  # #    # # #  ## #       #   #     #   # #   #
       21       21         #   # #   # #   #  ###  #   # #       #   #   # #   # #   #
       22       22          ###   ###  #   #   #    ###  #####   #    ###  #   # ####
       23       23                                                                          */
       24       24        /*D*    NAME: OUX$GETCMD
       25       25                CALL: CALL OUX$GETCMD(NODES,OUT$,PROMPT_,TXT,TSIZ,ROUTINE) ALTRET;
       26       26                INPUT:   NODES - INPUT NODES FOR X$PARSE
       27       27                         OUT$ - CELL INTO WHICH OUX_PCB.OUT$ IS STORED OR ERROR
       28       28                                CODE IN CASE OF ALTRET.
       29       29                         PROMPT_ - VECTOR FRAMING PROMPT STRING.
       30       30                         TXT - TEXT STRING TO BE USED AS FIRST LINE OF INPUT TO
       31       31                               PARSER.  MAY BE USED IF IT IS DESIRED TO PARSE
       32       32                               JIT.CCBUF FOR EXAMPLE.  (OPTIONAL)
       33       33                         TSIZ - SIZE OF TXT IN CHARACTERS.
       34       34                         ROUTINE - EPTR TO ROUTINE TO BE CALLED FOR SUCCESS AND
       35       35                                   FAILURE NODES.  (OPTIONAL)
       36       36                DESCRIPTION:
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:23   
       37       37                   This routine reads command input and returns the output
       38       38                blocks generated by X$PARSE from the command read.  As
       39       39                command input is read it is echoed if either the input or
       40       40                output DCB is not assigned to an 'IC' type device.  The
       41       41                default input DCB is M$SI and the default output DCB is M$ME.
       42       42                These defaults may be changed with a call to OUX$SETDCBS.
       43       43                   Commands may be continued by ending a command line with a
       44       44                semicolon.  If commands are being read from other than an 'IC'
       45       45                device and the command input begins with the prompt string
       46       46                then the prompt string will be deleted from the input before
       47       47                it is passed to the parser.
       48       48
       49       49                NOTE: The include file OUX_ENTRY contains ENTRY DCLs for all
       50       50                      the routines documented here.
       51       51                                                                           */
       52       52        /*D*    NAME: OUX$SETDCBS
       53       53                CALL: CALL OUX$SETDCBS(INDCB,OUTDCB);
       54       54                INPUT:   INDCB - DCB NUMBER OF INPUT DCB.
       55       55                         OUTDCB - DCB NUMBER OF OUTPUT DCB.
       56       56                DESCRIPTION:
       57       57                   This routine changes the input and output DCBs.  Either
       58       58                argument may be omitted if that DCB is not to be changed.
       59       59                                                                           */
       60       60        /*D*    NAME: OUX$SETMEM
       61       61                CALL: CALL OUX$SETMEM(MEMVEC);
       62       62                INPUT:   MEMVEC - A VECTOR FRAMING A CHUNK OF MEMORY;
       63       63                DESCRIPTION:
       64       64                   This routine may be called to set the memory to be used as
       65       65                an input buffer and parser work area.  The memory framed is
       66       66                equally devided between the two functions.  If this routine
       67       67                is not called before the first call to OUX$GETCMD or MEMVEC
       68       68                does not frame an integral number of doublewords it will
       69       69                altreturn.
       70       70                                                                           */
       71       71        /*D*    NAME: OUX$ERRPTR
       72       72                CALL: OUX$ERRPTR(CPOS,OUTDCB);
       73       73                INPUT:   CPOS - CHARACTER POSTITION AT WHICH ERROR OCCURED.
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:24   
       74       74                                MOST LIKELY OBTAINED FROM OUX_PCB.HI_CHAR OR
       75       75                                OUT$BLK.CPOS.
       76       76                         OUTDCB - DCB TO OUTPUT THROUGH.
       77       77                DESCRIPTION:
       78       78                   OUX$ECHOIF is called with OUTDCB as the parameter.  Then,
       79       79                if CPOS is within the last line of the command a '^' is
       80       80                printed under the character at CPOS.  Otherwise fifteen characters
       81       81                on either side of CPOS are printed through OUTDCB and a '^' is
       82       82                printed under the offending character.  The CPOS argument
       83       83                may be omitted in which case OUX_PCB.HI_CHAR is used.
       84       84                                                                           */
       85       85        /*D*    NAME: OUX$ECHO
       86       86                CALL: CALL OUX$ECHO(OUTDCB);
       87       87                INPUT:   OUTDCB - OUTPUT DCB NUMBER.
       88       88                DESCRIPTION:
       89       89                   Writes the last command through OUTDCB.
       90       90                                                                           */
       91       91        /*D*    NAME: OUX$ECHOIF
       92       92                CALL: CALL OUX$ECHOIF(OUTDCB);
       93       93                INPUT:   OUTDCB - DCB NUMBER OF OUTPUT DCB.
       94       94                DESCRIPTION:
       95       95                   If the last command has not already been written to
       96       96                the place to which OUTDCB is assigned the last command is
       97       97                written through OUTDCB.
       98       98                                                                           */
       99       99        /*D*    NAME: OUX$ERRMSG
      100      100                CALL: CALL OUX$ERRMSG(CODE,DCB#,OUTDCB,F1,F2,F3,FLGLEV) ALTRET;
      101      101                INPUT:   CODE - ERROR CODE.  (OPTIONAL.  IF THIS ARGUMENT
      102      102                                IS OMITTED THE SEVERITY FIELD OF THE LAST
      103      103                                CODE IS INCREMENTED.  IN THIS CASE THE
      104      104                                ALTRETURN IS TAKEN IF THE SEVERITY FIELD
      105      105                                EXCEEDS 7 OR NO MESSAGE IS FOUND.)
      106      106                         DCB# - DCB ON WHICH ERROR OCCURED. (OPTIONAL)
      107      107                         OUTDCB - DCB THAT ERROR MESSEAGE IS TO BE WRITTEN
      108      108                                  THROUGH.  (OPTIONAL.  DEFAULT IS M$DO.)
      109      109                         F1 - VECTOR FRAMING TEXTC TO BE USED FOR %U1 SUBSTITUTION.
      110      110                         F2 - VECTOR FRAMING TEXTC TO BE USED FOR %U2 SUBSTITUTION.
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:25   
      111      111                         F3 - VECTOR FRAMING TEXTC TO BE USED FOR %U3 SUBSTITUTION.
      112      112                         FLGLEV - Number of asterisks to print in front of the
      113      113                                  message (0-4).  Default is 0.
      114      114                         F1, F2, F3 AND FLGLEV ARE OPTIONAL.
      115      115                DESCRIPTION:
      116      116                   A call is made to M$ERRMSG using the parameters passed by
      117      117                the caller.
      118      118                                                                           */
      119      119        /*D*    NAME: OUX$SETERRMSG
      120      120                CALL: CALL OUX$SETERRMSG(FID) ALTRET;
      121      121                INPUT:   FID - TEXTC FID OF ERROR MESSAGE FILE TO BE USED
      122      122                               ON SUBSEQUENT CALLS TO OUX$ERRMSG.
      123      123                DESCRIPTION:
      124      124                   If the FID argument is passed then M$FID is called to
      125      125                obtain the name, account and password of the error message
      126      126                file to be used on subsequent calls to OUX$ERRMSG.  If the
      127      127                FID argument is omitted then the M$ERRMSG default file will
      128      128                be used.  If the altreturn is taken then M$FID altreted and
      129      129                the error code may be found in the altret frame.
      130      130                                                                           */
      131      131        /*D*    NAME: OUX$CORRES
      132      132                CALL: OUX$CORRES(DCB1,DCB2) ALTRET;
      133      133                INPUT:   DCB1 AND DCB2 ARE DCB NUMBERS.
      134      134                DESCRIPTION:
      135      135                   A default open is done on the DCBs if they are not open
      136      136                and the ALTRETURN is taken if the assignments of the DCBs
      137      137                correspond.
      138      138                                                                           */
      139      139        /*D*    NAME: OUX$ECHOLAST
      140      140                CALL: CALL OUX$ECHOLAST(OUTDCB);
      141      141                INPUT:   OUTDCB - DCB TO OUTPUT THROUGH
      142      142                DESCRIPTION:
      143      143                   Echos the last input line through OUTDCB.
      144      144                                                                           */
      145      145        /*D*    NAME: OUX$CLOSE_DCBS;
      146      146                CALL: CALL OUX$CLOSE_DCBS;
      147      147                DESCRIPTION:
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:26   
      148      148                   Closes all open dcbs with SAVE.
      149      149                                                                           */
      150      150        OUX$GETCMD: PROC(NODES,OUT$,PROMPT_,TXT,TSIZ,ROUTINE) ALTRET;

    150  5 000000   000000 700200 xent  OUX$GETCMD   TSX0  ! X66_AUTO_N
         5 000001   000140 000006                    ZERO    96,6

      151      151        /**/
      152      152    1   DCL NODES SBIN;
      153      153    1   DCL 1 VECBASE BASED,                    /* USED AS REDEF OF NODES */
      154      154    1            2 BOUND UBIN(20) UNAL,
      155      155    1            2 FLAGS BIT(16),
      156      156    1            2 P$ PTR;
      157      157    1   DCL OUT$ PTR;
      158      158    1   DCL ERR REDEF OUT$ BIT(36);
      159      159    1   DCL PROMPT_ VECTOR;
      160      160    1   DCL 1 PROMPT REDEF PROMPT_,
      161      161    1            2 BOUND UBIN(20) UNAL,
      162      162    1            2 * BIT(16),
      163      163    1            2 PTR$ PTR;
      164      164    1   DCL TXT CHAR(TSIZ);
      165      165    1   DCL TSIZ SBIN;
      166      166    1   DCL ROUTINE EPTR;
      167      167        /**/
      168      168    1   DCL X$PARSE ENTRY(1) ALTRET;
      169      169    1   DCL OUX$ERRMSG ENTRY(6) ALTRET;
      170      170    1   DCL OUX$READCMD ENTRY(2) ALTRET;
      171      171    1   DCL OUX$CORRES ENTRY(2) ALTRET;
      172      172    1   DCL OUX$PU ENTRY(1);
      173      173    1   DCL OUX$SETLAST ENTRY(1) ALTRET;
      174      174        /**/
      175      175        %INCLUDE XU_MACRO_C;
      176     3281        %P_PCB (NAME=OUX_PCB,U$=OUX$PU);
      177     3480        %INCLUDE CP_6;
      178     3561        %INCLUDE F$DCB;
      179     3610    1   DCL M$ME DCB;
      180     3611    1   DCL M$SI DCB;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:27   
      181     3612    1   DCL GDSVEC BIT(72) STATIC INIT('0'B);
      182     3613    1   DCL 1 BUFVEC STATIC ALIGNED,
      183     3614    1            2 BOUND UBIN(20) UNAL,
      184     3615    1            2 * BIT(16),
      185     3616    1            2 PTR$ PTR;
      186     3617    1   DCL INBUF CHAR(1024) BASED(BUFVEC.PTR$);
      187     3618    1   DCL 1 WVEC STATIC ALIGNED,
      188     3619    1            2 BOUND UBIN(20) UNAL,
      189     3620    1            2 * BIT(16),
      190     3621    1            2 PTR$ PTR;
      191     3622    1   DCL OUX_INDCB UBIN STATIC SYMDEF INIT(DCBNUM(M$SI));
      192     3623    1   DCL OUX_IN$ PTR STATIC SYMDEF;
      193     3624    1   DCL OUX_OUTDCB UBIN STATIC SYMDEF INIT(DCBNUM(M$ME));
      194     3625    1   DCL OUX_OUT$ PTR STATIC SYMDEF;
      195     3626        %FPT_GDS (RESULTS=GDSVEC,SEGSIZE=2048);
      196     3642        %FPT_WRITE (WAIT=YES,BUF=OUX_BUF);
      197     3673        %FPT_PROMPT;
      198     3701    1   DCL OUX_BUF CHAR(300) STATIC SYMDEF;
      199     3702    1   DCL OUX_BUFA(0:299) REDEF OUX_BUF CHAR(1);
      200     3703    1   DCL OUX_CSIZE SBIN STATIC SYMDEF;
      201     3704    1   DCL 1 READVEC STATIC ALIGNED,
      202     3705    1            2 BOUND UBIN(20) UNAL,
      203     3706    1            2 * BIT(16),
      204     3707    1            2 PTR$ PTR;
      205     3708    1   DCL ARS SBIN;
      206     3709    1   DCL CPOS SBIN STATIC ALIGNED;
      207     3710    1   DCL REM_PARSE REMEMBER STATIC DALIGNED;
      208     3711    1   DCL OUX_POFF SBIN STATIC SYMDEF INIT(1);
      209     3712    1   DCL OUX_PROMPT CHAR(32) STATIC SYMDEF INIT('*');
      210     3713    1   DCL PROMPT_FLG BIT(1) ALIGNED;
      211     3714    1   DCL OUX_ROUTINE EPTR STATIC SYMDEF INIT(ENTADDR(NIL));
      212     3715    1   DCL I SBIN;
      213     3716    1   DCL EPOS SBIN;
      214     3717    1   DCL CSIZE SBIN;
      215     3718    1   DCL START_CHAR SBIN;
      216     3719    1   DCL END_CHAR SBIN;
      217     3720    1   DCL CHARBASE CHAR(CSIZE) BASED;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:28   
      218     3721    1   DCL CHARARRAY(0:0) CHAR(1) BASED;
      219     3722    1   DCL TPOS SBIN;
      220     3723    1   DCL NLINES UBIN STATIC;
      221     3724    1   DCL LPOS(0:49) UBIN HALF UNAL STATIC INIT(0*0);
      222     3725    1   DCL NDCBS UBIN STATIC;
      223     3726    1   DCL DCBS(0:29) UBIN STATIC INIT(DCBNUM(M$SI),DCBNUM(M$ME),0*0);
      224     3727        %B$TCB;
      225     3730        %B$ALT;
      226     3738    1   DCL B$TCB$ PTR SYMREF;
      227     3739        %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:29   
      228     3740                                           /* Added these structures to inter-
      229     3741                                                face to PL-6 correctly */
      230     3742    1   DCL 1 NS_BUFR,
      231     3743    1            2 RECNO UBIN,
      232     3744    1            2 INPUT_KEY,
      233     3745    1                 3 TCHAR UBIN(8) UNAL,
      234     3746    1                 3 EDIT_VAL SBIN(28) UNAL,
      235     3747    1            2 TEXT CHAR(273);
      236     3748    1   DCL TEXTB CHAR(TEXTCOUNT) BASED;
      237     3749    1   DCL TEXTCOUNT SBIN ALIGNED;
      238     3750                                                /**/
      239     3751        %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:30   
      240     3752    1        IF GDSVEC='0'B

   3752  5 000002   000016 237000 0                  LDAQ    GDSVEC
         5 000003   000000 117000 6                  CMPAQ   0
         5 000004   000011 601000 5                  TNZ     s:3755

      241     3753    1        THEN
      242     3754    1             CALL M$GDS(FPT_GDS) ALTRET(MALT);

   3754  5 000005   000030 630400 0                  EPPR0   FPT_GDS
         5 000006   430001 713400                    CLIMB   alt,gds
         5 000007   400400 401760                    pmme    nvectors=2
         5 000010   000256 702000 5                  TSX2    MALT

      243     3755    1        REMEMBER PARSEALT IN REM_PARSE;

   3755  5 000011   000264 635000 5                  EAA     PARSEALT
         5 000012   000204 452400 0                  STP2    REM_PARSE
         5 000013   000205 755000 0                  STA     REM_PARSE+1

      244     3756    1        NLINES=0;

   3756  5 000014   000220 450000 0                  STZ     NLINES

      245     3757    1        NDCBS=1;

   3757  5 000015   000001 236007                    LDQ     1,DL
         5 000016   000252 756000 0                  STQ     NDCBS

      246     3758    1        OUX_IN$=DCBADDR(OUX_INDCB);

   3758  5 000017   000002 470400 6                  LDP0    2
         5 000020   000000 471500                    LDP1    0,,PR0
         5 000021   000024 720000 0                  LXL0    OUX_INDCB
         5 000022   100000 236110                    LDQ     0,X0,PR1
         5 000023   000025 756000 0                  STQ     OUX_IN$

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:31   
      247     3759    1        OUX_OUT$=DCBADDR(OUX_OUTDCB);

   3759  5 000024   000026 721000 0                  LXL1    OUX_OUTDCB
         5 000025   100000 236111                    LDQ     0,X1,PR1
         5 000026   000027 756000 0                  STQ     OUX_OUT$

      248     3760    1        DCBS(0)=OUX_INDCB;

   3760  5 000027   000024 235000 0                  LDA     OUX_INDCB
         5 000030   000253 755000 0                  STA     DCBS

      249     3761    1        DCBS(1)=OUX_OUTDCB;

   3761  5 000031   000026 235000 0                  LDA     OUX_OUTDCB
         5 000032   000254 755000 0                  STA     DCBS+1

      250     3762    1        IF ADDR(PROMPT_)~=ADDR(NIL)

   3762  5 000033   200005 236100                    LDQ     @PROMPT_,,AUTO
         5 000034   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000035   000120 600000 5                  TZE     s:3791

      251     3763    1        THEN
      252     3764    2        DO;

      253     3765    2             PROMPT_FLG='0'B;

   3765  5 000036   200012 450100                    STZ     PROMPT_FLG,,AUTO

      254     3766    2             IF PROMPT_=VECTOR(NIL) OR PROMPT_=VECTOR(ERASE)

   3766  5 000037   200005 473500                    LDP3    @PROMPT_,,AUTO
         5 000040   300000 237100                    LDAQ    0,,PR3
         5 000041   000004 117000 6                  CMPAQ   4
         5 000042   000046 600000 5                  TZE     s:3769
         5 000043   300000 237100                    LDAQ    0,,PR3
         5 000044   000006 117000 6                  CMPAQ   6
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:32   
         5 000045   000057 601000 5                  TNZ     s:3777

      255     3767    2             THEN
      256     3768    3             DO;

      257     3769    3                  IF OUX_POFF>0

   3769  5 000046   000206 235000 0                  LDA     OUX_POFF
         5 000047   000052 604400 5                  TMOZ    s:3772

      258     3770    3                  THEN
      259     3771    3                       PROMPT_FLG='1'B;

   3771  5 000050   400000 236003                    LDQ     -131072,DU
         5 000051   200012 756100                    STQ     PROMPT_FLG,,AUTO

      260     3772    3                  OUX_POFF=0;

   3772  5 000052   000206 450000 0                  STZ     OUX_POFF

      261     3773    3                  OUX_PROMPT=' ';

   3773  5 000053   040000 100400                    MLR     fill='040'O
         5 000054   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000055   000207 000040 0                  ADSC9   OUX_PROMPT               cn=0,n=32

      262     3774    3                END;

   3774  5 000056   000104 710000 5                  TRA     s:3784

      263     3775    2             ELSE
      264     3776    3             DO;

      265     3777    3                  CSIZE=PROMPT.BOUND+1;

   3777  5 000057   300000 236100                    LDQ     0,,PR3
         5 000060   000020 772000                    QRL     16
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:33   
         5 000061   000001 036007                    ADLQ    1,DL
         5 000062   200015 756100                    STQ     CSIZE,,AUTO

      266     3778    3                  IF OUX_POFF~=CSIZE OR OUX_PROMPT~=PROMPT.PTR$->CHARBASE

   3778  5 000063   000206 116000 0                  CMPQ    OUX_POFF
         5 000064   000073 601000 5                  TNZ     s:3780
         5 000065   300001 474500                    LDP4    1,,PR3
         5 000066   000000 622006                    EAX2    0,QL
         5 000067   040140 106400                    CMPC    fill='040'O
         5 000070   000207 000040 0                  ADSC9   OUX_PROMPT               cn=0,n=32
         5 000071   400000 000012                    ADSC9   0,,PR4                   cn=0,n=*X2
         5 000072   000075 600000 5                  TZE     s:3781

      267     3779    3                  THEN
      268     3780    3                       PROMPT_FLG='1'B;

   3780  5 000073   400000 236003                    LDQ     -131072,DU
         5 000074   200012 756100                    STQ     PROMPT_FLG,,AUTO

      269     3781    3                  OUX_POFF=CSIZE;

   3781  5 000075   200015 236100                    LDQ     CSIZE,,AUTO
         5 000076   000206 756000 0                  STQ     OUX_POFF

      270     3782    3                  OUX_PROMPT=PROMPT.PTR$->CHARBASE;

   3782  5 000077   300001 474500                    LDP4    1,,PR3
         5 000100   000000 622006                    EAX2    0,QL
         5 000101   040000 100540                    MLR     fill='040'O
         5 000102   400000 000012                    ADSC9   0,,PR4                   cn=0,n=*X2
         5 000103   000207 000040 0                  ADSC9   OUX_PROMPT               cn=0,n=32

      271     3783    3                END;

      272     3784    2             IF PROMPT_FLG AND DCBADDR(DCBNUM(M$UC))->F$DCB.DDEV.IC

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:34   
   3784  5 000104   200012 234100                    SZN     PROMPT_FLG,,AUTO
         5 000105   000120 605000 5                  TPL     s:3791
         5 000106   000000 236007 xsym               LDQ     M$UC,DL
         5 000107   100000 474506                    LDP4    0,QL,PR1
         5 000110   400004 236100                    LDQ     4,,PR4
         5 000111   100000 316007                    CANQ    32768,DL
         5 000112   000120 600000 5                  TZE     s:3791

      273     3785    2             THEN
      274     3786    3             DO;

      275     3787    3                  FPT_PROMPT.PROMPT_=PROMPT_;

   3787  5 000113   300000 237100                    LDAQ    0,,PR3
         5 000114   000056 757000 0                  STAQ    FPT_PROMPT+4

      276     3788    3                  CALL M$PROMPT(FPT_PROMPT);

   3788  5 000115   000052 630400 0                  EPPR0   FPT_PROMPT
         5 000116   160002 713400                    CLIMB   57346
         5 000117   401000 401760                    pmme    nvectors=3

      277     3789    3                END;

      278     3790    2           END;

      279     3791    1        IF ADDR(ROUTINE)=ADDR(NIL)

   3791  5 000120   200010 236100                    LDQ     @ROUTINE,,AUTO
         5 000121   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000122   000126 601000 5                  TNZ     s:3795

      280     3792    1        THEN
      281     3793    1             OUX_ROUTINE=ENTADDR(NIL);

   3793  5 000123   000002 236000 xsym               LDQ     B_VECTNIL+2
         5 000124   000217 756000 0                  STQ     OUX_ROUTINE
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:35   
         5 000125   000131 710000 5                  TRA     s:3796

      282     3794    1        ELSE
      283     3795    1             OUX_ROUTINE=ROUTINE;

   3795  5 000126   200010 470500                    LDP0    @ROUTINE,,AUTO
         5 000127   000000 236100                    LDQ     0,,PR0
         5 000130   000217 756000 0                  STQ     OUX_ROUTINE

      284     3796    1        BUFVEC=GDSVEC;

   3796  5 000131   000016 237000 0                  LDAQ    GDSVEC
         5 000132   000020 757000 0                  STAQ    BUFVEC

      285     3797    1        BUFVEC.BOUND=BUFVEC.BOUND/2;

   3797  5 000133   000020 236000 0                  LDQ     BUFVEC
         5 000134   000020 772000                    QRL     16
         5 000135   000001 772000                    QRL     1
         5 000136   000020 736000                    QLS     16
         5 000137   000020 676000 0                  ERQ     BUFVEC
         5 000140   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000141   000020 656000 0                  ERSQ    BUFVEC

      286     3798    1        WVEC=BUFVEC;

   3798  5 000142   000020 237000 0                  LDAQ    BUFVEC
         5 000143   000022 757000 0                  STAQ    WVEC

      287     3799    1        WVEC.PTR$=PINCRC(BUFVEC.PTR$,BUFVEC.BOUND+1);

   3799  5 000144   000020 236000 0                  LDQ     BUFVEC
         5 000145   000020 772000                    QRL     16
         5 000146   000020 736000                    QLS     16
         5 000147   200000 036007                    ADLQ    65536,DL
         5 000150   000021 036000 0                  ADLQ    BUFVEC+1
         5 000151   000023 756000 0                  STQ     WVEC+1
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:36   

      288     3800    1        READVEC=BUFVEC;

   3800  5 000152   000020 237000 0                  LDAQ    BUFVEC
         5 000153   000200 757000 0                  STAQ    READVEC

      289     3801    1        CPOS=0;

   3801  5 000154   000202 450000 0                  STZ     CPOS

      290     3802    1        IF ADDR(TXT)=ADDR(NIL)

   3802  5 000155   200006 236100                    LDQ     @TXT,,AUTO
         5 000156   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000157   000171 601000 5                  TNZ     s:3807

      291     3803    1        THEN
      292     3804    1             CALL OUX$READCMD(READVEC,ARS) ALTRET(RDALT1);

   3804  5 000160   200011 630500                    EPPR0   ARS,,AUTO
         5 000161   200133 450500                    STP0    TEXTCOUNT+3,,AUTO
         5 000162   000010 236000 6                  LDQ     8
         5 000163   200132 756100                    STQ     TEXTCOUNT+2,,AUTO
         5 000164   200132 630500                    EPPR0   TEXTCOUNT+2,,AUTO
         5 000165   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000166   000000 701000 xent               TSX1    OUX$READCMD
         5 000167   000270 702000 5                  TSX2    RDALT1
         5 000170   000220 710000 5                  TRA     s:3813

      293     3805    1        ELSE
      294     3806    2        DO;

      295     3807    2             CSIZE=TSIZ;

   3807  5 000171   200007 470500                    LDP0    @TSIZ,,AUTO
         5 000172   000000 235100                    LDA     0,,PR0
         5 000173   200015 755100                    STA     CSIZE,,AUTO
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:37   

      296     3808    2             READVEC.PTR$->CHARBASE=TXT;

   3808  5 000174   000000 720100                    LXL0    0,,PR0
         5 000175   200006 471500                    LDP1    @TXT,,AUTO
         5 000176   000201 473400 0                  LDP3    READVEC+1
         5 000177   000000 621005                    EAX1    0,AL
         5 000200   040140 100540                    MLR     fill='040'O
         5 000201   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         5 000202   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

      297     3809    2             READVEC.BOUND=TSIZ-1;

   3809  5 000203   000000 236100                    LDQ     0,,PR0
         5 000204   000001 136007                    SBLQ    1,DL
         5 000205   000020 736000                    QLS     16
         5 000206   000200 676000 0                  ERQ     READVEC
         5 000207   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000210   000200 656000 0                  ERSQ    READVEC

      298     3810    2             CALL OUX$SETLAST(READVEC);

   3810  5 000211   000010 630400 6                  EPPR0   8
         5 000212   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000213   000000 701000 xent               TSX1    OUX$SETLAST
         5 000214   000000 011000                    NOP     0

      299     3811    2             ARS=TSIZ;

   3811  5 000215   200007 470500                    LDP0    @TSIZ,,AUTO
         5 000216   000000 235100                    LDA     0,,PR0
         5 000217   200011 755100                    STA     ARS,,AUTO

      300     3812    2           END;

      301     3813    1        NLINES=1;

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:38   
   3813  5 000220   000001 235007                    LDA     1,DL
         5 000221   000220 755000 0                  STA     NLINES

      302     3814    1        LPOS(NLINES)=ARS;

   3814  5 000222   000001 735000                    ALS     1
         5 000223   000005 101500                    MRL     fill='000'O
         5 000224   200011 000004                    ADSC9   ARS,,AUTO                cn=0,n=4
         5 000225   000221 000002 0                  ADSC9   LPOS,A                   cn=0,n=2

      303     3815    1        OUX_PCB.TEXT$=PINCRC(BUFVEC.PTR$,8);

   3815  5 000226   000021 236000 0                  LDQ     BUFVEC+1
         5 000227   000002 036003                    ADLQ    2,DU
         5 000230   000000 756000 0                  STQ     OUX_PCB

      304     3816    1        OUX_PCB.ROOT$=ADDR(NODES);

   3816  5 000231   200003 236100                    LDQ     @NODES,,AUTO
         5 000232   000001 756000 0                  STQ     OUX_PCB+1

      305     3817    1        OUX_PCB.WORK$=WVEC.PTR$;

   3817  5 000233   000023 236000 0                  LDQ     WVEC+1
         5 000234   000002 756000 0                  STQ     OUX_PCB+2

      306     3818    1        OUX_PCB.WKSZ=(WVEC.BOUND+1)/4;

   3818  5 000235   000022 236000 0                  LDQ     WVEC
         5 000236   000020 772000                    QRL     16
         5 000237   000001 036007                    ADLQ    1,DL
         5 000240   000002 772000                    QRL     2
         5 000241   000000 620006                    EAX0    0,QL
         5 000242   000005 740000 0                  STX0    OUX_PCB+5

      307     3819    1        OUX_PCB.NCHARS=ARS-8;

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:39   
   3819  5 000243   200011 236100                    LDQ     ARS,,AUTO
         5 000244   000010 136007                    SBLQ    8,DL
         5 000245   000011 756000 0                  STQ     OUX_PCB+9

      308     3820    1        CALL X$PARSE(OUX_PCB) ALTRET(PARSEALT);

   3820  5 000246   000011 630400 6                  EPPR0   9
         5 000247   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000250   000000 701000 xent               TSX1    X$PARSE
         5 000251   000264 702000 5                  TSX2    PARSEALT

      309     3821    1        OUT$=OUX_PCB.OUT$;

   3821  5 000252   000003 236000 0                  LDQ     OUX_PCB+3
         5 000253   200004 470500                    LDP0    @OUT$,,AUTO
         5 000254   000000 756100                    STQ     0,,PR0

      310     3822    1        RETURN;

   3822  5 000255   000000 702200 xent               TSX2  ! X66_ARET

      311     3823    1   MALT: ERR=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   3823  5 000256   000000 470400 xsym  MALT         LDP0    B$TCB$
         5 000257   000000 471500                    LDP1    0,,PR0
         5 000260   100102 236100                    LDQ     66,,PR1
         5 000261   200004 473500                    LDP3    @OUT$,,AUTO
         5 000262   300000 756100                    STQ     0,,PR3

      312     3824    1        ALTRETURN;

   3824  5 000263   000000 702200 xent               TSX2  ! X66_AALT

   3821  5 000264                       PARSEALT     null
      313     3825    1   PARSEALT:;
      314     3826    1        ERR=OUX_PCB.ERROR;

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:40   
   3826  5 000264   000006 236000 0                  LDQ     OUX_PCB+6
         5 000265   200004 470500                    LDP0    @OUT$,,AUTO
         5 000266   000000 756100                    STQ     0,,PR0

      315     3827    1        ALTRETURN;

   3827  5 000267   000000 702200 xent               TSX2  ! X66_AALT

      316     3828    1   RDALT1: ERR=BINBIT(ARS,36);

   3828  5 000270   200011 236100       RDALT1       LDQ     ARS,,AUTO
         5 000271   200004 470500                    LDP0    @OUT$,,AUTO
         5 000272   000000 756100                    STQ     0,,PR0

      317     3829    1        ALTRETURN;

   3829  5 000273   000000 702200 xent               TSX2  ! X66_AALT

      318     3830         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:41   
      319     3831    1   OUX$GETMORE: ENTRY(NODES) ALTRET;

   3831  5 000274   000000 700200 xent  OUX$GETMORE  TSX0  ! X66_AUTO_N
         5 000275   000140 000006                    ZERO    96,6

      320     3832         /**/
      321     3833    1        READVEC.PTR$=ADDR(NS_BUFR);

   3833  5 000276   200021 630500                    EPPR0   NS_BUFR,,AUTO
         5 000277   000201 450400 0                  STP0    READVEC+1

      322     3834    1        READVEC.BOUND=LENGTHC(NS_BUFR);

   3834  5 000300   000200 236000 0                  LDQ     READVEC
         5 000301   177777 376007                    ANQ     65535,DL
         5 000302   000012 276000 6                  ORQ     10
         5 000303   000200 756000 0                  STQ     READVEC

      323     3835    1        CPOS=NODES;

   3835  5 000304   200003 471500                    LDP1    @NODES,,AUTO
         5 000305   100000 235100                    LDA     0,,PR1
         5 000306   000202 755000 0                  STA     CPOS

      324     3836    1        LPOS(NLINES)=NODES;

   3836  5 000307   000220 235000 0                  LDA     NLINES
         5 000310   000001 735000                    ALS     1
         5 000311   000005 101500                    MRL     fill='000'O
         5 000312   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         5 000313   000221 000002 0                  ADSC9   LPOS,A                   cn=0,n=2

      325     3837    1        CALL OUX$READCMD(READVEC,ARS) ALTRET(RDALT2);

   3837  5 000314   200011 633500                    EPPR3   ARS,,AUTO
         5 000315   200133 453500                    STP3    TEXTCOUNT+3,,AUTO
         5 000316   000010 236000 6                  LDQ     8
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:42   
         5 000317   200132 756100                    STQ     TEXTCOUNT+2,,AUTO
         5 000320   200132 630500                    EPPR0   TEXTCOUNT+2,,AUTO
         5 000321   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000322   000000 701000 xent               TSX1    OUX$READCMD
         5 000323   000360 702000 5                  TSX2    RDALT2

      326     3838    1        TEXTCOUNT = ARS - 8;

   3838  5 000324   200011 235100                    LDA     ARS,,AUTO
         5 000325   000010 135007                    SBLA    8,DL
         5 000326   200130 755100                    STA     TEXTCOUNT,,AUTO

      327     3839    1        PINCRC(BUFVEC.PTR$,NODES+8) -> TEXTB =

   3839  5 000327   200003 470500                    LDP0    @NODES,,AUTO
         5 000330   000000 236100                    LDQ     0,,PR0
         5 000331   000000 620005                    EAX0    0,AL
         5 000332   000021 471400 0                  LDP1    BUFVEC+1
         5 000333   200130 721100                    LXL1    TEXTCOUNT,,AUTO
         5 000334   040146 100540                    MLR     fill='040'O
         5 000335   200023 000010                    ADSC9   NS_BUFR+2,,AUTO          cn=0,n=*X0
         5 000336   100002 000011                    ADSC9   2,Q,PR1                  cn=0,n=*X1

      328     3840    1             ADDR(NS_BUFR.TEXT) -> TEXTB;
      329     3841    1        ARS = TEXTCOUNT;

   3841  5 000337   200130 235100                    LDA     TEXTCOUNT,,AUTO
         5 000340   200011 755100                    STA     ARS,,AUTO

      330     3842    1        NLINES=NLINES+1;

   3842  5 000341   000220 236000 0                  LDQ     NLINES
         5 000342   000001 036007                    ADLQ    1,DL
         5 000343   000220 756000 0                  STQ     NLINES

      331     3843    1        LPOS(NLINES)=NODES+ARS;

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:43   
   3843  5 000344   000000 236100                    LDQ     0,,PR0
         5 000345   200011 036100                    ADLQ    ARS,,AUTO
         5 000346   200132 756100                    STQ     TEXTCOUNT+2,,AUTO
         5 000347   000220 235000 0                  LDA     NLINES
         5 000350   000001 735000                    ALS     1
         5 000351   000005 101500                    MRL     fill='000'O
         5 000352   200132 000004                    ADSC9   TEXTCOUNT+2,,AUTO        cn=0,n=4
         5 000353   000221 000002 0                  ADSC9   LPOS,A                   cn=0,n=2

      332     3844    1        OUX_PCB.NCHARS=NODES+ARS;

   3844  5 000354   000000 236100                    LDQ     0,,PR0
         5 000355   200011 036100                    ADLQ    ARS,,AUTO
         5 000356   000011 756000 0                  STQ     OUX_PCB+9

      333     3845    1        RETURN;

   3845  5 000357   000000 702200 xent               TSX2  ! X66_ARET

      334     3846    1   RDALT2: OUX_PCB.ERROR=BINBIT(ARS,36);

   3846  5 000360   200011 236100       RDALT2       LDQ     ARS,,AUTO
         5 000361   000006 756000 0                  STQ     OUX_PCB+6

      335     3847    1        UNWIND TO REM_PARSE;

   3847  5 000362   000204 237200 0                  LDAQ  ! REM_PARSE
         5 000363   000000 700200 xent               TSX0  ! X66_AUNWIND
         5 000364   000000 000200                    ZERO    0,128

      336     3848         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:44   
      337     3849    1   OUX$ERRPTR: ENTRY(NODES,OUT$) ALTRET;

   3849  5 000365   000000 700200 xent  OUX$ERRPTR   TSX0  ! X66_AUTO_N
         5 000366   000140 000006                    ZERO    96,6

      338     3850         /**/
      339     3851    1        OUX_BUF=' ';

   3851  5 000367   040000 100400                    MLR     fill='040'O
         5 000370   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000371   000064 000454 0                  ADSC9   OUX_BUF                  cn=0,n=300

      340     3852    1        IF ADDR(NODES)=ADDR(NIL)

   3852  5 000372   200003 236100                    LDQ     @NODES,,AUTO
         5 000373   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000374   000400 601000 5                  TNZ     s:3856

      341     3853    1        THEN
      342     3854    1             EPOS=OUX_PCB.HI_CHAR;

   3854  5 000375   000012 235000 0                  LDA     OUX_PCB+10
         5 000376   200014 755100                    STA     EPOS,,AUTO
         5 000377   000403 710000 5                  TRA     s:3857

      343     3855    1        ELSE
      344     3856    1             EPOS=NODES;

   3856  5 000400   200003 470500                    LDP0    @NODES,,AUTO
         5 000401   000000 235100                    LDA     0,,PR0
         5 000402   200014 755100                    STA     EPOS,,AUTO

      345     3857    1        CPOS=OUX_PCB.NCHARS;

   3857  5 000403   000011 235000 0                  LDA     OUX_PCB+9
         5 000404   000202 755000 0                  STA     CPOS

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:45   
      346     3858    1        IF EPOS>15

   3858  5 000405   200014 235100                    LDA     EPOS,,AUTO
         5 000406   000017 115007                    CMPA    15,DL
         5 000407   000415 604400 5                  TMOZ    s:3866

      347     3859    1        THEN
      348     3860    2        DO;

      349     3861    2             START_CHAR = EPOS - 15;

   3861  5 000410   000017 135007                    SBLA    15,DL
         5 000411   200016 755100                    STA     START_CHAR,,AUTO

      350     3862    2             CSIZE = 15;

   3862  5 000412   000017 235007                    LDA     15,DL
         5 000413   200015 755100                    STA     CSIZE,,AUTO

      351     3863    2           END;                            /* DO IF EPOS > 15 */

   3863  5 000414   000417 710000 5                  TRA     s:3869

      352     3864    1        ELSE
      353     3865    2        DO;

      354     3866    2             START_CHAR = 0;

   3866  5 000415   200016 450100                    STZ     START_CHAR,,AUTO

      355     3867    2             CSIZE = EPOS;

   3867  5 000416   200015 755100                    STA     CSIZE,,AUTO

      356     3868    2           END;                            /* DO IF EPOS <= 15 */

      357     3869    1        OUX_BUF = '...';
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:46   

   3869  5 000417   040000 100400                    MLR     fill='040'O
         5 000420   000000 000003 4                  ADSC9   0                        cn=0,n=3
         5 000421   000064 000454 0                  ADSC9   OUX_BUF                  cn=0,n=300

      358     3870    1        PINCRC(ADDR(OUX_BUF),3) -> CHARBASE =

   3870  5 000422   000021 470400 0                  LDP0    BUFVEC+1
         5 000423   000000 620005                    EAX0    0,AL
         5 000424   200016 235100                    LDA     START_CHAR,,AUTO
         5 000425   200015 721100                    LXL1    CSIZE,,AUTO
         5 000426   040040 100545                    MLR     fill='040'O
         5 000427   000002 000010                    ADSC9   2,A,PR0                  cn=0,n=*X0
         5 000430   000064 600011 0                  ADSC9   OUX_BUF                  cn=3,n=*X1

      359     3871    1             PINCRC (BUFVEC.PTR$, 8+START_CHAR) -> CHARBASE;
      360     3872    1        CPOS = 3 + CSIZE;

   3872  5 000431   200015 235100                    LDA     CSIZE,,AUTO
         5 000432   000003 035007                    ADLA    3,DL
         5 000433   000202 755000 0                  STA     CPOS

      361     3873    1        CALL INSERT (OUX_BUF, CPOS, 3, '<?>');

   3873  5 000434   040005 100400                    MLR     fill='040'O
         5 000435   000001 000003 4                  ADSC9   1                        cn=0,n=3
         5 000436   000064 000003 0                  ADSC9   OUX_BUF,A                cn=0,n=3

      362     3874    1        CPOS = CPOS + 3;

   3874  5 000437   000003 236007                    LDQ     3,DL
         5 000440   000202 056000 0                  ASQ     CPOS

      363     3875    1        IF OUX_PCB.NCHARS > EPOS

   3875  5 000441   000011 236000 0                  LDQ     OUX_PCB+9
         5 000442   000445 604000 5                  TMI     s:3878
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:47   
         5 000443   200014 116100                    CMPQ    EPOS,,AUTO
         5 000444   000467 604400 5                  TMOZ    s:3887

      364     3876    1        THEN
      365     3877    2        DO;

      366     3878    2             IF (OUX_PCB.NCHARS-EPOS) > 15

   3878  5 000445   200014 136100                    SBLQ    EPOS,,AUTO
         5 000446   000017 116007                    CMPQ    15,DL
         5 000447   000453 604400 5                  TMOZ    s:3882

      367     3879    2             THEN
      368     3880    2                  CSIZE = 15;

   3880  5 000450   000017 236007                    LDQ     15,DL
         5 000451   200015 756100                    STQ     CSIZE,,AUTO
         5 000452   000456 710000 5                  TRA     s:3883

      369     3881    2             ELSE
      370     3882    2                  CSIZE = OUX_PCB.NCHARS - EPOS;

   3882  5 000453   000011 236000 0                  LDQ     OUX_PCB+9
         5 000454   200014 136100                    SBLQ    EPOS,,AUTO
         5 000455   200015 756100                    STQ     CSIZE,,AUTO

      371     3883    2             PINCRC (ADDR(OUX_BUF),CPOS) -> CHARBASE =

   3883  5 000456   000000 620006                    EAX0    0,QL
         5 000457   200014 235100                    LDA     EPOS,,AUTO
         5 000460   200015 721100                    LXL1    CSIZE,,AUTO
         5 000461   000202 236000 0                  LDQ     CPOS
         5 000462   040046 100545                    MLR     fill='040'O
         5 000463   000002 000010                    ADSC9   2,A,PR0                  cn=0,n=*X0
         5 000464   000064 000011 0                  ADSC9   OUX_BUF,Q                cn=0,n=*X1

      372     3884    2                  PINCRC(BUFVEC.PTR$,8+EPOS) -> CHARBASE;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:48   
      373     3885    2             CPOS = CPOS + CSIZE;

   3885  5 000465   200015 036100                    ADLQ    CSIZE,,AUTO
         5 000466   000202 756000 0                  STQ     CPOS

      374     3886    2           END;                            /* DO IF NCHARS > EPOS */

      375     3887    1        CALL INSERT (OUX_BUF, CPOS, 3, '...');

   3887  5 000467   000202 235000 0                  LDA     CPOS
         5 000470   040005 100400                    MLR     fill='040'O
         5 000471   000000 000003 4                  ADSC9   0                        cn=0,n=3
         5 000472   000064 000003 0                  ADSC9   OUX_BUF,A                cn=0,n=3

      376     3888    1        OUX_CSIZE = CPOS + 3;

   3888  5 000473   000003 035007                    ADLA    3,DL
         5 000474   000177 755000 0                  STA     OUX_CSIZE

      377     3889    1        RETURN;

   3889  5 000475   000000 702200 xent               TSX2  ! X66_ARET

      378     3890         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:49   
      379     3891    1   OUX$ECHOIF: ENTRY(NODES) ALTRET;

   3891  5 000476   000000 700200 xent  OUX$ECHOIF   TSX0  ! X66_AUTO_N
         5 000477   000140 000006                    ZERO    96,6

      380     3892    2        DO I=0 TO NDCBS;

   3892  5 000500   200013 450100                    STZ     I,,AUTO
         5 000501   000514 710000 5                  TRA     s:3894+1

      381     3893    2             CALL OUX$CORRES(NODES,DCBS(I)) ALTRET(NO_ECHO);

   3893  5 000502   200013 720100                    LXL0    I,,AUTO
         5 000503   000253 630410 0                  EPPR0   DCBS,X0
         5 000504   200133 450500                    STP0    TEXTCOUNT+3,,AUTO
         5 000505   200003 236100                    LDQ     @NODES,,AUTO
         5 000506   200132 756100                    STQ     TEXTCOUNT+2,,AUTO
         5 000507   200132 630500                    EPPR0   TEXTCOUNT+2,,AUTO
         5 000510   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000511   000000 701000 xent               TSX1    OUX$CORRES
         5 000512   000667 702000 5                  TSX2    NO_ECHO

      382     3894    2           END;

   3894  5 000513   200013 054100                    AOS     I,,AUTO
         5 000514   000252 236000 0                  LDQ     NDCBS
         5 000515   000502 604000 5                  TMI     s:3893
         5 000516   200013 116100                    CMPQ    I,,AUTO
         5 000517   000502 605000 5                  TPL     s:3893
         5 000520   000523 710000 5                  TRA     s:3896

      383     3895    1   OUX$ECHO: ENTRY(NODES) ALTRET;

   3895  5 000521   000000 700200 xent  OUX$ECHO     TSX0  ! X66_AUTO_N
         5 000522   000140 000006                    ZERO    96,6

      384     3896    1        NDCBS=NDCBS+1;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:50   

   3896  5 000523   000252 235000 0                  LDA     NDCBS
         5 000524   000001 035007                    ADLA    1,DL
         5 000525   000252 755000 0                  STA     NDCBS

      385     3897    1        DCBS(NDCBS)=NODES;

   3897  5 000526   200003 470500                    LDP0    @NODES,,AUTO
         5 000527   000000 235100                    LDA     0,,PR0
         5 000530   000252 720000 0                  LXL0    NDCBS
         5 000531   000253 755010 0                  STA     DCBS,X0

      386     3898    1        FPT_WRITE.V.DCB#=NODES;

   3898  5 000532   000000 721100                    LXL1    0,,PR0
         5 000533   000046 741000 0                  STX1    FPT_WRITE+8

      387     3899    2        DO I=1 TO NLINES;

   3899  5 000534   000001 235007                    LDA     1,DL
         5 000535   200013 755100                    STA     I,,AUTO
         5 000536   000663 710000 5                  TRA     s:3909+1

      388     3900    2             CALL CONCAT(OUX_BUF,SUBSTR(OUX_PROMPT,0,OUX_POFF),

   3900  5 000537   200013 235100                    LDA     I,,AUTO
         5 000540   000001 735000                    ALS     1
         5 000541   000100 101405                    MRL     fill='000'O
         5 000542   000220 400002 0                  ADSC9   NLINES,A                 cn=2,n=2
         5 000543   200132 000004                    ADSC9   TEXTCOUNT+2,,AUTO        cn=0,n=4
         5 000544   000100 101405                    MRL     fill='000'O
         5 000545   000221 000002 0                  ADSC9   LPOS,A                   cn=0,n=2
         5 000546   200133 000004                    ADSC9   TEXTCOUNT+3,,AUTO        cn=0,n=4
         5 000547   200133 236100                    LDQ     TEXTCOUNT+3,,AUTO
         5 000550   200132 136100                    SBLQ    TEXTCOUNT+2,,AUTO
         5 000551   000100 101405                    MRL     fill='000'O
         5 000552   000220 400002 0                  ADSC9   NLINES,A                 cn=2,n=2
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:51   
         5 000553   200134 000004                    ADSC9   TEXTCOUNT+4,,AUTO        cn=0,n=4
         5 000554   200135 756100                    STQ     TEXTCOUNT+5,,AUTO
         5 000555   200134 236100                    LDQ     TEXTCOUNT+4,,AUTO
         5 000556   000206 720000 0                  LXL0    OUX_POFF
         5 000557   040000 100440                    MLR     fill='040'O
         5 000560   000207 000010 0                  ADSC9   OUX_PROMPT               cn=0,n=*X0
         5 000561   000064 000454 0                  ADSC9   OUX_BUF                  cn=0,n=300
         5 000562   200136 756100                    STQ     TEXTCOUNT+6,,AUTO
         5 000563   000206 236000 0                  LDQ     OUX_POFF
         5 000564   000454 116007                    CMPQ    300,DL
         5 000565   000613 605000 5                  TPL     s:3903
         5 000566   777323 621006                    EAX1    -301,QL
         5 000567   777777 661003                    ERX1    -1,DU
         5 000570   000021 470400 0                  LDP0    BUFVEC+1
         5 000571   200135 722100                    LXL2    TEXTCOUNT+5,,AUTO
         5 000572   200136 235100                    LDA     TEXTCOUNT+6,,AUTO
         5 000573   040046 100545                    MLR     fill='040'O
         5 000574   000000 000012                    ADSC9   0,A,PR0                  cn=0,n=*X2
         5 000575   000064 000011 0                  ADSC9   OUX_BUF,Q                cn=0,n=*X1
         5 000576   000206 236000 0                  LDQ     OUX_POFF
         5 000577   200135 036100                    ADLQ    TEXTCOUNT+5,,AUTO
         5 000600   000454 116007                    CMPQ    300,DL
         5 000601   000613 605000 5                  TPL     s:3903
         5 000602   200137 756100                    STQ     TEXTCOUNT+7,,AUTO
         5 000603   000206 236000 0                  LDQ     OUX_POFF
         5 000604   200135 036100                    ADLQ    TEXTCOUNT+5,,AUTO
         5 000605   200137 720100                    LXL0    TEXTCOUNT+7,,AUTO
         5 000606   777323 620010                    EAX0    -301,X0
         5 000607   777777 660003                    ERX0    -1,DU
         5 000610   040046 100400                    MLR     fill='040'O
         5 000611   000013 000001 6                  ADSC9   11                       cn=0,n=1
         5 000612   000064 000010 0                  ADSC9   OUX_BUF,Q                cn=0,n=*X0

      389     3901    2                  SUBSTR(INBUF,LPOS(I-1),LPOS(I)-LPOS(I-1)),
      390     3902    2                  ';');
      391     3903    2             IF I=NLINES

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:52   
   3903  5 000613   200013 236100                    LDQ     I,,AUTO
         5 000614   000640 604000 5                  TMI     s:3907
         5 000615   000220 116000 0                  CMPQ    NLINES
         5 000616   000640 601000 5                  TNZ     s:3907

      392     3904    2             THEN
      393     3905    2                  FPT_WRITE.BUF_.BOUND=OUX_POFF+LPOS(I)-LPOS(I-1)-1;

   3905  5 000617   200013 235100                    LDA     I,,AUTO
         5 000620   000001 735000                    ALS     1
         5 000621   000100 101405                    MRL     fill='000'O
         5 000622   000221 000002 0                  ADSC9   LPOS,A                   cn=0,n=2
         5 000623   200132 000004                    ADSC9   TEXTCOUNT+2,,AUTO        cn=0,n=4
         5 000624   200132 236100                    LDQ     TEXTCOUNT+2,,AUTO
         5 000625   000206 036000 0                  ADLQ    OUX_POFF
         5 000626   000100 101405                    MRL     fill='000'O
         5 000627   000220 400002 0                  ADSC9   NLINES,A                 cn=2,n=2
         5 000630   200133 000004                    ADSC9   TEXTCOUNT+3,,AUTO        cn=0,n=4
         5 000631   200133 136100                    SBLQ    TEXTCOUNT+3,,AUTO
         5 000632   000001 136007                    SBLQ    1,DL
         5 000633   000020 736000                    QLS     16
         5 000634   000042 676000 0                  ERQ     FPT_WRITE+4
         5 000635   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000636   000042 656000 0                  ERSQ    FPT_WRITE+4
         5 000637   000657 710000 5                  TRA     s:3908

      394     3906    2             ELSE
      395     3907    2                  FPT_WRITE.BUF_.BOUND=OUX_POFF+LPOS(I)-LPOS(I-1);

   3907  5 000640   200013 235100                    LDA     I,,AUTO
         5 000641   000001 735000                    ALS     1
         5 000642   000100 101405                    MRL     fill='000'O
         5 000643   000221 000002 0                  ADSC9   LPOS,A                   cn=0,n=2
         5 000644   200132 000004                    ADSC9   TEXTCOUNT+2,,AUTO        cn=0,n=4
         5 000645   200132 236100                    LDQ     TEXTCOUNT+2,,AUTO
         5 000646   000206 036000 0                  ADLQ    OUX_POFF
         5 000647   000100 101405                    MRL     fill='000'O
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:53   
         5 000650   000220 400002 0                  ADSC9   NLINES,A                 cn=2,n=2
         5 000651   200133 000004                    ADSC9   TEXTCOUNT+3,,AUTO        cn=0,n=4
         5 000652   200133 136100                    SBLQ    TEXTCOUNT+3,,AUTO
         5 000653   000020 736000                    QLS     16
         5 000654   000042 676000 0                  ERQ     FPT_WRITE+4
         5 000655   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000656   000042 656000 0                  ERSQ    FPT_WRITE+4

      396     3908    2             CALL M$WRITE(FPT_WRITE);

   3908  5 000657   000036 630400 0                  EPPR0   FPT_WRITE
         5 000660   040001 713400                    CLIMB   write
         5 000661   401400 401760                    pmme    nvectors=4

      397     3909    2           END;

   3909  5 000662   200013 054100                    AOS     I,,AUTO
         5 000663   000220 236000 0                  LDQ     NLINES
         5 000664   000537 604000 5                  TMI     s:3900
         5 000665   200013 116100                    CMPQ    I,,AUTO
         5 000666   000537 605000 5                  TPL     s:3900

      398     3910    1   NO_ECHO: RETURN;

   3910  5 000667   000000 702200 xent  NO_ECHO      TSX2  ! X66_ARET

      399     3911         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:54   
      400     3912    1   OUX$SETDCBS: ENTRY(NODES,OUT$) ALTRET;

   3912  5 000670   000000 700200 xent  OUX$SETDCBS  TSX0  ! X66_AUTO_N
         5 000671   000140 000006                    ZERO    96,6

      401     3913    1        IF ADDR(NODES)~=ADDR(NIL)

   3913  5 000672   200003 236100                    LDQ     @NODES,,AUTO
         5 000673   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000674   000704 600000 5                  TZE     s:3922

      402     3914    1        THEN
      403     3915    2        DO;

      404     3916    2             IF NODES=DCBNUM(NIL)

   3916  5 000675   200003 470500                    LDP0    @NODES,,AUTO
         5 000676   000000 235100                    LDA     0,,PR0
         5 000677   000703 601000 5                  TNZ     s:3920

      405     3917    2             THEN
      406     3918    2                  OUX_INDCB=DCBNUM(M$SI);

   3918  5 000700   000000 236007 xsym               LDQ     M$SI,DL
         5 000701   000024 756000 0                  STQ     OUX_INDCB
         5 000702   000704 710000 5                  TRA     s:3922

      407     3919    2             ELSE
      408     3920    2                  OUX_INDCB=NODES;

   3920  5 000703   000024 755000 0                  STA     OUX_INDCB

      409     3921    2           END;

      410     3922    1        IF ADDR(OUT$)~=ADDR(NIL)

   3922  5 000704   200004 236100                    LDQ     @OUT$,,AUTO
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:55   
         5 000705   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000706   000716 600000 5                  TZE     s:3931

      411     3923    1        THEN
      412     3924    2        DO;

      413     3925    2             IF BITBIN(ERR)=DCBNUM(NIL)

   3925  5 000707   200004 470500                    LDP0    @OUT$,,AUTO
         5 000710   000000 235100                    LDA     0,,PR0
         5 000711   000715 601000 5                  TNZ     s:3929

      414     3926    2             THEN
      415     3927    2                  OUX_OUTDCB=DCBNUM(M$ME);

   3927  5 000712   000000 236007 xsym               LDQ     M$ME,DL
         5 000713   000026 756000 0                  STQ     OUX_OUTDCB
         5 000714   000716 710000 5                  TRA     s:3931

      416     3928    2             ELSE
      417     3929    2                  OUX_OUTDCB=BITBIN(ERR);

   3929  5 000715   000026 755000 0                  STA     OUX_OUTDCB

      418     3930    2           END;

      419     3931    1        RETURN;

   3931  5 000716   000000 702200 xent               TSX2  ! X66_ARET

      420     3932         %EJECT;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:56   
      421     3933    1   OUX$SETMEM: ENTRY(NODES) ALTRET;

   3933  5 000717   000000 700200 xent  OUX$SETMEM   TSX0  ! X66_AUTO_N
         5 000720   000140 000006                    ZERO    96,6

      422     3934    1        IF GDSVEC~='0'B

   3934  5 000721   000016 237000 0                  LDAQ    GDSVEC
         5 000722   000000 117000 6                  CMPAQ   0
         5 000723   000725 600000 5                  TZE     s:3937

      423     3935    1        THEN
      424     3936    1             ALTRETURN;

   3936  5 000724   000000 702200 xent               TSX2  ! X66_AALT

      425     3937    1        IF MOD(ADDR(NODES)->VECBASE.BOUND,8)~=7

   3937  5 000725   200003 470500                    LDP0    @NODES,,AUTO
         5 000726   000000 236100                    LDQ     0,,PR0
         5 000727   000020 772000                    QRL     16
         5 000730   000007 376007                    ANQ     7,DL
         5 000731   000007 116007                    CMPQ    7,DL
         5 000732   000734 600000 5                  TZE     s:3940

      426     3938    1        THEN
      427     3939    1             ALTRETURN;

   3939  5 000733   000000 702200 xent               TSX2  ! X66_AALT

      428     3940    1        GDSVEC=ADDR(NODES)->VECBASE;

   3940  5 000734   000000 100500                    MLR     fill='000'O
         5 000735   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         5 000736   000016 000010 0                  ADSC9   GDSVEC                   cn=0,n=8

      429     3941    1        RETURN;
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:57   

   3941  5 000737   000000 702200 xent               TSX2  ! X66_ARET
      430     3942    1   END OUX$GETCMD;
      431     3943        %EOD;

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:58   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$GETCMD.
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:59   

 **** Variables and constants ****

  ****  Section 000  Data  OUX$GETCMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    20-0-0/w STRC(72)    r     1 BUFVEC                   202-0-0/w SBIN        r     1 CPOS
   253-0-0/w UBIN        r     1 DCBS(0:29)                30-0-0/d STRC(216)   r     1 FPT_GDS
    52-0-0/d STRC(360)   r     1 FPT_PROMPT                36-0-0/d STRC(432)   r     1 FPT_WRITE
    16-0-0/b BIT (72)    r     1 GDSVEC                   221-0-0/b UBIN(18)    r     1 LPOS(0:49)
   252-0-0/w UBIN        r     1 NDCBS                    220-0-0/w UBIN        r     1 NLINES
    64-0-0/c CHAR(300)   r     1 OUX_BUF                  177-0-0/w SBIN        r     1 OUX_CSIZE
    25-0-0/w PTR         r     1 OUX_IN$                   24-0-0/w UBIN        r     1 OUX_INDCB
    27-0-0/w PTR         r     1 OUX_OUT$                  26-0-0/w UBIN        r     1 OUX_OUTDCB
     0-0-0/w STRC(504)   r     1 OUX_PCB                  206-0-0/w SBIN        r     1 OUX_POFF
   207-0-0/c CHAR(32)    r     1 OUX_PROMPT               217-0-0/w EPTR        r     1 OUX_ROUTINE
   200-0-0/w STRC(72)    r     1 READVEC                  204-0-0/d REMB        r     1 REM_PARSE
    22-0-0/w STRC(72)    r     1 WVEC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NODES                     4-0-0/w PTR         r     1 @OUT$
     5-0-0/w PTR         r     1 @PROMPT_                  10-0-0/w PTR         r     1 @ROUTINE
     7-0-0/w PTR         r     1 @TSIZ                      6-0-0/w PTR         r     1 @TXT
    11-0-0/w SBIN        r     1 ARS                       15-0-0/w SBIN        r     1 CSIZE
    14-0-0/w SBIN        r     1 EPOS                      *0-0-0/w BIT         r     1 ERR
    13-0-0/w SBIN        r     1 I                         *0-0-0/w SBIN        r     1 NODES
    21-0-0/w STRC(2529)  r     1 NS_BUFR                   *0-0-0/w PTR         r     1 OUT$
    *0-0-0/d STRC(72)    r     1 PROMPT                    *0-0-0/d VECT        r     1 PROMPT_
    12-0-0/w BIT         r     1 PROMPT_FLG                *0-0-0/w EPTR        r     1 ROUTINE
    16-0-0/w SBIN        r     1 START_CHAR               130-0-0/w SBIN        r     1 TEXTCOUNT
    *0-0-0/w SBIN        r     1 TSIZ                      *0-0-0/c ACHR        r     1 TXT

PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:60   
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c ACHR        r     1 CHARBASE                   0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/c CHAR(1024)  r     1 INBUF                      0-0-0N  NULL        r     1 M$ME
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$UC
     0-0-0/c ACHR        r     1 TEXTB                      0-0-0/w STRC(72)    r     1 VECBASE


   Procedure OUX$GETCMD requires 480 words for executable code.
   Procedure OUX$GETCMD requires 96 words of local(AUTO) storage.
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:61   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:62   
          MINI XREF LISTING

ARS
      3708**DCL      3804<>CALL     3811<<ASSIGN   3814>>ASSIGN   3819>>ASSIGN   3828>>ASSIGN   3837<>CALL
      3838>>ASSIGN   3841<<ASSIGN   3843>>ASSIGN   3844>>ASSIGN   3846>>ASSIGN
B$ALT.CODE
      3732**DCL      3732--REDEF    3733--REDEF    3733--REDEF
B$ALT.ERR
      3733**DCL      3823>>ASSIGN
B$ALT.ERR.ERR#
      3734**DCL      3734--REDEF
B$ALT.EVID
      3733**DCL      3733--REDEF    3733--REDEF
B$TCB.ALT$
      3728**DCL      3823>>ASSIGN
B$TCB$
      3738**DCL      3823>>ASSIGN
BUFVEC
      3613**DCL      3796<<ASSIGN   3798>>ASSIGN   3800>>ASSIGN
BUFVEC.BOUND
      3614**DCL      3797<<ASSIGN   3797>>ASSIGN   3799>>ASSIGN
BUFVEC.PTR$
      3616**DCL      3617--IMP-PTR  3799>>ASSIGN   3815>>ASSIGN   3839>>ASSIGN   3870>>ASSIGN   3883>>ASSIGN
      3900>>CALLBLT
CHARBASE
      3720**DCL      3778>>IF       3782>>ASSIGN   3808<<ASSIGN   3870<<ASSIGN   3870>>ASSIGN   3883<<ASSIGN
      3883>>ASSIGN
CPOS
      3709**DCL      3801<<ASSIGN   3835<<ASSIGN   3857<<ASSIGN   3872<<ASSIGN   3873>>CALLBLT  3874<<ASSIGN
      3874>>ASSIGN   3883>>ASSIGN   3885<<ASSIGN   3885>>ASSIGN   3887>>CALLBLT  3888>>ASSIGN
CSIZE
      3717**DCL      3720--IMP-SIZ  3777<<ASSIGN   3778>>IF       3778>>IF       3781>>ASSIGN   3782>>ASSIGN
      3807<<ASSIGN   3808>>ASSIGN   3862<<ASSIGN   3867<<ASSIGN   3870>>ASSIGN   3870>>ASSIGN   3872>>ASSIGN
      3880<<ASSIGN   3882<<ASSIGN   3883>>ASSIGN   3883>>ASSIGN   3885>>ASSIGN
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:63   
DCBS
      3726**DCL      3760<<ASSIGN   3761<<ASSIGN   3893<>CALL     3897<<ASSIGN
EPOS
      3716**DCL      3854<<ASSIGN   3856<<ASSIGN   3858>>IF       3861>>ASSIGN   3867>>ASSIGN   3875>>IF
      3878>>IF       3882>>ASSIGN   3883>>ASSIGN
ERR
       158**DCL      3823<<ASSIGN   3826<<ASSIGN   3828<<ASSIGN   3925>>IF       3929>>ASSIGN
F$DCB.ACTPOS
      3587**DCL      3587--REDEF
F$DCB.ARS
      3562**DCL      3562--REDEF
F$DCB.ATTR
      3580**DCL      3581--REDEF
F$DCB.BORROW
      3595**DCL      3595--REDEF    3595--REDEF    3595--REDEF
F$DCB.DCBNAME.L
      3609**DCL      3609--IMP-SIZ
F$DCB.DDEV.IC
      3568**DCL      3784>>IF
F$DCB.EOMCHAR
      3566**DCL      3566--REDEF
F$DCB.FLDID
      3590**DCL      3590--REDEF
F$DCB.FORM$
      3584**DCL      3584--REDEF
F$DCB.FSECT
      3600**DCL      3600--REDEF
F$DCB.FSN
      3577**DCL      3577--REDEF    3577--REDEF    3578--REDEF
F$DCB.HEADER$
      3583**DCL      3583--REDEF
F$DCB.IXTNSIZE
      3581**DCL      3581--REDEF
F$DCB.LASTSTA$
      3571**DCL      3571--REDEF
F$DCB.LVL
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:64   
      3596**DCL      3596--REDEF
F$DCB.NAME.C
      3571**DCL      3571--REDEF
F$DCB.NOEOF
      3592**DCL      3592--REDEF
F$DCB.NRECS
      3582**DCL      3582--REDEF
F$DCB.NRECX
      3601**DCL      3601--REDEF
F$DCB.OHDR
      3593**DCL      3593--REDEF
F$DCB.ORG
      3576**DCL      3576--REDEF
F$DCB.PRECNO
      3599**DCL      3599--REDEF
F$DCB.RCSZ
      3604**DCL      3604--REDEF
F$DCB.RES
      3572**DCL      3572--REDEF
F$DCB.SETX
      3584**DCL      3584--REDEF
F$DCB.TAB$
      3583**DCL      3584--REDEF
F$DCB.TDA
      3598**DCL      3598--REDEF
F$DCB.WSN
      3573**DCL      3573--REDEF
FPT_GDS
      3637**DCL      3754<>CALL
FPT_GDS.V
      3637**DCL      3637--DCLINIT
FPT_PROMPT
      3689**DCL      3788<>CALL
FPT_PROMPT.PROMPT_
      3695**DCL      3787<<ASSIGN
FPT_PROMPT.V
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:65   
      3697**DCL      3691--DCLINIT
FPT_WRITE
      3659**DCL      3908<>CALL
FPT_WRITE.BUF_.BOUND
      3659**DCL      3905<<ASSIGN   3907<<ASSIGN
FPT_WRITE.STATION_
      3661**DCL      3661--REDEF
FPT_WRITE.V
      3662**DCL      3659--DCLINIT
FPT_WRITE.V.DCB#
      3662**DCL      3898<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
      3668**DCL      3668--REDEF
GDSVEC
      3612**DCL      3637--DCLINIT  3752>>IF       3796>>ASSIGN   3934>>IF       3940<<ASSIGN
I
      3715**DCL      3892<<DOINDEX  3893>>CALL     3899<<DOINDEX  3900>>CALLBLT  3900>>CALLBLT  3900>>CALLBLT
      3903>>IF       3905>>ASSIGN   3905>>ASSIGN   3907>>ASSIGN   3907>>ASSIGN
INBUF
      3617**DCL      3900>>CALLBLT
LPOS
      3724**DCL      3814<<ASSIGN   3836<<ASSIGN   3843<<ASSIGN   3900>>CALLBLT  3900>>CALLBLT  3900>>CALLBLT
      3905>>ASSIGN   3905>>ASSIGN   3907>>ASSIGN   3907>>ASSIGN
M$GDS
      3524**DCL-ENT  3754--CALL
M$ME
      3610**DCL      3927>>ASSIGN
M$PROMPT
      3513**DCL-ENT  3788--CALL
M$SI
      3611**DCL      3918>>ASSIGN
M$UC
      3513**DCL      3784--IF
M$WRITE
      3490**DCL-ENT  3908--CALL
MALT
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:66   
      3823**LABEL    3754--CALLALT
NDCBS
      3725**DCL      3757<<ASSIGN   3892>>DOINDEX  3896<<ASSIGN   3896>>ASSIGN   3897>>ASSIGN
NLINES
      3723**DCL      3756<<ASSIGN   3813<<ASSIGN   3814>>ASSIGN   3836>>ASSIGN   3842<<ASSIGN   3842>>ASSIGN
      3843>>ASSIGN   3899>>DOINDEX  3903>>IF
NODES
       152**DCL       150--PROC     3816--ASSIGN   3831--ENTRY    3835>>ASSIGN   3836>>ASSIGN   3839>>ASSIGN
      3843>>ASSIGN   3844>>ASSIGN   3849--ENTRY    3852--IF       3856>>ASSIGN   3891--ENTRY    3893<>CALL
      3895--ENTRY    3897>>ASSIGN   3898>>ASSIGN   3912--ENTRY    3913--IF       3916>>IF       3920>>ASSIGN
      3933--ENTRY    3937--IF       3940--ASSIGN
NO_ECHO
      3910**LABEL    3893--CALLALT
NS_BUFR
      3742**DCL      3833--ASSIGN   3834--ASSIGN
NS_BUFR.TEXT
      3747**DCL      3839--ASSIGN
OUT$
       157**DCL       150--PROC      158--REDEF    3821<<ASSIGN   3849--ENTRY    3912--ENTRY    3922--IF
OUX$CORRES
       171**DCL-ENT  3893--CALL
OUX$PU
       172**DCL-ENT  3317--DCLINIT
OUX$READCMD
       170**DCL-ENT  3804--CALL     3837--CALL
OUX$SETLAST
       173**DCL-ENT  3810--CALL
OUX_BUF
      3701**DCL      3660--DCLINIT  3661--DCLINIT  3702--REDEF    3851<<ASSIGN   3869<<ASSIGN   3870--ASSIGN
      3873<<CALLBLT  3883--ASSIGN   3887<<CALLBLT  3900<<CALLBLT
OUX_CSIZE
      3703**DCL      3888<<ASSIGN
OUX_IN$
      3623**DCL      3758<<ASSIGN
OUX_INDCB
      3622**DCL      3758--ASSIGN   3760>>ASSIGN   3918<<ASSIGN   3920<<ASSIGN
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:67   
OUX_OUT$
      3625**DCL      3759<<ASSIGN
OUX_OUTDCB
      3624**DCL      3759--ASSIGN   3761>>ASSIGN   3927<<ASSIGN   3929<<ASSIGN
OUX_PCB
      3299**DCL      3820<>CALL
OUX_PCB.ERROR
      3403**DCL      3826>>ASSIGN   3846<<ASSIGN
OUX_PCB.HI_CHAR
      3450**DCL      3854>>ASSIGN
OUX_PCB.NCHARS
      3446**DCL      3819<<ASSIGN   3844<<ASSIGN   3857>>ASSIGN   3875>>IF       3878>>IF       3882>>ASSIGN
OUX_PCB.OUT$
      3312**DCL      3821>>ASSIGN
OUX_PCB.ROOT$
      3304**DCL      3816<<ASSIGN
OUX_PCB.TEXT$
      3300**DCL      3815<<ASSIGN
OUX_PCB.WKSZ
      3329**DCL      3818<<ASSIGN
OUX_PCB.WORK$
      3308**DCL      3817<<ASSIGN
OUX_POFF
      3711**DCL      3769>>IF       3772<<ASSIGN   3778>>IF       3781<<ASSIGN   3900>>CALLBLT  3905>>ASSIGN
      3907>>ASSIGN
OUX_PROMPT
      3712**DCL      3773<<ASSIGN   3778>>IF       3782<<ASSIGN   3900>>CALLBLT
OUX_ROUTINE
      3714**DCL      3793<<ASSIGN   3795<<ASSIGN
PARSEALT
      3821**LABEL    3755--REMEMBR  3820--CALLALT
PROMPT.BOUND
       161**DCL      3777>>ASSIGN
PROMPT.PTR$
       163**DCL      3778>>IF       3782>>ASSIGN
PROMPT_
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:68   
       159**DCL       150--PROC      160--REDEF    3762--IF       3766>>IF       3766>>IF       3787>>ASSIGN
PROMPT_FLG
      3713**DCL      3765<<ASSIGN   3771<<ASSIGN   3780<<ASSIGN   3784>>IF
RDALT1
      3828**LABEL    3804--CALLALT
RDALT2
      3846**LABEL    3837--CALLALT
READVEC
      3704**DCL      3800<<ASSIGN   3804<>CALL     3810<>CALL     3837<>CALL
READVEC.BOUND
      3705**DCL      3809<<ASSIGN   3834<<ASSIGN
READVEC.PTR$
      3707**DCL      3808>>ASSIGN   3833<<ASSIGN
REM_PARSE
      3710**DCL      3755<<REMEMBR  3847>>UNWIND
ROUTINE
       166**DCL       150--PROC     3791--IF       3795>>ASSIGN
START_CHAR
      3718**DCL      3861<<ASSIGN   3866<<ASSIGN   3870>>ASSIGN
TEXTB
      3748**DCL      3839<<ASSIGN   3839>>ASSIGN
TEXTCOUNT
      3749**DCL      3748--IMP-SIZ  3838<<ASSIGN   3839>>ASSIGN   3839>>ASSIGN   3841>>ASSIGN
TSIZ
       165**DCL       150--PROC      164--IMP-SIZ  3807>>ASSIGN   3808>>ASSIGN   3809>>ASSIGN   3811>>ASSIGN
TXT
       164**DCL       150--PROC     3802--IF       3808>>ASSIGN
VECBASE
       153**DCL      3940>>ASSIGN
VECBASE.BOUND
       154**DCL      3937>>IF
WVEC
      3618**DCL      3798<<ASSIGN
WVEC.BOUND
      3619**DCL      3818>>ASSIGN
WVEC.PTR$
PL6.E3A0      #001=OUX$GETCMD File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:16 Page:69   
      3621**DCL      3799<<ASSIGN   3817>>ASSIGN
X$PARSE
       168**DCL-ENT  3820--CALL

PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:70   
      432        1        /*T***********************************************************/
      433        2        /*T*                                                         */
      434        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      435        4        /*T*                                                         */
      436        5        /*T***********************************************************/
      437        6        %SET LISTSUB='1'B;
      438        7        OUX$PU: PROC(PARAM_);
      439        8        /**/
      440        9        /*
      441       10          ###  #   # #   #   #   ####  #   #
      442       11         # # # #   # #   #  ###  #   # #   #
      443       12         # # # #   #  # #  # #   #   # #   #
      444       13         #  ## #   #   #    ###  ####  #   #
      445       14         #   # #   #  # #    # # #     #   #
      446       15         #   # #   # #   #  ###  #     #   #
      447       16          ###   ###  #   #   #   #      ###
      448       17                                                                          */
      449       18        %INCLUDE XU_MACRO_C;
      450     3124        %PARSE$PARAM (NAME=PARAM_);
      451     3205        %INCLUDE XU_SUBS_C;
      452     3297    1   DCL OUX$GETMORE ENTRY(1) ALTRET;
      453     3298    1   DCL OUX_ROUTINE EPTR SYMREF;
      454     3299        /**/
      455     3300    1        IF PARAM_.TYPE=%INPUT#
      456     3301    1        THEN
      457     3302    1             CALL OUX$GETMORE(PARAM_.CHARPOS);
      458     3303    1        ELSE
      459     3304    1             IF OUX_ROUTINE~=ENTADDR(NIL)
      460     3305    1             THEN
      461     3306    1                  CALL OUX_ROUTINE(PARAM_);
      462     3307    1        RETURN;
      463     3308    1   END OUX$PU;
      464     3309        %EOD;

PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:71   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OUX$PU.

   Procedure OUX$PU requires 24 words for executable code.
   Procedure OUX$PU requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:72   

 Object Unit name= OUX$PU                                     File name= OUX$GETCMD.:E05TOU
 UTS= JUL 30 '97 04:17:05.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    24     30  OUX$PU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  OUX$PU

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 OUX$GETMORE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OUX_ROUTINE                           B_VECTNIL
PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:73   


      432        1        /*T***********************************************************/
      433        2        /*T*                                                         */
      434        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      435        4        /*T*                                                         */
      436        5        /*T***********************************************************/
      437        6        %SET LISTSUB='1'B;
      438        7        OUX$PU: PROC(PARAM_);

      7  0 000000   000000 700200 xent  OUX$PU       TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      439        8        /**/
      440        9        /*
      441       10          ###  #   # #   #   #   ####  #   #
      442       11         # # # #   # #   #  ###  #   # #   #
      443       12         # # # #   #  # #  # #   #   # #   #
      444       13         #  ## #   #   #    ###  ####  #   #
      445       14         #   # #   #  # #    # # #     #   #
      446       15         #   # #   # #   #  ###  #     #   #
      447       16          ###   ###  #   #   #   #      ###
      448       17                                                                          */
      449       18        %INCLUDE XU_MACRO_C;
      450     3124        %PARSE$PARAM (NAME=PARAM_);
      451     3205        %INCLUDE XU_SUBS_C;
      452     3297    1   DCL OUX$GETMORE ENTRY(1) ALTRET;
      453     3298    1   DCL OUX_ROUTINE EPTR SYMREF;
      454     3299        /**/
      455     3300    1        IF PARAM_.TYPE=%INPUT#

   3300  0 000002   200003 470500                    LDP0    @PARAM_,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   777000 376003                    ANQ     -512,DU
         0 000005   004000 116003                    CMPQ    2048,DU
         0 000006   000017 601000 0                  TNZ     s:3304

      456     3301    1        THEN
PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:74   
      457     3302    1             CALL OUX$GETMORE(PARAM_.CHARPOS);

   3302  0 000007   200003 236100                    LDQ     @PARAM_,,AUTO
         0 000010   000004 036003                    ADLQ    4,DU
         0 000011   200004 756100                    STQ     @PARAM_+1,,AUTO
         0 000012   200004 630500                    EPPR0   @PARAM_+1,,AUTO
         0 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000014   000000 701000 xent               TSX1    OUX$GETMORE
         0 000015   000000 011000                    NOP     0
         0 000016   000027 710000 0                  TRA     s:3307

      458     3303    1        ELSE
      459     3304    1             IF OUX_ROUTINE~=ENTADDR(NIL)

   3304  0 000017   000000 236000 xsym               LDQ     OUX_ROUTINE
         0 000020   000002 116000 xsym               CMPQ    B_VECTNIL+2
         0 000021   000027 600000 0                  TZE     s:3307

      460     3305    1             THEN
      461     3306    1                  CALL OUX_ROUTINE(PARAM_);

   3306  0 000022   200003 630500                    EPPR0   @PARAM_,,AUTO
         0 000023   000000 220000 xsym               LDX0    OUX_ROUTINE
         0 000024   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000025   000000 701010                    TSX1    0,X0
         0 000026   000000 011000                    NOP     0

      462     3307    1        RETURN;

   3307  0 000027   000000 702200 xent               TSX2  ! X66_ARET
      463     3308    1   END OUX$PU;
      464     3309        %EOD;

PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:75   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OUX$PU.
PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:76   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARAM_                   *0-0-0/w STRC(270)   r     1 PARAM_

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 OUX_ROUTINE


   Procedure OUX$PU requires 24 words for executable code.
   Procedure OUX$PU requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:77   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=OUX$PU File=OUX$GETCMD.:E05TSI                                WED 07/30/97 04:17 Page:78   
          MINI XREF LISTING

OUX$GETMORE
      3297**DCL-ENT  3302--CALL
OUX_ROUTINE
      3298**DCL      3304>>IF       3306>>CALL
PARAM_
      3143**DCL         7--PROC     3306<>CALL
PARAM_.CHARPOS
      3181**DCL      3302<>CALL
PARAM_.TYPE
      3144**DCL      3300>>IF

PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:79   
      465        1        /*T***********************************************************/
      466        2        /*T*                                                         */
      467        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      468        4        /*T*                                                         */
      469        5        /*T***********************************************************/
      470        6        %SET LISTSUB='1'B;
      471        7        /* ROUTINE TO READ COMMAND LINE AND ECHO IF APPROPRIATE */
      472        8        OUX$READCMD: PROC(CMDBUF,ARS) ALTRET;
      473        9        /**/
      474       10        /*
      475       11          ###  #   # #   #   #   ####  #####  ###  ####   ###  #   # ####
      476       12         # # # #   # #   #  ###  #   # #     #   # #   # #   # ## ## #   #
      477       13         # # # #   #  # #  # #   #   # #     #   # #   # #     # # # #   #
      478       14         #  ## #   #   #    ###  ####  ####  ##### #   # #     #   # #   #
      479       15         #   # #   #  # #    # # # #   #     #   # #   # #     #   # #   #
      480       16         #   # #   # #   #  ###  #  #  #     #   # #   # #   # #   # #   #
      481       17          ###   ###  #   #   #   #   # ##### #   # ####   ###  #   # ####
      482       18                                                                          */
      483       19    1   DCL 1 CMDBUF,
      484       20    1            2 BOUND UBIN(20) UNAL,
      485       21    1            2 * BIT(16),
      486       22    1            2 PTR$ PTR;
      487       23    1   DCL 1 CHARPOS REDEF CMDBUF,
      488       24    1            2 N UBIN(36),
      489       25    1            2 * UBIN(36);
      490       26    1   DCL ARS SBIN;
      491       27    1   DCL 1 ERR REDEF ARS,
      492       28    1            2 FCG BIT(18),
      493       29    1            2 MON BIT(1),
      494       30    1            2 CODE UBIN(14) UNAL,
      495       31    1            2 SEV UBIN(3) UNAL;
      496       32    1   DCL 1 LAST STATIC,
      497       33    1            2 BOUND UBIN(20) UNAL,
      498       34    1            2 * BIT(16),
      499       35    1            2 PTR$ PTR;
      500       36    1   DCL BUFFER CHAR(ARS) BASED(FPT_READ.BUF_.BUF$);
      501       37    1   DCL 1 NS_BUFR BASED(FPT_READ.BUF_.BUF$),
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:80   
      502       38    1            2 RECNO UBIN,
      503       39    1            2 INPUT_KEY,
      504       40    1                 3 TCHAR UBIN(8) UNAL,
      505       41    1                 3 EDIT_VAL SBIN(28) UNAL;
      506       42    1   DCL OUX_POFF SBIN SYMREF;
      507       43    1   DCL OUX_PROMPT CHAR(32) SYMREF;
      508       44    1   DCL OUX_BUF CHAR(300) SYMREF;
      509       45    1   DCL CHARBASE CHAR(CSIZE) BASED;
      510       46    1   DCL CSIZE SBIN;
      511       47        /**/
      512       48        %INCLUDE CP_6;
      513      129    1   DCL OUX_INDCB UBIN SYMREF;
      514      130    1   DCL OUX_OUTDCB UBIN SYMREF;
      515      131    1   DCL M$DO DCB;
      516      132    1   DCL OUX_IN$ PTR SYMREF;
      517      133    1   DCL OUX_OUT$ PTR SYMREF;
      518      134    1   DCL ZWI$RECNO UBIN SYMREF;
      519      135    1   DCL 1 ZWI$INPUT_KEY ALIGNED SYMREF,
      520      136    1            2 TCHAR UBIN(8) UNAL,
      521      137    1            2 EDIT_VAL SBIN(28) UNAL;
      522      138    1   DCL M$DO$ PTR;
      523      139    1   DCL DCB$ PTR;
      524      140        %INCLUDE F$DCB;
      525      189        %FPT_READ (WAIT=YES);
      526      228        %FPT_WRITE (WAIT=YES);
      527      259        %FPT_CORRES;
      528      273        %FPT_OPEN;
      529      382        %B$TCB;
      530      385        %B$ALT;
      531      393    1   DCL B$TCB$ PTR SYMREF;
      532      394    1   DCL B$JIT$ PTR SYMREF;
      533      395        %INCLUDE B$JIT;
      534      685        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:81   
      535      686    1        IF NOT OUX_IN$->F$DCB.FCD
      536      687    1        THEN
      537      688    2        DO;
      538      689    2             FPT_OPEN.V.DCB#=OUX_INDCB;
      539      690    2             CALL M$OPEN(FPT_OPEN);
      540      691    2           END;
      541      692    1        IF NOT OUX_OUT$->F$DCB.FCD
      542      693    1        THEN
      543      694    2        DO;
      544      695    2             FPT_OPEN.V.DCB#=OUX_OUTDCB;
      545      696    2             CALL M$OPEN(FPT_OPEN);
      546      697    2           END;
      547      698    1        FPT_READ.V.DCB#=OUX_INDCB;
      548      699    1        FPT_READ.BUF_=CMDBUF;
      549      700    1        CALL M$READ(FPT_READ) ALTRET(BAD_READ);
      550      701    1        ARS=OUX_IN$->F$DCB.ARS;
      551      702    1        ZWI$RECNO = NS_BUFR.RECNO;
      552      703    1        ZWI$INPUT_KEY = NS_BUFR.INPUT_KEY;
      553      704    1        IF (NOT OUX_IN$->F$DCB.DDEV.IC) AND ARS>=OUX_POFF AND
      554      705    1             SUBSTR(BUFFER,0,OUX_POFF)=SUBSTR(OUX_PROMPT,0,OUX_POFF)
      555      706    1        THEN
      556      707    2        DO;
      557      708    2             CALL INSERT(BUFFER,0,ARS-OUX_POFF,SUBSTR(BUFFER,OUX_POFF,ARS-OUX_POFF));
      558      709    2             ARS=ARS-OUX_POFF;
      559      710    2           END;
      560      711    1        LAST=CMDBUF;
      561      712    1        LAST.BOUND=ARS-1;
      562      713    1        CALL MOVE_CMD;
      563      714    1        IF OUX_OUT$->F$DCB.DDEV.UCOUT AND NOT B$JIT.CPFLAGS1 & %CP_ECHO#
      564      715    1        THEN
      565      716    1             RETURN;
      566      717    1        IF NOT OUX_IN$->F$DCB.DDEV.IC OR NOT OUX_OUT$->F$DCB.DDEV.UCOUT
      567      718    1        THEN
      568      719    2        DO;
      569      720    2             FPT_WRITE.V.DCB#=OUX_OUTDCB;
      570      721        /*         CALL M$WRITE(FPT_WRITE); */
      571      722    2           END;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:82   
      572      723    1        RETURN;
      573      724        /**/
      574      725    1   BAD_READ:;
      575      726    1        ERR=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      576      727    1        ALTRETURN;
      577      728        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:83   
      578      729    1   OUX$CORRES: ENTRY(CMDBUF,ARS) ALTRET;
      579      730    1        IF NOT DCBADDR(CHARPOS.N)->F$DCB.FCD
      580      731    1        THEN
      581      732    2        DO;
      582      733    2             FPT_OPEN.V.DCB#=CHARPOS.N;
      583      734    2             CALL M$OPEN(FPT_OPEN);
      584      735    2           END;
      585      736    1        IF NOT DCBADDR(ARS)->F$DCB.FCD
      586      737    1        THEN
      587      738    2        DO;
      588      739    2             FPT_OPEN.V.DCB#=ARS;
      589      740    2             CALL M$OPEN(FPT_OPEN);
      590      741    2           END;
      591      742    1        FPT_CORRES.V.DCB1#=CHARPOS.N;
      592      743    1        FPT_CORRES.V.DCB2#=ARS;
      593      744    1        CALL M$CORRES(FPT_CORRES) ALTRET(CORRES);
      594      745    1        RETURN;
      595      746    1   CORRES: ALTRETURN;
      596      747        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:84   
      597      748    1   OUX$ECHOLAST: ENTRY(CMDBUF) ALTRET;
      598      749    1        CALL MOVE_CMD;
      599      750    1        FPT_WRITE.BUF_=LAST;
      600      751    1        FPT_WRITE.V.DCB#=CHARPOS.N;
      601      752    1        CALL M$WRITE(FPT_WRITE);
      602      753    1        RETURN;
      603      754        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:85   
      604      755    1   OUX$SETLAST: ENTRY(CMDBUF) ALTRET;
      605      756    1        LAST=CMDBUF;
      606      757    1        RETURN;
      607      758        /**/
      608      759    1   MOVE_CMD: PROC;
      609      760    2        IF OUX_POFF>0
      610      761    2        THEN
      611      762    3        DO;
      612      763    3             CSIZE=OUX_POFF;
      613      764    3             ADDR(OUX_BUF)->CHARBASE=OUX_PROMPT;
      614      765    3           END;
      615      766    2        CSIZE=LAST.BOUND+1;
      616      767    2        PINCRC(ADDR(OUX_BUF),OUX_POFF)->CHARBASE=LAST.PTR$->CHARBASE;
      617      768    2        FPT_WRITE.BUF_=VECTOR(OUX_BUF);
      618      769    2        FPT_WRITE.BUF_.BOUND=OUX_POFF+LAST.BOUND;
      619      770    2        RETURN;
      620      771    2   END MOVE_CMD;
      621      772    1   END OUX$READCMD;
      622      773        %EOD;

PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:86   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$READCMD.

   Procedure OUX$READCMD requires 189 words for executable code.
   Procedure OUX$READCMD requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:87   

 Object Unit name= OUX$READCMD                                File name= OUX$GETCMD.:E05TOU
 UTS= JUL 30 '97 04:17:16.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    90    132  OUX$READCMD
    1   DCB   even  none     0      0  M$UC
    2   DCB   even  none     0      0  M$DO
    3   Proc  even  none   189    275  OUX$READCMD
    4  RoData even  none     4      4  OUX$READCMD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  OUX$READCMD
     3    146          yes     yes      Std        2  OUX$CORRES
     3    214          yes     yes      Std        1  OUX$ECHOLAST
     3    231          yes     yes      Std        1  OUX$SETLAST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:88   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OUX_POFF                              OUX_PROMPT                            OUX_BUF
     M$UC                                  OUX_INDCB                             OUX_OUTDCB
     M$DO                                  OUX_IN$                               OUX_OUT$
     ZWI$RECNO                             ZWI$INPUT_KEY                         B$TCB$
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:89   


      465        1        /*T***********************************************************/
      466        2        /*T*                                                         */
      467        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      468        4        /*T*                                                         */
      469        5        /*T***********************************************************/
      470        6        %SET LISTSUB='1'B;
      471        7        /* ROUTINE TO READ COMMAND LINE AND ECHO IF APPROPRIATE */
      472        8        OUX$READCMD: PROC(CMDBUF,ARS) ALTRET;

      8  3 000000   000000 700200 xent  OUX$READCMD  TSX0  ! X66_AUTO_2
         3 000001   000014 000002                    ZERO    12,2

      473        9        /**/
      474       10        /*
      475       11          ###  #   # #   #   #   ####  #####  ###  ####   ###  #   # ####
      476       12         # # # #   # #   #  ###  #   # #     #   # #   # #   # ## ## #   #
      477       13         # # # #   #  # #  # #   #   # #     #   # #   # #     # # # #   #
      478       14         #  ## #   #   #    ###  ####  ####  ##### #   # #     #   # #   #
      479       15         #   # #   #  # #    # # # #   #     #   # #   # #     #   # #   #
      480       16         #   # #   # #   #  ###  #  #  #     #   # #   # #   # #   # #   #
      481       17          ###   ###  #   #   #   #   # ##### #   # ####   ###  #   # ####
      482       18                                                                          */
      483       19    1   DCL 1 CMDBUF,
      484       20    1            2 BOUND UBIN(20) UNAL,
      485       21    1            2 * BIT(16),
      486       22    1            2 PTR$ PTR;
      487       23    1   DCL 1 CHARPOS REDEF CMDBUF,
      488       24    1            2 N UBIN(36),
      489       25    1            2 * UBIN(36);
      490       26    1   DCL ARS SBIN;
      491       27    1   DCL 1 ERR REDEF ARS,
      492       28    1            2 FCG BIT(18),
      493       29    1            2 MON BIT(1),
      494       30    1            2 CODE UBIN(14) UNAL,
      495       31    1            2 SEV UBIN(3) UNAL;
      496       32    1   DCL 1 LAST STATIC,
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:90   
      497       33    1            2 BOUND UBIN(20) UNAL,
      498       34    1            2 * BIT(16),
      499       35    1            2 PTR$ PTR;
      500       36    1   DCL BUFFER CHAR(ARS) BASED(FPT_READ.BUF_.BUF$);
      501       37    1   DCL 1 NS_BUFR BASED(FPT_READ.BUF_.BUF$),
      502       38    1            2 RECNO UBIN,
      503       39    1            2 INPUT_KEY,
      504       40    1                 3 TCHAR UBIN(8) UNAL,
      505       41    1                 3 EDIT_VAL SBIN(28) UNAL;
      506       42    1   DCL OUX_POFF SBIN SYMREF;
      507       43    1   DCL OUX_PROMPT CHAR(32) SYMREF;
      508       44    1   DCL OUX_BUF CHAR(300) SYMREF;
      509       45    1   DCL CHARBASE CHAR(CSIZE) BASED;
      510       46    1   DCL CSIZE SBIN;
      511       47        /**/
      512       48        %INCLUDE CP_6;
      513      129    1   DCL OUX_INDCB UBIN SYMREF;
      514      130    1   DCL OUX_OUTDCB UBIN SYMREF;
      515      131    1   DCL M$DO DCB;
      516      132    1   DCL OUX_IN$ PTR SYMREF;
      517      133    1   DCL OUX_OUT$ PTR SYMREF;
      518      134    1   DCL ZWI$RECNO UBIN SYMREF;
      519      135    1   DCL 1 ZWI$INPUT_KEY ALIGNED SYMREF,
      520      136    1            2 TCHAR UBIN(8) UNAL,
      521      137    1            2 EDIT_VAL SBIN(28) UNAL;
      522      138    1   DCL M$DO$ PTR;
      523      139    1   DCL DCB$ PTR;
      524      140        %INCLUDE F$DCB;
      525      189        %FPT_READ (WAIT=YES);
      526      228        %FPT_WRITE (WAIT=YES);
      527      259        %FPT_CORRES;
      528      273        %FPT_OPEN;
      529      382        %B$TCB;
      530      385        %B$ALT;
      531      393    1   DCL B$TCB$ PTR SYMREF;
      532      394    1   DCL B$JIT$ PTR SYMREF;
      533      395        %INCLUDE B$JIT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:91   
      534      685        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:92   
      535      686    1        IF NOT OUX_IN$->F$DCB.FCD

    686  3 000002   000000 470400 xsym               LDP0    OUX_IN$
         3 000003   000031 236100                    LDQ     25,,PR0
         3 000004   020000 316007                    CANQ    8192,DL
         3 000005   000013 601000 3                  TNZ     s:692

      536      687    1        THEN
      537      688    2        DO;

      538      689    2             FPT_OPEN.V.DCB#=OUX_INDCB;

    689  3 000006   000000 720000 xsym               LXL0    OUX_INDCB
         3 000007   000104 740000 0                  STX0    FPT_OPEN+36

      539      690    2             CALL M$OPEN(FPT_OPEN);

    690  3 000010   000040 630400 0                  EPPR0   FPT_OPEN
         3 000011   050000 713400                    CLIMB   open
         3 000012   410400 401760                    pmme    nvectors=18

      540      691    2           END;

      541      692    1        IF NOT OUX_OUT$->F$DCB.FCD

    692  3 000013   000000 470400 xsym               LDP0    OUX_OUT$
         3 000014   000031 236100                    LDQ     25,,PR0
         3 000015   020000 316007                    CANQ    8192,DL
         3 000016   000024 601000 3                  TNZ     s:698

      542      693    1        THEN
      543      694    2        DO;

      544      695    2             FPT_OPEN.V.DCB#=OUX_OUTDCB;

    695  3 000017   000000 720000 xsym               LXL0    OUX_OUTDCB
         3 000020   000104 740000 0                  STX0    FPT_OPEN+36
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:93   

      545      696    2             CALL M$OPEN(FPT_OPEN);

    696  3 000021   000040 630400 0                  EPPR0   FPT_OPEN
         3 000022   050000 713400                    CLIMB   open
         3 000023   410400 401760                    pmme    nvectors=18

      546      697    2           END;

      547      698    1        FPT_READ.V.DCB#=OUX_INDCB;

    698  3 000024   000000 720000 xsym               LXL0    OUX_INDCB
         3 000025   000012 740000 0                  STX0    FPT_READ+8

      548      699    1        FPT_READ.BUF_=CMDBUF;

    699  3 000026   200003 470500                    LDP0    @CMDBUF,,AUTO
         3 000027   000000 100500                    MLR     fill='000'O
         3 000030   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 000031   000006 000010 0                  ADSC9   FPT_READ+4               cn=0,n=8

      549      700    1        CALL M$READ(FPT_READ) ALTRET(BAD_READ);

    700  3 000032   000002 630400 0                  EPPR0   FPT_READ
         3 000033   440000 713400                    CLIMB   alt,read
         3 000034   401400 401760                    pmme    nvectors=4
         3 000035   000140 702000 3                  TSX2    BAD_READ

      550      701    1        ARS=OUX_IN$->F$DCB.ARS;

    701  3 000036   000000 470400 xsym               LDP0    OUX_IN$
         3 000037   200004 471500                    LDP1    @ARS,,AUTO
         3 000040   000000 235100                    LDA     0,,PR0
         3 000041   100000 755100                    STA     0,,PR1

      551      702    1        ZWI$RECNO = NS_BUFR.RECNO;

PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:94   
    702  3 000042   000007 470400 0                  LDP0    FPT_READ+5
         3 000043   000000 235100                    LDA     0,,PR0
         3 000044   000000 755000 xsym               STA     ZWI$RECNO

      552      703    1        ZWI$INPUT_KEY = NS_BUFR.INPUT_KEY;

    703  3 000045   000001 236100                    LDQ     1,,PR0
         3 000046   000000 756000 xsym               STQ     ZWI$INPUT_KEY

      553      704    1        IF (NOT OUX_IN$->F$DCB.DDEV.IC) AND ARS>=OUX_POFF AND

    704  3 000047   000000 473400 xsym               LDP3    OUX_IN$
         3 000050   300004 236100                    LDQ     4,,PR3
         3 000051   100000 316007                    CANQ    32768,DL
         3 000052   000101 601000 3                  TNZ     s:711
         3 000053   100000 236100                    LDQ     0,,PR1
         3 000054   000000 116000 xsym               CMPQ    OUX_POFF
         3 000055   000101 604000 3                  TMI     s:711
         3 000056   100000 720100                    LXL0    0,,PR1
         3 000057   000000 721000 xsym               LXL1    OUX_POFF
         3 000060   040040 106540                    CMPC    fill='040'O
         3 000061   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         3 000062   000000 000011 xsym               ADSC9   OUX_PROMPT               cn=0,n=*X1
         3 000063   000101 601000 3                  TNZ     s:711

      554      705    1             SUBSTR(BUFFER,0,OUX_POFF)=SUBSTR(OUX_PROMPT,0,OUX_POFF)
      555      706    1        THEN
      556      707    2        DO;

      557      708    2             CALL INSERT(BUFFER,0,ARS-OUX_POFF,SUBSTR(BUFFER,OUX_POFF,ARS-OUX_POFF));

    708  3 000064   000000 136000 xsym               SBLQ    OUX_POFF
         3 000065   200012 756100                    STQ     CSIZE+5,,AUTO
         3 000066   100000 236100                    LDQ     0,,PR1
         3 000067   000000 136000 xsym               SBLQ    OUX_POFF
         3 000070   000000 620006                    EAX0    0,QL
         3 000071   000000 236000 xsym               LDQ     OUX_POFF
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:95   
         3 000072   200012 722100                    LXL2    CSIZE+5,,AUTO
         3 000073   040140 100546                    MLR     fill='040'O
         3 000074   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=*X0
         3 000075   000000 000012                    ADSC9   0,,PR0                   cn=0,n=*X2

      558      709    2             ARS=ARS-OUX_POFF;

    709  3 000076   100000 236100                    LDQ     0,,PR1
         3 000077   000000 136000 xsym               SBLQ    OUX_POFF
         3 000100   100000 756100                    STQ     0,,PR1

      559      710    2           END;

      560      711    1        LAST=CMDBUF;

    711  3 000101   200003 470500                    LDP0    @CMDBUF,,AUTO
         3 000102   000000 100500                    MLR     fill='000'O
         3 000103   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 000104   000000 000010 0                  ADSC9   LAST                     cn=0,n=8

      561      712    1        LAST.BOUND=ARS-1;

    712  3 000105   100000 236100                    LDQ     0,,PR1
         3 000106   000001 136007                    SBLQ    1,DL
         3 000107   000020 736000                    QLS     16
         3 000110   000000 676000 0                  ERQ     LAST
         3 000111   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000112   000000 656000 0                  ERSQ    LAST

      562      713    1        CALL MOVE_CMD;

    713  3 000113   000240 701000 3                  TSX1    MOVE_CMD
         3 000114   000000 011000                    NOP     0

      563      714    1        IF OUX_OUT$->F$DCB.DDEV.UCOUT AND NOT B$JIT.CPFLAGS1 & %CP_ECHO#

    714  3 000115   000000 470400 xsym               LDP0    OUX_OUT$
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:96   
         3 000116   000004 236100                    LDQ     4,,PR0
         3 000117   020000 316007                    CANQ    8192,DL
         3 000120   000126 600000 3                  TZE     s:717
         3 000121   000000 471400 xsym               LDP1    B$JIT$
         3 000122   100143 236100                    LDQ     99,,PR1
         3 000123   000012 376000 xsym               ANQ     B_VECTNIL+10
         3 000124   000126 601000 3                  TNZ     s:717

      564      715    1        THEN
      565      716    1             RETURN;

    716  3 000125   000000 702200 xent               TSX2  ! X66_ARET

      566      717    1        IF NOT OUX_IN$->F$DCB.DDEV.IC OR NOT OUX_OUT$->F$DCB.DDEV.UCOUT

    717  3 000126   000000 471400 xsym               LDP1    OUX_IN$
         3 000127   100004 236100                    LDQ     4,,PR1
         3 000130   100000 316007                    CANQ    32768,DL
         3 000131   000135 600000 3                  TZE     s:720
         3 000132   000004 236100                    LDQ     4,,PR0
         3 000133   020000 316007                    CANQ    8192,DL
         3 000134   000137 601000 3                  TNZ     s:723

      567      718    1        THEN
      568      719    2        DO;

      569      720    2             FPT_WRITE.V.DCB#=OUX_OUTDCB;

    720  3 000135   000000 720000 xsym               LXL0    OUX_OUTDCB
         3 000136   000030 740000 0                  STX0    FPT_WRITE+8

      570      721        /*         CALL M$WRITE(FPT_WRITE); */
      571      722    2           END;

      572      723    1        RETURN;

    723  3 000137   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:97   

    717  3 000140                       BAD_READ     null
      573      724        /**/
      574      725    1   BAD_READ:;
      575      726    1        ERR=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

    726  3 000140   000000 470400 xsym               LDP0    B$TCB$
         3 000141   000000 471500                    LDP1    0,,PR0
         3 000142   100102 236100                    LDQ     66,,PR1
         3 000143   200004 473500                    LDP3    @ARS,,AUTO
         3 000144   300000 756100                    STQ     0,,PR3

      576      727    1        ALTRETURN;

    727  3 000145   000000 702200 xent               TSX2  ! X66_AALT

      577      728        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:98   
      578      729    1   OUX$CORRES: ENTRY(CMDBUF,ARS) ALTRET;

    729  3 000146   000000 700200 xent  OUX$CORRES   TSX0  ! X66_AUTO_2
         3 000147   000014 000002                    ZERO    12,2

      579      730    1        IF NOT DCBADDR(CHARPOS.N)->F$DCB.FCD

    730  3 000150   000000 470400 4                  LDP0    0
         3 000151   000000 471500                    LDP1    0,,PR0
         3 000152   200003 473500                    LDP3    @CMDBUF,,AUTO
         3 000153   300000 720100                    LXL0    0,,PR3
         3 000154   100000 474510                    LDP4    0,X0,PR1
         3 000155   400031 236100                    LDQ     25,,PR4
         3 000156   020000 316007                    CANQ    8192,DL
         3 000157   000164 601000 3                  TNZ     s:736

      580      731    1        THEN
      581      732    2        DO;

      582      733    2             FPT_OPEN.V.DCB#=CHARPOS.N;

    733  3 000160   000104 740000 0                  STX0    FPT_OPEN+36

      583      734    2             CALL M$OPEN(FPT_OPEN);

    734  3 000161   000040 630400 0                  EPPR0   FPT_OPEN
         3 000162   050000 713400                    CLIMB   open
         3 000163   410400 401760                    pmme    nvectors=18

      584      735    2           END;

      585      736    1        IF NOT DCBADDR(ARS)->F$DCB.FCD

    736  3 000164   000000 470400 4                  LDP0    0
         3 000165   000000 471500                    LDP1    0,,PR0
         3 000166   200004 473500                    LDP3    @ARS,,AUTO
         3 000167   300000 720100                    LXL0    0,,PR3
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:99   
         3 000170   100000 474510                    LDP4    0,X0,PR1
         3 000171   400031 236100                    LDQ     25,,PR4
         3 000172   020000 316007                    CANQ    8192,DL
         3 000173   000200 601000 3                  TNZ     s:742

      586      737    1        THEN
      587      738    2        DO;

      588      739    2             FPT_OPEN.V.DCB#=ARS;

    739  3 000174   000104 740000 0                  STX0    FPT_OPEN+36

      589      740    2             CALL M$OPEN(FPT_OPEN);

    740  3 000175   000040 630400 0                  EPPR0   FPT_OPEN
         3 000176   050000 713400                    CLIMB   open
         3 000177   410400 401760                    pmme    nvectors=18

      590      741    2           END;

      591      742    1        FPT_CORRES.V.DCB1#=CHARPOS.N;

    742  3 000200   200003 470500                    LDP0    @CMDBUF,,AUTO
         3 000201   000000 720100                    LXL0    0,,PR0
         3 000202   000036 740000 0                  STX0    FPT_CORRES+2

      592      743    1        FPT_CORRES.V.DCB2#=ARS;

    743  3 000203   200004 471500                    LDP1    @ARS,,AUTO
         3 000204   100000 721100                    LXL1    0,,PR1
         3 000205   000036 441000 0                  SXL1    FPT_CORRES+2

      593      744    1        CALL M$CORRES(FPT_CORRES) ALTRET(CORRES);

    744  3 000206   000034 630400 0                  EPPR0   FPT_CORRES
         3 000207   460000 713400                    CLIMB   alt,+24576
         3 000210   400000 401760                    pmme    nvectors=1
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:100  
         3 000211   000213 702000 3                  TSX2    CORRES

      594      745    1        RETURN;

    745  3 000212   000000 702200 xent               TSX2  ! X66_ARET

      595      746    1   CORRES: ALTRETURN;

    746  3 000213   000000 702200 xent  CORRES       TSX2  ! X66_AALT

      596      747        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:101  
      597      748    1   OUX$ECHOLAST: ENTRY(CMDBUF) ALTRET;

    748  3 000214   000000 700200 xent  OUX$ECHOLAST TSX0  ! X66_AUTO_2
         3 000215   000014 000002                    ZERO    12,2

      598      749    1        CALL MOVE_CMD;

    749  3 000216   000240 701000 3                  TSX1    MOVE_CMD
         3 000217   000000 011000                    NOP     0

      599      750    1        FPT_WRITE.BUF_=LAST;

    750  3 000220   000000 237000 0                  LDAQ    LAST
         3 000221   000024 757000 0                  STAQ    FPT_WRITE+4

      600      751    1        FPT_WRITE.V.DCB#=CHARPOS.N;

    751  3 000222   200003 470500                    LDP0    @CMDBUF,,AUTO
         3 000223   000000 720100                    LXL0    0,,PR0
         3 000224   000030 740000 0                  STX0    FPT_WRITE+8

      601      752    1        CALL M$WRITE(FPT_WRITE);

    752  3 000225   000020 630400 0                  EPPR0   FPT_WRITE
         3 000226   040001 713400                    CLIMB   write
         3 000227   401400 401760                    pmme    nvectors=4

      602      753    1        RETURN;

    753  3 000230   000000 702200 xent               TSX2  ! X66_ARET

      603      754        %EJECT;
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:102  
      604      755    1   OUX$SETLAST: ENTRY(CMDBUF) ALTRET;

    755  3 000231   000000 700200 xent  OUX$SETLAST  TSX0  ! X66_AUTO_2
         3 000232   000014 000002                    ZERO    12,2

      605      756    1        LAST=CMDBUF;

    756  3 000233   200003 470500                    LDP0    @CMDBUF,,AUTO
         3 000234   000000 100500                    MLR     fill='000'O
         3 000235   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 000236   000000 000010 0                  ADSC9   LAST                     cn=0,n=8

      606      757    1        RETURN;

    757  3 000237   000000 702200 xent               TSX2  ! X66_ARET

      607      758        /**/
      608      759    1   MOVE_CMD: PROC;

    759  3 000240   200010 741300       MOVE_CMD     STX1  ! CSIZE+3,,AUTO

      609      760    2        IF OUX_POFF>0

    760  3 000241   000000 235000 xsym               LDA     OUX_POFF
         3 000242   000250 604400 3                  TMOZ    s:766

      610      761    2        THEN
      611      762    3        DO;

      612      763    3             CSIZE=OUX_POFF;

    763  3 000243   200005 755100                    STA     CSIZE,,AUTO

      613      764    3             ADDR(OUX_BUF)->CHARBASE=OUX_PROMPT;

    764  3 000244   000000 620005                    EAX0    0,AL
         3 000245   040040 100400                    MLR     fill='040'O
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:103  
         3 000246   000000 000040 xsym               ADSC9   OUX_PROMPT               cn=0,n=32
         3 000247   000000 000010 xsym               ADSC9   OUX_BUF                  cn=0,n=*X0

      614      765    3           END;

      615      766    2        CSIZE=LAST.BOUND+1;

    766  3 000250   000000 236000 0                  LDQ     LAST
         3 000251   000020 772000                    QRL     16
         3 000252   000001 036007                    ADLQ    1,DL
         3 000253   200005 756100                    STQ     CSIZE,,AUTO

      616      767    2        PINCRC(ADDR(OUX_BUF),OUX_POFF)->CHARBASE=LAST.PTR$->CHARBASE;

    767  3 000254   000001 470400 0                  LDP0    LAST+1
         3 000255   000000 620006                    EAX0    0,QL
         3 000256   200005 722100                    LXL2    CSIZE,,AUTO
         3 000257   000000 235000 xsym               LDA     OUX_POFF
         3 000260   040045 100540                    MLR     fill='040'O
         3 000261   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         3 000262   000000 000012 xsym               ADSC9   OUX_BUF,A                cn=0,n=*X2

      617      768    2        FPT_WRITE.BUF_=VECTOR(OUX_BUF);

    768  3 000263   000002 237000 4                  LDAQ    2
         3 000264   000024 757000 0                  STAQ    FPT_WRITE+4

      618      769    2        FPT_WRITE.BUF_.BOUND=OUX_POFF+LAST.BOUND;

    769  3 000265   000000 236000 0                  LDQ     LAST
         3 000266   000020 772000                    QRL     16
         3 000267   000000 036000 xsym               ADLQ    OUX_POFF
         3 000270   000020 736000                    QLS     16
         3 000271   000024 676000 0                  ERQ     FPT_WRITE+4
         3 000272   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000273   000024 656000 0                  ERSQ    FPT_WRITE+4

PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:104  
      619      770    2        RETURN;

    770  3 000274   000001 702211                    TSX2  ! 1,X1
      620      771    2   END MOVE_CMD;
      621      772    1   END OUX$READCMD;
      622      773        %EOD;

PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:105  
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$READCMD.
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:106  

 **** Variables and constants ****

  ****  Section 000  Data  OUX$READCMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    34-0-0/d STRC(144)   r     1 FPT_CORRES                40-0-0/d STRC(2088)  r     1 FPT_OPEN
     2-0-0/d STRC(504)   r     1 FPT_READ                  20-0-0/d STRC(432)   r     1 FPT_WRITE
     0-0-0/w STRC(72)    r     1 LAST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ARS                       3-0-0/w PTR         r     1 @CMDBUF
    *0-0-0/w SBIN        r     1 ARS                       *0-0-0/w STRC(72)    r     1 CHARPOS
    *0-0-0/w STRC(72)    r     1 CMDBUF                     5-0-0/w SBIN        r     1 CSIZE
    *0-0-0/w STRC        r     1 ERR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c CHAR(300)   r     1 OUX_BUF                    0-0-0/w PTR         r     1 OUX_IN$
     0-0-0/w UBIN        r     1 OUX_INDCB                  0-0-0/w PTR         r     1 OUX_OUT$
     0-0-0/w UBIN        r     1 OUX_OUTDCB                 0-0-0/w SBIN        r     1 OUX_POFF
     0-0-0/c CHAR(32)    r     1 OUX_PROMPT                 0-0-0/w STRC        r     1 ZWI$INPUT_KEY
     0-0-0/w UBIN        r     1 ZWI$RECNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:107  

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/c ACHR        r     1 BUFFER
     0-0-0/c ACHR        r     1 CHARBASE                   0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(72)    r     1 NS_BUFR


   Procedure OUX$READCMD requires 189 words for executable code.
   Procedure OUX$READCMD requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:108  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:109  
          MINI XREF LISTING

ARS
        26**DCL         8--PROC       27--REDEF      36--IMP-SIZ   701<<ASSIGN    704>>IF        704>>IF
       708>>CALLBLT   708>>CALLBLT   708>>CALLBLT   708>>CALLBLT   709<<ASSIGN    709>>ASSIGN    712>>ASSIGN
       729--ENTRY     736--IF        739>>ASSIGN    743>>ASSIGN
B$ALT.CODE
       387**DCL       387--REDEF     388--REDEF     388--REDEF
B$ALT.ERR
       388**DCL       726>>ASSIGN
B$ALT.ERR.ERR#
       389**DCL       389--REDEF
B$ALT.EVID
       388**DCL       388--REDEF     388--REDEF
B$JIT.CPFLAGS1
       498**DCL       714>>IF
B$JIT.CPFLAGS1.SLEAZE
       503**DCL       503--REDEF
B$JIT.ERR.MID
       410**DCL       410--REDEF
B$JIT.JRESPEAK
       571**DCL       572--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       680**DCL       680--REDEF     681--REDEF
B$JIT.PNR
       584**DCL       584--REDEF
B$JIT.TSLINE
       678**DCL       679--REDEF
B$JIT$
       394**DCL       404--IMP-PTR   714>>IF
B$TCB.ALT$
       383**DCL       726>>ASSIGN
B$TCB$
       393**DCL       726>>ASSIGN
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:110  
BAD_READ
       717**LABEL     700--CALLALT
BUFFER
        36**DCL       704>>IF        708<<CALLBLT   708>>CALLBLT
CHARBASE
        45**DCL       764<<ASSIGN    767<<ASSIGN    767>>ASSIGN
CHARPOS.N
        24**DCL       730--IF        733>>ASSIGN    742>>ASSIGN    751>>ASSIGN
CMDBUF
        19**DCL         8--PROC       23--REDEF     699>>ASSIGN    711>>ASSIGN    729--ENTRY     748--ENTRY
       755--ENTRY     756>>ASSIGN
CORRES
       746**LABEL     744--CALLALT
CSIZE
        46**DCL        45--IMP-SIZ   763<<ASSIGN    764>>ASSIGN    766<<ASSIGN    767>>ASSIGN    767>>ASSIGN
ERR
        27**DCL       726<<ASSIGN
F$DCB.ACTPOS
       166**DCL       166--REDEF
F$DCB.ARS
       141**DCL       141--REDEF     701>>ASSIGN
F$DCB.ATTR
       159**DCL       160--REDEF
F$DCB.BORROW
       174**DCL       174--REDEF     174--REDEF     174--REDEF
F$DCB.DCBNAME.L
       188**DCL       188--IMP-SIZ
F$DCB.DDEV.IC
       147**DCL       704>>IF        717>>IF
F$DCB.DDEV.UCOUT
       147**DCL       714>>IF        717>>IF
F$DCB.EOMCHAR
       145**DCL       145--REDEF
F$DCB.FCD
       154**DCL       686>>IF        692>>IF        730>>IF        736>>IF
F$DCB.FLDID
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:111  
       169**DCL       169--REDEF
F$DCB.FORM$
       163**DCL       163--REDEF
F$DCB.FSECT
       179**DCL       179--REDEF
F$DCB.FSN
       156**DCL       156--REDEF     156--REDEF     157--REDEF
F$DCB.HEADER$
       162**DCL       162--REDEF
F$DCB.IXTNSIZE
       160**DCL       160--REDEF
F$DCB.LASTSTA$
       150**DCL       150--REDEF
F$DCB.LVL
       175**DCL       175--REDEF
F$DCB.NAME.C
       150**DCL       150--REDEF
F$DCB.NOEOF
       171**DCL       171--REDEF
F$DCB.NRECS
       161**DCL       161--REDEF
F$DCB.NRECX
       180**DCL       180--REDEF
F$DCB.OHDR
       172**DCL       172--REDEF
F$DCB.ORG
       155**DCL       155--REDEF
F$DCB.PRECNO
       178**DCL       178--REDEF
F$DCB.RCSZ
       183**DCL       183--REDEF
F$DCB.RES
       151**DCL       151--REDEF
F$DCB.SETX
       163**DCL       163--REDEF
F$DCB.TAB$
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:112  
       162**DCL       163--REDEF
F$DCB.TDA
       177**DCL       177--REDEF
F$DCB.WSN
       152**DCL       152--REDEF
FPT_CORRES
       270**DCL       744<>CALL
FPT_CORRES.V
       270**DCL       270--DCLINIT
FPT_CORRES.V.DCB1#
       270**DCL       742<<ASSIGN
FPT_CORRES.V.DCB2#
       271**DCL       743<<ASSIGN
FPT_OPEN
       338**DCL       690<>CALL      696<>CALL      734<>CALL      740<>CALL
FPT_OPEN.ACSVEH_
       340**DCL       341--REDEF
FPT_OPEN.ALTKEYS_
       346**DCL       347--REDEF     347--REDEF
FPT_OPEN.HDR_
       345**DCL       346--REDEF
FPT_OPEN.TAB_
       344**DCL       345--REDEF
FPT_OPEN.UHL_
       338**DCL       339--REDEF     339--REDEF
FPT_OPEN.V
       347**DCL       338--DCLINIT
FPT_OPEN.V.DCB#
       347**DCL       689<<ASSIGN    695<<ASSIGN    733<<ASSIGN    739<<ASSIGN
FPT_OPEN.V.FSN#
       378**DCL       378--REDEF     378--REDEF
FPT_OPEN.WSN_
       344**DCL       344--REDEF
FPT_READ
       206**DCL       700<>CALL
FPT_READ.BUF_
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:113  
       208**DCL       699<<ASSIGN
FPT_READ.BUF_.BUF$
       209**DCL        36--IMP-PTR    37--IMP-PTR   702>>ASSIGN    703>>ASSIGN    704>>IF        708>>CALLBLT
       708>>CALLBLT
FPT_READ.STATION_
       209**DCL       210--REDEF
FPT_READ.V
       210**DCL       206--DCLINIT
FPT_READ.V.DCB#
       210**DCL       698<<ASSIGN
FPT_READ.V.DVBYTE.REREAD#
       221**DCL       221--REDEF
FPT_READ.V.INDX#
       219**DCL       219--REDEF
FPT_WRITE
       245**DCL       752<>CALL
FPT_WRITE.BUF_
       245**DCL       750<<ASSIGN    768<<ASSIGN
FPT_WRITE.BUF_.BOUND
       245**DCL       769<<ASSIGN
FPT_WRITE.STATION_
       247**DCL       247--REDEF
FPT_WRITE.V
       248**DCL       245--DCLINIT
FPT_WRITE.V.DCB#
       248**DCL       720<<ASSIGN    751<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
       254**DCL       254--REDEF
LAST
        32**DCL       711<<ASSIGN    750>>ASSIGN    756<<ASSIGN
LAST.BOUND
        33**DCL       712<<ASSIGN    766>>ASSIGN    769>>ASSIGN
LAST.PTR$
        35**DCL       767>>ASSIGN
M$CORRES
        62**DCL-ENT   744--CALL
PL6.E3A0      #003=OUX$READCMD File=OUX$GETCMD.:E05TSI                           WED 07/30/97 04:17 Page:114  
M$OPEN
        57**DCL-ENT   690--CALL      696--CALL      734--CALL      740--CALL
M$READ
        58**DCL-ENT   700--CALL
M$WRITE
        58**DCL-ENT   752--CALL
MOVE_CMD
       759**PROC      713--CALL      749--CALL
NS_BUFR.INPUT_KEY
        39**DCL       703>>ASSIGN
NS_BUFR.RECNO
        38**DCL       702>>ASSIGN
OUX_BUF
        44**DCL       764--ASSIGN    767--ASSIGN    768--ASSIGN
OUX_IN$
       132**DCL       686>>IF        701>>ASSIGN    704>>IF        717>>IF
OUX_INDCB
       129**DCL       689>>ASSIGN    698>>ASSIGN
OUX_OUT$
       133**DCL       692>>IF        714>>IF        717>>IF
OUX_OUTDCB
       130**DCL       695>>ASSIGN    720>>ASSIGN
OUX_POFF
        42**DCL       704>>IF        704>>IF        704>>IF        708>>CALLBLT   708>>CALLBLT   708>>CALLBLT
       709>>ASSIGN    760>>IF        763>>ASSIGN    767>>ASSIGN    769>>ASSIGN
OUX_PROMPT
        43**DCL       704>>IF        764>>ASSIGN
ZWI$INPUT_KEY
       135**DCL       703<<ASSIGN
ZWI$RECNO
       134**DCL       702<<ASSIGN

PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:115  
      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        /* OUX$ERRMSG - ERROR MESSAGE HANDLING ROUTINES FOR DEF */
      629        7        %SET LISTSUB='1'B;
      630        8        /*
      631        9          ###  #   # #   #   #   ##### ####  ####  #   #  ###   ###
      632       10         # # # #   # #   #  ###  #     #   # #   # ## ## #   # #   #
      633       11         # # # #   #  # #  # #   #     #   # #   # # # # #     #
      634       12         #  ## #   #   #    ###  ####  ####  ####  #   #  ###  #
      635       13         #   # #   #  # #    # # #     # #   # #   #   #     # #  ##
      636       14         #   # #   # #   #  ###  #     #  #  #  #  #   # #   # #   #
      637       15          ###   ###  #   #   #   ##### #   # #   # #   #  ###   ###
      638       16                                                                          */
      639       17        /**/
      640       18        OUX$ERRMSG: PROC (CODE,DCB#,OUTDCB,F1,F2,F3,FLGLEV) ALTRET;
      641       19        /**/
      642       20    1   DCL CODE BIT(36) CALIGNED;
      643       21    1   DCL FID$ PTR;                           /* FOR OUX$SETERRMSG */
      644       22    1   DCL 1 FID BASED(FID$),
      645       23    1            2 L UBIN BYTE UNAL,
      646       24    1            2 C CHAR(FID.L);
      647       25    1   DCL DCB# SBIN;
      648       26    1   DCL OUTDCB UBIN;
      649       27    1   DCL F1 BIT(72) CALIGNED;
      650       28    1   DCL F2 BIT(72) CALIGNED;
      651       29    1   DCL F3 BIT(72) CALIGNED;
      652       30    1   DCL FLGLEV SBIN;
      653       31        /**/
      654       32    1   DCL M$DO DCB;
      655       33        %INCLUDE CP_6;
      656      114    1   DCL ERRBUF CHAR(120) STATIC;
      657      115        %FPT_ERRMSG (BUF=ERRBUF,OUTDCB1=M$DO,SUBMESS=YES,INCLCODE=NO,CODE=ERRSAVE,
      658      116                     RESULTS=OUX_ERRMSG);
      659      143        %VLR_ERRMSG (FPTN=OUX_ERRMSG,STCLASS="STATIC SYMDEF");
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:116  
      660      165        %FPT_FID (ACCT=FILEACCT,ASN=VLR_FID,NAME=FILENAME,PASS=FILEPASS,RES=VLR_FID,
      661      166                  RESULTS=VLR_FID);
      662      189        %VLR_FID;
      663      208        %VLP_ACCT (FPTN=FILEACCT);
      664      221        %VLP_NAME (FPTN=FILENAME);
      665      248        %VLP_PASS (FPTN=FILEPASS);
      666      261    1   DCL 1 ERRSAVE STATIC,
      667      262    1            2 FCG BIT(18),
      668      263    1            2 MON BIT(1),
      669      264    1            2 CODE UBIN(14) UNAL,
      670      265    1            2 SEV UBIN(3) UNAL;
      671      266        /**/
      672      267    1        IF ADDR(CODE)=ADDR(NIL)
      673      268    1        THEN
      674      269    2        DO;
      675      270    2             IF ERRSAVE.SEV=7
      676      271    2             THEN
      677      272    2                  ALTRETURN;
      678      273    2             ERRSAVE.SEV=ERRSAVE.SEV+1;
      679      274    2             FPT_ERRMSG.V.SUBMESS#='0'B;
      680      275    2           END;
      681      276    1        ELSE
      682      277    2        DO;
      683      278    2             ERRSAVE=CODE;
      684      279    2             ERRSAVE.SEV=0;
      685      280    2             FPT_ERRMSG.V.SUBMESS#='1'B;
      686      281    2           END;
      687      282    1        IF ADDR(OUTDCB)=ADDR(NIL)
      688      283    1        THEN
      689      284    1             FPT_ERRMSG.V.OUTDCB1#=DCBNUM(M$DO);
      690      285    1        ELSE
      691      286    1             FPT_ERRMSG.V.OUTDCB1#=OUTDCB;
      692      287    1        IF ADDR(F1)=ADDR(NIL)
      693      288    1        THEN
      694      289    1             FPT_ERRMSG.FIELD1_=VECTOR(NIL);
      695      290    1        ELSE
      696      291    1             FPT_ERRMSG.FIELD1_=F1;
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:117  
      697      292    1        IF ADDR(F2)=ADDR(NIL)
      698      293    1        THEN
      699      294    1             FPT_ERRMSG.FIELD2_=VECTOR(NIL);
      700      295    1        ELSE
      701      296    1             FPT_ERRMSG.FIELD2_=F2;
      702      297    1        IF ADDR(F3)=ADDR(NIL)
      703      298    1        THEN
      704      299    1             FPT_ERRMSG.FIELD3_=VECTOR(NIL);
      705      300    1        ELSE
      706      301    1             FPT_ERRMSG.FIELD3_=F3;
      707      302    1        IF ADDR(FLGLEV)=ADDR(NIL)
      708      303    1        THEN
      709      304    1             FPT_ERRMSG.V.FLAGLEV#=0;
      710      305    1        ELSE
      711      306    1             FPT_ERRMSG.V.FLAGLEV#=FLGLEV;
      712      307    1        IF ADDR(DCB#)~=ADDR(NIL)
      713      308    1        THEN
      714      309    1             FPT_ERRMSG.V.DCB#=DCB#;
      715      310    1        ELSE
      716      311    1             FPT_ERRMSG.V.DCB#=0;
      717      312    1        CALL M$ERRMSG(FPT_ERRMSG) ALTRET(ALT);
      718      313    1        IF FPT_ERRMSG.V.SUBMESS#
      719      314    1        THEN
      720      315    1             ERRSAVE=OUX_ERRMSG.CODEUSED;
      721      316    1        RETURN;
      722      317        %EJECT;
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:118  
      723      318    1   OUX$SETERRMSG: ENTRY(CODE) ALTRET;
      724      319    1        FID$=ADDR(CODE);
      725      320    1        IF FID$=ADDR(NIL)
      726      321    1        THEN
      727      322    2        DO;
      728      323    2             FPT_ERRMSG.FILEACCT_=VECTOR(NIL);
      729      324    2             FPT_ERRMSG.FILENAME_=VECTOR(NIL);
      730      325    2             FPT_ERRMSG.FILEPASS_=VECTOR(NIL);
      731      326    2           END;
      732      327    1        ELSE
      733      328    2        DO;
      734      329    2             FPT_FID.TEXTFID_=VECTOR(FID.C);
      735      330    2             CALL M$FID(FPT_FID) ALTRET(ALT);
      736      331    2             FPT_ERRMSG.FILEACCT_=VECTOR(FILEACCT);
      737      332    2             FPT_ERRMSG.FILENAME_=VECTOR(FILENAME);
      738      333    2             FPT_ERRMSG.FILEPASS_=VECTOR(FILEPASS);
      739      334    2           END;
      740      335    1        RETURN;
      741      336    1   ALT: ALTRETURN;
      742      337    1   END OUX$ERRMSG;
      743      338        %EOD;

PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:119  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$ERRMSG.

   Procedure OUX$ERRMSG requires 128 words for executable code.
   Procedure OUX$ERRMSG requires 14 words of local(AUTO) storage.

PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:120  

 Object Unit name= OUX$ERRMSG                                 File name= OUX$GETCMD.:E05TOU
 UTS= JUL 30 '97 04:17:47.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$DO
    1   DCB   even  none     0      0  M$UC
    2   Data  even  none   107    153  OUX$ERRMSG
    3   Proc  even  none   128    200  OUX$ERRMSG
    4  RoData even  none    10     12  OUX$ERRMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        7  OUX$ERRMSG
     3    135          yes     yes      Std        1  OUX$SETERRMSG

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2     70  OUX_ERRMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:121  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$DO                                  M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:122  


      623        1        /*T***********************************************************/
      624        2        /*T*                                                         */
      625        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      626        4        /*T*                                                         */
      627        5        /*T***********************************************************/
      628        6        /* OUX$ERRMSG - ERROR MESSAGE HANDLING ROUTINES FOR DEF */
      629        7        %SET LISTSUB='1'B;
      630        8        /*
      631        9          ###  #   # #   #   #   ##### ####  ####  #   #  ###   ###
      632       10         # # # #   # #   #  ###  #     #   # #   # ## ## #   # #   #
      633       11         # # # #   #  # #  # #   #     #   # #   # # # # #     #
      634       12         #  ## #   #   #    ###  ####  ####  ####  #   #  ###  #
      635       13         #   # #   #  # #    # # #     # #   # #   #   #     # #  ##
      636       14         #   # #   # #   #  ###  #     #  #  #  #  #   # #   # #   #
      637       15          ###   ###  #   #   #   ##### #   # #   # #   #  ###   ###
      638       16                                                                          */
      639       17        /**/
      640       18        OUX$ERRMSG: PROC (CODE,DCB#,OUTDCB,F1,F2,F3,FLGLEV) ALTRET;

     18  3 000000   000000 700200 xent  OUX$ERRMSG   TSX0  ! X66_AUTO_N
         3 000001   000016 000007                    ZERO    14,7

      641       19        /**/
      642       20    1   DCL CODE BIT(36) CALIGNED;
      643       21    1   DCL FID$ PTR;                           /* FOR OUX$SETERRMSG */
      644       22    1   DCL 1 FID BASED(FID$),
      645       23    1            2 L UBIN BYTE UNAL,
      646       24    1            2 C CHAR(FID.L);
      647       25    1   DCL DCB# SBIN;
      648       26    1   DCL OUTDCB UBIN;
      649       27    1   DCL F1 BIT(72) CALIGNED;
      650       28    1   DCL F2 BIT(72) CALIGNED;
      651       29    1   DCL F3 BIT(72) CALIGNED;
      652       30    1   DCL FLGLEV SBIN;
      653       31        /**/
      654       32    1   DCL M$DO DCB;
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:123  
      655       33        %INCLUDE CP_6;
      656      114    1   DCL ERRBUF CHAR(120) STATIC;
      657      115        %FPT_ERRMSG (BUF=ERRBUF,OUTDCB1=M$DO,SUBMESS=YES,INCLCODE=NO,CODE=ERRSAVE,
      658      116                     RESULTS=OUX_ERRMSG);
      659      143        %VLR_ERRMSG (FPTN=OUX_ERRMSG,STCLASS="STATIC SYMDEF");
      660      165        %FPT_FID (ACCT=FILEACCT,ASN=VLR_FID,NAME=FILENAME,PASS=FILEPASS,RES=VLR_FID,
      661      166                  RESULTS=VLR_FID);
      662      189        %VLR_FID;
      663      208        %VLP_ACCT (FPTN=FILEACCT);
      664      221        %VLP_NAME (FPTN=FILENAME);
      665      248        %VLP_PASS (FPTN=FILEPASS);
      666      261    1   DCL 1 ERRSAVE STATIC,
      667      262    1            2 FCG BIT(18),
      668      263    1            2 MON BIT(1),
      669      264    1            2 CODE UBIN(14) UNAL,
      670      265    1            2 SEV UBIN(3) UNAL;
      671      266        /**/
      672      267    1        IF ADDR(CODE)=ADDR(NIL)

    267  3 000002   200003 236100                    LDQ     @CODE,,AUTO
         3 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000004   000021 601000 3                  TNZ     s:278

      673      268    1        THEN
      674      269    2        DO;

      675      270    2             IF ERRSAVE.SEV=7

    270  3 000005   000152 236000 2                  LDQ     ERRSAVE
         3 000006   000007 376007                    ANQ     7,DL
         3 000007   000007 116007                    CMPQ    7,DL
         3 000010   000012 601000 3                  TNZ     s:273

      676      271    2             THEN
      677      272    2                  ALTRETURN;

    272  3 000011   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:124  

      678      273    2             ERRSAVE.SEV=ERRSAVE.SEV+1;

    273  3 000012   000001 036007                    ADLQ    1,DL
         3 000013   000152 676000 2                  ERQ     ERRSAVE
         3 000014   000007 376007                    ANQ     7,DL
         3 000015   000152 656000 2                  ERSQ    ERRSAVE

      679      274    2             FPT_ERRMSG.V.SUBMESS#='0'B;

    274  3 000016   000000 236000 4                  LDQ     0
         3 000017   000066 356000 2                  ANSQ    FPT_ERRMSG+24

      680      275    2           END;

    275  3 000020   000031 710000 3                  TRA     s:282

      681      276    1        ELSE
      682      277    2        DO;

      683      278    2             ERRSAVE=CODE;

    278  3 000021   200003 470500                    LDP0    @CODE,,AUTO
         3 000022   000000 100500                    MLR     fill='000'O
         3 000023   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         3 000024   000152 000004 2                  ADSC9   ERRSAVE                  cn=0,n=4

      684      279    2             ERRSAVE.SEV=0;

    279  3 000025   000001 236000 4                  LDQ     1
         3 000026   000152 356000 2                  ANSQ    ERRSAVE

      685      280    2             FPT_ERRMSG.V.SUBMESS#='1'B;

    280  3 000027   001000 236003                    LDQ     512,DU
         3 000030   000066 256000 2                  ORSQ    FPT_ERRMSG+24

PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:125  
      686      281    2           END;

      687      282    1        IF ADDR(OUTDCB)=ADDR(NIL)

    282  3 000031   200005 236100                    LDQ     @OUTDCB,,AUTO
         3 000032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000033   000040 601000 3                  TNZ     s:286

      688      283    1        THEN
      689      284    1             FPT_ERRMSG.V.OUTDCB1#=DCBNUM(M$DO);

    284  3 000034   000000 236007 xsym               LDQ     M$DO,DL
         3 000035   000000 620006                    EAX0    0,QL
         3 000036   000064 440000 2                  SXL0    FPT_ERRMSG+22
         3 000037   000043 710000 3                  TRA     s:287

      690      285    1        ELSE
      691      286    1             FPT_ERRMSG.V.OUTDCB1#=OUTDCB;

    286  3 000040   200005 470500                    LDP0    @OUTDCB,,AUTO
         3 000041   000000 720100                    LXL0    0,,PR0
         3 000042   000064 440000 2                  SXL0    FPT_ERRMSG+22

      692      287    1        IF ADDR(F1)=ADDR(NIL)

    287  3 000043   200006 236100                    LDQ     @F1,,AUTO
         3 000044   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000045   000051 601000 3                  TNZ     s:291

      693      288    1        THEN
      694      289    1             FPT_ERRMSG.FIELD1_=VECTOR(NIL);

    289  3 000046   000002 237000 4                  LDAQ    2
         3 000047   000052 757000 2                  STAQ    FPT_ERRMSG+12
         3 000050   000055 710000 3                  TRA     s:292

      695      290    1        ELSE
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:126  
      696      291    1             FPT_ERRMSG.FIELD1_=F1;

    291  3 000051   200006 470500                    LDP0    @F1,,AUTO
         3 000052   000000 100500                    MLR     fill='000'O
         3 000053   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 000054   000052 000010 2                  ADSC9   FPT_ERRMSG+12            cn=0,n=8

      697      292    1        IF ADDR(F2)=ADDR(NIL)

    292  3 000055   200007 236100                    LDQ     @F2,,AUTO
         3 000056   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000057   000063 601000 3                  TNZ     s:296

      698      293    1        THEN
      699      294    1             FPT_ERRMSG.FIELD2_=VECTOR(NIL);

    294  3 000060   000002 237000 4                  LDAQ    2
         3 000061   000054 757000 2                  STAQ    FPT_ERRMSG+14
         3 000062   000067 710000 3                  TRA     s:297

      700      295    1        ELSE
      701      296    1             FPT_ERRMSG.FIELD2_=F2;

    296  3 000063   200007 470500                    LDP0    @F2,,AUTO
         3 000064   000000 100500                    MLR     fill='000'O
         3 000065   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 000066   000054 000010 2                  ADSC9   FPT_ERRMSG+14            cn=0,n=8

      702      297    1        IF ADDR(F3)=ADDR(NIL)

    297  3 000067   200010 236100                    LDQ     @F3,,AUTO
         3 000070   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000071   000075 601000 3                  TNZ     s:301

      703      298    1        THEN
      704      299    1             FPT_ERRMSG.FIELD3_=VECTOR(NIL);

PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:127  
    299  3 000072   000002 237000 4                  LDAQ    2
         3 000073   000056 757000 2                  STAQ    FPT_ERRMSG+16
         3 000074   000101 710000 3                  TRA     s:302

      705      300    1        ELSE
      706      301    1             FPT_ERRMSG.FIELD3_=F3;

    301  3 000075   200010 470500                    LDP0    @F3,,AUTO
         3 000076   000000 100500                    MLR     fill='000'O
         3 000077   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 000100   000056 000010 2                  ADSC9   FPT_ERRMSG+16            cn=0,n=8

      707      302    1        IF ADDR(FLGLEV)=ADDR(NIL)

    302  3 000101   200011 236100                    LDQ     @FLGLEV,,AUTO
         3 000102   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000103   000107 601000 3                  TNZ     s:306

      708      303    1        THEN
      709      304    1             FPT_ERRMSG.V.FLAGLEV#=0;

    304  3 000104   000000 236003                    LDQ     0,DU
         3 000105   000065 552010 2                  STBQ    FPT_ERRMSG+23,'10'O
         3 000106   000113 710000 3                  TRA     s:307

      710      305    1        ELSE
      711      306    1             FPT_ERRMSG.V.FLAGLEV#=FLGLEV;

    306  3 000107   200011 470500                    LDP0    @FLGLEV,,AUTO
         3 000110   000000 236100                    LDQ     0,,PR0
         3 000111   000011 736000                    QLS     9
         3 000112   000065 552010 2                  STBQ    FPT_ERRMSG+23,'10'O

      712      307    1        IF ADDR(DCB#)~=ADDR(NIL)

    307  3 000113   200004 236100                    LDQ     @DCB#,,AUTO
         3 000114   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:128  
         3 000115   000122 600000 3                  TZE     s:311

      713      308    1        THEN
      714      309    1             FPT_ERRMSG.V.DCB#=DCB#;

    309  3 000116   200004 470500                    LDP0    @DCB#,,AUTO
         3 000117   000000 721100                    LXL1    0,,PR0
         3 000120   000064 741000 2                  STX1    FPT_ERRMSG+22
         3 000121   000124 710000 3                  TRA     s:312

      715      310    1        ELSE
      716      311    1             FPT_ERRMSG.V.DCB#=0;

    311  3 000122   000000 221003                    LDX1    0,DU
         3 000123   000064 741000 2                  STX1    FPT_ERRMSG+22

      717      312    1        CALL M$ERRMSG(FPT_ERRMSG) ALTRET(ALT);

    312  3 000124   000036 630400 2                  EPPR0   FPT_ERRMSG
         3 000125   420000 713400                    CLIMB   alt,+8192
         3 000126   405000 401760                    pmme    nvectors=11
         3 000127   000177 702000 3                  TSX2    ALT

      718      313    1        IF FPT_ERRMSG.V.SUBMESS#

    313  3 000130   000066 430000 2                  FSZN    FPT_ERRMSG+24
         3 000131   000134 605000 3                  TPL     s:316

      719      314    1        THEN
      720      315    1             ERRSAVE=OUX_ERRMSG.CODEUSED;

    315  3 000132   000073 236000 2                  LDQ     OUX_ERRMSG+3
         3 000133   000152 756000 2                  STQ     ERRSAVE

      721      316    1        RETURN;

    316  3 000134   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:129  

      722      317        %EJECT;
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:130  
      723      318    1   OUX$SETERRMSG: ENTRY(CODE) ALTRET;

    318  3 000135   000000 700200 xent  OUX$SETERRM* TSX0  ! X66_AUTO_N
         3 000136   000016 000007                    ZERO    14,7

      724      319    1        FID$=ADDR(CODE);

    319  3 000137   200003 236100                    LDQ     @CODE,,AUTO
         3 000140   200012 756100                    STQ     FID$,,AUTO

      725      320    1        IF FID$=ADDR(NIL)

    320  3 000141   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000142   000152 601000 3                  TNZ     s:329

      726      321    1        THEN
      727      322    2        DO;

      728      323    2             FPT_ERRMSG.FILEACCT_=VECTOR(NIL);

    323  3 000143   000002 237000 4                  LDAQ    2
         3 000144   000046 757000 2                  STAQ    FPT_ERRMSG+8

      729      324    2             FPT_ERRMSG.FILENAME_=VECTOR(NIL);

    324  3 000145   000002 237000 4                  LDAQ    2
         3 000146   000044 757000 2                  STAQ    FPT_ERRMSG+6

      730      325    2             FPT_ERRMSG.FILEPASS_=VECTOR(NIL);

    325  3 000147   000002 237000 4                  LDAQ    2
         3 000150   000050 757000 2                  STAQ    FPT_ERRMSG+10

      731      326    2           END;

    326  3 000151   000176 710000 3                  TRA     s:335

PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:131  
      732      327    1        ELSE
      733      328    2        DO;

      734      329    2             FPT_FID.TEXTFID_=VECTOR(FID.C);

    329  3 000152   200012 470500                    LDP0    FID$,,AUTO
         3 000153   000100 101500                    MRL     fill='000'O
         3 000154   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000155   200014 000002                    ADSC9   FID$+2,,AUTO             cn=0,n=2
         3 000156   200014 220100                    LDX0    FID$+2,,AUTO
         3 000157   000000 635010                    EAA     0,X0
         3 000160   000002 771000                    ARL     2
         3 000161   000140 135007                    SBLA    96,DL
         3 000162   200000 036007                    ADLQ    65536,DL
         3 000163   000076 757000 2                  STAQ    FPT_FID+2

      735      330    2             CALL M$FID(FPT_FID) ALTRET(ALT);

    330  3 000164   000074 630400 2                  EPPR0   FPT_FID
         3 000165   420001 713400                    CLIMB   alt,+8193
         3 000166   404400 401760                    pmme    nvectors=10
         3 000167   000177 702000 3                  TSX2    ALT

      736      331    2             FPT_ERRMSG.FILEACCT_=VECTOR(FILEACCT);

    331  3 000170   000004 237000 4                  LDAQ    4
         3 000171   000046 757000 2                  STAQ    FPT_ERRMSG+8

      737      332    2             FPT_ERRMSG.FILENAME_=VECTOR(FILENAME);

    332  3 000172   000006 237000 4                  LDAQ    6
         3 000173   000044 757000 2                  STAQ    FPT_ERRMSG+6

      738      333    2             FPT_ERRMSG.FILEPASS_=VECTOR(FILEPASS);

    333  3 000174   000010 237000 4                  LDAQ    8
         3 000175   000050 757000 2                  STAQ    FPT_ERRMSG+10
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:132  

      739      334    2           END;

      740      335    1        RETURN;

    335  3 000176   000000 702200 xent               TSX2  ! X66_ARET

      741      336    1   ALT: ALTRETURN;

    336  3 000177   000000 702200 xent  ALT          TSX2  ! X66_AALT
      742      337    1   END OUX$ERRMSG;
      743      338        %EOD;

PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:133  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$ERRMSG.
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:134  

 **** Variables and constants ****

  ****  Section 002  Data  OUX$ERRMSG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(120)   r     1 ERRBUF                   152-0-0/b STRC        r     1 ERRSAVE
   136-0-0/c STRC(72)    r     1 FILEACCT                 140-0-0/c STRC(288)   r     1 FILENAME
   150-0-0/c STRC(72)    r     1 FILEPASS                  36-0-0/d STRC(936)   r     1 FPT_ERRMSG
    74-0-0/d STRC(864)   r     1 FPT_FID                   70-0-0/d STRC(144)   r     1 OUX_ERRMSG
   124-0-0/d STRC(324)   r     1 VLR_FID

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CODE                      4-0-0/w PTR         r     1 @DCB#
     6-0-0/w PTR         r     1 @F1                        7-0-0/w PTR         r     1 @F2
    10-0-0/w PTR         r     1 @F3                       11-0-0/w PTR         r     1 @FLGLEV
     5-0-0/w PTR         r     1 @OUTDCB                   *0-0-0/c BIT         r     1 CODE
    *0-0-0/w SBIN        r     1 DCB#                      *0-0-0/c BIT (72)    r     1 F1
    *0-0-0/c BIT (72)    r     1 F2                        *0-0-0/c BIT (72)    r     1 F3
    12-0-0/w PTR         r     1 FID$                      *0-0-0/w SBIN        r     1 FLGLEV
    *0-0-0/w UBIN        r     1 OUTDCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 FID                        0-0-0N  NULL        r     1 M$DO


   Procedure OUX$ERRMSG requires 128 words for executable code.
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:135  
   Procedure OUX$ERRMSG requires 14 words of local(AUTO) storage.
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:136  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:137  
          MINI XREF LISTING

ALT
       336**LABEL     312--CALLALT   330--CALLALT
CODE
        20**DCL        18--PROC      267--IF        278>>ASSIGN    318--ENTRY     319--ASSIGN
DCB#
        25**DCL        18--PROC      307--IF        309>>ASSIGN
ERRBUF
       114**DCL       128--DCLINIT
ERRSAVE
       261**DCL       127--DCLINIT   278<<ASSIGN    315<<ASSIGN
ERRSAVE.SEV
       265**DCL       270>>IF        273<<ASSIGN    273>>ASSIGN    279<<ASSIGN
F1
        27**DCL        18--PROC      287--IF        291>>ASSIGN
F2
        28**DCL        18--PROC      292--IF        296>>ASSIGN
F3
        29**DCL        18--PROC      297--IF        301>>ASSIGN
FID.C
        24**DCL       329--ASSIGN
FID.L
        23**DCL        24--IMP-SIZ   329>>ASSIGN
FID$
        21**DCL        22--IMP-PTR   319<<ASSIGN    320>>IF        329>>ASSIGN    329>>ASSIGN
FILEACCT
       219**DCL       178--DCLINIT   331--ASSIGN
FILENAME
       246**DCL       178--DCLINIT   332--ASSIGN
FILEPASS
       259**DCL       179--DCLINIT   333--ASSIGN
FLGLEV
        30**DCL        18--PROC      302--IF        306>>ASSIGN
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:138  
FPT_ERRMSG
       127**DCL       312<>CALL
FPT_ERRMSG.FIELD1_
       129**DCL       289<<ASSIGN    291<<ASSIGN
FPT_ERRMSG.FIELD2_
       130**DCL       294<<ASSIGN    296<<ASSIGN
FPT_ERRMSG.FIELD3_
       130**DCL       299<<ASSIGN    301<<ASSIGN
FPT_ERRMSG.FILEACCT_
       128**DCL       323<<ASSIGN    331<<ASSIGN
FPT_ERRMSG.FILENAME_
       128**DCL       324<<ASSIGN    332<<ASSIGN
FPT_ERRMSG.FILEPASS_
       129**DCL       325<<ASSIGN    333<<ASSIGN
FPT_ERRMSG.V
       131**DCL       127--DCLINIT
FPT_ERRMSG.V.DCB#
       131**DCL       309<<ASSIGN    311<<ASSIGN
FPT_ERRMSG.V.FLAGLEV#
       133**DCL       304<<ASSIGN    306<<ASSIGN
FPT_ERRMSG.V.OUTDCB1#
       132**DCL       284<<ASSIGN    286<<ASSIGN
FPT_ERRMSG.V.SUBMESS#
       137**DCL       274<<ASSIGN    280<<ASSIGN    313>>IF
FPT_FID
       177**DCL       330<>CALL
FPT_FID.TEXTFID_
       177**DCL       329<<ASSIGN
FPT_FID.V
       181**DCL       177--DCLINIT
M$DO
        32**DCL       284>>ASSIGN
M$ERRMSG
       105**DCL-ENT   312--CALL
M$FID
       105**DCL-ENT   330--CALL
PL6.E3A0      #004=OUX$ERRMSG File=OUX$GETCMD.:E05TSI                            WED 07/30/97 04:17 Page:139  
OUTDCB
        26**DCL        18--PROC      282--IF        286>>ASSIGN
OUX_ERRMSG
       154**DCL       131--DCLINIT
OUX_ERRMSG.CODEUSED
       162**DCL       315>>ASSIGN
VLR_FID
       200**DCL       180--DCLINIT   180--DCLINIT   181--DCLINIT

PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:140  
      744        1        /*T***********************************************************/
      745        2        /*T*                                                         */
      746        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      747        4        /*T*                                                         */
      748        5        /*T***********************************************************/
      749        6        OUX$CLOSE_DCBS: PROC;
      750        7        %SET LISTSUB='1'B;
      751        8        /*
      752        9          ###  #   # #   #   #    ###  #      ###   ###  ##### ####   ###  ####   ###
      753       10         # # # #   # #   #  ###  #   # #     # # # #   # #     #   # #   # #   # #   #
      754       11         # # # #   #  # #  # #   #     #     # # # #     #     #   # #     #   # #
      755       12         #  ## #   #   #    ###  #     #     #  ##  ###  ####  #   # #     ####   ###
      756       13         #   # #   #  # #    # # #     #     #   #     # #     #   # #     #   #     #
      757       14         #   # #   # #   #  ###  #   # #     #   # #   # #     #   # #   # #   # #   #
      758       15          ###   ###  #   #   #    ###  #####  ###   ###  ##### ####   ###  ####   ###
      759       16                                                                          */
      760       17        /**/
      761       18        %INCLUDE CP_6;
      762       99        %INCLUDE CP_6_SUBS;
      763      639        %FPT_CLOSE (DISP=SAVE);
      764      681        %INCLUDE B$ROSEG;
      765      744    1   DCL B$ROS$ PTR SYMREF;
      766      745        %INCLUDE F$DCB;
      767      794        /**/
      768      795        /* BEGIN PROCEDURE */
      769      796        /**/
      770      797    2        DO FPT_CLOSE.V.DCB#=%M$1STDCB# TO B$ROS$->B$ROSEG.NUMDCBS;
      771      798    2             IF DCBADDR(FPT_CLOSE.V.DCB#)~=ADDR(NIL)
      772      799    2             THEN
      773      800    2                  IF DCBADDR(FPT_CLOSE.V.DCB#)->F$DCB.FCD
      774      801    2                  THEN
      775      802    2                       CALL M$CLOSE(FPT_CLOSE) ALTRET(NXT_DCB);
      776      803    2   NXT_DCB: END;
      777      804    1        RETURN;
      778      805    1   END OUX$CLOSE_DCBS;

PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:141  
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$CLOSE_DCBS.

   Procedure OUX$CLOSE_DCBS requires 27 words for executable code.
   Procedure OUX$CLOSE_DCBS requires 4 words of local(AUTO) storage.

    No errors detected in file OUX$GETCMD.:E05TSI    .

PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:142  

 Object Unit name= OUX$CLOSE_DCBS                             File name= OUX$GETCMD.:E05TOU
 UTS= JUL 30 '97 04:18:03.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    30     36  OUX$CLOSE_DCBS
    2   Proc  even  none    27     33  OUX$CLOSE_DCBS
    3  RoData even  none     1      1  OUX$CLOSE_DCBS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  OUX$CLOSE_DCBS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$ROS$                                B_VECTNIL
PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:143  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:144  


      744        1        /*T***********************************************************/
      745        2        /*T*                                                         */
      746        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      747        4        /*T*                                                         */
      748        5        /*T***********************************************************/
      749        6        OUX$CLOSE_DCBS: PROC;

      6  2 000000   000000 700200 xent  OUX$CLOSE_D* TSX0  ! X66_AUTO_0
         2 000001   000004 000000                    ZERO    4,0

      750        7        %SET LISTSUB='1'B;
      751        8        /*
      752        9          ###  #   # #   #   #    ###  #      ###   ###  ##### ####   ###  ####   ###
      753       10         # # # #   # #   #  ###  #   # #     # # # #   # #     #   # #   # #   # #   #
      754       11         # # # #   #  # #  # #   #     #     # # # #     #     #   # #     #   # #
      755       12         #  ## #   #   #    ###  #     #     #  ##  ###  ####  #   # #     ####   ###
      756       13         #   # #   #  # #    # # #     #     #   #     # #     #   # #     #   #     #
      757       14         #   # #   # #   #  ###  #   # #     #   # #   # #     #   # #   # #   # #   #
      758       15          ###   ###  #   #   #    ###  #####  ###   ###  ##### ####   ###  ####   ###
      759       16                                                                          */
      760       17        /**/
      761       18        %INCLUDE CP_6;
      762       99        %INCLUDE CP_6_SUBS;
      763      639        %FPT_CLOSE (DISP=SAVE);
      764      681        %INCLUDE B$ROSEG;
      765      744    1   DCL B$ROS$ PTR SYMREF;
      766      745        %INCLUDE F$DCB;
      767      794        /**/
      768      795        /* BEGIN PROCEDURE */
      769      796        /**/
      770      797    2        DO FPT_CLOSE.V.DCB#=%M$1STDCB# TO B$ROS$->B$ROSEG.NUMDCBS;

    797  2 000002   000012 220003                    LDX0    10,DU
         2 000003   000032 740000 1                  STX0    FPT_CLOSE+26
         2 000004   000026 710000 2                  TRA     NXT_DCB+3

PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:145  
      771      798    2             IF DCBADDR(FPT_CLOSE.V.DCB#)~=ADDR(NIL)

    798  2 000005   000000 470400 3                  LDP0    0
         2 000006   000000 471500                    LDP1    0,,PR0
         2 000007   000032 220000 1                  LDX0    FPT_CLOSE+26
         2 000010   100000 236110                    LDQ     0,X0,PR1
         2 000011   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000012   000023 600000 2                  TZE     NXT_DCB

      772      799    2             THEN
      773      800    2                  IF DCBADDR(FPT_CLOSE.V.DCB#)->F$DCB.FCD

    800  2 000013   100000 473510                    LDP3    0,X0,PR1
         2 000014   300031 236100                    LDQ     25,,PR3
         2 000015   020000 316007                    CANQ    8192,DL
         2 000016   000023 600000 2                  TZE     NXT_DCB

      774      801    2                  THEN
      775      802    2                       CALL M$CLOSE(FPT_CLOSE) ALTRET(NXT_DCB);

    802  2 000017   000000 630400 1                  EPPR0   FPT_CLOSE
         2 000020   450001 713400                    CLIMB   alt,close
         2 000021   406000 401760                    pmme    nvectors=13
         2 000022   000023 702000 2                  TSX2    NXT_DCB

      776      803    2   NXT_DCB: END;

    803  2 000023   000032 220000 1     NXT_DCB      LDX0    FPT_CLOSE+26
         2 000024   000001 621010                    EAX1    1,X0
         2 000025   000032 741000 1                  STX1    FPT_CLOSE+26
         2 000026   000000 470400 xsym               LDP0    B$ROS$
         2 000027   000002 220100                    LDX0    2,,PR0
         2 000030   000032 100000 1                  CMPX0   FPT_CLOSE+26
         2 000031   000005 603000 2                  TRC     s:798

      777      804    1        RETURN;

PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:146  
    804  2 000032   000000 702200 xent               TSX2  ! X66_ARET
      778      805    1   END OUX$CLOSE_DCBS;

PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:147  
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OUX$CLOSE_DCBS.
PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:148  

 **** Variables and constants ****

  ****  Section 001  Data  OUX$CLOSE_DCBS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 FPT_CLOSE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$ROS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(3024)  r     1 B$ROSEG                    0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure OUX$CLOSE_DCBS requires 27 words for executable code.
   Procedure OUX$CLOSE_DCBS requires 4 words of local(AUTO) storage.

    No errors detected in file OUX$GETCMD.:E05TSI    .
PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:149  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:150  
          MINI XREF LISTING

B$ROS$
       744**DCL       797>>DOINDEX
B$ROSEG.NUMDCBS
       694**DCL       797>>DOINDEX
F$DCB.ACTPOS
       771**DCL       771--REDEF
F$DCB.ARS
       746**DCL       746--REDEF
F$DCB.ATTR
       764**DCL       765--REDEF
F$DCB.BORROW
       779**DCL       779--REDEF     779--REDEF     779--REDEF
F$DCB.DCBNAME.L
       793**DCL       793--IMP-SIZ
F$DCB.EOMCHAR
       750**DCL       750--REDEF
F$DCB.FCD
       759**DCL       800>>IF
F$DCB.FLDID
       774**DCL       774--REDEF
F$DCB.FORM$
       768**DCL       768--REDEF
F$DCB.FSECT
       784**DCL       784--REDEF
F$DCB.FSN
       761**DCL       761--REDEF     761--REDEF     762--REDEF
F$DCB.HEADER$
       767**DCL       767--REDEF
F$DCB.IXTNSIZE
       765**DCL       765--REDEF
F$DCB.LASTSTA$
       755**DCL       755--REDEF
PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:151  
F$DCB.LVL
       780**DCL       780--REDEF
F$DCB.NAME.C
       755**DCL       755--REDEF
F$DCB.NOEOF
       776**DCL       776--REDEF
F$DCB.NRECS
       766**DCL       766--REDEF
F$DCB.NRECX
       785**DCL       785--REDEF
F$DCB.OHDR
       777**DCL       777--REDEF
F$DCB.ORG
       760**DCL       760--REDEF
F$DCB.PRECNO
       783**DCL       783--REDEF
F$DCB.RCSZ
       788**DCL       788--REDEF
F$DCB.RES
       756**DCL       756--REDEF
F$DCB.SETX
       768**DCL       768--REDEF
F$DCB.TAB$
       767**DCL       768--REDEF
F$DCB.TDA
       782**DCL       782--REDEF
F$DCB.WSN
       757**DCL       757--REDEF
FPT_CLOSE
       662**DCL       802<>CALL
FPT_CLOSE.SN_
       662**DCL       662--REDEF
FPT_CLOSE.UTL_
       663**DCL       663--REDEF
FPT_CLOSE.V
       667**DCL       662--DCLINIT
PL6.E3A0      #005=OUX$CLOSE_DCBS File=OUX$GETCMD.:E05TSI                        WED 07/30/97 04:18 Page:152  
FPT_CLOSE.V.DCB#
       668**DCL       797<<DOINDEX   798--IF        800--IF
FPT_CLOSE.V.EXPIRE#
       677**DCL       677--REDEF
FPT_CLOSE.V.TYPE#
       675**DCL       675--REDEF
FPT_CLOSE.V.XTNSIZE#
       672**DCL       672--REDEF     674--REDEF
M$CLOSE
        27**DCL-ENT   802--CALL
NXT_DCB
       803**LABEL     802--CALLALT
