VERSION E05

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:1    
        1        1        /*M* KVI$INPCHR VDH MAIN INPUT CHARACTER PROCESSING ROUTINE                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8
        9        9        KVI$INPCHR: PROC;
       10       10
       11       11 S      %INCLUDE KV$GLB;
       12       12 S      %INCLUDE KV$GLBCTX;
       13       13        %INCLUDE KV$INPFNC;
       14      572 S      %INCLUDE KV$INT;
       15      573 S      %INCLUDE KV$USR;
       16      574 S      %INCLUDE KV$VDH;
       17      575 S      %INCLUDE KV$VDO;
       18      576        %INCLUDE KV_GLBASM_E;
       19      594 S      %INCLUDE KV_GLBCNS_E;
       20      595        %INCLUDE KV_ASCCHR_E;
       21      732        %INCLUDE KV_INT;
       22      771        %INCLUDE KV_SCODE_C;
       23      792        %INCLUDE KH_SCREECH_M;
       24      803        %INCLUDE KL_MACRO_C;
       25     4155        %INCLUDE KL_AFCN_C;
       26     4256        %INCLUDE K_ID_E;
       27     4306        %INCLUDE LCP_6;
       28     4497
       29     4498        %K#LYRID_E;
       30     4505        %K#ENTID_E;
       31     4524        %KV_CMPCOD_E;
       32     4538        %KV_DATCTRCHRTYP_E;
       33     4544        %KV_INPFNC_E;
       34     4558        %KV_INPOPRX_E;
       35     4570        %KV_INPUNT_E;
       36     4575        %KV_TRNTKNTYP_E;
       37     4581        %KV_USR_EVT_ID_E;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:2    
       38     4601        %KV_PRTTYP_E;
       39     4608        %KV#VD_ORG_E;
       40     4616
       41     4617        %KV$TRNTBL(STCLASS="BASED(TRNTBL$)");   /*  VDH TRANSLATE ITEM DEFINITIONS    */
       42     4675        %KV$SHRBFR(LAST=",");              /*  VDH MISCELLANEOUS BUFFER DESCRIPTION   */
       43     4707    1          2 BITT(0:0) BIT(1) UNAL;
       44     4708        %KV$REDBFR(STCLASS="BASED(REDBFR$)");   /*  VDH INPUT BUFFER DESCRIPTION      */
       45     4711    1   DCL REDBFR_CHR CHAR(255) BASED(REDBFR$) ALIGNED;
       46     4712    1   DCL 1 REDBFR BASED(REDBFR$) ALIGNED,2 BIN(0:0) UBIN(8) UNAL;
       47     4713        %KV$MRD;                                /*  VDH Master real device            */
       48     4760        %KV$MVD (STCLASS="BASED(MVD$)");        /*  VDH Master virtual device         */
       49     4804        %EQU KV_MVD=CHARTEXT('KV$MVD');
       50     4805        %KV$PTR;                                /*  VDH Pointers, status              */
       51     4848        %KV$SRD;                                /*  VDH Subordinate real device       */
       52     5123        %KV$SSN (STCLASS="BASED(SSN$)");        /*  VDH Session                       */
       53     5202        %EQU KV_SSN=CHARTEXT('KV$SSN');
       54     5203        %KV$STT;                                /*  VDH Statistics                    */
       55     5597        %KV$STR;                                /*  VDH Stream                        */
       56     5684        %KV$USRPRM;                             /*  VDH-user parameters               */
       57     5735        %KV$VDH_PST;                            /*  VDH-position                      */
       58     5809        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       59     5880        %KV$INPFNCTBL(STCLASS="BASED(INPOPR.INPFNCTBL$)");
       60     5964        /* Redefs of INPFNCTBL for using offsets conveniently */
       61     5965    1   DCL KV$INPFNCCHR BASED(INPOPR.INPFNCTBL$) CHAR(255);
       62     5966    1   DCL KV$INPFNCOPRX(0:0) BASED(INPOPR.INPFNCTBL$) SBIN;
       63     5967        %KV$PRMINPTRN;
       64     5976        %KV$SCNINPTRN;
       65     5985        %KV$PRMOTPTRN;
       66     5995
       67     5996        /* This based structure is used to access bit arrays. */
       68     5997    1   DCL 1 Y$BIT BASED ALIGNED, 2 T(0:0) BIT(1) UNAL;
       69     5998
       70     5999        /* Structure of a token. */
       71     6000    1   DCL 1 TKN BASED ALIGNED,
       72     6001    1          2 TYP UBIN(10) UNAL,
       73     6002    1          2 TKN UBIN(6) UNAL;
       74     6003
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:3    
       75     6004    1   DCL KVF$PST ENTRY(1);
       76     6005    1   DCL KVI$EDTX_TO_VRTCLM ENTRY(1);
       77     6006    1   DCL KVI$INTINPOPR ENTRY(1);
       78     6007    1   DCL KVI$INTINPOPRX ENTRY(1);
       79     6008    1   DCL KVI$RE_DSPINP ENTRY;
       80     6009    1   DCL KVI$SCPVRTCLMLOWX ENTRY;
       81     6010    1   DCL KVI$SHFDSPPST ENTRY(1);
       82     6011    1   DCL KVI$SHFTO_DFL ENTRY;
       83     6012    1   DCL KVI$ACTRED ENTRY(1);
       84     6013    1   DCL KVO$OTP1_VRT ENTRY(1);
       85     6014    1   DCL KVO$OTP1_HDN ENTRY(1);
       86     6015    1   DCL KVO$PST ENTRY(1);
       87     6016    1   DCL KVS$GETREDBFR ENTRY(1) ALTRET;
       88     6017    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       89     6018    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       90     6019    1   DCL KHD$SCREECH ENTRY(1);
       91     6020
       92     6021        %KV$VDH_DAT (NAME = KV_VDH_DAT_NRM_NO_ACTCHR, STCLASS = SYMREF READONLY);
       93     6101
       94     6102        %KV$VDH_DAT (NAME = KV_VDH_DAT_NRM_ACTCHR, STCLASS = SYMREF READONLY);
       95     6182
       96     6183        %KV$VDH_PST (NAME=KV_VDH_PST_SPCFRM, STCLASS=SYMREF);
       97     6257        %KV$VDH_PST (NAME=KV_VDH_PST_SPC_VRT, STCLASS=SYMREF);
       98     6331        %KV$VDH_PST (NAME=KV_VDH_PST_VRT, STCLASS=SYMREF);
       99     6405        %KV$VDH_PST (NAME=KV_VDH_PST_WHTSPC, STCLASS=SYMREF);
      100     6479        %KV$VDH_PST (NAME=KV_VDH_PST_0_VRT, STCLASS=SYMREF);
      101     6553
      102     6554        %KV_NONPSTCHR;
      103     6570        %VLP_SCODE (FPTN=KVI_PRMTRN,FCG=KV,MID=I,ERR#=%S$KV_PRMTRN,STCLASS=CONSTANT);
      104     6631        %VLP_SCODE (FPTN=KVI_SCNTRN,FCG=KV,MID=I,ERR#=%S$KV_SCNTRN,STCLASS=CONSTANT);
      105     6692        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:4    
      106     6693        /* Indexed by a character, yields a bit saying the character
      107     6694           has any parity. (this table is here to avoid decisions.)                   */
      108     6695
      109     6696    1   DCL PRT_NON(0:15) BIT(16) CONSTANT INIT( 'FFFF'X*0);
      110     6697
      111     6698        /* Indexed by a character, yields a bit saying the character
      112     6699           has odd parity.                                                            */
      113     6700
      114     6701    1   DCL PRT_ODD(0:15) BIT(16) CONSTANT INIT(
      115     6702    1   '6996'X,'9669'X,'9669'X,'6996'X,'9669'X,'6996'X,'6996'X,'9669'X,
      116     6703    1   '9669'X,'6996'X,'6996'X,'9669'X,'6996'X,'9669'X,'9669'X,'6996'X);
      117     6704
      118     6705        /* Indexed by a character, yields a bit saying the character
      119     6706           has even parity.                                                           */
      120     6707
      121     6708    1   DCL PRT_EVN(0:15) BIT(16) CONSTANT INIT(
      122     6709    1   '9669'X,'6996'X,'6996'X,'9669'X,'6996'X,'9669'X,'9669'X,'6996'X,
      123     6710    1   '6996'X,'9669'X,'9669'X,'6996'X,'9669'X,'6996'X,'6996'X,'9669'X);
      124     6711
      125     6712        /* Indexed by a character, yields a bit saying the character
      126     6713           has 1 (always set) parity.                                                 */
      127     6714
      128     6715    1   DCL PRT_1(0:15) BIT(16) CONSTANT INIT( '0'X*8, 'FFFF'X*8);
      129     6716
      130     6717        /* Indexed by a character, yields a bit saying the character
      131     6718           has 0 (always reset) parity.                                               */
      132     6719
      133     6720    1   DCL PRT_0(0:15) BIT(16) CONSTANT INIT( 'FFFF'X*8, '0'X*8);
      134     6721
      135     6722        /* Indexed by KV$VDI.PRTTYP, yields a pointer to one of the
      136     6723           parity bit tables.                                                         */
      137     6724
      138     6725    1   DCL PRT_$(0:%KV_PRTTYP_ZERO) PTR ALIGNED CONSTANT
      139     6726    1    INIT( ADDR(PRT_NON), ADDR(PRT_ODD), ADDR(PRT_EVN), ADDR(PRT_1), ADDR(PRT_0));
      140     6727        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:5    
      141     6728        %KV_INPOPR (NAME=KV_X364_FNC, TYP=TXT, RED=, DSP=TYPAHD, LAST=YES,
      142     6729         TXT="%CONCAT (BITASC (ASCIIESC), '[A')");
      143     6767        %KV_INPFNCKEY_E;
      144     7029    1   DCL KV_X364_FNCSU(0:19) UBIN BYTE UNAL CONSTANT INIT(
      145     7030    1   %KV_INPFNCKEY_UPARROW, %KV_INPFNCKEY_DNARROW,
      146     7031    1   %KV_INPFNCKEY_RTARROW, %KV_INPFNCKEY_LTARROW,
      147     7032    1   %KV_INPFNCKEY_F1, %KV_INPFNCKEY_F2, %KV_INPFNCKEY_F3, %KV_INPFNCKEY_F4,
      148     7033    1   %KV_INPFNCKEY_SF0, %KV_INPFNCKEY_SF1, %KV_INPFNCKEY_SF2, %KV_INPFNCKEY_SF3,
      149     7034    1   %KV_INPFNCKEY_SF4, %KV_INPFNCKEY_SF5, %KV_INPFNCKEY_SF6, %KV_INPFNCKEY_SF7,
      150     7035    1   %KV_INPFNCKEY_SF8, %KV_INPFNCKEY_SF9*0);
      151     7036    1   DCL KV_X364_FNCS REDEF KV_X364_FNCSU CHAR(20);
      152     7037    1   DCL KV_X364_FNCIDS CHAR(20) CONSTANT INIT('ABCDPQRSpqrstuvwxyzz');
      153     7038    1   DCL X364_CHARS CHAR(8) BASED(INPOPR.INPFNCTBL$);
      154     7039        %EQU OPR_TXT = CHARTEXT('ADDR(KV@VDH_DAT)->KV$INPOPR_TXT');
      155     7040        %KV$INPOPR;
      156     7139        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:6    
      157     7140        /* Auto variables */
      158     7141    1   DCL REDBFR$ PTR;
      159     7142    1   DCL INPFNCSST$ REDEF REDBFR$ PTR;
      160     7143
      161     7144    1   DCL TRNTBL$ PTR;
      162     7145    1   DCL INPFNCUSR$ REDEF TRNTBL$ PTR;
      163     7146    1   DCL 1 SHF REDEF TRNTBL$,
      164     7147        /* Some items for the shift routine */
      165     7148    1          2 OFFSET SBIN,
      166     7149    1          2 CNT SBIN;
      167     7150    1   DCL SSN$ PTR;
      168     7151    1   DCL MVD$ PTR;
      169     7152    1   DCL BFREDTX SBIN;
      170     7153    1   DCL FNCLVL REDEF BFREDTX SBIN;
      171     7154    1   DCL FNCLVLU REDEF BFREDTX UBIN;
      172     7155        /* Group that gets clear'd upon entry                                         */
      173     7156
      174     7157    1   DCL 1 CLR,
      175     7158
      176     7159        /* ESC. Copy of the proper half of KV$PTR.INPCNDPND.ESC */
      177     7160    1          2 ESC(0:1) BIT(1),
      178     7161
      179     7162        /* Array of SPCCHR flags, one per table. */
      180     7163    1          2 SPCCHR,
      181     7164
      182     7165        /* Do profile special character processing */
      183     7166    1             3 PRF BIT(1),
      184     7167
      185     7168        /* Do system special character processing.                                    */
      186     7169    1             3 SST BIT(1),
      187     7170
      188     7171        /* Do user (IMP) special character processing.                                    */
      189     7172    1             3 USR BIT(1),
      190     7173
      191     7174        /* Shift pass. indicates we're trying to identify an escape
      192     7175           identifier, and we've shifted the character from lower case to
      193     7176           upper case after failing to get a match in lower case.                     */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:7    
      194     7177    1          2 SHFPAS BIT(1),
      195     7178
      196     7179        /* System function table pass. Indicates we're using the system table,
      197     7180           not the user one. */
      198     7181    1          2 SSTPAS BIT(1),
      199     7182
      200     7183        /* User table pass. Indicates that we're using the user table. */
      201     7184    1          2 USRPAS BIT(1),
      202     7185
      203     7186        /* Immediate phase processing */
      204     7187    1          2 IMD BIT(1),
      205     7188        %EQU CLR_IMD = '008'X;             /* For efficient initialization of CLR     */
      206     7189
      207     7190        /* We're (still) echoing. */
      208     7191    1          2 ECH BIT(1),
      209     7192
      210     7193        /* The character is already displayed (perhaps erroneously) */
      211     7194
      212     7195    1          2 LCLECH BIT(1),
      213     7196
      214     7197        /* The level(s) pending in ESC may have a 2-char intro, and it's not in yet. */
      215     7198    1          2 INT2 BIT(1),
      216     7199
      217     7200        /* Only one level of re-entrancy for the readonly no-no function */
      218     7201    1          2 REDONL BIT(1),
      219     7202        %EQU CLR_REDONL = '0008'X;
      220     7203
      221     7204    1          2 * BIT(3),                      /* spare bits                         */
      222     7205
      223     7206        /* Item description for the input operator index in local.                    */
      224     7207    1          2 INPOPRX SBIN,
      225     7208
      226     7209        /* Redefed for the buffering phase, to leave space to do shifts. */
      227     7210    1          2 CHR REDEF INPOPRX SBIN;
      228     7211
      229     7212        /* NOTE THAT THE NEXT LINE REQUIRES THAT THE STRUCTURES REFERRED TO
      230     7213           THEREIN BE ALLOCATED IN THE PROPER ORDER, AND NOT REFERENCED IN
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:8    
      231     7214           THE BUFFER-READ-CHAR CODE.  THE SPACE IS USED BY SHFRHT! */
      232     7215        %EQU SHF_SIZ=CHARTEXT(
      233     7216        '(SIZEC(USR_EXTINPTRN)+SIZEC(USR_EVT)+SIZEC(INPOPR)+SIZEC(KV@VDH_DAT))');
      234     7217        %EQU SHF_CHR=CHARTEXT('ADDR(USR_EXTINPTRN)->REDBFR_CHR');
      235     7218        %KV$USR_EXTINPTRN (NAME=USR_EXTINPTRN, STCLASS= "");
      236     7254        %KV$VDH_INTINPOPR (NAME=INPOPR, STCLASS= );
      237     7290        %EQU IX=CHARTEXT('INPOPR.INPOPRX');
      238     7291        %KV$VDH_DAT (NAME = KV@VDH_DAT, STCLASS = AUTO);
      239     7371        %KV$USR_EVT (NAME=USR_EVT, STCLASS=);
      240     7406
      241     7407        %KV$USR_EXTINPTRN (NAME=KV_USR_EXTINPTRN, STCLASS=SYMREF);
      242     7443        %KV$USR_EVT (NAME=KV_USR_EVT, STCLASS=SYMREF);
      243     7478
      244     7479        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:9    
      245     7480        /* Process an input character, doing translation, special
      246     7481           character detection, special character sequence processing,
      247     7482           echoing, input message assembly, etc.                                      */
      248     7483
      249     7484    1      CLR = %CLR_IMD;
      250     7485    1      GOTO COMMON_IMD;
      251     7486    1   KVI$INPCHR_TYPAHD: ENTRY;
      252     7487        /* Same as INPCHR, but no IMmeDiate functions */
      253     7488
      254     7489    1      CLR = '0'B;
      255     7490    1   COMMON_IMD:;
      256     7491    1      KV$PTR.USRINPFNCINH = '0'B;
      257     7492    1      SSN$ = KV$PTR.SSN$;
      258     7493    1      MVD$ = KV$PTR.MVD$;
      259     7494    1      INPOPR.ORGCHR = ASCBIN(%KV_SSN.INPCHR);
      260     7495    1      CLR.ECH = %KV_SSN.INPECH;
      261     7496    1      TRNTBL$ = %KV_MVD.TRNTBL$;
      262     7497    1      INPFNCSST$ = %KV_MVD.SSTINPFNCTBL$;
      263     7498    1      INPOPR.INPFNCTBL$ = INPFNCSST$;
      264     7499        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:10   
      265     7500    1      IF %KV_VDI.PRTCHK
      266     7501    2        AND NOT PRT_$(%KV_VDI.PRTTYP)->Y$BIT.T(INPOPR.ORGCHR) THEN DO;
      267     7502
      268     7503        /* This character has incorrect parity, unless it is part of
      269     7504           an input control string (%KV_INPCTRSTR...) or we are to
      270     7505           interpret it as transparent.                                               */
      271     7506
      272     7507    2         IF INPOPR.ORGCHR~=ASCBIN(KV$TRNTBL.INPCTRSTRINTCHR)
      273     7508    3           AND NOT KV$PTR.INPCNDPND.CTRSTR THEN DO;
      274     7509
      275     7510        /* This character isn't part of an input control string.                      */
      276     7511
      277     7512    4            IF %KV_VDI.USRRQSDAT.RED THEN DO;
      278     7513
      279     7514        /* We're doing read processing. we should report the parity
      280     7515           error now. we wait until the read phase in case we're not
      281     7516           in transparent mode on the immediate phase pass but are
      282     7517           put into transparent mode before the read phase pass.                      */
      283     7518
      284     7519    5               IF NOT KV$PTR.INPCNDPND.TRN THEN DO;
      285     7520
      286     7521        /* We're not in transparent mode, so report the parity error.                 */
      287     7522
      288     7523    5                  CALL KVI$INTINPOPRX (%KV_INPOPRX_PRTERR);
      289     7524    5               END /* IF */;
      290     7525    4            END; ELSE DO;
      291     7526
      292     7527        /* We're not doing read processing now. buffer the character
      293     7528           in a type-ahead buffer for later processing. if there is a
      294     7529           parity error, we'll report it when we process the character
      295     7530           out of the type-ahead buffer.                                              */
      296     7531
      297     7532    4               %KV_SSN.TYPAHD.BFRCHR = '1'B;
      298     7533    4               RETURN;
      299     7534    4            END /* IF */;
      300     7535    3         END /* IF */;
      301     7536    2      END /* IF */;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:11   
      302     7537    2      IF KV$TRNTBL.SPCESC$->Y$BIT.T(INPOPR.ORGCHR) THEN DO;
      303     7538        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:12   
      304     7539
      305     7540        /* This character may require special processing.                             */
      306     7541
      307     7542    3         IF INPOPR.ORGCHR=ASCBIN(KV$TRNTBL.INPCTRSTRINTCHR) THEN DO;
      308     7543
      309     7544        /* This character has the same value as the 1st character
      310     7545           in a control string. (control strings are the character
      311     7546           strings used to pass control information from the VDH-user
      312     7547           to VDH via the input buffer.                                               */
      313     7548
      314     7549    4            IF NOT KV$PTR.INPCNDPND.CTRSTR THEN DO;
      315     7550
      316     7551        /* The control string mechanism is currently reset, so this
      317     7552           chr is initiating a ctr str.                                               */
      318     7553
      319     7554        /* Set up so that the next chr rcv'd will be interpreted as
      320     7555           the 2nd chr of a ctr str.                                                  */
      321     7556
      322     7557    4               KV$PTR.INPCNDPND.CTRSTR = '1'B;
      323     7558    4               %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;
      324     7559
      325     7560        /* We're done processing this chr.                                            */
      326     7561
      327     7562    4               RETURN;
      328     7563    4            END; ELSE DO;
      329     7564
      330     7565        /* The previous chr initiated ctr str processing. this is
      331     7566           the 2nd chr of a ctr str, and it is the special chr that
      332     7567           introduces ctr str's; this means we are to interpret the
      333     7568           pair as a single literal chr rather than a ctr str.                        */
      334     7569
      335     7570    4               KV$PTR.INPCNDPND.CTRSTR = '0'B;
      336     7571    4               IF %KV_VDI.PRTCHK
      337     7572    4                 AND NOT PRT_$(%KV_VDI.PRTTYP)->Y$BIT.T(INPOPR.ORGCHR)
      338     7573    4                 AND %KV_VDI.USRRQSDAT.RED
      339     7574    5                 AND NOT KV$PTR.INPCNDPND.TRN THEN DO;
      340     7575
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:13   
      341     7576        /* This character (literal input control string character) has
      342     7577           bad parity, we're not in transparent mode, and we're
      343     7578           in the read phase. report the parity error.                                */
      344     7579
      345     7580    5                  CALL KVI$INTINPOPRX (%KV_INPOPRX_PRTERR);
      346     7581    5                  RETURN;
      347     7582    5               END /* IF */;
      348     7583    4            END /* IF */;
      349     7584    3         END; ELSE DO;
      350     7585
      351     7586        /* This isn't the character that introduces input control
      352     7587           strings. Call the VDH-user for processing.                                 */
      353     7588
      354     7589    3            USR_EXTINPTRN = KV_USR_EXTINPTRN;
      355     7590    3            USR_EXTINPTRN.ORGCHR = BINASC(INPOPR.ORGCHR);
      356     7591    3            USR_EXTINPTRN.IMD = CLR.IMD;
      357     7592    3            USR_EXTINPTRN.RED = %KV_VDI.USRRQSDAT.RED;
      358     7593    3            USR_EXTINPTRN.SPCESC = '1'B;
      359     7594    3            CALL KVV$CALUSR (USR_EXTINPTRN)
      360     7595    4            WHENRETURN DO;
      361     7596
      362     7597        /* We're to abort processing of this character. Do no more
      363     7598           processing of it, and go on to the next character in the
      364     7599           buffer.                                                                    */
      365     7600
      366     7601    4               RETURN;
      367     7602    4            END /* RETURN */;
      368     7603    3         END /* IF */;
      369     7604    2      END /* IF */;
      370     7605        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:14   
      371     7606    1      IF KV$PTR.INPCNDPND.TRN AND NOT KV$PTR.INPCNDPND.CTRSTR
      372     7607    1      THEN INPOPR.ACKCHR = BITBIN (KV$TRNTBL.INPCHRMSK & BINBIT(INPOPR.ORGCHR,16));
      373     7608
      374     7609    2      ELSE DO;
      375     7610
      376     7611        /* We're not in transparent mode, so translate the chr.                       */
      377     7612
      378     7613        /* Perform the translation with the primary table.                            */
      379     7614
      380     7615        /* Strip parity.                                                              */
      381     7616
      382     7617    2         INPOPR.ORGCHR = BITBIN (KV$TRNTBL.INPCHRMSK & BINBIT(INPOPR.ORGCHR,16));
      383     7618    2         INPOPR.ACKCHR = KV$TRNTBL.INPTRN1$->KV$PRMINPTRN.CHR(INPOPR.ORGCHR);
      384     7619    3         IF KV$TRNTBL.INPTKN$->Y$BIT.T(INPOPR.ORGCHR) THEN DO;
      385     7620
      386     7621    4            DO CASE (ADDR(INPOPR.ACKCHR)->TKN.TYP);
      387     7622
      388     7623    4            CASE (%KV_TRNTKNTYP_INPFNC_NO_TRN);
      389     7624
      390     7625        /* INPFNC entry in primary table, no translation needed, just get the INPOPR  */
      391     7626
      392     7627    4               CLR.INPOPRX = ADDR(INPOPR.ACKCHR)->TKN.TKN+KV$INPFNCTBL.INPOPROFS;
      393     7628    4               INPOPR.ACKCHR = INPOPR.ORGCHR;
      394     7629        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:15   
      395     7630    4            CASE (%KV_TRNTKNTYP_NXTTBL);
      396     7631
      397     7632        /* NXTTBL entry in primary table.
      398     7633         INPOPR.ACKCHR contains the index into the secondary table.
              7633           */
      399     7634
      400     7635    5               IF NOT KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.TKNTBL(INPOPR.ACKCHR) THEN DO;
      401     7636
      402     7637        /* NRMTRN entry in secondary table.                                           */
      403     7638
      404     7639    5                  INPOPR.ACKCHR = KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.CHR(INPOPR.ACKCHR);
      405     7640    5               END /* IF */;
      406     7641    5               ELSE DO;
      407     7642    5                  CLR.INPOPRX = KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.CHR(INPOPR.ACKCHR);
      408     7643
      409     7644    6                  DO CASE (ADDR(CLR.INPOPRX)->TKN.TYP);
      410     7645
      411     7646    6                  CASE (%KV_TRNTKNTYP_INPFNC_NO_TRN);
      412     7647
      413     7648        /* INPFNC entry in secondary table.
      414     7649           no translation needed.                                                     */
      415     7650
      416     7651    6                     INPOPR.ACKCHR = INPOPR.ORGCHR;
      417     7652
      418     7653    6                  CASE (%KV_TRNTKNTYP_INPFNC);
      419     7654
      420     7655        /* INPFNC entry in secondary table.                                           */
      421     7656
      422     7657    6                     INPOPR.ACKCHR = KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.CHR(INPOPR.ACKCHR
              7657                              +1);
      423     7658    6                  CASE(ELSE);
      424     7659
      425     7660        /* Secondary table doesn't contain NRMTRN or INPFNC
      426     7661           entry.                                                                     */
      427     7662
      428     7663        /*S* SCREECH_CODE: KVI-S$KV_SCNTRN
      429     7664             MESSAGE: Error in secondary input translate table.                       */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:16   
      430     7665                          %KH$SCREECH (COD=KVI_SCNTRN);
      431     7669    6                  END /* CASE */;
      432     7670    5                  CLR.INPOPRX = ADDR(CLR.INPOPRX)->TKN.TKN+KV$INPFNCTBL.INPOPROFS;
      433     7671    5               END /* ELSE DO */;
      434     7672        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:17   
      435     7673    4            CASE(ELSE);
      436     7674
      437     7675        /* Primary table doesn't contain NRMTRN, NXTTBL, or
      438     7676           INPFNC (no translation needed) entry.                                      */
      439     7677
      440     7678        /*S* SCREECH_CODE: KVI-S$KV_PRMTRN
      441     7679             MESSAGE: Error in primary input translate table.                         */
      442     7680                    %KH$SCREECH (COD=KVI_PRMTRN);
      443     7684    4            END /* CASE */;
      444     7685
      445     7686        /* No INPFNC if the INPFNC table don't say so. */
      446     7687
      447     7688    4            IF NOT KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR) THEN DO;
      448     7689    4               CLR.INPOPRX = 0;
      449     7690    4            END;
      450     7691    3         END /* IF */;
      451     7692
      452     7693        /* Restore the original character's parity bit */
      453     7694    2         INPOPR.ORGCHR = ASCBIN(%KV_SSN.INPCHR);
      454     7695    2      END /* IF NOT TRN */;
      455     7696        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:18   
      456     7697    2      IF %KV_MRD.LOCALECHO THEN DO;
      457     7698
      458     7699        /* Local-echo is in effect, reflect the position done by the character.
      459     7700           (and dont echo it)                                                         */
      460     7701
      461     7702    2         CLR.ECH = '0'B;
      462     7703    3         DO SELECT (INPOPR.ACKCHR);
      463     7704    3            SELECT (%BITBIN(ASCIIBS));
      464     7705    3            IF %KV_MRD.DEVICEBS AND %KV_MRD.DVCCLM>1
      465     7706    3            THEN %KV_MRD.DVCCLM = %KV_MRD.DVCCLM-1;
      466     7707    3            SELECT (%BITBIN(ASCIICR));
      467     7708    3            IF %KV_MRD.DEVICECR THEN %KV_MRD.DVCCLM = 1;
      468     7709    4            ELSE IF %KV_MRD.CRISNL THEN DO;
      469     7710    4               %KV_MRD.DVCCLM = 1;
      470     7711    4               GOTO LCLNL;
      471     7712    4            END /* IF */;
      472     7713    3            SELECT (%BITBIN(ASCIILF));
      473     7714    3            IF %KV_MRD.DEVICELF THEN GOTO LCLNL;
      474     7715    4            IF %KV_MRD.LFISNL THEN DO;
      475     7716    4               %KV_MRD.DVCCLM = 1;
      476     7717    4               GOTO LCLNL;
      477     7718    4            END;
      478     7719    3            SELECT (ELSE);
      479     7720    4         IF INPOPR.ACKCHR>=ASCBIN(' ') AND INPOPR.ACKCHR<BITBIN(%ASCIIDEL) THEN DO;
      480     7721    4            IF INPOPR.ACKCHR>ASCBIN(' ')
      481     7722    4              AND %KV_SRD.HI_NONBLN.CLM<%KV_MRD.DVCCLM
      482     7723    4              AND %KV_SRD.HI_NONBLN.LIN=%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS
      483     7724    4            THEN %KV_SRD.HI_NONBLN.CLM=%KV_MRD.DVCCLM;
      484     7725    4            CLR.LCLECH='1'B;
      485     7726    4            IF %KV_MRD.DVCCLM<%KV_MRD.WDT
      486     7727    4            THEN %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+1;
      487     7728    5            ELSE IF %KV_MRD.AUTONL THEN DO;
      488     7729    5               %KV_MRD.DVCCLM = 1;
      489     7730    5               GOTO LCLNL;
      490     7731    4            END; ELSE IF %KV_MRD.LIMBOCLM
      491     7732    4            THEN IF %KV_MRD.DVCCLM=%KV_MRD.WDT
      492     7733    4            THEN %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+1;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:19   
      493     7734    5            ELSE DO;
      494     7735    5               %KV_MRD.DVCCLM = 2;
      495     7736    5   LCLNL:      IF %KV_MRD.DVCLIN~=%KV_MRD.LNG
      496     7737    5               THEN %KV_MRD.DVCLIN = %KV_MRD.DVCLIN+1;
      497     7738    5               ELSE %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS-1;
      498     7739    5               IF %KV_SRD.HI_NONBLN.LIN<%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS
      499     7740    6                 AND INPOPR.ACKCHR>ASCBIN(' ') THEN DO;
      500     7741    6                  %KV_SRD.HI_NONBLN.LIN=%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS;
      501     7742    6                  %KV_SRD.HI_NONBLN.CLM=%KV_MRD.DVCCLM-1;
      502     7743    6               END;
      503     7744    5            END /* IF */;
      504     7745    4         END /* SELECT */;
      505     7746    3         END /* IF */;
      506     7747    2      END /* IF */;
      507     7748    1      INPFNCUSR$ = %KV_MVD.USRINPFNCTBL$;
      508     7749    1      INPOPR.INPFNCTBL$ = %KV_MRD.PRFINPFNCTBL$;
      509     7750    1      CLR.INT2 = KV$PTR.INPCNDPND.ESC.INT2;
      510     7751    1      CLR.ESC = KV$PTR.INPCNDPND.ESC.PRF;
      511     7752    1      GOTO SUBCOMMON;
      512     7753        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:20   
      513     7754    1   KVI$INPCHR_INPFNCIMD: ENTRY;
      514     7755
      515     7756        /* Process an input character at immediate time, but a result of an input
      516     7757           function.  (IMP I IN). */
      517     7758
      518     7759    1      CLR = %CLR_IMD;
      519     7760    1      GOTO Y$INPCHR_INPFNC;
      520     7761
      521     7762    1   KVI$INPCHR_INPFNC: ENTRY;
      522     7763
      523     7764        /* Process an input character, doing special
      524     7765           character detection, special character sequence processing,
      525     7766           echoing, input message assembly, etc.                                      */
      526     7767
      527     7768    1      CLR = '0'B;
      528     7769    1   Y$INPCHR_INPFNC:;
      529     7770    1      SSN$ = KV$PTR.SSN$;
      530     7771    1      MVD$ = KV$PTR.MVD$;
      531     7772    1      INPOPR.ORGCHR = ASCBIN(%KV_SSN.INPCHR);
      532     7773    1      CLR.ECH = %KV_SSN.INPECH;
      533     7774    1      INPFNCUSR$ = ADDR(NIL);
      534     7775    1      INPOPR.INPFNCTBL$ = INPFNCUSR$;
      535     7776    1      CLR.INT2 = KV$PTR.INPCNDPND.ESC.INT2;
      536     7777    1      KV$PTR.USRINPFNCINH = '1'B;
      537     7778    1      INPOPR.ACKCHR = INPOPR.ORGCHR;
      538     7779    1      INPFNCSST$ = %KV_MVD.SSTINPFNCTBL$;
      539     7780        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:21   
      540     7781    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      541     7782
      542     7783    1      IF CLR.INPOPRX=0 AND INPFNCSST$~=ADDR(NIL)
      543     7784
      544     7785        /* If we detected a system input function table special character
      545     7786           when doing the translation. don't do condition-pending
      546     7787           processing (special character processing) unless there is
      547     7788           some other reason for doing it. we don't want to defeat
      548     7789           the accelerator mechanism built into the translate tables.                 */
      549     7790
      550     7791    1      THEN IF INPFNCSST$->KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)
      551     7792        /*N* When PL6 can do it right, CLR.SSTSPCCHR=INPFNCTBL.SPCCHR(CHR) */
      552     7793    1      THEN CLR.SPCCHR.SST = '1'B;
      553     7794    1      IF INPFNCUSR$~=ADDR(NIL)
      554     7795    1      THEN IF INPFNCUSR$->KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)
      555     7796    1      THEN CLR.SPCCHR.USR = '1'B;
      556     7797    1      IF INPOPR.INPFNCTBL$=ADDR(NIL) THEN CLR.USRPAS = '1'B;
      557     7798        /* If there's no profile table, start INPFNCSRC with the user table. */
      558     7799
      559     7800    1      ELSE IF KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)
      560     7801    1      THEN CLR.SPCCHR.PRF = '1'B;
      561     7802    2      IF NOT KV$PTR.INPCNDFLG.BITS AND NOT CLR.SPCCHR THEN DO;
      562     7803        /* The character doesn't begin or continue an input function sequence,
      563     7804           or else it's one that is accelerated through the translate table.
      564     7805           In the latter case, the function table pointer needs correction.  */
      565     7806
      566     7807    2         KV$PTR.INPCNDPND.OPRX = 0;        /* No count for SPCCHRs               */
      567     7808    2         INPOPR.INPFNCTBL$ = INPFNCSST$;
      568     7809    2      END;
      569     7810    2      ELSE DO;
      570     7811
      571     7812        /* We have a condition pending (ctr str, transparent mode,
      572     7813           special function, or escape sequence) for the phase of
      573     7814           processing we're doing (immediate, read, or both).                         */
      574     7815
      575     7816        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:22   
      576     7817        /* Find out exactly what condition, and process it.                           */
      577     7818
      578     7819    3         IF KV$PTR.INPCNDPND.CTRSTR THEN DO;
      579     7820
      580     7821        /* This is the 2nd chr of a ctr str, and it doesn't have the
      581     7822           value of the chr that introduces ctr str's, i.e., it's not
      582     7823           to be interpreted as a literal chr.                                        */
      583     7824
      584     7825    3            KV$PTR.INPCNDPND_MSK.NOT_TRN = '0'B;
      585     7826    3            %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;
      586     7827    4            IF %KV_MVD.TRNTBL$->KV$TRNTBL.TRNINPCTRSTRID THEN DO;
      587     7828
      588     7829        /* We are to use the translated input control string ID character,
      589     7830           rather than the untranslated value.                                        */
      590     7831
      591     7832    4               INPOPR.ACKCHR = INPOPR.ACKCHR+%KV_INPCTRSTRCHR_BIS;
      592     7833    4            END; ELSE DO;
      593     7834
      594     7835        /* We're to use the untranslated value of the input control
      595     7836           string ID character.                                                       */
      596     7837
      597     7838    4               INPOPR.ACKCHR = INPOPR.ORGCHR+%KV_INPCTRSTRCHR_BIS;
      598     7839    4            END /* IF */;
      599     7840    3            CLR.SPCCHR.PRF = '1'B;
      600     7841    3            GOTO INPFNCSRC;
      601     7842    3         END /* IF */;
      602     7843        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:23   
      603     7844    3         IF KV$PTR.INPCNDPND.TRN THEN DO;
      604     7845
      605     7846        /* We're in transparent input mode.                                           */
      606     7847
      607     7848    4            IF %KV_VDI.USRRQSDAT.RED THEN DO;
      608     7849
      609     7850        /* Transparent mode with a read enabled; process the input chr.               */
      610     7851
      611     7852    5               IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;
      612     7853
      613     7854        /* In X364 transarent mode, the input parity bit is removed, and
      614     7855              function keys are converted to standard sequences. */
      615     7856
      616     7857    5                  KV$PTR.INPCNDPND.ESC.USR = '0'B;
      617     7858    5                  KV$PTR.INPCNDPND.ESC.SST = '0'B;
      618     7859    5                  IF CLR.SPCCHR.PRF OR KV$PTR.INPCNDPND.ESC.PRF
      619     7860    5                  THEN GOTO INPFNCSRC;
      620     7861    5                  INPOPR.ORGCHR = INPOPR.ACKCHR;
      621     7862    5               END;
      622     7863    4               CLR.CHR = INPOPR.ORGCHR;
      623     7864    4               GOTO BFRREDCHR;
      624     7865    4            END /* IF */;
      625     7866    3            %KV_SSN.TYPAHD.BFRCHR = '1'B;
      626     7867    4            IF %KV_STR.SNDMAXNMBRCR~=0 THEN DO;
      627     7868
      628     7869        /* There is a no-wait read request waiting to
      629     7870           be enabled.                                                                */
      630     7871
      631     7872    4               %KV_SSN.NO_WATREDTRG = '1'B;
      632     7873    4            END /* IF */;
      633     7874
      634     7875        /* We're done processing this chr.                                            */
      635     7876
      636     7877    3            RETURN;
      637     7878    3         END;
      638     7879        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:24   
      639     7880    3         IF KV$PTR.INPCNDPND.INPOPR THEN DO;
      640     7881
      641     7882        /* We have an input operator pending; previous input processing requested that
      642     7883           special processing be applied to following characters.                     */
      643     7884
      644     7885    3            CLR.INPOPRX = KV$PTR.INPCNDPND.OPRX;
      645     7886    3            IF INPOPR.INPFNCTBL$~=ADDR(NIL)
      646     7887        /* Do one character to character translation from the profile table. */
      647     7888
      648     7889    3            THEN IF KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)
      649     7890    4              AND KV$INPFNCTBL.ID_CHRCNT(%KV_INPFNCTYP_SPCCHR)~=0 THEN DO;
      650     7891    4               USR_EXTINPTRN.ORGCHR = BINASC(INPOPR.ACKCHR); /* PL6 BUG          */
      651     7892    4               CALL INDEX(%IX, USR_EXTINPTRN.ORGCHR,
      652     7893    4                 SUBSTR(KV$INPFNCCHR, KV$INPFNCTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR),
      653     7894    5                 KV$INPFNCTBL.ID_CHRCNT(%KV_INPFNCTYP_SPCCHR))) WHENRETURN DO;
      654     7895    5                  %IX = KV$INPFNCOPRX (%IX +
      655     7896    5                    KV$INPFNCTBL.OPRX_OFS(%KV_INPFNCTYP_SPCCHR));
      656     7897    5                  IF %IX>=0 AND %IX<256 THEN INPOPR.ACKCHR = %IX;
      657     7898    5                  ELSE RETURN;             /* Maps into "ignore"                 */
      658     7899    5               END;
      659     7900    4            END;
      660     7901    3            KV$PTR.INPCNDPND.INPOPR = '0'B;
      661     7902    3            INPOPR.INPFNCTBL$ = INPFNCSST$; /* Only SST table can have FLWON     */
      662     7903
      663     7904    3         END /* IF */;
      664     7905        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:25   
      665     7906    2         ELSE IF KV$PTR.INPCNDPND.ESC
      666     7907    3           OR CLR.SPCCHR THEN DO;
      667     7908
      668     7909        /* There is an escape sequence pending, i.e., we received an
      669     7910           escape introducer and are now processing a subsequent chr,
      670     7911           or this is a special character.                                            */
      671     7912
      672     7913        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:26   
      673     7914        /* In the following section of code, the word 'escape' doesn't
      674     7915           necessarily refer to the ASCII ESC character, but to the
      675     7916           concept of escape sequences.
      676     7917
      677     7918           'escape introducer' is a character that introduces escape
      678     7919           sequences. In the CP-5 input function table, it is the ASCII
      679     7920           esc character.
      680     7921
      681     7922           'escape identifier' is the character that identifies which
      682     7923           escape sequence this is. e.g., in the CP-5 input function
      683     7924           table, it is the 'q' in esc-q.
      684     7925
      685     7926           'special character' refers to a character that invokes
      686     7927           some processing other than simple buffering and echoing.
      687     7928           in the CP-5 input function table, del (delete, rubout)
      688     7929           is a special character (although it is processed thru an
      689     7930           accelerator and bypasses this code).                                       */
      690     7931
      691     7932    4   INPFNCSRC: DO WHILE '1'B;
      692     7933
      693     7934        /* This loop is re-iterated if the chr we're processing is
      694     7935           lower case, there is no such escape identifier,
      695     7936           and we want to try it as an upper case escape identifier.                  */
      696     7937
      697     7938    5               IF CLR.USRPAS THEN IF INPFNCUSR$~=ADDR(NIL) THEN DO;
      698     7939    5                  INPOPR.INPFNCTBL$ = INPFNCUSR$;
      699     7940    5                  CLR.ESC = KV$PTR.INPCNDPND.ESC.USR;
      700     7941    5                  CLR.SPCCHR.PRF = CLR.SPCCHR.USR;
      701     7942    4               END; ELSE CLR.SSTPAS = '1'B;
      702     7943    5               IF CLR.SSTPAS THEN DO;
      703     7944
      704     7945        /* There is no user-input-function table, or its use is inhibited. */
      705     7946    5                  INPOPR.INPFNCTBL$ = INPFNCSST$;
      706     7947    5                  CLR.ESC = KV$PTR.INPCNDPND.ESC.SST;
      707     7948    5                  CLR.SPCCHR.PRF = CLR.SPCCHR.SST;
      708     7949
      709     7950    5               END /* IF */;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:27   
      710     7951
      711     7952    4               FNCLVL = ASCBIN(BITASC(BINBIT(INPOPR.ACKCHR,16))); /* aka top byte */
      712     7953    4               IF FNCLVL~=0 THEN GOTO NONESCCHR;
      713     7954    5   TBLSRC:     DO WHILE '1'B;
      714     7955
      715     7956        /* This loop is traversed for each input function level,
      716     7957           until the character is identified or we give up
      717     7958           trying to identify it.                                                     */
      718     7959
      719     7960    6                  DO WHILE '1'B;
      720     7961    6                     IF FNCLVL>%KV_INPFNCTYP_SPCCHR THEN EXIT TBLSRC;
      721     7962    6                     IF CLR.ESC(FNCLVL) THEN EXIT;
      722     7963
      723     7964        /* Find a level that is a candidate. */
      724     7965
      725     7966    6                     FNCLVL = FNCLVL+1;
      726     7967    6                  END;
      727     7968
      728     7969    6                  IF FNCLVL>=%KV_INPFNCTYP_SPCCHR THEN DO;
      729     7970    6   NONESCCHR:        ;
      730     7971    7                     DO %IX=0 TO 1;
      731     7972
      732     7973        /* This is a special character, and this isn't the shift pass.                */
      733     7974
      734     7975        /* Check for an escape introducer. */
      735     7976
      736     7977        /* This loop is traversed for the primary and secondary escape
      737     7978           levels in a single input function table.                                   */
      738     7979
      739     7980    7                        IF KV$INPFNCTBL.ESCINT1_CHR(%IX)=INPOPR.ACKCHR
      740     7981
      741     7982        /* This chr is an escape introducer.                                          */
      742     7983
      743     7984    8                        THEN IF CLR.ESC(%IX) THEN DO;
      744     7985
      745     7986        /* This is a double escape. this double escape isn't a defined
      746     7987           escape sequence above this level.                                          */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:28   
      747     7988
      748     7989    8                           IF NOT CLR.SSTPAS THEN IF CLR.USRPAS
      749     7990    8                           THEN KV$PTR.INPCNDPND.ESC.USR = '0'B;
      750     7991    8                           ELSE KV$PTR.INPCNDPND.ESC.PRF = '0'B;
      751     7992    9                           ELSE DO;
      752     7993    9                              KV$PTR.INPCNDPND.ESC = '0'B;
      753     7994
      754     7995        /* This is just a normal character, don't honor TRNTBL inpfnc either. */
      755     7996    9                              CLR.INPOPRX = 0;
      756     7997    9                           END;
      757     7998    8                           EXIT TBLSRC;
      758     7999    8                        END; ELSE DO;
      759     8000
      760     8001        /* This isn't a double escape. this chr is an escape introducer.              */
      761     8002    9                           IF CLR.SSTPAS THEN DO;
      762     8003    9                              IF %IX=0 THEN IF KV$INPFNCTBL.ESCINT1_CHR(0)=
      763     8004    9                                KV$INPFNCTBL.ESCINT1_CHR(1)
      764     8005    9                              THEN KV$PTR.INPCNDPND.ESC.SST = '11'B;
      765     8006    9                              ELSE KV$PTR.INPCNDPND.ESC.SST(0) = '1'B;
      766     8007    9                              ELSE KV$PTR.INPCNDPND.ESC.SST(1) = '1'B;
      767     8008    9                           END; ELSE DO;
      768     8009    9                              IF CLR.USRPAS
      769     8010    9                              THEN %IX = %IX+2;
      770     8011    9                              ELSE IF KV$PTR.INPCNDPND.ESC THEN EXIT TBLSRC;
      771     8012        /* If ESCs already pending, ESC.PRF must have timed out.  Dont start over. */
      772     8013    9                              KV$PTR.INPCNDPND.ESC = %KV_MVD.ESCX(%IX);
      773     8014    9                              IF NOT KV$PTR.INPCNDPND.ESC THEN EXIT TBLSRC;
      774     8015        /* If that did nothing, profile escapes must be diasbled by a user redef */
      775     8016    9                           END;
      776     8017    8                           KV$PTR.INPCNDPND.OPRX = 0; /* Clear ESCCNT value.     */
      777     8018    8                           %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;
      778     8019    8                           RETURN;
      779     8020    8                        END /* IF */;
      780     8021    7                     END /* LOOP */;
      781     8022    6                  END;
      782     8023    6                  ELSE IF CLR.INT2 AND KV$INPFNCTBL.ESCINT2_CHR(FNCLVL)>=0 THEN DO;
      783     8024
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:29   
      784     8025        /* We're awaiting the second character of this intro. Is this it. */
      785     8026    7                     IF INPOPR.ACKCHR=KV$INPFNCTBL.ESCINT2_CHR(FNCLVL) THEN DO;
      786     8027
      787     8028        /* Yup. This is it. Let's figure out which escapes are still pending. */
      788     8029    8                        IF CLR.SSTPAS THEN DO;
      789     8030    8                           KV$PTR.INPCNDPND.ESC = '0'B;
      790     8031    8                           KV$PTR.INPCNDPND.ESC.SST(FNCLVL) = '1'B;
      791     8032    8                        END; ELSE DO;
      792     8033    8                           KV$PTR.INPCNDPND.ESC.INT2 = '0'B;
      793     8034    9                           IF NOT CLR.USRPAS THEN DO;
      794     8035
      795     8036        /* Profile table, check user functions. */
      796     8037    9                              KV$PTR.INPCNDPND.ESC.PRF(1-FNCLVL) = '0'B;
      797     8038    9                              IF INPFNCUSR$~=ADDR(NIL)
      798     8039   10                              THEN DO %IX=0 TO 1;
      799     8040   10                                 IF KV$PTR.INPCNDPND.ESC.USR(%IX) AND INPOPR.ACKCHR
      800     8041   10                                   ~=INPFNCUSR$->KV$INPFNCTBL.ESCINT2_CHR(%IX)
      801     8042   10                                 THEN KV$PTR.INPCNDPND.ESC.USR(%IX) = '0'B;
      802     8043   10                              END;
      803     8044    9                           END; ELSE DO;
      804     8045
      805     8046        /* User table. No profile functions, check system table. */
      806     8047    9                              KV$PTR.INPCNDPND.ESC.PRF = '0'B;
      807     8048    9                              KV$PTR.INPCNDPND.ESC.USR(1-FNCLVL) = '0'B;
      808     8049    9                           END;
      809     8050    9                           DO %IX=0 TO 1;
      810     8051    9                              IF KV$PTR.INPCNDPND.ESC.SST(%IX) AND INPOPR.ACKCHR~=
      811     8052    9                                INPFNCSST$->KV$INPFNCTBL.ESCINT2_CHR(%IX)
      812     8053    9                              THEN KV$PTR.INPCNDPND.ESC.SST(%IX) = '0'B;
      813     8054    9                           END;
      814     8055    8                        END;
      815     8056    7                        %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;
      816     8057    7                        RETURN;
      817     8058    7                     END;
      818     8059
      819     8060        /* This isn't the second char of the intro. This level isn't pending
      820     8061           anymore. Others might be tho. */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:30   
      821     8062    6                     CLR.ESC(FNCLVL) = '0'B;
      822     8063    6                     IF INPOPR.ACKCHR=KV$INPFNCTBL.ESCINT1_CHR(FNCLVL)
      823     8064
      824     8065        /* Don't go thinking it is the first introducer again, though */
      825     8066    6                     THEN CLR.SPCCHR.PRF = '0'B;
      826     8067    6                     GOTO TBLSRC;
      827     8068    6                  END;
      828     8069
      829     8070        /* If we've gotten here, the character is a candidate for this FNCLVL.  */
      830     8071
      831     8072    5                  USR_EXTINPTRN.ORGCHR=BINASC(INPOPR.ACKCHR); /* PL6 BUG         */
      832     8073    5                  IF KV$INPFNCTBL.ID_CHRCNT(FNCLVL)~=0
      833     8074    5                  THEN CALL INDEX(%IX, USR_EXTINPTRN.ORGCHR,
      834     8075    5                    SUBSTR(KV$INPFNCCHR,KV$INPFNCTBL.ID_CHROFS(FNCLVL),
      835     8076    6                    KV$INPFNCTBL.ID_CHRCNT(FNCLVL))) WHENRETURN DO;
      836     8077        /* Found one, save its stuff, and bail out. */
      837     8078    6                     IF KV$PTR.VDI$=ADDR(NIL) THEN EXIT; /* Load up a base reg   */
      838     8079    6                     %IX = KV$INPFNCTBL.OPRX_OFS(FNCLVL)+%IX;
      839     8080    7                     IF NOT CLR.SSTPAS AND NOT CLR.USRPAS THEN DO;
      840     8081
      841     8082        /* For profile functions, INPOPRX is just the translated value, e.g., PF2. */
      842     8083        /* So, honor it only if the user or system table has such things. */
      843     8084
      844     8085    7                        FNCLVL = KV$INPFNCOPRX (%IX);
      845     8086    7                        IF FNCLVLU>=%KV_INPFNCKEYN_BIS
      846     8087    8                          AND FNCLVLU<%KV_INPFNCKEYN_BIS+100*512 THEN DO;
      847     8088    8                           KV$PTR.INPCNDPND.OPRX =
      848     8089    8                             KV$PTR.INPCNDPND.OPRX+%KV_INPFNCKEYN_BIS/512;
      849     8090    9                           DO WHILE FNCLVLU/512<KV$PTR.INPCNDPND.OPRX;
      850     8091        /*
      851     8092           Find the one whose modifier exceeds or equals the one we got.
      852     8093           Even left-bytes are function keys.  Odd ones just characters.
      853     8094        */
      854     8095    9                              %IX = %IX+1;
      855     8096    9                              IF %IX=KV$INPFNCTBL.OPRX_OFS(%KV_INPFNCTYP_SPCCHR)
      856     8097    9                                OR KV$INPFNCOPRX(%IX)<FNCLVL
      857     8098    9                              THEN EXIT TBLSRC;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:31   
      858     8099    9                              FNCLVL = KV$INPFNCOPRX(%IX);
      859     8100    9                           END;
      860     8101    8                           %IX = MOD(FNCLVLU,256)-(FNCLVLU/512-KV$PTR.INPCNDPND.OPRX);
      861     8102    8                           IF NOT BINBIT(FNCLVLU,16)&'0100'X
      862     8103    8                           THEN %IX = %IX+%KV_INPFNCKEY_BIS;
      863     8104    7                        END; ELSE %IX = FNCLVL;
      864     8105    8                        IF %IX=%KV_ESCINTCHR_NON THEN DO;
      865     8106
      866     8107        /*
      867     8108           Maps to "no character".  Make it happen.
      868     8109        */
      869     8110    8                           KV$PTR.INPCNDPND.ESC = '0'B;
      870     8111    8                           RETURN;
      871     8112    8                        END;
      872     8113    7                        FNCLVL = %IX/256;
      873     8114    8                        IF FNCLVL=%KV_INPFNCTYP_SPCCHR THEN DO;
      874     8115    8                           FNCLVL = 0;     /* A slightly different meaning here  */
      875     8116    8                           %IX = %IX-%KV_INPFNCTYP_SPCCHR*256;
      876     8117    7                        END; ELSE IF FNCLVL=%KV_INPFNCTYP_FNCKEY
      877     8118    7                        THEN IF KV$PTR.INPCNDPND.TRN
      878     8119    8                          AND %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;
      879     8120
      880     8121        /* Transparent X364 needs to have some keys mapped to standard sequences */
      881     8122
      882     8123    8                           KV$PTR.INPCNDPND.ESC = '0'B;
      883     8124    8                           INPOPR.INPFNCTBL$ = ADDR(KV@VDH_DAT);
      884     8125    8                           USR_EXTINPTRN.ORGCHR = BINASC(%IX);
      885     8126    8                           CALL INDEX (%IX, USR_EXTINPTRN.ORGCHR, KV_X364_FNCS)
      886     8127    9                           WHENRETURN DO;
      887     8128    9                              X364_CHARS = ADDR(KV_X364_FNC)->X364_CHARS;
      888     8129    9                              SUBSTR(%OPR_TXT.T,2,1) = SUBSTR(KV_X364_FNCIDS,%IX,1);
      889     8130    9                              %IX = 0;
      890     8131    9                              CALL KVI$INTINPOPR (INPOPR);
      891     8132    9                           END;
      892     8133    8                           RETURN;
      893     8134    8                        END;
      894     8135    8                        ELSE IF %KV_STR.TRNUSRINPFNC THEN DO;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:32   
      895     8136
      896     8137        /* Special hook for IMP - so it can interpret FNCKEYs for you */
      897     8138
      898     8139    8                           IF INPFNCUSR$~=ADDR(NIL)
      899     8140    8                           THEN IF INPFNCUSR$->KV$INPFNCTBL.ID_CHRCNT
      900     8141    8                             (%KV_INPFNCTYP_FNCKEY)~=0 THEN EXIT;
      901     8142    8                           %KV_STR.TRNUSRINPFNC = '0'B;
      902     8143    8                           %KV_SSN.TYPAHD = '0'B;
      903     8144    8                           KV$PTR.INPCNDPND.ESC = '0'B;
      904     8145    8                           CLR = '0'B;
      905     8146    8                           CLR.CHR = %IX;
      906     8147    8                           GOTO ACTRED;
      907     8148    8                        END;
      908     8149    7                        IF INPFNCSST$->KV$INPFNCTBL.ID_CHRCNT(FNCLVL)=0
      909     8150    7                          AND FNCLVL~=0
      910     8151    7                        THEN IF INPFNCUSR$=ADDR(NIL) THEN EXIT TBLSRC;
      911     8152    7                        ELSE IF INPFNCUSR$->KV$INPFNCTBL.ID_CHRCNT(FNCLVL)=0
      912     8153    7                          AND %IX~=ASCBIN(BITASC(BINBIT(
      913     8154    7                          INPFNCUSR$->KV$INPFNCTBL.ESCINT1_CHR(0),16)))
      914     8155    7                          AND %IX~=ASCBIN(BITASC(BINBIT(
      915     8156    7                          INPFNCUSR$->KV$INPFNCTBL.ESCINT1_CHR(1),16)))
      916     8157    7                        THEN EXIT TBLSRC;
      917     8158    7                        USR_EVT.PRM = INPOPR.ACKCHR; /* Save for search failure  */
      918     8159    7                        INPOPR.ACKCHR = %IX;
      919     8160    7                        IF FNCLVL~=0 THEN CLR.SPCCHR.PRF = '1'B;
      920     8161    8                        ELSE DO;
      921     8162    8                           CLR.SPCCHR = '0'B;
      922     8163    8                           IF INPFNCUSR$~=ADDR(NIL)
      923     8164    8                           THEN IF INPFNCUSR$->KV$INPFNCTBL.SPCCHR(%IX)
      924     8165    8                           THEN CLR.SPCCHR.USR = '1'B;
      925     8166    8                           IF INPFNCSST$->KV$INPFNCTBL.SPCCHR(%IX)
      926     8167    8                           THEN CLR.SPCCHR.SST = '1'B;
      927     8168    8                           KV$PTR.INPCNDPND.ESC = '0'B;
      928     8169    8                        END;
      929     8170    7                        EXIT TBLSRC;
      930     8171    7                     END;
      931     8172    6                     CLR.INPOPRX = KV$INPFNCOPRX(%IX)+KV$INPFNCTBL.INPOPROFS;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:33   
      932     8173    6                     IF FNCLVL>=%KV_INPFNCTYP_SPCCHR
      933     8174    6                     THEN KV$PTR.INPCNDPND.OPRX = 0;
      934     8175    6                     EXIT INPFNCSRC;
      935     8176    6                  END;
      936     8177    5                  IF INPOPR.ACKCHR>=ASCBIN('0') AND INPOPR.ACKCHR<=ASCBIN('9')
      937     8178    6                    AND KV$INPFNCTBL.ESCCNTOK(FNCLVL) THEN DO;
      938     8179
      939     8180        /* This chr is numeric, and numbers are allowed following the introducer.     */
      940     8181
      941     8182    6                     %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;
      942     8183    6                     IF KV$PTR.INPCNDPND.OPRX>999 OR KV$PTR.INPCNDPND.OPRX<0
      943     8184    6                     THEN KV$PTR.INPCNDPND.OPRX = 0;
      944     8185    6                     KV$PTR.INPCNDPND.OPRX =
      945     8186    6                       KV$PTR.INPCNDPND.OPRX*10 + INPOPR.ACKCHR-48;
      946     8187    6                     KV$PTR.INPCNDPND.ESC = KV$PTR.INPCNDPND.ESC&%KV_MVD.ESCCNTMSK;
      947     8188
      948     8189        /* We're done processing the chr.                                             */
      949     8190
      950     8191    6                     RETURN;
      951     8192    6                  END /* IF */;
      952     8193    5                  IF INPOPR.ACKCHR=ASCBIN('-')
      953     8194    6                    AND KV$PTR.INPCNDPND.OPRX~=0 THEN DO;
      954     8195    6                     %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;
      955     8196    6                     KV$PTR.INPCNDPND.OPRX = -KV$PTR.INPCNDPND.OPRX;
      956     8197    6                     RETURN;
      957     8198    6                  END;
      958     8199    5                  FNCLVL = FNCLVL+1;
      959     8200    5               END TBLSRC;
      960     8201
      961     8202        /* If we haven't yet done so, try the system table, too. */
      962     8203    5               IF NOT CLR.SSTPAS THEN IF CLR.USRPAS THEN DO;
      963     8204    5                  CLR.SSTPAS = '1'B;
      964     8205    5                  CLR.USRPAS = '0'B;
      965     8206    5               END;
      966     8207    4               ELSE CLR.USRPAS = '1'B;
      967     8208
      968     8209    5               ELSE IF CLR.SHFPAS THEN DO;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:34   
      969     8210
      970     8211        /* This is the shift pass. there is total failure on
      971     8212           identifying the chr.                                                       */
      972     8213
      973     8214        /* Convert the character back to lower case before buffering it.              */
      974     8215
      975     8216    5                  INPOPR.ACKCHR = INPOPR.ACKCHR+ASCBIN('a')-ASCBIN('A');
      976     8217    5                  EXIT INPFNCSRC;
      977     8218    5               END /* IF */;
      978     8219    4               ELSE IF INPOPR.ACKCHR>=ASCBIN('a')
      979     8220    5                 AND INPOPR.ACKCHR<=ASCBIN('z') THEN DO;
      980     8221
      981     8222        /* This character is lower case. shift it to upper case,
      982     8223           and try to identify it as an escape identifier.                            */
      983     8224
      984     8225    5                  INPOPR.ACKCHR = INPOPR.ACKCHR-ASCBIN('a')+ASCBIN('A');
      985     8226    5                  CLR.SHFPAS = '1'B;
      986     8227    5                  CLR.SSTPAS = '0'B;
      987     8228    5                  CLR.USRPAS = '1'B;       /* No profile functions this time.    */
      988     8229
      989     8230        /* Only try escape indentifiers this time. */
      990     8231    5                  CLR.SPCCHR = '0'B;
      991     8232    5               END; ELSE DO;
      992     8233
      993     8234        /* Total failure on identifying the character.                                */
      994     8235
      995     8236    5                  IF INPOPR.ACKCHR<%KV_INPFNCKEY_BIS THEN EXIT INPFNCSRC;
      996     8237        /*
      997     8238           Unless it was a function key search.  Try the component sequence, too.
      998     8239        */
      999     8240    5                  INPOPR.ACKCHR = USR_EVT.PRM;
     1000     8241    5                  CLR.USRPAS = '1'B;
     1001     8242    5                  CLR.SSTPAS = '0'B;
     1002     8243    5               END /* IF */;
     1003     8244    4            END INPFNCSRC;
     1004     8245
     1005     8246    3            KV$PTR.INPCNDPND.ESC = '0'B;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:35   
     1006     8247
     1007     8248    3         END /* IF */;
     1008     8249    2      END /* IF */;
     1009     8250        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:36   
     1010     8251    2      IF CLR.INPOPRX~=0 THEN DO;
     1011     8252
     1012     8253        /* When we translated this chr, the input translate table
     1013     8254           yielded an input function index (in addition to a chr),
     1014     8255           or the character wound up completing another input function.
     1015     8256           do the input function processing now.                                      */
     1016     8257
     1017     8258    2         %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;
     1018     8259    2         IF NOT %KV_SSN.WATINPDLTMRK AND NOT %KV_SSN.WATOTPDLTMRK
     1019     8260    2         THEN %KV_SSN.MRKRQSENB = '1'B;
     1020     8261    2         IF CLR.REDONL THEN KV$PTR.USRINPFNCINH = '1'B; /* no loop on no-no IMP  */
     1021     8262    2         INPOPR.INPOPRX = CLR.INPOPRX;
     1022     8263    2         INPOPR.IMD = CLR.IMD;
     1023     8264    2         BFREDTX = %KV_SSN.REDBFR.EDTLOWX; /* Save for WORDWRAP check            */
     1024     8265    2         CALL KVI$INTINPOPR(INPOPR);
     1025     8266
     1026     8267        /* We're done processing this chr.                                            */
     1027     8268
     1028     8269    2         IF %KV_SSN.SNCPTR$~=ADDR(KV$PTR) THEN RETURN;
     1029     8270    2         REDBFR$ = %KV_SSN.REDBFR__.ADR$;
     1030     8271    2         %KV_SSN.INPCHR = BINASC(INPOPR.ORGCHR);
     1031     8272    2         IF %KV_VDI.USRRQSDAT.RED THEN GOTO CHKWRDWRP;
     1032     8273    2         RETURN;
     1033     8274    2      END /* IF */;
     1034     8275        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:37   
     1035     8276
     1036     8277    2      IF INPOPR.ACKCHR>=%KV_INPCTRSTRCHR_BIS THEN DO;
     1037     8278
     1038     8279        /* The character is an input control string ID character.
     1039     8280           We failed on identifying it. Ignore it.                                    */
     1040     8281
     1041     8282    2         RETURN;
     1042     8283    2      END /* IF */;
     1043     8284
     1044     8285    2      IF NOT %KV_VDI.USRRQSDAT.RED THEN DO;
     1045     8286
     1046     8287        /* We're not doing read processing; done processing this chr.                 */
     1047     8288
     1048     8289    2         IF CLR.IMD AND KV$PTR.USRINPFNCINH THEN RETURN;
     1049     8290        /* There's no typeahead for I IN IMPs. */
     1050     8291
     1051     8292    2         %KV_SSN.TYPAHD.BFRCHR = '1'B;
     1052     8293    3         IF %KV_STR.SNDMAXNMBRCR~=0 THEN DO;
     1053     8294
     1054     8295        /* There is a no-wait read request waiting to
     1055     8296           be enabled.                                                                */
     1056     8297
     1057     8298    3            %KV_SSN.NO_WATREDTRG = '1'B;
     1058     8299    3         END /* IF */;
     1059     8300    2         RETURN;
     1060     8301    2      END /* IF */;
     1061     8302
     1062     8303        /* We have a read pending; do read buffering, echoplex, etc. of the input chr.*/
     1063     8304
     1064     8305    2      IF %KV_MVD.UPPERCASE THEN DO;
     1065     8306
     1066     8307        /* We're in upper-case-shift mode.                                            */
     1067     8308
     1068     8309    3         IF INPOPR.ACKCHR>=ASCBIN('a') AND INPOPR.ACKCHR<=ASCBIN('z') THEN DO;
     1069     8310
     1070     8311        /* We're in upper case shift mode and this chr is
     1071     8312           a lower case chr. shift to upper case.                                     */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:38   
     1072     8313
     1073     8314    3            INPOPR.ACKCHR = INPOPR.ACKCHR-ASCBIN('a')+ASCBIN('A');
     1074     8315    3         END /* IF */;
     1075     8316    2      END; ELSE IF %KV_MVD.LOWERCASE THEN DO;
     1076     8317
     1077     8318        /* We're in lower-case-shift mode. this isn't quite a case shift; we're
     1078     8319           shifting sticks 6 and 7, except we don't shift underscore ('5F'X), which
     1079     8320           would map into del ('7F'X).                                                */
     1080     8321
     1081     8322        /* The mapping is.                                                            */
     1082     8323
     1083     8324        /* Upper case alpha's ->lower case alpha's
     1084     8325           [ (left bracket) ->{ (left brace)
     1085     8326           \ (back-slash) ->| (vertical line)
     1086     8327           ] (right bracket) ->} (right brace)
     1087     8328           ^ (up-arrow) ->~ (tilde)                                                  */
     1088     8329
     1089     8330    3         IF INPOPR.ACKCHR>=ASCBIN('@') AND INPOPR.ACKCHR<=ASCBIN('^') THEN DO;
     1090     8331
     1091     8332        /* We're in lower case shift mode and this chr is
     1092     8333           an upper case chr. shift to lower case.                                    */
     1093     8334
     1094     8335    3            INPOPR.ACKCHR = INPOPR.ACKCHR+ASCBIN('a')-ASCBIN('A');
     1095     8336    3         END /* IF */;
     1096     8337    2      END /* IF */;
     1097     8338
     1098     8339        /* Put the char in the proper place */
     1099     8340    1      CLR.CHR = INPOPR.ACKCHR;
     1100     8341    1      GOTO BFRREDCHR;
     1101     8342        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:39   
     1102     8343
     1103     8344
     1104     8345    1   KVI$BFRREDCHR: ENTRY;
     1105     8346
     1106     8347    1      SSN$ = KV$PTR.SSN$;
     1107     8348    1      MVD$ = KV$PTR.MVD$;
     1108     8349    2      IF NOT %KV_VDI.USRRQSDAT.RED THEN DO;
     1109     8350
     1110     8351        /* There is no read enabled.                                                  */
     1111     8352
     1112     8353    2         RETURN;
     1113     8354    2      END /* IF */;
     1114     8355    1      CLR = '0'B;
     1115     8356    1      CLR.ECH = %KV_SSN.INPECH;
     1116     8357    1      CLR.CHR = ASCBIN(%KV_SSN.INPCHR);
     1117     8358        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:40   
     1118     8359    1   BFRREDCHR:;
     1119     8360    1      IF %KV_STR.ACTCHRTBL$->KV$SHRBFR.BITT(CLR.CHR)
     1120     8361
     1121     8362        /* Either we're not in transparent mode, or we're in transparent
     1122     8363           mode and are to honor the read activation character set.                   */
     1123     8364
     1124     8365    2        AND (NOT KV$PTR.INPCNDPND.TRN OR %KV_STR.ACTONTRN) THEN DO;
     1125     8366
     1126     8367        /* This is an activation character.                                           */
     1127     8368
     1128     8369    3         IF NOT KV$PTR.INPCNDPND.TRN THEN DO;
     1129     8370
     1130     8371        /* This isn't a transparent read;
     1131     8372           position to after the highest non-blank
     1132     8373           position before echoing (possibly) character.                              */
     1133     8374
     1134     8375    3            IF %KV_MVD.ORG<=%KV#VD_ORG_X364
     1135     8376    3              AND (%KV_MVD.ORG<%KV#VD_ORG_X364 /* Dont echo outside the field    */
     1136     8377    4              OR %KV_SSN.REDBFR__.DATBYTSIZ<%KV_STR.MAXRCRBYTSIZ) THEN DO;
     1137     8378    4               CALL PSTENDRED;
     1138     8379    4            END; ELSE DO;
     1139     8380    4               CLR.ECH = '0'B;
     1140     8381    4            END /* IF */;
     1141     8382    3         END /* IF */;
     1142     8383    2   ACTRED:;
     1143     8384    2         KV@VDH_DAT = KV_VDH_DAT_NRM_ACTCHR;
     1144     8385    2         KV@VDH_DAT.DATCTRCHR = BINASC(CLR.CHR);
     1145     8386    2         CALL KVI$ACTRED (KV@VDH_DAT);
     1146     8387    2         GOTO ECHO_CHR;
     1147     8388    2      END /* IF */;
     1148     8389    1      IF %KV_VDI.INPUNT=%KV_INPUNT_BLK
     1149     8390    1        AND %KV_SSN.REDBFR__.DATBYTSIZ>=%KV_STR.MAXRCRBYTSIZ
     1150     8391    1        AND %KV_SSN.REDBFR__.DATBYTSIZ=%KV_SSN.REDBFR.EDTLOWX
     1151     8392    2      THEN DO;
     1152     8393        /*
     1153     8394           The read is complete, and this character didn't simply activate.
     1154     8395           Activate the read and save the character.
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:41   
     1155     8396        */
     1156     8397    2         %KV_SSN.TYPAHD.BFRCHR = '1'B;
     1157     8398    2         GOTO ACTBLKRED;
     1158     8399    2      END;
     1159     8400        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:42   
     1160     8401    1      REDBFR$ = %KV_SSN.REDBFR__.ADR$;
     1161     8402    2      IF REDBFR$=ADDR(NIL) THEN DO;
     1162     8403
     1163     8404        /* We need a read buffer.                                                     */
     1164     8405
     1165     8406    2         IF NOT KV$PTR.INPCNDPND.TRN THEN GOTO NON_TRN_REDBFR;
     1166     8407    2         CALL KVS$GETREDBFR(%KV_STR.MAXRCRBYTSIZ)
     1167     8408    3         WHENALTRETURN DO;
     1168     8409    3   NON_TRN_REDBFR:;
     1169     8410    3            CALL KVS$GETREDBFR ALTRET (REDDATLST);
     1170     8411    3         END;
     1171     8412    2         REDBFR$ = %KV_SSN.REDBFR__.ADR$;
     1172     8413    2      END /* IF */;
     1173     8414        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:43   
     1174     8415    2      IF %KV_SSN.REDONL THEN DO;
     1175     8416    2         INPOPR = '0'B;                    /* Ignore the profile table           */
     1176     8417    2         IF CLR.REDONL OR KV$PTR.USRINPFNCINH THEN RETURN;
     1177     8418    2         CLR = %CLR_REDONL;
     1178     8419    2         INPFNCUSR$ = %KV_MVD.USRINPFNCTBL$;
     1179     8420    2         INPFNCSST$ = %KV_MVD.SSTINPFNCTBL$;
     1180     8421    2         GOTO SUBCOMMON;
     1181     8422    2      END;
     1182     8423    1      BFREDTX = %KV_SSN.REDBFR.EDTLOWX;
     1183     8424    2      IF BFREDTX>=%KV_SSN.REDBFR.NXTX THEN DO;
     1184     8425
     1185     8426        /* We're positioned just after the end of the read data.
     1186     8427           this is the simple add-to-the-end-of-the-record situation.                 */
     1187     8428
     1188     8429    3         IF BFREDTX-%KV_SSN.REDBFR__.BYTX>=%KV_SSN.REDBFR__.BFRBYTSIZ THEN DO;
     1189     8430
     1190     8431        /* We need a bigger buffer */
     1191     8432    3            CALL KVS$GETREDBFR ALTRET (REDDATLST);
     1192     8433    3            REDBFR$ = %KV_SSN.REDBFR__.ADR$;
     1193     8434    3         END /* IF */;
     1194     8435
     1195     8436        /* Buffer the character.                                                      */
     1196     8437
     1197     8438    2         IF KV_NONPSTCHR(CLR.CHR)
     1198     8439    2         THEN %KV_SSN.CLMIS_BYTX = '0'B;
     1199     8440    2         REDBFR.BIN(BFREDTX) = CLR.CHR;
     1200     8441    2         BFREDTX = BFREDTX+1;
     1201     8442    2         %KV_SSN.REDBFR.NXTX = BFREDTX;
     1202     8443    2         %KV_SSN.REDBFR.EDTLOWX = BFREDTX;
     1203     8444    2         %KV_SSN.REDBFR.EDTHI_X = BFREDTX;
     1204     8445    2         %KV_SSN.REDBFR.INSMODX = BFREDTX;
     1205     8446    2         %KV_SSN.REDBFR__.DATBYTSIZ = BFREDTX-%KV_SSN.REDBFR__.BYTX;
     1206     8447    2      END;
     1207     8448        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:44   
     1208     8449    2      ELSE DO;
     1209     8450        /* We're not positioned after the end of the read data.
     1210     8451           we are to overstrike, replace, or insert.                                  */
     1211     8452
     1212     8453    3         IF %KV_VDI.RE_DSPINP AND BFREDTX<%KV_VDI.RE_DSPLOWX THEN DO;
     1213     8454
     1214     8455        /* We've stopped echoing this record. Keep track
     1215     8456           of how much needs to be re-displayed.                                      */
     1216     8457
     1217     8458    3            %KV_VDI.RE_DSPLOWX = BFREDTX;
     1218     8459    3         END /* IF */;
     1219     8460    3         IF BFREDTX=%KV_SSN.REDBFR.INSMODX OR %KV_MVD.INSMOD THEN DO;
     1220     8461
     1221     8462        /* We're at the insert mode point, i.e., pointing at the same point
     1222     8463           as when insert mode was entered.
     1223     8464           this is the simple insert situation.                                       */
     1224     8465
     1225     8466    3            CALL SHFRHT1 ALTRET (REDDATLST);
     1226     8467    3            REDBFR.BIN(BFREDTX) = CLR.CHR;
     1227     8468    3            %KV_SSN.REDBFR.EDTLOWX = %KV_SSN.REDBFR.EDTLOWX+1;
     1228     8469    3            IF KV_NONPSTCHR(CLR.CHR)
     1229     8470    3            THEN %KV_SSN.CLMIS_BYTX = '0'B;
     1230     8471    3            ELSE IF %KV_MVD.EDITOVR AND NOT %KV_VDI.RE_DSPINP
     1231     8472    3              AND %KV_MVD.RETYPOVR AND (CLR.LCLECH OR CLR.ECH)
     1232     8473
     1233     8474        /* We are to edit in place; type the rest of the read record shifted 1 column
     1234     8475           to the right.                                                              */
     1235     8476
     1236     8477    3            THEN CALL KVI$SHFDSPPST (1);
     1237     8478    3            GOTO ECHO_CHR;
     1238     8479        /* No need to re-scope the new column, it was adjusted by SHFRHT. */
     1239     8480
     1240     8481    3         END;
     1241     8482        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:45   
     1242     8483        /* This isn't the simple insert situation.                                    */
     1243     8484
     1244     8485    3         ELSE IF %KV_MVD.OVRSTR THEN DO;
     1245     8486
     1246     8487        /* We are to overstrike (as opposed to replace).                              */
     1247     8488        /* Check for special cases */
     1248     8489
     1249     8490    3            BFREDTX = %KV_SSN.REDBFR.EDTHI_X;
     1250     8491    3            IF CLR.CHR=ASCBIN(' ')
     1251     8492    4              AND NOT KV_NONPSTCHR(REDBFR.BIN(BFREDTX)) THEN DO;
     1252     8493
     1253     8494        /* The character we're processing is a space,
     1254     8495           and we're overstriking. Don't buffer the space,
     1255     8496           unless the column we're overstriking has no width,
     1256     8497           to avoid character-BS-SP combinations in the read buffer.                  */
     1257     8498
     1258     8499    4               IF (%KV_MVD.DISPINPUT OR %KV_MVD.RETYPOVR)
     1259     8500    5                 AND CLR.ECH THEN DO;
     1260     8501
     1261     8502        /* We're to echo the character. Just skip 1 column to the right.              */
     1262     8503
     1263     8504    5                  CALL KVO$PST(KV_VDH_PST_SPC_VRT);
     1264     8505    5                  CLR.ECH = '0'B;
     1265     8506    5               END /* IF */;
     1266     8507    4            END;
     1267     8508        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:46   
     1268     8509        /* Still in overstrike mode, not space-on-pst */
     1269     8510    3            ELSE IF KV$REDBFR.CHR(BFREDTX)=' '
     1270     8511    4              AND NOT KV_NONPSTCHR(CLR.CHR) THEN DO;
     1271     8512
     1272     8513        /* The character we're processing causes positioning, and
     1273     8514           the last column in the read buffer contains a space.
     1274     8515           Replace the space in the read buffer with the character
     1275     8516           we're processing.                                                          */
     1276     8517
     1277     8518    4               REDBFR.BIN(BFREDTX) = CLR.CHR;
     1278     8519    4            END;
     1279     8520        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:47   
     1280     8521        /* Still overstrike, not space-on-pst or pst-on-space */
     1281     8522    3            ELSE IF (CLR.CHR=ASCBIN('.') AND KV$REDBFR.CHR(BFREDTX)=''''
     1282     8523    3              OR CLR.CHR=ASCBIN('''') AND KV$REDBFR.CHR(BFREDTX)='.')
     1283     8524
     1284     8525        /* The character just typed is a period or a single quote.
     1285     8526           see if this is the apl overstrike that forms an
     1286     8527           exclamation mark (bang, !).                                                */
     1287     8528
     1288     8529    3              AND BFREDTX=%KV_SSN.REDBFR.EDTLOWX
     1289     8530
     1290     8531        /* There is only 1 character in the virtual column we're about
     1291     8532           to overstrike.                                                             */
     1292     8533
     1293     8534    3              AND (%KV_MVD.TRNTBL$->KV$TRNTBL.FNTCLS=%KV_FNTCLS_APLB
     1294     8535    4              OR %KV_MVD.TRNTBL$->KV$TRNTBL.FNTCLS=%KV_FNTCLS_APLT) THEN DO;
     1295     8536
     1296     8537        /* We're using an apl translate table.                                        */
     1297     8538
     1298     8539    4               KV$REDBFR.CHR(BFREDTX) = '!';
     1299     8540    4            END /* IF */;
     1300     8541        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:48   
     1301     8542        /* STILL overstrike, not space-pst, pst-space, or APL ! */
     1302     8543    4            ELSE DO;
     1303     8544        /* All other possibilities make this column have >1 char in it. */
     1304     8545    4               %KV_SSN.CLMIS_BYTX = '0'B;
     1305     8546    5               IF KV_NONPSTCHR(REDBFR.BIN(BFREDTX)) THEN DO;
     1306     8547
     1307     8548        /* The column we're overstriking has no width (it's all non-pst chars).
     1308     8549           Just add the new character to the end of the string. */
     1309     8550    5                  CALL SHFRHT1 ALTRET(REDDATLST);
     1310     8551    5                  BFREDTX = BFREDTX+1;
     1311     8552    5                  REDBFR.BIN(BFREDTX) = CLR.CHR;
     1312     8553    5               END /* IF */;
     1313     8554        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:49   
     1314     8555        /* Either the rightmost character in this virtual column is a
     1315     8556           positioning non-space and we're not adding a space, or it is
     1316     8557           any positioning character and we're adding a non-positioning one. */
     1317     8558
     1318     8559    5               ELSE IF NOT KV_NONPSTCHR(CLR.CHR) THEN DO;
     1319     8560
     1320     8561        /* It's the first case (positioning non-space on positioning non-space),
     1321     8562           we'll put a bs and the new character just to the right
     1322     8563           of %KV_SSN.REDBFR.EDTHI_X.                                                  */
     1323     8564
     1324     8565    5                  CALL SHFRHT2 ALTRET(REDDATLST);
     1325     8566
     1326     8567    5                  CALL INSERT(REDBFR_CHR,BFREDTX+1,2,BITASC(%ASCIIBS),
     1327     8568    5                    BINASC(CLR.CHR));
     1328     8569    5               END;
     1329     8570        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:50   
     1330     8571        /* The character just typed is one that doesn't cause cursor
     1331     8572           movement. Insert it before a trailing blank, or after anything else with
     1332     8573           a BS and SPACE around it.                                                  */
     1333     8574
     1334     8575    5               ELSE IF KV$REDBFR.CHR(BFREDTX)=' ' THEN DO;
     1335     8576
     1336     8577    5                  CALL SHFRHT3 ALTRET(REDDATLST);
     1337     8578    5                  CALL INSERT(REDBFR_CHR,BFREDTX+1,3,BITASC(%ASCIIBS),
     1338     8579    5                    BINASC(CLR.CHR),' ');
     1339     8580    5               END;
     1340     8581
     1341     8582        /* The rightmost character in this virtual column is a space,
     1342     8583           and the new character is a non-positioning character.
     1343     8584           Insert the character just to the left of the space.                    */
     1344     8585
     1345     8586    5               ELSE DO;
     1346     8587    5                  CALL SHFRHT1 ALTRET(REDDATLST);
     1347     8588    5                  REDBFR.BIN(BFREDTX) = CLR.CHR;
     1348     8589    5               END /* IF */;
     1349     8590    4            END;                           /* ELSE DO                            */
     1350     8591    3         END;
     1351     8592        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:51   
     1352     8593    3         ELSE DO;
     1353     8594        /* We are to replace rather than overstrike.                                  */
     1354     8595
     1355     8596    4            IF %KV_SSN.REDBFR.EDTHI_X~=BFREDTX THEN DO;
     1356     8597
     1357     8598        /* There is more than 1 character in this virtual column.                     */
     1358     8599
     1359     8600    4               SHF.CNT = %KV_SSN.REDBFR.NXTX-%KV_SSN.REDBFR.EDTHI_X;
     1360     8601    4               CALL INSERT(REDBFR_CHR,BFREDTX,SHF.CNT,
     1361     8602    4                 SUBSTR(REDBFR_CHR,%KV_SSN.REDBFR.EDTHI_X,SHF.CNT));
     1362     8603    4               SHF.CNT = BFREDTX-%KV_SSN.REDBFR.EDTHI_X;
     1363     8604    4               %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.INSMODX+SHF.CNT;
     1364     8605    4               %KV_SSN.REDBFR.NXTX = %KV_SSN.REDBFR.NXTX+SHF.CNT;
     1365     8606    4               %KV_SSN.REDBFR__.DATBYTSIZ =
     1366     8607    4                 %KV_SSN.REDBFR__.DATBYTSIZ+SHF.CNT;
     1367     8608    4               %KV_SSN.REDBFR.EDTHI_X = BFREDTX;
     1368     8609    4            END /* IF */;
     1369     8610    3            REDBFR.BIN(BFREDTX) = CLR.CHR;
     1370     8611    4            IF NOT KV_NONPSTCHR(CLR.CHR) THEN DO;
     1371     8612    5               IF %KV_MVD.DISPINPUT AND NOT %KV_MVD.RETYPOVR THEN DO;
     1372     8613
     1373     8614        /* The character just typed is one that causes cursor
     1374     8615           movement. make sure we're not printing on top of existing
     1375     8616           characters, unless we're re-typing in place.                               */
     1376     8617
     1377     8618    5                  CALL KVO$PST(KV_VDH_PST_WHTSPC);
     1378     8619    5               END /* IF */;
     1379     8620    4            END /* IF */;
     1380     8621    4            ELSE DO;
     1381     8622
     1382     8623        /* We replaced a column with a non-positioning character. The rest of the
     1383     8624           input needs to have its display shifted to the left. */
     1384     8625    4               %KV_SSN.CLMIS_BYTX = '0'B;
     1385     8626    4               IF %KV_MVD.EDITOVR AND NOT %KV_VDI.RE_DSPINP
     1386     8627    4               THEN CALL KVI$SHFDSPPST (-1);
     1387     8628    4               CALL KVI$SCPVRTCLMLOWX;
     1388     8629    4            END /* IF */;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:52   
     1389     8630    3         END /* IF */;
     1390     8631        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:53   
     1391     8632    3         IF NOT KV_NONPSTCHR(CLR.CHR) THEN DO;
     1392     8633
     1393     8634        /* The character just typed is one that causes cursor
     1394     8635           movement.                                                                  */
     1395     8636
     1396     8637    3            %KV_SSN.REDBFR.EDTLOWX = %KV_SSN.REDBFR.EDTHI_X+1;
     1397     8638    3            CALL KVI$SCPVRTCLMLOWX;
     1398     8639    3         END /* IF */;
     1399     8640    2      END /* IF */;
     1400     8641        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:54   
     1401     8642    1   ECHO_CHR:;
     1402     8643    2      IF %KV_MVD.DISPINPUT OR %KV_MVD.RETYPOVR THEN DO;
     1403     8644
     1404     8645        /* Were to echo (atleast position)                                            */
     1405     8646
     1406     8647    3         IF CLR.ECH AND NOT KV$PTR.INPCNDPND.TRN THEN DO;
     1407     8648
     1408     8649        /* We're not in transparent mode, and we're to echo the char. */
     1409     8650
     1410     8651    3            IF %KV_VDI.USREVTENB(%KV_USR_EVT_ID_OTP1_CHR)
     1411     8652    3              AND %KV_SRD.CRT.CLM<%KV_SRD.BTMRHT.CLM
     1412     8653        /* We're not at or beyond the right margin column.                            */
     1413     8654
     1414     8655    3              AND %KV_SRD.VRTPSTOK
     1415     8656        /* We're actually where we hope to be */
     1416     8657
     1417     8658    3              AND NOT %KV_VDI.OTPCNDPND
     1418     8659        /* There are no pending output conditions to worry about.                     */
     1419     8660
     1420     8661    3              AND %KV_MVD.TRNTBL$->KV$TRNTBL.OTPTRN1$->KV$PRMOTPTRN.CHR
     1421     8662    4              (CLR.CHR)~=%KV_MVD.TRNTBL$->KV$TRNTBL.OTPESC.CHR THEN DO;
     1422     8663        /* This character positions right 1 column, and has a complete,
     1423     8664           simple translation using the first level of the output
     1424     8665           translate table.                                                           */
     1425     8666
     1426     8667    4               IF NOT %KV_MVD.DISPINPUT
     1427     8668        /* We're to echo position only */
     1428     8669    4               THEN INPOPR.ORGCHR = ASCBIN(%KV_MVD.TRNTBL$->KV$TRNTBL.SP_CHR);
     1429     8670    4               ELSE INPOPR.ORGCHR = ASCBIN(%KV_MVD.TRNTBL$->
     1430     8671    4                 KV$TRNTBL.OTPTRN1$->KV$PRMOTPTRN.CHR(CLR.CHR));
     1431     8672    4               USR_EVT = KV_USR_EVT;
     1432     8673    4               USR_EVT.ID=%KV_USR_EVT_ID_OTP1_CHR;
     1433     8674    4               USR_EVT.PRM=INPOPR.ORGCHR;
     1434     8675    4               CALL KVV$CALUSR_EVT(USR_EVT) ALTRET(ECHOTPLCL);
     1435     8676
     1436     8677        /* The VDH-user output the character.                                         */
     1437     8678
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:55   
     1438     8679    4               %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+1;
     1439     8680    4               %KV_MVD.VRTCLM = %KV_MVD.VRTCLM+1;
     1440     8681    4               IF %KV_SRD.CRT_PST>=%KV_SRD.HI_NONBLN_PST
     1441     8682    5                 AND CLR.CHR~=ASCBIN(' ') THEN DO;
     1442     8683
     1443     8684        /* The characters we're writing are farther down the page than
     1444     8685           the previous farthest.                                                     */
     1445     8686
     1446     8687    5                  %KV_SRD.HI_NONBLN_PST = %KV_SRD.CRT_PST;
     1447     8688    5                  %KV_SRD.HI_NONBLNVRT = '1'B;
     1448     8689    5               END /* IF */;
     1449     8690    4               %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM+1;
     1450     8691    4               %KV_VDI.TMPOTPCHRCNT = %KV_VDI.TMPOTPCHRCNT+1;
     1451     8692    4               %KV_STT.OTPCHRCNT = %KV_STT.OTPCHRCNT+1;
     1452     8693    4               %KV_SSN.OTPCHRCNT = %KV_SSN.OTPCHRCNT+1;
     1453     8694    4            END /* IF */;
     1454     8695    4            ELSE DO;
     1455     8696    4   ECHOTPLCL:
     1456     8697    4               IF NOT %KV_MVD.DISPINPUT
     1457     8698
     1458     8699        /* Were only echoing the position, use hidden output                          */
     1459     8700    4               THEN CALL KVO$OTP1_HDN (CLR.CHR);
     1460     8701    4               ELSE CALL KVO$OTP1_VRT (CLR.CHR);
     1461     8702    4            END /* IF */;
     1462     8703        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:56   
     1463     8704    3         END; ELSE IF %KV_VDI.RE_DSPINP OR CLR.LCLECH THEN DO;
     1464     8705    3            %KV_MVD.VRTCLM = %KV_MVD.VRTCLM+1;
     1465     8706    3            %KV_SRD.VRTPSTOK = '0'B;
     1466     8707    3         END /* IF */;
     1467     8708    2         IF %KV_MVD.HRZSCR AND %KV_SSN.REDRQSPND
     1468     8709    2         THEN IF %KV_MVD.VRTCLM+%KV_MVD.HRZSCRMRG>%KV_MVD.WDT
     1469     8710    2           AND (%KV_SSN.REDBFR.EDTLOWX+%KV_MVD.HRZSCRMRG<=%KV_SSN.REDBFR.NXTX
     1470     8711    2           OR %KV_MVD.VRTCLM>%KV_MVD.WDT)
     1471     8712    2         THEN CALL KVI$SHFDSPPST;
     1472     8713    2      END /* IF */;
     1473     8714    1      BFREDTX = -1;    /* Always moving to the right if char went in the buffer  */
     1474     8715    1   CHKWRDWRP:;
     1475     8716    1      IF %KV_SSN.REDBFR__.DATBYTSIZ>=%KV_STR.MAXRCRBYTSIZ
     1476     8717    1        AND %KV_VDI.INPUNT~=%KV_INPUNT_BLK THEN GOTO ACTBLKRED;
     1477     8718    1      IF %KV_STR.WRDWRPCLM<12 OR NOT %KV_STR.WRDWRP
     1478     8719    1        OR %KV_SSN.REDBFR.EDTLOWX<=%KV_STR.WRDWRPCLM
     1479     8720    1        OR %KV_SSN.REDBFR.EDTLOWX<%KV_SSN.REDBFR.NXTX
     1480     8721    1        OR %KV_SSN.REDBFR.EDTLOWX<=BFREDTX /* must be moving right               */
     1481     8722    1        OR %KV_SSN.REDONL
     1482     8723    1        OR KV$PTR.INPCNDPND.TRN THEN RETURN;
     1483     8724    1      IF SUBSTR (REDBFR_CHR,%KV_STR.WRDWRPCLM,
     1484     8725    1        %KV_SSN.REDBFR.EDTLOWX-%KV_STR.WRDWRPCLM)=' ' THEN RETURN;
     1485     8726        /* (Don't wordwrap on trailing blanks) */
     1486     8727
     1487     8728
     1488     8729        /* Activate on buffer full                                                    */
     1489     8730
     1490     8731    1   ACTBLKRED:;
     1491     8732    1      IF %KV_MVD.ORG=%KV#VD_ORG_UR
     1492     8733    1        OR %KV_MVD.ORG=%KV#VD_ORG_X364 AND %KV_MVD.RCRWRAP
     1493     8734    1        OR %KV_SSN.REDBFR.EDTLOWX=%KV_SSN.REDBFR.NXTX
     1494     8735
     1495     8736        /* Only UR activates if positioned in the middle of the line                  */
     1496     8737
     1497     8738    1      THEN IF %KV_MVD.ORG=%KV#VD_ORG_FORM
     1498     8739    1      THEN CALL KVF$PST (KV_VDH_PST_SPCFRM);
     1499     8740    2      ELSE DO;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:57   
     1500     8741    2         IF %KV_MVD.ORG=%KV#VD_ORG_UR THEN CALL PSTENDRED;
     1501     8742    2         KV@VDH_DAT = KV_VDH_DAT_NRM_NO_ACTCHR;
     1502     8743    2         CALL KVI$ACTRED (KV@VDH_DAT);
     1503     8744    2      END /* IF */;
     1504     8745    1      RETURN;
     1505     8746        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:58   
     1506     8747    1   PSTENDRED: PROC;
     1507     8748
     1508     8749        /* Positions to end of read - but without typing the chars                    */
     1509     8750
     1510     8751    2      IF %KV_SSN.REDBFR.EDTLOWX~=%KV_SSN.REDBFR.NXTX
     1511     8752    3        OR %KV_SSN.REDBFR.DSPLOWX>0 THEN DO;
     1512     8753
     1513     8754        /* If already at the end, nothing to do                                       */
     1514     8755
     1515     8756    3         %KV_SSN.REDBFR.EDTHI_X = %KV_SSN.REDBFR.EDTLOWX;
     1516     8757    3         %KV_SSN.REDBFR__.DATBYTSIZ = %KV_SSN.REDBFR.NXTX-%KV_SSN.REDBFR__.BYTX;
     1517     8758    3         %KV_SSN.REDBFR.EDTLOWX = %KV_SSN.REDBFR.NXTX;
     1518     8759    3         %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.NXTX;
     1519     8760    4         IF NOT %KV_MVD.RETYPOVR THEN DO;
     1520     8761
     1521     8762        /* For hard copy devices, get past the characters                             */
     1522     8763
     1523     8764    4            IF NOT %KV_MVD.DISPINPUT
     1524     8765    4            THEN %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM;
     1525     8766    5            ELSE IF %KV_SRD.HI_NONBLN.LIN>=%KV_SRD.CRT.LIN THEN DO;
     1526     8767    5               %KV_MVD.VRTCLM = (%KV_SRD.HI_NONBLN.LIN-%KV_SRD.CRT.LIN)
     1527     8768    5                 *%KV_SRD.WDT +%KV_SRD.HI_NONBLN.CLM;
     1528     8769    5            END;
     1529     8770    4            ELSE %KV_MVD.VRTCLM = 1;
     1530     8771    4         END; ELSE DO;
     1531     8772    4            CALL KVI$EDTX_TO_VRTCLM (%KV_MVD.VRTCLM);
     1532     8773    4         END /* IF */;
     1533     8774    3         IF %KV_VDI.RE_DSPINP AND %KV_VDI.INPUNT~=%KV_INPUNT_BLK
     1534     8775    3         THEN CALL KVI$RE_DSPINP;
     1535     8776    3         IF %KV_MVD.HRZSCR AND %KV_MVD.VRTCLM>%KV_MVD.WDT
     1536     8777    3         THEN %KV_MVD.VRTCLM = %KV_MVD.WDT+1;
     1537     8778    4         IF %KV_SSN.REDBFR.DSPLOWX~=0 THEN DO;
     1538     8779    4            CALL KVI$SHFTO_DFL;
     1539     8780    4            %KV_MVD.VRTCLM = %KV_MVD.WDT+1;
     1540     8781    4         END;
     1541     8782    3         CALL KVO$PST (KV_VDH_PST_0_VRT);
     1542     8783    3      END /* IF */;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:59   
     1543     8784    2   END /* SUBROUTINE */;
     1544     8785        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:60   
     1545     8786    1   SHFRHT1: PROC ALTRET;
     1546     8787
     1547     8788        /* Shifts the data in REDBFR at BFREDTX 1, 2, or 3 positions to the right */
     1548     8789
     1549     8790    2      SHF.OFFSET = 1;
     1550     8791    2      GOTO SUBCOMMON;
     1551     8792
     1552     8793    2   SHFRHT2: ENTRY ALTRET;
     1553     8794
     1554     8795    2      SHF.OFFSET = 2;
     1555     8796    2      GOTO SUBCOMMON;
     1556     8797
     1557     8798    2   SHFRHT3: ENTRY ALTRET;
     1558     8799
     1559     8800    2      SHF.OFFSET = 3;
     1560     8801
     1561     8802    2   SUBCOMMON:;
     1562     8803
     1563     8804        /* Make sure we don't overflow the requested size */
     1564     8805    2      IF %KV_STR.MAXRCRBYTSIZ<SHF.OFFSET+%KV_SSN.REDBFR__.DATBYTSIZ
     1565     8806    3      THEN IF SHF.OFFSET=1 THEN DO;
     1566     8807
     1567     8808        /* For forms, just shovel the excess out of the field into the bit bucket */
     1568     8809    3         %KV_SSN.REDBFR.NXTX = %KV_SSN.REDBFR.NXTX-1;
     1569     8810    3         %KV_SSN.REDBFR__.DATBYTSIZ = %KV_SSN.REDBFR__.DATBYTSIZ-1;
     1570     8811    3         IF %KV_SSN.REDBFR.NXTX<%KV_SSN.REDBFR.INSMODX
     1571     8812    3         THEN %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.NXTX;
     1572     8813    3      END;
     1573     8814
     1574     8815        /* Otherwise, we have an abnormal condition, necessarily in overstrike mode,
     1575     8816           wherein the BS will fit, but not the character. */
     1576     8817    2      ELSE ALTRETURN;
     1577     8818    3      IF %KV_SSN.REDBFR.NXTX+SHF.OFFSET>%KV_SSN.REDBFR__.BFRBYTSIZ THEN DO;
     1578     8819
     1579     8820        /* The buffer needs to be bigger. */
     1580     8821    4         CALL KVS$GETREDBFR WHENALTRETURN DO;
     1581     8822    4            ALTRETURN;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:61   
     1582     8823    4         END;
     1583     8824    3         REDBFR$ = %KV_SSN.REDBFR__.ADR$;
     1584     8825    3      END;
     1585     8826    2      SHF.CNT = %KV_SSN.REDBFR.NXTX-BFREDTX;
     1586     8827    3      DO WHILE SHF.CNT>%SHF_SIZ;
     1587     8828
     1588     8829        /* Move it a few at a time until we're done. */
     1589     8830    3         SUBSTR(%SHF_CHR,0,%SHF_SIZ) =
     1590     8831    3           SUBSTR(REDBFR_CHR,SHF.CNT+BFREDTX-%SHF_SIZ,%SHF_SIZ);
     1591     8832    3         SUBSTR(REDBFR_CHR,SHF.CNT+BFREDTX+SHF.OFFSET-%SHF_SIZ,%SHF_SIZ) =
     1592     8833    3           SUBSTR(%SHF_CHR,0,%SHF_SIZ);
     1593     8834    3         SHF.CNT = SHF.CNT-%SHF_SIZ;
     1594     8835    3      END;
     1595     8836    2      SUBSTR(%SHF_CHR,0,SHF.CNT) = SUBSTR(REDBFR_CHR,BFREDTX,SHF.CNT);
     1596     8837    2      SUBSTR(REDBFR_CHR,BFREDTX+SHF.OFFSET,SHF.CNT) = SUBSTR(%SHF_CHR,0,SHF.CNT);
     1597     8838
     1598     8839        /* Update EDTHI_X, NXTX, DATBYTSIZ, INSMODX */
     1599     8840    2      %KV_SSN.REDBFR.NXTX = %KV_SSN.REDBFR.NXTX+SHF.OFFSET;
     1600     8841    2      %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.INSMODX+SHF.OFFSET;
     1601     8842    2      %KV_SSN.REDBFR.EDTHI_X = %KV_SSN.REDBFR.EDTHI_X+SHF.OFFSET;
     1602     8843    2      %KV_SSN.REDBFR__.DATBYTSIZ = %KV_SSN.REDBFR__.DATBYTSIZ+SHF.OFFSET;
     1603     8844    2      RETURN;
     1604     8845    2   END /* SUBROUTINE */;
     1605     8846
     1606     8847        /* Probable Altret location for calls to the SHFRHT subroutines */
     1607     8848    1   REDDATLST:;
     1608     8849    1      CALL KVI$INTINPOPRX(%KV_INPOPRX_REDDATLST);
     1609     8850    1      RETURN;
     1610     8851    1   END;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:62   
--  Include file information  --

   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KV_SCODE_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$INPCHR.

   Procedure KVI$INPCHR requires 3557 words for executable code.
   Procedure KVI$INPCHR requires 39 words of local(AUTO) storage.

    No errors detected in file KVI$INPCHR.:E05TSI    .
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:63   

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:64   

 Object Unit name= KVI$INPCHR                                 File name= KVI$INPCHR.:E05TOU
 UTS= JUL 30 '97 02:00:19.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    119     77  KVI$INPCHR
    1   Proc  even  none  3557    DE5  KVI$INPCHR
    2  RoData even  none    25     19  KVI$INPCHR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  KVI$INPCHR
     1      C                  yes      Std        0  KVI$INPCHR_TYPAHD
     1    26E                  yes      Std        0  KVI$INPCHR_INPFNCIMD
     1    27A                  yes      Std        0  KVI$INPCHR_INPFNC
     1    816                  yes      Std        0  KVI$BFRREDCHR
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:65   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KVI$INTINPOPRX
 yes     yes           Std       1 KVV$CALUSR
 yes     yes           Std       1 KVS$GETREDBFR
         yes           Std       1 KVO$OTP1_HDN
         yes           Std       1 KVO$OTP1_VRT
         yes           Std       1 KVF$PST
         yes           Std       1 KVI$INTINPOPR
 yes     yes           Std       1 KVV$CALUSR_EVT
         yes           Std       1 KVI$ACTRED
         yes           Std       1 KVI$SHFDSPPST
         yes           Std       1 KVO$PST
         yes           Std       0 KVI$SCPVRTCLMLOWX
         yes           Std       1 KHD$SCREECH
         yes           Std       1 KVI$EDTX_TO_VRTCLM
         yes           Std       0 KVI$RE_DSPINP
         yes           Std       0 KVI$SHFTO_DFL
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
                       nStd      0 X6C_ACM

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    KV_VDH_DAT_NRM_NO_ACTCHR         r    KV_VDH_DAT_NRM_ACTCHR
     KV_VDH_PST_SPCFRM                     KV_VDH_PST_SPC_VRT                    KV_VDH_PST_WHTSPC
     KV_VDH_PST_0_VRT                 r    KV_NONPSTCHR_WRD                      KV_USR_EXTINPTRN
     KV_USR_EVT                       r    G$ROS$
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:66   


        1        1        /*M* KVI$INPCHR VDH MAIN INPUT CHARACTER PROCESSING ROUTINE                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8
        9        9        KVI$INPCHR: PROC;

      9   1 000000  D380 0000 0000  xent KVI$INPCHR      LNJ,B5   X6A_AUTO_0
          1 000003       0027 0000                       DC       39,0

       10       10
       11       11 S      %INCLUDE KV$GLB;
       12       12 S      %INCLUDE KV$GLBCTX;
       13       13        %INCLUDE KV$INPFNC;
       14      572 S      %INCLUDE KV$INT;
       15      573 S      %INCLUDE KV$USR;
       16      574 S      %INCLUDE KV$VDH;
       17      575 S      %INCLUDE KV$VDO;
       18      576        %INCLUDE KV_GLBASM_E;
       19      594 S      %INCLUDE KV_GLBCNS_E;
       20      595        %INCLUDE KV_ASCCHR_E;
       21      732        %INCLUDE KV_INT;
       22      771        %INCLUDE KV_SCODE_C;
       23      792        %INCLUDE KH_SCREECH_M;
       24      803        %INCLUDE KL_MACRO_C;
       25     4155        %INCLUDE KL_AFCN_C;
       26     4256        %INCLUDE K_ID_E;
       27     4306        %INCLUDE LCP_6;
       28     4497
       29     4498        %K#LYRID_E;
       30     4505        %K#ENTID_E;
       31     4524        %KV_CMPCOD_E;
       32     4538        %KV_DATCTRCHRTYP_E;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:67   
       33     4544        %KV_INPFNC_E;
       34     4558        %KV_INPOPRX_E;
       35     4570        %KV_INPUNT_E;
       36     4575        %KV_TRNTKNTYP_E;
       37     4581        %KV_USR_EVT_ID_E;
       38     4601        %KV_PRTTYP_E;
       39     4608        %KV#VD_ORG_E;
       40     4616
       41     4617        %KV$TRNTBL(STCLASS="BASED(TRNTBL$)");   /*  VDH TRANSLATE ITEM DEFINITIONS    */
       42     4675        %KV$SHRBFR(LAST=",");              /*  VDH MISCELLANEOUS BUFFER DESCRIPTION   */
       43     4707    1          2 BITT(0:0) BIT(1) UNAL;
       44     4708        %KV$REDBFR(STCLASS="BASED(REDBFR$)");   /*  VDH INPUT BUFFER DESCRIPTION      */
       45     4711    1   DCL REDBFR_CHR CHAR(255) BASED(REDBFR$) ALIGNED;
       46     4712    1   DCL 1 REDBFR BASED(REDBFR$) ALIGNED,2 BIN(0:0) UBIN(8) UNAL;
       47     4713        %KV$MRD;                                /*  VDH Master real device            */
       48     4760        %KV$MVD (STCLASS="BASED(MVD$)");        /*  VDH Master virtual device         */
       49     4804        %EQU KV_MVD=CHARTEXT('KV$MVD');
       50     4805        %KV$PTR;                                /*  VDH Pointers, status              */
       51     4848        %KV$SRD;                                /*  VDH Subordinate real device       */
       52     5123        %KV$SSN (STCLASS="BASED(SSN$)");        /*  VDH Session                       */
       53     5202        %EQU KV_SSN=CHARTEXT('KV$SSN');
       54     5203        %KV$STT;                                /*  VDH Statistics                    */
       55     5597        %KV$STR;                                /*  VDH Stream                        */
       56     5684        %KV$USRPRM;                             /*  VDH-user parameters               */
       57     5735        %KV$VDH_PST;                            /*  VDH-position                      */
       58     5809        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       59     5880        %KV$INPFNCTBL(STCLASS="BASED(INPOPR.INPFNCTBL$)");
       60     5964        /* Redefs of INPFNCTBL for using offsets conveniently */
       61     5965    1   DCL KV$INPFNCCHR BASED(INPOPR.INPFNCTBL$) CHAR(255);
       62     5966    1   DCL KV$INPFNCOPRX(0:0) BASED(INPOPR.INPFNCTBL$) SBIN;
       63     5967        %KV$PRMINPTRN;
       64     5976        %KV$SCNINPTRN;
       65     5985        %KV$PRMOTPTRN;
       66     5995
       67     5996        /* This based structure is used to access bit arrays. */
       68     5997    1   DCL 1 Y$BIT BASED ALIGNED, 2 T(0:0) BIT(1) UNAL;
       69     5998
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:68   
       70     5999        /* Structure of a token. */
       71     6000    1   DCL 1 TKN BASED ALIGNED,
       72     6001    1          2 TYP UBIN(10) UNAL,
       73     6002    1          2 TKN UBIN(6) UNAL;
       74     6003
       75     6004    1   DCL KVF$PST ENTRY(1);
       76     6005    1   DCL KVI$EDTX_TO_VRTCLM ENTRY(1);
       77     6006    1   DCL KVI$INTINPOPR ENTRY(1);
       78     6007    1   DCL KVI$INTINPOPRX ENTRY(1);
       79     6008    1   DCL KVI$RE_DSPINP ENTRY;
       80     6009    1   DCL KVI$SCPVRTCLMLOWX ENTRY;
       81     6010    1   DCL KVI$SHFDSPPST ENTRY(1);
       82     6011    1   DCL KVI$SHFTO_DFL ENTRY;
       83     6012    1   DCL KVI$ACTRED ENTRY(1);
       84     6013    1   DCL KVO$OTP1_VRT ENTRY(1);
       85     6014    1   DCL KVO$OTP1_HDN ENTRY(1);
       86     6015    1   DCL KVO$PST ENTRY(1);
       87     6016    1   DCL KVS$GETREDBFR ENTRY(1) ALTRET;
       88     6017    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       89     6018    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       90     6019    1   DCL KHD$SCREECH ENTRY(1);
       91     6020
       92     6021        %KV$VDH_DAT (NAME = KV_VDH_DAT_NRM_NO_ACTCHR, STCLASS = SYMREF READONLY);
       93     6101
       94     6102        %KV$VDH_DAT (NAME = KV_VDH_DAT_NRM_ACTCHR, STCLASS = SYMREF READONLY);
       95     6182
       96     6183        %KV$VDH_PST (NAME=KV_VDH_PST_SPCFRM, STCLASS=SYMREF);
       97     6257        %KV$VDH_PST (NAME=KV_VDH_PST_SPC_VRT, STCLASS=SYMREF);
       98     6331        %KV$VDH_PST (NAME=KV_VDH_PST_VRT, STCLASS=SYMREF);
       99     6405        %KV$VDH_PST (NAME=KV_VDH_PST_WHTSPC, STCLASS=SYMREF);
      100     6479        %KV$VDH_PST (NAME=KV_VDH_PST_0_VRT, STCLASS=SYMREF);
      101     6553
      102     6554        %KV_NONPSTCHR;
      103     6570        %VLP_SCODE (FPTN=KVI_PRMTRN,FCG=KV,MID=I,ERR#=%S$KV_PRMTRN,STCLASS=CONSTANT);
      104     6631        %VLP_SCODE (FPTN=KVI_SCNTRN,FCG=KV,MID=I,ERR#=%S$KV_SCNTRN,STCLASS=CONSTANT);
      105     6692        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:69   
      106     6693        /* Indexed by a character, yields a bit saying the character
      107     6694           has any parity. (this table is here to avoid decisions.)                   */
      108     6695
      109     6696    1   DCL PRT_NON(0:15) BIT(16) CONSTANT INIT( 'FFFF'X*0);
      110     6697
      111     6698        /* Indexed by a character, yields a bit saying the character
      112     6699           has odd parity.                                                            */
      113     6700
      114     6701    1   DCL PRT_ODD(0:15) BIT(16) CONSTANT INIT(
      115     6702    1   '6996'X,'9669'X,'9669'X,'6996'X,'9669'X,'6996'X,'6996'X,'9669'X,
      116     6703    1   '9669'X,'6996'X,'6996'X,'9669'X,'6996'X,'9669'X,'9669'X,'6996'X);
      117     6704
      118     6705        /* Indexed by a character, yields a bit saying the character
      119     6706           has even parity.                                                           */
      120     6707
      121     6708    1   DCL PRT_EVN(0:15) BIT(16) CONSTANT INIT(
      122     6709    1   '9669'X,'6996'X,'6996'X,'9669'X,'6996'X,'9669'X,'9669'X,'6996'X,
      123     6710    1   '6996'X,'9669'X,'9669'X,'6996'X,'9669'X,'6996'X,'6996'X,'9669'X);
      124     6711
      125     6712        /* Indexed by a character, yields a bit saying the character
      126     6713           has 1 (always set) parity.                                                 */
      127     6714
      128     6715    1   DCL PRT_1(0:15) BIT(16) CONSTANT INIT( '0'X*8, 'FFFF'X*8);
      129     6716
      130     6717        /* Indexed by a character, yields a bit saying the character
      131     6718           has 0 (always reset) parity.                                               */
      132     6719
      133     6720    1   DCL PRT_0(0:15) BIT(16) CONSTANT INIT( 'FFFF'X*8, '0'X*8);
      134     6721
      135     6722        /* Indexed by KV$VDI.PRTTYP, yields a pointer to one of the
      136     6723           parity bit tables.                                                         */
      137     6724
      138     6725    1   DCL PRT_$(0:%KV_PRTTYP_ZERO) PTR ALIGNED CONSTANT
      139     6726    1    INIT( ADDR(PRT_NON), ADDR(PRT_ODD), ADDR(PRT_EVN), ADDR(PRT_1), ADDR(PRT_0));
      140     6727        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:70   
      141     6728        %KV_INPOPR (NAME=KV_X364_FNC, TYP=TXT, RED=, DSP=TYPAHD, LAST=YES,
      142     6729         TXT="%CONCAT (BITASC (ASCIIESC), '[A')");
      143     6767        %KV_INPFNCKEY_E;
      144     7029    1   DCL KV_X364_FNCSU(0:19) UBIN BYTE UNAL CONSTANT INIT(
      145     7030    1   %KV_INPFNCKEY_UPARROW, %KV_INPFNCKEY_DNARROW,
      146     7031    1   %KV_INPFNCKEY_RTARROW, %KV_INPFNCKEY_LTARROW,
      147     7032    1   %KV_INPFNCKEY_F1, %KV_INPFNCKEY_F2, %KV_INPFNCKEY_F3, %KV_INPFNCKEY_F4,
      148     7033    1   %KV_INPFNCKEY_SF0, %KV_INPFNCKEY_SF1, %KV_INPFNCKEY_SF2, %KV_INPFNCKEY_SF3,
      149     7034    1   %KV_INPFNCKEY_SF4, %KV_INPFNCKEY_SF5, %KV_INPFNCKEY_SF6, %KV_INPFNCKEY_SF7,
      150     7035    1   %KV_INPFNCKEY_SF8, %KV_INPFNCKEY_SF9*0);
      151     7036    1   DCL KV_X364_FNCS REDEF KV_X364_FNCSU CHAR(20);
      152     7037    1   DCL KV_X364_FNCIDS CHAR(20) CONSTANT INIT('ABCDPQRSpqrstuvwxyzz');
      153     7038    1   DCL X364_CHARS CHAR(8) BASED(INPOPR.INPFNCTBL$);
      154     7039        %EQU OPR_TXT = CHARTEXT('ADDR(KV@VDH_DAT)->KV$INPOPR_TXT');
      155     7040        %KV$INPOPR;
      156     7139        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:71   
      157     7140        /* Auto variables */
      158     7141    1   DCL REDBFR$ PTR;
      159     7142    1   DCL INPFNCSST$ REDEF REDBFR$ PTR;
      160     7143
      161     7144    1   DCL TRNTBL$ PTR;
      162     7145    1   DCL INPFNCUSR$ REDEF TRNTBL$ PTR;
      163     7146    1   DCL 1 SHF REDEF TRNTBL$,
      164     7147        /* Some items for the shift routine */
      165     7148    1          2 OFFSET SBIN,
      166     7149    1          2 CNT SBIN;
      167     7150    1   DCL SSN$ PTR;
      168     7151    1   DCL MVD$ PTR;
      169     7152    1   DCL BFREDTX SBIN;
      170     7153    1   DCL FNCLVL REDEF BFREDTX SBIN;
      171     7154    1   DCL FNCLVLU REDEF BFREDTX UBIN;
      172     7155        /* Group that gets clear'd upon entry                                         */
      173     7156
      174     7157    1   DCL 1 CLR,
      175     7158
      176     7159        /* ESC. Copy of the proper half of KV$PTR.INPCNDPND.ESC */
      177     7160    1          2 ESC(0:1) BIT(1),
      178     7161
      179     7162        /* Array of SPCCHR flags, one per table. */
      180     7163    1          2 SPCCHR,
      181     7164
      182     7165        /* Do profile special character processing */
      183     7166    1             3 PRF BIT(1),
      184     7167
      185     7168        /* Do system special character processing.                                    */
      186     7169    1             3 SST BIT(1),
      187     7170
      188     7171        /* Do user (IMP) special character processing.                                   */
      189     7172    1             3 USR BIT(1),
      190     7173
      191     7174        /* Shift pass. indicates we're trying to identify an escape
      192     7175           identifier, and we've shifted the character from lower case to
      193     7176           upper case after failing to get a match in lower case.                     */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:72   
      194     7177    1          2 SHFPAS BIT(1),
      195     7178
      196     7179        /* System function table pass. Indicates we're using the system table,
      197     7180           not the user one. */
      198     7181    1          2 SSTPAS BIT(1),
      199     7182
      200     7183        /* User table pass. Indicates that we're using the user table. */
      201     7184    1          2 USRPAS BIT(1),
      202     7185
      203     7186        /* Immediate phase processing */
      204     7187    1          2 IMD BIT(1),
      205     7188        %EQU CLR_IMD = '008'X;             /* For efficient initialization of CLR     */
      206     7189
      207     7190        /* We're (still) echoing. */
      208     7191    1          2 ECH BIT(1),
      209     7192
      210     7193        /* The character is already displayed (perhaps erroneously) */
      211     7194
      212     7195    1          2 LCLECH BIT(1),
      213     7196
      214     7197        /* The level(s) pending in ESC may have a 2-char intro, and it's not in yet. */
      215     7198    1          2 INT2 BIT(1),
      216     7199
      217     7200        /* Only one level of re-entrancy for the readonly no-no function */
      218     7201    1          2 REDONL BIT(1),
      219     7202        %EQU CLR_REDONL = '0008'X;
      220     7203
      221     7204    1          2 * BIT(3),                      /* spare bits                         */
      222     7205
      223     7206        /* Item description for the input operator index in local.                    */
      224     7207    1          2 INPOPRX SBIN,
      225     7208
      226     7209        /* Redefed for the buffering phase, to leave space to do shifts. */
      227     7210    1          2 CHR REDEF INPOPRX SBIN;
      228     7211
      229     7212        /* NOTE THAT THE NEXT LINE REQUIRES THAT THE STRUCTURES REFERRED TO
      230     7213           THEREIN BE ALLOCATED IN THE PROPER ORDER, AND NOT REFERENCED IN
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:73   
      231     7214           THE BUFFER-READ-CHAR CODE.  THE SPACE IS USED BY SHFRHT! */
      232     7215        %EQU SHF_SIZ=CHARTEXT(
      233     7216        '(SIZEC(USR_EXTINPTRN)+SIZEC(USR_EVT)+SIZEC(INPOPR)+SIZEC(KV@VDH_DAT))');
      234     7217        %EQU SHF_CHR=CHARTEXT('ADDR(USR_EXTINPTRN)->REDBFR_CHR');
      235     7218        %KV$USR_EXTINPTRN (NAME=USR_EXTINPTRN, STCLASS= "");
      236     7254        %KV$VDH_INTINPOPR (NAME=INPOPR, STCLASS= );
      237     7290        %EQU IX=CHARTEXT('INPOPR.INPOPRX');
      238     7291        %KV$VDH_DAT (NAME = KV@VDH_DAT, STCLASS = AUTO);
      239     7371        %KV$USR_EVT (NAME=USR_EVT, STCLASS=);
      240     7406
      241     7407        %KV$USR_EXTINPTRN (NAME=KV_USR_EXTINPTRN, STCLASS=SYMREF);
      242     7443        %KV$USR_EVT (NAME=KV_USR_EVT, STCLASS=SYMREF);
      243     7478
      244     7479        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:74   
      245     7480        /* Process an input character, doing translation, special
      246     7481           character detection, special character sequence processing,
      247     7482           echoing, input message assembly, etc.                                      */
      248     7483
      249     7484    1      CLR = %CLR_IMD;

   7484   1 000005  8CF0 0080 0000                       LDI      8388608,IMO
          1 000008  8D47 000D                            SDI      CLR,AUTO

      250     7485    1      GOTO COMMON_IMD;

   7485   1 00000A  0F81 000A                            B        s:7489,PREL

      251     7486    1   KVI$INPCHR_TYPAHD: ENTRY;

   7486   1 00000C  D380 0000 0000  xent KVI$INPCHR_TYPA*LNJ,B5   X6A_AUTO_0
          1 00000F       0027 0000                       DC       39,0

      252     7487        /* Same as INPCHR, but no IMmeDiate functions */
      253     7488
      254     7489    1      CLR = '0'B;

   7489   1 000011  8747 000D                            CL       CLR,AUTO
          1 000013  8747 000E                            CL       CLR+1,AUTO

   7489   1                              COMMON_IMD      null
      255     7490    1   COMMON_IMD:;
      256     7491    1      KV$PTR.USRINPFNCINH = '0'B;

   7491   1 000015  EC80 0000 0000  xsym COMMON_IMD      LDB,B6   KV$PTR$
          1 000018  8846 001D                            LBF,'0080'X       29,B6
          1 00001A       0080

      257     7492    1      SSN$ = KV$PTR.SSN$;

   7492   1 00001B  DCC6 0002                            LDB,B5   2,B6
          1 00001D  DFC7 0008                            STB,B5   SSN$,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:75   

      258     7493    1      MVD$ = KV$PTR.MVD$;

   7493   1 00001F  CCC6 0006                            LDB,B4   6,B6
          1 000021  CFC7 000A                            STB,B4   MVD$,AUTO

      259     7494    1      INPOPR.ORGCHR = ASCBIN(%KV_SSN.INPCHR);

   7494   1 000023  E2C5 0029                            LLH,R6   41,B5
          1 000025  EF47 0014                            STR,R6   INPOPR+3,AUTO

      260     7495    1      CLR.ECH = %KV_SSN.INPECH;

   7495   1 000027  D845 0028                            LDR,R5   40,B5
          1 000029  5006                                 SOL,R5   6
          1 00002A  DAC7 000D                            SRM,R5,'0040'X    CLR,AUTO
          1 00002C       0040

      261     7496    1      TRNTBL$ = %KV_MVD.TRNTBL$;

   7496   1 00002D  BCC4 000E                            LDB,B3   14,B4
          1 00002F  BFC7 0006                            STB,B3   TRNTBL$,AUTO

      262     7497    1      INPFNCSST$ = %KV_MVD.SSTINPFNCTBL$;

   7497   1 000031  ACC4 000A                            LDB,B2   10,B4
          1 000033  AFC7 0004                            STB,B2   REDBFR$,AUTO

      263     7498    1      INPOPR.INPFNCTBL$ = INPFNCSST$;

   7498   1 000035  AFC7 0012                            STB,B2   INPOPR+1,AUTO

      264     7499        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:76   
      265     7500    1      IF %KV_VDI.PRTCHK

   7500   1 000037  9C86                                 LDB,B1   ,B6
          1 000038  82C1 001D                            LB,'4000'X        29,B1
          1 00003A       4000
          1 00003B  0581 0034                            BBF      s:7537,PREL
          1 00003D  B2C1 0019                            LLH,R3   25,B1
          1 00003F  ECB0 0000 0056  00                   LDB,B6   PRT_$,R3
          1 000042  B856                                 LDR,R3   R6
          1 000043  82B6                                 LB       ,B6,R3
          1 000044  0501 002B                            BBT      s:7537,PREL

      266     7501    2        AND NOT PRT_$(%KV_VDI.PRTTYP)->Y$BIT.T(INPOPR.ORGCHR) THEN DO;

      267     7502
      268     7503        /* This character has incorrect parity, unless it is part of
      269     7504           an input control string (%KV_INPCTRSTR...) or we are to
      270     7505           interpret it as transparent.                                               */
      271     7506
      272     7507    2         IF INPOPR.ORGCHR~=ASCBIN(KV$TRNTBL.INPCTRSTRINTCHR)

   7507   1 000046  D843 001E                            LDR,R5   30,B3
          1 000048  D570 00FF                            AND,R5   255,IMO
          1 00004A  D953                                 CMR,R5   R3
          1 00004B  0901 0024                            BE       s:7537,PREL
          1 00004D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000050  82C6 001B                            LB,'2000'X        27,B6
          1 000052       2000
          1 000053  0501 001C                            BBT      s:7537,PREL

      273     7508    3           AND NOT KV$PTR.INPCNDPND.CTRSTR THEN DO;

      274     7509
      275     7510        /* This character isn't part of an input control string.                      */
      276     7511
      277     7512    4            IF %KV_VDI.USRRQSDAT.RED THEN DO;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:77   
   7512   1 000055  9C86                                 LDB,B1   ,B6
          1 000056  82C1 001D                            LB,'0010'X        29,B1
          1 000058       0010
          1 000059  0581 0010                            BBF      s:7532,PREL

      278     7513
      279     7514        /* We're doing read processing. we should report the parity
      280     7515           error now. we wait until the read phase in case we're not
      281     7516           in transparent mode on the immediate phase pass but are
      282     7517           put into transparent mode before the read phase pass.                      */
      283     7518
      284     7519    5               IF NOT KV$PTR.INPCNDPND.TRN THEN DO;

   7519   1 00005B  89C6 001B                            CMZ      27,B6
          1 00005D  0801 0012                            BAL      s:7537,PREL

      285     7520
      286     7521        /* We're not in transparent mode, so report the parity error.                 */
      287     7522
      288     7523    5                  CALL KVI$INTINPOPRX (%KV_INPOPRX_PRTERR);

   7523   1 00005F  BB80 0000 0001  02                   LAB,B3   +1
          1 000062  CBF0 0100                            LAB,B4   256,IMO
          1 000064  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPRX
          1 000067       0001                            DC       s:7525,PREL

      289     7524    5               END /* IF */;

      290     7525    4            END; ELSE DO;

   7525   1 000068  0F81 0007                            B        s:7537,PREL

      291     7526
      292     7527        /* We're not doing read processing now. buffer the character
      293     7528           in a type-ahead buffer for later processing. if there is a
      294     7529           parity error, we'll report it when we process the character
      295     7530           out of the type-ahead buffer.                                              */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:78   
      296     7531
      297     7532    4               %KV_SSN.TYPAHD.BFRCHR = '1'B;

   7532   1 00006A  8945 0027                            LBT,'0020'X       39,B5
   7532   1 00006C       0020

      298     7533    4               RETURN;

   7533   1 00006D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      299     7534    4            END /* IF */;
      300     7535    3         END /* IF */;
      301     7536    2      END /* IF */;
      302     7537    2      IF KV$TRNTBL.SPCESC$->Y$BIT.T(INPOPR.ORGCHR) THEN DO;

   7537   1 000070  ECC7 0006                            LDB,B6   TRNTBL$,AUTO
          1 000072  DCC6 0018                            LDB,B5   24,B6
          1 000074  B847 0014                            LDR,R3   INPOPR+3,AUTO
          1 000076  82B5                                 LB       ,B5,R3
          1 000077  0581 006D                            BBF      s:7606,PREL

      303     7538        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:79   
      304     7539
      305     7540        /* This character may require special processing.                             */
      306     7541
      307     7542    3         IF INPOPR.ORGCHR=ASCBIN(KV$TRNTBL.INPCTRSTRINTCHR) THEN DO;

   7542   1 000079  E846 001E                            LDR,R6   30,B6
          1 00007B  E570 00FF                            AND,R6   255,IMO
          1 00007D  E953                                 CMR,R6   R3
          1 00007E  0981 003A                            BNE      s:7589,PREL

      308     7543
      309     7544        /* This character has the same value as the 1st character
      310     7545           in a control string. (control strings are the character
      311     7546           strings used to pass control information from the VDH-user
      312     7547           to VDH via the input buffer.                                               */
      313     7548
      314     7549    4            IF NOT KV$PTR.INPCNDPND.CTRSTR THEN DO;

   7549   1 000080  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 000083  82C4 001B                            LB,'2000'X        27,B4
          1 000085       2000
          1 000086  0501 000C                            BBT      s:7570,PREL

      315     7550
      316     7551        /* The control string mechanism is currently reset, so this
      317     7552           chr is initiating a ctr str.                                               */
      318     7553
      319     7554        /* Set up so that the next chr rcv'd will be interpreted as
      320     7555           the 2nd chr of a ctr str.                                                  */
      321     7556
      322     7557    4               KV$PTR.INPCNDPND.CTRSTR = '1'B;

   7557   1 000088  8944 001B                            LBT,'2000'X       27,B4
   7557   1 00008A       2000

      323     7558    4               %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:80   
   7558   1 00008B  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 00008D  8945 0027                            LBT,'0010'X       39,B5
          1 00008F       0010

      324     7559
      325     7560        /* We're done processing this chr.                                            */
      326     7561
      327     7562    4               RETURN;

   7562   1 000090  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      328     7563    4            END; ELSE DO;

      329     7564
      330     7565        /* The previous chr initiated ctr str processing. this is
      331     7566           the 2nd chr of a ctr str, and it is the special chr that
      332     7567           introduces ctr str's; this means we are to interpret the
      333     7568           pair as a single literal chr rather than a ctr str.                        */
      334     7569
      335     7570    4               KV$PTR.INPCNDPND.CTRSTR = '0'B;

   7570   1 000093  8844 001B                            LBF,'2000'X       27,B4
   7570   1 000095       2000

      336     7571    4               IF %KV_VDI.PRTCHK

   7571   1 000096  DC84                                 LDB,B5   ,B4
          1 000097  82C5 001D                            LB,'4000'X        29,B5
          1 000099       4000
          1 00009A  0581 004A                            BBF      s:7606,PREL
          1 00009C  A2C5 0019                            LLH,R2   25,B5
          1 00009E  BCA0 0000 0056  00                   LDB,B3   PRT_$,R2
          1 0000A1  82B3                                 LB       ,B3,R3
          1 0000A2  0501 0042                            BBT      s:7606,PREL
          1 0000A4  82C5 001D                            LB,'0010'X        29,B5
          1 0000A6       0010
          1 0000A7  0581 003D                            BBF      s:7606,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:81   
          1 0000A9  89C4 001B                            CMZ      27,B4
          1 0000AB  0801 0039                            BAL      s:7606,PREL

      337     7572    4                 AND NOT PRT_$(%KV_VDI.PRTTYP)->Y$BIT.T(INPOPR.ORGCHR)
      338     7573    4                 AND %KV_VDI.USRRQSDAT.RED
      339     7574    5                 AND NOT KV$PTR.INPCNDPND.TRN THEN DO;

      340     7575
      341     7576        /* This character (literal input control string character) has
      342     7577           bad parity, we're not in transparent mode, and we're
      343     7578           in the read phase. report the parity error.                                */
      344     7579
      345     7580    5                  CALL KVI$INTINPOPRX (%KV_INPOPRX_PRTERR);

   7580   1 0000AD  BB80 0000 0001  02                   LAB,B3   +1
          1 0000B0  CBF0 0100                            LAB,B4   256,IMO
          1 0000B2  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPRX
          1 0000B5       0001                            DC       s:7581,PREL

      346     7581    5                  RETURN;

   7581   1 0000B6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      347     7582    5               END /* IF */;
      348     7583    4            END /* IF */;
      349     7584    3         END; ELSE DO;

      350     7585
      351     7586        /* This isn't the character that introduces input control
      352     7587           strings. Call the VDH-user for processing.                                 */
      353     7588
      354     7589    3            USR_EXTINPTRN = KV_USR_EXTINPTRN;

   7589   1 0000B9  8C80 0000 0000  xsym                 LDI      KV_USR_EXTINPTRN
          1 0000BC  8D47 000F                            SDI      USR_EXTINPTRN,AUTO

      355     7590    3            USR_EXTINPTRN.ORGCHR = BINASC(INPOPR.ORGCHR);
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:82   

   7590   1 0000BE  3008                                 SOL,R3   8
          1 0000BF  3068                                 SAR,R3   8
          1 0000C0  BAC7 0010                            SRM,R3,'00FF'X    USR_EXTINPTRN+1,AUTO
          1 0000C2       00FF

      356     7591    3            USR_EXTINPTRN.IMD = CLR.IMD;

   7591   1 0000C3  D847 000D                            LDR,R5   CLR,AUTO
          1 0000C5  5041                                 SOR,R5   1
          1 0000C6  DAC7 000F                            SRM,R5,'0040'X    USR_EXTINPTRN,AUTO
          1 0000C8       0040

      357     7592    3            USR_EXTINPTRN.RED = %KV_VDI.USRRQSDAT.RED;

   7592   1 0000C9  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 0000CC  BC84                                 LDB,B3   ,B4
          1 0000CD  D843 001D                            LDR,R5   29,B3
          1 0000CF  5001                                 SOL,R5   1
          1 0000D0  DAC7 000F                            SRM,R5,'0020'X    USR_EXTINPTRN,AUTO
          1 0000D2       0020

      358     7593    3            USR_EXTINPTRN.SPCESC = '1'B;

   7593   1 0000D3  8947 000F                            LBT,'0080'X       USR_EXTINPTRN,AUTO
   7593   1 0000D5       0080

      359     7594    3            CALL KVV$CALUSR (USR_EXTINPTRN)

   7594   1 0000D6  BBC7 000F                            LAB,B3   USR_EXTINPTRN,AUTO
          1 0000D8  BFC7 0024                            STB,B3   USR_EVT+5,AUTO
          1 0000DA  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 0000DC  CBF0 0100                            LAB,B4   256,IMO
          1 0000DE  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          1 0000E1       0004                            DC       s:7606,PREL

      360     7595    4            WHENRETURN DO;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:83   

      361     7596
      362     7597        /* We're to abort processing of this character. Do no more
      363     7598           processing of it, and go on to the next character in the
      364     7599           buffer.                                                                    */
      365     7600
      366     7601    4               RETURN;

   7601   1 0000E2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      367     7602    4            END /* RETURN */;
      368     7603    3         END /* IF */;

      369     7604    2      END /* IF */;

      370     7605        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:84   
      371     7606    1      IF KV$PTR.INPCNDPND.TRN AND NOT KV$PTR.INPCNDPND.CTRSTR

   7606   1 0000E5  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000E8  89C6 001B                            CMZ      27,B6
          1 0000EA  0881 0010                            BAGE     s:7617,PREL
          1 0000EC  82C6 001B                            LB,'2000'X        27,B6
          1 0000EE       2000
          1 0000EF  0501 000B                            BBT      s:7617,PREL

      372     7607    1      THEN INPOPR.ACKCHR = BITBIN (KV$TRNTBL.INPCHRMSK & BINBIT(INPOPR.ORGCHR,16));

   7607   1 0000F1  DCC7 0006                            LDB,B5   TRNTBL$,AUTO
          1 0000F3  E847 0014                            LDR,R6   INPOPR+3,AUTO
          1 0000F5  E545 001A                            AND,R6   26,B5
          1 0000F7  EF47 0016                            STR,R6   INPOPR+5,AUTO
          1 0000F9  0F81 008F                            B        s:7697,PREL

      373     7608
      374     7609    2      ELSE DO;

      375     7610
      376     7611        /* We're not in transparent mode, so translate the chr.                       */
      377     7612
      378     7613        /* Perform the translation with the primary table.                            */
      379     7614
      380     7615        /* Strip parity.                                                              */
      381     7616
      382     7617    2         INPOPR.ORGCHR = BITBIN (KV$TRNTBL.INPCHRMSK & BINBIT(INPOPR.ORGCHR,16));

   7617   1 0000FB  DCC7 0006                            LDB,B5   TRNTBL$,AUTO
          1 0000FD  E847 0014                            LDR,R6   INPOPR+3,AUTO
          1 0000FF  E545 001A                            AND,R6   26,B5
          1 000101  EF47 0014                            STR,R6   INPOPR+3,AUTO

      383     7618    2         INPOPR.ACKCHR = KV$TRNTBL.INPTRN1$->KV$PRMINPTRN.CHR(INPOPR.ORGCHR);

   7618   1 000103  CCC5 0008                            LDB,B4   8,B5
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:85   
          1 000105  B856                                 LDR,R3   R6
          1 000106  D2B4                                 LLH,R5   ,B4,R3
          1 000107  DF47 0016                            STR,R5   INPOPR+5,AUTO

      384     7619    3         IF KV$TRNTBL.INPTKN$->Y$BIT.T(INPOPR.ORGCHR) THEN DO;

   7619   1 000109  CCC5 0016                            LDB,B4   22,B5
          1 00010B  82B4                                 LB       ,B4,R3
          1 00010C  0581 0076                            BBF      s:7694,PREL

      385     7620
      386     7621    4            DO CASE (ADDR(INPOPR.ACKCHR)->TKN.TYP);

   7621   1 00010E  A847 0016                            LDR,R2   INPOPR+5,AUTO
          1 000110  2046                                 SOR,R2   6
          1 000111  2D03                                 CMV,R2   3
          1 000112  0281 005C                            BGE      s:7682,PREL
          1 000114  9820 0000 011A  01                   LDR,R1   s:7621+12,R2
          1 000117  8390 0000 011D  01                   JMP      s:7627,R1
          1 00011A       000F                            DC       s:7635,PREL
          1 00011B       0052                            DC       s:7682,PREL
          1 00011C       0000                            DC       s:7627,PREL

      387     7622
      388     7623    4            CASE (%KV_TRNTKNTYP_INPFNC_NO_TRN);

      389     7624
      390     7625        /* INPFNC entry in primary table, no translation needed, just get the INPOPR  */
      391     7626
      392     7627    4               CLR.INPOPRX = ADDR(INPOPR.ACKCHR)->TKN.TKN+KV$INPFNCTBL.INPOPROFS;

   7627   1 00011D  BCC7 0012                            LDB,B3   INPOPR+1,AUTO
          1 00011F  C847 0016                            LDR,R4   INPOPR+5,AUTO
          1 000121  C570 003F                            AND,R4   63,IMO
          1 000123  CA43 002C                            ADD,R4   44,B3
          1 000125  CF47 000E                            STR,R4   CLR+1,AUTO

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:86   
      393     7628    4               INPOPR.ACKCHR = INPOPR.ORGCHR;

   7628   1 000127  D853                                 LDR,R5   R3
          1 000128  DF47 0016                            STR,R5   INPOPR+5,AUTO
          1 00012A  0F81 004D                            B        s:7688,PREL

      394     7629        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:87   
      395     7630    4            CASE (%KV_TRNTKNTYP_NXTTBL);

      396     7631
      397     7632        /* NXTTBL entry in primary table.
      398     7633         INPOPR.ACKCHR contains the index into the secondary table.
              7633           */
      399     7634
      400     7635    5               IF NOT KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.TKNTBL(INPOPR.ACKCHR) THEN DO;

   7635   1 00012C  BCC5 000A                            LDB,B3   10,B5
          1 00012E  B855                                 LDR,R3   R5
          1 00012F  82B3                                 LB       ,B3,R3
          1 000130  0501 0007                            BBT      s:7642,PREL

      401     7636
      402     7637        /* NRMTRN entry in secondary table.                                           */
      403     7638
      404     7639    5                  INPOPR.ACKCHR = KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.CHR(INPOPR.ACKCHR);

   7639   1 000132  3E08                                 ADV,R3   8
          1 000133  B2B3                                 LLH,R3   ,B3,R3
          1 000134  BF47 0016                            STR,R3   INPOPR+5,AUTO

      405     7640    5               END /* IF */;

   7640   1 000136  0F81 0041                            B        s:7688,PREL

      406     7641    5               ELSE DO;

      407     7642    5                  CLR.INPOPRX = KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.CHR(INPOPR.ACKCHR);

   7642   1 000138  3E08                                 ADV,R3   8
          1 000139  C2B3                                 LLH,R4   ,B3,R3
          1 00013A  CF47 000E                            STR,R4   CLR+1,AUTO

      408     7643
      409     7644    6                  DO CASE (ADDR(CLR.INPOPRX)->TKN.TYP);
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:88   

   7644   1 00013C  B847 000E                            LDR,R3   CLR+1,AUTO
          1 00013E  3046                                 SOR,R3   6
          1 00013F  3D04                                 CMV,R3   4
          1 000140  0281 0019                            BGE      s:7667,PREL
          1 000142  A830 0000 0148  01                   LDR,R2   s:7644+12,R3
          1 000145  83A0 0000 014C  01                   JMP      s:7651,R2
          1 000148       000E                            DC       s:7667,PREL
          1 000149       000E                            DC       s:7667,PREL
          1 00014A       0000                            DC       s:7651,PREL
          1 00014B       0005                            DC       s:7657,PREL

      410     7645
      411     7646    6                  CASE (%KV_TRNTKNTYP_INPFNC_NO_TRN);

      412     7647
      413     7648        /* INPFNC entry in secondary table.
      414     7649           no translation needed.                                                     */
      415     7650
      416     7651    6                     INPOPR.ACKCHR = INPOPR.ORGCHR;

   7651   1 00014C  D856                                 LDR,R5   R6
          1 00014D  DF47 0016                            STR,R5   INPOPR+5,AUTO
          1 00014F  0F81 0013                            B        s:7670,PREL

      417     7652
      418     7653    6                  CASE (%KV_TRNTKNTYP_INPFNC);

      419     7654
      420     7655        /* INPFNC entry in secondary table.                                           */
      421     7656
      422     7657    6                    INPOPR.ACKCHR = KV$TRNTBL.INPTRN2$->KV$SCNINPTRN.CHR(INPOPR.ACKCHR
              7657                              +1);

   7657   1 000151  BCC5 000A                            LDB,B3   10,B5
          1 000153  9855                                 LDR,R1   R5
          1 000154  1E09                                 ADV,R1   9
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:89   
          1 000155  D293                                 LLH,R5   ,B3,R1
          1 000156  DF47 0016                            STR,R5   INPOPR+5,AUTO
          1 000158  0F81 000A                            B        s:7670,PREL

      423     7658    6                  CASE(ELSE);

      424     7659
      425     7660        /* Secondary table doesn't contain NRMTRN or INPFNC
      426     7661           entry.                                                                     */
      427     7662
      428     7663        /*S* SCREECH_CODE: KVI-S$KV_SCNTRN
      429     7664             MESSAGE: Error in secondary input translate table.                       */
      430     7665                          %KH$SCREECH (COD=KVI_SCNTRN);

   7667   1 00015A  BB80 0000 0003  02                   LAB,B3   +3
          1 00015D  CBF0 0100                            LAB,B4   256,IMO
          1 00015F  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000162       0001                            DC       s:7670,PREL

      431     7669    6                  END /* CASE */;

      432     7670    5                  CLR.INPOPRX = ADDR(CLR.INPOPRX)->TKN.TKN+KV$INPFNCTBL.INPOPROFS;

   7670   1 000163  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 000165  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000167  E570 003F                            AND,R6   63,IMO
          1 000169  EA46 002C                            ADD,R6   44,B6
          1 00016B  EF47 000E                            STR,R6   CLR+1,AUTO

      433     7671    5               END /* ELSE DO */;

   7671   1 00016D  0F81 000A                            B        s:7688,PREL

      434     7672        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:90   
      435     7673    4            CASE(ELSE);

      436     7674
      437     7675        /* Primary table doesn't contain NRMTRN, NXTTBL, or
      438     7676           INPFNC (no translation needed) entry.                                      */
      439     7677
      440     7678        /*S* SCREECH_CODE: KVI-S$KV_PRMTRN
      441     7679             MESSAGE: Error in primary input translate table.                         */
      442     7680                    %KH$SCREECH (COD=KVI_PRMTRN);

   7682   1 00016F  BB80 0000 0005  02                   LAB,B3   +5
          1 000172  CBF0 0100                            LAB,B4   256,IMO
          1 000174  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000177       0001                            DC       s:7688,PREL

      443     7684    4            END /* CASE */;

      444     7685
      445     7686        /* No INPFNC if the INPFNC table don't say so. */
      446     7687
      447     7688    4            IF NOT KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR) THEN DO;

   7688   1 000178  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 00017A  DBC6 000B                            LAB,B5   11,B6
          1 00017C  B847 0016                            LDR,R3   INPOPR+5,AUTO
          1 00017E  82B5                                 LB       ,B5,R3
          1 00017F  0501 0003                            BBT      s:7694,PREL

      448     7689    4               CLR.INPOPRX = 0;

   7689   1 000181  8747 000E                            CL       CLR+1,AUTO

      449     7690    4            END;

      450     7691    3         END /* IF */;

      451     7692
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:91   
      452     7693        /* Restore the original character's parity bit */
      453     7694    2         INPOPR.ORGCHR = ASCBIN(%KV_SSN.INPCHR);

   7694   1 000183  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000185  E2C6 0029                            LLH,R6   41,B6
          1 000187  EF47 0014                            STR,R6   INPOPR+3,AUTO

      454     7695    2      END /* IF NOT TRN */;

      455     7696        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:92   
      456     7697    2      IF %KV_MRD.LOCALECHO THEN DO;

   7697   1 000189  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00018C  DCC6 0008                            LDB,B5   8,B6
          1 00018E  82C5 0018                            LB,'0040'X        24,B5
          1 000190       0040
          1 000191  0581 00C2                            BBF      s:7748,PREL

      457     7698
      458     7699        /* Local-echo is in effect, reflect the position done by the character.
      459     7700           (and dont echo it)                                                         */
      460     7701
      461     7702    2         CLR.ECH = '0'B;

   7702   1 000193  8847 000D                            LBF,'0040'X       CLR,AUTO
   7702   1 000195       0040

      462     7703    3         DO SELECT (INPOPR.ACKCHR);

   7703   1 000196  E847 0016                            LDR,R6   INPOPR+5,AUTO
          1 000198  E970 000A                            CMR,R6   10,IMO
          1 00019A  0801 0008                            BAL      s:7703+13,PREL
          1 00019C  0901 0030                            BE       s:7714,PREL
          1 00019E  6D0D                                 CMV,R6   13
          1 00019F  0981 003E                            BNE      s:7720,PREL
          1 0001A1  0F81 0016                            B        s:7708,PREL
          1 0001A3  6D08                                 CMV,R6   8
          1 0001A4  0981 0039                            BNE      s:7720,PREL
          1 0001A6  0F81 0001                            B        s:7705,PREL

      463     7704    3            SELECT (%BITBIN(ASCIIBS));

      464     7705    3            IF %KV_MRD.DEVICEBS AND %KV_MRD.DVCCLM>1

   7705   1 0001A8  DCC6 0008                            LDB,B5   8,B6
          1 0001AA  82C5 0016                            LB,'0001'X        22,B5
          1 0001AC       0001
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:93   
          1 0001AD  0581 00A6                            BBF      s:7748,PREL
          1 0001AF  D845 001E                            LDR,R5   30,B5
          1 0001B1  5D01                                 CMV,R5   1
          1 0001B2  0381 00A1                            BLE      s:7748,PREL

      465     7706    3            THEN %KV_MRD.DVCCLM = %KV_MRD.DVCCLM-1;

   7706   1 0001B4  88C5 001E                            DEC      30,B5
          1 0001B6  0F81 009D                            B        s:7748,PREL

      466     7707    3            SELECT (%BITBIN(ASCIICR));

      467     7708    3            IF %KV_MRD.DEVICECR THEN %KV_MRD.DVCCLM = 1;

   7708   1 0001B8  DCC6 0008                            LDB,B5   8,B6
          1 0001BA  89C5 0017                            CMZ      23,B5
          1 0001BC  0881 0006                            BAGE     s:7709,PREL

   7708   1 0001BE  5C01                                 LDV,R5   1
          1 0001BF  DF45 001E                            STR,R5   30,B5
          1 0001C1  0F81 0092                            B        s:7748,PREL

      468     7709    4            ELSE IF %KV_MRD.CRISNL THEN DO;

   7709   1 0001C3  82C5 0017                            LB,'2000'X        23,B5
   7709   1 0001C5       2000
          1 0001C6  0581 008D                            BBF      s:7748,PREL

      469     7710    4               %KV_MRD.DVCCLM = 1;

   7710   1 0001C8  5C01                                 LDV,R5   1
          1 0001C9  DF45 001E                            STR,R5   30,B5

      470     7711    4               GOTO LCLNL;

   7711   1 0001CB  0F81 005A                            B        s:7736,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:94   
      471     7712    4            END /* IF */;
      472     7713    3            SELECT (%BITBIN(ASCIILF));

      473     7714    3            IF %KV_MRD.DEVICELF THEN GOTO LCLNL;

   7714   1 0001CD  DCC6 0008                            LDB,B5   8,B6
          1 0001CF  82C5 0017                            LB,'4000'X        23,B5
          1 0001D1       4000
          1 0001D2  0501 0053                            BBT      s:7736,PREL

      474     7715    4            IF %KV_MRD.LFISNL THEN DO;

   7715   1 0001D4  82C5 0017                            LB,'0100'X        23,B5
   7715   1 0001D6       0100
          1 0001D7  0581 007C                            BBF      s:7748,PREL

      475     7716    4               %KV_MRD.DVCCLM = 1;

   7716   1 0001D9  5C01                                 LDV,R5   1
          1 0001DA  DF45 001E                            STR,R5   30,B5

      476     7717    4               GOTO LCLNL;

   7717   1 0001DC  0F81 0049                            B        s:7736,PREL

      477     7718    4            END;
      478     7719    3            SELECT (ELSE);

      479     7720    4         IF INPOPR.ACKCHR>=ASCBIN(' ') AND INPOPR.ACKCHR<BITBIN(%ASCIIDEL) THEN DO;

   7720   1 0001DE  6D20                                 CMV,R6   32
          1 0001DF  0801 0074                            BAL      s:7748,PREL
          1 0001E1  6D7F                                 CMV,R6   127
          1 0001E2  0881 0071                            BAGE     s:7748,PREL

      480     7721    4            IF INPOPR.ACKCHR>ASCBIN(' ')

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:95   
   7721   1 0001E4  6D20                                 CMV,R6   32
          1 0001E5  0A81 0019                            BALE     s:7725,PREL
          1 0001E7  DCC6 000A                            LDB,B5   10,B6
          1 0001E9  CCC6 0008                            LDB,B4   8,B6
          1 0001EB  D845 0018                            LDR,R5   24,B5
          1 0001ED  5801 0005                            BLZ,R5   s:7721+15,PREL
          1 0001EF  D944 001E                            CMR,R5   30,B4
          1 0001F1  0281 000D                            BGE      s:7725,PREL
          1 0001F3  C844 001D                            LDR,R4   29,B4
          1 0001F5  C245 0019                            SUB,R4   25,B5
          1 0001F7  C945 0017                            CMR,R4   23,B5
          1 0001F9  0981 0005                            BNE      s:7725,PREL

      481     7722    4              AND %KV_SRD.HI_NONBLN.CLM<%KV_MRD.DVCCLM
      482     7723    4              AND %KV_SRD.HI_NONBLN.LIN=%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS
      483     7724    4            THEN %KV_SRD.HI_NONBLN.CLM=%KV_MRD.DVCCLM;

   7724   1 0001FB  D844 001E                            LDR,R5   30,B4
          1 0001FD  DF45 0018                            STR,R5   24,B5

      484     7725    4            CLR.LCLECH='1'B;

   7725   1 0001FF  8947 000D                            LBT,'0020'X       CLR,AUTO
   7725   1 000201       0020

      485     7726    4            IF %KV_MRD.DVCCLM<%KV_MRD.WDT

   7726   1 000202  DCC6 0008                            LDB,B5   8,B6
          1 000204  D845 001E                            LDR,R5   30,B5
          1 000206  D945 000B                            CMR,R5   11,B5
          1 000208  0281 0005                            BGE      s:7728,PREL

      486     7727    4            THEN %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+1;

   7727   1 00020A  8AC5 001E                            INC      30,B5
          1 00020C  0F81 0047                            B        s:7748,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:96   
      487     7728    5            ELSE IF %KV_MRD.AUTONL THEN DO;

   7728   1 00020E  82C5 0017                            LB,'1000'X        23,B5
   7728   1 000210       1000
          1 000211  0581 0006                            BBF      s:7731,PREL

      488     7729    5               %KV_MRD.DVCCLM = 1;

   7729   1 000213  5C01                                 LDV,R5   1
          1 000214  DF45 001E                            STR,R5   30,B5

      489     7730    5               GOTO LCLNL;

   7730   1 000216  0F81 000F                            B        s:7736,PREL

      490     7731    4            END; ELSE IF %KV_MRD.LIMBOCLM

   7731   1 000218  82C5 0018                            LB,'0080'X        24,B5
   7731   1 00021A       0080
          1 00021B  0581 0038                            BBF      s:7748,PREL

      491     7732    4            THEN IF %KV_MRD.DVCCLM=%KV_MRD.WDT

   7732   1 00021D  0981 0005                            BNE      s:7735,PREL

      492     7733    4            THEN %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+1;

   7733   1 00021F  8AC5 001E                            INC      30,B5
          1 000221  0F81 0032                            B        s:7748,PREL

      493     7734    5            ELSE DO;

      494     7735    5               %KV_MRD.DVCCLM = 2;

   7735   1 000223  5C02                                 LDV,R5   2
          1 000224  DF45 001E                            STR,R5   30,B5

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:97   
      495     7736    5   LCLNL:      IF %KV_MRD.DVCLIN~=%KV_MRD.LNG

   7736   1 000226  DCC6 0008            LCLNL           LDB,B5   8,B6
          1 000228  D2C5 0015                            LLH,R5   21,B5
          1 00022A  D945 001D                            CMR,R5   29,B5
          1 00022C  0901 0005                            BE       s:7738,PREL

      496     7737    5               THEN %KV_MRD.DVCLIN = %KV_MRD.DVCLIN+1;

   7737   1 00022E  8AC5 001D                            INC      29,B5
          1 000230  0F81 0005                            B        s:7739,PREL

      497     7738    5               ELSE %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS-1;

   7738   1 000232  CCC6 000A                            LDB,B4   10,B6
          1 000234  88C4 0019                            DEC      25,B4

      498     7739    5               IF %KV_SRD.HI_NONBLN.LIN<%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS

   7739   1 000236  DCC6 000A                            LDB,B5   10,B6
          1 000238  CCC6 0008                            LDB,B4   8,B6
          1 00023A  D844 001D                            LDR,R5   29,B4
          1 00023C  D245 0019                            SUB,R5   25,B5
          1 00023E  D945 0017                            CMR,R5   23,B5
          1 000240  0A81 0013                            BALE     s:7748,PREL
          1 000242  6D20                                 CMV,R6   32
          1 000243  0A81 0010                            BALE     s:7748,PREL

      499     7740    6                 AND INPOPR.ACKCHR>ASCBIN(' ') THEN DO;

      500     7741    6                  %KV_SRD.HI_NONBLN.LIN=%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS;

   7741   1 000245  D844 001D                            LDR,R5   29,B4
          1 000247  D245 0019                            SUB,R5   25,B5
          1 000249  DF45 0017                            STR,R5   23,B5

      501     7742    6                  %KV_SRD.HI_NONBLN.CLM=%KV_MRD.DVCCLM-1;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:98   

   7742   1 00024B  DCC6 000A                            LDB,B5   10,B6
          1 00024D  CCC6 0008                            LDB,B4   8,B6
          1 00024F  D844 001E                            LDR,R5   30,B4
          1 000251  5EFF                                 ADV,R5   -1
          1 000252  DF45 0018                            STR,R5   24,B5

      502     7743    6               END;

      503     7744    5            END /* IF */;

      504     7745    4         END /* SELECT */;

      505     7746    3         END /* IF */;

      506     7747    2      END /* IF */;

      507     7748    1      INPFNCUSR$ = %KV_MVD.USRINPFNCTBL$;

   7748   1 000254  DCC7 000A                            LDB,B5   MVD$,AUTO
          1 000256  CCC5 0008                            LDB,B4   8,B5
          1 000258  CFC7 0006                            STB,B4   TRNTBL$,AUTO

      508     7749    1      INPOPR.INPFNCTBL$ = %KV_MRD.PRFINPFNCTBL$;

   7749   1 00025A  BCC6 0008                            LDB,B3   8,B6
          1 00025C  ACC3 0006                            LDB,B2   6,B3
          1 00025E  AFC7 0012                            STB,B2   INPOPR+1,AUTO

      509     7750    1      CLR.INT2 = KV$PTR.INPCNDPND.ESC.INT2;

   7750   1 000260  E846 001B                            LDR,R6   27,B6
          1 000262  6003                                 SOL,R6   3
          1 000263  EAC7 000D                            SRM,R6,'0010'X    CLR,AUTO
          1 000265       0010

      510     7751    1      CLR.ESC = KV$PTR.INPCNDPND.ESC.PRF;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:99   

   7751   1 000266  E846 001B                            LDR,R6   27,B6
          1 000268  6008                                 SOL,R6   8
          1 000269  EAC7 000D                            SRM,R6,'C000'X    CLR,AUTO
          1 00026B       C000

      511     7752    1      GOTO SUBCOMMON;

   7752   1 00026C  0F81 0041                            B        s:7779,PREL

      512     7753        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:100  
      513     7754    1   KVI$INPCHR_INPFNCIMD: ENTRY;

   7754   1 00026E  D380 0000 0000  xent KVI$INPCHR_INPF*LNJ,B5   X6A_AUTO_0
          1 000271       0027 0000                       DC       39,0

      514     7755
      515     7756        /* Process an input character at immediate time, but a result of an input
      516     7757           function.  (IMP I IN). */
      517     7758
      518     7759    1      CLR = %CLR_IMD;

   7759   1 000273  8CF0 0080 0000                       LDI      8388608,IMO
          1 000276  8D47 000D                            SDI      CLR,AUTO

      519     7760    1      GOTO Y$INPCHR_INPFNC;

   7760   1 000278  0F81 000A                            B        s:7768,PREL

      520     7761
      521     7762    1   KVI$INPCHR_INPFNC: ENTRY;

   7762   1 00027A  D380 0000 0000  xent KVI$INPCHR_INPF*LNJ,B5   X6A_AUTO_0
          1 00027D       0027 0000                       DC       39,0

      522     7763
      523     7764        /* Process an input character, doing special
      524     7765           character detection, special character sequence processing,
      525     7766           echoing, input message assembly, etc.                                      */
      526     7767
      527     7768    1      CLR = '0'B;

   7768   1 00027F  8747 000D                            CL       CLR,AUTO
          1 000281  8747 000E                            CL       CLR+1,AUTO

   7768   1                              Y$INPCHR_INPFNC null
      528     7769    1   Y$INPCHR_INPFNC:;
      529     7770    1      SSN$ = KV$PTR.SSN$;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:101  

   7770   1 000283  EC80 0000 0000  xsym Y$INPCHR_INPFNC LDB,B6   KV$PTR$
          1 000286  DCC6 0002                            LDB,B5   2,B6
          1 000288  DFC7 0008                            STB,B5   SSN$,AUTO

      530     7771    1      MVD$ = KV$PTR.MVD$;

   7771   1 00028A  CCC6 0006                            LDB,B4   6,B6
          1 00028C  CFC7 000A                            STB,B4   MVD$,AUTO

      531     7772    1      INPOPR.ORGCHR = ASCBIN(%KV_SSN.INPCHR);

   7772   1 00028E  E2C5 0029                            LLH,R6   41,B5
          1 000290  EF47 0014                            STR,R6   INPOPR+3,AUTO

      532     7773    1      CLR.ECH = %KV_SSN.INPECH;

   7773   1 000292  D845 0028                            LDR,R5   40,B5
          1 000294  5006                                 SOL,R5   6
          1 000295  DAC7 000D                            SRM,R5,'0040'X    CLR,AUTO
          1 000297       0040

      533     7774    1      INPFNCUSR$ = ADDR(NIL);

   7774   1 000298  BB80 0000 0000                       LAB,B3   0
          1 00029B  BFC7 0006                            STB,B3   TRNTBL$,AUTO

      534     7775    1      INPOPR.INPFNCTBL$ = INPFNCUSR$;

   7775   1 00029D  BFC7 0012                            STB,B3   INPOPR+1,AUTO

      535     7776    1      CLR.INT2 = KV$PTR.INPCNDPND.ESC.INT2;

   7776   1 00029F  D846 001B                            LDR,R5   27,B6
          1 0002A1  5003                                 SOL,R5   3
          1 0002A2  DAC7 000D                            SRM,R5,'0010'X    CLR,AUTO
          1 0002A4       0010
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:102  

      536     7777    1      KV$PTR.USRINPFNCINH = '1'B;

   7777   1 0002A5  8946 001D                            LBT,'0080'X       29,B6
   7777   1 0002A7       0080

      537     7778    1      INPOPR.ACKCHR = INPOPR.ORGCHR;

   7778   1 0002A8  EF47 0016                            STR,R6   INPOPR+5,AUTO

      538     7779    1      INPFNCSST$ = %KV_MVD.SSTINPFNCTBL$;

   7779   1 0002AA  ACC4 000A                            LDB,B2   10,B4
          1 0002AC  AFC7 0004                            STB,B2   REDBFR$,AUTO

   7779   1                              SUBCOMMON       null
      539     7780        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:103  
      540     7781    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      541     7782
      542     7783    1      IF CLR.INPOPRX=0 AND INPFNCSST$~=ADDR(NIL)

   7783   1 0002AE  E847 000E            SUBCOMMON       LDR,R6   CLR+1,AUTO
          1 0002B0  6981 0011                            BNEZ,R6  s:7794,PREL
          1 0002B2  8DC7 0004                            CMN      REDBFR$,AUTO
          1 0002B4  0901 000D                            BE       s:7794,PREL

      543     7784
      544     7785        /* If we detected a system input function table special character
      545     7786           when doing the translation. don't do condition-pending
      546     7787           processing (special character processing) unless there is
      547     7788           some other reason for doing it. we don't want to defeat
      548     7789           the accelerator mechanism built into the translate tables.                 */
      549     7790
      550     7791    1      THEN IF INPFNCSST$->KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)

   7791   1 0002B6  ECC7 0004                            LDB,B6   REDBFR$,AUTO
          1 0002B8  DBC6 000B                            LAB,B5   11,B6
          1 0002BA  B847 0016                            LDR,R3   INPOPR+5,AUTO
          1 0002BC  82B5                                 LB       ,B5,R3
          1 0002BD  0581 0004                            BBF      s:7794,PREL

      551     7792        /*N* When PL6 can do it right, CLR.SSTSPCCHR=INPFNCTBL.SPCCHR(CHR) */
      552     7793    1      THEN CLR.SPCCHR.SST = '1'B;

   7793   1 0002BF  8947 000D                            LBT,'1000'X       CLR,AUTO
   7793   1 0002C1       1000

      553     7794    1      IF INPFNCUSR$~=ADDR(NIL)

   7794   1 0002C2  8DC7 0006                            CMN      TRNTBL$,AUTO
          1 0002C4  0901 000D                            BE       s:7797,PREL

      554     7795    1      THEN IF INPFNCUSR$->KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:104  
   7795   1 0002C6  ECC7 0006                            LDB,B6   TRNTBL$,AUTO
          1 0002C8  DBC6 000B                            LAB,B5   11,B6
          1 0002CA  B847 0016                            LDR,R3   INPOPR+5,AUTO
          1 0002CC  82B5                                 LB       ,B5,R3
          1 0002CD  0581 0004                            BBF      s:7797,PREL

      555     7796    1      THEN CLR.SPCCHR.USR = '1'B;

   7796   1 0002CF  8947 000D                            LBT,'0800'X       CLR,AUTO
   7796   1 0002D1       0800

      556     7797    1      IF INPOPR.INPFNCTBL$=ADDR(NIL) THEN CLR.USRPAS = '1'B;

   7797   1 0002D2  8DC7 0012                            CMN      INPOPR+1,AUTO
          1 0002D4  0981 0006                            BNE      s:7800,PREL

   7797   1 0002D6  8947 000D                            LBT,'0100'X       CLR,AUTO
   7797   1 0002D8       0100
          1 0002D9  0F81 000D                            B        s:7802,PREL

      557     7798        /* If there's no profile table, start INPFNCSRC with the user table. */
      558     7799
      559     7800    1      ELSE IF KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)

   7800   1 0002DB  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 0002DD  DBC6 000B                            LAB,B5   11,B6
          1 0002DF  B847 0016                            LDR,R3   INPOPR+5,AUTO
          1 0002E1  82B5                                 LB       ,B5,R3
          1 0002E2  0581 0004                            BBF      s:7802,PREL

      560     7801    1      THEN CLR.SPCCHR.PRF = '1'B;

   7801   1 0002E4  8947 000D                            LBT,'2000'X       CLR,AUTO
   7801   1 0002E6       2000

      561     7802    2      IF NOT KV$PTR.INPCNDFLG.BITS AND NOT CLR.SPCCHR THEN DO;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:105  
   7802   1 0002E7  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0002EA  D846 001B                            LDR,R5   27,B6
          1 0002EC  5981 000E                            BNEZ,R5  s:7819,PREL
          1 0002EE  82C7 000D                            LB,'3800'X        CLR,AUTO
          1 0002F0       3800
          1 0002F1  0501 0009                            BBT      s:7819,PREL

      562     7803        /* The character doesn't begin or continue an input function sequence,
      563     7804           or else it's one that is accelerated through the translate table.
      564     7805           In the latter case, the function table pointer needs correction.  */
      565     7806
      566     7807    2         KV$PTR.INPCNDPND.OPRX = 0;        /* No count for SPCCHRs               */

   7807   1 0002F3  8746 001C                            CL       28,B6

      567     7808    2         INPOPR.INPFNCTBL$ = INPFNCSST$;

   7808   1 0002F5  DCC7 0004                            LDB,B5   REDBFR$,AUTO
          1 0002F7  DFC7 0012                            STB,B5   INPOPR+1,AUTO

      568     7809    2      END;

   7809   1 0002F9  0F81 0473                            B        s:8251,PREL

      569     7810    2      ELSE DO;

      570     7811
      571     7812        /* We have a condition pending (ctr str, transparent mode,
      572     7813           special function, or escape sequence) for the phase of
      573     7814           processing we're doing (immediate, read, or both).                         */
      574     7815
      575     7816        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:106  
      576     7817        /* Find out exactly what condition, and process it.                           */
      577     7818
      578     7819    3         IF KV$PTR.INPCNDPND.CTRSTR THEN DO;

   7819   1 0002FB  82C6 001B                            LB,'2000'X        27,B6
   7819   1 0002FD       2000
          1 0002FE  0581 0025                            BBF      s:7844,PREL

      579     7820
      580     7821        /* This is the 2nd chr of a ctr str, and it doesn't have the
      581     7822           value of the chr that introduces ctr str's, i.e., it's not
      582     7823           to be interpreted as a literal chr.                                        */
      583     7824
      584     7825    3            KV$PTR.INPCNDPND_MSK.NOT_TRN = '0'B;

   7825   1 000300  8846 001B                            LBF,'7FFF'X       27,B6
   7825   1 000302       7FFF

      585     7826    3            %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;

   7826   1 000303  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 000305  8945 0027                            LBT,'0010'X       39,B5
          1 000307       0010

      586     7827    4            IF %KV_MVD.TRNTBL$->KV$TRNTBL.TRNINPCTRSTRID THEN DO;

   7827   1 000308  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 00030A  BCC4 000E                            LDB,B3   14,B4
          1 00030C  82C3 001F                            LB,'2000'X        31,B3
          1 00030E       2000
          1 00030F  0581 0009                            BBF      s:7838,PREL

      587     7828
      588     7829        /* We are to use the translated input control string ID character,
      589     7830           rather than the untranslated value.                                        */
      590     7831
      591     7832    4               INPOPR.ACKCHR = INPOPR.ACKCHR+%KV_INPCTRSTRCHR_BIS;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:107  

   7832   1 000311  D847 0016                            LDR,R5   INPOPR+5,AUTO
          1 000313  DA70 0300                            ADD,R5   768,IMO
          1 000315  DF47 0016                            STR,R5   INPOPR+5,AUTO

      592     7833    4            END; ELSE DO;

   7833   1 000317  0F81 0007                            B        s:7840,PREL

      593     7834
      594     7835        /* We're to use the untranslated value of the input control
      595     7836           string ID character.                                                       */
      596     7837
      597     7838    4               INPOPR.ACKCHR = INPOPR.ORGCHR+%KV_INPCTRSTRCHR_BIS;

   7838   1 000319  D847 0014                            LDR,R5   INPOPR+3,AUTO
          1 00031B  DA70 0300                            ADD,R5   768,IMO
          1 00031D  DF47 0016                            STR,R5   INPOPR+5,AUTO

      598     7839    4            END /* IF */;

      599     7840    3            CLR.SPCCHR.PRF = '1'B;

   7840   1 00031F  8947 000D                            LBT,'2000'X       CLR,AUTO
   7840   1 000321       2000

      600     7841    3            GOTO INPFNCSRC;

   7841   1 000322  0F81 009E                            B        s:7907,PREL

      601     7842    3         END /* IF */;
      602     7843        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:108  
      603     7844    3         IF KV$PTR.INPCNDPND.TRN THEN DO;

   7844   1 000324  89C6 001B                            CMZ      27,B6
          1 000326  0881 0039                            BAGE     s:7880,PREL

      604     7845
      605     7846        /* We're in transparent input mode.                                           */
      606     7847
      607     7848    4            IF %KV_VDI.USRRQSDAT.RED THEN DO;

   7848   1 000328  DC86                                 LDB,B5   ,B6
          1 000329  82C5 001D                            LB,'0010'X        29,B5
          1 00032B       0010
          1 00032C  0581 0022                            BBF      s:7866,PREL

      608     7849
      609     7850        /* Transparent mode with a read enabled; process the input chr.               */
      610     7851
      611     7852    5               IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;

   7852   1 00032E  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 000330  C2C4 0015                            LLH,R4   21,B4
          1 000332  4D02                                 CMV,R4   2
          1 000333  0981 0015                            BNE      s:7863,PREL

      612     7853
      613     7854        /* In X364 transarent mode, the input parity bit is removed, and
      614     7855              function keys are converted to standard sequences. */
      615     7856
      616     7857    5                  KV$PTR.INPCNDPND.ESC.USR = '0'B;

   7857   1 000335  8846 001B                            LBF,'0030'X       27,B6
   7857   1 000337       0030

      617     7858    5                  KV$PTR.INPCNDPND.ESC.SST = '0'B;

   7858   1 000338  8846 001B                            LBF,'000C'X       27,B6
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:109  
   7858   1 00033A       000C

      618     7859    5                  IF CLR.SPCCHR.PRF OR KV$PTR.INPCNDPND.ESC.PRF

   7859   1 00033B  82C7 000D                            LB,'2000'X        CLR,AUTO
   7859   1 00033D       2000
          1 00033E  0501 0082                            BBT      s:7907,PREL
          1 000340  82C6 001B                            LB,'00C0'X        27,B6
          1 000342       00C0
          1 000343  0501 007D                            BBT      s:7907,PREL

      619     7860    5                  THEN GOTO INPFNCSRC;
      620     7861    5                  INPOPR.ORGCHR = INPOPR.ACKCHR;

   7861   1 000345  D847 0016                            LDR,R5   INPOPR+5,AUTO
          1 000347  DF47 0014                            STR,R5   INPOPR+3,AUTO

      621     7862    5               END;

      622     7863    4               CLR.CHR = INPOPR.ORGCHR;

   7863   1 000349  E847 0014                            LDR,R6   INPOPR+3,AUTO
          1 00034B  EF47 000E                            STR,R6   CLR+1,AUTO

      623     7864    4               GOTO BFRREDCHR;

   7864   1 00034D  0F81 04EF                            B        s:8357,PREL

      624     7865    4            END /* IF */;
      625     7866    3            %KV_SSN.TYPAHD.BFRCHR = '1'B;

   7866   1 00034F  CCC7 0008                            LDB,B4   SSN$,AUTO
          1 000351  8944 0027                            LBT,'0020'X       39,B4
          1 000353       0020

      626     7867    4            IF %KV_STR.SNDMAXNMBRCR~=0 THEN DO;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:110  
   7867   1 000354  DCC6 0004                            LDB,B5   4,B6
          1 000356  D845 0019                            LDR,R5   25,B5
          1 000358  5901 0004                            BEZ,R5   s:7877,PREL

      627     7868
      628     7869        /* There is a no-wait read request waiting to
      629     7870           be enabled.                                                                */
      630     7871
      631     7872    4               %KV_SSN.NO_WATREDTRG = '1'B;

   7872   1 00035A  8944 0028                            LBT,'0004'X       40,B4
   7872   1 00035C       0004

      632     7873    4            END /* IF */;

      633     7874
      634     7875        /* We're done processing this chr.                                            */
      635     7876
      636     7877    3            RETURN;

   7877   1 00035D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      637     7878    3         END;
      638     7879        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:111  
      639     7880    3         IF KV$PTR.INPCNDPND.INPOPR THEN DO;

   7880   1 000360  82C6 001B                            LB,'4000'X        27,B6
   7880   1 000362       4000
          1 000363  0581 0053                            BBF      s:7906,PREL

      640     7881
      641     7882        /* We have an input operator pending; previous input processing requested that
      642     7883           special processing be applied to following characters.                     */
      643     7884
      644     7885    3            CLR.INPOPRX = KV$PTR.INPCNDPND.OPRX;

   7885   1 000365  E846 001C                            LDR,R6   28,B6
          1 000367  EF47 000E                            STR,R6   CLR+1,AUTO

      645     7886    3            IF INPOPR.INPFNCTBL$~=ADDR(NIL)

   7886   1 000369  8DC7 0012                            CMN      INPOPR+1,AUTO
          1 00036B  0901 003F                            BE       s:7901,PREL

      646     7887        /* Do one character to character translation from the profile table. */
      647     7888
      648     7889    3            THEN IF KV$INPFNCTBL.SPCCHR(INPOPR.ACKCHR)

   7889   1 00036D  DCC7 0012                            LDB,B5   INPOPR+1,AUTO
          1 00036F  CBC5 000B                            LAB,B4   11,B5
          1 000371  B847 0016                            LDR,R3   INPOPR+5,AUTO
          1 000373  82B4                                 LB       ,B4,R3
          1 000374  0581 0036                            BBF      s:7901,PREL
          1 000376  C2C5 0009                            LLH,R4   9,B5
          1 000378  4901 0032                            BEZ,R4   s:7901,PREL

      649     7890    4              AND KV$INPFNCTBL.ID_CHRCNT(%KV_INPFNCTYP_SPCCHR)~=0 THEN DO;

      650     7891    4               USR_EXTINPTRN.ORGCHR = BINASC(INPOPR.ACKCHR); /* PL6 BUG          */

   7891   1 00037A  3008                                 SOL,R3   8
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:112  
          1 00037B  3068                                 SAR,R3   8
          1 00037C  BAC7 0010                            SRM,R3,'00FF'X    USR_EXTINPTRN+1,AUTO
          1 00037E       00FF

      651     7892    4               CALL INDEX(%IX, USR_EXTINPTRN.ORGCHR,

   7892   1 00037F  C845 0024                            LDR,R4   36,B5
          1 000381  B2C5 0009                            LLH,R3   9,B5
          1 000383  A854                                 LDR,R2   R4
          1 000384  E853                                 LDR,R6   R3
          1 000385  EA70 0100                            ADD,R6   256,IMO
          1 000387  0028                                 SRH      ;
          1 000388       C107 0010                                ALPHANUM(USR_EXTINPTRN+1,AUTO,1,1),;
          1 00038A       4407 0024                                BINARY(USR_EVT+5,AUTO,,4),;
          1 00038C       4025 0000                                ALPHANUM(0,B5,R2,,R6)
          1 00038E  5381 0005                            CBE      s:7892+21,PREL
          1 000390  BF47 0015                            STR,R3   INPOPR+4,AUTO
          1 000392  0F81 0018                            B        s:7901,PREL
          1 000394  D847 0025                            LDR,R5   USR_EVT+6,AUTO
          1 000396  DF47 0015                            STR,R5   INPOPR+4,AUTO

      652     7893    4                 SUBSTR(KV$INPFNCCHR, KV$INPFNCTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR),
      653     7894    5                 KV$INPFNCTBL.ID_CHRCNT(%KV_INPFNCTYP_SPCCHR))) WHENRETURN DO;

      654     7895    5                  %IX = KV$INPFNCOPRX (%IX +

   7895   1 000398  DA45 001E                            ADD,R5   30,B5
          1 00039A  9855                                 LDR,R1   R5
          1 00039B  D815                                 LDR,R5   ,B5,R1
          1 00039C  DF47 0015                            STR,R5   INPOPR+4,AUTO

      655     7896    5                    KV$INPFNCTBL.OPRX_OFS(%KV_INPFNCTYP_SPCCHR));
      656     7897    5                  IF %IX>=0 AND %IX<256 THEN INPOPR.ACKCHR = %IX;

   7897   1 00039E  5801 0009                            BLZ,R5   s:7898,PREL
          1 0003A0  D970 0100                            CMR,R5   256,IMO
          1 0003A2  0881 0005                            BAGE     s:7898,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:113  

   7897   1 0003A4  DF47 0016                            STR,R5   INPOPR+5,AUTO
          1 0003A6  0F81 0004                            B        s:7901,PREL

      657     7898    5                  ELSE RETURN;             /* Maps into "ignore"                 */

   7898   1 0003A8  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      658     7899    5               END;
      659     7900    4            END;

      660     7901    3            KV$PTR.INPCNDPND.INPOPR = '0'B;

   7901   1 0003AB  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0003AE  8846 001B                            LBF,'4000'X       27,B6
          1 0003B0       4000

      661     7902    3            INPOPR.INPFNCTBL$ = INPFNCSST$; /* Only SST table can have FLWON     */

   7902   1 0003B1  DCC7 0004                            LDB,B5   REDBFR$,AUTO
          1 0003B3  DFC7 0012                            STB,B5   INPOPR+1,AUTO

      662     7903
      663     7904    3         END /* IF */;

   7904   1 0003B5  0F81 03B7                            B        s:8251,PREL

      664     7905        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:114  
      665     7906    2         ELSE IF KV$PTR.INPCNDPND.ESC

   7906   1 0003B7  82C6 001B                            LB,'00FF'X        27,B6
   7906   1 0003B9       00FF
          1 0003BA  0501 0006                            BBT      s:7907,PREL
          1 0003BC  82C7 000D                            LB,'3800'X        CLR,AUTO
          1 0003BE       3800
          1 0003BF  0581 03AD                            BBF      s:8251,PREL

      666     7907    3           OR CLR.SPCCHR THEN DO;

      667     7908
      668     7909        /* There is an escape sequence pending, i.e., we received an
      669     7910           escape introducer and are now processing a subsequent chr,
      670     7911           or this is a special character.                                            */
      671     7912
      672     7913        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:115  
      673     7914        /* In the following section of code, the word 'escape' doesn't
      674     7915           necessarily refer to the ASCII ESC character, but to the
      675     7916           concept of escape sequences.
      676     7917
      677     7918           'escape introducer' is a character that introduces escape
      678     7919           sequences. In the CP-5 input function table, it is the ASCII
      679     7920           esc character.
      680     7921
      681     7922           'escape identifier' is the character that identifies which
      682     7923           escape sequence this is. e.g., in the CP-5 input function
      683     7924           table, it is the 'q' in esc-q.
      684     7925
      685     7926           'special character' refers to a character that invokes
      686     7927           some processing other than simple buffering and echoing.
      687     7928           in the CP-5 input function table, del (delete, rubout)
      688     7929           is a special character (although it is processed thru an
      689     7930           accelerator and bypasses this code).                                       */
      690     7931
      691     7932    4   INPFNCSRC: DO WHILE '1'B;

   7932   1                              INPFNCSRC       null
      692     7933
      693     7934        /* This loop is re-iterated if the chr we're processing is
      694     7935           lower case, there is no such escape identifier,
      695     7936           and we want to try it as an upper case escape identifier.                  */
      696     7937
      697     7938    5               IF CLR.USRPAS THEN IF INPFNCUSR$~=ADDR(NIL) THEN DO;

   7938   1 0003C1  82C7 000D            INPFNCSRC       LB,'0100'X        CLR,AUTO
   7938   1 0003C3       0100
          1 0003C4  0581 001D                            BBF      s:7943,PREL

   7938   1 0003C6  8DC7 0006                            CMN      TRNTBL$,AUTO
          1 0003C8  0901 0016                            BE       s:7942+2,PREL

      698     7939    5                  INPOPR.INPFNCTBL$ = INPFNCUSR$;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:116  
   7939   1 0003CA  ECC7 0006                            LDB,B6   TRNTBL$,AUTO
          1 0003CC  EFC7 0012                            STB,B6   INPOPR+1,AUTO

      699     7940    5                  CLR.ESC = KV$PTR.INPCNDPND.ESC.USR;

   7940   1 0003CE  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0003D1  E845 001B                            LDR,R6   27,B5
          1 0003D3  600A                                 SOL,R6   10
          1 0003D4  EAC7 000D                            SRM,R6,'C000'X    CLR,AUTO
          1 0003D6       C000

      700     7941    5                  CLR.SPCCHR.PRF = CLR.SPCCHR.USR;

   7941   1 0003D7  E847 000D                            LDR,R6   CLR,AUTO
          1 0003D9  6002                                 SOL,R6   2
          1 0003DA  EAC7 000D                            SRM,R6,'2000'X    CLR,AUTO
          1 0003DC       2000

      701     7942    4               END; ELSE CLR.SSTPAS = '1'B;

   7942   1 0003DD  0F81 0004                            B        s:7943,PREL

   7942   1 0003DF  8947 000D                            LBT,'0200'X       CLR,AUTO
   7942   1 0003E1       0200

      702     7943    5               IF CLR.SSTPAS THEN DO;

   7943   1 0003E2  82C7 000D                            LB,'0200'X        CLR,AUTO
   7943   1 0003E4       0200
          1 0003E5  0581 0014                            BBF      s:7952,PREL

      703     7944
      704     7945        /* There is no user-input-function table, or its use is inhibited. */
      705     7946    5                  INPOPR.INPFNCTBL$ = INPFNCSST$;

   7946   1 0003E7  ECC7 0004                            LDB,B6   REDBFR$,AUTO
          1 0003E9  EFC7 0012                            STB,B6   INPOPR+1,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:117  

      706     7947    5                  CLR.ESC = KV$PTR.INPCNDPND.ESC.SST;

   7947   1 0003EB  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0003EE  E845 001B                            LDR,R6   27,B5
          1 0003F0  600C                                 SOL,R6   12
          1 0003F1  EAC7 000D                            SRM,R6,'C000'X    CLR,AUTO
          1 0003F3       C000

      707     7948    5                  CLR.SPCCHR.PRF = CLR.SPCCHR.SST;

   7948   1 0003F4  E847 000D                            LDR,R6   CLR,AUTO
          1 0003F6  6001                                 SOL,R6   1
          1 0003F7  EAC7 000D                            SRM,R6,'2000'X    CLR,AUTO
          1 0003F9       2000

      708     7949
      709     7950    5               END /* IF */;

      710     7951
      711     7952    4               FNCLVL = ASCBIN(BITASC(BINBIT(INPOPR.ACKCHR,16))); /* aka top byte */

   7952   1 0003FA  E2C7 0016                            LLH,R6   INPOPR+5,AUTO
          1 0003FC  EF47 000C                            STR,R6   BFREDTX,AUTO

      712     7953    4               IF FNCLVL~=0 THEN GOTO NONESCCHR;

   7953   1 0003FE  6981 0012                            BNEZ,R6  s:7962,PREL

      713     7954    5   TBLSRC:     DO WHILE '1'B;

   7954   1                              TBLSRC          null
      714     7955
      715     7956        /* This loop is traversed for each input function level,
      716     7957           until the character is identified or we give up
      717     7958           trying to identify it.                                                     */
      718     7959
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:118  
      719     7960    6                  DO WHILE '1'B;

      720     7961    6                     IF FNCLVL>%KV_INPFNCTYP_SPCCHR THEN EXIT TBLSRC;

   7961   1 000400  E847 000C            TBLSRC          LDR,R6   BFREDTX,AUTO
          1 000402  6D02                                 CMV,R6   2
          1 000403  0A01 0317                            BAG      s:8203,PREL

      721     7962    6                     IF CLR.ESC(FNCLVL) THEN EXIT;

   7962   1 000405  EBC7 000D                            LAB,B6   CLR,AUTO
          1 000407  B856                                 LDR,R3   R6
          1 000408  82B6                                 LB       ,B6,R3
          1 000409  0501 0004                            BBT      s:7969,PREL

      722     7963
      723     7964        /* Find a level that is a candidate. */
      724     7965
      725     7966    6                     FNCLVL = FNCLVL+1;

   7966   1 00040B  8AC7 000C                            INC      BFREDTX,AUTO

      726     7967    6                  END;

   7967   1 00040D  0FF3                                 B        s:7954,SPREL

      727     7968
      728     7969    6                  IF FNCLVL>=%KV_INPFNCTYP_SPCCHR THEN DO;

   7969   1 00040E  3D02                                 CMV,R3   2
          1 00040F  0801 0096                            BAL      s:8023,PREL

   7962   1                              NONESCCHR       null
      729     7970    6   NONESCCHR:        ;
      730     7971    7                     DO %IX=0 TO 1;

   7971   1 000411  8747 0015            NONESCCHR       CL       INPOPR+4,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:119  

      731     7972
      732     7973        /* This is a special character, and this isn't the shift pass.                */
      733     7974
      734     7975        /* Check for an escape introducer. */
      735     7976
      736     7977        /* This loop is traversed for the primary and secondary escape
      737     7978           levels in a single input function table.                                   */
      738     7979
      739     7980    7                        IF KV$INPFNCTBL.ESCINT1_CHR(%IX)=INPOPR.ACKCHR

   7980   1 000413  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 000415  B847 0015                            LDR,R3   INPOPR+4,AUTO
          1 000417  3E28                                 ADV,R3   40
          1 000418  E836                                 LDR,R6   ,B6,R3
          1 000419  E947 0016                            CMR,R6   INPOPR+5,AUTO
          1 00041B  0981 0081                            BNE      s:8021,PREL

      740     7981
      741     7982        /* This chr is an escape introducer.                                          */
      742     7983
      743     7984    8                        THEN IF CLR.ESC(%IX) THEN DO;

   7984   1 00041D  DBC7 000D                            LAB,B5   CLR,AUTO
          1 00041F  A847 0015                            LDR,R2   INPOPR+4,AUTO
          1 000421  82A5                                 LB       ,B5,R2
          1 000422  0581 0025                            BBF      s:8002,PREL

      744     7985
      745     7986        /* This is a double escape. this double escape isn't a defined
      746     7987           escape sequence above this level.                                          */
      747     7988
      748     7989    8                           IF NOT CLR.SSTPAS THEN IF CLR.USRPAS

   7989   1 000424  82C7 000D                            LB,'0200'X        CLR,AUTO
   7989   1 000426       0200
          1 000427  0501 0016                            BBT      s:7993,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:120  

   7989   1 000429  82C7 000D                            LB,'0100'X        CLR,AUTO
   7989   1 00042B       0100
          1 00042C  0581 0009                            BBF      s:7991,PREL

      749     7990    8                           THEN KV$PTR.INPCNDPND.ESC.USR = '0'B;

   7990   1 00042E  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000431  8845 001B                            LBF,'0030'X       27,B5
          1 000433       0030
          1 000434  0F81 0011                            B        s:7998,PREL

      750     7991    8                           ELSE KV$PTR.INPCNDPND.ESC.PRF = '0'B;

   7991   1 000436  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000439  8845 001B                            LBF,'00C0'X       27,B5
          1 00043B       00C0
          1 00043C  0F81 0009                            B        s:7998,PREL

      751     7992    9                           ELSE DO;

      752     7993    9                              KV$PTR.INPCNDPND.ESC = '0'B;

   7993   1 00043E  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000441  8845 001B                            LBF,'00FF'X       27,B5
          1 000443       00FF

      753     7994
      754     7995        /* This is just a normal character, don't honor TRNTBL inpfnc either. */
      755     7996    9                              CLR.INPOPRX = 0;

   7996   1 000444  8747 000E                            CL       CLR+1,AUTO

      756     7997    9                           END;

      757     7998    8                           EXIT TBLSRC;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:121  
   7998   1 000446  0F81 02D4                            B        s:8203,PREL

      758     7999    8                        END; ELSE DO;

      759     8000
      760     8001        /* This isn't a double escape. this chr is an escape introducer.              */
      761     8002    9                           IF CLR.SSTPAS THEN DO;

   8002   1 000448  82C7 000D                            LB,'0200'X        CLR,AUTO
   8002   1 00044A       0200
          1 00044B  0581 0021                            BBF      s:8009,PREL

      762     8003    9                              IF %IX=0 THEN IF KV$INPFNCTBL.ESCINT1_CHR(0)=

   8003   1 00044D  2981 0017                            BNEZ,R2  s:8007,PREL

   8003   1 00044F  D846 0028                            LDR,R5   40,B6
          1 000451  D946 0029                            CMR,R5   41,B6
          1 000453  0981 0009                            BNE      s:8006,PREL

      763     8004    9                                KV$INPFNCTBL.ESCINT1_CHR(1)
      764     8005    9                              THEN KV$PTR.INPCNDPND.ESC.SST = '11'B;

   8005   1 000455  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000458  8945 001B                            LBT,'000C'X       27,B5
          1 00045A       000C
          1 00045B  0F81 0034                            B        s:8017,PREL

      765     8006    9                              ELSE KV$PTR.INPCNDPND.ESC.SST(0) = '1'B;

   8006   1 00045D  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000460  8945 001B                            LBT,'0008'X       27,B5
          1 000462       0008
          1 000463  0F81 002C                            B        s:8017,PREL

      766     8007    9                              ELSE KV$PTR.INPCNDPND.ESC.SST(1) = '1'B;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:122  
   8007   1 000465  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000468  8945 001B                            LBT,'0004'X       27,B5
          1 00046A       0004

      767     8008    9                           END; ELSE DO;

   8008   1 00046B  0F81 0024                            B        s:8017,PREL

      768     8009    9                              IF CLR.USRPAS

   8009   1 00046D  82C7 000D                            LB,'0100'X        CLR,AUTO
   8009   1 00046F       0100
          1 000470  0581 0006                            BBF      s:8011,PREL

      769     8010    9                              THEN %IX = %IX+2;

   8010   1 000472  2E02                                 ADV,R2   2
          1 000473  AF47 0015                            STR,R2   INPOPR+4,AUTO
          1 000475  0F81 0009                            B        s:8013,PREL

      770     8011    9                              ELSE IF KV$PTR.INPCNDPND.ESC THEN EXIT TBLSRC;

   8011   1 000477  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00047A  82C5 001B                            LB,'00FF'X        27,B5
          1 00047C       00FF
          1 00047D  0501 029D                            BBT      s:8203,PREL

      771     8012        /* If ESCs already pending, ESC.PRF must have timed out.  Dont start over. */
      772     8013    9                              KV$PTR.INPCNDPND.ESC = %KV_MVD.ESCX(%IX);

   8013   1 00047F  DCC7 000A                            LDB,B5   MVD$,AUTO
          1 000481  2E30                                 ADV,R2   48
          1 000482  E2A5                                 LLH,R6   ,B5,R2
          1 000483  6008                                 SOL,R6   8
          1 000484  6048                                 SOR,R6   8
          1 000485  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 000488  EAC4 001B                            SRM,R6,'00FF'X    27,B4
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:123  
          1 00048A       00FF

      773     8014    9                              IF NOT KV$PTR.INPCNDPND.ESC THEN EXIT TBLSRC;

   8014   1 00048B  82C4 001B                            LB,'00FF'X        27,B4
   8014   1 00048D       00FF
          1 00048E  0581 028C                            BBF      s:8203,PREL

      774     8015        /* If that did nothing, profile escapes must be diasbled by a user redef */
      775     8016    9                           END;

      776     8017    8                           KV$PTR.INPCNDPND.OPRX = 0; /* Clear ESCCNT value.     */

   8017   1 000490  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000493  8745 001C                            CL       28,B5

      777     8018    8                           %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;

   8018   1 000495  CCC7 0008                            LDB,B4   SSN$,AUTO
          1 000497  8944 0027                            LBT,'0010'X       39,B4
          1 000499       0010

      778     8019    8                           RETURN;

   8019   1 00049A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      779     8020    8                        END /* IF */;
      780     8021    7                     END /* LOOP */;

   8021   1 00049D  8AC7 0015                            INC      INPOPR+4,AUTO
          1 00049F  E847 0015                            LDR,R6   INPOPR+4,AUTO
          1 0004A1  6D01                                 CMV,R6   1
          1 0004A2  0A81 FF70                            BALE     s:7980,PREL

      781     8022    6                  END;

   8022   1 0004A4  0F81 009B                            B        s:8072,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:124  

      782     8023    6                  ELSE IF CLR.INT2 AND KV$INPFNCTBL.ESCINT2_CHR(FNCLVL)>=0 THEN DO;

   8023   1 0004A6  82C7 000D                            LB,'0010'X        CLR,AUTO
   8023   1 0004A8       0010
          1 0004A9  0581 0096                            BBF      s:8072,PREL
          1 0004AB  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 0004AD  3E2A                                 ADV,R3   42
          1 0004AE  D836                                 LDR,R5   ,B6,R3
          1 0004AF  5801 0090                            BLZ,R5   s:8072,PREL

      783     8024
      784     8025        /* We're awaiting the second character of this intro. Is this it. */
      785     8026    7                     IF INPOPR.ACKCHR=KV$INPFNCTBL.ESCINT2_CHR(FNCLVL) THEN DO;

   8026   1 0004B1  D947 0016                            CMR,R5   INPOPR+5,AUTO
          1 0004B3  0981 007B                            BNE      s:8062,PREL

      786     8027
      787     8028        /* Yup. This is it. Let's figure out which escapes are still pending. */
      788     8029    8                        IF CLR.SSTPAS THEN DO;

   8029   1 0004B5  82C7 000D                            LB,'0200'X        CLR,AUTO
   8029   1 0004B7       0200
          1 0004B8  0581 000E                            BBF      s:8033,PREL

      789     8030    8                           KV$PTR.INPCNDPND.ESC = '0'B;

   8030   1 0004BA  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0004BD  8845 001B                            LBF,'00FF'X       27,B5
          1 0004BF       00FF

      790     8031    8                           KV$PTR.INPCNDPND.ESC.SST(FNCLVL) = '1'B;

   8031   1 0004C0  CBC5 001B                            LAB,B4   27,B5
          1 0004C2  A856                                 LDR,R2   R6
          1 0004C3  2E0C                                 ADV,R2   12
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:125  
          1 0004C4  8924                                 LBT      ,B4,R2

      791     8032    8                        END; ELSE DO;

   8032   1 0004C5  0F81 0061                            B        s:8056,PREL

      792     8033    8                           KV$PTR.INPCNDPND.ESC.INT2 = '0'B;

   8033   1 0004C7  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0004CA  8845 001B                            LBF,'0002'X       27,B5
          1 0004CC       0002

      793     8034    9                           IF NOT CLR.USRPAS THEN DO;

   8034   1 0004CD  82C7 000D                            LB,'0100'X        CLR,AUTO
   8034   1 0004CF       0100
          1 0004D0  0501 002D                            BBT      s:8047,PREL

      794     8035
      795     8036        /* Profile table, check user functions. */
      796     8037    9                              KV$PTR.INPCNDPND.ESC.PRF(1-FNCLVL) = '0'B;

   8037   1 0004D2  CBC5 001B                            LAB,B4   27,B5
          1 0004D4  A856                                 LDR,R2   R6
          1 0004D5  8252                                 NEG      R2
          1 0004D6  2E09                                 ADV,R2   9
          1 0004D7  8824                                 LBF      ,B4,R2

      797     8038    9                              IF INPFNCUSR$~=ADDR(NIL)

   8038   1 0004D8  8DC7 0006                            CMN      TRNTBL$,AUTO
          1 0004DA  0901 002C                            BE       s:8050,PREL

      798     8039   10                              THEN DO %IX=0 TO 1;

   8039   1 0004DC  8747 0015                            CL       INPOPR+4,AUTO

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:126  
      799     8040   10                                 IF KV$PTR.INPCNDPND.ESC.USR(%IX) AND INPOPR.ACKCHR

   8040   1 0004DE  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0004E1  DBC6 001B                            LAB,B5   27,B6
          1 0004E3  B847 0015                            LDR,R3   INPOPR+4,AUTO
          1 0004E5  3E0A                                 ADV,R3   10
          1 0004E6  82B5                                 LB       ,B5,R3
          1 0004E7  0581 000E                            BBF      s:8043,PREL
          1 0004E9  DCC7 0006                            LDB,B5   TRNTBL$,AUTO
          1 0004EB  A847 0015                            LDR,R2   INPOPR+4,AUTO
          1 0004ED  2E2A                                 ADV,R2   42
          1 0004EE  E847 0016                            LDR,R6   INPOPR+5,AUTO
          1 0004F0  E925                                 CMR,R6   ,B5,R2
          1 0004F1  0901 0004                            BE       s:8043,PREL

      800     8041   10                                   ~=INPFNCUSR$->KV$INPFNCTBL.ESCINT2_CHR(%IX)
      801     8042   10                                 THEN KV$PTR.INPCNDPND.ESC.USR(%IX) = '0'B;

   8042   1 0004F3  CBC6 001B                            LAB,B4   27,B6
          1 0004F5  8834                                 LBF      ,B4,R3

      802     8043   10                              END;

   8043   1 0004F6  8AC7 0015                            INC      INPOPR+4,AUTO
          1 0004F8  E847 0015                            LDR,R6   INPOPR+4,AUTO
          1 0004FA  6D01                                 CMV,R6   1
          1 0004FB  0AE3                                 BALE     s:8040,SPREL

      803     8044    9                           END; ELSE DO;

   8044   1 0004FC  0F81 000A                            B        s:8050,PREL

      804     8045
      805     8046        /* User table. No profile functions, check system table. */
      806     8047    9                              KV$PTR.INPCNDPND.ESC.PRF = '0'B;

   8047   1 0004FE  8845 001B                            LBF,'00C0'X       27,B5
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:127  
   8047   1 000500       00C0

      807     8048    9                              KV$PTR.INPCNDPND.ESC.USR(1-FNCLVL) = '0'B;

   8048   1 000501  CBC5 001B                            LAB,B4   27,B5
          1 000503  A856                                 LDR,R2   R6
          1 000504  8252                                 NEG      R2
          1 000505  2E0B                                 ADV,R2   11
          1 000506  8824                                 LBF      ,B4,R2

      808     8049    9                           END;

      809     8050    9                           DO %IX=0 TO 1;

   8050   1 000507  8747 0015                            CL       INPOPR+4,AUTO

      810     8051    9                              IF KV$PTR.INPCNDPND.ESC.SST(%IX) AND INPOPR.ACKCHR~=

   8051   1 000509  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00050C  DBC6 001B                            LAB,B5   27,B6
          1 00050E  B847 0015                            LDR,R3   INPOPR+4,AUTO
          1 000510  3E0C                                 ADV,R3   12
          1 000511  82B5                                 LB       ,B5,R3
          1 000512  0581 000E                            BBF      s:8054,PREL
          1 000514  DCC7 0004                            LDB,B5   REDBFR$,AUTO
          1 000516  A847 0015                            LDR,R2   INPOPR+4,AUTO
          1 000518  2E2A                                 ADV,R2   42
          1 000519  E847 0016                            LDR,R6   INPOPR+5,AUTO
          1 00051B  E925                                 CMR,R6   ,B5,R2
          1 00051C  0901 0004                            BE       s:8054,PREL

      811     8052    9                                INPFNCSST$->KV$INPFNCTBL.ESCINT2_CHR(%IX)
      812     8053    9                              THEN KV$PTR.INPCNDPND.ESC.SST(%IX) = '0'B;

   8053   1 00051E  CBC6 001B                            LAB,B4   27,B6
          1 000520  8834                                 LBF      ,B4,R3

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:128  
      813     8054    9                           END;

   8054   1 000521  8AC7 0015                            INC      INPOPR+4,AUTO
          1 000523  E847 0015                            LDR,R6   INPOPR+4,AUTO
          1 000525  6D01                                 CMV,R6   1
          1 000526  0AE3                                 BALE     s:8051,SPREL

      814     8055    8                        END;

      815     8056    7                        %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;

   8056   1 000527  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000529  8946 0027                            LBT,'0010'X       39,B6
          1 00052B       0010

      816     8057    7                        RETURN;

   8057   1 00052C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      817     8058    7                     END;
      818     8059
      819     8060        /* This isn't the second char of the intro. This level isn't pending
      820     8061           anymore. Others might be tho. */
      821     8062    6                     CLR.ESC(FNCLVL) = '0'B;

   8062   1 00052F  DBC7 000D                            LAB,B5   CLR,AUTO
          1 000531  A856                                 LDR,R2   R6
          1 000532  8825                                 LBF      ,B5,R2

      822     8063    6                     IF INPOPR.ACKCHR=KV$INPFNCTBL.ESCINT1_CHR(FNCLVL)

   8063   1 000533  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 000535  2E28                                 ADV,R2   40
          1 000536  D847 0016                            LDR,R5   INPOPR+5,AUTO
          1 000538  D926                                 CMR,R5   ,B6,R2
          1 000539  0981 0004                            BNE      s:8067,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:129  
      823     8064
      824     8065        /* Don't go thinking it is the first introducer again, though */
      825     8066    6                     THEN CLR.SPCCHR.PRF = '0'B;

   8066   1 00053B  8847 000D                            LBF,'2000'X       CLR,AUTO
   8066   1 00053D       2000

      826     8067    6                     GOTO TBLSRC;

   8067   1 00053E  0F81 FEC1                            B        s:7954,PREL

      827     8068    6                  END;
      828     8069
      829     8070        /* If we've gotten here, the character is a candidate for this FNCLVL.  */
      830     8071
      831     8072    5                  USR_EXTINPTRN.ORGCHR=BINASC(INPOPR.ACKCHR); /* PL6 BUG         */

   8072   1 000540  E847 0016                            LDR,R6   INPOPR+5,AUTO
          1 000542  6008                                 SOL,R6   8
          1 000543  6068                                 SAR,R6   8
          1 000544  EAC7 0010                            SRM,R6,'00FF'X    USR_EXTINPTRN+1,AUTO
          1 000546       00FF

      832     8073    5                  IF KV$INPFNCTBL.ID_CHRCNT(FNCLVL)~=0

   8073   1 000547  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 000549  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 00054B  3E10                                 ADV,R3   16
          1 00054C  E2B6                                 LLH,R6   ,B6,R3
          1 00054D  6901 0177                            BEZ,R6   s:8177,PREL

      833     8074    5                  THEN CALL INDEX(%IX, USR_EXTINPTRN.ORGCHR,

   8074   1 00054F  A847 000C                            LDR,R2   BFREDTX,AUTO
          1 000551  2E22                                 ADV,R2   34
          1 000552  D826                                 LDR,R5   ,B6,R2
          1 000553  9855                                 LDR,R1   R5
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:130  
          1 000554  EF47 0026                            STR,R6   USR_EVT+7,AUTO
          1 000556  EA70 0100                            ADD,R6   256,IMO
          1 000558  0028                                 SRH      ;
          1 000559       C107 0010                                ALPHANUM(USR_EXTINPTRN+1,AUTO,1,1),;
          1 00055B       4407 0024                                BINARY(USR_EVT+5,AUTO,,4),;
          1 00055D       4016 0000                                ALPHANUM(0,B6,R1,,R6)
          1 00055F  5381 0007                            CBE      s:8074+24,PREL
          1 000561  E847 0026                            LDR,R6   USR_EVT+7,AUTO
          1 000563  EF47 0015                            STR,R6   INPOPR+4,AUTO
          1 000565  0F81 015F                            B        s:8177,PREL
          1 000567  E847 0025                            LDR,R6   USR_EVT+6,AUTO
          1 000569  EF47 0015                            STR,R6   INPOPR+4,AUTO

      834     8075    5                    SUBSTR(KV$INPFNCCHR,KV$INPFNCTBL.ID_CHROFS(FNCLVL),
      835     8076    6                    KV$INPFNCTBL.ID_CHRCNT(FNCLVL))) WHENRETURN DO;

      836     8077        /* Found one, save its stuff, and bail out. */
      837     8078    6                     IF KV$PTR.VDI$=ADDR(NIL) THEN EXIT; /* Load up a base reg   */

   8078   1 00056B  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00056E  8D85                                 CMN      ,B5
          1 00056F  0901 0155                            BE       s:8177,PREL

      838     8079    6                     %IX = KV$INPFNCTBL.OPRX_OFS(FNCLVL)+%IX;

   8079   1 000571  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000573  3E1C                                 ADV,R3   28
          1 000574  EA36                                 ADD,R6   ,B6,R3
          1 000575  EF47 0015                            STR,R6   INPOPR+4,AUTO

      839     8080    7                     IF NOT CLR.SSTPAS AND NOT CLR.USRPAS THEN DO;

   8080   1 000577  82C7 000D                            LB,'0200'X        CLR,AUTO
   8080   1 000579       0200
          1 00057A  0501 013B                            BBT      s:8172,PREL
          1 00057C  82C7 000D                            LB,'0100'X        CLR,AUTO
          1 00057E       0100
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:131  
          1 00057F  0501 0136                            BBT      s:8172,PREL

      840     8081
      841     8082        /* For profile functions, INPOPRX is just the translated value, e.g., PF2. */
      842     8083        /* So, honor it only if the user or system table has such things. */
      843     8084
      844     8085    7                        FNCLVL = KV$INPFNCOPRX (%IX);

   8085   1 000581  B856                                 LDR,R3   R6
          1 000582  C836                                 LDR,R4   ,B6,R3
          1 000583  CF47 000C                            STR,R4   BFREDTX,AUTO

      845     8086    7                        IF FNCLVLU>=%KV_INPFNCKEYN_BIS

   8086   1 000585  A847 000C                            LDR,R2   BFREDTX,AUTO
          1 000587  A970 1400                            CMR,R2   5120,IMO
          1 000589  0201 0042                            BL       s:8104+2,PREL
          1 00058B  A970 DC00                            CMR,R2   -9216,IMO
          1 00058D  0281 003E                            BGE      s:8104+2,PREL

      846     8087    8                          AND FNCLVLU<%KV_INPFNCKEYN_BIS+100*512 THEN DO;

      847     8088    8                           KV$PTR.INPCNDPND.OPRX =

   8088   1 00058F  E845 001C                            LDR,R6   28,B5
          1 000591  6E0A                                 ADV,R6   10
          1 000592  EF45 001C                            STR,R6   28,B5

      848     8089    8                             KV$PTR.INPCNDPND.OPRX+%KV_INPFNCKEYN_BIS/512;
      849     8090    9                           DO WHILE FNCLVLU/512<KV$PTR.INPCNDPND.OPRX;

   8090   1 000594  0F81 0013                            B        s:8100,PREL

      850     8091        /*
      851     8092           Find the one whose modifier exceeds or equals the one we got.
      852     8093           Even left-bytes are function keys.  Odd ones just characters.
      853     8094        */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:132  
      854     8095    9                              %IX = %IX+1;

   8095   1 000596  8AC7 0015                            INC      INPOPR+4,AUTO

      855     8096    9                              IF %IX=KV$INPFNCTBL.OPRX_OFS(%KV_INPFNCTYP_SPCCHR)

   8096   1 000598  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 00059A  E847 0015                            LDR,R6   INPOPR+4,AUTO
          1 00059C  E946 001E                            CMR,R6   30,B6
          1 00059E  0901 017C                            BE       s:8203,PREL
          1 0005A0  B856                                 LDR,R3   R6
          1 0005A1  D836                                 LDR,R5   ,B6,R3
          1 0005A2  D947 000C                            CMR,R5   BFREDTX,AUTO
          1 0005A4  0801 0176                            BAL      s:8203,PREL

      856     8097    9                                OR KV$INPFNCOPRX(%IX)<FNCLVL
      857     8098    9                              THEN EXIT TBLSRC;
      858     8099    9                              FNCLVL = KV$INPFNCOPRX(%IX);

   8099   1 0005A6  DF47 000C                            STR,R5   BFREDTX,AUTO

      859     8100    9                           END;

   8100   1 0005A8  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 0005AA  6049                                 SOR,R6   9
          1 0005AB  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0005AE  6801 0004                            BLZ,R6   s:8101,PREL
          1 0005B0  E945 001C                            CMR,R6   28,B5
          1 0005B2  0864                                 BAL      s:8095,SPREL

      860     8101    8                           %IX = MOD(FNCLVLU,256)-(FNCLVLU/512-KV$PTR.INPCNDPND.OPRX);

   8101   1 0005B3  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 0005B5  E570 00FF                            AND,R6   255,IMO
          1 0005B7  D847 000C                            LDR,R5   BFREDTX,AUTO
          1 0005B9  5049                                 SOR,R5   9
          1 0005BA  D245 001C                            SUB,R5   28,B5
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:133  
          1 0005BC  E255                                 SUB,R6   R5
          1 0005BD  B856                                 LDR,R3   R6
          1 0005BE  BF47 0015                            STR,R3   INPOPR+4,AUTO

      861     8102    8                           IF NOT BINBIT(FNCLVLU,16)&'0100'X

   8102   1 0005C0  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 0005C2  E570 0100                            AND,R6   256,IMO
          1 0005C4  6981 000A                            BNEZ,R6  s:8105,PREL

      862     8103    8                           THEN %IX = %IX+%KV_INPFNCKEY_BIS;

   8103   1 0005C6  BA70 0400                            ADD,R3   1024,IMO
          1 0005C8  BF47 0015                            STR,R3   INPOPR+4,AUTO

      863     8104    7                        END; ELSE %IX = FNCLVL;

   8104   1 0005CA  0F81 0004                            B        s:8105,PREL

   8104   1 0005CC  B854                                 LDR,R3   R4
          1 0005CD  BF47 0015                            STR,R3   INPOPR+4,AUTO

      864     8105    8                        IF %IX=%KV_ESCINTCHR_NON THEN DO;

   8105   1 0005CF  3DFF                                 CMV,R3   -1
          1 0005D0  0981 0007                            BNE      s:8113,PREL

      865     8106
      866     8107        /*
      867     8108           Maps to "no character".  Make it happen.
      868     8109        */
      869     8110    8                           KV$PTR.INPCNDPND.ESC = '0'B;

   8110   1 0005D2  8845 001B                            LBF,'00FF'X       27,B5
   8110   1 0005D4       00FF

      870     8111    8                           RETURN;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:134  

   8111   1 0005D5  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      871     8112    8                        END;
      872     8113    7                        FNCLVL = %IX/256;

   8113   1 0005D8  B370 0100                            DIV,R3   256,IMO
          1 0005DA  BF47 000C                            STR,R3   BFREDTX,AUTO

      873     8114    8                        IF FNCLVL=%KV_INPFNCTYP_SPCCHR THEN DO;

   8114   1 0005DC  3D02                                 CMV,R3   2
          1 0005DD  0981 000B                            BNE      s:8117+2,PREL

      874     8115    8                           FNCLVL = 0;     /* A slightly different meaning here  */

   8115   1 0005DF  8747 000C                            CL       BFREDTX,AUTO

      875     8116    8                           %IX = %IX-%KV_INPFNCTYP_SPCCHR*256;

   8116   1 0005E1  E847 0015                            LDR,R6   INPOPR+4,AUTO
          1 0005E3  EA70 FE00                            ADD,R6   -512,IMO
          1 0005E5  EF47 0015                            STR,R6   INPOPR+4,AUTO

      876     8117    7                        END; ELSE IF FNCLVL=%KV_INPFNCTYP_FNCKEY

   8117   1 0005E7  0F81 0078                            B        s:8149,PREL

   8117   1 0005E9  3D04                                 CMV,R3   4
          1 0005EA  0981 0075                            BNE      s:8149,PREL

      877     8118    7                        THEN IF KV$PTR.INPCNDPND.TRN

   8118   1 0005EC  89C5 001B                            CMZ      27,B5
          1 0005EE  0881 004B                            BAGE     s:8135,PREL
          1 0005F0  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 0005F2  E2C4 0015                            LLH,R6   21,B4
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:135  
          1 0005F4  6D02                                 CMV,R6   2
          1 0005F5  0981 0044                            BNE      s:8135,PREL

      878     8119    8                          AND %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;

      879     8120
      880     8121        /* Transparent X364 needs to have some keys mapped to standard sequences */
      881     8122
      882     8123    8                           KV$PTR.INPCNDPND.ESC = '0'B;

   8123   1 0005F7  8845 001B                            LBF,'00FF'X       27,B5
   8123   1 0005F9       00FF

      883     8124    8                           INPOPR.INPFNCTBL$ = ADDR(KV@VDH_DAT);

   8124   1 0005FA  BBC7 0017                            LAB,B3   KV@VDH_DAT,AUTO
          1 0005FC  BFC7 0012                            STB,B3   INPOPR+1,AUTO

      884     8125    8                           USR_EXTINPTRN.ORGCHR = BINASC(%IX);

   8125   1 0005FE  E847 0015                            LDR,R6   INPOPR+4,AUTO
          1 000600  6008                                 SOL,R6   8
          1 000601  6068                                 SAR,R6   8
          1 000602  EAC7 0010                            SRM,R6,'00FF'X    USR_EXTINPTRN+1,AUTO
          1 000604       00FF

      885     8126    8                           CALL INDEX (%IX, USR_EXTINPTRN.ORGCHR, KV_X364_FNCS)

   8126   1 000605  EB80 0000 0000  00                   LAB,B6   KVI_PRMTRN
          1 000608  0028                                 SRH      ;
          1 000609       C107 0010                                ALPHANUM(USR_EXTINPTRN+1,AUTO,1,1),;
          1 00060B       4407 0024                                BINARY(USR_EVT+5,AUTO,,4),;
          1 00060D       5406 0063                                ALPHANUM(99,B6,,20)
          1 00060F  5381 0006                            CBE      s:8126+17,PREL
          1 000611  6C14                                 LDV,R6   20
          1 000612  EF47 0015                            STR,R6   INPOPR+4,AUTO
          1 000614  0F81 0022                            B        s:8133,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:136  
          1 000616  E847 0025                            LDR,R6   USR_EVT+6,AUTO
          1 000618  EF47 0015                            STR,R6   INPOPR+4,AUTO

      886     8127    9                           WHENRETURN DO;

      887     8128    9                              X364_CHARS = ADDR(KV_X364_FNC)->X364_CHARS;

   8128   1 00061A  AB80 0000 0060  00                   LAB,B2   KV_X364_FNC
          1 00061D  2C00                                 LDV,R2   0
          1 00061E  6C08                                 LDV,R6   8
          1 00061F  3C00                                 LDV,R3   0
          1 000620  0008                                 MMM

      888     8129    9                              SUBSTR(%OPR_TXT.T,2,1) = SUBSTR(KV_X364_FNCIDS,%IX,1);

   8129   1 000621  B847 0015                            LDR,R3   INPOPR+4,AUTO
          1 000623  E0B0 0000 006D  00                   LDH,R6   KV_X364_FNCIDS,R3
          1 000626  EAC7 0019                            SRM,R6,'00FF'X    KV@VDH_DAT+2,AUTO
          1 000628       00FF

      889     8130    9                              %IX = 0;

   8130   1 000629  8747 0015                            CL       INPOPR+4,AUTO

      890     8131    9                              CALL KVI$INTINPOPR (INPOPR);

   8131   1 00062B  EBC7 0011                            LAB,B6   INPOPR,AUTO
          1 00062D  EFC7 0024                            STB,B6   USR_EVT+5,AUTO
          1 00062F  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 000631  CBF0 0100                            LAB,B4   256,IMO
          1 000633  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPR
          1 000636       0001                            DC       s:8133,PREL

      891     8132    9                           END;

      892     8133    8                           RETURN;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:137  
   8133   1 000637  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      893     8134    8                        END;
      894     8135    8                        ELSE IF %KV_STR.TRNUSRINPFNC THEN DO;

   8135   1 00063A  CCC5 0004                            LDB,B4   4,B5
          1 00063C  82C4 001E                            LB,'0080'X        30,B4
          1 00063E       0080
          1 00063F  0581 0020                            BBF      s:8149,PREL

      895     8136
      896     8137        /* Special hook for IMP - so it can interpret FNCKEYs for you */
      897     8138
      898     8139    8                           IF INPFNCUSR$~=ADDR(NIL)

   8139   1 000641  8DC7 0006                            CMN      TRNTBL$,AUTO
          1 000643  0901 0007                            BE       s:8142,PREL

      899     8140    8                           THEN IF INPFNCUSR$->KV$INPFNCTBL.ID_CHRCNT

   8140   1 000645  BCC7 0006                            LDB,B3   TRNTBL$,AUTO
          1 000647  E2C3 000A                            LLH,R6   10,B3
          1 000649  6981 0016                            BNEZ,R6  s:8149,PREL

      900     8141    8                             (%KV_INPFNCTYP_FNCKEY)~=0 THEN EXIT;
      901     8142    8                           %KV_STR.TRNUSRINPFNC = '0'B;

   8142   1 00064B  8844 001E                            LBF,'0080'X       30,B4
   8142   1 00064D       0080

      902     8143    8                           %KV_SSN.TYPAHD = '0'B;

   8143   1 00064E  CCC7 0008                            LDB,B4   SSN$,AUTO
          1 000650  8844 0027                            LBF,'0030'X       39,B4
          1 000652       0030

      903     8144    8                           KV$PTR.INPCNDPND.ESC = '0'B;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:138  

   8144   1 000653  8845 001B                            LBF,'00FF'X       27,B5
   8144   1 000655       00FF

      904     8145    8                           CLR = '0'B;

   8145   1 000656  8747 000D                            CL       CLR,AUTO
          1 000658  8747 000E                            CL       CLR+1,AUTO

      905     8146    8                           CLR.CHR = %IX;

   8146   1 00065A  E847 0015                            LDR,R6   INPOPR+4,AUTO
          1 00065C  EF47 000E                            STR,R6   CLR+1,AUTO

      906     8147    8                           GOTO ACTRED;

   8147   1 00065E  0F81 020B                            B        s:8382,PREL

      907     8148    8                        END;
      908     8149    7                        IF INPFNCSST$->KV$INPFNCTBL.ID_CHRCNT(FNCLVL)=0

   8149   1 000660  CCC7 0004                            LDB,B4   REDBFR$,AUTO
          1 000662  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000664  3E10                                 ADV,R3   16
          1 000665  E2B4                                 LLH,R6   ,B4,R3
          1 000666  6981 001E                            BNEZ,R6  s:8158,PREL
          1 000668  D847 000C                            LDR,R5   BFREDTX,AUTO
          1 00066A  5901 001A                            BEZ,R5   s:8158,PREL

      909     8150    7                          AND FNCLVL~=0
      910     8151    7                        THEN IF INPFNCUSR$=ADDR(NIL) THEN EXIT TBLSRC;

   8151   1 00066C  8DC7 0006                            CMN      TRNTBL$,AUTO
          1 00066E  0901 00AC                            BE       s:8203,PREL

      911     8152    7                        ELSE IF INPFNCUSR$->KV$INPFNCTBL.ID_CHRCNT(FNCLVL)=0

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:139  
   8152   1 000670  BCC7 0006                            LDB,B3   TRNTBL$,AUTO
          1 000672  C2B3                                 LLH,R4   ,B3,R3
          1 000673  4981 0011                            BNEZ,R4  s:8158,PREL
          1 000675  A2C3 0028                            LLH,R2   40,B3
          1 000677  2801 0005                            BLZ,R2   s:8152+13,PREL
          1 000679  A947 0015                            CMR,R2   INPOPR+4,AUTO
          1 00067B  0901 0009                            BE       s:8158,PREL
          1 00067D  92C3 0029                            LLH,R1   41,B3
          1 00067F  1801 009B                            BLZ,R1   s:8203,PREL
          1 000681  9947 0015                            CMR,R1   INPOPR+4,AUTO
          1 000683  0981 0097                            BNE      s:8203,PREL

      912     8153    7                          AND %IX~=ASCBIN(BITASC(BINBIT(
      913     8154    7                          INPFNCUSR$->KV$INPFNCTBL.ESCINT1_CHR(0),16)))
      914     8155    7                          AND %IX~=ASCBIN(BITASC(BINBIT(
      915     8156    7                          INPFNCUSR$->KV$INPFNCTBL.ESCINT1_CHR(1),16)))
      916     8157    7                        THEN EXIT TBLSRC;
      917     8158    7                        USR_EVT.PRM = INPOPR.ACKCHR; /* Save for search failure  */

   8158   1 000685  D847 0016                            LDR,R5   INPOPR+5,AUTO
          1 000687  DF47 0020                            STR,R5   USR_EVT+1,AUTO

      918     8159    7                        INPOPR.ACKCHR = %IX;

   8159   1 000689  D847 0015                            LDR,R5   INPOPR+4,AUTO
          1 00068B  DF47 0016                            STR,R5   INPOPR+5,AUTO

      919     8160    7                        IF FNCLVL~=0 THEN CLR.SPCCHR.PRF = '1'B;

   8160   1 00068D  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 00068F  6901 0006                            BEZ,R6   s:8162,PREL

   8160   1 000691  8947 000D                            LBT,'2000'X       CLR,AUTO
   8160   1 000693       2000
          1 000694  0F81 001F                            B        s:8170,PREL

      920     8161    8                        ELSE DO;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:140  

      921     8162    8                           CLR.SPCCHR = '0'B;

   8162   1 000696  8847 000D                            LBF,'3800'X       CLR,AUTO
   8162   1 000698       3800

      922     8163    8                           IF INPFNCUSR$~=ADDR(NIL)

   8163   1 000699  8DC7 0006                            CMN      TRNTBL$,AUTO
          1 00069B  0901 000C                            BE       s:8166,PREL

      923     8164    8                           THEN IF INPFNCUSR$->KV$INPFNCTBL.SPCCHR(%IX)

   8164   1 00069D  BCC7 0006                            LDB,B3   TRNTBL$,AUTO
          1 00069F  ABC3 000B                            LAB,B2   11,B3
          1 0006A1  A855                                 LDR,R2   R5
          1 0006A2  82A2                                 LB       ,B2,R2
          1 0006A3  0581 0004                            BBF      s:8166,PREL

      924     8165    8                           THEN CLR.SPCCHR.USR = '1'B;

   8165   1 0006A5  8947 000D                            LBT,'0800'X       CLR,AUTO
   8165   1 0006A7       0800

      925     8166    8                           IF INPFNCSST$->KV$INPFNCTBL.SPCCHR(%IX)

   8166   1 0006A8  BBC4 000B                            LAB,B3   11,B4
          1 0006AA  A855                                 LDR,R2   R5
          1 0006AB  82A3                                 LB       ,B3,R2
          1 0006AC  0581 0004                            BBF      s:8168,PREL

      926     8167    8                           THEN CLR.SPCCHR.SST = '1'B;

   8167   1 0006AE  8947 000D                            LBT,'1000'X       CLR,AUTO
   8167   1 0006B0       1000

      927     8168    8                           KV$PTR.INPCNDPND.ESC = '0'B;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:141  

   8168   1 0006B1  8845 001B                            LBF,'00FF'X       27,B5
   8168   1 0006B3       00FF

      928     8169    8                        END;

      929     8170    7                        EXIT TBLSRC;

   8170   1 0006B4  0F81 0066                            B        s:8203,PREL

      930     8171    7                     END;
      931     8172    6                     CLR.INPOPRX = KV$INPFNCOPRX(%IX)+KV$INPFNCTBL.INPOPROFS;

   8172   1 0006B6  B856                                 LDR,R3   R6
          1 0006B7  C836                                 LDR,R4   ,B6,R3
          1 0006B8  CA46 002C                            ADD,R4   44,B6
          1 0006BA  CF47 000E                            STR,R4   CLR+1,AUTO

      932     8173    6                     IF FNCLVL>=%KV_INPFNCTYP_SPCCHR

   8173   1 0006BC  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 0006BE  6D02                                 CMV,R6   2
          1 0006BF  0801 0003                            BAL      s:8175,PREL

      933     8174    6                     THEN KV$PTR.INPCNDPND.OPRX = 0;

   8174   1 0006C1  8745 001C                            CL       28,B5

      934     8175    6                     EXIT INPFNCSRC;

   8175   1 0006C3  0F81 00A3                            B        s:8246,PREL

      935     8176    6                  END;
      936     8177    5                  IF INPOPR.ACKCHR>=ASCBIN('0') AND INPOPR.ACKCHR<=ASCBIN('9')

   8177   1 0006C5  E847 0016                            LDR,R6   INPOPR+5,AUTO
          1 0006C7  6D30                                 CMV,R6   48
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:142  
          1 0006C8  0801 0037                            BAL      s:8193,PREL
          1 0006CA  6D39                                 CMV,R6   57
          1 0006CB  0A01 0034                            BAG      s:8193,PREL
          1 0006CD  ECC7 0012                            LDB,B6   INPOPR+1,AUTO
          1 0006CF  DBC6 001B                            LAB,B5   27,B6
          1 0006D1  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 0006D3  3E08                                 ADV,R3   8
          1 0006D4  82B5                                 LB       ,B5,R3
          1 0006D5  0581 002A                            BBF      s:8193,PREL

      937     8178    6                    AND KV$INPFNCTBL.ESCCNTOK(FNCLVL) THEN DO;

      938     8179
      939     8180        /* This chr is numeric, and numbers are allowed following the introducer.     */
      940     8181
      941     8182    6                     %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;

   8182   1 0006D7  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 0006D9  8945 0027                            LBT,'0010'X       39,B5
          1 0006DB       0010

      942     8183    6                     IF KV$PTR.INPCNDPND.OPRX>999 OR KV$PTR.INPCNDPND.OPRX<0

   8183   1 0006DC  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 0006DF  D844 001C                            LDR,R5   28,B4
          1 0006E1  D970 03E7                            CMR,R5   999,IMO
          1 0006E3  0A01 0003                            BAG      s:8184,PREL
          1 0006E5  5881 0003                            BGEZ,R5  s:8185,PREL

      943     8184    6                     THEN KV$PTR.INPCNDPND.OPRX = 0;

   8184   1 0006E7  8744 001C                            CL       28,B4

      944     8185    6                     KV$PTR.INPCNDPND.OPRX =

   8185   1 0006E9  D844 001C                            LDR,R5   28,B4
          1 0006EB  5F0A                                 MLV,R5   10
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:143  
          1 0006EC  DA56                                 ADD,R5   R6
          1 0006ED  5ED0                                 ADV,R5   -48
          1 0006EE  DF44 001C                            STR,R5   28,B4

      945     8186    6                       KV$PTR.INPCNDPND.OPRX*10 + INPOPR.ACKCHR-48;
      946     8187    6                     KV$PTR.INPCNDPND.ESC = KV$PTR.INPCNDPND.ESC&%KV_MVD.ESCCNTMSK;

   8187   1 0006F0  C844 001B                            LDR,R4   27,B4
          1 0006F2  4008                                 SOL,R4   8
          1 0006F3  BCC7 000A                            LDB,B3   MVD$,AUTO
          1 0006F5  A2C3 001C                            LLH,R2   28,B3
          1 0006F7  2008                                 SOL,R2   8
          1 0006F8  C552                                 AND,R4   R2
          1 0006F9  4048                                 SOR,R4   8
          1 0006FA  CAC4 001B                            SRM,R4,'00FF'X    27,B4
          1 0006FC       00FF

      947     8188
      948     8189        /* We're done processing the chr.                                             */
      949     8190
      950     8191    6                     RETURN;

   8191   1 0006FD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      951     8192    6                  END /* IF */;
      952     8193    5                  IF INPOPR.ACKCHR=ASCBIN('-')

   8193   1 000700  6D2D                                 CMV,R6   45
          1 000701  0981 0015                            BNE      s:8199,PREL
          1 000703  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000706  D846 001C                            LDR,R5   28,B6
          1 000708  5901 000E                            BEZ,R5   s:8199,PREL

      953     8194    6                    AND KV$PTR.INPCNDPND.OPRX~=0 THEN DO;

      954     8195    6                     %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:144  
   8195   1 00070A  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 00070C  8945 0027                            LBT,'0010'X       39,B5
          1 00070E       0010

      955     8196    6                     KV$PTR.INPCNDPND.OPRX = -KV$PTR.INPCNDPND.OPRX;

   8196   1 00070F  D846 001C                            LDR,R5   28,B6
          1 000711  8255                                 NEG      R5
          1 000712  DF46 001C                            STR,R5   28,B6

      956     8197    6                     RETURN;

   8197   1 000714  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      957     8198    6                  END;
      958     8199    5                  FNCLVL = FNCLVL+1;

   8199   1 000717  8AC7 000C                            INC      BFREDTX,AUTO

      959     8200    5               END TBLSRC;

   8200   1 000719  0F81 FCE6                            B        s:7954,PREL

      960     8201
      961     8202        /* If we haven't yet done so, try the system table, too. */
      962     8203    5               IF NOT CLR.SSTPAS THEN IF CLR.USRPAS THEN DO;

   8203   1 00071B  82C7 000D                            LB,'0200'X        CLR,AUTO
   8203   1 00071D       0200
          1 00071E  0501 0013                            BBT      s:8209,PREL

   8203   1 000720  82C7 000D                            LB,'0100'X        CLR,AUTO
   8203   1 000722       0100
          1 000723  0581 0009                            BBF      s:8207,PREL

      963     8204    5                  CLR.SSTPAS = '1'B;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:145  
   8204   1 000725  8947 000D                            LBT,'0200'X       CLR,AUTO
   8204   1 000727       0200

      964     8205    5                  CLR.USRPAS = '0'B;

   8205   1 000728  8847 000D                            LBF,'0100'X       CLR,AUTO
   8205   1 00072A       0100

      965     8206    5               END;

   8206   1 00072B  0F81 FC95                            B        s:7907,PREL

      966     8207    4               ELSE CLR.USRPAS = '1'B;

   8207   1 00072D  8947 000D                            LBT,'0100'X       CLR,AUTO
   8207   1 00072F       0100
          1 000730  0F81 FC90                            B        s:7907,PREL

      967     8208
      968     8209    5               ELSE IF CLR.SHFPAS THEN DO;

   8209   1 000732  82C7 000D                            LB,'0400'X        CLR,AUTO
   8209   1 000734       0400
          1 000735  0581 0008                            BBF      s:8219,PREL

      969     8210
      970     8211        /* This is the shift pass. there is total failure on
      971     8212           identifying the chr.                                                       */
      972     8213
      973     8214        /* Convert the character back to lower case before buffering it.              */
      974     8215
      975     8216    5                  INPOPR.ACKCHR = INPOPR.ACKCHR+ASCBIN('a')-ASCBIN('A');

   8216   1 000737  E847 0016                            LDR,R6   INPOPR+5,AUTO
          1 000739  6E20                                 ADV,R6   32
          1 00073A  EF47 0016                            STR,R6   INPOPR+5,AUTO

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:146  
      976     8217    5                  EXIT INPFNCSRC;

   8217   1 00073C  0F81 002A                            B        s:8246,PREL

      977     8218    5               END /* IF */;
      978     8219    4               ELSE IF INPOPR.ACKCHR>=ASCBIN('a')

   8219   1 00073E  E847 0016                            LDR,R6   INPOPR+5,AUTO
          1 000740  6D61                                 CMV,R6   97
          1 000741  0801 0015                            BAL      s:8236,PREL
          1 000743  6D7A                                 CMV,R6   122
          1 000744  0A01 0012                            BAG      s:8236,PREL

      979     8220    5                 AND INPOPR.ACKCHR<=ASCBIN('z') THEN DO;

      980     8221
      981     8222        /* This character is lower case. shift it to upper case,
      982     8223           and try to identify it as an escape identifier.                            */
      983     8224
      984     8225    5                  INPOPR.ACKCHR = INPOPR.ACKCHR-ASCBIN('a')+ASCBIN('A');

   8225   1 000746  6EE0                                 ADV,R6   -32
          1 000747  EF47 0016                            STR,R6   INPOPR+5,AUTO

      985     8226    5                  CLR.SHFPAS = '1'B;

   8226   1 000749  8947 000D                            LBT,'0400'X       CLR,AUTO
   8226   1 00074B       0400

      986     8227    5                  CLR.SSTPAS = '0'B;

   8227   1 00074C  8847 000D                            LBF,'0200'X       CLR,AUTO
   8227   1 00074E       0200

      987     8228    5                  CLR.USRPAS = '1'B;       /* No profile functions this time.    */

   8228   1 00074F  8947 000D                            LBT,'0100'X       CLR,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:147  
   8228   1 000751       0100

      988     8229
      989     8230        /* Only try escape indentifiers this time. */
      990     8231    5                  CLR.SPCCHR = '0'B;

   8231   1 000752  8847 000D                            LBF,'3800'X       CLR,AUTO
   8231   1 000754       3800

      991     8232    5               END; ELSE DO;

   8232   1 000755  0F81 FC6B                            B        s:7907,PREL

      992     8233
      993     8234        /* Total failure on identifying the character.                                */
      994     8235
      995     8236    5                  IF INPOPR.ACKCHR<%KV_INPFNCKEY_BIS THEN EXIT INPFNCSRC;

   8236   1 000757  E970 0400                            CMR,R6   1024,IMO
          1 000759  0801 000D                            BAL      s:8246,PREL

      996     8237        /*
      997     8238           Unless it was a function key search.  Try the component sequence, too.
      998     8239        */
      999     8240    5                  INPOPR.ACKCHR = USR_EVT.PRM;

   8240   1 00075B  E847 0020                            LDR,R6   USR_EVT+1,AUTO
          1 00075D  EF47 0016                            STR,R6   INPOPR+5,AUTO

     1000     8241    5                  CLR.USRPAS = '1'B;

   8241   1 00075F  8947 000D                            LBT,'0100'X       CLR,AUTO
   8241   1 000761       0100

     1001     8242    5                  CLR.SSTPAS = '0'B;

   8242   1 000762  8847 000D                            LBF,'0200'X       CLR,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:148  
   8242   1 000764       0200

     1002     8243    5               END /* IF */;

     1003     8244    4            END INPFNCSRC;

   8244   1 000765  0F81 FC5B                            B        s:7907,PREL

     1004     8245
     1005     8246    3            KV$PTR.INPCNDPND.ESC = '0'B;

   8246   1 000767  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00076A  8846 001B                            LBF,'00FF'X       27,B6
          1 00076C       00FF

     1006     8247
     1007     8248    3         END /* IF */;

     1008     8249    2      END /* IF */;

     1009     8250        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:149  
     1010     8251    2      IF CLR.INPOPRX~=0 THEN DO;

   8251   1 00076D  E847 000E                            LDR,R6   CLR+1,AUTO
          1 00076F  6901 0054                            BEZ,R6   s:8277,PREL

     1011     8252
     1012     8253        /* When we translated this chr, the input translate table
     1013     8254           yielded an input function index (in addition to a chr),
     1014     8255           or the character wound up completing another input function.
     1015     8256           do the input function processing now.                                      */
     1016     8257
     1017     8258    2         %KV_SSN.TYPAHD.BFRINPFNCCHR = '1'B;

   8258   1 000771  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 000773  8945 0027                            LBT,'0010'X       39,B5
          1 000775       0010

     1018     8259    2         IF NOT %KV_SSN.WATINPDLTMRK AND NOT %KV_SSN.WATOTPDLTMRK

   8259   1 000776  82C5 0028                            LB,'1000'X        40,B5
   8259   1 000778       1000
          1 000779  0501 0009                            BBT      s:8261,PREL
          1 00077B  82C5 0028                            LB,'2000'X        40,B5
          1 00077D       2000
          1 00077E  0501 0004                            BBT      s:8261,PREL

     1019     8260    2         THEN %KV_SSN.MRKRQSENB = '1'B;

   8260   1 000780  8945 0028                            LBT,'8000'X       40,B5
   8260   1 000782       8000

     1020     8261    2         IF CLR.REDONL THEN KV$PTR.USRINPFNCINH = '1'B; /* no loop on no-no IMP  */

   8261   1 000783  82C7 000D                            LB,'0008'X        CLR,AUTO
   8261   1 000785       0008
          1 000786  0581 0004                            BBF      s:8262,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:150  
   8261   1 000788  8946 001D                            LBT,'0080'X       29,B6
   8261   1 00078A       0080

     1021     8262    2         INPOPR.INPOPRX = CLR.INPOPRX;

   8262   1 00078B  EF47 0015                            STR,R6   INPOPR+4,AUTO

     1022     8263    2         INPOPR.IMD = CLR.IMD;

   8263   1 00078D  D847 000D                            LDR,R5   CLR,AUTO
          1 00078F  DAC7 0011                            SRM,R5,'0080'X    INPOPR,AUTO
          1 000791       0080

     1023     8264    2         BFREDTX = %KV_SSN.REDBFR.EDTLOWX; /* Save for WORDWRAP check            */

   8264   1 000792  C845 002B                            LDR,R4   43,B5
          1 000794  CF47 000C                            STR,R4   BFREDTX,AUTO

     1024     8265    2         CALL KVI$INTINPOPR(INPOPR);

   8265   1 000796  CBC7 0011                            LAB,B4   INPOPR,AUTO
          1 000798  CFC7 0024                            STB,B4   USR_EVT+5,AUTO
          1 00079A  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 00079C  CBF0 0100                            LAB,B4   256,IMO
          1 00079E  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPR
          1 0007A1       0001                            DC       s:8269,PREL

     1025     8266
     1026     8267        /* We're done processing this chr.                                            */
     1027     8268
     1028     8269    2         IF %KV_SSN.SNCPTR$~=ADDR(KV$PTR) THEN RETURN;

   8269   1 0007A2  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 0007A4  DCC6 0008                            LDB,B5   8,B6
          1 0007A6  DD80 0000 0000  xsym                 CMB,B5   KV$PTR$
          1 0007A9  0901 0004                            BE       s:8270,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:151  
   8269   1 0007AB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1029     8270    2         REDBFR$ = %KV_SSN.REDBFR__.ADR$;

   8270   1 0007AE  CCC6 0030                            LDB,B4   48,B6
          1 0007B0  CFC7 0004                            STB,B4   REDBFR$,AUTO

     1030     8271    2         %KV_SSN.INPCHR = BINASC(INPOPR.ORGCHR);

   8271   1 0007B2  E847 0014                            LDR,R6   INPOPR+3,AUTO
          1 0007B4  6008                                 SOL,R6   8
          1 0007B5  6068                                 SAR,R6   8
          1 0007B6  E7C6 0029                            STH,R6   41,B6

     1031     8272    2         IF %KV_VDI.USRRQSDAT.RED THEN GOTO CHKWRDWRP;

   8272   1 0007B8  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 0007BB  AC83                                 LDB,B2   ,B3
          1 0007BC  82C2 001D                            LB,'0010'X        29,B2
          1 0007BE       0010
          1 0007BF  0501 0429                            BBT      s:8714,PREL

     1032     8273    2         RETURN;

   8273   1 0007C1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1033     8274    2      END /* IF */;
     1034     8275        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:152  
     1035     8276
     1036     8277    2      IF INPOPR.ACKCHR>=%KV_INPCTRSTRCHR_BIS THEN DO;

   8277   1 0007C4  D847 0016                            LDR,R5   INPOPR+5,AUTO
          1 0007C6  D970 0300                            CMR,R5   768,IMO
          1 0007C8  0801 0004                            BAL      s:8285,PREL

     1037     8278
     1038     8279        /* The character is an input control string ID character.
     1039     8280           We failed on identifying it. Ignore it.                                    */
     1040     8281
     1041     8282    2         RETURN;

   8282   1 0007CA  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1042     8283    2      END /* IF */;
     1043     8284
     1044     8285    2      IF NOT %KV_VDI.USRRQSDAT.RED THEN DO;

   8285   1 0007CD  DC86                                 LDB,B5   ,B6
          1 0007CE  82C5 001D                            LB,'0010'X        29,B5
          1 0007D0       0010
          1 0007D1  0501 001F                            BBT      s:8305,PREL

     1045     8286
     1046     8287        /* We're not doing read processing; done processing this chr.                 */
     1047     8288
     1048     8289    2         IF CLR.IMD AND KV$PTR.USRINPFNCINH THEN RETURN;

   8289   1 0007D3  82C7 000D                            LB,'0080'X        CLR,AUTO
   8289   1 0007D5       0080
          1 0007D6  0581 0009                            BBF      s:8292,PREL
          1 0007D8  82C6 001D                            LB,'0080'X        29,B6
          1 0007DA       0080
          1 0007DB  0581 0004                            BBF      s:8292,PREL

   8289   1 0007DD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:153  

     1049     8290        /* There's no typeahead for I IN IMPs. */
     1050     8291
     1051     8292    2         %KV_SSN.TYPAHD.BFRCHR = '1'B;

   8292   1 0007E0  CCC7 0008                            LDB,B4   SSN$,AUTO
          1 0007E2  8944 0027                            LBT,'0020'X       39,B4
          1 0007E4       0020

     1052     8293    3         IF %KV_STR.SNDMAXNMBRCR~=0 THEN DO;

   8293   1 0007E5  DCC6 0004                            LDB,B5   4,B6
          1 0007E7  C845 0019                            LDR,R4   25,B5
          1 0007E9  4901 0004                            BEZ,R4   s:8300,PREL

     1053     8294
     1054     8295        /* There is a no-wait read request waiting to
     1055     8296           be enabled.                                                                */
     1056     8297
     1057     8298    3            %KV_SSN.NO_WATREDTRG = '1'B;

   8298   1 0007EB  8944 0028                            LBT,'0004'X       40,B4
   8298   1 0007ED       0004

     1058     8299    3         END /* IF */;

     1059     8300    2         RETURN;

   8300   1 0007EE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1060     8301    2      END /* IF */;
     1061     8302
     1062     8303        /* We have a read pending; do read buffering, echoplex, etc. of the input chr.*/
     1063     8304
     1064     8305    2      IF %KV_MVD.UPPERCASE THEN DO;

   8305   1 0007F1  CCC7 000A                            LDB,B4   MVD$,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:154  
          1 0007F3  82C4 0015                            LB,'0001'X        21,B4
          1 0007F5       0001
          1 0007F6  0581 000C                            BBF      s:8316+2,PREL

     1065     8306
     1066     8307        /* We're in upper-case-shift mode.                                            */
     1067     8308
     1068     8309    3         IF INPOPR.ACKCHR>=ASCBIN('a') AND INPOPR.ACKCHR<=ASCBIN('z') THEN DO;

   8309   1 0007F8  5D61                                 CMV,R5   97
          1 0007F9  0801 0017                            BAL      s:8340,PREL
          1 0007FB  5D7A                                 CMV,R5   122
          1 0007FC  0A01 0014                            BAG      s:8340,PREL

     1069     8310
     1070     8311        /* We're in upper case shift mode and this chr is
     1071     8312           a lower case chr. shift to upper case.                                     */
     1072     8313
     1073     8314    3            INPOPR.ACKCHR = INPOPR.ACKCHR-ASCBIN('a')+ASCBIN('A');

   8314   1 0007FE  5EE0                                 ADV,R5   -32
          1 0007FF  DF47 0016                            STR,R5   INPOPR+5,AUTO

     1074     8315    3         END /* IF */;

     1075     8316    2      END; ELSE IF %KV_MVD.LOWERCASE THEN DO;

   8316   1 000801  0F81 000F                            B        s:8340,PREL

   8316   1 000803  82C4 0015                            LB,'0020'X        21,B4
   8316   1 000805       0020
          1 000806  0581 000A                            BBF      s:8340,PREL

     1076     8317
     1077     8318        /* We're in lower-case-shift mode. this isn't quite a case shift; we're
     1078     8319           shifting sticks 6 and 7, except we don't shift underscore ('5F'X), which
     1079     8320           would map into del ('7F'X).                                                */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:155  
     1080     8321
     1081     8322        /* The mapping is.                                                            */
     1082     8323
     1083     8324        /* Upper case alpha's ->lower case alpha's
     1084     8325           [ (left bracket) ->{ (left brace)
     1085     8326           \ (back-slash) ->| (vertical line)
     1086     8327           ] (right bracket) ->} (right brace)
     1087     8328           ^ (up-arrow) ->~ (tilde)                                                  */
     1088     8329
     1089     8330    3         IF INPOPR.ACKCHR>=ASCBIN('@') AND INPOPR.ACKCHR<=ASCBIN('^') THEN DO;

   8330   1 000808  5D40                                 CMV,R5   64
          1 000809  0801 0007                            BAL      s:8340,PREL
          1 00080B  5D5E                                 CMV,R5   94
          1 00080C  0A01 0004                            BAG      s:8340,PREL

     1090     8331
     1091     8332        /* We're in lower case shift mode and this chr is
     1092     8333           an upper case chr. shift to lower case.                                    */
     1093     8334
     1094     8335    3            INPOPR.ACKCHR = INPOPR.ACKCHR+ASCBIN('a')-ASCBIN('A');

   8335   1 00080E  5E20                                 ADV,R5   32
          1 00080F  DF47 0016                            STR,R5   INPOPR+5,AUTO

     1095     8336    3         END /* IF */;

     1096     8337    2      END /* IF */;

     1097     8338
     1098     8339        /* Put the char in the proper place */
     1099     8340    1      CLR.CHR = INPOPR.ACKCHR;

   8340   1 000811  E855                                 LDR,R6   R5
          1 000812  EF47 000E                            STR,R6   CLR+1,AUTO

     1100     8341    1      GOTO BFRREDCHR;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:156  

   8341   1 000814  0F81 0028                            B        s:8357,PREL

     1101     8342        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:157  
     1102     8343
     1103     8344
     1104     8345    1   KVI$BFRREDCHR: ENTRY;

   8345   1 000816  D380 0000 0000  xent KVI$BFRREDCHR   LNJ,B5   X6A_AUTO_0
          1 000819       0027 0000                       DC       39,0

     1105     8346
     1106     8347    1      SSN$ = KV$PTR.SSN$;

   8347   1 00081B  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00081E  DCC6 0002                            LDB,B5   2,B6
          1 000820  DFC7 0008                            STB,B5   SSN$,AUTO

     1107     8348    1      MVD$ = KV$PTR.MVD$;

   8348   1 000822  CCC6 0006                            LDB,B4   6,B6
          1 000824  CFC7 000A                            STB,B4   MVD$,AUTO

     1108     8349    2      IF NOT %KV_VDI.USRRQSDAT.RED THEN DO;

   8349   1 000826  BC86                                 LDB,B3   ,B6
          1 000827  82C3 001D                            LB,'0010'X        29,B3
          1 000829       0010
          1 00082A  0501 0004                            BBT      s:8355,PREL

     1109     8350
     1110     8351        /* There is no read enabled.                                                  */
     1111     8352
     1112     8353    2         RETURN;

   8353   1 00082C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1113     8354    2      END /* IF */;
     1114     8355    1      CLR = '0'B;

   8355   1 00082F  8747 000D                            CL       CLR,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:158  
          1 000831  8747 000E                            CL       CLR+1,AUTO

     1115     8356    1      CLR.ECH = %KV_SSN.INPECH;

   8356   1 000833  E845 0028                            LDR,R6   40,B5
          1 000835  6006                                 SOL,R6   6
          1 000836  EAC7 000D                            SRM,R6,'0040'X    CLR,AUTO
          1 000838       0040

     1116     8357    1      CLR.CHR = ASCBIN(%KV_SSN.INPCHR);

   8357   1 000839  E2C5 0029                            LLH,R6   41,B5
          1 00083B  EF47 000E                            STR,R6   CLR+1,AUTO

   8357   1                              BFRREDCHR       null
     1117     8358        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:159  
     1118     8359    1   BFRREDCHR:;
     1119     8360    1      IF %KV_STR.ACTCHRTBL$->KV$SHRBFR.BITT(CLR.CHR)

   8360   1 00083D  DCC6 0004            BFRREDCHR       LDB,B5   4,B6
          1 00083F  BCC5 000A                            LDB,B3   10,B5
          1 000841  B856                                 LDR,R3   R6
          1 000842  3E40                                 ADV,R3   64
          1 000843  82B3                                 LB       ,B3,R3
          1 000844  0581 0042                            BBF      s:8389,PREL
          1 000846  89C6 001B                            CMZ      27,B6
          1 000848  0881 0006                            BAGE     s:8369,PREL
          1 00084A  82C5 001C                            LB,'0080'X        28,B5
          1 00084C       0080
          1 00084D  0581 0039                            BBF      s:8389,PREL

     1120     8361
     1121     8362        /* Either we're not in transparent mode, or we're in transparent
     1122     8363           mode and are to honor the read activation character set.                   */
     1123     8364
     1124     8365    2        AND (NOT KV$PTR.INPCNDPND.TRN OR %KV_STR.ACTONTRN) THEN DO;

     1125     8366
     1126     8367        /* This is an activation character.                                           */
     1127     8368
     1128     8369    3         IF NOT KV$PTR.INPCNDPND.TRN THEN DO;

   8369   1 00084F  89C6 001B                            CMZ      27,B6
          1 000851  0801 0018                            BAL      s:8382,PREL

     1129     8370
     1130     8371        /* This isn't a transparent read;
     1131     8372           position to after the highest non-blank
     1132     8373           position before echoing (possibly) character.                              */
     1133     8374
     1134     8375    3            IF %KV_MVD.ORG<=%KV#VD_ORG_X364

   8375   1 000853  D2C4 0015                            LLH,R5   21,B4
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:160  
          1 000855  5D02                                 CMV,R5   2
          1 000856  0301 0010                            BG       s:8380,PREL
          1 000858  0201 0009                            BL       s:8378,PREL
          1 00085A  ACC7 0008                            LDB,B2   SSN$,AUTO
          1 00085C  C842 0033                            LDR,R4   51,B2
          1 00085E  C945 0015                            CMR,R4   21,B5
          1 000860  0281 0006                            BGE      s:8380,PREL

     1135     8376    3              AND (%KV_MVD.ORG<%KV#VD_ORG_X364 /* Dont echo outside the field    */
     1136     8377    4              OR %KV_SSN.REDBFR__.DATBYTSIZ<%KV_STR.MAXRCRBYTSIZ) THEN DO;

     1137     8378    4               CALL PSTENDRED;

   8378   1 000862  E3C0 041B                            LNJ,B6   s:0,PREL
          1 000864       0001                            DC       s:8379,PREL

     1138     8379    4            END; ELSE DO;

   8379   1 000865  0F81 0004                            B        s:8382,PREL

     1139     8380    4               CLR.ECH = '0'B;

   8380   1 000867  8847 000D                            LBF,'0040'X       CLR,AUTO
   8380   1 000869       0040

     1140     8381    4            END /* IF */;

     1141     8382    3         END /* IF */;

   8382   1                              ACTRED          null
     1142     8383    2   ACTRED:;
     1143     8384    2         KV@VDH_DAT = KV_VDH_DAT_NRM_ACTCHR;

   8384   1 00086A  AB80 0000 0000  xsym ACTRED          LAB,B2   KV_VDH_DAT_NRM_ACTCHR
          1 00086D  2C00                                 LDV,R2   0
          1 00086E  6C10                                 LDV,R6   16
          1 00086F  BB87                                 LAB,B3   ,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:161  
          1 000870  3C2E                                 LDV,R3   46
          1 000871  0008                                 MMM

     1144     8385    2         KV@VDH_DAT.DATCTRCHR = BINASC(CLR.CHR);

   8385   1 000872  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000874  6008                                 SOL,R6   8
          1 000875  6068                                 SAR,R6   8
          1 000876  EAC7 001E                            SRM,R6,'00FF'X    KV@VDH_DAT+7,AUTO
          1 000878       00FF

     1145     8386    2         CALL KVI$ACTRED (KV@VDH_DAT);

   8386   1 000879  EBC7 0017                            LAB,B6   KV@VDH_DAT,AUTO
          1 00087B  EFC7 0024                            STB,B6   USR_EVT+5,AUTO
          1 00087D  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 00087F  CBF0 0100                            LAB,B4   256,IMO
          1 000881  E380 0000 0000  xent                 LNJ,B6   KVI$ACTRED
          1 000884       0001                            DC       s:8387,PREL

     1146     8387    2         GOTO ECHO_CHR;

   8387   1 000885  0F81 025D                            B        s:8640,PREL

     1147     8388    2      END /* IF */;
     1148     8389    1      IF %KV_VDI.INPUNT=%KV_INPUNT_BLK

   8389   1 000887  AC86                                 LDB,B2   ,B6
          1 000888  D842 001D                            LDR,R5   29,B2
          1 00088A  5045                                 SOR,R5   5
          1 00088B  D570 0003                            AND,R5   3,IMO
          1 00088D  5D03                                 CMV,R5   3
          1 00088E  0981 0014                            BNE      s:8401,PREL
          1 000890  9CC7 0008                            LDB,B1   SSN$,AUTO
          1 000892  C841 0033                            LDR,R4   51,B1
          1 000894  C945 0015                            CMR,R4   21,B5
          1 000896  0201 000C                            BL       s:8401,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:162  
          1 000898  4801 000A                            BLZ,R4   s:8401,PREL
          1 00089A  C941 002B                            CMR,R4   43,B1
          1 00089C  0981 0006                            BNE      s:8401,PREL

     1149     8390    1        AND %KV_SSN.REDBFR__.DATBYTSIZ>=%KV_STR.MAXRCRBYTSIZ
     1150     8391    1        AND %KV_SSN.REDBFR__.DATBYTSIZ=%KV_SSN.REDBFR.EDTLOWX
     1151     8392    2      THEN DO;

     1152     8393        /*
     1153     8394           The read is complete, and this character didn't simply activate.
     1154     8395           Activate the read and save the character.
     1155     8396        */
     1156     8397    2         %KV_SSN.TYPAHD.BFRCHR = '1'B;

   8397   1 00089E  8941 0027                            LBT,'0020'X       39,B1
   8397   1 0008A0       0020

     1157     8398    2         GOTO ACTBLKRED;

   8398   1 0008A1  0F81 039A                            B        s:8724,PREL

     1158     8399    2      END;
     1159     8400        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:163  
     1160     8401    1      REDBFR$ = %KV_SSN.REDBFR__.ADR$;

   8401   1 0008A3  9CC7 0008                            LDB,B1   SSN$,AUTO
          1 0008A5  ECC1 0030                            LDB,B6   48,B1
          1 0008A7  EFC7 0004                            STB,B6   REDBFR$,AUTO

     1161     8402    2      IF REDBFR$=ADDR(NIL) THEN DO;

   8402   1 0008A9  8DC7 0004                            CMN      REDBFR$,AUTO
          1 0008AB  0981 0024                            BNE      s:8415,PREL

     1162     8403
     1163     8404        /* We need a read buffer.                                                     */
     1164     8405
     1165     8406    2         IF NOT KV$PTR.INPCNDPND.TRN THEN GOTO NON_TRN_REDBFR;

   8406   1 0008AD  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0008B0  89C5 001B                            CMZ      27,B5
          1 0008B2  0881 0011                            BAGE     s:8408,PREL

     1166     8407    2         CALL KVS$GETREDBFR(%KV_STR.MAXRCRBYTSIZ)

   8407   1 0008B4  BCC5 0004                            LDB,B3   4,B5
          1 0008B6  ABC3 0015                            LAB,B2   21,B3
          1 0008B8  AFC7 0024                            STB,B2   USR_EVT+5,AUTO
          1 0008BA  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 0008BC  CBF0 0100                            LAB,B4   256,IMO
          1 0008BE  E380 0000 0000  xent                 LNJ,B6   KVS$GETREDBFR
          1 0008C1       0003                            DC       s:8408,PREL
          1 0008C2  0F81 0007                            B        s:8412,PREL

     1167     8408    3         WHENALTRETURN DO;

   8406   1                              NON_TRN_REDBFR  null
     1168     8409    3   NON_TRN_REDBFR:;
     1169     8410    3            CALL KVS$GETREDBFR ALTRET (REDDATLST);

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:164  
   8410   1 0008C4  CBF0 0000            NON_TRN_REDBFR  LAB,B4   0,IMO
          1 0008C6  E380 0000 0000  xent                 LNJ,B6   KVS$GETREDBFR
          1 0008C9       0510                            DC       s:8844,PREL

     1170     8411    3         END;

     1171     8412    2         REDBFR$ = %KV_SSN.REDBFR__.ADR$;

   8412   1 0008CA  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 0008CC  DCC6 0030                            LDB,B5   48,B6
          1 0008CE  DFC7 0004                            STB,B5   REDBFR$,AUTO

     1172     8413    2      END /* IF */;

     1173     8414        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:165  
     1174     8415    2      IF %KV_SSN.REDONL THEN DO;

   8415   1 0008D0  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 0008D2  82C6 0028                            LB,'0200'X        40,B6
          1 0008D4       0200
          1 0008D5  0581 0029                            BBF      s:8423,PREL

     1175     8416    2         INPOPR = '0'B;                    /* Ignore the profile table           */

   8416   1 0008D7  5C0C                                 LDV,R5   12
          1 0008D8  0021                                 ALR      ;
          1 0008D9       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0008DB       4007 0011                                ALPHANUM(INPOPR,AUTO,,R5,FILL)

     1176     8417    2         IF CLR.REDONL OR KV$PTR.USRINPFNCINH THEN RETURN;

   8417   1 0008DD  82C7 000D                            LB,'0008'X        CLR,AUTO
   8417   1 0008DF       0008
          1 0008E0  437F                                 CSYNC    s:8417+2,SPREL
          1 0008E1  0501 0009                            BBT      s:8417+14,PREL
          1 0008E3  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0008E6  82C5 001D                            LB,'0080'X        29,B5
          1 0008E8       0080
          1 0008E9  0581 0004                            BBF      s:8418,PREL

   8417   1 0008EB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1177     8418    2         CLR = %CLR_REDONL;

   8418   1 0008EE  8CF0 0008 0000                       LDI      524288,IMO
          1 0008F1  8D47 000D                            SDI      CLR,AUTO

     1178     8419    2         INPFNCUSR$ = %KV_MVD.USRINPFNCTBL$;

   8419   1 0008F3  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 0008F5  BCC4 0008                            LDB,B3   8,B4
          1 0008F7  BFC7 0006                            STB,B3   TRNTBL$,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:166  

     1179     8420    2         INPFNCSST$ = %KV_MVD.SSTINPFNCTBL$;

   8420   1 0008F9  ACC4 000A                            LDB,B2   10,B4
          1 0008FB  AFC7 0004                            STB,B2   REDBFR$,AUTO

     1180     8421    2         GOTO SUBCOMMON;

   8421   1 0008FD  0F81 F9B0                            B        s:7779,PREL

     1181     8422    2      END;
     1182     8423    1      BFREDTX = %KV_SSN.REDBFR.EDTLOWX;

   8423   1 0008FF  E846 002B                            LDR,R6   43,B6
          1 000901  EF47 000C                            STR,R6   BFREDTX,AUTO

     1183     8424    2      IF BFREDTX>=%KV_SSN.REDBFR.NXTX THEN DO;

   8424   1 000903  E946 002A                            CMR,R6   42,B6
          1 000905  0801 0036                            BAL      s:8453,PREL

     1184     8425
     1185     8426        /* We're positioned just after the end of the read data.
     1186     8427           this is the simple add-to-the-end-of-the-record situation.                 */
     1187     8428
     1188     8429    3         IF BFREDTX-%KV_SSN.REDBFR__.BYTX>=%KV_SSN.REDBFR__.BFRBYTSIZ THEN DO;

   8429   1 000907  E246 0032                            SUB,R6   50,B6
          1 000909  6801 0011                            BLZ,R6   s:8438,PREL
          1 00090B  E946 0034                            CMR,R6   52,B6
          1 00090D  0201 000D                            BL       s:8438,PREL

     1189     8430
     1190     8431        /* We need a bigger buffer */
     1191     8432    3            CALL KVS$GETREDBFR ALTRET (REDDATLST);

   8432   1 00090F  CBF0 0000                            LAB,B4   0,IMO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:167  
          1 000911  E380 0000 0000  xent                 LNJ,B6   KVS$GETREDBFR
          1 000914       04C5                            DC       s:8844,PREL

     1192     8433    3            REDBFR$ = %KV_SSN.REDBFR__.ADR$;

   8433   1 000915  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000917  DCC6 0030                            LDB,B5   48,B6
          1 000919  DFC7 0004                            STB,B5   REDBFR$,AUTO

     1193     8434    3         END /* IF */;

     1194     8435
     1195     8436        /* Buffer the character.                                                      */
     1196     8437
     1197     8438    2         IF KV_NONPSTCHR(CLR.CHR)

   8438   1 00091B  B847 000E                            LDR,R3   CLR+1,AUTO
          1 00091D  82B0 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R3
          1 000920  0581 0004                            BBF      s:8440,PREL

     1198     8439    2         THEN %KV_SSN.CLMIS_BYTX = '0'B;

   8439   1 000922  8846 0037                            LBF,'0080'X       55,B6
   8439   1 000924       0080

     1199     8440    2         REDBFR.BIN(BFREDTX) = CLR.CHR;

   8440   1 000925  DCC7 0004                            LDB,B5   REDBFR$,AUTO
          1 000927  A847 000C                            LDR,R2   BFREDTX,AUTO
          1 000929  B7A5                                 STH,R3   ,B5,R2

     1200     8441    2         BFREDTX = BFREDTX+1;

   8441   1 00092A  8AC7 000C                            INC      BFREDTX,AUTO

     1201     8442    2         %KV_SSN.REDBFR.NXTX = BFREDTX;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:168  
   8442   1 00092C  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 00092E  EF46 002A                            STR,R6   42,B6

     1202     8443    2         %KV_SSN.REDBFR.EDTLOWX = BFREDTX;

   8443   1 000930  EF46 002B                            STR,R6   43,B6

     1203     8444    2         %KV_SSN.REDBFR.EDTHI_X = BFREDTX;

   8444   1 000932  EF46 002C                            STR,R6   44,B6

     1204     8445    2         %KV_SSN.REDBFR.INSMODX = BFREDTX;

   8445   1 000934  EF46 002E                            STR,R6   46,B6

     1205     8446    2         %KV_SSN.REDBFR__.DATBYTSIZ = BFREDTX-%KV_SSN.REDBFR__.BYTX;

   8446   1 000936  E246 0032                            SUB,R6   50,B6
          1 000938  EF46 0033                            STR,R6   51,B6

     1206     8447    2      END;

   8447   1 00093A  0F81 01A8                            B        s:8640,PREL

     1207     8448        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:169  
     1208     8449    2      ELSE DO;

     1209     8450        /* We're not positioned after the end of the read data.
     1210     8451           we are to overstrike, replace, or insert.                                  */
     1211     8452
     1212     8453    3         IF %KV_VDI.RE_DSPINP AND BFREDTX<%KV_VDI.RE_DSPLOWX THEN DO;

   8453   1 00093C  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00093F  CC85                                 LDB,B4   ,B5
          1 000940  82C4 0019                            LB,'0010'X        25,B4
          1 000942       0010
          1 000943  0581 0009                            BBF      s:8460,PREL
          1 000945  6801 0005                            BLZ,R6   s:8458,PREL
          1 000947  E944 0016                            CMR,R6   22,B4
          1 000949  0281 0003                            BGE      s:8460,PREL

     1213     8454
     1214     8455        /* We've stopped echoing this record. Keep track
     1215     8456           of how much needs to be re-displayed.                                      */
     1216     8457
     1217     8458    3            %KV_VDI.RE_DSPLOWX = BFREDTX;

   8458   1 00094B  EF44 0016                            STR,R6   22,B4

     1218     8459    3         END /* IF */;

     1219     8460    3         IF BFREDTX=%KV_SSN.REDBFR.INSMODX OR %KV_MVD.INSMOD THEN DO;

   8460   1 00094D  E946 002E                            CMR,R6   46,B6
          1 00094F  0901 0008                            BE       s:8466,PREL
          1 000951  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 000953  82C4 0016                            LB,'0008'X        22,B4
          1 000955       0008
          1 000956  0581 0045                            BBF      s:8485,PREL

     1220     8461
     1221     8462        /* We're at the insert mode point, i.e., pointing at the same point
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:170  
     1222     8463           as when insert mode was entered.
     1223     8464           this is the simple insert situation.                                       */
     1224     8465
     1225     8466    3            CALL SHFRHT1 ALTRET (REDDATLST);

   8466   1 000958  E3C0 03C9                            LNJ,B6   s:0,PREL
          1 00095A       047F                            DC       s:8844,PREL

     1226     8467    3            REDBFR.BIN(BFREDTX) = CLR.CHR;

   8467   1 00095B  E847 000E                            LDR,R6   CLR+1,AUTO
          1 00095D  ECC7 0004                            LDB,B6   REDBFR$,AUTO
          1 00095F  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000961  E7B6                                 STH,R6   ,B6,R3

     1227     8468    3            %KV_SSN.REDBFR.EDTLOWX = %KV_SSN.REDBFR.EDTLOWX+1;

   8468   1 000962  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 000964  8AC5 002B                            INC      43,B5

     1228     8469    3            IF KV_NONPSTCHR(CLR.CHR)

   8469   1 000966  A847 000E                            LDR,R2   CLR+1,AUTO
          1 000968  82A0 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R2
          1 00096B  0581 0006                            BBF      s:8471,PREL

     1229     8470    3            THEN %KV_SSN.CLMIS_BYTX = '0'B;

   8470   1 00096D  8845 0037                            LBF,'0080'X       55,B5
   8470   1 00096F       0080
          1 000970  0F81 0029                            B        s:8478,PREL

     1230     8471    3            ELSE IF %KV_MVD.EDITOVR AND NOT %KV_VDI.RE_DSPINP

   8471   1 000972  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 000974  82C4 0016                            LB,'0040'X        22,B4
          1 000976       0040
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:171  
          1 000977  0581 0022                            BBF      s:8478,PREL
          1 000979  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 00097C  AC83                                 LDB,B2   ,B3
          1 00097D  82C2 0019                            LB,'0010'X        25,B2
          1 00097F       0010
          1 000980  0501 0019                            BBT      s:8478,PREL
          1 000982  82C4 0016                            LB,'0080'X        22,B4
          1 000984       0080
          1 000985  0581 0014                            BBF      s:8478,PREL
          1 000987  82C7 000D                            LB,'0020'X        CLR,AUTO
          1 000989       0020
          1 00098A  0501 0006                            BBT      s:8477,PREL
          1 00098C  82C7 000D                            LB,'0040'X        CLR,AUTO
          1 00098E       0040
          1 00098F  0581 000A                            BBF      s:8478,PREL

     1231     8472    3              AND %KV_MVD.RETYPOVR AND (CLR.LCLECH OR CLR.ECH)
     1232     8473
     1233     8474        /* We are to edit in place; type the rest of the read record shifted 1 column
     1234     8475           to the right.                                                              */
     1235     8476
     1236     8477    3            THEN CALL KVI$SHFDSPPST (1);

   8477   1 000991  BB80 0000 0008  02                   LAB,B3   +8
          1 000994  CBF0 0100                            LAB,B4   256,IMO
          1 000996  E380 0000 0000  xent                 LNJ,B6   KVI$SHFDSPPST
          1 000999       0001                            DC       s:8478,PREL

     1237     8478    3            GOTO ECHO_CHR;

   8478   1 00099A  0F81 0148                            B        s:8640,PREL

     1238     8479        /* No need to re-scope the new column, it was adjusted by SHFRHT. */
     1239     8480
     1240     8481    3         END;
     1241     8482        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:172  
     1242     8483        /* This isn't the simple insert situation.                                    */
     1243     8484
     1244     8485    3         ELSE IF %KV_MVD.OVRSTR THEN DO;

   8485   1 00099C  82C4 0015                            LB,'0010'X        21,B4
   8485   1 00099E       0010
          1 00099F  0581 00B8                            BBF      s:8596,PREL

     1245     8486
     1246     8487        /* We are to overstrike (as opposed to replace).                              */
     1247     8488        /* Check for special cases */
     1248     8489
     1249     8490    3            BFREDTX = %KV_SSN.REDBFR.EDTHI_X;

   8490   1 0009A1  E846 002C                            LDR,R6   44,B6
          1 0009A3  EF47 000C                            STR,R6   BFREDTX,AUTO

     1250     8491    3            IF CLR.CHR=ASCBIN(' ')

   8491   1 0009A5  D847 000E                            LDR,R5   CLR+1,AUTO
          1 0009A7  5D20                                 CMV,R5   32
          1 0009A8  0981 0027                            BNE      s:8510,PREL
          1 0009AA  BCC7 0004                            LDB,B3   REDBFR$,AUTO
          1 0009AC  B856                                 LDR,R3   R6
          1 0009AD  A2B3                                 LLH,R2   ,B3,R3
          1 0009AE  82A0 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R2
          1 0009B1  0501 001E                            BBT      s:8510,PREL

     1251     8492    4              AND NOT KV_NONPSTCHR(REDBFR.BIN(BFREDTX)) THEN DO;

     1252     8493
     1253     8494        /* The character we're processing is a space,
     1254     8495           and we're overstriking. Don't buffer the space,
     1255     8496           unless the column we're overstriking has no width,
     1256     8497           to avoid character-BS-SP combinations in the read buffer.                  */
     1257     8498
     1258     8499    4               IF (%KV_MVD.DISPINPUT OR %KV_MVD.RETYPOVR)
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:173  

   8499   1 0009B3  82C4 0015                            LB,'0080'X        21,B4
   8499   1 0009B5       0080
          1 0009B6  0501 0006                            BBT      s:8499+10,PREL
          1 0009B8  82C4 0016                            LB,'0080'X        22,B4
          1 0009BA       0080
          1 0009BB  0581 0113                            BBF      s:8632,PREL
          1 0009BD  82C7 000D                            LB,'0040'X        CLR,AUTO
          1 0009BF       0040
          1 0009C0  0581 010E                            BBF      s:8632,PREL

     1259     8500    5                 AND CLR.ECH THEN DO;

     1260     8501
     1261     8502        /* We're to echo the character. Just skip 1 column to the right.              */
     1262     8503
     1263     8504    5                  CALL KVO$PST(KV_VDH_PST_SPC_VRT);

   8504   1 0009C2  BB80 0000 000A  02                   LAB,B3   +10
          1 0009C5  CBF0 0100                            LAB,B4   256,IMO
          1 0009C7  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 0009CA       0001                            DC       s:8505,PREL

     1264     8505    5                  CLR.ECH = '0'B;

   8505   1 0009CB  8847 000D                            LBF,'0040'X       CLR,AUTO
   8505   1 0009CD       0040

     1265     8506    5               END /* IF */;

     1266     8507    4            END;

   8507   1 0009CE  0F81 0100                            B        s:8632,PREL

     1267     8508        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:174  
     1268     8509        /* Still in overstrike mode, not space-on-pst */
     1269     8510    3            ELSE IF KV$REDBFR.CHR(BFREDTX)=' '

   8510   1 0009D0  BCC7 0004                            LDB,B3   REDBFR$,AUTO
          1 0009D2  B856                                 LDR,R3   R6
          1 0009D3  C0B3                                 LDH,R4   ,B3,R3
          1 0009D4  4D20                                 CMV,R4   32
          1 0009D5  0981 000A                            BNE      s:8522,PREL
          1 0009D7  A855                                 LDR,R2   R5
          1 0009D8  82A0 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R2
          1 0009DB  0501 0004                            BBT      s:8522,PREL

     1270     8511    4              AND NOT KV_NONPSTCHR(CLR.CHR) THEN DO;

     1271     8512
     1272     8513        /* The character we're processing causes positioning, and
     1273     8514           the last column in the read buffer contains a space.
     1274     8515           Replace the space in the read buffer with the character
     1275     8516           we're processing.                                                          */
     1276     8517
     1277     8518    4               REDBFR.BIN(BFREDTX) = CLR.CHR;

   8518   1 0009DD  A7B3                                 STH,R2   ,B3,R3

     1278     8519    4            END;

   8519   1 0009DE  0F81 00F0                            B        s:8632,PREL

     1279     8520        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:175  
     1280     8521        /* Still overstrike, not space-on-pst or pst-on-space */
     1281     8522    3            ELSE IF (CLR.CHR=ASCBIN('.') AND KV$REDBFR.CHR(BFREDTX)=''''

   8522   1 0009E0  5D2E                                 CMV,R5   46
          1 0009E1  0981 0004                            BNE      s:8522+6,PREL
          1 0009E3  4D27                                 CMV,R4   39
          1 0009E4  0901 0007                            BE       s:8522+12,PREL
          1 0009E6  5D27                                 CMV,R5   39
          1 0009E7  0981 0016                            BNE      s:8545,PREL
          1 0009E9  4D2E                                 CMV,R4   46
          1 0009EA  0981 0013                            BNE      s:8545,PREL
          1 0009EC  B946 002B                            CMR,R3   43,B6
          1 0009EE  0981 000F                            BNE      s:8545,PREL
          1 0009F0  ACC4 000E                            LDB,B2   14,B4
          1 0009F2  A2C2 001D                            LLH,R2   29,B2
          1 0009F4  2D01                                 CMV,R2   1
          1 0009F5  0901 0004                            BE       s:8539,PREL
          1 0009F7  2D02                                 CMV,R2   2
          1 0009F8  0981 0005                            BNE      s:8545,PREL

     1282     8523    3              OR CLR.CHR=ASCBIN('''') AND KV$REDBFR.CHR(BFREDTX)='.')
     1283     8524
     1284     8525        /* The character just typed is a period or a single quote.
     1285     8526           see if this is the apl overstrike that forms an
     1286     8527           exclamation mark (bang, !).                                                */
     1287     8528
     1288     8529    3              AND BFREDTX=%KV_SSN.REDBFR.EDTLOWX
     1289     8530
     1290     8531        /* There is only 1 character in the virtual column we're about
     1291     8532           to overstrike.                                                             */
     1292     8533
     1293     8534    3              AND (%KV_MVD.TRNTBL$->KV$TRNTBL.FNTCLS=%KV_FNTCLS_APLB
     1294     8535    4              OR %KV_MVD.TRNTBL$->KV$TRNTBL.FNTCLS=%KV_FNTCLS_APLT) THEN DO;

     1295     8536
     1296     8537        /* We're using an apl translate table.                                        */
     1297     8538
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:176  
     1298     8539    4               KV$REDBFR.CHR(BFREDTX) = '!';

   8539   1 0009FA  1C21                                 LDV,R1   33
          1 0009FB  97B3                                 STH,R1   ,B3,R3

     1299     8540    4            END /* IF */;

   8540   1 0009FC  0F81 00D2                            B        s:8632,PREL

     1300     8541        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:177  
     1301     8542        /* STILL overstrike, not space-pst, pst-space, or APL ! */
     1302     8543    4            ELSE DO;

     1303     8544        /* All other possibilities make this column have >1 char in it. */
     1304     8545    4               %KV_SSN.CLMIS_BYTX = '0'B;

   8545   1 0009FE  8846 0037                            LBF,'0080'X       55,B6
   8545   1 000A00       0080

     1305     8546    5               IF KV_NONPSTCHR(REDBFR.BIN(BFREDTX)) THEN DO;

   8546   1 000A01  A2B3                                 LLH,R2   ,B3,R3
          1 000A02  82A0 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R2
          1 000A05  0581 000F                            BBF      s:8559,PREL

     1306     8547
     1307     8548        /* The column we're overstriking has no width (it's all non-pst chars).
     1308     8549           Just add the new character to the end of the string. */
     1309     8550    5                  CALL SHFRHT1 ALTRET(REDDATLST);

   8550   1 000A07  E3C0 031A                            LNJ,B6   s:0,PREL
          1 000A09       03D0                            DC       s:8844,PREL

     1310     8551    5                  BFREDTX = BFREDTX+1;

   8551   1 000A0A  8AC7 000C                            INC      BFREDTX,AUTO

     1311     8552    5                  REDBFR.BIN(BFREDTX) = CLR.CHR;

   8552   1 000A0C  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000A0E  ECC7 0004                            LDB,B6   REDBFR$,AUTO
          1 000A10  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000A12  E7B6                                 STH,R6   ,B6,R3

     1312     8553    5               END /* IF */;

   8553   1 000A13  0F81 00BB                            B        s:8632,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:178  

     1313     8554        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:179  
     1314     8555        /* Either the rightmost character in this virtual column is a
     1315     8556           positioning non-space and we're not adding a space, or it is
     1316     8557           any positioning character and we're adding a non-positioning one. */
     1317     8558
     1318     8559    5               ELSE IF NOT KV_NONPSTCHR(CLR.CHR) THEN DO;

   8559   1 000A15  9855                                 LDR,R1   R5
          1 000A16  8290 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R1
          1 000A19  0501 0015                            BBT      s:8575,PREL

     1319     8560
     1320     8561        /* It's the first case (positioning non-space on positioning non-space),
     1321     8562           we'll put a bs and the new character just to the right
     1322     8563           of %KV_SSN.REDBFR.EDTHI_X.                                                  */
     1323     8564
     1324     8565    5                  CALL SHFRHT2 ALTRET(REDDATLST);

   8565   1 000A1B  E3C0 030D                            LNJ,B6   s:0,PREL
          1 000A1D       03BC                            DC       s:8844,PREL

     1325     8566
     1326     8567    5                  CALL INSERT(REDBFR_CHR,BFREDTX+1,2,BITASC(%ASCIIBS),

   8567   1 000A1E  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000A20  6008                                 SOL,R6   8
          1 000A21  6068                                 SAR,R6   8
          1 000A22  5C08                                 LDV,R5   8
          1 000A23  ECC7 0004                            LDB,B6   REDBFR$,AUTO
          1 000A25  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000A27  3E01                                 ADV,R3   1
          1 000A28  D7B6                                 STH,R5   ,B6,R3
          1 000A29  A847 000C                            LDR,R2   BFREDTX,AUTO
          1 000A2B  2E02                                 ADV,R2   2
          1 000A2C  E7A6                                 STH,R6   ,B6,R2

     1327     8568    5                    BINASC(CLR.CHR));
     1328     8569    5               END;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:180  

   8569   1 000A2D  0F81 00A1                            B        s:8632,PREL

     1329     8570        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:181  
     1330     8571        /* The character just typed is one that doesn't cause cursor
     1331     8572           movement. Insert it before a trailing blank, or after anything else with
     1332     8573           a BS and SPACE around it.                                                  */
     1333     8574
     1334     8575    5               ELSE IF KV$REDBFR.CHR(BFREDTX)=' ' THEN DO;

   8575   1 000A2F  C0B3                                 LDH,R4   ,B3,R3
          1 000A30  4D20                                 CMV,R4   32
          1 000A31  0981 001A                            BNE      s:8587,PREL

     1335     8576
     1336     8577    5                  CALL SHFRHT3 ALTRET(REDDATLST);

   8577   1 000A33  E3C0 02FC                            LNJ,B6   s:0,PREL
          1 000A35       03A4                            DC       s:8844,PREL

     1337     8578    5                  CALL INSERT(REDBFR_CHR,BFREDTX+1,3,BITASC(%ASCIIBS),

   8578   1 000A36  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000A38  6008                                 SOL,R6   8
          1 000A39  6068                                 SAR,R6   8
          1 000A3A  5C08                                 LDV,R5   8
          1 000A3B  ECC7 0004                            LDB,B6   REDBFR$,AUTO
          1 000A3D  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000A3F  3E01                                 ADV,R3   1
          1 000A40  D7B6                                 STH,R5   ,B6,R3
          1 000A41  A847 000C                            LDR,R2   BFREDTX,AUTO
          1 000A43  2E02                                 ADV,R2   2
          1 000A44  E7A6                                 STH,R6   ,B6,R2
          1 000A45  4C20                                 LDV,R4   32
          1 000A46  9847 000C                            LDR,R1   BFREDTX,AUTO
          1 000A48  1E03                                 ADV,R1   3
          1 000A49  C796                                 STH,R4   ,B6,R1

     1338     8579    5                    BINASC(CLR.CHR),' ');
     1339     8580    5               END;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:182  
   8580   1 000A4A  0F81 0084                            B        s:8632,PREL

     1340     8581
     1341     8582        /* The rightmost character in this virtual column is a space,
     1342     8583           and the new character is a non-positioning character.
     1343     8584           Insert the character just to the left of the space.                    */
     1344     8585
     1345     8586    5               ELSE DO;

     1346     8587    5                  CALL SHFRHT1 ALTRET(REDDATLST);

   8587   1 000A4C  E3C0 02D5                            LNJ,B6   s:0,PREL
          1 000A4E       038B                            DC       s:8844,PREL

     1347     8588    5                  REDBFR.BIN(BFREDTX) = CLR.CHR;

   8588   1 000A4F  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000A51  ECC7 0004                            LDB,B6   REDBFR$,AUTO
          1 000A53  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000A55  E7B6                                 STH,R6   ,B6,R3

     1348     8589    5               END /* IF */;

     1349     8590    4            END;                           /* ELSE DO                            */

     1350     8591    3         END;

   8591   1 000A56  0F81 0078                            B        s:8632,PREL

     1351     8592        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:183  
     1352     8593    3         ELSE DO;

     1353     8594        /* We are to replace rather than overstrike.                                  */
     1354     8595
     1355     8596    4            IF %KV_SSN.REDBFR.EDTHI_X~=BFREDTX THEN DO;

   8596   1 000A58  E946 002C                            CMR,R6   44,B6
          1 000A5A  0901 002D                            BE       s:8610,PREL

     1356     8597
     1357     8598        /* There is more than 1 character in this virtual column.                     */
     1358     8599
     1359     8600    4               SHF.CNT = %KV_SSN.REDBFR.NXTX-%KV_SSN.REDBFR.EDTHI_X;

   8600   1 000A5C  D846 002A                            LDR,R5   42,B6
          1 000A5E  D246 002C                            SUB,R5   44,B6
          1 000A60  DF47 0007                            STR,R5   TRNTBL$+1,AUTO

     1360     8601    4               CALL INSERT(REDBFR_CHR,BFREDTX,SHF.CNT,

   8601   1 000A62  C846 002C                            LDR,R4   44,B6
          1 000A64  ACC7 0004                            LDB,B2   REDBFR$,AUTO
          1 000A66  A854                                 LDR,R2   R4
          1 000A67  E855                                 LDR,R6   R5
          1 000A68  BB82                                 LAB,B3   ,B2
          1 000A69  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000A6B  0008                                 MMM

     1361     8602    4                 SUBSTR(REDBFR_CHR,%KV_SSN.REDBFR.EDTHI_X,SHF.CNT));
     1362     8603    4               SHF.CNT = BFREDTX-%KV_SSN.REDBFR.EDTHI_X;

   8603   1 000A6C  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000A6E  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 000A70  E246 002C                            SUB,R6   44,B6
          1 000A72  EF47 0007                            STR,R6   TRNTBL$+1,AUTO

     1363     8604    4               %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.INSMODX+SHF.CNT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:184  

   8604   1 000A74  EA46 002E                            ADD,R6   46,B6
          1 000A76  EF46 002E                            STR,R6   46,B6

     1364     8605    4               %KV_SSN.REDBFR.NXTX = %KV_SSN.REDBFR.NXTX+SHF.CNT;

   8605   1 000A78  B846 002A                            LDR,R3   42,B6
          1 000A7A  BA47 0007                            ADD,R3   TRNTBL$+1,AUTO
          1 000A7C  BF46 002A                            STR,R3   42,B6

     1365     8606    4               %KV_SSN.REDBFR__.DATBYTSIZ =

   8606   1 000A7E  A846 0033                            LDR,R2   51,B6
          1 000A80  AA47 0007                            ADD,R2   TRNTBL$+1,AUTO
          1 000A82  AF46 0033                            STR,R2   51,B6

     1366     8607    4                 %KV_SSN.REDBFR__.DATBYTSIZ+SHF.CNT;
     1367     8608    4               %KV_SSN.REDBFR.EDTHI_X = BFREDTX;

   8608   1 000A84  9847 000C                            LDR,R1   BFREDTX,AUTO
          1 000A86  9F46 002C                            STR,R1   44,B6

     1368     8609    4            END /* IF */;

     1369     8610    3            REDBFR.BIN(BFREDTX) = CLR.CHR;

   8610   1 000A88  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000A8A  DCC7 0004                            LDB,B5   REDBFR$,AUTO
          1 000A8C  B847 000C                            LDR,R3   BFREDTX,AUTO
          1 000A8E  E7B5                                 STH,R6   ,B5,R3

     1370     8611    4            IF NOT KV_NONPSTCHR(CLR.CHR) THEN DO;

   8611   1 000A8F  A847 000E                            LDR,R2   CLR+1,AUTO
          1 000A91  82A0 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R2
          1 000A94  0501 0018                            BBT      s:8625,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:185  
     1371     8612    5               IF %KV_MVD.DISPINPUT AND NOT %KV_MVD.RETYPOVR THEN DO;

   8612   1 000A96  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 000A98  82C4 0015                            LB,'0080'X        21,B4
          1 000A9A       0080
          1 000A9B  0581 0033                            BBF      s:8632,PREL
          1 000A9D  82C4 0016                            LB,'0080'X        22,B4
          1 000A9F       0080
          1 000AA0  0501 002E                            BBT      s:8632,PREL

     1372     8613
     1373     8614        /* The character just typed is one that causes cursor
     1374     8615           movement. make sure we're not printing on top of existing
     1375     8616           characters, unless we're re-typing in place.                               */
     1376     8617
     1377     8618    5                  CALL KVO$PST(KV_VDH_PST_WHTSPC);

   8618   1 000AA2  BB80 0000 000C  02                   LAB,B3   +12
          1 000AA5  CBF0 0100                            LAB,B4   256,IMO
          1 000AA7  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 000AAA       0001                            DC       s:8620,PREL

     1378     8619    5               END /* IF */;

     1379     8620    4            END /* IF */;

   8620   1 000AAB  0F81 0023                            B        s:8632,PREL

     1380     8621    4            ELSE DO;

     1381     8622
     1382     8623        /* We replaced a column with a non-positioning character. The rest of the
     1383     8624           input needs to have its display shifted to the left. */
     1384     8625    4               %KV_SSN.CLMIS_BYTX = '0'B;

   8625   1 000AAD  8846 0037                            LBF,'0080'X       55,B6
   8625   1 000AAF       0080
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:186  

     1385     8626    4               IF %KV_MVD.EDITOVR AND NOT %KV_VDI.RE_DSPINP

   8626   1 000AB0  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 000AB2  82C4 0016                            LB,'0040'X        22,B4
          1 000AB4       0040
          1 000AB5  0581 0013                            BBF      s:8628,PREL
          1 000AB7  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 000ABA  AC83                                 LDB,B2   ,B3
          1 000ABB  82C2 0019                            LB,'0010'X        25,B2
          1 000ABD       0010
          1 000ABE  0501 000A                            BBT      s:8628,PREL

     1386     8627    4               THEN CALL KVI$SHFDSPPST (-1);

   8627   1 000AC0  BB80 0000 000F  02                   LAB,B3   +15
          1 000AC3  CBF0 0100                            LAB,B4   256,IMO
          1 000AC5  E380 0000 0000  xent                 LNJ,B6   KVI$SHFDSPPST
          1 000AC8       0001                            DC       s:8628,PREL

     1387     8628    4               CALL KVI$SCPVRTCLMLOWX;

   8628   1 000AC9  CBF0 0000                            LAB,B4   0,IMO
          1 000ACB  E380 0000 0000  xent                 LNJ,B6   KVI$SCPVRTCLMLOWX
          1 000ACE       0001                            DC       s:8632,PREL

     1388     8629    4            END /* IF */;

     1389     8630    3         END /* IF */;

     1390     8631        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:187  
     1391     8632    3         IF NOT KV_NONPSTCHR(CLR.CHR) THEN DO;

   8632   1 000ACF  B847 000E                            LDR,R3   CLR+1,AUTO
          1 000AD1  82B0 0000 0000  xsym                 LB       KV_NONPSTCHR_WRD,R3
          1 000AD4  0501 000E                            BBT      s:8640,PREL

     1392     8633
     1393     8634        /* The character just typed is one that causes cursor
     1394     8635           movement.                                                                  */
     1395     8636
     1396     8637    3            %KV_SSN.REDBFR.EDTLOWX = %KV_SSN.REDBFR.EDTHI_X+1;

   8637   1 000AD6  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000AD8  E846 002C                            LDR,R6   44,B6
          1 000ADA  6E01                                 ADV,R6   1
          1 000ADB  EF46 002B                            STR,R6   43,B6

     1397     8638    3            CALL KVI$SCPVRTCLMLOWX;

   8638   1 000ADD  CBF0 0000                            LAB,B4   0,IMO
          1 000ADF  E380 0000 0000  xent                 LNJ,B6   KVI$SCPVRTCLMLOWX
          1 000AE2       0001                            DC       s:8640,PREL

     1398     8639    3         END /* IF */;

     1399     8640    2      END /* IF */;

   8627   1                              ECHO_CHR        null
     1400     8641        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:188  
     1401     8642    1   ECHO_CHR:;
     1402     8643    2      IF %KV_MVD.DISPINPUT OR %KV_MVD.RETYPOVR THEN DO;

   8643   1 000AE3  ECC7 000A            ECHO_CHR        LDB,B6   MVD$,AUTO
          1 000AE5  82C6 0015                            LB,'0080'X        21,B6
          1 000AE7       0080
          1 000AE8  0501 0006                            BBT      s:8647,PREL
          1 000AEA  82C6 0016                            LB,'0080'X        22,B6
          1 000AEC       0080
          1 000AED  0581 00F8                            BBF      s:8714,PREL

     1403     8644
     1404     8645        /* Were to echo (atleast position)                                            */
     1405     8646
     1406     8647    3         IF CLR.ECH AND NOT KV$PTR.INPCNDPND.TRN THEN DO;

   8647   1 000AEF  82C7 000D                            LB,'0040'X        CLR,AUTO
   8647   1 000AF1       0040
          1 000AF2  0581 00B0                            BBF      s:8704+2,PREL
          1 000AF4  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000AF7  89C5 001B                            CMZ      27,B5
          1 000AF9  0801 00A9                            BAL      s:8704+2,PREL

     1407     8648
     1408     8649        /* We're not in transparent mode, and we're to echo the char. */
     1409     8650
     1410     8651    3            IF %KV_VDI.USREVTENB(%KV_USR_EVT_ID_OTP1_CHR)

   8651   1 000AFB  CC85                                 LDB,B4   ,B5
          1 000AFC  82C4 001F                            LB,'0020'X        31,B4
          1 000AFE       0020
          1 000AFF  0581 0080                            BBF      s:8695,PREL
          1 000B01  BCC5 000A                            LDB,B3   10,B5
          1 000B03  E843 0016                            LDR,R6   22,B3
          1 000B05  E943 000C                            CMR,R6   12,B3
          1 000B07  0881 0078                            BAGE     s:8695,PREL
          1 000B09  82C3 000E                            LB,'0010'X        14,B3
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:189  
          1 000B0B       0010
          1 000B0C  0581 0073                            BBF      s:8695,PREL
          1 000B0E  D844 001A                            LDR,R5   26,B4
          1 000B10  5981 006F                            BNEZ,R5  s:8695,PREL
          1 000B12  ACC6 000E                            LDB,B2   14,B6
          1 000B14  9CC2 000C                            LDB,B1   12,B2
          1 000B16  B847 000E                            LDR,R3   CLR+1,AUTO
          1 000B18  C0B1                                 LDH,R4   ,B1,R3
          1 000B19  A842 001B                            LDR,R2   27,B2
          1 000B1B  2008                                 SOL,R2   8
          1 000B1C  2068                                 SAR,R2   8
          1 000B1D  C1D2                                 CMH,R4   R2
          1 000B1E  0901 0061                            BE       s:8695,PREL

     1411     8652    3              AND %KV_SRD.CRT.CLM<%KV_SRD.BTMRHT.CLM
     1412     8653        /* We're not at or beyond the right margin column.                            */
     1413     8654
     1414     8655    3              AND %KV_SRD.VRTPSTOK
     1415     8656        /* We're actually where we hope to be */
     1416     8657
     1417     8658    3              AND NOT %KV_VDI.OTPCNDPND
     1418     8659        /* There are no pending output conditions to worry about.                     */
     1419     8660
     1420     8661    3              AND %KV_MVD.TRNTBL$->KV$TRNTBL.OTPTRN1$->KV$PRMOTPTRN.CHR
     1421     8662    4              (CLR.CHR)~=%KV_MVD.TRNTBL$->KV$TRNTBL.OTPESC.CHR THEN DO;

     1422     8663        /* This character positions right 1 column, and has a complete,
     1423     8664           simple translation using the first level of the output
     1424     8665           translate table.                                                           */
     1425     8666
     1426     8667    4               IF NOT %KV_MVD.DISPINPUT

   8667   1 000B20  82C6 0015                            LB,'0080'X        21,B6
   8667   1 000B22       0080
          1 000B23  0501 0009                            BBT      s:8670,PREL

     1427     8668        /* We're to echo position only */
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:190  
     1428     8669    4               THEN INPOPR.ORGCHR = ASCBIN(%KV_MVD.TRNTBL$->KV$TRNTBL.SP_CHR);

   8669   1 000B25  9842 001D                            LDR,R1   29,B2
          1 000B27  9570 00FF                            AND,R1   255,IMO
          1 000B29  9F47 0014                            STR,R1   INPOPR+3,AUTO
          1 000B2B  0F81 0004                            B        s:8672,PREL

     1429     8670    4               ELSE INPOPR.ORGCHR = ASCBIN(%KV_MVD.TRNTBL$->

   8670   1 000B2D  92B1                                 LLH,R1   ,B1,R3
          1 000B2E  9F47 0014                            STR,R1   INPOPR+3,AUTO

     1430     8671    4                 KV$TRNTBL.OTPTRN1$->KV$PRMOTPTRN.CHR(CLR.CHR));
     1431     8672    4               USR_EVT = KV_USR_EVT;

   8672   1 000B30  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          1 000B33  8D47 001F                            SDI      USR_EVT,AUTO

     1432     8673    4               USR_EVT.ID=%KV_USR_EVT_ID_OTP1_CHR;

   8673   1 000B35  5C12                                 LDV,R5   18
          1 000B36  DAC7 001F                            SRM,R5,'007F'X    USR_EVT,AUTO
          1 000B38       007F

     1433     8674    4               USR_EVT.PRM=INPOPR.ORGCHR;

   8674   1 000B39  9F47 0020                            STR,R1   USR_EVT+1,AUTO

     1434     8675    4               CALL KVV$CALUSR_EVT(USR_EVT) ALTRET(ECHOTPLCL);

   8675   1 000B3B  CBC7 001F                            LAB,B4   USR_EVT,AUTO
          1 000B3D  CFC7 0024                            STB,B4   USR_EVT+5,AUTO
          1 000B3F  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 000B41  CBF0 0100                            LAB,B4   256,IMO
          1 000B43  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          1 000B46       003A                            DC       s:8695,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:191  
     1435     8676
     1436     8677        /* The VDH-user output the character.                                         */
     1437     8678
     1438     8679    4               %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+1;

   8679   1 000B47  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000B4A  DCC6 0008                            LDB,B5   8,B6
          1 000B4C  8AC5 001E                            INC      30,B5

     1439     8680    4               %KV_MVD.VRTCLM = %KV_MVD.VRTCLM+1;

   8680   1 000B4E  DCC7 000A                            LDB,B5   MVD$,AUTO
          1 000B50  8AC5 001B                            INC      27,B5

     1440     8681    4               IF %KV_SRD.CRT_PST>=%KV_SRD.HI_NONBLN_PST

   8681   1 000B52  CCC6 000A                            LDB,B4   10,B6
          1 000B54  8CC4 0015                            LDI      21,B4
          1 000B56  84C4 0017                            SID      23,B4
          1 000B58  6801 000F                            BLZ,R6   s:8690,PREL
          1 000B5A  E847 000E                            LDR,R6   CLR+1,AUTO
          1 000B5C  6D20                                 CMV,R6   32
          1 000B5D  0901 000A                            BE       s:8690,PREL

     1441     8682    5                 AND CLR.CHR~=ASCBIN(' ') THEN DO;

     1442     8683
     1443     8684        /* The characters we're writing are farther down the page than
     1444     8685           the previous farthest.                                                     */
     1445     8686
     1446     8687    5                  %KV_SRD.HI_NONBLN_PST = %KV_SRD.CRT_PST;

   8687   1 000B5F  8CC4 0015                            LDI      21,B4
          1 000B61  8D44 0017                            SDI      23,B4

     1447     8688    5                  %KV_SRD.HI_NONBLNVRT = '1'B;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:192  
   8688   1 000B63  CCC6 000A                            LDB,B4   10,B6
          1 000B65  8944 000E                            LBT,'0002'X       14,B4
          1 000B67       0002

     1448     8689    5               END /* IF */;

     1449     8690    4               %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM+1;

   8690   1 000B68  CCC6 000A                            LDB,B4   10,B6
          1 000B6A  8AC4 0016                            INC      22,B4

     1450     8691    4               %KV_VDI.TMPOTPCHRCNT = %KV_VDI.TMPOTPCHRCNT+1;

   8691   1 000B6C  CC86                                 LDB,B4   ,B6
          1 000B6D  8AC4 0015                            INC      21,B4

     1451     8692    4               %KV_STT.OTPCHRCNT = %KV_STT.OTPCHRCNT+1;

   8692   1 000B6F  CC86                                 LDB,B4   ,B6
          1 000B70  BCC4 0008                            LDB,B3   8,B4
          1 000B72  ACC3 0033                            LDB,B2   51,B3
          1 000B74  8AC2 0035                            INC      53,B2
          1 000B76  8EC2 0034                            CAD      52,B2

     1452     8693    4               %KV_SSN.OTPCHRCNT = %KV_SSN.OTPCHRCNT+1;

   8693   1 000B78  CCC7 0008                            LDB,B4   SSN$,AUTO
          1 000B7A  8AC4 0019                            INC      25,B4
          1 000B7C  8EC4 0018                            CAD      24,B4

     1453     8694    4            END /* IF */;

   8694   1 000B7E  0F81 0039                            B        s:8708,PREL

     1454     8695    4            ELSE DO;

     1455     8696    4   ECHOTPLCL:
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:193  
     1456     8697    4               IF NOT %KV_MVD.DISPINPUT

   8697   1 000B80  ECC7 000A            ECHOTPLCL       LDB,B6   MVD$,AUTO
          1 000B82  82C6 0015                            LB,'0080'X        21,B6
          1 000B84       0080
          1 000B85  0501 000F                            BBT      s:8701,PREL

     1457     8698
     1458     8699        /* Were only echoing the position, use hidden output                          */
     1459     8700    4               THEN CALL KVO$OTP1_HDN (CLR.CHR);

   8700   1 000B87  DBC7 000E                            LAB,B5   CLR+1,AUTO
          1 000B89  DFC7 0024                            STB,B5   USR_EVT+5,AUTO
          1 000B8B  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 000B8D  CBF0 0100                            LAB,B4   256,IMO
          1 000B8F  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_HDN
          1 000B92       0001                            DC       s:8700+12,PREL
          1 000B93  0F81 0024                            B        s:8708,PREL

     1460     8701    4               ELSE CALL KVO$OTP1_VRT (CLR.CHR);

   8701   1 000B95  DBC7 000E                            LAB,B5   CLR+1,AUTO
          1 000B97  DFC7 0024                            STB,B5   USR_EVT+5,AUTO
          1 000B99  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 000B9B  CBF0 0100                            LAB,B4   256,IMO
          1 000B9D  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_VRT
          1 000BA0       0001                            DC       s:8704,PREL

     1461     8702    4            END /* IF */;

     1462     8703        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:194  
     1463     8704    3         END; ELSE IF %KV_VDI.RE_DSPINP OR CLR.LCLECH THEN DO;

   8704   1 000BA1  0F81 0016                            B        s:8708,PREL

   8704   1 000BA3  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000BA6  CC85                                 LDB,B4   ,B5
          1 000BA7  82C4 0019                            LB,'0010'X        25,B4
          1 000BA9       0010
          1 000BAA  0501 0006                            BBT      s:8705,PREL
          1 000BAC  82C7 000D                            LB,'0020'X        CLR,AUTO
          1 000BAE       0020
          1 000BAF  0581 0008                            BBF      s:8708,PREL

     1464     8705    3            %KV_MVD.VRTCLM = %KV_MVD.VRTCLM+1;

   8705   1 000BB1  8AC6 001B                            INC      27,B6

     1465     8706    3            %KV_SRD.VRTPSTOK = '0'B;

   8706   1 000BB3  CCC5 000A                            LDB,B4   10,B5
          1 000BB5  8844 000E                            LBF,'0010'X       14,B4
          1 000BB7       0010

     1466     8707    3         END /* IF */;

     1467     8708    2         IF %KV_MVD.HRZSCR AND %KV_SSN.REDRQSPND

   8708   1 000BB8  ECC7 000A                            LDB,B6   MVD$,AUTO
          1 000BBA  82C6 0016                            LB,'0004'X        22,B6
          1 000BBC       0004
          1 000BBD  0581 0028                            BBF      s:8714,PREL
          1 000BBF  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 000BC1  82C5 0028                            LB,'0002'X        40,B5
          1 000BC3       0002
          1 000BC4  0581 0021                            BBF      s:8714,PREL

     1468     8709    2         THEN IF %KV_MVD.VRTCLM+%KV_MVD.HRZSCRMRG>%KV_MVD.WDT
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:195  

   8709   1 000BC6  E2C6 0017                            LLH,R6   23,B6
          1 000BC8  EA46 001B                            ADD,R6   27,B6
          1 000BCA  6801 001B                            BLZ,R6   s:8714,PREL
          1 000BCC  E946 0013                            CMR,R6   19,B6
          1 000BCE  0381 0017                            BLE      s:8714,PREL
          1 000BD0  E2C6 0017                            LLH,R6   23,B6
          1 000BD2  EA45 002B                            ADD,R6   43,B5
          1 000BD4  E945 002A                            CMR,R6   42,B5
          1 000BD6  0A81 0009                            BALE     s:8712,PREL
          1 000BD8  E846 001B                            LDR,R6   27,B6
          1 000BDA  6801 000B                            BLZ,R6   s:8714,PREL
          1 000BDC  E946 0013                            CMR,R6   19,B6
          1 000BDE  0381 0007                            BLE      s:8714,PREL

     1469     8710    2           AND (%KV_SSN.REDBFR.EDTLOWX+%KV_MVD.HRZSCRMRG<=%KV_SSN.REDBFR.NXTX
     1470     8711    2           OR %KV_MVD.VRTCLM>%KV_MVD.WDT)
     1471     8712    2         THEN CALL KVI$SHFDSPPST;

   8712   1 000BE0  CBF0 0000                            LAB,B4   0,IMO
          1 000BE2  E380 0000 0000  xent                 LNJ,B6   KVI$SHFDSPPST
          1 000BE5       0001                            DC       s:8714,PREL

     1472     8713    2      END /* IF */;

     1473     8714    1      BFREDTX = -1;    /* Always moving to the right if char went in the buffer  */

   8714   1 000BE6  8947 000C                            LBT,'FFFF'X       BFREDTX,AUTO
   8714   1 000BE8       FFFF

   8714   1                              CHKWRDWRP       null
     1474     8715    1   CHKWRDWRP:;
     1475     8716    1      IF %KV_SSN.REDBFR__.DATBYTSIZ>=%KV_STR.MAXRCRBYTSIZ

   8716   1 000BE9  EC80 0000 0000  xsym CHKWRDWRP       LDB,B6   KV$PTR$
          1 000BEC  DCC6 0004                            LDB,B5   4,B6
          1 000BEE  CCC7 0008                            LDB,B4   SSN$,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:196  
          1 000BF0  E844 0033                            LDR,R6   51,B4
          1 000BF2  E945 0015                            CMR,R6   21,B5
          1 000BF4  0201 000A                            BL       s:8718,PREL
          1 000BF6  BC86                                 LDB,B3   ,B6
          1 000BF7  D843 001D                            LDR,R5   29,B3
          1 000BF9  5045                                 SOR,R5   5
          1 000BFA  D570 0003                            AND,R5   3,IMO
          1 000BFC  5D03                                 CMV,R5   3
          1 000BFD  0981 003E                            BNE      s:8724,PREL

     1476     8717    1        AND %KV_VDI.INPUNT~=%KV_INPUNT_BLK THEN GOTO ACTBLKRED;
     1477     8718    1      IF %KV_STR.WRDWRPCLM<12 OR NOT %KV_STR.WRDWRP

   8718   1 000BFF  D2C5 001D                            LLH,R5   29,B5
          1 000C01  5D0C                                 CMV,R5   12
          1 000C02  0201 001D                            BL       s:8723,PREL
          1 000C04  82C5 001E                            LB,'0040'X        30,B5
          1 000C06       0040
          1 000C07  0581 0018                            BBF      s:8723,PREL
          1 000C09  D944 002B                            CMR,R5   43,B4
          1 000C0B  0881 0014                            BAGE     s:8723,PREL
          1 000C0D  C844 002B                            LDR,R4   43,B4
          1 000C0F  C944 002A                            CMR,R4   42,B4
          1 000C11  0801 000E                            BAL      s:8723,PREL
          1 000C13  C947 000C                            CMR,R4   BFREDTX,AUTO
          1 000C15  0A81 000A                            BALE     s:8723,PREL
          1 000C17  82C4 0028                            LB,'0200'X        40,B4
          1 000C19       0200
          1 000C1A  0501 0005                            BBT      s:8723,PREL
          1 000C1C  89C6 001B                            CMZ      27,B6
          1 000C1E  0881 0004                            BAGE     s:8724,PREL

     1478     8719    1        OR %KV_SSN.REDBFR.EDTLOWX<=%KV_STR.WRDWRPCLM
     1479     8720    1        OR %KV_SSN.REDBFR.EDTLOWX<%KV_SSN.REDBFR.NXTX
     1480     8721    1        OR %KV_SSN.REDBFR.EDTLOWX<=BFREDTX /* must be moving right               */
     1481     8722    1        OR %KV_SSN.REDONL
     1482     8723    1        OR KV$PTR.INPCNDPND.TRN THEN RETURN;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:197  

   8723   1 000C20  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1483     8724    1      IF SUBSTR (REDBFR_CHR,%KV_STR.WRDWRPCLM,

   8724   1 000C23  D254                                 SUB,R5   R4
          1 000C24  B2C5 001D                            LLH,R3   29,B5
          1 000C26  BF47 0024                            STR,R3   USR_EVT+5,AUTO
          1 000C28  DF47 0025                            STR,R5   USR_EVT+6,AUTO
          1 000C2A  ACC7 0004                            LDB,B2   REDBFR$,AUTO
          1 000C2C  A853                                 LDR,R2   R3
          1 000C2D  E855                                 LDR,R6   R5
          1 000C2E  8256                                 NEG      R6
          1 000C2F  BB80 0000 0000  02                   LAB,B3   0
          1 000C32  3C22                                 LDV,R3   34
          1 000C33  7C01                                 LDV,R7   1
          1 000C34  D380 0000 0000  xent                 LNJ,B5   X6C_ACM
          1 000C37  5301 0004                            CBNE     s:8724,PREL

     1484     8725    1        %KV_SSN.REDBFR.EDTLOWX-%KV_STR.WRDWRPCLM)=' ' THEN RETURN;

   8725   1 000C39  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   8724   1                              ACTBLKRED       null
     1485     8726        /* (Don't wordwrap on trailing blanks) */
     1486     8727
     1487     8728
     1488     8729        /* Activate on buffer full                                                    */
     1489     8730
     1490     8731    1   ACTBLKRED:;
     1491     8732    1      IF %KV_MVD.ORG=%KV#VD_ORG_UR

   8732   1 000C3C  ECC7 000A            ACTBLKRED       LDB,B6   MVD$,AUTO
          1 000C3E  E2C6 0015                            LLH,R6   21,B6
          1 000C40  6D01                                 CMV,R6   1
          1 000C41  0901 0011                            BE       s:8738,PREL
          1 000C43  6D02                                 CMV,R6   2
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:198  
          1 000C44  0981 0006                            BNE      s:8724+15,PREL
          1 000C46  82C6 001F                            LB,'0080'X        31,B6
          1 000C48       0080
          1 000C49  0501 0009                            BBT      s:8738,PREL
          1 000C4B  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 000C4D  D845 002B                            LDR,R5   43,B5
          1 000C4F  D945 002A                            CMR,R5   42,B5
          1 000C51  0981 0029                            BNE      s:8745,PREL

     1492     8733    1        OR %KV_MVD.ORG=%KV#VD_ORG_X364 AND %KV_MVD.RCRWRAP
     1493     8734    1        OR %KV_SSN.REDBFR.EDTLOWX=%KV_SSN.REDBFR.NXTX
     1494     8735
     1495     8736        /* Only UR activates if positioned in the middle of the line                  */
     1496     8737
     1497     8738    1      THEN IF %KV_MVD.ORG=%KV#VD_ORG_FORM

   8738   1 000C53  6D04                                 CMV,R6   4
          1 000C54  0981 000C                            BNE      s:8741,PREL

     1498     8739    1      THEN CALL KVF$PST (KV_VDH_PST_SPCFRM);

   8739   1 000C56  BB80 0000 0012  02                   LAB,B3   +18
          1 000C59  CBF0 0100                            LAB,B4   256,IMO
          1 000C5B  E380 0000 0000  xent                 LNJ,B6   KVF$PST
          1 000C5E       0001                            DC       s:8739+9,PREL
          1 000C5F  0F81 001B                            B        s:8745,PREL

     1499     8740    2      ELSE DO;

     1500     8741    2         IF %KV_MVD.ORG=%KV#VD_ORG_UR THEN CALL PSTENDRED;

   8741   1 000C61  6D01                                 CMV,R6   1
          1 000C62  0981 0004                            BNE      s:8742,PREL

   8741   1 000C64  E3C0 0019                            LNJ,B6   s:0,PREL
          1 000C66       0001                            DC       s:8742,PREL

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:199  
     1501     8742    2         KV@VDH_DAT = KV_VDH_DAT_NRM_NO_ACTCHR;

   8742   1 000C67  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT_NRM_NO_ACTCHR
          1 000C6A  2C00                                 LDV,R2   0
          1 000C6B  6C10                                 LDV,R6   16
          1 000C6C  BB87                                 LAB,B3   ,AUTO
          1 000C6D  3C2E                                 LDV,R3   46
          1 000C6E  0008                                 MMM

     1502     8743    2         CALL KVI$ACTRED (KV@VDH_DAT);

   8743   1 000C6F  EBC7 0017                            LAB,B6   KV@VDH_DAT,AUTO
          1 000C71  EFC7 0024                            STB,B6   USR_EVT+5,AUTO
          1 000C73  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 000C75  CBF0 0100                            LAB,B4   256,IMO
          1 000C77  E380 0000 0000  xent                 LNJ,B6   KVI$ACTRED
          1 000C7A       0001                            DC       s:8745,PREL

     1503     8744    2      END /* IF */;

     1504     8745    1      RETURN;

   8745   1 000C7B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1505     8746        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:200  
     1506     8747    1   PSTENDRED: PROC;

   8747   1 000C7E  EFC7 0022            PSTENDRED       STB,B6   USR_EVT+3,AUTO

     1507     8748
     1508     8749        /* Positions to end of read - but without typing the chars                    */
     1509     8750
     1510     8751    2      IF %KV_SSN.REDBFR.EDTLOWX~=%KV_SSN.REDBFR.NXTX

   8751   1 000C80  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 000C82  E845 002B                            LDR,R6   43,B5
          1 000C84  E945 002A                            CMR,R6   42,B5
          1 000C86  0981 0005                            BNE      s:8756,PREL
          1 000C88  D845 002F                            LDR,R5   47,B5
          1 000C8A  5A81 0093                            BLEZ,R5  s:8784,PREL

     1511     8752    3        OR %KV_SSN.REDBFR.DSPLOWX>0 THEN DO;

     1512     8753
     1513     8754        /* If already at the end, nothing to do                                       */
     1514     8755
     1515     8756    3         %KV_SSN.REDBFR.EDTHI_X = %KV_SSN.REDBFR.EDTLOWX;

   8756   1 000C8C  EF45 002C                            STR,R6   44,B5

     1516     8757    3         %KV_SSN.REDBFR__.DATBYTSIZ = %KV_SSN.REDBFR.NXTX-%KV_SSN.REDBFR__.BYTX;

   8757   1 000C8E  D845 002A                            LDR,R5   42,B5
          1 000C90  D245 0032                            SUB,R5   50,B5
          1 000C92  DF45 0033                            STR,R5   51,B5

     1517     8758    3         %KV_SSN.REDBFR.EDTLOWX = %KV_SSN.REDBFR.NXTX;

   8758   1 000C94  E845 002A                            LDR,R6   42,B5
          1 000C96  EF45 002B                            STR,R6   43,B5

     1518     8759    3         %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.NXTX;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:201  

   8759   1 000C98  EF45 002E                            STR,R6   46,B5

     1519     8760    4         IF NOT %KV_MVD.RETYPOVR THEN DO;

   8760   1 000C9A  CCC7 000A                            LDB,B4   MVD$,AUTO
          1 000C9C  82C4 0016                            LB,'0080'X        22,B4
          1 000C9E       0080
          1 000C9F  0501 002B                            BBT      s:8772,PREL

     1520     8761
     1521     8762        /* For hard copy devices, get past the characters                             */
     1522     8763
     1523     8764    4            IF NOT %KV_MVD.DISPINPUT

   8764   1 000CA1  82C4 0015                            LB,'0080'X        21,B4
   8764   1 000CA3       0080
          1 000CA4  0501 000C                            BBT      s:8766,PREL

     1524     8765    4            THEN %KV_MVD.VRTCLM = %KV_SRD.PRMVRTCLM;

   8765   1 000CA6  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 000CA9  ACC3 000A                            LDB,B2   10,B3
          1 000CAB  C842 0012                            LDR,R4   18,B2
          1 000CAD  CF44 001B                            STR,R4   27,B4
          1 000CAF  0F81 0027                            B        s:8774,PREL

     1525     8766    5            ELSE IF %KV_SRD.HI_NONBLN.LIN>=%KV_SRD.CRT.LIN THEN DO;

   8766   1 000CB1  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 000CB4  ACC3 000A                            LDB,B2   10,B3
          1 000CB6  C842 0017                            LDR,R4   23,B2
          1 000CB8  C942 0015                            CMR,R4   21,B2
          1 000CBA  0801 000B                            BAL      s:8770,PREL

     1526     8767    5               %KV_MVD.VRTCLM = (%KV_SRD.HI_NONBLN.LIN-%KV_SRD.CRT.LIN)

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:202  
   8767   1 000CBC  C242 0015                            SUB,R4   21,B2
          1 000CBE  CB42 000D                            MUL,R4   13,B2
          1 000CC0  CA42 0018                            ADD,R4   24,B2
          1 000CC2  CF44 001B                            STR,R4   27,B4

     1527     8768    5                 *%KV_SRD.WDT +%KV_SRD.HI_NONBLN.CLM;
     1528     8769    5            END;

   8769   1 000CC4  0F81 0012                            B        s:8774,PREL

     1529     8770    4            ELSE %KV_MVD.VRTCLM = 1;

   8770   1 000CC6  3C01                                 LDV,R3   1
          1 000CC7  BF44 001B                            STR,R3   27,B4

     1530     8771    4         END; ELSE DO;

   8771   1 000CC9  0F81 000D                            B        s:8774,PREL

     1531     8772    4            CALL KVI$EDTX_TO_VRTCLM (%KV_MVD.VRTCLM);

   8772   1 000CCB  BBC4 001B                            LAB,B3   27,B4
          1 000CCD  BFC7 0024                            STB,B3   USR_EVT+5,AUTO
          1 000CCF  BBC7 0024                            LAB,B3   USR_EVT+5,AUTO
          1 000CD1  CBF0 0100                            LAB,B4   256,IMO
          1 000CD3  E380 0000 0000  xent                 LNJ,B6   KVI$EDTX_TO_VRTCLM
          1 000CD6       0001                            DC       s:8774,PREL

     1532     8773    4         END /* IF */;

     1533     8774    3         IF %KV_VDI.RE_DSPINP AND %KV_VDI.INPUNT~=%KV_INPUNT_BLK

   8774   1 000CD7  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000CDA  DC86                                 LDB,B5   ,B6
          1 000CDB  82C5 0019                            LB,'0010'X        25,B5
          1 000CDD       0010
          1 000CDE  0581 000F                            BBF      s:8776,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:203  
          1 000CE0  E845 001D                            LDR,R6   29,B5
          1 000CE2  6045                                 SOR,R6   5
          1 000CE3  E570 0003                            AND,R6   3,IMO
          1 000CE5  6D03                                 CMV,R6   3
          1 000CE6  0901 0007                            BE       s:8776,PREL

     1534     8775    3         THEN CALL KVI$RE_DSPINP;

   8775   1 000CE8  CBF0 0000                            LAB,B4   0,IMO
          1 000CEA  E380 0000 0000  xent                 LNJ,B6   KVI$RE_DSPINP
          1 000CED       0001                            DC       s:8776,PREL

     1535     8776    3         IF %KV_MVD.HRZSCR AND %KV_MVD.VRTCLM>%KV_MVD.WDT

   8776   1 000CEE  ECC7 000A                            LDB,B6   MVD$,AUTO
          1 000CF0  82C6 0016                            LB,'0004'X        22,B6
          1 000CF2       0004
          1 000CF3  0581 000E                            BBF      s:8778,PREL
          1 000CF5  E846 001B                            LDR,R6   27,B6
          1 000CF7  6801 000A                            BLZ,R6   s:8778,PREL
          1 000CF9  E946 0013                            CMR,R6   19,B6
          1 000CFB  0381 0006                            BLE      s:8778,PREL

     1536     8777    3         THEN %KV_MVD.VRTCLM = %KV_MVD.WDT+1;

   8777   1 000CFD  E846 0013                            LDR,R6   19,B6
          1 000CFF  6E01                                 ADV,R6   1
          1 000D00  EF46 001B                            STR,R6   27,B6

     1537     8778    4         IF %KV_SSN.REDBFR.DSPLOWX~=0 THEN DO;

   8778   1 000D02  DCC7 0008                            LDB,B5   SSN$,AUTO
          1 000D04  E845 002F                            LDR,R6   47,B5
          1 000D06  6901 000E                            BEZ,R6   s:8782,PREL

     1538     8779    4            CALL KVI$SHFTO_DFL;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:204  
   8779   1 000D08  CBF0 0000                            LAB,B4   0,IMO
          1 000D0A  E380 0000 0000  xent                 LNJ,B6   KVI$SHFTO_DFL
          1 000D0D       0001                            DC       s:8780,PREL

     1539     8780    4            %KV_MVD.VRTCLM = %KV_MVD.WDT+1;

   8780   1 000D0E  ECC7 000A                            LDB,B6   MVD$,AUTO
          1 000D10  E846 0013                            LDR,R6   19,B6
          1 000D12  6E01                                 ADV,R6   1
          1 000D13  EF46 001B                            STR,R6   27,B6

     1540     8781    4         END;

     1541     8782    3         CALL KVO$PST (KV_VDH_PST_0_VRT);

   8782   1 000D15  BB80 0000 0014  02                   LAB,B3   +20
          1 000D18  CBF0 0100                            LAB,B4   256,IMO
          1 000D1A  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 000D1D       0001                            DC       s:8784,PREL

     1542     8783    3      END /* IF */;

     1543     8784    2   END /* SUBROUTINE */;

   8784   1 000D1E  ECC7 0022                            LDB,B6   USR_EVT+3,AUTO
          1 000D20  C3C6 0001                            LNJ,B4   1,B6

     1544     8785        %EJECT;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:205  
     1545     8786    1   SHFRHT1: PROC ALTRET;

   8786   1 000D22  EFC7 0022            SHFRHT1         STB,B6   USR_EVT+3,AUTO

     1546     8787
     1547     8788        /* Shifts the data in REDBFR at BFREDTX 1, 2, or 3 positions to the right */
     1548     8789
     1549     8790    2      SHF.OFFSET = 1;

   8790   1 000D24  6C01                                 LDV,R6   1
          1 000D25  EF47 0006                            STR,R6   TRNTBL$,AUTO

     1550     8791    2      GOTO SUBCOMMON;

   8791   1 000D27  0F81 000D                            B        s:8800,PREL

     1551     8792
     1552     8793    2   SHFRHT2: ENTRY ALTRET;

   8793   1 000D29  EFC7 0022            SHFRHT2         STB,B6   USR_EVT+3,AUTO

     1553     8794
     1554     8795    2      SHF.OFFSET = 2;

   8795   1 000D2B  6C02                                 LDV,R6   2
          1 000D2C  EF47 0006                            STR,R6   TRNTBL$,AUTO

     1555     8796    2      GOTO SUBCOMMON;

   8796   1 000D2E  0F81 0006                            B        s:8800,PREL

     1556     8797
     1557     8798    2   SHFRHT3: ENTRY ALTRET;

   8798   1 000D30  EFC7 0022            SHFRHT3         STB,B6   USR_EVT+3,AUTO

     1558     8799
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:206  
     1559     8800    2      SHF.OFFSET = 3;

   8800   1 000D32  6C03                                 LDV,R6   3
          1 000D33  EF47 0006                            STR,R6   TRNTBL$,AUTO

   8800   1                              SUBCOMMON       null
     1560     8801
     1561     8802    2   SUBCOMMON:;
     1562     8803
     1563     8804        /* Make sure we don't overflow the requested size */
     1564     8805    2      IF %KV_STR.MAXRCRBYTSIZ<SHF.OFFSET+%KV_SSN.REDBFR__.DATBYTSIZ

   8805   1 000D35  DC80 0000 0000  xsym SUBCOMMON       LDB,B5   KV$PTR$
          1 000D38  CCC5 0004                            LDB,B4   4,B5
          1 000D3A  BCC7 0008                            LDB,B3   SSN$,AUTO
          1 000D3C  EA43 0033                            ADD,R6   51,B3
          1 000D3E  6801 001C                            BLZ,R6   s:8818,PREL
          1 000D40  E944 0015                            CMR,R6   21,B4
          1 000D42  0381 0018                            BLE      s:8818,PREL

     1565     8806    3      THEN IF SHF.OFFSET=1 THEN DO;

   8806   1 000D44  E847 0006                            LDR,R6   TRNTBL$,AUTO
          1 000D46  6D01                                 CMV,R6   1
          1 000D47  0981 000F                            BNE      s:8817,PREL

     1566     8807
     1567     8808        /* For forms, just shovel the excess out of the field into the bit bucket */
     1568     8809    3         %KV_SSN.REDBFR.NXTX = %KV_SSN.REDBFR.NXTX-1;

   8809   1 000D49  88C3 002A                            DEC      42,B3

     1569     8810    3         %KV_SSN.REDBFR__.DATBYTSIZ = %KV_SSN.REDBFR__.DATBYTSIZ-1;

   8810   1 000D4B  88C3 0033                            DEC      51,B3

     1570     8811    3         IF %KV_SSN.REDBFR.NXTX<%KV_SSN.REDBFR.INSMODX
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:207  

   8811   1 000D4D  D843 002A                            LDR,R5   42,B3
          1 000D4F  D943 002E                            CMR,R5   46,B3
          1 000D51  0881 0009                            BAGE     s:8818,PREL

     1571     8812    3         THEN %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.NXTX;

   8812   1 000D53  DF43 002E                            STR,R5   46,B3

     1572     8813    3      END;

   8813   1 000D55  0F81 0005                            B        s:8818,PREL

     1573     8814
     1574     8815        /* Otherwise, we have an abnormal condition, necessarily in overstrike mode,
     1575     8816           wherein the BS will fit, but not the character. */
     1576     8817    2      ELSE ALTRETURN;

   8817   1 000D57  ECC7 0022                            LDB,B6   USR_EVT+3,AUTO
          1 000D59  B806                                 LDR,R3   ,B6
          1 000D5A  C3B6                                 LNJ,B4   ,B6,R3

     1577     8818    3      IF %KV_SSN.REDBFR.NXTX+SHF.OFFSET>%KV_SSN.REDBFR__.BFRBYTSIZ THEN DO;

   8818   1 000D5B  E843 002A                            LDR,R6   42,B3
          1 000D5D  EA47 0006                            ADD,R6   TRNTBL$,AUTO
          1 000D5F  6801 0017                            BLZ,R6   s:8826,PREL
          1 000D61  E943 0034                            CMR,R6   52,B3
          1 000D63  0381 0013                            BLE      s:8826,PREL

     1578     8819
     1579     8820        /* The buffer needs to be bigger. */
     1580     8821    4         CALL KVS$GETREDBFR WHENALTRETURN DO;

   8821   1 000D65  CBF0 0000                            LAB,B4   0,IMO
          1 000D67  E380 0000 0000  xent                 LNJ,B6   KVS$GETREDBFR
          1 000D6A       0003                            DC       s:8822,PREL
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:208  
          1 000D6B  0F81 0005                            B        s:8824,PREL

     1581     8822    4            ALTRETURN;

   8822   1 000D6D  ECC7 0022                            LDB,B6   USR_EVT+3,AUTO
          1 000D6F  B806                                 LDR,R3   ,B6
          1 000D70  C3B6                                 LNJ,B4   ,B6,R3

     1582     8823    4         END;
     1583     8824    3         REDBFR$ = %KV_SSN.REDBFR__.ADR$;

   8824   1 000D71  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000D73  DCC6 0030                            LDB,B5   48,B6
          1 000D75  DFC7 0004                            STB,B5   REDBFR$,AUTO

     1584     8825    3      END;

     1585     8826    2      SHF.CNT = %KV_SSN.REDBFR.NXTX-BFREDTX;

   8826   1 000D77  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000D79  E846 002A                            LDR,R6   42,B6
          1 000D7B  E247 000C                            SUB,R6   BFREDTX,AUTO
          1 000D7D  EF47 0007                            STR,R6   TRNTBL$+1,AUTO

     1586     8827    3      DO WHILE SHF.CNT>%SHF_SIZ;

   8827   1 000D7F  0F81 0023                            B        s:8835,PREL

     1587     8828
     1588     8829        /* Move it a few at a time until we're done. */
     1589     8830    3         SUBSTR(%SHF_CHR,0,%SHF_SIZ) =

   8830   1 000D81  E847 0007                            LDR,R6   TRNTBL$+1,AUTO
          1 000D83  EA47 000C                            ADD,R6   BFREDTX,AUTO
          1 000D85  ACC7 0004                            LDB,B2   REDBFR$,AUTO
          1 000D87  A856                                 LDR,R2   R6
          1 000D88  2EDC                                 ADV,R2   -36
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:209  
          1 000D89  6C24                                 LDV,R6   36
          1 000D8A  BB87                                 LAB,B3   ,AUTO
          1 000D8B  3C1E                                 LDV,R3   30
          1 000D8C  0008                                 MMM

     1590     8831    3           SUBSTR(REDBFR_CHR,SHF.CNT+BFREDTX-%SHF_SIZ,%SHF_SIZ);
     1591     8832    3         SUBSTR(REDBFR_CHR,SHF.CNT+BFREDTX+SHF.OFFSET-%SHF_SIZ,%SHF_SIZ) =

   8832   1 000D8D  E847 0007                            LDR,R6   TRNTBL$+1,AUTO
          1 000D8F  EA47 000C                            ADD,R6   BFREDTX,AUTO
          1 000D91  EA47 0006                            ADD,R6   TRNTBL$,AUTO
          1 000D93  AB87                                 LAB,B2   ,AUTO
          1 000D94  2C1E                                 LDV,R2   30
          1 000D95  EF47 0024                            STR,R6   USR_EVT+5,AUTO
          1 000D97  6C24                                 LDV,R6   36
          1 000D98  BCC7 0004                            LDB,B3   REDBFR$,AUTO
          1 000D9A  B847 0024                            LDR,R3   USR_EVT+5,AUTO
          1 000D9C  3EDC                                 ADV,R3   -36
          1 000D9D  0008                                 MMM

     1592     8833    3           SUBSTR(%SHF_CHR,0,%SHF_SIZ);
     1593     8834    3         SHF.CNT = SHF.CNT-%SHF_SIZ;

   8834   1 000D9E  E847 0007                            LDR,R6   TRNTBL$+1,AUTO
          1 000DA0  6EDC                                 ADV,R6   -36
          1 000DA1  EF47 0007                            STR,R6   TRNTBL$+1,AUTO

     1594     8835    3      END;

   8835   1 000DA3  6D24                                 CMV,R6   36
          1 000DA4  0A5D                                 BAG      s:8830,SPREL

     1595     8836    2      SUBSTR(%SHF_CHR,0,SHF.CNT) = SUBSTR(REDBFR_CHR,BFREDTX,SHF.CNT);

   8836   1 000DA5  ACC7 0004                            LDB,B2   REDBFR$,AUTO
          1 000DA7  A847 000C                            LDR,R2   BFREDTX,AUTO
          1 000DA9  BB87                                 LAB,B3   ,AUTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:210  
          1 000DAA  3C1E                                 LDV,R3   30
          1 000DAB  0008                                 MMM

     1596     8837    2      SUBSTR(REDBFR_CHR,BFREDTX+SHF.OFFSET,SHF.CNT) = SUBSTR(%SHF_CHR,0,SHF.CNT);

   8837   1 000DAC  E847 000C                            LDR,R6   BFREDTX,AUTO
          1 000DAE  EA47 0006                            ADD,R6   TRNTBL$,AUTO
          1 000DB0  AB87                                 LAB,B2   ,AUTO
          1 000DB1  2C1E                                 LDV,R2   30
          1 000DB2  EF47 0024                            STR,R6   USR_EVT+5,AUTO
          1 000DB4  E847 0007                            LDR,R6   TRNTBL$+1,AUTO
          1 000DB6  BCC7 0004                            LDB,B3   REDBFR$,AUTO
          1 000DB8  B847 0024                            LDR,R3   USR_EVT+5,AUTO
          1 000DBA  0008                                 MMM

     1597     8838
     1598     8839        /* Update EDTHI_X, NXTX, DATBYTSIZ, INSMODX */
     1599     8840    2      %KV_SSN.REDBFR.NXTX = %KV_SSN.REDBFR.NXTX+SHF.OFFSET;

   8840   1 000DBB  ECC7 0008                            LDB,B6   SSN$,AUTO
          1 000DBD  E846 002A                            LDR,R6   42,B6
          1 000DBF  EA47 0006                            ADD,R6   TRNTBL$,AUTO
          1 000DC1  EF46 002A                            STR,R6   42,B6

     1600     8841    2      %KV_SSN.REDBFR.INSMODX = %KV_SSN.REDBFR.INSMODX+SHF.OFFSET;

   8841   1 000DC3  D846 002E                            LDR,R5   46,B6
          1 000DC5  DA47 0006                            ADD,R5   TRNTBL$,AUTO
          1 000DC7  DF46 002E                            STR,R5   46,B6

     1601     8842    2      %KV_SSN.REDBFR.EDTHI_X = %KV_SSN.REDBFR.EDTHI_X+SHF.OFFSET;

   8842   1 000DC9  C846 002C                            LDR,R4   44,B6
          1 000DCB  CA47 0006                            ADD,R4   TRNTBL$,AUTO
          1 000DCD  CF46 002C                            STR,R4   44,B6

     1602     8843    2      %KV_SSN.REDBFR__.DATBYTSIZ = %KV_SSN.REDBFR__.DATBYTSIZ+SHF.OFFSET;
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:211  

   8843   1 000DCF  B846 0033                            LDR,R3   51,B6
          1 000DD1  BA47 0006                            ADD,R3   TRNTBL$,AUTO
          1 000DD3  BF46 0033                            STR,R3   51,B6

     1603     8844    2      RETURN;

   8844   1 000DD5  ECC7 0022                            LDB,B6   USR_EVT+3,AUTO
          1 000DD7  C3C6 0001                            LNJ,B4   1,B6

   8844   1                              REDDATLST       null
     1604     8845    2   END /* SUBROUTINE */;
     1605     8846
     1606     8847        /* Probable Altret location for calls to the SHFRHT subroutines */
     1607     8848    1   REDDATLST:;
     1608     8849    1      CALL KVI$INTINPOPRX(%KV_INPOPRX_REDDATLST);

   8849   1 000DD9  BB80 0000 0017  02   REDDATLST       LAB,B3   +23
          1 000DDC  CBF0 0100                            LAB,B4   256,IMO
          1 000DDE  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPRX
          1 000DE1       0001                            DC       s:8850,PREL

     1609     8850    1      RETURN;

   8850   1 000DE2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1610     8851    1   END;

PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:212  
--  Include file information  --

   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KV_SCODE_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVI$INPCHR.
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:213  

 **** Variables and constants ****

  ****  Section 000 RoData KVI$INPCHR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 KVI_PRMTRN                 3-0-0/w STRC(48)    r     1 KVI_SCNTRN
    60-0-0/w STRC(48)    r     1 KV_X364_FNC               6D-0-0/c CHAR(20)    r     1 KV_X364_FNCIDS
    63-0-0/c CHAR(20)    r     1 KV_X364_FNCS
    63-0-0/b UBIN(8)     r     1 KV_X364_FNCSU(0:19)
    56-0-0/w PTR         r     1 PRT_$(0:4)                46-0-0/b BIT (16)    r     1 PRT_0(0:15)
    36-0-0/b BIT (16)    r     1 PRT_1(0:15)               26-0-0/b BIT (16)    r     1 PRT_EVN(0:15)
     6-0-0/b BIT (16)    r     1 PRT_NON(0:15)             16-0-0/b BIT (16)    r     1 PRT_ODD(0:15)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     C-0-0/w SBIN(16)    r     1 BFREDTX                    D-0-0/w STRC(32)    r     1 CLR
     C-0-0/w SBIN(16)    r     1 FNCLVL                     C-0-0/w UBIN(16)    r     1 FNCLVLU
     4-0-0/w PTR         r     1 INPFNCSST$                 6-0-0/w PTR         r     1 INPFNCUSR$
    11-0-0/w STRC(96)    r     1 INPOPR                    17-0-0/w STRC(128)   r     1 KV@VDH_DAT
     A-0-0/w PTR         r     1 MVD$                       4-0-0/w PTR         r     1 REDBFR$
     6-0-0/w STRC(32)    r     1 SHF                        8-0-0/w PTR         r     1 SSN$
     6-0-0/w PTR         r     1 TRNTBL$                   1F-0-0/w STRC(32)    r     1 USR_EVT
     F-0-0/w STRC(32)    r     1 USR_EXTINPTRN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/b BIT         r     1 KV_NONPSTCHR(0:255)
     0-0-0/b BIT (16)    r     1 KV_NONPSTCHR_WRD(0:15)
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:214  
     0-0-0/w STRC(32)    r     1 KV_USR_EVT                 0-0-0/w STRC(32)    r     1 KV_USR_EXTINPTRN
     0-0-0/w STRC(128)   r     1 KV_VDH_DAT_NRM_ACTCHR
     0-0-0/w STRC(128)   r     1 KV_VDH_DAT_NRM_NO_ACTCHR
     0-0-0/w STRC(64)    r     1 KV_VDH_PST_0_VRT           0-0-0/w STRC(64)    r     1 KV_VDH_PST_SPCFRM
     0-0-0/w STRC(64)    r     1 KV_VDH_PST_SPC_VRT         0-0-0/w STRC(64)    r     1 KV_VDH_PST_WHTSPC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(255)   r     1 KV$INPFNCCHR
     0-0-0/w SBIN(16)    r     1 KV$INPFNCOPRX(0:0)
     0-0-0/w STRC(736)   r     1 KV$INPFNCTBL               0-0-0/w STRC(16)    r     1 KV$INPOPR
     0-0-0/w ACHR        r     1 KV$INPOPR_DUMMY            0-0-0/w ASTR(24)    r     1 KV$INPOPR_TXT
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(2048)  r     1 KV$PRMINPTRN               0-0-0/w STRC(2048)  r     1 KV$PRMOTPTRN
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(8)     r     1 KV$REDBFR
     0-0-0/w STRC(72)    r     1 KV$SCNINPTRN               0-0-0/w STRC(65)    r     1 KV$SHRBFR
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(8960)  r     1 KV$STT
     0-0-0/w STRC(499)   r     1 KV$TRNTBL                  0-0-0/w STRC(912)   r     1 KV$USRPRM
     0-0-0/w STRC(512)   r     1 KV$VDI                     0-0-0/w STRC(8)     r     1 REDBFR
     0-0-0/w CHAR(255)   r     1 REDBFR_CHR                 0-0-0/w STRC(16)    r     1 TKN
     0-0-0/c CHAR(8)     r     1 X364_CHARS                 0-0-0/w STRC        r     1 Y$BIT


   Procedure KVI$INPCHR requires 3557 words for executable code.
   Procedure KVI$INPCHR requires 39 words of local(AUTO) storage.

    No errors detected in file KVI$INPCHR.:E05TSI    .
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:215  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:216  
          MINI XREF LISTING

ACTBLKRED
      8724**LABEL    8398--GOTO     8717--GOTO
ACTRED
      8382**LABEL    8147--GOTO
BFREDTX
      7152**DCL      7153--REDEF    7154--REDEF    8264<<ASSIGN   8423<<ASSIGN   8424>>IF       8429>>IF
      8440>>ASSIGN   8441<<ASSIGN   8441>>ASSIGN   8442>>ASSIGN   8443>>ASSIGN   8444>>ASSIGN   8445>>ASSIGN
      8446>>ASSIGN   8453>>IF       8458>>ASSIGN   8460>>IF       8467>>ASSIGN   8490<<ASSIGN   8491>>IF
      8510>>IF       8518>>ASSIGN   8522>>IF       8522>>IF       8522>>IF       8539>>ASSIGN   8546>>IF
      8551<<ASSIGN   8551>>ASSIGN   8552>>ASSIGN   8567>>CALLBLT  8575>>IF       8578>>CALLBLT  8588>>ASSIGN
      8596>>IF       8601>>CALLBLT  8603>>ASSIGN   8608>>ASSIGN   8610>>ASSIGN   8714<<ASSIGN   8718>>IF
      8826>>ASSIGN   8830>>ASSIGN   8832>>ASSIGN   8836>>ASSIGN   8837>>ASSIGN
BFRREDCHR
      8357**LABEL    7864--GOTO     8341--GOTO
CHKWRDWRP
      8714**LABEL    8272--GOTO
CLR
      7157**DCL      7484<<ASSIGN   7489<<ASSIGN   7759<<ASSIGN   7768<<ASSIGN   8145<<ASSIGN   8355<<ASSIGN
      8418<<ASSIGN
CLR.CHR
      7210**DCL      7863<<ASSIGN   8146<<ASSIGN   8340<<ASSIGN   8357<<ASSIGN   8360>>IF       8385>>ASSIGN
      8438>>IF       8440>>ASSIGN   8467>>ASSIGN   8469>>IF       8491>>IF       8510>>IF       8518>>ASSIGN
      8522>>IF       8522>>IF       8552>>ASSIGN   8559>>IF       8567>>CALLBLT  8578>>CALLBLT  8588>>ASSIGN
      8610>>ASSIGN   8611>>IF       8632>>IF       8651>>IF       8670>>ASSIGN   8681>>IF       8700<>CALL
      8701<>CALL
CLR.ECH
      7191**DCL      7495<<ASSIGN   7702<<ASSIGN   7773<<ASSIGN   8356<<ASSIGN   8380<<ASSIGN   8471>>IF
      8499>>IF       8505<<ASSIGN   8647>>IF
CLR.ESC
      7160**DCL      7751<<ASSIGN   7940<<ASSIGN   7947<<ASSIGN   7962>>IF       7984>>IF       8062<<ASSIGN
CLR.IMD
      7187**DCL      7591>>ASSIGN   8263>>ASSIGN   8289>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:217  
CLR.INPOPRX
      7207**DCL      7210--REDEF    7627<<ASSIGN   7642<<ASSIGN   7644--DOCASE   7670<<ASSIGN   7670--ASSIGN
      7689<<ASSIGN   7783>>IF       7885<<ASSIGN   7996<<ASSIGN   8172<<ASSIGN   8251>>IF       8262>>ASSIGN
CLR.INT2
      7198**DCL      7750<<ASSIGN   7776<<ASSIGN   8023>>IF
CLR.LCLECH
      7195**DCL      7725<<ASSIGN   8471>>IF       8704>>IF
CLR.REDONL
      7201**DCL      8261>>IF       8417>>IF
CLR.SHFPAS
      7177**DCL      8209>>IF       8226<<ASSIGN
CLR.SPCCHR
      7163**DCL      7802>>IF       7906>>IF       8162<<ASSIGN   8231<<ASSIGN
CLR.SPCCHR.PRF
      7166**DCL      7801<<ASSIGN   7840<<ASSIGN   7859>>IF       7941<<ASSIGN   7948<<ASSIGN   8066<<ASSIGN
      8160<<ASSIGN
CLR.SPCCHR.SST
      7169**DCL      7793<<ASSIGN   7948>>ASSIGN   8167<<ASSIGN
CLR.SPCCHR.USR
      7172**DCL      7796<<ASSIGN   7941>>ASSIGN   8165<<ASSIGN
CLR.SSTPAS
      7181**DCL      7942<<ASSIGN   7943>>IF       7989>>IF       8002>>IF       8029>>IF       8080>>IF
      8203>>IF       8204<<ASSIGN   8227<<ASSIGN   8242<<ASSIGN
CLR.USRPAS
      7184**DCL      7797<<ASSIGN   7938>>IF       7989>>IF       8009>>IF       8034>>IF       8080>>IF
      8203>>IF       8205<<ASSIGN   8207<<ASSIGN   8228<<ASSIGN   8241<<ASSIGN
COMMON_IMD
      7489**LABEL    7485--GOTO
ECHOTPLCL
      8697**LABEL    8675--CALLALT
ECHO_CHR
      8627**LABEL    8387--GOTO     8478--GOTO
FNCLVL
      7153**DCL      7952<<ASSIGN   7953>>IF       7961>>IF       7962>>IF       7966<<ASSIGN   7966>>ASSIGN
      7969>>IF       8023>>IF       8026>>IF       8031>>ASSIGN   8037>>ASSIGN   8048>>ASSIGN   8062>>ASSIGN
      8063>>IF       8073>>IF       8074>>CALLBLT  8074>>CALLBLT  8079>>ASSIGN   8085<<ASSIGN   8096>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:218  
      8099<<ASSIGN   8104>>ASSIGN   8113<<ASSIGN   8114>>IF       8115<<ASSIGN   8117>>IF       8149>>IF
      8149>>IF       8152>>IF       8160>>IF       8173>>IF       8177>>IF       8199<<ASSIGN   8199>>ASSIGN
FNCLVLU
      7154**DCL      8086>>IF       8086>>IF       8090>>DOWHILE  8101>>ASSIGN   8101>>ASSIGN   8102>>IF
INPFNCSRC
      7932**LABEL    7841--GOTO     7860--GOTO     8175--EXIT     8217--EXIT     8236--EXIT
INPFNCSST$
      7142**DCL      7497<<ASSIGN   7498>>ASSIGN   7779<<ASSIGN   7783>>IF       7791>>IF       7808>>ASSIGN
      7902>>ASSIGN   7946>>ASSIGN   8051>>IF       8149>>IF       8166>>IF       8420<<ASSIGN
INPFNCUSR$
      7145**DCL      7748<<ASSIGN   7774<<ASSIGN   7775>>ASSIGN   7794>>IF       7795>>IF       7938>>IF
      7939>>ASSIGN   8038>>IF       8040>>IF       8139>>IF       8140>>IF       8151>>IF       8152>>IF
      8152>>IF       8152>>IF       8163>>IF       8164>>IF       8419<<ASSIGN
INPOPR
      7281**DCL      8131<>CALL     8265<>CALL     8416<<ASSIGN   8827--DOWHILE  8830--ASSIGN   8830--ASSIGN
      8830--ASSIGN   8832--ASSIGN   8832--ASSIGN   8832--ASSIGN   8834--ASSIGN
INPOPR.ACKCHR
      7288**DCL      7607<<ASSIGN   7618<<ASSIGN   7621--DOCASE   7627--ASSIGN   7628<<ASSIGN   7635>>IF
      7639<<ASSIGN   7639>>ASSIGN   7642>>ASSIGN   7651<<ASSIGN   7657<<ASSIGN   7657>>ASSIGN   7688>>IF
      7703>>DOSELCT  7720>>IF       7720>>IF       7721>>IF       7739>>IF       7778<<ASSIGN   7791>>IF
      7795>>IF       7800>>IF       7832<<ASSIGN   7832>>ASSIGN   7838<<ASSIGN   7861>>ASSIGN   7889>>IF
      7891>>ASSIGN   7897<<ASSIGN   7952>>ASSIGN   7980>>IF       8026>>IF       8040>>IF       8051>>IF
      8063>>IF       8072>>ASSIGN   8158>>ASSIGN   8159<<ASSIGN   8177>>IF       8177>>IF       8185>>ASSIGN
      8193>>IF       8216<<ASSIGN   8216>>ASSIGN   8219>>IF       8219>>IF       8225<<ASSIGN   8225>>ASSIGN
      8236>>IF       8240<<ASSIGN   8277>>IF       8309>>IF       8309>>IF       8314<<ASSIGN   8314>>ASSIGN
      8330>>IF       8330>>IF       8335<<ASSIGN   8335>>ASSIGN   8340>>ASSIGN
INPOPR.IMD
      7287**DCL      8263<<ASSIGN
INPOPR.INPFNCTBL$
      7287**DCL      5928--IMP-PTR  5965--IMP-PTR  5966--IMP-PTR  7038--IMP-PTR  7498<<ASSIGN   7627>>ASSIGN
      7670>>ASSIGN   7688>>IF       7749<<ASSIGN   7775<<ASSIGN   7797>>IF       7800>>IF       7808<<ASSIGN
      7886>>IF       7889>>IF       7889>>IF       7892>>CALLBLT  7892>>CALLBLT  7892>>CALLBLT  7895>>ASSIGN
      7895>>ASSIGN   7902<<ASSIGN   7939<<ASSIGN   7946<<ASSIGN   7980>>IF       8003>>IF       8003>>IF
      8023>>IF       8026>>IF       8063>>IF       8073>>IF       8074>>CALLBLT  8074>>CALLBLT  8074>>CALLBLT
      8079>>ASSIGN   8085>>ASSIGN   8096>>IF       8096>>IF       8099>>ASSIGN   8124<<ASSIGN   8128>>ASSIGN
      8172>>ASSIGN   8172>>ASSIGN   8177>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:219  
INPOPR.INPOPRX
      7287**DCL      7892<<CALLBLT  7895<<ASSIGN   7895>>ASSIGN   7897>>IF       7897>>IF       7897>>ASSIGN
      7971<<DOINDEX  7980>>IF       7984>>IF       8003>>IF       8010<<ASSIGN   8010>>ASSIGN   8013>>ASSIGN
      8039<<DOINDEX  8040>>IF       8040>>IF       8042>>ASSIGN   8050<<DOINDEX  8051>>IF       8051>>IF
      8053>>ASSIGN   8074<<CALLBLT  8079<<ASSIGN   8079>>ASSIGN   8085>>ASSIGN   8095<<ASSIGN   8095>>ASSIGN
      8096>>IF       8096>>IF       8099>>ASSIGN   8101<<ASSIGN   8103<<ASSIGN   8103>>ASSIGN   8104<<ASSIGN
      8105>>IF       8113>>ASSIGN   8116<<ASSIGN   8116>>ASSIGN   8125>>ASSIGN   8126<<CALLBLT  8129>>ASSIGN
      8130<<ASSIGN   8146>>ASSIGN   8152>>IF       8152>>IF       8159>>ASSIGN   8164>>IF       8166>>IF
      8172>>ASSIGN   8262<<ASSIGN
INPOPR.ORGCHR
      7287**DCL      7494<<ASSIGN   7500>>IF       7507>>IF       7537>>IF       7542>>IF       7571>>IF
      7590>>ASSIGN   7607>>ASSIGN   7617<<ASSIGN   7617>>ASSIGN   7618>>ASSIGN   7619>>IF       7628>>ASSIGN
      7651>>ASSIGN   7694<<ASSIGN   7772<<ASSIGN   7778>>ASSIGN   7838>>ASSIGN   7861<<ASSIGN   7863>>ASSIGN
      8271>>ASSIGN   8669<<ASSIGN   8670<<ASSIGN   8674>>ASSIGN
KHD$SCREECH
      6019**DCL-ENT  7667--CALL     7682--CALL
KV$INPFNCCHR
      5965**DCL      7892>>CALLBLT  8074>>CALLBLT
KV$INPFNCOPRX
      5966**DCL      7895>>ASSIGN   8085>>ASSIGN   8096>>IF       8099>>ASSIGN   8172>>ASSIGN
KV$INPFNCTBL.ESCCNTOK
      5945**DCL      8177>>IF
KV$INPFNCTBL.ESCINT1_CHR
      5946**DCL      7980>>IF       8003>>IF       8003>>IF       8063>>IF       8152>>IF       8152>>IF
KV$INPFNCTBL.ESCINT2_CHR
      5946**DCL      8023>>IF       8026>>IF       8040>>IF       8051>>IF
KV$INPFNCTBL.ID_CHRCNT
      5945**DCL      7889>>IF       7892>>CALLBLT  8073>>IF       8074>>CALLBLT  8140>>IF       8149>>IF
      8152>>IF
KV$INPFNCTBL.ID_CHROFS
      5946**DCL      7892>>CALLBLT  8074>>CALLBLT
KV$INPFNCTBL.INPOPROFS
      5947**DCL      7627>>ASSIGN   7670>>ASSIGN   8172>>ASSIGN
KV$INPFNCTBL.OPRX_OFS
      5946**DCL      7895>>ASSIGN   8079>>ASSIGN   8096>>IF
KV$INPFNCTBL.SPCCHR
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:220  
      5945**DCL      7688>>IF       7791>>IF       7795>>IF       7800>>IF       7889>>IF       8164>>IF
      8166>>IF
KV$INPOPR.ID
      7050**DCL      7048--IMP-SIZ  7050--REDEF    7051--REDEF    7051--REDEF
KV$INPOPR_DUMMY
      7048**DCL      7048--REDEF    7051--REDEF    7054--REDEF    7062--REDEF
KV$INPOPR_PST.VDH_PST.PSTVAL
      7128**DCL      7133--REDEF
KV$INPOPR_TXT.L
      7059**DCL      7059--IMP-SIZ  8129>>ASSIGN
KV$INPOPR_TXT.T
      7059**DCL      8129<<ASSIGN
KV$MRD.AUTONL
      4743**DCL      7728>>IF
KV$MRD.CRISNL
      4743**DCL      7709>>IF
KV$MRD.DEVICEBS
      4742**DCL      7705>>IF
KV$MRD.DEVICECR
      4742**DCL      7708>>IF
KV$MRD.DEVICELF
      4743**DCL      7714>>IF
KV$MRD.DVCCLM
      4757**DCL      7705>>IF       7706<<ASSIGN   7706>>ASSIGN   7708<<ASSIGN   7710<<ASSIGN   7716<<ASSIGN
      7721>>IF       7724>>ASSIGN   7726>>IF       7727<<ASSIGN   7727>>ASSIGN   7729<<ASSIGN   7732>>IF
      7733<<ASSIGN   7733>>ASSIGN   7735<<ASSIGN   7742>>ASSIGN   8679<<ASSIGN   8679>>ASSIGN
KV$MRD.DVCLIN
      4757**DCL      7721>>IF       7736>>IF       7737<<ASSIGN   7737>>ASSIGN   7739>>IF       7741>>ASSIGN
KV$MRD.LFISNL
      4744**DCL      7715>>IF
KV$MRD.LIMBOCLM
      4749**DCL      7731>>IF
KV$MRD.LNG
      4739**DCL      7736>>IF
KV$MRD.LOCALECHO
      4749**DCL      7697>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:221  
KV$MRD.PRFINPFNCTBL$
      4735**DCL      7749>>ASSIGN
KV$MRD.WDT
      4736**DCL      7726>>IF       7732>>IF
KV$MVD.DISPINPUT
      4787**DCL      8499>>IF       8612>>IF       8643>>IF       8667>>IF       8697>>IF       8764>>IF
KV$MVD.EDITOVR
      4790**DCL      8471>>IF       8626>>IF
KV$MVD.ESCCNTMSK
      4799**DCL      8187>>ASSIGN
KV$MVD.ESCX
      4795**DCL      8013>>ASSIGN
KV$MVD.HRZSCR
      4791**DCL      8708>>IF       8776>>IF
KV$MVD.HRZSCRMRG
      4792**DCL      8709>>IF       8709>>IF
KV$MVD.INSMOD
      4791**DCL      8460>>IF
KV$MVD.LOWERCASE
      4788**DCL      8316>>IF
KV$MVD.ORG
      4787**DCL      7852>>IF       8118>>IF       8375>>IF       8375>>IF       8732>>IF       8732>>IF
      8738>>IF       8741>>IF
KV$MVD.OVRSTR
      4788**DCL      8485>>IF
KV$MVD.RCRWRAP
      4801**DCL      8732>>IF
KV$MVD.RETYPOVR
      4790**DCL      8471>>IF       8499>>IF       8612>>IF       8643>>IF       8760>>IF
KV$MVD.SSTINPFNCTBL$
      4784**DCL      7497>>ASSIGN   7779>>ASSIGN   8420>>ASSIGN
KV$MVD.TRNTBL$
      4784**DCL      7496>>ASSIGN   7827>>IF       8522>>IF       8522>>IF       8651>>IF       8651>>IF
      8669>>ASSIGN   8670>>ASSIGN
KV$MVD.UPPERCASE
      4789**DCL      8305>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:222  
KV$MVD.USRINPFNCTBL$
      4783**DCL      7748>>ASSIGN   8419>>ASSIGN
KV$MVD.VRTCLM
      4799**DCL      8680<<ASSIGN   8680>>ASSIGN   8705<<ASSIGN   8705>>ASSIGN   8709>>IF       8709>>IF
      8765<<ASSIGN   8767<<ASSIGN   8770<<ASSIGN   8772<>CALL     8776>>IF       8777<<ASSIGN   8780<<ASSIGN
KV$MVD.WDT
      4786**DCL      8709>>IF       8709>>IF       8776>>IF       8777>>ASSIGN   8780>>ASSIGN
KV$PRMINPTRN.CHR
      5974**DCL      7618>>ASSIGN
KV$PRMOTPTRN.CHR
      5993**DCL      8651>>IF       8670>>ASSIGN
KV$PTR
      4826**DCL      8269--IF
KV$PTR.INPCNDFLG.BITS
      4845**DCL      7802>>IF
KV$PTR.INPCNDPND
      4832**DCL      4841--REDEF    4845--REDEF
KV$PTR.INPCNDPND.CTRSTR
      4836**DCL      7507>>IF       7549>>IF       7557<<ASSIGN   7570<<ASSIGN   7606>>IF       7819>>IF
KV$PTR.INPCNDPND.ESC
      4840**DCL      7906>>IF       7993<<ASSIGN   8011>>IF       8013<<ASSIGN   8014>>IF       8030<<ASSIGN
      8110<<ASSIGN   8123<<ASSIGN   8144<<ASSIGN   8168<<ASSIGN   8187<<ASSIGN   8187>>ASSIGN   8246<<ASSIGN
KV$PTR.INPCNDPND.ESC.INT2
      4840**DCL      7750>>ASSIGN   7776>>ASSIGN   8033<<ASSIGN
KV$PTR.INPCNDPND.ESC.PRF
      4840**DCL      7751>>ASSIGN   7859>>IF       7991<<ASSIGN   8037<<ASSIGN   8047<<ASSIGN
KV$PTR.INPCNDPND.ESC.SST
      4840**DCL      7858<<ASSIGN   7947>>ASSIGN   8005<<ASSIGN   8006<<ASSIGN   8007<<ASSIGN   8031<<ASSIGN
      8051>>IF       8053<<ASSIGN
KV$PTR.INPCNDPND.ESC.USR
      4840**DCL      7857<<ASSIGN   7940>>ASSIGN   7990<<ASSIGN   8040>>IF       8042<<ASSIGN   8048<<ASSIGN
KV$PTR.INPCNDPND.INPOPR
      4836**DCL      7880>>IF       7901<<ASSIGN
KV$PTR.INPCNDPND.OPRX
      4841**DCL      7807<<ASSIGN   7885>>ASSIGN   8017<<ASSIGN   8088<<ASSIGN   8088>>ASSIGN   8090>>DOWHILE
      8101>>ASSIGN   8174<<ASSIGN   8183>>IF       8183>>IF       8184<<ASSIGN   8185<<ASSIGN   8185>>ASSIGN
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:223  
      8193>>IF       8196<<ASSIGN   8196>>ASSIGN
KV$PTR.INPCNDPND.TRN
      4836**DCL      7519>>IF       7571>>IF       7606>>IF       7844>>IF       8118>>IF       8360>>IF
      8369>>IF       8406>>IF       8647>>IF       8718>>IF
KV$PTR.INPCNDPND_MSK.NOT_TRN
      4845**DCL      7825<<ASSIGN
KV$PTR.LINLST$
      4828**DCL      4829--REDEF
KV$PTR.MRD$
      4827**DCL      7697>>IF       7705>>IF       7705>>IF       7706>>ASSIGN   7706>>ASSIGN   7708>>IF
      7708>>ASSIGN   7709>>IF       7710>>ASSIGN   7714>>IF       7715>>IF       7716>>ASSIGN   7721>>IF
      7721>>IF       7724>>ASSIGN   7726>>IF       7726>>IF       7727>>ASSIGN   7727>>ASSIGN   7728>>IF
      7729>>ASSIGN   7731>>IF       7732>>IF       7732>>IF       7733>>ASSIGN   7733>>ASSIGN   7735>>ASSIGN
      7736>>IF       7736>>IF       7737>>ASSIGN   7737>>ASSIGN   7739>>IF       7741>>ASSIGN   7742>>ASSIGN
      7749>>ASSIGN   8679>>ASSIGN   8679>>ASSIGN
KV$PTR.MVD$
      4827**DCL      7493>>ASSIGN   7771>>ASSIGN   8348>>ASSIGN
KV$PTR.SRD$
      4828**DCL      7721>>IF       7721>>IF       7721>>IF       7724>>ASSIGN   7738>>ASSIGN   7738>>ASSIGN
      7739>>IF       7739>>IF       7741>>ASSIGN   7741>>ASSIGN   7742>>ASSIGN   8651>>IF       8651>>IF
      8651>>IF       8681>>IF       8681>>IF       8687>>ASSIGN   8687>>ASSIGN   8688>>ASSIGN   8690>>ASSIGN
      8690>>ASSIGN   8706>>ASSIGN   8765>>ASSIGN   8766>>IF       8766>>IF       8767>>ASSIGN   8767>>ASSIGN
      8767>>ASSIGN   8767>>ASSIGN
KV$PTR.SSN$
      4826**DCL      7492>>ASSIGN   7770>>ASSIGN   8347>>ASSIGN
KV$PTR.STR$
      4826**DCL      7867>>IF       8135>>IF       8142>>ASSIGN   8293>>IF       8360>>IF       8360>>IF
      8375>>IF       8389>>IF       8407>>CALL     8716>>IF       8718>>IF       8718>>IF       8718>>IF
      8724>>IF       8724>>IF       8805>>IF
KV$PTR.USRINPFNCINH
      4846**DCL      7491<<ASSIGN   7777<<ASSIGN   8261<<ASSIGN   8289>>IF       8417>>IF
KV$PTR.VDI$
      4826**DCL      7500>>IF       7500>>IF       7512>>IF       7571>>IF       7571>>IF       7571>>IF
      7592>>ASSIGN   7848>>IF       8078>>IF       8272>>IF       8285>>IF       8349>>IF       8389>>IF
      8453>>IF       8453>>IF       8458>>ASSIGN   8471>>IF       8626>>IF       8651>>IF       8651>>IF
      8691>>ASSIGN   8691>>ASSIGN   8692>>ASSIGN   8692>>ASSIGN   8704>>IF       8716>>IF       8774>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:224  
      8774>>IF
KV$PTR$
      4820**DCL      4826--IMP-PTR  7491>>ASSIGN   7492>>ASSIGN   7493>>ASSIGN   7500>>IF       7500>>IF
      7507>>IF       7512>>IF       7519>>IF       7549>>IF       7557>>ASSIGN   7570>>ASSIGN   7571>>IF
      7571>>IF       7571>>IF       7571>>IF       7592>>ASSIGN   7606>>IF       7606>>IF       7697>>IF
      7705>>IF       7705>>IF       7706>>ASSIGN   7706>>ASSIGN   7708>>IF       7708>>ASSIGN   7709>>IF
      7710>>ASSIGN   7714>>IF       7715>>IF       7716>>ASSIGN   7721>>IF       7721>>IF       7721>>IF
      7721>>IF       7721>>IF       7724>>ASSIGN   7724>>ASSIGN   7726>>IF       7726>>IF       7727>>ASSIGN
      7727>>ASSIGN   7728>>IF       7729>>ASSIGN   7731>>IF       7732>>IF       7732>>IF       7733>>ASSIGN
      7733>>ASSIGN   7735>>ASSIGN   7736>>IF       7736>>IF       7737>>ASSIGN   7737>>ASSIGN   7738>>ASSIGN
      7738>>ASSIGN   7739>>IF       7739>>IF       7739>>IF       7741>>ASSIGN   7741>>ASSIGN   7741>>ASSIGN
      7742>>ASSIGN   7742>>ASSIGN   7749>>ASSIGN   7750>>ASSIGN   7751>>ASSIGN   7770>>ASSIGN   7771>>ASSIGN
      7776>>ASSIGN   7777>>ASSIGN   7802>>IF       7807>>ASSIGN   7819>>IF       7825>>ASSIGN   7844>>IF
      7848>>IF       7857>>ASSIGN   7858>>ASSIGN   7859>>IF       7867>>IF       7880>>IF       7885>>ASSIGN
      7901>>ASSIGN   7906>>IF       7940>>ASSIGN   7947>>ASSIGN   7990>>ASSIGN   7991>>ASSIGN   7993>>ASSIGN
      8005>>ASSIGN   8006>>ASSIGN   8007>>ASSIGN   8011>>IF       8013>>ASSIGN   8014>>IF       8017>>ASSIGN
      8030>>ASSIGN   8031>>ASSIGN   8033>>ASSIGN   8037>>ASSIGN   8040>>IF       8042>>ASSIGN   8047>>ASSIGN
      8048>>ASSIGN   8051>>IF       8053>>ASSIGN   8078>>IF       8088>>ASSIGN   8088>>ASSIGN   8090>>DOWHILE
      8101>>ASSIGN   8110>>ASSIGN   8118>>IF       8123>>ASSIGN   8135>>IF       8142>>ASSIGN   8144>>ASSIGN
      8168>>ASSIGN   8174>>ASSIGN   8183>>IF       8183>>IF       8184>>ASSIGN   8185>>ASSIGN   8185>>ASSIGN
      8187>>ASSIGN   8187>>ASSIGN   8193>>IF       8196>>ASSIGN   8196>>ASSIGN   8246>>ASSIGN   8261>>ASSIGN
      8269>>IF       8272>>IF       8285>>IF       8289>>IF       8293>>IF       8347>>ASSIGN   8348>>ASSIGN
      8349>>IF       8360>>IF       8360>>IF       8360>>IF       8369>>IF       8375>>IF       8389>>IF
      8389>>IF       8406>>IF       8407>>CALL     8417>>IF       8453>>IF       8453>>IF       8458>>ASSIGN
      8471>>IF       8626>>IF       8647>>IF       8651>>IF       8651>>IF       8651>>IF       8651>>IF
      8651>>IF       8679>>ASSIGN   8679>>ASSIGN   8681>>IF       8681>>IF       8687>>ASSIGN   8687>>ASSIGN
      8688>>ASSIGN   8690>>ASSIGN   8690>>ASSIGN   8691>>ASSIGN   8691>>ASSIGN   8692>>ASSIGN   8692>>ASSIGN
      8704>>IF       8706>>ASSIGN   8716>>IF       8716>>IF       8718>>IF       8718>>IF       8718>>IF
      8718>>IF       8724>>IF       8724>>IF       8765>>ASSIGN   8766>>IF       8766>>IF       8767>>ASSIGN
      8767>>ASSIGN   8767>>ASSIGN   8767>>ASSIGN   8774>>IF       8774>>IF       8805>>IF
KV$REDBFR.CHR
      4709**DCL      8510>>IF       8522>>IF       8522>>IF       8539<<ASSIGN   8575>>IF
KV$SCNINPTRN.CHR
      5983**DCL      7639>>ASSIGN   7642>>ASSIGN   7657>>ASSIGN
KV$SCNINPTRN.TKNTBL
      5983**DCL      7635>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:225  
KV$SHRBFR.BITT
      4707**DCL      8360>>IF
KV$SRD.BTMRHT
      4965**DCL      4970--REDEF
KV$SRD.BTMRHT.CLM
      4967**DCL      8651>>IF
KV$SRD.CRT
      5041**DCL      5046--REDEF
KV$SRD.CRT.CLM
      5043**DCL      8651>>IF       8690<<ASSIGN   8690>>ASSIGN
KV$SRD.CRT.LIN
      5043**DCL      8766>>IF       8767>>ASSIGN
KV$SRD.CRT_PST
      5046**DCL      8681>>IF       8687>>ASSIGN
KV$SRD.DVCLINBIS
      5083**DCL      7721>>IF       7738<<ASSIGN   7738>>ASSIGN   7739>>IF       7741>>ASSIGN
KV$SRD.FLDEND
      5005**DCL      5010--REDEF
KV$SRD.HI_NONBLN
      5075**DCL      5080--REDEF
KV$SRD.HI_NONBLN.CLM
      5077**DCL      7721>>IF       7724<<ASSIGN   7742<<ASSIGN   8767>>ASSIGN
KV$SRD.HI_NONBLN.LIN
      5077**DCL      7721>>IF       7739>>IF       7741<<ASSIGN   8766>>IF       8767>>ASSIGN
KV$SRD.HI_NONBLNVRT
      4975**DCL      8688<<ASSIGN
KV$SRD.HI_NONBLN_PST
      5080**DCL      8681>>IF       8687<<ASSIGN
KV$SRD.ORG
      4897**DCL      4902--REDEF
KV$SRD.PRMVRTCLM
      5013**DCL      8765>>ASSIGN
KV$SRD.SRDEND
      5110**DCL      5115--REDEF
KV$SRD.TOPLFT
      4931**DCL      4936--REDEF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:226  
KV$SRD.VRTPSTOK
      4974**DCL      8651>>IF       8706<<ASSIGN
KV$SRD.WDT
      4973**DCL      8767>>ASSIGN
KV$SSN.CLMIS_BYTX
      5196**DCL      8439<<ASSIGN   8470<<ASSIGN   8545<<ASSIGN   8625<<ASSIGN
KV$SSN.INPCHR
      5164**DCL      7494>>ASSIGN   7694>>ASSIGN   7772>>ASSIGN   8271<<ASSIGN   8357>>ASSIGN
KV$SSN.INPECH
      5164**DCL      7495>>ASSIGN   7773>>ASSIGN   8356>>ASSIGN
KV$SSN.MRKRQSENB
      5160**DCL      8260<<ASSIGN
KV$SSN.NO_WATREDTRG
      5164**DCL      7872<<ASSIGN   8298<<ASSIGN
KV$SSN.OTPCHRCNT
      5152**DCL      8693<<ASSIGN   8693>>ASSIGN
KV$SSN.REDBFR.DSPLOWX
      5167**DCL      8751>>IF       8778>>IF
KV$SSN.REDBFR.EDTHI_X
      5166**DCL      8444<<ASSIGN   8490>>ASSIGN   8596>>IF       8600>>ASSIGN   8601>>CALLBLT  8603>>ASSIGN
      8608<<ASSIGN   8637>>ASSIGN   8756<<ASSIGN   8842<<ASSIGN   8842>>ASSIGN
KV$SSN.REDBFR.EDTLOWX
      5166**DCL      8264>>ASSIGN   8389>>IF       8423>>ASSIGN   8443<<ASSIGN   8468<<ASSIGN   8468>>ASSIGN
      8522>>IF       8637<<ASSIGN   8709>>IF       8718>>IF       8718>>IF       8718>>IF       8724>>IF
      8732>>IF       8751>>IF       8756>>ASSIGN   8758<<ASSIGN
KV$SSN.REDBFR.INSMODX
      5167**DCL      8445<<ASSIGN   8460>>IF       8604<<ASSIGN   8604>>ASSIGN   8759<<ASSIGN   8811>>IF
      8812<<ASSIGN   8841<<ASSIGN   8841>>ASSIGN
KV$SSN.REDBFR.NXTX
      5165**DCL      8424>>IF       8442<<ASSIGN   8600>>ASSIGN   8605<<ASSIGN   8605>>ASSIGN   8709>>IF
      8718>>IF       8732>>IF       8751>>IF       8757>>ASSIGN   8758>>ASSIGN   8759>>ASSIGN   8809<<ASSIGN
      8809>>ASSIGN   8811>>IF       8812>>ASSIGN   8818>>IF       8826>>ASSIGN   8840<<ASSIGN   8840>>ASSIGN
KV$SSN.REDBFR__.ADR$
      5192**DCL      8270>>ASSIGN   8401>>ASSIGN   8412>>ASSIGN   8433>>ASSIGN   8824>>ASSIGN
KV$SSN.REDBFR__.BFRBYTSIZ
      5193**DCL      8429>>IF       8818>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:227  
KV$SSN.REDBFR__.BYTX
      5192**DCL      8429>>IF       8446>>ASSIGN   8757>>ASSIGN
KV$SSN.REDBFR__.DATBYTSIZ
      5192**DCL      8375>>IF       8389>>IF       8389>>IF       8446<<ASSIGN   8606<<ASSIGN   8606>>ASSIGN
      8716>>IF       8757<<ASSIGN   8805>>IF       8810<<ASSIGN   8810>>ASSIGN   8843<<ASSIGN   8843>>ASSIGN
KV$SSN.REDONL
      5162**DCL      8415>>IF       8718>>IF
KV$SSN.REDRQSPND
      5164**DCL      8708>>IF
KV$SSN.REDRSPCNT
      5152**DCL      5153--REDEF
KV$SSN.SNCPTR$
      5147**DCL      8269>>IF
KV$SSN.TYPAHD
      5158**DCL      8143<<ASSIGN
KV$SSN.TYPAHD.BFRCHR
      5158**DCL      7532<<ASSIGN   7866<<ASSIGN   8292<<ASSIGN   8397<<ASSIGN
KV$SSN.TYPAHD.BFRINPFNCCHR
      5159**DCL      7558<<ASSIGN   7826<<ASSIGN   8018<<ASSIGN   8056<<ASSIGN   8182<<ASSIGN   8195<<ASSIGN
      8258<<ASSIGN
KV$SSN.WATINPDLTMRK
      5161**DCL      8259>>IF
KV$SSN.WATOTPDLTMRK
      5161**DCL      8259>>IF
KV$STR.ACTCHRTBL$
      5620**DCL      8360>>IF
KV$STR.ACTONTRN
      5678**DCL      8360>>IF
KV$STR.MAXRCRBYTSIZ
      5675**DCL      8375>>IF       8389>>IF       8407<>CALL     8716>>IF       8805>>IF
KV$STR.SNDMAXNMBRCR
      5676**DCL      7867>>IF       8293>>IF
KV$STR.TRNUSRINPFNC
      5681**DCL      8135>>IF       8142<<ASSIGN
KV$STR.WRDWRP
      5681**DCL      8718>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:228  
KV$STR.WRDWRPCLM
      5680**DCL      8718>>IF       8718>>IF       8724>>IF       8724>>IF
KV$STT.OTPCHRCNT
      5585**DCL      8692<<ASSIGN   8692>>ASSIGN
KV$STT.REQSTATS.DSPMSK
      5476**DCL      5482--REDEF
KV$STT.REQSTATS.SLCMSK
      5517**DCL      5524--REDEF
KV$TRNTBL.FNTCLS
      4670**DCL      8522>>IF       8522>>IF
KV$TRNTBL.INPCHRMSK
      4667**DCL      7607>>ASSIGN   7617>>ASSIGN
KV$TRNTBL.INPCTRSTRINTCHR
      4671**DCL      7507>>IF       7542>>IF
KV$TRNTBL.INPTKN$
      4667**DCL      7619>>IF
KV$TRNTBL.INPTRN1$
      4665**DCL      7618>>ASSIGN
KV$TRNTBL.INPTRN2$
      4665**DCL      7635>>IF       7639>>ASSIGN   7642>>ASSIGN   7657>>ASSIGN
KV$TRNTBL.OTPESC.CHR
      4669**DCL      8651>>IF
KV$TRNTBL.OTPESCCHR
      4668**DCL      4668--REDEF
KV$TRNTBL.OTPTRN1$
      4665**DCL      8651>>IF       8670>>ASSIGN
KV$TRNTBL.SPCESC$
      4667**DCL      7537>>IF
KV$TRNTBL.SP_CHR
      4670**DCL      8669>>ASSIGN
KV$TRNTBL.TRNINPCTRSTRID
      4672**DCL      7827>>IF
KV$USRPRM.STT$
      5732**DCL      8692>>ASSIGN   8692>>ASSIGN
KV$VDH_PST.PSTVAL
      5800**DCL      5805--REDEF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:229  
KV$VDI.INPUNT
      5871**DCL      8389>>IF       8716>>IF       8774>>IF
KV$VDI.OTPCNDPND
      5867**DCL      8651>>IF
KV$VDI.PRTCHK
      5869**DCL      7500>>IF       7571>>IF
KV$VDI.PRTTYP
      5864**DCL      7500>>IF       7571>>IF
KV$VDI.RE_DSPINP
      5865**DCL      8453>>IF       8471>>IF       8626>>IF       8704>>IF       8774>>IF
KV$VDI.RE_DSPLOWX
      5861**DCL      8453>>IF       8458<<ASSIGN
KV$VDI.TMPOTPCHRCNT
      5861**DCL      8691<<ASSIGN   8691>>ASSIGN
KV$VDI.USREVTENB
      5873**DCL      8651>>IF
KV$VDI.USRPRM$
      5831**DCL      8692>>ASSIGN   8692>>ASSIGN
KV$VDI.USRRQSDAT.RED
      5871**DCL      7512>>IF       7571>>IF       7592>>ASSIGN   7848>>IF       8272>>IF       8285>>IF
      8349>>IF
KV@VDH_DAT
      7324**DCL      8124--ASSIGN   8129--ASSIGN   8129--ASSIGN   8384<<ASSIGN   8386<>CALL     8742<<ASSIGN
      8743<>CALL     8827--DOWHILE  8830--ASSIGN   8830--ASSIGN   8830--ASSIGN   8832--ASSIGN   8832--ASSIGN
      8832--ASSIGN   8834--ASSIGN
KV@VDH_DAT.DATCTRCHR
      7366**DCL      8385<<ASSIGN
KVF$PST
      6004**DCL-ENT  8739--CALL
KVI$ACTRED
      6012**DCL-ENT  8386--CALL     8743--CALL
KVI$EDTX_TO_VRTCLM
      6005**DCL-ENT  8772--CALL
KVI$INTINPOPR
      6006**DCL-ENT  8131--CALL     8265--CALL
KVI$INTINPOPRX
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:230  
      6007**DCL-ENT  7523--CALL     7580--CALL     8849--CALL
KVI$RE_DSPINP
      6008**DCL-ENT  8775--CALL
KVI$SCPVRTCLMLOWX
      6009**DCL-ENT  8628--CALL     8638--CALL
KVI$SHFDSPPST
      6010**DCL-ENT  8477--CALL     8627--CALL     8712--CALL
KVI$SHFTO_DFL
      6011**DCL-ENT  8779--CALL
KVI_PRMTRN
      6597**DCL      7682<>CALL
KVI_SCNTRN
      6658**DCL      7667<>CALL
KVO$OTP1_HDN
      6014**DCL-ENT  8700--CALL
KVO$OTP1_VRT
      6013**DCL-ENT  8701--CALL
KVO$PST
      6015**DCL-ENT  8504--CALL     8618--CALL     8782--CALL
KVS$GETREDBFR
      6016**DCL-ENT  8407--CALL     8410--CALL     8432--CALL     8821--CALL
KVV$CALUSR
      6017**DCL-ENT  7594--CALL
KVV$CALUSR_EVT
      6018**DCL-ENT  8675--CALL
KV_NONPSTCHR
      6568**DCL      8438>>IF       8469>>IF       8491>>IF       8510>>IF       8546>>IF       8559>>IF
      8611>>IF       8632>>IF
KV_NONPSTCHR_WRD
      6567**DCL      6568--REDEF
KV_USR_EVT
      7470**DCL      8672>>ASSIGN
KV_USR_EXTINPTRN
      7434**DCL      7589>>ASSIGN
KV_VDH_DAT_NRM_ACTCHR
      6135**DCL      8384>>ASSIGN
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:231  
KV_VDH_DAT_NRM_NO_ACTCHR
      6054**DCL      8742>>ASSIGN
KV_VDH_PST_0_VRT
      6506**DCL      8782<>CALL
KV_VDH_PST_0_VRT.PSTVAL
      6544**DCL      6549--REDEF
KV_VDH_PST_SPCFRM
      6210**DCL      8739<>CALL
KV_VDH_PST_SPCFRM.PSTVAL
      6248**DCL      6253--REDEF
KV_VDH_PST_SPC_VRT
      6284**DCL      8504<>CALL
KV_VDH_PST_SPC_VRT.PSTVAL
      6322**DCL      6327--REDEF
KV_VDH_PST_VRT.PSTVAL
      6396**DCL      6401--REDEF
KV_VDH_PST_WHTSPC
      6432**DCL      8618<>CALL
KV_VDH_PST_WHTSPC.PSTVAL
      6470**DCL      6475--REDEF
KV_X364_FNC
      6733**DCL      8128--ASSIGN
KV_X364_FNCIDS
      7037**DCL      8129>>ASSIGN
KV_X364_FNCS
      7036**DCL      8126>>CALLBLT
KV_X364_FNCSU
      7029**DCL      7036--REDEF
LCLNL
      7736**LABEL    7711--GOTO     7714--GOTO     7717--GOTO     7730--GOTO
MVD$
      7151**DCL      4782--IMP-PTR  7493<<ASSIGN   7496>>ASSIGN   7497>>ASSIGN   7748>>ASSIGN   7771<<ASSIGN
      7779>>ASSIGN   7827>>IF       7852>>IF       8013>>ASSIGN   8118>>IF       8187>>ASSIGN   8305>>IF
      8316>>IF       8348<<ASSIGN   8375>>IF       8375>>IF       8419>>ASSIGN   8420>>ASSIGN   8460>>IF
      8471>>IF       8471>>IF       8485>>IF       8499>>IF       8499>>IF       8522>>IF       8522>>IF
      8612>>IF       8612>>IF       8626>>IF       8643>>IF       8643>>IF       8651>>IF       8651>>IF
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:232  
      8667>>IF       8669>>ASSIGN   8670>>ASSIGN   8680>>ASSIGN   8680>>ASSIGN   8697>>IF       8705>>ASSIGN
      8705>>ASSIGN   8708>>IF       8709>>IF       8709>>IF       8709>>IF       8709>>IF       8709>>IF
      8709>>IF       8732>>IF       8732>>IF       8732>>IF       8738>>IF       8741>>IF       8760>>IF
      8764>>IF       8765>>ASSIGN   8767>>ASSIGN   8770>>ASSIGN   8772>>CALL     8776>>IF       8776>>IF
      8776>>IF       8777>>ASSIGN   8777>>ASSIGN   8780>>ASSIGN   8780>>ASSIGN
NONESCCHR
      7962**LABEL    7953--GOTO
NON_TRN_REDBFR
      8406**LABEL    8406--GOTO
PRT_$
      6725**DCL      7500>>IF       7571>>IF
PRT_0
      6720**DCL      6726--DCLINIT
PRT_1
      6715**DCL      6726--DCLINIT
PRT_EVN
      6708**DCL      6726--DCLINIT
PRT_NON
      6696**DCL      6726--DCLINIT
PRT_ODD
      6701**DCL      6726--DCLINIT
PSTENDRED
      8747**PROC     8378--CALL     8741--CALL
REDBFR.BIN
      4712**DCL      8440<<ASSIGN   8467<<ASSIGN   8491>>IF       8518<<ASSIGN   8546>>IF       8552<<ASSIGN
      8588<<ASSIGN   8610<<ASSIGN
REDBFR$
      7141**DCL      4709--IMP-PTR  4711--IMP-PTR  4712--IMP-PTR  7142--REDEF    8270<<ASSIGN   8401<<ASSIGN
      8402>>IF       8412<<ASSIGN   8433<<ASSIGN   8440>>ASSIGN   8467>>ASSIGN   8491>>IF       8510>>IF
      8518>>ASSIGN   8522>>IF       8522>>IF       8539>>ASSIGN   8546>>IF       8552>>ASSIGN   8567>>CALLBLT
      8575>>IF       8578>>CALLBLT  8588>>ASSIGN   8601>>CALLBLT  8601>>CALLBLT  8610>>ASSIGN   8724>>IF
      8824<<ASSIGN   8830>>ASSIGN   8832>>ASSIGN   8836>>ASSIGN   8837>>ASSIGN
REDBFR_CHR
      4711**DCL      8567<<CALLBLT  8578<<CALLBLT  8601<<CALLBLT  8601>>CALLBLT  8724>>IF       8830<<ASSIGN
      8830>>ASSIGN   8832<<ASSIGN   8832>>ASSIGN   8836<<ASSIGN   8836>>ASSIGN   8837<<ASSIGN   8837>>ASSIGN
REDDATLST
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:233  
      8844**LABEL    8410--CALLALT  8432--CALLALT  8466--CALLALT  8550--CALLALT  8565--CALLALT  8577--CALLALT
      8587--CALLALT
SHF.CNT
      7149**DCL      8600<<ASSIGN   8601>>CALLBLT  8601>>CALLBLT  8603<<ASSIGN   8604>>ASSIGN   8605>>ASSIGN
      8606>>ASSIGN   8826<<ASSIGN   8827>>DOWHILE  8830>>ASSIGN   8832>>ASSIGN   8834<<ASSIGN   8834>>ASSIGN
      8836>>ASSIGN   8836>>ASSIGN   8837>>ASSIGN   8837>>ASSIGN
SHF.OFFSET
      7148**DCL      8790<<ASSIGN   8795<<ASSIGN   8800<<ASSIGN   8805>>IF       8806>>IF       8818>>IF
      8832>>ASSIGN   8837>>ASSIGN   8840>>ASSIGN   8841>>ASSIGN   8842>>ASSIGN   8843>>ASSIGN
SHFRHT1
      8786**PROC     8466--CALL     8550--CALL     8587--CALL
SHFRHT2 IN PROCEDURE SHFRHT1
      8793**ENTRY    8565--CALL
SHFRHT3 IN PROCEDURE SHFRHT1
      8798**ENTRY    8577--CALL
SSN$
      7150**DCL      5146--IMP-PTR  7492<<ASSIGN   7494>>ASSIGN   7495>>ASSIGN   7532>>ASSIGN   7558>>ASSIGN
      7694>>ASSIGN   7770<<ASSIGN   7772>>ASSIGN   7773>>ASSIGN   7826>>ASSIGN   7866>>ASSIGN   7872>>ASSIGN
      8018>>ASSIGN   8056>>ASSIGN   8143>>ASSIGN   8182>>ASSIGN   8195>>ASSIGN   8258>>ASSIGN   8259>>IF
      8259>>IF       8260>>ASSIGN   8264>>ASSIGN   8269>>IF       8270>>ASSIGN   8271>>ASSIGN   8292>>ASSIGN
      8298>>ASSIGN   8347<<ASSIGN   8356>>ASSIGN   8357>>ASSIGN   8375>>IF       8389>>IF       8389>>IF
      8389>>IF       8397>>ASSIGN   8401>>ASSIGN   8412>>ASSIGN   8415>>IF       8423>>ASSIGN   8424>>IF
      8429>>IF       8429>>IF       8433>>ASSIGN   8439>>ASSIGN   8442>>ASSIGN   8443>>ASSIGN   8444>>ASSIGN
      8445>>ASSIGN   8446>>ASSIGN   8446>>ASSIGN   8460>>IF       8468>>ASSIGN   8468>>ASSIGN   8470>>ASSIGN
      8490>>ASSIGN   8522>>IF       8545>>ASSIGN   8596>>IF       8600>>ASSIGN   8600>>ASSIGN   8601>>CALLBLT
      8603>>ASSIGN   8604>>ASSIGN   8604>>ASSIGN   8605>>ASSIGN   8605>>ASSIGN   8606>>ASSIGN   8606>>ASSIGN
      8608>>ASSIGN   8625>>ASSIGN   8637>>ASSIGN   8637>>ASSIGN   8693>>ASSIGN   8693>>ASSIGN   8708>>IF
      8709>>IF       8709>>IF       8716>>IF       8718>>IF       8718>>IF       8718>>IF       8718>>IF
      8718>>IF       8724>>IF       8732>>IF       8732>>IF       8751>>IF       8751>>IF       8751>>IF
      8756>>ASSIGN   8756>>ASSIGN   8757>>ASSIGN   8757>>ASSIGN   8757>>ASSIGN   8758>>ASSIGN   8758>>ASSIGN
      8759>>ASSIGN   8759>>ASSIGN   8778>>IF       8805>>IF       8809>>ASSIGN   8809>>ASSIGN   8810>>ASSIGN
      8810>>ASSIGN   8811>>IF       8811>>IF       8812>>ASSIGN   8812>>ASSIGN   8818>>IF       8818>>IF
      8824>>ASSIGN   8826>>ASSIGN   8840>>ASSIGN   8840>>ASSIGN   8841>>ASSIGN   8841>>ASSIGN   8842>>ASSIGN
      8842>>ASSIGN   8843>>ASSIGN   8843>>ASSIGN
SUBCOMMON
      7779**LABEL    7752--GOTO     8421--GOTO
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:234  
SUBCOMMON IN PROCEDURE SHFRHT1
      8800**LABEL    8791--GOTO     8796--GOTO
TBLSRC
      7954**LABEL    7961--EXIT     7998--EXIT     8011--EXIT     8014--EXIT     8067--GOTO     8098--EXIT
      8151--EXIT     8157--EXIT     8170--EXIT
TKN.TKN
      6002**DCL      7627>>ASSIGN   7670>>ASSIGN
TKN.TYP
      6001**DCL      7621>>DOCASE   7644>>DOCASE
TRNTBL$
      7144**DCL      4650--IMP-PTR  7145--REDEF    7146--REDEF    7496<<ASSIGN   7507>>IF       7537>>IF
      7542>>IF       7607>>ASSIGN   7617>>ASSIGN   7618>>ASSIGN   7619>>IF       7635>>IF       7639>>ASSIGN
      7642>>ASSIGN   7657>>ASSIGN
USR_EVT
      7398**DCL      8672<<ASSIGN   8675<>CALL     8827--DOWHILE  8830--ASSIGN   8830--ASSIGN   8830--ASSIGN
      8832--ASSIGN   8832--ASSIGN   8832--ASSIGN   8834--ASSIGN
USR_EVT.ID
      7404**DCL      8673<<ASSIGN
USR_EVT.PRM
      7404**DCL      8158<<ASSIGN   8240>>ASSIGN   8674<<ASSIGN
USR_EXTINPTRN
      7245**DCL      7589<<ASSIGN   7594<>CALL     8827--DOWHILE  8830--ASSIGN   8830--ASSIGN   8830--ASSIGN
      8830--ASSIGN   8832--ASSIGN   8832--ASSIGN   8832--ASSIGN   8832--ASSIGN   8834--ASSIGN   8836--ASSIGN
      8837--ASSIGN
USR_EXTINPTRN.IMD
      7251**DCL      7591<<ASSIGN
USR_EXTINPTRN.ORGCHR
      7252**DCL      7590<<ASSIGN   7891<<ASSIGN   7892>>CALLBLT  8072<<ASSIGN   8074>>CALLBLT  8125<<ASSIGN
      8126>>CALLBLT
USR_EXTINPTRN.RED
      7251**DCL      7592<<ASSIGN
USR_EXTINPTRN.SPCESC
      7251**DCL      7593<<ASSIGN
X364_CHARS
      7038**DCL      8128<<ASSIGN   8128>>ASSIGN
Y$BIT.T
PL6.E3A0      #001=KVI$INPCHR File=KVI$INPCHR.:E05TSI                            WED 07/30/97 02:00 Page:235  
      5997**DCL      7500>>IF       7537>>IF       7571>>IF       7619>>IF
Y$INPCHR_INPFNC
      7768**LABEL    7760--GOTO
