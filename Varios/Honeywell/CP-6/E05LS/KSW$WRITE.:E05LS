VERSION E05

PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:1    
        1        1        /*M* KSW$WRITE - WRITE ROUTINE FOR NETCON */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        KSW$WRITE: PROC(FORMAT_VEC,DV1,DV2,DV3,DV4,DV5,DV6,DV7,DV8,DV9,DV10);
        9        9        /**/
       10       10        /* PARAMS */
       11       11    1   DCL FORMAT_VEC DALIGNED VECTOR;
       12       12    1   DCL DV1 DALIGNED BIT(72);
       13       13    1   DCL DV2 DALIGNED BIT(72);
       14       14    1   DCL DV3 DALIGNED BIT(72);
       15       15    1   DCL DV4 DALIGNED BIT(72);
       16       16    1   DCL DV5 DALIGNED BIT(72);
       17       17    1   DCL DV6 DALIGNED BIT(72);
       18       18    1   DCL DV7 DALIGNED BIT(72);
       19       19    1   DCL DV8 DALIGNED BIT(72);
       20       20    1   DCL DV9 DALIGNED BIT(72);
       21       21    1   DCL DV10 DALIGNED BIT(72);
       22       22        /**/
       23       23        /* INCLUDE FILES */
       24       24        %INCLUDE CP_6;
       25      105        %INCLUDE XU_FORMAT_C;
       26      267        %INCLUDE F$DCB;
       27      316        /**/
       28      317        %EQU BUF_SIZE = 100;
       29      318        /* DCBS */
       30      319    1   DCL M$LO DCB;
       31      320        /**/
       32      321        /* VARIABLES */
       33      322    1   DCL KS_OUTBUF CHAR(%BUF_SIZE) STATIC SYMDEF INIT(' ');
       34      323    1   DCL I UBIN;
       35      324    1   DCL M$LO$ PTR;
       36      325    1   DCL DATA_VEC(0:9) DALIGNED BIT(72) STATIC INIT(VECTOR(NIL)*0);
       37      326        /**/
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:2    
       38      327        /* ENTRY DEFS */
       39      328    1   DCL X$FORMAT ENTRY(1);
       40      329        /**/
       41      330        /* MACROS */
       42      331        %F_FDS (NAME=FDS,
       43      332                DCB=M$LO,
       44      333                TRUNC=NO,
       45      334                BUF=KS_OUTBUF,
       46      335                VECTR=DATA_VEC);
       47      448        /**/
       48      449        /**/
       49      450        %EJECT;
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:3    
       50      451    1        M$LO$ = DCBADDR(DCBNUM(M$LO));
       51      452    1        FDS.FMT_ = FORMAT_VEC;
       52      453    1        IF ADDR(DV1) ~= ADDR(NIL)
       53      454    1           THEN DATA_VEC(0) = DV1;
       54      455    1        IF ADDR(DV2) ~= ADDR(NIL)
       55      456    1           THEN DATA_VEC(1) = DV2;
       56      457    1        IF ADDR(DV3) ~= ADDR(NIL)
       57      458    1           THEN DATA_VEC(2) = DV3;
       58      459    1        IF ADDR(DV4) ~= ADDR(NIL)
       59      460    1           THEN DATA_VEC(3) = DV4;
       60      461    1        IF ADDR(DV5) ~= ADDR(NIL)
       61      462    1           THEN DATA_VEC(4) = DV5;
       62      463    1        IF ADDR(DV6) ~= ADDR(NIL)
       63      464    1           THEN DATA_VEC(5) = DV6;
       64      465    1        IF ADDR(DV7) ~= ADDR(NIL)
       65      466    1           THEN DATA_VEC(6) = DV7;
       66      467    1        IF ADDR(DV8) ~= ADDR(NIL)
       67      468    1           THEN DATA_VEC(7) = DV8;
       68      469    1        IF ADDR(DV9) ~= ADDR(NIL)
       69      470    1           THEN DATA_VEC(8) = DV9;
       70      471    1        IF ADDR(DV10) ~= ADDR(NIL)
       71      472    1           THEN DATA_VEC(9) = DV10;
       72      473    1        I = 0;
       73      474    2        DO WHILE(DATA_VEC(I) ~= VECTOR(NIL) AND I < 10);
       74      475    2           I = I + 1;
       75      476    2        END;                               /* DO WHILE                           */
       76      477    1        FDS.NVECS# = I;
       77      478    1        FDS.BUF_.BOUND = M$LO$->F$DCB.WIDTH;
       78      479    1        IF (FDS.BUF_.BOUND = 0 OR FDS.BUF_.BOUND > %BUF_SIZE)
       79      480    1           THEN FDS.BUF_.BOUND = %BUF_SIZE;
       80      481    1        CALL X$FORMAT(FDS);
       81      482    1   END KSW$WRITE;

PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:4    
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSW$WRITE.

   Procedure KSW$WRITE requires 108 words for executable code.
   Procedure KSW$WRITE requires 16 words of local(AUTO) storage.

    No errors detected in file KSW$WRITE.:E05TSI    .

PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:5    

 Object Unit name= KSW$WRITE                                  File name= KSW$WRITE.:E05TOU
 UTS= JUL 30 '97 01:47:52.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    76    114  KSW$WRITE
    3   Proc  even  none   108    154  KSW$WRITE
    4  RoData even  none     6      6  KSW$WRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std       11  KSW$WRITE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      0  KS_OUTBUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 X$FORMAT
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:7    


        1        1        /*M* KSW$WRITE - WRITE ROUTINE FOR NETCON */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        KSW$WRITE: PROC(FORMAT_VEC,DV1,DV2,DV3,DV4,DV5,DV6,DV7,DV8,DV9,DV10);

      8  3 000000   000000 700200 xent  KSW$WRITE    TSX0  ! X66_AUTO_N
         3 000001   000020 000013                    ZERO    16,11

        9        9        /**/
       10       10        /* PARAMS */
       11       11    1   DCL FORMAT_VEC DALIGNED VECTOR;
       12       12    1   DCL DV1 DALIGNED BIT(72);
       13       13    1   DCL DV2 DALIGNED BIT(72);
       14       14    1   DCL DV3 DALIGNED BIT(72);
       15       15    1   DCL DV4 DALIGNED BIT(72);
       16       16    1   DCL DV5 DALIGNED BIT(72);
       17       17    1   DCL DV6 DALIGNED BIT(72);
       18       18    1   DCL DV7 DALIGNED BIT(72);
       19       19    1   DCL DV8 DALIGNED BIT(72);
       20       20    1   DCL DV9 DALIGNED BIT(72);
       21       21    1   DCL DV10 DALIGNED BIT(72);
       22       22        /**/
       23       23        /* INCLUDE FILES */
       24       24        %INCLUDE CP_6;
       25      105        %INCLUDE XU_FORMAT_C;
       26      267        %INCLUDE F$DCB;
       27      316        /**/
       28      317        %EQU BUF_SIZE = 100;
       29      318        /* DCBS */
       30      319    1   DCL M$LO DCB;
       31      320        /**/
       32      321        /* VARIABLES */
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:8    
       33      322    1   DCL KS_OUTBUF CHAR(%BUF_SIZE) STATIC SYMDEF INIT(' ');
       34      323    1   DCL I UBIN;
       35      324    1   DCL M$LO$ PTR;
       36      325    1   DCL DATA_VEC(0:9) DALIGNED BIT(72) STATIC INIT(VECTOR(NIL)*0);
       37      326        /**/
       38      327        /* ENTRY DEFS */
       39      328    1   DCL X$FORMAT ENTRY(1);
       40      329        /**/
       41      330        /* MACROS */
       42      331        %F_FDS (NAME=FDS,
       43      332                DCB=M$LO,
       44      333                TRUNC=NO,
       45      334                BUF=KS_OUTBUF,
       46      335                VECTR=DATA_VEC);
       47      448        /**/
       48      449        /**/
       49      450        %EJECT;
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:9    
       50      451    1        M$LO$ = DCBADDR(DCBNUM(M$LO));

    451  3 000002   000000 236007 xsym               LDQ     M$LO,DL
         3 000003   000000 470400 4                  LDP0    0
         3 000004   000000 471500                    LDP1    0,,PR0
         3 000005   100000 236106                    LDQ     0,QL,PR1
         3 000006   200017 756100                    STQ     M$LO$,,AUTO

       51      452    1        FDS.FMT_ = FORMAT_VEC;

    452  3 000007   200003 473500                    LDP3    @FORMAT_VEC,,AUTO
         3 000010   300000 237100                    LDAQ    0,,PR3
         3 000011   000056 757000 2                  STAQ    FDS

       52      453    1        IF ADDR(DV1) ~= ADDR(NIL)

    453  3 000012   200004 236100                    LDQ     @DV1,,AUTO
         3 000013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000014   000020 600000 3                  TZE     s:455

       53      454    1           THEN DATA_VEC(0) = DV1;

    454  3 000015   200004 474500                    LDP4    @DV1,,AUTO
         3 000016   400000 237100                    LDAQ    0,,PR4
         3 000017   000032 757000 2                  STAQ    DATA_VEC

       54      455    1        IF ADDR(DV2) ~= ADDR(NIL)

    455  3 000020   200005 236100                    LDQ     @DV2,,AUTO
         3 000021   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000022   000026 600000 3                  TZE     s:457

       55      456    1           THEN DATA_VEC(1) = DV2;

    456  3 000023   200005 474500                    LDP4    @DV2,,AUTO
         3 000024   400000 237100                    LDAQ    0,,PR4
         3 000025   000034 757000 2                  STAQ    DATA_VEC+2
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:10   

       56      457    1        IF ADDR(DV3) ~= ADDR(NIL)

    457  3 000026   200006 236100                    LDQ     @DV3,,AUTO
         3 000027   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000030   000034 600000 3                  TZE     s:459

       57      458    1           THEN DATA_VEC(2) = DV3;

    458  3 000031   200006 474500                    LDP4    @DV3,,AUTO
         3 000032   400000 237100                    LDAQ    0,,PR4
         3 000033   000036 757000 2                  STAQ    DATA_VEC+4

       58      459    1        IF ADDR(DV4) ~= ADDR(NIL)

    459  3 000034   200007 236100                    LDQ     @DV4,,AUTO
         3 000035   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000036   000042 600000 3                  TZE     s:461

       59      460    1           THEN DATA_VEC(3) = DV4;

    460  3 000037   200007 474500                    LDP4    @DV4,,AUTO
         3 000040   400000 237100                    LDAQ    0,,PR4
         3 000041   000040 757000 2                  STAQ    DATA_VEC+6

       60      461    1        IF ADDR(DV5) ~= ADDR(NIL)

    461  3 000042   200010 236100                    LDQ     @DV5,,AUTO
         3 000043   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000044   000050 600000 3                  TZE     s:463

       61      462    1           THEN DATA_VEC(4) = DV5;

    462  3 000045   200010 474500                    LDP4    @DV5,,AUTO
         3 000046   400000 237100                    LDAQ    0,,PR4
         3 000047   000042 757000 2                  STAQ    DATA_VEC+8

PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:11   
       62      463    1        IF ADDR(DV6) ~= ADDR(NIL)

    463  3 000050   200011 236100                    LDQ     @DV6,,AUTO
         3 000051   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000052   000056 600000 3                  TZE     s:465

       63      464    1           THEN DATA_VEC(5) = DV6;

    464  3 000053   200011 474500                    LDP4    @DV6,,AUTO
         3 000054   400000 237100                    LDAQ    0,,PR4
         3 000055   000044 757000 2                  STAQ    DATA_VEC+10

       64      465    1        IF ADDR(DV7) ~= ADDR(NIL)

    465  3 000056   200012 236100                    LDQ     @DV7,,AUTO
         3 000057   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000060   000064 600000 3                  TZE     s:467

       65      466    1           THEN DATA_VEC(6) = DV7;

    466  3 000061   200012 474500                    LDP4    @DV7,,AUTO
         3 000062   400000 237100                    LDAQ    0,,PR4
         3 000063   000046 757000 2                  STAQ    DATA_VEC+12

       66      467    1        IF ADDR(DV8) ~= ADDR(NIL)

    467  3 000064   200013 236100                    LDQ     @DV8,,AUTO
         3 000065   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000066   000072 600000 3                  TZE     s:469

       67      468    1           THEN DATA_VEC(7) = DV8;

    468  3 000067   200013 474500                    LDP4    @DV8,,AUTO
         3 000070   400000 237100                    LDAQ    0,,PR4
         3 000071   000050 757000 2                  STAQ    DATA_VEC+14

       68      469    1        IF ADDR(DV9) ~= ADDR(NIL)
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:12   

    469  3 000072   200014 236100                    LDQ     @DV9,,AUTO
         3 000073   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000074   000100 600000 3                  TZE     s:471

       69      470    1           THEN DATA_VEC(8) = DV9;

    470  3 000075   200014 474500                    LDP4    @DV9,,AUTO
         3 000076   400000 237100                    LDAQ    0,,PR4
         3 000077   000052 757000 2                  STAQ    DATA_VEC+16

       70      471    1        IF ADDR(DV10) ~= ADDR(NIL)

    471  3 000100   200015 236100                    LDQ     @DV10,,AUTO
         3 000101   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000102   000106 600000 3                  TZE     s:473

       71      472    1           THEN DATA_VEC(9) = DV10;

    472  3 000103   200015 474500                    LDP4    @DV10,,AUTO
         3 000104   400000 237100                    LDAQ    0,,PR4
         3 000105   000054 757000 2                  STAQ    DATA_VEC+18

       72      473    1        I = 0;

    473  3 000106   200016 450100                    STZ     I,,AUTO

       73      474    2        DO WHILE(DATA_VEC(I) ~= VECTOR(NIL) AND I < 10);

    474  3 000107   000113 710000 3                  TRA     s:476

       74      475    2           I = I + 1;

    475  3 000110   200016 235100                    LDA     I,,AUTO
         3 000111   000001 035007                    ADLA    1,DL
         3 000112   200016 755100                    STA     I,,AUTO

PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:13   
       75      476    2        END;                               /* DO WHILE                           */

    476  3 000113   200016 235100                    LDA     I,,AUTO
         3 000114   000001 735000                    ALS     1
         3 000115   000032 237005 2                  LDAQ    DATA_VEC,AL
         3 000116   000002 117000 4                  CMPAQ   2
         3 000117   000123 600000 3                  TZE     s:477
         3 000120   200016 235100                    LDA     I,,AUTO
         3 000121   000012 115007                    CMPA    10,DL
         3 000122   000110 602000 3                  TNC     s:475

       76      477    1        FDS.NVECS# = I;

    477  3 000123   200016 235100                    LDA     I,,AUTO
         3 000124   000067 755000 2                  STA     FDS+9

       77      478    1        FDS.BUF_.BOUND = M$LO$->F$DCB.WIDTH;

    478  3 000125   200017 470500                    LDP0    M$LO$,,AUTO
         3 000126   000004 236100                    LDQ     4,,PR0
         3 000127   000777 376007                    ANQ     511,DL
         3 000130   000020 736000                    QLS     16
         3 000131   000063 676000 2                  ERQ     FDS+5
         3 000132   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000133   000063 656000 2                  ERSQ    FDS+5

       78      479    1        IF (FDS.BUF_.BOUND = 0 OR FDS.BUF_.BOUND > %BUF_SIZE)

    479  3 000134   000063 236000 2                  LDQ     FDS+5
         3 000135   000034 316000 xsym               CANQ    B_VECTNIL+28
         3 000136   000143 600000 3                  TZE     s:480
         3 000137   000063 236000 2                  LDQ     FDS+5
         3 000140   000034 376000 xsym               ANQ     B_VECTNIL+28
         3 000141   000004 116000 4                  CMPQ    4
         3 000142   000147 602000 3                  TNC     s:481

       79      480    1           THEN FDS.BUF_.BOUND = %BUF_SIZE;
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:14   

    480  3 000143   000063 236000 2                  LDQ     FDS+5
         3 000144   177777 376007                    ANQ     65535,DL
         3 000145   000031 276003                    ORQ     25,DU
         3 000146   000063 756000 2                  STQ     FDS+5

       80      481    1        CALL X$FORMAT(FDS);

    481  3 000147   000005 630400 4                  EPPR0   5
         3 000150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000151   000000 701000 xent               TSX1    X$FORMAT
         3 000152   000000 011000                    NOP     0

       81      482    1   END KSW$WRITE;

    482  3 000153   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:15   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KSW$WRITE.
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:16   

 **** Variables and constants ****

  ****  Section 002  Data  KSW$WRITE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    32-0-0/d BIT (72)    r     1 DATA_VEC(0:9)
    56-0-0/w STRC(1080)  r     1 FDS                        0-0-0/c CHAR(100)   r     1 KS_OUTBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DV1                      15-0-0/w PTR         r     1 @DV10
     5-0-0/w PTR         r     1 @DV2                       6-0-0/w PTR         r     1 @DV3
     7-0-0/w PTR         r     1 @DV4                      10-0-0/w PTR         r     1 @DV5
    11-0-0/w PTR         r     1 @DV6                      12-0-0/w PTR         r     1 @DV7
    13-0-0/w PTR         r     1 @DV8                      14-0-0/w PTR         r     1 @DV9
     3-0-0/w PTR         r     1 @FORMAT_VEC               *0-0-0/d BIT (72)    r     1 DV1
    *0-0-0/d BIT (72)    r     1 DV10                      *0-0-0/d BIT (72)    r     1 DV2
    *0-0-0/d BIT (72)    r     1 DV3                       *0-0-0/d BIT (72)    r     1 DV4
    *0-0-0/d BIT (72)    r     1 DV5                       *0-0-0/d BIT (72)    r     1 DV6
    *0-0-0/d BIT (72)    r     1 DV7                       *0-0-0/d BIT (72)    r     1 DV8
    *0-0-0/d BIT (72)    r     1 DV9                       *0-0-0/d VECT        r     1 FORMAT_VEC
    16-0-0/w UBIN        r     1 I                         17-0-0/w PTR         r     1 M$LO$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$LO

PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:17   

   Procedure KSW$WRITE requires 108 words for executable code.
   Procedure KSW$WRITE requires 16 words of local(AUTO) storage.

    No errors detected in file KSW$WRITE.:E05TSI    .
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:19   
          MINI XREF LISTING

DATA_VEC
       325**DCL       379--DCLINIT   454<<ASSIGN    456<<ASSIGN    458<<ASSIGN    460<<ASSIGN    462<<ASSIGN
       464<<ASSIGN    466<<ASSIGN    468<<ASSIGN    470<<ASSIGN    472<<ASSIGN    474>>DOWHILE
DV1
        12**DCL         8--PROC      453--IF        454>>ASSIGN
DV10
        21**DCL         8--PROC      471--IF        472>>ASSIGN
DV2
        13**DCL         8--PROC      455--IF        456>>ASSIGN
DV3
        14**DCL         8--PROC      457--IF        458>>ASSIGN
DV4
        15**DCL         8--PROC      459--IF        460>>ASSIGN
DV5
        16**DCL         8--PROC      461--IF        462>>ASSIGN
DV6
        17**DCL         8--PROC      463--IF        464>>ASSIGN
DV7
        18**DCL         8--PROC      465--IF        466>>ASSIGN
DV8
        19**DCL         8--PROC      467--IF        468>>ASSIGN
DV9
        20**DCL         8--PROC      469--IF        470>>ASSIGN
F$DCB.ACTPOS
       293**DCL       293--REDEF
F$DCB.ARS
       268**DCL       268--REDEF
F$DCB.ATTR
       286**DCL       287--REDEF
F$DCB.BORROW
       301**DCL       301--REDEF     301--REDEF     301--REDEF
F$DCB.DCBNAME.L
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:20   
       315**DCL       315--IMP-SIZ
F$DCB.EOMCHAR
       272**DCL       272--REDEF
F$DCB.FLDID
       296**DCL       296--REDEF
F$DCB.FORM$
       290**DCL       290--REDEF
F$DCB.FSECT
       306**DCL       306--REDEF
F$DCB.FSN
       283**DCL       283--REDEF     283--REDEF     284--REDEF
F$DCB.HEADER$
       289**DCL       289--REDEF
F$DCB.IXTNSIZE
       287**DCL       287--REDEF
F$DCB.LASTSTA$
       277**DCL       277--REDEF
F$DCB.LVL
       302**DCL       302--REDEF
F$DCB.NAME.C
       277**DCL       277--REDEF
F$DCB.NOEOF
       298**DCL       298--REDEF
F$DCB.NRECS
       288**DCL       288--REDEF
F$DCB.NRECX
       307**DCL       307--REDEF
F$DCB.OHDR
       299**DCL       299--REDEF
F$DCB.ORG
       282**DCL       282--REDEF
F$DCB.PRECNO
       305**DCL       305--REDEF
F$DCB.RCSZ
       310**DCL       310--REDEF
F$DCB.RES
PL6.E3A0      #001=KSW$WRITE File=KSW$WRITE.:E05TSI                              WED 07/30/97 01:47 Page:21   
       278**DCL       278--REDEF
F$DCB.SETX
       290**DCL       290--REDEF
F$DCB.TAB$
       289**DCL       290--REDEF
F$DCB.TDA
       304**DCL       304--REDEF
F$DCB.WIDTH
       275**DCL       478>>ASSIGN
F$DCB.WSN
       279**DCL       279--REDEF
FDS
       349**DCL       481<>CALL
FDS.BUF_.BOUND
       367**DCL       478<<ASSIGN    479>>IF        479>>IF        480<<ASSIGN
FDS.FMT_
       353**DCL       452<<ASSIGN
FDS.NVECS#
       377**DCL       477<<ASSIGN
FORMAT_VEC
        11**DCL         8--PROC      452>>ASSIGN
I
       323**DCL       473<<ASSIGN    474>>DOWHILE   474>>DOWHILE   475<<ASSIGN    475>>ASSIGN    477>>ASSIGN
KS_OUTBUF
       322**DCL       367--DCLINIT   369--DCLINIT
M$LO
       319**DCL       451--ASSIGN
M$LO$
       324**DCL       451<<ASSIGN    478>>ASSIGN
X$FORMAT
       328**DCL-ENT   481--CALL
