VERSION E05

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:1    
        1        1        /*M* VXE$ERROR - prints error messages for LINK.     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8     */
        8        8        VXE$ERROR:
        9        9              PROC( ERR#, LEVEL, AUX,         MID );
       10       10        %INCLUDE VX_INC_C;
       11    10726        %C;

             10734    1   /*******************************************************************************
             10735    1   *                                                                              *
             10736    1   *                          CHAR                                                 *
             10737    1   *                                                                              *
             10738    1   *******************************************************************************/

       12    10742    1   DCL SCREAM     CHAR(0)   ALIGNED   CONSTANT
       13    10743    1              INIT('**** ALTRET RETURN ON M$MERC');
       14    10744        %E;

             10752    1   /*******************************************************************************
             10753    1   *                                                                              *
             10754    1   *                          ENTRY                                                 *
             10755    1   *                                                                              *
             10756    1   *******************************************************************************/

       15    10760    1   DCL VXW$WRITE       ENTRY(3);
       16    10761        %P;

             10769    1   /*******************************************************************************
             10770    1   *                                                                              *
             10771    1   *                          PARAMETERS                                              *
             10772    1   *                                                                              *
             10773    1   *******************************************************************************/

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:2    
       17    10777    1   DCL ERR#            UBIN(36)  ALIGNED;
       18    10778    1   DCL LEVEL           SBIN WORD ALIGNED;
       19    10779    1   DCL AUX             SBIN WORD ALIGNED;
       20    10780    1   DCL MID             CHAR(1)   ALIGNED;
       21    10781        %U;

             10789    1   /*******************************************************************************
             10790    1   *                                                                              *
             10791    1   *                          UBIN                                                 *
             10792    1   *                                                                              *
             10793    1   *******************************************************************************/

       22    10797    1   DCL ABS_LEVEL       UBIN(36)  ALIGNED;
       23    10798    1   DCL ABS_AUX         UBIN(36)  ALIGNED;
       24    10799        /**/
       25    10800    1   DCL ERR_CODE BIT(36) ALIGNED;
       26    10801        /**/
       27    10802        %FPT_ERRMSG( FPTN=VX_FPT_ERRMSG_AUX,
       28    10803                   CODE = VX_ERR_CODE_AUX,
       29    10804                   BUF = VX_EBUF,
       30    10805                   OUTDCB1 = M$LO,
       31    10806                   FIELD1  = VX_EFIELD1,
       32    10807                   FIELD2  = VX_OK.OUNAME,
       33    10808                   FIELD3  = VX_OK.FILE.OFNAME,
       34    10809                   RESULTS = VX_ERR_RESULTS,
       35    10810                   STCLASS="STATIC SYMDEF");
       36    10837        %VLR_ERRMSG( FPTN=VX_ERR_RESULTS, STCLASS="SYMREF");
       37    10859        %PLIST;
       38    10860        %B$TCB;
       39    10863        %B$ALT;
       40    10871    1   DCL M$LO            DCB;
       41    10872    1   DCL M$DO   DCB;
       42    10873        %EJECT;
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:3    
       43    10874    1         VX_ERR_CODE.MID = ASCBIN( MID );
       44    10875    1   VXE$ERR:
       45    10876    1         ENTRY( ERR#, LEVEL, AUX         );
       46    10877    1         IF VX_OD.SIN.NWARN AND LEVEL = 2 THEN RETURN;
       47    10878    1         VX_ERR_CODE.ERR# = ERR#;
       48    10879    1         IF LEVEL >= 0 THEN ABS_LEVEL = LEVEL;
       49    10880    1         ELSE ABS_LEVEL = - LEVEL;
       50    10881    2         IF VX_EFIELD1.COUNT > 31 THEN DO ;
       51    10882    2             VX_EFIELD1.COUNT = 31 ;
       52    10883    2             SUBSTR (VX_EFIELD1.CHARS, 31-3) = '...' ;
       53    10884    2            END ;
       54    10885    1         CALL M$ERRMSG( VX_FPT_ERRMSG )     ALTRET( ERROR );
       55    10886    2         IF AUX ~= 0 THEN DO;
       56    10887    2             IF AUX < 0 THEN ABS_AUX = - AUX;
       57    10888    2             ELSE ABS_AUX =   AUX;
       58    10889    2             VX_FPT_ERRMSG_AUX.V.FLAGLEV# = ABS_LEVEL;
       59    10890    2             IF VX_OK.FILE.OFNAME.COUNT + VX_OK.OUNAME.COUNT > 20
       60    10891    2                     AND
       61    10892    3                     ABS_AUX = E$REFOUOF_VX THEN DO;
       62    10893    3                 VX_ERR_CODE_AUX.ERR#     = E$REFOUOF_SPLIT1_VX;
       63    10894        /*E*  ERROR: VXE-E$REFOUOF_SPLIT1_VX-0
       64    10895              MESSAGE: The reference occurs in object unit %U2;
       65    10896              DESCRIPTION: Self-explanatory.
       66    10897        */
       67    10898    3                 CALL M$ERRMSG( VX_FPT_ERRMSG_AUX )        ALTRET( ERROR_SEC );
       68    10899    3                 VX_ERR_CODE_AUX.ERR#     = E$REFOUOF_SPLIT2_VX;
       69    10900        /*E*  ERROR: VXE-E$REFOUOF_SPLIT2_VX-0
       70    10901              MESSAGE: In object file %U3.
       71    10902
       72    10903              DESCRIPTION: Self-explanatory.
       73    10904        */
       74    10905    3                 CALL M$ERRMSG( VX_FPT_ERRMSG_AUX )       ALTRET( ERROR_SEC );
       75    10906    3                END;
       76    10907    3             ELSE DO;
       77    10908        /*E*  ERROR: VXE-E$OF_VX-0
       78    10909              MESSAGE: In object file %U3.
       79    10910
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:4    
       80    10911              DESCRIPTION: Locates occurrence ( which file ) of primary message.
       81    10912        */
       82    10913    3                 VX_ERR_CODE_AUX.ERR#     = ABS_AUX;
       83    10914        /*E*  ERROR: VXE-E$OUOF_VX-0
       84    10915              MESSAGE: In object unit %U2; in object file %U3.
       85    10916
       86    10917              DESCRIPTION: Locates occurrence ( which unit and file ) of primary message.
       87    10918        */
       88    10919        /*E*  ERROR: VXE-E$REFOUOF_VX-0
       89    10920              MESSAGE: The reference occurs in object unit %U2; In object file %U3.
       90    10921
       91    10922              DESCRIPTION: Locates occurrence ( which unit and file ) of primary message.
       92    10923        */
       93    10924    3                 CALL M$ERRMSG( VX_FPT_ERRMSG_AUX ) ALTRET( ERROR_SEC );
       94    10925    3                END;
       95    10926    2            END;
       96    10927    2         IF LEVEL >= @E$F_VX THEN DO;      /* FATAL ERROR */
       97    10928    2             IF ERR# = E$OVERFLOW_IS_VX THEN RETURN; /* Don't quit yet,
       98    10929                                                @E$OUT_OF_IS will bring us back here */
       99    10930                  %ERROR_IT;
      100    10933    2            END;
      101    10934    1         VX_ERR_CODE.MID = 5;              /* DEFAULT MID 'E' */
      102    10935    1         VX_FPT_ERRMSG.V.DCB# = DCBNUM(NIL);
      103    10936    1         RETURN;
      104    10937
      105    10938    1   VXE$ERRMSG: ENTRY( ERR#, LEVEL, AUX );
      106    10939
      107    10940    2         IF ADDR(ERR#) ~= ADDR(NIL) THEN DO;
      108    10941    2             ERR_CODE = BINBIT( ERR#, 36 );
      109    10942    2             IF ADDR(AUX) ~= ADDR(NIL) THEN VX_FPT_ERRMSG.V.DCB# = AUX;
      110    10943    2            END;
      111    10944    2         ELSE DO;
      112    10945    2             ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      113    10946    2             VX_FPT_ERRMSG.V.DCB# = B$TCB$ -> B$TCB.ALT$ -> B$ALT.DCB#;
      114    10947    2            END;
      115    10948    1         VX_FPT_ERRMSG.V.FLAGLEV# = MAXIMUM(LEVEL, -LEVEL);
      116    10949    1         VX_FPT_ERRMSG.CODE_ = VECTOR( ERR_CODE );
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:5    
      117    10950    1         CALL M$ERRMSG( VX_FPT_ERRMSG )        ALTRET ( ERROR );
      118    10951    1         VX_FPT_ERRMSG.CODE_ = VECTOR( VX_ERR_CODE );
      119    10952    2         IF LEVEL >= @E$F_VX THEN DO;
      120    10953                  %ERROR_IT;
      121    10956    2            END;
      122    10957    1         RETURN;
      123    10958
      124    10959    1   ERROR:;
      125    10960    1   ERROR_SEC:;
      126    10961    1         CALL M$MERC              ALTRET(MERC_ERROR);
      127    10962    1         RETURN;
      128    10963    1   VXE$MERC:
      129    10964    1         ENTRY;
      130    10965    1   MERC_ERROR:
      131    10966    1         CALL VXW$WRITE( SCREAM, LENGTHC(SCREAM), 1);
      132    10967              %ERROR_IT;
      133    10970    1   END;

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:6    
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXE$ERROR.

   Procedure VXE$ERROR requires 169 words for executable code.
   Procedure VXE$ERROR requires 12 words of local(AUTO) storage.

    No errors detected in file VXE$ERROR.:E05TSI    .

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:7    

 Object Unit name= VXE$ERROR                                  File name= VXE$ERROR.:E05TOU
 UTS= JUL 30 '97 08:07:56.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2  RoData even  UTS      8     10  VXE$ERROR
    3   Data  even  none    26     32  VXE$ERROR
    4   DCB   even  none     0      0  M$LO
    5   DCB   even  none     0      0  M$DO
    6   Proc  even  none   169    251  VXE$ERROR
    7  RoData even  none     7      7  VXE$ERROR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes            yes      Std        4  VXE$ERROR
     6     10                  yes      Std        3  VXE$ERR
     6    155                  yes      Std        3  VXE$ERRMSG
     6    240                  yes      Std        0  VXE$MERC

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    3      0  VX_FPT_ERRMSG_AUX
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:8    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VXW$WRITE
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_FPT_ERRMSG                         VX_OK
     B$TCB$                                VX_OU_HEAD                            VX_ERRORS
     VX_OD                                 VX_ERR_CODE                           VX_ERR_CODE_AUX
     VX_EBUF                               VX_EFIELD1                            VX_ERR_RESULTS
     M$LO                                  M$DO                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:9    


        1        1        /*M* VXE$ERROR - prints error messages for LINK.     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8     */
        8        8        VXE$ERROR:
        9        9              PROC( ERR#, LEVEL, AUX,         MID );

      9  6 000000   000000 700200 xent  VXE$ERROR    TSX0  ! X66_AUTO_4
         6 000001   000014 000004                    ZERO    12,4

       10       10        %INCLUDE VX_INC_C;
       11    10726        %C;

             10734    1   /*******************************************************************************
             10735    1   *                                                                              *
             10736    1   *                          CHAR                                                 *
             10737    1   *                                                                              *
             10738    1   *******************************************************************************/

       12    10742    1   DCL SCREAM     CHAR(0)   ALIGNED   CONSTANT
       13    10743    1              INIT('**** ALTRET RETURN ON M$MERC');
       14    10744        %E;

             10752    1   /*******************************************************************************
             10753    1   *                                                                              *
             10754    1   *                          ENTRY                                                 *
             10755    1   *                                                                              *
             10756    1   *******************************************************************************/

       15    10760    1   DCL VXW$WRITE       ENTRY(3);
       16    10761        %P;

             10769    1   /*******************************************************************************
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:10   
             10770    1   *                                                                              *
             10771    1   *                          PARAMETERS                                             *
             10772    1   *                                                                              *
             10773    1   *******************************************************************************/

       17    10777    1   DCL ERR#            UBIN(36)  ALIGNED;
       18    10778    1   DCL LEVEL           SBIN WORD ALIGNED;
       19    10779    1   DCL AUX             SBIN WORD ALIGNED;
       20    10780    1   DCL MID             CHAR(1)   ALIGNED;
       21    10781        %U;

             10789    1   /*******************************************************************************
             10790    1   *                                                                              *
             10791    1   *                          UBIN                                                 *
             10792    1   *                                                                              *
             10793    1   *******************************************************************************/

       22    10797    1   DCL ABS_LEVEL       UBIN(36)  ALIGNED;
       23    10798    1   DCL ABS_AUX         UBIN(36)  ALIGNED;
       24    10799        /**/
       25    10800    1   DCL ERR_CODE BIT(36) ALIGNED;
       26    10801        /**/
       27    10802        %FPT_ERRMSG( FPTN=VX_FPT_ERRMSG_AUX,
       28    10803                   CODE = VX_ERR_CODE_AUX,
       29    10804                   BUF = VX_EBUF,
       30    10805                   OUTDCB1 = M$LO,
       31    10806                   FIELD1  = VX_EFIELD1,
       32    10807                   FIELD2  = VX_OK.OUNAME,
       33    10808                   FIELD3  = VX_OK.FILE.OFNAME,
       34    10809                   RESULTS = VX_ERR_RESULTS,
       35    10810                   STCLASS="STATIC SYMDEF");
       36    10837        %VLR_ERRMSG( FPTN=VX_ERR_RESULTS, STCLASS="SYMREF");
       37    10859        %PLIST;
       38    10860        %B$TCB;
       39    10863        %B$ALT;
       40    10871    1   DCL M$LO            DCB;
       41    10872    1   DCL M$DO   DCB;
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:11   
       42    10873        %EJECT;
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:12   
       43    10874    1         VX_ERR_CODE.MID = ASCBIN( MID );

  10874  6 000002   200006 470500                    LDP0    @MID,,AUTO
         6 000003   000000 236100                    LDQ     0,,PR0
         6 000004   000033 772000                    QRL     27
         6 000005   000022 736000                    QLS     18
         6 000006   000000 752010 xsym               STCQ    VX_ERR_CODE,'10'O
         6 000007   000012 710000 6                  TRA     s:10877

       44    10875    1   VXE$ERR:
       45    10876    1         ENTRY( ERR#, LEVEL, AUX         );

  10876  6 000010   000000 700200 xent  VXE$ERR      TSX0  ! X66_AUTO_4
         6 000011   000014 000004                    ZERO    12,4

       46    10877    1         IF VX_OD.SIN.NWARN AND LEVEL = 2 THEN RETURN;

  10877  6 000012   000000 236000 xsym               LDQ     VX_OD
         6 000013   000400 316007                    CANQ    256,DL
         6 000014   000022 600000 6                  TZE     s:10878
         6 000015   200004 470500                    LDP0    @LEVEL,,AUTO
         6 000016   000000 235100                    LDA     0,,PR0
         6 000017   000002 115007                    CMPA    2,DL
         6 000020   000022 601000 6                  TNZ     s:10878

  10877  6 000021   000000 702200 xent               TSX2  ! X66_ARET

       47    10878    1         VX_ERR_CODE.ERR# = ERR#;

  10878  6 000022   200003 470500                    LDP0    @ERR#,,AUTO
         6 000023   000000 236100                    LDQ     0,,PR0
         6 000024   000003 736000                    QLS     3
         6 000025   000000 676000 xsym               ERQ     VX_ERR_CODE
         6 000026   777770 376007                    ANQ     -8,DL
         6 000027   000000 656000 xsym               ERSQ    VX_ERR_CODE

       48    10879    1         IF LEVEL >= 0 THEN ABS_LEVEL = LEVEL;
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:13   

  10879  6 000030   200004 471500                    LDP1    @LEVEL,,AUTO
         6 000031   100000 235100                    LDA     0,,PR1
         6 000032   000035 604000 6                  TMI     s:10880

  10879  6 000033   200007 755100                    STA     ABS_LEVEL,,AUTO
         6 000034   000040 710000 6                  TRA     s:10881

       49    10880    1         ELSE ABS_LEVEL = - LEVEL;

  10880  6 000035   100000 235100                    LDA     0,,PR1
         6 000036   000000 531000                    NEG     0
         6 000037   200007 755100                    STA     ABS_LEVEL,,AUTO

       50    10881    2         IF VX_EFIELD1.COUNT > 31 THEN DO ;

  10881  6 000040   000000 236000 xsym               LDQ     VX_EFIELD1
         6 000041   777000 376003                    ANQ     -512,DU
         6 000042   040000 116003                    CMPQ    16384,DU
         6 000043   000051 602000 6                  TNC     s:10885

       51    10882    2             VX_EFIELD1.COUNT = 31 ;

  10882  6 000044   037000 236003                    LDQ     15872,DU
         6 000045   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

       52    10883    2             SUBSTR (VX_EFIELD1.CHARS, 31-3) = '...' ;

  10883  6 000046   040000 100400                    MLR     fill='040'O
         6 000047   000007 000003 2                  ADSC9   SCREAM+7                 cn=0,n=3
         6 000050   000007 200063 xsym               ADSC9   VX_EFIELD1+7             cn=1,n=51

       53    10884    2            END ;

       54    10885    1         CALL M$ERRMSG( VX_FPT_ERRMSG )     ALTRET( ERROR );

  10885  6 000051   000000 630400 xsym               EPPR0   VX_FPT_ERRMSG
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:14   
         6 000052   420000 713400                    CLIMB   alt,+8192
         6 000053   405000 401760                    pmme    nvectors=11
         6 000054   000234 702000 6                  TSX2    ERROR

       55    10886    2         IF AUX ~= 0 THEN DO;

  10886  6 000055   200005 470500                    LDP0    @AUX,,AUTO
         6 000056   000000 235100                    LDA     0,,PR0
         6 000057   000135 600000 6                  TZE     s:10927

       56    10887    2             IF AUX < 0 THEN ABS_AUX = - AUX;

  10887  6 000060   000065 605000 6                  TPL     s:10888

  10887  6 000061   000000 235100                    LDA     0,,PR0
         6 000062   000000 531000                    NEG     0
         6 000063   200010 755100                    STA     ABS_AUX,,AUTO
         6 000064   000066 710000 6                  TRA     s:10889

       57    10888    2             ELSE ABS_AUX =   AUX;

  10888  6 000065   200010 755100                    STA     ABS_AUX,,AUTO

       58    10889    2             VX_FPT_ERRMSG_AUX.V.FLAGLEV# = ABS_LEVEL;

  10889  6 000066   200007 236100                    LDQ     ABS_LEVEL,,AUTO
         6 000067   000011 736000                    QLS     9
         6 000070   000027 552010 3                  STBQ    VX_FPT_ERRMSG_AUX+23,'10'O

       59    10890    2             IF VX_OK.FILE.OFNAME.COUNT + VX_OK.OUNAME.COUNT > 20

  10890  6 000071   000013 236000 xsym               LDQ     VX_OK+11
         6 000072   000033 772000                    QRL     27
         6 000073   200012 756100                    STQ     ERR_CODE+1,,AUTO
         6 000074   000023 236000 xsym               LDQ     VX_OK+19
         6 000075   000033 772000                    QRL     27
         6 000076   200012 036100                    ADLQ    ERR_CODE+1,,AUTO
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:15   
         6 000077   000025 116007                    CMPQ    21,DL
         6 000100   000124 602000 6                  TNC     s:10913
         6 000101   000003 115007                    CMPA    3,DL
         6 000102   000124 601000 6                  TNZ     s:10913

       60    10891    2                     AND
       61    10892    3                     ABS_AUX = E$REFOUOF_VX THEN DO;

       62    10893    3                 VX_ERR_CODE_AUX.ERR#     = E$REFOUOF_SPLIT1_VX;

  10893  6 000103   000000 236000 xsym               LDQ     VX_ERR_CODE_AUX
         6 000104   000000 376000 7                  ANQ     0
         6 000105   000040 276007                    ORQ     32,DL
         6 000106   000000 756000 xsym               STQ     VX_ERR_CODE_AUX

       63    10894        /*E*  ERROR: VXE-E$REFOUOF_SPLIT1_VX-0
       64    10895              MESSAGE: The reference occurs in object unit %U2;
       65    10896              DESCRIPTION: Self-explanatory.
       66    10897        */
       67    10898    3                 CALL M$ERRMSG( VX_FPT_ERRMSG_AUX )        ALTRET( ERROR_SEC );

  10898  6 000107   000000 630400 3                  EPPR0   VX_FPT_ERRMSG_AUX
         6 000110   420000 713400                    CLIMB   alt,+8192
         6 000111   405000 401760                    pmme    nvectors=11
         6 000112   000234 702000 6                  TSX2    ERROR

       68    10899    3                 VX_ERR_CODE_AUX.ERR#     = E$REFOUOF_SPLIT2_VX;

  10899  6 000113   000000 236000 xsym               LDQ     VX_ERR_CODE_AUX
         6 000114   000000 376000 7                  ANQ     0
         6 000115   000050 276007                    ORQ     40,DL
         6 000116   000000 756000 xsym               STQ     VX_ERR_CODE_AUX

       69    10900        /*E*  ERROR: VXE-E$REFOUOF_SPLIT2_VX-0
       70    10901              MESSAGE: In object file %U3.
       71    10902
       72    10903              DESCRIPTION: Self-explanatory.
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:16   
       73    10904        */
       74    10905    3                 CALL M$ERRMSG( VX_FPT_ERRMSG_AUX )       ALTRET( ERROR_SEC );

  10905  6 000117   000000 630400 3                  EPPR0   VX_FPT_ERRMSG_AUX
         6 000120   420000 713400                    CLIMB   alt,+8192
         6 000121   405000 401760                    pmme    nvectors=11
         6 000122   000234 702000 6                  TSX2    ERROR

       75    10906    3                END;

  10906  6 000123   000135 710000 6                  TRA     s:10927

       76    10907    3             ELSE DO;

       77    10908        /*E*  ERROR: VXE-E$OF_VX-0
       78    10909              MESSAGE: In object file %U3.
       79    10910
       80    10911              DESCRIPTION: Locates occurrence ( which file ) of primary message.
       81    10912        */
       82    10913    3                 VX_ERR_CODE_AUX.ERR#     = ABS_AUX;

  10913  6 000124   200010 236100                    LDQ     ABS_AUX,,AUTO
         6 000125   000003 736000                    QLS     3
         6 000126   000000 676000 xsym               ERQ     VX_ERR_CODE_AUX
         6 000127   777770 376007                    ANQ     -8,DL
         6 000130   000000 656000 xsym               ERSQ    VX_ERR_CODE_AUX

       83    10914        /*E*  ERROR: VXE-E$OUOF_VX-0
       84    10915              MESSAGE: In object unit %U2; in object file %U3.
       85    10916
       86    10917              DESCRIPTION: Locates occurrence ( which unit and file ) of primary message.
       87    10918        */
       88    10919        /*E*  ERROR: VXE-E$REFOUOF_VX-0
       89    10920              MESSAGE: The reference occurs in object unit %U2; In object file %U3.
       90    10921
       91    10922              DESCRIPTION: Locates occurrence ( which unit and file ) of primary message.
       92    10923        */
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:17   
       93    10924    3                 CALL M$ERRMSG( VX_FPT_ERRMSG_AUX ) ALTRET( ERROR_SEC );

  10924  6 000131   000000 630400 3                  EPPR0   VX_FPT_ERRMSG_AUX
         6 000132   420000 713400                    CLIMB   alt,+8192
         6 000133   405000 401760                    pmme    nvectors=11
         6 000134   000234 702000 6                  TSX2    ERROR

       94    10925    3                END;

       95    10926    2            END;

       96    10927    2         IF LEVEL >= @E$F_VX THEN DO;      /* FATAL ERROR */

  10927  6 000135   200004 470500                    LDP0    @LEVEL,,AUTO
         6 000136   000000 235100                    LDA     0,,PR0
         6 000137   000004 115007                    CMPA    4,DL
         6 000140   000150 604000 6                  TMI     s:10934

       97    10928    2             IF ERR# = E$OVERFLOW_IS_VX THEN RETURN; /* Don't quit yet,

  10928  6 000141   200003 471500                    LDP1    @ERR#,,AUTO
         6 000142   100000 235100                    LDA     0,,PR1
         6 000143   002745 115007                    CMPA    1509,DL
         6 000144   000146 601000 6                  TNZ     s:10931

  10928  6 000145   000000 702200 xent               TSX2  ! X66_ARET

       98    10929                                                @E$OUT_OF_IS will bring us back here */
       99    10930                  %ERROR_IT;

  10931  6 000146   000002 713400                    CLIMB   err
         6 000147   000000 401760                    pmme    nvectors=0

      100    10933    2            END;

      101    10934    1         VX_ERR_CODE.MID = 5;              /* DEFAULT MID 'E' */

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:18   
  10934  6 000150   000005 236003                    LDQ     5,DU
         6 000151   000000 752010 xsym               STCQ    VX_ERR_CODE,'10'O

      102    10935    1         VX_FPT_ERRMSG.V.DCB# = DCBNUM(NIL);

  10935  6 000152   000000 220003                    LDX0    0,DU
         6 000153   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      103    10936    1         RETURN;

  10936  6 000154   000000 702200 xent               TSX2  ! X66_ARET

      104    10937
      105    10938    1   VXE$ERRMSG: ENTRY( ERR#, LEVEL, AUX );

  10938  6 000155   000000 700200 xent  VXE$ERRMSG   TSX0  ! X66_AUTO_4
         6 000156   000014 000004                    ZERO    12,4

      106    10939
      107    10940    2         IF ADDR(ERR#) ~= ADDR(NIL) THEN DO;

  10940  6 000157   200003 236100                    LDQ     @ERR#,,AUTO
         6 000160   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000161   000174 600000 6                  TZE     s:10945

      108    10941    2             ERR_CODE = BINBIT( ERR#, 36 );

  10941  6 000162   200003 470500                    LDP0    @ERR#,,AUTO
         6 000163   000000 236100                    LDQ     0,,PR0
         6 000164   200011 756100                    STQ     ERR_CODE,,AUTO

      109    10942    2             IF ADDR(AUX) ~= ADDR(NIL) THEN VX_FPT_ERRMSG.V.DCB# = AUX;

  10942  6 000165   200005 236100                    LDQ     @AUX,,AUTO
         6 000166   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000167   000203 600000 6                  TZE     s:10948

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:19   
  10942  6 000170   200005 471500                    LDP1    @AUX,,AUTO
         6 000171   100000 720100                    LXL0    0,,PR1
         6 000172   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      110    10943    2            END;

  10943  6 000173   000203 710000 6                  TRA     s:10948

      111    10944    2         ELSE DO;

      112    10945    2             ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  10945  6 000174   000000 470400 xsym               LDP0    B$TCB$
         6 000175   000000 471500                    LDP1    0,,PR0
         6 000176   100102 236100                    LDQ     66,,PR1
         6 000177   200011 756100                    STQ     ERR_CODE,,AUTO

      113    10946    2             VX_FPT_ERRMSG.V.DCB# = B$TCB$ -> B$TCB.ALT$ -> B$ALT.DCB#;

  10946  6 000200   000000 471500                    LDP1    0,,PR0
         6 000201   100101 720100                    LXL0    65,,PR1
         6 000202   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      114    10947    2            END;

      115    10948    1         VX_FPT_ERRMSG.V.FLAGLEV# = MAXIMUM(LEVEL, -LEVEL);

  10948  6 000203   200004 470500                    LDP0    @LEVEL,,AUTO
         6 000204   000000 336100                    LCQ     0,,PR0
         6 000205   000000 116100                    CMPQ    0,,PR0
         6 000206   000210 605000 6                  TPL     s:10948+5
         6 000207   000000 236100                    LDQ     0,,PR0
         6 000210   000011 736000                    QLS     9
         6 000211   000027 552010 xsym               STBQ    VX_FPT_ERRMSG+23,'10'O

      116    10949    1         VX_FPT_ERRMSG.CODE_ = VECTOR( ERR_CODE );

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:20   
  10949  6 000212   777640 235007                    LDA     -96,DL
         6 000213   200012 452500                    STP2    ERR_CODE+1,,AUTO
         6 000214   200012 236100                    LDQ     ERR_CODE+1,,AUTO
         6 000215   000011 036003                    ADLQ    9,DU
         6 000216   000002 757000 xsym               STAQ    VX_FPT_ERRMSG+2

      117    10950    1         CALL M$ERRMSG( VX_FPT_ERRMSG )        ALTRET ( ERROR );

  10950  6 000217   000000 630400 xsym               EPPR0   VX_FPT_ERRMSG
         6 000220   420000 713400                    CLIMB   alt,+8192
         6 000221   405000 401760                    pmme    nvectors=11
         6 000222   000234 702000 6                  TSX2    ERROR

      118    10951    1         VX_FPT_ERRMSG.CODE_ = VECTOR( VX_ERR_CODE );

  10951  6 000223   000002 237000 7                  LDAQ    2
         6 000224   000002 757000 xsym               STAQ    VX_FPT_ERRMSG+2

      119    10952    2         IF LEVEL >= @E$F_VX THEN DO;

  10952  6 000225   200004 470500                    LDP0    @LEVEL,,AUTO
         6 000226   000000 235100                    LDA     0,,PR0
         6 000227   000004 115007                    CMPA    4,DL
         6 000230   000233 604000 6                  TMI     s:10957

      120    10953                  %ERROR_IT;

  10954  6 000231   000002 713400                    CLIMB   err
         6 000232   000000 401760                    pmme    nvectors=0

      121    10956    2            END;

      122    10957    1         RETURN;

  10957  6 000233   000000 702200 xent               TSX2  ! X66_ARET

  10952  6 000234                       ERROR        null
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:21   
  10952  6 000234                       ERROR_SEC    null
      123    10958
      124    10959    1   ERROR:;
      125    10960    1   ERROR_SEC:;
      126    10961    1         CALL M$MERC              ALTRET(MERC_ERROR);

  10961  6 000234   410007 713400                    CLIMB   alt,+4103
         6 000235   000000 401760                    pmme    nvectors=0
         6 000236   000242 702000 6                  TSX2    MERC_ERROR

      127    10962    1         RETURN;

  10962  6 000237   000000 702200 xent               TSX2  ! X66_ARET

      128    10963    1   VXE$MERC:
      129    10964    1         ENTRY;

  10964  6 000240   000000 700200 xent  VXE$MERC     TSX0  ! X66_AUTO_4
         6 000241   000014 000004                    ZERO    12,4

      130    10965    1   MERC_ERROR:
      131    10966    1         CALL VXW$WRITE( SCREAM, LENGTHC(SCREAM), 1);

  10966  6 000242   000004 630400 7     MERC_ERROR   EPPR0   4
         6 000243   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000244   000000 701000 xent               TSX1    VXW$WRITE
         6 000245   000000 011000                    NOP     0

      132    10967              %ERROR_IT;

  10968  6 000246   000002 713400                    CLIMB   err
         6 000247   000000 401760                    pmme    nvectors=0

      133    10970    1   END;

  10970  6 000250   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:22   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXE$ERROR.
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:23   

 **** Variables and constants ****

  ****  Section 002 RoData VXE$ERROR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(28)    r     1 SCREAM

  ****  Section 003  Data  VXE$ERROR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG_AUX

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @AUX                       3-0-0/w PTR         r     1 @ERR#
     4-0-0/w PTR         r     1 @LEVEL                     6-0-0/w PTR         r     1 @MID
    10-0-0/w UBIN        r     1 ABS_AUX                    7-0-0/w UBIN        r     1 ABS_LEVEL
    *0-0-0/w SBIN        r     1 AUX                       *0-0-0/w UBIN        r     1 ERR#
    11-0-0/w BIT         r     1 ERR_CODE                  *0-0-0/w SBIN        r     1 LEVEL
    *0-0-0/w CHAR        r     1 MID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(1197)  r     1 VX_EBUF
     0-0-0/w STRC(720)   r     1 VX_EFIELD1                 0-0-0/w STRC        r     1 VX_ERR_CODE
     0-0-0/w STRC        r     1 VX_ERR_CODE_AUX            0-0-0/d STRC(144)   r     1 VX_ERR_RESULTS
     0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG              0-0-0/b STRC(116)   r     1 VX_OD
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:24   
     0-0-0/w STRC(1476)  r     1 VX_OK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$LO


   Procedure VXE$ERROR requires 169 words for executable code.
   Procedure VXE$ERROR requires 12 words of local(AUTO) storage.

    No errors detected in file VXE$ERROR.:E05TSI    .
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:26   
          MINI XREF LISTING

ABS_AUX
     10798**DCL     10887<<ASSIGN  10888<<ASSIGN  10890>>IF      10913>>ASSIGN
ABS_LEVEL
     10797**DCL     10879<<ASSIGN  10880<<ASSIGN  10889>>ASSIGN
AUX
     10779**DCL         8--PROC    10875--ENTRY   10886>>IF      10887>>IF      10887>>ASSIGN  10888>>ASSIGN
     10938--ENTRY   10942--IF      10942>>ASSIGN
B$ALT.CODE
     10865**DCL     10865--REDEF   10866--REDEF   10866--REDEF
B$ALT.DCB#
     10866**DCL     10946>>ASSIGN
B$ALT.ERR
     10866**DCL     10945>>ASSIGN
B$ALT.ERR.ERR#
     10867**DCL     10867--REDEF
B$ALT.EVID
     10866**DCL     10866--REDEF   10866--REDEF
B$TCB.ALT$
     10861**DCL     10945>>ASSIGN  10946>>ASSIGN
B$TCB$
      8911**DCL     10945>>ASSIGN  10946>>ASSIGN
ERR#
     10777**DCL         8--PROC    10875--ENTRY   10878>>ASSIGN  10928>>IF      10938--ENTRY   10940--IF
     10941>>ASSIGN
ERROR
     10952**LABEL   10885--CALLALT 10950--CALLALT
ERROR_SEC
     10952**LABEL   10898--CALLALT 10905--CALLALT 10924--CALLALT
ERR_CODE
     10800**DCL     10941<<ASSIGN  10945<<ASSIGN  10949--ASSIGN
LEVEL
     10778**DCL         8--PROC    10875--ENTRY   10877>>IF      10879>>IF      10879>>ASSIGN  10880>>ASSIGN
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:27   
     10927>>IF      10938--ENTRY   10948>>ASSIGN  10948>>ASSIGN  10952>>IF
M$ERR
      5085**DCL-ENT 10931--CALL    10954--CALL    10968--CALL
M$ERRMSG
      5136**DCL-ENT 10885--CALL    10898--CALL    10905--CALL    10924--CALL    10950--CALL
M$MERC
      5129**DCL-ENT 10961--CALL
MERC_ERROR
     10966**LABEL   10961--CALLALT
MID
     10780**DCL         8--PROC    10874>>ASSIGN
SCREAM
     10742**DCL     10966<>CALL    10966--CALL
VXW$WRITE
     10760**DCL-ENT 10966--CALL
VX_BIAS.A
      9576**DCL      9577--REDEF
VX_CBUF.CHARS_A
      9510**DCL      9511--REDEF
VX_CONST_DCB.ACTPOS
     10692**DCL     10692--REDEF
VX_CONST_DCB.ARS#
     10651**DCL     10651--REDEF
VX_CONST_DCB.ATTR#
     10681**DCL     10681--REDEF   10683--REDEF
VX_CONST_DCB.BORROW
     10703**DCL     10703--REDEF   10703--REDEF   10703--REDEF
VX_CONST_DCB.EOMCHAR#
     10658**DCL     10659--REDEF
VX_CONST_DCB.FLDID
     10695**DCL     10696--REDEF
VX_CONST_DCB.FORM$
     10687**DCL     10687--REDEF
VX_CONST_DCB.FSECT
     10710**DCL     10710--REDEF
VX_CONST_DCB.FSN#
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:28   
     10677**DCL     10677--REDEF   10677--REDEF   10678--REDEF
VX_CONST_DCB.HEADER$
     10686**DCL     10687--REDEF
VX_CONST_DCB.IXTNSIZE#
     10683**DCL     10684--REDEF
VX_CONST_DCB.LASTSTA$
     10667**DCL     10667--REDEF
VX_CONST_DCB.LVL
     10704**DCL     10704--REDEF
VX_CONST_DCB.NAME#.C
     10667**DCL     10668--REDEF
VX_CONST_DCB.NOEOF
     10699**DCL     10699--REDEF
VX_CONST_DCB.NRECS#
     10684**DCL     10684--REDEF
VX_CONST_DCB.NRECX
     10711**DCL     10711--REDEF
VX_CONST_DCB.OHDR
     10700**DCL     10700--REDEF
VX_CONST_DCB.ORG#
     10675**DCL     10676--REDEF
VX_CONST_DCB.PRECNO
     10708**DCL     10708--REDEF
VX_CONST_DCB.RCSZ
     10716**DCL     10716--REDEF
VX_CONST_DCB.RES#
     10669**DCL     10669--REDEF
VX_CONST_DCB.SETX
     10688**DCL     10688--REDEF
VX_CONST_DCB.TAB$
     10687**DCL     10687--REDEF
VX_CONST_DCB.TDA
     10707**DCL     10708--REDEF
VX_CONST_DCB.WSN#
     10669**DCL     10670--REDEF
VX_EBUF
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:29   
     10098**DCL     10822--DCLINIT
VX_EBUF.CHARS_A
     10099**DCL     10100--REDEF
VX_EFIELD1
     10106**DCL     10823--DCLINIT
VX_EFIELD1.CHARS
     10108**DCL     10109--REDEF   10883<<ASSIGN
VX_EFIELD1.COUNT
     10107**DCL     10881>>IF      10882<<ASSIGN
VX_EFIELD2.CHARS
     10112**DCL     10113--REDEF
VX_EFIELD3.CHARS
     10116**DCL     10117--REDEF
VX_EI_KEY_BUF.KEY
     10492**DCL     10493--REDEF
VX_ERRORS
      9553**DCL      9564--REDEF
VX_ERRORS.CONFLICT_A
      9559**DCL      9560--REDEF
VX_ERRORS.UNSAT_A
      9555**DCL      9556--REDEF
VX_ERR_CODE
     10088**DCL     10951--ASSIGN
VX_ERR_CODE.ERR#
     10091**DCL     10878<<ASSIGN
VX_ERR_CODE.MID
     10090**DCL     10874<<ASSIGN  10934<<ASSIGN
VX_ERR_CODE_AUX
     10093**DCL     10821--DCLINIT
VX_ERR_CODE_AUX.ERR#
     10096**DCL     10893<<ASSIGN  10899<<ASSIGN  10913<<ASSIGN
VX_ERR_RESULTS
     10848**DCL     10825--DCLINIT
VX_FPT_ERRMSG
      8497**DCL     10885<>CALL    10950<>CALL
VX_FPT_ERRMSG.CODE_
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:30   
      8497**DCL     10949<<ASSIGN  10951<<ASSIGN
VX_FPT_ERRMSG.V.DCB#
      8501**DCL     10935<<ASSIGN  10942<<ASSIGN  10946<<ASSIGN
VX_FPT_ERRMSG.V.FLAGLEV#
      8503**DCL     10948<<ASSIGN
VX_FPT_ERRMSG_AUX
     10821**DCL     10898<>CALL    10905<>CALL    10924<>CALL
VX_FPT_ERRMSG_AUX.V
     10825**DCL     10821--DCLINIT
VX_FPT_ERRMSG_AUX.V.FLAGLEV#
     10827**DCL     10889<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8690**DCL      8691--REDEF
VX_IMAGE_DATA.NODE_A$
      8702**DCL      8703--REDEF
VX_IMAGE_DATA.START_A$
      8694**DCL      8695--REDEF
VX_IMAGE_DATA.STOP_A$
      8698**DCL      8699--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8759**DCL      8760--REDEF
VX_IMAGE_DS3.NODE_A$
      8771**DCL      8772--REDEF
VX_IMAGE_DS3.START_A$
      8763**DCL      8764--REDEF
VX_IMAGE_DS3.STOP_A$
      8767**DCL      8768--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8782**DCL      8783--REDEF
VX_IMAGE_DS4.NODE_A$
      8794**DCL      8795--REDEF
VX_IMAGE_DS4.START_A$
      8786**DCL      8787--REDEF
VX_IMAGE_DS4.STOP_A$
      8790**DCL      8791--REDEF
VX_IMAGE_DS5.CPAGE#_A
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:31   
      8805**DCL      8806--REDEF
VX_IMAGE_DS5.NODE_A$
      8817**DCL      8818--REDEF
VX_IMAGE_DS5.START_A$
      8809**DCL      8810--REDEF
VX_IMAGE_DS5.STOP_A$
      8813**DCL      8814--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8828**DCL      8829--REDEF
VX_IMAGE_DS6.NODE_A$
      8840**DCL      8841--REDEF
VX_IMAGE_DS6.START_A$
      8832**DCL      8833--REDEF
VX_IMAGE_DS6.STOP_A$
      8836**DCL      8837--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8851**DCL      8852--REDEF
VX_IMAGE_DS7.NODE_A$
      8863**DCL      8864--REDEF
VX_IMAGE_DS7.START_A$
      8855**DCL      8856--REDEF
VX_IMAGE_DS7.STOP_A$
      8859**DCL      8860--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8874**DCL      8875--REDEF
VX_IMAGE_DS8.NODE_A$
      8886**DCL      8887--REDEF
VX_IMAGE_DS8.START_A$
      8878**DCL      8879--REDEF
VX_IMAGE_DS8.STOP_A$
      8882**DCL      8883--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8713**DCL      8714--REDEF
VX_IMAGE_PROC.NODE_A$
      8725**DCL      8726--REDEF
VX_IMAGE_PROC.START_A$
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:32   
      8717**DCL      8718--REDEF
VX_IMAGE_PROC.STOP_A$
      8721**DCL      8722--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8736**DCL      8737--REDEF
VX_IMAGE_ROS.NODE_A$
      8748**DCL      8749--REDEF
VX_IMAGE_ROS.START_A$
      8740**DCL      8741--REDEF
VX_IMAGE_ROS.STOP_A$
      8744**DCL      8745--REDEF
VX_M_VECTOR.F
      8541**DCL      8545--REDEF
VX_M_VECTOR_DP.F
      8576**DCL      8580--REDEF
VX_O.ACCTN_A$
      9705**DCL      9706--REDEF
VX_O.DCB_MATCH_A$
      9714**DCL      9715--REDEF
VX_O.DCB_MATCH_HIT_A
      9720**DCL      9721--REDEF
VX_O.FIDN_A$
      9699**DCL      9700--REDEF
VX_O.FID_A$
      9691**DCL      9692--REDEF
VX_O.INCLUDE_A$
      9711**DCL      9712--REDEF
VX_O.MAP_A
      9685**DCL      9686--REDEF
VX_O.NODCB_A
      9742**DCL      9743--REDEF
VX_O.NUM_A
      9630**DCL      9632--REDEF
VX_O.OPT_A
      9730**DCL      9731--REDEF
VX_O.PRIV_A
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:33   
      9646**DCL      9648--REDEF
VX_O.SIN_A
      9599**DCL      9600--REDEF
VX_O.TCB_A
      9726**DCL      9727--REDEF
VX_OD.ACCTN_A$
      9903**DCL      9904--REDEF
VX_OD.DCB_MATCH_A$
      9912**DCL      9913--REDEF
VX_OD.FIDN_A$
      9897**DCL      9898--REDEF
VX_OD.FID_A$
      9889**DCL      9890--REDEF
VX_OD.INCLUDE_A$
      9909**DCL      9910--REDEF
VX_OD.MAP_A
      9883**DCL      9884--REDEF
VX_OD.NODCB_A
      9927**DCL      9928--REDEF
VX_OD.NUM_A
      9830**DCL      9831--REDEF
VX_OD.PRIV_A
      9845**DCL      9846--REDEF
VX_OD.SIN.NWARN
      9828**DCL     10877>>IF
VX_OD.SIN_A
      9799**DCL      9800--REDEF
VX_OD.VECTOR_A$
      9918**DCL      9919--REDEF
VX_OK.FILE.OFNAME
      8674**DCL     10824--DCLINIT
VX_OK.FILE.OFNAME.COUNT
      8675**DCL     10890>>IF
VX_OK.OUNAME
      8670**DCL     10824--DCLINIT
VX_OK.OUNAME.COUNT
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:34   
      8671**DCL     10890>>IF
VX_OL.MAX_A
      9774**DCL      9776--REDEF
VX_OL.MIN_A
      9759**DCL      9760--REDEF
VX_ON.ACCTN_A$
     10048**DCL     10050--REDEF
VX_ON.DCB_MATCH_A$
     10059**DCL     10061--REDEF
VX_ON.FIDN_A$
     10041**DCL     10043--REDEF
VX_ON.FID_A$
     10032**DCL     10034--REDEF
VX_ON.INCLUDE_A$
     10055**DCL     10057--REDEF
VX_ON.MAP_A
     10025**DCL     10027--REDEF
VX_ON.NODCB_A$
     10075**DCL     10076--REDEF
VX_ON.NUM_A
      9970**DCL      9972--REDEF
VX_ON.PRIV_A
      9986**DCL      9988--REDEF
VX_ON.SIN_A
      9938**DCL      9940--REDEF
VX_ON.VECTOR_A$
     10066**DCL     10067--REDEF
VX_OUHEAD.VERSION
      9385**DCL      9387--REDEF
VX_OU_HEAD
      9328**DCL      9367--REDEF
VX_OU_HEAD.REC_A
      9340**DCL      9343--REDEF
VX_O_KEY_BUF.FORM0
      8589**DCL      8592--REDEF    8599--REDEF
VX_O_KEY_BUF_L.FORM0
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:35   
      8612**DCL      8615--REDEF    8622--REDEF
VX_PASS2_REF.OU.L_START
     10278**DCL     10283--REDEF
VX_PASS2_REF.OU.L_STOP
     10284**DCL     10289--REDEF
VX_PASS2_REF.OU.MAX
     10272**DCL     10277--REDEF
VX_PASS2_REF.OU.SIZE
     10290**DCL     10295--REDEF
VX_PASS2_REF.SAT.COUNT
     10317**DCL     10323--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10324**DCL     10330--REDEF
VX_PASS2_REF.SAT.L_START
     10303**DCL     10309--REDEF
VX_PASS2_REF.SAT.L_STOP
     10310**DCL     10316--REDEF
VX_PASS2_REF.SAT.MAX
     10297**DCL     10302--REDEF
VX_PASS2_REF.UNSAT.L_START
     10365**DCL     10370--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10371**DCL     10376--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10377**DCL     10382--REDEF
VX_PASS2_REF.UNSAT.MAX
     10359**DCL     10364--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10389**DCL     10394--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10383**DCL     10388--REDEF
VX_PHRASE.PHRASE
      9791**DCL      9793--REDEF
VX_PROGRAM_BIAS.A
      9569**DCL      9570--REDEF
VX_R_KEY_BUF.FORM0
PL6.E3A0      #001=VXE$ERROR File=VXE$ERROR.:E05TSI                              WED 07/30/97 08:07 Page:36   
      8638**DCL      8642--REDEF    8648--REDEF
VX_SD.A
      8266**DCL      8267--REDEF
VX_SPC.B$.MINE
     10460**DCL     10466--REDEF
VX_SPC.B$.NAME
     10439**DCL     10445--REDEF
VX_SPC.B$.SKIP
     10453**DCL     10459--REDEF
VX_SPC.B$.VALUE
     10446**DCL     10452--REDEF
VX_SPC.SEG.NAME
     10408**DCL     10414--REDEF
VX_SPC.SEG.VALUE
     10415**DCL     10421--REDEF
VX_TSX0_OVERLAY.H
     10183**DCL     10186--REDEF
