

14:53 JUL 28 '97 KS_MACRO_M.:E05SI                                         1    
    1      /*M* KS_MACRO_M - Macros for NETCON */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8                          /*F* NAME: KS$PARAM
    9                          The KS$PARAM macro is used by NETCON to generate the
   10                          tables that contain the parameter information for
   11                          the boot time parameters, the LCP-6 run time
   12                          parameters, and the parameters for each of the
   13                          standard LCP-6 handlers.
   14                          */
   15      %MACRO KS$PARAM (NAME=KS_PARAM,
   16                       TEXTNAME=NIL,
   17                       INDX(YES='1'B,NO='0'B)='0'B,
   18                       ARRAY_SZ=0,
   19                       SPECIAL(YES='1'B,NO='0'B)='0'B,
   20                       SPCL_TBL=NIL,
   21                       MAXCONSTANT(YES='1'B,NO='0'B)='1'B,
   22                       MINCONSTANT(YES='1'B,NO='0'B)='1'B,
   23                       NOMAXMIN(YES='1'B,NO='0'B)='0'B,
   24                       DISPONLY(YES='1'B,NO='0'B)='0'B,
   25                       USER(YES='1'B,NO='0'B)='1'B,
   26                       NODEADMIN(YES='1'B,NO='0'B)='1'B,
   27                       COUPLER(YES='1'B,NO='0'B)='1'B,
   28                       ASYNC(YES='1'B,NO='0'B)='1'B,
   29                       BISYNC(YES='1'B,NO='0'B)='1'B,
   30                       UNITREC(YES='1'B,NO='0'B)='1'B,
   31                       HDLCX25(YES='1'B,NO='0'B)='1'B,
   32                       MAX=65535,
   33                       MIN=0,
   34                       DEFAULT=0,
   35                       LVL=2,
   36                       STCLASS=STATIC,
   37                       LAST(YES=";",NO=",",ANY)=",");
14:53 JUL 28 '97 KS_MACRO_M.:E05SI                                         2    
   38      %LSET LISTDIR='0'B;
   39      %LSET LISTEXP='1'B;
   40      %LSET LISTCOM='0'B;
   41      %LSET LISTSUB='1'B;
   42      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
   43      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
   44      %LSET INIT=CHARTEXT('INIT');
   45      %LSET EINIT=CHARTEXT('');
   46      %ELSE;
   47      %LSET INIT=CHARTEXT('/*');
   48      %LSET EINIT=CHARTEXT('*/');
   49      %ENDIF;
   50      %IF (LVL=1);
   51      DCL 1 NAME STCLASS ALIGNED,
   52      %ELSE;
   53           %(LVL) NAME ALIGNED,
   54      %ENDIF;
   55             %(LVL+1) %CHARTEXT('TEXTNAME ') PTR %INIT(ADDR(TEXTNAME))%EINIT,
   56                          /*K* TEXTNAME - PTR.
   57                          contains a pointer to the parameter name which
   58                          will be in TEXTC format.
   59                          */
   60             %(LVL+1) FLAGS,
   61               %(LVL+2) %CHARTEXT('INDX ') BIT(1) UNAL %INIT(INDX)%EINIT,
   62               %(LVL+2) %CHARTEXT('SPECIAL ') BIT(1) UNAL %INIT(SPECIAL)%EINIT,
   63               %(LVL+2) %CHARTEXT('MAXCONSTANT ') BIT(1) UNAL %INIT(MAXCONSTANT)%EINIT,
   64               %(LVL+2) %CHARTEXT('MINCONSTANT ') BIT(1) UNAL %INIT(MINCONSTANT)%EINIT,
   65               %(LVL+2) %CHARTEXT('NOMAXMIN ') BIT(1) UNAL %INIT(NOMAXMIN)%EINIT,
   66               %(LVL+2) %CHARTEXT('DISPONLY ') BIT(1) UNAL %INIT(DISPONLY)%EINIT,
   67               %(LVL+2) * BIT(12) UNAL %INIT('0'B)%EINIT,
   68            %(LVL+1) HND,
   69               %(LVL+2) %CHARTEXT('USER ') BIT(1) UNAL %INIT(USER)%EINIT,
   70               %(LVL+2) %CHARTEXT('ASYNC_H ') BIT(1) UNAL %INIT(ASYNC)%EINIT,
   71               %(LVL+2) %CHARTEXT('BISYNC ') BIT(1) UNAL %INIT(BISYNC)%EINIT,
   72               %(LVL+2) %CHARTEXT('COUPLER ') BIT(1) UNAL %INIT(COUPLER)%EINIT,
   73               /* ASYNC_H because ASYNC is a PL-6 reserved word */
   74               %(LVL+2) %CHARTEXT('HDLCX25 ') BIT(1) UNAL %INIT(HDLCX25)%EINIT,
14:53 JUL 28 '97 KS_MACRO_M.:E05SI                                         3    
   75               %(LVL+2) %CHARTEXT('NODEADMIN ') BIT(1) UNAL %INIT(NODEADMIN)%EINIT,
   76               %(LVL+2) %CHARTEXT('UNITREC ') BIT(1) UNAL %INIT(UNITREC)%EINIT,
   77               %(LVL+2) * BIT(2) UNAL %INIT('0'B)%EINIT,
   78             %(LVL+1) %CHARTEXT('ARRAY_SZ ') UBIN(9) CALIGNED %INIT(ARRAY_SZ)%EINIT,
   79      %IF (STR='BAS') OR (STR='SYM');
   80              %(LVL+1) VALUE,
   81                %(LVL+2) %CHARTEXT('MAX ') UBIN HALF UNAL,
   82                %(LVL+2) %CHARTEXT('MIN ') UBIN HALF UNAL,
   83              %(LVL+1) SPCL_TBL$ REDEF VALUE PTR,
   84      %ELSE;
   85      %IF SPECIAL='0'B;
   86             %(LVL+1) %CHARTEXT('MAX ') UBIN HALF HALIGNED %INIT(MAX)%EINIT,
   87                          /*K* MAX - UBIN HALF
   88                          contains the maximum value that will be accepted.
   89                          */
   90             %(LVL+1) %CHARTEXT('MIN ') UBIN HALF HALIGNED %INIT(MIN)%EINIT,
   91                          /*K* MIN - UBIN HALF
   92                          contains the minimum value that will be accepted.
   93                          */
   94      %ELSE;
   95             %(LVL+1) SPCL_TBL$ PTR %INIT(ADDR(SPCL_TBL))%EINIT,
   96      %ENDIF;
   97      %ENDIF;
   98                          /*K* SPCL_TBL$ - PTR
   99                          contains the address of the table that NETCON
  100                          is to use to set this special parameter.
  101                          */
  102              %(LVL+1) %CHARTEXT('DEFAULT ') UBIN WORD %INIT(DEFAULT)%EINIT LAST
  103                          /*K* DEFAULT - UBIN WORD
  104                          contains the default value.
  105                          */
  106      %MEND;
  107
  108
  109
  110
  111
14:53 JUL 28 '97 KS_MACRO_M.:E05SI                                         4    
  112                          /*F* NAME: KS$HAND_INFO
  113
  114                          The KS$HAND_INFO macro is used to generate the KS_HAND_INFO
  115                          table.  Each entry in this table contains the following:
  116                          */
  117
  118      %MACRO KS$HAND_INFO (NAME=KS_HAND_INFO,
  119                       TEXTNAME='NAME',
  120                       TYPE=0,
  121                       PARAMS=NIL,
  122                       LVL=2,
  123                       SIZ=0,
  124                       STCLASS=STATIC,
  125                       LAST(YES=";",NO=",",ANY)=",");
  126
  127      %LSET LISTDIR='0'B;
  128      %LSET LISTEXP='1'B;
  129      %LSET LISTCOM='0'B;
  130      %LSET LISTSUB='1'B;
  131      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
  132      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
  133      %LSET INIT=CHARTEXT('INIT');
  134      %LSET EINIT=CHARTEXT('');
  135      %ELSE;
  136      %LSET INIT=CHARTEXT('/*');
  137      %LSET EINIT=CHARTEXT('*/');
  138      %ENDIF;
  139      %IF (LVL=1);
  140      DCL 1 NAME STCLASS ALIGNED,
  141      %ELSE;
  142           %(LVL) * ALIGNED,
  143      %ENDIF;
  144               %(LVL+1) TEXT CHAR(8) UNAL %INIT(TEXTNAME)%EINIT,
  145                          /*K* TEXT - CHAR(8)
  146                          contains the TEXT name of the handler.
  147                          */
  148               %(LVL+1) %CHARTEXT('TYPE ') UBIN %INIT(TYPE)%EINIT,
14:53 JUL 28 '97 KS_MACRO_M.:E05SI                                         5    
  149                          /*K* TYPE - UBIN
  150                          contains a key to indicate the type of handler.
  151                          This should be initialized using the EQUs from
  152                          KS_SUBS_C which are in the form KS_HAND_handlername.
  153                          */
  154              %(LVL+1) SZ UBIN WORD %INIT(SIZ)%EINIT,
  155                          /*K* SZ - UBIN
  156                          contains the size of the table for this handler.
  157                          initialized for kl_ in kl_control_c
  158                          */
  159               %(LVL+1) PARAMS$ PTR %INIT(ADDR(PARAMS))%EINIT LAST
  160                          /*K* PARAMS$ - PTR
  161                          contains the address of the parameter
  162                          table for this handler.
  163                          */
  164      %MEND;
  165      /*
  166      *   Makes that cute little box around titles.
  167      *   Will even eject the page if you ask nicely.
  168      */
  169
  170      %MACRO KS$BOX (TITLE = "", SPACEVALUE = 1, PAGE = NO);
  171      %LSET LISTDIR = '0'B;
  172      %LSET LISTMAC = '1'B;
  173      %LSET LISTSUB = '1'B;
  174      %LSET LISTEXP = '1'B;
  175      %LSET LISTCOM='0'B;
  176      /* !C! */
  177      %LSET LISTCOM='1'B;
  178      %IF TEXTCHAR (PAGE) = 'YES';
  179      %EJECT;

14:53 JUL 28 '97 KS_MACRO_M.:E05SI                                         6    
  180      %ELSE;
  181      %SPACE %SPACEVALUE;
  182      %ENDIF;
  183      %LSET BLANKS = '                                                                ';
  184      %LSET LEN = LENGTHC (TEXTCHAR(TITLE));
  185      %LSET SEG1 = CONCAT (' *', SUBSTR(BLANKS, 0, (76 - LEN) / 2));
  186      %LSET SEG2 = CONCAT (SEG1, TEXTCHAR(TITLE));
  187      %LSET SEG3 = CHARTEXT(CONCAT(SEG2, SUBSTR(BLANKS, 0, 74 - LENGTHC(SEG2)), ' *'));
  188      %CHARTEXT('/*')**************************************************************************
  189       *                                                                         *
  190      %SEG3
  191       *                                                                         *
  192       **************************************************************************%CHARTEXT('*/')
  193      %LSET LISTCOM='0'B;
  194      /* ! ! */
  195      %SPACE %SPACEVALUE;
  196      %MEND;

