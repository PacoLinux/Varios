VERSION E05

PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:1    
        1        1        /*M* QCI$IO_WRITE:  Monitor CALLs for screen WRITE/DISPLAY.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P*  NAME:         QCI$IO_WRITE
       10       10              PURPOSE:      Execute monitor calls to write fields.
       11       11              DESCRIPTION:  M$WRITE is used to perform
       12       12                            output through fields which have already been M$DCLFLDed
       13       13                            (i.e., which are in an ACTIVATEd frame).
       14       14        */
       15       15
       16       16        QCI$IO_WRITE: PROC ( QCI@IO_WRITE );
       17       17
       18       18        /*D*  NAME:         QCI$IO_WRITE
       19       19              CALL:         CALL QCI$IO_WRITE ( QCI@IO_WRITE );
       20       20              PARAMETERS:   QCI@IO_WRITE is a structure which contains information
       21       21                            concerning the write to be performed; it's generated
       22       22                            by invoking the QCI@IO_WRITE %MACRO within the QCI_IO_WRITE_M
       23       23                            %INCLUDE file (see commentary within that file).
       24       24              INTERFACE:    Called by routines wishing to perform non-message-line
       25       25                            output:  QBD$DISPLAY, QBW$WRITE_FORM.
       26       26              ENVIRONMENT:  Nothing unusual.
       27       27              INPUT:        QI_1, etc.
       28       28              OUTPUT:       QI_1, etc.
       29       29              SCRATCH:      Various otter stuff.
       30       30              DESCRIPTION:  The calling routine (DISPLAY or WRITE_FORM) sets up the
       31       31                            starting and stopping indices for both frames within the
       32       32                            form to be written, and fields within those frames to be
       33       33                            written.  Each of those fields is then tested for:
       34       34                            1)  proper I-O type (OUTPUT or I-O);
       35       35                            2)  ENABLEd for OUTPUT or I-O;
       36       36                            3)  PRESENTed.
       37       37                            Those fields which pass both tests are then written.
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:2    
       38       38        */
       39       39
       40       40          %INCLUDE B_ERRORS_C;
       41     1167          %INCLUDE LCP_6;
       42     1358          %FPT_WRITE ( FPTN = FPT@WRITE,
       43     1359                       STCLASS = AUTO );
       44     1383
       45     1384          %INCLUDE QG_MACRO_M;
       46     1521          %QGB_ENTRIES;
       47     1534          %INCLUDE QI_EQUATES_E;
       48     1893          %INCLUDE QI_PERR_C;
       49     2061          %INCLUDE QI_MACROS_M;
       50     7119          %QI$ALL;
       51    18232          %QI_FPTS;
       52    20277
       53    20278    1     DCL FIELD_FIRST_INDEX UBIN;
       54    20279    1     DCL FIELD_INDEX UBIN;
       55    20280    1     DCL FIELD_LAST_INDEX UBIN;
       56    20281    1     DCL GZ_FIELD$ PTR;
       57    20282    1     DCL GZ_HEADER$ PTR;
       58    20283
       59    20284    1     DCL QCE$ERROR_INTERNAL ENTRY (4);
       60    20285    1     DCL QCU$USE_INVALID_IO ENTRY (1);
       61    20286
       62    20287          %SET LISTMAC = '1'B;
       63    20288
       64    20289          %INCLUDE QCI_IO_WRITE_M;
       65    20324          %QCI@IO_WRITE;
             20325            %BEGIN_MACRO ( STCLASS = STCLASS );
             20326            %SET LISTDIR = '0'B;
             20339    1     DCL 1 QCI@IO_WRITE ALIGNED,
             20340    1           2 FRAME_START_INDEX UBIN,
             20341                          /* Starting index into QI$FORM_FILE.FRAME_LIST_A@P.  */
             20342    1           2 FRAME_STOP_INDEX UBIN,
             20343                          /* Stopping index into QI$FORM_FILE.FRAME_LIST_A@P.  */
             20344    1           2 IS_FIELD_INDEXES_VALID BIT(1) ALIGNED,
             20345                          /* If IS_FIELD_INDEXES_VALID, use them;
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:3    
             20346                             else use all the fields in the frame.  */
             20347    1           2 FIELD_START_INDEX UBIN,
             20348                          /* Starting index into QI$GZ_FIELD table.  */
             20349    1           2 FIELD_STOP_INDEX UBIN,
             20350                          /* Stopping index into QI$GZ_FIELD table.  */
             20351    1           2 STATUS UBIN,
             20352                          /* Returned status code:  0 -> Immediate return to level 0;
             20353                                                   >0 -> Status is ok.  */
             20354    1           2 FIELD_ERROR_STOP_INDEX UBIN;
             20355                          /* Passed index for QCG$GET_FIELD processing.  */
             20362            %ENDIF;
       66    20365
       67    20366          %INCLUDE QCU_USE_M;
       68    20420          %QCU@USE;
             20421            %BEGIN_MACRO;
             20422            %SET LISTDIR = '0'B;
             20435    1     DCL 1 QCU@USE AUTO ALIGNED,
             20436    1           2 CURR_FRAME$ PTR,
             20437                          /* Pointer to DAD of current frame or ADDR (NIL).  */
             20438    1           2 CURR_NODE$ PTR,
             20439                          /* Pointer to current node or ADDR (NIL).  */
             20440    1           2 USE_DEFAULT_IO UBIN,
             20441                          /* For USE procedures which default applies
             20442                             (see corresponding EQUs).  */
             20443    1           2 IS_TIME_TO_SAVE_AWAY_FIELDS BIT(1) ALIGNED,
             20444                          /* If IS_TIME_TO_SAVE_AWAY_FIELDS, then
             20445                             save the fields within the bounds of
             20446                             FRAME_START_INDEX, FRAME_STOP_INDEX,
             20447                             FIELD_START_INDEX, and FIELD_STOP_INDEX
             20448                             before calling the USE procedure.  */
             20449    1           2 FRAME_START_INDEX UBIN,
             20450                          /* Foist frame of the CURRENT.FORM$
             20451                             involved with the I-O error.  */
             20452    1           2 FRAME_STOP_INDEX UBIN,
             20453                          /* Larst frame of the CURRENT.FORM$
             20454                             involved with the I-O error.  */
             20455    1           2 IS_FIELD_INDEXES_VALID BIT(1) ALIGNED,
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:4    
             20456                          /* If IS_FIELD_INDEXES_VALID, use them;
             20457                             else use all the fields in the frame.  */
             20458    1           2 FIELD_START_INDEX UBIN,
             20459                          /* Starting index into QI$GZ_FIELD
             20460                             which may have values "pushed".  */
             20461    1           2 FIELD_STOP_INDEX UBIN,
             20462                          /* Stopping index into QI$GZ_FIELD
             20463                             which may have values "pushed".  */
             20464    1           2 IS_CURSOR_POSITION_VALID BIT(1) ALIGNED,
             20465                          /* If IS_CURSOR_POSITION_VALID, use it;
             20466                             else allow cursor to default to upper-left-most field.  */
             20467    1           2 CURSOR_POSITION BIT(16) ALIGNED,
             20468                          /* POSition of the field on which to place the cursor.  */
             20469    1           2 STATUS UBIN;
             20470                          /* Returned action code; see corresponding EQUs.  */
             20477            %ENDIF;
       69    20480
       70    20481          %SET LISTMAC = '0'B;
       71    20482        %EJECT;
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:5    
       72    20483        /*
       73    20484              Anyone calling this routine should have their act together
       74    20485              as far as open forms are concerned.  A closed form at this
       75    20486              point is therefore considered an internal error.
       76    20487        */
       77    20488            %IF QI#DEBUG;
       78    20489
       79    20490    1       IF QI_1.CURRENT.FORM$ = ADDR (NIL)
       80    20491    1         OR QI_1.CURRENT.FORM_STATUS$ = ADDR (NIL)
       81    20492    1       THEN
       82    20493    1         CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_INTERPRETER_ERROR );
       83    20494
       84    20495    1       IF NOT QI_1.CURRENT.FORM_STATUS$ -> QI$FORM_STATUS.INDICATORS.OPEN_FLAGS.
             20495                IS_OUTPUT
       85    20496    1       THEN
       86    20497    1         CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_INTERPRETER_ERROR );
       87    20498
       88    20499            %ENDIF;
       89    20500
       90    20501    1   RETRY_GZ_CALL:
       91    20502    1       FIELD_FIRST_INDEX = %BITBIN('7FFF'X);
       92    20503    1       FIELD_LAST_INDEX = 0;
       93    20504
       94    20505    1       GZ_HEADER$ = QI_1.CURRENT.FRAME_STATUS$ -> QI$FRAME_STATUS.GZ.HEADER$;
       95    20506    1       GZ_FIELD$ = PINCRW ( QI_1.CURRENT.FRAME_STATUS$ -> QI$FRAME_STATUS.GZ.START$,
       96    20507    1         QCI@IO_WRITE.FIELD_START_INDEX * SIZEW (QI$GZ_FIELD) );
       97    20508
       98    20509    1       FPT@WRITE = QI_FPT_WRITE;
       99    20510    1       VBASE ( FPT@WRITE.V_ ) = ADDR ( FPT@WRITE.V );
      100    20511    1       FPT@WRITE.V.DCB# = GZ_HEADER$ -> QI$GZ_HEADER.DCB#;
      101    20512
      102    20513    1   WRITE_THE_PROPER_FIELDS:
      103    20514    1       DO FIELD_INDEX =
      104    20515    2         QCI@IO_WRITE.FIELD_START_INDEX TO QCI@IO_WRITE.FIELD_STOP_INDEX;
      105    20516
      106    20517    2   RETRY_FIELD_WRITE:
      107    20518    2         IF GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.IO_FLAGS.IS_OUTPUT
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:6    
      108    20519    2         THEN
      109    20520    2   FIELD_IS_PROPER_IO_TYPE:
      110    20521    3           DO;
      111    20522
      112    20523    3             IF GZ_FIELD$ -> QI$GZ_FIELD.INDICATORS$ -> QI$INDICATORS.ENABLED_FLAGS.
             20523                      IS_OUTPUT
      113    20524    3               AND GZ_FIELD$ -> QI$GZ_FIELD.INDICATORS$ -> QI$INDICATORS.STATE_FLAGS.
             20524                        IS_PRESENTED
      114    20525    3             THEN
      115    20526    3   FIELD_IS_ENABLED_AND_PRESENTED:
      116    20527    4               DO;
      117    20528                      /*  Don't bother WRITEing OUTPUT CONSTANT fields if they're
      118    20529                          already WRITtEn.
      119    20530                          See also CLEAR optimization in QBC$CLEAR.  */
      120    20531    4                 IF GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.IS_OUTPUT_CONSTANT
      121    20532    4                   AND GZ_FIELD$ -> QI$GZ_FIELD.STATUS.LENGTH > 0
      122    20533    4                 THEN
      123    20534    4                   EXIT FIELD_IS_ENABLED_AND_PRESENTED;
      124    20535
      125    20536    4                 FPT@WRITE.KEY_ = VECTOR ( GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.
             20536                          POSITION );
      126    20537    4                 VBASE ( FPT@WRITE.BUF_ ) = PINCRC ( GZ_FIELD$ -> QI$GZ_FIELD.STATUS.
             20537                          DATA$,
      127    20538    4                   GZ_FIELD$ -> QI$GZ_FIELD.STATUS.OFFSET );
      128    20539    4                 VBOUND ( FPT@WRITE.BUF_ ) = GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.
             20539                          LENGTH - 1;
      129    20540
      130    20541    4                 CALL QGB$WRITE ( FPT@WRITE, QGB_PARAM )
      131    20542    4                 WHENALTRETURN
      132    20543    5                   DO;
      133    20544                        /*  Something's wrong.
      134    20545                            Since INVALID clauses are not allowed on WRITEs, QCU$USE
      135    20546                            will just call QCE$ERROR to blow this program away, who
      136    20547                            will include the monitor errcode in the abort display.  */
      137    20548    5                     QI_1.ERROR_STATUS = %E$FORM_WRITE_ERROR;
      138    20549
      139    20550    5                     QCU@USE.CURR_NODE$ = GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:7    
             20550                              FIELD_DAD$;
      140    20551    5                     QCU@USE.CURR_FRAME$ = ADDR (NIL);
      141    20552    5                     QCU@USE.IS_TIME_TO_SAVE_AWAY_FIELDS = %YES;
      142    20553    5                     QCU@USE.FRAME_START_INDEX = QCI@IO_WRITE.FRAME_START_INDEX;
      143    20554    5                     QCU@USE.FRAME_STOP_INDEX = QCI@IO_WRITE.FRAME_STOP_INDEX;
      144    20555    5                     QCU@USE.IS_FIELD_INDEXES_VALID = %YES;
      145    20556    5                     QCU@USE.FIELD_START_INDEX = QCI@IO_WRITE.FIELD_START_INDEX;
      146    20557    5                     QCU@USE.FIELD_STOP_INDEX = QCI@IO_WRITE.FIELD_STOP_INDEX;
      147    20558    5                     QCU@USE.USE_DEFAULT_IO = %QI#USE_DEFAULT_INPUT;
      148    20559
      149    20560    5                     CALL QCU$USE_INVALID_IO ( QCU@USE );
      150    20561
      151    20562    6                     DO CASE ( QCU@USE.STATUS );
      152    20563
      153    20564    6                       CASE ( %QI#USE_INVALID_RETURN );
      154    20565    6                         QCI@IO_WRITE.STATUS = %QI#USE_INVALID_RETURN;
      155    20566    6                         RETURN;
      156    20567
      157    20568    6                       CASE ( %QI#USE_INVALID_RETRY );
      158    20569        /*
      159    20570              You're asking:  "Well, let's say the USE PROCEDURE stuff does
      160    20571              eventually work.  How do we retry a (possibly multiple) field
      161    20572              write after an IO error?".  I dunno.  Perhaps the field in error,
      162    20573              and all subsequent fields, should now be written.
      163    20574        */
      164    20575    6                         GOTO RETRY_FIELD_WRITE;
      165    20576
      166    20577    6                       CASE ( %QI#USE_INVALID_SKIP_TO_NEXT );
      167    20578        /*
      168    20579              You're asking:  "Well, let's say the USE PROCEDURE stuff does
      169    20580              eventually work.  How do we skip a field on a (possibly multiple) field
      170    20581              write after an IO error?".  I dunno.  Perhaps all subsequent fields,
      171    20582              after the field in error, should be written.
      172    20583        */
      173    20584    6                         GOTO NEXT_FIELD_PLEASE;
      174    20585    6                     END;
      175    20586
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:8    
      176    20587    5                   END;
      177    20588
      178    20589    4                 GZ_FIELD$ -> QI$GZ_FIELD.STATUS.LENGTH = GZ_FIELD$ -> QI$GZ_FIELD.
             20589                          DESCRIPTION.LENGTH;
      179    20590
      180    20591    4                 IF NOT GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.IS_OUTPUT_CONSTANT
      181    20592    4                 THEN
      182    20593    4                   GZ_FIELD$ -> QI$GZ_FIELD.INDICATORS$ -> QI$INDICATORS.STATE_VALUE =
             20593                            %QI#STATE_NULL;
      183    20594
      184    20595    4                 GZ_FIELD$ -> QI$GZ_FIELD.STATUS.WAS_IO_EVER_DONE = %YES;
      185    20596
      186    20597    4                 QI_1.SCREEN_UPDATE_FLAGS.WAS_WRITTEN = %YES;
      187    20598
      188    20599    4               END FIELD_IS_ENABLED_AND_PRESENTED;
      189    20600
      190    20601    3           END FIELD_IS_PROPER_IO_TYPE;
      191    20602
      192    20603    2   NEXT_FIELD_PLEASE:
      193    20604    2         GZ_FIELD$ = PINCRW ( GZ_FIELD$, SIZEW (QI$GZ_FIELD) );
      194    20605
      195    20606    2       END WRITE_THE_PROPER_FIELDS;
      196    20607
      197    20608    1       QCI@IO_WRITE.STATUS = %QI#USE_INVALID_OK;
      198    20609
      199    20610    1       RETURN;
      200    20611
      201    20612    1   END QCI$IO_WRITE;

PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:9    
--  Include file information  --

   QCU_USE_M.:E05TOU  is referenced.
   QCI_IO_WRITE_M.:E05TOU  is referenced.
   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QCI$IO_WRITE.

   Procedure QCI$IO_WRITE requires 308 words for executable code.
   Procedure QCI$IO_WRITE requires 50 words of local(AUTO) storage.

    No errors detected in file QCI$IO_WRITE.:E05TSI    .

PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:10   

 Object Unit name= QCI$IO_WRITE                               File name= QCI$IO_WRITE.:E05TOU
 UTS= JUL 30 '97 05:10:53.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   308    134  QCI$IO_WRITE
    1  RoData even  none     5      5  QCI$IO_WRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  QCI$IO_WRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 QCE$ERROR_INTERNAL
 yes     yes           Std       2 QGB$WRITE
         yes           Std       1 QCU$USE_INVALID_IO
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6D_MID
                       nStd      0 X6A_ARET
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     QI_1                                  QGB_PARAM                             QI_4_CHAR_ALPHANUMERIC
     QI_31_DIGIT_SLS_DISPLAY               QI_16_BIT_BINARY                      QI_32_BIT_BINARY
     QI_31_DIGIT_ST_PACKED                 QI_PICTURE_STRING                     QI_FPT_WRITE
r    G$ROS$
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:12   


        1        1        /*M* QCI$IO_WRITE:  Monitor CALLs for screen WRITE/DISPLAY.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P*  NAME:         QCI$IO_WRITE
       10       10              PURPOSE:      Execute monitor calls to write fields.
       11       11              DESCRIPTION:  M$WRITE is used to perform
       12       12                            output through fields which have already been M$DCLFLDed
       13       13                            (i.e., which are in an ACTIVATEd frame).
       14       14        */
       15       15
       16       16        QCI$IO_WRITE: PROC ( QCI@IO_WRITE );

     16   0 000000  D380 0000 0000  xent QCI$IO_WRITE    LNJ,B5   X6A_AUTO_1
          0 000003       0032 0001                       DC       50,1

       17       17
       18       18        /*D*  NAME:         QCI$IO_WRITE
       19       19              CALL:         CALL QCI$IO_WRITE ( QCI@IO_WRITE );
       20       20              PARAMETERS:   QCI@IO_WRITE is a structure which contains information
       21       21                            concerning the write to be performed; it's generated
       22       22                            by invoking the QCI@IO_WRITE %MACRO within the QCI_IO_WRITE_M
       23       23                            %INCLUDE file (see commentary within that file).
       24       24              INTERFACE:    Called by routines wishing to perform non-message-line
       25       25                            output:  QBD$DISPLAY, QBW$WRITE_FORM.
       26       26              ENVIRONMENT:  Nothing unusual.
       27       27              INPUT:        QI_1, etc.
       28       28              OUTPUT:       QI_1, etc.
       29       29              SCRATCH:      Various otter stuff.
       30       30              DESCRIPTION:  The calling routine (DISPLAY or WRITE_FORM) sets up the
       31       31                            starting and stopping indices for both frames within the
       32       32                            form to be written, and fields within those frames to be
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:13   
       33       33                            written.  Each of those fields is then tested for:
       34       34                            1)  proper I-O type (OUTPUT or I-O);
       35       35                            2)  ENABLEd for OUTPUT or I-O;
       36       36                            3)  PRESENTed.
       37       37                            Those fields which pass both tests are then written.
       38       38        */
       39       39
       40       40          %INCLUDE B_ERRORS_C;
       41     1167          %INCLUDE LCP_6;
       42     1358          %FPT_WRITE ( FPTN = FPT@WRITE,
       43     1359                       STCLASS = AUTO );
       44     1383
       45     1384          %INCLUDE QG_MACRO_M;
       46     1521          %QGB_ENTRIES;
       47     1534          %INCLUDE QI_EQUATES_E;
       48     1893          %INCLUDE QI_PERR_C;
       49     2061          %INCLUDE QI_MACROS_M;
       50     7119          %QI$ALL;
       51    18232          %QI_FPTS;
       52    20277
       53    20278    1     DCL FIELD_FIRST_INDEX UBIN;
       54    20279    1     DCL FIELD_INDEX UBIN;
       55    20280    1     DCL FIELD_LAST_INDEX UBIN;
       56    20281    1     DCL GZ_FIELD$ PTR;
       57    20282    1     DCL GZ_HEADER$ PTR;
       58    20283
       59    20284    1     DCL QCE$ERROR_INTERNAL ENTRY (4);
       60    20285    1     DCL QCU$USE_INVALID_IO ENTRY (1);
       61    20286
       62    20287          %SET LISTMAC = '1'B;
       63    20288
       64    20289          %INCLUDE QCI_IO_WRITE_M;
       65    20324          %QCI@IO_WRITE;
             20325            %BEGIN_MACRO ( STCLASS = STCLASS );
             20326            %SET LISTDIR = '0'B;
             20339    1     DCL 1 QCI@IO_WRITE ALIGNED,
             20340    1           2 FRAME_START_INDEX UBIN,
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:14   
             20341                          /* Starting index into QI$FORM_FILE.FRAME_LIST_A@P.  */
             20342    1           2 FRAME_STOP_INDEX UBIN,
             20343                          /* Stopping index into QI$FORM_FILE.FRAME_LIST_A@P.  */
             20344    1           2 IS_FIELD_INDEXES_VALID BIT(1) ALIGNED,
             20345                          /* If IS_FIELD_INDEXES_VALID, use them;
             20346                             else use all the fields in the frame.  */
             20347    1           2 FIELD_START_INDEX UBIN,
             20348                          /* Starting index into QI$GZ_FIELD table.  */
             20349    1           2 FIELD_STOP_INDEX UBIN,
             20350                          /* Stopping index into QI$GZ_FIELD table.  */
             20351    1           2 STATUS UBIN,
             20352                          /* Returned status code:  0 -> Immediate return to level 0;
             20353                                                   >0 -> Status is ok.  */
             20354    1           2 FIELD_ERROR_STOP_INDEX UBIN;
             20355                          /* Passed index for QCG$GET_FIELD processing.  */
             20362            %ENDIF;
       66    20365
       67    20366          %INCLUDE QCU_USE_M;
       68    20420          %QCU@USE;
             20421            %BEGIN_MACRO;
             20422            %SET LISTDIR = '0'B;
             20435    1     DCL 1 QCU@USE AUTO ALIGNED,
             20436    1           2 CURR_FRAME$ PTR,
             20437                          /* Pointer to DAD of current frame or ADDR (NIL).  */
             20438    1           2 CURR_NODE$ PTR,
             20439                          /* Pointer to current node or ADDR (NIL).  */
             20440    1           2 USE_DEFAULT_IO UBIN,
             20441                          /* For USE procedures which default applies
             20442                             (see corresponding EQUs).  */
             20443    1           2 IS_TIME_TO_SAVE_AWAY_FIELDS BIT(1) ALIGNED,
             20444                          /* If IS_TIME_TO_SAVE_AWAY_FIELDS, then
             20445                             save the fields within the bounds of
             20446                             FRAME_START_INDEX, FRAME_STOP_INDEX,
             20447                             FIELD_START_INDEX, and FIELD_STOP_INDEX
             20448                             before calling the USE procedure.  */
             20449    1           2 FRAME_START_INDEX UBIN,
             20450                          /* Foist frame of the CURRENT.FORM$
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:15   
             20451                             involved with the I-O error.  */
             20452    1           2 FRAME_STOP_INDEX UBIN,
             20453                          /* Larst frame of the CURRENT.FORM$
             20454                             involved with the I-O error.  */
             20455    1           2 IS_FIELD_INDEXES_VALID BIT(1) ALIGNED,
             20456                          /* If IS_FIELD_INDEXES_VALID, use them;
             20457                             else use all the fields in the frame.  */
             20458    1           2 FIELD_START_INDEX UBIN,
             20459                          /* Starting index into QI$GZ_FIELD
             20460                             which may have values "pushed".  */
             20461    1           2 FIELD_STOP_INDEX UBIN,
             20462                          /* Stopping index into QI$GZ_FIELD
             20463                             which may have values "pushed".  */
             20464    1           2 IS_CURSOR_POSITION_VALID BIT(1) ALIGNED,
             20465                          /* If IS_CURSOR_POSITION_VALID, use it;
             20466                             else allow cursor to default to upper-left-most field.  */
             20467    1           2 CURSOR_POSITION BIT(16) ALIGNED,
             20468                          /* POSition of the field on which to place the cursor.  */
             20469    1           2 STATUS UBIN;
             20470                          /* Returned action code; see corresponding EQUs.  */
             20477            %ENDIF;
       69    20480
       70    20481          %SET LISTMAC = '0'B;
       71    20482        %EJECT;
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:16   
       72    20483        /*
       73    20484              Anyone calling this routine should have their act together
       74    20485              as far as open forms are concerned.  A closed form at this
       75    20486              point is therefore considered an internal error.
       76    20487        */
       77    20488            %IF QI#DEBUG;
       78    20489
       79    20490    1       IF QI_1.CURRENT.FORM$ = ADDR (NIL)

  20490   0 000005  8D80 0000 0076  xsym                 CMN      QI_1+118
          0 000008  0901 0006                            BE       s:20493,PREL
          0 00000A  8D80 0000 0078  xsym                 CMN      QI_1+120
          0 00000D  0981 000A                            BNE      s:20495,PREL

       80    20491    1         OR QI_1.CURRENT.FORM_STATUS$ = ADDR (NIL)
       81    20492    1       THEN
       82    20493    1         CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_INTERPRETER_ERROR );

  20493   0 00000F  BB80 0000 0001  01                   LAB,B3   +1
          0 000012  CBF0 0100                            LAB,B4   256,IMO
          0 000014  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_INTERNAL
          0 000017       0001                            DC       s:20495,PREL

       83    20494
       84    20495    1       IF NOT QI_1.CURRENT.FORM_STATUS$ -> QI$FORM_STATUS.INDICATORS.OPEN_FLAGS.
             20495                IS_OUTPUT

  20495   0 000018  EC80 0000 0078  xsym                 LDB,B6   QI_1+120
          0 00001B  82C6 0008                            LB,'0400'X        8,B6
          0 00001D       0400
          0 00001E  0501 000A                            BBT      s:20502,PREL

       85    20496    1       THEN
       86    20497    1         CALL QCE$ERROR_INTERNAL ( %E$INTERNAL_INTERPRETER_ERROR );

  20497   0 000020  BB80 0000 0001  01                   LAB,B3   +1
          0 000023  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:17   
          0 000025  E380 0000 0000  xent                 LNJ,B6   QCE$ERROR_INTERNAL
          0 000028       0001                            DC       s:20502,PREL

       87    20498
       88    20499            %ENDIF;
       89    20500
       90    20501    1   RETRY_GZ_CALL:
       91    20502    1       FIELD_FIRST_INDEX = %BITBIN('7FFF'X);

  20502   0 000029  E870 7FFF            RETRY_GZ_CALL   LDR,R6   32767,IMO
          0 00002B  EF47 0018                            STR,R6   FIELD_FIRST_INDEX,AUTO

       92    20503    1       FIELD_LAST_INDEX = 0;

  20503   0 00002D  8747 001A                            CL       FIELD_LAST_INDEX,AUTO

       93    20504
       94    20505    1       GZ_HEADER$ = QI_1.CURRENT.FRAME_STATUS$ -> QI$FRAME_STATUS.GZ.HEADER$;

  20505   0 00002F  EC80 0000 007C  xsym                 LDB,B6   QI_1+124
          0 000032  DCC6 0004                            LDB,B5   4,B6
          0 000034  DFC7 001D                            STB,B5   GZ_HEADER$,AUTO

       95    20506    1       GZ_FIELD$ = PINCRW ( QI_1.CURRENT.FRAME_STATUS$ -> QI$FRAME_STATUS.GZ.START$,

  20506   0 000036  CCC7 0004                            LDB,B4   @QCI@IO_WRITE,AUTO
          0 000038  B844 0003                            LDR,R3   3,B4
          0 00003A  BCC6 0006                            LDB,B3   6,B6
          0 00003C  BFC7 002E                            STB,B3   QCU@USE+15,AUTO
          0 00003E  F853                                 LDR,R7   R3
          0 00003F  6C00                                 LDV,R6   0
          0 000040  9B80 0000 0003  01                   LAB,B1   +3
          0 000043  D380 0000 0000  xent                 LNJ,B5   X6D_MID
          0 000046  8447 002E                            AID      QCU@USE+15,AUTO
          0 000048  8D47 001B                            SDI      GZ_FIELD$,AUTO

       96    20507    1         QCI@IO_WRITE.FIELD_START_INDEX * SIZEW (QI$GZ_FIELD) );
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:18   
       97    20508
       98    20509    1       FPT@WRITE = QI_FPT_WRITE;

  20509   0 00004A  AB80 0000 0000  xsym                 LAB,B2   QI_FPT_WRITE
          0 00004D  2C00                                 LDV,R2   0
          0 00004E  6C24                                 LDV,R6   36
          0 00004F  BB87                                 LAB,B3   ,AUTO
          0 000050  3C0C                                 LDV,R3   12
          0 000051  0008                                 MMM

       99    20510    1       VBASE ( FPT@WRITE.V_ ) = ADDR ( FPT@WRITE.V );

  20510   0 000052  EBC7 0015                            LAB,B6   FPT@WRITE+15,AUTO
          0 000054  EFC7 0007                            STB,B6   FPT@WRITE+1,AUTO

      100    20511    1       FPT@WRITE.V.DCB# = GZ_HEADER$ -> QI$GZ_HEADER.DCB#;

  20511   0 000056  DCC7 001D                            LDB,B5   GZ_HEADER$,AUTO
          0 000058  E845 0003                            LDR,R6   3,B5
          0 00005A  E7C7 0015                            STH,R6   FPT@WRITE+15,AUTO

      101    20512
      102    20513    1   WRITE_THE_PROPER_FIELDS:
      103    20514    1       DO FIELD_INDEX =
      104    20515    2         QCI@IO_WRITE.FIELD_START_INDEX TO QCI@IO_WRITE.FIELD_STOP_INDEX;

  20515   0 00005C  CCC7 0004            WRITE_THE_PROPE*LDB,B4   @QCI@IO_WRITE,AUTO
          0 00005E  E844 0003                            LDR,R6   3,B4
          0 000060  EF47 0019                            STR,R6   FIELD_INDEX,AUTO
          0 000062  0F81 00C3                            B        s:20606+2,PREL

      105    20516
      106    20517    2   RETRY_FIELD_WRITE:
      107    20518    2         IF GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.IO_FLAGS.IS_OUTPUT

  20518   0 000064  ECC7 001B            RETRY_FIELD_WRI*LDB,B6   GZ_FIELD$,AUTO
          0 000066  89C6 0002                            CMZ      2,B6
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:19   
          0 000068  0881 00B5                            BAGE     s:20601,PREL

      108    20519    2         THEN
      109    20520    2   FIELD_IS_PROPER_IO_TYPE:
      110    20521    3           DO;

  20521   0                              FIELD_IS_PROPER*null
      111    20522
      112    20523    3             IF GZ_FIELD$ -> QI$GZ_FIELD.INDICATORS$ -> QI$INDICATORS.ENABLED_FLAGS.
             20523                      IS_OUTPUT

  20523   0 00006A  DC86                 FIELD_IS_PROPER*LDB,B5   ,B6
          0 00006B  8285                                 LB,'4000'X        ,B5
          0 00006C       4000
          0 00006D  0581 00B0                            BBF      s:20601,PREL
          0 00006F  8285                                 LB,'0800'X        ,B5
          0 000070       0800
          0 000071  0581 00AC                            BBF      s:20601,PREL

      113    20524    3               AND GZ_FIELD$ -> QI$GZ_FIELD.INDICATORS$ -> QI$INDICATORS.STATE_FLAGS.
             20524                        IS_PRESENTED
      114    20525    3             THEN
      115    20526    3   FIELD_IS_ENABLED_AND_PRESENTED:
      116    20527    4               DO;

  20527   0                              FIELD_IS_ENABLE*null
      117    20528                      /*  Don't bother WRITEing OUTPUT CONSTANT fields if they're
      118    20529                          already WRITtEn.
      119    20530                          See also CLEAR optimization in QBC$CLEAR.  */
      120    20531    4                 IF GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.IS_OUTPUT_CONSTANT

  20531   0 000073  82C6 0002            FIELD_IS_ENABLE*LB,'1000'X        2,B6
  20531   0 000075       1000
          0 000076  0581 0006                            BBF      s:20536,PREL
          0 000078  82C6 0006                            LB,'00FF'X        6,B6
          0 00007A       00FF
          0 00007B  0501 00A2                            BBT      s:20601,PREL
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:20   

      121    20532    4                   AND GZ_FIELD$ -> QI$GZ_FIELD.STATUS.LENGTH > 0
      122    20533    4                 THEN
      123    20534    4                   EXIT FIELD_IS_ENABLED_AND_PRESENTED;
      124    20535
      125    20536    4                 FPT@WRITE.KEY_ = VECTOR ( GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.
             20536                          POSITION );

  20536   0 00007D  CBC6 0003                            LAB,B4   3,B6
          0 00007F  CFC7 002F                            STB,B4   QCU@USE+16,AUTO
          0 000081  6C01                                 LDV,R6   1
          0 000082  EF47 002E                            STR,R6   QCU@USE+15,AUTO
          0 000084  ABC7 002E                            LAB,B2   QCU@USE+15,AUTO
          0 000086  2C00                                 LDV,R2   0
          0 000087  6C06                                 LDV,R6   6
          0 000088  BB87                                 LAB,B3   ,AUTO
          0 000089  3C12                                 LDV,R3   18
          0 00008A  0008                                 MMM

      126    20537    4                 VBASE ( FPT@WRITE.BUF_ ) = PINCRC ( GZ_FIELD$ -> QI$GZ_FIELD.STATUS.
             20537                          DATA$,

  20537   0 00008B  ECC7 001B                            LDB,B6   GZ_FIELD$,AUTO
          0 00008D  B846 0006                            LDR,R3   6,B6
          0 00008F  304F                                 SOR,R3   15
          0 000090  DCC6 0009                            LDB,B5   9,B6
          0 000092  DFC7 002E                            STB,B5   QCU@USE+15,AUTO
          0 000094  8CC7 002E                            LDI      QCU@USE+15,AUTO
          0 000096  7031                                 DCL,R7   1
          0 000097  8D47 0030                            SDI      QCU@USE+17,AUTO
          0 000099  F853                                 LDR,R7   R3
          0 00009A  6C00                                 LDV,R6   0
          0 00009B  8447 0030                            AID      QCU@USE+17,AUTO
          0 00009D  7071                                 DCR,R7   1
          0 00009E  8D47 000D                            SDI      FPT@WRITE+7,AUTO

      127    20538    4                   GZ_FIELD$ -> QI$GZ_FIELD.STATUS.OFFSET );
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:21   
      128    20539    4                 VBOUND ( FPT@WRITE.BUF_ ) = GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.
             20539                          LENGTH - 1;

  20539   0 0000A0  D846 0002                            LDR,R5   2,B6
          0 0000A2  D570 00FF                            AND,R5   255,IMO
          0 0000A4  5EFF                                 ADV,R5   -1
          0 0000A5  DF47 000C                            STR,R5   FPT@WRITE+6,AUTO

      129    20540
      130    20541    4                 CALL QGB$WRITE ( FPT@WRITE, QGB_PARAM )

  20541   0 0000A7  CB80 0000 0000  xsym                 LAB,B4   QGB_PARAM
          0 0000AA  CFC7 0030                            STB,B4   QCU@USE+17,AUTO
          0 0000AC  ABC7 0006                            LAB,B2   FPT@WRITE,AUTO
          0 0000AE  AFC7 002E                            STB,B2   QCU@USE+15,AUTO
          0 0000B0  BBC7 002E                            LAB,B3   QCU@USE+15,AUTO
          0 0000B2  CBF0 0200                            LAB,B4   512,IMO
          0 0000B4  E380 0000 0000  xent                 LNJ,B6   QGB$WRITE
          0 0000B7       0003                            DC       s:20548,PREL
          0 0000B8  0F81 004F                            B        s:20589,PREL

      131    20542    4                 WHENALTRETURN
      132    20543    5                   DO;

      133    20544                        /*  Something's wrong.
      134    20545                            Since INVALID clauses are not allowed on WRITEs, QCU$USE
      135    20546                            will just call QCE$ERROR to blow this program away, who
      136    20547                            will include the monitor errcode in the abort display.  */
      137    20548    5                     QI_1.ERROR_STATUS = %E$FORM_WRITE_ERROR;

  20548   0 0000BA  6C11                                 LDV,R6   17
          0 0000BB  EF00 0000 008C  xsym                 STR,R6   QI_1+140

      138    20549
      139    20550    5                     QCU@USE.CURR_NODE$ = GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.
             20550                              FIELD_DAD$;

PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:22   
  20550   0 0000BE  ECC7 001B                            LDB,B6   GZ_FIELD$,AUTO
          0 0000C0  DCC6 0004                            LDB,B5   4,B6
          0 0000C2  DFC7 0021                            STB,B5   QCU@USE+2,AUTO

      140    20551    5                     QCU@USE.CURR_FRAME$ = ADDR (NIL);

  20551   0 0000C4  CB80 0000 0000                       LAB,B4   0
          0 0000C7  CFC7 001F                            STB,B4   QCU@USE,AUTO

      141    20552    5                     QCU@USE.IS_TIME_TO_SAVE_AWAY_FIELDS = %YES;

  20552   0 0000C9  8947 0024                            LBT,'8000'X       QCU@USE+5,AUTO
  20552   0 0000CB       8000

      142    20553    5                     QCU@USE.FRAME_START_INDEX = QCI@IO_WRITE.FRAME_START_INDEX;

  20553   0 0000CC  BCC7 0004                            LDB,B3   @QCI@IO_WRITE,AUTO
          0 0000CE  D803                                 LDR,R5   ,B3
          0 0000CF  DF47 0025                            STR,R5   QCU@USE+6,AUTO

      143    20554    5                     QCU@USE.FRAME_STOP_INDEX = QCI@IO_WRITE.FRAME_STOP_INDEX;

  20554   0 0000D1  C843 0001                            LDR,R4   1,B3
          0 0000D3  CF47 0026                            STR,R4   QCU@USE+7,AUTO

      144    20555    5                     QCU@USE.IS_FIELD_INDEXES_VALID = %YES;

  20555   0 0000D5  8947 0027                            LBT,'8000'X       QCU@USE+8,AUTO
  20555   0 0000D7       8000

      145    20556    5                     QCU@USE.FIELD_START_INDEX = QCI@IO_WRITE.FIELD_START_INDEX;

  20556   0 0000D8  B843 0003                            LDR,R3   3,B3
          0 0000DA  BF47 0028                            STR,R3   QCU@USE+9,AUTO

      146    20557    5                     QCU@USE.FIELD_STOP_INDEX = QCI@IO_WRITE.FIELD_STOP_INDEX;

PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:23   
  20557   0 0000DC  A843 0004                            LDR,R2   4,B3
          0 0000DE  AF47 0029                            STR,R2   QCU@USE+10,AUTO

      147    20558    5                     QCU@USE.USE_DEFAULT_IO = %QI#USE_DEFAULT_INPUT;

  20558   0 0000E0  1C01                                 LDV,R1   1
          0 0000E1  9F47 0023                            STR,R1   QCU@USE+4,AUTO

      148    20559
      149    20560    5                     CALL QCU$USE_INVALID_IO ( QCU@USE );

  20560   0 0000E3  ABC7 001F                            LAB,B2   QCU@USE,AUTO
          0 0000E5  AFC7 002E                            STB,B2   QCU@USE+15,AUTO
          0 0000E7  BBC7 002E                            LAB,B3   QCU@USE+15,AUTO
          0 0000E9  CBF0 0100                            LAB,B4   256,IMO
          0 0000EB  E380 0000 0000  xent                 LNJ,B6   QCU$USE_INVALID_IO
          0 0000EE       0001                            DC       s:20562,PREL

      150    20561
      151    20562    6                     DO CASE ( QCU@USE.STATUS );

  20562   0 0000EF  B847 002C                            LDR,R3   QCU@USE+13,AUTO
          0 0000F1  3D03                                 CMV,R3   3
          0 0000F2  0281 0015                            BGE      s:20589,PREL
          0 0000F4  A830 0000 00FA  00                   LDR,R2   s:20562+11,R3
          0 0000F7  83A0 0000 00FD  00                   JMP      s:20565,R2
          0 0000FA       0000                            DC       s:20565,PREL
          0 0000FB       0007                            DC       s:20575,PREL
          0 0000FC       0009                            DC       s:20584,PREL

      152    20563
      153    20564    6                       CASE ( %QI#USE_INVALID_RETURN );

      154    20565    6                         QCI@IO_WRITE.STATUS = %QI#USE_INVALID_RETURN;

  20565   0 0000FD  ECC7 0004                            LDB,B6   @QCI@IO_WRITE,AUTO
          0 0000FF  8746 0005                            CL       5,B6
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:24   

      155    20566    6                         RETURN;

  20566   0 000101  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      156    20567
      157    20568    6                       CASE ( %QI#USE_INVALID_RETRY );

      158    20569        /*
      159    20570              You're asking:  "Well, let's say the USE PROCEDURE stuff does
      160    20571              eventually work.  How do we retry a (possibly multiple) field
      161    20572              write after an IO error?".  I dunno.  Perhaps the field in error,
      162    20573              and all subsequent fields, should now be written.
      163    20574        */
      164    20575    6                         GOTO RETRY_FIELD_WRITE;

  20575   0 000104  0F81 FF5F                            B        s:20518,PREL

      165    20576
      166    20577    6                       CASE ( %QI#USE_INVALID_SKIP_TO_NEXT );

      167    20578        /*
      168    20579              You're asking:  "Well, let's say the USE PROCEDURE stuff does
      169    20580              eventually work.  How do we skip a field on a (possibly multiple) field
      170    20581              write after an IO error?".  I dunno.  Perhaps all subsequent fields,
      171    20582              after the field in error, should be written.
      172    20583        */
      173    20584    6                         GOTO NEXT_FIELD_PLEASE;

  20584   0 000106  0F81 0017                            B        s:20601,PREL

      174    20585    6                     END;

      175    20586
      176    20587    5                   END;
      177    20588
      178    20589    4                 GZ_FIELD$ -> QI$GZ_FIELD.STATUS.LENGTH = GZ_FIELD$ -> QI$GZ_FIELD.
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:25   
             20589                          DESCRIPTION.LENGTH;

  20589   0 000108  ECC7 001B                            LDB,B6   GZ_FIELD$,AUTO
          0 00010A  E846 0002                            LDR,R6   2,B6
          0 00010C  EAC6 0006                            SRM,R6,'00FF'X    6,B6
          0 00010E       00FF

      179    20590
      180    20591    4                 IF NOT GZ_FIELD$ -> QI$GZ_FIELD.DESCRIPTION.IS_OUTPUT_CONSTANT

  20591   0 00010F  82C6 0002                            LB,'1000'X        2,B6
  20591   0 000111       1000
          0 000112  0501 0004                            BBT      s:20595,PREL

      181    20592    4                 THEN
      182    20593    4                   GZ_FIELD$ -> QI$GZ_FIELD.INDICATORS$ -> QI$INDICATORS.STATE_VALUE =
             20593                            %QI#STATE_NULL;

  20593   0 000114  DC86                                 LDB,B5   ,B6
          0 000115  8805                                 LBF,'1800'X       ,B5
          0 000116       1800

      183    20594
      184    20595    4                 GZ_FIELD$ -> QI$GZ_FIELD.STATUS.WAS_IO_EVER_DONE = %YES;

  20595   0 000117  8946 0006                            LBT,'1000'X       6,B6
  20595   0 000119       1000

      185    20596
      186    20597    4                 QI_1.SCREEN_UPDATE_FLAGS.WAS_WRITTEN = %YES;

  20597   0 00011A  8900 0000 0016  xsym                 LBT,'1000'X       QI_1+22
  20597   0 00011D       1000

      187    20598
      188    20599    4               END FIELD_IS_ENABLED_AND_PRESENTED;

PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:26   
      189    20600
      190    20601    3           END FIELD_IS_PROPER_IO_TYPE;

      191    20602
      192    20603    2   NEXT_FIELD_PLEASE:
      193    20604    2         GZ_FIELD$ = PINCRW ( GZ_FIELD$, SIZEW (QI$GZ_FIELD) );

  20604   0 00011E  ECC7 001B            NEXT_FIELD_PLEA*LDB,B6   GZ_FIELD$,AUTO
          0 000120  DBC6 000C                            LAB,B5   12,B6
          0 000122  DFC7 001B                            STB,B5   GZ_FIELD$,AUTO

      194    20605
      195    20606    2       END WRITE_THE_PROPER_FIELDS;

  20606   0 000124  8AC7 0019                            INC      FIELD_INDEX,AUTO
          0 000126  ECC7 0004                            LDB,B6   @QCI@IO_WRITE,AUTO
          0 000128  E847 0019                            LDR,R6   FIELD_INDEX,AUTO
          0 00012A  E946 0004                            CMR,R6   4,B6
          0 00012C  0381 FF37                            BLE      s:20518,PREL

      196    20607
      197    20608    1       QCI@IO_WRITE.STATUS = %QI#USE_INVALID_OK;

  20608   0 00012E  5C03                                 LDV,R5   3
          0 00012F  DF46 0005                            STR,R5   5,B6

      198    20609
      199    20610    1       RETURN;

  20610   0 000131  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      200    20611
      201    20612    1   END QCI$IO_WRITE;

PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:27   
--  Include file information  --

   QCU_USE_M.:E05TOU  is referenced.
   QCI_IO_WRITE_M.:E05TOU  is referenced.
   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QCI$IO_WRITE.
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:28   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @QCI@IO_WRITE             18-0-0/w UBIN(16)    r     1 FIELD_FIRST_INDEX
    19-0-0/w UBIN(16)    r     1 FIELD_INDEX               1A-0-0/w UBIN(16)    r     1 FIELD_LAST_INDEX
     6-0-0/w STRC(288)   r     1 FPT@WRITE                 1B-0-0/w PTR         r     1 GZ_FIELD$
    1D-0-0/w PTR         r     1 GZ_HEADER$                *0-0-0/w STRC(112)   r     1 QCI@IO_WRITE
    1F-0-0/w STRC(224)   r     1 QCU@USE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(432)   r     1 QGB_PARAM                  0-0-0/d STRC(2576)  r     1 QI_1
     0-0-0/w STRC(288)   r     1 QI_FPT_WRITE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 QI$FORM_STATUS             0-0-0/w STRC(208)   r     1 QI$FRAME_STATUS
     0-0-0/w STRC(184)   r     1 QI$GZ_FIELD                0-0-0/w STRC(176)   r     1 QI$GZ_HEADER
     0-0-0/w STRC(16)    r     1 QI$INDICATORS
     0-0-0/c ASTR(8)     r     1 QI$VARIABLE_IDENTIFIER


   Procedure QCI$IO_WRITE requires 308 words for executable code.
   Procedure QCI$IO_WRITE requires 50 words of local(AUTO) storage.
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:29   

    No errors detected in file QCI$IO_WRITE.:E05TSI    .
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:30   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:31   
          MINI XREF LISTING

FIELD_FIRST_INDEX
     20278**DCL     20502<<ASSIGN
FIELD_INDEX
     20279**DCL     20515<<DOINDEX
FIELD_IS_ENABLED_AND_PRESENTED
     20527**LABEL   20534--EXIT
FIELD_LAST_INDEX
     20280**DCL     20503<<ASSIGN
FPT@WRITE
      1372**DCL     20509<<ASSIGN  20541<>CALL
FPT@WRITE.BUF_
      1374**DCL     20537<<ASSIGN  20539<<ASSIGN
FPT@WRITE.KEY_
      1374**DCL     20536<<ASSIGN
FPT@WRITE.V
      1377**DCL     20510--ASSIGN
FPT@WRITE.V.DCB#
      1377**DCL     20511<<ASSIGN
FPT@WRITE.V_
      1374**DCL     20510<<ASSIGN
GZ_FIELD$
     20281**DCL     20506<<ASSIGN  20518>>IF      20523>>IF      20523>>IF      20531>>IF      20531>>IF
     20536>>ASSIGN  20537>>ASSIGN  20537>>ASSIGN  20539>>ASSIGN  20550>>ASSIGN  20589>>ASSIGN  20589>>ASSIGN
     20591>>IF      20593>>ASSIGN  20595>>ASSIGN  20604<<ASSIGN  20604>>ASSIGN
GZ_HEADER$
     20282**DCL     20505<<ASSIGN  20511>>ASSIGN
NEXT_FIELD_PLEASE
     20604**LABEL   20584--GOTO
QCE$ERROR_INTERNAL
     20284**DCL-ENT 20493--CALL    20497--CALL
QCI@IO_WRITE
     20339**DCL        16--PROC
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:32   
QCI@IO_WRITE.FIELD_START_INDEX
     20347**DCL     20506>>ASSIGN  20515>>DOINDEX 20556>>ASSIGN
QCI@IO_WRITE.FIELD_STOP_INDEX
     20349**DCL     20515>>DOINDEX 20557>>ASSIGN
QCI@IO_WRITE.FRAME_START_INDEX
     20340**DCL     20553>>ASSIGN
QCI@IO_WRITE.FRAME_STOP_INDEX
     20342**DCL     20554>>ASSIGN
QCI@IO_WRITE.STATUS
     20351**DCL     20565<<ASSIGN  20608<<ASSIGN
QCU$USE_INVALID_IO
     20285**DCL-ENT 20560--CALL
QCU@USE
     20435**DCL     20560<>CALL
QCU@USE.CURR_FRAME$
     20436**DCL     20551<<ASSIGN
QCU@USE.CURR_NODE$
     20438**DCL     20550<<ASSIGN
QCU@USE.FIELD_START_INDEX
     20458**DCL     20556<<ASSIGN
QCU@USE.FIELD_STOP_INDEX
     20461**DCL     20557<<ASSIGN
QCU@USE.FRAME_START_INDEX
     20449**DCL     20553<<ASSIGN
QCU@USE.FRAME_STOP_INDEX
     20452**DCL     20554<<ASSIGN
QCU@USE.IS_FIELD_INDEXES_VALID
     20455**DCL     20555<<ASSIGN
QCU@USE.IS_TIME_TO_SAVE_AWAY_FIELDS
     20443**DCL     20552<<ASSIGN
QCU@USE.STATUS
     20469**DCL     20562>>DOCASE
QCU@USE.USE_DEFAULT_IO
     20440**DCL     20558<<ASSIGN
QGB$WRITE
      1529**DCL-ENT 20541--CALL
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:33   
QGB_PARAM
     12648**DCL     20541<>CALL
QGB_PARAM.DVE.DVBYTE.VFC
     12716**DCL     12717--REDEF
QGB_PARAM.DVE.EOMCHAR
     12728**DCL     12729--REDEF
QGB_PARAM.MSG$
     12710**DCL     12711--REDEF
QGB_PARAM.UHDR$
     12735**DCL     12736--REDEF
QI$ACTIVATION_STATUS
     10474**DCL     10480--REDEF
QI$CIP
      9315**DCL      9385--REDEF
QI$CIP.CA
      9320**DCL      9324--REDEF    9327--REDEF    9330--REDEF
QI$COBOL_DAD.PSEUDO_CIP
      9559**DCL      9584--REDEF
QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC
      9561**DCL      9566--REDEF
QI$COBOL_DAD.PSEUDO_CIP.NUMERIC.CB
      9567**DCL      9570--REDEF    9573--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS
      9595**DCL      9611--REDEF    9619--REDEF    9627--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      9596**DCL      9606--REDEF    9609--REDEF
QI$COBOL_DAD.WORD0
      9523**DCL      9524--REDEF    9538--REDEF
QI$COBOL_DAD_P_BITS.P
      9663**DCL      9669--REDEF
QI$CONDITION_CONTROL_BLOCK.LIST_A@P
      9149**DCL      9150--REDEF
QI$CONDITION_CONTROL_BLOCK.WORD0_FLAGS
      9145**DCL      9148--REDEF
QI$CONDITION_LEGAL_BLOCK.ARRAY@P
      9182**DCL      9183--REDEF    9184--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:34   
QI$DAD.PSEUDO_CIP
      9462**DCL      9487--REDEF
QI$DAD.PSEUDO_CIP.ALPHANUMERIC
      9464**DCL      9469--REDEF
QI$DAD.PSEUDO_CIP.NUMERIC.CB
      9470**DCL      9473--REDEF    9476--REDEF
QI$DAD.WORD0
      9431**DCL      9432--REDEF
QI$ERROR_MESSAGE_LINE
     12823**DCL     12825--REDEF
QI$ERROR_STATUS
     12820**DCL     12822--REDEF
QI$FIELD_DAD.ELEMENTARY_ITEM.P
      9877**DCL      9884--REDEF
QI$FIELD_DAD.ONE_DIMENSIONAL_ITEM.P
      9897**DCL      9904--REDEF
QI$FIELD_DAD.PSEUDO_CIP
      9804**DCL      9829--REDEF
QI$FIELD_DAD.PSEUDO_CIP.ALPHANUMERIC
      9806**DCL      9811--REDEF
QI$FIELD_DAD.PSEUDO_CIP.NUMERIC.CB
      9812**DCL      9815--REDEF    9818--REDEF
QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P
      9917**DCL      9924--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS
      9860**DCL      9876--REDEF    9894--REDEF    9912--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      9861**DCL      9871--REDEF    9874--REDEF
QI$FIELD_DAD.WORD0
      9756**DCL      9757--REDEF
QI$FIELD_DAD.WORD0_FLAGS.IO_FLAGS
      9760**DCL      9765--REDEF
QI$FIELD_DAD_P.P
      9958**DCL      9965--REDEF
QI$FIELD_STATUS.INDICATORS
     10624**DCL     10656--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:35   
QI$FIELD_STATUS.INDICATORS.ENABLED_FLAGS
     10628**DCL     10633--REDEF
QI$FIELD_STATUS.INDICATORS.OPEN_FLAGS
     10640**DCL     10647--REDEF
QI$FIELD_STATUS.INDICATORS.STATE_FLAGS
     10634**DCL     10639--REDEF
QI$FILE.WORD0
     10080**DCL     10081--REDEF
QI$FILE_STATUS.INDICATORS
     10917**DCL     10949--REDEF
QI$FILE_STATUS.INDICATORS.ENABLED_FLAGS
     10921**DCL     10926--REDEF
QI$FILE_STATUS.INDICATORS.OPEN_FLAGS
     10933**DCL     10940--REDEF
QI$FILE_STATUS.INDICATORS.STATE_FLAGS
     10927**DCL     10932--REDEF
QI$FORM_FILE.USE_PROCEDURE
     10180**DCL     10187--REDEF
QI$FORM_FILE.WORD0
     10134**DCL     10135--REDEF
QI$FORM_STATUS.INDICATORS
     11038**DCL     11070--REDEF
QI$FORM_STATUS.INDICATORS.ENABLED_FLAGS
     11042**DCL     11047--REDEF
QI$FORM_STATUS.INDICATORS.OPEN_FLAGS
     11054**DCL     11061--REDEF
QI$FORM_STATUS.INDICATORS.OPEN_FLAGS.IS_OUTPUT
     11055**DCL     20495>>IF
QI$FORM_STATUS.INDICATORS.STATE_FLAGS
     11048**DCL     11053--REDEF
QI$FRAME.WORD0
     10295**DCL     10296--REDEF
QI$FRAME_STATUS.GZ.HEADER$
     11228**DCL     20505>>ASSIGN
QI$FRAME_STATUS.GZ.START$
     11230**DCL     20506>>ASSIGN
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:36   
QI$FRAME_STATUS.INDICATORS
     11267**DCL     11299--REDEF
QI$FRAME_STATUS.INDICATORS.ENABLED_FLAGS
     11271**DCL     11276--REDEF
QI$FRAME_STATUS.INDICATORS.OPEN_FLAGS
     11283**DCL     11290--REDEF
QI$FRAME_STATUS.INDICATORS.STATE_FLAGS
     11277**DCL     11282--REDEF
QI$GZ_FIELD
     18146**DCL     20506--ASSIGN  20604--ASSIGN
QI$GZ_FIELD.DESCRIPTION.FIELD_DAD$
     18170**DCL     20550>>ASSIGN
QI$GZ_FIELD.DESCRIPTION.IO_FLAGS
     18149**DCL     18154--REDEF
QI$GZ_FIELD.DESCRIPTION.IO_FLAGS.IS_OUTPUT
     18150**DCL     20518>>IF
QI$GZ_FIELD.DESCRIPTION.IS_OUTPUT_CONSTANT
     18158**DCL     20531>>IF      20591>>IF
QI$GZ_FIELD.DESCRIPTION.LENGTH
     18163**DCL     20539>>ASSIGN  20589>>ASSIGN
QI$GZ_FIELD.DESCRIPTION.POSITION
     18165**DCL     20536--ASSIGN
QI$GZ_FIELD.INDICATORS$
     18147**DCL     20523>>IF      20523>>IF      20593>>ASSIGN
QI$GZ_FIELD.STATUS.DATA$
     18190**DCL     20537>>ASSIGN
QI$GZ_FIELD.STATUS.LENGTH
     18183**DCL     20531>>IF      20589<<ASSIGN
QI$GZ_FIELD.STATUS.OFFSET
     18173**DCL     20537>>ASSIGN
QI$GZ_FIELD.STATUS.WAS_IO_EVER_DONE
     18181**DCL     20595<<ASSIGN
QI$GZ_HEADER.DCB#
     18103**DCL     20511>>ASSIGN
QI$IDENTIFIER
     12826**DCL     12828--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:37   
QI$INDICATORS
     10538**DCL     10568--REDEF
QI$INDICATORS.ENABLED_FLAGS
     10544**DCL     10549--REDEF
QI$INDICATORS.ENABLED_FLAGS.IS_OUTPUT
     10545**DCL     20523>>IF
QI$INDICATORS.OPEN_FLAGS
     10556**DCL     10563--REDEF
QI$INDICATORS.STATE_FLAGS
     10550**DCL     10555--REDEF
QI$INDICATORS.STATE_FLAGS.IS_PRESENTED
     10553**DCL     20523>>IF
QI$INDICATORS.STATE_VALUE
     10555**DCL     20593<<ASSIGN
QI$MAJOR_NODE.WORD0
      9994**DCL      9995--REDEF
QI$MAJOR_STATUS.INDICATORS
     10717**DCL     10749--REDEF
QI$MAJOR_STATUS.INDICATORS.ENABLED_FLAGS
     10721**DCL     10726--REDEF
QI$MAJOR_STATUS.INDICATORS.OPEN_FLAGS
     10733**DCL     10740--REDEF
QI$MAJOR_STATUS.INDICATORS.STATE_FLAGS
     10727**DCL     10732--REDEF
QI$MESSAGE_TYPE
     12817**DCL     12819--REDEF
QI$MINOR_NODE.WORD0
     10037**DCL     10038--REDEF
QI$MINOR_STATUS.INDICATORS
     10810**DCL     10842--REDEF
QI$MINOR_STATUS.INDICATORS.ENABLED_FLAGS
     10814**DCL     10819--REDEF
QI$MINOR_STATUS.INDICATORS.OPEN_FLAGS
     10826**DCL     10833--REDEF
QI$MINOR_STATUS.INDICATORS.STATE_FLAGS
     10820**DCL     10825--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:38   
QI$OP_ACCEPT.DATANAME@P
      7225**DCL      7226--REDEF
QI$OP_CALL.EPTR$
      7397**DCL      7398--REDEF
QI$OP_CLEAR.IO_FLAGS
      7430**DCL      7433--REDEF
QI$OP_DISPLAY.FIELD_A@P
      7697**DCL      7698--REDEF
QI$OP_ENABLE.IO_FLAGS
      7784**DCL      7787--REDEF
QI$OP_IFCLS.ATTRIBUTE.TYPE
      7877**DCL      7882--REDEF
QI$OP_INSPECT.TALLYING_FOR_ITEM@P
      8111**DCL      8112--REDEF
QI$OP_INSPECT.TALLYING_INITIAL_ITEM@P
      8113**DCL      8114--REDEF
QI$OP_INSPECT.TALLYING_ITEM@P
      8109**DCL      8110--REDEF
QI$OP_OPEN.IO_FLAGS
      8671**DCL      8674--REDEF
QI$OP_PERFM.BINARY_ITERATION_COUNT@P
      8709**DCL      8710--REDEF
QI$PSEUDO_CIP
      9210**DCL      9234--REDEF
QI$PSEUDO_CIP.ALPHANUMERIC
      9214**DCL      9219--REDEF
QI$PSEUDO_CIP.NUMERIC.CB
      9220**DCL      9223--REDEF    9226--REDEF
QI$TERMINAL_ATTRIBUTES
     10431**DCL     10444--REDEF
QI$TRAN_FILE.WORD0
     10216**DCL     10217--REDEF
QI$TRAN_STATUS.INDICATORS
     11151**DCL     11183--REDEF
QI$TRAN_STATUS.INDICATORS.ENABLED_FLAGS
     11155**DCL     11160--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:39   
QI$TRAN_STATUS.INDICATORS.OPEN_FLAGS
     11167**DCL     11174--REDEF
QI$TRAN_STATUS.INDICATORS.STATE_FLAGS
     11161**DCL     11166--REDEF
QI$VARIABLE_IDENTIFIER.LENGTH
     12830**DCL     12831--IMP-SIZ
QI_1.BASE
     11359**DCL     11366--REDEF
QI_1.CURRENT.FILE$
     12250**DCL     12252--REDEF   12254--REDEF
QI_1.CURRENT.FILE_STATUS$
     12256**DCL     12258--REDEF   12260--REDEF
QI_1.CURRENT.FORM$
     12252**DCL     20490>>IF
QI_1.CURRENT.FORM_STATUS$
     12258**DCL     20490>>IF      20495>>IF
QI_1.CURRENT.FRAME_STATUS$
     12264**DCL     20505>>ASSIGN  20506>>ASSIGN
QI_1.DAD
     12054**DCL     12059--REDEF
QI_1.ERROR_STATUS
     12284**DCL     20548<<ASSIGN
QI_1.FILE_HEAD
     12237**DCL     12244--REDEF
QI_1.IS_ALL_LIT
     12060**DCL     12065--REDEF
QI_1.IS_FORM_VARIABLE
     12066**DCL     12071--REDEF
QI_1.IS_TEMP
     12072**DCL     12077--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP
     12170**DCL     12195--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.ALPHANUMERIC
     12172**DCL     12177--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.NUMERIC.CB
     12178**DCL     12181--REDEF   12184--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:40   
QI_1.MESSAGE_LINE_DAD.WORD0
     12139**DCL     12140--REDEF
QI_1.OFFSET
     12078**DCL     12083--REDEF
QI_1.OP.CIP
     11439**DCL     11890--REDEF
QI_1.OP.CIP.AUX
     11805**DCL     11876--REDEF
QI_1.OP.CIP.AUX.CD
     11850**DCL     11853--REDEF   11857--REDEF   11860--REDEF
QI_1.OP.CIP.S
     11509**DCL     11580--REDEF
QI_1.OP.CIP.S.CD
     11554**DCL     11557--REDEF   11561--REDEF   11564--REDEF
QI_1.OP.CIP.T
     11657**DCL     11728--REDEF
QI_1.OP.CIP.T.CD
     11702**DCL     11705--REDEF   11709--REDEF   11712--REDEF
QI_1.OP.DATA
     11897**DCL     11901--REDEF
QI_1.OP.FILL_CHAR
     12021**DCL     12024--REDEF
QI_1.OP.INX
     11954**DCL     11958--REDEF   11959--REDEF   11963--REDEF
QI_1.OP.LEN
     11937**DCL     11941--REDEF   11942--REDEF   11946--REDEF   11947--REDEF   11951--REDEF
QI_1.OP.LEN.AUX
     11940**DCL     12841--IMP-SIZ
QI_1.OP.LEN.S
     11938**DCL     12837--IMP-SIZ
QI_1.OP.LEN.T
     11939**DCL     12839--IMP-SIZ
QI_1.OP.PICTURE_STRING
     12007**DCL     12010--REDEF   12011--REDEF   12014--REDEF   12015--REDEF   12018--REDEF
QI_1.OP.ROUND
     12040**DCL     12041--REDEF   12042--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:41   
QI_1.OP.SRCH_VRFY_ELEMS
     11976**DCL     11979--REDEF
QI_1.OPENED_COUNT
     12245**DCL     12248--REDEF
QI_1.OTTER_SPACE
     12084**DCL     12089--REDEF
QI_1.PICTURE_STRING
     12090**DCL     12095--REDEF
QI_1.SCREEN_UPDATE_FLAGS.WAS_WRITTEN
     11408**DCL     20597<<ASSIGN
QI_1.SPECIAL_NAMES
     12273**DCL     12282--REDEF
QI_1.TYPE
     12096**DCL     12101--REDEF
QI_16_BIT_BINARY
     17286**DCL     17356--REDEF
QI_16_BIT_BINARY.CB
     17305**DCL     17308--REDEF   17312--REDEF   17315--REDEF
QI_31_DIGIT_SLS_DISPLAY
     17119**DCL     17189--REDEF
QI_31_DIGIT_SLS_DISPLAY.CD
     17166**DCL     17169--REDEF   17173--REDEF   17176--REDEF
QI_31_DIGIT_ST_PACKED
     17621**DCL     17691--REDEF
QI_31_DIGIT_ST_PACKED.CP
     17654**DCL     17657--REDEF   17661--REDEF   17664--REDEF
QI_32_BIT_BINARY
     17453**DCL     17523--REDEF
QI_32_BIT_BINARY.CB
     17472**DCL     17475--REDEF   17479--REDEF   17482--REDEF
QI_4_CHAR_ALPHANUMERIC
     16951**DCL     17021--REDEF
QI_4_CHAR_ALPHANUMERIC.CA
     16956**DCL     16960--REDEF   16963--REDEF   16966--REDEF
QI_ACCUMULATOR_DAD.CIP
     17964**DCL     18035--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:42   
QI_ACCUMULATOR_DAD.CIP.CP
     17995**DCL     17998--REDEF   18002--REDEF   18005--REDEF
QI_ALR.CIP
     12916**DCL     13367--REDEF
QI_ALR.CIP.AUX
     13282**DCL     13353--REDEF
QI_ALR.CIP.AUX.CA
     13285**DCL     13289--REDEF   13292--REDEF   13295--REDEF
QI_ALR.CIP.S
     12986**DCL     13057--REDEF
QI_ALR.CIP.S.CA
     12989**DCL     12993--REDEF   12996--REDEF   12999--REDEF
QI_ALR.CIP.T
     13134**DCL     13205--REDEF
QI_ALR.CIP.T.CA
     13137**DCL     13141--REDEF   13144--REDEF   13147--REDEF
QI_ALR.DATA
     13374**DCL     13378--REDEF
QI_ALR.FILL_CHAR
     13498**DCL     13501--REDEF
QI_ALR.INX
     13431**DCL     13435--REDEF   13436--REDEF   13440--REDEF
QI_ALR.LEN
     13414**DCL     13418--REDEF   13419--REDEF   13423--REDEF   13424--REDEF   13428--REDEF
QI_ALR.PICTURE_STRING
     13484**DCL     13487--REDEF   13488--REDEF   13491--REDEF   13492--REDEF   13495--REDEF
QI_ALR.ROUND
     13517**DCL     13518--REDEF   13519--REDEF
QI_ALR.SRCH_VRFY_ELEMS
     13453**DCL     13456--REDEF
QI_FPT_DBCONTROL.V_
     18336**DCL     18336--REDEF
QI_FPT_INT.V_
     19174**DCL     19174--REDEF
QI_FPT_WRITE
     20163**DCL     20509>>ASSIGN
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:43   
QI_MAT.CIP
     16255**DCL     16706--REDEF
QI_MAT.CIP.AUX
     16621**DCL     16692--REDEF
QI_MAT.CIP.AUX.CA
     16624**DCL     16628--REDEF   16631--REDEF   16634--REDEF
QI_MAT.CIP.S
     16325**DCL     16396--REDEF
QI_MAT.CIP.S.CA
     16328**DCL     16332--REDEF   16335--REDEF   16338--REDEF
QI_MAT.CIP.T
     16473**DCL     16544--REDEF
QI_MAT.CIP.T.CA
     16476**DCL     16480--REDEF   16483--REDEF   16486--REDEF
QI_MAT.DATA
     16713**DCL     16717--REDEF
QI_MAT.DEC
     16781**DCL     16785--REDEF   16786--REDEF   16790--REDEF
QI_MAT.FILL_CHAR
     16837**DCL     16840--REDEF
QI_MAT.LEN
     16753**DCL     16757--REDEF   16758--REDEF   16762--REDEF   16763--REDEF   16767--REDEF
QI_MAT.PICTURE_STRING
     16823**DCL     16826--REDEF   16827--REDEF   16830--REDEF   16831--REDEF   16834--REDEF
QI_MAT.ROUND
     16856**DCL     16857--REDEF   16858--REDEF
QI_MAT.SRCH_VRFY_ELEMS
     16792**DCL     16795--REDEF
QI_PICTURE_STRING
     17789**DCL     17859--REDEF
QI_PICTURE_STRING.CA
     17794**DCL     17798--REDEF   17801--REDEF   17804--REDEF
QI_SRCH_VRFY.CIP
     15586**DCL     16037--REDEF
QI_SRCH_VRFY.CIP.AUX
     15952**DCL     16023--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:44   
QI_SRCH_VRFY.CIP.AUX.CA
     15955**DCL     15959--REDEF   15962--REDEF   15965--REDEF
QI_SRCH_VRFY.CIP.S
     15656**DCL     15727--REDEF
QI_SRCH_VRFY.CIP.S.CA
     15659**DCL     15663--REDEF   15666--REDEF   15669--REDEF
QI_SRCH_VRFY.CIP.T
     15804**DCL     15875--REDEF
QI_SRCH_VRFY.CIP.T.CA
     15807**DCL     15811--REDEF   15814--REDEF   15817--REDEF
QI_SRCH_VRFY.DATA
     16044**DCL     16048--REDEF
QI_SRCH_VRFY.DEC
     16112**DCL     16116--REDEF   16117--REDEF   16121--REDEF
QI_SRCH_VRFY.FILL_CHAR
     16168**DCL     16171--REDEF
QI_SRCH_VRFY.ROUND
     16187**DCL     16188--REDEF   16189--REDEF
QI_SRCH_VRFY.SRCH_RESULT
     16128**DCL     16131--REDEF   16132--REDEF   16135--REDEF   16136--REDEF   16139--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ARGS
     16052**DCL     16056--REDEF   16057--REDEF   16061--REDEF   16062--REDEF   16066--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ELEMS
     16123**DCL     16126--REDEF
QI_TYPE_BINARY_TARGET.CIP
     14913**DCL     15364--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX
     15279**DCL     15350--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX.CA
     15282**DCL     15286--REDEF   15289--REDEF   15292--REDEF
QI_TYPE_BINARY_TARGET.CIP.S
     14983**DCL     15054--REDEF
QI_TYPE_BINARY_TARGET.CIP.S.CA
     14986**DCL     14990--REDEF   14993--REDEF   14996--REDEF
QI_TYPE_BINARY_TARGET.CIP.T
     15131**DCL     15202--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:45   
QI_TYPE_BINARY_TARGET.CIP.T.CB
     15148**DCL     15151--REDEF   15155--REDEF   15158--REDEF
QI_TYPE_BINARY_TARGET.DATA
     15371**DCL     15375--REDEF
QI_TYPE_BINARY_TARGET.DEC
     15439**DCL     15443--REDEF   15444--REDEF   15448--REDEF
QI_TYPE_BINARY_TARGET.LEN
     15411**DCL     15415--REDEF   15416--REDEF   15420--REDEF   15421--REDEF   15425--REDEF
QI_TYPE_BINARY_TARGET.PICTURE_STRING
     15481**DCL     15484--REDEF   15485--REDEF   15488--REDEF   15489--REDEF   15492--REDEF
QI_TYPE_BINARY_TARGET.ROUND
     15514**DCL     15515--REDEF   15516--REDEF
QI_TYPE_BINARY_TARGET.SIZE_ERROR
     15500**DCL     15501--REDEF
QI_TYPE_BINARY_TARGET.SRCH_VRFY_ELEMS
     15450**DCL     15453--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP
     13581**DCL     14032--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX
     13947**DCL     14018--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX.CA
     13950**DCL     13954--REDEF   13957--REDEF   13960--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S
     13651**DCL     13722--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S.CD
     13696**DCL     13699--REDEF   13703--REDEF   13706--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T
     13799**DCL     13870--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T.CA
     13802**DCL     13806--REDEF   13809--REDEF   13812--REDEF
QI_TYPE_DISPLAY_SOURCE.DATA
     14039**DCL     14043--REDEF
QI_TYPE_DISPLAY_SOURCE.DEC
     14107**DCL     14111--REDEF   14112--REDEF   14116--REDEF
QI_TYPE_DISPLAY_SOURCE.LEN
     14079**DCL     14083--REDEF   14084--REDEF   14088--REDEF   14089--REDEF   14093--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:46   
QI_TYPE_DISPLAY_SOURCE.PICTURE_STRING
     14149**DCL     14152--REDEF   14153--REDEF   14156--REDEF   14157--REDEF   14160--REDEF
QI_TYPE_DISPLAY_SOURCE.ROUND
     14182**DCL     14183--REDEF   14184--REDEF
QI_TYPE_DISPLAY_SOURCE.SIZE_ERROR
     14168**DCL     14169--REDEF
QI_TYPE_DISPLAY_SOURCE.SRCH_VRFY_ELEMS
     14118**DCL     14121--REDEF
QI_TYPE_DISPLAY_TARGET.CIP
     14247**DCL     14698--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX
     14613**DCL     14684--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX.CA
     14616**DCL     14620--REDEF   14623--REDEF   14626--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S
     14317**DCL     14388--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S.CA
     14320**DCL     14324--REDEF   14327--REDEF   14330--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T
     14465**DCL     14536--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T.CD
     14510**DCL     14513--REDEF   14517--REDEF   14520--REDEF
QI_TYPE_DISPLAY_TARGET.DATA
     14705**DCL     14709--REDEF
QI_TYPE_DISPLAY_TARGET.DEC
     14773**DCL     14777--REDEF   14778--REDEF   14782--REDEF
QI_TYPE_DISPLAY_TARGET.LEN
     14745**DCL     14749--REDEF   14750--REDEF   14754--REDEF   14755--REDEF   14759--REDEF
QI_TYPE_DISPLAY_TARGET.PICTURE_STRING
     14815**DCL     14818--REDEF   14819--REDEF   14822--REDEF   14823--REDEF   14826--REDEF
QI_TYPE_DISPLAY_TARGET.ROUND
     14848**DCL     14849--REDEF   14850--REDEF
QI_TYPE_DISPLAY_TARGET.SIZE_ERROR
     14834**DCL     14835--REDEF
QI_TYPE_DISPLAY_TARGET.SRCH_VRFY_ELEMS
     14784**DCL     14787--REDEF
PL6.E3A0      #001=QCI$IO_WRITE File=QCI$IO_WRITE.:E05TSI                        WED 07/30/97 05:10 Page:47   
QI_VLP_SEGMENT.BASE
     18873**DCL     18873--REDEF
QI_VLP_SEGMENT_BUFFER.BASE
     18971**DCL     18971--REDEF
QI_VLP_SEGMENT_LOAD.BASE
     19069**DCL     19069--REDEF
QI_VLP_TRMCTL.BREAKCOUNT
     20063**DCL     20064--REDEF
QI_VLP_XBREAK.IC
     20253**DCL     20253--REDEF
QI_VLP_XBREAK.OLDIC
     20253**DCL     20254--REDEF   20254--REDEF
RETRY_FIELD_WRITE
     20518**LABEL   20575--GOTO
