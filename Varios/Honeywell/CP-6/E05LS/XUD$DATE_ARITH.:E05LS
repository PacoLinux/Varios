VERSION E05

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             1    BMAP - B00     
                                         1  *M* XUD$DATE_ARITH - Perform base operations on DATE/TIME.
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  *
                                         8  *P* NAME:   XUD$DATE_ARITH
                                         9  *,* PURPOSE: Contains routines to manage the DATE/TIME datatype.
                                        10  *
                                        11          ENTDEF      XUD$ADD_DATE_DATE
                                        12          ENTDEF      XUD$ADD_DATE_TICS
                                        13          ENTDEF      XUD$SUB_DATE_DATE
                                        14          ENTDEF      XUD$SUB_DATE_TICS
                                        15          ENTDEF      XUD$CMPR_DATES
                                        16          ENTDEF      XUD$FROM_DATE
                                        17          ENTDEF      XUD$TO_DATE
                                        18  *
                                        19          ENTREF      X66_AUTO_0
                                        20          ENTREF      X66_ARET
                                        21          ENTREF      X66_AALT
                                        22  *
             000000000000               23  PR0     EQU         0
             000000000002               24  PR2     EQU         2
             000000000005               25  PR5     EQU         5
             000000000006               26  PR6     EQU         6
             000000000007               27  PR7     EQU         7
             000000000000               28  X0      EQU         0
             000000000001               29  LS      EQU         1           Leading sign

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             2    BMAP - B00     
                                        30          EJECT
                                        31  *F* NAME:   XUD$ADD_DATE_DATE
                                        32  *,* CALL:   CALL XUD$ADD_DATE_DATE(OP1,OP2) ALTRET
                                        33  *,* ENTRY:  CALL XUD$ADD_DATE_TICS(OP1,OP2) ALTRET
                                        34  *,* INPUT:  OP1 - A DATE/TIME datatype
                                        35  *,*         OP2 - A DATE/TIME datatype or an SBIN word.
                                        36  *,* OUTPUT: OP1 = OP1+OP2.
                                        37  *,* DESCRIPTION:
                                        38  *,*     ADD_DATE_DATE adds two date/time operands together.
                                        39  *,*     ADD_DATE_TICS adds an sbin number of tics to a date/time.
                                        40  *,*
                                        41  *,*     This routine will ALTRET on an overflow condition.
                                        42  *
             000000000004               43  TDATE   EQU         4                   Offset into AUTO
 0 000000                               44  XUD$ADD_DATE_TICS NULL
   000000  X 000000 7000 00             45          TSX         X0,X66_AUTO_0
   000001    000006 000000              46          ZERO        4+2,0               AUTO+TDATE
                                        47  * Convert sbin TICS to decimal
   000002    0 00001 4775 00            48          LDP7        1,,PR0              Pointer to second operand
   000003    0 000 100 3015 00          49          BTD         (1),(1)
   000004    7 00000 0 0 0 00 04        50          NDSC9       0,0,4,,,PR7         OP2
   000005    2 00004 0 1 1 00 20        51          NDSC4       TDATE,0,16,LS,,PR2  TDATE
                                        52  * Use TDATE as second operand
   000006    2 00004 6375 00            53          EPPR7       TDATE,,PR2          Pointer to TDATE
   000007 (0)000013 7100 00             54          TRA         ADD_DATE_DATE
                                        55  *
   000010                               56  XUD$ADD_DATE_DATE NULL
   000010  X 000000 7000 00             57          TSX         X0,X66_AUTO_0
   000011    000004 000000              58          ZERO        4,0
   000012    0 00001 4775 00            59          LDP7        1,,PR0              Pointer to OP2
                                        60  * Add OP2 (possible converted in TDATE) to OP1
   000013                               61  ADD_DATE_DATE   NULL
   000013    0 00000 4765 00            62          LDP6        0,,PR0              Pointer to OP1
   000014 (0)000015 6170 00             63          TOV         *+1                 Reset overflow
   000015    0 000 0 0 100 2025 00      64          AD2D        (1),(1)
   000016    7 00000 0 1 1 00 20        65          NDSC4       0,0,16,LS,,PR7      OP2
   000017    6 00000 0 1 1 00 20        66          NDSC4       0,0,16,LS,,PR6      OP1 (and result)
 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             3    BMAP - B00     
   000020  X 000000 6170 00             67          TOV         X66_AALT
   000021  X 000000 7100 00             68          TRA         X66_ARET            Return

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             4    BMAP - B00     
                                        69          EJECT
                                        70  *F* NAME:   XUD$SUB_DATE_DATE
                                        71  *,* CALL:   CALL XUD$SUB_DATE_DATE(OP1,OP2) ALTRET
                                        72  *,* ENTRY:  CALL XUD$SUB_DATE_TICS(OP1,OP2) ALTRET
                                        73  *,* INPUT:  OP1 - A DATE/TIME datatype.
                                        74  *,*         OP2 - A DATE/TIME datatype or an SBIN word.
                                        75  *,* OUTPUT: OP1 = OP1-OP2
                                        76  *,* DESCRIPTION:
                                        77  *,*     SUB_DATE_DATE subtracts a date/time operand from another.
                                        78  *,*     SUB_DATE_TICS subtracts sbin number of tics from a date/time.
                                        79  *,*
                                        80  *,*     This routine will ALTRET on an overflow condition.
                                        81  *
   000022                               82  XUD$SUB_DATE_TICS   NULL
   000022  X 000000 7000 00             83          TSX         X0,X66_AUTO_0
   000023    000006 000000              84          ZERO        4+2,0               AUTO+TDATE
                                        85  * Convert sbin TICS to decimal
   000024    0 00001 4775 00            86          LDP7        1,,PR0              pointer to OP2
   000025    0 000 100 3015 00          87          BTD         (1),(1)
   000026    7 00000 0 0 0 00 04        88          NDSC9       0,0,4,,,PR7         OP2
   000027    2 00004 0 1 1 00 20        89          NDSC4       TDATE,0,16,LS,,PR2  TDATE
                                        90  * Use TDATE as second operand
   000030    2 00004 6375 00            91          EPPR7       TDATE,,PR2          Pointer to TDATE
   000031 (0)000035 7100 00             92          TRA         SUB_DATE_DATE
                                        93  *
   000032                               94  XUD$SUB_DATE_DATE    NULL
   000032  X 000000 7000 00             95          TSX         X0,X66_AUTO_0
   000033    000004 000000              96          ZERO        4,0
   000034    0 00001 4775 00            97          LDP7        1,,PR0              Pointer to OP2
                                        98  * Subtract OP2 (possible converted in TDATE) from OP1
   000035                               99  SUB_DATE_DATE   NULL
   000035    0 00000 4765 00           100          LDP6        0,,PR0              Pointer to OP1
   000036 (0)000037 6170 00            101          TOV         *+1                 Reset overflow
   000037    0 000 0 0 100 2035 00     102          SB2D        (1),(1)
   000040    7 00000 0 1 1 00 20       103          NDSC4       0,0,16,LS,,PR7      OP2
   000041    6 00000 0 1 1 00 20       104          NDSC4       0,0,16,LS,,PR6      OP1 (and result)
   000042  X 000000 6170 00            105          TOV         X66_AALT
 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             5    BMAP - B00     
   000043  X 000000 7100 00            106          TRA         X66_ARET            Return

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             6    BMAP - B00     
                                       107          EJECT
                                       108  *F* NAME:   XUD$CMPR_DATES
                                       109  *,* CALL:   CALL XUD$CMPR_DATES(RESULT,DATE1,DATE2)
                                       110  *,* INPUT:  DATE1 - The first operand to compare.
                                       111  *,*         DATE2 - The second operand to compare.
                                       112  *,* OUTPUT: RESULT - A signed integer value representing the result.
                                       113  *,*            -1 indicates DATE1 < DATE2
                                       114  *,*             0 indicates DATE1 = DATE2
                                       115  *,*             1 indicates DATE1 > DATE2
                                       116  *,* DESCRIPTION:
                                       117  *,*         Two dates are compared numerically, and a result is
                                       118  *,*         returned indicating whether the first operand is less
                                       119  *,*         than, equal to, or greater than the second operand.
   000044                              120  XUD$CMPR_DATES  NULL
   000044    0 00001 4765 00           121          LDP6        1,,PR0              Pointer to DATE1
   000045    0 00002 4775 00           122          LDP7        2,,PR0              Pointer to DATE2
   000046    0 000 0 0 100 3035 00     123          CMPN        (1),(1)             Compare the operands
   000047    7 00000 0 1 1 00 20       124          NDSC4       0,0,16,LS,,PR7      DATE2
   000050    6 00000 0 1 1 00 20       125          NDSC4       0,0,16,LS,,PR6      DATE1
   000051 (0)000055 6054 00            126          TPNZ        R_GT                Greater than
   000052 (0)000057 6000 00            127          TZE         R_EQ                Equal to
   000053    000001 3360 07            128          LCQ         1,DL                Less than
   000054 (0)000060 7100 00            129          TRA         SET_R
   000055                              130  R_GT    NULL
   000055    000001 2360 07            131          LDQ         1,DL
   000056 (0)000060 7100 00            132          TRA         SET_R
   000057                              133  R_EQ    NULL
   000057    000000 2360 07            134          LDQ         0,DL
   000060                              135  SET_R   NULL
   000060    0 00000 4755 00           136          LDP5        0,,PR0              Pointer to result
   000061    5 00000 7561 00           137          STQ         0,,PR5              Save the result
   000062    000001 7100 11            138          TRA         1,X1                Return

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             7    BMAP - B00     
                                       139          EJECT
                                       140  *F* NAME:   XUD$FROM_DATE
                                       141  *,* CALL:   CALL XUD$FROM_DATE(DATE,DAYS,TICS)
                                       142  *,* INPUT:  DATE - A DATE/TIME doubleword.
                                       143  *,* OUTPUT: DAYS - SBIN word.  Number of days in DATE
                                       144  *,*         TICS - SBIN word.  Number of tics MOD day.
                                       145  *,* DESCRIPTION:
                                       146  *,*     The DATE passed is divied up into the number of tics
                                       147  *,*     within the day, and the number of days.  That is
                                       148  *,*     divide a date by the number of tics in a day, and
                                       149  *,*     return the quotient in DAYS and the remainder in TICS.
                                       150  *
   000063                              151  XUD$FROM_DATE   NULL
   000063  X 000000 7000 00            152          TSX         X0,X66_AUTO_0
   000064    000006 000000             153          ZERO        4+2,0
                                       154  *
   000065    0 00000 4755 00           155          LDP5        0,,PR0              Pointer to DATE
   000066    0 00001 4765 00           156          LDP6        1,,PR0              Pointer to DAYS
   000067    0 00002 4775 00           157          LDP7        2,,PR0              Pointer to TICS
                                       158  * Get number of days (truncate)
   000070    0 100 0 0 100 2274 00     159          DV3D        ,(1),(1)
   000071 (0)000137 0 1 1 00 20        160          NDSC4       TICSINDAY,0,16,LS
   000072    5 00000 0 1 1 00 20       161          NDSC4       0,0,16,LS,,PR5
   000073    2 00004 0 1 1 00 20       162          NDSC4       TDATE,0,16,LS,,PR2
                                       163  * Convert number of days to integer and return it.
   000074    000 100 3055 00           164          DTB         (1),(1)
   000075    2 00004 0 1 1 00 20       165          NDSC4       TDATE,0,16,LS,,PR2  Decimal version of days
   000076    6 00000 0 0 0 00 04       166          NDSC9       0,0,4,,,PR6         DAYS
                                       167  * Figure out number of tics in TDATE
   000077    0 000 0 0 100 2064 00     168          MP2D        ,(1)
   000100 (0)000137 0 1 1 00 20        169          NDSC4       TICSINDAY,0,16,LS
   000101    2 00004 0 1 1 00 20       170          NDSC4       TDATE,0,16,LS,,PR2  Trunced number of days
                                       171  * Number of tics lost due to truncation
   000102    0 100 0 0 100 2235 00     172          SB3D        (1),(1),(1)
   000103    2 00004 0 1 1 00 20       173          NDSC4       TDATE,0,16,LS,,PR2  Subtract truncated date
   000104    5 00000 0 1 1 00 20       174          NDSC4       0,0,16,LS,,PR5      From original date
   000105    2 00004 0 1 1 00 20       175          NDSC4       TDATE,0,16,LS,,PR2  Yeilding result
 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             8    BMAP - B00     
                                       176  * Convert number of tics to integer and return it.
   000106    000 100 3055 00           177          DTB         (1),(1)
   000107    2 00004 0 1 1 00 20       178          NDSC4       TDATE,0,16,LS,,PR2  Decimal version of tics
   000110    7 00000 0 0 0 00 04       179          NDSC9       0,0,4,,,PR7         TICS
                                       180  *
   000111  X 000000 7100 00            181          TRA         X66_ARET            Return

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             9    BMAP - B00     
                                       182          EJECT
                                       183  *F* NAME:   ZJD$TO_DATE
                                       184  *,* CALL:   CALL XUD$TO_DATE(DAYS,TICS,DATE) ALTRET
                                       185  *,* INPUT:  DAYS - SBIN word.  Number of days.
                                       186  *,*         TICS - SBIN word.  Number of additional tics.
                                       187  *,* OUTPUT: DATE - A DATE/TIME doubleword.
                                       188  *,* DESCRIPTION:
                                       189  *,*     The DAYS and TICS are combined to form a valid DATE/TIME
                                       190  *,*     datatype whose resolution is tics.  That is multiply
                                       191  *,*     DATE times number of tics in a day, add TICS and return
                                       192  *,*     the result in DATE as a valid date/time number.
                                       193  *,*
                                       194  *,*     This routine will ALTRET on an overflow condition.
                                       195  *
   000112                              196  XUD$TO_DATE     NULL
   000112  X 000000 7000 00            197          TSX         X0,X66_AUTO_0
   000113    000006 000000             198          ZERO        4+2,0               AUTO+TDATE
                                       199  *
   000114    0 00000 4755 00           200          LDP5        0,,PR0              Pointer to DAYS
   000115    0 00001 4765 00           201          LDP6        1,,PR0              Pointer to TICS
   000116    0 00002 4775 00           202          LDP7        2,,PR0              Pointer to DATE
                                       203  * Convert TICSINDAY to integer.
   000117    000 100 3054 00           204          DTB         ,(1)
   000120 (0)000137 0 1 1 00 20        205          NDSC4       TICSINDAY,0,16,LS
   000121    2 00004 0 0 0 00 10       206          NDSC9       TDATE,0,8,,,PR2     Into doubleword
                                       207  * Change DAYS into number of tics
   000122    5 00000 2361 00           208          LDQ         0,,PR5              DAYS into Q
   000123    2 00005 4021 00           209          MPY         TDATE+1,,PR2        Into number of ticsA
   000124    2 00004 7571 00           210          STAQ        TDATE,,PR2
                                       211  * Get TICS into double-word integer.
   000125    6 00000 2351 00           212          LDA         0,,PR6              Get TICS in A
   000126    000044 7330 00            213          LRS         36                  Shift it into AQ
                                       214  * Add DAYS in tics to TICS
   000127    2 00004 0771 00           215          ADAQ        TDATE,,PR2          Add doubleword
   000130    2 00004 7571 00           216          STAQ        TDATE,,PR2          Save answer in memory.
                                       217  * Convert answer to DATE/TIME format and return it.
   000131 (0)000132 6170 00            218          TOV         *+1                 Reset overflow
 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             10   BMAP - B00     
   000132    0 000 100 3015 00         219          BTD         (1),(1)
   000133    2 00004 0 0 0 00 10       220          NDSC9       TDATE,0,8,,,PR2     Doubleword sbin
   000134    7 00000 0 1 1 00 20       221          NDSC4       0,0,16,LS,,PR7      Into result
   000135  X 000000 6170 00            222          TOV         X66_AALT
                                       223  *
   000136  X 000000 7100 00            224          TRA         X66_ARET            Return

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI                                                             11   BMAP - B00     
                                       225          EJECT
                                       226  * Constant definitions
   000137    300000000000              227  TICSINDAY EDEC      16P+8640000        TICS PER DAY
   000140    010144000000
                                       228          END

  CONTROL SECTION TABLE

   0 CODE   EVEN  000141
   1 RODATA EVEN  000000 LITERALS

 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI  SYMBOL TABLE                                               12   BMAP - B00     
 01101000 000000000013 ADD_DATE_DATE   54       *61
 41000000 000000000001 LS             *29        51        65        66        89       103       104
                                      124       125       160       161       162       165       169
                                      170       173       174       175       178       205       221
 41000000 000000000000 PR0            *23        48        59        62        86        97       100
                                      121       122       136       155       156       157       200
                                      201       202
 41000000 000000000002 PR2            *24        51        53        89        91       162       165
                                      170       173       175       178       206       209       210
                                      215       216       220
 41000000 000000000005 PR5            *25       137       161       174       208
 41000000 000000000006 PR6            *26        66       104       125       166       212
 41000000 000000000007 PR7            *27        50        65        88       103       124       179
                                      221
 01101000 000000000057 R_EQ           127      *133
 01101000 000000000055 R_GT           126      *130
 01101000 000000000060 SET_R          129       132      *135
 01101000 000000000035 SUB_DATE_DATE   92       *99
 41000000 000000000004 TDATE          *43        51        53        89        91       162       165
                                      170       173       175       178       206       209       210
                                      215       216       220
 01101000 000000000137 TICSINDAY      160       169       205      *227
 41000000 000000000000 X0             *28        45        57        83        95       152       197
 03201002 000000000000 X66_AALT       *21        67       105       222
 03201001 000000000000 X66_ARET       *20        68       106       181       224
 03201000 000000000000 X66_AUTO_0     *19        45        57        83        95       152       197
 12101000 000000000010 XUD$ADD_DATE_DATE         11       *56
 12101000 000000000000 XUD$ADD_DATE_TICS         12       *44
 12101000 000000000044 XUD$CMPR_DATES            15      *120
 12101000 000000000063 XUD$FROM_DATE   16      *151
 12101000 000000000032 XUD$SUB_DATE_DATE         13       *94
 12101000 000000000022 XUD$SUB_DATE_TICS         14       *82
 12101000 000000000112 XUD$TO_DATE     17      *196

      24 SYMBOLS

       0 MACROS
 09:11 07/30/97  FILE=XUD$DATE_ARITH.:E05TSI  SYMBOL TABLE                                               13   BMAP - B00     

    SYMBOL SPACE USED   473 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   456
 STATEMENTS PROCESSED   155
         ELAPSED TIME  0:03.52
             CPU TIME     1.68 SEC.
        ASSEMBLY RATE  5536 STATEMENTS/CPU MIN.

      NO ERRORS

