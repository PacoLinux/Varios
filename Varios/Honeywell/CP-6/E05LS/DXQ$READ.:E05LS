VERSION E05

 15:12 07/29/97  FILE=DXQ$READ.:E05TSI                                                                   1    BMAP - B00     
                                         1  *M* DXQ$READ - MINIQ READ/WRITE ROUTINES
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  *    NAME:  DCQ$READ
                                         8  *    CALL:  CALL DCQ$READ(BUF$,MSG_LENGTH) ALTRET(DEVICE_ERROR)
                                         9  *    INPUT:  BUF$     POINTER TO THE INPUT BUFFER
                                        10  *            MSG_LENGTH   SIZE OF INPUT BUFFER
                                        11  *    OUTPUT: MSG_LENGTH   # OF BYTES READ
                                        12  *    DESCRIPTION:  DCQ$READ READS FROM INPUT DEVICE INTO BUFFER.
                                        13  *                  THE INPUT IS ECHOED IF IN_DEV IS OTHER THAN
                                        14  *                  'ME'
                                        15           ENTDEF   DDQ$READ
                                        16           ENTREF   X66_AUTO_2
                                        17           ENTREF   X66_AALT
                                        18           ENTREF   X66_ARET
                                        19           SYMREF   DIS$
                                        20           SYMREF   MINIQ$
                                        21           SYMREF   DCTX_ME
                                        22           SYMREF   DCTX_MT           FIRST TAPE UNIT & PO TAPE
                                        23           SYMREF   DCTX_CR           CARD READER
                                        24           SYMREF   DCTX_NO           NULL DEVICE
                                        25           SYMREF   IN_DEV            CURRENT INPUT DEVICE
             000000000002               26  AUTO     BOOL     2
             000000020001               27  MINIQENT BOOL     20001
             000000000000               28  PR0      EQU      0
             000000000001               29  PARG1    EQU      1
             000000000003               30  PARG2    EQU      3
             000000000004               31  PR4      EQU      4
             000000000005               32  PR5      EQU      5
             000000000006               33  PR6      EQU      6
             000000000007               34  PR7      EQU      7
             000000000003               35  PARM1    EQU      3                OFFSET IN AUTO FRAME
             000000000004               36  PARM2    EQU      4                OFFSET IN AUTO FRAME
             000000000005               37  SAVE1    EQU      5                OFFSET IN AUTO FRAME
 15:12 07/29/97  FILE=DXQ$READ.:E05TSI                                                                   2    BMAP - B00     
             000000000006               38  SAVE2    EQU      6                OFFSET IN AUTO FRAME
             000000000006               39  MAXAUTO  EQU      SAVE2            MAXIMUM OFFSET IN AUTO FRAME
                                        40  *
 0 000000                               41           USE     DDQ$READ,1
          (0)000000000000               42  DDQ$READ EQU      *
   000000  X 000000 7000 00             43           TSX0     X66_AUTO_2
   000001    000010 000002              44           ZERO     MAXAUTO/2*2+2,2     # AUTO CELLS, 2 ARGUMENTS
   000002    2 00003 4715 00            45           LDP      PARG1,PARM1,,AUTO POINTER TO BUF$
   000003    2 00004 4735 00            46           LDP      PARG2,PARM2,,AUTO GET POINTER TO MSG_LENGTH
   000004  X 000000 4774 00             47           LDP7     DIS$              DELTA'S ISR
   000005  X 000000 4764 00             48           LDP6     MINIQ$            MINIQ'S ISR
   000006    3 00000 2361 00            49           LDQ      0,,PARG2          GET SIZE INPUT
   000007  X 000000 2350 00             50           LDA      IN_DEV            GET INPUT DEVICE
   000010  X 000000 1150 00             51           CMPA     DCTX_CR           CR?
   000011    000005 6010 04             52           TNZ      5,IC              NO - CONTINUE
   000012    000120 1160 07             53           CMPQ     80,DL             YES - TOO BIG?
   000013    000003 6044 04             54           TMOZ     3,IC              NO
   000014    000120 2360 07             55           LDQ      80,DL             YES - TRUNCATE IT
   000015    3 00000 7561 00            56           STQ      0,,PARG2          ..
   000016    000002 7720 00             57           QRL      2                  IN WORDS
   000017    000006 7360 00             58           QLS      6                 IN BITS 18-29
   000020    2 00005 7561 00            59           STQ      SAVE1,,AUTO       REMEMBER IT
   000021    1 00000 2351 00            60           LDA      0,,PARG1          PTR TO BUFFER
   000022  X 000000 1750 00             61           SBA      DIS$              GET OFFSET ALONE
   000023    2 00005 2751 00            62           ORA      SAVE1,,AUTO       WHERE AARDVARK WANTS IT
   000024    000000 2230 03             63           LDX3     0,DU              FC FOR READ (OC OR CR)
   000025  X 000000 2360 00             64           LDQ      IN_DEV            CURRENT INPUT DEVICE
   000026  X 000000 1160 00             65           CMPQ     DCTX_MT           IS IT TAPE ?
   000027    000002 6040 04             66           TMI      2,IC              NO - CONTINUE
   000030    000002 2230 03             67           LDX3     2,DU              YES - FC FOR READ TAPE ASCII
   000031 (0)000040 2360 00             68           LDQ      README            GET 'R ME' TEXT
   000032    000000 7560 01             69           STQ      0,AU               & PUT IT INTO BUFFER
   000033  X 000000 7240 00             70           LXL4     IN_DEV            DCTX
   000034    6 20001 7071 00            71           TSX7     MINIQENT,,PR6
   000035  X 000000 7100 00             72           TRA      X66_AALT            ALTRET IF CR ERROR
          (0)000000000036               73  RET      EQU      *
   000036    000000 0114 00             74           CCAC                       CLEAR CACHE AFTER READ
 15:12 07/29/97  FILE=DXQ$READ.:E05TSI                                                                   3    BMAP - B00     
   000037  X 000000 7100 00             75           TRA      X66_ARET
                                        76  *
   000040    122040115105               77  README   ASCII    1,R ME            'R ME'

 15:12 07/29/97  FILE=DXQ$READ.:E05TSI                                                                   4    BMAP - B00     
                                        78           EJECT
                                        79           ENTDEF   DXQ$WRITE
                                        80           ENTDEF   DXQ$WRTOF
                                        81           ENTDEF   DXQ$WRTPI
                                        82           SYMREF   OUT_DEV           CURRENT OUTPUT DEVICE
                                        83  *
          (0)000000000041               84  DXQ$WRITE EQU     *
   000041    0 00000 4715 00            85           LDP      PARG1,0,,PR0
   000042    0 00001 4735 00            86           LDP      PARG2,1,,PR0
   000043    000001 2230 03             87           LDX3     1,DU              FC FOR LP (PRINT, SLEW 1)
   000044 (0)000063 7100 00             88           TRA      SETUP
          (0)000000000045               89  DXQ$WRTPI EQU     *
   000045    0 00000 4715 00            90           LDP      PARG1,0,,PR0
   000046    0 00001 4735 00            91           LDP      PARG2,1,,PR0
   000047    000000 2230 03             92           LDX3     0,DU              FC FOR PI (DON'T REALLY CARE)
   000050    777777 2350 07             93           LDA      -1,DL             OUTPUT DEVICE IS PATCH FILE
   000051    3 00000 2361 00            94           LDQ      0,,PARG2          GET SIZE (BYTES)
   000052    000003 0360 07             95           ADLQ     3,DL               MAKE INTO
   000053    000002 7720 00             96           QRL      2                   WORDS
   000054    000062 1160 07             97           CMPQ     50,DL             TOO BIG?
   000055 (0)000076 6044 00             98           TMOZ     GOTFC              NO
   000056    000062 2360 07             99           LDQ      50,DL              YES - TRUNCATE IT
   000057 (0)000076 7100 00            100           TRA      GOTFC
          (0)000000000060              101  DXQ$WRTOF EQU     *
   000060    0 00000 4715 00           102           LDP      PARG1,0,,PR0
   000061    0 00001 4735 00           103           LDP      PARG2,1,,PR0
   000062    000003 2230 03            104           LDX3     3,DU              FC FOR LP (PRINT, SLEW TO TOP OF FORM)
          (0)000000000063              105  SETUP    EQU      *
   000063  X 000000 2350 00            106           LDA      OUT_DEV           WHERE TO OUTPUT ON
   000064  X 000000 1150 00            107           CMPA     DCTX_NO           NULL?
   000065    000001 6000 11            108           TZE      1,X1              YES - SPLIT
   000066    3 00000 2361 00           109           LDQ      0,,PARG2          GET SIZE (WORDS)
   000067  X 000000 1150 00            110           CMPA     DCTX_ME           ME?
   000070    000003 6010 04            111           TNZ      3,IC              NO - MUST BE LP
   000071    000002 2230 03            112           LDX3     2,DU              YES - GET FC FOR CONSOLE
   000072 (0)000076 7100 00            113           TRA      GOTFC             CONTINUE
   000073    000041 1160 07            114           CMPQ     33,DL             TOO BIG?
 15:12 07/29/97  FILE=DXQ$READ.:E05TSI                                                                   5    BMAP - B00     
   000074 (0)000076 6044 00            115           TMOZ     GOTFC             NO
   000075    000041 2360 07            116           LDQ      33,DL             YES - TRUNCATE IT
          (0)000000000076              117  GOTFC    EQU      *
   000076    000000 6240 05            118           EAX4     0,AL              GET OUTPUT DEVICE
   000077    1 00000 2351 00           119           LDA      0,,PARG1          GET PTR (OFFSET IS IN LH)
   000100    000030 7360 00            120           QLS      24
   000101    000022 7710 00            121           ARL      18
   000102    000022 7370 00            122           LLS      18                PUT WORD COUNT INTO A WITH ADDR
   000103  X 000000 4774 00            123           LDP7     DIS$              DELTA'S ISR
   000104  X 000000 4764 00            124           LDP6     MINIQ$            MINIQ'S ISR
   000105    6 20001 7071 00           125           TSX7     MINIQENT,,PR6     GO DO IT
   000106    000000 0110 00            126           NOP                        IGNORE ERRORS
   000107    000001 7100 11            127           TRA      1,X1              RETURN
                                       128           END

  CONTROL SECTION TABLE

   0 CODE   EVEN  000110 DDQ$READ
   1 RODATA EVEN  000000 LITERALS

 15:12 07/29/97  FILE=DXQ$READ.:E05TSI        SYMBOL TABLE                                               6    BMAP - B00     
 41000000 000000000002 AUTO           *26        45        46        59        62
 03301004 000000000000 DCTX_CR        *23        51
 03301002 000000000000 DCTX_ME        *21       110
 03301003 000000000000 DCTX_MT        *22        65
 03301005 000000000000 DCTX_NO        *24       107
 52101000 000000000000 DDQ$READ        15       *42
 03301000 000000000000 DIS$           *19        47        61       123
 52101000 000000000041 DXQ$WRITE       79       *84
 52101000 000000000060 DXQ$WRTOF       80      *101
 52101000 000000000045 DXQ$WRTPI       81       *89
 41101000 000000000076 GOTFC           98       100       113       115      *117
 03301006 000000000000 IN_DEV         *25        50        64        70
 41000000 000000000006 MAXAUTO        *39        44
 03301001 000000000000 MINIQ$         *20        48       124
 41000000 000000020001 MINIQENT       *27        71       125
 03301007 000000000000 OUT_DEV        *82       106
 41000000 000000000001 PARG1          *29        45        60        85        90       102       119
 41000000 000000000003 PARG2          *30        46        49        56        86        91        94
                                      103       109
 41000000 000000000003 PARM1          *35        45
 41000000 000000000004 PARM2          *36        46
 41000000 000000000000 PR0            *28        85        86        90        91       102       103
 40000000 000000000004 PR4            *31
 40000000 000000000005 PR5            *32
 41000000 000000000006 PR6            *33        71       125
 40000000 000000000007 PR7            *34
 01101000 000000000040 README          68       *77
 40101000 000000000036 RET            *73
 41000000 000000000005 SAVE1          *37        59        62
 41000000 000000000006 SAVE2          *38        39
 41101000 000000000063 SETUP           88      *105
 03201001 000000000000 X66_AALT       *17        72
 03201002 000000000000 X66_ARET       *18        75
 03201000 000000000000 X66_AUTO_2     *16        43

      33 SYMBOLS

 15:12 07/29/97  FILE=DXQ$READ.:E05TSI        SYMBOL TABLE                                               7    BMAP - B00     
       0 MACROS

    SYMBOL SPACE USED   434 WORDS
     MACRO SPACE USED     0 WORDS
   INPUT RECORDS READ   256
 STATEMENTS PROCESSED   134
         ELAPSED TIME  0:01.44
             CPU TIME     1.10 SEC.
        ASSEMBLY RATE  7309 STATEMENTS/CPU MIN.

      NO ERRORS

