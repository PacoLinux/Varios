VERSION E05

PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:1    
        1        1        /*M*    CPX$CONTEXT5    subroutine which checks for context errors for IBEX   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*    AND,DMC,IPC,IND=3,CTI=6,ECU=3,DCI=3,DTI=3                             */
        8        8        /*P*    NAME: CONTEXT5
        9        9                PURPOSE: To check for context errors for IBEX                         */
       10       10        /******************************************************************************/
       11       11        CPX$CONTEXT5:
       12       12                PROC (P_PARAM);
       13       13        /***** include files *****/
       14       14          %INCLUDE CP_6;
       15       95          %INCLUDE CP_MACROS_C;
       16      847          %INCLUDE CP_SUBS_C;
       17     1764          %INCLUDE CP_PERR_C;
       18     2102          %INCLUDE XU_MACRO_C;
       19     5208          %INCLUDE XU_SUBS_C;
       20     5300        /***** fpts *****/
       21     5301          %PARSE$PARAM (NAME=P_PARAM);
       22     5382          %PARSE$SYM (NAME=P$S,STCLASS=BASED);
       23     5420          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
       24     5465          %U$PARAM (NAME=U$PARAM,STCLASS="BASED(P_PARAM.USER$)");
       25     5481          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
       26     5500        /***** external routines *****/
       27     5501    1   DCL CXP$POSTERR ENTRY(5);
       28     5502    1   DCL CXX$DECBIN ENTRY(2) ALTRET;
       29     5503    1   DCL CPX$OCTBIN ENTRY(2) ALTRET;
       30     5504        /***** declarations *****/
       31     5505    1   DCL PTR$ PTR AUTO;
       32     5506    1   DCL PTR1$ PTR AUTO;
       33     5507    1   DCL VALUE SBIN WORD AUTO;
       34     5508    1   DCL INDX SBIN WORD AUTO;
       35     5509        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:2    
       36     5510        /***** error msgs *****/
       37     5511        %ERR_CODE (NAME=E_BDCVAL,MID#=CPX$IBEXMID,CODE#=E$BDCVAL,STCLASS=CONSTANT);
       38     5531        %ERR_CODE (NAME=E_BOCVAL,MID#=CPX$IBEXMID,CODE#=E$BOCVAL,STCLASS=CONSTANT);
       39     5551        %ERR_CODE (NAME=E_XMETOOLNG,MID#=CPX$IBEXMID,CODE#=E$XMETOOLNG,STCLASS=CONSTANT);
       40     5571        /*E*    ERROR: CPX-E$XMETOOLNG-0
       41     5572                MESSAGE: Message exceeded 92 characters; not sent.
       42     5573        */
       43     5574        %ERR_CODE (NAME=E_XPATOOLNG,MID#=CPX$IBEXMID,CODE#=E$XPATOOLNG,STCLASS=CONSTANT);
       44     5594        /*E*    ERROR: CPX-E$XPATOOLNG-0
       45     5595                MESSAGE: Password must be 8 chars or less.
       46     5596        */
       47     5597        %ERR_CODE (NAME = E_XPLWIDTH,MID#=CPX$IBEXMID,CODE#=E$XPLWIDTH,STCLASS=CONSTANT);
       48     5617        /*E*    ERROR: CPX-E$XPLWIDTH-0
       49     5618                MESSAGE: Platen width must be 508 or less.
       50     5619        */
       51     5620        %ERR_CODE (NAME=E_XPLLENGTH,MID#=CPX$IBEXMID,CODE#=E$XPLLENGTH,STCLASS=CONSTANT);
       52     5640        /*E*    ERROR: CPX-E$XPLLENGTH-0
       53     5641                MESSAGE: Platen length must be 254 or less.
       54     5642        */
       55     5643        %ERR_CODE (NAME=E_XPLLIMBO,MID#=CPX$IBEXMID,CODE#=E$XPLLIMBO,STCLASS=CONSTANT);
       56     5663        /*E*    ERROR: CPX-E$XPLLIMBO-0
       57     5664                MESSAGE: Platen limbo must be 254 or less.
       58     5665        */
       59     5666        %ERR_CODE (NAME=E_XPL1STLINE,MID#=CPX$IBEXMID,CODE#=E$XPL1STLINE,STCLASS=CONSTANT);
       60     5686        /*E*    ERROR: CPX-E$XPL1STLINE-0
       61     5687                MESSAGE: Platen firstline must be 254 or less.
       62     5688        */
       63     5689        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:3    
       64     5690    1   CPX$LOCATE: ENTRY (P_PARAM);
       65     5691    1           RETURN;
       66     5692             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:4    
       67     5693    1   CPX$MESSAGE: ENTRY (P_PARAM);
       68     5694        /*
       69     5695            ***** Strip off any trailing blanks ...
       70     5696        */
       71     5697    1           INDX = P_PARAM.OUT$ -> P$S.COUNT -1;
       72     5698    2           DO WHILE (INDX > 0 AND SUBSTR(P_PARAM.OUT$ -> P$S.TEXT,INDX,1) =' ');
       73     5699    2              INDX = INDX -1;
       74     5700    2           END;
       75     5701    1           P_PARAM.OUT$ -> P$S.COUNT = INDX + 1;
       76     5702    1           IF P_PARAM.OUT$ -> P$S.COUNT > 92
       77     5703    1           THEN
       78     5704    2              DO;
       79     5705    2                 P_PARAM.OUT$->P$S.CPOS = P_PARAM.OUT$->P$S.CPOS+92;
       80     5706    2                 CALL POSTERR (E_XMETOOLNG);
       81     5707    2              END;
       82     5708    1           RETURN;
       83     5709             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:5    
       84     5710    1   CPX$PASSWORD: ENTRY (P_PARAM);
       85     5711    1           IF P_PARAM.OUT$ -> P$S.COUNT > 8
       86     5712    1           THEN
       87     5713    1              CALL POSTERR (E_XPATOOLNG);
       88     5714    1           RETURN;
       89     5715             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:6    
       90     5716    1   CPX$PLATEN: ENTRY (P_PARAM);
       91     5717    1           PTR$ = P_PARAM.OUT$;
       92     5718    1           CALL CXX$DECBIN (PTR$ -> P$S.COUNT,VALUE) ALTRET(E_DECBIN);
       93     5719    2           DO CASE (PTR$ -> P$S.CODE);
       94     5720    2            CASE (PL_WIDTH);
       95     5721    2              IF VALUE > 508
       96     5722    2              THEN
       97     5723    2                 CALL POSTERR (E_XPLWIDTH);
       98     5724    2            CASE (PL_LENGTH);
       99     5725    2              IF VALUE > 254
      100     5726    2              THEN
      101     5727    2                 CALL POSTERR (E_XPLLENGTH);
      102     5728    2            CASE (PL_LIMBO);
      103     5729    2              IF VALUE > 254
      104     5730    2              THEN
      105     5731    2                 CALL POSTERR (E_XPLLIMBO);
      106     5732    2            CASE (PL_1STLINE);
      107     5733    2              IF VALUE > 254
      108     5734    2              THEN
      109     5735    2                 CALL POSTERR (E_XPL1STLINE);
      110     5736    2           END; /* do case ... end */
      111     5737    1           RETURN;
      112     5738             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:7    
      113     5739    1   CPX$PRINT: ENTRY (P_PARAM);
      114     5740    1           RETURN;
      115     5741    1   E_DECBIN:
      116     5742    1           CALL POSTERR (E_BDCVAL);
      117     5743    1           RETURN;
      118     5744        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:8    
      119     5745    1   POSTERR:   PROC(ERRCODE);
      120     5746    2   DCL ERRCODE BIT(36) ALIGNED;
      121     5747
      122     5748    2              CALL CXP$POSTERR (U$PARAM.ERRBUF$, P_PARAM.OUT$->P$S.CPOS, ERRCODE);
      123     5749    2              RETURN;
      124     5750    2      END POSTERR;
      125     5751    1   END CPX$CONTEXT5;

PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:9    
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPX$CONTEXT5.

   Procedure CPX$CONTEXT5 requires 137 words for executable code.
   Procedure CPX$CONTEXT5 requires 24 words of local(AUTO) storage.

    No errors detected in file CPX$CONTEXT5.:E05TSI    .

PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:10   

 Object Unit name= CPX$CONTEXT5                               File name= CPX$CONTEXT5.:E05TOU
 UTS= JUL 29 '97 12:08:23.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      8     10  CPX$CONTEXT5
    2   Proc  even  none   137    211  CPX$CONTEXT5
    3  RoData even  none     7      7  CPX$CONTEXT5

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  CPX$CONTEXT5
     2      3                  yes      Std        1  CPX$LOCATE
     2      6                  yes      Std        1  CPX$MESSAGE
     2     56                  yes      Std        1  CPX$PASSWORD
     2     73                  yes      Std        1  CPX$PLATEN
     2    162                  yes      Std        1  CPX$PRINT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 CXX$DECBIN
         yes           Std       5 CXP$POSTERR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:12   


        1        1        /*M*    CPX$CONTEXT5    subroutine which checks for context errors for IBEX   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*    AND,DMC,IPC,IND=3,CTI=6,ECU=3,DCI=3,DTI=3                             */
        8        8        /*P*    NAME: CONTEXT5
        9        9                PURPOSE: To check for context errors for IBEX                         */
       10       10        /******************************************************************************/
       11       11        CPX$CONTEXT5:
       12       12                PROC (P_PARAM);

     12  2 000000   000000 700200 xent  CPX$CONTEXT5 TSX0  ! X66_AUTO_1
         2 000001   000030 000001                    ZERO    24,1
         2 000002   000005 710000 2                  TRA     s:5691

       13       13        /***** include files *****/
       14       14          %INCLUDE CP_6;
       15       95          %INCLUDE CP_MACROS_C;
       16      847          %INCLUDE CP_SUBS_C;
       17     1764          %INCLUDE CP_PERR_C;
       18     2102          %INCLUDE XU_MACRO_C;
       19     5208          %INCLUDE XU_SUBS_C;
       20     5300        /***** fpts *****/
       21     5301          %PARSE$PARAM (NAME=P_PARAM);
       22     5382          %PARSE$SYM (NAME=P$S,STCLASS=BASED);
       23     5420          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
       24     5465          %U$PARAM (NAME=U$PARAM,STCLASS="BASED(P_PARAM.USER$)");
       25     5481          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
       26     5500        /***** external routines *****/
       27     5501    1   DCL CXP$POSTERR ENTRY(5);
       28     5502    1   DCL CXX$DECBIN ENTRY(2) ALTRET;
       29     5503    1   DCL CPX$OCTBIN ENTRY(2) ALTRET;
       30     5504        /***** declarations *****/
       31     5505    1   DCL PTR$ PTR AUTO;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:13   
       32     5506    1   DCL PTR1$ PTR AUTO;
       33     5507    1   DCL VALUE SBIN WORD AUTO;
       34     5508    1   DCL INDX SBIN WORD AUTO;
       35     5509        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:14   
       36     5510        /***** error msgs *****/
       37     5511        %ERR_CODE (NAME=E_BDCVAL,MID#=CPX$IBEXMID,CODE#=E$BDCVAL,STCLASS=CONSTANT);
       38     5531        %ERR_CODE (NAME=E_BOCVAL,MID#=CPX$IBEXMID,CODE#=E$BOCVAL,STCLASS=CONSTANT);
       39     5551        %ERR_CODE (NAME=E_XMETOOLNG,MID#=CPX$IBEXMID,CODE#=E$XMETOOLNG,STCLASS=CONSTANT);
       40     5571        /*E*    ERROR: CPX-E$XMETOOLNG-0
       41     5572                MESSAGE: Message exceeded 92 characters; not sent.
       42     5573        */
       43     5574        %ERR_CODE (NAME=E_XPATOOLNG,MID#=CPX$IBEXMID,CODE#=E$XPATOOLNG,STCLASS=CONSTANT);
       44     5594        /*E*    ERROR: CPX-E$XPATOOLNG-0
       45     5595                MESSAGE: Password must be 8 chars or less.
       46     5596        */
       47     5597        %ERR_CODE (NAME = E_XPLWIDTH,MID#=CPX$IBEXMID,CODE#=E$XPLWIDTH,STCLASS=CONSTANT);
       48     5617        /*E*    ERROR: CPX-E$XPLWIDTH-0
       49     5618                MESSAGE: Platen width must be 508 or less.
       50     5619        */
       51     5620        %ERR_CODE (NAME=E_XPLLENGTH,MID#=CPX$IBEXMID,CODE#=E$XPLLENGTH,STCLASS=CONSTANT);
       52     5640        /*E*    ERROR: CPX-E$XPLLENGTH-0
       53     5641                MESSAGE: Platen length must be 254 or less.
       54     5642        */
       55     5643        %ERR_CODE (NAME=E_XPLLIMBO,MID#=CPX$IBEXMID,CODE#=E$XPLLIMBO,STCLASS=CONSTANT);
       56     5663        /*E*    ERROR: CPX-E$XPLLIMBO-0
       57     5664                MESSAGE: Platen limbo must be 254 or less.
       58     5665        */
       59     5666        %ERR_CODE (NAME=E_XPL1STLINE,MID#=CPX$IBEXMID,CODE#=E$XPL1STLINE,STCLASS=CONSTANT);
       60     5686        /*E*    ERROR: CPX-E$XPL1STLINE-0
       61     5687                MESSAGE: Platen firstline must be 254 or less.
       62     5688        */
       63     5689        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:15   
       64     5690    1   CPX$LOCATE: ENTRY (P_PARAM);

   5690  2 000003   000000 700200 xent  CPX$LOCATE   TSX0  ! X66_AUTO_1
         2 000004   000030 000001                    ZERO    24,1

       65     5691    1           RETURN;

   5691  2 000005   000000 702200 xent               TSX2  ! X66_ARET

       66     5692             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:16   
       67     5693    1   CPX$MESSAGE: ENTRY (P_PARAM);

   5693  2 000006   000000 700200 xent  CPX$MESSAGE  TSX0  ! X66_AUTO_1
         2 000007   000030 000001                    ZERO    24,1

       68     5694        /*
       69     5695            ***** Strip off any trailing blanks ...
       70     5696        */
       71     5697    1           INDX = P_PARAM.OUT$ -> P$S.COUNT -1;

   5697  2 000010   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000011   000002 471500                    LDP1    2,,PR0
         2 000012   100004 236100                    LDQ     4,,PR1
         2 000013   000033 772000                    QRL     27
         2 000014   000001 136007                    SBLQ    1,DL
         2 000015   200021 756100                    STQ     INDX,,AUTO

       72     5698    2           DO WHILE (INDX > 0 AND SUBSTR(P_PARAM.OUT$ -> P$S.TEXT,INDX,1) =' ');

   5698  2 000016   000021 710000 2                  TRA     s:5700

       73     5699    2              INDX = INDX -1;

   5699  2 000017   000001 336007                    LCQ     1,DL
         2 000020   200021 056100                    ASQ     INDX,,AUTO

       74     5700    2           END;

   5700  2 000021   200021 235100                    LDA     INDX,,AUTO
         2 000022   000033 604400 2                  TMOZ    s:5701
         2 000023   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000024   000002 471500                    LDP1    2,,PR0
         2 000025   100004 236100                    LDQ     4,,PR1
         2 000026   000033 772000                    QRL     27
         2 000027   040000 106505                    CMPC    fill='040'O
         2 000030   100004 200001                    ADSC9   4,A,PR1                  cn=1,n=1
         2 000031   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:17   
         2 000032   000017 600000 2                  TZE     s:5699

       75     5701    1           P_PARAM.OUT$ -> P$S.COUNT = INDX + 1;

   5701  2 000033   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000034   000002 471500                    LDP1    2,,PR0
         2 000035   200021 236100                    LDQ     INDX,,AUTO
         2 000036   000001 036007                    ADLQ    1,DL
         2 000037   000033 736000                    QLS     27
         2 000040   100004 552140                    STBQ    4,'40'O,PR1

       76     5702    1           IF P_PARAM.OUT$ -> P$S.COUNT > 92

   5702  2 000041   000002 471500                    LDP1    2,,PR0
         2 000042   100004 236100                    LDQ     4,,PR1
         2 000043   777000 376003                    ANQ     -512,DU
         2 000044   135000 116003                    CMPQ    47616,DU
         2 000045   000055 602000 2                  TNC     s:5708

       77     5703    1           THEN
       78     5704    2              DO;

       79     5705    2                 P_PARAM.OUT$->P$S.CPOS = P_PARAM.OUT$->P$S.CPOS+92;

   5705  2 000046   100002 235100                    LDA     2,,PR1
         2 000047   000134 035007                    ADLA    92,DL
         2 000050   100002 755100                    STA     2,,PR1

       80     5706    2                 CALL POSTERR (E_XMETOOLNG);

   5706  2 000051   000000 236000 3                  LDQ     0
         2 000052   200023 756100                    STQ     INDX+2,,AUTO
         2 000053   000172 701000 2                  TSX1    POSTERR
         2 000054   000000 011000                    NOP     0

       81     5707    2              END;

PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:18   
       82     5708    1           RETURN;

   5708  2 000055   000000 702200 xent               TSX2  ! X66_ARET

       83     5709             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:19   
       84     5710    1   CPX$PASSWORD: ENTRY (P_PARAM);

   5710  2 000056   000000 700200 xent  CPX$PASSWORD TSX0  ! X66_AUTO_1
         2 000057   000030 000001                    ZERO    24,1

       85     5711    1           IF P_PARAM.OUT$ -> P$S.COUNT > 8

   5711  2 000060   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000061   000002 471500                    LDP1    2,,PR0
         2 000062   100004 236100                    LDQ     4,,PR1
         2 000063   777000 376003                    ANQ     -512,DU
         2 000064   011000 116003                    CMPQ    4608,DU
         2 000065   000072 602000 2                  TNC     s:5714

       86     5712    1           THEN
       87     5713    1              CALL POSTERR (E_XPATOOLNG);

   5713  2 000066   000001 236000 3                  LDQ     1
         2 000067   200023 756100                    STQ     INDX+2,,AUTO
         2 000070   000172 701000 2                  TSX1    POSTERR
         2 000071   000000 011000                    NOP     0

       88     5714    1           RETURN;

   5714  2 000072   000000 702200 xent               TSX2  ! X66_ARET

       89     5715             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:20   
       90     5716    1   CPX$PLATEN: ENTRY (P_PARAM);

   5716  2 000073   000000 700200 xent  CPX$PLATEN   TSX0  ! X66_AUTO_1
         2 000074   000030 000001                    ZERO    24,1

       91     5717    1           PTR$ = P_PARAM.OUT$;

   5717  2 000075   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000076   000002 236100                    LDQ     2,,PR0
         2 000077   200016 756100                    STQ     PTR$,,AUTO

       92     5718    1           CALL CXX$DECBIN (PTR$ -> P$S.COUNT,VALUE) ALTRET(E_DECBIN);

   5718  2 000100   200020 631500                    EPPR1   VALUE,,AUTO
         2 000101   200025 451500                    STP1    @ERRCODE+2,,AUTO
         2 000102   000004 036003                    ADLQ    4,DU
         2 000103   200024 756100                    STQ     @ERRCODE+1,,AUTO
         2 000104   200024 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000105   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000106   000000 701000 xent               TSX1    CXX$DECBIN
         2 000107   000165 702000 2                  TSX2    E_DECBIN

       93     5719    2           DO CASE (PTR$ -> P$S.CODE);

   5719  2 000110   200016 470500                    LDP0    PTR$,,AUTO
         2 000111   000000 720100                    LXL0    0,,PR0
         2 000112   000005 100003                    CMPX0   5,DU
         2 000113   000115 602010 2                  TNC     s:5719+5,X0
         2 000114   000161 710000 2                  TRA     s:5737
         2 000115   000161 710000 2                  TRA     s:5737
         2 000116   000122 710000 2                  TRA     s:5721
         2 000117   000132 710000 2                  TRA     s:5725
         2 000120   000142 710000 2                  TRA     s:5729
         2 000121   000152 710000 2                  TRA     s:5733

       94     5720    2            CASE (PL_WIDTH);

PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:21   
       95     5721    2              IF VALUE > 508

   5721  2 000122   200020 235100                    LDA     VALUE,,AUTO
         2 000123   000774 115007                    CMPA    508,DL
         2 000124   000161 604400 2                  TMOZ    s:5737

       96     5722    2              THEN
       97     5723    2                 CALL POSTERR (E_XPLWIDTH);

   5723  2 000125   000002 236000 3                  LDQ     2
         2 000126   200023 756100                    STQ     INDX+2,,AUTO
         2 000127   000172 701000 2                  TSX1    POSTERR
         2 000130   000000 011000                    NOP     0
         2 000131   000161 710000 2                  TRA     s:5737

       98     5724    2            CASE (PL_LENGTH);

       99     5725    2              IF VALUE > 254

   5725  2 000132   200020 235100                    LDA     VALUE,,AUTO
         2 000133   000376 115007                    CMPA    254,DL
         2 000134   000161 604400 2                  TMOZ    s:5737

      100     5726    2              THEN
      101     5727    2                 CALL POSTERR (E_XPLLENGTH);

   5727  2 000135   000003 236000 3                  LDQ     3
         2 000136   200023 756100                    STQ     INDX+2,,AUTO
         2 000137   000172 701000 2                  TSX1    POSTERR
         2 000140   000000 011000                    NOP     0
         2 000141   000161 710000 2                  TRA     s:5737

      102     5728    2            CASE (PL_LIMBO);

      103     5729    2              IF VALUE > 254

   5729  2 000142   200020 235100                    LDA     VALUE,,AUTO
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:22   
         2 000143   000376 115007                    CMPA    254,DL
         2 000144   000161 604400 2                  TMOZ    s:5737

      104     5730    2              THEN
      105     5731    2                 CALL POSTERR (E_XPLLIMBO);

   5731  2 000145   000004 236000 3                  LDQ     4
         2 000146   200023 756100                    STQ     INDX+2,,AUTO
         2 000147   000172 701000 2                  TSX1    POSTERR
         2 000150   000000 011000                    NOP     0
         2 000151   000161 710000 2                  TRA     s:5737

      106     5732    2            CASE (PL_1STLINE);

      107     5733    2              IF VALUE > 254

   5733  2 000152   200020 235100                    LDA     VALUE,,AUTO
         2 000153   000376 115007                    CMPA    254,DL
         2 000154   000161 604400 2                  TMOZ    s:5737

      108     5734    2              THEN
      109     5735    2                 CALL POSTERR (E_XPL1STLINE);

   5735  2 000155   000005 236000 3                  LDQ     5
         2 000156   200023 756100                    STQ     INDX+2,,AUTO
         2 000157   000172 701000 2                  TSX1    POSTERR
         2 000160   000000 011000                    NOP     0

      110     5736    2           END; /* do case ... end */

      111     5737    1           RETURN;

   5737  2 000161   000000 702200 xent               TSX2  ! X66_ARET

      112     5738             %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:23   
      113     5739    1   CPX$PRINT: ENTRY (P_PARAM);

   5739  2 000162   000000 700200 xent  CPX$PRINT    TSX0  ! X66_AUTO_1
         2 000163   000030 000001                    ZERO    24,1

      114     5740    1           RETURN;

   5740  2 000164   000000 702200 xent               TSX2  ! X66_ARET

      115     5741    1   E_DECBIN:
      116     5742    1           CALL POSTERR (E_BDCVAL);

   5742  2 000165   000006 236000 3     E_DECBIN     LDQ     6
         2 000166   200023 756100                    STQ     INDX+2,,AUTO
         2 000167   000172 701000 2                  TSX1    POSTERR
         2 000170   000000 011000                    NOP     0

      117     5743    1           RETURN;

   5743  2 000171   000000 702200 xent               TSX2  ! X66_ARET

      118     5744        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:24   
      119     5745    1   POSTERR:   PROC(ERRCODE);

   5745  2 000172   200022 741300       POSTERR      STX1  ! INDX+1,,AUTO

      120     5746    2   DCL ERRCODE BIT(36) ALIGNED;
      121     5747
      122     5748    2              CALL CXP$POSTERR (U$PARAM.ERRBUF$, P_PARAM.OUT$->P$S.CPOS, ERRCODE);

   5748  2 000173   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000174   000006 471500                    LDP1    6,,PR0
         2 000175   000002 473500                    LDP3    2,,PR0
         2 000176   200023 236100                    LDQ     @ERRCODE,,AUTO
         2 000177   200026 756100                    STQ     @ERRCODE+3,,AUTO
         2 000200   300002 634500                    EPPR4   2,,PR3
         2 000201   200025 454500                    STP4    @ERRCODE+2,,AUTO
         2 000202   200024 451500                    STP1    @ERRCODE+1,,AUTO
         2 000203   200024 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000204   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000205   000000 701000 xent               TSX1    CXP$POSTERR
         2 000206   000000 011000                    NOP     0

      123     5749    2              RETURN;

   5749  2 000207   200022 221300                    LDX1  ! INDX+1,,AUTO
         2 000210   000001 702211                    TSX2  ! 1,X1
      124     5750    2      END POSTERR;
      125     5751    1   END CPX$CONTEXT5;

PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:25   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPX$CONTEXT5.
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:26   

 **** Variables and constants ****

  ****  Section 001 RoData CPX$CONTEXT5

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_BDCVAL                   2-0-0/w STRC        r     1 E_XMETOOLNG
     3-0-0/w STRC        r     1 E_XPATOOLNG                7-0-0/w STRC        r     1 E_XPL1STLINE
     5-0-0/w STRC        r     1 E_XPLLENGTH                6-0-0/w STRC        r     1 E_XPLLIMBO
     4-0-0/w STRC        r     1 E_XPLWIDTH

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    23-0-0/w PTR         r     1 @ERRCODE                   3-0-0/w PTR         r     1 @P_PARAM
    *0-0-0/w BIT         r     1 ERRCODE                   21-0-0/w SBIN        r     1 INDX
    16-0-0/w PTR         r     1 PTR$                      *0-0-0/w STRC(270)   r     1 P_PARAM
    20-0-0/w SBIN        r     1 VALUE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(153)   r     1 P$S                        0-0-0/w STRC(576)   r     1 U$PARAM


   Procedure CPX$CONTEXT5 requires 137 words for executable code.
   Procedure CPX$CONTEXT5 requires 24 words of local(AUTO) storage.

    No errors detected in file CPX$CONTEXT5.:E05TSI    .
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:27   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:28   
          MINI XREF LISTING

CXP$POSTERR
      5501**DCL-ENT  5748--CALL
CXX$DECBIN
      5502**DCL-ENT  5718--CALL
ERRCODE IN PROCEDURE POSTERR
      5746**DCL      5745--PROC     5748<>CALL
E_BDCVAL
      5524**DCL      5742<>CALL
E_DECBIN
      5742**LABEL    5718--CALLALT
E_XMETOOLNG
      5564**DCL      5706<>CALL
E_XPATOOLNG
      5587**DCL      5713<>CALL
E_XPL1STLINE
      5679**DCL      5735<>CALL
E_XPLLENGTH
      5633**DCL      5727<>CALL
E_XPLLIMBO
      5656**DCL      5731<>CALL
E_XPLWIDTH
      5610**DCL      5723<>CALL
INDX
      5508**DCL      5697<<ASSIGN   5698>>DOWHILE  5698>>DOWHILE  5699<<ASSIGN   5699>>ASSIGN   5701>>ASSIGN
P$S.CODE
      5395**DCL      5719>>DOCASE
P$S.COUNT
      5412**DCL      5415--IMP-SIZ  5697>>ASSIGN   5698>>DOWHILE  5701<<ASSIGN   5702>>IF       5711>>IF
      5718<>CALL
P$S.CPOS
      5404**DCL      5705<<ASSIGN   5705>>ASSIGN   5748<>CALL
P$S.TEXT
PL6.E3A0      #001=CPX$CONTEXT5 File=CPX$CONTEXT5.:E05TSI                        TUE 07/29/97 12:08 Page:29   
      5415**DCL      5698>>DOWHILE
POSTERR
      5745**PROC     5706--CALL     5713--CALL     5723--CALL     5727--CALL     5731--CALL     5735--CALL
      5742--CALL
PTR$
      5505**DCL      5717<<ASSIGN   5718>>CALL     5719>>DOCASE
P_PARAM
      5320**DCL        11--PROC     5690--ENTRY    5693--ENTRY    5710--ENTRY    5716--ENTRY    5739--ENTRY
P_PARAM.OUT$
      5350**DCL      5697>>ASSIGN   5698>>DOWHILE  5698>>DOWHILE  5701>>ASSIGN   5702>>IF       5705>>ASSIGN
      5705>>ASSIGN   5711>>IF       5717>>ASSIGN   5748>>CALL
P_PARAM.USER$
      5368**DCL      5466--IMP-PTR  5748>>CALL
U$PARAM.ERRBUF$
      5467**DCL      5748<>CALL
VALUE
      5507**DCL      5718<>CALL     5721>>IF       5725>>IF       5729>>IF       5733>>IF
