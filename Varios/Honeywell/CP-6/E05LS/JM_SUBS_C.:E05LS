

14:42 JUL 28 '97 JM_SUBS_C.:E05SI                                          1    
    1      /*M* STRING SUBSTITUTIONS FOR USE WITH THE BATCH SCHEDULER         */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* CRM=78,DFC */
    8      /**/
    9      /**/
   10      /**/
   11      /* EVENT QUEUE ENDACTION CODES */
   12      /**/
   13      %SUB JMEA_CSCG#=1/*CSCG*/;              /* Read CSCG                        */
   14
   15
   16
   17      /**/
   18      /* MISC SUBS */
   19      /**/
   20      %SUB JMMI_EVMX#=9/*EVMX*/;              /* Max entry in JM_EVQ              */
   21
   22
   23
   24      /**/
   25      /* JMC_CHAINS INDICES */
   26      /**/
   27      %SUB   JM_Q$FRE = 0;                    /* Free input file entries          */
   28      %SUB   JM_Q$WP  = 1;                    /* Waiting on partition             */
   29      %SUB   JM_Q$WR  = 2;                    /* Waiting for runafter time        */
   30      %SUB   JM_Q$DC  = 3;                    /* Waiting on dependancy counts     */
   31      %SUB   JM_Q$JD  = 4;                    /* Waiting on job id dependency     */
   32      %SUB   JM_Q$DP  = 5;                    /* Waiting for shared packset       */
   33      %SUB   JM_Q$P0  = 6;                    /* Priority 0                       */
   34      %SUB   JM_Q$P1  = 7;                    /* Priority 1                       */
   35      %SUB   JM_Q$P2  = 8;                    /* Priority 2                       */
   36      %SUB   JM_Q$P3  = 9;                    /* Priority 3                       */
   37      %SUB   JM_Q$P4  = 10;                   /* Priority 4                       */
14:42 JUL 28 '97 JM_SUBS_C.:E05SI                                          2    
   38      %SUB   JM_Q$P5  = 11;                   /* Priority 5                       */
   39      %SUB   JM_Q$P6  = 12;                   /* Priority 6                       */
   40      %SUB   JM_Q$P7  = 13;                   /* Priority 7                       */
   41      %SUB   JM_Q$P8  = 14;                   /* Priority 8                       */
   42      %SUB   JM_Q$P9  = 15;                   /* Priority 9                       */
   43      %SUB   JM_Q$P10 = 16;                   /* Priority 10                      */
   44      %SUB   JM_Q$P11 = 17;                   /* Priority 11                      */
   45      %SUB   JM_Q$P12 = 18;                   /* Priority 12                      */
   46      %SUB   JM_Q$P13 = 19;                   /* Priority 13                      */
   47      %SUB   JM_Q$P14 = 20;                   /* Priority 14                      */
   48      %SUB   JM_Q$P15 = 21;                   /* Priority 15                      */
   49      %SUB   JM_Q$RUN = 22;                   /* Running jobs                     */
   50      %SUB   JM_Q$LOCK= 23;                   /* Queue table lock                 */
   51
   52
   53
   54      /**/
   55      /* OC MESSAGE SUBS */
   56      /**/
   57      %SUB   JM_MSG$OK = 511;                 /* Whatever you said, i did it      */
   58      %SUB   JM_MSG$BADACCT = 1;              /* Job not owned by specified acct  */
   59      %SUB   JM_MSG$NOID = 2;                 /* Job is completed or not input    */
   60      %SUB   JM_MSG$BADKEY = 3;               /* Bad keyin                        */
   61      %SUB   JM_MSG$NOACC = 4;                /* No jobs exist for that account   */
   62      %SUB   JM_MSG$NODQ = 5;                 /* No jobs with that dq name        */
   63
   64
   65
   66      /**/
   67      /* RESOURCE TYPE INDICES FOR JM$IF.RRT */
   68      /**/
   69      %SUB   JM_RX$MEM = 0;                   /* Memory                           */
   70      %SUB   JM_RX$DP  = 1;                   /* Spindles                         */
   71      %SUB   JM_RX$MT  = 2;                   /* Tape drives                      */
   72      %SUB   JM_RX$XX  = 3;                   /* Other resources                  */
   73      %SUB   JM_RX$PR1 = 4;                   /* Pseudo-resource # 1              */
   74      %SUB   JM_RX$PR2 = 5;                   /* Pseudo-resource # 2              */
14:42 JUL 28 '97 JM_SUBS_C.:E05SI                                          3    
   75      %SUB   JM_RX$PR3 = 6;                   /* Pseudo-resource # 3              */
   76      %SUB   JM_RX$PR4 = 7;                   /* Pseudo-resource # 4              */
   77      %SUB   JM_RX$PR5 = 8;                   /* Pseudo-resource # 5              */
   78      %SUB   JM_RX$PR6 = 9;                   /* Pseudo-resource # 6              */
   79      %SUB   JM_RX$PR7 = 10;                  /* Pseudo-resource # 7              */
   80      %SUB   JM_RX$PR8 = 11;                  /* Pseudo-resource # 8              */
   81
   82
   83
   84      /**/
   85      /* RELATION CODES FOR JM$IF.JDID.RELATION */
   86      /**/
   87      %SUB   JM_LT = 0 /*Lt*/;                /* Less than                        */
   88      %SUB   JM_LE = 1 /*Le*/;                /* Less than or equal               */
   89      %SUB   JM_EQ = 2 /*Eq*/;                /* Equal                            */
   90      %SUB   JM_NE = 3 /*Ne*/;                /* Not equal                        */
   91      %SUB   JM_GE = 4 /*Ge*/;                /* Greater than or equal            */
   92      %SUB   JM_GT = 5 /*Gt*/;                /* Greater than                     */
   93
   94
   95
   96      /**/
   97      /* "Which type is it" codes for JM$IF.JDID.FOLLOW_TYPE */
   98      /**/
   99      %EQU   JM_FOLLOW_STEPCC = 0;            /* FOLLOW(name(STEPCC...))          */
  100      %EQU   JM_FOLLOW_OK = 1;                /* FOLLOW(name(OK))                 */
  101      %EQU   JM_FOLLOW_ERROR = 2;             /* FOLLOW(name(ERROR))              */
  102      %EQU   JM_FOLLOW_ABORT = 3;             /* FOLLOW(name(ABORT))              */
  103      %EQU   JM_FOLLOW_ACCOUNT = 4;           /* FOLLOW with no options:
  104                                                 FOLLOW all other jobs
  105                                                 from this account.               */

