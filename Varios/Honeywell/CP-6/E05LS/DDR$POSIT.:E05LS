VERSION E05

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:1    
        1        1        /*M* DDR$POSIT report position routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D* NAME:  DDR$POSIT
        9        9             CALL:  Call DDR$POSIT(IC,BUFBEGIN$,MSS,FSS) ALTRET(NO_ROOM)
       10       10             INPUT: IC is the IC value whose symbolic position is to
       11       11                    be output.
       12       12                    BUFBEGIN$ is a pointer to the beginning of the
       13       13                    character buffer.
       14       14                    MSS is the maximum number of characters to be placed
       15       15                    in the buffer.
       16       16             OUTPUT: FSS is the actual number of characters placed in
       17       17                    the buffer.
       18       18             DESCRIPTION: The position is computed and placed
       19       19                    in the buffer in the form:
       20       20                    PEDEF+.OFFSET :LINE,SUBSTATMENT,.OFFSET( LABEL ) <TYPE>
       21       21                    if the IC is not within procedure, then the position
       22       22                    is displayed relative to the nearest symdef.
       23       23                    The alternate return is taken if the final string
       24       24                    size (FSS) exceeds the maximum string size (MSS). */
       25       25                                                /**/
       26       26        DDR$POSIT: PROC(IC,BB$,MSS,FSS,PNO_UDEFS) ALTRET;
       27       27                                                /**/
       28       28    1   DCL IC SBIN ;
       29       29    1   DCL BB$ PTR;
       30       30    1   DCL MSS SBIN;
       31       31    1   DCL FSS SBIN;
       32       32    1   DCL PNO_UDEFS BIT(1) ALIGNED;           /* Set if not to search user defs */
       33       33    1   DCL NO_UDEFS BIT(1) ALIGNED;
       34       34    1   DCL I_SHOULD_RESET_SCHEMA BIT(1) ALIGNED;
       35       35    1   DCL BE$ PTR;
       36       36    1   DCL PNP$ PTR;
       37       37    1   DCL SNP$ PTR;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:2    
       38       38    1   DCL ST$ PTR;
       39       39    1   DCL TST$ PTR;
       40       40    1   DCL PRIM$ PTR;
       41       41    1   DCL LABEL$ PTR;
       42       42    1   DCL ENTRY$ PTR;
       43       43    1   DCL OFFSET SBIN;
       44       44    1   DCL LEASTOK SBIN;
       45       45    1   DCL SYM$ PTR;
       46       46    1   DCL TBUF CHAR(16);
       47       47    1   DCL TEMP SBIN;
       48       48    1   DCL NCARS SBIN;
       49       49    1   DCL SDEF BIT(1);
       50       50    1   DCL USYM$ PTR;
       51       51    1   DCL UVALUE UBIN;
       52       52    1   DCL TIC UBIN;
       53       53    1   DCL TTIC UBIN;
       54       54    1   DCL TNP SBIN;
       55       55    1   DCL SUBST UBIN;
       56       56    1   DCL UDFOUND BIT(1);
       57       57    1   DCL UPDATE BIT(1) ALIGNED;
       58       58    1   DCL SDFOUND BIT(1);
       59       59    1   DCL ST# UBIN;
       60       60    1   DCL SUBST# UBIN;
       61       61    1   DCL PRINT_OFFSET BIT(1) ALIGNED;
       62       62    1   DCL PRINT_LINE BIT(1) ALIGNED;
       63       63    1   DCL PRINT_TYPE BIT(1) ALIGNED;
       64       64    1   DCL GOTSTATEMENT BIT(1) ALIGNED;
       65       65    1   DCL TYPE UBIN;
       66       66    1   DCL COMPX UBIN;
       67       67        %INCLUDE B_STRINGS_C;
       68      196        %INCLUDE DD$BASED;
       69     1499        %TEXT$C (WIDTH="UBIN(18)");
       70     1504        %TEXT$C(NAME=TEXT9$C);
       71     1509        %ALL_ATTACH;
       72     1524        %INCLUDE DD_SUBS_C;
       73     1795        %INCLUDE B$OBJECT_C;
       74     5225        %B$EDEF;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:3    
       75     5295        %B$SDEF;
       76     5349        %B$EXST;
       77     5456        %B$INTNTRY;
       78     5514        %B$LBNTRY0;
       79     5550        %B$LBNTRY1;
       80     5577        %COMPILERIDSUBS;
       81     5593        %B$STTYPESUBS;
       82     5662        %B$STXTYPESUBS;
       83     5730        %MACRO STTYPE (T=T,C=C);
       84     5731              2 * UBIN BYTE UNAL INIT(C),
       85     5732              2 * UBIN BYTE UNAL INIT(LENGTHC(T)),
       86     5733              2 * CHAR(0) UNAL INIT(T),
       87     5734        %MEND;
       88     5735    1   DCL 1 STTY$PE BASED UNAL,
       89     5736    1         2 CODE UBIN BYTE UNAL,
       90     5737    1         2 SIZE UBIN BYTE UNAL,
       91     5738    1         2 TEXT CHAR(STTY$PE.SIZE) UNAL;
       92     5739    1   DCL 1 STTYPE CONSTANT,
       93     5740        %STTYPE (C=%S@NULL,T=%T@NULL);
       94     5745        %STTYPE (C=%S@ASSIGNMENT,T=%T@ASSIGNMENT);
       95     5750        %STTYPE (C=%S@CALL,T=%T@CALL);
       96     5755        %STTYPE (C=%S@MONITOR_CALL,T=%T@MONITOR_CALL);
       97     5760        %STTYPE (C=%S@ASL_CALL,T=%T@ASL_CALL);
       98     5765        %STTYPE (C=%S@IF,T=%T@IF);
       99     5770        %STTYPE (C=%S@ELSE,T=%T@ELSE);
      100     5775        %STTYPE (C=%S@CASE,T=%T@CASE);
      101     5780        %STTYPE (C=%S@GOTO,T=%T@GOTO);
      102     5785        %STTYPE (C=%S@RETURN,T=%T@RETURN);
      103     5790        %STTYPE (C=%S@ALTRETURN,T=%T@ALTRETURN);
      104     5795        %STTYPE (C=%S@REMEMBER,T=%T@REMEMBER);
      105     5800        %STTYPE (C=%S@UNWIND,T=%T@UNWIND);
      106     5805        %STTYPE (C=%S@REPORT_WRITER,T=%T@REPORT_WRITER);
      107     5810        %STTYPE (C=%S@ALTER,T=%T@ALTER);
      108     5815        %STTYPE (C=%S@EVALUATE,T=%T@EVALUATE);
      109     5820        %STTYPE (C=%S@INTRINSIC_CALL,T=%T@INTRINSIC_CALL);
      110     5825        %STTYPE (C=%S@SPOIL,T=%T@SPOIL);
      111     5830        %STTYPE (C=%S@GOTO_SUBSCRIPTED,T=%T@GOTO_SUBSCRIPTED);
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:4    
      112     5835        %STTYPE (C=%S@ASSIGNED_GOTO,T=%T@ASSIGNED_GOTO);
      113     5840        %STTYPE (C=%S@IF_LOGICAL,T=%T@IF_LOGICAL);
      114     5845        %STTYPE (C=%S@IF_ARITHMETIC,T=%T@IF_ARITHMETIC);
      115     5850        %STTYPE (C=%S@PAUSE,T=%T@PAUSE);
      116     5855        %STTYPE (C=%S@PERFORM,T=%T@PERFORM);
      117     5860        %STTYPE (C=%S@STOP,T=%T@STOP);
      118     5865        %STTYPE (C=%S@I_O,T=%T@I_O);
      119     5870        %STTYPE (C=%S@ELSE_IF,T=%T@ELSE_IF);
      120     5875        %STTYPE (C=%S@ASSIGNED,T=%T@ASSIGNED);
      121     5880        %STTYPE (C=%S@DO_SELECT,T=%T@DO_SELECT);
      122     5885        %STTYPE (C=%S@DO_SELECT_END,T=%T@DO_SELECT_END);
      123     5890        %STTYPE (C=%S@SELECT,T=%T@SELECT);
      124     5895        %STTYPE (C=%S@DO_UNINHIBIT,T=%T@DO_UNINHIBIT);
      125     5900        %STTYPE (C=%S@INSPECT,T=%T@INSPECT);
      126     5905        %STTYPE (C=%S@DO_UNTIL,T=%T@DO_UNTIL);
      127     5910        %STTYPE (C=%S@DO_INDEX,T=%T@DO_INDEX);
      128     5915        %STTYPE (C=%S@DO_WHILE,T=%T@DO_WHILE);
      129     5920        %STTYPE (C=%S@DO_CASE,T=%T@DO_CASE);
      130     5925        %STTYPE (C=%S@DO,T=%T@DO);
      131     5930        %STTYPE (C=%S@DO_INHIBIT,T=%T@DO_INHIBIT);
      132     5935        %STTYPE (C=%S@SET,T=%T@SET);
      133     5940        %STTYPE (C=%S@EXIT,T=%T@EXIT);
      134     5945        %STTYPE (C=%S@DO_UNINHIBIT_END,T=%T@DO_UNINHIBIT_END);
      135     5950        %STTYPE (C=%S@PURGE,T=%T@PURGE);
      136     5955        %STTYPE (C=%S@DO_UNTIL_END,T=%T@DO_UNTIL_END);
      137     5960        %STTYPE (C=%S@DO_INDEX_END,T=%T@DO_INDEX_END);
      138     5965        %STTYPE (C=%S@DO_WHILE_END,T=%T@DO_WHILE_END);
      139     5970        %STTYPE (C=%S@DO_CASE_END,T=%T@DO_CASE_END);
      140     5975        %STTYPE (C=%S@DO_END,T=%T@DO_END);
      141     5980        %STTYPE (C=%S@DO_INHIBIT_END,T=%T@DO_INHIBIT_END);
      142     5985        %STTYPE (C=%S@RELEASE,T=%T@RELEASE);
      143     5990        %STTYPE (C=%S@SEND,T=%T@SEND);
      144     5995        %STTYPE (C=%S@DATA_BASE,T=%T@DATA_BASE);
      145     6000        %STTYPE (C=%S@CANCEL,T=%T@CANCEL);
      146     6005        %STTYPE (C=%S@INITIALIZE,T=%T@INITIALIZE);
      147     6010        %STTYPE (C=%S@MERGE,T=%T@MERGE);
      148     6015        %STTYPE (C=%S@RECEIVE,T=%T@RECEIVE);
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:5    
      149     6020        %STTYPE (C=%S@SEARCH,T=%T@SEARCH);
      150     6025        %STTYPE (C=%S@SORT,T=%T@SORT);
      151     6030        %STTYPE (C=%S@STRING,T=%T@STRING);
      152     6035        %STTYPE (C=%S@UNSTRING,T=%T@UNSTRING);
      153     6040        %STTYPE (C=%S@USE,T=%T@USE);
      154     6045        %STTYPE (C=%S@LOAD,T=%T@LOAD);
      155     6050        %STTYPE (C=%S@PROC,T=%T@PROC);
      156     6055        %STTYPE (C=%S@PROC_END,T=%T@PROC_END);
      157     6060        %STTYPE (C=%S@ENTRY,T=%T@ENTRY);
      158     6065        %STTYPE (C=%S@MISC,T=%T@MISC);
      159     6070    1         2 LAST UBIN BYTE UNAL;
      160     6071    1   DCL 1 STUNK CONSTANT,
      161     6072        %STTYPE (C=0,T='UNKNOWN');
      162     6077    1         2 LAST UBIN BYTE UNAL;
      163     6078    1   DCL STSTART$ PTR CONSTANT INIT( ADDR( STTYPE ) );
      164     6079    1   DCL STEND$ PTR CONSTANT INIT( ADDR( STTYPE.LAST ) );
      165     6080    1   DCL STUNK$ PTR CONSTANT INIT( ADDR( STUNK ) );
      166     6081    1   DCL NODBGMSG$ PTR CONSTANT INIT( ADDR(NODBGMSG) );
      167     6082    1   DCL 1 NODBGMSG CONSTANT,
      168     6083    1         2 SIZE UBIN HALF HALIGNED INIT( LENGTHC(NODBGMSG.TEXT) ),
      169     6084    1         2 TEXT CHAR(0) CALIGNED INIT( '********' );
      170     6085        %INCLUDE XUH_MACRO_C;
      171     6169        %INCLUDE DD_SD_M;
      172     7505        %S_D;
      173     8823        %INCLUDE DD$DITEM;
       12+    8926             %LIST;
       13+    8927    1        DCL SDD$ PTR;
       14+    8928    1        DCL ZITEM$ PTR;
       15+    8929    1        DCL SDD_L6$ PTR;
       16+    8930    1        DCL ZITEM_L6$ PTR;
      174     9504        %INCLUDE DD_ERR_C;
      175     9901    1   DCL D_XDELTA BIT(1) SYMREF;
      176     9902    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
      177     9903    1   DCL B$JIT$ PTR SYMREF;
      178     9904        %INCLUDE B$JIT;
      179    10194    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
      180    10195    1   DCL DDF$STATEMENT ENTRY(4) ALTRET;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:6    
      181    10196    1   DCL DDF$FIND_SYMDEF ENTRY(3) ALTRET;
      182    10197    1   DCL DDF$FIND_SEDEF ENTRY(2) ALTRET;
      183    10198    1   DCL DDF$FIND_IE ENTRY(2) ALTRET;
      184    10199    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
      185    10200    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
      186    10201    1   DCL DDF$P_EXST ENTRY(1) ALTRET;
      187    10202    1   DCL DDS$SET_D2Q ENTRY ALTRET;
      188    10203    1   DCL DDR$UD_FIND ENTRY(3) ALTRET;
      189    10204    1   DCL DDR$BINTXT ENTRY(4);
      190    10205    1   DCL DDS$ES_INQ ENTRY(1) ALTRET;
      191    10206                                                /**/
      192    10207                       /* Initialize final string size (FSS) and buffer pointer (BE$) */
      193    10208    1        I_SHOULD_RESET_SCHEMA = '0'B;
      194    10209    1        IF ADDR(PNO_UDEFS) = ADDR(NIL)
      195    10210    1        THEN NO_UDEFS = '0'B;
      196    10211    1        ELSE NO_UDEFS = PNO_UDEFS;
      197    10212    1        FSS = 0;
      198    10213    1        BE$ = BB$;
      199    10214    1        SDFOUND = '0'B;
      200    10215    1        LABEL$ = ADDR( NIL );
      201    10216    1        GOTSTATEMENT = '0'B;
      202    10217    1        PRINT_OFFSET = '1'B;
      203    10218    1        PRINT_LINE = '0'B;
      204    10219    1        PRINT_TYPE = '0'B;
      205    10220    1        UPDATE = '0'B;
      206    10221    1        IF S_D.SIM_UPDATE OR (S_D.DO$ ~= ADDR(NIL) AND
      207    10222    1          S_D.DO$ -> ALL_ATTACH.CMD = C_UPDATE) /* C_UPDATE */
      208    10223    2        THEN DO;
      209    10224    2             UPDATE = '1'B;
      210    10225    2             PRINT_OFFSET = '0'B;
      211    10226    2             PRINT_TYPE = '0'B;
      212    10227    2             PRINT_LINE = '1'B;
      213    10228    2           END;
      214    10229    1        IF S_D.ONE_TO_TWO.EXEC_DOMAIN=%L6 THEN /* Must be same Fep segment. */
      215    10230    1             IF IC>=65536 THEN LEASTOK = IC/65536*65536;
      216    10231    1             ELSE LEASTOK = IC/4096*4096;
      217    10232    1        ELSE LEASTOK = 0;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:7    
      218    10233    1        LEASTOK = MAXIMUM (LEASTOK, IC-S_D.RANGE);
      219    10234    1        S_D.FNDENTDEF = '0'B;
      220    10235    1        IF NOT D_SYMBOLS
      221    10236    1          OR S_D.ISBASE ~= 0 AND (IC >= S_D.ISBASE OR S_D.KILLEDEF)
      222    10237    1        THEN GOTO TRY_UDEF;
      223    10238    1        IF D_XDELTA
      224    10239    1        THEN IF IC < S_D.PADDR
      225    10240    1             THEN GOTO TRY_SDEF;           /* Not in monitor procedure */
      226    10241                                                /* Get entdef pointer */
      227    10242    1        CALL DDF$FIND_PEDEF( IC, PRIM$ ) ALTRET( TRY_SDEF );
      228    10243    1        IF LEASTOK > PRIM$->B$EDEF.ISADDR THEN GOTO TRY_SDEF;
      229    10244    1        S_D.FNDENTDEF = '1'B;
      230    10245                                                /* Get name pointer to primary entdef */
      231    10246    1        IF S_D.LASTPD.RANGE + S_D.LASTPD.IC >= 1048576 /* 2**20 */
      232    10247    1          AND IC > S_D.LASTPD.IC
      233    10248    1        THEN GOTO TRY_UDEF;
      234    10249    1   CONTINUE_PEDEF:
      235    10250    1        PNP$ = PINCRW( S_D.DNAME$, PRIM$ -> B$EDEF.NPOINTER );
      236    10251                                      /* Put entdef name in buffer and update pointer */
      237    10252    1        NCARS = PNP$ -> TEXT$C.SIZE;
      238    10253                                      /* Initialize "FULL POSITION" wanted condition */
      239    10254    1        SDEF = '0'B;
      240    10255                                                /* Calculate offset */
      241    10256    1        OFFSET = IC - PRIM$ -> B$EDEF.ISADDR;
      242    10257    1        IF (NOT S_D.SCHEMA) OR NO_UDEFS
      243    10258    1        THEN GOTO SET_OFFSET;
      244    10259    2        CALL DDS$ES_INQ( IC ) WHENALTRETURN DO;
      245    10260    2   SET_OFFSET:
      246    10261    2             PRINT_OFFSET = '1'B;
      247    10262    2             PRINT_LINE = '0'B;
      248    10263    2             PRINT_TYPE = '0'B;
      249    10264    2             GOTO PUT_OFFSET1;
      250    10265    2           END;
      251    10266    1        IF S_D.LB1$ -> B$LBNTRY1.STMNTSIZ = 0
      252    10267    1        THEN GOTO PUT_OFFSET1;
      253    10268    1        COMPX = S_D.LB0$ -> B$LBNTRY0.COMPILER;
      254    10269    1        PRINT_OFFSET = S_D.REPORT_FLAGS.OFFSET( COMPX );
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:8    
      255    10270    1        PRINT_LINE = S_D.REPORT_FLAGS.LINE( COMPX );
      256    10271    1        PRINT_TYPE = S_D.REPORT_FLAGS.TYPE( COMPX );
      257    10272    1   PUT_OFFSET1:
      258    10273    1        CALL MOVE( PNP$ -> TEXT$C.TXT, NCARS ) ALTRET( TOO_BIG );
      259    10274    1   PUT_OFFSET: ;
      260    10275    1        IF ( OFFSET ~= 0 ) AND ( PRINT_OFFSET )
      261    10276    2        THEN DO;
      262    10277                                                /* Precede offset with + */
      263    10278    2             CALL MOVE( '+', 1 ) ALTRET( TOO_BIG );
      264    10279                                 /* Convert offset to octal. Suppress leading zeros. */
      265    10280    2             IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST
      266    10281    2             THEN CALL DDR$BINTXT( ADDR( TBUF ), OFFSET, %OCT_FMT, NCARS );
      267    10282    2             ELSE IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6
      268    10283    2                  THEN CALL DDR$BINTXT( ADDR( TBUF ), OFFSET, %X_FMT, NCARS );
      269    10284    3                  ELSE DO;
      270    10285    3                       S_D.ERROR = E@DELBUG; /* E@DELBUG */
      271    10286    3                       ALTRETURN;
      272    10287    3                     END;
      273    10288                                                /* Put offset in buffer */
      274    10289    2             CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );
      275    10290    2             IF UPDATE THEN GOTO RETN;
      276    10291    2           END;
      277    10292    1        S_D.FNDOFFSET = PRINT_OFFSET;
      278    10293                  /* Don't proceed with "FULL POSITION" if IC is not in procedure */
      279    10294    1        IF SDEF THEN RETURN;
      280    10295    1        IF ( NOT PRINT_LINE ) AND ( NOT PRINT_TYPE )
      281    10296    1        THEN GOTO LBLFIND;
      282    10297    1        CALL DDF$STATEMENT( IC, ST#, SUBST#, SUBST ) ALTRET( LBLFIND );
      283    10298    1        GOTSTATEMENT = '1'B;
      284    10299    1        IF NOT PRINT_LINE
      285    10300    1        THEN GOTO LBLFIND;
      286    10301    1        CALL DDF$EXST_#( ST#, ST$ ) ALTRET( LBLFIND );
      287    10302    1        TIC = ST$ -> B$EXST.ISADDR;
      288    10303    1        TNP = ST$ -> B$EXST.NPOINTER;
      289    10304    1        IF COMPX = %GMAPID
      290    10305    1        THEN IF ( TIC = IC ) AND ( TNP >= 0 )
      291    10306    2             THEN DO;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:9    
      292    10307    2                  IF S_D.DBG$ = ADDR( NIL )
      293    10308    3                  THEN DO;
      294    10309    3                       LABEL$ = NODBGMSG$;
      295    10310    3                       GOTO LBLEND;
      296    10311    3                     END;
      297    10312    2                  CALL DDF$DBG_#( TNP, LABEL$ ) ALTRET( LBLFIND );
      298    10313    2                  IF LABEL$ -> TEXT$C = PNP$ -> TEXT$C
      299    10314    2                  THEN GOTO LBLEND1;
      300    10315    2                  ELSE GOTO LBLEND;
      301    10316    2                END;
      302    10317    1             ELSE GOTO LBLFIND;
      303    10318                                                /* Put : After entdef */
      304    10319    1        IF S_D.REPORTING_ONCALL THEN GOTO GET_SEDEF;
      305    10320    1        IF PRINT_OFFSET
      306    10321    1        THEN CALL MOVE( ' :', 2) ALTRET(TOO_BIG);
      307    10322    1        ELSE CALL MOVE( ':', 1 ) ALTRET( TOO_BIG );
      308    10323                                                /* Put line number in buffer */
      309    10324    1        TEMP = ST$ -> B$EXST.LINENUM;
      310    10325    1        CALL DDR$BINTXT( ADDR( TBUF ), TEMP, %UINT_FMT, NCARS );
      311    10326    1        CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );
      312    10327    1        IF IC ~= TIC
      313    10328    2        THEN DO;
      314    10329    2             CALL MOVE( ',', 1 ) ALTRET( TOO_BIG );
      315    10330    2             IF SUBST ~= 0
      316    10331    3             THEN DO;
      317    10332    3                  CALL DDR$BINTXT( ADDR( TBUF ), SUBST, %UINT_FMT, NCARS );
      318    10333    3                  CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );
      319    10334    3                  CALL DDF$EXST_#( SUBST#, ST$ ) ALTRET( LBLFIND );
      320    10335    3                  TIC = ST$ -> B$EXST.ISADDR;
      321    10336    3                  TNP = ST$ -> B$EXST.NPOINTER;
      322    10337    3                END;
      323    10338    2             TEMP = IC - TIC;
      324    10339    2             IF TEMP ~= 0
      325    10340    3             THEN DO;
      326    10341    3                  CALL MOVE( ',', 1 ) ALTRET( TOO_BIG );
      327    10342    3                  IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST
      328    10343    3                  THEN CALL DDR$BINTXT ( ADDR(TBUF), TEMP, %OCT_FMT, NCARS );
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:10   
      329    10344    3                  ELSE IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6
      330    10345    3                       THEN CALL DDR$BINTXT ( ADDR(TBUF), TEMP, %X_FMT, NCARS);
      331    10346    4                       ELSE DO;
      332    10347    4                            S_D.ERROR = E@DELBUG; /* E@DELBUG */
      333    10348    4                            ALTRETURN;
      334    10349    4                          END;
      335    10350    3                  CALL MOVE ( TBUF, NCARS ) ALTRET( TOO_BIG );
      336    10351    3                END;
      337    10352    2           END;
      338    10353    1        IF UPDATE
      339    10354    1        THEN GOTO RETN;
      340    10355    1   GET_SEDEF:
      341    10356    1        IF TNP >= 0
      342    10357    2        THEN DO;
      343    10358    2   DOLABEL:  IF S_D.DBG$ = ADDR( NIL )
      344    10359    2             THEN LABEL$ = NODBGMSG$;
      345    10360    2             ELSE CALL DDF$DBG_#( TNP, LABEL$ ) ALTRET( LBLFIND );
      346    10361    2             GOTO LBLEND;
      347    10362    2           END;
      348    10363    2        ELSE DO;
      349    10364    2             TST$ = ST$;
      350    10365    2             CALL DDF$P_EXST (TST$) ALTRET (NOPE);
      351    10366    2             TTIC = TST$->B$EXST.ISADDR;
      352    10367    3   DO_WHILE: DO WHILE (TTIC = TIC);
      353    10368    3                  IF TST$->B$EXST.NPOINTER~=-1 THEN
      354    10369    4                  DO;
      355    10370    4                       TNP=TST$->B$EXST.NPOINTER;
      356    10371    4                       GOTO DOLABEL;
      357    10372    4                     END;
      358    10373    3                  CALL DDF$P_EXST (TST$) ALTRET (NOPE);
      359    10374    3                  TTIC = TST$->B$EXST.ISADDR;
      360    10375    3                END;
      361    10376    2   NOPE:     ;
      362    10377    2             CALL DDF$FIND_IE( IC, ENTRY$ ) ALTRET( LBLFIND );
      363    10378    2             TEMP = ENTRY$ -> B$INTNTRY.NPOINTER;
      364    10379    2             CALL DDF$DBG_#( TEMP, LABEL$ ) ALTRET( LBLFIND );
      365    10380    2             GOTO LBLEND;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:11   
      366    10381    2   LBLFIND:
      367    10382    2             CALL DDF$FIND_SEDEF( IC, ENTRY$ ) ALTRET( TRY_EXACT_SDEF );
      368    10383    2             LABEL$ = PINCRW( S_D.DNAME$, ENTRY$ -> B$EDEF.NPOINTER );
      369    10384    2             GOTO LBLEND;
      370    10385    2   TRY_EXACT_SDEF:
      371    10386    2             CALL DDF$FIND_SYMDEF( IC, ENTRY$, '1'B ) ALTRET( LBLEND );
      372    10387    2             I_SHOULD_RESET_SCHEMA = '1'B;
      373    10388    2             IF ( ENTRY$ -> B$SDEF.AD.ISADDR = IC )
      374    10389    2             THEN LABEL$ = PINCRW( S_D.DNAME$, ENTRY$ -> B$SDEF.NPOINTER );
      375    10390    2             GOTO LBLEND;
      376    10391    2           END;
      377    10392    1   LBLEND:
      378    10393    1        IF ( LABEL$ ~= ADDR( NIL ) )
      379    10394    2        THEN DO;
      380    10395    2             IF NOT S_D.REPORTING_ONCALL
      381    10396    2             THEN CALL MOVE ( '( ', 2 ) ALTRET( TOO_BIG );
      382    10397    2             ELSE CALL MOVE (':', 1) ALTRET (TOO_BIG);
      383    10398                                                /* Move label to buffer */
      384    10399    2             NCARS = LABEL$ -> TEXT$C.SIZE;
      385    10400    2             CALL MOVE( LABEL$ -> TEXT$C.TXT, NCARS ) ALTRET( TOO_BIG );
      386    10401    2             IF NOT S_D.REPORTING_ONCALL
      387    10402    2             THEN CALL MOVE ( ' )', 2 ) ALTRET( TOO_BIG );
      388    10403    2             ELSE GOTO RETN;
      389    10404                                                /* Done */
      390    10405    2           END;
      391    10406    1   LBLEND1:
      392    10407        /* Statement type processing */
      393    10408    1        IF PRINT_TYPE AND GOTSTATEMENT
      394    10409    2        THEN DO;
      395    10410    2             IF SUBST = 0
      396    10411    2             THEN CALL DDF$EXST_#( ST#, ST$ ) ALTRET( RETN );
      397    10412    2             ELSE CALL DDF$EXST_#( SUBST#, ST$ ) ALTRET( RETN );
      398    10413    2             TYPE = ST$ -> B$EXST.STTYPE;
      399    10414    2             ST$ = STSTART$;
      400    10415    3             DO WHILE ( ST$ < STEND$ );
      401    10416    3                  IF ST$ -> STTY$PE.CODE = TYPE
      402    10417    3                  THEN GOTO GOTYPE;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:12   
      403    10418    3                  ST$ = PINCRC( ST$, LENGTHC( ST$ -> STTY$PE ) );
      404    10419    3                END;
      405    10420    2             ST$ = STUNK$;
      406    10421    2   GOTYPE:
      407    10422    2             CALL MOVE( ' [', 2 ) ALTRET( TOO_BIG );
      408    10423    2             NCARS = ST$ -> STTY$PE.SIZE;
      409    10424    2             CALL MOVE( ST$ -> STTY$PE.TEXT, NCARS ) ALTRET( TOO_BIG );
      410    10425    2             CALL MOVE( '] ', 2 ) ALTRET( TOO_BIG );
      411    10426    2           END;
      412    10427    1   RETN:
      413    10428    1        IF I_SHOULD_RESET_SCHEMA THEN CALL DDS$SET_D2Q;
      414    10429    1        RETURN;
      415    10430    1   TRY_SDEF:
      416    10431    1        CALL DDF$FIND_SYMDEF( IC, SYM$, '1'B ) ALTRET( TRY_UDEF );
      417    10432    1        IF LEASTOK > SYM$->B$SDEF.AD.ISADDR THEN GOTO TRY_UDEF;
      418    10433    1        OFFSET = IC - SYM$ -> B$SDEF.AD.ISADDR;
      419    10434    1        SDFOUND = '1'B;
      420    10435    1   TRY_UDEF:
      421    10436    1        S_D.KILLEDEF = '0'B;
      422    10437    1        UDFOUND = '0'B;
      423    10438    1        IF NO_UDEFS
      424    10439    1        THEN GOTO NOUD;
      425    10440    1        CALL DDR$UD_FIND( IC, USYM$, UVALUE ) ALTRET( NOUD );
      426    10441    1        IF LEASTOK <= UVALUE
      427    10442    1        THEN UDFOUND = '1'B;
      428    10443    1   NOUD:
      429    10444    1        IF S_D.FNDENTDEF AND NOT UDFOUND
      430    10445    1        THEN GOTO CONTINUE_PEDEF;
      431    10446    1        SDEF = '1'B;
      432    10447    1        IF ( UDFOUND )
      433    10448    1        THEN IF ( NOT SDFOUND )
      434    10449    1             THEN GOTO PUT_UDEF;
      435    10450    1             ELSE IF ( OFFSET >= IC - UVALUE )
      436    10451    1                  THEN GOTO PUT_UDEF;
      437    10452    1                  ELSE ;                   /* Goto PUT_SYMDEF */
      438    10453    1        ELSE IF ( NOT SDFOUND )
      439    10454    1             THEN GOTO PUT_OCT;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:13   
      440    10455                                                /* ELSE Goto PUT_SYMDEF */
      441    10456        /* PUT_SYMDEF: */
      442    10457    1        SNP$ = PINCRW( S_D.DNAME$, SYM$ -> B$SDEF.NPOINTER );
      443    10458    1        NCARS = SNP$ -> TEXT$C.SIZE;
      444    10459    1        CALL MOVE( SNP$ -> TEXT$C.TXT, NCARS ) ALTRET( TOO_BIG );
      445    10460    1        GOTO PUT_OFFSET;
      446    10461    1   PUT_UDEF:
      447    10462    1        OFFSET = IC - UVALUE;
      448    10463    1        IF OFFSET > S_D.RANGE
      449    10464    1        THEN GOTO PUT_OCT;
      450    10465    1        NCARS = USYM$ -> TEXT9$C.SIZE;
      451    10466    1        CALL MOVE( USYM$ -> TEXT9$C.TXT, NCARS ) ALTRET( PUT_OCT );
      452    10467    1        GOTO PUT_OFFSET;
      453    10468    1   PUT_OCT:
      454    10469    1        S_D.FNDOFFSET = '1'B;
      455    10470    1        IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST
      456    10471    1        THEN CALL DDR$BINTXT( ADDR( TBUF ), IC, %OCT_FMT, NCARS );
      457    10472    1        ELSE IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6
      458    10473    1             THEN CALL DDR$BINTXT( ADDR( TBUF ), IC, %X_FMT, NCARS );
      459    10474    2             ELSE DO;
      460    10475    2                  S_D.ERROR = E@DELBUG;    /* E@DELBUG */
      461    10476    2                  ALTRETURN;
      462    10477    2                END;
      463    10478    1        CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );
      464    10479    1        RETURN;
      465    10480                                                /**/
      466    10481    1   TOO_BIG: ALTRETURN;
      467    10482        %EJECT;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:14   
      468    10483    1   MOVE: PROC( STRING, LENGTH ) ALTRET;
      469    10484    2   DCL STRING CHAR( LENGTH ) UNAL;
      470    10485    2   DCL LENGTH UBIN;
      471    10486    2   DCL BUFFER CHAR( LENGTH ) BASED( BE$ ) UNAL;
      472    10487    2        FSS = FSS + LENGTH;
      473    10488                                           /* Check for exceeding maximum string size */
      474    10489    2        IF FSS> MSS THEN ALTRETURN;
      475    10490    2        BUFFER = STRING;
      476    10491    2        BE$ = PINCRC( BE$, LENGTH );
      477    10492    2        RETURN;
      478    10493    2   END MOVE;
      479    10494    1   END DDR$POSIT;

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:15   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDR$POSIT.

   Procedure DDR$POSIT requires 851 words for executable code.
   Procedure DDR$POSIT requires 60 words of local(AUTO) storage.

    No errors detected in file DDR$POSIT.:E05TSI    .

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:16   

 Object Unit name= DDR$POSIT                                  File name= DDR$POSIT.:E05TOU
 UTS= JUL 29 '97 14:08:39.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS    173    255  DDR$POSIT
    1   Proc  even  none   851   1523  DDR$POSIT
    2  RoData even  none    16     20  DDR$POSIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        5  DDR$POSIT
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:17   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDF$FIND_PEDEF
 yes     yes           Std       4 DDF$STATEMENT
 yes     yes           Std       1 DDF$P_EXST
 yes     yes           Std       2 DDF$FIND_IE
 yes     yes           Std       3 DDR$UD_FIND
 yes     yes           Std       1 DDS$ES_INQ
         yes           Std       4 DDR$BINTXT
 yes     yes           Std       2 DDF$EXST_#
 yes     yes           Std       2 DDF$DBG_#
 yes     yes           Std       2 DDF$FIND_SEDEF
 yes     yes           Std       3 DDF$FIND_SYMDEF
 yes     yes           Std       0 DDS$SET_D2Q
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  D_XDELTA                              D_SYMBOLS
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:18   


        1        1        /*M* DDR$POSIT report position routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D* NAME:  DDR$POSIT
        9        9             CALL:  Call DDR$POSIT(IC,BUFBEGIN$,MSS,FSS) ALTRET(NO_ROOM)
       10       10             INPUT: IC is the IC value whose symbolic position is to
       11       11                    be output.
       12       12                    BUFBEGIN$ is a pointer to the beginning of the
       13       13                    character buffer.
       14       14                    MSS is the maximum number of characters to be placed
       15       15                    in the buffer.
       16       16             OUTPUT: FSS is the actual number of characters placed in
       17       17                    the buffer.
       18       18             DESCRIPTION: The position is computed and placed
       19       19                    in the buffer in the form:
       20       20                    PEDEF+.OFFSET :LINE,SUBSTATMENT,.OFFSET( LABEL ) <TYPE>
       21       21                    if the IC is not within procedure, then the position
       22       22                    is displayed relative to the nearest symdef.
       23       23                    The alternate return is taken if the final string
       24       24                    size (FSS) exceeds the maximum string size (MSS). */
       25       25                                                /**/
       26       26        DDR$POSIT: PROC(IC,BB$,MSS,FSS,PNO_UDEFS) ALTRET;

     26  1 000000   000000 700200 xent  DDR$POSIT    TSX0  ! X66_AUTO_5
         1 000001   000074 000005                    ZERO    60,5

       27       27                                                /**/
       28       28    1   DCL IC SBIN ;
       29       29    1   DCL BB$ PTR;
       30       30    1   DCL MSS SBIN;
       31       31    1   DCL FSS SBIN;
       32       32    1   DCL PNO_UDEFS BIT(1) ALIGNED;           /* Set if not to search user defs */
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:19   
       33       33    1   DCL NO_UDEFS BIT(1) ALIGNED;
       34       34    1   DCL I_SHOULD_RESET_SCHEMA BIT(1) ALIGNED;
       35       35    1   DCL BE$ PTR;
       36       36    1   DCL PNP$ PTR;
       37       37    1   DCL SNP$ PTR;
       38       38    1   DCL ST$ PTR;
       39       39    1   DCL TST$ PTR;
       40       40    1   DCL PRIM$ PTR;
       41       41    1   DCL LABEL$ PTR;
       42       42    1   DCL ENTRY$ PTR;
       43       43    1   DCL OFFSET SBIN;
       44       44    1   DCL LEASTOK SBIN;
       45       45    1   DCL SYM$ PTR;
       46       46    1   DCL TBUF CHAR(16);
       47       47    1   DCL TEMP SBIN;
       48       48    1   DCL NCARS SBIN;
       49       49    1   DCL SDEF BIT(1);
       50       50    1   DCL USYM$ PTR;
       51       51    1   DCL UVALUE UBIN;
       52       52    1   DCL TIC UBIN;
       53       53    1   DCL TTIC UBIN;
       54       54    1   DCL TNP SBIN;
       55       55    1   DCL SUBST UBIN;
       56       56    1   DCL UDFOUND BIT(1);
       57       57    1   DCL UPDATE BIT(1) ALIGNED;
       58       58    1   DCL SDFOUND BIT(1);
       59       59    1   DCL ST# UBIN;
       60       60    1   DCL SUBST# UBIN;
       61       61    1   DCL PRINT_OFFSET BIT(1) ALIGNED;
       62       62    1   DCL PRINT_LINE BIT(1) ALIGNED;
       63       63    1   DCL PRINT_TYPE BIT(1) ALIGNED;
       64       64    1   DCL GOTSTATEMENT BIT(1) ALIGNED;
       65       65    1   DCL TYPE UBIN;
       66       66    1   DCL COMPX UBIN;
       67       67        %INCLUDE B_STRINGS_C;
       68      196        %INCLUDE DD$BASED;
       69     1499        %TEXT$C (WIDTH="UBIN(18)");
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:20   
       70     1504        %TEXT$C(NAME=TEXT9$C);
       71     1509        %ALL_ATTACH;
       72     1524        %INCLUDE DD_SUBS_C;
       73     1795        %INCLUDE B$OBJECT_C;
       74     5225        %B$EDEF;
       75     5295        %B$SDEF;
       76     5349        %B$EXST;
       77     5456        %B$INTNTRY;
       78     5514        %B$LBNTRY0;
       79     5550        %B$LBNTRY1;
       80     5577        %COMPILERIDSUBS;
       81     5593        %B$STTYPESUBS;
       82     5662        %B$STXTYPESUBS;
       83     5730        %MACRO STTYPE (T=T,C=C);
       84     5731              2 * UBIN BYTE UNAL INIT(C),
       85     5732              2 * UBIN BYTE UNAL INIT(LENGTHC(T)),
       86     5733              2 * CHAR(0) UNAL INIT(T),
       87     5734        %MEND;
       88     5735    1   DCL 1 STTY$PE BASED UNAL,
       89     5736    1         2 CODE UBIN BYTE UNAL,
       90     5737    1         2 SIZE UBIN BYTE UNAL,
       91     5738    1         2 TEXT CHAR(STTY$PE.SIZE) UNAL;
       92     5739    1   DCL 1 STTYPE CONSTANT,
       93     5740        %STTYPE (C=%S@NULL,T=%T@NULL);
       94     5745        %STTYPE (C=%S@ASSIGNMENT,T=%T@ASSIGNMENT);
       95     5750        %STTYPE (C=%S@CALL,T=%T@CALL);
       96     5755        %STTYPE (C=%S@MONITOR_CALL,T=%T@MONITOR_CALL);
       97     5760        %STTYPE (C=%S@ASL_CALL,T=%T@ASL_CALL);
       98     5765        %STTYPE (C=%S@IF,T=%T@IF);
       99     5770        %STTYPE (C=%S@ELSE,T=%T@ELSE);
      100     5775        %STTYPE (C=%S@CASE,T=%T@CASE);
      101     5780        %STTYPE (C=%S@GOTO,T=%T@GOTO);
      102     5785        %STTYPE (C=%S@RETURN,T=%T@RETURN);
      103     5790        %STTYPE (C=%S@ALTRETURN,T=%T@ALTRETURN);
      104     5795        %STTYPE (C=%S@REMEMBER,T=%T@REMEMBER);
      105     5800        %STTYPE (C=%S@UNWIND,T=%T@UNWIND);
      106     5805        %STTYPE (C=%S@REPORT_WRITER,T=%T@REPORT_WRITER);
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:21   
      107     5810        %STTYPE (C=%S@ALTER,T=%T@ALTER);
      108     5815        %STTYPE (C=%S@EVALUATE,T=%T@EVALUATE);
      109     5820        %STTYPE (C=%S@INTRINSIC_CALL,T=%T@INTRINSIC_CALL);
      110     5825        %STTYPE (C=%S@SPOIL,T=%T@SPOIL);
      111     5830        %STTYPE (C=%S@GOTO_SUBSCRIPTED,T=%T@GOTO_SUBSCRIPTED);
      112     5835        %STTYPE (C=%S@ASSIGNED_GOTO,T=%T@ASSIGNED_GOTO);
      113     5840        %STTYPE (C=%S@IF_LOGICAL,T=%T@IF_LOGICAL);
      114     5845        %STTYPE (C=%S@IF_ARITHMETIC,T=%T@IF_ARITHMETIC);
      115     5850        %STTYPE (C=%S@PAUSE,T=%T@PAUSE);
      116     5855        %STTYPE (C=%S@PERFORM,T=%T@PERFORM);
      117     5860        %STTYPE (C=%S@STOP,T=%T@STOP);
      118     5865        %STTYPE (C=%S@I_O,T=%T@I_O);
      119     5870        %STTYPE (C=%S@ELSE_IF,T=%T@ELSE_IF);
      120     5875        %STTYPE (C=%S@ASSIGNED,T=%T@ASSIGNED);
      121     5880        %STTYPE (C=%S@DO_SELECT,T=%T@DO_SELECT);
      122     5885        %STTYPE (C=%S@DO_SELECT_END,T=%T@DO_SELECT_END);
      123     5890        %STTYPE (C=%S@SELECT,T=%T@SELECT);
      124     5895        %STTYPE (C=%S@DO_UNINHIBIT,T=%T@DO_UNINHIBIT);
      125     5900        %STTYPE (C=%S@INSPECT,T=%T@INSPECT);
      126     5905        %STTYPE (C=%S@DO_UNTIL,T=%T@DO_UNTIL);
      127     5910        %STTYPE (C=%S@DO_INDEX,T=%T@DO_INDEX);
      128     5915        %STTYPE (C=%S@DO_WHILE,T=%T@DO_WHILE);
      129     5920        %STTYPE (C=%S@DO_CASE,T=%T@DO_CASE);
      130     5925        %STTYPE (C=%S@DO,T=%T@DO);
      131     5930        %STTYPE (C=%S@DO_INHIBIT,T=%T@DO_INHIBIT);
      132     5935        %STTYPE (C=%S@SET,T=%T@SET);
      133     5940        %STTYPE (C=%S@EXIT,T=%T@EXIT);
      134     5945        %STTYPE (C=%S@DO_UNINHIBIT_END,T=%T@DO_UNINHIBIT_END);
      135     5950        %STTYPE (C=%S@PURGE,T=%T@PURGE);
      136     5955        %STTYPE (C=%S@DO_UNTIL_END,T=%T@DO_UNTIL_END);
      137     5960        %STTYPE (C=%S@DO_INDEX_END,T=%T@DO_INDEX_END);
      138     5965        %STTYPE (C=%S@DO_WHILE_END,T=%T@DO_WHILE_END);
      139     5970        %STTYPE (C=%S@DO_CASE_END,T=%T@DO_CASE_END);
      140     5975        %STTYPE (C=%S@DO_END,T=%T@DO_END);
      141     5980        %STTYPE (C=%S@DO_INHIBIT_END,T=%T@DO_INHIBIT_END);
      142     5985        %STTYPE (C=%S@RELEASE,T=%T@RELEASE);
      143     5990        %STTYPE (C=%S@SEND,T=%T@SEND);
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:22   
      144     5995        %STTYPE (C=%S@DATA_BASE,T=%T@DATA_BASE);
      145     6000        %STTYPE (C=%S@CANCEL,T=%T@CANCEL);
      146     6005        %STTYPE (C=%S@INITIALIZE,T=%T@INITIALIZE);
      147     6010        %STTYPE (C=%S@MERGE,T=%T@MERGE);
      148     6015        %STTYPE (C=%S@RECEIVE,T=%T@RECEIVE);
      149     6020        %STTYPE (C=%S@SEARCH,T=%T@SEARCH);
      150     6025        %STTYPE (C=%S@SORT,T=%T@SORT);
      151     6030        %STTYPE (C=%S@STRING,T=%T@STRING);
      152     6035        %STTYPE (C=%S@UNSTRING,T=%T@UNSTRING);
      153     6040        %STTYPE (C=%S@USE,T=%T@USE);
      154     6045        %STTYPE (C=%S@LOAD,T=%T@LOAD);
      155     6050        %STTYPE (C=%S@PROC,T=%T@PROC);
      156     6055        %STTYPE (C=%S@PROC_END,T=%T@PROC_END);
      157     6060        %STTYPE (C=%S@ENTRY,T=%T@ENTRY);
      158     6065        %STTYPE (C=%S@MISC,T=%T@MISC);
      159     6070    1         2 LAST UBIN BYTE UNAL;
      160     6071    1   DCL 1 STUNK CONSTANT,
      161     6072        %STTYPE (C=0,T='UNKNOWN');
      162     6077    1         2 LAST UBIN BYTE UNAL;
      163     6078    1   DCL STSTART$ PTR CONSTANT INIT( ADDR( STTYPE ) );
      164     6079    1   DCL STEND$ PTR CONSTANT INIT( ADDR( STTYPE.LAST ) );
      165     6080    1   DCL STUNK$ PTR CONSTANT INIT( ADDR( STUNK ) );
      166     6081    1   DCL NODBGMSG$ PTR CONSTANT INIT( ADDR(NODBGMSG) );
      167     6082    1   DCL 1 NODBGMSG CONSTANT,
      168     6083    1         2 SIZE UBIN HALF HALIGNED INIT( LENGTHC(NODBGMSG.TEXT) ),
      169     6084    1         2 TEXT CHAR(0) CALIGNED INIT( '********' );
      170     6085        %INCLUDE XUH_MACRO_C;
      171     6169        %INCLUDE DD_SD_M;
      172     7505        %S_D;
      173     8823        %INCLUDE DD$DITEM;
       12+    8926             %LIST;
       13+    8927    1        DCL SDD$ PTR;
       14+    8928    1        DCL ZITEM$ PTR;
       15+    8929    1        DCL SDD_L6$ PTR;
       16+    8930    1        DCL ZITEM_L6$ PTR;
      174     9504        %INCLUDE DD_ERR_C;
      175     9901    1   DCL D_XDELTA BIT(1) SYMREF;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:23   
      176     9902    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
      177     9903    1   DCL B$JIT$ PTR SYMREF;
      178     9904        %INCLUDE B$JIT;
      179    10194    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
      180    10195    1   DCL DDF$STATEMENT ENTRY(4) ALTRET;
      181    10196    1   DCL DDF$FIND_SYMDEF ENTRY(3) ALTRET;
      182    10197    1   DCL DDF$FIND_SEDEF ENTRY(2) ALTRET;
      183    10198    1   DCL DDF$FIND_IE ENTRY(2) ALTRET;
      184    10199    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
      185    10200    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
      186    10201    1   DCL DDF$P_EXST ENTRY(1) ALTRET;
      187    10202    1   DCL DDS$SET_D2Q ENTRY ALTRET;
      188    10203    1   DCL DDR$UD_FIND ENTRY(3) ALTRET;
      189    10204    1   DCL DDR$BINTXT ENTRY(4);
      190    10205    1   DCL DDS$ES_INQ ENTRY(1) ALTRET;
      191    10206                                                /**/
      192    10207                       /* Initialize final string size (FSS) and buffer pointer (BE$) */
      193    10208    1        I_SHOULD_RESET_SCHEMA = '0'B;

  10208  1 000002   200011 450100                    STZ     I_SHOULD_RESET_SCHEMA,,AUTO

      194    10209    1        IF ADDR(PNO_UDEFS) = ADDR(NIL)

  10209  1 000003   200007 236100                    LDQ     @PNO_UDEFS,,AUTO
         1 000004   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000005   000010 601000 1                  TNZ     s:10211

      195    10210    1        THEN NO_UDEFS = '0'B;

  10210  1 000006   200010 450100                    STZ     NO_UDEFS,,AUTO
         1 000007   000014 710000 1                  TRA     s:10212

      196    10211    1        ELSE NO_UDEFS = PNO_UDEFS;

  10211  1 000010   200007 470500                    LDP0    @PNO_UDEFS,,AUTO
         1 000011   000000 236100                    LDQ     0,,PR0
         1 000012   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:24   
         1 000013   200010 756100                    STQ     NO_UDEFS,,AUTO

      197    10212    1        FSS = 0;

  10212  1 000014   200006 470500                    LDP0    @FSS,,AUTO
         1 000015   000000 450100                    STZ     0,,PR0

      198    10213    1        BE$ = BB$;

  10213  1 000016   200004 471500                    LDP1    @BB$,,AUTO
         1 000017   100000 236100                    LDQ     0,,PR1
         1 000020   200012 756100                    STQ     BE$,,AUTO

      199    10214    1        SDFOUND = '0'B;

  10214  1 000021   200044 450100                    STZ     SDFOUND,,AUTO

      200    10215    1        LABEL$ = ADDR( NIL );

  10215  1 000022   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000023   200020 756100                    STQ     LABEL$,,AUTO

      201    10216    1        GOTSTATEMENT = '0'B;

  10216  1 000024   200052 450100                    STZ     GOTSTATEMENT,,AUTO

      202    10217    1        PRINT_OFFSET = '1'B;

  10217  1 000025   400000 236003                    LDQ     -131072,DU
         1 000026   200047 756100                    STQ     PRINT_OFFSET,,AUTO

      203    10218    1        PRINT_LINE = '0'B;

  10218  1 000027   200050 450100                    STZ     PRINT_LINE,,AUTO

      204    10219    1        PRINT_TYPE = '0'B;

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:25   
  10219  1 000030   200051 450100                    STZ     PRINT_TYPE,,AUTO

      205    10220    1        UPDATE = '0'B;

  10220  1 000031   200043 450100                    STZ     UPDATE,,AUTO

      206    10221    1        IF S_D.SIM_UPDATE OR (S_D.DO$ ~= ADDR(NIL) AND

  10221  1 000032   000000 473400 xsym               LDP3    S_D$
         1 000033   306766 234100                    SZN     3574,,PR3
         1 000034   000045 604000 1                  TMI     s:10224
         1 000035   300031 236100                    LDQ     25,,PR3
         1 000036   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000037   000052 600000 1                  TZE     s:10229
         1 000040   300031 474500                    LDP4    25,,PR3
         1 000041   400000 236100                    LDQ     0,,PR4
         1 000042   777000 376003                    ANQ     -512,DU
         1 000043   113000 116003                    CMPQ    38400,DU
         1 000044   000052 601000 1                  TNZ     s:10229

      207    10222    1          S_D.DO$ -> ALL_ATTACH.CMD = C_UPDATE) /* C_UPDATE */
      208    10223    2        THEN DO;

      209    10224    2             UPDATE = '1'B;

  10224  1 000045   400000 236003                    LDQ     -131072,DU
         1 000046   200043 756100                    STQ     UPDATE,,AUTO

      210    10225    2             PRINT_OFFSET = '0'B;

  10225  1 000047   200047 450100                    STZ     PRINT_OFFSET,,AUTO

      211    10226    2             PRINT_TYPE = '0'B;

  10226  1 000050   200051 450100                    STZ     PRINT_TYPE,,AUTO

      212    10227    2             PRINT_LINE = '1'B;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:26   

  10227  1 000051   200050 756100                    STQ     PRINT_LINE,,AUTO

      213    10228    2           END;

      214    10229    1        IF S_D.ONE_TO_TWO.EXEC_DOMAIN=%L6 THEN /* Must be same Fep segment. */

  10229  1 000052   306714 235100                    LDA     3532,,PR3
         1 000053   000002 115007                    CMPA    2,DL
         1 000054   000073 601000 1                  TNZ     s:10232

      215    10230    1             IF IC>=65536 THEN LEASTOK = IC/65536*65536;

  10230  1 000055   200003 474500                    LDP4    @IC,,AUTO
         1 000056   400000 235100                    LDA     0,,PR4
         1 000057   200000 115007                    CMPA    65536,DL
         1 000060   000066 604000 1                  TMI     s:10231

  10230  1 000061   400000 236100                    LDQ     0,,PR4
         1 000062   200000 506007                    DIV     65536,DL
         1 000063   000020 736000                    QLS     16
         1 000064   200023 756100                    STQ     LEASTOK,,AUTO
         1 000065   000074 710000 1                  TRA     s:10233

      216    10231    1             ELSE LEASTOK = IC/4096*4096;

  10231  1 000066   400000 236100                    LDQ     0,,PR4
         1 000067   010000 506007                    DIV     4096,DL
         1 000070   000014 736000                    QLS     12
         1 000071   200023 756100                    STQ     LEASTOK,,AUTO
         1 000072   000074 710000 1                  TRA     s:10233

      217    10232    1        ELSE LEASTOK = 0;

  10232  1 000073   200023 450100                    STZ     LEASTOK,,AUTO

      218    10233    1        LEASTOK = MAXIMUM (LEASTOK, IC-S_D.RANGE);
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:27   

  10233  1 000074   200003 474500                    LDP4    @IC,,AUTO
         1 000075   400000 236100                    LDQ     0,,PR4
         1 000076   301031 136100                    SBLQ    537,,PR3
         1 000077   200023 116100                    CMPQ    LEASTOK,,AUTO
         1 000100   000102 605000 1                  TPL     s:10233+6
         1 000101   200023 236100                    LDQ     LEASTOK,,AUTO
         1 000102   200023 756100                    STQ     LEASTOK,,AUTO

      219    10234    1        S_D.FNDENTDEF = '0'B;

  10234  1 000103   300721 450100                    STZ     465,,PR3

      220    10235    1        IF NOT D_SYMBOLS

  10235  1 000104   000000 234000 xsym               SZN     D_SYMBOLS
         1 000105   001301 605000 1                  TPL     TRY_UDEF
         1 000106   300720 235100                    LDA     464,,PR3
         1 000107   000116 600000 1                  TZE     s:10238
         1 000110   400000 236100                    LDQ     0,,PR4
         1 000111   000114 604000 1                  TMI     s:10235+8
         1 000112   300720 116100                    CMPQ    464,,PR3
         1 000113   001301 603000 1                  TRC     TRY_UDEF
         1 000114   300105 234100                    SZN     69,,PR3
         1 000115   001301 604000 1                  TMI     TRY_UDEF

      221    10236    1          OR S_D.ISBASE ~= 0 AND (IC >= S_D.ISBASE OR S_D.KILLEDEF)
      222    10237    1        THEN GOTO TRY_UDEF;
      223    10238    1        IF D_XDELTA

  10238  1 000116   000000 234000 xsym               SZN     D_XDELTA
         1 000117   000124 605000 1                  TPL     s:10242

      224    10239    1        THEN IF IC < S_D.PADDR

  10239  1 000120   400000 236100                    LDQ     0,,PR4
         1 000121   001253 604000 1                  TMI     TRY_SDEF
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:28   
         1 000122   304765 116100                    CMPQ    2549,,PR3
         1 000123   001253 602000 1                  TNC     TRY_SDEF

      225    10240    1             THEN GOTO TRY_SDEF;           /* Not in monitor procedure */
      226    10241                                                /* Get entdef pointer */
      227    10242    1        CALL DDF$FIND_PEDEF( IC, PRIM$ ) ALTRET( TRY_SDEF );

  10242  1 000124   200017 635500                    EPPR5   PRIM$,,AUTO
         1 000125   200067 455500                    STP5    @LENGTH+3,,AUTO
         1 000126   200003 236100                    LDQ     @IC,,AUTO
         1 000127   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 000130   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000131   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000132   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         1 000133   001253 702000 1                  TSX2    TRY_SDEF

      228    10243    1        IF LEASTOK > PRIM$->B$EDEF.ISADDR THEN GOTO TRY_SDEF;

  10243  1 000134   200017 470500                    LDP0    PRIM$,,AUTO
         1 000135   000000 236100                    LDQ     0,,PR0
         1 000136   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000137   200023 116100                    CMPQ    LEASTOK,,AUTO
         1 000140   001253 604000 1                  TMI     TRY_SDEF

      229    10244    1        S_D.FNDENTDEF = '1'B;

  10244  1 000141   400000 236003                    LDQ     -131072,DU
         1 000142   000000 471400 xsym               LDP1    S_D$
         1 000143   100721 756100                    STQ     465,,PR1

      230    10245                                                /* Get name pointer to primary entdef */
      231    10246    1        IF S_D.LASTPD.RANGE + S_D.LASTPD.IC >= 1048576 /* 2**20 */

  10246  1 000144   105257 236100                    LDQ     2735,,PR1
         1 000145   105260 036100                    ADLQ    2736,,PR1
         1 000146   000004 116003                    CMPQ    4,DU
         1 000147   000155 604000 1                  TMI     CONTINUE_PEDEF
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:29   
         1 000150   200003 473500                    LDP3    @IC,,AUTO
         1 000151   105260 236100                    LDQ     2736,,PR1
         1 000152   000155 604000 1                  TMI     CONTINUE_PEDEF
         1 000153   300000 116100                    CMPQ    0,,PR3
         1 000154   001301 604000 1                  TMI     TRY_UDEF

      232    10247    1          AND IC > S_D.LASTPD.IC
      233    10248    1        THEN GOTO TRY_UDEF;
      234    10249    1   CONTINUE_PEDEF:
      235    10250    1        PNP$ = PINCRW( S_D.DNAME$, PRIM$ -> B$EDEF.NPOINTER );

  10250  1 000155   200017 470500       CONTINUE_PE* LDP0    PRIM$,,AUTO
         1 000156   000001 220100                    LDX0    1,,PR0
         1 000157   000000 471400 xsym               LDP1    S_D$
         1 000160   101041 473500                    LDP3    545,,PR1
         1 000161   300000 634510                    EPPR4   0,X0,PR3
         1 000162   200013 454500                    STP4    PNP$,,AUTO

      236    10251                                      /* Put entdef name in buffer and update pointer */
      237    10252    1        NCARS = PNP$ -> TEXT$C.SIZE;

  10252  1 000163   400000 236100                    LDQ     0,,PR4
         1 000164   000022 772000                    QRL     18
         1 000165   200032 756100                    STQ     NCARS,,AUTO

      238    10253                                      /* Initialize "FULL POSITION" wanted condition */
      239    10254    1        SDEF = '0'B;

  10254  1 000166   200033 450100                    STZ     SDEF,,AUTO

      240    10255                                                /* Calculate offset */
      241    10256    1        OFFSET = IC - PRIM$ -> B$EDEF.ISADDR;

  10256  1 000167   000000 236100                    LDQ     0,,PR0
         1 000170   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000171   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 000172   200003 475500                    LDP5    @IC,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:30   
         1 000173   500000 236100                    LDQ     0,,PR5
         1 000174   200066 136100                    SBLQ    @LENGTH+2,,AUTO
         1 000175   200022 756100                    STQ     OFFSET,,AUTO

      242    10257    1        IF (NOT S_D.SCHEMA) OR NO_UDEFS

  10257  1 000176   100052 234100                    SZN     42,,PR1
         1 000177   000207 605000 1                  TPL     SET_OFFSET
         1 000200   200010 234100                    SZN     NO_UDEFS,,AUTO
         1 000201   000207 604000 1                  TMI     SET_OFFSET

      243    10258    1        THEN GOTO SET_OFFSET;
      244    10259    2        CALL DDS$ES_INQ( IC ) WHENALTRETURN DO;

  10259  1 000202   200003 630500                    EPPR0   @IC,,AUTO
         1 000203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000204   000000 701000 xent               TSX1    DDS$ES_INQ
         1 000205   000207 702000 1                  TSX2    SET_OFFSET
         1 000206   000214 710000 1                  TRA     s:10266

      245    10260    2   SET_OFFSET:
      246    10261    2             PRINT_OFFSET = '1'B;

  10261  1 000207   400000 236003       SET_OFFSET   LDQ     -131072,DU
         1 000210   200047 756100                    STQ     PRINT_OFFSET,,AUTO

      247    10262    2             PRINT_LINE = '0'B;

  10262  1 000211   200050 450100                    STZ     PRINT_LINE,,AUTO

      248    10263    2             PRINT_TYPE = '0'B;

  10263  1 000212   200051 450100                    STZ     PRINT_TYPE,,AUTO

      249    10264    2             GOTO PUT_OFFSET1;

  10264  1 000213   000241 710000 1                  TRA     PUT_OFFSET1
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:31   

      250    10265    2           END;
      251    10266    1        IF S_D.LB1$ -> B$LBNTRY1.STMNTSIZ = 0

  10266  1 000214   000000 470400 xsym               LDP0    S_D$
         1 000215   001036 471500                    LDP1    542,,PR0
         1 000216   100001 220100                    LDX0    1,,PR1
         1 000217   000241 600000 1                  TZE     PUT_OFFSET1

      252    10267    1        THEN GOTO PUT_OFFSET1;
      253    10268    1        COMPX = S_D.LB0$ -> B$LBNTRY0.COMPILER;

  10268  1 000220   001035 473500                    LDP3    541,,PR0
         1 000221   300000 236100                    LDQ     0,,PR3
         1 000222   000022 772000                    QRL     18
         1 000223   000777 376007                    ANQ     511,DL
         1 000224   200054 756100                    STQ     COMPX,,AUTO

      254    10269    1        PRINT_OFFSET = S_D.REPORT_FLAGS.OFFSET( COMPX );

  10269  1 000225   005214 236106                    LDQ     2700,QL,PR0
         1 000226   400000 376003                    ANQ     -131072,DU
         1 000227   200047 756100                    STQ     PRINT_OFFSET,,AUTO

      255    10270    1        PRINT_LINE = S_D.REPORT_FLAGS.LINE( COMPX );

  10270  1 000230   200054 721100                    LXL1    COMPX,,AUTO
         1 000231   005214 236111                    LDQ     2700,X1,PR0
         1 000232   000001 736000                    QLS     1
         1 000233   400000 376003                    ANQ     -131072,DU
         1 000234   200050 756100                    STQ     PRINT_LINE,,AUTO

      256    10271    1        PRINT_TYPE = S_D.REPORT_FLAGS.TYPE( COMPX );

  10271  1 000235   005214 236111                    LDQ     2700,X1,PR0
         1 000236   000002 736000                    QLS     2
         1 000237   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:32   
         1 000240   200051 756100                    STQ     PRINT_TYPE,,AUTO

      257    10272    1   PUT_OFFSET1:
      258    10273    1        CALL MOVE( PNP$ -> TEXT$C.TXT, NCARS ) ALTRET( TOO_BIG );

  10273  1 000241   200032 630500       PUT_OFFSET1  EPPR0   NCARS,,AUTO
         1 000242   200064 450500                    STP0    @STRING+1,,AUTO
         1 000243   200013 236100                    LDQ     PNP$,,AUTO
         1 000244   400000 036007                    ADLQ    -131072,DL
         1 000245   200063 756100                    STQ     COMPX+7,,AUTO
         1 000246   001474 701000 1                  TSX1    MOVE
         1 000247   001473 702000 1                  TSX2    TOO_BIG

  10271  1 000250                       PUT_OFFSET   null
      259    10274    1   PUT_OFFSET: ;
      260    10275    1        IF ( OFFSET ~= 0 ) AND ( PRINT_OFFSET )

  10275  1 000250   200022 235100                    LDA     OFFSET,,AUTO
         1 000251   000341 600000 1                  TZE     s:10292
         1 000252   200047 234100                    SZN     PRINT_OFFSET,,AUTO
         1 000253   000341 605000 1                  TPL     s:10292

      261    10276    2        THEN DO;

      262    10277                                                /* Precede offset with + */
      263    10278    2             CALL MOVE( '+', 1 ) ALTRET( TOO_BIG );

  10278  1 000254   000001 236000 2                  LDQ     1
         1 000255   200064 756100                    STQ     @STRING+1,,AUTO
         1 000256   000002 236000 2                  LDQ     2
         1 000257   200063 756100                    STQ     COMPX+7,,AUTO
         1 000260   001474 701000 1                  TSX1    MOVE
         1 000261   001473 702000 1                  TSX2    TOO_BIG

      264    10279                                 /* Convert offset to octal. Suppress leading zeros. */
      265    10280    2             IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:33   
  10280  1 000262   000000 470400 xsym               LDP0    S_D$
         1 000263   006714 235100                    LDA     3532,,PR0
         1 000264   000001 115007                    CMPA    1,DL
         1 000265   000305 601000 1                  TNZ     s:10282

      266    10281    2             THEN CALL DDR$BINTXT( ADDR( TBUF ), OFFSET, %OCT_FMT, NCARS );

  10281  1 000266   200025 631500                    EPPR1   TBUF,,AUTO
         1 000267   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000270   200032 633500                    EPPR3   NCARS,,AUTO
         1 000271   200073 453500                    STP3    @LENGTH+7,,AUTO
         1 000272   000001 236000 2                  LDQ     1
         1 000273   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 000274   200022 634500                    EPPR4   OFFSET,,AUTO
         1 000275   200071 454500                    STP4    @LENGTH+5,,AUTO
         1 000276   200066 635500                    EPPR5   @LENGTH+2,,AUTO
         1 000277   200070 455500                    STP5    @LENGTH+4,,AUTO
         1 000300   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 000301   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000302   000000 701000 xent               TSX1    DDR$BINTXT
         1 000303   000000 011000                    NOP     0
         1 000304   000331 710000 1                  TRA     s:10289

      267    10282    2             ELSE IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6

  10282  1 000305   000002 115007                    CMPA    2,DL
         1 000306   000326 601000 1                  TNZ     s:10285

      268    10283    2                  THEN CALL DDR$BINTXT( ADDR( TBUF ), OFFSET, %X_FMT, NCARS );

  10283  1 000307   200025 631500                    EPPR1   TBUF,,AUTO
         1 000310   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000311   200032 633500                    EPPR3   NCARS,,AUTO
         1 000312   200073 453500                    STP3    @LENGTH+7,,AUTO
         1 000313   000004 236000 2                  LDQ     4
         1 000314   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 000315   200022 634500                    EPPR4   OFFSET,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:34   
         1 000316   200071 454500                    STP4    @LENGTH+5,,AUTO
         1 000317   200066 635500                    EPPR5   @LENGTH+2,,AUTO
         1 000320   200070 455500                    STP5    @LENGTH+4,,AUTO
         1 000321   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 000322   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000323   000000 701000 xent               TSX1    DDR$BINTXT
         1 000324   000000 011000                    NOP     0
         1 000325   000331 710000 1                  TRA     s:10289

      269    10284    3                  ELSE DO;

      270    10285    3                       S_D.ERROR = E@DELBUG; /* E@DELBUG */

  10285  1 000326   000766 236007                    LDQ     502,DL
         1 000327   000013 756100                    STQ     11,,PR0

      271    10286    3                       ALTRETURN;

  10286  1 000330   000000 702200 xent               TSX2  ! X66_AALT

      272    10287    3                     END;
      273    10288                                                /* Put offset in buffer */
      274    10289    2             CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );

  10289  1 000331   200032 630500                    EPPR0   NCARS,,AUTO
         1 000332   200064 450500                    STP0    @STRING+1,,AUTO
         1 000333   200025 631500                    EPPR1   TBUF,,AUTO
         1 000334   200063 451500                    STP1    COMPX+7,,AUTO
         1 000335   001474 701000 1                  TSX1    MOVE
         1 000336   001473 702000 1                  TSX2    TOO_BIG

      275    10290    2             IF UPDATE THEN GOTO RETN;

  10290  1 000337   200043 234100                    SZN     UPDATE,,AUTO
         1 000340   001245 604000 1                  TMI     RETN

      276    10291    2           END;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:35   

      277    10292    1        S_D.FNDOFFSET = PRINT_OFFSET;

  10292  1 000341   200047 236100                    LDQ     PRINT_OFFSET,,AUTO
         1 000342   400000 376003                    ANQ     -131072,DU
         1 000343   000000 470400 xsym               LDP0    S_D$
         1 000344   000513 756100                    STQ     331,,PR0

      278    10293                  /* Don't proceed with "FULL POSITION" if IC is not in procedure */
      279    10294    1        IF SDEF THEN RETURN;

  10294  1 000345   200033 234100                    SZN     SDEF,,AUTO
         1 000346   000350 605000 1                  TPL     s:10295

  10294  1 000347   000000 702200 xent               TSX2  ! X66_ARET

      280    10295    1        IF ( NOT PRINT_LINE ) AND ( NOT PRINT_TYPE )

  10295  1 000350   200050 234100                    SZN     PRINT_LINE,,AUTO
         1 000351   000354 604000 1                  TMI     s:10297
         1 000352   200051 234100                    SZN     PRINT_TYPE,,AUTO
         1 000353   001013 605000 1                  TPL     LBLFIND

      281    10296    1        THEN GOTO LBLFIND;
      282    10297    1        CALL DDF$STATEMENT( IC, ST#, SUBST#, SUBST ) ALTRET( LBLFIND );

  10297  1 000354   200041 631500                    EPPR1   SUBST,,AUTO
         1 000355   200071 451500                    STP1    @LENGTH+5,,AUTO
         1 000356   200046 633500                    EPPR3   SUBST#,,AUTO
         1 000357   200070 453500                    STP3    @LENGTH+4,,AUTO
         1 000360   200045 634500                    EPPR4   ST#,,AUTO
         1 000361   200067 454500                    STP4    @LENGTH+3,,AUTO
         1 000362   200003 236100                    LDQ     @IC,,AUTO
         1 000363   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 000364   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000365   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000366   000000 701000 xent               TSX1    DDF$STATEMENT
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:36   
         1 000367   001013 702000 1                  TSX2    LBLFIND

      283    10298    1        GOTSTATEMENT = '1'B;

  10298  1 000370   400000 236003                    LDQ     -131072,DU
         1 000371   200052 756100                    STQ     GOTSTATEMENT,,AUTO

      284    10299    1        IF NOT PRINT_LINE

  10299  1 000372   200050 234100                    SZN     PRINT_LINE,,AUTO
         1 000373   001013 605000 1                  TPL     LBLFIND

      285    10300    1        THEN GOTO LBLFIND;
      286    10301    1        CALL DDF$EXST_#( ST#, ST$ ) ALTRET( LBLFIND );

  10301  1 000374   200015 630500                    EPPR0   ST$,,AUTO
         1 000375   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 000376   200045 631500                    EPPR1   ST#,,AUTO
         1 000377   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000400   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000401   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000402   000000 701000 xent               TSX1    DDF$EXST_#
         1 000403   001013 702000 1                  TSX2    LBLFIND

      287    10302    1        TIC = ST$ -> B$EXST.ISADDR;

  10302  1 000404   200015 470500                    LDP0    ST$,,AUTO
         1 000405   000000 236100                    LDQ     0,,PR0
         1 000406   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000407   200036 756100                    STQ     TIC,,AUTO

      288    10303    1        TNP = ST$ -> B$EXST.NPOINTER;

  10303  1 000410   000001 236100                    LDQ     1,,PR0
         1 000411   000022 732000                    QRS     18
         1 000412   200040 756100                    STQ     TNP,,AUTO

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:37   
      289    10304    1        IF COMPX = %GMAPID

  10304  1 000413   200054 235100                    LDA     COMPX,,AUTO
         1 000414   000456 601000 1                  TNZ     s:10319

      290    10305    1        THEN IF ( TIC = IC ) AND ( TNP >= 0 )

  10305  1 000415   200003 471500                    LDP1    @IC,,AUTO
         1 000416   200036 236100                    LDQ     TIC,,AUTO
         1 000417   001013 604000 1                  TMI     LBLFIND
         1 000420   100000 116100                    CMPQ    0,,PR1
         1 000421   001013 601000 1                  TNZ     LBLFIND
         1 000422   200040 235100                    LDA     TNP,,AUTO
         1 000423   001013 604000 1                  TMI     LBLFIND

      291    10306    2             THEN DO;

      292    10307    2                  IF S_D.DBG$ = ADDR( NIL )

  10307  1 000424   000000 473400 xsym               LDP3    S_D$
         1 000425   301005 236100                    LDQ     517,,PR3
         1 000426   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000427   000433 601000 1                  TNZ     s:10312

      293    10308    3                  THEN DO;

      294    10309    3                       LABEL$ = NODBGMSG$;

  10309  1 000430   000244 236000 0                  LDQ     NODBGMSG$
         1 000431   200020 756100                    STQ     LABEL$,,AUTO

      295    10310    3                       GOTO LBLEND;

  10310  1 000432   001062 710000 1                  TRA     LBLEND

      296    10311    3                     END;
      297    10312    2                  CALL DDF$DBG_#( TNP, LABEL$ ) ALTRET( LBLFIND );
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:38   

  10312  1 000433   200020 634500                    EPPR4   LABEL$,,AUTO
         1 000434   200067 454500                    STP4    @LENGTH+3,,AUTO
         1 000435   200040 635500                    EPPR5   TNP,,AUTO
         1 000436   200066 455500                    STP5    @LENGTH+2,,AUTO
         1 000437   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000440   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000441   000000 701000 xent               TSX1    DDF$DBG_#
         1 000442   001013 702000 1                  TSX2    LBLFIND

      298    10313    2                  IF LABEL$ -> TEXT$C = PNP$ -> TEXT$C

  10313  1 000443   200020 470500                    LDP0    LABEL$,,AUTO
         1 000444   000000 220100                    LDX0    0,,PR0
         1 000445   000002 621010                    EAX1    2,X0
         1 000446   200013 471500                    LDP1    PNP$,,AUTO
         1 000447   100000 222100                    LDX2    0,,PR1
         1 000450   000002 623012                    EAX3    2,X2
         1 000451   000140 106540                    CMPC    fill='000'O
         1 000452   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         1 000453   100000 000013                    ADSC9   0,,PR1                   cn=0,n=*X3
         1 000454   001132 600000 1                  TZE     LBLEND1

      299    10314    2                  THEN GOTO LBLEND1;
      300    10315    2                  ELSE GOTO LBLEND;

  10315  1 000455   001062 710000 1                  TRA     LBLEND

      301    10316    2                END;
      302    10317    1             ELSE GOTO LBLFIND;
      303    10318                                                /* Put : After entdef */
      304    10319    1        IF S_D.REPORTING_ONCALL THEN GOTO GET_SEDEF;

  10319  1 000456   000000 471400 xsym               LDP1    S_D$
         1 000457   106765 234100                    SZN     3573,,PR1
         1 000460   000702 604000 1                  TMI     GET_SEDEF

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:39   
      305    10320    1        IF PRINT_OFFSET

  10320  1 000461   200047 234100                    SZN     PRINT_OFFSET,,AUTO
         1 000462   000472 605000 1                  TPL     s:10322

      306    10321    1        THEN CALL MOVE( ' :', 2) ALTRET(TOO_BIG);

  10321  1 000463   000005 236000 2                  LDQ     5
         1 000464   200064 756100                    STQ     @STRING+1,,AUTO
         1 000465   000006 236000 2                  LDQ     6
         1 000466   200063 756100                    STQ     COMPX+7,,AUTO
         1 000467   001474 701000 1                  TSX1    MOVE
         1 000470   001473 702000 1                  TSX2    TOO_BIG
         1 000471   000500 710000 1                  TRA     s:10324

      307    10322    1        ELSE CALL MOVE( ':', 1 ) ALTRET( TOO_BIG );

  10322  1 000472   000001 236000 2                  LDQ     1
         1 000473   200064 756100                    STQ     @STRING+1,,AUTO
         1 000474   000010 236000 2                  LDQ     8
         1 000475   200063 756100                    STQ     COMPX+7,,AUTO
         1 000476   001474 701000 1                  TSX1    MOVE
         1 000477   001473 702000 1                  TSX2    TOO_BIG

      308    10323                                                /* Put line number in buffer */
      309    10324    1        TEMP = ST$ -> B$EXST.LINENUM;

  10324  1 000500   200015 470500                    LDP0    ST$,,AUTO
         1 000501   000002 236100                    LDQ     2,,PR0
         1 000502   777777 376007                    ANQ     -1,DL
         1 000503   200031 756100                    STQ     TEMP,,AUTO

      310    10325    1        CALL DDR$BINTXT( ADDR( TBUF ), TEMP, %UINT_FMT, NCARS );

  10325  1 000504   200025 631500                    EPPR1   TBUF,,AUTO
         1 000505   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000506   200032 633500                    EPPR3   NCARS,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:40   
         1 000507   200073 453500                    STP3    @LENGTH+7,,AUTO
         1 000510   000005 236000 2                  LDQ     5
         1 000511   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 000512   200031 634500                    EPPR4   TEMP,,AUTO
         1 000513   200071 454500                    STP4    @LENGTH+5,,AUTO
         1 000514   200066 635500                    EPPR5   @LENGTH+2,,AUTO
         1 000515   200070 455500                    STP5    @LENGTH+4,,AUTO
         1 000516   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 000517   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000520   000000 701000 xent               TSX1    DDR$BINTXT
         1 000521   000000 011000                    NOP     0

      311    10326    1        CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );

  10326  1 000522   200032 630500                    EPPR0   NCARS,,AUTO
         1 000523   200064 450500                    STP0    @STRING+1,,AUTO
         1 000524   200025 631500                    EPPR1   TBUF,,AUTO
         1 000525   200063 451500                    STP1    COMPX+7,,AUTO
         1 000526   001474 701000 1                  TSX1    MOVE
         1 000527   001473 702000 1                  TSX2    TOO_BIG

      312    10327    1        IF IC ~= TIC

  10327  1 000530   200003 470500                    LDP0    @IC,,AUTO
         1 000531   000000 236100                    LDQ     0,,PR0
         1 000532   000535 604000 1                  TMI     s:10329
         1 000533   200036 116100                    CMPQ    TIC,,AUTO
         1 000534   000700 600000 1                  TZE     s:10353

      313    10328    2        THEN DO;

      314    10329    2             CALL MOVE( ',', 1 ) ALTRET( TOO_BIG );

  10329  1 000535   000001 236000 2                  LDQ     1
         1 000536   200064 756100                    STQ     @STRING+1,,AUTO
         1 000537   000012 236000 2                  LDQ     10
         1 000540   200063 756100                    STQ     COMPX+7,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:41   
         1 000541   001474 701000 1                  TSX1    MOVE
         1 000542   001473 702000 1                  TSX2    TOO_BIG

      315    10330    2             IF SUBST ~= 0

  10330  1 000543   200041 235100                    LDA     SUBST,,AUTO
         1 000544   000610 600000 1                  TZE     s:10338

      316    10331    3             THEN DO;

      317    10332    3                  CALL DDR$BINTXT( ADDR( TBUF ), SUBST, %UINT_FMT, NCARS );

  10332  1 000545   200025 630500                    EPPR0   TBUF,,AUTO
         1 000546   200066 450500                    STP0    @LENGTH+2,,AUTO
         1 000547   200032 631500                    EPPR1   NCARS,,AUTO
         1 000550   200073 451500                    STP1    @LENGTH+7,,AUTO
         1 000551   000005 236000 2                  LDQ     5
         1 000552   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 000553   200041 633500                    EPPR3   SUBST,,AUTO
         1 000554   200071 453500                    STP3    @LENGTH+5,,AUTO
         1 000555   200066 634500                    EPPR4   @LENGTH+2,,AUTO
         1 000556   200070 454500                    STP4    @LENGTH+4,,AUTO
         1 000557   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 000560   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000561   000000 701000 xent               TSX1    DDR$BINTXT
         1 000562   000000 011000                    NOP     0

      318    10333    3                  CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );

  10333  1 000563   200032 630500                    EPPR0   NCARS,,AUTO
         1 000564   200064 450500                    STP0    @STRING+1,,AUTO
         1 000565   200025 631500                    EPPR1   TBUF,,AUTO
         1 000566   200063 451500                    STP1    COMPX+7,,AUTO
         1 000567   001474 701000 1                  TSX1    MOVE
         1 000570   001473 702000 1                  TSX2    TOO_BIG

      319    10334    3                  CALL DDF$EXST_#( SUBST#, ST$ ) ALTRET( LBLFIND );
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:42   

  10334  1 000571   200015 630500                    EPPR0   ST$,,AUTO
         1 000572   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 000573   200046 631500                    EPPR1   SUBST#,,AUTO
         1 000574   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000575   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000576   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000577   000000 701000 xent               TSX1    DDF$EXST_#
         1 000600   001013 702000 1                  TSX2    LBLFIND

      320    10335    3                  TIC = ST$ -> B$EXST.ISADDR;

  10335  1 000601   200015 470500                    LDP0    ST$,,AUTO
         1 000602   000000 236100                    LDQ     0,,PR0
         1 000603   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000604   200036 756100                    STQ     TIC,,AUTO

      321    10336    3                  TNP = ST$ -> B$EXST.NPOINTER;

  10336  1 000605   000001 236100                    LDQ     1,,PR0
         1 000606   000022 732000                    QRS     18
         1 000607   200040 756100                    STQ     TNP,,AUTO

      322    10337    3                END;

      323    10338    2             TEMP = IC - TIC;

  10338  1 000610   200003 470500                    LDP0    @IC,,AUTO
         1 000611   000000 236100                    LDQ     0,,PR0
         1 000612   200036 136100                    SBLQ    TIC,,AUTO
         1 000613   200031 756100                    STQ     TEMP,,AUTO

      324    10339    2             IF TEMP ~= 0

  10339  1 000614   000700 600000 1                  TZE     s:10353

      325    10340    3             THEN DO;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:43   

      326    10341    3                  CALL MOVE( ',', 1 ) ALTRET( TOO_BIG );

  10341  1 000615   000001 236000 2                  LDQ     1
         1 000616   200064 756100                    STQ     @STRING+1,,AUTO
         1 000617   000012 236000 2                  LDQ     10
         1 000620   200063 756100                    STQ     COMPX+7,,AUTO
         1 000621   001474 701000 1                  TSX1    MOVE
         1 000622   001473 702000 1                  TSX2    TOO_BIG

      327    10342    3                  IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST

  10342  1 000623   000000 470400 xsym               LDP0    S_D$
         1 000624   006714 235100                    LDA     3532,,PR0
         1 000625   000001 115007                    CMPA    1,DL
         1 000626   000646 601000 1                  TNZ     s:10344

      328    10343    3                  THEN CALL DDR$BINTXT ( ADDR(TBUF), TEMP, %OCT_FMT, NCARS );

  10343  1 000627   200025 631500                    EPPR1   TBUF,,AUTO
         1 000630   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000631   200032 633500                    EPPR3   NCARS,,AUTO
         1 000632   200073 453500                    STP3    @LENGTH+7,,AUTO
         1 000633   000001 236000 2                  LDQ     1
         1 000634   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 000635   200031 634500                    EPPR4   TEMP,,AUTO
         1 000636   200071 454500                    STP4    @LENGTH+5,,AUTO
         1 000637   200066 635500                    EPPR5   @LENGTH+2,,AUTO
         1 000640   200070 455500                    STP5    @LENGTH+4,,AUTO
         1 000641   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 000642   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000643   000000 701000 xent               TSX1    DDR$BINTXT
         1 000644   000000 011000                    NOP     0
         1 000645   000672 710000 1                  TRA     s:10350

      329    10344    3                  ELSE IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:44   
  10344  1 000646   000002 115007                    CMPA    2,DL
         1 000647   000667 601000 1                  TNZ     s:10347

      330    10345    3                       THEN CALL DDR$BINTXT ( ADDR(TBUF), TEMP, %X_FMT, NCARS);

  10345  1 000650   200025 631500                    EPPR1   TBUF,,AUTO
         1 000651   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000652   200032 633500                    EPPR3   NCARS,,AUTO
         1 000653   200073 453500                    STP3    @LENGTH+7,,AUTO
         1 000654   000004 236000 2                  LDQ     4
         1 000655   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 000656   200031 634500                    EPPR4   TEMP,,AUTO
         1 000657   200071 454500                    STP4    @LENGTH+5,,AUTO
         1 000660   200066 635500                    EPPR5   @LENGTH+2,,AUTO
         1 000661   200070 455500                    STP5    @LENGTH+4,,AUTO
         1 000662   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 000663   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000664   000000 701000 xent               TSX1    DDR$BINTXT
         1 000665   000000 011000                    NOP     0
         1 000666   000672 710000 1                  TRA     s:10350

      331    10346    4                       ELSE DO;

      332    10347    4                            S_D.ERROR = E@DELBUG; /* E@DELBUG */

  10347  1 000667   000766 236007                    LDQ     502,DL
         1 000670   000013 756100                    STQ     11,,PR0

      333    10348    4                            ALTRETURN;

  10348  1 000671   000000 702200 xent               TSX2  ! X66_AALT

      334    10349    4                          END;
      335    10350    3                  CALL MOVE ( TBUF, NCARS ) ALTRET( TOO_BIG );

  10350  1 000672   200032 630500                    EPPR0   NCARS,,AUTO
         1 000673   200064 450500                    STP0    @STRING+1,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:45   
         1 000674   200025 631500                    EPPR1   TBUF,,AUTO
         1 000675   200063 451500                    STP1    COMPX+7,,AUTO
         1 000676   001474 701000 1                  TSX1    MOVE
         1 000677   001473 702000 1                  TSX2    TOO_BIG

      336    10351    3                END;

      337    10352    2           END;

      338    10353    1        IF UPDATE

  10353  1 000700   200043 234100                    SZN     UPDATE,,AUTO
         1 000701   001245 604000 1                  TMI     RETN

      339    10354    1        THEN GOTO RETN;
      340    10355    1   GET_SEDEF:
      341    10356    1        IF TNP >= 0

  10356  1 000702   200040 235100       GET_SEDEF    LDA     TNP,,AUTO
         1 000703   000724 604000 1                  TMI     s:10364

      342    10357    2        THEN DO;

      343    10358    2   DOLABEL:  IF S_D.DBG$ = ADDR( NIL )

  10358  1 000704   000000 470400 xsym  DOLABEL      LDP0    S_D$
         1 000705   001005 236100                    LDQ     517,,PR0
         1 000706   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000707   000713 601000 1                  TNZ     s:10360

      344    10359    2             THEN LABEL$ = NODBGMSG$;

  10359  1 000710   000244 236000 0                  LDQ     NODBGMSG$
         1 000711   200020 756100                    STQ     LABEL$,,AUTO
         1 000712   000723 710000 1                  TRA     s:10361

      345    10360    2             ELSE CALL DDF$DBG_#( TNP, LABEL$ ) ALTRET( LBLFIND );
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:46   

  10360  1 000713   200020 631500                    EPPR1   LABEL$,,AUTO
         1 000714   200067 451500                    STP1    @LENGTH+3,,AUTO
         1 000715   200040 633500                    EPPR3   TNP,,AUTO
         1 000716   200066 453500                    STP3    @LENGTH+2,,AUTO
         1 000717   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000720   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000721   000000 701000 xent               TSX1    DDF$DBG_#
         1 000722   001013 702000 1                  TSX2    LBLFIND

      346    10361    2             GOTO LBLEND;

  10361  1 000723   001062 710000 1                  TRA     LBLEND

      347    10362    2           END;
      348    10363    2        ELSE DO;

      349    10364    2             TST$ = ST$;

  10364  1 000724   200015 236100                    LDQ     ST$,,AUTO
         1 000725   200016 756100                    STQ     TST$,,AUTO

      350    10365    2             CALL DDF$P_EXST (TST$) ALTRET (NOPE);

  10365  1 000726   200016 630500                    EPPR0   TST$,,AUTO
         1 000727   200066 450500                    STP0    @LENGTH+2,,AUTO
         1 000730   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000731   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000732   000000 701000 xent               TSX1    DDF$P_EXST
         1 000733   000766 702000 1                  TSX2    NOPE

      351    10366    2             TTIC = TST$->B$EXST.ISADDR;

  10366  1 000734   200016 470500                    LDP0    TST$,,AUTO
         1 000735   000000 236100                    LDQ     0,,PR0
         1 000736   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000737   200037 756100                    STQ     TTIC,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:47   

      352    10367    3   DO_WHILE: DO WHILE (TTIC = TIC);

  10367  1 000740   200036 116100       DO_WHILE     CMPQ    TIC,,AUTO
         1 000741   000766 601000 1                  TNZ     NOPE

      353    10368    3                  IF TST$->B$EXST.NPOINTER~=-1 THEN

  10368  1 000742   200016 470500                    LDP0    TST$,,AUTO
         1 000743   000001 220100                    LDX0    1,,PR0
         1 000744   777777 100003                    CMPX0   -1,DU
         1 000745   000752 600000 1                  TZE     s:10373

      354    10369    4                  DO;

      355    10370    4                       TNP=TST$->B$EXST.NPOINTER;

  10370  1 000746   000001 236100                    LDQ     1,,PR0
         1 000747   000022 732000                    QRS     18
         1 000750   200040 756100                    STQ     TNP,,AUTO

      356    10371    4                       GOTO DOLABEL;

  10371  1 000751   000704 710000 1                  TRA     DOLABEL

      357    10372    4                     END;
      358    10373    3                  CALL DDF$P_EXST (TST$) ALTRET (NOPE);

  10373  1 000752   200016 631500                    EPPR1   TST$,,AUTO
         1 000753   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 000754   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000755   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000756   000000 701000 xent               TSX1    DDF$P_EXST
         1 000757   000766 702000 1                  TSX2    NOPE

      359    10374    3                  TTIC = TST$->B$EXST.ISADDR;

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:48   
  10374  1 000760   200016 470500                    LDP0    TST$,,AUTO
         1 000761   000000 236100                    LDQ     0,,PR0
         1 000762   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000763   200037 756100                    STQ     TTIC,,AUTO

      360    10375    3                END;

  10375  1 000764   200036 116100                    CMPQ    TIC,,AUTO
         1 000765   000742 600000 1                  TZE     s:10368

  10374  1 000766                       NOPE         null
      361    10376    2   NOPE:     ;
      362    10377    2             CALL DDF$FIND_IE( IC, ENTRY$ ) ALTRET( LBLFIND );

  10377  1 000766   200021 630500                    EPPR0   ENTRY$,,AUTO
         1 000767   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 000770   200003 236100                    LDQ     @IC,,AUTO
         1 000771   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 000772   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 000773   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000774   000000 701000 xent               TSX1    DDF$FIND_IE
         1 000775   001013 702000 1                  TSX2    LBLFIND

      363    10378    2             TEMP = ENTRY$ -> B$INTNTRY.NPOINTER;

  10378  1 000776   200021 470500                    LDP0    ENTRY$,,AUTO
         1 000777   000001 236100                    LDQ     1,,PR0
         1 001000   000022 732000                    QRS     18
         1 001001   200031 756100                    STQ     TEMP,,AUTO

      364    10379    2             CALL DDF$DBG_#( TEMP, LABEL$ ) ALTRET( LBLFIND );

  10379  1 001002   200020 631500                    EPPR1   LABEL$,,AUTO
         1 001003   200067 451500                    STP1    @LENGTH+3,,AUTO
         1 001004   200031 633500                    EPPR3   TEMP,,AUTO
         1 001005   200066 453500                    STP3    @LENGTH+2,,AUTO
         1 001006   200066 630500                    EPPR0   @LENGTH+2,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:49   
         1 001007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001010   000000 701000 xent               TSX1    DDF$DBG_#
         1 001011   001013 702000 1                  TSX2    LBLFIND

      365    10380    2             GOTO LBLEND;

  10380  1 001012   001062 710000 1                  TRA     LBLEND

      366    10381    2   LBLFIND:
      367    10382    2             CALL DDF$FIND_SEDEF( IC, ENTRY$ ) ALTRET( TRY_EXACT_SDEF );

  10382  1 001013   200021 630500       LBLFIND      EPPR0   ENTRY$,,AUTO
         1 001014   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 001015   200003 236100                    LDQ     @IC,,AUTO
         1 001016   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 001017   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 001020   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001021   000000 701000 xent               TSX1    DDF$FIND_SEDEF
         1 001022   001032 702000 1                  TSX2    TRY_EXACT_SDEF

      368    10383    2             LABEL$ = PINCRW( S_D.DNAME$, ENTRY$ -> B$EDEF.NPOINTER );

  10383  1 001023   200021 470500                    LDP0    ENTRY$,,AUTO
         1 001024   000001 220100                    LDX0    1,,PR0
         1 001025   000000 471400 xsym               LDP1    S_D$
         1 001026   101041 473500                    LDP3    545,,PR1
         1 001027   300000 634510                    EPPR4   0,X0,PR3
         1 001030   200020 454500                    STP4    LABEL$,,AUTO

      369    10384    2             GOTO LBLEND;

  10384  1 001031   001062 710000 1                  TRA     LBLEND

      370    10385    2   TRY_EXACT_SDEF:
      371    10386    2             CALL DDF$FIND_SYMDEF( IC, ENTRY$, '1'B ) ALTRET( LBLEND );

  10386  1 001032   000013 236000 2     TRY_EXACT_S* LDQ     11
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:50   
         1 001033   200070 756100                    STQ     @LENGTH+4,,AUTO
         1 001034   200021 630500                    EPPR0   ENTRY$,,AUTO
         1 001035   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 001036   200003 236100                    LDQ     @IC,,AUTO
         1 001037   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 001040   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 001041   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001042   000000 701000 xent               TSX1    DDF$FIND_SYMDEF
         1 001043   001062 702000 1                  TSX2    LBLEND

      372    10387    2             I_SHOULD_RESET_SCHEMA = '1'B;

  10387  1 001044   400000 236003                    LDQ     -131072,DU
         1 001045   200011 756100                    STQ     I_SHOULD_RESET_SCHEMA,,AUTO

      373    10388    2             IF ( ENTRY$ -> B$SDEF.AD.ISADDR = IC )

  10388  1 001046   200003 470500                    LDP0    @IC,,AUTO
         1 001047   200021 471500                    LDP1    ENTRY$,,AUTO
         1 001050   100000 236100                    LDQ     0,,PR1
         1 001051   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001052   000000 116100                    CMPQ    0,,PR0
         1 001053   001061 601000 1                  TNZ     s:10390

      374    10389    2             THEN LABEL$ = PINCRW( S_D.DNAME$, ENTRY$ -> B$SDEF.NPOINTER );

  10389  1 001054   100001 220100                    LDX0    1,,PR1
         1 001055   000000 473400 xsym               LDP3    S_D$
         1 001056   301041 474500                    LDP4    545,,PR3
         1 001057   400000 635510                    EPPR5   0,X0,PR4
         1 001060   200020 455500                    STP5    LABEL$,,AUTO

      375    10390    2             GOTO LBLEND;

  10390  1 001061   001062 710000 1                  TRA     LBLEND

      376    10391    2           END;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:51   
      377    10392    1   LBLEND:
      378    10393    1        IF ( LABEL$ ~= ADDR( NIL ) )

  10393  1 001062   200020 236100       LBLEND       LDQ     LABEL$,,AUTO
         1 001063   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001064   001132 600000 1                  TZE     LBLEND1

      379    10394    2        THEN DO;

      380    10395    2             IF NOT S_D.REPORTING_ONCALL

  10395  1 001065   000000 470400 xsym               LDP0    S_D$
         1 001066   006765 234100                    SZN     3573,,PR0
         1 001067   001077 604000 1                  TMI     s:10397

      381    10396    2             THEN CALL MOVE ( '( ', 2 ) ALTRET( TOO_BIG );

  10396  1 001070   000005 236000 2                  LDQ     5
         1 001071   200064 756100                    STQ     @STRING+1,,AUTO
         1 001072   000014 236000 2                  LDQ     12
         1 001073   200063 756100                    STQ     COMPX+7,,AUTO
         1 001074   001474 701000 1                  TSX1    MOVE
         1 001075   001473 702000 1                  TSX2    TOO_BIG
         1 001076   001105 710000 1                  TRA     s:10399

      382    10397    2             ELSE CALL MOVE (':', 1) ALTRET (TOO_BIG);

  10397  1 001077   000001 236000 2                  LDQ     1
         1 001100   200064 756100                    STQ     @STRING+1,,AUTO
         1 001101   000010 236000 2                  LDQ     8
         1 001102   200063 756100                    STQ     COMPX+7,,AUTO
         1 001103   001474 701000 1                  TSX1    MOVE
         1 001104   001473 702000 1                  TSX2    TOO_BIG

      383    10398                                                /* Move label to buffer */
      384    10399    2             NCARS = LABEL$ -> TEXT$C.SIZE;

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:52   
  10399  1 001105   200020 470500                    LDP0    LABEL$,,AUTO
         1 001106   000000 236100                    LDQ     0,,PR0
         1 001107   000022 772000                    QRL     18
         1 001110   200032 756100                    STQ     NCARS,,AUTO

      385    10400    2             CALL MOVE( LABEL$ -> TEXT$C.TXT, NCARS ) ALTRET( TOO_BIG );

  10400  1 001111   200032 631500                    EPPR1   NCARS,,AUTO
         1 001112   200064 451500                    STP1    @STRING+1,,AUTO
         1 001113   200020 236100                    LDQ     LABEL$,,AUTO
         1 001114   400000 036007                    ADLQ    -131072,DL
         1 001115   200063 756100                    STQ     COMPX+7,,AUTO
         1 001116   001474 701000 1                  TSX1    MOVE
         1 001117   001473 702000 1                  TSX2    TOO_BIG

      386    10401    2             IF NOT S_D.REPORTING_ONCALL

  10401  1 001120   000000 470400 xsym               LDP0    S_D$
         1 001121   006765 234100                    SZN     3573,,PR0
         1 001122   001245 604000 1                  TMI     RETN

      387    10402    2             THEN CALL MOVE ( ' )', 2 ) ALTRET( TOO_BIG );

  10402  1 001123   000005 236000 2                  LDQ     5
         1 001124   200064 756100                    STQ     @STRING+1,,AUTO
         1 001125   000015 236000 2                  LDQ     13
         1 001126   200063 756100                    STQ     COMPX+7,,AUTO
         1 001127   001474 701000 1                  TSX1    MOVE
         1 001130   001473 702000 1                  TSX2    TOO_BIG
         1 001131   001132 710000 1                  TRA     LBLEND1

      388    10403    2             ELSE GOTO RETN;
      389    10404                                                /* Done */
      390    10405    2           END;
      391    10406    1   LBLEND1:
      392    10407        /* Statement type processing */
      393    10408    1        IF PRINT_TYPE AND GOTSTATEMENT
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:53   

  10408  1 001132   200051 234100       LBLEND1      SZN     PRINT_TYPE,,AUTO
         1 001133   001245 605000 1                  TPL     RETN
         1 001134   200052 234100                    SZN     GOTSTATEMENT,,AUTO
         1 001135   001245 605000 1                  TPL     RETN

      394    10409    2        THEN DO;

      395    10410    2             IF SUBST = 0

  10410  1 001136   200041 235100                    LDA     SUBST,,AUTO
         1 001137   001151 601000 1                  TNZ     s:10412

      396    10411    2             THEN CALL DDF$EXST_#( ST#, ST$ ) ALTRET( RETN );

  10411  1 001140   200015 630500                    EPPR0   ST$,,AUTO
         1 001141   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 001142   200045 631500                    EPPR1   ST#,,AUTO
         1 001143   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 001144   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 001145   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001146   000000 701000 xent               TSX1    DDF$EXST_#
         1 001147   001245 702000 1                  TSX2    RETN
         1 001150   001161 710000 1                  TRA     s:10413

      397    10412    2             ELSE CALL DDF$EXST_#( SUBST#, ST$ ) ALTRET( RETN );

  10412  1 001151   200015 630500                    EPPR0   ST$,,AUTO
         1 001152   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 001153   200046 631500                    EPPR1   SUBST#,,AUTO
         1 001154   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 001155   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 001156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001157   000000 701000 xent               TSX1    DDF$EXST_#
         1 001160   001245 702000 1                  TSX2    RETN

      398    10413    2             TYPE = ST$ -> B$EXST.STTYPE;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:54   

  10413  1 001161   200015 470500                    LDP0    ST$,,AUTO
         1 001162   000002 236100                    LDQ     2,,PR0
         1 001163   000022 772000                    QRL     18
         1 001164   000177 376007                    ANQ     127,DL
         1 001165   200053 756100                    STQ     TYPE,,AUTO

      399    10414    2             ST$ = STSTART$;

  10414  1 001166   000241 236000 0                  LDQ     STSTART$
         1 001167   200015 756100                    STQ     ST$,,AUTO

      400    10415    3             DO WHILE ( ST$ < STEND$ );

  10415  1 001170   000242 116000 0                  CMPQ    STEND$
         1 001171   001214 603000 1                  TRC     s:10420

      401    10416    3                  IF ST$ -> STTY$PE.CODE = TYPE

  10416  1 001172   200015 470500                    LDP0    ST$,,AUTO
         1 001173   000100 101500                    MRL     fill='000'O
         1 001174   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 001175   200066 000004                    ADSC9   @LENGTH+2,,AUTO          cn=0,n=4
         1 001176   200066 236100                    LDQ     @LENGTH+2,,AUTO
         1 001177   200053 116100                    CMPQ    TYPE,,AUTO
         1 001200   001216 600000 1                  TZE     GOTYPE

      402    10417    3                  THEN GOTO GOTYPE;
      403    10418    3                  ST$ = PINCRC( ST$, LENGTHC( ST$ -> STTY$PE ) );

  10418  1 001201   000100 101500                    MRL     fill='000'O
         1 001202   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         1 001203   200066 000002                    ADSC9   @LENGTH+2,,AUTO          cn=0,n=2
         1 001204   200066 220100                    LDX0    @LENGTH+2,,AUTO
         1 001205   000002 621010                    EAX1    2,X0
         1 001206   000000 636011                    EAQ     0,X1
         1 001207   000002 772000                    QRL     2
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:55   
         1 001210   200015 036100                    ADLQ    ST$,,AUTO
         1 001211   200015 756100                    STQ     ST$,,AUTO

      404    10419    3                END;

  10419  1 001212   000242 116000 0                  CMPQ    STEND$
         1 001213   001172 602000 1                  TNC     s:10416

      405    10420    2             ST$ = STUNK$;

  10420  1 001214   000243 236000 0                  LDQ     STUNK$
         1 001215   200015 756100                    STQ     ST$,,AUTO

      406    10421    2   GOTYPE:
      407    10422    2             CALL MOVE( ' [', 2 ) ALTRET( TOO_BIG );

  10422  1 001216   000005 236000 2     GOTYPE       LDQ     5
         1 001217   200064 756100                    STQ     @STRING+1,,AUTO
         1 001220   000016 236000 2                  LDQ     14
         1 001221   200063 756100                    STQ     COMPX+7,,AUTO
         1 001222   001474 701000 1                  TSX1    MOVE
         1 001223   001473 702000 1                  TSX2    TOO_BIG

      408    10423    2             NCARS = ST$ -> STTY$PE.SIZE;

  10423  1 001224   200015 470500                    LDP0    ST$,,AUTO
         1 001225   000100 101500                    MRL     fill='000'O
         1 001226   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         1 001227   200032 000004                    ADSC9   NCARS,,AUTO              cn=0,n=4

      409    10424    2             CALL MOVE( ST$ -> STTY$PE.TEXT, NCARS ) ALTRET( TOO_BIG );

  10424  1 001230   200032 631500                    EPPR1   NCARS,,AUTO
         1 001231   200064 451500                    STP1    @STRING+1,,AUTO
         1 001232   200015 236100                    LDQ     ST$,,AUTO
         1 001233   400000 036007                    ADLQ    -131072,DL
         1 001234   200063 756100                    STQ     COMPX+7,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:56   
         1 001235   001474 701000 1                  TSX1    MOVE
         1 001236   001473 702000 1                  TSX2    TOO_BIG

      410    10425    2             CALL MOVE( '] ', 2 ) ALTRET( TOO_BIG );

  10425  1 001237   000005 236000 2                  LDQ     5
         1 001240   200064 756100                    STQ     @STRING+1,,AUTO
         1 001241   000017 236000 2                  LDQ     15
         1 001242   200063 756100                    STQ     COMPX+7,,AUTO
         1 001243   001474 701000 1                  TSX1    MOVE
         1 001244   001473 702000 1                  TSX2    TOO_BIG

      411    10426    2           END;

      412    10427    1   RETN:
      413    10428    1        IF I_SHOULD_RESET_SCHEMA THEN CALL DDS$SET_D2Q;

  10428  1 001245   200011 234100       RETN         SZN     I_SHOULD_RESET_SCHEMA,,AUTO
         1 001246   001252 605000 1                  TPL     s:10429

  10428  1 001247   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001250   000000 701000 xent               TSX1    DDS$SET_D2Q
         1 001251   000000 011000                    NOP     0

      414    10429    1        RETURN;

  10429  1 001252   000000 702200 xent               TSX2  ! X66_ARET

      415    10430    1   TRY_SDEF:
      416    10431    1        CALL DDF$FIND_SYMDEF( IC, SYM$, '1'B ) ALTRET( TRY_UDEF );

  10431  1 001253   000013 236000 2     TRY_SDEF     LDQ     11
         1 001254   200070 756100                    STQ     @LENGTH+4,,AUTO
         1 001255   200024 630500                    EPPR0   SYM$,,AUTO
         1 001256   200067 450500                    STP0    @LENGTH+3,,AUTO
         1 001257   200003 236100                    LDQ     @IC,,AUTO
         1 001260   200066 756100                    STQ     @LENGTH+2,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:57   
         1 001261   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 001262   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001263   000000 701000 xent               TSX1    DDF$FIND_SYMDEF
         1 001264   001301 702000 1                  TSX2    TRY_UDEF

      417    10432    1        IF LEASTOK > SYM$->B$SDEF.AD.ISADDR THEN GOTO TRY_UDEF;

  10432  1 001265   200024 470500                    LDP0    SYM$,,AUTO
         1 001266   000000 236100                    LDQ     0,,PR0
         1 001267   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001270   200023 116100                    CMPQ    LEASTOK,,AUTO
         1 001271   001301 604000 1                  TMI     TRY_UDEF

      418    10433    1        OFFSET = IC - SYM$ -> B$SDEF.AD.ISADDR;

  10433  1 001272   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 001273   200003 471500                    LDP1    @IC,,AUTO
         1 001274   100000 236100                    LDQ     0,,PR1
         1 001275   200066 136100                    SBLQ    @LENGTH+2,,AUTO
         1 001276   200022 756100                    STQ     OFFSET,,AUTO

      419    10434    1        SDFOUND = '1'B;

  10434  1 001277   400000 236003                    LDQ     -131072,DU
         1 001300   200044 756100                    STQ     SDFOUND,,AUTO

      420    10435    1   TRY_UDEF:
      421    10436    1        S_D.KILLEDEF = '0'B;

  10436  1 001301   000000 470400 xsym  TRY_UDEF     LDP0    S_D$
         1 001302   000105 450100                    STZ     69,,PR0

      422    10437    1        UDFOUND = '0'B;

  10437  1 001303   200042 450100                    STZ     UDFOUND,,AUTO

      423    10438    1        IF NO_UDEFS
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:58   

  10438  1 001304   200010 234100                    SZN     NO_UDEFS,,AUTO
         1 001305   001326 604000 1                  TMI     NOUD

      424    10439    1        THEN GOTO NOUD;
      425    10440    1        CALL DDR$UD_FIND( IC, USYM$, UVALUE ) ALTRET( NOUD );

  10440  1 001306   200035 631500                    EPPR1   UVALUE,,AUTO
         1 001307   200070 451500                    STP1    @LENGTH+4,,AUTO
         1 001310   200034 633500                    EPPR3   USYM$,,AUTO
         1 001311   200067 453500                    STP3    @LENGTH+3,,AUTO
         1 001312   200003 236100                    LDQ     @IC,,AUTO
         1 001313   200066 756100                    STQ     @LENGTH+2,,AUTO
         1 001314   200066 630500                    EPPR0   @LENGTH+2,,AUTO
         1 001315   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001316   000000 701000 xent               TSX1    DDR$UD_FIND
         1 001317   001326 702000 1                  TSX2    NOUD

      426    10441    1        IF LEASTOK <= UVALUE

  10441  1 001320   200035 236100                    LDQ     UVALUE,,AUTO
         1 001321   001324 604000 1                  TMI     s:10442
         1 001322   200023 116100                    CMPQ    LEASTOK,,AUTO
         1 001323   001326 604000 1                  TMI     NOUD

      427    10442    1        THEN UDFOUND = '1'B;

  10442  1 001324   400000 236003                    LDQ     -131072,DU
         1 001325   200042 756100                    STQ     UDFOUND,,AUTO

      428    10443    1   NOUD:
      429    10444    1        IF S_D.FNDENTDEF AND NOT UDFOUND

  10444  1 001326   000000 470400 xsym  NOUD         LDP0    S_D$
         1 001327   000721 234100                    SZN     465,,PR0
         1 001330   001333 605000 1                  TPL     s:10446
         1 001331   200042 234100                    SZN     UDFOUND,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:59   
         1 001332   000155 605000 1                  TPL     CONTINUE_PEDEF

      430    10445    1        THEN GOTO CONTINUE_PEDEF;
      431    10446    1        SDEF = '1'B;

  10446  1 001333   400000 236003                    LDQ     -131072,DU
         1 001334   200033 756100                    STQ     SDEF,,AUTO

      432    10447    1        IF ( UDFOUND )

  10447  1 001335   200042 234100                    SZN     UDFOUND,,AUTO
         1 001336   001347 605000 1                  TPL     s:10453

      433    10448    1        THEN IF ( NOT SDFOUND )

  10448  1 001337   200044 234100                    SZN     SDFOUND,,AUTO
         1 001340   001371 605000 1                  TPL     PUT_UDEF

      434    10449    1             THEN GOTO PUT_UDEF;
      435    10450    1             ELSE IF ( OFFSET >= IC - UVALUE )

  10450  1 001341   200003 471500                    LDP1    @IC,,AUTO
         1 001342   100000 236100                    LDQ     0,,PR1
         1 001343   200035 136100                    SBLQ    UVALUE,,AUTO
         1 001344   200022 116100                    CMPQ    OFFSET,,AUTO
         1 001345   001371 604400 1                  TMOZ    PUT_UDEF
         1 001346   001351 710000 1                  TRA     s:10457

      436    10451    1                  THEN GOTO PUT_UDEF;
      437    10452    1                  ELSE ;                   /* Goto PUT_SYMDEF */
      438    10453    1        ELSE IF ( NOT SDFOUND )

  10453  1 001347   200044 234100                    SZN     SDFOUND,,AUTO
         1 001350   001413 605000 1                  TPL     PUT_OCT

      439    10454    1             THEN GOTO PUT_OCT;
      440    10455                                                /* ELSE Goto PUT_SYMDEF */
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:60   
      441    10456        /* PUT_SYMDEF: */
      442    10457    1        SNP$ = PINCRW( S_D.DNAME$, SYM$ -> B$SDEF.NPOINTER );

  10457  1 001351   200024 471500                    LDP1    SYM$,,AUTO
         1 001352   100001 220100                    LDX0    1,,PR1
         1 001353   001041 473500                    LDP3    545,,PR0
         1 001354   300000 634510                    EPPR4   0,X0,PR3
         1 001355   200014 454500                    STP4    SNP$,,AUTO

      443    10458    1        NCARS = SNP$ -> TEXT$C.SIZE;

  10458  1 001356   400000 236100                    LDQ     0,,PR4
         1 001357   000022 772000                    QRL     18
         1 001360   200032 756100                    STQ     NCARS,,AUTO

      444    10459    1        CALL MOVE( SNP$ -> TEXT$C.TXT, NCARS ) ALTRET( TOO_BIG );

  10459  1 001361   200032 635500                    EPPR5   NCARS,,AUTO
         1 001362   200064 455500                    STP5    @STRING+1,,AUTO
         1 001363   200014 236100                    LDQ     SNP$,,AUTO
         1 001364   400000 036007                    ADLQ    -131072,DL
         1 001365   200063 756100                    STQ     COMPX+7,,AUTO
         1 001366   001474 701000 1                  TSX1    MOVE
         1 001367   001473 702000 1                  TSX2    TOO_BIG

      445    10460    1        GOTO PUT_OFFSET;

  10460  1 001370   000250 710000 1                  TRA     PUT_OFFSET

      446    10461    1   PUT_UDEF:
      447    10462    1        OFFSET = IC - UVALUE;

  10462  1 001371   200003 471500       PUT_UDEF     LDP1    @IC,,AUTO
         1 001372   100000 236100                    LDQ     0,,PR1
         1 001373   200035 136100                    SBLQ    UVALUE,,AUTO
         1 001374   200022 756100                    STQ     OFFSET,,AUTO

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:61   
      448    10463    1        IF OFFSET > S_D.RANGE

  10463  1 001375   001031 116100                    CMPQ    537,,PR0
         1 001376   001413 605400 1                  TPNZ    PUT_OCT

      449    10464    1        THEN GOTO PUT_OCT;
      450    10465    1        NCARS = USYM$ -> TEXT9$C.SIZE;

  10465  1 001377   200034 473500                    LDP3    USYM$,,AUTO
         1 001400   300000 236100                    LDQ     0,,PR3
         1 001401   000033 772000                    QRL     27
         1 001402   200032 756100                    STQ     NCARS,,AUTO

      451    10466    1        CALL MOVE( USYM$ -> TEXT9$C.TXT, NCARS ) ALTRET( PUT_OCT );

  10466  1 001403   200032 634500                    EPPR4   NCARS,,AUTO
         1 001404   200064 454500                    STP4    @STRING+1,,AUTO
         1 001405   200034 236100                    LDQ     USYM$,,AUTO
         1 001406   200000 036007                    ADLQ    65536,DL
         1 001407   200063 756100                    STQ     COMPX+7,,AUTO
         1 001410   001474 701000 1                  TSX1    MOVE
         1 001411   001413 702000 1                  TSX2    PUT_OCT

      452    10467    1        GOTO PUT_OFFSET;

  10467  1 001412   000250 710000 1                  TRA     PUT_OFFSET

      453    10468    1   PUT_OCT:
      454    10469    1        S_D.FNDOFFSET = '1'B;

  10469  1 001413   400000 236003       PUT_OCT      LDQ     -131072,DU
         1 001414   000000 470400 xsym               LDP0    S_D$
         1 001415   000513 756100                    STQ     331,,PR0

      455    10470    1        IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %HOST

  10470  1 001416   006714 235100                    LDA     3532,,PR0
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:62   
         1 001417   000001 115007                    CMPA    1,DL
         1 001420   001440 601000 1                  TNZ     s:10472

      456    10471    1        THEN CALL DDR$BINTXT( ADDR( TBUF ), IC, %OCT_FMT, NCARS );

  10471  1 001421   200025 631500                    EPPR1   TBUF,,AUTO
         1 001422   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 001423   200032 633500                    EPPR3   NCARS,,AUTO
         1 001424   200073 453500                    STP3    @LENGTH+7,,AUTO
         1 001425   000001 236000 2                  LDQ     1
         1 001426   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 001427   200003 236100                    LDQ     @IC,,AUTO
         1 001430   200071 756100                    STQ     @LENGTH+5,,AUTO
         1 001431   200066 634500                    EPPR4   @LENGTH+2,,AUTO
         1 001432   200070 454500                    STP4    @LENGTH+4,,AUTO
         1 001433   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 001434   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001435   000000 701000 xent               TSX1    DDR$BINTXT
         1 001436   000000 011000                    NOP     0
         1 001437   001464 710000 1                  TRA     s:10478

      457    10472    1        ELSE IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6

  10472  1 001440   000002 115007                    CMPA    2,DL
         1 001441   001461 601000 1                  TNZ     s:10475

      458    10473    1             THEN CALL DDR$BINTXT( ADDR( TBUF ), IC, %X_FMT, NCARS );

  10473  1 001442   200025 631500                    EPPR1   TBUF,,AUTO
         1 001443   200066 451500                    STP1    @LENGTH+2,,AUTO
         1 001444   200032 633500                    EPPR3   NCARS,,AUTO
         1 001445   200073 453500                    STP3    @LENGTH+7,,AUTO
         1 001446   000004 236000 2                  LDQ     4
         1 001447   200072 756100                    STQ     @LENGTH+6,,AUTO
         1 001450   200003 236100                    LDQ     @IC,,AUTO
         1 001451   200071 756100                    STQ     @LENGTH+5,,AUTO
         1 001452   200066 634500                    EPPR4   @LENGTH+2,,AUTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:63   
         1 001453   200070 454500                    STP4    @LENGTH+4,,AUTO
         1 001454   200070 630500                    EPPR0   @LENGTH+4,,AUTO
         1 001455   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001456   000000 701000 xent               TSX1    DDR$BINTXT
         1 001457   000000 011000                    NOP     0
         1 001460   001464 710000 1                  TRA     s:10478

      459    10474    2             ELSE DO;

      460    10475    2                  S_D.ERROR = E@DELBUG;    /* E@DELBUG */

  10475  1 001461   000766 235007                    LDA     502,DL
         1 001462   000013 755100                    STA     11,,PR0

      461    10476    2                  ALTRETURN;

  10476  1 001463   000000 702200 xent               TSX2  ! X66_AALT

      462    10477    2                END;
      463    10478    1        CALL MOVE( TBUF, NCARS ) ALTRET( TOO_BIG );

  10478  1 001464   200032 630500                    EPPR0   NCARS,,AUTO
         1 001465   200064 450500                    STP0    @STRING+1,,AUTO
         1 001466   200025 631500                    EPPR1   TBUF,,AUTO
         1 001467   200063 451500                    STP1    COMPX+7,,AUTO
         1 001470   001474 701000 1                  TSX1    MOVE
         1 001471   001473 702000 1                  TSX2    TOO_BIG

      464    10479    1        RETURN;

  10479  1 001472   000000 702200 xent               TSX2  ! X66_ARET

      465    10480                                                /**/
      466    10481    1   TOO_BIG: ALTRETURN;

  10481  1 001473   000000 702200 xent  TOO_BIG      TSX2  ! X66_AALT

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:64   
      467    10482        %EJECT;
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:65   
      468    10483    1   MOVE: PROC( STRING, LENGTH ) ALTRET;

  10483  1 001474   200062 741300       MOVE         STX1  ! COMPX+6,,AUTO

      469    10484    2   DCL STRING CHAR( LENGTH ) UNAL;
      470    10485    2   DCL LENGTH UBIN;
      471    10486    2   DCL BUFFER CHAR( LENGTH ) BASED( BE$ ) UNAL;
      472    10487    2        FSS = FSS + LENGTH;

  10487  1 001475   200006 470500                    LDP0    @FSS,,AUTO
         1 001476   200064 471500                    LDP1    @LENGTH,,AUTO
         1 001477   000000 236100                    LDQ     0,,PR0
         1 001500   100000 036100                    ADLQ    0,,PR1
         1 001501   000000 756100                    STQ     0,,PR0

      473    10488                                           /* Check for exceeding maximum string size */
      474    10489    2        IF FSS> MSS THEN ALTRETURN;

  10489  1 001502   200005 473500                    LDP3    @MSS,,AUTO
         1 001503   300000 116100                    CMPQ    0,,PR3
         1 001504   001507 604400 1                  TMOZ    s:10490

  10489  1 001505   200062 221300                    LDX1  ! COMPX+6,,AUTO
         1 001506   000000 702211                    TSX2  ! 0,X1

      475    10490    2        BUFFER = STRING;

  10490  1 001507   100000 720100                    LXL0    0,,PR1
         1 001510   200063 474500                    LDP4    @STRING,,AUTO
         1 001511   200012 475500                    LDP5    BE$,,AUTO
         1 001512   040140 100540                    MLR     fill='040'O
         1 001513   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 001514   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0

      476    10491    2        BE$ = PINCRC( BE$, LENGTH );

  10491  1 001515   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:66   
         1 001516   000020 736000                    QLS     16
         1 001517   200012 036100                    ADLQ    BE$,,AUTO
         1 001520   200012 756100                    STQ     BE$,,AUTO

      477    10492    2        RETURN;

  10492  1 001521   200062 221300                    LDX1  ! COMPX+6,,AUTO
         1 001522   000001 702211                    TSX2  ! 1,X1

STTYPE
 Sect OctLoc
   0     000   000004 116125   114114 001012   101123 123111   107116 115105    ..NULL..ASSIGNME
   0     004   116124 002004   103101 114114   003014 115117   116111 124117    NT..CALL..MONITO
   0     010   122040 103101   114114 004010   101123 114040   103101 114114    R CALL..ASL CALL
   0     014   005002 111106   006004 105114   123105 007004   103101 123105    ..IF..ELSE..CASE
   0     020   010004 107117   124117 011006   122105 124125   122116 012011    ..GOTO..RETURN..
   0     024   101114 124122   105124 125122   116013 010122   105115 105115    ALTRETURN..REMEM
   0     030   102105 122014   006125 116127   111116 104015   015122 105120    BER..UNWIND..REP
   0     034   117122 124040   127122 111124   105122 016005   101114 124105    ORT WRITER..ALTE
   0     040   122017 010105   126101 114125   101124 105020   016111 116124    R..EVALUATE..INT
   0     044   122111 116123   111103 040103   101114 114021   005123 120117    RINSIC CALL..SPO
   0     050   111114 022020   107117 124117   040123 125102   123103 122111    IL..GOTO SUBSCRI
   0     054   120124 105104   023015 101123   123111 107116   105104 040107    PTED..ASSIGNED G
   0     060   117124 117024   012111 106040   114117 107111   103101 114025    OTO..IF LOGICAL.
   0     064   015111 106040   101122 111124   110115 105124   111103 026005    .IF ARITHMETIC..
   0     070   120101 125123   105027 007120   105122 106117   122115 030004    PAUSE..PERFORM..
   0     074   123124 117120   031003 111057   117032 006105   114123 105111    STOP..I/O..ELSEI
   0     100   106033 010101   123123 111107   116105 104034   011104 117040    F..ASSIGNED..DO
   0     104   123105 114105   103124 035015   104117 040123   105114 105103    SELECT..DO SELEC
   0     110   124040 105116   104036 006123   105114 105103   124037 014104    T END..SELECT..D
   0     114   117040 125116   111116 110111   102111 124040   007111 116123    O UNINHIBIT .INS
   0     120   120105 103124   041010 104117   040125 116124   111114 042010    PECT!.DO UNTIL".
   0     124   104117 040111   116104 105130   043010 104117   040127 110111    DO INDEX#.DO WHI
   0     130   114105 044007   104117 040103   101123 105045   002104 117046    LE$.DO CASE%.DO&
   0     134   012104 117040   111116 110111   102111 124047   003123 105124    .DO INHIBIT'.SET
   0     140   050004 105130   111124 051020   104117 040125   116111 116110    (.EXIT).DO UNINH
   0     144   111102 111124   040105 116104   052005 120125   122107 105053    IBIT END*.PURGE+
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:67   
   0     150   014104 117040   125116 124111   114040 105116   104054 014104    .DO UNTIL END,.D
   0     154   117040 111116   104105 130040   105116 104055   014104 117040    O INDEX END-.DO
   0     160   127110 111114   105040 105116   104056 013104   117040 103101    WHILE END..DO CA
   0     164   123105 040105   116104 057006   104117 040105   116104 060016    SE END/.DO END0.
   0     170   104117 040111   116110 111102   111124 040105   116104 061007    DO INHIBIT END1.
   0     174   122105 114105   101123 105062   004123 105116   104063 011104    RELEASE2.SEND3.D
   0     200   101124 101040   102101 123105   064006 103101   116103 105114    ATA BASE4.CANCEL
   0     204   065012 111116   111124 111101   114111 132105   066005 115105    5.INITIALIZE6.ME
   0     210   122107 105067   007122 105103   105111 126105   070006 123105    RGE7.RECEIVE8.SE
   0     214   101122 103110   071004 123117   122124 072006   123124 122111    ARCH9.SORT:.STRI
   0     220   116107 073010   125116 123124   122111 116107   074003 125123    NG;.UNSTRING<.US
   0     224   105075 004114   117101 104145   004120 122117   103146 010120    E=.LOADe.PROCf.P
   0     230   122117 103040   105116 104147   005105 116124   122131 150004    ROC ENDg.ENTRYh.
   0     234   115111 123103   ****** ******                                    MISC....

STUNK
 Sect OctLoc
   0     236   000007 125116   113116 117127   116*** ******                    ..UNKNOWN...

STSTART$
 Sect OctLoc
   0     241   000000 006000                                                    ....

STEND$
 Sect OctLoc
   0     242   000235 006000                                                    ....

STUNK$
 Sect OctLoc
   0     243   000236 006000                                                    ....

NODBGMSG$
 Sect OctLoc
   0     244   000245 006000                                                    ....

NODBGMSG
 Sect OctLoc
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:68   
   0     245   000010 052052   052052 052052   052052 ******                    ..********..

(unnamed)
 Sect OctLoc
   0     250   040072 040040   050040 040040   040051 040040   040133 040040     :  (    )   [
   0     254   135040 040040                                                    ]

(unnamed)
 Sect OctLoc
   2     000   053040 040040   000003 006000   000000 006000   000000 000015    +   ............
   2     004   000003 006000   000004 006000   000250 006000   072040 040040    ............:
   2     010   000007 006000   054040 040040   000011 006000   000030 006000    ....,   ........
   2     014   000251 006000   000252 006000   000253 006000   000254 006000    ................
      478    10493    2   END MOVE;
      479    10494    1   END DDR$POSIT;

PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:69   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDR$POSIT.

   Procedure DDR$POSIT requires 851 words for executable code.
   Procedure DDR$POSIT requires 60 words of local(AUTO) storage.

    No errors detected in file DDR$POSIT.:E05TSI    .
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:70   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:71   
          MINI XREF LISTING

ALL_ATTACH.CMD
      1511**DCL     10221>>IF
ALL_ATTACH.UNUSED
      1514**DCL      1515--REDEF    1519--REDEF
B$EDEF.ISADDR
      5249**DCL     10243>>IF      10256>>ASSIGN
B$EDEF.NPOINTER
      5251**DCL     10250>>ASSIGN  10383>>ASSIGN
B$EDEF.OU
      5243**DCL      5249--REDEF
B$EXST.ISADDR
      5365**DCL     10302>>ASSIGN  10335>>ASSIGN  10366>>ASSIGN  10374>>ASSIGN
B$EXST.LINENUM
      5453**DCL     10324>>ASSIGN
B$EXST.NPOINTER
      5367**DCL     10303>>ASSIGN  10336>>ASSIGN  10368>>IF      10370>>ASSIGN
B$EXST.OU
      5359**DCL      5365--REDEF
B$EXST.STTYPE
      5383**DCL     10413>>ASSIGN
B$INTNTRY.NPOINTER
      5471**DCL     10378>>ASSIGN
B$INTNTRY.OU
      5461**DCL      5468--REDEF
B$JIT.CPFLAGS1.SLEAZE
     10012**DCL     10012--REDEF
B$JIT.ERR.MID
      9919**DCL      9919--REDEF
B$JIT.JRESPEAK
     10080**DCL     10081--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
     10189**DCL     10189--REDEF   10190--REDEF
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:72   
B$JIT.PNR
     10093**DCL     10093--REDEF
B$JIT.TSLINE
     10187**DCL     10188--REDEF
B$JIT$
      9903**DCL      9913--IMP-PTR
B$LBNTRY0.COMPILER
      5518**DCL     10268>>ASSIGN
B$LBNTRY0.NO_AUTO
      5541**DCL      5546--REDEF
B$LBNTRY0.VERSION
      5530**DCL      5532--REDEF
B$LBNTRY1.STMNTSIZ
      5558**DCL     10266>>IF
B$SDEF.AD.ISADDR
      5322**DCL     10388>>IF      10432>>IF      10433>>ASSIGN
B$SDEF.AD.OU
      5316**DCL      5322--REDEF
B$SDEF.NPOINTER
      5324**DCL     10389>>ASSIGN  10457>>ASSIGN
B$SDEF.VALUE
      5297**DCL      5300--REDEF
BB$
        29**DCL        26--PROC    10213>>ASSIGN
BE$
        35**DCL     10213<<ASSIGN  10486--IMP-PTR 10490>>ASSIGN  10491<<ASSIGN  10491>>ASSIGN
BUFFER IN PROCEDURE MOVE
     10486**DCL     10490<<ASSIGN
COMPX
        66**DCL     10268<<ASSIGN  10269>>ASSIGN  10270>>ASSIGN  10271>>ASSIGN  10304>>IF
CONTINUE_PEDEF
     10250**LABEL   10445--GOTO
DDF$DBG_#
     10199**DCL-ENT 10312--CALL    10360--CALL    10379--CALL
DDF$EXST_#
     10200**DCL-ENT 10301--CALL    10334--CALL    10411--CALL    10412--CALL
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:73   
DDF$FIND_IE
     10198**DCL-ENT 10377--CALL
DDF$FIND_PEDEF
     10194**DCL-ENT 10242--CALL
DDF$FIND_SEDEF
     10197**DCL-ENT 10382--CALL
DDF$FIND_SYMDEF
     10196**DCL-ENT 10386--CALL    10431--CALL
DDF$P_EXST
     10201**DCL-ENT 10365--CALL    10373--CALL
DDF$STATEMENT
     10195**DCL-ENT 10297--CALL
DDR$BINTXT
     10204**DCL-ENT 10281--CALL    10283--CALL    10325--CALL    10332--CALL    10343--CALL    10345--CALL
     10471--CALL    10473--CALL
DDR$UD_FIND
     10203**DCL-ENT 10440--CALL
DDS$ES_INQ
     10205**DCL-ENT 10259--CALL
DDS$SET_D2Q
     10202**DCL-ENT 10428--CALL
DOLABEL
     10358**LABEL   10371--GOTO
D_SYMBOLS
      9902**DCL     10235>>IF
D_XDELTA
      9901**DCL     10238>>IF
ENTRY$
        42**DCL     10377<>CALL    10378>>ASSIGN  10382<>CALL    10383>>ASSIGN  10386<>CALL    10388>>IF
     10389>>ASSIGN
FSS
        31**DCL        26--PROC    10212<<ASSIGN  10487<<ASSIGN  10487>>ASSIGN  10489>>IF
GET_SEDEF
     10356**LABEL   10319--GOTO
GOTSTATEMENT
        64**DCL     10216<<ASSIGN  10298<<ASSIGN  10408>>IF
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:74   
GOTYPE
     10422**LABEL   10417--GOTO
IC
        28**DCL        26--PROC    10230>>IF      10230>>ASSIGN  10231>>ASSIGN  10233>>ASSIGN  10235>>IF
     10239>>IF      10242<>CALL    10246>>IF      10256>>ASSIGN  10259<>CALL    10297<>CALL    10305>>IF
     10327>>IF      10338>>ASSIGN  10377<>CALL    10382<>CALL    10386<>CALL    10388>>IF      10431<>CALL
     10433>>ASSIGN  10440<>CALL    10450>>IF      10462>>ASSIGN  10471<>CALL    10473<>CALL
I_SHOULD_RESET_SCHEMA
        34**DCL     10208<<ASSIGN  10387<<ASSIGN  10428>>IF
LABEL$
        41**DCL     10215<<ASSIGN  10309<<ASSIGN  10312<>CALL    10313>>IF      10313>>IF      10359<<ASSIGN
     10360<>CALL    10379<>CALL    10383<<ASSIGN  10389<<ASSIGN  10393>>IF      10399>>ASSIGN  10400>>CALL
     10400>>CALL
LBLEND
     10393**LABEL   10310--GOTO    10315--GOTO    10361--GOTO    10380--GOTO    10384--GOTO    10386--CALLALT
     10390--GOTO
LBLEND1
     10408**LABEL   10314--GOTO
LBLFIND
     10382**LABEL   10296--GOTO    10297--CALLALT 10300--GOTO    10301--CALLALT 10312--CALLALT 10317--GOTO
     10334--CALLALT 10360--CALLALT 10377--CALLALT 10379--CALLALT
LEASTOK
        44**DCL     10230<<ASSIGN  10231<<ASSIGN  10232<<ASSIGN  10233<<ASSIGN  10233>>ASSIGN  10243>>IF
     10432>>IF      10441>>IF
LENGTH IN PROCEDURE MOVE
     10485**DCL     10483--PROC    10484--IMP-SIZ 10486--IMP-SIZ 10487>>ASSIGN  10490>>ASSIGN  10490>>ASSIGN
     10491>>ASSIGN
MOVE
     10483**PROC    10273--CALL    10278--CALL    10289--CALL    10321--CALL    10322--CALL    10326--CALL
     10329--CALL    10333--CALL    10341--CALL    10350--CALL    10396--CALL    10397--CALL    10400--CALL
     10402--CALL    10422--CALL    10424--CALL    10425--CALL    10459--CALL    10466--CALL    10478--CALL
MSS
        30**DCL        26--PROC    10489>>IF
NCARS
        48**DCL     10252<<ASSIGN  10273<>CALL    10281<>CALL    10283<>CALL    10289<>CALL    10325<>CALL
     10326<>CALL    10332<>CALL    10333<>CALL    10343<>CALL    10345<>CALL    10350<>CALL    10399<<ASSIGN
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:75   
     10400<>CALL    10423<<ASSIGN  10424<>CALL    10458<<ASSIGN  10459<>CALL    10465<<ASSIGN  10466<>CALL
     10471<>CALL    10473<>CALL    10478<>CALL
NODBGMSG
      6082**DCL      6081--DCLINIT
NODBGMSG.TEXT
      6084**DCL      6083--DCLINIT
NODBGMSG$
      6081**DCL     10309>>ASSIGN  10359>>ASSIGN
NOPE
     10374**LABEL   10365--CALLALT 10373--CALLALT
NOUD
     10444**LABEL   10439--GOTO    10440--CALLALT
NO_UDEFS
        33**DCL     10210<<ASSIGN  10211<<ASSIGN  10257>>IF      10438>>IF
OFFSET
        43**DCL     10256<<ASSIGN  10275>>IF      10281<>CALL    10283<>CALL    10433<<ASSIGN  10450>>IF
     10462<<ASSIGN  10463>>IF
PNO_UDEFS
        32**DCL        26--PROC    10209--IF      10211>>ASSIGN
PNP$
        36**DCL     10250<<ASSIGN  10252>>ASSIGN  10273>>CALL    10273>>CALL    10313>>IF      10313>>IF
PRIM$
        40**DCL     10242<>CALL    10243>>IF      10250>>ASSIGN  10256>>ASSIGN
PRINT_LINE
        62**DCL     10218<<ASSIGN  10227<<ASSIGN  10262<<ASSIGN  10270<<ASSIGN  10295>>IF      10299>>IF
PRINT_OFFSET
        61**DCL     10217<<ASSIGN  10225<<ASSIGN  10261<<ASSIGN  10269<<ASSIGN  10275>>IF      10292>>ASSIGN
     10320>>IF
PRINT_TYPE
        63**DCL     10219<<ASSIGN  10226<<ASSIGN  10263<<ASSIGN  10271<<ASSIGN  10295>>IF      10408>>IF
PUT_OCT
     10469**LABEL   10454--GOTO    10464--GOTO    10466--CALLALT
PUT_OFFSET
     10271**LABEL   10460--GOTO    10467--GOTO
PUT_OFFSET1
     10273**LABEL   10264--GOTO    10267--GOTO
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:76   
PUT_UDEF
     10462**LABEL   10449--GOTO    10451--GOTO
RETN
     10428**LABEL   10290--GOTO    10354--GOTO    10403--GOTO    10411--CALLALT 10412--CALLALT
SDEF
        49**DCL     10254<<ASSIGN  10294>>IF      10446<<ASSIGN
SDFOUND
        58**DCL     10214<<ASSIGN  10434<<ASSIGN  10448>>IF      10453>>IF
SET_OFFSET
     10261**LABEL   10258--GOTO
SNP$
        37**DCL     10457<<ASSIGN  10458>>ASSIGN  10459>>CALL    10459>>CALL
ST#
        59**DCL     10297<>CALL    10301<>CALL    10411<>CALL
ST$
        38**DCL     10301<>CALL    10302>>ASSIGN  10303>>ASSIGN  10324>>ASSIGN  10334<>CALL    10335>>ASSIGN
     10336>>ASSIGN  10364>>ASSIGN  10411<>CALL    10412<>CALL    10413>>ASSIGN  10414<<ASSIGN  10415>>DOWHILE
     10416>>IF      10418<<ASSIGN  10418>>ASSIGN  10418>>ASSIGN  10418>>ASSIGN  10420<<ASSIGN  10423>>ASSIGN
     10424>>CALL    10424>>CALL
STEND$
      6079**DCL     10415>>DOWHILE
STRING IN PROCEDURE MOVE
     10484**DCL     10483--PROC    10490>>ASSIGN
STSTART$
      6078**DCL     10414>>ASSIGN
STTY$PE
      5735**DCL     10418--ASSIGN
STTY$PE.CODE
      5736**DCL     10416>>IF
STTY$PE.SIZE
      5737**DCL      5738--IMP-SIZ 10418>>ASSIGN  10423>>ASSIGN  10424>>CALL
STTY$PE.TEXT
      5738**DCL     10424<>CALL
STTYPE
      5739**DCL      6078--DCLINIT
STTYPE.LAST
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:77   
      6070**DCL      6079--DCLINIT
STUNK
      6071**DCL      6080--DCLINIT
STUNK$
      6080**DCL     10420>>ASSIGN
SUBST
        55**DCL     10297<>CALL    10330>>IF      10332<>CALL    10410>>IF
SUBST#
        60**DCL     10297<>CALL    10334<>CALL    10412<>CALL
SYM$
        45**DCL     10431<>CALL    10432>>IF      10433>>ASSIGN  10457>>ASSIGN
S_D.CURRENT_CHANNEL
      8457**DCL      8459--REDEF
S_D.DBG$
      7907**DCL     10307>>IF      10358>>IF
S_D.DEBUGA
      7609**DCL      7611--REDEF
S_D.DNAME$
      7951**DCL     10250>>ASSIGN  10383>>ASSIGN  10389>>ASSIGN  10457>>ASSIGN
S_D.DO$
      7560**DCL     10221>>IF      10221>>IF
S_D.EIS
      8567**DCL      8596--REDEF
S_D.ERROR
      7538**DCL     10285<<ASSIGN  10347<<ASSIGN  10475<<ASSIGN
S_D.FNDENTDEF
      7789**DCL     10234<<ASSIGN  10244<<ASSIGN  10444>>IF
S_D.FNDOFFSET
      7734**DCL     10292<<ASSIGN  10469<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      8500**DCL      8501--REDEF    8515--REDEF
S_D.ISBASE
      7787**DCL     10235>>IF      10235>>IF
S_D.JDE
      8114**DCL      8115--REDEF
S_D.KILLEDEF
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:78   
      7663**DCL     10235>>IF      10436<<ASSIGN
S_D.L$.VALUE
      7667**DCL      7673--REDEF    7681--REDEF    7684--REDEF    7687--REDEF    7690--REDEF
S_D.L$.VALUE.L
      7668**DCL      7669--REDEF    7670--REDEF
S_D.L6_MESSAGE_BUF
      8521**DCL      8523--REDEF
S_D.LASTPD.IC
      8375**DCL     10246>>IF      10246>>IF
S_D.LASTPD.RANGE
      8372**DCL     10246>>IF
S_D.LB0$
      7943**DCL     10268>>ASSIGN
S_D.LB1$
      7945**DCL     10266>>IF
S_D.ONE_TO_TWO.EXEC_DOMAIN
      8532**DCL     10229>>IF      10280>>IF      10282>>IF      10342>>IF      10344>>IF      10470>>IF
     10472>>IF
S_D.OUTPUT
      8487**DCL      8489--REDEF
S_D.PADDR
      8173**DCL     10239>>IF
S_D.RANGE
      7935**DCL     10233>>ASSIGN  10463>>IF
S_D.REMOTE_MSG.FNCC
      8506**DCL      8507--REDEF
S_D.REMOTE_MSG.STXC
      8502**DCL      8503--REDEF
S_D.REMOTE_MSG.SUBFNCC
      8510**DCL      8511--REDEF
S_D.REPORTING_ONCALL
      8622**DCL     10319>>IF      10395>>IF      10401>>IF
S_D.REPORT_FLAGS.LINE
      8327**DCL     10270>>ASSIGN
S_D.REPORT_FLAGS.OFFSET
      8326**DCL     10269>>ASSIGN
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:79   
S_D.REPORT_FLAGS.TYPE
      8328**DCL     10271>>ASSIGN
S_D.SCHEMA
      7607**DCL     10257>>IF
S_D.SIM_UPDATE
      8624**DCL     10221>>IF
S_D.SV
      7566**DCL      7587--REDEF
S_D$
      8818**DCL      7514--IMP-PTR 10221>>IF      10221>>IF      10221>>IF      10229>>IF      10233>>ASSIGN
     10234>>ASSIGN  10235>>IF      10235>>IF      10235>>IF      10239>>IF      10244>>ASSIGN  10246>>IF
     10246>>IF      10246>>IF      10250>>ASSIGN  10257>>IF      10266>>IF      10268>>ASSIGN  10269>>ASSIGN
     10270>>ASSIGN  10271>>ASSIGN  10280>>IF      10282>>IF      10285>>ASSIGN  10292>>ASSIGN  10307>>IF
     10319>>IF      10342>>IF      10344>>IF      10347>>ASSIGN  10358>>IF      10383>>ASSIGN  10389>>ASSIGN
     10395>>IF      10401>>IF      10436>>ASSIGN  10444>>IF      10457>>ASSIGN  10463>>IF      10469>>ASSIGN
     10470>>IF      10472>>IF      10475>>ASSIGN
TBUF
        46**DCL     10281--CALL    10283--CALL    10289<>CALL    10325--CALL    10326<>CALL    10332--CALL
     10333<>CALL    10343--CALL    10345--CALL    10350<>CALL    10471--CALL    10473--CALL    10478<>CALL
TEMP
        47**DCL     10324<<ASSIGN  10325<>CALL    10338<<ASSIGN  10339>>IF      10343<>CALL    10345<>CALL
     10378<<ASSIGN  10379<>CALL
TEXT$C
      1500**DCL     10313>>IF      10313>>IF
TEXT$C.SIZE
      1501**DCL      1502--IMP-SIZ 10252>>ASSIGN  10273>>CALL    10313>>IF      10313>>IF      10399>>ASSIGN
     10400>>CALL    10458>>ASSIGN  10459>>CALL
TEXT$C.TXT
      1502**DCL     10273<>CALL    10400<>CALL    10459<>CALL
TEXT9$C.SIZE
      1506**DCL      1507--IMP-SIZ 10465>>ASSIGN  10466>>CALL
TEXT9$C.TXT
      1507**DCL     10466<>CALL
TIC
        52**DCL     10302<<ASSIGN  10305>>IF      10327>>IF      10335<<ASSIGN  10338>>ASSIGN  10367>>DOWHILE
TNP
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:80   
        54**DCL     10303<<ASSIGN  10305>>IF      10312<>CALL    10336<<ASSIGN  10356>>IF      10360<>CALL
     10370<<ASSIGN
TOO_BIG
     10481**LABEL   10273--CALLALT 10278--CALLALT 10289--CALLALT 10321--CALLALT 10322--CALLALT 10326--CALLALT
     10329--CALLALT 10333--CALLALT 10341--CALLALT 10350--CALLALT 10396--CALLALT 10397--CALLALT 10400--CALLALT
     10402--CALLALT 10422--CALLALT 10424--CALLALT 10425--CALLALT 10459--CALLALT 10478--CALLALT
TRY_EXACT_SDEF
     10386**LABEL   10382--CALLALT
TRY_SDEF
     10431**LABEL   10240--GOTO    10242--CALLALT 10243--GOTO
TRY_UDEF
     10436**LABEL   10237--GOTO    10248--GOTO    10431--CALLALT 10432--GOTO
TST$
        39**DCL     10364<<ASSIGN  10365<>CALL    10366>>ASSIGN  10368>>IF      10370>>ASSIGN  10373<>CALL
     10374>>ASSIGN
TTIC
        53**DCL     10366<<ASSIGN  10367>>DOWHILE 10374<<ASSIGN
TYPE
        65**DCL     10413<<ASSIGN  10416>>IF
UDFOUND
        56**DCL     10437<<ASSIGN  10442<<ASSIGN  10444>>IF      10447>>IF
UPDATE
        57**DCL     10220<<ASSIGN  10224<<ASSIGN  10290>>IF      10353>>IF
USYM$
        50**DCL     10440<>CALL    10465>>ASSIGN  10466>>CALL    10466>>CALL
UVALUE
        51**DCL     10440<>CALL    10441>>IF      10450>>IF      10462>>ASSIGN
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:81   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDR$POSIT File=DDR$POSIT.:E05TSI                              TUE 07/29/97 14:08 Page:82   
              MINI UREF LISTING

DDR$POSIT      26**PROC
DO_WHILE   10367**LABEL
SDD$    8927**DCL
SDD_L6$    8929**DCL
ZITEM$    8928**DCL
ZITEM_L6$    8930**DCL
