VERSION E05

PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:1    
        1        1        /*M* PMB$BUCKET  Distributes events into one of a vector of buckets           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CRM=80,CLM=77,CRT=1,PLM=4,CTI=1,THI=2                                    */
        8        8
        9        9        /*P* NAME:  PMB$BUCKET
       10       10             Purpose: This module contains several routines that may be used to
       11       11                       clear, initialize, and update "buckets" used for performance
       12       12                       monitoring.  See the K report from PM_BUCKET_C for details
       13       13                       on the generation, care, and feeding of buckets.
       14       14                                                                                      */
       15       15        /*D* NAME:  PMB$BUCKET
       16       16             Call:  CALL PMB$BUCKET(bucket_set, dist_val [, add_val]);
       17       17             Environment:  is the same as that of the caller.
       18       18             Input: "bucket_set" is identifies the bucket structure to be
       19       19                    updated.  "dist_val" is the distribution value (i.e., the
       20       20                    value to be used to locate the appropriate bucket for
       21       21                    modification).  "add_val" is the value to be added to
       22       22                    the selected bucket;  it may be omitted on the call,
       23       23                    in which case the value 1 will be used.
       24       24             Output: Indicated bucket will be updated.
       25       25             Description:  PMB$BUCKET may be called to perform bucket updating.
       26       26                    The bucket must have been properly initialized (either when it
       27       27                    was built, or via a call to PMB$INIT (q.v.)).  PMB$BUCKET
       28       28                    will scan the bucket set from beginning to end to locate the
       29       29                    first bucket into which the indicated "distribution value" would
       30       30                    fit, and will add the indicated number (or 1) to the matching
       31       31                    bucket sum.
       32       32              Remarks:  This routine may be called by anyone;  however, speed-critical
       33       33                    routines (such as the scheduler) may wish to perform the bucket
       34       34                    update themselves to avoid the overhead of a subroutine call.
       35       35                                                                                      */
       36       36        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
       37       37
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:2    
       38       38
       39       39        PMB$BUCKET: PROC (BUCKET, DIST_VALUE, ADD_VAL);
       40       40
       41       41        %INCLUDE PM_BUCKET_C;
       42      126        %DUMMY_BUCKET (NAME=BUCKET);
       43      132        %EJECT;
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:3    
       44      133        %LIST;
       45      134
       46      135
       47      136    1   DCL DIST_VALUE (0:0) SBIN WORD;
       48      137
       49      138    1   DCL ADD_VAL SBIN WORD;
       50      139
       51      140    1   DCL ADD_VALUE SBIN WORD;
       52      141
       53      142    1   DCL I SBIN WORD;
       54      143
       55      144    1      IF ADDR(ADD_VAL) = ADDR(NIL)
       56      145    1        THEN
       57      146    1         ADD_VALUE = 1;
       58      147    1        ELSE
       59      148    1         ADD_VALUE = ADD_VAL;
       60      149
       61      150           %UPDATE_BUCKET (BUCKET=BUCKET,
       62      151           INCREMENT=ADD_VALUE,
       63      152           SCRATCH=I,
       64      153           DIST_VAL="DIST_VALUE(0)");
               154    1      SCRATCH = 0;
               155    2      DO WHILE (SCRATCH < BUCKET.SIZE AND
               156    2          DIST_VAL > BUCKET.DATA(SCRATCH));
               157    2         SCRATCH = SCRATCH + 1;
               158    2         END;
               159    1      BUCKET.DATA(SCRATCH + BUCKET.SIZE + 1) =
               160    1       BUCKET.DATA(SCRATCH + BUCKET.SIZE + 1) + INCREMENT;
       65      162        %EJECT;
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:4    
       66      163        /*D*  NAME:  PMB$CLEAR
       67      164              Description: Initializes the SUM entries in a bucket table
       68      165              Call:  CALL PMB$CLEAR (bucket_set);
       69      166                                                                                      */
       70      167    1   PMB$CLEAR: ENTRY (BUCKET);
       71      168
       72      169    2      DO I = BUCKET.SIZE + 1 TO 2 * BUCKET.SIZE + 1;
       73      170
       74      171    2         BUCKET.DATA(I) = 0;
       75      172
       76      173    2         END;
       77      174
       78      175    1      RETURN;
       79      176        %EJECT;
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:5    
       80      177        /*D*  NAME:    PMB$INIT
       81      178              Description: Sets up MAX_VALUE entries in a bucket vector and zeroes
       82      179                       the SUM entries.
       83      180              Call:    CALL PMB$INIT(bucket_set, max_val_array);
       84      181              Input:   "bucket_set" is the bucket vector to be initialized.
       85      182                       "max_val_array" is an SBIN array of values to be stored in
       86      183                       the MAX_VALUE entries in the bucket vector.
       87      184              Output:  Bucket vector initialized.
       88      185              Environment:  The same as that of the caller.
       89      186                                                                                      */
       90      187
       91      188    1   PMB$INIT: ENTRY (BUCKET, DIST_VALUE);
       92      189
       93      190    2      DO I = 0 TO BUCKET.SIZE - 1;
       94      191
       95      192    2         BUCKET.DATA(I) = DIST_VALUE(I);
       96      193    2         BUCKET.DATA(I + BUCKET.SIZE + 1) = 0;
       97      194
       98      195    2         END;
       99      196
      100      197    1      BUCKET.DATA(BUCKET.SIZE) = 0;
      101      198    1      BUCKET.DATA(BUCKET.SIZE * 2 + 1) = 0;
      102      199
      103      200    1      RETURN;
      104      201
      105      202
      106      203    1   END PMB$BUCKET;

PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:6    
--  Include file information  --

   PM_BUCKET_C.:E05TOU  is referenced.
      No diagnostics issued in procedure PMB$BUCKET.

   Procedure PMB$BUCKET requires 77 words for executable code.
   Procedure PMB$BUCKET requires 10 words of local(AUTO) storage.

    No errors detected in file PMB$BUCKET.:E05TSI    .

PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:7    

 Object Unit name= PMB$BUCKET                                 File name= PMB$BUCKET.:E05TOU
 UTS= JUL 30 '97 04:24:43.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    77    115  PMB$BUCKET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  PMB$BUCKET
     0     42                  yes      Std        1  PMB$CLEAR
     0     64                  yes      Std        2  PMB$INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:8    


        1        1        /*M* PMB$BUCKET  Distributes events into one of a vector of buckets           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CRM=80,CLM=77,CRT=1,PLM=4,CTI=1,THI=2                                    */
        8        8
        9        9        /*P* NAME:  PMB$BUCKET
       10       10             Purpose: This module contains several routines that may be used to
       11       11                       clear, initialize, and update "buckets" used for performance
       12       12                       monitoring.  See the K report from PM_BUCKET_C for details
       13       13                       on the generation, care, and feeding of buckets.
       14       14                                                                                      */
       15       15        /*D* NAME:  PMB$BUCKET
       16       16             Call:  CALL PMB$BUCKET(bucket_set, dist_val [, add_val]);
       17       17             Environment:  is the same as that of the caller.
       18       18             Input: "bucket_set" is identifies the bucket structure to be
       19       19                    updated.  "dist_val" is the distribution value (i.e., the
       20       20                    value to be used to locate the appropriate bucket for
       21       21                    modification).  "add_val" is the value to be added to
       22       22                    the selected bucket;  it may be omitted on the call,
       23       23                    in which case the value 1 will be used.
       24       24             Output: Indicated bucket will be updated.
       25       25             Description:  PMB$BUCKET may be called to perform bucket updating.
       26       26                    The bucket must have been properly initialized (either when it
       27       27                    was built, or via a call to PMB$INIT (q.v.)).  PMB$BUCKET
       28       28                    will scan the bucket set from beginning to end to locate the
       29       29                    first bucket into which the indicated "distribution value" would
       30       30                    fit, and will add the indicated number (or 1) to the matching
       31       31                    bucket sum.
       32       32              Remarks:  This routine may be called by anyone;  however, speed-critical
       33       33                    routines (such as the scheduler) may wish to perform the bucket
       34       34                    update themselves to avoid the overhead of a subroutine call.
       35       35                                                                                      */
       36       36        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:9    
       37       37
       38       38
       39       39        PMB$BUCKET: PROC (BUCKET, DIST_VALUE, ADD_VAL);

     39  0 000000   000000 700200 xent  PMB$BUCKET   TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

       40       40
       41       41        %INCLUDE PM_BUCKET_C;
       42      126        %DUMMY_BUCKET (NAME=BUCKET);
       43      132        %EJECT;
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:10   
       44      133        %LIST;
       45      134
       46      135
       47      136    1   DCL DIST_VALUE (0:0) SBIN WORD;
       48      137
       49      138    1   DCL ADD_VAL SBIN WORD;
       50      139
       51      140    1   DCL ADD_VALUE SBIN WORD;
       52      141
       53      142    1   DCL I SBIN WORD;
       54      143
       55      144    1      IF ADDR(ADD_VAL) = ADDR(NIL)

    144  0 000002   200005 236100                    LDQ     @ADD_VAL,,AUTO
         0 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000004   000010 601000 0                  TNZ     s:148

       56      145    1        THEN
       57      146    1         ADD_VALUE = 1;

    146  0 000005   000001 235007                    LDA     1,DL
         0 000006   200006 755100                    STA     ADD_VALUE,,AUTO
         0 000007   000013 710000 0                  TRA     s:154

       58      147    1        ELSE
       59      148    1         ADD_VALUE = ADD_VAL;

    148  0 000010   200005 470500                    LDP0    @ADD_VAL,,AUTO
         0 000011   000000 235100                    LDA     0,,PR0
         0 000012   200006 755100                    STA     ADD_VALUE,,AUTO

       60      149
       61      150           %UPDATE_BUCKET (BUCKET=BUCKET,
       62      151           INCREMENT=ADD_VALUE,
       63      152           SCRATCH=I,
       64      153           DIST_VAL="DIST_VALUE(0)");
               154    1      SCRATCH = 0;
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:11   

    154  0 000013   200007 450100                    STZ     I,,AUTO

               155    2      DO WHILE (SCRATCH < BUCKET.SIZE AND

    155  0 000014   000016 710000 0                  TRA     s:158

               156    2          DIST_VAL > BUCKET.DATA(SCRATCH));
               157    2         SCRATCH = SCRATCH + 1;

    157  0 000015   200007 054100                    AOS     I,,AUTO

               158    2         END;

    158  0 000016   200003 470500                    LDP0    @BUCKET,,AUTO
         0 000017   200007 236100                    LDQ     I,,AUTO
         0 000020   000023 604000 0                  TMI     s:158+5
         0 000021   000000 116100                    CMPQ    0,,PR0
         0 000022   000030 603000 0                  TRC     s:159
         0 000023   200004 471500                    LDP1    @DIST_VALUE,,AUTO
         0 000024   000000 620006                    EAX0    0,QL
         0 000025   100000 236100                    LDQ     0,,PR1
         0 000026   000002 116110                    CMPQ    2,X0,PR0
         0 000027   000015 605400 0                  TPNZ    s:157

               159    1      BUCKET.DATA(SCRATCH + BUCKET.SIZE + 1) =

    159  0 000030   200007 236100                    LDQ     I,,AUTO
         0 000031   000000 036100                    ADLQ    0,,PR0
         0 000032   200010 756100                    STQ     I+1,,AUTO
         0 000033   200007 236100                    LDQ     I,,AUTO
         0 000034   000000 036100                    ADLQ    0,,PR0
         0 000035   000003 236106                    LDQ     3,QL,PR0
         0 000036   200006 036100                    ADLQ    ADD_VALUE,,AUTO
         0 000037   200010 720100                    LXL0    I+1,,AUTO
         0 000040   000003 756110                    STQ     3,X0,PR0
         0 000041   000044 710000 0                  TRA     s:169
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:12   

               160    1       BUCKET.DATA(SCRATCH + BUCKET.SIZE + 1) + INCREMENT;
       65      162        %EJECT;
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:13   
       66      163        /*D*  NAME:  PMB$CLEAR
       67      164              Description: Initializes the SUM entries in a bucket table
       68      165              Call:  CALL PMB$CLEAR (bucket_set);
       69      166                                                                                      */
       70      167    1   PMB$CLEAR: ENTRY (BUCKET);

    167  0 000042   000000 700200 xent  PMB$CLEAR    TSX0  ! X66_AUTO_3
         0 000043   000012 000003                    ZERO    10,3

       71      168
       72      169    2      DO I = BUCKET.SIZE + 1 TO 2 * BUCKET.SIZE + 1;

    169  0 000044   200003 470500                    LDP0    @BUCKET,,AUTO
         0 000045   000000 235100                    LDA     0,,PR0
         0 000046   000001 035007                    ADLA    1,DL
         0 000047   200007 755100                    STA     I,,AUTO
         0 000050   000055 710000 0                  TRA     s:173+1

       73      170
       74      171    2         BUCKET.DATA(I) = 0;

    171  0 000051   200003 470500                    LDP0    @BUCKET,,AUTO
         0 000052   200007 720100                    LXL0    I,,AUTO
         0 000053   000002 450110                    STZ     2,X0,PR0

       75      172
       76      173    2         END;

    173  0 000054   200007 054100                    AOS     I,,AUTO
         0 000055   000000 236100                    LDQ     0,,PR0
         0 000056   000001 736000                    QLS     1
         0 000057   000001 036007                    ADLQ    1,DL
         0 000060   000051 604000 0                  TMI     s:171
         0 000061   200007 116100                    CMPQ    I,,AUTO
         0 000062   000051 605000 0                  TPL     s:171

       77      174
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:14   
       78      175    1      RETURN;

    175  0 000063   000000 702200 xent               TSX2  ! X66_ARET

       79      176        %EJECT;
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:15   
       80      177        /*D*  NAME:    PMB$INIT
       81      178              Description: Sets up MAX_VALUE entries in a bucket vector and zeroes
       82      179                       the SUM entries.
       83      180              Call:    CALL PMB$INIT(bucket_set, max_val_array);
       84      181              Input:   "bucket_set" is the bucket vector to be initialized.
       85      182                       "max_val_array" is an SBIN array of values to be stored in
       86      183                       the MAX_VALUE entries in the bucket vector.
       87      184              Output:  Bucket vector initialized.
       88      185              Environment:  The same as that of the caller.
       89      186                                                                                      */
       90      187
       91      188    1   PMB$INIT: ENTRY (BUCKET, DIST_VALUE);

    188  0 000064   000000 700200 xent  PMB$INIT     TSX0  ! X66_AUTO_3
         0 000065   000012 000003                    ZERO    10,3

       92      189
       93      190    2      DO I = 0 TO BUCKET.SIZE - 1;

    190  0 000066   200007 450100                    STZ     I,,AUTO
         0 000067   000101 710000 0                  TRA     s:195+1

       94      191
       95      192    2         BUCKET.DATA(I) = DIST_VALUE(I);

    192  0 000070   200004 470500                    LDP0    @DIST_VALUE,,AUTO
         0 000071   200007 720100                    LXL0    I,,AUTO
         0 000072   200003 471500                    LDP1    @BUCKET,,AUTO
         0 000073   000000 235110                    LDA     0,X0,PR0
         0 000074   100002 755110                    STA     2,X0,PR1

       96      193    2         BUCKET.DATA(I + BUCKET.SIZE + 1) = 0;

    193  0 000075   200007 236100                    LDQ     I,,AUTO
         0 000076   100000 036100                    ADLQ    0,,PR1
         0 000077   100003 450106                    STZ     3,QL,PR1

PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:16   
       97      194
       98      195    2         END;

    195  0 000100   200007 054100                    AOS     I,,AUTO
         0 000101   200003 470500                    LDP0    @BUCKET,,AUTO
         0 000102   200007 236100                    LDQ     I,,AUTO
         0 000103   000070 604000 0                  TMI     s:192
         0 000104   000000 116100                    CMPQ    0,,PR0
         0 000105   000070 602000 0                  TNC     s:192

       99      196
      100      197    1      BUCKET.DATA(BUCKET.SIZE) = 0;

    197  0 000106   000000 720100                    LXL0    0,,PR0
         0 000107   000002 450110                    STZ     2,X0,PR0

      101      198    1      BUCKET.DATA(BUCKET.SIZE * 2 + 1) = 0;

    198  0 000110   000000 720100                    LXL0    0,,PR0
         0 000111   000000 635010                    EAA     0,X0
         0 000112   000021 771000                    ARL     17
         0 000113   000003 450105                    STZ     3,AL,PR0

      102      199
      103      200    1      RETURN;

    200  0 000114   000000 702200 xent               TSX2  ! X66_ARET
      104      201
      105      202
      106      203    1   END PMB$BUCKET;

PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:17   
--  Include file information  --

   PM_BUCKET_C.:E05TOU  is referenced.
      No diagnostics issued in procedure PMB$BUCKET.
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:18   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ADD_VAL                   3-0-0/w PTR         r     1 @BUCKET
     4-0-0/w PTR         r     1 @DIST_VALUE               *0-0-0/w SBIN        r     1 ADD_VAL
     6-0-0/w SBIN        r     1 ADD_VALUE                 *0-0-0/d STRC(108)   r     1 BUCKET
    *0-0-0/w SBIN        r     1 DIST_VALUE(0:0)
     7-0-0/w SBIN        r     1 I


   Procedure PMB$BUCKET requires 77 words for executable code.
   Procedure PMB$BUCKET requires 10 words of local(AUTO) storage.

    No errors detected in file PMB$BUCKET.:E05TSI    .
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PMB$BUCKET File=PMB$BUCKET.:E05TSI                            WED 07/30/97 04:24 Page:20   
          MINI XREF LISTING

ADD_VAL
       138**DCL        39--PROC      144--IF        148>>ASSIGN
ADD_VALUE
       140**DCL       146<<ASSIGN    148<<ASSIGN    159>>ASSIGN
BUCKET
       127**DCL        39--PROC      167--ENTRY     188--ENTRY
BUCKET.DATA
       130**DCL       155>>DOWHILE   159<<ASSIGN    159>>ASSIGN    171<<ASSIGN    192<<ASSIGN    193<<ASSIGN
       197<<ASSIGN    198<<ASSIGN
BUCKET.SIZE
       128**DCL       155>>DOWHILE   159>>ASSIGN    159>>ASSIGN    169>>DOINDEX   169>>DOINDEX   190>>DOINDEX
       193>>ASSIGN    197>>ASSIGN    198>>ASSIGN
DIST_VALUE
       136**DCL        39--PROC      155>>DOWHILE   188--ENTRY     192>>ASSIGN
I
       142**DCL       154<<ASSIGN    155>>DOWHILE   155>>DOWHILE   157<<ASSIGN    157>>ASSIGN    159>>ASSIGN
       159>>ASSIGN    169<<DOINDEX   171>>ASSIGN    190<<DOINDEX   192>>ASSIGN    192>>ASSIGN    193>>ASSIGN
