VERSION E05

PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:1    
        1        1        /*M* DUA$ALIB - HANDLE ALIB RET/ALT AND KILL DELTA COMMANDS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCC,DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        DUA$ALIB: PROC(ACTION,KEEP) ALTRET;
       10       10                                                /**/
       11       11    1   DCL ACTION UBIN;
       12       12    1   DCL KEEP BIT(1) ALIGNED;
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE DD_ERR_C;
       15      491        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=BASED);
       16      515        %B$TCB;
       17      518        %SUB_ECCDELTA;
       18      555        %B$ALIBF;
       19      559    1   DCL B$TCB$ PTR SYMREF;
       20      560        %INCLUDE DD_SUBS_C;
       21      831        %INCLUDE XUH_MACRO_C;
       22      915        %INCLUDE DD_SD_M;
       23     2251        %S_D;
       24     3569                                                /**/
       25     3570    1   DCL DUA$KILL_ANLZ ENTRY ALTRET;
       26     3571    1   DCL DUA$KILL_RUM ENTRY;
       27     3572    1   DCL DUA$KILLDELTA ENTRY;
       28     3573    1   DCL DUA$EXITDELTA ENTRY;
       29     3574    1   DCL DDE$ERROR ENTRY;
       30     3575                                                /**/
       31     3576    1        IF ADDR(KEEP) ~= ADDR(NIL) THEN
       32     3577    1             IF S_D.ALIB AND B$TCB$->B$TCB.STK$->B$ALIBF.WHO = %SC_AASL#
       33     3578    2             THEN DO;
       34     3579    2                  S_D.ERROR = 219; /*E@CANTKEEPASL*/
       35     3580    2                  ALTRETURN;
       36     3581    2                END;
       37     3582    2        DO CASE(ACTION);
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:2    
       38     3583    2          CASE(2/*ALIB_RET*/, 1/*ALIB_ALT*/);
       39     3584    2             IF S_D.RUM OR S_D.ANLZ
       40     3585    3             THEN DO;
       41     3586    3                  S_D.ANLZRUM_IC = S_D.SAVEIC; /* Remember schema ic */
       42     3587    3                  S_D.SAVEIC = S_D.TIC;    /* Restore alib entry ic */
       43     3588    3                END;
       44     3589    2             IF ACTION = 1/*ALIB_ALT*/ OR S_D.RUM_TOTAL_ERRORS > 0 THEN S_D.DRTN$->
              3589                      FPT$DRTN.V.ALTRTN# = '1'B;
       45     3590    2             IF ADDR(KEEP) ~= ADDR(NIL) THEN
       46     3591    2                  IF KEEP THEN S_D.DRTN$->FPT$DRTN.V.KPDELTA# = '1'B;
       47     3592    2          CASE(3/*ALIB_DLIB*/);
       48     3593    2             S_D.DO$ = ADDR(NIL);          /* Keep killrum and killanlz quiet */
       49     3594    2             IF S_D.ANLZ THEN CALL DUA$KILL_ANLZ;
       50     3595    2             ELSE IF S_D.RUM THEN CALL DUA$KILL_RUM;
       51     3596    2             IF S_D.RUM OR S_D.STAND_ALONE THEN CALL DUA$EXITDELTA;
       52     3597    2             ELSE CALL DUA$KILLDELTA;      /* Will not return */
       53     3598    2          CASE(ELSE);
       54     3599    2             S_D.ERROR = 502;         /*E@DELBUG*/
       55     3600    2             GOTO ALT;
       56     3601    2          END;                             /* Do case */
       57     3602    1        RETURN;
       58     3603    1   ALT:
       59     3604    1        CALL DDE$ERROR;
       60     3605    1        ALTRETURN;
       61     3606    1   END DUA$ALIB;

PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:3    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUA$ALIB.

   Procedure DUA$ALIB requires 89 words for executable code.
   Procedure DUA$ALIB requires 6 words of local(AUTO) storage.

    No errors detected in file DUA$ALIB.:E05TSI    .

PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:4    

 Object Unit name= DUA$ALIB                                   File name= DUA$ALIB.:E05TOU
 UTS= JUL 29 '97 14:45:49.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    89    131  DUA$ALIB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  DUA$ALIB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 DUA$KILL_ANLZ
         yes           Std       0 DUA$KILL_RUM
         yes           Std       0 DUA$EXITDELTA
         yes           Std       0 DUA$KILLDELTA
         yes           Std       0 DDE$ERROR
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:5    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                           r    S_D$
     B_VECTNIL
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:6    


        1        1        /*M* DUA$ALIB - HANDLE ALIB RET/ALT AND KILL DELTA COMMANDS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCC,DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        DUA$ALIB: PROC(ACTION,KEEP) ALTRET;

      9  1 000000   000000 700200 xent  DUA$ALIB     TSX0  ! X66_AUTO_2
         1 000001   000006 000002                    ZERO    6,2

       10       10                                                /**/
       11       11    1   DCL ACTION UBIN;
       12       12    1   DCL KEEP BIT(1) ALIGNED;
       13       13        %INCLUDE CP_6;
       14       94        %INCLUDE DD_ERR_C;
       15      491        %FPT_DRTN (FPTN=FPT$DRTN, STCLASS=BASED);
       16      515        %B$TCB;
       17      518        %SUB_ECCDELTA;
       18      555        %B$ALIBF;
       19      559    1   DCL B$TCB$ PTR SYMREF;
       20      560        %INCLUDE DD_SUBS_C;
       21      831        %INCLUDE XUH_MACRO_C;
       22      915        %INCLUDE DD_SD_M;
       23     2251        %S_D;
       24     3569                                                /**/
       25     3570    1   DCL DUA$KILL_ANLZ ENTRY ALTRET;
       26     3571    1   DCL DUA$KILL_RUM ENTRY;
       27     3572    1   DCL DUA$KILLDELTA ENTRY;
       28     3573    1   DCL DUA$EXITDELTA ENTRY;
       29     3574    1   DCL DDE$ERROR ENTRY;
       30     3575                                                /**/
       31     3576    1        IF ADDR(KEEP) ~= ADDR(NIL) THEN

PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:7    
   3576  1 000002   200004 236100                    LDQ     @KEEP,,AUTO
         1 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000004   000021 600000 1                  TZE     s:3582

       32     3577    1             IF S_D.ALIB AND B$TCB$->B$TCB.STK$->B$ALIBF.WHO = %SC_AASL#

   3577  1 000005   000000 470400 xsym               LDP0    S_D$
         1 000006   005134 234100                    SZN     2652,,PR0
         1 000007   000021 605000 1                  TPL     s:3582
         1 000010   000000 471400 xsym               LDP1    B$TCB$
         1 000011   100001 473500                    LDP3    1,,PR1
         1 000012   300100 236100                    LDQ     64,,PR3
         1 000013   777000 376003                    ANQ     -512,DU
         1 000014   001000 116003                    CMPQ    512,DU
         1 000015   000021 601000 1                  TNZ     s:3582

       33     3578    2             THEN DO;

       34     3579    2                  S_D.ERROR = 219; /*E@CANTKEEPASL*/

   3579  1 000016   000333 235007                    LDA     219,DL
         1 000017   000013 755100                    STA     11,,PR0

       35     3580    2                  ALTRETURN;

   3580  1 000020   000000 702200 xent               TSX2  ! X66_AALT

       36     3581    2                END;
       37     3582    2        DO CASE(ACTION);

   3582  1 000021   200003 470500                    LDP0    @ACTION,,AUTO
         1 000022   000000 235100                    LDA     0,,PR0
         1 000023   000004 115007                    CMPA    4,DL
         1 000024   000026 602005 1                  TNC     s:3582+5,AL
         1 000025   000120 710000 1                  TRA     s:3599
         1 000026   000120 710000 1                  TRA     s:3599
         1 000027   000032 710000 1                  TRA     s:3584
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:8    
         1 000030   000032 710000 1                  TRA     s:3584
         1 000031   000065 710000 1                  TRA     s:3593

       38     3583    2          CASE(2/*ALIB_RET*/, 1/*ALIB_ALT*/);

       39     3584    2             IF S_D.RUM OR S_D.ANLZ

   3584  1 000032   000000 471400 xsym               LDP1    S_D$
         1 000033   104755 234100                    SZN     2541,,PR1
         1 000034   000037 604000 1                  TMI     s:3586
         1 000035   104756 234100                    SZN     2542,,PR1
         1 000036   000043 605000 1                  TPL     s:3589

       40     3585    3             THEN DO;

       41     3586    3                  S_D.ANLZRUM_IC = S_D.SAVEIC; /* Remember schema ic */

   3586  1 000037   100002 235100                    LDA     2,,PR1
         1 000040   105110 755100                    STA     2632,,PR1

       42     3587    3                  S_D.SAVEIC = S_D.TIC;    /* Restore alib entry ic */

   3587  1 000041   100027 235100                    LDA     23,,PR1
         1 000042   100002 755100                    STA     2,,PR1

       43     3588    3                END;

       44     3589    2             IF ACTION = 1/*ALIB_ALT*/ OR S_D.RUM_TOTAL_ERRORS > 0 THEN S_D.DRTN$->
              3589                      FPT$DRTN.V.ALTRTN# = '1'B;

   3589  1 000043   000000 235100                    LDA     0,,PR0
         1 000044   000001 115007                    CMPA    1,DL
         1 000045   000050 600000 1                  TZE     s:3589+5
         1 000046   100515 235100                    LDA     333,,PR1
         1 000047   000053 600000 1                  TZE     s:3590

   3589  1 000050   104704 473500                    LDP3    2500,,PR1
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:9    
         1 000051   040000 236003                    LDQ     16384,DU
         1 000052   300013 256100                    ORSQ    11,,PR3

       45     3590    2             IF ADDR(KEEP) ~= ADDR(NIL) THEN

   3590  1 000053   200004 236100                    LDQ     @KEEP,,AUTO
         1 000054   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000055   000124 600000 1                  TZE     s:3602

       46     3591    2                  IF KEEP THEN S_D.DRTN$->FPT$DRTN.V.KPDELTA# = '1'B;

   3591  1 000056   200004 473500                    LDP3    @KEEP,,AUTO
         1 000057   300000 234100                    SZN     0,,PR3
         1 000060   000124 605000 1                  TPL     s:3602

   3591  1 000061   104704 474500                    LDP4    2500,,PR1
         1 000062   001000 236003                    LDQ     512,DU
         1 000063   400013 256100                    ORSQ    11,,PR4
         1 000064   000124 710000 1                  TRA     s:3602

       47     3592    2          CASE(3/*ALIB_DLIB*/);

       48     3593    2             S_D.DO$ = ADDR(NIL);          /* Keep killrum and killanlz quiet */

   3593  1 000065   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000066   000000 471400 xsym               LDP1    S_D$
         1 000067   100031 756100                    STQ     25,,PR1

       49     3594    2             IF S_D.ANLZ THEN CALL DUA$KILL_ANLZ;

   3594  1 000070   104756 234100                    SZN     2542,,PR1
         1 000071   000076 605000 1                  TPL     s:3595

   3594  1 000072   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000073   000000 701000 xent               TSX1    DUA$KILL_ANLZ
         1 000074   000000 011000                    NOP     0
         1 000075   000103 710000 1                  TRA     s:3596
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:10   

       50     3595    2             ELSE IF S_D.RUM THEN CALL DUA$KILL_RUM;

   3595  1 000076   104755 234100                    SZN     2541,,PR1
         1 000077   000103 605000 1                  TPL     s:3596

   3595  1 000100   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000101   000000 701000 xent               TSX1    DUA$KILL_RUM
         1 000102   000000 011000                    NOP     0

       51     3596    2             IF S_D.RUM OR S_D.STAND_ALONE THEN CALL DUA$EXITDELTA;

   3596  1 000103   000000 470400 xsym               LDP0    S_D$
         1 000104   004755 234100                    SZN     2541,,PR0
         1 000105   000110 604000 1                  TMI     s:3596+5
         1 000106   004624 234100                    SZN     2452,,PR0
         1 000107   000114 605000 1                  TPL     s:3597

   3596  1 000110   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000111   000000 701000 xent               TSX1    DUA$EXITDELTA
         1 000112   000000 011000                    NOP     0
         1 000113   000124 710000 1                  TRA     s:3602

       52     3597    2             ELSE CALL DUA$KILLDELTA;      /* Will not return */

   3597  1 000114   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000115   000000 701000 xent               TSX1    DUA$KILLDELTA
         1 000116   000000 011000                    NOP     0
         1 000117   000124 710000 1                  TRA     s:3602

       53     3598    2          CASE(ELSE);

       54     3599    2             S_D.ERROR = 502;         /*E@DELBUG*/

   3599  1 000120   000766 236007                    LDQ     502,DL
         1 000121   000000 471400 xsym               LDP1    S_D$
         1 000122   100013 756100                    STQ     11,,PR1
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:11   

       55     3600    2             GOTO ALT;

   3600  1 000123   000125 710000 1                  TRA     ALT

       56     3601    2          END;                             /* Do case */

       57     3602    1        RETURN;

   3602  1 000124   000000 702200 xent               TSX2  ! X66_ARET

       58     3603    1   ALT:
       59     3604    1        CALL DDE$ERROR;

   3604  1 000125   000002 631400 xsym  ALT          EPPR1   B_VECTNIL+2
         1 000126   000000 701000 xent               TSX1    DDE$ERROR
         1 000127   000000 011000                    NOP     0

       60     3605    1        ALTRETURN;

   3605  1 000130   000000 702200 xent               TSX2  ! X66_AALT
       61     3606    1   END DUA$ALIB;

PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:12   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUA$ALIB.

   Procedure DUA$ALIB requires 89 words for executable code.
   Procedure DUA$ALIB requires 6 words of local(AUTO) storage.

    No errors detected in file DUA$ALIB.:E05TSI    .
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:14   
          MINI XREF LISTING

ACTION
        11**DCL         9--PROC     3582>>DOCASE   3589>>IF
ALT
      3604**LABEL    3600--GOTO
B$ALIBF.WHO
       556**DCL      3577>>IF
B$TCB.STK$
       516**DCL      3577>>IF
B$TCB$
       559**DCL      3577>>IF
DDE$ERROR
      3574**DCL-ENT  3604--CALL
DUA$EXITDELTA
      3573**DCL-ENT  3596--CALL
DUA$KILLDELTA
      3572**DCL-ENT  3597--CALL
DUA$KILL_ANLZ
      3570**DCL-ENT  3594--CALL
DUA$KILL_RUM
      3571**DCL-ENT  3595--CALL
FPT$DRTN.V.ALTRTN#
       507**DCL      3589<<ASSIGN
FPT$DRTN.V.IR#
       504**DCL       504--REDEF
FPT$DRTN.V.KPDELTA#
       509**DCL      3591<<ASSIGN
KEEP
        12**DCL         9--PROC     3576--IF       3590--IF       3591>>IF
S_D.ALIB
      3007**DCL      3577>>IF
S_D.ANLZ
      2903**DCL      3584>>IF       3594>>IF
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:15   
S_D.ANLZRUM_IC
      2997**DCL      3586<<ASSIGN
S_D.CURRENT_CHANNEL
      3203**DCL      3205--REDEF
S_D.DEBUGA
      2355**DCL      2357--REDEF
S_D.DO$
      2306**DCL      3593<<ASSIGN
S_D.DRTN$
      2808**DCL      3589>>ASSIGN   3591>>ASSIGN
S_D.EIS
      3313**DCL      3342--REDEF
S_D.ERROR
      2284**DCL      3579<<ASSIGN   3599<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      3246**DCL      3247--REDEF    3261--REDEF
S_D.JDE
      2860**DCL      2861--REDEF
S_D.L$.VALUE
      2413**DCL      2419--REDEF    2427--REDEF    2430--REDEF    2433--REDEF    2436--REDEF
S_D.L$.VALUE.L
      2414**DCL      2415--REDEF    2416--REDEF
S_D.L6_MESSAGE_BUF
      3267**DCL      3269--REDEF
S_D.OUTPUT
      3233**DCL      3235--REDEF
S_D.REMOTE_MSG.FNCC
      3252**DCL      3253--REDEF
S_D.REMOTE_MSG.STXC
      3248**DCL      3249--REDEF
S_D.REMOTE_MSG.SUBFNCC
      3256**DCL      3257--REDEF
S_D.RUM
      2901**DCL      3584>>IF       3595>>IF       3596>>IF
S_D.RUM_TOTAL_ERRORS
      2484**DCL      3589>>IF
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:16   
S_D.SAVEIC
      2266**DCL      3586>>ASSIGN   3587<<ASSIGN
S_D.STAND_ALONE
      2728**DCL      3596>>IF
S_D.SV
      2312**DCL      2333--REDEF
S_D.TIC
      2302**DCL      3587>>ASSIGN
S_D$
      3564**DCL      2260--IMP-PTR  3577>>IF       3579>>ASSIGN   3584>>IF       3584>>IF       3586>>ASSIGN
      3586>>ASSIGN   3587>>ASSIGN   3587>>ASSIGN   3589>>IF       3589>>ASSIGN   3591>>ASSIGN   3593>>ASSIGN
      3594>>IF       3595>>IF       3596>>IF       3596>>IF       3599>>ASSIGN
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:17   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:18   
              MINI UREF LISTING

DUA$ALIB       9**PROC
M$ACCT      39**DCL-ENT
M$ACTIVATE      42**DCL-ENT
M$ALIB      35**DCL-ENT
M$ASUSER      37**DCL-ENT
M$ATTACH      44**DCL-ENT
M$BADPP      62**DCL-ENT
M$CGCTL      43**DCL-ENT
M$CGINFO      43**DCL-ENT
M$CHECK      24**DCL-ENT
M$CHGUNIT      82**DCL-ENT
M$CLOSE      22**DCL-ENT
M$CLRSTK      80**DCL-ENT
M$CMDVAR      91**DCL-ENT
M$CONFIG      52**DCL-ENT
M$CORRES      27**DCL-ENT
M$CPEXIT      36**DCL-ENT
M$CVM      60**DCL-ENT
M$CVOL      25**DCL-ENT
M$DCLFLD      52**DCL-ENT
M$DEACTIVATE      42**DCL-ENT
M$DELREC      24**DCL-ENT
M$DEQ      89**DCL-ENT
M$DETACH      44**DCL-ENT
M$DEVICE      26**DCL-ENT
M$DISPLAY      89**DCL-ENT
M$DISPRES      29**DCL-ENT
M$DLIB      35**DCL-ENT
M$DRIBBLE      52**DCL-ENT
M$DRTN      80**DCL-ENT
M$DSUSER      37**DCL-ENT
M$ENQ      88**DCL-ENT
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:19   
M$EOM      47**DCL-ENT
M$ERASE      53**DCL-ENT
M$ERR      34**DCL-ENT
M$ERRMSG      85**DCL-ENT
M$EVENT      77**DCL-ENT
M$EXHUME      86**DCL-ENT
M$EXIT      34**DCL-ENT
M$EXTEND      26**DCL-ENT
M$FDP      58**DCL-ENT
M$FDS      57**DCL-ENT
M$FEBOOT      50**DCL-ENT
M$FECTL      51**DCL-ENT
M$FEDUMP      50**DCL-ENT
M$FID      85**DCL-ENT
M$FINDPROC      39**DCL-ENT
M$FSUSER      37**DCL-ENT
M$FVP      59**DCL-ENT
M$FWCG      43**DCL-ENT
M$GBPL      63**DCL-ENT
M$GDDL      59**DCL-ENT
M$GDP      58**DCL-ENT
M$GDS      57**DCL-ENT
M$GETDCB      28**DCL-ENT
M$GETMOUSE      68**DCL-ENT
M$GETPM      69**DCL-ENT
M$GJOB      87**DCL-ENT
M$GLINEATTR      47**DCL-ENT
M$GOODPP      62**DCL-ENT
M$GPLATEN      55**DCL-ENT
M$GPROMPT      54**DCL-ENT
M$GTRMATTR      48**DCL-ENT
M$GTRMCTL      46**DCL-ENT
M$GTRMTAB      49**DCL-ENT
M$GVP      58**DCL-ENT
M$HELP      85**DCL-ENT
M$INT      77**DCL-ENT
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:20   
M$INTRTN      38**DCL-ENT
M$IOQ      73**DCL-ENT
M$JOBSTATS      87**DCL-ENT
M$KEYIN      27**DCL-ENT
M$LDEV      22**DCL-ENT
M$LDTRC      35**DCL-ENT
M$LIMIT      28**DCL-ENT
M$LINES      27**DCL-ENT
M$LINK      34**DCL-ENT
M$MADMUCK      30**DCL-ENT
M$MAKUSER      61**DCL-ENT
M$MBS      29**DCL-ENT
M$MDFFLD      53**DCL-ENT
M$MERC      78**DCL-ENT
M$MERCS      79**DCL-ENT
M$MIRROR      73**DCL-ENT
M$MONINFO      90**DCL-ENT
M$MPL      63**DCL-ENT
M$NODEINFO      54**DCL-ENT
M$NXTUSR      88**DCL-ENT
M$OCMSG      86**DCL-ENT
M$OLAY      34**DCL-ENT
M$OPEN      22**DCL-ENT
M$PAS      63**DCL-ENT
M$PATHCON      86**DCL-ENT
M$PDS      57**DCL-ENT
M$PFIL      24**DCL-ENT
M$PLATEN      48**DCL-ENT
M$PRECORD      26**DCL-ENT
M$PROCNAME      39**DCL-ENT
M$PROFILE      50**DCL-ENT
M$PROMPT      46**DCL-ENT
M$RACST      30**DCL-ENT
M$RDSYSLOG      71**DCL-ENT
M$READ      23**DCL-ENT
M$RELDCB      28**DCL-ENT
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:21   
M$RELRES      29**DCL-ENT
M$RELSTARF      31**DCL-ENT
M$REM      31**DCL-ENT
M$RENV      78**DCL-ENT
M$REQUIRE      30**DCL-ENT
M$RETRY      79**DCL-ENT
M$RETRYS      79**DCL-ENT
M$REW      25**DCL-ENT
M$RLSFLD      53**DCL-ENT
M$RPRIV      81**DCL-ENT
M$RSPP      60**DCL-ENT
M$RSWITCH      82**DCL-ENT
M$RUE      88**DCL-ENT
M$SAD      61**DCL-ENT
M$SAVE      37**DCL-ENT
M$SCON      38**DCL-ENT
M$SCREECH      36**DCL-ENT
M$SENV      78**DCL-ENT
M$SETFMA      22**DCL-ENT
M$SETFP      51**DCL-ENT
M$SINPUT      49**DCL-ENT
M$SLCFLD      54**DCL-ENT
M$SMOUSE      68**DCL-ENT
M$SMPRT      60**DCL-ENT
M$SPRIV      81**DCL-ENT
M$SSC      61**DCL-ENT
M$SSWITCH      81**DCL-ENT
M$STATE      90**DCL-ENT
M$STD      62**DCL-ENT
M$STIMER      76**DCL-ENT
M$STLPP      59**DCL-ENT
M$STRAP      76**DCL-ENT
M$STRMATTR      48**DCL-ENT
M$STRMCTL      46**DCL-ENT
M$STRMTAB      49**DCL-ENT
M$SYMBIO      87**DCL-ENT
PL6.E3A0      #001=DUA$ALIB File=DUA$ALIB.:E05TSI                                TUE 07/29/97 14:45 Page:22   
M$SYSCON      73**DCL-ENT
M$SYSID      91**DCL-ENT
M$TDCLOSE      72**DCL-ENT
M$TDIO      72**DCL-ENT
M$TDOPEN      71**DCL-ENT
M$TDREQCPU      72**DCL-ENT
M$TEMPWROC      66**DCL-ENT
M$TIME      89**DCL-ENT
M$TRAP      76**DCL-ENT
M$TRMISC      51**DCL-ENT
M$TRMPRG      47**DCL-ENT
M$TRTN      80**DCL-ENT
M$TRUNC      23**DCL-ENT
M$TTIMER      76**DCL-ENT
M$UC      46**DCL
M$UMPL      63**DCL-ENT
M$UNFID      85**DCL-ENT
M$UNLATCH      42**DCL-ENT
M$UNSHARE      39**DCL-ENT
M$USRFIELD      82**DCL-ENT
M$VIRTUAL      57**DCL-ENT
M$WAIT      80**DCL-ENT
M$WEOF      25**DCL-ENT
M$WRITE      23**DCL-ENT
M$WRSYSLOG      71**DCL-ENT
M$XCON      77**DCL-ENT
M$XCONRTN      38**DCL-ENT
M$XEQTIME      90**DCL-ENT
M$XFLUSH      31**DCL-ENT
M$XMOUSE      68**DCL-ENT
M$XXX      34**DCL-ENT
M$YC      36**DCL-ENT
