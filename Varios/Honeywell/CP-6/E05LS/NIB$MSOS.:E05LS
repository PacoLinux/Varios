VERSION E05

PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:1    
        1        1        /*M* NIB$MSOS - MSOS communications POSTER/SCHEDULER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        NIB$POSTER: PROC(PAR,INTLVL,STATUS);
        9        9        /*D*  NAME:  NIB$POSTER
       10       10              CALL:  CALL NIB$POSTER(PAR,INTLVL,STATUS);
       11       11              ENVIRONMENT:  Monitor Linkage Segment, Interrupt Level
       12       12              INPUT:  PAR - DQH
       13       13                      INTLVL - 0 = Overhead
       14       14                               1 = Terminate
       15       15                               2 = Marker
       16       16                               3 = Special
       17       17                               4 = Lost
       18       18               DESCRIPTION:
       19       19                   This routine handles all interrupts from channel 4 on a
       20       20               DPS-90.  This channel is the path for communication with
       21       21               MSOS.
       22       22        */
       23       23
       24       24        %EJECT;
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:2    
       25       25        /*
       26       26                Includes
       27       27        */
       28       28        %INCLUDE                EL_SUBS_C ;
       29      112        %INCLUDE                HF_LOCK_C ;
       30      126        %INCLUDE                HF_DATA_R ;
       31      169        %INCLUDE                N_FC_C ;
       32      206        %INCLUDE                NI_DATA_R ;
       33      643        %INCLUDE                NI_DATA_C ;
       34      756        %INCLUDE                NI_MACROS_C ;
       35     1023        %INCLUDE                PM$NI ;
       36     1047        /*
       37     1048                Parameters
       38     1049        */
       39     1050    1   DCL 1 INTLVL            UBIN(18) PARAM ;
       40     1051    1   DCL 1 PAR               BIT(1) UNAL PARAM ;
       41     1052    1   DCL 1 STATUS            BIT(72) DALIGNED PARAM ;
       42     1053        /*
       43     1054                Entries
       44     1055        */
       45     1056    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
       46     1057    1   DCL 1 NIB$DEVSCHED      ENTRY(1) ;
       47     1058    1   DCL 1 NIO$COMP          ENTRY(2) ;
       48     1059    1   DCL 1 NIO$SPCOMP        ENTRY(1) ;
       49     1060    1   DCL 1 PMN$COLLECT       ENTRY(3) ;
       50     1061        /*
       51     1062                Auto
       52     1063        */
       53     1064    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
       54     1065    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
       55     1066    1   DCL 1 IOS$              PTR ALIGNED AUTO ;
       56     1067    1   DCL 1 MSOS_GATE         DALIGNED AUTO,
       57     1068    1         2 LOCK            UBIN WORD,
       58     1069    1         2 WHO             UBIN WORD ;
       59     1070    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
       60     1071    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
       61     1072        /*
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:3    
       62     1073                Based
       63     1074        */
       64     1075        %NI$DQH                 ( NAME=DQH,    STCLASS="BASED(DQH$)" ) ;
       65     1098        %NI$DCT                 ( NAME=DCT,    STCLASS="BASED(DCT$)" ) ;
       66     1146        %NI$MBX                 ( NAME=MBX,    STCLASS=BASED ) ;
       67     1165        %NI$IOM                 ( NAME=IOM,    STCLASS=BASED ) ;
       68     1170        %NI$IOSTAT              ( NAME=IOSTAT, STCLASS=BASED ) ;
       69     1179        %N$REQ                  ( NAME=N$REQ,  STCLASS="BASED(REQ$)" ) ;
       70     1237        %NI$REQ                 ( NAME=NI$REQ, STCLASS="BASED(IOS$)" ) ;
       71     1262        %NI$SQH                 ( NAME=SQH,    STCLASS="BASED(SQH$)" ) ;
       72     1275        %EJECT;
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:4    
       73     1276    2           DO INHIBIT;
       74     1277    2              DQH$=ADDR(PAR);    /* Set up pointers to DQH and SQH for later */
       75     1278    2              SQH$=DQH.SQH$;
       76     1279    3              DO CASE(INTLVL);
       77     1280    3               CASE(%TERMINATE,%LOST);
       78     1281                      %LOCK(G#=SQH.GATE);
       79     1284    3                 IF  DQH.STATE ~= %BUSY
       80     1285    4                 THEN DO ;
       81     1286    4                    IF  ADDR(STATUS) = ADDR(NIL)
       82     1287    4                    THEN
       83     1288    4                       CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, NI_DBLZERO ) ;
       84     1289    4                    ELSE
       85     1290    4                       CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, STATUS ) ;
       86     1291                         %UNLOCK ( G#=SQH.GATE ) ;
       87     1294    4                    RETURN ;
       88     1295    4                    END ;
       89     1296    3                 REQ$=DQH.IO$;
       90     1297    3                 DCT$=N$REQ.DCT$;
       91     1298    3                 CALL PMN$COLLECT ( DQH.PM, %PM_IDLE ) ;
       92     1299    3                 IF HW_IOP THEN
       93     1300    3                    N$REQ.FLPW=DQH.MBX$->MBX.LPW;
       94     1301    3                 N$REQ.STATUS=DQH.IOSTATUS$->IOSTAT.STATUS;
       95     1302    3                 IF INTLVL = %LOST THEN
       96     1303        /*N* I hope we never get a lost interrupt because it's not being handled right. */
       97     1304    3                    N$REQ.STATUS = STATUS;
       98     1305                      %UNLOCK(G#=SQH.GATE);
       99     1308    3                 CALL NIO$COMP(N$REQ);
      100     1309    3                 DCT.STATE=%IDLE;
      101     1310    3                 DQH.STATE=%IDLE;
      102     1311    3               CASE(%OVERHEAD,%MARKER);
      103     1312    3                 CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,NI_DBLZERO);
      104     1313    3                 RETURN;
      105     1314    3               CASE(%SPECIAL);
      106     1315    3                 DCT$=N$DCT$(SQH.FDCT);    /* Get DCT pointer */
      107     1316    3                 MSOS_GATE.LOCK = 1;
      108     1317                      %LOCK(G#=MSOS_GATE);      /* Just a trick to disable interr  */
      109     1320    3                 DCT.SPSTAT=STATUS;
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:5    
      110     1321    3                 CALL NIO$SPCOMP(DCT);
      111     1322                      %UNLOCK(G#=MSOS_GATE);
      112     1325    3               CASE(ELSE);
      113     1326    3                 IF ADDR(STATUS)=ADDR(NIL) THEN
      114     1327    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,NI_DBLZERO);
      115     1328    3                 ELSE
      116     1329    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,STATUS);
      117     1330    3               END;                        /* CASE */
      118     1331    2              CALL NIB$DEVSCHED(DCT);
      119     1332    2              RETURN;
      120     1333    2              END;                         /* INHIBIT */
      121     1334    1   END NIB$POSTER;
      122     1335        %EOD;

PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:6    
--  Include file information  --

   PM$NI.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NIB$POSTER.

   Procedure NIB$POSTER requires 169 words for executable code.
   Procedure NIB$POSTER requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:7    

 Object Unit name= NIB$POSTER                                 File name= NIB$MSOS.:E05TOU
 UTS= JUL 30 '97 03:28:04.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   169    251  NIB$POSTER
    1  RoData even  none     4      4  NIB$POSTER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  NIB$POSTER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       4 NIA$SPURINT
         yes           Std       1 HFC$UNLOCK
         yes           Std       3 PMN$COLLECT
         yes           Std       2 NIO$COMP
         yes           Std       1 NIO$SPCOMP
         yes           Std       1 NIB$DEVSCHED
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     HW_IOP                                N$DCT$$                               N$FQ$
     NI$FQ$                                NI$IBUF$                              NI$RP$
     NI_DBLZERO                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:9    


        1        1        /*M* NIB$MSOS - MSOS communications POSTER/SCHEDULER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR */
        8        8        NIB$POSTER: PROC(PAR,INTLVL,STATUS);

      8  0 000000   000000 700200 xent  NIB$POSTER   TSX0  ! X66_AUTO_3
         0 000001   000022 000003                    ZERO    18,3

        9        9        /*D*  NAME:  NIB$POSTER
       10       10              CALL:  CALL NIB$POSTER(PAR,INTLVL,STATUS);
       11       11              ENVIRONMENT:  Monitor Linkage Segment, Interrupt Level
       12       12              INPUT:  PAR - DQH
       13       13                      INTLVL - 0 = Overhead
       14       14                               1 = Terminate
       15       15                               2 = Marker
       16       16                               3 = Special
       17       17                               4 = Lost
       18       18               DESCRIPTION:
       19       19                   This routine handles all interrupts from channel 4 on a
       20       20               DPS-90.  This channel is the path for communication with
       21       21               MSOS.
       22       22        */
       23       23
       24       24        %EJECT;
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:10   
       25       25        /*
       26       26                Includes
       27       27        */
       28       28        %INCLUDE                EL_SUBS_C ;
       29      112        %INCLUDE                HF_LOCK_C ;
       30      126        %INCLUDE                HF_DATA_R ;
       31      169        %INCLUDE                N_FC_C ;
       32      206        %INCLUDE                NI_DATA_R ;
       33      643        %INCLUDE                NI_DATA_C ;
       34      756        %INCLUDE                NI_MACROS_C ;
       35     1023        %INCLUDE                PM$NI ;
       36     1047        /*
       37     1048                Parameters
       38     1049        */
       39     1050    1   DCL 1 INTLVL            UBIN(18) PARAM ;
       40     1051    1   DCL 1 PAR               BIT(1) UNAL PARAM ;
       41     1052    1   DCL 1 STATUS            BIT(72) DALIGNED PARAM ;
       42     1053        /*
       43     1054                Entries
       44     1055        */
       45     1056    1   DCL 1 NIA$SPURINT       ENTRY(4) ;
       46     1057    1   DCL 1 NIB$DEVSCHED      ENTRY(1) ;
       47     1058    1   DCL 1 NIO$COMP          ENTRY(2) ;
       48     1059    1   DCL 1 NIO$SPCOMP        ENTRY(1) ;
       49     1060    1   DCL 1 PMN$COLLECT       ENTRY(3) ;
       50     1061        /*
       51     1062                Auto
       52     1063        */
       53     1064    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
       54     1065    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
       55     1066    1   DCL 1 IOS$              PTR ALIGNED AUTO ;
       56     1067    1   DCL 1 MSOS_GATE         DALIGNED AUTO,
       57     1068    1         2 LOCK            UBIN WORD,
       58     1069    1         2 WHO             UBIN WORD ;
       59     1070    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
       60     1071    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
       61     1072        /*
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:11   
       62     1073                Based
       63     1074        */
       64     1075        %NI$DQH                 ( NAME=DQH,    STCLASS="BASED(DQH$)" ) ;
       65     1098        %NI$DCT                 ( NAME=DCT,    STCLASS="BASED(DCT$)" ) ;
       66     1146        %NI$MBX                 ( NAME=MBX,    STCLASS=BASED ) ;
       67     1165        %NI$IOM                 ( NAME=IOM,    STCLASS=BASED ) ;
       68     1170        %NI$IOSTAT              ( NAME=IOSTAT, STCLASS=BASED ) ;
       69     1179        %N$REQ                  ( NAME=N$REQ,  STCLASS="BASED(REQ$)" ) ;
       70     1237        %NI$REQ                 ( NAME=NI$REQ, STCLASS="BASED(IOS$)" ) ;
       71     1262        %NI$SQH                 ( NAME=SQH,    STCLASS="BASED(SQH$)" ) ;
       72     1275        %EJECT;
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:12   
       73     1276    2           DO INHIBIT;

       74     1277    2              DQH$=ADDR(PAR);    /* Set up pointers to DQH and SQH for later */

   1277  0 000002   200003 236300                    LDQ   ! @PAR,,AUTO
         0 000003   200007 756300                    STQ   ! DQH$,,AUTO

       75     1278    2              SQH$=DQH.SQH$;

   1278  0 000004   200007 470700                    LDP0  ! DQH$,,AUTO
         0 000005   000013 236300                    LDQ   ! 11,,PR0
         0 000006   200015 756300                    STQ   ! SQH$,,AUTO

       76     1279    3              DO CASE(INTLVL);

   1279  0 000007   200004 471700                    LDP1  ! @INTLVL,,AUTO
         0 000010   100000 220300                    LDX0  ! 0,,PR1
         0 000011   000005 100203                    CMPX0 ! 5,DU
         0 000012   000014 602210 0                  TNC   ! s:1279+5,X0
         0 000013   000214 710200 0                  TRA   ! s:1326
         0 000014   000145 710200 0                  TRA   ! s:1312
         0 000015   000021 710200 0                  TRA   ! s:1282
         0 000016   000145 710200 0                  TRA   ! s:1312
         0 000017   000160 710200 0                  TRA   ! s:1315
         0 000020   000021 710200 0                  TRA   ! s:1282

       77     1280    3               CASE(%TERMINATE,%LOST);

       78     1281                      %LOCK(G#=SQH.GATE);

   1282  0 000021   200015 630700                    EPPR0 ! SQH$,,AUTO
         0 000022   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000023   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000024   000000 011200                    NOP   ! 0

       79     1284    3                 IF  DQH.STATE ~= %BUSY

PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:13   
   1284  0 000025   200007 470700                    LDP0  ! DQH$,,AUTO
         0 000026   000001 236300                    LDQ   ! 1,,PR0
         0 000027   000077 376207                    ANQ   ! 63,DL
         0 000030   000005 116207                    CMPQ  ! 5,DL
         0 000031   000066 600200 0                  TZE   ! s:1296

       80     1285    4                 THEN DO ;

       81     1286    4                    IF  ADDR(STATUS) = ADDR(NIL)

   1286  0 000032   200005 236300                    LDQ   ! @STATUS,,AUTO
         0 000033   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000034   000050 601200 0                  TNZ   ! s:1290

       82     1287    4                    THEN
       83     1288    4                       CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, NI_DBLZERO ) ;

   1288  0 000035   000001 236200 1                  LDQ   ! 1
         0 000036   200004 235300                    LDA   ! @INTLVL,,AUTO
         0 000037   200020 757300                    STAQ  ! SQH$+3,,AUTO
         0 000040   000002 236200 1                  LDQ   ! 2
         0 000041   200007 235300                    LDA   ! DQH$,,AUTO
         0 000042   200016 757300                    STAQ  ! SQH$+1,,AUTO
         0 000043   200016 630700                    EPPR0 ! SQH$+1,,AUTO
         0 000044   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         0 000045   000000 701200 xent               TSX1  ! NIA$SPURINT
         0 000046   000000 011200                    NOP   ! 0
         0 000047   000061 710200 0                  TRA   ! s:1292

       84     1289    4                    ELSE
       85     1290    4                       CALL NIA$SPURINT ( DQH, EL_SPURINT, INTLVL, STATUS ) ;

   1290  0 000050   200004 237300                    LDAQ  ! @INTLVL,,AUTO
         0 000051   200020 757300                    STAQ  ! SQH$+3,,AUTO
         0 000052   000002 236200 1                  LDQ   ! 2
         0 000053   200007 235300                    LDA   ! DQH$,,AUTO
         0 000054   200016 757300                    STAQ  ! SQH$+1,,AUTO
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:14   
         0 000055   200016 630700                    EPPR0 ! SQH$+1,,AUTO
         0 000056   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         0 000057   000000 701200 xent               TSX1  ! NIA$SPURINT
         0 000060   000000 011200                    NOP   ! 0

       86     1291                         %UNLOCK ( G#=SQH.GATE ) ;

   1292  0 000061   200015 630700                    EPPR0 ! SQH$,,AUTO
         0 000062   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000063   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000064   000000 011200                    NOP   ! 0

       87     1294    4                    RETURN ;

   1294  0 000065   000000 702200 xent               TSX2  ! X66_ARET

       88     1295    4                    END ;
       89     1296    3                 REQ$=DQH.IO$;

   1296  0 000066   000014 236300                    LDQ   ! 12,,PR0
         0 000067   200014 756300                    STQ   ! REQ$,,AUTO

       90     1297    3                 DCT$=N$REQ.DCT$;

   1297  0 000070   200014 471700                    LDP1  ! REQ$,,AUTO
         0 000071   100002 236300                    LDQ   ! 2,,PR1
         0 000072   200006 756300                    STQ   ! DCT$,,AUTO

       91     1298    3                 CALL PMN$COLLECT ( DQH.PM, %PM_IDLE ) ;

   1298  0 000073   000003 236200 1                  LDQ   ! 3
         0 000074   200017 756300                    STQ   ! SQH$+2,,AUTO
         0 000075   200007 236300                    LDQ   ! DQH$,,AUTO
         0 000076   000002 036203                    ADLQ  ! 2,DU
         0 000077   200016 756300                    STQ   ! SQH$+1,,AUTO
         0 000100   200016 630700                    EPPR0 ! SQH$+1,,AUTO
         0 000101   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:15   
         0 000102   000000 701200 xent               TSX1  ! PMN$COLLECT
         0 000103   000000 011200                    NOP   ! 0

       92     1299    3                 IF HW_IOP THEN

   1299  0 000104   000000 234200 xsym               SZN   ! HW_IOP
         0 000105   000113 605200 0                  TPL   ! s:1301

       93     1300    3                    N$REQ.FLPW=DQH.MBX$->MBX.LPW;

   1300  0 000106   200007 470700                    LDP0  ! DQH$,,AUTO
         0 000107   000021 471700                    LDP1  ! 17,,PR0
         0 000110   100000 236300                    LDQ   ! 0,,PR1
         0 000111   200014 473700                    LDP3  ! REQ$,,AUTO
         0 000112   300016 756300                    STQ   ! 14,,PR3

       94     1301    3                 N$REQ.STATUS=DQH.IOSTATUS$->IOSTAT.STATUS;

   1301  0 000113   200007 470700                    LDP0  ! DQH$,,AUTO
         0 000114   000016 471700                    LDP1  ! 14,,PR0
         0 000115   100000 237300                    LDAQ  ! 0,,PR1
         0 000116   200014 473700                    LDP3  ! REQ$,,AUTO
         0 000117   300014 757300                    STAQ  ! 12,,PR3

       95     1302    3                 IF INTLVL = %LOST THEN

   1302  0 000120   200004 471700                    LDP1  ! @INTLVL,,AUTO
         0 000121   100000 220300                    LDX0  ! 0,,PR1
         0 000122   000004 100203                    CMPX0 ! 4,DU
         0 000123   000127 601200 0                  TNZ   ! s:1306

       96     1303        /*N* I hope we never get a lost interrupt because it's not being handled right. */
       97     1304    3                    N$REQ.STATUS = STATUS;

   1304  0 000124   200005 474700                    LDP4  ! @STATUS,,AUTO
         0 000125   400000 237300                    LDAQ  ! 0,,PR4
         0 000126   300014 757300                    STAQ  ! 12,,PR3
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:16   

       98     1305                      %UNLOCK(G#=SQH.GATE);

   1306  0 000127   200015 630700                    EPPR0 ! SQH$,,AUTO
         0 000130   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000131   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000132   000000 011200                    NOP   ! 0

       99     1308    3                 CALL NIO$COMP(N$REQ);

   1308  0 000133   200014 630700                    EPPR0 ! REQ$,,AUTO
         0 000134   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000135   000000 701200 xent               TSX1  ! NIO$COMP
         0 000136   000000 011200                    NOP   ! 0

      100     1309    3                 DCT.STATE=%IDLE;

   1309  0 000137   200006 470700                    LDP0  ! DCT$,,AUTO
         0 000140   000000 236203                    LDQ   ! 0,DU
         0 000141   000007 752301                    STCQ  ! 7,'01'O,PR0

      101     1310    3                 DQH.STATE=%IDLE;

   1310  0 000142   200007 471700                    LDP1  ! DQH$,,AUTO
         0 000143   100001 752301                    STCQ  ! 1,'01'O,PR1
         0 000144   000243 710200 0                  TRA   ! s:1331

      102     1311    3               CASE(%OVERHEAD,%MARKER);

      103     1312    3                 CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,NI_DBLZERO);

   1312  0 000145   000001 236200 1                  LDQ   ! 1
         0 000146   200004 235300                    LDA   ! @INTLVL,,AUTO
         0 000147   200020 757300                    STAQ  ! SQH$+3,,AUTO
         0 000150   000002 236200 1                  LDQ   ! 2
         0 000151   200007 235300                    LDA   ! DQH$,,AUTO
         0 000152   200016 757300                    STAQ  ! SQH$+1,,AUTO
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:17   
         0 000153   200016 630700                    EPPR0 ! SQH$+1,,AUTO
         0 000154   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         0 000155   000000 701200 xent               TSX1  ! NIA$SPURINT
         0 000156   000000 011200                    NOP   ! 0

      104     1313    3                 RETURN;

   1313  0 000157   000000 702200 xent               TSX2  ! X66_ARET

      105     1314    3               CASE(%SPECIAL);

      106     1315    3                 DCT$=N$DCT$(SQH.FDCT);    /* Get DCT pointer */

   1315  0 000160   200015 473700                    LDP3  ! SQH$,,AUTO
         0 000161   300002 221300                    LDX1  ! 2,,PR3
         0 000162   000000 474600 xsym               LDP4  ! N$DCT$$
         0 000163   400000 236311                    LDQ   ! 0,X1,PR4
         0 000164   200006 756300                    STQ   ! DCT$,,AUTO

      107     1316    3                 MSOS_GATE.LOCK = 1;

   1316  0 000165   000001 235207                    LDA   ! 1,DL
         0 000166   200012 755300                    STA   ! MSOS_GATE,,AUTO

      108     1317                      %LOCK(G#=MSOS_GATE);      /* Just a trick to disable interr  */

   1318  0 000167   200012 635700                    EPPR5 ! MSOS_GATE,,AUTO
         0 000170   200016 455700                    STP5  ! SQH$+1,,AUTO
         0 000171   200016 630700                    EPPR0 ! SQH$+1,,AUTO
         0 000172   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000173   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000174   000000 011200                    NOP   ! 0

      109     1320    3                 DCT.SPSTAT=STATUS;

   1320  0 000175   200005 470700                    LDP0  ! @STATUS,,AUTO
         0 000176   000000 236300                    LDQ   ! 0,,PR0
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:18   
         0 000177   200006 471700                    LDP1  ! DCT$,,AUTO
         0 000200   100017 756300                    STQ   ! 15,,PR1

      110     1321    3                 CALL NIO$SPCOMP(DCT);

   1321  0 000201   200006 630700                    EPPR0 ! DCT$,,AUTO
         0 000202   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000203   000000 701200 xent               TSX1  ! NIO$SPCOMP
         0 000204   000000 011200                    NOP   ! 0

      111     1322                      %UNLOCK(G#=MSOS_GATE);

   1323  0 000205   200012 630700                    EPPR0 ! MSOS_GATE,,AUTO
         0 000206   200016 450700                    STP0  ! SQH$+1,,AUTO
         0 000207   200016 630700                    EPPR0 ! SQH$+1,,AUTO
         0 000210   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000211   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000212   000000 011200                    NOP   ! 0
         0 000213   000243 710200 0                  TRA   ! s:1331

      112     1325    3               CASE(ELSE);

      113     1326    3                 IF ADDR(STATUS)=ADDR(NIL) THEN

   1326  0 000214   200005 236300                    LDQ   ! @STATUS,,AUTO
         0 000215   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000216   000232 601200 0                  TNZ   ! s:1329

      114     1327    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,NI_DBLZERO);

   1327  0 000217   000001 236200 1                  LDQ   ! 1
         0 000220   200004 235300                    LDA   ! @INTLVL,,AUTO
         0 000221   200020 757300                    STAQ  ! SQH$+3,,AUTO
         0 000222   000002 236200 1                  LDQ   ! 2
         0 000223   200007 235300                    LDA   ! DQH$,,AUTO
         0 000224   200016 757300                    STAQ  ! SQH$+1,,AUTO
         0 000225   200016 630700                    EPPR0 ! SQH$+1,,AUTO
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:19   
         0 000226   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         0 000227   000000 701200 xent               TSX1  ! NIA$SPURINT
         0 000230   000000 011200                    NOP   ! 0
         0 000231   000243 710200 0                  TRA   ! s:1331

      115     1328    3                 ELSE
      116     1329    3                    CALL NIA$SPURINT(DQH,EL_SPURINT,INTLVL,STATUS);

   1329  0 000232   200004 237300                    LDAQ  ! @INTLVL,,AUTO
         0 000233   200020 757300                    STAQ  ! SQH$+3,,AUTO
         0 000234   000002 236200 1                  LDQ   ! 2
         0 000235   200007 235300                    LDA   ! DQH$,,AUTO
         0 000236   200016 757300                    STAQ  ! SQH$+1,,AUTO
         0 000237   200016 630700                    EPPR0 ! SQH$+1,,AUTO
         0 000240   000022 631600 xsym               EPPR1 ! B_VECTNIL+18
         0 000241   000000 701200 xent               TSX1  ! NIA$SPURINT
         0 000242   000000 011200                    NOP   ! 0

      117     1330    3               END;                        /* CASE */

      118     1331    2              CALL NIB$DEVSCHED(DCT);

   1331  0 000243   200006 630700                    EPPR0 ! DCT$,,AUTO
         0 000244   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000245   000000 701200 xent               TSX1  ! NIB$DEVSCHED
         0 000246   000000 011200                    NOP   ! 0

      119     1332    2              RETURN;

   1332  0 000247   000000 702200 xent               TSX2  ! X66_ARET

      120     1333    2              END;                         /* INHIBIT */

      121     1334    1   END NIB$POSTER;

   1334  0 000250   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:20   
(unnamed)
 Sect OctLoc
   1     000   000000 000315   000000 006000   000000 006000   000002 006000    ................
      122     1335        %EOD;

PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:21   
--  Include file information  --

   PM$NI.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NIB$POSTER.
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:22   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @INTLVL                    3-0-0/w PTR         r     1 @PAR
     5-0-0/w PTR         r     1 @STATUS                    6-0-0/w PTR         r     1 DCT$
     7-0-0/w PTR         r     1 DQH$                      *0-0-0/w UBIN(18)    r     1 INTLVL
    10-0-0/w PTR         r     1 IOS$                      12-0-0/d STRC(72)    r     1 MSOS_GATE
    *0-0-0/b BIT         r     1 PAR                       14-0-0/w PTR         r     1 REQ$
    15-0-0/w PTR         r     1 SQH$                      *0-0-0/d BIT (72)    r     1 STATUS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 HW_IOP                     0-0-0/w PTR         r     1 N$DCT$$
     0-0-0/w PTR         r     1 N$FQ$                      0-0-0/w PTR         r     1 NI$FQ$
     0-0-0/w PTR         r     1 NI$IBUF$                   0-0-0/w PTR         r     1 NI$RP$
     0-0-0/d BIT (72)    r     1 NI_DBLZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(648)   r     1 DQH
     0-0-0/d STRC(576)   r     1 IOSTAT                     0-0-0/d STRC(144)   r     1 MBX
     0-0-0/w PTR         r     1 N$DCT$(0:0)                0-0-0/d STRC(1080)  r     1 N$REQ
     0-0-0/w STRC(252)   r     1 SQH


   Procedure NIB$POSTER requires 169 words for executable code.
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:23   
   Procedure NIB$POSTER requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:25   
          MINI XREF LISTING

DCT
      1107**DCL      1321<>CALL     1331<>CALL
DCT.DP
      1127**DCL      1134--REDEF    1137--REDEF    1138--REDEF    1140--REDEF    1140--REDEF    1141--REDEF
      1142--REDEF    1142--REDEF
DCT.MPC.IOCHANX
      1135**DCL      1135--REDEF
DCT.SPSTAT
      1119**DCL      1320<<ASSIGN
DCT.STATE
      1117**DCL      1309<<ASSIGN
DCT$
      1064**DCL      1107--IMP-PTR  1297<<ASSIGN   1309>>ASSIGN   1315<<ASSIGN   1320>>ASSIGN   1321>>CALL
      1331>>CALL
DQH
      1084**DCL      1288<>CALL     1290<>CALL     1312<>CALL     1327<>CALL     1329<>CALL
DQH.IO$
      1091**DCL      1296>>ASSIGN
DQH.IOCHANX
      1086**DCL      1087--REDEF
DQH.IOSTATUS$
      1091**DCL      1301>>ASSIGN
DQH.MBX$
      1095**DCL      1096--REDEF    1300>>ASSIGN
DQH.PM
      1088**DCL      1298<>CALL
DQH.SQH$
      1090**DCL      1278>>ASSIGN
DQH.STATE
      1088**DCL      1284>>IF       1310<<ASSIGN
DQH$
      1065**DCL      1084--IMP-PTR  1277<<ASSIGN   1278>>ASSIGN   1284>>IF       1288>>CALL     1290>>CALL
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:26   
      1296>>ASSIGN   1298>>CALL     1300>>ASSIGN   1301>>ASSIGN   1310>>ASSIGN   1312>>CALL     1327>>CALL
      1329>>CALL
HFC$LOCK
       125**DCL-ENT  1282--CALL     1318--CALL
HFC$UNLOCK
       125**DCL-ENT  1292--CALL     1306--CALL     1323--CALL
HW_IOP
       165**DCL      1299>>IF
INTLVL
      1050**DCL         8--PROC     1279>>DOCASE   1288<>CALL     1290<>CALL     1302>>IF       1312<>CALL
      1327<>CALL     1329<>CALL
IOS$
      1066**DCL      1246--IMP-PTR
IOSTAT.AESDCW
      1176**DCL      1176--REDEF
IOSTAT.STATUS
      1171**DCL      1301>>ASSIGN
MBX.DCW.CONTROL.AE
      1162**DCL      1162--REDEF
MBX.LPW
      1157**DCL      1300>>ASSIGN
MBX.LPW.CONTROL.AE
      1158**DCL      1158--REDEF
MSOS_GATE
      1067**DCL      1318<>CALL     1323<>CALL
MSOS_GATE.LOCK
      1068**DCL      1316<<ASSIGN
N$DCT$
       638**DCL      1315>>ASSIGN
N$DCT$$
       504**DCL       638--IMP-PTR  1315>>ASSIGN
N$FQ$
       504**DCL       639--IMP-PTR
N$REQ
      1188**DCL      1308<>CALL
N$REQ.BUFADDR
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:27   
      1197**DCL      1198--REDEF    1198--REDEF
N$REQ.DCT$
      1189**DCL      1297>>ASSIGN
N$REQ.DLA.DRELADDR
      1189**DCL      1189--REDEF
N$REQ.DVE.EOMCHAR
      1226**DCL      1227--REDEF
N$REQ.EAINFO
      1220**DCL      1220--REDEF
N$REQ.EAINFOX
      1220**DCL      1221--REDEF
N$REQ.EVNTINFO
      1221**DCL      1221--REDEF
N$REQ.FLPW
      1209**DCL      1300<<ASSIGN
N$REQ.STATUS
      1202**DCL      1208--REDEF    1301<<ASSIGN   1304<<ASSIGN
N$REQ_INIT.BUFADDR
       523**DCL       524--REDEF     524--REDEF
N$REQ_INIT.DLA.DRELADDR
       515**DCL       515--REDEF
N$REQ_INIT.DVE.EOMCHAR
       552**DCL       553--REDEF
N$REQ_INIT.EAINFO
       546**DCL       546--REDEF
N$REQ_INIT.EAINFOX
       546**DCL       547--REDEF
N$REQ_INIT.EVNTINFO
       547**DCL       547--REDEF
N$REQ_INIT.STATUS
       528**DCL       534--REDEF
NI$FQ$
       564**DCL       640--IMP-PTR
NI$IBUF$
       564**DCL       640--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:28   
       574**DCL       575--REDEF     575--REDEF
NI$IMXMBX_INIT.SIZE
       576**DCL       576--REDEF
NI$REQ.DCW
      1248**DCL      1251--REDEF
NI$REQ.DCW.TALLY
      1249**DCL      1249--REDEF
NI$REQ.IDCW.EXTA
      1251**DCL      1251--REDEF
NI$REQ.PCW
      1253**DCL      1257--REDEF
NI$REQ.SEEK
      1258**DCL      1259--REDEF    1260--REDEF
NI$REQ_INIT.DCW
       598**DCL       601--REDEF
NI$REQ_INIT.DCW.TALLY
       599**DCL       599--REDEF
NI$REQ_INIT.IDCW.EXTA
       601**DCL       601--REDEF
NI$REQ_INIT.PCW
       603**DCL       607--REDEF
NI$REQ_INIT.SEEK
       608**DCL       609--REDEF     610--REDEF
NI$RP$
       612**DCL       642--IMP-PTR
NIA$SPURINT
      1056**DCL-ENT  1288--CALL     1290--CALL     1312--CALL     1327--CALL     1329--CALL
NIB$DEVSCHED
      1057**DCL-ENT  1331--CALL
NIO$COMP
      1058**DCL-ENT  1308--CALL
NIO$SPCOMP
      1059**DCL-ENT  1321--CALL
NI_DBLZERO
       613**DCL      1288<>CALL     1312<>CALL     1327<>CALL
NI_MBX_INIT.DCW.CONTROL.AE
PL6.E3A0      #001=NIB$POSTER File=NIB$MSOS.:E05TSI                              WED 07/30/97 03:28 Page:29   
       634**DCL       634--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       630**DCL       630--REDEF
PAR
      1051**DCL         8--PROC     1277--ASSIGN
PMN$COLLECT
      1060**DCL-ENT  1298--CALL
REQ$
      1070**DCL      1188--IMP-PTR  1296<<ASSIGN   1297>>ASSIGN   1300>>ASSIGN   1301>>ASSIGN   1304>>ASSIGN
      1308>>CALL
SQH.DOOR
      1271**DCL      1271--REDEF
SQH.FDCT
      1271**DCL      1315>>ASSIGN
SQH.GATE
      1271**DCL      1282<>CALL     1292<>CALL     1306<>CALL
SQH$
      1071**DCL      1271--IMP-PTR  1278<<ASSIGN   1282>>CALL     1292>>CALL     1306>>CALL     1315>>ASSIGN
STATUS
      1052**DCL         8--PROC     1286--IF       1290<>CALL     1304>>ASSIGN   1320>>ASSIGN   1326--IF
      1329<>CALL

PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:30   
      123        1        /*T***********************************************************/
      124        2        /*T*                                                         */
      125        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      126        4        /*T*                                                         */
      127        5        /*T***********************************************************/
      128        6        NIB$REQSCHED: PROC(PAR);
      129        7        /*D*  NAME:             NIB$REQSCHED
      130        8
      131        9              CALL:             CALL NIB$REQSCHED ( PAR ) ;
      132       10
      133       11              ENVIRONMENT:      Monitor, not privileged, not inhibited.
      134       12
      135       13              INPUT:            N$REQ (IOQ request packet)
      136       14
      137       15              DESCRIPTION:      NIB$REQSCHED enques an IOQ reqest on the
      138       16                                appropriate MSOS scheduler queue and then
      139       17                                goes to the common code at SCHED.
      140       18        */
      141       19        /*
      142       20                Includes
      143       21        */
      144       22        %INCLUDE HF_LOCK_C ;
      145       36        %INCLUDE NI_DATA_C ;
      146      149        %INCLUDE NI_DATA_R ;
      147      586        %INCLUDE NI_MACROS_C ;
      148      853        %INCLUDE N_FC_C ;
      149      890        %INCLUDE PM$NI ;
      150      914        /*
      151      915                Parameters
      152      916        */
      153      917    1   DCL 1 PAR               UBIN PARAM ;    /*  REQ packet.  */
      154      918        /*
      155      919                Entries
      156      920        */
      157      921    1   DCL PMN$COLLECT ENTRY(3) ;
      158      922    1   DCL 1 NIS$DRIVER        ENTRY(1) ;
      159      923        /*
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:31   
      160      924                Auto
      161      925        */
      162      926    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      163      927    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
      164      928    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
      165      929    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      166      930        /*
      167      931                Based
      168      932        */
      169      933        %NI$DCT                 ( NAME=DCT,   STCLASS="BASED(DCT$)" ) ;
      170      981        %NI$DQH                 ( NAME=DQH,   STCLASS="BASED(DQH$)" ) ;
      171     1004        %N$REQ                  ( NAME=N$REQ, STCLASS="BASED(REQ$)" ) ;
      172     1062        %NI$SQH                 ( NAME=SQH,   STCLASS="BASED(SQH$)" ) ;
      173     1075        %EJECT ;
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:32   
      174     1076    1           REQ$=ADDR(PAR);
      175     1077    1           DCT$=N$REQ.DCT$;
      176     1078    1           SQH$=DCT.SQH$;
      177     1079                %LOCK(G#=SQH.GATE);
      178     1082    2           IF DCT.SQ$ = ADDR(NIL) THEN DO ;
      179     1083    2              N$REQ.FL$ = REQ$ ;
      180     1084    2              DCT.SQ$ = REQ$ ;
      181     1085    2              END ;
      182     1086    2           ELSE DO ;
      183     1087                   %ENQUEUE ( P#=N$REQ, Q#=DCT.SQ$ ) ;
      184     1090    2              CALL PMN$COLLECT ( DCT.PM, %PM_QUED ) ;
      185     1091    2              END ;
      186     1092    1           GOTO SCHED;
      187     1093        %EJECT ;
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:33   
      188     1094        /*D*  NAME:             NIB$DEVSCHED
      189     1095
      190     1096              CALL:             CALL NIB$DEVSCHED ( PAR ) ;
      191     1097
      192     1098              ENVIRONMENT:      Monitor, not privileged, not inhibited.
      193     1099
      194     1100              INPUT:            NI$DCT (Device Control Table entry)
      195     1101
      196     1102              DESCRIPTION:      NIB$DEVSCHED locks the SQH, and goes to the
      197     1103                                common code at SCHED.  There a waiting
      198     1104                                request (if any) is started if that MCA is
      199     1105                                idle.
      200     1106        */
      201     1107    1   NIB$DEVSCHED: ENTRY(PAR);
      202     1108    1           DCT$=ADDR(PAR);
      203     1109    1           SQH$=DCT.SQH$;
      204     1110                %LOCK(G#=SQH.GATE);
      205     1113    1   SCHED:
      206     1114    2           IF DCT.STATE = %IDLE THEN DO ;
      207     1115    2              IF DCT.SQ$ = ADDR(NIL) THEN
      208     1116    2                 CALL PMN$COLLECT ( DCT.PM, %PM_IDLE ) ;
      209     1117    3              ELSE DO ;
      210     1118    3                 DQH$ = DCT.DQH$ ;
      211     1119                      %DEQUEUE ( P#=REQ$, Q#=DCT.SQ$ ) ;
      212     1126    3                 DQH.IO$ = REQ$ ;
      213     1127    3                 IF DCT.SQ$ = ADDR(NIL) THEN
      214     1128    3                    CALL PMN$COLLECT ( DCT.PM, %PM_BUSY ) ;
      215     1129    3                 ELSE
      216     1130    3                    CALL PMN$COLLECT ( DCT.PM, %PM_QUED ) ;
      217     1131    3                 CALL NIS$DRIVER ( DQH ) ;
      218     1132    3                 DCT.STATE = %BUSY ;
      219     1133    3                 END ;
      220     1134    2              END ;
      221     1135                %UNLOCK(G#=SQH.GATE);
      222     1138    1           RETURN;
      223     1139    1   END NIB$REQSCHED;
      224     1140        %EOD;
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:34   

PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:35   
--  Include file information  --

   PM$NI.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NIB$REQSCHED.

   Procedure NIB$REQSCHED requires 119 words for executable code.
   Procedure NIB$REQSCHED requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:36   

 Object Unit name= NIB$REQSCHED                               File name= NIB$MSOS.:E05TOU
 UTS= JUL 30 '97 03:28:32.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   119    167  NIB$REQSCHED
    1  RoData even  none     3      3  NIB$REQSCHED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  NIB$REQSCHED
     0     52                  yes      Std        1  NIB$DEVSCHED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       3 PMN$COLLECT
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       2 NIM$DEQUEUE
         yes           Std       1 NIS$DRIVER
         yes           Std       2 NIM$ENQUEUE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:37   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               N$FQ$                                 NI$FQ$
     NI$IBUF$                              NI$RP$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:38   


      123        1        /*T***********************************************************/
      124        2        /*T*                                                         */
      125        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      126        4        /*T*                                                         */
      127        5        /*T***********************************************************/
      128        6        NIB$REQSCHED: PROC(PAR);

      6  0 000000   000000 700200 xent  NIB$REQSCHED TSX0  ! X66_AUTO_1
         0 000001   000012 000001                    ZERO    10,1

      129        7        /*D*  NAME:             NIB$REQSCHED
      130        8
      131        9              CALL:             CALL NIB$REQSCHED ( PAR ) ;
      132       10
      133       11              ENVIRONMENT:      Monitor, not privileged, not inhibited.
      134       12
      135       13              INPUT:            N$REQ (IOQ request packet)
      136       14
      137       15              DESCRIPTION:      NIB$REQSCHED enques an IOQ reqest on the
      138       16                                appropriate MSOS scheduler queue and then
      139       17                                goes to the common code at SCHED.
      140       18        */
      141       19        /*
      142       20                Includes
      143       21        */
      144       22        %INCLUDE HF_LOCK_C ;
      145       36        %INCLUDE NI_DATA_C ;
      146      149        %INCLUDE NI_DATA_R ;
      147      586        %INCLUDE NI_MACROS_C ;
      148      853        %INCLUDE N_FC_C ;
      149      890        %INCLUDE PM$NI ;
      150      914        /*
      151      915                Parameters
      152      916        */
      153      917    1   DCL 1 PAR               UBIN PARAM ;    /*  REQ packet.  */
      154      918        /*
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:39   
      155      919                Entries
      156      920        */
      157      921    1   DCL PMN$COLLECT ENTRY(3) ;
      158      922    1   DCL 1 NIS$DRIVER        ENTRY(1) ;
      159      923        /*
      160      924                Auto
      161      925        */
      162      926    1   DCL 1 DCT$              PTR ALIGNED AUTO ;
      163      927    1   DCL 1 DQH$              PTR ALIGNED AUTO ;
      164      928    1   DCL 1 REQ$              PTR ALIGNED AUTO ;
      165      929    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      166      930        /*
      167      931                Based
      168      932        */
      169      933        %NI$DCT                 ( NAME=DCT,   STCLASS="BASED(DCT$)" ) ;
      170      981        %NI$DQH                 ( NAME=DQH,   STCLASS="BASED(DQH$)" ) ;
      171     1004        %N$REQ                  ( NAME=N$REQ, STCLASS="BASED(REQ$)" ) ;
      172     1062        %NI$SQH                 ( NAME=SQH,   STCLASS="BASED(SQH$)" ) ;
      173     1075        %EJECT ;
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:40   
      174     1076    1           REQ$=ADDR(PAR);

   1076  0 000002   200003 236100                    LDQ     @PAR,,AUTO
         0 000003   200006 756100                    STQ     REQ$,,AUTO

      175     1077    1           DCT$=N$REQ.DCT$;

   1077  0 000004   200006 470500                    LDP0    REQ$,,AUTO
         0 000005   000002 236100                    LDQ     2,,PR0
         0 000006   200004 756100                    STQ     DCT$,,AUTO

      176     1078    1           SQH$=DCT.SQH$;

   1078  0 000007   200004 471500                    LDP1    DCT$,,AUTO
         0 000010   100022 236100                    LDQ     18,,PR1
         0 000011   200007 756100                    STQ     SQH$,,AUTO

      177     1079                %LOCK(G#=SQH.GATE);

   1080  0 000012   200007 630500                    EPPR0   SQH$,,AUTO
         0 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000014   000000 701000 xent               TSX1    HFC$LOCK
         0 000015   000000 011000                    NOP     0

      178     1082    2           IF DCT.SQ$ = ADDR(NIL) THEN DO ;

   1082  0 000016   200004 470500                    LDP0    DCT$,,AUTO
         0 000017   000001 236100                    LDQ     1,,PR0
         0 000020   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000021   000030 601000 0                  TNZ     s:1088

      179     1083    2              N$REQ.FL$ = REQ$ ;

   1083  0 000022   200006 236100                    LDQ     REQ$,,AUTO
         0 000023   200006 471500                    LDP1    REQ$,,AUTO
         0 000024   100000 756100                    STQ     0,,PR1

PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:41   
      180     1084    2              DCT.SQ$ = REQ$ ;

   1084  0 000025   200006 236100                    LDQ     REQ$,,AUTO
         0 000026   000001 756100                    STQ     1,,PR0

      181     1085    2              END ;

   1085  0 000027   000051 710000 0                  TRA     s:1092

      182     1086    2           ELSE DO ;

      183     1087                   %ENQUEUE ( P#=N$REQ, Q#=DCT.SQ$ ) ;

   1088  0 000030   200004 236100                    LDQ     DCT$,,AUTO
         0 000031   000001 036003                    ADLQ    1,DU
         0 000032   200006 235100                    LDA     REQ$,,AUTO
         0 000033   200010 757100                    STAQ    SQH$+1,,AUTO
         0 000034   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000035   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000036   000000 701000 xent               TSX1    NIM$ENQUEUE
         0 000037   000000 011000                    NOP     0

      184     1090    2              CALL PMN$COLLECT ( DCT.PM, %PM_QUED ) ;

   1090  0 000040   000000 236000 1                  LDQ     0
         0 000041   200011 756100                    STQ     SQH$+2,,AUTO
         0 000042   200004 236100                    LDQ     DCT$,,AUTO
         0 000043   000010 036003                    ADLQ    8,DU
         0 000044   200010 756100                    STQ     SQH$+1,,AUTO
         0 000045   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000046   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000047   000000 701000 xent               TSX1    PMN$COLLECT
         0 000050   000000 011000                    NOP     0

      185     1091    2              END ;

      186     1092    1           GOTO SCHED;
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:42   

   1092  0 000051   000065 710000 0                  TRA     SCHED

      187     1093        %EJECT ;
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:43   
      188     1094        /*D*  NAME:             NIB$DEVSCHED
      189     1095
      190     1096              CALL:             CALL NIB$DEVSCHED ( PAR ) ;
      191     1097
      192     1098              ENVIRONMENT:      Monitor, not privileged, not inhibited.
      193     1099
      194     1100              INPUT:            NI$DCT (Device Control Table entry)
      195     1101
      196     1102              DESCRIPTION:      NIB$DEVSCHED locks the SQH, and goes to the
      197     1103                                common code at SCHED.  There a waiting
      198     1104                                request (if any) is started if that MCA is
      199     1105                                idle.
      200     1106        */
      201     1107    1   NIB$DEVSCHED: ENTRY(PAR);

   1107  0 000052   000000 700200 xent  NIB$DEVSCHED TSX0  ! X66_AUTO_1
         0 000053   000012 000001                    ZERO    10,1

      202     1108    1           DCT$=ADDR(PAR);

   1108  0 000054   200003 236100                    LDQ     @PAR,,AUTO
         0 000055   200004 756100                    STQ     DCT$,,AUTO

      203     1109    1           SQH$=DCT.SQH$;

   1109  0 000056   200004 470500                    LDP0    DCT$,,AUTO
         0 000057   000022 236100                    LDQ     18,,PR0
         0 000060   200007 756100                    STQ     SQH$,,AUTO

      204     1110                %LOCK(G#=SQH.GATE);

   1111  0 000061   200007 630500                    EPPR0   SQH$,,AUTO
         0 000062   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000063   000000 701000 xent               TSX1    HFC$LOCK
         0 000064   000000 011000                    NOP     0

      205     1113    1   SCHED:
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:44   
      206     1114    2           IF DCT.STATE = %IDLE THEN DO ;

   1114  0 000065   200004 470500       SCHED        LDP0    DCT$,,AUTO
         0 000066   000007 236100                    LDQ     7,,PR0
         0 000067   000077 316007                    CANQ    63,DL
         0 000070   000162 601000 0                  TNZ     s:1136

      207     1115    2              IF DCT.SQ$ = ADDR(NIL) THEN

   1115  0 000071   000001 236100                    LDQ     1,,PR0
         0 000072   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000073   000106 601000 0                  TNZ     s:1118

      208     1116    2                 CALL PMN$COLLECT ( DCT.PM, %PM_IDLE ) ;

   1116  0 000074   000001 236000 1                  LDQ     1
         0 000075   200011 756100                    STQ     SQH$+2,,AUTO
         0 000076   200004 236100                    LDQ     DCT$,,AUTO
         0 000077   000010 036003                    ADLQ    8,DU
         0 000100   200010 756100                    STQ     SQH$+1,,AUTO
         0 000101   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000102   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000103   000000 701000 xent               TSX1    PMN$COLLECT
         0 000104   000000 011000                    NOP     0
         0 000105   000162 710000 0                  TRA     s:1136

      209     1117    3              ELSE DO ;

      210     1118    3                 DQH$ = DCT.DQH$ ;

   1118  0 000106   000023 236100                    LDQ     19,,PR0
         0 000107   200005 756100                    STQ     DQH$,,AUTO

      211     1119                      %DEQUEUE ( P#=REQ$, Q#=DCT.SQ$ ) ;

   1123  0 000110   200004 236100                    LDQ     DCT$,,AUTO
         0 000111   000001 036003                    ADLQ    1,DU
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:45   
         0 000112   200011 756100                    STQ     SQH$+2,,AUTO
         0 000113   200006 631500                    EPPR1   REQ$,,AUTO
         0 000114   200010 451500                    STP1    SQH$+1,,AUTO
         0 000115   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000116   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000117   000000 701000 xent               TSX1    NIM$DEQUEUE
         0 000120   000000 011000                    NOP     0

      212     1126    3                 DQH.IO$ = REQ$ ;

   1126  0 000121   200006 236100                    LDQ     REQ$,,AUTO
         0 000122   200005 470500                    LDP0    DQH$,,AUTO
         0 000123   000014 756100                    STQ     12,,PR0

      213     1127    3                 IF DCT.SQ$ = ADDR(NIL) THEN

   1127  0 000124   200004 471500                    LDP1    DCT$,,AUTO
         0 000125   100001 236100                    LDQ     1,,PR1
         0 000126   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000127   000142 601000 0                  TNZ     s:1130

      214     1128    3                    CALL PMN$COLLECT ( DCT.PM, %PM_BUSY ) ;

   1128  0 000130   000002 236000 1                  LDQ     2
         0 000131   200011 756100                    STQ     SQH$+2,,AUTO
         0 000132   200004 236100                    LDQ     DCT$,,AUTO
         0 000133   000010 036003                    ADLQ    8,DU
         0 000134   200010 756100                    STQ     SQH$+1,,AUTO
         0 000135   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000136   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000137   000000 701000 xent               TSX1    PMN$COLLECT
         0 000140   000000 011000                    NOP     0
         0 000141   000153 710000 0                  TRA     s:1131

      215     1129    3                 ELSE
      216     1130    3                    CALL PMN$COLLECT ( DCT.PM, %PM_QUED ) ;

PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:46   
   1130  0 000142   000000 236000 1                  LDQ     0
         0 000143   200011 756100                    STQ     SQH$+2,,AUTO
         0 000144   200004 236100                    LDQ     DCT$,,AUTO
         0 000145   000010 036003                    ADLQ    8,DU
         0 000146   200010 756100                    STQ     SQH$+1,,AUTO
         0 000147   200010 630500                    EPPR0   SQH$+1,,AUTO
         0 000150   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000151   000000 701000 xent               TSX1    PMN$COLLECT
         0 000152   000000 011000                    NOP     0

      217     1131    3                 CALL NIS$DRIVER ( DQH ) ;

   1131  0 000153   200005 630500                    EPPR0   DQH$,,AUTO
         0 000154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000155   000000 701000 xent               TSX1    NIS$DRIVER
         0 000156   000000 011000                    NOP     0

      218     1132    3                 DCT.STATE = %BUSY ;

   1132  0 000157   200004 470500                    LDP0    DCT$,,AUTO
         0 000160   000005 236007                    LDQ     5,DL
         0 000161   000007 752101                    STCQ    7,'01'O,PR0

      219     1133    3                 END ;

      220     1134    2              END ;

      221     1135                %UNLOCK(G#=SQH.GATE);

   1136  0 000162   200007 630500                    EPPR0   SQH$,,AUTO
         0 000163   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000164   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000165   000000 011000                    NOP     0

      222     1138    1           RETURN;

   1138  0 000166   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:47   

(unnamed)
 Sect OctLoc
   1     000   000005 006000   000002 006000   000004 006000                    ............
      223     1139    1   END NIB$REQSCHED;
      224     1140        %EOD;

PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:48   
--  Include file information  --

   PM$NI.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NIB$REQSCHED.
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:49   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PAR                       4-0-0/w PTR         r     1 DCT$
     5-0-0/w PTR         r     1 DQH$                      *0-0-0/w UBIN        r     1 PAR
     6-0-0/w PTR         r     1 REQ$                       7-0-0/w PTR         r     1 SQH$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$RP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1332)  r     1 DCT                        0-0-0/w STRC(648)   r     1 DQH
     0-0-0/d STRC(1080)  r     1 N$REQ                      0-0-0/w STRC(252)   r     1 SQH


   Procedure NIB$REQSCHED requires 119 words for executable code.
   Procedure NIB$REQSCHED requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:51   
          MINI XREF LISTING

DCT.DP
       962**DCL       969--REDEF     972--REDEF     973--REDEF     975--REDEF     975--REDEF     976--REDEF
       977--REDEF     977--REDEF
DCT.DQH$
       958**DCL      1118>>ASSIGN
DCT.MPC.IOCHANX
       970**DCL       970--REDEF
DCT.PM
       953**DCL      1090<>CALL     1116<>CALL     1128<>CALL     1130<>CALL
DCT.SQ$
       942**DCL      1082>>IF       1084<<ASSIGN   1088<>CALL     1115>>IF       1123<>CALL     1127>>IF
DCT.SQH$
       957**DCL      1078>>ASSIGN   1109>>ASSIGN
DCT.STATE
       952**DCL      1114>>IF       1132<<ASSIGN
DCT$
       926**DCL       942--IMP-PTR  1077<<ASSIGN   1078>>ASSIGN   1082>>IF       1084>>ASSIGN   1088>>CALL
      1090>>CALL     1108<<ASSIGN   1109>>ASSIGN   1114>>IF       1115>>IF       1116>>CALL     1118>>ASSIGN
      1123>>CALL     1127>>IF       1128>>CALL     1130>>CALL     1132>>ASSIGN
DQH
       990**DCL      1131<>CALL
DQH.IO$
       997**DCL      1126<<ASSIGN
DQH.IOCHANX
       992**DCL       993--REDEF
DQH.MBX$
      1001**DCL      1002--REDEF
DQH$
       927**DCL       990--IMP-PTR  1118<<ASSIGN   1126>>ASSIGN   1131>>CALL
HFC$LOCK
        35**DCL-ENT  1080--CALL     1111--CALL
HFC$UNLOCK
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:52   
        35**DCL-ENT  1136--CALL
N$DCT$$
       447**DCL       581--IMP-PTR
N$FQ$
       447**DCL       582--IMP-PTR
N$REQ
      1013**DCL      1088<>CALL
N$REQ.BUFADDR
      1022**DCL      1023--REDEF    1023--REDEF
N$REQ.DCT$
      1014**DCL      1077>>ASSIGN
N$REQ.DLA.DRELADDR
      1014**DCL      1014--REDEF
N$REQ.DVE.EOMCHAR
      1051**DCL      1052--REDEF
N$REQ.EAINFO
      1045**DCL      1045--REDEF
N$REQ.EAINFOX
      1045**DCL      1046--REDEF
N$REQ.EVNTINFO
      1046**DCL      1046--REDEF
N$REQ.FL$
      1013**DCL      1083<<ASSIGN
N$REQ.STATUS
      1027**DCL      1033--REDEF
N$REQ_INIT.BUFADDR
       466**DCL       467--REDEF     467--REDEF
N$REQ_INIT.DLA.DRELADDR
       458**DCL       458--REDEF
N$REQ_INIT.DVE.EOMCHAR
       495**DCL       496--REDEF
N$REQ_INIT.EAINFO
       489**DCL       489--REDEF
N$REQ_INIT.EAINFOX
       489**DCL       490--REDEF
N$REQ_INIT.EVNTINFO
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:53   
       490**DCL       490--REDEF
N$REQ_INIT.STATUS
       471**DCL       477--REDEF
NI$FQ$
       507**DCL       583--IMP-PTR
NI$IBUF$
       507**DCL       583--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
       517**DCL       518--REDEF     518--REDEF
NI$IMXMBX_INIT.SIZE
       519**DCL       519--REDEF
NI$REQ_INIT.DCW
       541**DCL       544--REDEF
NI$REQ_INIT.DCW.TALLY
       542**DCL       542--REDEF
NI$REQ_INIT.IDCW.EXTA
       544**DCL       544--REDEF
NI$REQ_INIT.PCW
       546**DCL       550--REDEF
NI$REQ_INIT.SEEK
       551**DCL       552--REDEF     553--REDEF
NI$RP$
       555**DCL       585--IMP-PTR
NIM$DEQUEUE
       610**DCL-ENT  1123--CALL
NIM$ENQUEUE
       611**DCL-ENT  1088--CALL
NIS$DRIVER
       922**DCL-ENT  1131--CALL
NI_MBX_INIT.DCW.CONTROL.AE
       577**DCL       577--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       573**DCL       573--REDEF
PAR
       917**DCL         6--PROC     1076--ASSIGN   1107--ENTRY    1108--ASSIGN
PMN$COLLECT
PL6.E3A0      #002=NIB$REQSCHED File=NIB$MSOS.:E05TSI                            WED 07/30/97 03:28 Page:54   
       921**DCL-ENT  1090--CALL     1116--CALL     1128--CALL     1130--CALL
REQ$
       928**DCL      1013--IMP-PTR  1076<<ASSIGN   1077>>ASSIGN   1083>>ASSIGN   1083>>ASSIGN   1084>>ASSIGN
      1088>>CALL     1123<>CALL     1126>>ASSIGN
SCHED
      1114**LABEL    1092--GOTO
SQH.DOOR
      1071**DCL      1071--REDEF
SQH.GATE
      1071**DCL      1080<>CALL     1111<>CALL     1136<>CALL
SQH$
       929**DCL      1071--IMP-PTR  1078<<ASSIGN   1080>>CALL     1109<<ASSIGN   1111>>CALL     1136>>CALL

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:55   
      225        1        /*T***********************************************************/
      226        2        /*T*                                                         */
      227        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      228        4        /*T*                                                         */
      229        5        /*T***********************************************************/
      230        6        /*T*/
      231        7        NIB$SPEC: PROC (DQH,STATUS);
      232        8        /**/
      233        9        /*D*    NAME:    NIB$SPEC
      234       10
      235       11                CALL:    CALL NIB$SPEC (DQH,STATUS);
      236       12
      237       13               INPUT:   DQH - DQH for the channel that is being released or assigned by MSOS
      238       14                         STATUS - Special status for channel
      239       15
      240       16                DESCRIPTION:   NIB$SPEC handles updating all logical channels connected to
      241       17                               the given physical channel which has just been assigned or
      242       18                               released by MSOS.
      243       19
      244       20                               If the channel has been released, we mark all the channels
      245       21                               connected to this physical channel down.  If all paths to
      246       22                               this MPC are down, the MPC is marked down.  And, if all
      247       23                               paths to the devices on this subsytem are down,the devices
      248       24                               are marked down.
      249       25
      250       26                             If the channel has been assigned by MSOS, we mark the channels,
      251       27                               MPC, and devices as available, unless the user previously had
      252       28                               them partitioned, in which case they are left in that state.
      253       29                                                                                       */
      254       30        %EJECT;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:56   
      255       31        /*
      256       32                Includes
      257       33        */
      258       34        %INCLUDE                EL$TABLES;
      259      357        %INCLUDE                EL_SUBS_C;
      260      441        %INCLUDE                HF_LOCK_C;
      261      455        %INCLUDE                KI_DATA_R ;
      262      481        %INCLUDE                KI_MACROS_C ;
      263     1089        %INCLUDE                KI_SUBS_C ;
      264     1225        %INCLUDE                NI_DATA_C;
      265     1338        %INCLUDE                NI_DATA_R;
      266     1775        %INCLUDE                NI_MACROS_C;
      267     2042        %INCLUDE                N_FC_C;
      268     2079        %INCLUDE                TD$CP6V_C ;
      269     2115        /*
      270     2116                Parameters
      271     2117        */
      272     2118        %NI$DQH                 ( NAME=DQH,    STCLASS=PARAM ) ;
      273     2141        %STATUS                 ( NAME=STATUS, STCLASS=PARAM ) ;
      274     2208        /*
      275     2209                Entries
      276     2210        */
      277     2211    1   DCL 1 ELA$SYSLOG        ENTRY(6) ALTRET ;
      278     2212    1   DCL 1 FMN$AVR           ENTRY(2) ;
      279     2213    1   DCL 1 KIQ$PARTFEP       ENTRY(2) ;
      280     2214    1   DCL 1 KIQ$UPRTFEP       ENTRY(1) ;
      281     2215    1   DCL 1 NIO$DCWBLD        ENTRY(1) ALTRET ;
      282     2216    1   DCL 1 NIQ$GETNR         ENTRY(1) ALTRET ;
      283     2217    1   DCL 1 NIQ$REL           ENTRY(1) ALTRET ;
      284     2218    1   DCL 1 NIW$DEVSCHED      ENTRY(2) ;
      285     2219    1   DCL 1 NIW$DQHSTOP       ENTRY(1) ALTRET ;
      286     2220    1   DCL 1 NIX$CHANCONFIG    ENTRY(3) ;
      287     2221    1   DCL 1 NIX$DEVCONFIG     ENTRY(2) ;
      288     2222    1   DCL 1 NKP$PART          ENTRY(2) ALTRET ;
      289     2223    1   DCL 1 NKP$RTN           ENTRY(2) ALTRET ;
      290     2224    1   DCL 1 SC_NIBBADSQHCQ    ENTRY CONV(2,0) ;
      291     2225        /*
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:57   
      292     2226                Auto
      293     2227        */
      294     2228        %EL$CHANTRAN            ( NAME=EL$CHANTRAN, STCLASS=AUTO ) ;
      295     2232        %EL$CHNGAARD            ( NAME=EL$CHNGAARD, STCLASS=AUTO ) ;
      296     2236    1   DCL 1 FEI$              PTR ALIGNED AUTO ;
      297     2237    1   DCL 1 I                 UBIN(15) ALIGNED AUTO ;
      298     2238    1   DCL 1 IOCHANX           UBIN WORD ALIGNED AUTO ;
      299     2239    1   DCL 1 JUNK              UBIN WORD ALIGNED AUTO ;
      300     2240    1   DCL 1 MPC$              PTR ALIGNED AUTO ;
      301     2241    1   DCL 1 PART_DEV          BIT(1) ALIGNED AUTO ;
      302     2242    1   DCL 1 PART_MPC          BIT(1) ALIGNED AUTO ;
      303     2243        %VLR$SYSCON_V           ( FPTN=RESULTS, BASED=AUTO ) ;
      304     2248    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      305     2249    1   DCL 1 TDCT$             PTR ALIGNED AUTO ;
      306     2250    1   DCL 1 TDQH$             PTR ALIGNED AUTO ;
      307     2251        /*
      308     2252                Based
      309     2253        */
      310     2254        %NI$CHT                 ( NAME="CHT(0:%(N_MAXCHANS-1))", STCLASS="BASED(NI$CHT$)" )
              2254            ;
      311     2257        %NI$DCT                 ( NAME=DCT,          STCLASS=BASED ) ;
      312     2305        %NI$DVT                 ( NAME=DVT,          STCLASS=BASED ) ;
      313     2312        %KI$FEI                 ( FPTN=FEI,          STCLASS="BASED(FEI$)" ) ;
      314     2396        %N$REQ                  ( NAME=REQ,          STCLASS=BASED ) ;
      315     2454        %NI$SQH                 ( NAME=SQH,          STCLASS="BASED(SQH$)" ) ;
      316     2467        %NI$DQH                 ( NAME=TDQH,         STCLASS="BASED(TDQH$)" ) ;
      317     2490        /**/
      318     2491        /**/
      319     2492        %SUB NEVER = "WHILE ('0'B)";
      320     2493        %EJECT;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:58   
      321     2494    1           MPC$ = DQH.MPC$;
      322     2495    1           SQH$ = DQH.SQH$;
      323     2496    1           EL$CHANTRAN.IOP# = DQH.IOCHAN.IOM;
      324     2497    1           EL$CHANTRAN.STATUS = SPSTAT;
      325     2498    1           CALL ELA$SYSLOG(EL_CHANTRAN,EL$CHANTRAN,SIZEW(EL$CHANTRAN),'0'B,EL_ERR,JUNK)
              2498                    ;
      326     2499    1           PART_MPC = '1'B;
      327     2500    1           PART_DEV = '1'B;
      328     2501    1           IF SQH$ = ADDR(NIL) THEN
      329     2502    1              RETURN;  /* just in case;  MSOS currently doesn't report FEP chans */
      330     2503                %LOCK(G# = SQH$->SQH.GATE);
      331     2506    2           IF DQH.MPC$ = ADDR(NIL) THEN DO; /* console channel */
      332     2507    2              CALL UPDATE_CHAN(ADDR(DQH),SPSTAT.CODE.BYTE3);
      333     2508    2              IF SPSTAT.CODE.BYTE3 = %CHAN_STOPPED THEN
      334     2509    2                 GOTO PARTDEV;
      335     2510    2              ELSE IF SPSTAT.CODE.BYTE3 = %CHAN_AVAILABLE THEN
      336     2511    2                    GOTO RETDEV;
      337     2512    2              END;
      338     2513    2           ELSE DO;
      339     2514    3              DO I = 0 TO %N_CHANSPERMPC-1;
      340     2515    3                 IOCHANX = MPC$->DCT.MPC.IOCHANX(I);
      341     2516    4                 IF IOCHANX ~= 0 THEN DO;
      342     2517    4                    TDQH$ = NI$CHT$->CHT.DQH$(IOCHANX);
      343     2518    4                    IF DQH.LA = TDQH.LA THEN /* if same physical channel */
      344     2519    4                       CALL UPDATE_CHAN(TDQH$,SPSTAT.CODE.BYTE3);
      345     2520    4                    IF NOT TDQH.STATUS.DOWN THEN
      346     2521    4                       PART_MPC = '0'B;
      347     2522    4                    END;
      348     2523    3                 END;
      349     2524    3              IF PART_MPC AND SPSTAT.CODE.BYTE3 = %CHAN_STOPPED THEN DO;
              2524                       /* partition the MPC? */
      350     2525    3                 MPC$->DCT.STATUS.DOWN = '1'B;
      351     2526    3                 MPC$->DCT.STATUS.MSOS_PART = '1'B;
      352     2527    4                 DO I = 0 TO 1;
      353     2528    4                    TDCT$ = SQH$->SQH.MPC$(I);
      354     2529    4                    IF TDCT$ ~= ADDR(NIL) THEN
      355     2530    4                       IF NOT TDCT$->DCT.STATUS.DOWN THEN
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:59   
      356     2531    4                          PART_DEV = '0'B;
      357     2532    4                    END;
      358     2533    3                 IF PART_DEV THEN          /* partition the devices? */
      359     2534    4   PARTDEV:      DO I = SQH$->SQH.FDCT TO SQH$->SQH.FDCT+SQH$->SQH.NDCT-1;
      360     2535    4                    TDCT$ = N$DCT$(I);
      361     2536    5                    IF TDCT$->DCT.TYPE ~= %DV_MPC THEN DO;
      362     2537    5                       TDCT$->DCT.STATUS.MSOS_PART = '1'B;
      363     2538    6                       IF TDCT$->DCT.RAT$ ~= ADDR(NIL) OR TDCT$->DCT.DFLG.CONSOLE THEN
              2538                                DO;
      364     2539    6                          CALL NKP$PART (TDCT$->DCT,JUNK) ALTRET (DELAYED_PART);
      365     2540    6                          END;
      366     2541    5                       TDCT$->DCT.STATUS.DOWN = '1'B;
      367     2542    5                       CALL NIX$DEVCONFIG ( TDCT$->DCT, RESULTS ) ;
      368     2543    6                       IF RESULTS.BOOTINFO ~= '0'B THEN DO ;
      369     2544    6                          EL$CHNGAARD = RESULTS.BOOTINFO ;
      370     2545    6                          EL$CHNGAARD.ACCN = 'MSOS' ;
      371     2546    6                          EL$CHNGAARD.UNAME = ' ' ;
      372     2547    6                          EL$CHNGAARD.SYSID = 0 ;
      373     2548    6                          CALL ELA$SYSLOG ( EL_CHNGAARD,
      374     2549    6                            EL$CHNGAARD,
      375     2550    6                            SIZEC(EL$CHNGAARD),
      376     2551    6                            '0'B,
      377     2552    6                            EL_ERR,
      378     2553    6                            JUNK ) ;
      379     2554    6                          END ;
      380     2555    5   DELAYED_PART:       END;
      381     2556    4                    END;
      382     2557    3                 END;
      383     2558    2              ELSE IF MPC$->DCT.STATUS.MSOS_PART AND /* return the MPC? */
      384     2559    3                   SPSTAT.CODE.BYTE3=%CHAN_AVAILABLE THEN DO;
      385     2560    3                    MPC$->DCT.STATUS.MSOS_PART = '0'B;
      386     2561    3                    MPC$->DCT.STATUS.DOWN = MPC$->DCT.STATUS.SYSCON_PART;
      387     2562    4   RETDEV:          DO I = SQH$->SQH.FDCT TO SQH$->SQH.FDCT+SQH$->SQH.NDCT-1;
      388     2563    4                       TDCT$ = N$DCT$(I);
      389     2564    5                       IF TDCT$->DCT.STATUS.MSOS_PART AND TDCT$->DCT.TYPE ~= %DV_MPC
              2564                                THEN DO;
      390     2565    5                          TDCT$->DCT.STATUS.MSOS_PART = '0'B;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:60   
      391     2566    6                          IF NOT TDCT$->DCT.STATUS.SYSCON_PART THEN DO;
      392     2567    6                             IF TDCT$->DCT.RAT$ ~= ADDR(NIL) OR TDCT$->DCT.DFLG.CONSOLE
              2567                                      THEN
      393     2568    6                                CALL NKP$RTN (TDCT$->DCT,JUNK);
      394     2569    6                             IF TDCT$->DCT.TYPE = %DV_DP THEN
      395     2570                       /* SYSCON does a RQSTAT and calls AVR only if dev is READY */
      396     2571    6                                CALL FMN$AVR (I,1);
      397     2572    6                             TDCT$->DCT.STATUS.DOWN = '0'B;
      398     2573    6                             END;
      399     2574    5                          END;
      400     2575    4                       END;
      401     2576    3                    END;
      402     2577    2              END;
      403     2578                %UNLOCK(G# = SQH$->SQH.GATE);
      404     2581    1           RETURN;
      405     2582        %EJECT;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:61   
      406     2583        /*
      407     2584           Update the channel information in DQH based on action taken by MSOS when
      408     2585           RELEASing or ASSIGNing a physical channel.  The channel passed is either
      409     2586           ENQUEUEd or DEQUEUEd from the SQH.CQ (idle channels).  If the channel is
      410     2587           fully released (goes to STOPPED), the channel is partitioned.  Whenthe
      411     2588           channel goes to AVAILABLE, the channel is returned.
      412     2589           The SQH gate must be locked for this routine.
      413     2590        */
      414     2591    1   UPDATE_CHAN: PROC (DQH$,CHANCODE);
      415     2592        /**/
      416     2593    2   DCL DQH$ PTR;
      417     2594    2   DCL CHANCODE UBIN(9) CALIGNED;
      418     2595        /**/
      419     2596    3           DO CASE(CHANCODE);
      420     2597    3            CASE(%CHAN_SUSPEND); /* Normal to suspended - dequeue from idle chain */
      421     2598    3              DQH$->TDQH.CHANSTATE.SUSPEND = '1'B;
      422     2599    3              IF  DQH$->TDQH.STATE = %IDLE      AND
      423     2600    3                DQH$->TDQH.FL$ ~= ADDR(NIL)   AND
      424     2601    3                DQH$->TDQH.MPC$ ~= ADDR(NIL)
      425     2602    3              THEN
      426     2603    3                 CALL NIW$DQHSTOP ( DQH$->TDQH )
      427     2604    4                 WHENALTRETURN DO ;
      428     2605        /*S* SCREECH_CODE:  NIB-S$BADSQHCQ-7
      429     2606             TYPE:          SCREECH
      430     2607             MESSAGE:       The subsystem available channel queue is broken
      431     2608             REMARKS:       The problem discovered here is that we have a DQH which we
      432     2609                            believe is on the CQ (IDLE and FL$ not NIL).  However,
      433     2610                            we couldn't find it on the CQ.  One way for this to happen
      434     2611                            is ENQUEUEing the DQH on the CQ when it is already there.
      435     2612        */
      436     2613    4                    CALL SC_NIBBADSQHCQ ;
      437     2614    4                    END ;
      438     2615    3            CASE(%CHAN_STOPPED); /* Suspended to stopped - partition channel */
      439     2616    3              DQH$->TDQH.CHANSTATE.MSTOP = '1'B;
      440     2617    3              DQH$->TDQH.STATUS.DOWN = '1'B;
      441     2618    3              DQH$->TDQH.STATUS.MSOS_PART = '1'B;
      442     2619    3              CALL NIX$CHANCONFIG ( DQH$->TDQH, RESULTS, '1'B ) ;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:62   
      443     2620    4              IF RESULTS.BOOTINFO ~= '0'B THEN DO ;
      444     2621    4                 EL$CHNGAARD = RESULTS.BOOTINFO ;
      445     2622    4                 EL$CHNGAARD.ACCN = 'MSOS' ;
      446     2623    4                 EL$CHNGAARD.UNAME = ' ' ;
      447     2624    4                 EL$CHNGAARD.SYSID = 0 ;
      448     2625    4                 CALL ELA$SYSLOG ( EL_CHNGAARD,
      449     2626    4                   EL$CHNGAARD,
      450     2627    4                   SIZEC(EL$CHNGAARD),
      451     2628    4                   '0'B,
      452     2629    4                   EL_ERR,
      453     2630    4                   JUNK ) ;
      454     2631    4                 END ;
      455     2632    3            CASE(%CHAN_RELEASED); /* Suspended to normal - enqueue on idle chain */
      456     2633    3              DQH$->TDQH.CHANSTATE.SUSPEND = '0'B;
      457     2634    3              IF DQH$->TDQH.STATE = %IDLE AND DQH$->TDQH.FL$ = ADDR(NIL) AND
      458     2635    3                NOT DQH$->TDQH.STATUS.DOWN AND DQH$->TDQH.MPC$ ~= ADDR(NIL) THEN
      459     2636                      %ENQUEUE (P# = DQH$->TDQH, Q# = SQH.CQ$);
      460     2639    3            CASE(%CHAN_AVAILABLE);
              2639                     /* Stopped to normal - enqueue on idle chain and return chan */
      461     2640    3              DQH$->TDQH.STATUS.MSOS_PART = '0'B;
      462     2641    3              DQH$->TDQH.STATUS.DOWN = DQH$->TDQH.STATUS.SYSCON_PART;
      463     2642    3              DQH$->TDQH.CHANSTATE.SUSPEND = '0'B;
      464     2643    3              DQH$->TDQH.CHANSTATE.MSTOP = '0'B;
      465     2644    3              IF DQH$->TDQH.STATE = %IDLE AND DQH$->TDQH.FL$ = ADDR(NIL) AND
      466     2645    3                NOT DQH$->TDQH.STATUS.DOWN AND DQH$->TDQH.MPC$ ~= ADDR(NIL) THEN
      467     2646                      %ENQUEUE (P# = DQH$->TDQH, Q# = SQH.CQ$);
      468     2649    3            CASE(ELSE);
      469     2650    3            END;                           /* CASE */
      470     2651    2           RETURN;
      471     2652    2   END UPDATE_CHAN;
      472     2653    1   END NIB$SPEC;

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:63   
--  Include file information  --

   TD$CP6V_C.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   KI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure NIB$SPEC.

   Procedure NIB$SPEC requires 483 words for executable code.
   Procedure NIB$SPEC requires 40 words of local(AUTO) storage.

    No errors detected in file NIB$MSOS.:E05TSI    .

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:64   

 Object Unit name= NIB$SPEC                                   File name= NIB$MSOS.:E05TOU
 UTS= JUL 30 '97 03:28:52.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  NIB$SPEC
    1   Proc  even  none   483    743  NIB$SPEC
    2  RoData even  none    15     17  NIB$SPEC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  NIB$SPEC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 ELA$SYSLOG
 yes     yes           Std       2 NKP$PART
 yes     yes           Std       2 NKP$RTN
         yes           Std       1 HFC$UNLOCK
         yes           Std       2 NIX$DEVCONFIG
         yes           Std       2 FMN$AVR
         yes           Std       1 HFC$LOCK
 yes     yes           Std       1 NIW$DQHSTOP
         yes           Std       3 NIX$CHANCONFIG
         yes           Std       2 NIM$ENQUEUE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:65   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_NIBBADSQHCQ                        KI_FEI$$                              N$DCT$$
     N$FQ$                                 NI$CHT$                               NI$FQ$
     NI$IBUF$                              NI$RP$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:66   


      225        1        /*T***********************************************************/
      226        2        /*T*                                                         */
      227        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      228        4        /*T*                                                         */
      229        5        /*T***********************************************************/
      230        6        /*T*/
      231        7        NIB$SPEC: PROC (DQH,STATUS);

      7  1 000000   000000 700200 xent  NIB$SPEC     TSX0  ! X66_AUTO_2
         1 000001   000050 000002                    ZERO    40,2

      232        8        /**/
      233        9        /*D*    NAME:    NIB$SPEC
      234       10
      235       11                CALL:    CALL NIB$SPEC (DQH,STATUS);
      236       12
      237       13               INPUT:  DQH - DQH for the channel that is being released or assigned by MSOS
      238       14                         STATUS - Special status for channel
      239       15
      240       16                DESCRIPTION:   NIB$SPEC handles updating all logical channels connected to
      241       17                               the given physical channel which has just been assigned or
      242       18                               released by MSOS.
      243       19
      244       20                               If the channel has been released, we mark all the channels
      245       21                               connected to this physical channel down.  If all paths to
      246       22                               this MPC are down, the MPC is marked down.  And, if all
      247       23                               paths to the devices on this subsytem are down,the devices
      248       24                               are marked down.
      249       25
      250       26                            If the channel has been assigned by MSOS, we mark the channels,
      251       27                              MPC, and devices as available, unless the user previously had
      252       28                               them partitioned, in which case they are left in that state.
      253       29                                                                                       */
      254       30        %EJECT;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:67   
      255       31        /*
      256       32                Includes
      257       33        */
      258       34        %INCLUDE                EL$TABLES;
      259      357        %INCLUDE                EL_SUBS_C;
      260      441        %INCLUDE                HF_LOCK_C;
      261      455        %INCLUDE                KI_DATA_R ;
      262      481        %INCLUDE                KI_MACROS_C ;
      263     1089        %INCLUDE                KI_SUBS_C ;
      264     1225        %INCLUDE                NI_DATA_C;
      265     1338        %INCLUDE                NI_DATA_R;
      266     1775        %INCLUDE                NI_MACROS_C;
      267     2042        %INCLUDE                N_FC_C;
      268     2079        %INCLUDE                TD$CP6V_C ;
      269     2115        /*
      270     2116                Parameters
      271     2117        */
      272     2118        %NI$DQH                 ( NAME=DQH,    STCLASS=PARAM ) ;
      273     2141        %STATUS                 ( NAME=STATUS, STCLASS=PARAM ) ;
      274     2208        /*
      275     2209                Entries
      276     2210        */
      277     2211    1   DCL 1 ELA$SYSLOG        ENTRY(6) ALTRET ;
      278     2212    1   DCL 1 FMN$AVR           ENTRY(2) ;
      279     2213    1   DCL 1 KIQ$PARTFEP       ENTRY(2) ;
      280     2214    1   DCL 1 KIQ$UPRTFEP       ENTRY(1) ;
      281     2215    1   DCL 1 NIO$DCWBLD        ENTRY(1) ALTRET ;
      282     2216    1   DCL 1 NIQ$GETNR         ENTRY(1) ALTRET ;
      283     2217    1   DCL 1 NIQ$REL           ENTRY(1) ALTRET ;
      284     2218    1   DCL 1 NIW$DEVSCHED      ENTRY(2) ;
      285     2219    1   DCL 1 NIW$DQHSTOP       ENTRY(1) ALTRET ;
      286     2220    1   DCL 1 NIX$CHANCONFIG    ENTRY(3) ;
      287     2221    1   DCL 1 NIX$DEVCONFIG     ENTRY(2) ;
      288     2222    1   DCL 1 NKP$PART          ENTRY(2) ALTRET ;
      289     2223    1   DCL 1 NKP$RTN           ENTRY(2) ALTRET ;
      290     2224    1   DCL 1 SC_NIBBADSQHCQ    ENTRY CONV(2,0) ;
      291     2225        /*
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:68   
      292     2226                Auto
      293     2227        */
      294     2228        %EL$CHANTRAN            ( NAME=EL$CHANTRAN, STCLASS=AUTO ) ;
      295     2232        %EL$CHNGAARD            ( NAME=EL$CHNGAARD, STCLASS=AUTO ) ;
      296     2236    1   DCL 1 FEI$              PTR ALIGNED AUTO ;
      297     2237    1   DCL 1 I                 UBIN(15) ALIGNED AUTO ;
      298     2238    1   DCL 1 IOCHANX           UBIN WORD ALIGNED AUTO ;
      299     2239    1   DCL 1 JUNK              UBIN WORD ALIGNED AUTO ;
      300     2240    1   DCL 1 MPC$              PTR ALIGNED AUTO ;
      301     2241    1   DCL 1 PART_DEV          BIT(1) ALIGNED AUTO ;
      302     2242    1   DCL 1 PART_MPC          BIT(1) ALIGNED AUTO ;
      303     2243        %VLR$SYSCON_V           ( FPTN=RESULTS, BASED=AUTO ) ;
      304     2248    1   DCL 1 SQH$              PTR ALIGNED AUTO ;
      305     2249    1   DCL 1 TDCT$             PTR ALIGNED AUTO ;
      306     2250    1   DCL 1 TDQH$             PTR ALIGNED AUTO ;
      307     2251        /*
      308     2252                Based
      309     2253        */
      310     2254        %NI$CHT                 ( NAME="CHT(0:%(N_MAXCHANS-1))", STCLASS="BASED(NI$CHT$)" )
              2254            ;
      311     2257        %NI$DCT                 ( NAME=DCT,          STCLASS=BASED ) ;
      312     2305        %NI$DVT                 ( NAME=DVT,          STCLASS=BASED ) ;
      313     2312        %KI$FEI                 ( FPTN=FEI,          STCLASS="BASED(FEI$)" ) ;
      314     2396        %N$REQ                  ( NAME=REQ,          STCLASS=BASED ) ;
      315     2454        %NI$SQH                 ( NAME=SQH,          STCLASS="BASED(SQH$)" ) ;
      316     2467        %NI$DQH                 ( NAME=TDQH,         STCLASS="BASED(TDQH$)" ) ;
      317     2490        /**/
      318     2491        /**/
      319     2492        %SUB NEVER = "WHILE ('0'B)";
      320     2493        %EJECT;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:69   
      321     2494    1           MPC$ = DQH.MPC$;

   2494  1 000002   200003 470500                    LDP0    @DQH,,AUTO
         1 000003   000015 236100                    LDQ     13,,PR0
         1 000004   200022 756100                    STQ     MPC$,,AUTO

      322     2495    1           SQH$ = DQH.SQH$;

   2495  1 000005   000013 236100                    LDQ     11,,PR0
         1 000006   200030 756100                    STQ     SQH$,,AUTO

      323     2496    1           EL$CHANTRAN.IOP# = DQH.IOCHAN.IOM;

   2496  1 000007   000001 236100                    LDQ     1,,PR0
         1 000010   000600 376003                    ANQ     384,DU
         1 000011   000002 736000                    QLS     2
         1 000012   200005 552140                    STBQ    EL$CHANTRAN,'40'O,AUTO

      324     2497    1           EL$CHANTRAN.STATUS = SPSTAT;

   2497  1 000013   200004 471500                    LDP1    @STATUS,,AUTO
         1 000014   100000 236100                    LDQ     0,,PR1
         1 000015   200006 756100                    STQ     EL$CHANTRAN+1,,AUTO

      325     2498    1          CALL ELA$SYSLOG(EL_CHANTRAN,EL$CHANTRAN,SIZEW(EL$CHANTRAN),'0'B,EL_ERR,JUNK)
              2498                    ;

   2498  1 000016   200021 633500                    EPPR3   JUNK,,AUTO
         1 000017   200045 453500                    STP3    @CHANCODE+7,,AUTO
         1 000020   000001 236000 2                  LDQ     1
         1 000021   200044 756100                    STQ     @CHANCODE+6,,AUTO
         1 000022   000002 237000 2                  LDAQ    2
         1 000023   200042 757100                    STAQ    @CHANCODE+4,,AUTO
         1 000024   200005 634500                    EPPR4   EL$CHANTRAN,,AUTO
         1 000025   200041 454500                    STP4    @CHANCODE+3,,AUTO
         1 000026   000004 236000 2                  LDQ     4
         1 000027   200040 756100                    STQ     @CHANCODE+2,,AUTO
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:70   
         1 000030   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000031   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000032   000000 701000 xent               TSX1    ELA$SYSLOG
         1 000033   000000 011000                    NOP     0

      326     2499    1           PART_MPC = '1'B;

   2499  1 000034   400000 236003                    LDQ     -131072,DU
         1 000035   200024 756100                    STQ     PART_MPC,,AUTO

      327     2500    1           PART_DEV = '1'B;

   2500  1 000036   200023 756100                    STQ     PART_DEV,,AUTO

      328     2501    1           IF SQH$ = ADDR(NIL) THEN

   2501  1 000037   200030 236100                    LDQ     SQH$,,AUTO
         1 000040   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000041   000043 601000 1                  TNZ     s:2504

      329     2502    1              RETURN;  /* just in case;  MSOS currently doesn't report FEP chans */

   2502  1 000042   000000 702200 xent               TSX2  ! X66_ARET

      330     2503                %LOCK(G# = SQH$->SQH.GATE);

   2504  1 000043   200030 630500                    EPPR0   SQH$,,AUTO
         1 000044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000045   000000 701000 xent               TSX1    HFC$LOCK
         1 000046   000000 011000                    NOP     0

      331     2506    2           IF DQH.MPC$ = ADDR(NIL) THEN DO; /* console channel */

   2506  1 000047   200003 470500                    LDP0    @DQH,,AUTO
         1 000050   000015 236100                    LDQ     13,,PR0
         1 000051   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000052   000074 601000 1                  TNZ     s:2514
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:71   

      332     2507    2              CALL UPDATE_CHAN(ADDR(DQH),SPSTAT.CODE.BYTE3);

   2507  1 000053   200003 236100                    LDQ     @DQH,,AUTO
         1 000054   200046 756100                    STQ     @CHANCODE+8,,AUTO
         1 000055   200004 236100                    LDQ     @STATUS,,AUTO
         1 000056   400000 036007                    ADLQ    -131072,DL
         1 000057   200036 756100                    STQ     @DQH$+1,,AUTO
         1 000060   200046 631500                    EPPR1   @CHANCODE+8,,AUTO
         1 000061   200035 451500                    STP1    TDQH$+3,,AUTO
         1 000062   000476 701000 1                  TSX1    UPDATE_CHAN
         1 000063   000000 011000                    NOP     0

      333     2508    2              IF SPSTAT.CODE.BYTE3 = %CHAN_STOPPED THEN

   2508  1 000064   200004 470500                    LDP0    @STATUS,,AUTO
         1 000065   000000 236100                    LDQ     0,,PR0
         1 000066   777000 376007                    ANQ     -512,DL
         1 000067   010000 116007                    CMPQ    4096,DL
         1 000070   000210 600000 1                  TZE     PARTDEV

      334     2509    2                 GOTO PARTDEV;
      335     2510    2              ELSE IF SPSTAT.CODE.BYTE3 = %CHAN_AVAILABLE THEN

   2510  1 000071   020000 116007                    CMPQ    8192,DL
         1 000072   000362 600000 1                  TZE     RETDEV

      336     2511    2                    GOTO RETDEV;
      337     2512    2              END;

   2512  1 000073   000471 710000 1                  TRA     s:2579

      338     2513    2           ELSE DO;

      339     2514    3              DO I = 0 TO %N_CHANSPERMPC-1;

   2514  1 000074   200017 450100                    STZ     I,,AUTO
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:72   
         1 000075   000141 710000 1                  TRA     s:2523+5

      340     2515    3                 IOCHANX = MPC$->DCT.MPC.IOCHANX(I);

   2515  1 000076   200017 236100                    LDQ     I,,AUTO
         1 000077   000025 772000                    QRL     21
         1 000100   200022 470500                    LDP0    MPC$,,AUTO
         1 000101   000100 101506                    MRL     fill='000'O
         1 000102   000031 000001                    ADSC9   25,Q,PR0                 cn=0,n=1
         1 000103   200020 000004                    ADSC9   IOCHANX,,AUTO            cn=0,n=4

      341     2516    4                 IF IOCHANX ~= 0 THEN DO;

   2516  1 000104   200020 235100                    LDA     IOCHANX,,AUTO
         1 000105   000134 600000 1                  TZE     s:2523

      342     2517    4                    TDQH$ = NI$CHT$->CHT.DQH$(IOCHANX);

   2517  1 000106   000001 735000                    ALS     1
         1 000107   000000 471400 xsym               LDP1    NI$CHT$
         1 000110   100000 236105                    LDQ     0,AL,PR1
         1 000111   200032 756100                    STQ     TDQH$,,AUTO

      343     2518    4                    IF DQH.LA = TDQH.LA THEN /* if same physical channel */

   2518  1 000112   200032 473500                    LDP3    TDQH$,,AUTO
         1 000113   200003 474500                    LDP4    @DQH,,AUTO
         1 000114   400020 236100                    LDQ     16,,PR4
         1 000115   300020 676100                    ERQ     16,,PR3
         1 000116   003000 376003                    ANQ     1536,DU
         1 000117   000127 601000 1                  TNZ     s:2520

      344     2519    4                       CALL UPDATE_CHAN(TDQH$,SPSTAT.CODE.BYTE3);

   2519  1 000120   200004 236100                    LDQ     @STATUS,,AUTO
         1 000121   400000 036007                    ADLQ    -131072,DL
         1 000122   200036 756100                    STQ     @DQH$+1,,AUTO
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:73   
         1 000123   200032 635500                    EPPR5   TDQH$,,AUTO
         1 000124   200035 455500                    STP5    TDQH$+3,,AUTO
         1 000125   000476 701000 1                  TSX1    UPDATE_CHAN
         1 000126   000000 011000                    NOP     0

      345     2520    4                    IF NOT TDQH.STATUS.DOWN THEN

   2520  1 000127   200032 470500                    LDP0    TDQH$,,AUTO
         1 000130   000001 236100                    LDQ     1,,PR0
         1 000131   200000 316003                    CANQ    65536,DU
         1 000132   000134 601000 1                  TNZ     s:2523

      346     2521    4                       PART_MPC = '0'B;

   2521  1 000133   200024 450100                    STZ     PART_MPC,,AUTO

      347     2522    4                    END;

      348     2523    3                 END;

   2523  1 000134   200017 236100                    LDQ     I,,AUTO
         1 000135   000025 772000                    QRL     21
         1 000136   000001 036007                    ADLQ    1,DL
         1 000137   000025 736000                    QLS     21
         1 000140   200017 756100                    STQ     I,,AUTO
         1 000141   200017 236100                    LDQ     I,,AUTO
         1 000142   777770 376003                    ANQ     -8,DU
         1 000143   000200 116003                    CMPQ    128,DU
         1 000144   000076 602000 1                  TNC     s:2515

      349     2524    3              IF PART_MPC AND SPSTAT.CODE.BYTE3 = %CHAN_STOPPED THEN DO;
              2524                       /* partition the MPC? */

   2524  1 000145   200024 234100                    SZN     PART_MPC,,AUTO
         1 000146   000342 605000 1                  TPL     s:2558
         1 000147   200004 470500                    LDP0    @STATUS,,AUTO
         1 000150   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:74   
         1 000151   777000 376007                    ANQ     -512,DL
         1 000152   010000 116007                    CMPQ    4096,DL
         1 000153   000342 601000 1                  TNZ     s:2558

      350     2525    3                 MPC$->DCT.STATUS.DOWN = '1'B;

   2525  1 000154   200022 471500                    LDP1    MPC$,,AUTO
         1 000155   400000 236003                    LDQ     -131072,DU
         1 000156   100027 256100                    ORSQ    23,,PR1

      351     2526    3                 MPC$->DCT.STATUS.MSOS_PART = '1'B;

   2526  1 000157   002000 236003                    LDQ     1024,DU
         1 000160   100027 256100                    ORSQ    23,,PR1

      352     2527    4                 DO I = 0 TO 1;

   2527  1 000161   200017 450100                    STZ     I,,AUTO

      353     2528    4                    TDCT$ = SQH$->SQH.MPC$(I);

   2528  1 000162   200017 236100                    LDQ     I,,AUTO
         1 000163   000025 772000                    QRL     21
         1 000164   200030 470500                    LDP0    SQH$,,AUTO
         1 000165   000005 236106                    LDQ     5,QL,PR0
         1 000166   200031 756100                    STQ     TDCT$,,AUTO

      354     2529    4                    IF TDCT$ ~= ADDR(NIL) THEN

   2529  1 000167   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000170   000175 600000 1                  TZE     s:2532

      355     2530    4                       IF NOT TDCT$->DCT.STATUS.DOWN THEN

   2530  1 000171   200031 471500                    LDP1    TDCT$,,AUTO
         1 000172   100027 234100                    SZN     23,,PR1
         1 000173   000175 604000 1                  TMI     s:2532
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:75   

      356     2531    4                          PART_DEV = '0'B;

   2531  1 000174   200023 450100                    STZ     PART_DEV,,AUTO

      357     2532    4                    END;

   2532  1 000175   200017 236100                    LDQ     I,,AUTO
         1 000176   000025 772000                    QRL     21
         1 000177   000001 036007                    ADLQ    1,DL
         1 000200   000025 736000                    QLS     21
         1 000201   200017 756100                    STQ     I,,AUTO
         1 000202   200017 236100                    LDQ     I,,AUTO
         1 000203   777770 376003                    ANQ     -8,DU
         1 000204   000020 116003                    CMPQ    16,DU
         1 000205   000162 602000 1                  TNC     s:2528

      358     2533    3                 IF PART_DEV THEN          /* partition the devices? */

   2533  1 000206   200023 234100                    SZN     PART_DEV,,AUTO
         1 000207   000471 605000 1                  TPL     s:2579

      359     2534    4   PARTDEV:      DO I = SQH$->SQH.FDCT TO SQH$->SQH.FDCT+SQH$->SQH.NDCT-1;

   2534  1 000210   200030 470500       PARTDEV      LDP0    SQH$,,AUTO
         1 000211   000002 236100                    LDQ     2,,PR0
         1 000212   000022 772000                    QRL     18
         1 000213   000025 736000                    QLS     21
         1 000214   200017 756100                    STQ     I,,AUTO
         1 000215   000325 710000 1                  TRA     DELAYED_PART+5

      360     2535    4                    TDCT$ = N$DCT$(I);

   2535  1 000216   200017 236100                    LDQ     I,,AUTO
         1 000217   000025 772000                    QRL     21
         1 000220   000000 470400 xsym               LDP0    N$DCT$$
         1 000221   000000 236106                    LDQ     0,QL,PR0
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:76   
         1 000222   200031 756100                    STQ     TDCT$,,AUTO

      361     2536    5                    IF TDCT$->DCT.TYPE ~= %DV_MPC THEN DO;

   2536  1 000223   200031 471500                    LDP1    TDCT$,,AUTO
         1 000224   100007 236100                    LDQ     7,,PR1
         1 000225   007700 376007                    ANQ     4032,DL
         1 000226   000700 116007                    CMPQ    448,DL
         1 000227   000320 600000 1                  TZE     DELAYED_PART

      362     2537    5                       TDCT$->DCT.STATUS.MSOS_PART = '1'B;

   2537  1 000230   002000 236003                    LDQ     1024,DU
         1 000231   100027 256100                    ORSQ    23,,PR1

      363     2538    6                       IF TDCT$->DCT.RAT$ ~= ADDR(NIL) OR TDCT$->DCT.DFLG.CONSOLE THEN
              2538                                DO;

   2538  1 000232   100005 236100                    LDQ     5,,PR1
         1 000233   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000234   000240 601000 1                  TNZ     s:2539
         1 000235   100006 236100                    LDQ     6,,PR1
         1 000236   040000 316007                    CANQ    16384,DL
         1 000237   000250 600000 1                  TZE     s:2541

      364     2539    6                          CALL NKP$PART (TDCT$->DCT,JUNK) ALTRET (DELAYED_PART);

   2539  1 000240   200021 633500                    EPPR3   JUNK,,AUTO
         1 000241   200041 453500                    STP3    @CHANCODE+3,,AUTO
         1 000242   200031 236100                    LDQ     TDCT$,,AUTO
         1 000243   200040 756100                    STQ     @CHANCODE+2,,AUTO
         1 000244   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000245   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000246   000000 701000 xent               TSX1    NKP$PART
         1 000247   000320 702000 1                  TSX2    DELAYED_PART

      365     2540    6                          END;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:77   

      366     2541    5                       TDCT$->DCT.STATUS.DOWN = '1'B;

   2541  1 000250   200031 470500                    LDP0    TDCT$,,AUTO
         1 000251   400000 236003                    LDQ     -131072,DU
         1 000252   000027 256100                    ORSQ    23,,PR0

      367     2542    5                       CALL NIX$DEVCONFIG ( TDCT$->DCT, RESULTS ) ;

   2542  1 000253   200026 631500                    EPPR1   RESULTS,,AUTO
         1 000254   200041 451500                    STP1    @CHANCODE+3,,AUTO
         1 000255   200031 236100                    LDQ     TDCT$,,AUTO
         1 000256   200040 756100                    STQ     @CHANCODE+2,,AUTO
         1 000257   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000260   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000261   000000 701000 xent               TSX1    NIX$DEVCONFIG
         1 000262   000000 011000                    NOP     0

      368     2543    6                       IF RESULTS.BOOTINFO ~= '0'B THEN DO ;

   2543  1 000263   000000 106500                    CMPC    fill='000'O
         1 000264   200026 600005                    ADSC9   RESULTS,,AUTO            cn=3,n=5
         1 000265   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         1 000266   000320 600000 1                  TZE     DELAYED_PART

      369     2544    6                          EL$CHNGAARD = RESULTS.BOOTINFO ;

   2544  1 000267   000100 100500                    MLR     fill='000'O
         1 000270   200026 600005                    ADSC9   RESULTS,,AUTO            cn=3,n=5
         1 000271   200007 000033                    ADSC9   EL$CHNGAARD,,AUTO        cn=0,n=27

      370     2545    6                          EL$CHNGAARD.ACCN = 'MSOS' ;

   2545  1 000272   040100 100400                    MLR     fill='040'O
         1 000273   000000 000004 0                  ADSC9   0                        cn=0,n=4
         1 000274   200010 200010                    ADSC9   EL$CHNGAARD+1,,AUTO      cn=1,n=8

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:78   
      371     2546    6                          EL$CHNGAARD.UNAME = ' ' ;

   2546  1 000275   040100 100400                    MLR     fill='040'O
         1 000276   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000277   200012 200014                    ADSC9   EL$CHNGAARD+3,,AUTO      cn=1,n=12

      372     2547    6                          EL$CHNGAARD.SYSID = 0 ;

   2547  1 000300   000000 236003                    LDQ     0,DU
         1 000301   200015 552130                    STBQ    EL$CHNGAARD+6,'30'O,AUTO

      373     2548    6                          CALL ELA$SYSLOG ( EL_CHNGAARD,

   2548  1 000302   200021 630500                    EPPR0   JUNK,,AUTO
         1 000303   200045 450500                    STP0    @CHANCODE+7,,AUTO
         1 000304   000001 236000 2                  LDQ     1
         1 000305   200044 756100                    STQ     @CHANCODE+6,,AUTO
         1 000306   000010 237000 2                  LDAQ    8
         1 000307   200042 757100                    STAQ    @CHANCODE+4,,AUTO
         1 000310   200007 631500                    EPPR1   EL$CHNGAARD,,AUTO
         1 000311   200041 451500                    STP1    @CHANCODE+3,,AUTO
         1 000312   000007 236000 2                  LDQ     7
         1 000313   200040 756100                    STQ     @CHANCODE+2,,AUTO
         1 000314   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000315   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000316   000000 701000 xent               TSX1    ELA$SYSLOG
         1 000317   000000 011000                    NOP     0

      374     2549    6                            EL$CHNGAARD,
      375     2550    6                            SIZEC(EL$CHNGAARD),
      376     2551    6                            '0'B,
      377     2552    6                            EL_ERR,
      378     2553    6                            JUNK ) ;
      379     2554    6                          END ;

      380     2555    5   DELAYED_PART:       END;

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:79   
   2555  1 000320                       DELAYED_PART null
      381     2556    4                    END;

   2556  1 000320   200017 236100                    LDQ     I,,AUTO
         1 000321   000025 772000                    QRL     21
         1 000322   000001 036007                    ADLQ    1,DL
         1 000323   000025 736000                    QLS     21
         1 000324   200017 756100                    STQ     I,,AUTO
         1 000325   200030 470500                    LDP0    SQH$,,AUTO
         1 000326   000002 236100                    LDQ     2,,PR0
         1 000327   777777 376007                    ANQ     -1,DL
         1 000330   200040 756100                    STQ     @CHANCODE+2,,AUTO
         1 000331   000002 236100                    LDQ     2,,PR0
         1 000332   000022 772000                    QRL     18
         1 000333   200040 036100                    ADLQ    @CHANCODE+2,,AUTO
         1 000334   200041 756100                    STQ     @CHANCODE+3,,AUTO
         1 000335   200017 236100                    LDQ     I,,AUTO
         1 000336   000025 772000                    QRL     21
         1 000337   200041 116100                    CMPQ    @CHANCODE+3,,AUTO
         1 000340   000216 602000 1                  TNC     s:2535

      382     2557    3                 END;

   2557  1 000341   000471 710000 1                  TRA     s:2579

      383     2558    2              ELSE IF MPC$->DCT.STATUS.MSOS_PART AND /* return the MPC? */

   2558  1 000342   200022 470500                    LDP0    MPC$,,AUTO
         1 000343   000027 236100                    LDQ     23,,PR0
         1 000344   002000 316003                    CANQ    1024,DU
         1 000345   000471 600000 1                  TZE     s:2579
         1 000346   200004 471500                    LDP1    @STATUS,,AUTO
         1 000347   100000 236100                    LDQ     0,,PR1
         1 000350   777000 376007                    ANQ     -512,DL
         1 000351   020000 116007                    CMPQ    8192,DL
         1 000352   000471 601000 1                  TNZ     s:2579

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:80   
      384     2559    3                   SPSTAT.CODE.BYTE3=%CHAN_AVAILABLE THEN DO;

      385     2560    3                    MPC$->DCT.STATUS.MSOS_PART = '0'B;

   2560  1 000353   000012 236000 2                  LDQ     10
         1 000354   000027 356100                    ANSQ    23,,PR0

      386     2561    3                    MPC$->DCT.STATUS.DOWN = MPC$->DCT.STATUS.SYSCON_PART;

   2561  1 000355   000027 236100                    LDQ     23,,PR0
         1 000356   000006 736000                    QLS     6
         1 000357   000027 676100                    ERQ     23,,PR0
         1 000360   400000 376003                    ANQ     -131072,DU
         1 000361   000027 656100                    ERSQ    23,,PR0

      387     2562    4   RETDEV:          DO I = SQH$->SQH.FDCT TO SQH$->SQH.FDCT+SQH$->SQH.NDCT-1;

   2562  1 000362   200030 470500       RETDEV       LDP0    SQH$,,AUTO
         1 000363   000002 236100                    LDQ     2,,PR0
         1 000364   000022 772000                    QRL     18
         1 000365   000025 736000                    QLS     21
         1 000366   200017 756100                    STQ     I,,AUTO
         1 000367   000455 710000 1                  TRA     s:2575+5

      388     2563    4                       TDCT$ = N$DCT$(I);

   2563  1 000370   200017 236100                    LDQ     I,,AUTO
         1 000371   000025 772000                    QRL     21
         1 000372   000000 470400 xsym               LDP0    N$DCT$$
         1 000373   000000 236106                    LDQ     0,QL,PR0
         1 000374   200031 756100                    STQ     TDCT$,,AUTO

      389     2564    5                       IF TDCT$->DCT.STATUS.MSOS_PART AND TDCT$->DCT.TYPE ~= %DV_MPC
              2564                                THEN DO;

   2564  1 000375   200031 471500                    LDP1    TDCT$,,AUTO
         1 000376   100027 236100                    LDQ     23,,PR1
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:81   
         1 000377   002000 316003                    CANQ    1024,DU
         1 000400   000450 600000 1                  TZE     s:2575
         1 000401   100007 236100                    LDQ     7,,PR1
         1 000402   007700 376007                    ANQ     4032,DL
         1 000403   000700 116007                    CMPQ    448,DL
         1 000404   000450 600000 1                  TZE     s:2575

      390     2565    5                          TDCT$->DCT.STATUS.MSOS_PART = '0'B;

   2565  1 000405   000012 236000 2                  LDQ     10
         1 000406   100027 356100                    ANSQ    23,,PR1

      391     2566    6                          IF NOT TDCT$->DCT.STATUS.SYSCON_PART THEN DO;

   2566  1 000407   100027 236100                    LDQ     23,,PR1
         1 000410   004000 316003                    CANQ    2048,DU
         1 000411   000450 601000 1                  TNZ     s:2575

      392     2567    6                            IF TDCT$->DCT.RAT$ ~= ADDR(NIL) OR TDCT$->DCT.DFLG.CONSOLE
              2567                                      THEN

   2567  1 000412   100005 236100                    LDQ     5,,PR1
         1 000413   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000414   000420 601000 1                  TNZ     s:2568
         1 000415   100006 236100                    LDQ     6,,PR1
         1 000416   040000 316007                    CANQ    16384,DL
         1 000417   000430 600000 1                  TZE     s:2569

      393     2568    6                                CALL NKP$RTN (TDCT$->DCT,JUNK);

   2568  1 000420   200021 633500                    EPPR3   JUNK,,AUTO
         1 000421   200041 453500                    STP3    @CHANCODE+3,,AUTO
         1 000422   200031 236100                    LDQ     TDCT$,,AUTO
         1 000423   200040 756100                    STQ     @CHANCODE+2,,AUTO
         1 000424   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000425   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000426   000000 701000 xent               TSX1    NKP$RTN
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:82   
         1 000427   000000 011000                    NOP     0

      394     2569    6                             IF TDCT$->DCT.TYPE = %DV_DP THEN

   2569  1 000430   200031 470500                    LDP0    TDCT$,,AUTO
         1 000431   000007 236100                    LDQ     7,,PR0
         1 000432   007700 376007                    ANQ     4032,DL
         1 000433   000600 116007                    CMPQ    384,DL
         1 000434   000445 601000 1                  TNZ     s:2572

      395     2570                       /* SYSCON does a RQSTAT and calls AVR only if dev is READY */
      396     2571    6                                CALL FMN$AVR (I,1);

   2571  1 000435   000001 236000 2                  LDQ     1
         1 000436   200041 756100                    STQ     @CHANCODE+3,,AUTO
         1 000437   200017 631500                    EPPR1   I,,AUTO
         1 000440   200040 451500                    STP1    @CHANCODE+2,,AUTO
         1 000441   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000442   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000443   000000 701000 xent               TSX1    FMN$AVR
         1 000444   000000 011000                    NOP     0

      397     2572    6                             TDCT$->DCT.STATUS.DOWN = '0'B;

   2572  1 000445   200031 470500                    LDP0    TDCT$,,AUTO
         1 000446   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000447   000027 356100                    ANSQ    23,,PR0

      398     2573    6                             END;

      399     2574    5                          END;

      400     2575    4                       END;

   2575  1 000450   200017 236100                    LDQ     I,,AUTO
         1 000451   000025 772000                    QRL     21
         1 000452   000001 036007                    ADLQ    1,DL
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:83   
         1 000453   000025 736000                    QLS     21
         1 000454   200017 756100                    STQ     I,,AUTO
         1 000455   200030 470500                    LDP0    SQH$,,AUTO
         1 000456   000002 236100                    LDQ     2,,PR0
         1 000457   777777 376007                    ANQ     -1,DL
         1 000460   200040 756100                    STQ     @CHANCODE+2,,AUTO
         1 000461   000002 236100                    LDQ     2,,PR0
         1 000462   000022 772000                    QRL     18
         1 000463   200040 036100                    ADLQ    @CHANCODE+2,,AUTO
         1 000464   200041 756100                    STQ     @CHANCODE+3,,AUTO
         1 000465   200017 236100                    LDQ     I,,AUTO
         1 000466   000025 772000                    QRL     21
         1 000467   200041 116100                    CMPQ    @CHANCODE+3,,AUTO
         1 000470   000370 602000 1                  TNC     s:2563

      401     2576    3                    END;

      402     2577    2              END;

      403     2578                %UNLOCK(G# = SQH$->SQH.GATE);

   2579  1 000471   200030 630500                    EPPR0   SQH$,,AUTO
         1 000472   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000473   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000474   000000 011000                    NOP     0

      404     2581    1           RETURN;

   2581  1 000475   000000 702200 xent               TSX2  ! X66_ARET

      405     2582        %EJECT;
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:84   
      406     2583        /*
      407     2584           Update the channel information in DQH based on action taken by MSOS when
      408     2585           RELEASing or ASSIGNing a physical channel.  The channel passed is either
      409     2586           ENQUEUEd or DEQUEUEd from the SQH.CQ (idle channels).  If the channel is
      410     2587           fully released (goes to STOPPED), the channel is partitioned.  Whenthe
      411     2588           channel goes to AVAILABLE, the channel is returned.
      412     2589           The SQH gate must be locked for this routine.
      413     2590        */
      414     2591    1   UPDATE_CHAN: PROC (DQH$,CHANCODE);

   2591  1 000476   200034 741300       UPDATE_CHAN  STX1  ! TDQH$+2,,AUTO

      415     2592        /**/
      416     2593    2   DCL DQH$ PTR;
      417     2594    2   DCL CHANCODE UBIN(9) CALIGNED;
      418     2595        /**/
      419     2596    3           DO CASE(CHANCODE);

   2596  1 000477   200036 470500                    LDP0    @CHANCODE,,AUTO
         1 000500   000100 101500                    MRL     fill='000'O
         1 000501   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000502   200040 000002                    ADSC9   @CHANCODE+2,,AUTO        cn=0,n=2
         1 000503   200040 220100                    LDX0    @CHANCODE+2,,AUTO
         1 000504   000021 100003                    CMPX0   17,DU
         1 000505   000507 602010 1                  TNC     s:2596+8,X0
         1 000506   000741 710000 1                  TRA     s:2651
         1 000507   000741 710000 1                  TRA     s:2651
         1 000510   000530 710000 1                  TRA     s:2598
         1 000511   000641 710000 1                  TRA     s:2633
         1 000512   000741 710000 1                  TRA     s:2651
         1 000513   000741 710000 1                  TRA     s:2651
         1 000514   000741 710000 1                  TRA     s:2651
         1 000515   000741 710000 1                  TRA     s:2651
         1 000516   000741 710000 1                  TRA     s:2651
         1 000517   000557 710000 1                  TRA     s:2616
         1 000520   000741 710000 1                  TRA     s:2651
         1 000521   000741 710000 1                  TRA     s:2651
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:85   
         1 000522   000741 710000 1                  TRA     s:2651
         1 000523   000741 710000 1                  TRA     s:2651
         1 000524   000741 710000 1                  TRA     s:2651
         1 000525   000741 710000 1                  TRA     s:2651
         1 000526   000741 710000 1                  TRA     s:2651
         1 000527   000673 710000 1                  TRA     s:2640

      420     2597    3            CASE(%CHAN_SUSPEND); /* Normal to suspended - dequeue from idle chain */

      421     2598    3              DQH$->TDQH.CHANSTATE.SUSPEND = '1'B;

   2598  1 000530   200035 471500                    LDP1    @DQH$,,AUTO
         1 000531   100000 473500                    LDP3    0,,PR1
         1 000532   200000 236003                    LDQ     65536,DU
         1 000533   300020 256100                    ORSQ    16,,PR3

      422     2599    3              IF  DQH$->TDQH.STATE = %IDLE      AND

   2599  1 000534   100000 473500                    LDP3    0,,PR1
         1 000535   300001 236100                    LDQ     1,,PR3
         1 000536   000077 316007                    CANQ    63,DL
         1 000537   000741 601000 1                  TNZ     s:2651
         1 000540   300000 236100                    LDQ     0,,PR3
         1 000541   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000542   000741 600000 1                  TZE     s:2651
         1 000543   300015 236100                    LDQ     13,,PR3
         1 000544   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000545   000741 600000 1                  TZE     s:2651

      423     2600    3                DQH$->TDQH.FL$ ~= ADDR(NIL)   AND
      424     2601    3                DQH$->TDQH.MPC$ ~= ADDR(NIL)
      425     2602    3              THEN
      426     2603    3                 CALL NIW$DQHSTOP ( DQH$->TDQH )

   2603  1 000546   200040 453500                    STP3    @CHANCODE+2,,AUTO
         1 000547   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000550   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:86   
         1 000551   000000 701000 xent               TSX1    NIW$DQHSTOP
         1 000552   000554 702000 1                  TSX2    s:2613
         1 000553   000556 710000 1                  TRA     s:2614

      427     2604    4                 WHENALTRETURN DO ;

      428     2605        /*S* SCREECH_CODE:  NIB-S$BADSQHCQ-7
      429     2606             TYPE:          SCREECH
      430     2607             MESSAGE:       The subsystem available channel queue is broken
      431     2608             REMARKS:       The problem discovered here is that we have a DQH which we
      432     2609                            believe is on the CQ (IDLE and FL$ not NIL).  However,
      433     2610                            we couldn't find it on the CQ.  One way for this to happen
      434     2611                            is ENQUEUEing the DQH on the CQ when it is already there.
      435     2612        */
      436     2613    4                    CALL SC_NIBBADSQHCQ ;

   2613  1 000554   000000 713400 xsym               CLIMB   SC_NIBBADSQHCQ
         1 000555   000000 600000 xsid               climb   nvectors=         0

      437     2614    4                    END ;

   2614  1 000556   000741 710000 1                  TRA     s:2651

      438     2615    3            CASE(%CHAN_STOPPED); /* Suspended to stopped - partition channel */

      439     2616    3              DQH$->TDQH.CHANSTATE.MSTOP = '1'B;

   2616  1 000557   200035 471500                    LDP1    @DQH$,,AUTO
         1 000560   100000 473500                    LDP3    0,,PR1
         1 000561   100000 236003                    LDQ     32768,DU
         1 000562   300020 256100                    ORSQ    16,,PR3

      440     2617    3              DQH$->TDQH.STATUS.DOWN = '1'B;

   2617  1 000563   100000 473500                    LDP3    0,,PR1
         1 000564   200000 236003                    LDQ     65536,DU
         1 000565   300001 256100                    ORSQ    1,,PR3
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:87   

      441     2618    3              DQH$->TDQH.STATUS.MSOS_PART = '1'B;

   2618  1 000566   100000 473500                    LDP3    0,,PR1
         1 000567   001000 236003                    LDQ     512,DU
         1 000570   300001 256100                    ORSQ    1,,PR3

      442     2619    3              CALL NIX$CHANCONFIG ( DQH$->TDQH, RESULTS, '1'B ) ;

   2619  1 000571   100000 473500                    LDP3    0,,PR1
         1 000572   000013 236000 2                  LDQ     11
         1 000573   200042 756100                    STQ     @CHANCODE+4,,AUTO
         1 000574   200026 634500                    EPPR4   RESULTS,,AUTO
         1 000575   200041 454500                    STP4    @CHANCODE+3,,AUTO
         1 000576   200040 453500                    STP3    @CHANCODE+2,,AUTO
         1 000577   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000600   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000601   000000 701000 xent               TSX1    NIX$CHANCONFIG
         1 000602   000000 011000                    NOP     0

      443     2620    4              IF RESULTS.BOOTINFO ~= '0'B THEN DO ;

   2620  1 000603   000000 106500                    CMPC    fill='000'O
         1 000604   200026 600005                    ADSC9   RESULTS,,AUTO            cn=3,n=5
         1 000605   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         1 000606   000741 600000 1                  TZE     s:2651

      444     2621    4                 EL$CHNGAARD = RESULTS.BOOTINFO ;

   2621  1 000607   000100 100500                    MLR     fill='000'O
         1 000610   200026 600005                    ADSC9   RESULTS,,AUTO            cn=3,n=5
         1 000611   200007 000033                    ADSC9   EL$CHNGAARD,,AUTO        cn=0,n=27

      445     2622    4                 EL$CHNGAARD.ACCN = 'MSOS' ;

   2622  1 000612   040100 100400                    MLR     fill='040'O
         1 000613   000000 000004 0                  ADSC9   0                        cn=0,n=4
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:88   
         1 000614   200010 200010                    ADSC9   EL$CHNGAARD+1,,AUTO      cn=1,n=8

      446     2623    4                 EL$CHNGAARD.UNAME = ' ' ;

   2623  1 000615   040100 100400                    MLR     fill='040'O
         1 000616   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000617   200012 200014                    ADSC9   EL$CHNGAARD+3,,AUTO      cn=1,n=12

      447     2624    4                 EL$CHNGAARD.SYSID = 0 ;

   2624  1 000620   000000 236003                    LDQ     0,DU
         1 000621   200015 552130                    STBQ    EL$CHNGAARD+6,'30'O,AUTO

      448     2625    4                 CALL ELA$SYSLOG ( EL_CHNGAARD,

   2625  1 000622   200021 630500                    EPPR0   JUNK,,AUTO
         1 000623   200045 450500                    STP0    @CHANCODE+7,,AUTO
         1 000624   000001 236000 2                  LDQ     1
         1 000625   200044 756100                    STQ     @CHANCODE+6,,AUTO
         1 000626   000010 237000 2                  LDAQ    8
         1 000627   200042 757100                    STAQ    @CHANCODE+4,,AUTO
         1 000630   200007 631500                    EPPR1   EL$CHNGAARD,,AUTO
         1 000631   200041 451500                    STP1    @CHANCODE+3,,AUTO
         1 000632   000007 236000 2                  LDQ     7
         1 000633   200040 756100                    STQ     @CHANCODE+2,,AUTO
         1 000634   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000635   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000636   000000 701000 xent               TSX1    ELA$SYSLOG
         1 000637   000000 011000                    NOP     0

      449     2626    4                   EL$CHNGAARD,
      450     2627    4                   SIZEC(EL$CHNGAARD),
      451     2628    4                   '0'B,
      452     2629    4                   EL_ERR,
      453     2630    4                   JUNK ) ;
      454     2631    4                 END ;

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:89   
   2631  1 000640   000741 710000 1                  TRA     s:2651

      455     2632    3            CASE(%CHAN_RELEASED); /* Suspended to normal - enqueue on idle chain */

      456     2633    3              DQH$->TDQH.CHANSTATE.SUSPEND = '0'B;

   2633  1 000641   200035 471500                    LDP1    @DQH$,,AUTO
         1 000642   100000 473500                    LDP3    0,,PR1
         1 000643   000014 236000 2                  LDQ     12
         1 000644   300020 356100                    ANSQ    16,,PR3

      457     2634    3              IF DQH$->TDQH.STATE = %IDLE AND DQH$->TDQH.FL$ = ADDR(NIL) AND

   2634  1 000645   100000 473500                    LDP3    0,,PR1
         1 000646   300001 236100                    LDQ     1,,PR3
         1 000647   000077 316007                    CANQ    63,DL
         1 000650   000741 601000 1                  TNZ     s:2651
         1 000651   300000 236100                    LDQ     0,,PR3
         1 000652   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000653   000741 601000 1                  TNZ     s:2651
         1 000654   300001 236100                    LDQ     1,,PR3
         1 000655   200000 316003                    CANQ    65536,DU
         1 000656   000741 601000 1                  TNZ     s:2651
         1 000657   300015 236100                    LDQ     13,,PR3
         1 000660   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000661   000741 600000 1                  TZE     s:2651

      458     2635    3                NOT DQH$->TDQH.STATUS.DOWN AND DQH$->TDQH.MPC$ ~= ADDR(NIL) THEN
      459     2636                      %ENQUEUE (P# = DQH$->TDQH, Q# = SQH.CQ$);

   2637  1 000662   200030 236100                    LDQ     SQH$,,AUTO
         1 000663   000004 036003                    ADLQ    4,DU
         1 000664   200041 756100                    STQ     @CHANCODE+3,,AUTO
         1 000665   200040 453500                    STP3    @CHANCODE+2,,AUTO
         1 000666   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000667   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000670   000000 701000 xent               TSX1    NIM$ENQUEUE
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:90   
         1 000671   000000 011000                    NOP     0
         1 000672   000741 710000 1                  TRA     s:2651

      460     2639    3            CASE(%CHAN_AVAILABLE);
              2639                     /* Stopped to normal - enqueue on idle chain and return chan */

      461     2640    3              DQH$->TDQH.STATUS.MSOS_PART = '0'B;

   2640  1 000673   200035 471500                    LDP1    @DQH$,,AUTO
         1 000674   100000 473500                    LDP3    0,,PR1
         1 000675   000015 236000 2                  LDQ     13
         1 000676   300001 356100                    ANSQ    1,,PR3

      462     2641    3              DQH$->TDQH.STATUS.DOWN = DQH$->TDQH.STATUS.SYSCON_PART;

   2641  1 000677   100000 473500                    LDP3    0,,PR1
         1 000700   300001 236100                    LDQ     1,,PR3
         1 000701   000006 736000                    QLS     6
         1 000702   300001 676100                    ERQ     1,,PR3
         1 000703   200000 376003                    ANQ     65536,DU
         1 000704   300001 656100                    ERSQ    1,,PR3

      463     2642    3              DQH$->TDQH.CHANSTATE.SUSPEND = '0'B;

   2642  1 000705   100000 473500                    LDP3    0,,PR1
         1 000706   000014 236000 2                  LDQ     12
         1 000707   300020 356100                    ANSQ    16,,PR3

      464     2643    3              DQH$->TDQH.CHANSTATE.MSTOP = '0'B;

   2643  1 000710   100000 473500                    LDP3    0,,PR1
         1 000711   000016 236000 2                  LDQ     14
         1 000712   300020 356100                    ANSQ    16,,PR3

      465     2644    3              IF DQH$->TDQH.STATE = %IDLE AND DQH$->TDQH.FL$ = ADDR(NIL) AND

   2644  1 000713   100000 473500                    LDP3    0,,PR1
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:91   
         1 000714   300001 236100                    LDQ     1,,PR3
         1 000715   000077 316007                    CANQ    63,DL
         1 000716   000741 601000 1                  TNZ     s:2651
         1 000717   300000 236100                    LDQ     0,,PR3
         1 000720   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000721   000741 601000 1                  TNZ     s:2651
         1 000722   300001 236100                    LDQ     1,,PR3
         1 000723   200000 316003                    CANQ    65536,DU
         1 000724   000741 601000 1                  TNZ     s:2651
         1 000725   300015 236100                    LDQ     13,,PR3
         1 000726   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000727   000741 600000 1                  TZE     s:2651

      466     2645    3                NOT DQH$->TDQH.STATUS.DOWN AND DQH$->TDQH.MPC$ ~= ADDR(NIL) THEN
      467     2646                      %ENQUEUE (P# = DQH$->TDQH, Q# = SQH.CQ$);

   2647  1 000730   200030 236100                    LDQ     SQH$,,AUTO
         1 000731   000004 036003                    ADLQ    4,DU
         1 000732   200041 756100                    STQ     @CHANCODE+3,,AUTO
         1 000733   200040 453500                    STP3    @CHANCODE+2,,AUTO
         1 000734   200040 630500                    EPPR0   @CHANCODE+2,,AUTO
         1 000735   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000736   000000 701000 xent               TSX1    NIM$ENQUEUE
         1 000737   000000 011000                    NOP     0
         1 000740   000741 710000 1                  TRA     s:2651

      468     2649    3            CASE(ELSE);

      469     2650    3            END;                           /* CASE */

      470     2651    2           RETURN;

   2651  1 000741   200034 221300                    LDX1  ! TDQH$+2,,AUTO
         1 000742   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:92   
   0     000   115123 117123                                                    MSOS

(unnamed)
 Sect OctLoc
   2     000   000000 000165   000003 006000   000004 006000   000002 006000    ...u............
   2     004   000000 006000   000000 000170   000000 000034   000005 006000    .......x........
   2     010   000006 006000   000002 006000   775777 777777   000030 006000    ................
   2     014   577777 777777   776777 777777   677777 777777                    ............
      471     2652    2   END UPDATE_CHAN;
      472     2653    1   END NIB$SPEC;

PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:93   
--  Include file information  --

   TD$CP6V_C.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_MACROS_C.:E05TOU  cannot be made into a system file and is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KI_MACROS_C.:E05TOU  is referenced.
   KI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure NIB$SPEC.
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:94   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    36-0-0/w PTR         r     1 @CHANCODE                  3-0-0/w PTR         r     1 @DQH
    35-0-0/w PTR         r     1 @DQH$                      4-0-0/w PTR         r     1 @STATUS
    *0-0-0/c UBIN(9)     r     1 CHANCODE                  *0-0-0/w STRC(648)   r     1 DQH
    *0-0-0/w PTR         r     1 DQH$                       5-0-0/w STRC(72)    r     1 EL$CHANTRAN
     7-0-0/w STRC(243)   r     1 EL$CHNGAARD               16-0-0/w PTR         r     1 FEI$
    17-0-0/w UBIN(15)    r     1 I                         20-0-0/w UBIN        r     1 IOCHANX
    21-0-0/w UBIN        r     1 JUNK                      22-0-0/w PTR         r     1 MPC$
    23-0-0/w BIT         r     1 PART_DEV                  24-0-0/w BIT         r     1 PART_MPC
    26-0-0/d STRC(72)    r     1 RESULTS                   *0-0-0/d STRC(72)    r     1 SPSTAT
    30-0-0/w PTR         r     1 SQH$                      *0-0-0/d STRC(72)    r     1 STATUS
    31-0-0/w PTR         r     1 TDCT$                     32-0-0/w PTR         r     1 TDQH$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KI_FEI$$                   0-0-0/w PTR         r     1 N$DCT$$
     0-0-0/w PTR         r     1 N$FQ$                      0-0-0/w PTR         r     1 NI$CHT$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$RP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 CHT(0:127)                 0-0-0/w STRC(1332)  r     1 DCT
     0-0-0/w PTR         r     1 N$DCT$(0:0)                0-0-0/w STRC(252)   r     1 SQH
     0-0-0/w STRC(648)   r     1 TDQH
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:95   


   Procedure NIB$SPEC requires 483 words for executable code.
   Procedure NIB$SPEC requires 40 words of local(AUTO) storage.

    No errors detected in file NIB$MSOS.:E05TSI    .
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:96   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:97   
          MINI XREF LISTING

CHANCODE IN PROCEDURE UPDATE_CHAN
      2594**DCL      2591--PROC     2596>>DOCASE
CHT.DQH$
      2255**DCL      2517>>ASSIGN
DCT
      2266**DCL      2539<>CALL     2542<>CALL     2568<>CALL
DCT.DFLG.CONSOLE
      2269**DCL      2538>>IF       2567>>IF
DCT.DP
      2286**DCL      2293--REDEF    2296--REDEF    2297--REDEF    2299--REDEF    2299--REDEF    2300--REDEF
      2301--REDEF    2301--REDEF
DCT.MPC.IOCHANX
      2294**DCL      2294--REDEF    2515>>ASSIGN
DCT.RAT$
      2267**DCL      2538>>IF       2567>>IF
DCT.STATUS.DOWN
      2283**DCL      2525<<ASSIGN   2530>>IF       2541<<ASSIGN   2561<<ASSIGN   2572<<ASSIGN
DCT.STATUS.MSOS_PART
      2285**DCL      2526<<ASSIGN   2537<<ASSIGN   2558>>IF       2560<<ASSIGN   2564>>IF       2565<<ASSIGN
DCT.STATUS.SYSCON_PART
      2284**DCL      2561>>ASSIGN   2566>>IF
DCT.TYPE
      2276**DCL      2536>>IF       2564>>IF       2569>>IF
DELAYED_PART
      2555**LABEL    2539--CALLALT
DQH
      2127**DCL         7--PROC     2507--CALL
DQH.IOCHAN.IOM
      2130**DCL      2496>>ASSIGN
DQH.IOCHANX
      2129**DCL      2130--REDEF
DQH.LA
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:98   
      2137**DCL      2518>>IF
DQH.MBX$
      2138**DCL      2139--REDEF
DQH.MPC$
      2134**DCL      2494>>ASSIGN   2506>>IF
DQH.SQH$
      2133**DCL      2495>>ASSIGN
DQH$ IN PROCEDURE UPDATE_CHAN
      2593**DCL      2591--PROC     2598>>ASSIGN   2599>>IF       2599>>IF       2599>>IF       2603>>CALL
      2616>>ASSIGN   2617>>ASSIGN   2618>>ASSIGN   2619>>CALL     2633>>ASSIGN   2634>>IF       2634>>IF
      2634>>IF       2634>>IF       2637>>CALL     2640>>ASSIGN   2641>>ASSIGN   2641>>ASSIGN   2642>>ASSIGN
      2643>>ASSIGN   2644>>IF       2644>>IF       2644>>IF       2644>>IF       2647>>CALL
DVT.MPC
      2308**DCL      2309--REDEF
EL$CHANTRAN
      2229**DCL      2498<>CALL     2498--CALL
EL$CHANTRAN.IOP#
      2229**DCL      2496<<ASSIGN
EL$CHANTRAN.STATUS
      2229**DCL      2497<<ASSIGN
EL$CHNGAARD
      2233**DCL      2544<<ASSIGN   2548<>CALL     2548--CALL     2621<<ASSIGN   2625<>CALL     2625--CALL
EL$CHNGAARD.ACCN
      2234**DCL      2545<<ASSIGN   2622<<ASSIGN
EL$CHNGAARD.SYSID
      2234**DCL      2547<<ASSIGN   2624<<ASSIGN
EL$CHNGAARD.UNAME
      2234**DCL      2546<<ASSIGN   2623<<ASSIGN
ELA$SYSLOG
      2211**DCL-ENT  2498--CALL     2548--CALL     2625--CALL
FEI.BD$
      2360**DCL      2361--REDEF
FEI.BDAD.WADDR
      2362**DCL      2363--REDEF
FEI.RCVPB
      2376**DCL      2377--REDEF
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:99   
FEI$
      2236**DCL      2325--IMP-PTR
FMN$AVR
      2212**DCL-ENT  2571--CALL
HFC$LOCK
       454**DCL-ENT  2504--CALL
HFC$UNLOCK
       454**DCL-ENT  2579--CALL
I
      2237**DCL      2514<<DOINDEX  2515>>ASSIGN   2527<<DOINDEX  2528>>ASSIGN   2534<<DOINDEX  2535>>ASSIGN
      2562<<DOINDEX  2563>>ASSIGN   2571<>CALL
IOCHANX
      2238**DCL      2515<<ASSIGN   2516>>IF       2517>>ASSIGN
JUNK
      2239**DCL      2498<>CALL     2539<>CALL     2548<>CALL     2568<>CALL     2625<>CALL
KI_FEI$$
       466**DCL       467--IMP-PTR
MPC$
      2240**DCL      2494<<ASSIGN   2515>>ASSIGN   2525>>ASSIGN   2526>>ASSIGN   2558>>IF       2560>>ASSIGN
      2561>>ASSIGN   2561>>ASSIGN
N$DCT$
      1770**DCL      2535>>ASSIGN   2563>>ASSIGN
N$DCT$$
      1636**DCL      1770--IMP-PTR  2535>>ASSIGN   2563>>ASSIGN
N$FQ$
      1636**DCL      1771--IMP-PTR
N$REQ_INIT.BUFADDR
      1655**DCL      1656--REDEF    1656--REDEF
N$REQ_INIT.DLA.DRELADDR
      1647**DCL      1647--REDEF
N$REQ_INIT.DVE.EOMCHAR
      1684**DCL      1685--REDEF
N$REQ_INIT.EAINFO
      1678**DCL      1678--REDEF
N$REQ_INIT.EAINFOX
      1678**DCL      1679--REDEF
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:100  
N$REQ_INIT.EVNTINFO
      1679**DCL      1679--REDEF
N$REQ_INIT.STATUS
      1660**DCL      1666--REDEF
NI$CHT$
      1695**DCL      2255--IMP-PTR  2517>>ASSIGN
NI$FQ$
      1696**DCL      1772--IMP-PTR
NI$IBUF$
      1696**DCL      1772--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
      1706**DCL      1707--REDEF    1707--REDEF
NI$IMXMBX_INIT.SIZE
      1708**DCL      1708--REDEF
NI$REQ_INIT.DCW
      1730**DCL      1733--REDEF
NI$REQ_INIT.DCW.TALLY
      1731**DCL      1731--REDEF
NI$REQ_INIT.IDCW.EXTA
      1733**DCL      1733--REDEF
NI$REQ_INIT.PCW
      1735**DCL      1739--REDEF
NI$REQ_INIT.SEEK
      1740**DCL      1741--REDEF    1742--REDEF
NI$RP$
      1744**DCL      1774--IMP-PTR
NIM$ENQUEUE
      1800**DCL-ENT  2637--CALL     2647--CALL
NIW$DQHSTOP
      2219**DCL-ENT  2603--CALL
NIX$CHANCONFIG
      2220**DCL-ENT  2619--CALL
NIX$DEVCONFIG
      2221**DCL-ENT  2542--CALL
NI_MBX_INIT.DCW.CONTROL.AE
      1766**DCL      1766--REDEF
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:101  
NI_MBX_INIT.LPW.CONTROL.AE
      1762**DCL      1762--REDEF
NKP$PART
      2222**DCL-ENT  2539--CALL
NKP$RTN
      2223**DCL-ENT  2568--CALL
PARTDEV
      2534**LABEL    2509--GOTO
PART_DEV
      2241**DCL      2500<<ASSIGN   2531<<ASSIGN   2533>>IF
PART_MPC
      2242**DCL      2499<<ASSIGN   2521<<ASSIGN   2524>>IF
REQ.BUFADDR
      2414**DCL      2415--REDEF    2415--REDEF
REQ.DLA.DRELADDR
      2406**DCL      2406--REDEF
REQ.DVE.EOMCHAR
      2443**DCL      2444--REDEF
REQ.EAINFO
      2437**DCL      2437--REDEF
REQ.EAINFOX
      2437**DCL      2438--REDEF
REQ.EVNTINFO
      2438**DCL      2438--REDEF
REQ.STATUS
      2419**DCL      2425--REDEF
RESULTS
      2244**DCL      2542<>CALL     2619<>CALL
RESULTS.BOOTINFO
      2245**DCL      2543>>IF       2544>>ASSIGN   2620>>IF       2621>>ASSIGN
RETDEV
      2562**LABEL    2511--GOTO
SC_NIBBADSQHCQ
      2224**DCL-ENT  2613--CALL
SPSTAT
      2187**DCL      2497>>ASSIGN
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:102  
SPSTAT.CODE.BYTE3
      2199**DCL      2507<>CALL     2508>>IF       2510>>IF       2519<>CALL     2524>>IF       2558>>IF
SQH.CQ$
      2464**DCL      2637<>CALL     2647<>CALL
SQH.DOOR
      2463**DCL      2463--REDEF
SQH.FDCT
      2463**DCL      2534>>DOINDEX  2534>>DOINDEX  2562>>DOINDEX  2562>>DOINDEX
SQH.GATE
      2463**DCL      2504<>CALL     2579<>CALL
SQH.MPC$
      2465**DCL      2528>>ASSIGN
SQH.NDCT
      2464**DCL      2534>>DOINDEX  2562>>DOINDEX
SQH$
      2248**DCL      2463--IMP-PTR  2495<<ASSIGN   2501>>IF       2504>>CALL     2528>>ASSIGN   2534>>DOINDEX
      2534>>DOINDEX  2534>>DOINDEX  2562>>DOINDEX  2562>>DOINDEX  2562>>DOINDEX  2579>>CALL     2637>>CALL
      2647>>CALL
STATUS
      2146**DCL         7--PROC     2171--REDEF    2187--REDEF
TDCT$
      2249**DCL      2528<<ASSIGN   2529>>IF       2530>>IF       2535<<ASSIGN   2536>>IF       2537>>ASSIGN
      2538>>IF       2538>>IF       2539>>CALL     2541>>ASSIGN   2542>>CALL     2563<<ASSIGN   2564>>IF
      2564>>IF       2565>>ASSIGN   2566>>IF       2567>>IF       2567>>IF       2568>>CALL     2569>>IF
      2572>>ASSIGN
TDQH
      2476**DCL      2603<>CALL     2619<>CALL     2637<>CALL     2647<>CALL
TDQH.CHANSTATE.MSTOP
      2485**DCL      2616<<ASSIGN   2643<<ASSIGN
TDQH.CHANSTATE.SUSPEND
      2485**DCL      2598<<ASSIGN   2633<<ASSIGN   2642<<ASSIGN
TDQH.FL$
      2476**DCL      2599>>IF       2634>>IF       2644>>IF
TDQH.IOCHANX
      2478**DCL      2479--REDEF
TDQH.LA
PL6.E3A0      #003=NIB$SPEC File=NIB$MSOS.:E05TSI                                WED 07/30/97 03:28 Page:103  
      2486**DCL      2518>>IF
TDQH.MBX$
      2487**DCL      2488--REDEF
TDQH.MPC$
      2483**DCL      2599>>IF       2634>>IF       2644>>IF
TDQH.STATE
      2480**DCL      2599>>IF       2634>>IF       2644>>IF
TDQH.STATUS.DOWN
      2476**DCL      2520>>IF       2617<<ASSIGN   2634>>IF       2641<<ASSIGN   2644>>IF
TDQH.STATUS.MSOS_PART
      2478**DCL      2618<<ASSIGN   2640<<ASSIGN
TDQH.STATUS.SYSCON_PART
      2477**DCL      2641>>ASSIGN
TDQH$
      2250**DCL      2476--IMP-PTR  2517<<ASSIGN   2518>>IF       2519<>CALL     2520>>IF
UPDATE_CHAN
      2591**PROC     2507--CALL     2519--CALL
