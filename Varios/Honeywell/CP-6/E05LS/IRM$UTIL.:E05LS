VERSION E05

PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:1    
        1        1        /*M* IRM$UTIL     Monitor Resident portion of Recovery -PL6  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*   NAME:   IRM$RCVR2
        9        9
       10       10               PURPOSE:  To goose the RCVR2 Ghost after a Single User
       11       11                         Abort or Snapshot dump.
       12       12
       13       13        */
       14       14        IRM$RCVR2: PROC;
       15       15    1   DCL X UBIN;
       16       16
       17       17        %INCLUDE CP_6;
       18     5576        %INCLUDE CP_6_SUBS;
       19     6116
       20     6117    1   DCL IRM_SNAPSLOT(0:3) UBIN(9) UNAL SYMREF;
       21     6118    1   DCL IRM_DINDEX UBIN(36) SYMREF;
       22     6119    1   DCL IRM_NODUMP SBIN SYMREF;
       23     6120    1   DCL S_CUN UBIN SYMREF;
       24     6121
       25     6122    1   DCL IRM$LOGERR ENTRY;
       26     6123    1   DCL FOS$RUND ENTRY;
       27     6124    1   DCL UDN$MAGIC ENTRY;
       28     6125    1   DCL M$MGJOB ENTRY(1) ALTRET;
       29     6126
       30     6127        %INCLUDE U$JIT_C;
       31     6626    1   DCL B$JIT$ PTR SYMREF READONLY;
       32     6627        %SUB B$JIT=B$JIT$->B$JIT;
       33     6628
       34     6629        %INCLUDE JG_GHOSTS_C;
       35     6719        %VLP_SCODE (FPTN=IRM_SCODE,STCLASS=SYMREF);
       36     6780
       37     6781        %FPT_GJOB(FPTN=FPT_GJOB,STCLASS=CONSTANT,
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:2    
       38     6782                 ACCT=SYSACCT,NAME=RCVR2,CCBUF=RCVR2_CCBUF,
       39     6783                 PRIINC=2,SLEAZE=YES);
       40     6800        %VLP_NAME(FPTN=RCVR2,STCLASS=CONSTANT,NAME='RCVR2');
       41     6827        %VLP_ACCT(FPTN=SYSACCT,STCLASS=CONSTANT,ACCT=':SYS');
       42     6840
       43     6841    1   DCL 1 RCVR2_CCBUF STATIC,
       44     6842    1         2 REST CHAR(16) INIT('RCVR2  (SUA     '),
       45     6843    1         2 RST REDEF REST,
       46     6844    1           3 * CHAR(12),
       47     6845    1           3 INDX UBIN BYTE UNAL,
       48     6846    1           3 * CHAR(3);
       49     6847
       50     6848    1      CALL IRM$LOGERR;
       51     6849    1      IF IRM_NODUMP=0
       52     6850    2      THEN DO;
       53     6851    2           CALL UDN$MAGIC;
       54     6852    2           RCVR2_CCBUF.RST.INDX = IRM_DINDEX;
       55     6853    2           CALL M$MGJOB(FPT_GJOB) ALTRET(IG1);
       56     6854    2   IG1:    END;
       57     6855    1      IF (IRM_SCODE.SEV#=%SEV_SUA#) AND (S_CUN <= JG_MING#)
       58     6856    1      THEN CALL FOS$RUND;
       59     6857    1      RETURN;
       60     6858
       61     6859
       62     6860    1   IRM$RCVR3: ENTRY;
       63     6861
       64     6862    2      DO X=0 TO 2;
       65     6863    2           IF IRM_SNAPSLOT(X) ~= 0
       66     6864    3           THEN DO;
       67     6865    3                RCVR2_CCBUF.RST.INDX = X;
       68     6866    3                IRM_SNAPSLOT(X)=0;
       69     6867    3                CALL M$MGJOB(FPT_GJOB) ALTRET(IG2);
       70     6868    3   IG2:         END;
       71     6869    2           END;
       72     6870    1      RETURN;
       73     6871
       74     6872    1   END IRM$RCVR2;
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:3    
       75     6873        %EOD;

PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:4    
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure IRM$RCVR2.

   Procedure IRM$RCVR2 requires 54 words for executable code.
   Procedure IRM$RCVR2 requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:5    

 Object Unit name= IRM$RCVR2                                  File name= IRM$UTIL.:E05TOU
 UTS= JUL 29 '97 22:46:39.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     18     22  IRM$RCVR2
    2   Data  even  none     4      4  IRM$RCVR2
    3   Proc  even  none    54     66  IRM$RCVR2
    4  RoData even  none     1      1  IRM$RCVR2

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  IRM$RCVR2
     3     34                  yes      Std        0  IRM$RCVR3

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 IRM$LOGERR
         yes           Std       0 FOS$RUND
         yes           Std       0 UDN$MAGIC
 yes     yes           Std       1 M$MGJOB
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  IRM_SNAPSLOT                          IRM_DINDEX
     IRM_NODUMP                            S_CUN                            r    B$JIT$
     IRM_SCODE                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:7    


        1        1        /*M* IRM$UTIL     Monitor Resident portion of Recovery -PL6  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*   NAME:   IRM$RCVR2
        9        9
       10       10               PURPOSE:  To goose the RCVR2 Ghost after a Single User
       11       11                         Abort or Snapshot dump.
       12       12
       13       13        */
       14       14        IRM$RCVR2: PROC;

     14  3 000000   000000 700200 xent  IRM$RCVR2    TSX0  ! X66_AUTO_0
         3 000001   000006 000000                    ZERO    6,0

       15       15    1   DCL X UBIN;
       16       16
       17       17        %INCLUDE CP_6;
       18     5576        %INCLUDE CP_6_SUBS;
       19     6116
       20     6117    1   DCL IRM_SNAPSLOT(0:3) UBIN(9) UNAL SYMREF;
       21     6118    1   DCL IRM_DINDEX UBIN(36) SYMREF;
       22     6119    1   DCL IRM_NODUMP SBIN SYMREF;
       23     6120    1   DCL S_CUN UBIN SYMREF;
       24     6121
       25     6122    1   DCL IRM$LOGERR ENTRY;
       26     6123    1   DCL FOS$RUND ENTRY;
       27     6124    1   DCL UDN$MAGIC ENTRY;
       28     6125    1   DCL M$MGJOB ENTRY(1) ALTRET;
       29     6126
       30     6127        %INCLUDE U$JIT_C;
       31     6626    1   DCL B$JIT$ PTR SYMREF READONLY;
       32     6627        %SUB B$JIT=B$JIT$->B$JIT;
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:8    
       33     6628
       34     6629        %INCLUDE JG_GHOSTS_C;
       35     6719        %VLP_SCODE (FPTN=IRM_SCODE,STCLASS=SYMREF);
       36     6780
       37     6781        %FPT_GJOB(FPTN=FPT_GJOB,STCLASS=CONSTANT,
       38     6782                 ACCT=SYSACCT,NAME=RCVR2,CCBUF=RCVR2_CCBUF,
       39     6783                 PRIINC=2,SLEAZE=YES);
       40     6800        %VLP_NAME(FPTN=RCVR2,STCLASS=CONSTANT,NAME='RCVR2');
       41     6827        %VLP_ACCT(FPTN=SYSACCT,STCLASS=CONSTANT,ACCT=':SYS');
       42     6840
       43     6841    1   DCL 1 RCVR2_CCBUF STATIC,
       44     6842    1         2 REST CHAR(16) INIT('RCVR2  (SUA     '),
       45     6843    1         2 RST REDEF REST,
       46     6844    1           3 * CHAR(12),
       47     6845    1           3 INDX UBIN BYTE UNAL,
       48     6846    1           3 * CHAR(3);
       49     6847
       50     6848    1      CALL IRM$LOGERR;

   6848  3 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000003   000000 701000 xent               TSX1    IRM$LOGERR
         3 000004   000000 011000                    NOP     0

       51     6849    1      IF IRM_NODUMP=0

   6849  3 000005   000000 235000 xsym               LDA     IRM_NODUMP
         3 000006   000021 601000 3                  TNZ     IG1

       52     6850    2      THEN DO;

       53     6851    2           CALL UDN$MAGIC;

   6851  3 000007   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000010   000000 701000 xent               TSX1    UDN$MAGIC
         3 000011   000000 011000                    NOP     0

       54     6852    2           RCVR2_CCBUF.RST.INDX = IRM_DINDEX;
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:9    

   6852  3 000012   000000 236000 xsym               LDQ     IRM_DINDEX
         3 000013   000033 736000                    QLS     27
         3 000014   000003 552040 2                  STBQ    RCVR2_CCBUF+3,'40'O

       55     6853    2           CALL M$MGJOB(FPT_GJOB) ALTRET(IG1);

   6853  3 000015   000000 630400 4                  EPPR0   0
         3 000016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000017   000000 701000 xent               TSX1    M$MGJOB
         3 000020   000021 702000 3                  TSX2    IG1

       56     6854    2   IG1:    END;

   6854  3 000021                       IG1          null
       57     6855    1      IF (IRM_SCODE.SEV#=%SEV_SUA#) AND (S_CUN <= JG_MING#)

   6855  3 000021   000000 236000 xsym               LDQ     IRM_SCODE
         3 000022   000007 376007                    ANQ     7,DL
         3 000023   000006 116007                    CMPQ    6,DL
         3 000024   000033 601000 3                  TNZ     s:6857
         3 000025   000000 235000 xsym               LDA     S_CUN
         3 000026   000020 115007                    CMPA    16,DL
         3 000027   000033 603000 3                  TRC     s:6857

       58     6856    1      THEN CALL FOS$RUND;

   6856  3 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000031   000000 701000 xent               TSX1    FOS$RUND
         3 000032   000000 011000                    NOP     0

       59     6857    1      RETURN;

   6857  3 000033   000000 702200 xent               TSX2  ! X66_ARET

       60     6858
       61     6859
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:10   
       62     6860    1   IRM$RCVR3: ENTRY;

   6860  3 000034   000000 700200 xent  IRM$RCVR3    TSX0  ! X66_AUTO_0
         3 000035   000006 000000                    ZERO    6,0

       63     6861
       64     6862    2      DO X=0 TO 2;

   6862  3 000036   200003 450100                    STZ     X,,AUTO

       65     6863    2           IF IRM_SNAPSLOT(X) ~= 0

   6863  3 000037   200003 235100                    LDA     X,,AUTO
         3 000040   000100 101405                    MRL     fill='000'O
         3 000041   000000 000001 xsym               ADSC9   IRM_SNAPSLOT,A           cn=0,n=1
         3 000042   200004 000004                    ADSC9   X+1,,AUTO                cn=0,n=4
         3 000043   200004 236100                    LDQ     X+1,,AUTO
         3 000044   000000 116003                    CMPQ    0,DU
         3 000045   000060 600000 3                  TZE     IG2

       66     6864    3           THEN DO;

       67     6865    3                RCVR2_CCBUF.RST.INDX = X;

   6865  3 000046   200003 236100                    LDQ     X,,AUTO
         3 000047   000033 736000                    QLS     27
         3 000050   000003 552040 2                  STBQ    RCVR2_CCBUF+3,'40'O

       68     6866    3                IRM_SNAPSLOT(X)=0;

   6866  3 000051   000005 101400                    MRL     fill='000'O
         3 000052   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000053   000000 000001 xsym               ADSC9   IRM_SNAPSLOT,A           cn=0,n=1

       69     6867    3                CALL M$MGJOB(FPT_GJOB) ALTRET(IG2);

   6867  3 000054   000000 630400 4                  EPPR0   0
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:11   
         3 000055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000056   000000 701000 xent               TSX1    M$MGJOB
         3 000057   000060 702000 3                  TSX2    IG2

       70     6868    3   IG2:         END;

   6868  3 000060                       IG2          null
       71     6869    2           END;

   6869  3 000060   200003 235100                    LDA     X,,AUTO
         3 000061   000001 035007                    ADLA    1,DL
         3 000062   200003 755100                    STA     X,,AUTO
         3 000063   000003 115007                    CMPA    3,DL
         3 000064   000037 602000 3                  TNC     s:6863

       72     6870    1      RETURN;

   6870  3 000065   000000 702200 xent               TSX2  ! X66_ARET

FPT_GJOB
 Sect OctLoc
   1     000   000001 777640   000014 006000   000001 777640   000020 006000    ................
   1     004   000001 377640   000016 006000   000000 177640   000000 006014    ................
   1     010   000003 777640   000000 006000   000000 177640   000000 006014    ................
   1     014   200002 000000   000000 000000                                    ........

RCVR2
 Sect OctLoc
   1     016   005122 103126   122062 ******                                    .RCVR2..

SYSACCT
 Sect OctLoc
   1     020   072123 131123   040040 040040                                    :SYS

RCVR2_CCBUF
 Sect OctLoc
   2     000   122103 126122   062040 040050   123125 101040   040040 040040    RCVR2  (SUA
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:12   

(unnamed)
 Sect OctLoc
   4     000   000000 006000                                                    ....
       73     6871
       74     6872    1   END IRM$RCVR2;
       75     6873        %EOD;

PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:13   
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure IRM$RCVR2.
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:14   

 **** Variables and constants ****

  ****  Section 001 RoData IRM$RCVR2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 FPT_GJOB                  16-0-0/c STRC(54)    r     1 RCVR2
    20-0-0/c STRC(72)    r     1 SYSACCT

  ****  Section 002  Data  IRM$RCVR2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(144)   r     1 RCVR2_CCBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN        r     1 X

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 IRM_DINDEX
     0-0-0/w SBIN        r     1 IRM_NODUMP                 0-0-0/d STRC(72)    r     1 IRM_SCODE
     0-0-0/b UBIN(9)     r     1 IRM_SNAPSLOT(0:3)
     0-0-0/w UBIN        r     1 S_CUN


   Procedure IRM$RCVR2 requires 54 words for executable code.
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:15   
   Procedure IRM$RCVR2 requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:16   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:17   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      6548**DCL      6548--REDEF
B$JIT.ERR.MID
      6455**DCL      6455--REDEF
B$JIT$
      6626**DCL      6449--IMP-PTR
FOS$RUND
      6123**DCL-ENT  6856--CALL
FPT_GJOB
      6794**DCL      6853<>CALL     6867<>CALL
FPT_GJOB.V
      6796**DCL      6794--DCLINIT
IG1
      6854**LABEL    6853--CALLALT
IG2
      6868**LABEL    6867--CALLALT
IRM$LOGERR
      6122**DCL-ENT  6848--CALL
IRM_DINDEX
      6118**DCL      6852>>ASSIGN
IRM_NODUMP
      6119**DCL      6849>>IF
IRM_SCODE.SEV#
      6761**DCL      6855>>IF
IRM_SNAPSLOT
      6117**DCL      6863>>IF       6866<<ASSIGN
M$MGJOB
      6125**DCL-ENT  6853--CALL     6867--CALL
RCVR2
      6825**DCL      6795--DCLINIT
RCVR2_CCBUF
      6841**DCL      6795--DCLINIT
PL6.E3A0      #001=IRM$RCVR2 File=IRM$UTIL.:E05TSI                               TUE 07/29/97 22:46 Page:18   
RCVR2_CCBUF.REST
      6842**DCL      6843--REDEF
RCVR2_CCBUF.RST.INDX
      6845**DCL      6852<<ASSIGN   6865<<ASSIGN
SYSACCT
      6838**DCL      6794--DCLINIT
S_CUN
      6120**DCL      6855>>IF
UDN$MAGIC
      6124**DCL-ENT  6851--CALL
X
        15**DCL      6862<<DOINDEX  6863>>IF       6865>>ASSIGN   6866>>ASSIGN

PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:19   
       76        1        /*T***********************************************************/
       77        2        /*T*                                                         */
       78        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       79        4        /*T*                                                         */
       80        5        /*T***********************************************************/
       81        6
       82        7        /*P*   NAME:   IRM$LOGERR
       83        8
       84        9               PURPOSE:  To make an entry in the errlog following a call
       85       10                         to SCREECH.
       86       11        */
       87       12                                                /*CALLED BY IRM$RCVR2 OR ITZ$RECOVER  */
       88       13
       89       14        IRM$LOGERR: PROC;
       90       15
       91       16        %INCLUDE EL$TABLES;
       92      339        %INCLUDE EL_SUBS_C;
       93      423    1   DCL EL_LOGERRS BIT(1) ALIGNED SYMREF;
       94      424        %INCLUDE CP_6_SUBS;
       95      964        %INCLUDE UM_CP6;
       96     1816
       97     1817    1   DCL ERRCOD UBIN(36);
       98     1818    1   DCL ELCODE SBIN;
       99     1819    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      100     1820
      101     1821        %EL$SCREECH (STCLASS=AUTO);
      102     1827
      103     1828    1   DCL 1 IRM_SCODE SYMREF,
      104     1829    1         2 SCODE BIT(72) UNAL,
      105     1830    1         2 SNAPU# UBIN(9) UNAL;
      106     1831    1   DCL IRM_RTRAPS BIT(36) SYMREF;
      107     1832    1   DCL IRM_SUAUTS UBIN(36) SYMREF;
      108     1833    1   DCL IRM_ASCOUNT UBIN(36) SYMREF;
      109     1834    1   DCL IRM_NODUMP UBIN(36) SYMREF;
      110     1835        %VLR_MONINFO (FPTN=B_MONINFO,STCLASS=SYMREF);
      111     1853        %VLR_SITEINFO (FPTN=B_SITEINFO,STCLASS=SYMREF);
      112     1872
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:20   
      113     1873        %EJECT;
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:21   
      114     1874                                                /* Update B_MONINFO                   */
      115     1875    1      B_MONINFO.SCOUNT# = IRM_ASCOUNT;
      116     1876    1      B_MONINFO.SUA_UTS# = IRM_SUAUTS;
      117     1877
      118     1878                                                /* Make entry in the ERRLOG           */
      119     1879    1      EL$SCREECH.SCODE = IRM_SCODE.SCODE;
      120     1880
      121     1881    1      IF (EL$SCREECH.SCODE.DBITS & '000000000001'O)
      122     1882    1      THEN EL$SCREECH.SNAPU# = IRM_SCODE.SNAPU#;
      123     1883    1      ELSE EL$SCREECH.SNAPU# = 0;
      124     1884
      125     1885    1      EL$SCREECH.SCOUNT = IRM_ASCOUNT;
      126     1886    1      EL$SCREECH.MONID = B_SITEINFO.VERSION#;
      127     1887    1      EL$SCREECH.DUMP  = IRM_NODUMP;
      128     1888    1      EL$SCREECH.RTRAP=IRM_RTRAPS;
      129     1889
      130     1890    1      IF EL$SCREECH.SCODE.ERR.SEV = %SEV_FESNAP# THEN RETURN;
      131     1891                      /* FE snaps get logged by FROG. */
      132     1892    1      IF EL$SCREECH.SCODE.ERR.SEV = %SEV_SCREECH#
      133     1893    1      THEN ELCODE = EL_SCREECH;
      134     1894    1      ELSE IF EL$SCREECH.SCODE.ERR.SEV = %SEV_SUA#
      135     1895    1           THEN ELCODE = EL_SUA;
      136     1896    1           ELSE ELCODE = EL_SNAP;
      137     1897    1      EL_LOGERRS='1'B;
      138     1898    1      EL$SCREECH.REASON = 'UNSTARRED';
      139     1899    1      EL$SCREECH.OPNDAT = ' ';
      140     1900    1      EL$SCREECH.CLSDAT = ' ';
      141     1901    1      CALL ELA$SYSLOG(ELCODE,EL$SCREECH,SIZEW(EL$SCREECH),'0'B,1,ERRCOD);
      142     1902
      143     1903    1      RETURN;
      144     1904    1   END IRM$LOGERR;

PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:22   
--  Include file information  --

   UM_CP6.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure IRM$LOGERR.

   Procedure IRM$LOGERR requires 67 words for executable code.
   Procedure IRM$LOGERR requires 26 words of local(AUTO) storage.

    No errors detected in file IRM$UTIL.:E05TSI    .

PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:23   

 Object Unit name= IRM$LOGERR                                 File name= IRM$UTIL.:E05TOU
 UTS= JUL 29 '97 22:46:50.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  IRM$LOGERR
    1   Proc  even  none    67    103  IRM$LOGERR
    2  RoData even  none     4      4  IRM$LOGERR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  IRM$LOGERR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 ELA$SYSLOG
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     EL_LOGERRS                            IRM_SCODE                             IRM_RTRAPS
     IRM_SUAUTS                            IRM_ASCOUNT                           IRM_NODUMP
     B_MONINFO                             B_SITEINFO                            B_VECTNIL
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:24   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:25   


       76        1        /*T***********************************************************/
       77        2        /*T*                                                         */
       78        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       79        4        /*T*                                                         */
       80        5        /*T***********************************************************/
       81        6
       82        7        /*P*   NAME:   IRM$LOGERR
       83        8
       84        9               PURPOSE:  To make an entry in the errlog following a call
       85       10                         to SCREECH.
       86       11        */
       87       12                                                /*CALLED BY IRM$RCVR2 OR ITZ$RECOVER  */
       88       13
       89       14        IRM$LOGERR: PROC;

     14  1 000000   000000 700200 xent  IRM$LOGERR   TSX0  ! X66_AUTO_0
         1 000001   000032 000000                    ZERO    26,0

       90       15
       91       16        %INCLUDE EL$TABLES;
       92      339        %INCLUDE EL_SUBS_C;
       93      423    1   DCL EL_LOGERRS BIT(1) ALIGNED SYMREF;
       94      424        %INCLUDE CP_6_SUBS;
       95      964        %INCLUDE UM_CP6;
       96     1816
       97     1817    1   DCL ERRCOD UBIN(36);
       98     1818    1   DCL ELCODE SBIN;
       99     1819    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      100     1820
      101     1821        %EL$SCREECH (STCLASS=AUTO);
      102     1827
      103     1828    1   DCL 1 IRM_SCODE SYMREF,
      104     1829    1         2 SCODE BIT(72) UNAL,
      105     1830    1         2 SNAPU# UBIN(9) UNAL;
      106     1831    1   DCL IRM_RTRAPS BIT(36) SYMREF;
      107     1832    1   DCL IRM_SUAUTS UBIN(36) SYMREF;
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:26   
      108     1833    1   DCL IRM_ASCOUNT UBIN(36) SYMREF;
      109     1834    1   DCL IRM_NODUMP UBIN(36) SYMREF;
      110     1835        %VLR_MONINFO (FPTN=B_MONINFO,STCLASS=SYMREF);
      111     1853        %VLR_SITEINFO (FPTN=B_SITEINFO,STCLASS=SYMREF);
      112     1872
      113     1873        %EJECT;
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:27   
      114     1874                                                /* Update B_MONINFO                   */
      115     1875    1      B_MONINFO.SCOUNT# = IRM_ASCOUNT;

   1875  1 000002   000000 235000 xsym               LDA     IRM_ASCOUNT
         1 000003   000002 755000 xsym               STA     B_MONINFO+2

      116     1876    1      B_MONINFO.SUA_UTS# = IRM_SUAUTS;

   1876  1 000004   000000 236000 xsym               LDQ     IRM_SUAUTS
         1 000005   000001 756000 xsym               STQ     B_MONINFO+1

      117     1877
      118     1878                                                /* Make entry in the ERRLOG           */
      119     1879    1      EL$SCREECH.SCODE = IRM_SCODE.SCODE;

   1879  1 000006   000100 100400                    MLR     fill='000'O
         1 000007   000000 000010 xsym               ADSC9   IRM_SCODE                cn=0,n=8
         1 000010   200006 000010                    ADSC9   EL$SCREECH,,AUTO         cn=0,n=8

      120     1880
      121     1881    1      IF (EL$SCREECH.SCODE.DBITS & '000000000001'O)

   1881  1 000011   200007 236100                    LDQ     EL$SCREECH+1,,AUTO
         1 000012   000003 376000 xsym               ANQ     B_VECTNIL+3
         1 000013   000020 600000 1                  TZE     s:1883

      122     1882    1      THEN EL$SCREECH.SNAPU# = IRM_SCODE.SNAPU#;

   1882  1 000014   000002 236000 xsym               LDQ     IRM_SCODE+2
         1 000015   000033 772000                    QRL     27
         1 000016   200010 756100                    STQ     EL$SCREECH+2,,AUTO
         1 000017   000021 710000 1                  TRA     s:1885

      123     1883    1      ELSE EL$SCREECH.SNAPU# = 0;

   1883  1 000020   200010 450100                    STZ     EL$SCREECH+2,,AUTO

PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:28   
      124     1884
      125     1885    1      EL$SCREECH.SCOUNT = IRM_ASCOUNT;

   1885  1 000021   200012 755100                    STA     EL$SCREECH+4,,AUTO

      126     1886    1      EL$SCREECH.MONID = B_SITEINFO.VERSION#;

   1886  1 000022   000064 236000 xsym               LDQ     B_SITEINFO+52
         1 000023   200011 756100                    STQ     EL$SCREECH+3,,AUTO

      127     1887    1      EL$SCREECH.DUMP  = IRM_NODUMP;

   1887  1 000024   000000 235000 xsym               LDA     IRM_NODUMP
         1 000025   200013 755100                    STA     EL$SCREECH+5,,AUTO

      128     1888    1      EL$SCREECH.RTRAP=IRM_RTRAPS;

   1888  1 000026   000000 236000 xsym               LDQ     IRM_RTRAPS
         1 000027   200014 756100                    STQ     EL$SCREECH+6,,AUTO

      129     1889
      130     1890    1      IF EL$SCREECH.SCODE.ERR.SEV = %SEV_FESNAP# THEN RETURN;

   1890  1 000030   200006 236100                    LDQ     EL$SCREECH,,AUTO
         1 000031   000007 376007                    ANQ     7,DL
         1 000032   000003 116007                    CMPQ    3,DL
         1 000033   000035 601000 1                  TNZ     s:1892

   1890  1 000034   000000 702200 xent               TSX2  ! X66_ARET

      131     1891                      /* FE snaps get logged by FROG. */
      132     1892    1      IF EL$SCREECH.SCODE.ERR.SEV = %SEV_SCREECH#

   1892  1 000035   000007 116007                    CMPQ    7,DL
         1 000036   000042 601000 1                  TNZ     s:1894

      133     1893    1      THEN ELCODE = EL_SCREECH;
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:29   

   1893  1 000037   000455 235007                    LDA     301,DL
         1 000040   200004 755100                    STA     ELCODE,,AUTO
         1 000041   000051 710000 1                  TRA     s:1897

      134     1894    1      ELSE IF EL$SCREECH.SCODE.ERR.SEV = %SEV_SUA#

   1894  1 000042   000006 116007                    CMPQ    6,DL
         1 000043   000047 601000 1                  TNZ     s:1896

      135     1895    1           THEN ELCODE = EL_SUA;

   1895  1 000044   000462 235007                    LDA     306,DL
         1 000045   200004 755100                    STA     ELCODE,,AUTO
         1 000046   000051 710000 1                  TRA     s:1897

      136     1896    1           ELSE ELCODE = EL_SNAP;

   1896  1 000047   000463 235007                    LDA     307,DL
         1 000050   200004 755100                    STA     ELCODE,,AUTO

      137     1897    1      EL_LOGERRS='1'B;

   1897  1 000051   400000 236003                    LDQ     -131072,DU
         1 000052   000000 756000 xsym               STQ     EL_LOGERRS

      138     1898    1      EL$SCREECH.REASON = 'UNSTARRED';

   1898  1 000053   040100 100400                    MLR     fill='040'O
         1 000054   000000 000011 0                  ADSC9   0                        cn=0,n=9
         1 000055   200015 000014                    ADSC9   EL$SCREECH+7,,AUTO       cn=0,n=12

      139     1899    1      EL$SCREECH.OPNDAT = ' ';

   1899  1 000056   040100 100400                    MLR     fill='040'O
         1 000057   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000060   200020 000006                    ADSC9   EL$SCREECH+10,,AUTO      cn=0,n=6
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:30   

      140     1900    1      EL$SCREECH.CLSDAT = ' ';

   1900  1 000061   040100 100400                    MLR     fill='040'O
         1 000062   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000063   200021 400006                    ADSC9   EL$SCREECH+11,,AUTO      cn=2,n=6

      141     1901    1      CALL ELA$SYSLOG(ELCODE,EL$SCREECH,SIZEW(EL$SCREECH),'0'B,1,ERRCOD);

   1901  1 000064   200003 630500                    EPPR0   ERRCOD,,AUTO
         1 000065   200031 450500                    STP0    EL$SCREECH+19,,AUTO
         1 000066   000001 236000 2                  LDQ     1
         1 000067   200030 756100                    STQ     EL$SCREECH+18,,AUTO
         1 000070   000002 237000 2                  LDAQ    2
         1 000071   200026 757100                    STAQ    EL$SCREECH+16,,AUTO
         1 000072   200006 631500                    EPPR1   EL$SCREECH,,AUTO
         1 000073   200025 451500                    STP1    EL$SCREECH+15,,AUTO
         1 000074   200004 633500                    EPPR3   ELCODE,,AUTO
         1 000075   200024 453500                    STP3    EL$SCREECH+14,,AUTO
         1 000076   200024 630500                    EPPR0   EL$SCREECH+14,,AUTO
         1 000077   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000100   000000 701000 xent               TSX1    ELA$SYSLOG
         1 000101   000000 011000                    NOP     0

      142     1902
      143     1903    1      RETURN;

   1903  1 000102   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   125116 123124   101122 122105   104040 040040                    UNSTARRED

(unnamed)
 Sect OctLoc
   2     000   000000 000016   000003 006000   000000 006000   000002 006000    ................
      144     1904    1   END IRM$LOGERR;
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:31   

PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:32   
--  Include file information  --

   UM_CP6.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure IRM$LOGERR.
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:33   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(468)   r     1 EL$SCREECH                 4-0-0/w SBIN        r     1 ELCODE
     3-0-0/w UBIN        r     1 ERRCOD

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(540)   r     1 B_MONINFO                  0-0-0/d STRC(2232)  r     1 B_SITEINFO
     0-0-0/w BIT         r     1 EL_LOGERRS                 0-0-0/w UBIN        r     1 IRM_ASCOUNT
     0-0-0/w UBIN        r     1 IRM_NODUMP                 0-0-0/b BIT         r     1 IRM_RTRAPS
     0-0-0/b STRC(81)    r     1 IRM_SCODE                  0-0-0/w UBIN        r     1 IRM_SUAUTS


   Procedure IRM$LOGERR requires 67 words for executable code.
   Procedure IRM$LOGERR requires 26 words of local(AUTO) storage.

    No errors detected in file IRM$UTIL.:E05TSI    .
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:34   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:35   
          MINI XREF LISTING

B_MONINFO.SCOUNT#
      1846**DCL      1875<<ASSIGN
B_MONINFO.SUA_UTS#
      1846**DCL      1876<<ASSIGN
B_SITEINFO.VERSION#
      1867**DCL      1886>>ASSIGN
EL$SCREECH
      1822**DCL      1901<>CALL     1901--CALL
EL$SCREECH.CLSDAT
      1825**DCL      1900<<ASSIGN
EL$SCREECH.DUMP
      1823**DCL      1887<<ASSIGN
EL$SCREECH.MONID
      1823**DCL      1886<<ASSIGN
EL$SCREECH.OPNDAT
      1825**DCL      1899<<ASSIGN
EL$SCREECH.REASON
      1824**DCL      1898<<ASSIGN
EL$SCREECH.RTRAP
      1823**DCL      1888<<ASSIGN
EL$SCREECH.SCODE
      1822**DCL      1879<<ASSIGN
EL$SCREECH.SCODE.DBITS
      1822**DCL      1881>>IF
EL$SCREECH.SCODE.ERR.SEV
      1822**DCL      1890>>IF       1892>>IF       1894>>IF
EL$SCREECH.SCOUNT
      1823**DCL      1885<<ASSIGN
EL$SCREECH.SNAPU#
      1822**DCL      1882<<ASSIGN   1883<<ASSIGN
ELA$SYSLOG
      1819**DCL-ENT  1901--CALL
PL6.E3A0      #002=IRM$LOGERR File=IRM$UTIL.:E05TSI                              TUE 07/29/97 22:46 Page:36   
ELCODE
      1818**DCL      1893<<ASSIGN   1895<<ASSIGN   1896<<ASSIGN   1901<>CALL
EL_LOGERRS
       423**DCL      1897<<ASSIGN
ERRCOD
      1817**DCL      1901<>CALL
IRM_ASCOUNT
      1833**DCL      1875>>ASSIGN   1885>>ASSIGN
IRM_NODUMP
      1834**DCL      1887>>ASSIGN
IRM_RTRAPS
      1831**DCL      1888>>ASSIGN
IRM_SCODE.SCODE
      1829**DCL      1879>>ASSIGN
IRM_SCODE.SNAPU#
      1830**DCL      1882>>ASSIGN
IRM_SUAUTS
      1832**DCL      1876>>ASSIGN
