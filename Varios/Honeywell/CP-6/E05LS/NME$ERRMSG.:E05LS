VERSION E05

PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:1    
        1        1        /*M* NME$ERRMSG - Error message processing procedure.              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           NME$ERRMSG
       10       10
       11       11        PURPOSE:        To output error messages.
       12       12        */
       13       13        /*D*
       14       14        NAME:           NME$ERRMSG
       15       15
       16       16        CALL:           CALL NME$ERRMSG ( errcode, [errdcb#], [f1_], [f2_],
       17       17                                          [f3_], [flag] ) ;
       18       18
       19       19        PARAMETERS:
       20       20        */
       21       21        /*K*
       22       22        errcode         is a VLP_ERRCODE structure that defines the error
       23       23                message to be output.
       24       24        */
       25       25        /*K*
       26       26        errdcb#         is a UBIN WORD that specifies the DCB number of the
       27       27                DCB associated with the error code.
       28       28        */
       29       29        /*K*
       30       30        f1_             is a VECTOR that frames the character string that
       31       31                is to be used for the U1 substitution parameter.  The
       32       32                character string must be in TEXTC format.  The default is NIL.
       33       33        */
       34       34        /*K*
       35       35        f2_             is a VECTOR that frames the character string that
       36       36                is to be used for the U2 substitution parameter.  The
       37       37                character string must be in TEXTC format.  The default is NIL.
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:2    
       38       38        */
       39       39        /*K*
       40       40        f3_             is a VECTOR that frames the character string that
       41       41                is to be used for the U3 substitution parameter.  The
       42       42                character string must be in TEXTC format.  The default is NIL.
       43       43
       44       44        */
       45       45        /*K*
       46       46        flag            is a UBIN WORD that specifies the number of leading
       47       47                asterisks that are to be printed before the error message.
       48       48                The default is 0.
       49       49        */
       50       50        /*D*
       51       51        DESCRIPTION:
       52       52
       53       53        The NME$ERRMSG procedure is used to report error messages.
       54       54        The errcode parameter specifies which error message is to be
       55       55        reported.  The f1_, f2_, and f3_ parameters specify the
       56       56        appropriate string substitution vectors (if any).  The flag
       57       57        parameter specifies the number of leading asterisks (if any).
       58       58
       59       59        If the severity of the errcode (ERRCODE.SEV) is greater than 0,
       60       60        NME$ERRMSG moves the errcode to NMD_PIT.ERRCODE, the severity
       61       61        to NMD_PIT.STEPCC, and sets NMD_PIT.FLAGS.ERRCODE.
       62       62        */
       63       63        %EJECT ;
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:3    
       64       64        NME$ERRMSG:  PROC ( ERRCODE, ERRDCB#, F1_, F2_, F3_, FLAG ) ;
       65       65        /*
       66       66                        Includes
       67       67        */
       68       68        %INCLUDE                CP_6 ;
       69     5627        %INCLUDE                NM_MACRO_M ;
       70     7032        %INCLUDE                XUG_ENTRY ;
       71     7063        %INCLUDE                XU_MACRO_C ;
       72    10169        /*
       73    10170                        Parameters
       74    10171        */
       75    10172                                %VLP_ERRCODE ( FPTN =
       76    10173              ERRCODE           , STCLASS = PARAM
       77    10174                                                                        ) ;
       78    10219    1   DCL 1 ERRDCB#           UBIN WORD ALIGNED PARAM ;
       79    10220    1   DCL 1 F1_               VECTOR ALIGNED PARAM ;
       80    10221    1   DCL 1 F2_               VECTOR ALIGNED PARAM ;
       81    10222    1   DCL 1 F3_               VECTOR ALIGNED PARAM ;
       82    10223    1   DCL 1 FLAG              UBIN WORD PARAM ;
       83    10224        /*
       84    10225                        Variables
       85    10226        */
       86    10227                                %NMD_PIT ( FPTN =
       87    10228              NMD_PIT           , STCLASS=SYMREF
       88    10229                                                                        ) ;
       89    10682                                %XUG_GETCMD ( NAME =
       90    10683              XUG_GETCMD        , STCLASS = SYMREF
       91    10684                                                                        ) ;
       92    11022        %EJECT ;
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:4    
       93    11023        /*
       94    11024        Move the error code into the XUG_GETCMD structure.  If they have
       95    11025        been specified, move the DCB number, character substitution vectors,
       96    11026        and number of asterisks into the structure so that the error can
       97    11027        be reported correctly.
       98    11028        */
       99    11029    1           XUG_GETCMD.ERR_CODE = ERRCODE ;
      100    11030    1           IF  ADDR ( ERRDCB# ) ~= ADDR ( NIL )  THEN
      101    11031    1               XUG_GETCMD.ERRDCB# = ERRDCB# ;
      102    11032    1           ELSE
      103    11033    1               XUG_GETCMD.ERRDCB# = DCBNUM ( NIL ) ;
      104    11034    1           IF  ADDR ( F1_ ) ~= ADDR ( NIL )  THEN
      105    11035    1               XUG_GETCMD.F1_ = F1_ ;
      106    11036    1           ELSE
      107    11037    1               XUG_GETCMD.F1_ = VECTOR ( NIL ) ;
      108    11038    1           IF  ADDR ( F2_ ) ~= ADDR ( NIL )  THEN
      109    11039    1               XUG_GETCMD.F2_ = F2_ ;
      110    11040    1           ELSE
      111    11041    1               XUG_GETCMD.F2_ = VECTOR ( NIL ) ;
      112    11042    1           IF  ADDR ( F3_ ) ~= ADDR ( NIL )  THEN
      113    11043    1               XUG_GETCMD.F3_ = F3_ ;
      114    11044    1           ELSE
      115    11045    1               XUG_GETCMD.F3_ = VECTOR ( NIL ) ;
      116    11046    1           IF  ADDR ( FLAG ) ~= ADDR ( NIL )  THEN
      117    11047    1               XUG_GETCMD.FLGLEV# = FLAG ;
      118    11048    1           ELSE
      119    11049    1               XUG_GETCMD.FLGLEV# = 0 ;
      120    11050        /*
      121    11051        If the severity of the errcode is greater than 0, move the errcode
      122    11052        and severity to NMD_PIT.  Also set the flag to indicate that
      123    11053        an error has been detected.  (Do this before calling XUG$ERRMSG
      124    11054        because ERRCODE may be on the altret stack and XUG$ERRMSG will
      125    11055        change the altret stack.)
      126    11056        */
      127    11057    2           IF  ERRCODE.SEV > 0  THEN DO ;
      128    11058    2               NMD_PIT.ERRCODE = ERRCODE ;
      129    11059    2               NMD_PIT.FLAGS.ERRCODE# = %YES# ;
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:5    
      130    11060    2               NMD_PIT.STEPCC# = ERRCODE.SEV ;
      131    11061    2               END ;
      132    11062        /*
      133    11063        Call the XUG$ERRMSG routine to report the error message.
      134    11064        */
      135    11065    1           CALL XUG$ERRMSG ( XUG_GETCMD ) ;
      136    11066        /*
      137    11067        Return to the calling procedure.
      138    11068        */
      139    11069    1           RETURN ;
      140    11070    1           END NME$ERRMSG ;

PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:6    
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NME$ERRMSG.

   Procedure NME$ERRMSG requires 70 words for executable code.
   Procedure NME$ERRMSG requires 10 words of local(AUTO) storage.

    No errors detected in file NME$ERRMSG.:E05TSI    .

PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:7    

 Object Unit name= NME$ERRMSG                                 File name= NME$ERRMSG.:E05TOU
 UTS= JUL 30 '97 03:47:57.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    70    106  NME$ERRMSG
    2  RoData even  none     3      3  NME$ERRMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        6  NME$ERRMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XUG$ERRMSG
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  NMD_PIT                               XUG_GETCMD
     B_VECTNIL
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:8    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:9    


        1        1        /*M* NME$ERRMSG - Error message processing procedure.              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           NME$ERRMSG
       10       10
       11       11        PURPOSE:        To output error messages.
       12       12        */
       13       13        /*D*
       14       14        NAME:           NME$ERRMSG
       15       15
       16       16        CALL:           CALL NME$ERRMSG ( errcode, [errdcb#], [f1_], [f2_],
       17       17                                          [f3_], [flag] ) ;
       18       18
       19       19        PARAMETERS:
       20       20        */
       21       21        /*K*
       22       22        errcode         is a VLP_ERRCODE structure that defines the error
       23       23                message to be output.
       24       24        */
       25       25        /*K*
       26       26        errdcb#         is a UBIN WORD that specifies the DCB number of the
       27       27                DCB associated with the error code.
       28       28        */
       29       29        /*K*
       30       30        f1_             is a VECTOR that frames the character string that
       31       31                is to be used for the U1 substitution parameter.  The
       32       32                character string must be in TEXTC format.  The default is NIL.
       33       33        */
       34       34        /*K*
       35       35        f2_             is a VECTOR that frames the character string that
       36       36                is to be used for the U2 substitution parameter.  The
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:10   
       37       37                character string must be in TEXTC format.  The default is NIL.
       38       38        */
       39       39        /*K*
       40       40        f3_             is a VECTOR that frames the character string that
       41       41                is to be used for the U3 substitution parameter.  The
       42       42                character string must be in TEXTC format.  The default is NIL.
       43       43
       44       44        */
       45       45        /*K*
       46       46        flag            is a UBIN WORD that specifies the number of leading
       47       47                asterisks that are to be printed before the error message.
       48       48                The default is 0.
       49       49        */
       50       50        /*D*
       51       51        DESCRIPTION:
       52       52
       53       53        The NME$ERRMSG procedure is used to report error messages.
       54       54        The errcode parameter specifies which error message is to be
       55       55        reported.  The f1_, f2_, and f3_ parameters specify the
       56       56        appropriate string substitution vectors (if any).  The flag
       57       57        parameter specifies the number of leading asterisks (if any).
       58       58
       59       59        If the severity of the errcode (ERRCODE.SEV) is greater than 0,
       60       60        NME$ERRMSG moves the errcode to NMD_PIT.ERRCODE, the severity
       61       61        to NMD_PIT.STEPCC, and sets NMD_PIT.FLAGS.ERRCODE.
       62       62        */
       63       63        %EJECT ;
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:11   
       64       64        NME$ERRMSG:  PROC ( ERRCODE, ERRDCB#, F1_, F2_, F3_, FLAG ) ;

     64  1 000000   000000 700200 xent  NME$ERRMSG   TSX0  ! X66_AUTO_N
         1 000001   000012 000006                    ZERO    10,6

       65       65        /*
       66       66                        Includes
       67       67        */
       68       68        %INCLUDE                CP_6 ;
       69     5627        %INCLUDE                NM_MACRO_M ;
       70     7032        %INCLUDE                XUG_ENTRY ;
       71     7063        %INCLUDE                XU_MACRO_C ;
       72    10169        /*
       73    10170                        Parameters
       74    10171        */
       75    10172                                %VLP_ERRCODE ( FPTN =
       76    10173              ERRCODE           , STCLASS = PARAM
       77    10174                                                                        ) ;
       78    10219    1   DCL 1 ERRDCB#           UBIN WORD ALIGNED PARAM ;
       79    10220    1   DCL 1 F1_               VECTOR ALIGNED PARAM ;
       80    10221    1   DCL 1 F2_               VECTOR ALIGNED PARAM ;
       81    10222    1   DCL 1 F3_               VECTOR ALIGNED PARAM ;
       82    10223    1   DCL 1 FLAG              UBIN WORD PARAM ;
       83    10224        /*
       84    10225                        Variables
       85    10226        */
       86    10227                                %NMD_PIT ( FPTN =
       87    10228              NMD_PIT           , STCLASS=SYMREF
       88    10229                                                                        ) ;
       89    10682                                %XUG_GETCMD ( NAME =
       90    10683              XUG_GETCMD        , STCLASS = SYMREF
       91    10684                                                                        ) ;
       92    11022        %EJECT ;
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:12   
       93    11023        /*
       94    11024        Move the error code into the XUG_GETCMD structure.  If they have
       95    11025        been specified, move the DCB number, character substitution vectors,
       96    11026        and number of asterisks into the structure so that the error can
       97    11027        be reported correctly.
       98    11028        */
       99    11029    1           XUG_GETCMD.ERR_CODE = ERRCODE ;

  11029  1 000002   200003 470500                    LDP0    @ERRCODE,,AUTO
         1 000003   000000 236100                    LDQ     0,,PR0
         1 000004   000010 756000 xsym               STQ     XUG_GETCMD+8

      100    11030    1           IF  ADDR ( ERRDCB# ) ~= ADDR ( NIL )  THEN

  11030  1 000005   200004 236100                    LDQ     @ERRDCB#,,AUTO
         1 000006   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000007   000014 600000 1                  TZE     s:11033

      101    11031    1               XUG_GETCMD.ERRDCB# = ERRDCB# ;

  11031  1 000010   200004 471500                    LDP1    @ERRDCB#,,AUTO
         1 000011   100000 235100                    LDA     0,,PR1
         1 000012   000011 755000 xsym               STA     XUG_GETCMD+9
         1 000013   000015 710000 1                  TRA     s:11034

      102    11032    1           ELSE
      103    11033    1               XUG_GETCMD.ERRDCB# = DCBNUM ( NIL ) ;

  11033  1 000014   000011 450000 xsym               STZ     XUG_GETCMD+9

      104    11034    1           IF  ADDR ( F1_ ) ~= ADDR ( NIL )  THEN

  11034  1 000015   200005 236100                    LDQ     @F1_,,AUTO
         1 000016   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000017   000025 600000 1                  TZE     s:11037

      105    11035    1               XUG_GETCMD.F1_ = F1_ ;
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:13   

  11035  1 000020   200005 471500                    LDP1    @F1_,,AUTO
         1 000021   000000 100500                    MLR     fill='000'O
         1 000022   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 000023   000017 000010 xsym               ADSC9   XUG_GETCMD+15            cn=0,n=8
         1 000024   000030 710000 1                  TRA     s:11038

      106    11036    1           ELSE
      107    11037    1               XUG_GETCMD.F1_ = VECTOR ( NIL ) ;

  11037  1 000025   000000 237000 2                  LDAQ    0
         1 000026   000017 755000 xsym               STA     XUG_GETCMD+15
         1 000027   000020 756000 xsym               STQ     XUG_GETCMD+16

      108    11038    1           IF  ADDR ( F2_ ) ~= ADDR ( NIL )  THEN

  11038  1 000030   200006 236100                    LDQ     @F2_,,AUTO
         1 000031   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000032   000040 600000 1                  TZE     s:11041

      109    11039    1               XUG_GETCMD.F2_ = F2_ ;

  11039  1 000033   200006 471500                    LDP1    @F2_,,AUTO
         1 000034   000000 100500                    MLR     fill='000'O
         1 000035   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 000036   000021 000010 xsym               ADSC9   XUG_GETCMD+17            cn=0,n=8
         1 000037   000043 710000 1                  TRA     s:11042

      110    11040    1           ELSE
      111    11041    1               XUG_GETCMD.F2_ = VECTOR ( NIL ) ;

  11041  1 000040   000000 237000 2                  LDAQ    0
         1 000041   000021 755000 xsym               STA     XUG_GETCMD+17
         1 000042   000022 756000 xsym               STQ     XUG_GETCMD+18

      112    11042    1           IF  ADDR ( F3_ ) ~= ADDR ( NIL )  THEN

PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:14   
  11042  1 000043   200007 236100                    LDQ     @F3_,,AUTO
         1 000044   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000045   000053 600000 1                  TZE     s:11045

      113    11043    1               XUG_GETCMD.F3_ = F3_ ;

  11043  1 000046   200007 471500                    LDP1    @F3_,,AUTO
         1 000047   000000 100500                    MLR     fill='000'O
         1 000050   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 000051   000023 000010 xsym               ADSC9   XUG_GETCMD+19            cn=0,n=8
         1 000052   000056 710000 1                  TRA     s:11046

      114    11044    1           ELSE
      115    11045    1               XUG_GETCMD.F3_ = VECTOR ( NIL ) ;

  11045  1 000053   000000 237000 2                  LDAQ    0
         1 000054   000023 755000 xsym               STA     XUG_GETCMD+19
         1 000055   000024 756000 xsym               STQ     XUG_GETCMD+20

      116    11046    1           IF  ADDR ( FLAG ) ~= ADDR ( NIL )  THEN

  11046  1 000056   200010 236100                    LDQ     @FLAG,,AUTO
         1 000057   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000060   000066 600000 1                  TZE     s:11049

      117    11047    1               XUG_GETCMD.FLGLEV# = FLAG ;

  11047  1 000061   200010 471500                    LDP1    @FLAG,,AUTO
         1 000062   100000 236100                    LDQ     0,,PR1
         1 000063   000022 736000                    QLS     18
         1 000064   000006 552020 xsym               STBQ    XUG_GETCMD+6,'20'O
         1 000065   000070 710000 1                  TRA     s:11057

      118    11048    1           ELSE
      119    11049    1               XUG_GETCMD.FLGLEV# = 0 ;

  11049  1 000066   000000 236003                    LDQ     0,DU
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:15   
         1 000067   000006 552020 xsym               STBQ    XUG_GETCMD+6,'20'O

      120    11050        /*
      121    11051        If the severity of the errcode is greater than 0, move the errcode
      122    11052        and severity to NMD_PIT.  Also set the flag to indicate that
      123    11053        an error has been detected.  (Do this before calling XUG$ERRMSG
      124    11054        because ERRCODE may be on the altret stack and XUG$ERRMSG will
      125    11055        change the altret stack.)
      126    11056        */
      127    11057    2           IF  ERRCODE.SEV > 0  THEN DO ;

  11057  1 000070   000000 236100                    LDQ     0,,PR0
         1 000071   000007 316007                    CANQ    7,DL
         1 000072   000101 600000 1                  TZE     s:11065

      128    11058    2               NMD_PIT.ERRCODE = ERRCODE ;

  11058  1 000073   000271 756000 xsym               STQ     NMD_PIT+185

      129    11059    2               NMD_PIT.FLAGS.ERRCODE# = %YES# ;

  11059  1 000074   100000 236003                    LDQ     32768,DU
         1 000075   000273 256000 xsym               ORSQ    NMD_PIT+187

      130    11060    2               NMD_PIT.STEPCC# = ERRCODE.SEV ;

  11060  1 000076   000000 236100                    LDQ     0,,PR0
         1 000077   000007 376007                    ANQ     7,DL
         1 000100   000366 756000 xsym               STQ     NMD_PIT+246

      131    11061    2               END ;

      132    11062        /*
      133    11063        Call the XUG$ERRMSG routine to report the error message.
      134    11064        */
      135    11065    1           CALL XUG$ERRMSG ( XUG_GETCMD ) ;

PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:16   
  11065  1 000101   000002 630400 2                  EPPR0   2
         1 000102   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000103   000000 701000 xent               TSX1    XUG$ERRMSG
         1 000104   000000 011000                    NOP     0

      136    11066        /*
      137    11067        Return to the calling procedure.
      138    11068        */
      139    11069    1           RETURN ;

  11069  1 000105   000000 702200 xent               TSX2  ! X66_ARET
      140    11070    1           END NME$ERRMSG ;

PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:17   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure NME$ERRMSG.
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:18   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERRCODE                   4-0-0/w PTR         r     1 @ERRDCB#
     5-0-0/w PTR         r     1 @F1_                       6-0-0/w PTR         r     1 @F2_
     7-0-0/w PTR         r     1 @F3_                      10-0-0/w PTR         r     1 @FLAG
    *0-0-0/w STRC        r     1 ERRCODE                   *0-0-0/w UBIN        r     1 ERRDCB#
    *0-0-0/w VECT        r     1 F1_                       *0-0-0/w VECT        r     1 F2_
    *0-0-0/w VECT        r     1 F3_                       *0-0-0/w UBIN        r     1 FLAG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8892)  r     1 NMD_PIT                    0-0-0/d STRC(1512)  r     1 XUG_GETCMD


   Procedure NME$ERRMSG requires 70 words for executable code.
   Procedure NME$ERRMSG requires 10 words of local(AUTO) storage.

    No errors detected in file NME$ERRMSG.:E05TSI    .
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:20   
          MINI XREF LISTING

ERRCODE
     10186**DCL        64--PROC    11029>>ASSIGN  11058>>ASSIGN
ERRCODE.SEV
     10216**DCL     11057>>IF      11060>>ASSIGN
ERRDCB#
     10219**DCL        64--PROC    11030--IF      11031>>ASSIGN
F1_
     10220**DCL        64--PROC    11034--IF      11035>>ASSIGN
F2_
     10221**DCL        64--PROC    11038--IF      11039>>ASSIGN
F3_
     10222**DCL        64--PROC    11042--IF      11043>>ASSIGN
FLAG
     10223**DCL        64--PROC    11046--IF      11047>>ASSIGN
NMD_PIT.ERRCODE
     10430**DCL     11058<<ASSIGN
NMD_PIT.FLAGS.ERRCODE#
     10488**DCL     11059<<ASSIGN
NMD_PIT.STEPCC#
     10680**DCL     11060<<ASSIGN
XUG$ERRMSG
      7046**DCL-ENT 11065--CALL
XUG_GETCMD
     10697**DCL     11065<>CALL
XUG_GETCMD.ERRDCB#
     10856**DCL     11031<<ASSIGN  11033<<ASSIGN
XUG_GETCMD.ERR_CODE
     10845**DCL     11029<<ASSIGN
XUG_GETCMD.F1_
     10894**DCL     11035<<ASSIGN  11037<<ASSIGN
XUG_GETCMD.F2_
     10898**DCL     11039<<ASSIGN  11041<<ASSIGN
PL6.E3A0      #001=NME$ERRMSG File=NME$ERRMSG.:E05TSI                            WED 07/30/97 03:47 Page:21   
XUG_GETCMD.F3_
     10902**DCL     11043<<ASSIGN  11045<<ASSIGN
XUG_GETCMD.FLGLEV#
     10802**DCL     11047<<ASSIGN  11049<<ASSIGN
XUG_GETCMD.OUT$
     10702**DCL     10708--REDEF
