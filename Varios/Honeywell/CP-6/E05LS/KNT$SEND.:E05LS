VERSION E05

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:1    
        1        1        /*M* KNT$SEND - Send session messages to network.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
        8        8
        9        9        KNT$SEND: PROC(KN$NETPARM) ALTRET;
       10       10
       11       11        %INCLUDE GH_GATE_M;
       12       52        %INCLUDE GH_SCHD_M;
       13      196        %INCLUDE K_ADDRESS_M;
       14      699        %INCLUDE K_INTERFACE_M;
       15     1108        %INCLUDE K_TRANSPORT_E;
       16     1433        %INCLUDE K_TRANSPORT_M;
       17     3217 S      %INCLUDE KI_CP6;
       18     3218        %INCLUDE KN_DATA_M;
       19     5004        %INCLUDE KNH_MACRO_C;
       20     5287
       21     5288                                                /* Input parameters                   */
       22     5289        %KN$NETPARM;
       23     5442                                                /* Auto Storage                       */
       24     5443    1   DCL ITEMP1 SBIN;
       25     5444    1   DCL EVENT SBIN;
       26     5445    1   DCL CTX$ PTR;
       27     5446    1   DCL FPT$ PTR;
       28     5447    1   DCL QQQ$ PTR;
       29     5448    1   DCL TCTX_ID SBIN;
       30     5449
       31     5450        %K$TPDU_DT (STCLASS=AUTO);
       32     5500        %K$TPDU_DT_0 (STCLASS=AUTO);
       33     5545        %K$TPDU_DT_EXT (STCLASS=AUTO);
       34     5609
       35     5610    1   DCL ENTRY_SWITCH UBIN;
       36     5611        %EQU PRIMARY=0;
       37     5612        %EQU SEND_4HOST=1;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:2    
       38     5613
       39     5614                                                /* External Procedures                */
       40     5615    1   DCL KNA$GETTCTX ENTRY(1) ALTRET;
       41     5616    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
       42     5617    1   DCL KNH$SEND ENTRY(1) ALTRET;
       43     5618    1   DCL KNN$SEND ENTRY(1) ALTRET;
       44     5619    1   DCL KNT$SAVE_DT ENTRY(1) ALTRET;
       45     5620    1   DCL KNT$SAVE_ED ENTRY(1) ALTRET;
       46     5621    1   DCL KNT$SAVE_CLASS0 ENTRY(1) ALTRET;
       47     5622    1   DCL KNT$SAVE_CLASS2 ENTRY(1) ALTRET;
       48     5623    1   DCL KNT$SEND_CC ENTRY(1) ALTRET;
       49     5624    1   DCL KNT$SEND_CR ENTRY(1) ALTRET;
       50     5625    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
       51     5626    1   DCL KNT$SEND_DT ENTRY(1) ALTRET;
       52     5627    1   DCL KNT$SEND_ED ENTRY(1) ALTRET;
       53     5628    1   DCL GHS$SET_TMR ENTRY(1);
       54     5629    1   DCL GHS$CANCEL_TMR ENTRY(1);
       55     5630    1   DCL KNT$TR_SEND ENTRY(1);
       56     5631    1   DCL SCREECH ENTRY(1);
       57     5632
       58     5633                                                /* External Data                      */
       59     5634    1   DCL KNT_DEFAULT_CHKSUM UBIN SYMREF;
       60     5635    1   DCL KNT_DEFAULT_TPDUSZ UBIN SYMREF;
       61     5636    1   DCL KNT_WINDOW_NORMAL UBIN SYMREF;
       62     5637    1   DCL KN_TCTX$$ PTR SYMREF;
       63     5638    1   DCL KN_DCT$$ PTR SYMREF;
       64     5639    1   DCL KNT_ERROR_SCREECH UBIN SYMREF;
       65     5640    1   DCL KNT_SCODE UBIN(32) SYMREF;
       66     5641
       67     5642                                                /* Internal Data                      */
       68     5643        %GATE (FPTN=KNT_LOCKOUT, STCLASS="STATIC SYMDEF");
       69     5662
       70     5663                                                /* Based Structures                   */
       71     5664        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
       72     6571    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
       73     6572    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
       74     6573        %KN$LDCT (STCLASS="BASED(KN$NETPARM.LDCT$)");
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:3    
       75     6818        %FPT_CONNECT (STCLASS="BASED(FPT$)");
       76     6887        %K$TPDU_DT_0 (NAME=B$TPDU_DT_0,STCLASS=BASED,ALGN=CALIGNED);
       77     6932
       78     6933        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:4    
       79     6934
       80     6935        /*F* NAME: KNT$SEND Outbound Messages
       81     6936
       82     6937        KNT$SEND is the interface for the higher layers to the
       83     6938        transport layer. It is called from Fep CP-6 Session (KNS$SEND)
       84     6939        or from KNT$SEND_4HOST with the following parameters:
       85     6940
       86     6941        .fif
       87     6942        }    KN$NETPARM.FUNCTION
       88     6943        }                - Contains the function to be performed:
       89     6944        }                  When called from local session for a CP-6 connection:
       90     6945        }                                     KN_FCN_INIT
       91     6946        }                                     KN_FCN_DATA
       92     6947        }
       93     6948        }                  When called for host transport on a CP-6 connection:
       94     6949        }                                     KN_FCN_DATA
       95     6950        }
       96     6951        }                  When called for host transport on a OSI connection:
       97     6952        }                                     K_NDATA
       98     6953        }                                     K_TEXPD_DATA_REQ
       99     6954        }
      100     6955        }    KN$NETPARM.TCTX_ID
      101     6956        }                - Contains the index for the transport context block.
      102     6957        }
      103     6958        }    KN$NETPARM.LDCT$
      104     6959        }                - Contains the address of the session connection LDCT
      105     6960        }                  if this is call from local session.
      106     6961        }
      107     6962        }    KN$NETPARM.FPT$
      108     6963        }                - Contains the address of FPT_CONNECT
      109     6964        }                  only used when FUNCTION is KN_FCN_INIT
      110     6965        }
      111     6966        }                  FPT_CONNECT.RLCID.NODE contains the node#
      112     6967        }                  of the other endpoint to be connected.
      113     6968        .fin
      114     6969
      115     6970        The action taken is dependent on the FUNCTION code.
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:5    
      116     6971        */
      117     6972
      118     6973        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:6    
      119     6974
      120     6975    1      ENTRY_SWITCH = %PRIMARY;
      121     6976    1      GOTO COMMON;
      122     6977
      123     6978    1   KNT$SEND_HOST_DATA: ENTRY(KN$NETPARM) ALTRET;
      124     6979    1      ENTRY_SWITCH = %SEND_4HOST;
      125     6980
      126     6981    1   COMMON: ;
      127     6982    1      FPT$ = KN$NETPARM.FPT$;
      128     6983    1      QQQ$ = KN$NETPARM.LDCT$;
      129     6984
      130     6985    1      TCTX_ID = KN$NETPARM.TCTX_ID;
      131     6986    1      CTX$ = KN$TCTX$(TCTX_ID);
      132     6987    1      KN$NETPARM.TCTX$ = CTX$;
      133     6988
      134     6989           %LOCK (G=KNT_LOCKOUT);
      135     6996
      136     6997    2      DO CASE ( KN$NETPARM.FUNCTION );
      137     6998
      138     6999        /* Currently, OSI connections are not initiated from any handlers
      139     7000           or Fprgs.  So when the function is KN_FCN_INIT, the connection
      140     7001           is always initialized as a CP-6 Class 4 transport connection.
      141     7002
      142     7003           A TCTX block is allocated and set to state WFCC.  The TPCU_CR
      143     7004           is composed and sent to the remote endpoint via a call to
      144     7005           KNT$SEND_CR.
      145     7006        */
      146     7007    2       CASE( %KN_FCN_INIT);
      147     7008    2         CALL KNA$GETTCTX(CTX$)
      148     7009    3         WHENALTRETURN DO;
      149     7010    3              KN$NETPARM.ERRCODE = %KN_ERR_NOTCTX;
      150     7011
      151     7012    3   UNLOCK_N_ALTRET: ;
      152     7013    3              KN$NETPARM.LDCT$ = QQQ$;
      153     7014                   %UNLOCK (G=KNT_LOCKOUT);
      154     7021    3              ALTRETURN;
      155     7022    3              END;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:7    
      156     7023
      157     7024    2         KN$TCTX.NODE = FPT_CONNECT.RLCID.NODE;
      158     7025    2         KN$NETPARM.NODE = KN$TCTX.NODE;
      159     7026
      160     7027    2         TCTX_ID = KN$TCTX.SRC_REF;
      161     7028    2         KN$NETPARM.TCTX_ID = TCTX_ID;
      162     7029    2         KN$NETPARM.TCTX$ = CTX$;
      163     7030
      164     7031    2         IF KN$LDCT.CONN_TYPE ~= %KN_CNTYPE_LINK
      165     7032    3         THEN DO;
      166     7033    3              KN$LDCT.TRANSPORT_ID = KN$TCTX.SRC_REF;
      167     7034    3              END;
      168     7035
      169     7036    2         KN$TCTX.PRIMARY = '1'B;
      170     7037    2         KN$TCTX.OUTBOUND = '1'B;
      171     7038    2         KN$TCTX.SEND_RETRY_COUNT = 1;
      172     7039    2         KN$TCTX.QOS = FPT_CONNECT.SERVICE;
      173     7040    2         KN$TCTX.CLASS = FPT_CONNECT.CLASS;
      174     7041    2         KN$TCTX.OPTION = FPT_CONNECT.TR_FLAGS;
      175     7042    2         KN$TCTX.OPTION.OSI = '0'B;
      176     7043    2         KN$TCTX.OPTION.EXPEDITED = '0'B;
      177     7044
      178     7045    2         IF KN$TCTX.OPTION.EXTENDED = '0'B
      179     7046    3         THEN DO;           /*gettctx set up for extended format - the default*/
      180     7047    3              KN$TCTX.MAXSEQ = 127;
      181     7048    3              KN$TCTX.RCV_WINDOW_SZ = KNT_WINDOW_NORMAL;
      182     7049    3              KN$TCTX.RECV_UWE = KN$TCTX.RCV_WINDOW_SZ;
      183     7050    3              END;
      184     7051
      185     7052    2         IF KNT_DEFAULT_CHKSUM=0 THEN KN$TCTX.OPTION.CHKSUM='0'B;
      186     7053
      187     7054    2         IF KNT_DEFAULT_TPDUSZ >= %K_TPDUSIZE_128
      188     7055    2           AND KNT_DEFAULT_TPDUSZ <= %K_TPDUSIZE_8192
      189     7056    2         THEN KN$TCTX.TPDUSZ_PARM = KNT_DEFAULT_TPDUSZ;
      190     7057    2         ELSE KN$TCTX.TPDUSZ_PARM = %K_TPDUSIZE_8192;
      191     7058
      192     7059    2         IF KN$TCTX.CLASS = 4
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:8    
      193     7060    2         THEN CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);
      194     7061
      195     7062    2         KN$TCTX.STATE = %K_TSTATE_WFCC;
      196     7063
      197     7064    2         CALL KNT$SEND_CR(KN$NETPARM)
      198     7065    3         WHENALTRETURN DO;
      199     7066    3              CALL KNA$RELTCTX(CTX$);
      200     7067    3              GOTO UNLOCK_N_ALTRET;
      201     7068    3              END;
      202     7069
      203     7070    2   UNLOCK_N_RETURN: ;
      204     7071    2         KN$NETPARM.LDCT$ = QQQ$;
      205     7072              %UNLOCK (G=KNT_LOCKOUT);
      206     7079    2         RETURN;
      207     7080
      208     7081        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:9    
      209     7082        /* When the function is KN_FCN_DATA or K_NDATA, the method of sending
      210     7083           the data to the remote end point is dependent on the transport class
      211     7084           and the type of network connection to be used, connection-oriented(CONS)
      212     7085           or connection-less (CLNS).
      213     7086        */
      214     7087
      215     7088    2       CASE (%KN_FCN_DATA, %K_NDATA);
      216     7089
      217     7090    2         IF KN$NETPARM.TCTX_ID = 0
      218     7091    3         THEN DO;
      219     7092    3              CALL SCREECH(KNT_SCODE);
      220     7093    3              END;
      221     7094
      222     7095    2         KN$NETPARM.THDR$ = ADDR(K$TPDU_DT_EXT); /* for knt$save to use*/
      223     7096    2         K$TPDU_DT_EXT = '0'B;
      224     7097
      225     7098        /* When the Class 4 transport state is OPEN and session requests that
      226     7099           we send data or expedited data, we call KNT$SAVE to get a buffer in
      227     7100           the transport pool, save the SPDU there, and link the buffer via
      228     7101           KN$TCTX.SEND_(E)HEAD$.
      229     7102
      230     7103           The message is sent on to network by calling KNT$SEND_DT or KNT$SEND_ED.
      231     7104           These routines call the appropriate network or link layer routine
      232     7105           depending on the type of network connection that is being used.
      233     7106        */
      234     7107    2         IF KN$TCTX.CLASS = 4
      235     7108    3         THEN DO;
      236     7109    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN
      237     7110    4              THEN DO;
      238     7111    4                   CALL KNT$SAVE_DT(KN$NETPARM)
      239     7112    5                   WHENRETURN DO;
      240     7113    5                        CALL KNT$SEND_DT(KN$NETPARM);
      241     7114    5                        GOTO UNLOCK_N_RETURN;
      242     7115    5                        END;
      243     7116
      244     7117    5                   WHENALTRETURN DO;
      245     7118    5   CANT_SAVE_DATA:
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:10   
      246     7119    5                        IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
      247     7120    5                        THEN GOTO UNLOCK_N_ALTRET; /*no buf available-knt_wait_head$*/
      248     7121
      249     7122    5                        KN$TCTX.FLOW_CONTROLLED = '1'B;
      250     7123
      251     7124    5                        IF KN$TCTX.PRIMARY
      252     7125    5                        THEN KN$NETPARM.ERRCODE=0; /*reset for kns$send*/
      253     7126
      254     7127    5                        GOTO UNLOCK_N_ALTRET; /*altret to send_4host or kns$send*/
      255     7128    5                        END;
      256     7129    4                   END/*do if class 4 open*/;
      257     7130
      258     7131        /* When the Class 4 transport state is AKWAIT, and this is an
      259     7132           intermediate connection, the data is buffered.  For primary
      260     7133           connections in the AKWAIT state, the LDCT is queued on the
      261     7134           transport context block (KN$TCTX.LNK$).
      262     7135        */
      263     7136    3              IF (KN$TCTX.STATE = %K_TSTATE_AKWAIT)
      264     7137    4              THEN DO;
      265     7138    4                   IF KN$TCTX.PRIMARY
      266     7139    4                   THEN GOTO LOCAL_NOT_OPEN;
      267     7140
      268     7141    4                   KN$TCTX.SERR.NOT_OPEN = KN$TCTX.SERR.NOT_OPEN +1;
      269     7142    4                   CALL KNT$SAVE_DT(KN$NETPARM) ALTRET(CANT_SAVE_DATA);
      270     7143    4   SIGNAL_FLOW_STOP: ;
      271     7144    4                   KN$TCTX.FLOW_CONTROLLED = '1'B;
      272     7145    4                   GOTO UNLOCK_N_ALTRET;   /*altret to send_4host*/
      273     7146    4                   END/*do if class 4 akwait*/;
      274     7147    3              END/*do if class 4*/;
      275     7148        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:11   
      276     7149        /* When the state is WFCC, and this is a primary connection,
      277     7150           the LDCT is queued on the transport context block.  If attempting
      278     7151           to send data on an intermediate transport connection in the WFCC
      279     7152           state, it is a screech condition.
      280     7153        */
      281     7154
      282     7155    2   CHECK_TSTATE:
      283     7156    2         IF KN$TCTX.STATE ~= %K_TSTATE_OPEN
      284     7157    3         THEN DO;
      285     7158    3              IF KN$TCTX.PRIMARY
      286     7159    4              THEN DO;
      287     7160    4                   IF (KN$TCTX.STATE=%K_TSTATE_WFCC OR KN$TCTX.STATE=%K_TSTATE_WFCC_R)
      288     7161    5                   THEN DO;
      289     7162    5   LOCAL_NOT_OPEN:
      290     7163    5                        KN$TCTX.WAIT_4OPEN = '1'B;
      291     7164    5                        KN$TCTX.SERR.NOT_OPEN = KN$TCTX.SERR.NOT_OPEN +1;
      292     7165
      293     7166    5                        IF NOT(KN$LDCT.FLAGS.QUEUED)
      294     7167    6                        THEN DO;
      295     7168    6                             KN$LDCT.FLAGS.QUEUED = '1'B;
      296     7169    6                             KN$LDCT.LNK$ = KN$TCTX.LNK$;
      297     7170    6                             KN$TCTX.LNK$ = KN$NETPARM.LDCT$;
      298     7171    6                             END;
      299     7172    5                        KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;
      300     7173    5                        GOTO UNLOCK_N_ALTRET;
      301     7174    5                        END/*do if wfcc*/;
      302     7175    4                   END/*do if primary connection*/;
      303     7176
      304     7177    3   REPORT_BAD_TSTATE:
      305     7178    3              IF KN$TCTX.STATE = %K_TSTATE_CLOSING
      306     7179    3                OR KN$TCTX.STATE = %K_TSTATE_REFWAIT
      307     7180    3              THEN GOTO UNLOCK_N_RETURN;
      308     7181
      309     7182    3              ELSE GOTO SCREECH_CHECK;
      310     7183    3              END/*do if state not open*/;
      311     7184
      312     7185
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:12   
      313     7186        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:13   
      314     7187        /* For Class 2 and Class 0 connections in the OPEN state, a call
      315     7188           is made to the appropriate KNT$SAVE routine to determine if the
      316     7189           SPDU must be split into smaller TPDUs, or, in the case of Class 2
      317     7190           with flow control, if the data must be buffered because there is
      318     7191           insufficient credits to send the data.
      319     7192
      320     7193           The alternate return will be taken from the KNT$SAVE routines if
      321     7194           we are out of transport buffer space or if we are out of credits
      322     7195           for sending the data.
      323     7196
      324     7197           On a normal return, the contents of KN$TCTX.SEND_HEAD$ will contain
      325     7198           the address of the buffered data if the KNT$SAVE routine determined
      326     7199           that buffering was necessary, and we will attempt to send this buffered
      327     7200           data by calling KNT$SEND_DT.  When .SEND_HEAD$ is nil, the KNT$SAVE
      328     7201           routine has built the TPDU_DT header for us in our auto.  The data
      329     7202           is transmitted to the remote end point by a call to KNH$SEND if
      330     7203           this is a connection-oriented network connection; by a call to KNN$SEND
      331     7204           if this is a connection-less network service.
      332     7205
      333     7206        */
      334     7207    2         IF KN$TCTX.CLASS=0
      335     7208    3         THEN DO;
      336     7209    3              CALL KNT$SAVE_CLASS0(KN$NETPARM) ALTRET(CANT_SAVE_DATA);
      337     7210    3              GOTO SEND_MSG_CHECK;
      338     7211
      339     7212    3              END/*do if class 0*/;
      340     7213
      341     7214        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:14   
      342     7215
      343     7216    2         IF KN$TCTX.CLASS=2
      344     7217    3         THEN DO;
      345     7218    3              CALL KNT$SAVE_CLASS2(KN$NETPARM) ALTRET(CANT_SAVE_DATA);
      346     7219
      347     7220    3   SEND_MSG_CHECK:
      348     7221    3              IF KN$TCTX.SEND_HEAD$ ~= ADDR(NIL)
      349     7222    4              THEN DO;
      350     7223    4                   CALL KNT$SEND_DT(KN$NETPARM);
      351     7224    4                   GOTO UNLOCK_N_RETURN;
      352     7225    4                   END;
      353     7226
      354     7227    4              ELSE DO;
      355     7228    4                   KN$NETPARM.MSG$ = KN$NETPARM.SHDR_C$;
      356     7229    4                   KN$NETPARM.MSGSZ = KN$NETPARM.SHDRSZ;
      357     7230    4                   KN$NETPARM.UHDRSZ = 0;
      358     7231    4                   KN$NETPARM.SHDRSZ = 0;
      359     7232
      360     7233    4                   IF KN$TCTX.OPTION.OSI
      361     7234    5                   THEN DO;
      362     7235    5                        KN$NETPARM.FUNCTION = %K_NDATA;
      363     7236    5                        KN$NETPARM.NHDRSZ = 0;
      364     7237    5                        END;
      365     7238    5                   ELSE DO;
      366     7239    5                        KN$NETPARM.NODE = KN$TCTX.NODE;
      367     7240    5                        END;
      368     7241
      369     7242    4                   IF KN$TCTX.OPTION.CONS
      370     7243    5                   THEN DO;
      371     7244    5                        KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);
      372     7245    5                        CALL KNH$SEND(KN$NETPARM)
      373     7246    6                        WHENRETURN DO;
      374     7247    6   MSG_SENT:
      375     7248    6                             KN$TCTX.SEND_LWE = KN$TCTX.SEND_LWE +1;
      376     7249
      377     7250    6   TRACE_CHECK:
      378     7251    6                             IF KN$TCTX.OPTION.TRACE
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:15   
      379     7252    6                             THEN CALL KNT$TR_SEND(KN$NETPARM);
      380     7253
      381     7254    6                             GOTO UNLOCK_N_RETURN;
      382     7255    6                             END;
      383     7256
      384     7257    6                        WHENALTRETURN DO;
      385     7258    6   ALTRET_4_Q:
      386     7259    6                             IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ
      387     7260    6                               OR KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
      388     7261    7                             THEN DO;
      389     7262    7                                  KN$TCTX.SERR.NOQ = KN$TCTX.SERR.NOQ +1;
      390     7263        /* leave                       KN$NETPARRM.ERRCODE = KN_ERR_NOQ; */
      391     7264    7                                  GOTO UNLOCK_N_ALTRET;
      392     7265    7                                  END;
      393     7266
      394     7267    6                             ELSE GOTO FORCE_SCREECH;
      395     7268    6                             END;
      396     7269    5                        END/*do for CONS*/;
      397     7270
      398     7271    5                   ELSE DO/*for CLNS*/;
      399     7272    5                        KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);
      400     7273    5                        KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);
      401     7274
      402     7275    5                        CALL KNN$SEND(KN$NETPARM) ALTRET(ALTRET_4_Q);
      403     7276
      404     7277    5                        GOTO MSG_SENT;
      405     7278    5                        END/*do for CLNS*/;
      406     7279
      407     7280    3                   END;/*do if not buffered*/;
      408     7281
      409     7282    3              END/*class 2 open*/;
      410     7283
      411     7284        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:16   
      412     7285        /* If we get here, we came from SEND_4HOST.  Note that the checks for
      413     7286           expedited data allowed on this transport connection and for
      414     7287           SPDU size > 16 was done on the host, so we wont duplicate it here.
      415     7288        */
      416     7289    2       CASE (%K_TEXPD_DATA_REQ);
      417     7290
      418     7291    2         IF KN$TCTX.STATE = %K_TSTATE_OPEN
      419     7292    3         THEN DO;
      420     7293    3              CALL KNT$SAVE_ED(KN$NETPARM) ALTRET(CANT_SAVE_DATA);
      421     7294    3              CALL KNT$SEND_ED(KN$NETPARM);
      422     7295    3              GOTO UNLOCK_N_RETURN;
      423     7296    3              END;
      424     7297
      425     7298    2         IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
      426     7299    3         THEN DO;
      427     7300    3              CALL KNT$SAVE_ED(KN$NETPARM) ALTRET(CANT_SAVE_DATA);
      428     7301    3              GOTO SIGNAL_FLOW_STOP;
      429     7302    3              END;
      430     7303        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:17   
      431     7304
      432     7305    2       CASE(ELSE);
      433     7306    2   SCREECH_CHECK:
      434     7307    2         IF KNT_ERROR_SCREECH ~= 0
      435     7308    3         THEN DO;
      436     7309    3   FORCE_SCREECH:
      437     7310    3              CALL SCREECH(KNT_SCODE);
      438     7311    3              END;
      439     7312
      440     7313    2         KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;
      441     7314
      442     7315    2         GOTO UNLOCK_N_ALTRET;
      443     7316
      444     7317    2         END/*do case(function)*/;
      445     7318
      446     7319
      447     7320
      448     7321
      449     7322    1   END KNT$SEND;
      450     7323        %EOD;

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:18   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SEND.

   Procedure KNT$SEND requires 674 words for executable code.
   Procedure KNT$SEND requires 28 words of local(AUTO) storage.

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:19   

 Object Unit name= KNT$SEND                                   File name= KNT$SEND.:E05TOU
 UTS= JUL 30 '97 01:11:13.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     3      3  KNT$SEND
    1   Proc  even  none   674    2A2  KNT$SEND
    2  RoData even  none     4      4  KNT$SEND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KNT$SEND
     1      9          yes     yes      Std        1  KNT$SEND_HOST_DATA

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KNT_LOCKOUT
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:20   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 KNA$GETTCTX
 yes     yes           Std       1 GHH$UNLOCK
 yes     yes           Std       1 KNA$RELTCTX
         yes           Std       1 SCREECH
 yes     yes           Std       1 KNH$SEND
 yes     yes           Std       1 KNT$SAVE_ED
 yes     yes           Std       1 KNT$SEND_DT
 yes     yes           Std       1 KNT$SEND_ED
         yes           Std       1 GHS$SET_TMR
 yes     yes           Std       1 KNT$SEND_CR
 yes     yes           Std       1 KNT$SAVE_DT
 yes     yes           Std       1 KNT$SAVE_CLASS0
 yes     yes           Std       1 KNT$SAVE_CLASS2
         yes           Std       1 KNT$TR_SEND
 yes     yes           Std       1 KNN$SEND
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KNT_DEFAULT_CHKSUM                    KNT_DEFAULT_TPDUSZ                    KNT_WINDOW_NORMAL
     KN_TCTX$$                             KN_DCT$$                              KNT_ERROR_SCREECH
     KNT_SCODE                        r    G$ROS$
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:21   


        1        1        /*M* KNT$SEND - Send session messages to network.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
        8        8
        9        9        KNT$SEND: PROC(KN$NETPARM) ALTRET;

      9   1 000000  D380 0000 0000  xent KNT$SEND        LNJ,B5   X6A_AUTO_1
          1 000003       001C 0001                       DC       28,1

       10       10
       11       11        %INCLUDE GH_GATE_M;
       12       52        %INCLUDE GH_SCHD_M;
       13      196        %INCLUDE K_ADDRESS_M;
       14      699        %INCLUDE K_INTERFACE_M;
       15     1108        %INCLUDE K_TRANSPORT_E;
       16     1433        %INCLUDE K_TRANSPORT_M;
       17     3217 S      %INCLUDE KI_CP6;
       18     3218        %INCLUDE KN_DATA_M;
       19     5004        %INCLUDE KNH_MACRO_C;
       20     5287
       21     5288                                                /* Input parameters                   */
       22     5289        %KN$NETPARM;
       23     5442                                                /* Auto Storage                       */
       24     5443    1   DCL ITEMP1 SBIN;
       25     5444    1   DCL EVENT SBIN;
       26     5445    1   DCL CTX$ PTR;
       27     5446    1   DCL FPT$ PTR;
       28     5447    1   DCL QQQ$ PTR;
       29     5448    1   DCL TCTX_ID SBIN;
       30     5449
       31     5450        %K$TPDU_DT (STCLASS=AUTO);
       32     5500        %K$TPDU_DT_0 (STCLASS=AUTO);
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:22   
       33     5545        %K$TPDU_DT_EXT (STCLASS=AUTO);
       34     5609
       35     5610    1   DCL ENTRY_SWITCH UBIN;
       36     5611        %EQU PRIMARY=0;
       37     5612        %EQU SEND_4HOST=1;
       38     5613
       39     5614                                                /* External Procedures                */
       40     5615    1   DCL KNA$GETTCTX ENTRY(1) ALTRET;
       41     5616    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
       42     5617    1   DCL KNH$SEND ENTRY(1) ALTRET;
       43     5618    1   DCL KNN$SEND ENTRY(1) ALTRET;
       44     5619    1   DCL KNT$SAVE_DT ENTRY(1) ALTRET;
       45     5620    1   DCL KNT$SAVE_ED ENTRY(1) ALTRET;
       46     5621    1   DCL KNT$SAVE_CLASS0 ENTRY(1) ALTRET;
       47     5622    1   DCL KNT$SAVE_CLASS2 ENTRY(1) ALTRET;
       48     5623    1   DCL KNT$SEND_CC ENTRY(1) ALTRET;
       49     5624    1   DCL KNT$SEND_CR ENTRY(1) ALTRET;
       50     5625    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
       51     5626    1   DCL KNT$SEND_DT ENTRY(1) ALTRET;
       52     5627    1   DCL KNT$SEND_ED ENTRY(1) ALTRET;
       53     5628    1   DCL GHS$SET_TMR ENTRY(1);
       54     5629    1   DCL GHS$CANCEL_TMR ENTRY(1);
       55     5630    1   DCL KNT$TR_SEND ENTRY(1);
       56     5631    1   DCL SCREECH ENTRY(1);
       57     5632
       58     5633                                                /* External Data                      */
       59     5634    1   DCL KNT_DEFAULT_CHKSUM UBIN SYMREF;
       60     5635    1   DCL KNT_DEFAULT_TPDUSZ UBIN SYMREF;
       61     5636    1   DCL KNT_WINDOW_NORMAL UBIN SYMREF;
       62     5637    1   DCL KN_TCTX$$ PTR SYMREF;
       63     5638    1   DCL KN_DCT$$ PTR SYMREF;
       64     5639    1   DCL KNT_ERROR_SCREECH UBIN SYMREF;
       65     5640    1   DCL KNT_SCODE UBIN(32) SYMREF;
       66     5641
       67     5642                                                /* Internal Data                      */
       68     5643        %GATE (FPTN=KNT_LOCKOUT, STCLASS="STATIC SYMDEF");
       69     5662
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:23   
       70     5663                                                /* Based Structures                   */
       71     5664        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
       72     6571    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
       73     6572    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
       74     6573        %KN$LDCT (STCLASS="BASED(KN$NETPARM.LDCT$)");
       75     6818        %FPT_CONNECT (STCLASS="BASED(FPT$)");
       76     6887        %K$TPDU_DT_0 (NAME=B$TPDU_DT_0,STCLASS=BASED,ALGN=CALIGNED);
       77     6932
       78     6933        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:24   
       79     6934
       80     6935        /*F* NAME: KNT$SEND Outbound Messages
       81     6936
       82     6937        KNT$SEND is the interface for the higher layers to the
       83     6938        transport layer. It is called from Fep CP-6 Session (KNS$SEND)
       84     6939        or from KNT$SEND_4HOST with the following parameters:
       85     6940
       86     6941        .fif
       87     6942        }    KN$NETPARM.FUNCTION
       88     6943        }                - Contains the function to be performed:
       89     6944        }                  When called from local session for a CP-6 connection:
       90     6945        }                                     KN_FCN_INIT
       91     6946        }                                     KN_FCN_DATA
       92     6947        }
       93     6948        }                  When called for host transport on a CP-6 connection:
       94     6949        }                                     KN_FCN_DATA
       95     6950        }
       96     6951        }                  When called for host transport on a OSI connection:
       97     6952        }                                     K_NDATA
       98     6953        }                                     K_TEXPD_DATA_REQ
       99     6954        }
      100     6955        }    KN$NETPARM.TCTX_ID
      101     6956        }                - Contains the index for the transport context block.
      102     6957        }
      103     6958        }    KN$NETPARM.LDCT$
      104     6959        }                - Contains the address of the session connection LDCT
      105     6960        }                  if this is call from local session.
      106     6961        }
      107     6962        }    KN$NETPARM.FPT$
      108     6963        }                - Contains the address of FPT_CONNECT
      109     6964        }                  only used when FUNCTION is KN_FCN_INIT
      110     6965        }
      111     6966        }                  FPT_CONNECT.RLCID.NODE contains the node#
      112     6967        }                  of the other endpoint to be connected.
      113     6968        .fin
      114     6969
      115     6970        The action taken is dependent on the FUNCTION code.
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:25   
      116     6971        */
      117     6972
      118     6973        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:26   
      119     6974
      120     6975    1      ENTRY_SWITCH = %PRIMARY;

   6975   1 000005  8747 0018                            CL       ENTRY_SWITCH,AUTO

      121     6976    1      GOTO COMMON;

   6976   1 000007  0F81 0009                            B        s:6979,PREL

      122     6977
      123     6978    1   KNT$SEND_HOST_DATA: ENTRY(KN$NETPARM) ALTRET;

   6978   1 000009  D380 0000 0000  xent KNT$SEND_HOST_D*LNJ,B5   X6A_AUTO_1
          1 00000C       001C 0001                       DC       28,1

      124     6979    1      ENTRY_SWITCH = %SEND_4HOST;

   6979   1 00000E  6C01                                 LDV,R6   1
          1 00000F  EF47 0018                            STR,R6   ENTRY_SWITCH,AUTO

   6979   1                              COMMON          null
      125     6980
      126     6981    1   COMMON: ;
      127     6982    1      FPT$ = KN$NETPARM.FPT$;

   6982   1 000011  ECC7 0004            COMMON          LDB,B6   @KN$NETPARM,AUTO
          1 000013  DCC6 0019                            LDB,B5   25,B6
          1 000015  DFC7 000A                            STB,B5   FPT$,AUTO

      128     6983    1      QQQ$ = KN$NETPARM.LDCT$;

   6983   1 000017  CC86                                 LDB,B4   ,B6
          1 000018  CFC7 000C                            STB,B4   QQQ$,AUTO

      129     6984
      130     6985    1      TCTX_ID = KN$NETPARM.TCTX_ID;

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:27   
   6985   1 00001A  E846 0011                            LDR,R6   17,B6
          1 00001C  EF47 000E                            STR,R6   TCTX_ID,AUTO

      131     6986    1      CTX$ = KN$TCTX$(TCTX_ID);

   6986   1 00001E  BC80 0000 0000  xsym                 LDB,B3   KN_TCTX$$
          1 000021  B856                                 LDR,R3   R6
          1 000022  ACB3                                 LDB,B2   ,B3,R3
          1 000023  AFC7 0008                            STB,B2   CTX$,AUTO

      132     6987    1      KN$NETPARM.TCTX$ = CTX$;

   6987   1 000025  AFC6 001B                            STB,B2   27,B6

      133     6988
      134     6989           %LOCK (G=KNT_LOCKOUT);

   6994   1 000027  BB80 0000 0000  02                   LAB,B3   0
          1 00002A  CBF0 0100                            LAB,B4   256,IMO
          1 00002C  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 00002F       0001                            DC       s:6997,PREL

      135     6996
      136     6997    2      DO CASE ( KN$NETPARM.FUNCTION );

   6997   1 000030  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000032  B846 0014                            LDR,R3   20,B6
          1 000034  3D22                                 CMV,R3   34
          1 000035  0281 0254                            BGE      s:7305,PREL
          1 000037  A830 0000 003D  01                   LDR,R2   s:6997+13,R3
          1 00003A  83A0 0000 005F  01                   JMP      s:7008,R2
          1 00003D       022B                            DC       s:7305,PREL
          1 00003E       0000                            DC       s:7008,PREL
          1 00003F       022B                            DC       s:7305,PREL
          1 000040       022B                            DC       s:7305,PREL
          1 000041       022B                            DC       s:7305,PREL
          1 000042       00DB                            DC       s:7090,PREL
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:28   
          1 000043       022B                            DC       s:7305,PREL
          1 000044       022B                            DC       s:7305,PREL
          1 000045       022B                            DC       s:7305,PREL
          1 000046       022B                            DC       s:7305,PREL
          1 000047       022B                            DC       s:7305,PREL
          1 000048       022B                            DC       s:7305,PREL
          1 000049       022B                            DC       s:7305,PREL
          1 00004A       022B                            DC       s:7305,PREL
          1 00004B       022B                            DC       s:7305,PREL
          1 00004C       022B                            DC       s:7305,PREL
          1 00004D       022B                            DC       s:7305,PREL
          1 00004E       022B                            DC       s:7305,PREL
          1 00004F       022B                            DC       s:7305,PREL
          1 000050       022B                            DC       s:7305,PREL
          1 000051       022B                            DC       s:7305,PREL
          1 000052       022B                            DC       s:7305,PREL
          1 000053       022B                            DC       s:7305,PREL
          1 000054       022B                            DC       s:7305,PREL
          1 000055       0206                            DC       s:7291,PREL
          1 000056       022B                            DC       s:7305,PREL
          1 000057       022B                            DC       s:7305,PREL
          1 000058       022B                            DC       s:7305,PREL
          1 000059       022B                            DC       s:7305,PREL
          1 00005A       022B                            DC       s:7305,PREL
          1 00005B       022B                            DC       s:7305,PREL
          1 00005C       022B                            DC       s:7305,PREL
          1 00005D       022B                            DC       s:7305,PREL
          1 00005E       00DB                            DC       s:7090,PREL

      137     6998
      138     6999        /* Currently, OSI connections are not initiated from any handlers
      139     7000           or Fprgs.  So when the function is KN_FCN_INIT, the connection
      140     7001           is always initialized as a CP-6 Class 4 transport connection.
      141     7002
      142     7003           A TCTX block is allocated and set to state WFCC.  The TPCU_CR
      143     7004           is composed and sent to the remote endpoint via a call to
      144     7005           KNT$SEND_CR.
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:29   
      145     7006        */
      146     7007    2       CASE( %KN_FCN_INIT);

      147     7008    2         CALL KNA$GETTCTX(CTX$)

   7008   1 00005F  DBC7 0008                            LAB,B5   CTX$,AUTO
          1 000061  DFC7 001A                            STB,B5   ENTRY_SWITCH+2,AUTO
          1 000063  BBC7 001A                            LAB,B3   ENTRY_SWITCH+2,AUTO
          1 000065  CBF0 0100                            LAB,B4   256,IMO
          1 000067  E380 0000 0000  xent                 LNJ,B6   KNA$GETTCTX
          1 00006A       0003                            DC       s:7010,PREL
          1 00006B  0F81 0017                            B        s:7024,PREL

      148     7009    3         WHENALTRETURN DO;

      149     7010    3              KN$NETPARM.ERRCODE = %KN_ERR_NOTCTX;

   7010   1 00006D  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 00006F  6C06                                 LDV,R6   6
          1 000070  EF46 0016                            STR,R6   22,B6

   7010   1                              UNLOCK_N_ALTRET null
      150     7011
      151     7012    3   UNLOCK_N_ALTRET: ;
      152     7013    3              KN$NETPARM.LDCT$ = QQQ$;

   7013   1 000072  ECC7 000C            UNLOCK_N_ALTRET LDB,B6   QQQ$,AUTO
          1 000074  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 000076  EF85                                 STB,B6   ,B5

      153     7014                   %UNLOCK (G=KNT_LOCKOUT);

   7019   1 000077  BB80 0000 0000  02                   LAB,B3   0
          1 00007A  CBF0 0100                            LAB,B4   256,IMO
          1 00007C  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00007F       0001                            DC       s:7021,PREL

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:30   
      154     7021    3              ALTRETURN;

   7021   1 000080  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      155     7022    3              END;
      156     7023
      157     7024    2         KN$TCTX.NODE = FPT_CONNECT.RLCID.NODE;

   7024   1 000083  ECC7 000A                            LDB,B6   FPT$,AUTO
          1 000085  E2C6 000D                            LLH,R6   13,B6
          1 000087  DCC7 0008                            LDB,B5   CTX$,AUTO
          1 000089  EA85                                 SRM,R6,'00FF'X    ,B5
          1 00008A       00FF

      158     7025    2         KN$NETPARM.NODE = KN$TCTX.NODE;

   7025   1 00008B  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 00008D  CCC7 0008                            LDB,B4   CTX$,AUTO
          1 00008F  E804                                 LDR,R6   ,B4
          1 000090  E570 00FF                            AND,R6   255,IMO
          1 000092  EF45 0015                            STR,R6   21,B5

      159     7026
      160     7027    2         TCTX_ID = KN$TCTX.SRC_REF;

   7027   1 000094  D844 0002                            LDR,R5   2,B4
          1 000096  DF47 000E                            STR,R5   TCTX_ID,AUTO

      161     7028    2         KN$NETPARM.TCTX_ID = TCTX_ID;

   7028   1 000098  DF45 0011                            STR,R5   17,B5

      162     7029    2         KN$NETPARM.TCTX$ = CTX$;

   7029   1 00009A  CFC5 001B                            STB,B4   27,B5

      163     7030
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:31   
      164     7031    2         IF KN$LDCT.CONN_TYPE ~= %KN_CNTYPE_LINK

   7031   1 00009C  BC85                                 LDB,B3   ,B5
          1 00009D  C283                                 LLH,R4   ,B3
          1 00009E  4D06                                 CMV,R4   6
          1 00009F  0901 0005                            BE       s:7036,PREL

      165     7032    3         THEN DO;

      166     7033    3              KN$LDCT.TRANSPORT_ID = KN$TCTX.SRC_REF;

   7033   1 0000A1  B844 0002                            LDR,R3   2,B4
          1 0000A3  BF43 0003                            STR,R3   3,B3

      167     7034    3              END;

      168     7035
      169     7036    2         KN$TCTX.PRIMARY = '1'B;

   7036   1 0000A5  CCC7 0008                            LDB,B4   CTX$,AUTO
          1 0000A7  8944 000D                            LBT,'0001'X       13,B4
          1 0000A9       0001

      170     7037    2         KN$TCTX.OUTBOUND = '1'B;

   7037   1 0000AA  8944 000D                            LBT,'0004'X       13,B4
   7037   1 0000AC       0004

      171     7038    2         KN$TCTX.SEND_RETRY_COUNT = 1;

   7038   1 0000AD  6C01                                 LDV,R6   1
          1 0000AE  E7C4 004D                            STH,R6   77,B4

      172     7039    2         KN$TCTX.QOS = FPT_CONNECT.SERVICE;

   7039   1 0000B0  C846 0010                            LDR,R4   16,B6
          1 0000B2  CAC4 0004                            SRM,R4,'00FF'X    4,B4
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:32   
          1 0000B4       00FF

      173     7040    2         KN$TCTX.CLASS = FPT_CONNECT.CLASS;

   7040   1 0000B5  C2C6 0011                            LLH,R4   17,B6
          1 0000B7  CCC7 0008                            LDB,B4   CTX$,AUTO
          1 0000B9  C7C4 0005                            STH,R4   5,B4

      174     7041    2         KN$TCTX.OPTION = FPT_CONNECT.TR_FLAGS;

   7041   1 0000BB  CCC7 0008                            LDB,B4   CTX$,AUTO
          1 0000BD  C846 0012                            LDR,R4   18,B6
          1 0000BF  CF44 000C                            STR,R4   12,B4

      175     7042    2         KN$TCTX.OPTION.OSI = '0'B;

   7042   1 0000C1  8844 000C                            LBF,'0010'X       12,B4
   7042   1 0000C3       0010

      176     7043    2         KN$TCTX.OPTION.EXPEDITED = '0'B;

   7043   1 0000C4  8844 000C                            LBF,'0002'X       12,B4
   7043   1 0000C6       0002

      177     7044
      178     7045    2         IF KN$TCTX.OPTION.EXTENDED = '0'B

   7045   1 0000C7  82C4 000C                            LB,'0004'X        12,B4
   7045   1 0000C9       0004
          1 0000CA  0501 0015                            BBT      s:7052,PREL

      179     7046    3         THEN DO;           /*gettctx set up for extended format - the default*/

      180     7047    3              KN$TCTX.MAXSEQ = 127;

   7047   1 0000CC  8CF0 0000 007F                       LDI      127,IMO
          1 0000CF  8D44 000A                            SDI      10,B4
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:33   

      181     7048    3              KN$TCTX.RCV_WINDOW_SZ = KNT_WINDOW_NORMAL;

   7048   1 0000D1  C800 0000 0000  xsym                 LDR,R4   KNT_WINDOW_NORMAL
          1 0000D4  CAC4 0005                            SRM,R4,'00FF'X    5,B4
          1 0000D6       00FF

      182     7049    3              KN$TCTX.RECV_UWE = KN$TCTX.RCV_WINDOW_SZ;

   7049   1 0000D7  CCC7 0008                            LDB,B4   CTX$,AUTO
          1 0000D9  F844 0005                            LDR,R7   5,B4
          1 0000DB  F570 00FF                            AND,R7   255,IMO
          1 0000DD  6C00                                 LDV,R6   0
          1 0000DE  8D44 0024                            SDI      36,B4

      183     7050    3              END;

      184     7051
      185     7052    2         IF KNT_DEFAULT_CHKSUM=0 THEN KN$TCTX.OPTION.CHKSUM='0'B;

   7052   1 0000E0  E800 0000 0000  xsym                 LDR,R6   KNT_DEFAULT_CHKSUM
          1 0000E3  6981 0004                            BNEZ,R6  s:7054,PREL

   7052   1 0000E5  8844 000C                            LBF,'0001'X       12,B4
   7052   1 0000E7       0001

      186     7053
      187     7054    2         IF KNT_DEFAULT_TPDUSZ >= %K_TPDUSIZE_128

   7054   1 0000E8  C800 0000 0000  xsym                 LDR,R4   KNT_DEFAULT_TPDUSZ
          1 0000EB  4D07                                 CMV,R4   7
          1 0000EC  0201 0009                            BL       s:7057,PREL
          1 0000EE  4D0D                                 CMV,R4   13
          1 0000EF  0301 0006                            BG       s:7057,PREL

      188     7055    2           AND KNT_DEFAULT_TPDUSZ <= %K_TPDUSIZE_8192
      189     7056    2         THEN KN$TCTX.TPDUSZ_PARM = KNT_DEFAULT_TPDUSZ;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:34   

   7056   1 0000F1  CAC4 0008                            SRM,R4,'00FF'X    8,B4
   7056   1 0000F3       00FF
          1 0000F4  0F81 0005                            B        s:7059,PREL

      190     7057    2         ELSE KN$TCTX.TPDUSZ_PARM = %K_TPDUSIZE_8192;

   7057   1 0000F6  3C0D                                 LDV,R3   13
          1 0000F7  BAC4 0008                            SRM,R3,'00FF'X    8,B4
          1 0000F9       00FF

      191     7058
      192     7059    2         IF KN$TCTX.CLASS = 4

   7059   1 0000FA  CCC7 0008                            LDB,B4   CTX$,AUTO
          1 0000FC  B2C4 0005                            LLH,R3   5,B4
          1 0000FE  3D04                                 CMV,R3   4
          1 0000FF  0981 000D                            BNE      s:7062,PREL

      193     7060    2         THEN CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);

   7060   1 000101  BBC4 0050                            LAB,B3   80,B4
          1 000103  BFC7 001A                            STB,B3   ENTRY_SWITCH+2,AUTO
          1 000105  BBC7 001A                            LAB,B3   ENTRY_SWITCH+2,AUTO
          1 000107  CBF0 0100                            LAB,B4   256,IMO
          1 000109  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          1 00010C       0001                            DC       s:7062,PREL

      194     7061
      195     7062    2         KN$TCTX.STATE = %K_TSTATE_WFCC;

   7062   1 00010D  6C03                                 LDV,R6   3
          1 00010E  ECC7 0008                            LDB,B6   CTX$,AUTO
          1 000110  E786                                 STH,R6   ,B6

      196     7063
      197     7064    2         CALL KNT$SEND_CR(KN$NETPARM)
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:35   

   7064   1 000111  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000113  CBF0 0100                            LAB,B4   256,IMO
          1 000115  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_CR
          1 000118       0003                            DC       s:7066,PREL
          1 000119  0F81 000F                            B        s:7062,PREL

      198     7065    3         WHENALTRETURN DO;

      199     7066    3              CALL KNA$RELTCTX(CTX$);

   7066   1 00011B  EBC7 0008                            LAB,B6   CTX$,AUTO
          1 00011D  EFC7 001A                            STB,B6   ENTRY_SWITCH+2,AUTO
          1 00011F  BBC7 001A                            LAB,B3   ENTRY_SWITCH+2,AUTO
          1 000121  CBF0 0100                            LAB,B4   256,IMO
          1 000123  E380 0000 0000  xent                 LNJ,B6   KNA$RELTCTX
          1 000126       0001                            DC       s:7067,PREL

      200     7067    3              GOTO UNLOCK_N_ALTRET;

   7067   1 000127  0F81 FF4A                            B        s:7010,PREL

   7062   1                              UNLOCK_N_RETURN null
      201     7068    3              END;
      202     7069
      203     7070    2   UNLOCK_N_RETURN: ;
      204     7071    2         KN$NETPARM.LDCT$ = QQQ$;

   7071   1 000129  ECC7 000C            UNLOCK_N_RETURN LDB,B6   QQQ$,AUTO
          1 00012B  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 00012D  EF85                                 STB,B6   ,B5

      205     7072              %UNLOCK (G=KNT_LOCKOUT);

   7077   1 00012E  BB80 0000 0000  02                   LAB,B3   0
          1 000131  CBF0 0100                            LAB,B4   256,IMO
          1 000133  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:36   
          1 000136       0001                            DC       s:7079,PREL

      206     7079    2         RETURN;

   7079   1 000137  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      207     7080
      208     7081        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:37   
      209     7082        /* When the function is KN_FCN_DATA or K_NDATA, the method of sending
      210     7083           the data to the remote end point is dependent on the transport class
      211     7084           and the type of network connection to be used, connection-oriented(CONS)
      212     7085           or connection-less (CLNS).
      213     7086        */
      214     7087
      215     7088    2       CASE (%KN_FCN_DATA, %K_NDATA);

      216     7089
      217     7090    2         IF KN$NETPARM.TCTX_ID = 0

   7090   1 00013A  E846 0011                            LDR,R6   17,B6
          1 00013C  6981 000A                            BNEZ,R6  s:7095,PREL

      218     7091    3         THEN DO;

      219     7092    3              CALL SCREECH(KNT_SCODE);

   7092   1 00013E  BB80 0000 0002  02                   LAB,B3   +2
          1 000141  CBF0 0100                            LAB,B4   256,IMO
          1 000143  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 000146       0001                            DC       s:7095,PREL

      220     7093    3              END;

      221     7094
      222     7095    2         KN$NETPARM.THDR$ = ADDR(K$TPDU_DT_EXT); /* for knt$save to use*/

   7095   1 000147  EBC7 0014                            LAB,B6   K$TPDU_DT_EXT,AUTO
          1 000149  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 00014B  EFC5 000B                            STB,B6   11,B5

      223     7096    2         K$TPDU_DT_EXT = '0'B;

   7096   1 00014D  5C08                                 LDV,R5   8
          1 00014E  0021                                 ALR      ;
          1 00014F       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:38   
          1 000151       4007 0014                                ALPHANUM(K$TPDU_DT_EXT,AUTO,,R5,FILL)

      224     7097
      225     7098        /* When the Class 4 transport state is OPEN and session requests that
      226     7099           we send data or expedited data, we call KNT$SAVE to get a buffer in
      227     7100           the transport pool, save the SPDU there, and link the buffer via
      228     7101           KN$TCTX.SEND_(E)HEAD$.
      229     7102
      230     7103           The message is sent on to network by calling KNT$SEND_DT or KNT$SEND_ED.
      231     7104           These routines call the appropriate network or link layer routine
      232     7105           depending on the type of network connection that is being used.
      233     7106        */
      234     7107    2         IF KN$TCTX.CLASS = 4

   7107   1 000153  ECC7 0008                            LDB,B6   CTX$,AUTO
          1 000155  437F                                 CSYNC    s:7107+1,SPREL
          1 000156  E2C6 0005                            LLH,R6   5,B6
          1 000158  6D04                                 CMV,R6   4
          1 000159  0981 0045                            BNE      s:7156,PREL

      235     7108    3         THEN DO;

      236     7109    3              IF KN$TCTX.STATE = %K_TSTATE_OPEN

   7109   1 00015B  C286                                 LLH,R4   ,B6
          1 00015C  4D05                                 CMV,R4   5
          1 00015D  0981 0028                            BNE      s:7136,PREL

      237     7110    4              THEN DO;

      238     7111    4                   CALL KNT$SAVE_DT(KN$NETPARM)

   7111   1 00015F  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000161  CBF0 0100                            LAB,B4   256,IMO
          1 000163  E380 0000 0000  xent                 LNJ,B6   KNT$SAVE_DT
          1 000166       000B                            DC       s:7117,PREL

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:39   
      239     7112    5                   WHENRETURN DO;

      240     7113    5                        CALL KNT$SEND_DT(KN$NETPARM);

   7113   1 000167  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000169  CBF0 0100                            LAB,B4   256,IMO
          1 00016B  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DT
          1 00016E       0001                            DC       s:7114,PREL

      241     7114    5                        GOTO UNLOCK_N_RETURN;

   7114   1 00016F  0F81 FFB9                            B        s:7062,PREL

      242     7115    5                        END;
      243     7116
      244     7117    5                   WHENALTRETURN DO;

      245     7118    5   CANT_SAVE_DATA:
      246     7119    5                        IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ2

   7119   1 000171  ECC7 0004            CANT_SAVE_DATA  LDB,B6   @KN$NETPARM,AUTO
          1 000173  E846 0016                            LDR,R6   22,B6
          1 000175  6D07                                 CMV,R6   7
          1 000176  0901 FEFB                            BE       s:7010,PREL

      247     7120    5                        THEN GOTO UNLOCK_N_ALTRET; /*no buf available-knt_wait_head$*/
      248     7121
      249     7122    5                        KN$TCTX.FLOW_CONTROLLED = '1'B;

   7122   1 000178  DCC7 0008                            LDB,B5   CTX$,AUTO
          1 00017A  8945 000D                            LBT,'0010'X       13,B5
          1 00017C       0010

      250     7123
      251     7124    5                        IF KN$TCTX.PRIMARY

   7124   1 00017D  82C5 000D                            LB,'0001'X        13,B5
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:40   
   7124   1 00017F       0001
          1 000180  0581 0003                            BBF      s:7127,PREL

      252     7125    5                        THEN KN$NETPARM.ERRCODE=0; /*reset for kns$send*/

   7125   1 000182  8746 0016                            CL       22,B6

      253     7126
      254     7127    5                        GOTO UNLOCK_N_ALTRET; /*altret to send_4host or kns$send*/

   7127   1 000184  0F81 FEED                            B        s:7010,PREL

      255     7128    5                        END;
      256     7129    4                   END/*do if class 4 open*/;
      257     7130
      258     7131        /* When the Class 4 transport state is AKWAIT, and this is an
      259     7132           intermediate connection, the data is buffered.  For primary
      260     7133           connections in the AKWAIT state, the LDCT is queued on the
      261     7134           transport context block (KN$TCTX.LNK$).
      262     7135        */
      263     7136    3              IF (KN$TCTX.STATE = %K_TSTATE_AKWAIT)

   7136   1 000186  4D07                                 CMV,R4   7
          1 000187  0981 0017                            BNE      s:7156,PREL

      264     7137    4              THEN DO;

      265     7138    4                   IF KN$TCTX.PRIMARY

   7138   1 000189  82C6 000D                            LB,'0001'X        13,B6
   7138   1 00018B       0001
          1 00018C  0501 0021                            BBT      s:7161,PREL

      266     7139    4                   THEN GOTO LOCAL_NOT_OPEN;
      267     7140
      268     7141    4                   KN$TCTX.SERR.NOT_OPEN = KN$TCTX.SERR.NOT_OPEN +1;

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:41   
   7141   1 00018E  8AC6 000F                            INC      15,B6

      269     7142    4                   CALL KNT$SAVE_DT(KN$NETPARM) ALTRET(CANT_SAVE_DATA);

   7142   1 000190  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000192  CBF0 0100                            LAB,B4   256,IMO
          1 000194  E380 0000 0000  xent                 LNJ,B6   KNT$SAVE_DT
          1 000197       FFDA                            DC       s:7117,PREL

   7141   1                              SIGNAL_FLOW_STOPnull
      270     7143    4   SIGNAL_FLOW_STOP: ;
      271     7144    4                   KN$TCTX.FLOW_CONTROLLED = '1'B;

   7144   1 000198  ECC7 0008            SIGNAL_FLOW_STOPLDB,B6   CTX$,AUTO
          1 00019A  8946 000D                            LBT,'0010'X       13,B6
          1 00019C       0010

      272     7145    4                   GOTO UNLOCK_N_ALTRET;   /*altret to send_4host*/

   7145   1 00019D  0F81 FED4                            B        s:7010,PREL

      273     7146    4                   END/*do if class 4 akwait*/;
      274     7147    3              END/*do if class 4*/;
      275     7148        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:42   
      276     7149        /* When the state is WFCC, and this is a primary connection,
      277     7150           the LDCT is queued on the transport context block.  If attempting
      278     7151           to send data on an intermediate transport connection in the WFCC
      279     7152           state, it is a screech condition.
      280     7153        */
      281     7154
      282     7155    2   CHECK_TSTATE:
      283     7156    2         IF KN$TCTX.STATE ~= %K_TSTATE_OPEN

   7156   1 00019F  C286                 CHECK_TSTATE    LLH,R4   ,B6
          1 0001A0  4D05                                 CMV,R4   5
          1 0001A1  0901 0030                            BE       s:7207,PREL

      284     7157    3         THEN DO;

      285     7158    3              IF KN$TCTX.PRIMARY

   7158   1 0001A3  82C6 000D                            LB,'0001'X        13,B6
   7158   1 0001A5       0001
          1 0001A6  0581 0023                            BBF      s:7178,PREL

      286     7159    4              THEN DO;

      287     7160    4                   IF (KN$TCTX.STATE=%K_TSTATE_WFCC OR KN$TCTX.STATE=%K_TSTATE_WFCC_R)

   7160   1 0001A8  4D03                                 CMV,R4   3
          1 0001A9  0901 0004                            BE       s:7161,PREL
          1 0001AB  4D0A                                 CMV,R4   10
          1 0001AC  0981 001D                            BNE      s:7178,PREL

      288     7161    5                   THEN DO;

      289     7162    5   LOCAL_NOT_OPEN:
      290     7163    5                        KN$TCTX.WAIT_4OPEN = '1'B;

   7163   1 0001AE  8946 000D            LOCAL_NOT_OPEN  LBT,'0020'X       13,B6
   7163   1 0001B0       0020
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:43   

      291     7164    5                        KN$TCTX.SERR.NOT_OPEN = KN$TCTX.SERR.NOT_OPEN +1;

   7164   1 0001B1  8AC6 000F                            INC      15,B6

      292     7165
      293     7166    5                        IF NOT(KN$LDCT.FLAGS.QUEUED)

   7166   1 0001B3  CC85                                 LDB,B4   ,B5
          1 0001B4  89C4 000A                            CMZ      10,B4
          1 0001B6  0801 000E                            BAL      s:7172,PREL

      294     7167    6                        THEN DO;

      295     7168    6                             KN$LDCT.FLAGS.QUEUED = '1'B;

   7168   1 0001B8  8944 000A                            LBT,'8000'X       10,B4
   7168   1 0001BA       8000

      296     7169    6                             KN$LDCT.LNK$ = KN$TCTX.LNK$;

   7169   1 0001BB  CC85                                 LDB,B4   ,B5
          1 0001BC  BCC6 0006                            LDB,B3   6,B6
          1 0001BE  BFC4 0008                            STB,B3   8,B4

      297     7170    6                             KN$TCTX.LNK$ = KN$NETPARM.LDCT$;

   7170   1 0001C0  EC85                                 LDB,B6   ,B5
          1 0001C1  CCC7 0008                            LDB,B4   CTX$,AUTO
          1 0001C3  EFC4 0006                            STB,B6   6,B4

      298     7171    6                             END;

      299     7172    5                        KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;

   7172   1 0001C5  6C07                                 LDV,R6   7
          1 0001C6  EF45 0016                            STR,R6   22,B5
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:44   

      300     7173    5                        GOTO UNLOCK_N_ALTRET;

   7173   1 0001C8  0F81 FEA9                            B        s:7010,PREL

      301     7174    5                        END/*do if wfcc*/;
      302     7175    4                   END/*do if primary connection*/;
      303     7176
      304     7177    3   REPORT_BAD_TSTATE:
      305     7178    3              IF KN$TCTX.STATE = %K_TSTATE_CLOSING

   7178   1 0001CA  4D08                 REPORT_BAD_TSTA*CMV,R4   8
          1 0001CB  0901 FF5D                            BE       s:7062,PREL
          1 0001CD  4D01                                 CMV,R4   1
          1 0001CE  0901 FF5A                            BE       s:7062,PREL

      306     7179    3                OR KN$TCTX.STATE = %K_TSTATE_REFWAIT
      307     7180    3              THEN GOTO UNLOCK_N_RETURN;
      308     7181
      309     7182    3              ELSE GOTO SCREECH_CHECK;

   7182   1 0001D0  0F81 00B9                            B        s:7305,PREL

      310     7183    3              END/*do if state not open*/;
      311     7184
      312     7185
      313     7186        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:45   
      314     7187        /* For Class 2 and Class 0 connections in the OPEN state, a call
      315     7188           is made to the appropriate KNT$SAVE routine to determine if the
      316     7189           SPDU must be split into smaller TPDUs, or, in the case of Class 2
      317     7190           with flow control, if the data must be buffered because there is
      318     7191           insufficient credits to send the data.
      319     7192
      320     7193           The alternate return will be taken from the KNT$SAVE routines if
      321     7194           we are out of transport buffer space or if we are out of credits
      322     7195           for sending the data.
      323     7196
      324     7197           On a normal return, the contents of KN$TCTX.SEND_HEAD$ will contain
      325     7198           the address of the buffered data if the KNT$SAVE routine determined
      326     7199           that buffering was necessary, and we will attempt to send this buffered
      327     7200           data by calling KNT$SEND_DT.  When .SEND_HEAD$ is nil, the KNT$SAVE
      328     7201           routine has built the TPDU_DT header for us in our auto.  The data
      329     7202           is transmitted to the remote end point by a call to KNH$SEND if
      330     7203           this is a connection-oriented network connection; by a call to KNN$SEND
      331     7204           if this is a connection-less network service.
      332     7205
      333     7206        */
      334     7207    2         IF KN$TCTX.CLASS=0

   7207   1 0001D2  6981 000B                            BNEZ,R6  s:7216,PREL

      335     7208    3         THEN DO;

      336     7209    3              CALL KNT$SAVE_CLASS0(KN$NETPARM) ALTRET(CANT_SAVE_DATA);

   7209   1 0001D4  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0001D6  CBF0 0100                            LAB,B4   256,IMO
          1 0001D8  E380 0000 0000  xent                 LNJ,B6   KNT$SAVE_CLASS0
          1 0001DB       FF96                            DC       s:7117,PREL

      337     7210    3              GOTO SEND_MSG_CHECK;

   7210   1 0001DC  0F81 000C                            B        s:7221,PREL

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:46   
      338     7211
      339     7212    3              END/*do if class 0*/;
      340     7213
      341     7214        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:47   
      342     7215
      343     7216    2         IF KN$TCTX.CLASS=2

   7216   1 0001DE  6D02                                 CMV,R6   2
          1 0001DF  0981 00BF                            BNE      s:7322,PREL

      344     7217    3         THEN DO;

      345     7218    3              CALL KNT$SAVE_CLASS2(KN$NETPARM) ALTRET(CANT_SAVE_DATA);

   7218   1 0001E1  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0001E3  CBF0 0100                            LAB,B4   256,IMO
          1 0001E5  E380 0000 0000  xent                 LNJ,B6   KNT$SAVE_CLASS2
          1 0001E8       FF89                            DC       s:7117,PREL

      346     7219
      347     7220    3   SEND_MSG_CHECK:
      348     7221    3              IF KN$TCTX.SEND_HEAD$ ~= ADDR(NIL)

   7221   1 0001E9  ECC7 0008            SEND_MSG_CHECK  LDB,B6   CTX$,AUTO
          1 0001EB  8DC6 003A                            CMN      58,B6
          1 0001ED  0901 000B                            BE       s:7228,PREL

      349     7222    4              THEN DO;

      350     7223    4                   CALL KNT$SEND_DT(KN$NETPARM);

   7223   1 0001EF  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0001F1  CBF0 0100                            LAB,B4   256,IMO
          1 0001F3  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DT
          1 0001F6       0001                            DC       s:7224,PREL

      351     7224    4                   GOTO UNLOCK_N_RETURN;

   7224   1 0001F7  0F81 FF31                            B        s:7062,PREL

      352     7225    4                   END;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:48   
      353     7226
      354     7227    4              ELSE DO;

      355     7228    4                   KN$NETPARM.MSG$ = KN$NETPARM.SHDR_C$;

   7228   1 0001F9  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 0001FB  8CC5 0008                            LDI      8,B5
          1 0001FD  8D45 0002                            SDI      2,B5

      356     7229    4                   KN$NETPARM.MSGSZ = KN$NETPARM.SHDRSZ;

   7229   1 0001FF  D845 000A                            LDR,R5   10,B5
          1 000201  DF45 0004                            STR,R5   4,B5

      357     7230    4                   KN$NETPARM.UHDRSZ = 0;

   7230   1 000203  8745 0007                            CL       7,B5

      358     7231    4                   KN$NETPARM.SHDRSZ = 0;

   7231   1 000205  8745 000A                            CL       10,B5

      359     7232
      360     7233    4                   IF KN$TCTX.OPTION.OSI

   7233   1 000207  ECC7 0008                            LDB,B6   CTX$,AUTO
          1 000209  82C6 000C                            LB,'0010'X        12,B6
          1 00020B       0010
          1 00020C  0581 0008                            BBF      s:7239,PREL

      361     7234    5                   THEN DO;

      362     7235    5                        KN$NETPARM.FUNCTION = %K_NDATA;

   7235   1 00020E  4C21                                 LDV,R4   33
          1 00020F  CF45 0014                            STR,R4   20,B5

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:49   
      363     7236    5                        KN$NETPARM.NHDRSZ = 0;

   7236   1 000211  8745 0010                            CL       16,B5

      364     7237    5                        END;

   7237   1 000213  0F81 0006                            B        s:7242,PREL

      365     7238    5                   ELSE DO;

      366     7239    5                        KN$NETPARM.NODE = KN$TCTX.NODE;

   7239   1 000215  C806                                 LDR,R4   ,B6
          1 000216  C570 00FF                            AND,R4   255,IMO
          1 000218  CF45 0015                            STR,R4   21,B5

      367     7240    5                        END;

      368     7241
      369     7242    4                   IF KN$TCTX.OPTION.CONS

   7242   1 00021A  82C6 000C                            LB,'0020'X        12,B6
   7242   1 00021C       0020
          1 00021D  0581 0036                            BBF      s:7272,PREL

      370     7243    5                   THEN DO;

      371     7244    5                        KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);

   7244   1 00021F  B806                                 LDR,R3   ,B6
          1 000220  B570 00FF                            AND,R3   255,IMO
          1 000222  CC80 0000 0000  xsym                 LDB,B4   KN_DCT$$
          1 000225  BCB4                                 LDB,B3   ,B4,R3
          1 000226  BF85                                 STB,B3   ,B5

      372     7245    5                        CALL KNH$SEND(KN$NETPARM)

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:50   
   7245   1 000227  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000229  CBF0 0100                            LAB,B4   256,IMO
          1 00022B  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          1 00022E       0016                            DC       s:7257,PREL

      373     7246    6                        WHENRETURN DO;

      374     7247    6   MSG_SENT:
      375     7248    6                             KN$TCTX.SEND_LWE = KN$TCTX.SEND_LWE +1;

   7248   1 00022F  ECC7 0008            MSG_SENT        LDB,B6   CTX$,AUTO
          1 000231  8AC6 0033                            INC      51,B6
          1 000233  8EC6 0032                            CAD      50,B6

      376     7249
      377     7250    6   TRACE_CHECK:
      378     7251    6                             IF KN$TCTX.OPTION.TRACE

   7251   1 000235  82C6 000C            TRACE_CHECK     LB,'0040'X        12,B6
   7251   1 000237       0040
          1 000238  0581 0009                            BBF      s:7254,PREL

      379     7252    6                             THEN CALL KNT$TR_SEND(KN$NETPARM);

   7252   1 00023A  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 00023C  CBF0 0100                            LAB,B4   256,IMO
          1 00023E  E380 0000 0000  xent                 LNJ,B6   KNT$TR_SEND
          1 000241       0001                            DC       s:7254,PREL

      380     7253
      381     7254    6                             GOTO UNLOCK_N_RETURN;

   7254   1 000242  0F81 FEE6                            B        s:7062,PREL

      382     7255    6                             END;
      383     7256
      384     7257    6                        WHENALTRETURN DO;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:51   

      385     7258    6   ALTRET_4_Q:
      386     7259    6                             IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ

   7259   1 000244  ECC7 0004            ALTRET_4_Q      LDB,B6   @KN$NETPARM,AUTO
          1 000246  E846 0016                            LDR,R6   22,B6
          1 000248  6D01                                 CMV,R6   1
          1 000249  0901 0004                            BE       s:7262,PREL
          1 00024B  6D07                                 CMV,R6   7
          1 00024C  0981 0042                            BNE      s:7308,PREL

      387     7260    6                               OR KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
      388     7261    7                             THEN DO;

      389     7262    7                                  KN$TCTX.SERR.NOQ = KN$TCTX.SERR.NOQ +1;

   7262   1 00024E  DCC7 0008                            LDB,B5   CTX$,AUTO
          1 000250  8AC5 0013                            INC      19,B5

      390     7263        /* leave                       KN$NETPARRM.ERRCODE = KN_ERR_NOQ; */
      391     7264    7                                  GOTO UNLOCK_N_ALTRET;

   7264   1 000252  0F81 FE1F                            B        s:7010,PREL

      392     7265    7                                  END;
      393     7266
      394     7267    6                             ELSE GOTO FORCE_SCREECH;
      395     7268    6                             END;
      396     7269    5                        END/*do for CONS*/;
      397     7270
      398     7271    5                   ELSE DO/*for CLNS*/;

      399     7272    5                        KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);

   7272   1 000254  CBC6 009A                            LAB,B4   154,B6
          1 000256  CFC5 001D                            STB,B4   29,B5

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:52   
      400     7273    5                        KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);

   7273   1 000258  BBC6 00A5                            LAB,B3   165,B6
          1 00025A  BFC5 001F                            STB,B3   31,B5

      401     7274
      402     7275    5                        CALL KNN$SEND(KN$NETPARM) ALTRET(ALTRET_4_Q);

   7275   1 00025C  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 00025E  CBF0 0100                            LAB,B4   256,IMO
          1 000260  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          1 000263       FFE1                            DC       s:7257,PREL

      403     7276
      404     7277    5                        GOTO MSG_SENT;

   7277   1 000264  0FCB                                 B        s:7246,SPREL

      405     7278    5                        END/*do for CLNS*/;
      406     7279
      407     7280    3                   END;/*do if not buffered*/;
      408     7281
      409     7282    3              END/*class 2 open*/;
      410     7283
      411     7284        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:53   
      412     7285        /* If we get here, we came from SEND_4HOST.  Note that the checks for
      413     7286           expedited data allowed on this transport connection and for
      414     7287           SPDU size > 16 was done on the host, so we wont duplicate it here.
      415     7288        */
      416     7289    2       CASE (%K_TEXPD_DATA_REQ);

      417     7290
      418     7291    2         IF KN$TCTX.STATE = %K_TSTATE_OPEN

   7291   1 000265  DCC7 0008                            LDB,B5   CTX$,AUTO
          1 000267  E285                                 LLH,R6   ,B5
          1 000268  6D05                                 CMV,R6   5
          1 000269  0981 0013                            BNE      s:7298,PREL

      419     7292    3         THEN DO;

      420     7293    3              CALL KNT$SAVE_ED(KN$NETPARM) ALTRET(CANT_SAVE_DATA);

   7293   1 00026B  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 00026D  CBF0 0100                            LAB,B4   256,IMO
          1 00026F  E380 0000 0000  xent                 LNJ,B6   KNT$SAVE_ED
          1 000272       FEFF                            DC       s:7117,PREL

      421     7294    3              CALL KNT$SEND_ED(KN$NETPARM);

   7294   1 000273  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000275  CBF0 0100                            LAB,B4   256,IMO
          1 000277  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_ED
          1 00027A       0001                            DC       s:7295,PREL

      422     7295    3              GOTO UNLOCK_N_RETURN;

   7295   1 00027B  0F81 FEAD                            B        s:7062,PREL

      423     7296    3              END;
      424     7297
      425     7298    2         IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:54   

   7298   1 00027D  6D07                                 CMV,R6   7
          1 00027E  0981 0020                            BNE      s:7322,PREL

      426     7299    3         THEN DO;

      427     7300    3              CALL KNT$SAVE_ED(KN$NETPARM) ALTRET(CANT_SAVE_DATA);

   7300   1 000280  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000282  CBF0 0100                            LAB,B4   256,IMO
          1 000284  E380 0000 0000  xent                 LNJ,B6   KNT$SAVE_ED
          1 000287       FEEA                            DC       s:7117,PREL

      428     7301    3              GOTO SIGNAL_FLOW_STOP;

   7301   1 000288  0F81 FF0F                            B        s:7141,PREL

      429     7302    3              END;
      430     7303        %EJECT;
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:55   
      431     7304
      432     7305    2       CASE(ELSE);

      433     7306    2   SCREECH_CHECK:
      434     7307    2         IF KNT_ERROR_SCREECH ~= 0

   7307   1 00028A  E800 0000 0000  xsym SCREECH_CHECK   LDR,R6   KNT_ERROR_SCREECH
          1 00028D  6901 000A                            BEZ,R6   s:7313,PREL

      435     7308    3         THEN DO;

      436     7309    3   FORCE_SCREECH:
      437     7310    3              CALL SCREECH(KNT_SCODE);

   7310   1 00028F  BB80 0000 0002  02   FORCE_SCREECH   LAB,B3   +2
          1 000292  CBF0 0100                            LAB,B4   256,IMO
          1 000294  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 000297       0001                            DC       s:7313,PREL

      438     7311    3              END;

      439     7312
      440     7313    2         KN$NETPARM.ERRCODE = %KN_ERR_INVFCN;

   7313   1 000298  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 00029A  6C02                                 LDV,R6   2
          1 00029B  EF46 0016                            STR,R6   22,B6

      441     7314
      442     7315    2         GOTO UNLOCK_N_ALTRET;

   7315   1 00029D  0F81 FDD4                            B        s:7010,PREL

      443     7316
      444     7317    2         END/*do case(function)*/;

      445     7318
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:56   
      446     7319
      447     7320
      448     7321
      449     7322    1   END KNT$SEND;

   7322   1 00029F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      450     7323        %EOD;

PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:57   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SEND.
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:58   

 **** Variables and constants ****

  ****  Section 000  Data  KNT$SEND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 KNT_LOCKOUT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM                8-0-0/w PTR         r     1 CTX$
    18-0-0/w UBIN(16)    r     1 ENTRY_SWITCH               A-0-0/w PTR         r     1 FPT$
    14-0-0/w STRC(64)    r     1 K$TPDU_DT_EXT             *0-0-0/w STRC(528)   r     1 KN$NETPARM
     C-0-0/w PTR         r     1 QQQ$                       E-0-0/w SBIN(16)    r     1 TCTX_ID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_DEFAULT_CHKSUM         0-0-0/w UBIN(16)    r     1 KNT_DEFAULT_TPDUSZ
     0-0-0/w UBIN(16)    r     1 KNT_ERROR_SCREECH          0-0-0/w UBIN(32)    r     1 KNT_SCODE
     0-0-0/w UBIN(16)    r     1 KNT_WINDOW_NORMAL          0-0-0/w PTR         r     1 KN_DCT$$
     0-0-0/w PTR         r     1 KN_TCTX$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(304)   r     1 FPT_CONNECT                0-0-0/w STRC(256)   r     1 KN$LDCT
     0-0-0/w PTR         r     1 KN$LDCT$(0:0)
     0-0-0/w STRC(2816)  r     1 KN$TCTX
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:59   
     0-0-0/w PTR         r     1 KN$TCTX$(0:0)


   Procedure KNT$SEND requires 674 words for executable code.
   Procedure KNT$SEND requires 28 words of local(AUTO) storage.
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:60   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:61   
          MINI XREF LISTING

ALTRET_4_Q
      7259**LABEL    7275--CALLALT
CANT_SAVE_DATA
      7119**LABEL    7142--CALLALT  7209--CALLALT  7218--CALLALT  7293--CALLALT  7300--CALLALT
COMMON
      6979**LABEL    6976--GOTO
CTX$
      5445**DCL      5669--IMP-PTR  6986<<ASSIGN   6987>>ASSIGN   7008<>CALL     7024>>ASSIGN   7025>>ASSIGN
      7027>>ASSIGN   7029>>ASSIGN   7033>>ASSIGN   7036>>ASSIGN   7037>>ASSIGN   7038>>ASSIGN   7039>>ASSIGN
      7040>>ASSIGN   7041>>ASSIGN   7042>>ASSIGN   7043>>ASSIGN   7045>>IF       7047>>ASSIGN   7048>>ASSIGN
      7049>>ASSIGN   7049>>ASSIGN   7052>>ASSIGN   7056>>ASSIGN   7057>>ASSIGN   7059>>IF       7060>>CALL
      7062>>ASSIGN   7066<>CALL     7107>>IF       7109>>IF       7122>>ASSIGN   7124>>IF       7136>>IF
      7138>>IF       7141>>ASSIGN   7141>>ASSIGN   7144>>ASSIGN   7156>>IF       7158>>IF       7160>>IF
      7160>>IF       7163>>ASSIGN   7164>>ASSIGN   7164>>ASSIGN   7169>>ASSIGN   7170>>ASSIGN   7178>>IF
      7178>>IF       7207>>IF       7216>>IF       7221>>IF       7233>>IF       7239>>ASSIGN   7242>>IF
      7244>>ASSIGN   7248>>ASSIGN   7248>>ASSIGN   7251>>IF       7262>>ASSIGN   7262>>ASSIGN   7272>>ASSIGN
      7273>>ASSIGN   7291>>IF       7298>>IF
ENTRY_SWITCH
      5610**DCL      6975<<ASSIGN   6979<<ASSIGN
FORCE_SCREECH
      7310**LABEL    7267--GOTO
FPT$
      5446**DCL      6832--IMP-PTR  6982<<ASSIGN   7024>>ASSIGN   7039>>ASSIGN   7040>>ASSIGN   7041>>ASSIGN
FPT_CONNECT.CLASS
      6872**DCL      7040>>ASSIGN
FPT_CONNECT.RLCID.GENERATION
      6868**DCL      6869--REDEF
FPT_CONNECT.RLCID.LDCTX
      6869**DCL      6869--REDEF
FPT_CONNECT.RLCID.NODE
      6868**DCL      7024>>ASSIGN
FPT_CONNECT.SERVICE
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:62   
      6871**DCL      7039>>ASSIGN
FPT_CONNECT.TERMINAL_ID.TERM
      6857**DCL      6866--REDEF
FPT_CONNECT.TR_FLAGS
      6873**DCL      7041>>ASSIGN
GHH$LOCK
        51**DCL-ENT  6994--CALL
GHH$UNLOCK
        51**DCL-ENT  7019--CALL     7077--CALL
GHS$SET_TMR
      5628**DCL-ENT  7060--CALL
K$TPDU_DT_EXT
      5561**DCL      7095--ASSIGN   7096<<ASSIGN
KN$LDCT.CONN_TYPE
      6589**DCL      7031>>IF
KN$LDCT.FLAGS.QUEUED
      6765**DCL      7166>>IF       7168<<ASSIGN
KN$LDCT.LNK$
      6734**DCL      7169<<ASSIGN
KN$LDCT.RLCID.LDCTX
      6649**DCL      6656--REDEF    6664--REDEF
KN$LDCT.TRANSPORT_ID
      6683**DCL      6691--REDEF    7033<<ASSIGN
KN$LDCT.UID
      6713**DCL      6714--REDEF    6723--REDEF
KN$LDCT$
      6572**DCL      7244>>ASSIGN
KN$NETPARM
      5302**DCL         9--PROC     6978--ENTRY    7064<>CALL     7111<>CALL     7113<>CALL     7142<>CALL
      7209<>CALL     7218<>CALL     7223<>CALL     7245<>CALL     7252<>CALL     7275<>CALL     7293<>CALL
      7294<>CALL     7300<>CALL
KN$NETPARM.DST_ADDR$
      5436**DCL      7273<<ASSIGN
KN$NETPARM.ERRCODE
      5409**DCL      7010<<ASSIGN   7119>>IF       7125<<ASSIGN   7172<<ASSIGN   7259>>IF       7259>>IF
      7313<<ASSIGN
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:63   
KN$NETPARM.FPT$
      5421**DCL      6982>>ASSIGN
KN$NETPARM.FUNCTION
      5397**DCL      6997>>DOCASE   7235<<ASSIGN
KN$NETPARM.LDCT$
      5303**DCL      6588--IMP-PTR  6983>>ASSIGN   7013<<ASSIGN   7031>>IF       7033>>ASSIGN   7071<<ASSIGN
      7166>>IF       7168>>ASSIGN   7169>>ASSIGN   7170>>ASSIGN   7244<<ASSIGN
KN$NETPARM.MSG$
      5309**DCL      5314--REDEF    7228<<ASSIGN
KN$NETPARM.MSGSZ
      5320**DCL      7229<<ASSIGN
KN$NETPARM.NHDR$
      5361**DCL      5362--REDEF
KN$NETPARM.NHDRSZ
      5367**DCL      7236<<ASSIGN
KN$NETPARM.NODE
      5404**DCL      7025<<ASSIGN   7239<<ASSIGN
KN$NETPARM.SHDR$
      5339**DCL      5340--REDEF
KN$NETPARM.SHDRSZ
      5345**DCL      7229>>ASSIGN   7231<<ASSIGN
KN$NETPARM.SHDR_C$
      5340**DCL      7228>>ASSIGN
KN$NETPARM.SRC_ADDR$
      5431**DCL      7272<<ASSIGN
KN$NETPARM.TCTX$
      5426**DCL      6987<<ASSIGN   7029<<ASSIGN
KN$NETPARM.TCTX_ID
      5372**DCL      6985>>ASSIGN   7028<<ASSIGN   7090>>IF
KN$NETPARM.THDR$
      5350**DCL      5351--REDEF    7095<<ASSIGN
KN$NETPARM.UHDR$
      5325**DCL      5326--REDEF
KN$NETPARM.UHDRSZ
      5334**DCL      7230<<ASSIGN
KN$TCTX.CLASS
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:64   
      5735**DCL      7040<<ASSIGN   7059>>IF       7107>>IF       7207>>IF       7216>>IF
KN$TCTX.DST_NSAP
      6524**DCL      7273--ASSIGN
KN$TCTX.DST_NSAP.ADDRESS_N
      6554**DCL      6555--REDEF
KN$TCTX.FLOW_CONTROLLED
      5884**DCL      7122<<ASSIGN   7144<<ASSIGN
KN$TCTX.LDCTX#
      5689**DCL      7244>>ASSIGN
KN$TCTX.LNK$
      5753**DCL      7169>>ASSIGN   7170<<ASSIGN
KN$TCTX.MAXSEQ
      5773**DCL      7047<<ASSIGN
KN$TCTX.NODE
      5676**DCL      5689--REDEF    7024<<ASSIGN   7025>>ASSIGN   7239>>ASSIGN
KN$TCTX.OPTION
      5774**DCL      7041<<ASSIGN
KN$TCTX.OPTION.CHKSUM
      5832**DCL      7052<<ASSIGN
KN$TCTX.OPTION.CONS
      5788**DCL      7242>>IF
KN$TCTX.OPTION.EXPEDITED
      5820**DCL      7043<<ASSIGN
KN$TCTX.OPTION.EXTENDED
      5812**DCL      7045>>IF
KN$TCTX.OPTION.OSI
      5797**DCL      7042<<ASSIGN   7233>>IF
KN$TCTX.OPTION.TRACE
      5783**DCL      7251>>IF
KN$TCTX.OUTBOUND
      5906**DCL      7037<<ASSIGN
KN$TCTX.PRIMARY
      5914**DCL      7036<<ASSIGN   7124>>IF       7138>>IF       7158>>IF
KN$TCTX.QOS
      5724**DCL      7039<<ASSIGN
KN$TCTX.RCV_WINDOW_SZ
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:65   
      5741**DCL      7048<<ASSIGN   7049>>ASSIGN
KN$TCTX.RECV_UWE
      6047**DCL      7049<<ASSIGN
KN$TCTX.SEND_HEAD$
      6130**DCL      7221>>IF
KN$TCTX.SEND_LWE
      6097**DCL      7248<<ASSIGN   7248>>ASSIGN
KN$TCTX.SEND_RETRY_COUNT
      6213**DCL      7038<<ASSIGN
KN$TCTX.SERR.NOQ
      5961**DCL      7262<<ASSIGN   7262>>ASSIGN
KN$TCTX.SERR.NOT_OPEN
      5933**DCL      7141<<ASSIGN   7141>>ASSIGN   7164<<ASSIGN   7164>>ASSIGN
KN$TCTX.SRC_NSAP
      6460**DCL      7272--ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      6490**DCL      6491--REDEF
KN$TCTX.SRC_REF
      5703**DCL      7027>>ASSIGN   7033>>ASSIGN
KN$TCTX.STATE
      5670**DCL      7062<<ASSIGN   7109>>IF       7136>>IF       7156>>IF       7160>>IF       7160>>IF
      7178>>IF       7178>>IF       7291>>IF       7298>>IF
KN$TCTX.TMR_INACTIVITY.ARG
      6310**DCL      6311--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      6340**DCL      6341--REDEF
KN$TCTX.TMR_RETRAN
      6249**DCL      7060<>CALL
KN$TCTX.TMR_RETRAN.ARG
      6251**DCL      6252--REDEF
KN$TCTX.TMR_WINDOW.ARG
      6280**DCL      6281--REDEF
KN$TCTX.TPDUSZ_PARM
      5771**DCL      7056<<ASSIGN   7057<<ASSIGN
KN$TCTX.WAIT_4OPEN
      5870**DCL      7163<<ASSIGN
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:66   
KN$TCTX$
      6571**DCL      6986>>ASSIGN
KNA$GETTCTX
      5615**DCL-ENT  7008--CALL
KNA$RELTCTX
      5616**DCL-ENT  7066--CALL
KNH$SEND
      5617**DCL-ENT  7245--CALL
KNN$SEND
      5618**DCL-ENT  7275--CALL
KNT$SAVE_CLASS0
      5621**DCL-ENT  7209--CALL
KNT$SAVE_CLASS2
      5622**DCL-ENT  7218--CALL
KNT$SAVE_DT
      5619**DCL-ENT  7111--CALL     7142--CALL
KNT$SAVE_ED
      5620**DCL-ENT  7293--CALL     7300--CALL
KNT$SEND_CR
      5624**DCL-ENT  7064--CALL
KNT$SEND_DT
      5626**DCL-ENT  7113--CALL     7223--CALL
KNT$SEND_ED
      5627**DCL-ENT  7294--CALL
KNT$TR_SEND
      5630**DCL-ENT  7252--CALL
KNT_DEFAULT_CHKSUM
      5634**DCL      7052>>IF
KNT_DEFAULT_TPDUSZ
      5635**DCL      7054>>IF       7054>>IF       7056>>ASSIGN
KNT_ERROR_SCREECH
      5639**DCL      7307>>IF
KNT_LOCKOUT
      5655**DCL      6994<>CALL     7019<>CALL     7077<>CALL
KNT_SCODE
      5640**DCL      7092<>CALL     7310<>CALL
PL6.E3A0      #001=KNT$SEND File=KNT$SEND.:E05TSI                                WED 07/30/97 01:11 Page:67   
KNT_WINDOW_NORMAL
      5636**DCL      7048>>ASSIGN
KN_DCT$$
      5638**DCL      6572--IMP-PTR  7244>>ASSIGN
KN_TCTX$$
      5637**DCL      6571--IMP-PTR  6986>>ASSIGN
LOCAL_NOT_OPEN
      7163**LABEL    7139--GOTO
MSG_SENT
      7248**LABEL    7277--GOTO
QQQ$
      5447**DCL      6983<<ASSIGN   7013>>ASSIGN   7071>>ASSIGN
SCREECH
      5631**DCL-ENT  7092--CALL     7310--CALL
SCREECH_CHECK
      7307**LABEL    7182--GOTO
SEND_MSG_CHECK
      7221**LABEL    7210--GOTO
SIGNAL_FLOW_STOP
      7141**LABEL    7301--GOTO
TCTX_ID
      5448**DCL      6985<<ASSIGN   6986>>ASSIGN   7027<<ASSIGN   7028>>ASSIGN
UNLOCK_N_ALTRET
      7010**LABEL    7067--GOTO     7120--GOTO     7127--GOTO     7145--GOTO     7173--GOTO     7264--GOTO
      7315--GOTO
UNLOCK_N_RETURN
      7062**LABEL    7114--GOTO     7180--GOTO     7224--GOTO     7254--GOTO     7295--GOTO

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:68   
      451        1        /*M* KNT$SAVE - Save data and expdiated data for retransmission. */
      452        2        /*T***********************************************************/
      453        3        /*T*                                                         */
      454        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      455        5        /*T*                                                         */
      456        6        /*T***********************************************************/
      457        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
      458        8
      459        9        /*F* NAME: KNT$SAVE
      460       10
      461       11             ENTRY: KNT$SAVE_DT
      462       12             ENTRY: KNT$SAVE_ED
      463       13             ENTRY: KNT$SAVE_CLASS2
      464       14             ENTRY: KNT$SAVE_CLASS0
      465       15
      466       16             INPUT: KN$NETPARM.TCTX$ -> the TCTX for the transport connection
      467       17                                        that is sending data.
      468       18                    KN$NETPARM.THDR$ -> auto storage where the TPDU header
      469       19                                        may be built.
      470       20
      471       21             PURPOSE:
      472       22                 To save the data TPDUs for possible retransmission and/or
      473       23                 break a large SPDU into smaller TPDUs for transmission.
      474       24
      475       25             DESCRIPTION:
      476       26                 The entry points KNT$SAVE_CLASS2 and KNT$SAVE_CLASS0
      477       27                 provide for simply building the TPDU data header if there is
      478       28                 no need to buffer; if the SPDU plus TPDU header fit within
      479       29                 the maximum TPDU size, and, if Class 2 with the flow control
      480       30                 option, there are sufficient credits to send the data.
      481       31                 When buffering is necessary, the TPDU header is built in
      482       32                 the buffer itself, rather than in the auto storage area located
      483       33                 via KN$NETPARM.THDR$.
      484       34
      485       35                 Class 4 data is always buffered for possible later retransmission.
      486       36
      487       37                 The buffer is obtained and filled for data or expedited data.
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:69   
      488       38                 If the data to be saved is larger than the maximum TPDU size,
      489       39                 the data is saved in a series of linked buffers.
      490       40
      491       41                 The alternate return is taken with kn$netparm.errcode set
      492       42                 to KN_ERR_NOQ2 if we run out of transport buffers.
      493       43
      494       44                 The alternate return is taken with kn$netparm.errcode set
      495       45                 to ERROR_FLOW if we have buffered more than the limit as
      496       46                 specified in (KN$TCTX.RCV_WINDOW_SZ *4).  If this is a primary connection
      497       47                 the data will not have been buffered; if an intermediate
      498       48                 connection the host data will have been buffered.
      499       49        */
      500       50        KNT$SAVE: PROC(KN$NETPARM)  ALTRET;
      501       51
      502       52        %INCLUDE K_ADDRESS_M;
      503      555        %INCLUDE KN_DATA_M;
      504     2341        %INCLUDE K_TRANSPORT_E;
      505     2666        %INCLUDE K_TRANSPORT_M;
      506     4450        %INCLUDE GH_SCHD_M;
      507     4594
      508     4595                                                /* Input parameters                   */
      509     4596        %KN$NETPARM;
      510     4749
      511     4750                                                /* Auto Storage                       */
      512     4751    1   DCL CTX$ PTR;
      513     4752    1   DCL MOVE$ CPTR;
      514     4753    1   DCL LDCT$ REDEF MOVE$ PTR;
      515     4754    1   DCL TPDU$ CPTR;
      516     4755    1   DCL SPDU$ CPTR;
      517     4756    1   DCL FRAG$ PTR;
      518     4757    1   DCL FIRST_FRAG$ PTR;
      519     4758    1   DCL LAST_FRAG$ PTR;
      520     4759    1   DCL FRAG_SZ SBIN;
      521     4760    1   DCL THDR_SZ SBIN;
      522     4761    1   DCL THIS_SPDUSZ SBIN;
      523     4762    1   DCL SPDU_SZ SBIN;
      524     4763    1   DCL MOVE_SZ SBIN;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:70   
      525     4764    1   DCL SEND_NEXT UBIN(32);
      526     4765    1   DCL CHKOFF SBIN;
      527     4766    1   DCL EXTRA SBIN(32);
      528     4767    1   DCL FRAGS# UBIN;
      529     4768    1   DCL BUFFER_TPDU UBIN;
      530     4769    1   DCL ENTRY_SWITCH SBIN;                  /* 0 = normal data - class 0          */
      531     4770                                                /* 1 = exped. data - classes 2 and 4  */
      532     4771                                                /* 2 = normal data - class 2          */
      533     4772                                                /* 15 = normal data - class 4         */
      534     4773
      535     4774                                                /* Based Data                         */
      536     4775        %K$FRAG_HDR (NAME=FRAG_HDR,STCLASS="BASED(FRAG$)");
      537     4858
      538     4859        %K$TPDU_GENERIC (NAME=B$TPDU, STCLASS="BASED(TPDU$)");
      539     4919        %K$TPDU_DT (NAME=B$TPDU_DT, STCLASS="BASED(TPDU$)");
      540     4969        %K$TPDU_DT_EXT (NAME=B$TPDU_DT_EXT, STCLASS="BASED(TPDU$)");
      541     5033        %K$TPDU_DT_0 (NAME=B$TPDU_DT_0, STCLASS="BASED(TPDU$)");
      542     5078
      543     5079        %K$TPARM_CHKSUM (ALGN=CALIGNED);
      544     5119
      545     5120    1   DCL B$SPDU CHAR(MOVE_SZ) BASED CALIGNED;
      546     5121    1   DCL B$BIT32 BIT(32) BASED CALIGNED;
      547     5122    1   DCL B$CHAR4 CHAR(4) BASED CALIGNED;
      548     5123    1   DCL B$CHAR CHAR(MOVE_SZ) BASED CALIGNED;
      549     5124    1   DCL B$CHAR_ALGN CHAR(MOVE_SZ) BASED ALIGNED;
      550     5125
      551     5126        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
      552     6033        %KN$LDCT (STCLASS=BASED);
      553     6278        %K$TPDU_DT (ALGN=CALIGNED, STCLASS="BASED(TPDU$)");
      554     6328        %K$TPDU_DT_EXT (ALGN=CALIGNED, STCLASS="BASED(TPDU$)");
      555     6392        %K$TPDU_DT_0 (ALGN=CALIGNED, STCLASS="BASED(TPDU$)");
      556     6437
      557     6438                                                /* External Data                      */
      558     6439    1   DCL 1 K_CKSUM_INIT CHAR(4) SYMREF;
      559     6440    1   DCL KNT_WAIT_HEAD$ PTR SYMREF;
      560     6441    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      561     6442
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:71   
      562     6443                                                /* External routines                  */
      563     6444    1   DCL KNT$GET_SBUF ENTRY(3) ALTRET;
      564     6445    1   DCL KNT$RELBUF ENTRY(2);
      565     6446    1   DCL KNA$CALC_CHKSUM ENTRY(3) ALTRET;
      566     6447        %EJECT;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:72   
      567     6448        /*F* NAME: KNT$SAVE_DT and KNT$SAVE_ED
      568     6449
      569     6450        Called from KNT$SEND.
      570     6451        */
      571     6452    1   KNT$SAVE_CLASS2: ENTRY(KN$NETPARM) ALTRET;
      572     6453    1      ENTRY_SWITCH = 2;
      573     6454    1      GOTO CHECK_WINDOW;
      574     6455
      575     6456    1   KNT$SAVE_DT: ENTRY(KN$NETPARM) ALTRET;
      576     6457    1      ENTRY_SWITCH = %K_TPDU_TYPE_DT;
      577     6458
      578     6459    1   CHECK_WINDOW:
      579     6460    1      CTX$ = KN$NETPARM.TCTX$;
      580     6461
      581     6462    1      EXTRA = 0;
      582     6463
      583     6464    1      IF KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='0'B
      584     6465    1      THEN GOTO COMMON;
      585     6466
      586     6467    1      IF ( KN$TCTX.SEND_LWE <= KN$TCTX.SEND_UWE )
      587     6468    2      THEN DO;
      588     6469    2           IF ( KN$TCTX.SEND_NEXT >= KN$TCTX.SEND_UWE ) OR
      589     6470    2             ( KN$TCTX.SEND_NEXT < KN$TCTX.SEND_LWE )
      590     6471    3           THEN DO;
      591     6472
      592     6473    3                EXTRA = KN$TCTX.SEND_NEXT - KN$TCTX.SEND_LWE;
      593     6474    3                IF EXTRA < 0
      594     6475    3                THEN EXTRA = EXTRA + KN$TCTX.MAXSEQ + 1;
      595     6476    3                END;
      596     6477    2           END;
      597     6478
      598     6479    2      ELSE DO/*when send_lwe >send_uwe*/;
      599     6480    2           IF ( KN$TCTX.SEND_NEXT >= KN$TCTX.SEND_UWE ) AND
      600     6481    2             ( KN$TCTX.SEND_NEXT < KN$TCTX.SEND_LWE )
      601     6482    3           THEN DO;
      602     6483    3                EXTRA = KN$TCTX.MAXSEQ - KN$TCTX.SEND_LWE + KN$TCTX.SEND_NEXT;
      603     6484    3                END;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:73   
      604     6485    2           END;
      605     6486
      606     6487    1      IF ( EXTRA = (4*KN$TCTX.RCV_WINDOW_SZ) )
      607     6488    2      THEN DO;
      608     6489    2           KN$NETPARM.ERRCODE = %K_ERROR_FLOW;
      609     6490    2           KN$TCTX.SERR.BUF_OVFLOW = KN$TCTX.SERR.BUF_OVFLOW +1;
      610     6491    2           END;
      611     6492
      612     6493    1      GOTO COMMON;
      613     6494
      614     6495    1   KNT$SAVE_ED: ENTRY(KN$NETPARM) ALTRET;
      615     6496    1      ENTRY_SWITCH = %K_TPDU_TYPE_ED;
      616     6497    1      GOTO COMMON;
      617     6498
      618     6499    1   KNT$SAVE_CLASS0: ENTRY(KN$NETPARM) ALTRET;
      619     6500    1      ENTRY_SWITCH = 0;
      620     6501    1      GOTO COMMON;
      621     6502
      622     6503
      623     6504    1   COMMON: ;
      624     6505    1      FIRST_FRAG$ = ADDR(NIL);
      625     6506    1      FRAGS# = 0;
      626     6507    1      CTX$ = KN$NETPARM.TCTX$;
      627     6508
      628     6509        /* Compute the size of the transport header and chksum param.
      629     6510        */
      630     6511    1      IF KN$TCTX.OPTION.EXTENDED ~= '0'B
      631     6512    1      THEN THDR_SZ = SIZEC(K$TPDU_DT_EXT);
      632     6513    1      ELSE IF ENTRY_SWITCH = 0
      633     6514    1           THEN THDR_SZ = SIZEC(K$TPDU_DT_0);
      634     6515    1           ELSE THDR_SZ = SIZEC(K$TPDU_DT);
      635     6516
      636     6517    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B
      637     6518    2      THEN DO;
      638     6519    2           CHKOFF = THDR_SZ + 3;
      639     6520    2           THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CHKSUM);
      640     6521    2           END;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:74   
      641     6522
      642     6523    1      IF KN$TCTX.OPTION.OSI = '0'B
      643     6524    1      THEN THDR_SZ = ( (THDR_SZ +1) /2) * 2;
      644     6525
      645     6526    1      KN$NETPARM.THDRSZ = THDR_SZ;
      646     6527
      647     6528    1      IF ENTRY_SWITCH ~= %K_TPDU_TYPE_ED
      648     6529    1      THEN SEND_NEXT = KN$TCTX.SEND_NEXT;
      649     6530    1      ELSE SEND_NEXT = KN$TCTX.SEND_EXPD;
      650     6531
      651     6532    1      SPDU_SZ = 0;
      652     6533
      653     6534    1      IF KN$NETPARM.SHDR_C$ ~= ADDR(NIL)
      654     6535    1      THEN SPDU_SZ = SPDU_SZ + KN$NETPARM.SHDRSZ;
      655     6536
      656     6537    1      IF KN$NETPARM.UHDR_C$ ~= ADDR(NIL)
      657     6538    1      THEN SPDU_SZ = SPDU_SZ + KN$NETPARM.UHDRSZ;
      658     6539
      659     6540    1      IF KN$NETPARM.MSG$ ~= ADDR(NIL)
      660     6541    1      THEN SPDU_SZ = SPDU_SZ + KN$NETPARM.MSGSZ;
      661     6542
      662     6543        /* Determine if we should build a full fragment or just the TPDU header.
      663     6544        */
      664     6545    1      TPDU$ = KN$NETPARM.THDR$;
      665     6546
      666     6547    1      IF KN$TCTX.CLASS ~= 4
      667     6548    2      THEN DO;
      668     6549    2           BUFFER_TPDU = 0;
      669     6550    2           B$TPDU.LI = THDR_SZ -1;
      670     6551
      671     6552    2           IF THDR_SZ + SPDU_SZ <= KN$TCTX.TPDUSZ
      672     6553    2           THEN GOTO BUILD_TPDU_INFO;
      673     6554    2           END;
      674     6555
      675     6556    1      BUFFER_TPDU = 1;
      676     6557
      677     6558    2      DO WHILE (SPDU_SZ > 0 );
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:75   
      678     6559
      679     6560        /* Compute the size of the transport info + size of the SPDU.
      680     6561        */
      681     6562    2           FRAG_SZ = THDR_SZ + SPDU_SZ;
      682     6563
      683     6564        /* See if we have to split it up into multiple TPDU's.
      684     6565        */
      685     6566    2           IF FRAG_SZ > KN$TCTX.TPDUSZ
      686     6567    3           THEN DO;
      687     6568    3                THIS_SPDUSZ = KN$TCTX.TPDUSZ - THDR_SZ;
      688     6569    3                FRAG_SZ = KN$TCTX.TPDUSZ;
      689     6570    3                SPDU_SZ = SPDU_SZ - THIS_SPDUSZ;
      690     6571    3                END;
      691     6572    3           ELSE DO;
      692     6573    3                THIS_SPDUSZ = SPDU_SZ;
      693     6574    3                SPDU_SZ = 0;
      694     6575    3                END;
      695     6576
      696     6577        /* Get a buffer for this part and initialize the fragment header.
      697     6578           If we run out of memory, undo all that we did here.
      698     6579        */
      699     6580    2           CALL KNT$GET_SBUF(FRAG_SZ,FRAG$,KN$TCTX)
      700     6581    3           WHENRETURN DO;
      701     6582    3                IF FIRST_FRAG$ = ADDR(NIL)
      702     6583    3                THEN FIRST_FRAG$ = FRAG$;
      703     6584    3                ELSE LAST_FRAG$->FRAG_HDR.LINK$ = FRAG$;
      704     6585    3                LAST_FRAG$ = FRAG$;
      705     6586    3                END;
      706     6587
      707     6588    3           WHENALTRETURN DO;
      708     6589    4                DO WHILE (FIRST_FRAG$ ~= ADDR(NIL));
      709     6590    4                     FRAG$ = FIRST_FRAG$;
      710     6591    4                     FIRST_FRAG$ = FRAG$->FRAG_HDR.LINK$;
      711     6592    4                     CALL KNT$RELBUF (FRAG$->FRAG_HDR, KN$TCTX);
      712     6593    4                     END/*do while*/;
      713     6594
      714     6595    3                IF KN$TCTX.PRIMARY
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:76   
      715     6596    3                THEN LDCT$ = KN$NETPARM.LDCT$;
      716     6597    3                ELSE LDCT$ = KN$NETPARM.SLDCT$;
      717     6598
      718     6599    3                IF NOT LDCT$->KN$LDCT.FLAGS.QUEUED
      719     6600    4                THEN DO;
      720     6601    4                     LDCT$->KN$LDCT.FLAGS.QUEUED = '1'B;
      721     6602    4                     LDCT$->KN$LDCT.LNK$ = KNT_WAIT_HEAD$;
      722     6603    4                     KNT_WAIT_HEAD$ = LDCT$;
      723     6604    4                     KNT_WAIT_COUNT = KNT_WAIT_COUNT +1;
      724     6605    4                     END;
      725     6606
      726     6607    3                KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;
      727     6608    3                ALTRETURN;
      728     6609    3                END;
      729     6610
      730     6611    2           FRAG_HDR.SEQ = SEND_NEXT;
      731     6612
      732     6613        /* Build the common information in the TPDU header.
      733     6614        */
      734     6615    2           TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR) );
      735     6616    2           B$TPDU.LI = FRAG_SZ - THIS_SPDUSZ - 1;
      736     6617
      737     6618    2   BUILD_TPDU_INFO:
      738     6619    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_ED
      739     6620    2           THEN B$TPDU.TYPE = %K_TPDU_TYPE_ED;
      740     6621    2           ELSE B$TPDU.TYPE = %K_TPDU_TYPE_DT;
      741     6622
      742     6623    2           B$TPDU.CDT = 0;
      743     6624
      744     6625    2           IF ENTRY_SWITCH ~= 0
      745     6626    2           THEN B$TPDU.DST_REF = KN$TCTX.DST_REF;
      746     6627
      747     6628    2           IF KN$TCTX.OPTION.EXTENDED = '1'B
      748     6629    2           THEN B$TPDU_DT_EXT.TPDU_NR = SEND_NEXT;
      749     6630    2           ELSE IF ENTRY_SWITCH ~= 0
      750     6631    2                THEN B$TPDU_DT.TPDU_NR = SEND_NEXT;
      751     6632    2                ELSE B$TPDU_DT_0.TPDU_NR = 0;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:77   
      752     6633
      753     6634    2           SEND_NEXT = SEND_NEXT + 1;
      754     6635    2           IF SEND_NEXT > KN$TCTX.MAXSEQ
      755     6636    2           THEN SEND_NEXT = 0;
      756     6637
      757     6638    2           IF SPDU_SZ=0 OR BUFFER_TPDU=0
      758     6639    3           THEN DO;
      759     6640    3                IF ENTRY_SWITCH ~= 0
      760     6641    3                THEN B$TPDU_DT.EOT = '1'B;
      761     6642    3                ELSE B$TPDU_DT_0.EOT = '1'B;
      762     6643    3                END;
      763     6644    3           ELSE DO;
      764     6645    3                IF ENTRY_SWITCH ~= 0
      765     6646    3                THEN B$TPDU_DT.EOT = '0'B;
      766     6647    3                ELSE B$TPDU_DT_0.EOT = '0'B;
      767     6648    3                END;
      768     6649
      769     6650    2           IF BUFFER_TPDU = 0
      770     6651    2           THEN GOTO EXIT_SAVE;
      771     6652
      772     6653    2           SPDU$ = PINCRC(TPDU$,FRAG_SZ - THIS_SPDUSZ );
      773     6654        /* Move the SPDU into the buffer.
      774     6655        */
      775     6656    3           DO WHILE (THIS_SPDUSZ > 0);
      776     6657
      777     6658    3                IF KN$NETPARM.SHDR$ ~= ADDR(NIL)
      778     6659    4                THEN DO;
      779     6660    4                     MOVE$ = KN$NETPARM.SHDR_C$;
      780     6661    4                     IF THIS_SPDUSZ >= KN$NETPARM.SHDRSZ
      781     6662    5                     THEN DO;
      782     6663    5                          MOVE_SZ = KN$NETPARM.SHDRSZ;
      783     6664    5                          THIS_SPDUSZ = THIS_SPDUSZ - KN$NETPARM.SHDRSZ;
      784     6665    5                          KN$NETPARM.SHDR$ = ADDR(NIL);
      785     6666    5                          KN$NETPARM.SHDRSZ = 0;
      786     6667    5                          END;
      787     6668    5                     ELSE DO;
      788     6669    5                          MOVE_SZ = THIS_SPDUSZ;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:78   
      789     6670    5                          KN$NETPARM.SHDR_C$ = PINCRC(KN$NETPARM.SHDR_C$, THIS_SPDUSZ);
      790     6671    5                          KN$NETPARM.SHDRSZ = KN$NETPARM.SHDRSZ - THIS_SPDUSZ;
      791     6672    5                          THIS_SPDUSZ = 0; /* for do while*/
      792     6673    5                          END;
      793     6674    4                     GOTO MOVE_IT;
      794     6675    4                     END/*do if shrd$ ~ nil*/;
      795     6676
      796     6677    3                IF KN$NETPARM.UHDR$ ~= ADDR(NIL)
      797     6678    4                THEN DO;
      798     6679    4                     MOVE$ = KN$NETPARM.UHDR$;
      799     6680    4                     IF THIS_SPDUSZ >= KN$NETPARM.UHDRSZ
      800     6681    5                     THEN DO;
      801     6682    5                          MOVE_SZ = KN$NETPARM.UHDRSZ;
      802     6683    5                          THIS_SPDUSZ = THIS_SPDUSZ - KN$NETPARM.UHDRSZ;
      803     6684    5                          KN$NETPARM.UHDR$ = ADDR(NIL);
      804     6685    5                          KN$NETPARM.UHDRSZ = 0;
      805     6686    5                          END;
      806     6687    5                     ELSE DO;
      807     6688    5                          MOVE_SZ = THIS_SPDUSZ;
      808     6689    5                          KN$NETPARM.UHDR_C$ = PINCRC(KN$NETPARM.UHDR_C$, THIS_SPDUSZ);
      809     6690    5                          KN$NETPARM.UHDRSZ = KN$NETPARM.UHDRSZ - THIS_SPDUSZ;
      810     6691    5                          THIS_SPDUSZ = 0; /* for do while*/
      811     6692    5                          END;
      812     6693    4                     GOTO MOVE_IT;
      813     6694    4                     END/*do if uhrd$ ~ nil*/;
      814     6695
      815     6696    3                IF KN$NETPARM.MSG$ ~= ADDR(NIL)
      816     6697    4                THEN DO;
      817     6698    4                     MOVE$ = KN$NETPARM.MSG$;
      818     6699    4                     IF THIS_SPDUSZ >= KN$NETPARM.MSGSZ
      819     6700    5                     THEN DO;
      820     6701    5                          MOVE_SZ = KN$NETPARM.MSGSZ;
      821     6702    5                          THIS_SPDUSZ = THIS_SPDUSZ - KN$NETPARM.MSGSZ;
      822     6703    5                          KN$NETPARM.MSG$ = ADDR(NIL);
      823     6704    5                          KN$NETPARM.MSGSZ = 0;
      824     6705    5                          END;
      825     6706    5                     ELSE DO;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:79   
      826     6707    5                          MOVE_SZ = THIS_SPDUSZ;
      827     6708    5                          KN$NETPARM.MSG$ = PINCRC(KN$NETPARM.MSG$, THIS_SPDUSZ);
      828     6709    5                          KN$NETPARM.MSGSZ = KN$NETPARM.MSGSZ - THIS_SPDUSZ;
      829     6710    5                          THIS_SPDUSZ = 0; /* for do while*/
      830     6711    5                          END;
      831     6712    4                     GOTO MOVE_IT;
      832     6713    4                     END/*do if msg$ ~ nil*/;
      833     6714
      834     6715    3   MOVE_IT:     ;
      835     6716    3                SPDU$->B$SPDU = MOVE$->B$SPDU;
      836     6717    3                SPDU$ = PINCRC(SPDU$,MOVE_SZ);
      837     6718    3                MOVE$ = PINCRC(MOVE$,MOVE_SZ);
      838     6719
      839     6720    3                END/*do while this_tpdusz > 0*/;
      840     6721
      841     6722        /* And calculate the checksum if appropriate.
      842     6723        */
      843     6724    2           IF KN$TCTX.OPTION.CHKSUM ~= '0'B
      844     6725    3           THEN DO;
      845     6726    3                SPDU$ = PINCRC(TPDU$,CHKOFF-3);
      846     6727    3                SPDU$->B$CHAR4 = ADDR(K_CKSUM_INIT)->B$CHAR4;
      847     6728    3                CALL KNA$CALC_CHKSUM(TPDU$,FRAG_SZ,CHKOFF);
      848     6729    3                END;
      849     6730
      850     6731    2           FRAGS# = FRAGS# +1;
      851     6732    2           END/*do while spdu_size> 0*/;
      852     6733
      853     6734        /* Completed busting it apart safely, so go ahead and update the
      854     6735           Transport Context Block to reflect the new fragments to send.
      855     6736        */
      856     6737    1      IF ENTRY_SWITCH ~= %K_TPDU_TYPE_ED
      857     6738    2      THEN DO;
      858     6739    2           IF KN$TCTX.SEND_HEAD$ = ADDR(NIL)
      859     6740    2           THEN KN$TCTX.SEND_HEAD$ = FIRST_FRAG$;
      860     6741    2           ELSE KN$TCTX.SEND_TAIL$->FRAG_HDR.LINK$ = FIRST_FRAG$;
      861     6742
      862     6743    2           KN$TCTX.SEND_TAIL$ = LAST_FRAG$;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:80   
      863     6744
      864     6745    2           IF KN$TCTX.SEND_NOTSENT$ = ADDR(NIL)
      865     6746    2           THEN KN$TCTX.SEND_NOTSENT$ = FIRST_FRAG$;
      866     6747    2           END/*do if normal data*/;
      867     6748
      868     6749    2      ELSE DO;
      869     6750    2           IF KN$TCTX.SEND_EHEAD$ = ADDR(NIL)
      870     6751    2           THEN KN$TCTX.SEND_EHEAD$ = FIRST_FRAG$;
      871     6752    2           ELSE KN$TCTX.SEND_ETAIL$->FRAG_HDR.LINK$ = FIRST_FRAG$;
      872     6753
      873     6754    2           KN$TCTX.SEND_ETAIL$ = LAST_FRAG$;
      874     6755
      875     6756    2           IF KN$TCTX.SEND_ENOTSENT$ = ADDR(NIL)
      876     6757    2           THEN KN$TCTX.SEND_ENOTSENT$ = FIRST_FRAG$;
      877     6758    2           END/*do if expidated data*/;
      878     6759
      879     6760    1   EXIT_SAVE:
      880     6761    1      IF ENTRY_SWITCH ~= %K_TPDU_TYPE_ED
      881     6762    1      THEN KN$TCTX.SEND_NEXT = SEND_NEXT;
      882     6763    1      ELSE KN$TCTX.SEND_EXPD = SEND_NEXT;
      883     6764
      884     6765    1      IF FRAGS# > 1
      885     6766    2      THEN DO;
      886     6767    2           KN$TCTX.SGMENT_TSDUS = KN$TCTX.SGMENT_TSDUS +1;
      887     6768    2           KN$TCTX.SGMENT_FRAGS = KN$TCTX.SGMENT_FRAGS + FRAGS#;
      888     6769    2           END;
      889     6770    1      IF KN$NETPARM.ERRCODE = 0
      890     6771    1      THEN RETURN;
      891     6772    1      ELSE ALTRETURN;
      892     6773
      893     6774    1   END KNT$SAVE;
      894     6775        %EOD;

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:81   
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SAVE.

   Procedure KNT$SAVE requires 1005 words for executable code.
   Procedure KNT$SAVE requires 40 words of local(AUTO) storage.

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:82   

 Object Unit name= KNT$SAVE                                   File name= KNT$SEND.:E05TOU
 UTS= JUL 30 '97 01:12:08.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none  1005    3ED  KNT$SAVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KNT$SAVE
     0      7          yes     yes      Std        1  KNT$SAVE_CLASS2
     0     11          yes     yes      Std        1  KNT$SAVE_DT
     0     81          yes     yes      Std        1  KNT$SAVE_ED
     0     8B          yes     yes      Std        1  KNT$SAVE_CLASS0

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 KNT$GET_SBUF
         yes           Std       2 KNT$RELBUF
 yes     yes           Std       3 KNA$CALC_CHKSUM
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6B_BLR
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:83   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     K_CKSUM_INIT                          KNT_WAIT_HEAD$                        KNT_WAIT_COUNT
r    G$ROS$
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:84   


      451        1        /*M* KNT$SAVE - Save data and expdiated data for retransmission. */
      452        2        /*T***********************************************************/
      453        3        /*T*                                                         */
      454        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      455        5        /*T*                                                         */
      456        6        /*T***********************************************************/
      457        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
      458        8
      459        9        /*F* NAME: KNT$SAVE
      460       10
      461       11             ENTRY: KNT$SAVE_DT
      462       12             ENTRY: KNT$SAVE_ED
      463       13             ENTRY: KNT$SAVE_CLASS2
      464       14             ENTRY: KNT$SAVE_CLASS0
      465       15
      466       16             INPUT: KN$NETPARM.TCTX$ -> the TCTX for the transport connection
      467       17                                        that is sending data.
      468       18                    KN$NETPARM.THDR$ -> auto storage where the TPDU header
      469       19                                        may be built.
      470       20
      471       21             PURPOSE:
      472       22                 To save the data TPDUs for possible retransmission and/or
      473       23                 break a large SPDU into smaller TPDUs for transmission.
      474       24
      475       25             DESCRIPTION:
      476       26                 The entry points KNT$SAVE_CLASS2 and KNT$SAVE_CLASS0
      477       27                 provide for simply building the TPDU data header if there is
      478       28                 no need to buffer; if the SPDU plus TPDU header fit within
      479       29                 the maximum TPDU size, and, if Class 2 with the flow control
      480       30                 option, there are sufficient credits to send the data.
      481       31                 When buffering is necessary, the TPDU header is built in
      482       32                 the buffer itself, rather than in the auto storage area located
      483       33                 via KN$NETPARM.THDR$.
      484       34
      485       35                 Class 4 data is always buffered for possible later retransmission.
      486       36
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:85   
      487       37                 The buffer is obtained and filled for data or expedited data.
      488       38                 If the data to be saved is larger than the maximum TPDU size,
      489       39                 the data is saved in a series of linked buffers.
      490       40
      491       41                 The alternate return is taken with kn$netparm.errcode set
      492       42                 to KN_ERR_NOQ2 if we run out of transport buffers.
      493       43
      494       44                 The alternate return is taken with kn$netparm.errcode set
      495       45                 to ERROR_FLOW if we have buffered more than the limit as
      496       46                 specified in (KN$TCTX.RCV_WINDOW_SZ *4).  If this is a primary connection
      497       47                 the data will not have been buffered; if an intermediate
      498       48                 connection the host data will have been buffered.
      499       49        */
      500       50        KNT$SAVE: PROC(KN$NETPARM)  ALTRET;

     50   0 000000  D380 0000 0000  xent KNT$SAVE        LNJ,B5   X6A_AUTO_1
          0 000003       0028 0001                       DC       40,1
          0 000005  0F81 0006                            B        s:6453,PREL

      501       51
      502       52        %INCLUDE K_ADDRESS_M;
      503      555        %INCLUDE KN_DATA_M;
      504     2341        %INCLUDE K_TRANSPORT_E;
      505     2666        %INCLUDE K_TRANSPORT_M;
      506     4450        %INCLUDE GH_SCHD_M;
      507     4594
      508     4595                                                /* Input parameters                   */
      509     4596        %KN$NETPARM;
      510     4749
      511     4750                                                /* Auto Storage                       */
      512     4751    1   DCL CTX$ PTR;
      513     4752    1   DCL MOVE$ CPTR;
      514     4753    1   DCL LDCT$ REDEF MOVE$ PTR;
      515     4754    1   DCL TPDU$ CPTR;
      516     4755    1   DCL SPDU$ CPTR;
      517     4756    1   DCL FRAG$ PTR;
      518     4757    1   DCL FIRST_FRAG$ PTR;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:86   
      519     4758    1   DCL LAST_FRAG$ PTR;
      520     4759    1   DCL FRAG_SZ SBIN;
      521     4760    1   DCL THDR_SZ SBIN;
      522     4761    1   DCL THIS_SPDUSZ SBIN;
      523     4762    1   DCL SPDU_SZ SBIN;
      524     4763    1   DCL MOVE_SZ SBIN;
      525     4764    1   DCL SEND_NEXT UBIN(32);
      526     4765    1   DCL CHKOFF SBIN;
      527     4766    1   DCL EXTRA SBIN(32);
      528     4767    1   DCL FRAGS# UBIN;
      529     4768    1   DCL BUFFER_TPDU UBIN;
      530     4769    1   DCL ENTRY_SWITCH SBIN;                  /* 0 = normal data - class 0          */
      531     4770                                                /* 1 = exped. data - classes 2 and 4  */
      532     4771                                                /* 2 = normal data - class 2          */
      533     4772                                                /* 15 = normal data - class 4         */
      534     4773
      535     4774                                                /* Based Data                         */
      536     4775        %K$FRAG_HDR (NAME=FRAG_HDR,STCLASS="BASED(FRAG$)");
      537     4858
      538     4859        %K$TPDU_GENERIC (NAME=B$TPDU, STCLASS="BASED(TPDU$)");
      539     4919        %K$TPDU_DT (NAME=B$TPDU_DT, STCLASS="BASED(TPDU$)");
      540     4969        %K$TPDU_DT_EXT (NAME=B$TPDU_DT_EXT, STCLASS="BASED(TPDU$)");
      541     5033        %K$TPDU_DT_0 (NAME=B$TPDU_DT_0, STCLASS="BASED(TPDU$)");
      542     5078
      543     5079        %K$TPARM_CHKSUM (ALGN=CALIGNED);
      544     5119
      545     5120    1   DCL B$SPDU CHAR(MOVE_SZ) BASED CALIGNED;
      546     5121    1   DCL B$BIT32 BIT(32) BASED CALIGNED;
      547     5122    1   DCL B$CHAR4 CHAR(4) BASED CALIGNED;
      548     5123    1   DCL B$CHAR CHAR(MOVE_SZ) BASED CALIGNED;
      549     5124    1   DCL B$CHAR_ALGN CHAR(MOVE_SZ) BASED ALIGNED;
      550     5125
      551     5126        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
      552     6033        %KN$LDCT (STCLASS=BASED);
      553     6278        %K$TPDU_DT (ALGN=CALIGNED, STCLASS="BASED(TPDU$)");
      554     6328        %K$TPDU_DT_EXT (ALGN=CALIGNED, STCLASS="BASED(TPDU$)");
      555     6392        %K$TPDU_DT_0 (ALGN=CALIGNED, STCLASS="BASED(TPDU$)");
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:87   
      556     6437
      557     6438                                                /* External Data                      */
      558     6439    1   DCL 1 K_CKSUM_INIT CHAR(4) SYMREF;
      559     6440    1   DCL KNT_WAIT_HEAD$ PTR SYMREF;
      560     6441    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      561     6442
      562     6443                                                /* External routines                  */
      563     6444    1   DCL KNT$GET_SBUF ENTRY(3) ALTRET;
      564     6445    1   DCL KNT$RELBUF ENTRY(2);
      565     6446    1   DCL KNA$CALC_CHKSUM ENTRY(3) ALTRET;
      566     6447        %EJECT;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:88   
      567     6448        /*F* NAME: KNT$SAVE_DT and KNT$SAVE_ED
      568     6449
      569     6450        Called from KNT$SEND.
      570     6451        */
      571     6452    1   KNT$SAVE_CLASS2: ENTRY(KN$NETPARM) ALTRET;

   6452   0 000007  D380 0000 0000  xent KNT$SAVE_CLASS2 LNJ,B5   X6A_AUTO_1
          0 00000A       0028 0001                       DC       40,1

      572     6453    1      ENTRY_SWITCH = 2;

   6453   0 00000C  6C02                                 LDV,R6   2
          0 00000D  EF47 0020                            STR,R6   ENTRY_SWITCH,AUTO

      573     6454    1      GOTO CHECK_WINDOW;

   6454   0 00000F  0F81 0009                            B        s:6460,PREL

      574     6455
      575     6456    1   KNT$SAVE_DT: ENTRY(KN$NETPARM) ALTRET;

   6456   0 000011  D380 0000 0000  xent KNT$SAVE_DT     LNJ,B5   X6A_AUTO_1
          0 000014       0028 0001                       DC       40,1

      576     6457    1      ENTRY_SWITCH = %K_TPDU_TYPE_DT;

   6457   0 000016  6C0F                                 LDV,R6   15
          0 000017  EF47 0020                            STR,R6   ENTRY_SWITCH,AUTO

      577     6458
      578     6459    1   CHECK_WINDOW:
      579     6460    1      CTX$ = KN$NETPARM.TCTX$;

   6460   0 000019  ECC7 0004            CHECK_WINDOW    LDB,B6   @KN$NETPARM,AUTO
          0 00001B  DCC6 001B                            LDB,B5   27,B6
          0 00001D  DFC7 0006                            STB,B5   CTX$,AUTO

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:89   
      580     6461
      581     6462    1      EXTRA = 0;

   6462   0 00001F  8747 001C                            CL       EXTRA,AUTO
          0 000021  8747 001D                            CL       EXTRA+1,AUTO

      582     6463
      583     6464    1      IF KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='0'B

   6464   0 000023  D2C5 0005                            LLH,R5   5,B5
          0 000025  5D02                                 CMV,R5   2
          0 000026  0981 0006                            BNE      s:6467,PREL
          0 000028  82C5 000C                            LB,'0008'X        12,B5
          0 00002A       0008
          0 00002B  0581 0068                            BBF      s:6500,PREL

      584     6465    1      THEN GOTO COMMON;
      585     6466
      586     6467    1      IF ( KN$TCTX.SEND_LWE <= KN$TCTX.SEND_UWE )

   6467   0 00002D  8CC5 0032                            LDI      50,B5
          0 00002F  84C5 0034                            SID      52,B5
          0 000031  6981 0003                            BNEZ,R6  s:6467+8,PREL
          0 000033  7901 0003                            BEZ,R7   s:6469,PREL
          0 000035  0601 0023                            BCT      s:6480,PREL

      587     6468    2      THEN DO;

      588     6469    2           IF ( KN$TCTX.SEND_NEXT >= KN$TCTX.SEND_UWE ) OR

   6469   0 000037  8CC5 0036                            LDI      54,B5
          0 000039  84C5 0034                            SID      52,B5
          0 00003B  0601 0007                            BCT      s:6473,PREL
          0 00003D  8CC5 0036                            LDI      54,B5
          0 00003F  84C5 0032                            SID      50,B5
          0 000041  0601 002B                            BCT      s:6487,PREL

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:90   
      589     6470    2             ( KN$TCTX.SEND_NEXT < KN$TCTX.SEND_LWE )
      590     6471    3           THEN DO;

      591     6472
      592     6473    3                EXTRA = KN$TCTX.SEND_NEXT - KN$TCTX.SEND_LWE;

   6473   0 000043  8CC5 0036                            LDI      54,B5
          0 000045  84C5 0032                            SID      50,B5
          0 000047  8D47 001C                            SDI      EXTRA,AUTO

      593     6474    3                IF EXTRA < 0

   6474   0 000049  84F0 0000 0000                       SID      0,IMO
          0 00004C  6881 0020                            BGEZ,R6  s:6487,PREL

      594     6475    3                THEN EXTRA = EXTRA + KN$TCTX.MAXSEQ + 1;

   6475   0 00004E  8CC7 001C                            LDI      EXTRA,AUTO
          0 000050  8445 000A                            AID      10,B5
          0 000052  8470 0000 0001                       AID      1,IMO
          0 000055  8D47 001C                            SDI      EXTRA,AUTO

      595     6476    3                END;

      596     6477    2           END;

   6477   0 000057  0F81 0015                            B        s:6487,PREL

      597     6478
      598     6479    2      ELSE DO/*when send_lwe >send_uwe*/;

      599     6480    2           IF ( KN$TCTX.SEND_NEXT >= KN$TCTX.SEND_UWE ) AND

   6480   0 000059  8CC5 0036                            LDI      54,B5
          0 00005B  84C5 0034                            SID      52,B5
          0 00005D  0681 000F                            BCF      s:6487,PREL
          0 00005F  8CC5 0036                            LDI      54,B5
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:91   
          0 000061  84C5 0032                            SID      50,B5
          0 000063  0601 0009                            BCT      s:6487,PREL

      600     6481    2             ( KN$TCTX.SEND_NEXT < KN$TCTX.SEND_LWE )
      601     6482    3           THEN DO;

      602     6483    3                EXTRA = KN$TCTX.MAXSEQ - KN$TCTX.SEND_LWE + KN$TCTX.SEND_NEXT;

   6483   0 000065  8CC5 000A                            LDI      10,B5
          0 000067  84C5 0032                            SID      50,B5
          0 000069  8445 0036                            AID      54,B5
          0 00006B  8D47 001C                            SDI      EXTRA,AUTO

      603     6484    3                END;

      604     6485    2           END;

      605     6486
      606     6487    1      IF ( EXTRA = (4*KN$TCTX.RCV_WINDOW_SZ) )

   6487   0 00006D  F845 0005                            LDR,R7   5,B5
          0 00006F  F570 00FF                            AND,R7   255,IMO
          0 000071  6C00                                 LDV,R6   0
          0 000072  7082                                 DOL,R7   2
          0 000073  84C7 001C                            SID      EXTRA,AUTO
          0 000075  6981 0009                            BNEZ,R6  s:6493,PREL
          0 000077  7981 0007                            BNEZ,R7  s:6493,PREL

      607     6488    2      THEN DO;

      608     6489    2           KN$NETPARM.ERRCODE = %K_ERROR_FLOW;

   6489   0 000079  E870 00F3                            LDR,R6   243,IMO
          0 00007B  EF46 0016                            STR,R6   22,B6

      609     6490    2           KN$TCTX.SERR.BUF_OVFLOW = KN$TCTX.SERR.BUF_OVFLOW +1;

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:92   
   6490   0 00007D  8AC5 0011                            INC      17,B5

      610     6491    2           END;

      611     6492
      612     6493    1      GOTO COMMON;

   6493   0 00007F  0F81 0014                            B        s:6500,PREL

      613     6494
      614     6495    1   KNT$SAVE_ED: ENTRY(KN$NETPARM) ALTRET;

   6495   0 000081  D380 0000 0000  xent KNT$SAVE_ED     LNJ,B5   X6A_AUTO_1
          0 000084       0028 0001                       DC       40,1

      615     6496    1      ENTRY_SWITCH = %K_TPDU_TYPE_ED;

   6496   0 000086  6C01                                 LDV,R6   1
          0 000087  EF47 0020                            STR,R6   ENTRY_SWITCH,AUTO

      616     6497    1      GOTO COMMON;

   6497   0 000089  0F81 000A                            B        s:6500,PREL

      617     6498
      618     6499    1   KNT$SAVE_CLASS0: ENTRY(KN$NETPARM) ALTRET;

   6499   0 00008B  D380 0000 0000  xent KNT$SAVE_CLASS0 LNJ,B5   X6A_AUTO_1
          0 00008E       0028 0001                       DC       40,1

      619     6500    1      ENTRY_SWITCH = 0;

   6500   0 000090  8747 0020                            CL       ENTRY_SWITCH,AUTO

      620     6501    1      GOTO COMMON;

   6501   0 000092  0F81 0001                            B        s:6500,PREL
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:93   

   6500   0                              COMMON          null
      621     6502
      622     6503
      623     6504    1   COMMON: ;
      624     6505    1      FIRST_FRAG$ = ADDR(NIL);

   6505   0 000094  EB80 0000 0000       COMMON          LAB,B6   0
          0 000097  EFC7 0010                            STB,B6   FIRST_FRAG$,AUTO

      625     6506    1      FRAGS# = 0;

   6506   0 000099  8747 001E                            CL       FRAGS#,AUTO

      626     6507    1      CTX$ = KN$NETPARM.TCTX$;

   6507   0 00009B  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00009D  CCC5 001B                            LDB,B4   27,B5
          0 00009F  CFC7 0006                            STB,B4   CTX$,AUTO

      627     6508
      628     6509        /* Compute the size of the transport header and chksum param.
      629     6510        */
      630     6511    1      IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   6511   0 0000A1  82C4 000C                            LB,'0004'X        12,B4
   6511   0 0000A3       0004
          0 0000A4  0581 0006                            BBF      s:6513,PREL

      631     6512    1      THEN THDR_SZ = SIZEC(K$TPDU_DT_EXT);

   6512   0 0000A6  6C08                                 LDV,R6   8
          0 0000A7  EF47 0015                            STR,R6   THDR_SZ,AUTO
          0 0000A9  0F81 000D                            B        s:6517,PREL

      632     6513    1      ELSE IF ENTRY_SWITCH = 0

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:94   
   6513   0 0000AB  E847 0020                            LDR,R6   ENTRY_SWITCH,AUTO
          0 0000AD  6981 0006                            BNEZ,R6  s:6515,PREL

      633     6514    1           THEN THDR_SZ = SIZEC(K$TPDU_DT_0);

   6514   0 0000AF  5C03                                 LDV,R5   3
          0 0000B0  DF47 0015                            STR,R5   THDR_SZ,AUTO
          0 0000B2  0F81 0004                            B        s:6517,PREL

      634     6515    1           ELSE THDR_SZ = SIZEC(K$TPDU_DT);

   6515   0 0000B4  5C05                                 LDV,R5   5
          0 0000B5  DF47 0015                            STR,R5   THDR_SZ,AUTO

      635     6516
      636     6517    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B

   6517   0 0000B7  82C4 000C                            LB,'0001'X        12,B4
   6517   0 0000B9       0001
          0 0000BA  0581 000B                            BBF      s:6523,PREL

      637     6518    2      THEN DO;

      638     6519    2           CHKOFF = THDR_SZ + 3;

   6519   0 0000BC  E847 0015                            LDR,R6   THDR_SZ,AUTO
          0 0000BE  6E03                                 ADV,R6   3
          0 0000BF  EF47 001B                            STR,R6   CHKOFF,AUTO

      639     6520    2           THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CHKSUM);

   6520   0 0000C1  D847 0015                            LDR,R5   THDR_SZ,AUTO
          0 0000C3  5E04                                 ADV,R5   4
          0 0000C4  DF47 0015                            STR,R5   THDR_SZ,AUTO

      640     6521    2           END;

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:95   
      641     6522
      642     6523    1      IF KN$TCTX.OPTION.OSI = '0'B

   6523   0 0000C6  82C4 000C                            LB,'0010'X        12,B4
   6523   0 0000C8       0010
          0 0000C9  0501 0009                            BBT      s:6526,PREL

      643     6524    1      THEN THDR_SZ = ( (THDR_SZ +1) /2) * 2;

   6524   0 0000CB  E847 0015                            LDR,R6   THDR_SZ,AUTO
          0 0000CD  6E01                                 ADV,R6   1
          0 0000CE  E370 0002                            DIV,R6   2,IMO
          0 0000D0  6001                                 SOL,R6   1
          0 0000D1  EF47 0015                            STR,R6   THDR_SZ,AUTO

      644     6525
      645     6526    1      KN$NETPARM.THDRSZ = THDR_SZ;

   6526   0 0000D3  E847 0015                            LDR,R6   THDR_SZ,AUTO
          0 0000D5  EF45 000D                            STR,R6   13,B5

      646     6527
      647     6528    1      IF ENTRY_SWITCH ~= %K_TPDU_TYPE_ED

   6528   0 0000D7  D847 0020                            LDR,R5   ENTRY_SWITCH,AUTO
          0 0000D9  5D01                                 CMV,R5   1
          0 0000DA  0901 0007                            BE       s:6530,PREL

      648     6529    1      THEN SEND_NEXT = KN$TCTX.SEND_NEXT;

   6529   0 0000DC  8CC4 0036                            LDI      54,B4
          0 0000DE  8D47 0019                            SDI      SEND_NEXT,AUTO
          0 0000E0  0F81 0005                            B        s:6532,PREL

      649     6530    1      ELSE SEND_NEXT = KN$TCTX.SEND_EXPD;

   6530   0 0000E2  8CC4 0038                            LDI      56,B4
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:96   
          0 0000E4  8D47 0019                            SDI      SEND_NEXT,AUTO

      650     6531
      651     6532    1      SPDU_SZ = 0;

   6532   0 0000E6  8747 0017                            CL       SPDU_SZ,AUTO

      652     6533
      653     6534    1      IF KN$NETPARM.SHDR_C$ ~= ADDR(NIL)

   6534   0 0000E8  8DC5 0008                            CMN      8,B5
          0 0000EA  0901 0007                            BE       s:6537,PREL

      654     6535    1      THEN SPDU_SZ = SPDU_SZ + KN$NETPARM.SHDRSZ;

   6535   0 0000EC  C847 0017                            LDR,R4   SPDU_SZ,AUTO
          0 0000EE  CA45 000A                            ADD,R4   10,B5
          0 0000F0  CF47 0017                            STR,R4   SPDU_SZ,AUTO

      655     6536
      656     6537    1      IF KN$NETPARM.UHDR_C$ ~= ADDR(NIL)

   6537   0 0000F2  8DC5 0005                            CMN      5,B5
          0 0000F4  0901 0007                            BE       s:6540,PREL

      657     6538    1      THEN SPDU_SZ = SPDU_SZ + KN$NETPARM.UHDRSZ;

   6538   0 0000F6  C847 0017                            LDR,R4   SPDU_SZ,AUTO
          0 0000F8  CA45 0007                            ADD,R4   7,B5
          0 0000FA  CF47 0017                            STR,R4   SPDU_SZ,AUTO

      658     6539
      659     6540    1      IF KN$NETPARM.MSG$ ~= ADDR(NIL)

   6540   0 0000FC  8DC5 0002                            CMN      2,B5
          0 0000FE  0901 0007                            BE       s:6545,PREL

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:97   
      660     6541    1      THEN SPDU_SZ = SPDU_SZ + KN$NETPARM.MSGSZ;

   6541   0 000100  C847 0017                            LDR,R4   SPDU_SZ,AUTO
          0 000102  CA45 0004                            ADD,R4   4,B5
          0 000104  CF47 0017                            STR,R4   SPDU_SZ,AUTO

      661     6542
      662     6543        /* Determine if we should build a full fragment or just the TPDU header.
      663     6544        */
      664     6545    1      TPDU$ = KN$NETPARM.THDR$;

   6545   0 000106  BCC5 000B                            LDB,B3   11,B5
          0 000108  BFC7 000A                            STB,B3   TPDU$,AUTO

      665     6546
      666     6547    1      IF KN$TCTX.CLASS ~= 4

   6547   0 00010A  C2C4 0005                            LLH,R4   5,B4
          0 00010C  4D04                                 CMV,R4   4
          0 00010D  0901 0011                            BE       s:6556,PREL

      667     6548    2      THEN DO;

      668     6549    2           BUFFER_TPDU = 0;

   6549   0 00010F  8747 001F                            CL       BUFFER_TPDU,AUTO

      669     6550    2           B$TPDU.LI = THDR_SZ -1;

   6550   0 000111  B847 0015                            LDR,R3   THDR_SZ,AUTO
          0 000113  3EFF                                 ADV,R3   -1
          0 000114  B783                                 STH,R3   ,B3

      670     6551
      671     6552    2           IF THDR_SZ + SPDU_SZ <= KN$TCTX.TPDUSZ

   6552   0 000115  C847 0015                            LDR,R4   THDR_SZ,AUTO
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:98   
          0 000117  CA47 0017                            ADD,R4   SPDU_SZ,AUTO
          0 000119  4801 00B0                            BLZ,R4   s:6619,PREL
          0 00011B  C944 0009                            CMR,R4   9,B4
          0 00011D  0381 00AC                            BLE      s:6619,PREL

      672     6553    2           THEN GOTO BUILD_TPDU_INFO;
      673     6554    2           END;

      674     6555
      675     6556    1      BUFFER_TPDU = 1;

   6556   0 00011F  4C01                                 LDV,R4   1
          0 000120  CF47 001F                            STR,R4   BUFFER_TPDU,AUTO

      676     6557
      677     6558    2      DO WHILE (SPDU_SZ > 0 );

   6558   0 000122  B847 0017                            LDR,R3   SPDU_SZ,AUTO
          0 000124  3A81 025F                            BLEZ,R3  s:6737,PREL

      678     6559
      679     6560        /* Compute the size of the transport info + size of the SPDU.
      680     6561        */
      681     6562    2           FRAG_SZ = THDR_SZ + SPDU_SZ;

   6562   0 000126  E847 0015                            LDR,R6   THDR_SZ,AUTO
          0 000128  EA47 0017                            ADD,R6   SPDU_SZ,AUTO
          0 00012A  EF47 0014                            STR,R6   FRAG_SZ,AUTO

      682     6563
      683     6564        /* See if we have to split it up into multiple TPDU's.
      684     6565        */
      685     6566    2           IF FRAG_SZ > KN$TCTX.TPDUSZ

   6566   0 00012C  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 00012E  6801 0016                            BLZ,R6   s:6573,PREL
          0 000130  E946 0009                            CMR,R6   9,B6
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:99   
          0 000132  0381 0012                            BLE      s:6573,PREL

      686     6567    3           THEN DO;

      687     6568    3                THIS_SPDUSZ = KN$TCTX.TPDUSZ - THDR_SZ;

   6568   0 000134  D846 0009                            LDR,R5   9,B6
          0 000136  D247 0015                            SUB,R5   THDR_SZ,AUTO
          0 000138  DF47 0016                            STR,R5   THIS_SPDUSZ,AUTO

      688     6569    3                FRAG_SZ = KN$TCTX.TPDUSZ;

   6569   0 00013A  E846 0009                            LDR,R6   9,B6
          0 00013C  EF47 0014                            STR,R6   FRAG_SZ,AUTO

      689     6570    3                SPDU_SZ = SPDU_SZ - THIS_SPDUSZ;

   6570   0 00013E  D247 0017                            SUB,R5   SPDU_SZ,AUTO
          0 000140  8255                                 NEG      R5
          0 000141  DF47 0017                            STR,R5   SPDU_SZ,AUTO

      690     6571    3                END;

   6571   0 000143  0F81 0007                            B        s:6580,PREL

      691     6572    3           ELSE DO;

      692     6573    3                THIS_SPDUSZ = SPDU_SZ;

   6573   0 000145  D847 0017                            LDR,R5   SPDU_SZ,AUTO
          0 000147  DF47 0016                            STR,R5   THIS_SPDUSZ,AUTO

      693     6574    3                SPDU_SZ = 0;

   6574   0 000149  8747 0017                            CL       SPDU_SZ,AUTO

      694     6575    3                END;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:100  

      695     6576
      696     6577        /* Get a buffer for this part and initialize the fragment header.
      697     6578           If we run out of memory, undo all that we did here.
      698     6579        */
      699     6580    2           CALL KNT$GET_SBUF(FRAG_SZ,FRAG$,KN$TCTX)

   6580   0 00014B  EFC7 0026                            STB,B6   ENTRY_SWITCH+6,AUTO
          0 00014D  DBC7 000E                            LAB,B5   FRAG$,AUTO
          0 00014F  DFC7 0024                            STB,B5   ENTRY_SWITCH+4,AUTO
          0 000151  CBC7 0014                            LAB,B4   FRAG_SZ,AUTO
          0 000153  CFC7 0022                            STB,B4   ENTRY_SWITCH+2,AUTO
          0 000155  BBC7 0022                            LAB,B3   ENTRY_SWITCH+2,AUTO
          0 000157  CBF0 0300                            LAB,B4   768,IMO
          0 000159  E380 0000 0000  xent                 LNJ,B6   KNT$GET_SBUF
          0 00015C       0017                            DC       s:6589,PREL

      700     6581    3           WHENRETURN DO;

      701     6582    3                IF FIRST_FRAG$ = ADDR(NIL)

   6582   0 00015D  8DC7 0010                            CMN      FIRST_FRAG$,AUTO
          0 00015F  0981 0007                            BNE      s:6584,PREL

      702     6583    3                THEN FIRST_FRAG$ = FRAG$;

   6583   0 000161  ECC7 000E                            LDB,B6   FRAG$,AUTO
          0 000163  EFC7 0010                            STB,B6   FIRST_FRAG$,AUTO
          0 000165  0F81 0007                            B        s:6585,PREL

      703     6584    3                ELSE LAST_FRAG$->FRAG_HDR.LINK$ = FRAG$;

   6584   0 000167  ECC7 000E                            LDB,B6   FRAG$,AUTO
          0 000169  DCC7 0012                            LDB,B5   LAST_FRAG$,AUTO
          0 00016B  EFC5 0004                            STB,B6   4,B5

      704     6585    3                LAST_FRAG$ = FRAG$;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:101  

   6585   0 00016D  ECC7 000E                            LDB,B6   FRAG$,AUTO
          0 00016F  EFC7 0012                            STB,B6   LAST_FRAG$,AUTO

      705     6586    3                END;

   6586   0 000171  0F81 0048                            B        s:6611,PREL

      706     6587
      707     6588    3           WHENALTRETURN DO;

      708     6589    4                DO WHILE (FIRST_FRAG$ ~= ADDR(NIL));

   6589   0 000173  0F81 0017                            B        s:6593,PREL

      709     6590    4                     FRAG$ = FIRST_FRAG$;

   6590   0 000175  ECC7 0010                            LDB,B6   FIRST_FRAG$,AUTO
          0 000177  EFC7 000E                            STB,B6   FRAG$,AUTO

      710     6591    4                     FIRST_FRAG$ = FRAG$->FRAG_HDR.LINK$;

   6591   0 000179  DCC6 0004                            LDB,B5   4,B6
          0 00017B  DFC7 0010                            STB,B5   FIRST_FRAG$,AUTO

      711     6592    4                     CALL KNT$RELBUF (FRAG$->FRAG_HDR, KN$TCTX);

   6592   0 00017D  CCC7 0006                            LDB,B4   CTX$,AUTO
          0 00017F  CFC7 0024                            STB,B4   ENTRY_SWITCH+4,AUTO
          0 000181  EFC7 0022                            STB,B6   ENTRY_SWITCH+2,AUTO
          0 000183  BBC7 0022                            LAB,B3   ENTRY_SWITCH+2,AUTO
          0 000185  CBF0 0200                            LAB,B4   512,IMO
          0 000187  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          0 00018A       0001                            DC       s:6593,PREL

      712     6593    4                     END/*do while*/;

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:102  
   6593   0 00018B  8DC7 0010                            CMN      FIRST_FRAG$,AUTO
          0 00018D  09E8                                 BNE      s:6590,SPREL

      713     6594
      714     6595    3                IF KN$TCTX.PRIMARY

   6595   0 00018E  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 000190  82C6 000D                            LB,'0001'X        13,B6
          0 000192       0001
          0 000193  0581 0008                            BBF      s:6597,PREL

      715     6596    3                THEN LDCT$ = KN$NETPARM.LDCT$;

   6596   0 000195  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000197  CC85                                 LDB,B4   ,B5
          0 000198  CFC7 0008                            STB,B4   MOVE$,AUTO
          0 00019A  0F81 0007                            B        s:6599,PREL

      716     6597    3                ELSE LDCT$ = KN$NETPARM.SLDCT$;

   6597   0 00019C  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00019E  CCC5 0017                            LDB,B4   23,B5
          0 0001A0  CFC7 0008                            STB,B4   MOVE$,AUTO

      717     6598
      718     6599    3                IF NOT LDCT$->KN$LDCT.FLAGS.QUEUED

   6599   0 0001A2  89C4 000A                            CMZ      10,B4
          0 0001A4  0801 000F                            BAL      s:6607,PREL

      719     6600    4                THEN DO;

      720     6601    4                     LDCT$->KN$LDCT.FLAGS.QUEUED = '1'B;

   6601   0 0001A6  8944 000A                            LBT,'8000'X       10,B4
   6601   0 0001A8       8000

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:103  
      721     6602    4                     LDCT$->KN$LDCT.LNK$ = KNT_WAIT_HEAD$;

   6602   0 0001A9  BC80 0000 0000  xsym                 LDB,B3   KNT_WAIT_HEAD$
          0 0001AC  BFC4 0008                            STB,B3   8,B4

      722     6603    4                     KNT_WAIT_HEAD$ = LDCT$;

   6603   0 0001AE  CF80 0000 0000  xsym                 STB,B4   KNT_WAIT_HEAD$

      723     6604    4                     KNT_WAIT_COUNT = KNT_WAIT_COUNT +1;

   6604   0 0001B1  8A80 0000 0000  xsym                 INC      KNT_WAIT_COUNT

      724     6605    4                     END;

      725     6606
      726     6607    3                KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;

   6607   0 0001B4  6C07                                 LDV,R6   7
          0 0001B5  EF45 0016                            STR,R6   22,B5

      727     6608    3                ALTRETURN;

   6608   0 0001B7  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      728     6609    3                END;
      729     6610
      730     6611    2           FRAG_HDR.SEQ = SEND_NEXT;

   6611   0 0001BA  8CC7 0019                            LDI      SEND_NEXT,AUTO
          0 0001BC  8D46 0002                            SDI      2,B6

      731     6612
      732     6613        /* Build the common information in the TPDU header.
      733     6614        */
      734     6615    2           TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR) );

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:104  
   6615   0 0001BE  DCC7 000E                            LDB,B5   FRAG$,AUTO
          0 0001C0  CBC5 0008                            LAB,B4   8,B5
          0 0001C2  CFC7 000A                            STB,B4   TPDU$,AUTO

      735     6616    2           B$TPDU.LI = FRAG_SZ - THIS_SPDUSZ - 1;

   6616   0 0001C4  D847 0014                            LDR,R5   FRAG_SZ,AUTO
          0 0001C6  D247 0016                            SUB,R5   THIS_SPDUSZ,AUTO
          0 0001C8  5EFF                                 ADV,R5   -1
          0 0001C9  D784                                 STH,R5   ,B4

      736     6617
      737     6618    2   BUILD_TPDU_INFO:
      738     6619    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_ED

   6619   0 0001CA  D847 0020            BUILD_TPDU_INFO LDR,R5   ENTRY_SWITCH,AUTO
          0 0001CC  5D01                                 CMV,R5   1
          0 0001CD  0981 0008                            BNE      s:6621,PREL

      739     6620    2           THEN B$TPDU.TYPE = %K_TPDU_TYPE_ED;

   6620   0 0001CF  4C10                                 LDV,R4   16
          0 0001D0  ECC7 000A                            LDB,B6   TPDU$,AUTO
          0 0001D2  CA86                                 SRM,R4,'00F0'X    ,B6
          0 0001D3       00F0
          0 0001D4  0F81 0005                            B        s:6623,PREL

      740     6621    2           ELSE B$TPDU.TYPE = %K_TPDU_TYPE_DT;

   6621   0 0001D6  ECC7 000A                            LDB,B6   TPDU$,AUTO
          0 0001D8  8906                                 LBT,'00F0'X       ,B6
          0 0001D9       00F0

      741     6622
      742     6623    2           B$TPDU.CDT = 0;

   6623   0 0001DA  ECC7 000A                            LDB,B6   TPDU$,AUTO
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:105  
          0 0001DC  8806                                 LBF,'000F'X       ,B6
          0 0001DD       000F

      743     6624
      744     6625    2           IF ENTRY_SWITCH ~= 0

   6625   0 0001DE  5901 0009                            BEZ,R5   s:6628,PREL

      745     6626    2           THEN B$TPDU.DST_REF = KN$TCTX.DST_REF;

   6626   0 0001E0  ECC7 000A                            LDB,B6   TPDU$,AUTO
          0 0001E2  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 0001E4  C845 0001                            LDR,R4   1,B5
          0 0001E6  CF46 0001                            STR,R4   1,B6

      746     6627
      747     6628    2           IF KN$TCTX.OPTION.EXTENDED = '1'B

   6628   0 0001E8  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0001EA  82C6 000C                            LB,'0004'X        12,B6
          0 0001EC       0004
          0 0001ED  0581 0011                            BBF      s:6630,PREL

      748     6629    2           THEN B$TPDU_DT_EXT.TPDU_NR = SEND_NEXT;

   6629   0 0001EF  7081                                 DOL,R7   1
          0 0001F0  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 0001F2  ABC7 0022                            LAB,B2   ENTRY_SWITCH+2,AUTO
          0 0001F4  2C00                                 LDV,R2   0
          0 0001F5  6C20                                 LDV,R6   32
          0 0001F6  BCC7 000A                            LDB,B3   TPDU$,AUTO
          0 0001F8  3C21                                 LDV,R3   33
          0 0001F9  7C1F                                 LDV,R7   31
          0 0001FA  D380 0000 0000  xent                 LNJ,B5   X6B_BLR
          0 0001FD  0F81 0012                            B        s:6634,PREL

      749     6630    2           ELSE IF ENTRY_SWITCH ~= 0
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:106  

   6630   0 0001FF  5901 000B                            BEZ,R5   s:6632,PREL

      750     6631    2                THEN B$TPDU_DT.TPDU_NR = SEND_NEXT;

   6631   0 000201  C847 001A                            LDR,R4   SEND_NEXT+1,AUTO
          0 000203  4008                                 SOL,R4   8
          0 000204  DCC7 000A                            LDB,B5   TPDU$,AUTO
          0 000206  CAC5 0002                            SRM,R4,'7F00'X    2,B5
          0 000208       7F00
          0 000209  0F81 0006                            B        s:6634,PREL

      751     6632    2                ELSE B$TPDU_DT_0.TPDU_NR = 0;

   6632   0 00020B  DCC7 000A                            LDB,B5   TPDU$,AUTO
          0 00020D  8845 0001                            LBF,'7F00'X       1,B5
          0 00020F       7F00

      752     6633
      753     6634    2           SEND_NEXT = SEND_NEXT + 1;

   6634   0 000210  8AC7 001A                            INC      SEND_NEXT+1,AUTO
          0 000212  8EC7 0019                            CAD      SEND_NEXT,AUTO

      754     6635    2           IF SEND_NEXT > KN$TCTX.MAXSEQ

   6635   0 000214  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 000216  8CC7 0019                            LDI      SEND_NEXT,AUTO
          0 000218  84C6 000A                            SID      10,B6
          0 00021A  0681 0009                            BCF      s:6638,PREL
          0 00021C  6981 0003                            BNEZ,R6  s:6636,PREL
          0 00021E  7901 0005                            BEZ,R7   s:6638,PREL

      755     6636    2           THEN SEND_NEXT = 0;

   6636   0 000220  8747 0019                            CL       SEND_NEXT,AUTO
          0 000222  8747 001A                            CL       SEND_NEXT+1,AUTO
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:107  

      756     6637
      757     6638    2           IF SPDU_SZ=0 OR BUFFER_TPDU=0

   6638   0 000224  E847 0017                            LDR,R6   SPDU_SZ,AUTO
          0 000226  6901 0005                            BEZ,R6   s:6640,PREL
          0 000228  D847 001F                            LDR,R5   BUFFER_TPDU,AUTO
          0 00022A  5981 0013                            BNEZ,R5  s:6645,PREL

      758     6639    3           THEN DO;

      759     6640    3                IF ENTRY_SWITCH ~= 0

   6640   0 00022C  D847 0020                            LDR,R5   ENTRY_SWITCH,AUTO
          0 00022E  5901 0008                            BEZ,R5   s:6642,PREL

      760     6641    3                THEN B$TPDU_DT.EOT = '1'B;

   6641   0 000230  DCC7 000A                            LDB,B5   TPDU$,AUTO
          0 000232  8945 0002                            LBT,'8000'X       2,B5
          0 000234       8000
          0 000235  0F81 0018                            B        s:6650,PREL

      761     6642    3                ELSE B$TPDU_DT_0.EOT = '1'B;

   6642   0 000237  DCC7 000A                            LDB,B5   TPDU$,AUTO
          0 000239  8945 0001                            LBT,'8000'X       1,B5
          0 00023B       8000

      762     6643    3                END;

   6643   0 00023C  0F81 0011                            B        s:6650,PREL

      763     6644    3           ELSE DO;

      764     6645    3                IF ENTRY_SWITCH ~= 0

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:108  
   6645   0 00023E  C847 0020                            LDR,R4   ENTRY_SWITCH,AUTO
          0 000240  4901 0008                            BEZ,R4   s:6647,PREL

      765     6646    3                THEN B$TPDU_DT.EOT = '0'B;

   6646   0 000242  DCC7 000A                            LDB,B5   TPDU$,AUTO
          0 000244  8845 0002                            LBF,'8000'X       2,B5
          0 000246       8000
          0 000247  0F81 0006                            B        s:6650,PREL

      766     6647    3                ELSE B$TPDU_DT_0.EOT = '0'B;

   6647   0 000249  DCC7 000A                            LDB,B5   TPDU$,AUTO
          0 00024B  8845 0001                            LBF,'8000'X       1,B5
          0 00024D       8000

      767     6648    3                END;

      768     6649
      769     6650    2           IF BUFFER_TPDU = 0

   6650   0 00024E  D847 001F                            LDR,R5   BUFFER_TPDU,AUTO
          0 000250  5901 0176                            BEZ,R5   s:6758,PREL

      770     6651    2           THEN GOTO EXIT_SAVE;
      771     6652
      772     6653    2           SPDU$ = PINCRC(TPDU$,FRAG_SZ - THIS_SPDUSZ );

   6653   0 000252  C847 0014                            LDR,R4   FRAG_SZ,AUTO
          0 000254  C247 0016                            SUB,R4   THIS_SPDUSZ,AUTO
          0 000256  8CC7 000A                            LDI      TPDU$,AUTO
          0 000258  7031                                 DCL,R7   1
          0 000259  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 00025B  E854                                 LDR,R6   R4
          0 00025C  70F0                                 DAR,R7   16
          0 00025D  8447 0022                            AID      ENTRY_SWITCH+2,AUTO
          0 00025F  7071                                 DCR,R7   1
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:109  
          0 000260  8D47 000C                            SDI      SPDU$,AUTO

      773     6654        /* Move the SPDU into the buffer.
      774     6655        */
      775     6656    3           DO WHILE (THIS_SPDUSZ > 0);

   6656   0 000262  C847 0016                            LDR,R4   THIS_SPDUSZ,AUTO
          0 000264  4A81 00DD                            BLEZ,R4  s:6724,PREL

      776     6657
      777     6658    3                IF KN$NETPARM.SHDR$ ~= ADDR(NIL)

   6658   0 000266  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000268  8DC6 0008                            CMN      8,B6
          0 00026A  0901 0032                            BE       s:6677,PREL

      778     6659    4                THEN DO;

      779     6660    4                     MOVE$ = KN$NETPARM.SHDR_C$;

   6660   0 00026C  8CC6 0008                            LDI      8,B6
          0 00026E  8D47 0008                            SDI      MOVE$,AUTO

      780     6661    4                     IF THIS_SPDUSZ >= KN$NETPARM.SHDRSZ

   6661   0 000270  D847 0016                            LDR,R5   THIS_SPDUSZ,AUTO
          0 000272  5801 0015                            BLZ,R5   s:6669,PREL
          0 000274  D946 000A                            CMR,R5   10,B6
          0 000276  0201 0011                            BL       s:6669,PREL

      781     6662    5                     THEN DO;

      782     6663    5                          MOVE_SZ = KN$NETPARM.SHDRSZ;

   6663   0 000278  C846 000A                            LDR,R4   10,B6
          0 00027A  CF47 0018                            STR,R4   MOVE_SZ,AUTO

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:110  
      783     6664    5                          THIS_SPDUSZ = THIS_SPDUSZ - KN$NETPARM.SHDRSZ;

   6664   0 00027C  D254                                 SUB,R5   R4
          0 00027D  DF47 0016                            STR,R5   THIS_SPDUSZ,AUTO

      784     6665    5                          KN$NETPARM.SHDR$ = ADDR(NIL);

   6665   0 00027F  DB80 0000 0000                       LAB,B5   0
          0 000282  DFC6 0008                            STB,B5   8,B6

      785     6666    5                          KN$NETPARM.SHDRSZ = 0;

   6666   0 000284  8746 000A                            CL       10,B6

      786     6667    5                          END;

   6667   0 000286  0F81 0014                            B        s:6674,PREL

      787     6668    5                     ELSE DO;

      788     6669    5                          MOVE_SZ = THIS_SPDUSZ;

   6669   0 000288  DF47 0018                            STR,R5   MOVE_SZ,AUTO

      789     6670    5                         KN$NETPARM.SHDR_C$ = PINCRC(KN$NETPARM.SHDR_C$, THIS_SPDUSZ);

   6670   0 00028A  7031                                 DCL,R7   1
          0 00028B  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 00028D  E855                                 LDR,R6   R5
          0 00028E  70F0                                 DAR,R7   16
          0 00028F  8447 0022                            AID      ENTRY_SWITCH+2,AUTO
          0 000291  7071                                 DCR,R7   1
          0 000292  8D46 0008                            SDI      8,B6

      790     6671    5                          KN$NETPARM.SHDRSZ = KN$NETPARM.SHDRSZ - THIS_SPDUSZ;

   6671   0 000294  D246 000A                            SUB,R5   10,B6
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:111  
          0 000296  8255                                 NEG      R5
          0 000297  DF46 000A                            STR,R5   10,B6

      791     6672    5                          THIS_SPDUSZ = 0; /* for do while*/

   6672   0 000299  8747 0016                            CL       THIS_SPDUSZ,AUTO

      792     6673    5                          END;

      793     6674    4                     GOTO MOVE_IT;

   6674   0 00029B  0F81 006F                            B        s:6704,PREL

      794     6675    4                     END/*do if shrd$ ~ nil*/;
      795     6676
      796     6677    3                IF KN$NETPARM.UHDR$ ~= ADDR(NIL)

   6677   0 00029D  8DC6 0005                            CMN      5,B6
          0 00029F  0901 0036                            BE       s:6696,PREL

      797     6678    4                THEN DO;

      798     6679    4                     MOVE$ = KN$NETPARM.UHDR$;

   6679   0 0002A1  DCC6 0005                            LDB,B5   5,B6
          0 0002A3  DFC7 0008                            STB,B5   MOVE$,AUTO

      799     6680    4                     IF THIS_SPDUSZ >= KN$NETPARM.UHDRSZ

   6680   0 0002A5  E847 0016                            LDR,R6   THIS_SPDUSZ,AUTO
          0 0002A7  6801 0015                            BLZ,R6   s:6688,PREL
          0 0002A9  E946 0007                            CMR,R6   7,B6
          0 0002AB  0201 0011                            BL       s:6688,PREL

      800     6681    5                     THEN DO;

      801     6682    5                          MOVE_SZ = KN$NETPARM.UHDRSZ;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:112  

   6682   0 0002AD  D846 0007                            LDR,R5   7,B6
          0 0002AF  DF47 0018                            STR,R5   MOVE_SZ,AUTO

      802     6683    5                          THIS_SPDUSZ = THIS_SPDUSZ - KN$NETPARM.UHDRSZ;

   6683   0 0002B1  E255                                 SUB,R6   R5
          0 0002B2  EF47 0016                            STR,R6   THIS_SPDUSZ,AUTO

      803     6684    5                          KN$NETPARM.UHDR$ = ADDR(NIL);

   6684   0 0002B4  CB80 0000 0000                       LAB,B4   0
          0 0002B7  CFC6 0005                            STB,B4   5,B6

      804     6685    5                          KN$NETPARM.UHDRSZ = 0;

   6685   0 0002B9  8746 0007                            CL       7,B6

      805     6686    5                          END;

   6686   0 0002BB  0F81 0018                            B        s:6693,PREL

      806     6687    5                     ELSE DO;

      807     6688    5                          MOVE_SZ = THIS_SPDUSZ;

   6688   0 0002BD  EF47 0018                            STR,R6   MOVE_SZ,AUTO

      808     6689    5                         KN$NETPARM.UHDR_C$ = PINCRC(KN$NETPARM.UHDR_C$, THIS_SPDUSZ);

   6689   0 0002BF  8CC6 0005                            LDI      5,B6
          0 0002C1  7031                                 DCL,R7   1
          0 0002C2  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 0002C4  E847 0016                            LDR,R6   THIS_SPDUSZ,AUTO
          0 0002C6  70F0                                 DAR,R7   16
          0 0002C7  8447 0022                            AID      ENTRY_SWITCH+2,AUTO
          0 0002C9  7071                                 DCR,R7   1
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:113  
          0 0002CA  8D46 0005                            SDI      5,B6

      809     6690    5                          KN$NETPARM.UHDRSZ = KN$NETPARM.UHDRSZ - THIS_SPDUSZ;

   6690   0 0002CC  D846 0007                            LDR,R5   7,B6
          0 0002CE  D247 0016                            SUB,R5   THIS_SPDUSZ,AUTO
          0 0002D0  DF46 0007                            STR,R5   7,B6

      810     6691    5                          THIS_SPDUSZ = 0; /* for do while*/

   6691   0 0002D2  8747 0016                            CL       THIS_SPDUSZ,AUTO

      811     6692    5                          END;

      812     6693    4                     GOTO MOVE_IT;

   6693   0 0002D4  0F81 0036                            B        s:6704,PREL

      813     6694    4                     END/*do if uhrd$ ~ nil*/;
      814     6695
      815     6696    3                IF KN$NETPARM.MSG$ ~= ADDR(NIL)

   6696   0 0002D6  8DC6 0002                            CMN      2,B6
          0 0002D8  0901 0032                            BE       s:6704,PREL

      816     6697    4                THEN DO;

      817     6698    4                     MOVE$ = KN$NETPARM.MSG$;

   6698   0 0002DA  8CC6 0002                            LDI      2,B6
          0 0002DC  8D47 0008                            SDI      MOVE$,AUTO

      818     6699    4                     IF THIS_SPDUSZ >= KN$NETPARM.MSGSZ

   6699   0 0002DE  D847 0016                            LDR,R5   THIS_SPDUSZ,AUTO
          0 0002E0  5801 0015                            BLZ,R5   s:6707,PREL
          0 0002E2  D946 0004                            CMR,R5   4,B6
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:114  
          0 0002E4  0201 0011                            BL       s:6707,PREL

      819     6700    5                     THEN DO;

      820     6701    5                          MOVE_SZ = KN$NETPARM.MSGSZ;

   6701   0 0002E6  C846 0004                            LDR,R4   4,B6
          0 0002E8  CF47 0018                            STR,R4   MOVE_SZ,AUTO

      821     6702    5                          THIS_SPDUSZ = THIS_SPDUSZ - KN$NETPARM.MSGSZ;

   6702   0 0002EA  D254                                 SUB,R5   R4
          0 0002EB  DF47 0016                            STR,R5   THIS_SPDUSZ,AUTO

      822     6703    5                          KN$NETPARM.MSG$ = ADDR(NIL);

   6703   0 0002ED  DB80 0000 0000                       LAB,B5   0
          0 0002F0  DFC6 0002                            STB,B5   2,B6

      823     6704    5                          KN$NETPARM.MSGSZ = 0;

   6704   0 0002F2  8746 0004                            CL       4,B6

      824     6705    5                          END;

   6705   0 0002F4  0F81 0014                            B        s:6712,PREL

      825     6706    5                     ELSE DO;

      826     6707    5                          MOVE_SZ = THIS_SPDUSZ;

   6707   0 0002F6  DF47 0018                            STR,R5   MOVE_SZ,AUTO

      827     6708    5                          KN$NETPARM.MSG$ = PINCRC(KN$NETPARM.MSG$, THIS_SPDUSZ);

   6708   0 0002F8  7031                                 DCL,R7   1
          0 0002F9  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:115  
          0 0002FB  E855                                 LDR,R6   R5
          0 0002FC  70F0                                 DAR,R7   16
          0 0002FD  8447 0022                            AID      ENTRY_SWITCH+2,AUTO
          0 0002FF  7071                                 DCR,R7   1
          0 000300  8D46 0002                            SDI      2,B6

      828     6709    5                          KN$NETPARM.MSGSZ = KN$NETPARM.MSGSZ - THIS_SPDUSZ;

   6709   0 000302  D246 0004                            SUB,R5   4,B6
          0 000304  8255                                 NEG      R5
          0 000305  DF46 0004                            STR,R5   4,B6

      829     6710    5                          THIS_SPDUSZ = 0; /* for do while*/

   6710   0 000307  8747 0016                            CL       THIS_SPDUSZ,AUTO

      830     6711    5                          END;

      831     6712    4                     GOTO MOVE_IT;

   6712   0 000309  0F81 0001                            B        s:6704,PREL

   6704   0                              MOVE_IT         null
      832     6713    4                     END/*do if msg$ ~ nil*/;
      833     6714
      834     6715    3   MOVE_IT:     ;
      835     6716    3                SPDU$->B$SPDU = MOVE$->B$SPDU;

   6716   0 00030B  8CC7 000C            MOVE_IT         LDI      SPDU$,AUTO
          0 00030D  B856                                 LDR,R3   R6
          0 00030E  E570 7FFF                            AND,R6   32767,IMO
          0 000310  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 000312  DCC7 0022                            LDB,B5   ENTRY_SWITCH+2,AUTO
          0 000314  304F                                 SOR,R3   15
          0 000315  8CC7 0008                            LDI      MOVE$,AUTO
          0 000317  A856                                 LDR,R2   R6
          0 000318  E570 7FFF                            AND,R6   32767,IMO
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:116  
          0 00031A  8D47 0024                            SDI      ENTRY_SWITCH+4,AUTO
          0 00031C  CCC7 0024                            LDB,B4   ENTRY_SWITCH+4,AUTO
          0 00031E  204F                                 SOR,R2   15
          0 00031F  AB84                                 LAB,B2   ,B4
          0 000320  E847 0018                            LDR,R6   MOVE_SZ,AUTO
          0 000322  BB85                                 LAB,B3   ,B5
          0 000323  0008                                 MMM

      836     6717    3                SPDU$ = PINCRC(SPDU$,MOVE_SZ);

   6717   0 000324  8CC7 000C                            LDI      SPDU$,AUTO
          0 000326  7031                                 DCL,R7   1
          0 000327  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 000329  E847 0018                            LDR,R6   MOVE_SZ,AUTO
          0 00032B  70F0                                 DAR,R7   16
          0 00032C  8447 0022                            AID      ENTRY_SWITCH+2,AUTO
          0 00032E  7071                                 DCR,R7   1
          0 00032F  8D47 000C                            SDI      SPDU$,AUTO

      837     6718    3                MOVE$ = PINCRC(MOVE$,MOVE_SZ);

   6718   0 000331  8CC7 0008                            LDI      MOVE$,AUTO
          0 000333  7031                                 DCL,R7   1
          0 000334  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 000336  E847 0018                            LDR,R6   MOVE_SZ,AUTO
          0 000338  70F0                                 DAR,R7   16
          0 000339  8447 0022                            AID      ENTRY_SWITCH+2,AUTO
          0 00033B  7071                                 DCR,R7   1
          0 00033C  8D47 0008                            SDI      MOVE$,AUTO

      838     6719
      839     6720    3                END/*do while this_tpdusz > 0*/;

   6720   0 00033E  D847 0016                            LDR,R5   THIS_SPDUSZ,AUTO
          0 000340  5A01 FF25                            BGZ,R5   s:6658,PREL

      840     6721
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:117  
      841     6722        /* And calculate the checksum if appropriate.
      842     6723        */
      843     6724    2           IF KN$TCTX.OPTION.CHKSUM ~= '0'B

   6724   0 000342  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 000344  82C6 000C                            LB,'0001'X        12,B6
          0 000346       0001
          0 000347  0581 0036                            BBF      s:6731,PREL

      844     6725    3           THEN DO;

      845     6726    3                SPDU$ = PINCRC(TPDU$,CHKOFF-3);

   6726   0 000349  8CC7 000A                            LDI      TPDU$,AUTO
          0 00034B  7031                                 DCL,R7   1
          0 00034C  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 00034E  E847 001B                            LDR,R6   CHKOFF,AUTO
          0 000350  70F0                                 DAR,R7   16
          0 000351  8447 0022                            AID      ENTRY_SWITCH+2,AUTO
          0 000353  7071                                 DCR,R7   1
          0 000354  7031                                 DCL,R7   1
          0 000355  8470 FFFF FFFD                       AID      -3,IMO
          0 000358  7071                                 DCR,R7   1
          0 000359  8D47 000C                            SDI      SPDU$,AUTO

      846     6727    3                SPDU$->B$CHAR4 = ADDR(K_CKSUM_INIT)->B$CHAR4;

   6727   0 00035B  B856                                 LDR,R3   R6
          0 00035C  E570 7FFF                            AND,R6   32767,IMO
          0 00035E  8D47 0022                            SDI      ENTRY_SWITCH+2,AUTO
          0 000360  DCC7 0022                            LDB,B5   ENTRY_SWITCH+2,AUTO
          0 000362  304F                                 SOR,R3   15
          0 000363  AB80 0000 0000  xsym                 LAB,B2   K_CKSUM_INIT
          0 000366  2C00                                 LDV,R2   0
          0 000367  6C04                                 LDV,R6   4
          0 000368  BB85                                 LAB,B3   ,B5
          0 000369  0008                                 MMM
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:118  

      847     6728    3                CALL KNA$CALC_CHKSUM(TPDU$,FRAG_SZ,CHKOFF);

   6728   0 00036A  EBC7 001B                            LAB,B6   CHKOFF,AUTO
          0 00036C  EFC7 0026                            STB,B6   ENTRY_SWITCH+6,AUTO
          0 00036E  CBC7 0014                            LAB,B4   FRAG_SZ,AUTO
          0 000370  CFC7 0024                            STB,B4   ENTRY_SWITCH+4,AUTO
          0 000372  ABC7 000A                            LAB,B2   TPDU$,AUTO
          0 000374  AFC7 0022                            STB,B2   ENTRY_SWITCH+2,AUTO
          0 000376  BBC7 0022                            LAB,B3   ENTRY_SWITCH+2,AUTO
          0 000378  CBF0 0300                            LAB,B4   768,IMO
          0 00037A  E380 0000 0000  xent                 LNJ,B6   KNA$CALC_CHKSUM
          0 00037D       0001                            DC       s:6731,PREL

      848     6729    3                END;

      849     6730
      850     6731    2           FRAGS# = FRAGS# +1;

   6731   0 00037E  8AC7 001E                            INC      FRAGS#,AUTO

      851     6732    2           END/*do while spdu_size> 0*/;

   6732   0 000380  E847 0017                            LDR,R6   SPDU_SZ,AUTO
          0 000382  6A01 FDA3                            BGZ,R6   s:6562,PREL

      852     6733
      853     6734        /* Completed busting it apart safely, so go ahead and update the
      854     6735           Transport Context Block to reflect the new fragments to send.
      855     6736        */
      856     6737    1      IF ENTRY_SWITCH ~= %K_TPDU_TYPE_ED

   6737   0 000384  E847 0020                            LDR,R6   ENTRY_SWITCH,AUTO
          0 000386  6D01                                 CMV,R6   1
          0 000387  0901 0021                            BE       s:6750,PREL

      857     6738    2      THEN DO;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:119  

      858     6739    2           IF KN$TCTX.SEND_HEAD$ = ADDR(NIL)

   6739   0 000389  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 00038B  8DC6 003A                            CMN      58,B6
          0 00038D  0981 0007                            BNE      s:6741,PREL

      859     6740    2           THEN KN$TCTX.SEND_HEAD$ = FIRST_FRAG$;

   6740   0 00038F  DCC7 0010                            LDB,B5   FIRST_FRAG$,AUTO
          0 000391  DFC6 003A                            STB,B5   58,B6
          0 000393  0F81 0007                            B        s:6743,PREL

      860     6741    2           ELSE KN$TCTX.SEND_TAIL$->FRAG_HDR.LINK$ = FIRST_FRAG$;

   6741   0 000395  DCC6 003C                            LDB,B5   60,B6
          0 000397  CCC7 0010                            LDB,B4   FIRST_FRAG$,AUTO
          0 000399  CFC5 0004                            STB,B4   4,B5

      861     6742
      862     6743    2           KN$TCTX.SEND_TAIL$ = LAST_FRAG$;

   6743   0 00039B  DCC7 0012                            LDB,B5   LAST_FRAG$,AUTO
          0 00039D  DFC6 003C                            STB,B5   60,B6

      863     6744
      864     6745    2           IF KN$TCTX.SEND_NOTSENT$ = ADDR(NIL)

   6745   0 00039F  8DC6 003E                            CMN      62,B6
          0 0003A1  0981 0025                            BNE      s:6758,PREL

      865     6746    2           THEN KN$TCTX.SEND_NOTSENT$ = FIRST_FRAG$;

   6746   0 0003A3  CCC7 0010                            LDB,B4   FIRST_FRAG$,AUTO
          0 0003A5  CFC6 003E                            STB,B4   62,B6

      866     6747    2           END/*do if normal data*/;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:120  

   6747   0 0003A7  0F81 001F                            B        s:6758,PREL

      867     6748
      868     6749    2      ELSE DO;

      869     6750    2           IF KN$TCTX.SEND_EHEAD$ = ADDR(NIL)

   6750   0 0003A9  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0003AB  8DC6 0040                            CMN      64,B6
          0 0003AD  0981 0007                            BNE      s:6752,PREL

      870     6751    2           THEN KN$TCTX.SEND_EHEAD$ = FIRST_FRAG$;

   6751   0 0003AF  DCC7 0010                            LDB,B5   FIRST_FRAG$,AUTO
          0 0003B1  DFC6 0040                            STB,B5   64,B6
          0 0003B3  0F81 0007                            B        s:6754,PREL

      871     6752    2           ELSE KN$TCTX.SEND_ETAIL$->FRAG_HDR.LINK$ = FIRST_FRAG$;

   6752   0 0003B5  DCC6 0042                            LDB,B5   66,B6
          0 0003B7  CCC7 0010                            LDB,B4   FIRST_FRAG$,AUTO
          0 0003B9  CFC5 0004                            STB,B4   4,B5

      872     6753
      873     6754    2           KN$TCTX.SEND_ETAIL$ = LAST_FRAG$;

   6754   0 0003BB  DCC7 0012                            LDB,B5   LAST_FRAG$,AUTO
          0 0003BD  DFC6 0042                            STB,B5   66,B6

      874     6755
      875     6756    2           IF KN$TCTX.SEND_ENOTSENT$ = ADDR(NIL)

   6756   0 0003BF  8DC6 0044                            CMN      68,B6
          0 0003C1  0981 0005                            BNE      s:6758,PREL

      876     6757    2           THEN KN$TCTX.SEND_ENOTSENT$ = FIRST_FRAG$;
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:121  

   6757   0 0003C3  CCC7 0010                            LDB,B4   FIRST_FRAG$,AUTO
          0 0003C5  CFC6 0044                            STB,B4   68,B6

      877     6758    2           END/*do if expidated data*/;

      878     6759
      879     6760    1   EXIT_SAVE:
      880     6761    1      IF ENTRY_SWITCH ~= %K_TPDU_TYPE_ED

   6761   0 0003C7  E847 0020            EXIT_SAVE       LDR,R6   ENTRY_SWITCH,AUTO
          0 0003C9  6D01                                 CMV,R6   1
          0 0003CA  0901 0007                            BE       s:6763,PREL

      881     6762    1      THEN KN$TCTX.SEND_NEXT = SEND_NEXT;

   6762   0 0003CC  8CC7 0019                            LDI      SEND_NEXT,AUTO
          0 0003CE  8D46 0036                            SDI      54,B6
          0 0003D0  0F81 0005                            B        s:6765,PREL

      882     6763    1      ELSE KN$TCTX.SEND_EXPD = SEND_NEXT;

   6763   0 0003D2  8CC7 0019                            LDI      SEND_NEXT,AUTO
          0 0003D4  8D46 0038                            SDI      56,B6

      883     6764
      884     6765    1      IF FRAGS# > 1

   6765   0 0003D6  D847 001E                            LDR,R5   FRAGS#,AUTO
          0 0003D8  5D01                                 CMV,R5   1
          0 0003D9  0381 0007                            BLE      s:6770,PREL

      885     6766    2      THEN DO;

      886     6767    2           KN$TCTX.SGMENT_TSDUS = KN$TCTX.SGMENT_TSDUS +1;

   6767   0 0003DB  8AC6 0046                            INC      70,B6
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:122  

      887     6768    2           KN$TCTX.SGMENT_FRAGS = KN$TCTX.SGMENT_FRAGS + FRAGS#;

   6768   0 0003DD  DA46 0047                            ADD,R5   71,B6
          0 0003DF  DF46 0047                            STR,R5   71,B6

      888     6769    2           END;

      889     6770    1      IF KN$NETPARM.ERRCODE = 0

   6770   0 0003E1  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 0003E3  D845 0016                            LDR,R5   22,B5
          0 0003E5  5981 0004                            BNEZ,R5  s:6772,PREL

      890     6771    1      THEN RETURN;

   6771   0 0003E7  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      891     6772    1      ELSE ALTRETURN;

   6772   0 0003EA  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
      892     6773
      893     6774    1   END KNT$SAVE;
      894     6775        %EOD;

PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:123  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SAVE.
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:124  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM               1F-0-0/w UBIN(16)    r     1 BUFFER_TPDU
    1B-0-0/w SBIN(16)    r     1 CHKOFF                     6-0-0/w PTR         r     1 CTX$
    20-0-0/w SBIN(16)    r     1 ENTRY_SWITCH              1C-0-0/w SBIN(32)    r     1 EXTRA
    10-0-0/w PTR         r     1 FIRST_FRAG$                E-0-0/w PTR         r     1 FRAG$
    1E-0-0/w UBIN(16)    r     1 FRAGS#                    14-0-0/w SBIN(16)    r     1 FRAG_SZ
    *0-0-0/w STRC(528)   r     1 KN$NETPARM                12-0-0/w PTR         r     1 LAST_FRAG$
     8-0-0/w PTR         r     1 LDCT$                      8-0-0/w PTR         r     1 MOVE$
    18-0-0/w SBIN(16)    r     1 MOVE_SZ                   19-0-0/w UBIN(32)    r     1 SEND_NEXT
     C-0-0/w PTR         r     1 SPDU$                     17-0-0/w SBIN(16)    r     1 SPDU_SZ
    15-0-0/w SBIN(16)    r     1 THDR_SZ                   16-0-0/w SBIN(16)    r     1 THIS_SPDUSZ
     A-0-0/w PTR         r     1 TPDU$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_WAIT_COUNT             0-0-0/w PTR         r     1 KNT_WAIT_HEAD$
     0-0-0/c CHAR(4)     r     1 K_CKSUM_INIT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)     r     1 B$CHAR4                    0-0-0/c ACHR        r     1 B$SPDU
     0-0-0/w STRC(56)    r     1 B$TPDU                     0-0-0/w STRC(40)    r     1 B$TPDU_DT
     0-0-0/w STRC(24)    r     1 B$TPDU_DT_0                0-0-0/w STRC(64)    r     1 B$TPDU_DT_EXT
     0-0-0/w STRC(128)   r     1 FRAG_HDR                   0-0-0/c STRC(32)    r     1 K$TPARM_CHKSUM
     0-0-0/c STRC(40)    r     1 K$TPDU_DT                  0-0-0/c STRC(24)    r     1 K$TPDU_DT_0
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:125  
     0-0-0/c STRC(64)    r     1 K$TPDU_DT_EXT              0-0-0/w STRC(256)   r     1 KN$LDCT
     0-0-0/w STRC(2816)  r     1 KN$TCTX


   Procedure KNT$SAVE requires 1005 words for executable code.
   Procedure KNT$SAVE requires 40 words of local(AUTO) storage.
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:126  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:127  
          MINI XREF LISTING

B$CHAR4
      5122**DCL      6727<<ASSIGN   6727>>ASSIGN
B$SPDU
      5120**DCL      6716<<ASSIGN   6716>>ASSIGN
B$TPDU.CDT
      4892**DCL      6623<<ASSIGN
B$TPDU.DST_REF
      4903**DCL      6626<<ASSIGN
B$TPDU.LI
      4876**DCL      6550<<ASSIGN   6616<<ASSIGN
B$TPDU.TYPE
      4886**DCL      6620<<ASSIGN   6621<<ASSIGN
B$TPDU_DT.EOT
      4957**DCL      6641<<ASSIGN   6646<<ASSIGN
B$TPDU_DT.TPDU_NR
      4963**DCL      6631<<ASSIGN
B$TPDU_DT_0.EOT
      5066**DCL      6642<<ASSIGN   6647<<ASSIGN
B$TPDU_DT_0.TPDU_NR
      5072**DCL      6632<<ASSIGN
B$TPDU_DT_EXT.TPDU_NR
      5014**DCL      6629<<ASSIGN
BUFFER_TPDU
      4768**DCL      6549<<ASSIGN   6556<<ASSIGN   6638>>IF       6650>>IF
BUILD_TPDU_INFO
      6619**LABEL    6553--GOTO
CHECK_WINDOW
      6460**LABEL    6454--GOTO
CHKOFF
      4765**DCL      6519<<ASSIGN   6726>>ASSIGN   6728<>CALL
COMMON
      6500**LABEL    6465--GOTO     6493--GOTO     6497--GOTO     6501--GOTO
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:128  
CTX$
      4751**DCL      5131--IMP-PTR  6460<<ASSIGN   6464>>IF       6464>>IF       6467>>IF       6467>>IF
      6469>>IF       6469>>IF       6469>>IF       6469>>IF       6473>>ASSIGN   6473>>ASSIGN   6475>>ASSIGN
      6480>>IF       6480>>IF       6480>>IF       6480>>IF       6483>>ASSIGN   6483>>ASSIGN   6483>>ASSIGN
      6487>>IF       6490>>ASSIGN   6490>>ASSIGN   6507<<ASSIGN   6511>>IF       6517>>IF       6523>>IF
      6529>>ASSIGN   6530>>ASSIGN   6547>>IF       6552>>IF       6566>>IF       6568>>ASSIGN   6569>>ASSIGN
      6580>>CALL     6592>>CALL     6595>>IF       6626>>ASSIGN   6628>>IF       6635>>IF       6724>>IF
      6739>>IF       6740>>ASSIGN   6741>>ASSIGN   6743>>ASSIGN   6745>>IF       6746>>ASSIGN   6750>>IF
      6751>>ASSIGN   6752>>ASSIGN   6754>>ASSIGN   6756>>IF       6757>>ASSIGN   6762>>ASSIGN   6763>>ASSIGN
      6767>>ASSIGN   6767>>ASSIGN   6768>>ASSIGN   6768>>ASSIGN
ENTRY_SWITCH
      4769**DCL      6453<<ASSIGN   6457<<ASSIGN   6496<<ASSIGN   6500<<ASSIGN   6513>>IF       6528>>IF
      6619>>IF       6625>>IF       6630>>IF       6640>>IF       6645>>IF       6737>>IF       6761>>IF
EXIT_SAVE
      6761**LABEL    6651--GOTO
EXTRA
      4766**DCL      6462<<ASSIGN   6473<<ASSIGN   6474>>IF       6475<<ASSIGN   6475>>ASSIGN   6483<<ASSIGN
      6487>>IF
FIRST_FRAG$
      4757**DCL      6505<<ASSIGN   6582>>IF       6583<<ASSIGN   6589>>DOWHILE  6590>>ASSIGN   6591<<ASSIGN
      6740>>ASSIGN   6741>>ASSIGN   6746>>ASSIGN   6751>>ASSIGN   6752>>ASSIGN   6757>>ASSIGN
FRAG$
      4756**DCL      4792--IMP-PTR  6580<>CALL     6583>>ASSIGN   6584>>ASSIGN   6585>>ASSIGN   6590<<ASSIGN
      6591>>ASSIGN   6592>>CALL     6611>>ASSIGN   6615>>ASSIGN
FRAGS#
      4767**DCL      6506<<ASSIGN   6731<<ASSIGN   6731>>ASSIGN   6765>>IF       6768>>ASSIGN
FRAG_HDR
      4792**DCL      6592<>CALL     6615--ASSIGN
FRAG_HDR.LINK$
      4817**DCL      6584<<ASSIGN   6591>>ASSIGN   6741<<ASSIGN   6752<<ASSIGN
FRAG_HDR.SEQ
      4805**DCL      4806--REDEF    6611<<ASSIGN
FRAG_SZ
      4759**DCL      6562<<ASSIGN   6566>>IF       6569<<ASSIGN   6580<>CALL     6616>>ASSIGN   6653>>ASSIGN
      6728<>CALL
K$TPARM_CHKSUM
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:129  
      5096**DCL      6520--ASSIGN
K$TPDU_DT
      6294**DCL      6515--ASSIGN
K$TPDU_DT_0
      6408**DCL      6514--ASSIGN
K$TPDU_DT_EXT
      6344**DCL      6512--ASSIGN
KN$LDCT.FLAGS.QUEUED
      6225**DCL      6599>>IF       6601<<ASSIGN
KN$LDCT.LNK$
      6194**DCL      6602<<ASSIGN
KN$LDCT.RLCID.LDCTX
      6109**DCL      6116--REDEF    6124--REDEF
KN$LDCT.TRANSPORT_ID
      6143**DCL      6151--REDEF
KN$LDCT.UID
      6173**DCL      6174--REDEF    6183--REDEF
KN$NETPARM
      4609**DCL        50--PROC     6452--ENTRY    6456--ENTRY    6495--ENTRY    6499--ENTRY
KN$NETPARM.ERRCODE
      4716**DCL      6489<<ASSIGN   6607<<ASSIGN   6770>>IF
KN$NETPARM.LDCT$
      4610**DCL      6596>>ASSIGN
KN$NETPARM.MSG$
      4616**DCL      4621--REDEF    6540>>IF       6696>>IF       6698>>ASSIGN   6703<<ASSIGN   6708<<ASSIGN
      6708>>ASSIGN
KN$NETPARM.MSGSZ
      4627**DCL      6541>>ASSIGN   6699>>IF       6701>>ASSIGN   6702>>ASSIGN   6704<<ASSIGN   6709<<ASSIGN
      6709>>ASSIGN
KN$NETPARM.NHDR$
      4668**DCL      4669--REDEF
KN$NETPARM.SHDR$
      4646**DCL      4647--REDEF    6658>>IF       6665<<ASSIGN
KN$NETPARM.SHDRSZ
      4652**DCL      6535>>ASSIGN   6661>>IF       6663>>ASSIGN   6664>>ASSIGN   6666<<ASSIGN   6671<<ASSIGN
      6671>>ASSIGN
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:130  
KN$NETPARM.SHDR_C$
      4647**DCL      6534>>IF       6660>>ASSIGN   6670<<ASSIGN   6670>>ASSIGN
KN$NETPARM.SLDCT$
      4723**DCL      6597>>ASSIGN
KN$NETPARM.TCTX$
      4733**DCL      6460>>ASSIGN   6507>>ASSIGN
KN$NETPARM.THDR$
      4657**DCL      4658--REDEF    6545>>ASSIGN
KN$NETPARM.THDRSZ
      4663**DCL      6526<<ASSIGN
KN$NETPARM.UHDR$
      4632**DCL      4633--REDEF    6677>>IF       6679>>ASSIGN   6684<<ASSIGN
KN$NETPARM.UHDRSZ
      4641**DCL      6538>>ASSIGN   6680>>IF       6682>>ASSIGN   6683>>ASSIGN   6685<<ASSIGN   6690<<ASSIGN
      6690>>ASSIGN
KN$NETPARM.UHDR_C$
      4633**DCL      6537>>IF       6689<<ASSIGN   6689>>ASSIGN
KN$TCTX
      5131**DCL      6580<>CALL     6592<>CALL
KN$TCTX.CLASS
      5197**DCL      6464>>IF       6547>>IF
KN$TCTX.DST_NSAP.ADDRESS_N
      6016**DCL      6017--REDEF
KN$TCTX.DST_REF
      5157**DCL      6626>>ASSIGN
KN$TCTX.MAXSEQ
      5235**DCL      6475>>ASSIGN   6483>>ASSIGN   6635>>IF
KN$TCTX.NODE
      5138**DCL      5151--REDEF
KN$TCTX.OPTION.CHKSUM
      5294**DCL      6517>>IF       6724>>IF
KN$TCTX.OPTION.CLASS_2_FLOW
      5269**DCL      6464>>IF
KN$TCTX.OPTION.EXTENDED
      5274**DCL      6511>>IF       6628>>IF
KN$TCTX.OPTION.OSI
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:131  
      5259**DCL      6523>>IF
KN$TCTX.PRIMARY
      5376**DCL      6595>>IF
KN$TCTX.RCV_WINDOW_SZ
      5203**DCL      6487>>IF
KN$TCTX.SEND_EHEAD$
      5617**DCL      6750>>IF       6751<<ASSIGN
KN$TCTX.SEND_ENOTSENT$
      5630**DCL      6756>>IF       6757<<ASSIGN
KN$TCTX.SEND_ETAIL$
      5624**DCL      6752>>ASSIGN   6754<<ASSIGN
KN$TCTX.SEND_EXPD
      5584**DCL      6530>>ASSIGN   6763<<ASSIGN
KN$TCTX.SEND_HEAD$
      5592**DCL      6739>>IF       6740<<ASSIGN
KN$TCTX.SEND_LWE
      5559**DCL      6467>>IF       6469>>IF       6473>>ASSIGN   6480>>IF       6483>>ASSIGN
KN$TCTX.SEND_NEXT
      5575**DCL      6469>>IF       6469>>IF       6473>>ASSIGN   6480>>IF       6480>>IF       6483>>ASSIGN
      6529>>ASSIGN   6762<<ASSIGN
KN$TCTX.SEND_NOTSENT$
      5609**DCL      6745>>IF       6746<<ASSIGN
KN$TCTX.SEND_TAIL$
      5600**DCL      6741>>ASSIGN   6743<<ASSIGN
KN$TCTX.SEND_UWE
      5565**DCL      6467>>IF       6469>>IF       6480>>IF
KN$TCTX.SERR.BUF_OVFLOW
      5407**DCL      6490<<ASSIGN   6490>>ASSIGN
KN$TCTX.SGMENT_FRAGS
      5644**DCL      6768<<ASSIGN   6768>>ASSIGN
KN$TCTX.SGMENT_TSDUS
      5638**DCL      6767<<ASSIGN   6767>>ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      5952**DCL      5953--REDEF
KN$TCTX.TMR_INACTIVITY.ARG
      5772**DCL      5773--REDEF
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:132  
KN$TCTX.TMR_REFERENCE.ARG
      5802**DCL      5803--REDEF
KN$TCTX.TMR_RETRAN.ARG
      5713**DCL      5714--REDEF
KN$TCTX.TMR_WINDOW.ARG
      5742**DCL      5743--REDEF
KN$TCTX.TPDUSZ
      5234**DCL      6552>>IF       6566>>IF       6568>>ASSIGN   6569>>ASSIGN
KNA$CALC_CHKSUM
      6446**DCL-ENT  6728--CALL
KNT$GET_SBUF
      6444**DCL-ENT  6580--CALL
KNT$RELBUF
      6445**DCL-ENT  6592--CALL
KNT_WAIT_COUNT
      6441**DCL      6604<<ASSIGN   6604>>ASSIGN
KNT_WAIT_HEAD$
      6440**DCL      6602>>ASSIGN   6603<<ASSIGN
K_CKSUM_INIT
      6439**DCL      6727--ASSIGN
LAST_FRAG$
      4758**DCL      6584>>ASSIGN   6585<<ASSIGN   6743>>ASSIGN   6754>>ASSIGN
LDCT$
      4753**DCL      6596<<ASSIGN   6597<<ASSIGN   6599>>IF       6601>>ASSIGN   6602>>ASSIGN   6603>>ASSIGN
MOVE$
      4752**DCL      4753--REDEF    6660<<ASSIGN   6679<<ASSIGN   6698<<ASSIGN   6716>>ASSIGN   6718<<ASSIGN
      6718>>ASSIGN
MOVE_IT
      6704**LABEL    6674--GOTO     6693--GOTO     6712--GOTO
MOVE_SZ
      4763**DCL      5120--IMP-SIZ  5123--IMP-SIZ  5124--IMP-SIZ  6663<<ASSIGN   6669<<ASSIGN   6682<<ASSIGN
      6688<<ASSIGN   6701<<ASSIGN   6707<<ASSIGN   6716>>ASSIGN   6716>>ASSIGN   6717>>ASSIGN   6718>>ASSIGN
SEND_NEXT
      4764**DCL      6529<<ASSIGN   6530<<ASSIGN   6611>>ASSIGN   6629>>ASSIGN   6631>>ASSIGN   6634<<ASSIGN
      6634>>ASSIGN   6635>>IF       6636<<ASSIGN   6762>>ASSIGN   6763>>ASSIGN
SPDU$
PL6.E3A0      #002=KNT$SAVE File=KNT$SEND.:E05TSI                                WED 07/30/97 01:12 Page:133  
      4755**DCL      6653<<ASSIGN   6716>>ASSIGN   6717<<ASSIGN   6717>>ASSIGN   6726<<ASSIGN   6727>>ASSIGN
SPDU_SZ
      4762**DCL      6532<<ASSIGN   6535<<ASSIGN   6535>>ASSIGN   6538<<ASSIGN   6538>>ASSIGN   6541<<ASSIGN
      6541>>ASSIGN   6552>>IF       6558>>DOWHILE  6562>>ASSIGN   6570<<ASSIGN   6570>>ASSIGN   6573>>ASSIGN
      6574<<ASSIGN   6638>>IF
THDR_SZ
      4760**DCL      6512<<ASSIGN   6514<<ASSIGN   6515<<ASSIGN   6519>>ASSIGN   6520<<ASSIGN   6520>>ASSIGN
      6524<<ASSIGN   6524>>ASSIGN   6526>>ASSIGN   6550>>ASSIGN   6552>>IF       6562>>ASSIGN   6568>>ASSIGN
THIS_SPDUSZ
      4761**DCL      6568<<ASSIGN   6570>>ASSIGN   6573<<ASSIGN   6616>>ASSIGN   6653>>ASSIGN   6656>>DOWHILE
      6661>>IF       6664<<ASSIGN   6664>>ASSIGN   6669>>ASSIGN   6670>>ASSIGN   6671>>ASSIGN   6672<<ASSIGN
      6680>>IF       6683<<ASSIGN   6683>>ASSIGN   6688>>ASSIGN   6689>>ASSIGN   6690>>ASSIGN   6691<<ASSIGN
      6699>>IF       6702<<ASSIGN   6702>>ASSIGN   6707>>ASSIGN   6708>>ASSIGN   6709>>ASSIGN   6710<<ASSIGN
TPDU$
      4754**DCL      4875--IMP-PTR  4935--IMP-PTR  4985--IMP-PTR  5049--IMP-PTR  6294--IMP-PTR  6344--IMP-PTR
      6408--IMP-PTR  6545<<ASSIGN   6550>>ASSIGN   6615<<ASSIGN   6616>>ASSIGN   6620>>ASSIGN   6621>>ASSIGN
      6623>>ASSIGN   6626>>ASSIGN   6629>>ASSIGN   6631>>ASSIGN   6632>>ASSIGN   6641>>ASSIGN   6642>>ASSIGN
      6646>>ASSIGN   6647>>ASSIGN   6653>>ASSIGN   6726>>ASSIGN   6728<>CALL

PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:134  
      895        1        /*T***********************************************************/
      896        2        /*T*                                                         */
      897        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      898        4        /*T*                                                         */
      899        5        /*T***********************************************************/
      900        6
      901        7        /*M* KNT$SAVE_FRAG - Save data when it can't be sent on up to session. */
      902        8        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
      903        9
      904       10        /*P* NAME: KNT$SAVE_FRAG
      905       11             PURPOSE:
      906       12                  To save the TPDUs for later delivery to session.
      907       13
      908       14             DESCRIPTION:
      909       15                  The buffer is obtained, filled, and linked.
      910       16
      911       17                  Called from KNT$RECV when an out of sequence or non-EOT
      912       18                  tpdu has been received from network,
      913       19                  when local session has been unable to accept the spdu, or
      914       20                  when network has been able to forward the tpdu to the host.
      915       21        */
      916       22        KNT$SAVE_FRAG: PROC(KN$TCTX,TPDU_NR,EOT,DATA$,DATASIZE)  ALTRET;
      917       23
      918       24        %INCLUDE K_ADDRESS_M;
      919      527        %INCLUDE KN_DATA_M;
      920     2313        %INCLUDE K_TRANSPORT_E;
      921     2638        %INCLUDE K_TRANSPORT_M;
      922     4422        %INCLUDE GH_SCHD_M;
      923     4566
      924     4567                                                /* Input parameters                   */
      925     4568        %K$TCTX (NAME=KN$TCTX, STCLASS="");
      926     5475    1   DCL DATA$ CPTR;
      927     5476    1   DCL DATASIZE SBIN;
      928     5477    1   DCL EOT BIT(1) ALIGNED;
      929     5478    1   DCL TPDU_NR UBIN(32);
      930     5479
      931     5480    1   DCL TPDU$ PTR;
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:135  
      932     5481    1   DCL TPDU_SZ UBIN;
      933     5482    1   DCL BLINK$ PTR;
      934     5483    1   DCL FLINK$ PTR;
      935     5484    1   DCL BUF$ PTR;
      936     5485
      937     5486                                                /* Based Data                         */
      938     5487        %K$FRAG_HDR (NAME=FRAG_HDR,STCLASS="BASED(BUF$)");
      939     5570    1   DCL B$TPDU CHAR(TPDU_SZ) BASED CALIGNED;
      940     5571
      941     5572                                                /* External routines                  */
      942     5573    1   DCL KNT$GET_RBUF ENTRY(3) ALTRET;
      943     5574
      944     5575        %EJECT;
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:136  
      945     5576    1      FLINK$ = KN$TCTX.RECV_HEAD$;
      946     5577    1      BLINK$ = ADDR(NIL);
      947     5578
      948     5579    2      DO WHILE (FLINK$ ~= ADDR(NIL) );
      949     5580    2           IF TPDU_NR = FLINK$->FRAG_HDR.SEQ
      950     5581    3           THEN DO;
      951     5582    3                KN$TCTX.RERR.DT_NWINDOW = KN$TCTX.RERR.DT_NWINDOW +1;
      952     5583    3                RETURN;
      953     5584    3                END;
      954     5585
      955     5586    2           IF ( ( TPDU_NR > FLINK$->FRAG_HDR.SEQ ) OR
      956     5587    2             ( (TPDU_NR <= KN$TCTX.RECV_LWE ) AND
      957     5588    2             (FLINK$->FRAG_HDR.SEQ > KN$TCTX.RECV_LWE) ) )
      958     5589    3           THEN DO;
      959     5590    3                BLINK$ = FLINK$;
      960     5591    3                FLINK$ = FLINK$->FRAG_HDR.LINK$;
      961     5592    3                END;
      962     5593
      963     5594    3           ELSE DO;                        /*insert in middle of chain*/
      964     5595    3   ADD_TO_END:  ;
      965     5596    3                CALL KNT$GET_RBUF(DATASIZE,BUF$,KN$TCTX)
      966     5597    4                WHENALTRETURN DO;
      967     5598    4                     ALTRETURN;
      968     5599    4                     END;
      969     5600
      970     5601    3                FRAG_HDR.SEQ = TPDU_NR;
      971     5602    3                FRAG_HDR.FLAGS.EOT = EOT;
      972     5603    3                TPDU$ = PINCRW(BUF$,SIZEW(FRAG_HDR));
      973     5604
      974     5605    3                TPDU_SZ = DATASIZE;
      975     5606    3                TPDU$->B$TPDU = DATA$->B$TPDU;
      976     5607    3                BUF$->FRAG_HDR.LINK$ = FLINK$;
      977     5608
      978     5609    3                IF BLINK$ ~= ADDR(NIL)
      979     5610    3                THEN BLINK$->FRAG_HDR.LINK$ = BUF$;
      980     5611    3                ELSE KN$TCTX.RECV_HEAD$ = BUF$;
      981     5612
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:137  
      982     5613    3                RETURN;
      983     5614    3                END;
      984     5615    2           END/*do while ptr$ ~ nil*/;
      985     5616
      986     5617    1      GOTO ADD_TO_END;
      987     5618
      988     5619
      989     5620    1   END KNT$SAVE_FRAG;
      990     5621        %EOD;

PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:138  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SAVE_FRAG.

   Procedure KNT$SAVE_FRAG requires 176 words for executable code.
   Procedure KNT$SAVE_FRAG requires 30 words of local(AUTO) storage.

PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:139  

 Object Unit name= KNT$SAVE_FRAG                              File name= KNT$SEND.:E05TOU
 UTS= JUL 30 '97 01:12:51.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   176     B0  KNT$SAVE_FRAG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        5  KNT$SAVE_FRAG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 KNT$GET_RBUF
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:140  


      895        1        /*T***********************************************************/
      896        2        /*T*                                                         */
      897        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      898        4        /*T*                                                         */
      899        5        /*T***********************************************************/
      900        6
      901        7        /*M* KNT$SAVE_FRAG - Save data when it can't be sent on up to session. */
      902        8        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
      903        9
      904       10        /*P* NAME: KNT$SAVE_FRAG
      905       11             PURPOSE:
      906       12                  To save the TPDUs for later delivery to session.
      907       13
      908       14             DESCRIPTION:
      909       15                  The buffer is obtained, filled, and linked.
      910       16
      911       17                  Called from KNT$RECV when an out of sequence or non-EOT
      912       18                  tpdu has been received from network,
      913       19                  when local session has been unable to accept the spdu, or
      914       20                  when network has been able to forward the tpdu to the host.
      915       21        */
      916       22        KNT$SAVE_FRAG: PROC(KN$TCTX,TPDU_NR,EOT,DATA$,DATASIZE)  ALTRET;

     22   0 000000  D380 0000 0000  xent KNT$SAVE_FRAG   LNJ,B5   X6A_AUTO_N
          0 000003       001E 0005                       DC       30,5

      917       23
      918       24        %INCLUDE K_ADDRESS_M;
      919      527        %INCLUDE KN_DATA_M;
      920     2313        %INCLUDE K_TRANSPORT_E;
      921     2638        %INCLUDE K_TRANSPORT_M;
      922     4422        %INCLUDE GH_SCHD_M;
      923     4566
      924     4567                                                /* Input parameters                   */
      925     4568        %K$TCTX (NAME=KN$TCTX, STCLASS="");
      926     5475    1   DCL DATA$ CPTR;
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:141  
      927     5476    1   DCL DATASIZE SBIN;
      928     5477    1   DCL EOT BIT(1) ALIGNED;
      929     5478    1   DCL TPDU_NR UBIN(32);
      930     5479
      931     5480    1   DCL TPDU$ PTR;
      932     5481    1   DCL TPDU_SZ UBIN;
      933     5482    1   DCL BLINK$ PTR;
      934     5483    1   DCL FLINK$ PTR;
      935     5484    1   DCL BUF$ PTR;
      936     5485
      937     5486                                                /* Based Data                         */
      938     5487        %K$FRAG_HDR (NAME=FRAG_HDR,STCLASS="BASED(BUF$)");
      939     5570    1   DCL B$TPDU CHAR(TPDU_SZ) BASED CALIGNED;
      940     5571
      941     5572                                                /* External routines                  */
      942     5573    1   DCL KNT$GET_RBUF ENTRY(3) ALTRET;
      943     5574
      944     5575        %EJECT;
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:142  
      945     5576    1      FLINK$ = KN$TCTX.RECV_HEAD$;

   5576   0 000005  ECC7 0004                            LDB,B6   @KN$TCTX,AUTO
          0 000007  DCC6 002A                            LDB,B5   42,B6
          0 000009  DFC7 0013                            STB,B5   FLINK$,AUTO

      946     5577    1      BLINK$ = ADDR(NIL);

   5577   0 00000B  CB80 0000 0000                       LAB,B4   0
          0 00000E  CFC7 0011                            STB,B4   BLINK$,AUTO

      947     5578
      948     5579    2      DO WHILE (FLINK$ ~= ADDR(NIL) );

   5579   0 000010  0F81 0099                            B        s:5615,PREL

      949     5580    2           IF TPDU_NR = FLINK$->FRAG_HDR.SEQ

   5580   0 000012  ECC7 0013                            LDB,B6   FLINK$,AUTO
          0 000014  DCC7 0006                            LDB,B5   @TPDU_NR,AUTO
          0 000016  8C85                                 LDI      ,B5
          0 000017  84C6 0002                            SID      2,B6
          0 000019  6981 000A                            BNEZ,R6  s:5586,PREL
          0 00001B  7981 0008                            BNEZ,R7  s:5586,PREL

      950     5581    3           THEN DO;

      951     5582    3                KN$TCTX.RERR.DT_NWINDOW = KN$TCTX.RERR.DT_NWINDOW +1;

   5582   0 00001D  CCC7 0004                            LDB,B4   @KN$TCTX,AUTO
          0 00001F  8AC4 0017                            INC      23,B4

      952     5583    3                RETURN;

   5583   0 000021  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      953     5584    3                END;
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:143  
      954     5585
      955     5586    2           IF ( ( TPDU_NR > FLINK$->FRAG_HDR.SEQ ) OR

   5586   0 000024  8C85                                 LDI      ,B5
          0 000025  84C6 0002                            SID      2,B6
          0 000027  6981 0003                            BNEZ,R6  s:5586+7,PREL
          0 000029  7901 0003                            BEZ,R7   s:5586+9,PREL
          0 00002B  0601 0016                            BCT      s:5590,PREL
          0 00002D  CCC7 0004                            LDB,B4   @KN$TCTX,AUTO
          0 00002F  8C85                                 LDI      ,B5
          0 000030  84C4 0022                            SID      34,B4
          0 000032  6981 0003                            BNEZ,R6  s:5586+18,PREL
          0 000034  7901 0003                            BEZ,R7   s:5586+20,PREL
          0 000036  0601 0013                            BCT      s:5594,PREL
          0 000038  8CC6 0002                            LDI      2,B6
          0 00003A  84C4 0022                            SID      34,B4
          0 00003C  0681 000D                            BCF      s:5594,PREL
          0 00003E  6981 0003                            BNEZ,R6  s:5590,PREL
          0 000040  7901 0009                            BEZ,R7   s:5594,PREL

      956     5587    2             ( (TPDU_NR <= KN$TCTX.RECV_LWE ) AND
      957     5588    2             (FLINK$->FRAG_HDR.SEQ > KN$TCTX.RECV_LWE) ) )
      958     5589    3           THEN DO;

      959     5590    3                BLINK$ = FLINK$;

   5590   0 000042  EFC7 0011                            STB,B6   BLINK$,AUTO

      960     5591    3                FLINK$ = FLINK$->FRAG_HDR.LINK$;

   5591   0 000044  CCC6 0004                            LDB,B4   4,B6
          0 000046  CFC7 0013                            STB,B4   FLINK$,AUTO

      961     5592    3                END;

   5592   0 000048  0F81 0061                            B        s:5615,PREL

PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:144  
      962     5593
      963     5594    3           ELSE DO;                        /*insert in middle of chain*/

   5591   0                              ADD_TO_END      null
      964     5595    3   ADD_TO_END:  ;
      965     5596    3                CALL KNT$GET_RBUF(DATASIZE,BUF$,KN$TCTX)

   5596   0 00004A  ECC7 0004            ADD_TO_END      LDB,B6   @KN$TCTX,AUTO
          0 00004C  EFC7 001C                            STB,B6   BUF$+7,AUTO
          0 00004E  DBC7 0015                            LAB,B5   BUF$,AUTO
          0 000050  DFC7 001A                            STB,B5   BUF$+5,AUTO
          0 000052  CCC7 000C                            LDB,B4   @DATASIZE,AUTO
          0 000054  CFC7 0018                            STB,B4   BUF$+3,AUTO
          0 000056  BBC7 0018                            LAB,B3   BUF$+3,AUTO
          0 000058  CBF0 0300                            LAB,B4   768,IMO
          0 00005A  E380 0000 0000  xent                 LNJ,B6   KNT$GET_RBUF
          0 00005D       0003                            DC       s:5598,PREL
          0 00005E  0F81 0004                            B        s:5601,PREL

      966     5597    4                WHENALTRETURN DO;

      967     5598    4                     ALTRETURN;

   5598   0 000060  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      968     5599    4                     END;
      969     5600
      970     5601    3                FRAG_HDR.SEQ = TPDU_NR;

   5601   0 000063  ECC7 0006                            LDB,B6   @TPDU_NR,AUTO
          0 000065  8C86                                 LDI      ,B6
          0 000066  DCC7 0015                            LDB,B5   BUF$,AUTO
          0 000068  8D45 0002                            SDI      2,B5

      971     5602    3                FRAG_HDR.FLAGS.EOT = EOT;

   5602   0 00006A  DCC7 0008                            LDB,B5   @EOT,AUTO
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:145  
          0 00006C  E805                                 LDR,R6   ,B5
          0 00006D  604F                                 SOR,R6   15
          0 00006E  CCC7 0015                            LDB,B4   BUF$,AUTO
          0 000070  EAC4 0006                            SRM,R6,'0001'X    6,B4
          0 000072       0001

      972     5603    3                TPDU$ = PINCRW(BUF$,SIZEW(FRAG_HDR));

   5603   0 000073  CCC7 0015                            LDB,B4   BUF$,AUTO
          0 000075  BBC4 0008                            LAB,B3   8,B4
          0 000077  BFC7 000E                            STB,B3   TPDU$,AUTO

      973     5604
      974     5605    3                TPDU_SZ = DATASIZE;

   5605   0 000079  ACC7 000C                            LDB,B2   @DATASIZE,AUTO
          0 00007B  E802                                 LDR,R6   ,B2
          0 00007C  EF47 0010                            STR,R6   TPDU_SZ,AUTO

      975     5606    3                TPDU$->B$TPDU = DATA$->B$TPDU;

   5606   0 00007E  9CC7 000A                            LDB,B1   @DATA$,AUTO
          0 000080  8C81                                 LDI      ,B1
          0 000081  B856                                 LDR,R3   R6
          0 000082  E570 7FFF                            AND,R6   32767,IMO
          0 000084  8D47 0018                            SDI      BUF$+3,AUTO
          0 000086  ECC7 0018                            LDB,B6   BUF$+3,AUTO
          0 000088  304F                                 SOR,R3   15
          0 000089  AB86                                 LAB,B2   ,B6
          0 00008A  A853                                 LDR,R2   R3
          0 00008B  E847 0010                            LDR,R6   TPDU_SZ,AUTO
          0 00008D  3C00                                 LDV,R3   0
          0 00008E  0008                                 MMM

      976     5607    3                BUF$->FRAG_HDR.LINK$ = FLINK$;

   5607   0 00008F  CCC7 0013                            LDB,B4   FLINK$,AUTO
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:146  
          0 000091  BCC7 0015                            LDB,B3   BUF$,AUTO
          0 000093  CFC3 0004                            STB,B4   4,B3

      977     5608
      978     5609    3                IF BLINK$ ~= ADDR(NIL)

   5609   0 000095  8DC7 0011                            CMN      BLINK$,AUTO
          0 000097  0901 0009                            BE       s:5611,PREL

      979     5610    3                THEN BLINK$->FRAG_HDR.LINK$ = BUF$;

   5610   0 000099  BCC7 0015                            LDB,B3   BUF$,AUTO
          0 00009B  ECC7 0011                            LDB,B6   BLINK$,AUTO
          0 00009D  BFC6 0004                            STB,B3   4,B6
          0 00009F  0F81 0007                            B        s:5613,PREL

      980     5611    3                ELSE KN$TCTX.RECV_HEAD$ = BUF$;

   5611   0 0000A1  BCC7 0015                            LDB,B3   BUF$,AUTO
          0 0000A3  ECC7 0004                            LDB,B6   @KN$TCTX,AUTO
          0 0000A5  BFC6 002A                            STB,B3   42,B6

      981     5612
      982     5613    3                RETURN;

   5613   0 0000A7  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      983     5614    3                END;
      984     5615    2           END/*do while ptr$ ~ nil*/;

   5615   0 0000AA  8DC7 0013                            CMN      FLINK$,AUTO
          0 0000AC  0981 FF65                            BNE      s:5580,PREL

      985     5616
      986     5617    1      GOTO ADD_TO_END;

   5617   0 0000AE  0F81 FF9B                            B        s:5594,PREL
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:147  
      987     5618
      988     5619
      989     5620    1   END KNT$SAVE_FRAG;
      990     5621        %EOD;

PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:148  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SAVE_FRAG.
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:149  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     A-0-0/w PTR         r     1 @DATA$                     C-0-0/w PTR         r     1 @DATASIZE
     8-0-0/w PTR         r     1 @EOT                       4-0-0/w PTR         r     1 @KN$TCTX
     6-0-0/w PTR         r     1 @TPDU_NR                  11-0-0/w PTR         r     1 BLINK$
    15-0-0/w PTR         r     1 BUF$                      *0-0-0/w PTR         r     1 DATA$
    *0-0-0/w SBIN(16)    r     1 DATASIZE                  *0-0-0/w BIT         r     1 EOT
    13-0-0/w PTR         r     1 FLINK$                    *0-0-0/w STRC(2816)  r     1 KN$TCTX
     E-0-0/w PTR         r     1 TPDU$                     *0-0-0/w UBIN(32)    r     1 TPDU_NR
    10-0-0/w UBIN(16)    r     1 TPDU_SZ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 B$TPDU                     0-0-0/w STRC(128)   r     1 FRAG_HDR


   Procedure KNT$SAVE_FRAG requires 176 words for executable code.
   Procedure KNT$SAVE_FRAG requires 30 words of local(AUTO) storage.
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:151  
          MINI XREF LISTING

ADD_TO_END
      5591**LABEL    5617--GOTO
B$TPDU
      5570**DCL      5606<<ASSIGN   5606>>ASSIGN
BLINK$
      5482**DCL      5577<<ASSIGN   5590<<ASSIGN   5609>>IF       5610>>ASSIGN
BUF$
      5484**DCL      5504--IMP-PTR  5596<>CALL     5601>>ASSIGN   5602>>ASSIGN   5603>>ASSIGN   5607>>ASSIGN
      5610>>ASSIGN   5611>>ASSIGN
DATA$
      5475**DCL        22--PROC     5606>>ASSIGN
DATASIZE
      5476**DCL        22--PROC     5596<>CALL     5605>>ASSIGN
EOT
      5477**DCL        22--PROC     5602>>ASSIGN
FLINK$
      5483**DCL      5576<<ASSIGN   5579>>DOWHILE  5580>>IF       5586>>IF       5586>>IF       5590>>ASSIGN
      5591<<ASSIGN   5591>>ASSIGN   5607>>ASSIGN
FRAG_HDR
      5504**DCL      5603--ASSIGN
FRAG_HDR.FLAGS.EOT
      5558**DCL      5602<<ASSIGN
FRAG_HDR.LINK$
      5529**DCL      5591>>ASSIGN   5607<<ASSIGN   5610<<ASSIGN
FRAG_HDR.SEQ
      5517**DCL      5518--REDEF    5580>>IF       5586>>IF       5586>>IF       5601<<ASSIGN
KN$TCTX
      4573**DCL        22--PROC     5596<>CALL
KN$TCTX.DST_NSAP.ADDRESS_N
      5458**DCL      5459--REDEF
KN$TCTX.NODE
      4580**DCL      4593--REDEF
PL6.E3A0      #003=KNT$SAVE_FRAG File=KNT$SEND.:E05TSI                           WED 07/30/97 01:12 Page:152  
KN$TCTX.RECV_HEAD$
      4979**DCL      5576>>ASSIGN   5611<<ASSIGN
KN$TCTX.RECV_LWE
      4941**DCL      5586>>IF       5586>>IF
KN$TCTX.RERR.DT_NWINDOW
      4891**DCL      5582<<ASSIGN   5582>>ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      5394**DCL      5395--REDEF
KN$TCTX.TMR_INACTIVITY.ARG
      5214**DCL      5215--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      5244**DCL      5245--REDEF
KN$TCTX.TMR_RETRAN.ARG
      5155**DCL      5156--REDEF
KN$TCTX.TMR_WINDOW.ARG
      5184**DCL      5185--REDEF
KNT$GET_RBUF
      5573**DCL-ENT  5596--CALL
TPDU$
      5480**DCL      5603<<ASSIGN   5606>>ASSIGN
TPDU_NR
      5478**DCL        22--PROC     5580>>IF       5586>>IF       5586>>IF       5601>>ASSIGN
TPDU_SZ
      5481**DCL      5570--IMP-SIZ  5605<<ASSIGN   5606>>ASSIGN   5606>>ASSIGN

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:153  
      991        1        /*M* KNT$SEND_TPDU - Compose and send most of the TPDUs. */
      992        2        /*T***********************************************************/
      993        3        /*T*                                                         */
      994        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      995        5        /*T*                                                         */
      996        6        /*T***********************************************************/
      997        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
      998        8
      999        9        /*P* NAME: KNT$SEND_TPDU
     1000       10
     1001       11        PURPOSE:  To compose and send to the peers most of the TPDUs.
     1002       12
     1003       13        DESCRIPTION:
     1004       14
     1005       15        For SEND_DT and SEND_ED we call KNN$SEND passing the previously
     1006       16        composed TDPU in the transport buffer.
     1007       17
     1008       18        For SEND_DR, SEND_CR, and SEND_CC we get a transport buffer, assemble
     1009       19        the total TPDU in it and call KNN$SEND.
     1010       20
     1011       21        For SEND_AK, SEND_EA, SEND_DC, and SEND_ER we assemble the TDPU in
     1012       22        auto and call KNN$SEND.
     1013       23        */
     1014       24        KNT$SEND_TPDU: PROC(KN$NETPARM)  ALTRET;
     1015       25
     1016       26        %INCLUDE K_ADDRESS_M;
     1017      529        %INCLUDE KN_DATA_M;
     1018     2315        %INCLUDE K_TRANSPORT_E;
     1019     2640        %INCLUDE K_TRANSPORT_M;
     1020     4424        %INCLUDE K_INTERFACE_M;
     1021     4833        %INCLUDE KNH_MACRO_C;
     1022     5116        %INCLUDE GH_SCHD_M;
     1023     5260
     1024     5261                                                /* Input parameters                   */
     1025     5262        %KN$NETPARM;
     1026     5415
     1027     5416                                                /* Auto Storage                       */
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:154  
     1028     5417    1   DCL CTX$ PTR;
     1029     5418    1   DCL FRAG$ PTR;
     1030     5419    1   DCL TPDU$ PTR;
     1031     5420    1   DCL DPTR$ CPTR;
     1032     5421    1   DCL FRAG_SZ SBIN;
     1033     5422    1   DCL THDR_SZ SBIN;
     1034     5423    1   DCL SPDU_SZ SBIN;
     1035     5424    1   DCL ITEMP1 SBIN;
     1036     5425    1   DCL CDT SBIN(32);
     1037     5426    1   DCL ENTRY_SWITCH SBIN;
     1038     5427    1   DCL TPDU_DR_SWITCH UBIN;                /* 0=normal, 1=host*/
     1039     5428    1   DCL TPDU_AK_SWITCH UBIN;                /* 0=normal, 1=with fcc               */
     1040     5429    1   DCL SEND_DIRECTION UBIN;                /* 0=normal, 1=send host*/
     1041     5430    1   DCL CHKOFF SBIN;
     1042     5431    1   DCL SAVE_CHKSUM BIT(1) ALIGNED;
     1043     5432
     1044     5433        /* Reserve space in auto for the largest TPDU.
     1045     5434        */
     1046     5435        %K$TPDU_CR_CC(NAME=K$TPDU,STCLASS=AUTO,LAST=",");
     1047     5504        %K$TPARM_VERSION(NAME=ALLOC_VRS,LVL=2,LAST=",");
     1048     5540        %K$TPARM_TPDUSZ(NAME=ALLOC_TPDUSZ,LVL=2,LAST=",");
     1049     5579        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP,LVL=2,LAST=",");
     1050     5616        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP1,LVL=2,LAST=",");
     1051     5653        %K$TPARM_CHKSUM(NAME=ALLOC_CHK,LVL=2,LAST=",");
     1052     5693        %K$TPARM_OPTION(NAME=ALLOC_OPT,LVL=2,LAST=";");
     1053     5740
     1054     5741        %KN$NETPARM (NAME=KN@NETPARM, STCLASS=AUTO);
     1055     5894
     1056     5895                                                /* External Procedures                */
     1057     5896    1   DCL KNT$GET_SBUF ENTRY(3) ALTRET;
     1058     5897    1   DCL KNT$RELBUF ENTRY(2);
     1059     5898    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1060     5899    1   DCL KNT$UNQ_BUFFER ENTRY;
     1061     5900    1   DCL KNA$CALC_CHKSUM ENTRY(3) ALTRET;
     1062     5901    1   DCL KNN$SEND ENTRY(1) ALTRET;
     1063     5902    1   DCL KNH$SEND ENTRY(1) ALTRET;
     1064     5903    1   DCL GHS$SET_TMR ENTRY(1);
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:155  
     1065     5904    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1066     5905    1   DCL KNT$TR_SEND ENTRY(1);
     1067     5906    1   DCL KNT$TR_FHOST ENTRY(1);
     1068     5907    1   DCL SCREECH ENTRY(1);
     1069     5908
     1070     5909                                                /* BASED Data                         */
     1071     5910        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     1072     6817
     1073     6818        %K$TPDU_GENERIC (NAME=B$TPDU, STCLASS="BASED(TPDU$)", ALGN=CALIGNED);
     1074     6878        %K$TPDU_AK_EXT(NAME=B$TPDU_AK_EXT, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1075     6922        %K$TPDU_AK(NAME=B$TPDU_AK, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1076     6970        %K$TPDU_DC(NAME=B$TPDU_DC, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1077     7009        %K$TPDU_DR(NAME=B$TPDU_DR, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1078     7052        %K$TPDU_CR_CC(NAME=B$TPDU_C, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1079     7121        %K$TPDU_EA_EXT(NAME=B$TPDU_EA_EXT, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1080     7147        %K$TPDU_EA(NAME=B$TPDU_EA, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1081     7173        %K$TPDU_ER(NAME=B$TPDU_ER, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1082     7212
     1083     7213        %K$FRAG_HDR(NAME=FRAG_HDR, STCLASS="BASED(FRAG$)");
     1084     7296
     1085     7297        /* Generate the structures for sizec values */
     1086     7298        %K$TPDU_CR_CC (ALGN=CALIGNED);
     1087     7367        %K$TPDU_DR (ALGN=CALIGNED);
     1088     7410        %K$TPDU_DC (ALGN=CALIGNED);
     1089     7449        %K$TPDU_AK (ALGN=CALIGNED);
     1090     7497        %K$TPDU_AK_EXT (ALGN=CALIGNED);
     1091     7541        %K$TPDU_EA (ALGN=CALIGNED);
     1092     7567        %K$TPDU_EA_EXT (ALGN=CALIGNED);
     1093     7593        %K$TPDU_ER (ALGN=CALIGNED);
     1094     7632        %K$TPARM_CHKSUM (ALGN=CALIGNED);
     1095     7672        %K$TPARM_VERSION (ALGN=CALIGNED);
     1096     7708        %K$TPARM_TPDUSZ (ALGN=CALIGNED);
     1097     7747        %K$TPARM_TSAP_ID (ALGN=CALIGNED);
     1098     7784        %K$TPARM_OPTION (ALGN=CALIGNED);
     1099     7831        %K$TPARM_CLR_INFO (ALGN=CALIGNED);
     1100     7880        %K$TPARM_FCC (ALGN=CALIGNED);
     1101     7927
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:156  
     1102     7928    1   DCL CHR4BSD CHAR(4) BASED CALIGNED;
     1103     7929    1   DCL CHR3BSD CHAR(3) BASED CALIGNED;
     1104     7930    1   DCL CHR2BSD CHAR(2) BASED CALIGNED;
     1105     7931    1   DCL B$CHAR CHAR(ITEMP1) BASED CALIGNED;
     1106     7932    1   DCL B$CHAR_ALGN CHAR(ITEMP1) BASED ALIGNED;
     1107     7933
     1108     7934    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
     1109     7935                                                /* External Data                      */
     1110     7936        %KN$NETPARM (NAME=KN_NETPARM_INIT, STCLASS=SYMREF);
     1111     8089    1   DCL K_CKSUM_INIT CHAR(4) SYMREF;
     1112     8090    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
     1113     8091    1   DCL KNT_WINDOW_TIMER UBIN SYMREF;
     1114     8092    1   DCL KNT_FCCWINDOW_TIMER UBIN SYMREF;
     1115     8093    1   DCL KN_DCT$$ PTR SYMREF;
     1116     8094    1   DCL KNT_SCODE UBIN(32) SYMREF;
     1117     8095
     1118     8096    1   DCL 1 PARM_HDRS CONSTANT,
     1119     8097    1         2 VERS UBIN BYTE CALIGNED INIT(%K_TPARM_VERSION),
     1120     8098    1         2 * UBIN BYTE CALIGNED INIT(1),
     1121     8099    1         2 * UBIN BYTE CALIGNED INIT(1),
     1122     8100    1         2 SIZE UBIN BYTE CALIGNED INIT(%K_TPARM_TPDUSZ),
     1123     8101    1         2 * UBIN BYTE CALIGNED INIT(1),
     1124     8102    1         2 OPTION UBIN BYTE CALIGNED INIT(%K_TPARM_OPTION),
     1125     8103    1         2 * UBIN BYTE CALIGNED INIT(1),
     1126     8104    1         2 * UBIN BYTE CALIGNED INIT(0),
     1127     8105    1         2 CLR_INFO UBIN BYTE CALIGNED INIT(%K_TPARM_CLR_INFO),
     1128     8106    1         2 * UBIN BYTE CALIGNED INIT(1),
     1129     8107    1         2 * UBIN BYTE CALIGNED INIT(0);
     1130     8108
     1131     8109        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:157  
     1132     8110        /*F* NAME: KNT$SEND_DT - Send data TPDU
     1133     8111
     1134     8112        Called from KNT$SEND to forward data sent from session.
     1135     8113        Called from KNT$RECV after an ACK has been received to see if
     1136     8114        buffered tpdus may now be sent on.
     1137     8115
     1138     8116        */
     1139     8117    1   KNT$SEND_DT: ENTRY(KN$NETPARM) ALTRET;
     1140     8118    1      ENTRY_SWITCH = %K_TPDU_TYPE_DT;
     1141     8119    1      CTX$ = KN$NETPARM.TCTX$;
     1142     8120    1      KN$NETPARM.NODE = KN$TCTX.NODE;
     1143     8121
     1144     8122    2      DO WHILE ( KN$TCTX.SEND_NOTSENT$ ~= ADDR(NIL) ) AND
     1145     8123    2        ( KN$TCTX.SEND_EHEAD$ = ADDR(NIL) ) AND
     1146     8124    2        ( KN$TCTX.STATE = %K_TSTATE_OPEN );
     1147     8125
     1148     8126    2           FRAG$ = KN$TCTX.SEND_NOTSENT$;
     1149     8127
     1150     8128    2           IF KN$TCTX.CLASS=4 OR KN$TCTX.OPTION.CLASS_2_FLOW
     1151     8129    3           THEN DO;
     1152     8130    3                IF ( KN$TCTX.SEND_LWE <= KN$TCTX.SEND_UWE )
     1153     8131    4                THEN DO;
     1154     8132    4                     IF ( FRAG_HDR.SEQ >= KN$TCTX.SEND_UWE ) OR
     1155     8133    4                       ( FRAG_HDR.SEQ < KN$TCTX.SEND_LWE )
     1156     8134    5                     THEN DO;
     1157     8135    5   NO_SEND_WINDOW:
     1158     8136    5                          KN$TCTX.SERR.DT_NWINDOW = KN$TCTX.SERR.DT_NWINDOW +1;
     1159     8137    5                          ALTRETURN;
     1160     8138    5                          END;
     1161     8139    4                     END;
     1162     8140
     1163     8141    4                ELSE DO;
     1164     8142    4                     IF ( FRAG_HDR.SEQ >= KN$TCTX.SEND_UWE ) AND
     1165     8143    4                       ( FRAG_HDR.SEQ < KN$TCTX.SEND_LWE )
     1166     8144    4                     THEN GOTO NO_SEND_WINDOW;
     1167     8145    4                     END;
     1168     8146    3                END/*do if class4 flow control*/;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:158  
     1169     8147
     1170     8148    2           TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR));
     1171     8149    2           FRAG_SZ = FRAG_HDR.DATA_BSIZE;
     1172     8150
     1173     8151    2           CALL I$SEND_TO_NET
     1174     8152    3           WHENALTRETURN DO;
     1175     8153    3   NOQ_4BUFFERED:
     1176     8154    3                KN$TCTX.SERR.NOQ = KN$TCTX.SERR.NOQ +1;
     1177     8155    3                KN$NETPARM.ERRCODE = 0;
     1178     8156    3                RETURN;
     1179     8157    3                END;
     1180     8158
     1181     8159    2           IF KN$TCTX.CLASS = 4
     1182     8160    3           THEN DO;
     1183     8161    3                IF KN$TCTX.SEND_NOTSENT$ = KN$TCTX.SEND_HEAD$
     1184     8162    4                THEN DO;
     1185     8163    4                     KN$TCTX.SEND_RETRY_COUNT = 1;
     1186     8164    4                     CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);
     1187     8165    4                     END;
     1188     8166    3                END;
     1189     8167
     1190     8168    2           KN$TCTX.SEND_NOTSENT$ = FRAG_HDR.LINK$;
     1191     8169
     1192     8170    2           IF KN$TCTX.CLASS ~= 4
     1193     8171    3           THEN DO;
     1194     8172    3                KN$TCTX.SEND_HEAD$ = FRAG_HDR.LINK$;
     1195     8173
     1196     8174    3                IF KN$TCTX.SEND_HEAD$ = ADDR(NIL)
     1197     8175    3                THEN KN$TCTX.SEND_TAIL$ = ADDR(NIL);
     1198     8176
     1199     8177    3                CALL KNT$RELBUF(FRAG$->FRAG_HDR,KN$TCTX);
     1200     8178    3                END;
     1201     8179
     1202     8180    2           END/*do while*/;
     1203     8181
     1204     8182    1   UNQ_CHECK: ;
     1205     8183    1      IF (KN$TCTX.CLASS ~= 4) AND (KNT_WAIT_COUNT ~= 0)
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:159  
     1206     8184    1      THEN CALL KNT$UNQ_BUFFER;
     1207     8185
     1208     8186    1      RETURN;
     1209     8187
     1210     8188        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:160  
     1211     8189        /*F* NAME: KNT$SEND_ED - Send expidited data TPDU
     1212     8190
     1213     8191        Called from KNT$SEND and KNT$RECV.
     1214     8192        */
     1215     8193    1   KNT$SEND_ED: ENTRY(KN$NETPARM) ALTRET;
     1216     8194    1      ENTRY_SWITCH = %K_TPDU_TYPE_ED;
     1217     8195    1      CTX$ = KN$NETPARM.TCTX$;
     1218     8196    1      KN$NETPARM.NODE = KN$TCTX.NODE;
     1219     8197
     1220     8198    1      IF ( KN$TCTX.SEND_ENOTSENT$ ~= ADDR(NIL) ) AND
     1221     8199    1        ( KN$TCTX.SEND_ENOTSENT$ = KN$TCTX.SEND_EHEAD$ ) AND
     1222     8200    1        ( KN$TCTX.STATE = %K_TSTATE_OPEN )
     1223     8201    2      THEN DO;
     1224     8202    2           FRAG$ = KN$TCTX.SEND_ENOTSENT$;
     1225     8203    2           TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR));
     1226     8204    2           FRAG_SZ = FRAG_HDR.DATA_BSIZE;
     1227     8205
     1228     8206    2           CALL I$SEND_TO_NET ALTRET(NOQ_4BUFFERED);
     1229     8207
     1230     8208    2           KN$TCTX.SEND_ENOTSENT$ = FRAG_HDR.LINK$;
     1231     8209    2           KN$TCTX.SEND_RETRY_COUNT = 1;
     1232     8210    2           CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);
     1233     8211    2           END;
     1234     8212
     1235     8213    1      RETURN;
     1236     8214
     1237     8215        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:161  
     1238     8216        /*F* NAME: KNT$SEND_DR - Send disconnect request TPDU
     1239     8217
     1240     8218        Called from KNT$SEND, KNT$SEND_4HOST, KNT$RECV and KNT$TTIMER.
     1241     8219
     1242     8220        KNT$SEND_DR_HOST is a special entry point to compose and send
     1243     8221        the TPDU_DR to the host node for an intermediate transport connection.
     1244     8222
     1245     8223        Called from KNT$RECV and KNT$TTIMER.
     1246     8224        */
     1247     8225
     1248     8226    1   KNT$SEND_DR: ENTRY(KN$NETPARM) ALTRET;
     1249     8227    1      TPDU_DR_SWITCH = 0;
     1250     8228    1      GOTO COMMON_DR;
     1251     8229
     1252     8230    1   KNT$SEND_DR_HOST: ENTRY(KN$NETPARM) ALTRET;
     1253     8231    1      TPDU_DR_SWITCH= 1;
     1254     8232
     1255     8233    1   COMMON_DR: ;
     1256     8234    1      ENTRY_SWITCH = %K_TPDU_TYPE_DR;
     1257     8235    1      CTX$ = KN$NETPARM.TCTX$;
     1258     8236    1      KN$NETPARM.NODE = KN$TCTX.NODE;
     1259     8237    1      KN$NETPARM.MSGSZ = 0;
     1260     8238    1      KN$NETPARM.UHDRSZ = 0;
     1261     8239    1      KN$NETPARM.SHDRSZ = 0;
     1262     8240
     1263     8241    1      CALL KNT$RLS_CHAIN(KN$TCTX);
     1264     8242
     1265     8243    1      THDR_SZ = SIZEC(K$TPDU_DR);
     1266     8244
     1267     8245    1      IF KN$TCTX.CLASS=4 OR KN$TCTX.CLASS=2
     1268     8246    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CLR_INFO);
     1269     8247
     1270     8248    2      ELSE DO;
     1271     8249    2           IF KN$TCTX.REASON > %K_REASON_ADDRESS_UNKNOWN
     1272     8250    3           THEN DO;
     1273     8251    3                IF KN$TCTX.ERR = 0
     1274     8252    3                THEN KN$TCTX.ERR = KN$TCTX.REASON;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:162  
     1275     8253    3                KN$TCTX.REASON = %K_REASON_NOTSPEC;
     1276     8254    3                END;
     1277     8255    2           END;
     1278     8256
     1279     8257    1      IF TPDU_DR_SWITCH = 1
     1280     8258    1      THEN GOTO SKIP_CHKSUM;
     1281     8259    1      ELSE GOTO GOT_INIT_THDR_SZ;
     1282     8260
     1283     8261        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:163  
     1284     8262        /*F* NAME: KNT$SEND_CR - Send connect request TPDU
     1285     8263
     1286     8264        Called from KNT$SEND.
     1287     8265        */
     1288     8266    1   KNT$SEND_CR: ENTRY(KN$NETPARM) ALTRET;
     1289     8267    1      CTX$ = KN$NETPARM.TCTX$;
     1290     8268    1      ENTRY_SWITCH = %K_TPDU_TYPE_CR;
     1291     8269
     1292     8270    1      SAVE_CHKSUM = KN$TCTX.OPTION.CHKSUM;
     1293     8271    1      IF KN$TCTX.CLASS = 4
     1294     8272    1      THEN KN$TCTX.OPTION.CHKSUM = '1'B;   /* always required on a tpdu_cr       */
     1295     8273
     1296     8274    1      GOTO GET_INIT_THDR_SZ;
     1297     8275
     1298     8276        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:164  
     1299     8277        /*F* NAME: KNT$SEND_CC - Send connect confirm TPDU
     1300     8278
     1301     8279        Called from KNT$RECV.
     1302     8280        */
     1303     8281    1   KNT$SEND_CC: ENTRY(KN$NETPARM)  ALTRET;
     1304     8282    1      CTX$ = KN$NETPARM.TCTX$;
     1305     8283    1      ENTRY_SWITCH = %K_TPDU_TYPE_CC;
     1306     8284    1      SAVE_CHKSUM = KN$TCTX.OPTION.CHKSUM;
     1307     8285
     1308     8286    1      KN$NETPARM.SHDRSZ = 0;
     1309     8287    1      KN$NETPARM.UHDRSZ = 0;
     1310     8288    1      KN$NETPARM.MSGSZ = 0;
     1311     8289
     1312     8290    1   GET_INIT_THDR_SZ:;
     1313     8291    1      THDR_SZ = SIZEC(K$TPDU_CR_CC)
     1314     8292    1        + SIZEC(K$TPARM_TPDUSZ);
     1315     8293
     1316     8294    1      IF KN$TCTX.DST_TSAP.LEN > 0
     1317     8295    1      THEN THDR_SZ = THDR_SZ +2 + KN$TCTX.DST_TSAP.LEN;
     1318     8296
     1319     8297    1      IF KN$TCTX.SRC_TSAP.LEN > 0
     1320     8298    1      THEN THDR_SZ = THDR_SZ +2 + KN$TCTX.SRC_TSAP.LEN;
     1321     8299
     1322     8300    1      IF KN$TCTX.CLASS ~= 0
     1323     8301    2      THEN DO;
     1324     8302    2           THDR_SZ = THDR_SZ + SIZEC(K$TPARM_OPTION);
     1325     8303
     1326     8304    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1327     8305    2           THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_VERSION);
     1328     8306                                  /*N* + SIZEC(K$TPARM_ALTCLASS) */
     1329     8307    2           END;
     1330     8308
     1331     8309    1   GOT_INIT_THDR_SZ:;
     1332     8310    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B
     1333     8311    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CHKSUM);
     1334     8312
     1335     8313    1   SKIP_CHKSUM:
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:165  
     1336     8314    1      SPDU_SZ = KN$NETPARM.SHDRSZ + KN$NETPARM.UHDRSZ + KN$NETPARM.MSGSZ;
     1337     8315
     1338     8316    1      IF KN$TCTX.OPTION.OSI = '0'B
     1339     8317    1      THEN THDR_SZ =( ( (THDR_SZ +1) /2) * 2);
     1340     8318
     1341     8319    1      FRAG_SZ = THDR_SZ + SPDU_SZ;
     1342     8320
     1343     8321    1      CALL KNT$GET_SBUF(FRAG_SZ,FRAG$,KN$TCTX)
     1344     8322    2      WHENALTRETURN DO;
     1345     8323    2           KN$NETPARM.ERRCODE = %K_ERROR_NOMEM;
     1346     8324    2           ALTRETURN;
     1347     8325    2           END;
     1348     8326
     1349     8327    1      FRAG_HDR.SEQ_SBIN = -1;
     1350     8328
     1351     8329    1      KN$TCTX.SEND_HEAD$ = FRAG$;
     1352     8330    1      KN$TCTX.SEND_TAIL$ = FRAG$;
     1353     8331
     1354     8332    1      TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR));
     1355     8333    1      B$TPDU_C.LI = THDR_SZ - 1;
     1356     8334    1      B$TPDU_C.SRC_REF = KN$TCTX.SRC_REF;
     1357     8335    1      B$TPDU_C.DST_REF = KN$TCTX.DST_REF;
     1358     8336    1      B$TPDU_C.MBZ = 0;
     1359     8337
     1360     8338    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_DR
     1361     8339    2      THEN DO;
     1362     8340    2           FRAG_HDR.SEQ = 0;
     1363     8341    2           B$TPDU_DR.TYPE = %K_TPDU_TYPE_DR;
     1364     8342    2           B$TPDU_DR.REASON = KN$TCTX.REASON;
     1365     8343    2           B$TPDU_DR.MBZ = 0;
     1366     8344
     1367     8345    2           DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_DR) ); /*init options ptr*/
     1368     8346
     1369     8347    2           IF KN$TCTX.CLASS=4 OR KN$TCTX.CLASS=2
     1370     8348    3           THEN DO;
     1371     8349    3                DPTR$->CHR3BSD = ADDR(PARM_HDRS.CLR_INFO)->CHR3BSD;
     1372     8350    3                DPTR$->K$TPARM_VERSION.VERS = KN$TCTX.ERR;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:166  
     1373     8351    3                DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_VERSION) );
     1374     8352    3                END;
     1375     8353
     1376     8354    2           IF              TPDU_DR_SWITCH=1/*if host*/
     1377     8355    3           THEN DO;
     1378     8356    3                IF KN$TCTX.HOST_REF ~= 0
     1379     8357    4                THEN DO;
     1380     8358    4                     B$TPDU_DR.DST_REF = KN$TCTX.HOST_REF;
     1381     8359    4                     KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
     1382     8360    4                     CALL I$SEND_TO_HOST
     1383     8361    5                     WHENALTRETURN DO;
     1384     8362                            /*N* leave the host hanging for now */
     1385     8363    5                          END;
     1386     8364    4                     END;
     1387     8365
     1388     8366    3                RETURN;
     1389     8367    3                END;
     1390     8368
     1391     8369    2           GOTO CHK_CHKSUM;
     1392     8370    2           END;
     1393     8371
     1394     8372    1      B$TPDU_C.TYPE = ENTRY_SWITCH;        /* set either CR or CC                */
     1395     8373
     1396     8374    1      B$TPDU_C.CLASS = KN$TCTX.CLASS;
     1397     8375    1      B$TPDU_C.EXT_FMT_FLAG = KN$TCTX.OPTION.EXTENDED;
     1398     8376
     1399     8377    1      IF KN$TCTX.CLASS = 0
     1400     8378    1      THEN B$TPDU_C.CDT = 0;
     1401     8379    2      ELSE DO;
     1402     8380    2           IF KN$TCTX.RCV_WINDOW_SZ > 15
     1403     8381    2           THEN B$TPDU_C.CDT = 15;
     1404     8382    2           ELSE B$TPDU_C.CDT = KN$TCTX.RCV_WINDOW_SZ;
     1405     8383    2           END;
     1406     8384
     1407     8385        /* Initialize the options pointer.
     1408     8386        */
     1409     8387    1      DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_CR_CC) );
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:167  
     1410     8388
     1411     8389        /* Build the B$TPDU_size parameter.
     1412     8390        */
     1413     8391    1      DPTR$->CHR2BSD = ADDR(PARM_HDRS.SIZE)->CHR2BSD;
     1414     8392    1      DPTR$->K$TPARM_TPDUSZ.SIZE = KN$TCTX.TPDUSZ_PARM;
     1415     8393    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_TPDUSZ));
     1416     8394
     1417     8395        /* Build the TSAP parameter.
     1418     8396           If building connect request, KN$TCTX.DST_TSAP is called_tsap parameter.
     1419     8397           If building connect confirm, KN$TCTX.DST_TSAP is calling_tsap parameter.
     1420     8398
     1421     8399           If building connect request, KN$TCTX.SRC_TSAP is calling_tsap parameter.
     1422     8400           If building connect confirm, KN$TCTX.SRC_TSAP is called_tsap parameter.
     1423     8401        */
     1424     8402    1      ITEMP1 = KN$TCTX.DST_TSAP.LEN;
     1425     8403    1      IF ITEMP1 > 0
     1426     8404    2      THEN DO;
     1427     8405    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1428     8406    2           THEN DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLED_TSAP;
     1429     8407    2           ELSE DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLING_TSAP;
     1430     8408
     1431     8409    2           DPTR$->K$TPARM_TSAP_ID.LEN = KN$TCTX.DST_TSAP.LEN;
     1432     8410    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(KN$TCTX.DST_TSAP.TSAP)->
              8410                    B$CHAR;
     1433     8411    2           DPTR$ = PINCRC(DPTR$,ITEMP1+2);
     1434     8412    2           END;
     1435     8413
     1436     8414    1      ITEMP1 = KN$TCTX.SRC_TSAP.LEN;
     1437     8415    1      IF ITEMP1 > 0
     1438     8416    2      THEN DO;
     1439     8417    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1440     8418    2           THEN DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLING_TSAP;
     1441     8419    2           ELSE DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLED_TSAP;
     1442     8420
     1443     8421    2           DPTR$->K$TPARM_TSAP_ID.LEN = KN$TCTX.SRC_TSAP.LEN;
     1444     8422    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(KN$TCTX.SRC_TSAP.TSAP)->
              8422                    B$CHAR;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:168  
     1445     8423    2           DPTR$ = PINCRC(DPTR$,ITEMP1+2);
     1446     8424    2           END;
     1447     8425
     1448     8426    1      IF KN$TCTX.CLASS = 0
     1449     8427    1      THEN GOTO APPEND_SHDR;
     1450     8428
     1451     8429        /* Build the options parameter.
     1452     8430        */
     1453     8431    1      DPTR$->CHR3BSD = ADDR(PARM_HDRS.OPTION)->CHR3BSD;
     1454     8432
     1455     8433    1      IF SAVE_CHKSUM = '0'B
     1456     8434    1      THEN DPTR$->K$TPARM_OPTION.CHKSUM = '1'B;
     1457     8435    1      IF KN$TCTX.OPTION.EXPEDITED ~= '0'B
     1458     8436    1      THEN DPTR$->K$TPARM_OPTION.EXPD = '1'B;
     1459     8437
     1460     8438    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_OPTION));
     1461     8439
     1462     8440        /* Build the altclass and version parameters if this is a TPDU_CR.
     1463     8441        */
     1464     8442    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1465     8443    2      THEN DO;
     1466     8444        /*N*    Build the altclass parameter   */
     1467     8445    2           DPTR$->CHR3BSD = ADDR(PARM_HDRS.VERS)->CHR3BSD;
     1468     8446    2           DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_VERSION));
     1469     8447    2           END;
     1470     8448
     1471     8449        /* Build the checksum parameter.
     1472     8450        */
     1473     8451    1   CHK_CHKSUM: ;
     1474     8452    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B
     1475     8453    2      THEN DO;
     1476     8454    2           DPTR$->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;
     1477     8455    2           DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_CHKSUM));
     1478     8456    2           CHKOFF = POFFC(DPTR$,TPDU$) - 1;
     1479     8457    2           END;
     1480     8458
     1481     8459        /* Finally, append the user data after the transport header.
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:169  
     1482     8460        */
     1483     8461    1   APPEND_SHDR: ;
     1484     8462    1      IF KN$NETPARM.SHDRSZ > 0
     1485     8463    2      THEN DO;
     1486     8464    2           ITEMP1 = KN$NETPARM.SHDRSZ;
     1487     8465    2           DPTR$->B$CHAR = KN$NETPARM.SHDR$->B$CHAR_ALGN;
     1488     8466    2           DPTR$ = PINCRC(DPTR$, KN$NETPARM.SHDRSZ);
     1489     8467    2           END;
     1490     8468
     1491     8469    1      IF KN$NETPARM.UHDRSZ > 0
     1492     8470    2      THEN DO;
     1493     8471    2           ITEMP1 = KN$NETPARM.UHDRSZ;
     1494     8472    2           DPTR$->B$CHAR = KN$NETPARM.UHDR$->B$CHAR_ALGN;
     1495     8473    2           DPTR$ = PINCRC(DPTR$, KN$NETPARM.UHDRSZ);
     1496     8474    2           END;
     1497     8475
     1498     8476    1      IF KN$NETPARM.MSGSZ > 0
     1499     8477    2      THEN DO;
     1500     8478    2           ITEMP1 = KN$NETPARM.MSGSZ;
     1501     8479    2           DPTR$->B$CHAR = KN$NETPARM.MSG$->B$CHAR;
     1502     8480    2           END;
     1503     8481
     1504     8482    1      IF KN$TCTX.OPTION.CHKSUM
     1505     8483    2      THEN DO;
     1506     8484    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1507     8485    2           THEN KN$TCTX.OPTION.CHKSUM = SAVE_CHKSUM;
     1508     8486    2           GOTO BUILD_CHKSUM;
     1509     8487    2           END;
     1510     8488
     1511     8489    1      ELSE GOTO SEND_TO_NET;
     1512     8490
     1513     8491        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:170  
     1514     8492        /*F* NAME: KNT$SEND_AK - Send acknowledgement TPDU
     1515     8493
     1516     8494        Called from KNT$DSESSION, KNT$RECV and KNT$TTIMER.
     1517     8495        */
     1518     8496
     1519     8497    1   KNT$SEND_AK: ENTRY(KN$NETPARM)  ALTRET;
     1520     8498    1      TPDU_AK_SWITCH = 0;
     1521     8499    1      GOTO COMMON_AK;
     1522     8500
     1523     8501    1   KNT$SEND_AK_FCC: ENTRY(KN$NETPARM) ALTRET;
     1524     8502    1      TPDU_AK_SWITCH= 1;
     1525     8503
     1526     8504    1   COMMON_AK: ;
     1527     8505    1      CTX$ = KN$NETPARM.TCTX$;
     1528     8506    1      ENTRY_SWITCH = %K_TPDU_TYPE_AK;
     1529     8507
     1530     8508    1      IF KN$TCTX.CLASS~=4 AND KN$TCTX.OPTION.CLASS_2_FLOW = '0'B
     1531     8509    2      THEN DO;
     1532     8510    2           CALL SCREECH(KNT_SCODE);
     1533     8511    2           END;
     1534     8512
     1535     8513    1      IF KN$TCTX.LOST_TPDU
     1536     8514    1      THEN CDT = KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ - KN$TCTX.RECV_LWE;
     1537     8515    1      ELSE CDT = KN$TCTX.RECV_LWE - KN$TCTX.RECV_NEXT;
     1538     8516
     1539     8517    1      IF CDT < 0
     1540     8518    1      THEN CDT = CDT + KN$TCTX.MAXSEQ + 1;
     1541     8519
     1542     8520    1      IF NOT KN$TCTX.LOST_TPDU
     1543     8521    2      THEN DO;
     1544     8522    2           IF CDT = 1 AND KN$TCTX.RCV_WINDOW_SZ = 1
     1545     8523    2           THEN CDT = 1;
     1546     8524    2           ELSE CDT = KN$TCTX.RCV_WINDOW_SZ - CDT;
     1547     8525    2           END;
     1548     8526
     1549     8527    1      TPDU$ = ADDR(K$TPDU);
     1550     8528    1      IF KN$TCTX.OPTION.EXTENDED ~= '0'B
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:171  
     1551     8529    2      THEN DO;
     1552     8530    2           B$TPDU_AK_EXT.LI = SIZEC(K$TPDU_AK_EXT) -1;
     1553     8531    2           B$TPDU_AK_EXT.CDT = CDT;
     1554     8532    2           B$TPDU_AK_EXT.YR_TU_NR = KN$TCTX.RECV_LWE;
     1555     8533    2           B$TPDU_AK_EXT.MBZ = 0;
     1556     8534    2           END;
     1557     8535    2      ELSE DO;
     1558     8536    2           B$TPDU_AK.LI = SIZEC(K$TPDU_AK) -1;
     1559     8537    2           B$TPDU_AK.CDT = CDT;
     1560     8538    2           B$TPDU_AK.YR_TU_NR = KN$TCTX.RECV_LWE;
     1561     8539    2           END;
     1562     8540
     1563     8541    1      B$TPDU_AK.TYPE = %K_TPDU_TYPE_AK;
     1564     8542
     1565     8543    1      IF TPDU_AK_SWITCH = 1
     1566     8544    2      THEN DO;
     1567     8545    2           DPTR$ = PINCRC(TPDU$, B$TPDU_AK.LI +1);
     1568     8546    2           DPTR$->K$TPARM_FCC = KN$NETPARM.FPT$->K$TPARM_FCC;
     1569     8547    2           B$TPDU_AK.LI = B$TPDU_AK.LI + SIZEC(K$TPARM_FCC);
     1570     8548    2           END;
     1571     8549
     1572     8550    1   SET_ACK_NODE: ;
     1573     8551    1      KN$NETPARM.NODE = KN$TCTX.NODE;
     1574     8552    1      GOTO FINISH_UP;
     1575     8553
     1576     8554        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:172  
     1577     8555        /*F* NAME: KNT$SEND_EA - Send expedited data acknowledgement TPDU
     1578     8556
     1579     8557        Called from KNT$RECV.
     1580     8558        */
     1581     8559
     1582     8560    1   KNT$SEND_EA: ENTRY(KN$NETPARM) ALTRET;
     1583     8561    1      CTX$ = KN$NETPARM.TCTX$;
     1584     8562    1      ENTRY_SWITCH = %K_TPDU_TYPE_EA;
     1585     8563
     1586     8564    1      TPDU$ = ADDR(K$TPDU);
     1587     8565    1      IF KN$TCTX.OPTION.EXTENDED ~= '0'B
     1588     8566    2      THEN DO;
     1589     8567    2           B$TPDU_EA_EXT.LI = SIZEC(K$TPDU_EA_EXT) -1;
     1590     8568    2           B$TPDU_EA_EXT.YR_TU_NR = KN$TCTX.RECV_EXPD;
     1591     8569    2           B$TPDU_EA_EXT.MBZ = 0;
     1592     8570    2           END;
     1593     8571
     1594     8572    2      ELSE DO;
     1595     8573    2           B$TPDU_EA.LI = SIZEC(K$TPDU_EA) -1;
     1596     8574    2           B$TPDU_EA.YR_EDTU_NR = KN$TCTX.RECV_EXPD;
     1597     8575    2           END;
     1598     8576
     1599     8577    1      B$TPDU_EA.TYPE = %K_TPDU_TYPE_EA;
     1600     8578    1      B$TPDU_EA.MBZ = 0;
     1601     8579
     1602     8580    1      GOTO SET_ACK_NODE;
     1603     8581
     1604     8582        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:173  
     1605     8583        /*F* NAME: KNT$SEND_DC - Send disconnect confirm TPDU
     1606     8584
     1607     8585        Called from KNT$RECV.
     1608     8586        */
     1609     8587    1   KNT$SEND_DC: ENTRY(KN$NETPARM)  ALTRET;
     1610     8588    1      CTX$ = KN$NETPARM.TCTX$;
     1611     8589    1      ENTRY_SWITCH = %K_TPDU_TYPE_DC;
     1612     8590
     1613     8591    1      TPDU$ = ADDR(K$TPDU);
     1614     8592    1      B$TPDU_DC.LI = SIZEC(K$TPDU_DC) -1;
     1615     8593    1      B$TPDU_DC.MBZ = 0;
     1616     8594    1      B$TPDU_DC.SRC_REF = KN$TCTX.SRC_REF;
     1617     8595    1      B$TPDU_DC.TYPE = %K_TPDU_TYPE_DC;
     1618     8596
     1619     8597    1      GOTO FINISH_UP;
     1620     8598
     1621     8599        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:174  
     1622     8600        /*F* NAME: KNT$SEND_ER - Send error TPDU
     1623     8601
     1624     8602        This routeine is currently not used.
     1625     8603        */
     1626     8604    1   KNT$SEND_ER: ENTRY(KN$NETPARM) ALTRET;
     1627     8605    1      CTX$ = KN$NETPARM.TCTX$;
     1628     8606    1      ENTRY_SWITCH = %K_TPDU_TYPE_ER;
     1629     8607
     1630     8608    1      TPDU$ = ADDR(K$TPDU);
     1631     8609    1      B$TPDU_ER.LI = SIZEC(K$TPDU_ER) -1;
     1632     8610    1      B$TPDU_ER.MBZ = 0;
     1633     8611    1      B$TPDU_ER.TYPE = %K_TPDU_TYPE_ER;
     1634     8612    1      B$TPDU_ER.REJECT_CAUSE = 1 /* Unimplemented function */;
     1635     8613
     1636     8614    1      GOTO FINISH_UP;
     1637     8615
     1638     8616        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:175  
     1639     8617    1   FINISH_UP: ;
     1640     8618    1      CHKOFF = B$TPDU.LI + 4;
     1641     8619
     1642     8620    1      IF KN$TCTX.OPTION.OSI = '0'B
     1643     8621    1      THEN B$TPDU.LI =( ( (B$TPDU.LI +2) /2) * 2) -1;
     1644     8622    1      FRAG_SZ = B$TPDU.LI + 1;
     1645     8623
     1646     8624    1   FINISH_UP2:;
     1647     8625    1      B$TPDU.DST_REF = KN$TCTX.DST_REF;
     1648     8626
     1649     8627    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B
     1650     8628    2      THEN DO;
     1651     8629    2           B$TPDU.LI = B$TPDU.LI + SIZEC(K$TPARM_CHKSUM);
     1652     8630    2           FRAG_SZ = B$TPDU.LI + 1;
     1653     8631    2           PINCRC(ADDR(B$TPDU),CHKOFF-3)->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;
     1654     8632    2   BUILD_CHKSUM:;
     1655     8633    2           CALL KNA$CALC_CHKSUM(TPDU$,FRAG_SZ,CHKOFF);
     1656     8634    2           END;
     1657     8635
     1658     8636    1   SEND_TO_NET:;
     1659     8637    1      CALL I$SEND_TO_NET
     1660     8638    2      WHENALTRETURN DO;
     1661     8639    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR
     1662     8640    2             OR ENTRY_SWITCH = %K_TPDU_TYPE_CC
     1663     8641    2             OR ENTRY_SWITCH = %K_TPDU_TYPE_DR
     1664     8642    2           THEN GOTO NOQ_4BUFFERED;
     1665     8643
     1666     8644    3           ELSE DO;
     1667     8645                     /*N* cant send non-buffered tpdu*/
     1668     8646    3                END;
     1669     8647
     1670     8648    2           END/*altret from knn$send*/;
     1671     8649
     1672     8650    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_AK
     1673     8651    2      THEN DO;
     1674     8652    2           IF TPDU_AK_SWITCH = 0
     1675     8653    2           THEN KN$TCTX.TMR_WINDOW.INTERVAL = (KNT_WINDOW_TIMER *15) /2;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:176  
     1676     8654    2           ELSE KN$TCTX.TMR_WINDOW.INTERVAL = (KNT_FCCWINDOW_TIMER *15) /2;
     1677     8655    2           IF KN$TCTX.CLASS = 4
     1678     8656    2           THEN CALL GHS$SET_TMR (KN$TCTX.TMR_WINDOW);
     1679     8657    2           IF NOT KN$TCTX.LOST_TPDU
     1680     8658    3           THEN DO;
     1681     8659    3                KN$TCTX.RECV_UWE = KN$TCTX.RECV_LWE + CDT;
     1682     8660    3                IF KN$TCTX.RECV_UWE > KN$TCTX.MAXSEQ
     1683     8661    3                THEN KN$TCTX.RECV_UWE = KN$TCTX.RECV_UWE - KN$TCTX.MAXSEQ - 1;
     1684     8662    3                END;
     1685     8663    2           END;
     1686     8664
     1687     8665    1      RETURN;
     1688     8666
     1689     8667        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:177  
     1690     8668        /*I* NAME: I$SEND_TO_NET
     1691     8669
     1692     8670             PURPOSE: To provide the common setup and call to network.
     1693     8671        */
     1694     8672
     1695     8673    1   I$SEND_TO_NET: PROC ALTRET;
     1696     8674
     1697     8675    2      SEND_DIRECTION = 0;
     1698     8676    2      GOTO COMMON_SEND;
     1699     8677
     1700     8678    2   I$SEND_TO_HOST: ENTRY ALTRET;
     1701     8679    2      SEND_DIRECTION = 1;
     1702     8680
     1703     8681    2   COMMON_SEND:
     1704     8682    2      KN@NETPARM = KN_NETPARM_INIT;
     1705     8683    2      KN@NETPARM.TCTX$ = CTX$;
     1706     8684    2      KN@NETPARM.TCTX_ID = KN$TCTX.SRC_REF;
     1707     8685    2      KN@NETPARM.THDR$ = TPDU$;
     1708     8686    2      KN@NETPARM.THDRSZ = FRAG_SZ;
     1709     8687    2      KN@NETPARM.NODE = KN$NETPARM.NODE;
     1710     8688
     1711     8689    2      KN@NETPARM.FUNCTION = %KN_FCN_DATA;
     1712     8690
     1713     8691    2      IF SEND_DIRECTION = 1
     1714     8692    2      THEN GOTO SEND_TO_HOST;
     1715     8693
     1716     8694    2      IF KN$TCTX.OPTION.OSI
     1717     8695    3      THEN DO;
     1718     8696    3           KN@NETPARM.FUNCTION = %K_NDATA;
     1719     8697    3           KN@NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);
     1720     8698    3           KN@NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);
     1721     8699    3           END;
     1722     8700
     1723     8701    2      IF KN$TCTX.OPTION.CONS
     1724     8702    3      THEN DO;
     1725     8703    3           KN@NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);
     1726     8704    3           CALL KNH$SEND(KN@NETPARM)
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:178  
     1727     8705    4           WHENALTRETURN DO;
     1728     8706    4                ALTRETURN;
     1729     8707    4                END;
     1730     8708    3           END;
     1731     8709
     1732     8710    3      ELSE DO;
     1733     8711    3   SEND_TO_HOST:
     1734     8712    3           KN@NETPARM.LDCT$ = KN$NETPARM.LDCT$;
     1735     8713    3           CALL KNN$SEND(KN@NETPARM)
     1736     8714    4           WHENALTRETURN DO;
     1737     8715    4                ALTRETURN;
     1738     8716    4                END;
     1739     8717    3           END;
     1740     8718
     1741     8719    2      IF KN$TCTX.OPTION.TRACE
     1742     8720    2      THEN GOTO LOG_IT;
     1743     8721
     1744     8722    2      IF ENTRY_SWITCH~=%K_TPDU_TYPE_DT AND ENTRY_SWITCH~=%K_TPDU_TYPE_AK
     1745     8723    3      THEN DO;
     1746     8724    3   LOG_IT:
     1747     8725    3           IF ENTRY_SWITCH = %K_TPDU_TYPE_DR
     1748     8726    4           THEN DO;
     1749     8727    4                IF TPDU_DR_SWITCH = 0
     1750     8728    4                THEN GOTO LOG_SEND;
     1751     8729    4                ELSE CALL KNT$TR_FHOST(KN@NETPARM);
     1752     8730    4                END;
     1753     8731    4           ELSE DO;
     1754     8732    4   LOG_SEND:
     1755     8733    4                CALL KNT$TR_SEND(KN@NETPARM);
     1756     8734    4                END;
     1757     8735    3           END;
     1758     8736
     1759     8737    2      RETURN;
     1760     8738
     1761     8739    2   END I$SEND_TO_NET;
     1762     8740    1   END KNT$SEND_TPDU;
     1763     8741        %EOD;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:179  

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:180  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SEND_TPDU.

   Procedure KNT$SEND_TPDU requires 1915 words for executable code.
   Procedure KNT$SEND_TPDU requires 112 words of local(AUTO) storage.

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:181  

 Object Unit name= KNT$SEND_TPDU                              File name= KNT$SEND.:E05TOU
 UTS= JUL 30 '97 01:13:09.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      6      6  KNT$SEND_TPDU
    1   Proc  even  none  1915    77B  KNT$SEND_TPDU
    2  RoData even  none     2      2  KNT$SEND_TPDU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KNT$SEND_TPDU
     1      7          yes     yes      Std        1  KNT$SEND_DT
     1     CF          yes     yes      Std        1  KNT$SEND_ED
     1    117          yes     yes      Std        1  KNT$SEND_DR
     1    120          yes     yes      Std        1  KNT$SEND_DR_HOST
     1    16C          yes     yes      Std        1  KNT$SEND_CR
     1    189          yes     yes      Std        1  KNT$SEND_CC
     1    4C2          yes     yes      Std        1  KNT$SEND_AK
     1    4CB          yes     yes      Std        1  KNT$SEND_AK_FCC
     1    5A2          yes     yes      Std        1  KNT$SEND_EA
     1    5DA          yes     yes      Std        1  KNT$SEND_DC
     1    600          yes     yes      Std        1  KNT$SEND_ER
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:182  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KNT$UNQ_BUFFER
         yes           Std       1 SCREECH
         yes           Std       1 KNT$RLS_CHAIN
         yes           Std       1 GHS$SET_TMR
         yes           Std       2 KNT$RELBUF
 yes     yes           Std       3 KNT$GET_SBUF
 yes     yes           Std       3 KNA$CALC_CHKSUM
 yes     yes           Std       1 KNH$SEND
 yes     yes           Std       1 KNN$SEND
         yes           Std       1 KNT$TR_FHOST
         yes           Std       1 KNT$TR_SEND
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KN_NETPARM_INIT                       K_CKSUM_INIT                          KNT_WAIT_COUNT
     KNT_WINDOW_TIMER                      KNT_FCCWINDOW_TIMER                   KN_DCT$$
     KNT_SCODE                        r    G$ROS$
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:183  


      991        1        /*M* KNT$SEND_TPDU - Compose and send most of the TPDUs. */
      992        2        /*T***********************************************************/
      993        3        /*T*                                                         */
      994        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      995        5        /*T*                                                         */
      996        6        /*T***********************************************************/
      997        7        /*X* PLM=3,IND=5,ENU=0,ECU=0     */
      998        8
      999        9        /*P* NAME: KNT$SEND_TPDU
     1000       10
     1001       11        PURPOSE:  To compose and send to the peers most of the TPDUs.
     1002       12
     1003       13        DESCRIPTION:
     1004       14
     1005       15        For SEND_DT and SEND_ED we call KNN$SEND passing the previously
     1006       16        composed TDPU in the transport buffer.
     1007       17
     1008       18        For SEND_DR, SEND_CR, and SEND_CC we get a transport buffer, assemble
     1009       19        the total TPDU in it and call KNN$SEND.
     1010       20
     1011       21        For SEND_AK, SEND_EA, SEND_DC, and SEND_ER we assemble the TDPU in
     1012       22        auto and call KNN$SEND.
     1013       23        */
     1014       24        KNT$SEND_TPDU: PROC(KN$NETPARM)  ALTRET;

     24   1 000000  D380 0000 0000  xent KNT$SEND_TPDU   LNJ,B5   X6A_AUTO_1
          1 000003       0070 0001                       DC       112,1
          1 000005  0F81 0006                            B        s:8118,PREL

     1015       25
     1016       26        %INCLUDE K_ADDRESS_M;
     1017      529        %INCLUDE KN_DATA_M;
     1018     2315        %INCLUDE K_TRANSPORT_E;
     1019     2640        %INCLUDE K_TRANSPORT_M;
     1020     4424        %INCLUDE K_INTERFACE_M;
     1021     4833        %INCLUDE KNH_MACRO_C;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:184  
     1022     5116        %INCLUDE GH_SCHD_M;
     1023     5260
     1024     5261                                                /* Input parameters                   */
     1025     5262        %KN$NETPARM;
     1026     5415
     1027     5416                                                /* Auto Storage                       */
     1028     5417    1   DCL CTX$ PTR;
     1029     5418    1   DCL FRAG$ PTR;
     1030     5419    1   DCL TPDU$ PTR;
     1031     5420    1   DCL DPTR$ CPTR;
     1032     5421    1   DCL FRAG_SZ SBIN;
     1033     5422    1   DCL THDR_SZ SBIN;
     1034     5423    1   DCL SPDU_SZ SBIN;
     1035     5424    1   DCL ITEMP1 SBIN;
     1036     5425    1   DCL CDT SBIN(32);
     1037     5426    1   DCL ENTRY_SWITCH SBIN;
     1038     5427    1   DCL TPDU_DR_SWITCH UBIN;                /* 0=normal, 1=host*/
     1039     5428    1   DCL TPDU_AK_SWITCH UBIN;                /* 0=normal, 1=with fcc               */
     1040     5429    1   DCL SEND_DIRECTION UBIN;                /* 0=normal, 1=send host*/
     1041     5430    1   DCL CHKOFF SBIN;
     1042     5431    1   DCL SAVE_CHKSUM BIT(1) ALIGNED;
     1043     5432
     1044     5433        /* Reserve space in auto for the largest TPDU.
     1045     5434        */
     1046     5435        %K$TPDU_CR_CC(NAME=K$TPDU,STCLASS=AUTO,LAST=",");
     1047     5504        %K$TPARM_VERSION(NAME=ALLOC_VRS,LVL=2,LAST=",");
     1048     5540        %K$TPARM_TPDUSZ(NAME=ALLOC_TPDUSZ,LVL=2,LAST=",");
     1049     5579        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP,LVL=2,LAST=",");
     1050     5616        %K$TPARM_TSAP_ID(NAME=ALLOC_TSAP1,LVL=2,LAST=",");
     1051     5653        %K$TPARM_CHKSUM(NAME=ALLOC_CHK,LVL=2,LAST=",");
     1052     5693        %K$TPARM_OPTION(NAME=ALLOC_OPT,LVL=2,LAST=";");
     1053     5740
     1054     5741        %KN$NETPARM (NAME=KN@NETPARM, STCLASS=AUTO);
     1055     5894
     1056     5895                                                /* External Procedures                */
     1057     5896    1   DCL KNT$GET_SBUF ENTRY(3) ALTRET;
     1058     5897    1   DCL KNT$RELBUF ENTRY(2);
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:185  
     1059     5898    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1060     5899    1   DCL KNT$UNQ_BUFFER ENTRY;
     1061     5900    1   DCL KNA$CALC_CHKSUM ENTRY(3) ALTRET;
     1062     5901    1   DCL KNN$SEND ENTRY(1) ALTRET;
     1063     5902    1   DCL KNH$SEND ENTRY(1) ALTRET;
     1064     5903    1   DCL GHS$SET_TMR ENTRY(1);
     1065     5904    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1066     5905    1   DCL KNT$TR_SEND ENTRY(1);
     1067     5906    1   DCL KNT$TR_FHOST ENTRY(1);
     1068     5907    1   DCL SCREECH ENTRY(1);
     1069     5908
     1070     5909                                                /* BASED Data                         */
     1071     5910        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     1072     6817
     1073     6818        %K$TPDU_GENERIC (NAME=B$TPDU, STCLASS="BASED(TPDU$)", ALGN=CALIGNED);
     1074     6878        %K$TPDU_AK_EXT(NAME=B$TPDU_AK_EXT, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1075     6922        %K$TPDU_AK(NAME=B$TPDU_AK, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1076     6970        %K$TPDU_DC(NAME=B$TPDU_DC, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1077     7009        %K$TPDU_DR(NAME=B$TPDU_DR, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1078     7052        %K$TPDU_CR_CC(NAME=B$TPDU_C, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1079     7121        %K$TPDU_EA_EXT(NAME=B$TPDU_EA_EXT, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1080     7147        %K$TPDU_EA(NAME=B$TPDU_EA, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1081     7173        %K$TPDU_ER(NAME=B$TPDU_ER, STCLASS="BASED(TPDU$)", ALGN=ALIGNED);
     1082     7212
     1083     7213        %K$FRAG_HDR(NAME=FRAG_HDR, STCLASS="BASED(FRAG$)");
     1084     7296
     1085     7297        /* Generate the structures for sizec values */
     1086     7298        %K$TPDU_CR_CC (ALGN=CALIGNED);
     1087     7367        %K$TPDU_DR (ALGN=CALIGNED);
     1088     7410        %K$TPDU_DC (ALGN=CALIGNED);
     1089     7449        %K$TPDU_AK (ALGN=CALIGNED);
     1090     7497        %K$TPDU_AK_EXT (ALGN=CALIGNED);
     1091     7541        %K$TPDU_EA (ALGN=CALIGNED);
     1092     7567        %K$TPDU_EA_EXT (ALGN=CALIGNED);
     1093     7593        %K$TPDU_ER (ALGN=CALIGNED);
     1094     7632        %K$TPARM_CHKSUM (ALGN=CALIGNED);
     1095     7672        %K$TPARM_VERSION (ALGN=CALIGNED);
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:186  
     1096     7708        %K$TPARM_TPDUSZ (ALGN=CALIGNED);
     1097     7747        %K$TPARM_TSAP_ID (ALGN=CALIGNED);
     1098     7784        %K$TPARM_OPTION (ALGN=CALIGNED);
     1099     7831        %K$TPARM_CLR_INFO (ALGN=CALIGNED);
     1100     7880        %K$TPARM_FCC (ALGN=CALIGNED);
     1101     7927
     1102     7928    1   DCL CHR4BSD CHAR(4) BASED CALIGNED;
     1103     7929    1   DCL CHR3BSD CHAR(3) BASED CALIGNED;
     1104     7930    1   DCL CHR2BSD CHAR(2) BASED CALIGNED;
     1105     7931    1   DCL B$CHAR CHAR(ITEMP1) BASED CALIGNED;
     1106     7932    1   DCL B$CHAR_ALGN CHAR(ITEMP1) BASED ALIGNED;
     1107     7933
     1108     7934    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
     1109     7935                                                /* External Data                      */
     1110     7936        %KN$NETPARM (NAME=KN_NETPARM_INIT, STCLASS=SYMREF);
     1111     8089    1   DCL K_CKSUM_INIT CHAR(4) SYMREF;
     1112     8090    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
     1113     8091    1   DCL KNT_WINDOW_TIMER UBIN SYMREF;
     1114     8092    1   DCL KNT_FCCWINDOW_TIMER UBIN SYMREF;
     1115     8093    1   DCL KN_DCT$$ PTR SYMREF;
     1116     8094    1   DCL KNT_SCODE UBIN(32) SYMREF;
     1117     8095
     1118     8096    1   DCL 1 PARM_HDRS CONSTANT,
     1119     8097    1         2 VERS UBIN BYTE CALIGNED INIT(%K_TPARM_VERSION),
     1120     8098    1         2 * UBIN BYTE CALIGNED INIT(1),
     1121     8099    1         2 * UBIN BYTE CALIGNED INIT(1),
     1122     8100    1         2 SIZE UBIN BYTE CALIGNED INIT(%K_TPARM_TPDUSZ),
     1123     8101    1         2 * UBIN BYTE CALIGNED INIT(1),
     1124     8102    1         2 OPTION UBIN BYTE CALIGNED INIT(%K_TPARM_OPTION),
     1125     8103    1         2 * UBIN BYTE CALIGNED INIT(1),
     1126     8104    1         2 * UBIN BYTE CALIGNED INIT(0),
     1127     8105    1         2 CLR_INFO UBIN BYTE CALIGNED INIT(%K_TPARM_CLR_INFO),
     1128     8106    1         2 * UBIN BYTE CALIGNED INIT(1),
     1129     8107    1         2 * UBIN BYTE CALIGNED INIT(0);
     1130     8108
     1131     8109        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:187  
     1132     8110        /*F* NAME: KNT$SEND_DT - Send data TPDU
     1133     8111
     1134     8112        Called from KNT$SEND to forward data sent from session.
     1135     8113        Called from KNT$RECV after an ACK has been received to see if
     1136     8114        buffered tpdus may now be sent on.
     1137     8115
     1138     8116        */
     1139     8117    1   KNT$SEND_DT: ENTRY(KN$NETPARM) ALTRET;

   8117   1 000007  D380 0000 0000  xent KNT$SEND_DT     LNJ,B5   X6A_AUTO_1
          1 00000A       0070 0001                       DC       112,1

     1140     8118    1      ENTRY_SWITCH = %K_TPDU_TYPE_DT;

   8118   1 00000C  6C0F                                 LDV,R6   15
          1 00000D  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1141     8119    1      CTX$ = KN$NETPARM.TCTX$;

   8119   1 00000F  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000011  DCC6 001B                            LDB,B5   27,B6
          1 000013  DFC7 0006                            STB,B5   CTX$,AUTO

     1142     8120    1      KN$NETPARM.NODE = KN$TCTX.NODE;

   8120   1 000015  D805                                 LDR,R5   ,B5
          1 000016  D570 00FF                            AND,R5   255,IMO
          1 000018  DF46 0015                            STR,R5   21,B6

     1143     8121
     1144     8122    2      DO WHILE ( KN$TCTX.SEND_NOTSENT$ ~= ADDR(NIL) ) AND

   8122   1 00001A  0F81 0093                            B        s:8180,PREL

     1145     8123    2        ( KN$TCTX.SEND_EHEAD$ = ADDR(NIL) ) AND
     1146     8124    2        ( KN$TCTX.STATE = %K_TSTATE_OPEN );
     1147     8125
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:188  
     1148     8126    2           FRAG$ = KN$TCTX.SEND_NOTSENT$;

   8126   1 00001C  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00001E  DCC6 003E                            LDB,B5   62,B6
          1 000020  DFC7 0008                            STB,B5   FRAG$,AUTO

     1149     8127
     1150     8128    2           IF KN$TCTX.CLASS=4 OR KN$TCTX.OPTION.CLASS_2_FLOW

   8128   1 000022  E2C6 0005                            LLH,R6   5,B6
          1 000024  6D04                                 CMV,R6   4
          1 000025  0901 0006                            BE       s:8130,PREL
          1 000027  82C6 000C                            LB,'0008'X        12,B6
          1 000029       0008
          1 00002A  0581 0029                            BBF      s:8148,PREL

     1151     8129    3           THEN DO;

     1152     8130    3                IF ( KN$TCTX.SEND_LWE <= KN$TCTX.SEND_UWE )

   8130   1 00002C  8CC6 0032                            LDI      50,B6
          1 00002E  84C6 0034                            SID      52,B6
          1 000030  6981 0003                            BNEZ,R6  s:8130+8,PREL
          1 000032  7901 0003                            BEZ,R7   s:8132,PREL
          1 000034  0601 0014                            BCT      s:8142,PREL

     1153     8131    4                THEN DO;

     1154     8132    4                     IF ( FRAG_HDR.SEQ >= KN$TCTX.SEND_UWE ) OR

   8132   1 000036  8CC5 0002                            LDI      2,B5
          1 000038  84C6 0034                            SID      52,B6
          1 00003A  0601 0007                            BCT      s:8134,PREL
          1 00003C  8CC5 0002                            LDI      2,B5
          1 00003E  84C6 0032                            SID      50,B6
          1 000040  0601 0013                            BCT      s:8148,PREL

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:189  
     1155     8133    4                       ( FRAG_HDR.SEQ < KN$TCTX.SEND_LWE )
     1156     8134    5                     THEN DO;

     1157     8135    5   NO_SEND_WINDOW:
     1158     8136    5                          KN$TCTX.SERR.DT_NWINDOW = KN$TCTX.SERR.DT_NWINDOW +1;

   8136   1 000042  ECC7 0006            NO_SEND_WINDOW  LDB,B6   CTX$,AUTO
          1 000044  8AC6 0012                            INC      18,B6

     1159     8137    5                          ALTRETURN;

   8137   1 000046  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1160     8138    5                          END;
     1161     8139    4                     END;
     1162     8140
     1163     8141    4                ELSE DO;

     1164     8142    4                     IF ( FRAG_HDR.SEQ >= KN$TCTX.SEND_UWE ) AND

   8142   1 000049  8CC5 0002                            LDI      2,B5
          1 00004B  84C6 0034                            SID      52,B6
          1 00004D  0681 0006                            BCF      s:8148,PREL
          1 00004F  8CC5 0002                            LDI      2,B5
          1 000051  84C6 0032                            SID      50,B6
          1 000053  06EF                                 BCF      s:8134,SPREL

     1165     8143    4                       ( FRAG_HDR.SEQ < KN$TCTX.SEND_LWE )
     1166     8144    4                     THEN GOTO NO_SEND_WINDOW;
     1167     8145    4                     END;

     1168     8146    3                END/*do if class4 flow control*/;

     1169     8147
     1170     8148    2           TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR));

   8148   1 000054  CBC5 0008                            LAB,B4   8,B5
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:190  
          1 000056  CFC7 000A                            STB,B4   TPDU$,AUTO

     1171     8149    2           FRAG_SZ = FRAG_HDR.DATA_BSIZE;

   8149   1 000058  E845 0001                            LDR,R6   1,B5
          1 00005A  EF47 000E                            STR,R6   FRAG_SZ,AUTO

     1172     8150
     1173     8151    2           CALL I$SEND_TO_NET

   8151   1 00005C  E3C0 066F                            LNJ,B6   s:0,PREL
          1 00005E       0003                            DC       s:8152,PREL
          1 00005F  0F81 000C                            B        s:8159,PREL

     1174     8152    3           WHENALTRETURN DO;

     1175     8153    3   NOQ_4BUFFERED:
     1176     8154    3                KN$TCTX.SERR.NOQ = KN$TCTX.SERR.NOQ +1;

   8154   1 000061  ECC7 0006            NOQ_4BUFFERED   LDB,B6   CTX$,AUTO
          1 000063  8AC6 0013                            INC      19,B6

     1177     8155    3                KN$NETPARM.ERRCODE = 0;

   8155   1 000065  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 000067  8745 0016                            CL       22,B5

     1178     8156    3                RETURN;

   8156   1 000069  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1179     8157    3                END;
     1180     8158
     1181     8159    2           IF KN$TCTX.CLASS = 4

   8159   1 00006C  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00006E  E2C6 0005                            LLH,R6   5,B6
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:191  
          1 000070  6D04                                 CMV,R6   4
          1 000071  0981 0016                            BNE      s:8168,PREL

     1182     8160    3           THEN DO;

     1183     8161    3                IF KN$TCTX.SEND_NOTSENT$ = KN$TCTX.SEND_HEAD$

   8161   1 000073  DCC6 003E                            LDB,B5   62,B6
          1 000075  DDC6 003A                            CMB,B5   58,B6
          1 000077  0981 0010                            BNE      s:8168,PREL

     1184     8162    4                THEN DO;

     1185     8163    4                     KN$TCTX.SEND_RETRY_COUNT = 1;

   8163   1 000079  5C01                                 LDV,R5   1
          1 00007A  D7C6 004D                            STH,R5   77,B6

     1186     8164    4                     CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);

   8164   1 00007C  CBC6 0050                            LAB,B4   80,B6
          1 00007E  CFC7 006A                            STB,B4   KN@NETPARM+36,AUTO
          1 000080  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 000082  CBF0 0100                            LAB,B4   256,IMO
          1 000084  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          1 000087       0001                            DC       s:8168,PREL

     1187     8165    4                     END;

     1188     8166    3                END;

     1189     8167
     1190     8168    2           KN$TCTX.SEND_NOTSENT$ = FRAG_HDR.LINK$;

   8168   1 000088  ECC7 0008                            LDB,B6   FRAG$,AUTO
          1 00008A  DCC6 0004                            LDB,B5   4,B6
          1 00008C  CCC7 0006                            LDB,B4   CTX$,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:192  
          1 00008E  DFC4 003E                            STB,B5   62,B4

     1191     8169
     1192     8170    2           IF KN$TCTX.CLASS ~= 4

   8170   1 000090  E2C4 0005                            LLH,R6   5,B4
          1 000092  6D04                                 CMV,R6   4
          1 000093  0901 001A                            BE       s:8180,PREL

     1193     8171    3           THEN DO;

     1194     8172    3                KN$TCTX.SEND_HEAD$ = FRAG_HDR.LINK$;

   8172   1 000095  BCC6 0004                            LDB,B3   4,B6
          1 000097  BFC4 003A                            STB,B3   58,B4

     1195     8173
     1196     8174    3                IF KN$TCTX.SEND_HEAD$ = ADDR(NIL)

   8174   1 000099  8DC4 003A                            CMN      58,B4
          1 00009B  0981 0006                            BNE      s:8177,PREL

     1197     8175    3                THEN KN$TCTX.SEND_TAIL$ = ADDR(NIL);

   8175   1 00009D  AB80 0000 0000                       LAB,B2   0
          1 0000A0  AFC4 003C                            STB,B2   60,B4

     1198     8176
     1199     8177    3                CALL KNT$RELBUF(FRAG$->FRAG_HDR,KN$TCTX);

   8177   1 0000A2  CFC7 006C                            STB,B4   KN@NETPARM+38,AUTO
          1 0000A4  EFC7 006A                            STB,B6   KN@NETPARM+36,AUTO
          1 0000A6  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 0000A8  CBF0 0200                            LAB,B4   512,IMO
          1 0000AA  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          1 0000AD       0001                            DC       s:8180,PREL

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:193  
     1200     8178    3                END;

     1201     8179
     1202     8180    2           END/*do while*/;

   8180   1 0000AE  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000B0  8DC6 003E                            CMN      62,B6
          1 0000B2  0901 0009                            BE       s:8182,PREL
          1 0000B4  8DC6 0040                            CMN      64,B6
          1 0000B6  0981 0005                            BNE      s:8182,PREL
          1 0000B8  E286                                 LLH,R6   ,B6
          1 0000B9  6D05                                 CMV,R6   5
          1 0000BA  0901 FF61                            BE       s:8126,PREL

     1203     8181
     1204     8182    1   UNQ_CHECK: ;

   8182   1                              UNQ_CHECK       null
     1205     8183    1      IF (KN$TCTX.CLASS ~= 4) AND (KNT_WAIT_COUNT ~= 0)

   8183   1 0000BC  E2C6 0005            UNQ_CHECK       LLH,R6   5,B6
          1 0000BE  6D04                                 CMV,R6   4
          1 0000BF  0901 000C                            BE       s:8186,PREL
          1 0000C1  D800 0000 0000  xsym                 LDR,R5   KNT_WAIT_COUNT
          1 0000C4  5901 0007                            BEZ,R5   s:8186,PREL

     1206     8184    1      THEN CALL KNT$UNQ_BUFFER;

   8184   1 0000C6  CBF0 0000                            LAB,B4   0,IMO
          1 0000C8  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_BUFFER
          1 0000CB       0001                            DC       s:8186,PREL

     1207     8185
     1208     8186    1      RETURN;

   8186   1 0000CC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:194  
     1209     8187
     1210     8188        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:195  
     1211     8189        /*F* NAME: KNT$SEND_ED - Send expidited data TPDU
     1212     8190
     1213     8191        Called from KNT$SEND and KNT$RECV.
     1214     8192        */
     1215     8193    1   KNT$SEND_ED: ENTRY(KN$NETPARM) ALTRET;

   8193   1 0000CF  D380 0000 0000  xent KNT$SEND_ED     LNJ,B5   X6A_AUTO_1
          1 0000D2       0070 0001                       DC       112,1

     1216     8194    1      ENTRY_SWITCH = %K_TPDU_TYPE_ED;

   8194   1 0000D4  6C01                                 LDV,R6   1
          1 0000D5  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1217     8195    1      CTX$ = KN$NETPARM.TCTX$;

   8195   1 0000D7  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 0000D9  DCC6 001B                            LDB,B5   27,B6
          1 0000DB  DFC7 0006                            STB,B5   CTX$,AUTO

     1218     8196    1      KN$NETPARM.NODE = KN$TCTX.NODE;

   8196   1 0000DD  D805                                 LDR,R5   ,B5
          1 0000DE  D570 00FF                            AND,R5   255,IMO
          1 0000E0  DF46 0015                            STR,R5   21,B6

     1219     8197
     1220     8198    1      IF ( KN$TCTX.SEND_ENOTSENT$ ~= ADDR(NIL) ) AND

   8198   1 0000E2  8DC5 0044                            CMN      68,B5
          1 0000E4  0901 002F                            BE       s:8213,PREL
          1 0000E6  CCC5 0044                            LDB,B4   68,B5
          1 0000E8  CDC5 0040                            CMB,B4   64,B5
          1 0000EA  0981 0029                            BNE      s:8213,PREL
          1 0000EC  C285                                 LLH,R4   ,B5
          1 0000ED  4D05                                 CMV,R4   5
          1 0000EE  0981 0025                            BNE      s:8213,PREL
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:196  

     1221     8199    1        ( KN$TCTX.SEND_ENOTSENT$ = KN$TCTX.SEND_EHEAD$ ) AND
     1222     8200    1        ( KN$TCTX.STATE = %K_TSTATE_OPEN )
     1223     8201    2      THEN DO;

     1224     8202    2           FRAG$ = KN$TCTX.SEND_ENOTSENT$;

   8202   1 0000F0  CFC7 0008                            STB,B4   FRAG$,AUTO

     1225     8203    2           TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR));

   8203   1 0000F2  BBC4 0008                            LAB,B3   8,B4
          1 0000F4  BFC7 000A                            STB,B3   TPDU$,AUTO

     1226     8204    2           FRAG_SZ = FRAG_HDR.DATA_BSIZE;

   8204   1 0000F6  C844 0001                            LDR,R4   1,B4
          1 0000F8  CF47 000E                            STR,R4   FRAG_SZ,AUTO

     1227     8205
     1228     8206    2           CALL I$SEND_TO_NET ALTRET(NOQ_4BUFFERED);

   8206   1 0000FA  E3C0 05D1                            LNJ,B6   s:0,PREL
          1 0000FC       FF65                            DC       s:8152,PREL

     1229     8207
     1230     8208    2           KN$TCTX.SEND_ENOTSENT$ = FRAG_HDR.LINK$;

   8208   1 0000FD  ECC7 0008                            LDB,B6   FRAG$,AUTO
          1 0000FF  DCC6 0004                            LDB,B5   4,B6
          1 000101  CCC7 0006                            LDB,B4   CTX$,AUTO
          1 000103  DFC4 0044                            STB,B5   68,B4

     1231     8209    2           KN$TCTX.SEND_RETRY_COUNT = 1;

   8209   1 000105  6C01                                 LDV,R6   1
          1 000106  E7C4 004D                            STH,R6   77,B4
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:197  

     1232     8210    2           CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);

   8210   1 000108  BBC4 0050                            LAB,B3   80,B4
          1 00010A  BFC7 006A                            STB,B3   KN@NETPARM+36,AUTO
          1 00010C  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 00010E  CBF0 0100                            LAB,B4   256,IMO
          1 000110  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          1 000113       0001                            DC       s:8213,PREL

     1233     8211    2           END;

     1234     8212
     1235     8213    1      RETURN;

   8213   1 000114  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1236     8214
     1237     8215        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:198  
     1238     8216        /*F* NAME: KNT$SEND_DR - Send disconnect request TPDU
     1239     8217
     1240     8218        Called from KNT$SEND, KNT$SEND_4HOST, KNT$RECV and KNT$TTIMER.
     1241     8219
     1242     8220        KNT$SEND_DR_HOST is a special entry point to compose and send
     1243     8221        the TPDU_DR to the host node for an intermediate transport connection.
     1244     8222
     1245     8223        Called from KNT$RECV and KNT$TTIMER.
     1246     8224        */
     1247     8225
     1248     8226    1   KNT$SEND_DR: ENTRY(KN$NETPARM) ALTRET;

   8226   1 000117  D380 0000 0000  xent KNT$SEND_DR     LNJ,B5   X6A_AUTO_1
          1 00011A       0070 0001                       DC       112,1

     1249     8227    1      TPDU_DR_SWITCH = 0;

   8227   1 00011C  8747 0015                            CL       TPDU_DR_SWITCH,AUTO

     1250     8228    1      GOTO COMMON_DR;

   8228   1 00011E  0F81 0009                            B        s:8231,PREL

     1251     8229
     1252     8230    1   KNT$SEND_DR_HOST: ENTRY(KN$NETPARM) ALTRET;

   8230   1 000120  D380 0000 0000  xent KNT$SEND_DR_HOSTLNJ,B5   X6A_AUTO_1
          1 000123       0070 0001                       DC       112,1

     1253     8231    1      TPDU_DR_SWITCH= 1;

   8231   1 000125  6C01                                 LDV,R6   1
          1 000126  EF47 0015                            STR,R6   TPDU_DR_SWITCH,AUTO

   8231   1                              COMMON_DR       null
     1254     8232
     1255     8233    1   COMMON_DR: ;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:199  
     1256     8234    1      ENTRY_SWITCH = %K_TPDU_TYPE_DR;

   8234   1 000128  6C08                 COMMON_DR       LDV,R6   8
          1 000129  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1257     8235    1      CTX$ = KN$NETPARM.TCTX$;

   8235   1 00012B  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 00012D  DCC6 001B                            LDB,B5   27,B6
          1 00012F  DFC7 0006                            STB,B5   CTX$,AUTO

     1258     8236    1      KN$NETPARM.NODE = KN$TCTX.NODE;

   8236   1 000131  D805                                 LDR,R5   ,B5
          1 000132  D570 00FF                            AND,R5   255,IMO
          1 000134  DF46 0015                            STR,R5   21,B6

     1259     8237    1      KN$NETPARM.MSGSZ = 0;

   8237   1 000136  8746 0004                            CL       4,B6

     1260     8238    1      KN$NETPARM.UHDRSZ = 0;

   8238   1 000138  8746 0007                            CL       7,B6

     1261     8239    1      KN$NETPARM.SHDRSZ = 0;

   8239   1 00013A  8746 000A                            CL       10,B6

     1262     8240
     1263     8241    1      CALL KNT$RLS_CHAIN(KN$TCTX);

   8241   1 00013C  BBC7 0006                            LAB,B3   CTX$,AUTO
          1 00013E  CBF0 0100                            LAB,B4   256,IMO
          1 000140  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          1 000143       0001                            DC       s:8243,PREL

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:200  
     1264     8242
     1265     8243    1      THDR_SZ = SIZEC(K$TPDU_DR);

   8243   1 000144  6C07                                 LDV,R6   7
          1 000145  EF47 000F                            STR,R6   THDR_SZ,AUTO

     1266     8244
     1267     8245    1      IF KN$TCTX.CLASS=4 OR KN$TCTX.CLASS=2

   8245   1 000147  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000149  D2C6 0005                            LLH,R5   5,B6
          1 00014B  5D04                                 CMV,R5   4
          1 00014C  0901 0004                            BE       s:8246,PREL
          1 00014E  5D02                                 CMV,R5   2
          1 00014F  0981 0006                            BNE      s:8249,PREL

     1268     8246    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CLR_INFO);

   8246   1 000151  6E03                                 ADV,R6   3
          1 000152  EF47 000F                            STR,R6   THDR_SZ,AUTO
          1 000154  0F81 0010                            B        s:8257,PREL

     1269     8247
     1270     8248    2      ELSE DO;

     1271     8249    2           IF KN$TCTX.REASON > %K_REASON_ADDRESS_UNKNOWN

   8249   1 000156  C2C6 000E                            LLH,R4   14,B6
          1 000158  4D03                                 CMV,R4   3
          1 000159  0381 000B                            BLE      s:8257,PREL

     1272     8250    3           THEN DO;

     1273     8251    3                IF KN$TCTX.ERR = 0

   8251   1 00015B  82C6 000E                            LB,'00FF'X        14,B6
   8251   1 00015D       00FF
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:201  
          1 00015E  0501 0004                            BBT      s:8253,PREL

     1274     8252    3                THEN KN$TCTX.ERR = KN$TCTX.REASON;

   8252   1 000160  CAC6 000E                            SRM,R4,'00FF'X    14,B6
   8252   1 000162       00FF

     1275     8253    3                KN$TCTX.REASON = %K_REASON_NOTSPEC;

   8253   1 000163  87C6 000E                            CLH      14,B6

     1276     8254    3                END;

     1277     8255    2           END;

     1278     8256
     1279     8257    1      IF TPDU_DR_SWITCH = 1

   8257   1 000165  C847 0015                            LDR,R4   TPDU_DR_SWITCH,AUTO
          1 000167  4D01                                 CMV,R4   1
          1 000168  0901 0065                            BE       s:8314,PREL

     1280     8258    1      THEN GOTO SKIP_CHKSUM;
     1281     8259    1      ELSE GOTO GOT_INIT_THDR_SZ;

   8259   1 00016A  0F81 0057                            B        s:8307,PREL

     1282     8260
     1283     8261        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:202  
     1284     8262        /*F* NAME: KNT$SEND_CR - Send connect request TPDU
     1285     8263
     1286     8264        Called from KNT$SEND.
     1287     8265        */
     1288     8266    1   KNT$SEND_CR: ENTRY(KN$NETPARM) ALTRET;

   8266   1 00016C  D380 0000 0000  xent KNT$SEND_CR     LNJ,B5   X6A_AUTO_1
          1 00016F       0070 0001                       DC       112,1

     1289     8267    1      CTX$ = KN$NETPARM.TCTX$;

   8267   1 000171  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000173  DCC6 001B                            LDB,B5   27,B6
          1 000175  DFC7 0006                            STB,B5   CTX$,AUTO

     1290     8268    1      ENTRY_SWITCH = %K_TPDU_TYPE_CR;

   8268   1 000177  6C0E                                 LDV,R6   14
          1 000178  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1291     8269
     1292     8270    1      SAVE_CHKSUM = KN$TCTX.OPTION.CHKSUM;

   8270   1 00017A  D845 000C                            LDR,R5   12,B5
          1 00017C  500F                                 SOL,R5   15
          1 00017D  DF47 0019                            STR,R5   SAVE_CHKSUM,AUTO

     1293     8271    1      IF KN$TCTX.CLASS = 4

   8271   1 00017F  C2C5 0005                            LLH,R4   5,B5
          1 000181  4D04                                 CMV,R4   4
          1 000182  0981 0004                            BNE      s:8274,PREL

     1294     8272    1      THEN KN$TCTX.OPTION.CHKSUM = '1'B;   /* always required on a tpdu_cr       */

   8272   1 000184  8945 000C                            LBT,'0001'X       12,B5
   8272   1 000186       0001
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:203  

     1295     8273
     1296     8274    1      GOTO GET_INIT_THDR_SZ;

   8274   1 000187  0F81 001A                            B        s:8288,PREL

     1297     8275
     1298     8276        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:204  
     1299     8277        /*F* NAME: KNT$SEND_CC - Send connect confirm TPDU
     1300     8278
     1301     8279        Called from KNT$RECV.
     1302     8280        */
     1303     8281    1   KNT$SEND_CC: ENTRY(KN$NETPARM)  ALTRET;

   8281   1 000189  D380 0000 0000  xent KNT$SEND_CC     LNJ,B5   X6A_AUTO_1
          1 00018C       0070 0001                       DC       112,1

     1304     8282    1      CTX$ = KN$NETPARM.TCTX$;

   8282   1 00018E  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000190  DCC6 001B                            LDB,B5   27,B6
          1 000192  DFC7 0006                            STB,B5   CTX$,AUTO

     1305     8283    1      ENTRY_SWITCH = %K_TPDU_TYPE_CC;

   8283   1 000194  6C0D                                 LDV,R6   13
          1 000195  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1306     8284    1      SAVE_CHKSUM = KN$TCTX.OPTION.CHKSUM;

   8284   1 000197  D845 000C                            LDR,R5   12,B5
          1 000199  500F                                 SOL,R5   15
          1 00019A  DF47 0019                            STR,R5   SAVE_CHKSUM,AUTO

     1307     8285
     1308     8286    1      KN$NETPARM.SHDRSZ = 0;

   8286   1 00019C  8746 000A                            CL       10,B6

     1309     8287    1      KN$NETPARM.UHDRSZ = 0;

   8287   1 00019E  8746 0007                            CL       7,B6

     1310     8288    1      KN$NETPARM.MSGSZ = 0;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:205  
   8288   1 0001A0  8746 0004                            CL       4,B6

   8288   1                              GET_INIT_THDR_SZnull
     1311     8289
     1312     8290    1   GET_INIT_THDR_SZ:;
     1313     8291    1      THDR_SZ = SIZEC(K$TPDU_CR_CC)

   8291   1 0001A2  5C0A                 GET_INIT_THDR_SZLDV,R5   10
          1 0001A3  DF47 000F                            STR,R5   THDR_SZ,AUTO

     1314     8292    1        + SIZEC(K$TPARM_TPDUSZ);
     1315     8293
     1316     8294    1      IF KN$TCTX.DST_TSAP.LEN > 0

   8294   1 0001A5  C845 0089                            LDR,R4   137,B5
          1 0001A7  4901 0005                            BEZ,R4   s:8297,PREL

     1317     8295    1      THEN THDR_SZ = THDR_SZ +2 + KN$TCTX.DST_TSAP.LEN;

   8295   1 0001A9  DA54                                 ADD,R5   R4
          1 0001AA  5E02                                 ADV,R5   2
          1 0001AB  DF47 000F                            STR,R5   THDR_SZ,AUTO

     1318     8296
     1319     8297    1      IF KN$TCTX.SRC_TSAP.LEN > 0

   8297   1 0001AD  B845 0078                            LDR,R3   120,B5
          1 0001AF  3901 0005                            BEZ,R3   s:8300,PREL

     1320     8298    1      THEN THDR_SZ = THDR_SZ +2 + KN$TCTX.SRC_TSAP.LEN;

   8298   1 0001B1  DA53                                 ADD,R5   R3
          1 0001B2  5E02                                 ADV,R5   2
          1 0001B3  DF47 000F                            STR,R5   THDR_SZ,AUTO

     1321     8299
     1322     8300    1      IF KN$TCTX.CLASS ~= 0
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:206  

   8300   1 0001B5  A2C5 0005                            LLH,R2   5,B5
          1 0001B7  2901 000A                            BEZ,R2   s:8307,PREL

     1323     8301    2      THEN DO;

     1324     8302    2           THDR_SZ = THDR_SZ + SIZEC(K$TPARM_OPTION);

   8302   1 0001B9  5E03                                 ADV,R5   3
          1 0001BA  DF47 000F                            STR,R5   THDR_SZ,AUTO

     1325     8303
     1326     8304    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   8304   1 0001BC  6D0E                                 CMV,R6   14
          1 0001BD  0981 0004                            BNE      s:8307,PREL

     1327     8305    2           THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_VERSION);

   8305   1 0001BF  5E03                                 ADV,R5   3
          1 0001C0  DF47 000F                            STR,R5   THDR_SZ,AUTO

     1328     8306                                  /*N* + SIZEC(K$TPARM_ALTCLASS) */
     1329     8307    2           END;

   8300   1                              GOT_INIT_THDR_SZnull
     1330     8308
     1331     8309    1   GOT_INIT_THDR_SZ:;
     1332     8310    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B

   8310   1 0001C2  ECC7 0006            GOT_INIT_THDR_SZLDB,B6   CTX$,AUTO
          1 0001C4  82C6 000C                            LB,'0001'X        12,B6
          1 0001C6       0001
          1 0001C7  0581 0006                            BBF      s:8314,PREL

     1333     8311    1      THEN THDR_SZ = THDR_SZ + SIZEC(K$TPARM_CHKSUM);

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:207  
   8311   1 0001C9  E847 000F                            LDR,R6   THDR_SZ,AUTO
          1 0001CB  6E04                                 ADV,R6   4
          1 0001CC  EF47 000F                            STR,R6   THDR_SZ,AUTO

     1334     8312
     1335     8313    1   SKIP_CHKSUM:
     1336     8314    1      SPDU_SZ = KN$NETPARM.SHDRSZ + KN$NETPARM.UHDRSZ + KN$NETPARM.MSGSZ;

   8314   1 0001CE  DCC7 0004            SKIP_CHKSUM     LDB,B5   @KN$NETPARM,AUTO
          1 0001D0  E845 000A                            LDR,R6   10,B5
          1 0001D2  EA45 0007                            ADD,R6   7,B5
          1 0001D4  EA45 0004                            ADD,R6   4,B5
          1 0001D6  EF47 0010                            STR,R6   SPDU_SZ,AUTO

     1337     8315
     1338     8316    1      IF KN$TCTX.OPTION.OSI = '0'B

   8316   1 0001D8  82C6 000C                            LB,'0010'X        12,B6
   8316   1 0001DA       0010
          1 0001DB  0501 0009                            BBT      s:8319,PREL

     1339     8317    1      THEN THDR_SZ =( ( (THDR_SZ +1) /2) * 2);

   8317   1 0001DD  D847 000F                            LDR,R5   THDR_SZ,AUTO
          1 0001DF  5E01                                 ADV,R5   1
          1 0001E0  D370 0002                            DIV,R5   2,IMO
          1 0001E2  5001                                 SOL,R5   1
          1 0001E3  DF47 000F                            STR,R5   THDR_SZ,AUTO

     1340     8318
     1341     8319    1      FRAG_SZ = THDR_SZ + SPDU_SZ;

   8319   1 0001E5  EA47 000F                            ADD,R6   THDR_SZ,AUTO
          1 0001E7  EF47 000E                            STR,R6   FRAG_SZ,AUTO

     1342     8320
     1343     8321    1      CALL KNT$GET_SBUF(FRAG_SZ,FRAG$,KN$TCTX)
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:208  

   8321   1 0001E9  EFC7 006E                            STB,B6   KN@NETPARM+40,AUTO
          1 0001EB  CBC7 0008                            LAB,B4   FRAG$,AUTO
          1 0001ED  CFC7 006C                            STB,B4   KN@NETPARM+38,AUTO
          1 0001EF  BBC7 000E                            LAB,B3   FRAG_SZ,AUTO
          1 0001F1  BFC7 006A                            STB,B3   KN@NETPARM+36,AUTO
          1 0001F3  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 0001F5  CBF0 0300                            LAB,B4   768,IMO
          1 0001F7  E380 0000 0000  xent                 LNJ,B6   KNT$GET_SBUF
          1 0001FA       0003                            DC       s:8323,PREL
          1 0001FB  0F81 000A                            B        s:8327,PREL

     1344     8322    2      WHENALTRETURN DO;

     1345     8323    2           KN$NETPARM.ERRCODE = %K_ERROR_NOMEM;

   8323   1 0001FD  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 0001FF  E870 00F4                            LDR,R6   244,IMO
          1 000201  EF46 0016                            STR,R6   22,B6

     1346     8324    2           ALTRETURN;

   8324   1 000203  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1347     8325    2           END;
     1348     8326
     1349     8327    1      FRAG_HDR.SEQ_SBIN = -1;

   8327   1 000206  8CF0 FFFF FFFF                       LDI      -1,IMO
          1 000209  ECC7 0008                            LDB,B6   FRAG$,AUTO
          1 00020B  8D46 0002                            SDI      2,B6

     1350     8328
     1351     8329    1      KN$TCTX.SEND_HEAD$ = FRAG$;

   8329   1 00020D  ECC7 0008                            LDB,B6   FRAG$,AUTO
          1 00020F  DCC7 0006                            LDB,B5   CTX$,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:209  
          1 000211  EFC5 003A                            STB,B6   58,B5

     1352     8330    1      KN$TCTX.SEND_TAIL$ = FRAG$;

   8330   1 000213  EFC5 003C                            STB,B6   60,B5

     1353     8331
     1354     8332    1      TPDU$ = PINCRW(FRAG$,SIZEW(FRAG_HDR));

   8332   1 000215  CBC6 0008                            LAB,B4   8,B6
          1 000217  CFC7 000A                            STB,B4   TPDU$,AUTO

     1355     8333    1      B$TPDU_C.LI = THDR_SZ - 1;

   8333   1 000219  D847 000F                            LDR,R5   THDR_SZ,AUTO
          1 00021B  5EFF                                 ADV,R5   -1
          1 00021C  D784                                 STH,R5   ,B4

     1356     8334    1      B$TPDU_C.SRC_REF = KN$TCTX.SRC_REF;

   8334   1 00021D  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 00021F  C845 0002                            LDR,R4   2,B5
          1 000221  CF46 0002                            STR,R4   2,B6

     1357     8335    1      B$TPDU_C.DST_REF = KN$TCTX.DST_REF;

   8335   1 000223  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 000225  C845 0001                            LDR,R4   1,B5
          1 000227  CF46 0001                            STR,R4   1,B6

     1358     8336    1      B$TPDU_C.MBZ = 0;

   8336   1 000229  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 00022B  8846 0003                            LBF,'0C00'X       3,B6
          1 00022D       0C00

     1359     8337
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:210  
     1360     8338    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_DR

   8338   1 00022E  C847 0014                            LDR,R4   ENTRY_SWITCH,AUTO
          1 000230  4D08                                 CMV,R4   8
          1 000231  0981 0074                            BNE      s:8372,PREL

     1361     8339    2      THEN DO;

     1362     8340    2           FRAG_HDR.SEQ = 0;

   8340   1 000233  ECC7 0008                            LDB,B6   FRAG$,AUTO
          1 000235  8746 0002                            CL       2,B6
          1 000237  ECC7 0008                            LDB,B6   FRAG$,AUTO
          1 000239  8746 0003                            CL       3,B6

     1363     8341    2           B$TPDU_DR.TYPE = %K_TPDU_TYPE_DR;

   8341   1 00023B  B870 0080                            LDR,R3   128,IMO
          1 00023D  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 00023F  BA86                                 SRM,R3,'00F0'X    ,B6
          1 000240       00F0

     1364     8342    2           B$TPDU_DR.REASON = KN$TCTX.REASON;

   8342   1 000241  A2C5 000E                            LLH,R2   14,B5
          1 000243  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 000245  A7C6 0003                            STH,R2   3,B6

     1365     8343    2           B$TPDU_DR.MBZ = 0;

   8343   1 000247  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 000249  8806                                 LBF,'000F'X       ,B6
          1 00024A       000F

     1366     8344
     1367     8345    2           DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_DR) ); /*init options ptr*/

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:211  
   8345   1 00024B  8CC7 000A                            LDI      TPDU$,AUTO
          1 00024D  7031                                 DCL,R7   1
          1 00024E  8470 0000 0007                       AID      7,IMO
          1 000251  7071                                 DCR,R7   1
          1 000252  8D47 000C                            SDI      DPTR$,AUTO

     1368     8346
     1369     8347    2           IF KN$TCTX.CLASS=4 OR KN$TCTX.CLASS=2

   8347   1 000254  A2C5 0005                            LLH,R2   5,B5
          1 000256  2D04                                 CMV,R2   4
          1 000257  0901 0004                            BE       s:8349,PREL
          1 000259  2D02                                 CMV,R2   2
          1 00025A  0981 002C                            BNE      s:8354,PREL

     1370     8348    3           THEN DO;

     1371     8349    3                DPTR$->CHR3BSD = ADDR(PARM_HDRS.CLR_INFO)->CHR3BSD;

   8349   1 00025C  9856                                 LDR,R1   R6
          1 00025D  E570 7FFF                            AND,R6   32767,IMO
          1 00025F  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000261  ECC7 006A                            LDB,B6   KN@NETPARM+36,AUTO
          1 000263  104F                                 SOR,R1   15
          1 000264  AB80 0000 0000  00                   LAB,B2   PARM_HDRS
          1 000267  2C08                                 LDV,R2   8
          1 000268  6C03                                 LDV,R6   3
          1 000269  BB86                                 LAB,B3   ,B6
          1 00026A  B851                                 LDR,R3   R1
          1 00026B  0008                                 MMM

     1372     8350    3                DPTR$->K$TPARM_VERSION.VERS = KN$TCTX.ERR;

   8350   1 00026C  8CC7 000C                            LDI      DPTR$,AUTO
          1 00026E  B856                                 LDR,R3   R6
          1 00026F  E570 7FFF                            AND,R6   32767,IMO
          1 000271  8D47 006A                            SDI      KN@NETPARM+36,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:212  
          1 000273  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 000275  304F                                 SOR,R3   15
          1 000276  CCC7 0006                            LDB,B4   CTX$,AUTO
          1 000278  D844 000E                            LDR,R5   14,B4
          1 00027A  D570 00FF                            AND,R5   255,IMO
          1 00027C  3E02                                 ADV,R3   2
          1 00027D  D7B5                                 STH,R5   ,B5,R3

     1373     8351    3                DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_VERSION) );

   8351   1 00027E  8CC7 000C                            LDI      DPTR$,AUTO
          1 000280  7031                                 DCL,R7   1
          1 000281  8470 0000 0003                       AID      3,IMO
          1 000284  7071                                 DCR,R7   1
          1 000285  8D47 000C                            SDI      DPTR$,AUTO

     1374     8352    3                END;

     1375     8353
     1376     8354    2           IF              TPDU_DR_SWITCH=1/*if host*/

   8354   1 000287  D847 0015                            LDR,R5   TPDU_DR_SWITCH,AUTO
          1 000289  5D01                                 CMV,R5   1
          1 00028A  0981 0019                            BNE      s:8369,PREL

     1377     8355    3           THEN DO;

     1378     8356    3                IF KN$TCTX.HOST_REF ~= 0

   8356   1 00028C  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00028E  C846 0003                            LDR,R4   3,B6
          1 000290  4901 0010                            BEZ,R4   s:8366,PREL

     1379     8357    4                THEN DO;

     1380     8358    4                     B$TPDU_DR.DST_REF = KN$TCTX.HOST_REF;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:213  
   8358   1 000292  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 000294  CF45 0001                            STR,R4   1,B5

     1381     8359    4                     KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

   8359   1 000296  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 000298  C2C6 0004                            LLH,R4   4,B6
          1 00029A  CF45 0015                            STR,R4   21,B5

     1382     8360    4                     CALL I$SEND_TO_HOST

   8360   1 00029C  E3C0 0435                            LNJ,B6   s:0,PREL
          1 00029E       0003                            DC       s:8366,PREL
          1 00029F  0F81 0001                            B        s:8366,PREL

     1383     8361    5                     WHENALTRETURN DO;

     1384     8362                            /*N* leave the host hanging for now */
     1385     8363    5                          END;

     1386     8364    4                     END;

     1387     8365
     1388     8366    3                RETURN;

   8366   1 0002A1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1389     8367    3                END;
     1390     8368
     1391     8369    2           GOTO CHK_CHKSUM;

   8369   1 0002A4  0F81 016F                            B        s:8447,PREL

     1392     8370    2           END;
     1393     8371
     1394     8372    1      B$TPDU_C.TYPE = ENTRY_SWITCH;        /* set either CR or CC                */

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:214  
   8372   1 0002A6  4004                                 SOL,R4   4
          1 0002A7  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 0002A9  CA86                                 SRM,R4,'00F0'X    ,B6
          1 0002AA       00F0

     1395     8373
     1396     8374    1      B$TPDU_C.CLASS = KN$TCTX.CLASS;

   8374   1 0002AB  C2C5 0005                            LLH,R4   5,B5
          1 0002AD  400C                                 SOL,R4   12
          1 0002AE  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 0002B0  CAC6 0003                            SRM,R4,'F000'X    3,B6
          1 0002B2       F000

     1397     8375    1      B$TPDU_C.EXT_FMT_FLAG = KN$TCTX.OPTION.EXTENDED;

   8375   1 0002B3  C845 000C                            LDR,R4   12,B5
          1 0002B5  4007                                 SOL,R4   7
          1 0002B6  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 0002B8  CAC6 0003                            SRM,R4,'0200'X    3,B6
          1 0002BA       0200

     1398     8376
     1399     8377    1      IF KN$TCTX.CLASS = 0

   8377   1 0002BB  C2C5 0005                            LLH,R4   5,B5
          1 0002BD  4981 0007                            BNEZ,R4  s:8380,PREL

     1400     8378    1      THEN B$TPDU_C.CDT = 0;

   8378   1 0002BF  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 0002C1  8806                                 LBF,'000F'X       ,B6
          1 0002C2       000F
          1 0002C3  0F81 0014                            B        s:8387,PREL

     1401     8379    2      ELSE DO;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:215  
     1402     8380    2           IF KN$TCTX.RCV_WINDOW_SZ > 15

   8380   1 0002C5  B845 0005                            LDR,R3   5,B5
          1 0002C7  B570 00FF                            AND,R3   255,IMO
          1 0002C9  3D0F                                 CMV,R3   15
          1 0002CA  0381 0007                            BLE      s:8382,PREL

     1403     8381    2           THEN B$TPDU_C.CDT = 15;

   8381   1 0002CC  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 0002CE  8906                                 LBT,'000F'X       ,B6
          1 0002CF       000F
          1 0002D0  0F81 0007                            B        s:8387,PREL

     1404     8382    2           ELSE B$TPDU_C.CDT = KN$TCTX.RCV_WINDOW_SZ;

   8382   1 0002D2  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 0002D4  A845 0005                            LDR,R2   5,B5
          1 0002D6  AA86                                 SRM,R2,'000F'X    ,B6
          1 0002D7       000F

     1405     8383    2           END;

     1406     8384
     1407     8385        /* Initialize the options pointer.
     1408     8386        */
     1409     8387    1      DPTR$ = PINCRC(TPDU$, SIZEC(K$TPDU_CR_CC) );

   8387   1 0002D8  8CC7 000A                            LDI      TPDU$,AUTO
          1 0002DA  7031                                 DCL,R7   1
          1 0002DB  8470 0000 0007                       AID      7,IMO
          1 0002DE  7071                                 DCR,R7   1
          1 0002DF  8D47 000C                            SDI      DPTR$,AUTO

     1410     8388
     1411     8389        /* Build the B$TPDU_size parameter.
     1412     8390        */
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:216  
     1413     8391    1      DPTR$->CHR2BSD = ADDR(PARM_HDRS.SIZE)->CHR2BSD;

   8391   1 0002E1  B856                                 LDR,R3   R6
          1 0002E2  E570 7FFF                            AND,R6   32767,IMO
          1 0002E4  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 0002E6  ECC7 006A                            LDB,B6   KN@NETPARM+36,AUTO
          1 0002E8  304F                                 SOR,R3   15
          1 0002E9  AB80 0000 0000  00                   LAB,B2   PARM_HDRS
          1 0002EC  2C03                                 LDV,R2   3
          1 0002ED  6C02                                 LDV,R6   2
          1 0002EE  BB86                                 LAB,B3   ,B6
          1 0002EF  0008                                 MMM

     1414     8392    1      DPTR$->K$TPARM_TPDUSZ.SIZE = KN$TCTX.TPDUSZ_PARM;

   8392   1 0002F0  8CC7 000C                            LDI      DPTR$,AUTO
          1 0002F2  B856                                 LDR,R3   R6
          1 0002F3  E570 7FFF                            AND,R6   32767,IMO
          1 0002F5  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 0002F7  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 0002F9  304F                                 SOR,R3   15
          1 0002FA  CCC7 0006                            LDB,B4   CTX$,AUTO
          1 0002FC  D844 0008                            LDR,R5   8,B4
          1 0002FE  D570 00FF                            AND,R5   255,IMO
          1 000300  3E02                                 ADV,R3   2
          1 000301  D7B5                                 STH,R5   ,B5,R3

     1415     8393    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_TPDUSZ));

   8393   1 000302  8CC7 000C                            LDI      DPTR$,AUTO
          1 000304  7031                                 DCL,R7   1
          1 000305  8470 0000 0003                       AID      3,IMO
          1 000308  7071                                 DCR,R7   1
          1 000309  8D47 000C                            SDI      DPTR$,AUTO

     1416     8394
     1417     8395        /* Build the TSAP parameter.
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:217  
     1418     8396           If building connect request, KN$TCTX.DST_TSAP is called_tsap parameter.
     1419     8397           If building connect confirm, KN$TCTX.DST_TSAP is calling_tsap parameter.
     1420     8398
     1421     8399           If building connect request, KN$TCTX.SRC_TSAP is calling_tsap parameter.
     1422     8400           If building connect confirm, KN$TCTX.SRC_TSAP is called_tsap parameter.
     1423     8401        */
     1424     8402    1      ITEMP1 = KN$TCTX.DST_TSAP.LEN;

   8402   1 00030B  D844 0089                            LDR,R5   137,B4
          1 00030D  DF47 0011                            STR,R5   ITEMP1,AUTO

     1425     8403    1      IF ITEMP1 > 0

   8403   1 00030F  5A81 004D                            BLEZ,R5  s:8414,PREL

     1426     8404    2      THEN DO;

     1427     8405    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   8405   1 000311  C847 0014                            LDR,R4   ENTRY_SWITCH,AUTO
          1 000313  4D0E                                 CMV,R4   14
          1 000314  0981 000E                            BNE      s:8407,PREL

     1428     8406    2           THEN DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLED_TSAP;

   8406   1 000316  B856                                 LDR,R3   R6
          1 000317  E570 7FFF                            AND,R6   32767,IMO
          1 000319  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 00031B  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 00031D  304F                                 SOR,R3   15
          1 00031E  A870 00C2                            LDR,R2   194,IMO
          1 000320  A7B5                                 STH,R2   ,B5,R3
          1 000321  0F81 000C                            B        s:8409,PREL

     1429     8407    2           ELSE DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLING_TSAP;

   8407   1 000323  B856                                 LDR,R3   R6
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:218  
          1 000324  E570 7FFF                            AND,R6   32767,IMO
          1 000326  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000328  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 00032A  304F                                 SOR,R3   15
          1 00032B  A870 00C1                            LDR,R2   193,IMO
          1 00032D  A7B5                                 STH,R2   ,B5,R3

     1430     8408
     1431     8409    2           DPTR$->K$TPARM_TSAP_ID.LEN = KN$TCTX.DST_TSAP.LEN;

   8409   1 00032E  8CC7 000C                            LDI      DPTR$,AUTO
          1 000330  B856                                 LDR,R3   R6
          1 000331  E570 7FFF                            AND,R6   32767,IMO
          1 000333  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000335  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 000337  304F                                 SOR,R3   15
          1 000338  A844 0089                            LDR,R2   137,B4
          1 00033A  3E01                                 ADV,R3   1
          1 00033B  A7B5                                 STH,R2   ,B5,R3

     1432     8410    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(KN$TCTX.DST_TSAP.TSAP)->
              8410                    B$CHAR;

   8410   1 00033C  8CC7 000C                            LDI      DPTR$,AUTO
          1 00033E  B856                                 LDR,R3   R6
          1 00033F  E570 7FFF                            AND,R6   32767,IMO
          1 000341  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000343  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 000345  304F                                 SOR,R3   15
          1 000346  ABC4 008A                            LAB,B2   138,B4
          1 000348  2C00                                 LDV,R2   0
          1 000349  E855                                 LDR,R6   R5
          1 00034A  BB85                                 LAB,B3   ,B5
          1 00034B  3E02                                 ADV,R3   2
          1 00034C  0008                                 MMM

     1433     8411    2           DPTR$ = PINCRC(DPTR$,ITEMP1+2);
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:219  

   8411   1 00034D  8CC7 000C                            LDI      DPTR$,AUTO
          1 00034F  7031                                 DCL,R7   1
          1 000350  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000352  E847 0011                            LDR,R6   ITEMP1,AUTO
          1 000354  70F0                                 DAR,R7   16
          1 000355  8447 006A                            AID      KN@NETPARM+36,AUTO
          1 000357  7071                                 DCR,R7   1
          1 000358  8470 0000 0001                       AID      1,IMO
          1 00035B  8D47 000C                            SDI      DPTR$,AUTO

     1434     8412    2           END;

     1435     8413
     1436     8414    1      ITEMP1 = KN$TCTX.SRC_TSAP.LEN;

   8414   1 00035D  DCC7 0006                            LDB,B5   CTX$,AUTO
          1 00035F  D845 0078                            LDR,R5   120,B5
          1 000361  DF47 0011                            STR,R5   ITEMP1,AUTO

     1437     8415    1      IF ITEMP1 > 0

   8415   1 000363  5A81 004D                            BLEZ,R5  s:8426,PREL

     1438     8416    2      THEN DO;

     1439     8417    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   8417   1 000365  C847 0014                            LDR,R4   ENTRY_SWITCH,AUTO
          1 000367  4D0E                                 CMV,R4   14
          1 000368  0981 000E                            BNE      s:8419,PREL

     1440     8418    2           THEN DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLING_TSAP;

   8418   1 00036A  B856                                 LDR,R3   R6
          1 00036B  E570 7FFF                            AND,R6   32767,IMO
          1 00036D  8D47 006A                            SDI      KN@NETPARM+36,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:220  
          1 00036F  CCC7 006A                            LDB,B4   KN@NETPARM+36,AUTO
          1 000371  304F                                 SOR,R3   15
          1 000372  A870 00C1                            LDR,R2   193,IMO
          1 000374  A7B4                                 STH,R2   ,B4,R3
          1 000375  0F81 000C                            B        s:8421,PREL

     1441     8419    2           ELSE DPTR$->K$TPARM_TSAP_ID.CODE = %K_TPARM_CALLED_TSAP;

   8419   1 000377  B856                                 LDR,R3   R6
          1 000378  E570 7FFF                            AND,R6   32767,IMO
          1 00037A  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 00037C  CCC7 006A                            LDB,B4   KN@NETPARM+36,AUTO
          1 00037E  304F                                 SOR,R3   15
          1 00037F  A870 00C2                            LDR,R2   194,IMO
          1 000381  A7B4                                 STH,R2   ,B4,R3

     1442     8420
     1443     8421    2           DPTR$->K$TPARM_TSAP_ID.LEN = KN$TCTX.SRC_TSAP.LEN;

   8421   1 000382  8CC7 000C                            LDI      DPTR$,AUTO
          1 000384  B856                                 LDR,R3   R6
          1 000385  E570 7FFF                            AND,R6   32767,IMO
          1 000387  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000389  CCC7 006A                            LDB,B4   KN@NETPARM+36,AUTO
          1 00038B  304F                                 SOR,R3   15
          1 00038C  A845 0078                            LDR,R2   120,B5
          1 00038E  3E01                                 ADV,R3   1
          1 00038F  A7B4                                 STH,R2   ,B4,R3

     1444     8422    2           ADDR(DPTR$->K$TPARM_TSAP_ID.ID)->B$CHAR = ADDR(KN$TCTX.SRC_TSAP.TSAP)->
              8422                    B$CHAR;

   8422   1 000390  8CC7 000C                            LDI      DPTR$,AUTO
          1 000392  B856                                 LDR,R3   R6
          1 000393  E570 7FFF                            AND,R6   32767,IMO
          1 000395  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000397  CCC7 006A                            LDB,B4   KN@NETPARM+36,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:221  
          1 000399  304F                                 SOR,R3   15
          1 00039A  ABC5 0079                            LAB,B2   121,B5
          1 00039C  2C00                                 LDV,R2   0
          1 00039D  E855                                 LDR,R6   R5
          1 00039E  BB84                                 LAB,B3   ,B4
          1 00039F  3E02                                 ADV,R3   2
          1 0003A0  0008                                 MMM

     1445     8423    2           DPTR$ = PINCRC(DPTR$,ITEMP1+2);

   8423   1 0003A1  8CC7 000C                            LDI      DPTR$,AUTO
          1 0003A3  7031                                 DCL,R7   1
          1 0003A4  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 0003A6  E847 0011                            LDR,R6   ITEMP1,AUTO
          1 0003A8  70F0                                 DAR,R7   16
          1 0003A9  8447 006A                            AID      KN@NETPARM+36,AUTO
          1 0003AB  7071                                 DCR,R7   1
          1 0003AC  8470 0000 0001                       AID      1,IMO
          1 0003AF  8D47 000C                            SDI      DPTR$,AUTO

     1446     8424    2           END;

     1447     8425
     1448     8426    1      IF KN$TCTX.CLASS = 0

   8426   1 0003B1  DCC7 0006                            LDB,B5   CTX$,AUTO
          1 0003B3  D2C5 0005                            LLH,R5   5,B5
          1 0003B5  5901 008B                            BEZ,R5   s:8457,PREL

     1449     8427    1      THEN GOTO APPEND_SHDR;
     1450     8428
     1451     8429        /* Build the options parameter.
     1452     8430        */
     1453     8431    1      DPTR$->CHR3BSD = ADDR(PARM_HDRS.OPTION)->CHR3BSD;

   8431   1 0003B7  B856                                 LDR,R3   R6
          1 0003B8  E570 7FFF                            AND,R6   32767,IMO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:222  
          1 0003BA  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 0003BC  CCC7 006A                            LDB,B4   KN@NETPARM+36,AUTO
          1 0003BE  304F                                 SOR,R3   15
          1 0003BF  AB80 0000 0000  00                   LAB,B2   PARM_HDRS
          1 0003C2  2C05                                 LDV,R2   5
          1 0003C3  6C03                                 LDV,R6   3
          1 0003C4  BB84                                 LAB,B3   ,B4
          1 0003C5  0008                                 MMM

     1454     8432
     1455     8433    1      IF SAVE_CHKSUM = '0'B

   8433   1 0003C6  89C7 0019                            CMZ      SAVE_CHKSUM,AUTO
          1 0003C8  0801 000E                            BAL      s:8435,PREL

     1456     8434    1      THEN DPTR$->K$TPARM_OPTION.CHKSUM = '1'B;

   8434   1 0003CA  8CC7 000C                            LDI      DPTR$,AUTO
          1 0003CC  B856                                 LDR,R3   R6
          1 0003CD  E570 7FFF                            AND,R6   32767,IMO
          1 0003CF  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 0003D1  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 0003D3  304F                                 SOR,R3   15
          1 0003D4  3003                                 SOL,R3   3
          1 0003D5  3E16                                 ADV,R3   22
          1 0003D6  8935                                 LBT      ,B5,R3

     1457     8435    1      IF KN$TCTX.OPTION.EXPEDITED ~= '0'B

   8435   1 0003D7  DCC7 0006                            LDB,B5   CTX$,AUTO
          1 0003D9  82C5 000C                            LB,'0002'X        12,B5
          1 0003DB       0002
          1 0003DC  0581 000E                            BBF      s:8438,PREL

     1458     8436    1      THEN DPTR$->K$TPARM_OPTION.EXPD = '1'B;

   8436   1 0003DE  8CC7 000C                            LDI      DPTR$,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:223  
          1 0003E0  B856                                 LDR,R3   R6
          1 0003E1  E570 7FFF                            AND,R6   32767,IMO
          1 0003E3  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 0003E5  ACC7 006A                            LDB,B2   KN@NETPARM+36,AUTO
          1 0003E7  304F                                 SOR,R3   15
          1 0003E8  3003                                 SOL,R3   3
          1 0003E9  3E17                                 ADV,R3   23
          1 0003EA  8932                                 LBT      ,B2,R3

     1459     8437
     1460     8438    1      DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_OPTION));

   8438   1 0003EB  8CC7 000C                            LDI      DPTR$,AUTO
          1 0003ED  7031                                 DCL,R7   1
          1 0003EE  8470 0000 0003                       AID      3,IMO
          1 0003F1  7071                                 DCR,R7   1
          1 0003F2  8D47 000C                            SDI      DPTR$,AUTO

     1461     8439
     1462     8440        /* Build the altclass and version parameters if this is a TPDU_CR.
     1463     8441        */
     1464     8442    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   8442   1 0003F4  D847 0014                            LDR,R5   ENTRY_SWITCH,AUTO
          1 0003F6  5D0E                                 CMV,R5   14
          1 0003F7  0981 001C                            BNE      s:8447,PREL

     1465     8443    2      THEN DO;

     1466     8444        /*N*    Build the altclass parameter   */
     1467     8445    2           DPTR$->CHR3BSD = ADDR(PARM_HDRS.VERS)->CHR3BSD;

   8445   1 0003F9  B856                                 LDR,R3   R6
          1 0003FA  E570 7FFF                            AND,R6   32767,IMO
          1 0003FC  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 0003FE  ACC7 006A                            LDB,B2   KN@NETPARM+36,AUTO
          1 000400  304F                                 SOR,R3   15
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:224  
          1 000401  AFC7 006C                            STB,B2   KN@NETPARM+38,AUTO
          1 000403  AB80 0000 0000  00                   LAB,B2   PARM_HDRS
          1 000406  2C00                                 LDV,R2   0
          1 000407  6C03                                 LDV,R6   3
          1 000408  BCC7 006C                            LDB,B3   KN@NETPARM+38,AUTO
          1 00040A  0008                                 MMM

     1468     8446    2           DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_VERSION));

   8446   1 00040B  8CC7 000C                            LDI      DPTR$,AUTO
          1 00040D  7031                                 DCL,R7   1
          1 00040E  8470 0000 0003                       AID      3,IMO
          1 000411  7071                                 DCR,R7   1
          1 000412  8D47 000C                            SDI      DPTR$,AUTO

     1469     8447    2           END;

   8442   1                              CHK_CHKSUM      null
     1470     8448
     1471     8449        /* Build the checksum parameter.
     1472     8450        */
     1473     8451    1   CHK_CHKSUM: ;
     1474     8452    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B

   8452   1 000414  ECC7 0006            CHK_CHKSUM      LDB,B6   CTX$,AUTO
          1 000416  82C6 000C                            LB,'0001'X        12,B6
          1 000418       0001
          1 000419  0581 0027                            BBF      s:8457,PREL

     1475     8453    2      THEN DO;

     1476     8454    2           DPTR$->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;

   8454   1 00041B  B856                                 LDR,R3   R6
          1 00041C  E570 7FFF                            AND,R6   32767,IMO
          1 00041E  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000420  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:225  
          1 000422  304F                                 SOR,R3   15
          1 000423  AB80 0000 0000  xsym                 LAB,B2   K_CKSUM_INIT
          1 000426  2C00                                 LDV,R2   0
          1 000427  6C04                                 LDV,R6   4
          1 000428  BB85                                 LAB,B3   ,B5
          1 000429  0008                                 MMM

     1477     8455    2           DPTR$ = PINCRC(DPTR$, SIZEC(K$TPARM_CHKSUM));

   8455   1 00042A  8CC7 000C                            LDI      DPTR$,AUTO
          1 00042C  8470 0000 0002                       AID      2,IMO
          1 00042F  8D47 000C                            SDI      DPTR$,AUTO

     1478     8456    2           CHKOFF = POFFC(DPTR$,TPDU$) - 1;

   8456   1 000431  8CC7 000A                            LDI      TPDU$,AUTO
          1 000433  7031                                 DCL,R7   1
          1 000434  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000436  8CC7 000C                            LDI      DPTR$,AUTO
          1 000438  7031                                 DCL,R7   1
          1 000439  84C7 006A                            SID      KN@NETPARM+36,AUTO
          1 00043B  8470 FFFF FFFF                       AID      -1,IMO
          1 00043E  E857                                 LDR,R6   R7
          1 00043F  EF47 0018                            STR,R6   CHKOFF,AUTO

     1479     8457    2           END;

   8452   1                              APPEND_SHDR     null
     1480     8458
     1481     8459        /* Finally, append the user data after the transport header.
     1482     8460        */
     1483     8461    1   APPEND_SHDR: ;
     1484     8462    1      IF KN$NETPARM.SHDRSZ > 0

   8462   1 000441  ECC7 0004            APPEND_SHDR     LDB,B6   @KN$NETPARM,AUTO
          1 000443  E846 000A                            LDR,R6   10,B6
          1 000445  6901 0023                            BEZ,R6   s:8469,PREL
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:226  

     1485     8463    2      THEN DO;

     1486     8464    2           ITEMP1 = KN$NETPARM.SHDRSZ;

   8464   1 000447  EF47 0011                            STR,R6   ITEMP1,AUTO

     1487     8465    2           DPTR$->B$CHAR = KN$NETPARM.SHDR$->B$CHAR_ALGN;

   8465   1 000449  8CC7 000C                            LDI      DPTR$,AUTO
          1 00044B  B856                                 LDR,R3   R6
          1 00044C  E570 7FFF                            AND,R6   32767,IMO
          1 00044E  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000450  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 000452  304F                                 SOR,R3   15
          1 000453  CCC6 0008                            LDB,B4   8,B6
          1 000455  AB84                                 LAB,B2   ,B4
          1 000456  2C00                                 LDV,R2   0
          1 000457  E847 0011                            LDR,R6   ITEMP1,AUTO
          1 000459  BB85                                 LAB,B3   ,B5
          1 00045A  0008                                 MMM

     1488     8466    2           DPTR$ = PINCRC(DPTR$, KN$NETPARM.SHDRSZ);

   8466   1 00045B  B846 000A                            LDR,R3   10,B6
          1 00045D  8CC7 000C                            LDI      DPTR$,AUTO
          1 00045F  7031                                 DCL,R7   1
          1 000460  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000462  F853                                 LDR,R7   R3
          1 000463  6C00                                 LDV,R6   0
          1 000464  8447 006A                            AID      KN@NETPARM+36,AUTO
          1 000466  7071                                 DCR,R7   1
          1 000467  8D47 000C                            SDI      DPTR$,AUTO

     1489     8467    2           END;

     1490     8468
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:227  
     1491     8469    1      IF KN$NETPARM.UHDRSZ > 0

   8469   1 000469  E846 0007                            LDR,R6   7,B6
          1 00046B  6901 0023                            BEZ,R6   s:8476,PREL

     1492     8470    2      THEN DO;

     1493     8471    2           ITEMP1 = KN$NETPARM.UHDRSZ;

   8471   1 00046D  EF47 0011                            STR,R6   ITEMP1,AUTO

     1494     8472    2           DPTR$->B$CHAR = KN$NETPARM.UHDR$->B$CHAR_ALGN;

   8472   1 00046F  8CC7 000C                            LDI      DPTR$,AUTO
          1 000471  B856                                 LDR,R3   R6
          1 000472  E570 7FFF                            AND,R6   32767,IMO
          1 000474  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000476  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 000478  304F                                 SOR,R3   15
          1 000479  CCC6 0005                            LDB,B4   5,B6
          1 00047B  AB84                                 LAB,B2   ,B4
          1 00047C  2C00                                 LDV,R2   0
          1 00047D  E847 0011                            LDR,R6   ITEMP1,AUTO
          1 00047F  BB85                                 LAB,B3   ,B5
          1 000480  0008                                 MMM

     1495     8473    2           DPTR$ = PINCRC(DPTR$, KN$NETPARM.UHDRSZ);

   8473   1 000481  B846 0007                            LDR,R3   7,B6
          1 000483  8CC7 000C                            LDI      DPTR$,AUTO
          1 000485  7031                                 DCL,R7   1
          1 000486  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000488  F853                                 LDR,R7   R3
          1 000489  6C00                                 LDV,R6   0
          1 00048A  8447 006A                            AID      KN@NETPARM+36,AUTO
          1 00048C  7071                                 DCR,R7   1
          1 00048D  8D47 000C                            SDI      DPTR$,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:228  

     1496     8474    2           END;

     1497     8475
     1498     8476    1      IF KN$NETPARM.MSGSZ > 0

   8476   1 00048F  E846 0004                            LDR,R6   4,B6
          1 000491  6901 001C                            BEZ,R6   s:8482,PREL

     1499     8477    2      THEN DO;

     1500     8478    2           ITEMP1 = KN$NETPARM.MSGSZ;

   8478   1 000493  EF47 0011                            STR,R6   ITEMP1,AUTO

     1501     8479    2           DPTR$->B$CHAR = KN$NETPARM.MSG$->B$CHAR;

   8479   1 000495  8CC7 000C                            LDI      DPTR$,AUTO
          1 000497  B856                                 LDR,R3   R6
          1 000498  E570 7FFF                            AND,R6   32767,IMO
          1 00049A  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 00049C  DCC7 006A                            LDB,B5   KN@NETPARM+36,AUTO
          1 00049E  304F                                 SOR,R3   15
          1 00049F  8CC6 0002                            LDI      2,B6
          1 0004A1  A856                                 LDR,R2   R6
          1 0004A2  E570 7FFF                            AND,R6   32767,IMO
          1 0004A4  8D47 006C                            SDI      KN@NETPARM+38,AUTO
          1 0004A6  CCC7 006C                            LDB,B4   KN@NETPARM+38,AUTO
          1 0004A8  204F                                 SOR,R2   15
          1 0004A9  AB84                                 LAB,B2   ,B4
          1 0004AA  E847 0011                            LDR,R6   ITEMP1,AUTO
          1 0004AC  BB85                                 LAB,B3   ,B5
          1 0004AD  0008                                 MMM

     1502     8480    2           END;

     1503     8481
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:229  
     1504     8482    1      IF KN$TCTX.OPTION.CHKSUM

   8482   1 0004AE  DCC7 0006                            LDB,B5   CTX$,AUTO
          1 0004B0  82C5 000C                            LB,'0001'X        12,B5
          1 0004B2       0001
          1 0004B3  0581 01B9                            BBF      s:8634,PREL

     1505     8483    2      THEN DO;

     1506     8484    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   8484   1 0004B5  E847 0014                            LDR,R6   ENTRY_SWITCH,AUTO
          1 0004B7  6D0E                                 CMV,R6   14
          1 0004B8  0981 0007                            BNE      s:8486,PREL

     1507     8485    2           THEN KN$TCTX.OPTION.CHKSUM = SAVE_CHKSUM;

   8485   1 0004BA  D847 0019                            LDR,R5   SAVE_CHKSUM,AUTO
          1 0004BC  504F                                 SOR,R5   15
          1 0004BD  DAC5 000C                            SRM,R5,'0001'X    12,B5
          1 0004BF       0001

     1508     8486    2           GOTO BUILD_CHKSUM;

   8486   1 0004C0  0F81 0198                            B        s:8631,PREL

     1509     8487    2           END;
     1510     8488
     1511     8489    1      ELSE GOTO SEND_TO_NET;
     1512     8490
     1513     8491        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:230  
     1514     8492        /*F* NAME: KNT$SEND_AK - Send acknowledgement TPDU
     1515     8493
     1516     8494        Called from KNT$DSESSION, KNT$RECV and KNT$TTIMER.
     1517     8495        */
     1518     8496
     1519     8497    1   KNT$SEND_AK: ENTRY(KN$NETPARM)  ALTRET;

   8497   1 0004C2  D380 0000 0000  xent KNT$SEND_AK     LNJ,B5   X6A_AUTO_1
          1 0004C5       0070 0001                       DC       112,1

     1520     8498    1      TPDU_AK_SWITCH = 0;

   8498   1 0004C7  8747 0016                            CL       TPDU_AK_SWITCH,AUTO

     1521     8499    1      GOTO COMMON_AK;

   8499   1 0004C9  0F81 0009                            B        s:8502,PREL

     1522     8500
     1523     8501    1   KNT$SEND_AK_FCC: ENTRY(KN$NETPARM) ALTRET;

   8501   1 0004CB  D380 0000 0000  xent KNT$SEND_AK_FCC LNJ,B5   X6A_AUTO_1
          1 0004CE       0070 0001                       DC       112,1

     1524     8502    1      TPDU_AK_SWITCH= 1;

   8502   1 0004D0  6C01                                 LDV,R6   1
          1 0004D1  EF47 0016                            STR,R6   TPDU_AK_SWITCH,AUTO

   8502   1                              COMMON_AK       null
     1525     8503
     1526     8504    1   COMMON_AK: ;
     1527     8505    1      CTX$ = KN$NETPARM.TCTX$;

   8505   1 0004D3  ECC7 0004            COMMON_AK       LDB,B6   @KN$NETPARM,AUTO
          1 0004D5  DCC6 001B                            LDB,B5   27,B6
          1 0004D7  DFC7 0006                            STB,B5   CTX$,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:231  

     1528     8506    1      ENTRY_SWITCH = %K_TPDU_TYPE_AK;

   8506   1 0004D9  6C06                                 LDV,R6   6
          1 0004DA  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1529     8507
     1530     8508    1      IF KN$TCTX.CLASS~=4 AND KN$TCTX.OPTION.CLASS_2_FLOW = '0'B

   8508   1 0004DC  D2C5 0005                            LLH,R5   5,B5
          1 0004DE  5D04                                 CMV,R5   4
          1 0004DF  0901 000F                            BE       s:8513,PREL
          1 0004E1  82C5 000C                            LB,'0008'X        12,B5
          1 0004E3       0008
          1 0004E4  0501 000A                            BBT      s:8513,PREL

     1531     8509    2      THEN DO;

     1532     8510    2           CALL SCREECH(KNT_SCODE);

   8510   1 0004E6  BB80 0000 0000  02                   LAB,B3   0
          1 0004E9  CBF0 0100                            LAB,B4   256,IMO
          1 0004EB  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 0004EE       0001                            DC       s:8513,PREL

     1533     8511    2           END;

     1534     8512
     1535     8513    1      IF KN$TCTX.LOST_TPDU

   8513   1 0004EF  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0004F1  82C6 000D                            LB,'0080'X        13,B6
          1 0004F3       0080
          1 0004F4  0581 000B                            BBF      s:8515,PREL

     1536     8514    1      THEN CDT = KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ - KN$TCTX.RECV_LWE;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:232  
   8514   1 0004F6  DCC6 002A                            LDB,B5   42,B6
          1 0004F8  8CC5 0002                            LDI      2,B5
          1 0004FA  84C6 0022                            SID      34,B6
          1 0004FC  8D47 0012                            SDI      CDT,AUTO
          1 0004FE  0F81 0007                            B        s:8517,PREL

     1537     8515    1      ELSE CDT = KN$TCTX.RECV_LWE - KN$TCTX.RECV_NEXT;

   8515   1 000500  8CC6 0022                            LDI      34,B6
          1 000502  84C6 0026                            SID      38,B6
          1 000504  8D47 0012                            SDI      CDT,AUTO

     1538     8516
     1539     8517    1      IF CDT < 0

   8517   1 000506  84F0 0000 0000                       SID      0,IMO
          1 000509  6881 000A                            BGEZ,R6  s:8520,PREL

     1540     8518    1      THEN CDT = CDT + KN$TCTX.MAXSEQ + 1;

   8518   1 00050B  8CC7 0012                            LDI      CDT,AUTO
          1 00050D  8446 000A                            AID      10,B6
          1 00050F  8470 0000 0001                       AID      1,IMO
          1 000512  8D47 0012                            SDI      CDT,AUTO

     1541     8519
     1542     8520    1      IF NOT KN$TCTX.LOST_TPDU

   8520   1 000514  82C6 000D                            LB,'0080'X        13,B6
   8520   1 000516       0080
          1 000517  0501 0021                            BBT      s:8527,PREL

     1543     8521    2      THEN DO;

     1544     8522    2           IF CDT = 1 AND KN$TCTX.RCV_WINDOW_SZ = 1

   8522   1 000519  8CC7 0012                            LDI      CDT,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:233  
          1 00051B  84F0 0000 0001                       SID      1,IMO
          1 00051E  6981 0011                            BNEZ,R6  s:8524,PREL
          1 000520  7981 000F                            BNEZ,R7  s:8524,PREL
          1 000522  E846 0005                            LDR,R6   5,B6
          1 000524  E570 00FF                            AND,R6   255,IMO
          1 000526  6D01                                 CMV,R6   1
          1 000527  0981 0008                            BNE      s:8524,PREL

     1545     8523    2           THEN CDT = 1;

   8523   1 000529  8CF0 0000 0001                       LDI      1,IMO
          1 00052C  8D47 0012                            SDI      CDT,AUTO
          1 00052E  0F81 000A                            B        s:8527,PREL

     1546     8524    2           ELSE CDT = KN$TCTX.RCV_WINDOW_SZ - CDT;

   8524   1 000530  F846 0005                            LDR,R7   5,B6
          1 000532  F570 00FF                            AND,R7   255,IMO
          1 000534  6C00                                 LDV,R6   0
          1 000535  84C7 0012                            SID      CDT,AUTO
          1 000537  8D47 0012                            SDI      CDT,AUTO

     1547     8525    2           END;

     1548     8526
     1549     8527    1      TPDU$ = ADDR(K$TPDU);

   8527   1 000539  DBC7 001A                            LAB,B5   K$TPDU,AUTO
          1 00053B  DFC7 000A                            STB,B5   TPDU$,AUTO

     1550     8528    1      IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   8528   1 00053D  82C6 000C                            LB,'0004'X        12,B6
   8528   1 00053F       0004
          1 000540  0581 0015                            BBF      s:8536,PREL

     1551     8529    2      THEN DO;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:234  

     1552     8530    2           B$TPDU_AK_EXT.LI = SIZEC(K$TPDU_AK_EXT) -1;

   8530   1 000542  6C09                                 LDV,R6   9
          1 000543  E785                                 STH,R6   ,B5

     1553     8531    2           B$TPDU_AK_EXT.CDT = CDT;

   8531   1 000544  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 000546  D847 0013                            LDR,R5   CDT+1,AUTO
          1 000548  DF45 0004                            STR,R5   4,B5

     1554     8532    2           B$TPDU_AK_EXT.YR_TU_NR = KN$TCTX.RECV_LWE;

   8532   1 00054A  8CC6 0022                            LDI      34,B6
          1 00054C  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 00054E  8D45 0002                            SDI      2,B5

     1555     8533    2           B$TPDU_AK_EXT.MBZ = 0;

   8533   1 000550  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 000552  8805                                 LBF,'000F'X       ,B5
          1 000553       000F

     1556     8534    2           END;

   8534   1 000554  0F81 000F                            B        s:8541,PREL

     1557     8535    2      ELSE DO;

     1558     8536    2           B$TPDU_AK.LI = SIZEC(K$TPDU_AK) -1;

   8536   1 000556  6C04                                 LDV,R6   4
          1 000557  E785                                 STH,R6   ,B5

     1559     8537    2           B$TPDU_AK.CDT = CDT;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:235  
   8537   1 000558  D847 0013                            LDR,R5   CDT+1,AUTO
          1 00055A  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 00055C  DA85                                 SRM,R5,'000F'X    ,B5
          1 00055D       000F

     1560     8538    2           B$TPDU_AK.YR_TU_NR = KN$TCTX.RECV_LWE;

   8538   1 00055E  C846 0023                            LDR,R4   35,B6
          1 000560  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 000562  C7C5 0002                            STH,R4   2,B5

     1561     8539    2           END;

     1562     8540
     1563     8541    1      B$TPDU_AK.TYPE = %K_TPDU_TYPE_AK;

   8541   1 000564  6C60                                 LDV,R6   96
          1 000565  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 000567  EA85                                 SRM,R6,'00F0'X    ,B5
          1 000568       00F0

     1564     8542
     1565     8543    1      IF TPDU_AK_SWITCH = 1

   8543   1 000569  C847 0016                            LDR,R4   TPDU_AK_SWITCH,AUTO
          1 00056B  4D01                                 CMV,R4   1
          1 00056C  0981 002A                            BNE      s:8548,PREL

     1566     8544    2      THEN DO;

     1567     8545    2           DPTR$ = PINCRC(TPDU$, B$TPDU_AK.LI +1);

   8545   1 00056E  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 000570  B285                                 LLH,R3   ,B5
          1 000571  8CC7 000A                            LDI      TPDU$,AUTO
          1 000573  7031                                 DCL,R7   1
          1 000574  8D47 006A                            SDI      KN@NETPARM+36,AUTO
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:236  
          1 000576  F853                                 LDR,R7   R3
          1 000577  6C00                                 LDV,R6   0
          1 000578  8447 006A                            AID      KN@NETPARM+36,AUTO
          1 00057A  7071                                 DCR,R7   1
          1 00057B  7031                                 DCL,R7   1
          1 00057C  8470 0000 0001                       AID      1,IMO
          1 00057F  7071                                 DCR,R7   1
          1 000580  8D47 000C                            SDI      DPTR$,AUTO

     1568     8546    2           DPTR$->K$TPARM_FCC = KN$NETPARM.FPT$->K$TPARM_FCC;

   8546   1 000582  B856                                 LDR,R3   R6
          1 000583  E570 7FFF                            AND,R6   32767,IMO
          1 000585  8D47 006A                            SDI      KN@NETPARM+36,AUTO
          1 000587  CCC7 006A                            LDB,B4   KN@NETPARM+36,AUTO
          1 000589  304F                                 SOR,R3   15
          1 00058A  BCC7 0004                            LDB,B3   @KN$NETPARM,AUTO
          1 00058C  ACC3 0019                            LDB,B2   25,B3
          1 00058E  2C00                                 LDV,R2   0
          1 00058F  6C0A                                 LDV,R6   10
          1 000590  BB84                                 LAB,B3   ,B4
          1 000591  0008                                 MMM

     1569     8547    2           B$TPDU_AK.LI = B$TPDU_AK.LI + SIZEC(K$TPARM_FCC);

   8547   1 000592  ECC7 000A                            LDB,B6   TPDU$,AUTO
          1 000594  E286                                 LLH,R6   ,B6
          1 000595  6E0A                                 ADV,R6   10
          1 000596  E786                                 STH,R6   ,B6

     1570     8548    2           END;

   8543   1                              SET_ACK_NODE    null
     1571     8549
     1572     8550    1   SET_ACK_NODE: ;
     1573     8551    1      KN$NETPARM.NODE = KN$TCTX.NODE;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:237  
   8551   1 000597  ECC7 0004            SET_ACK_NODE    LDB,B6   @KN$NETPARM,AUTO
          1 000599  DCC7 0006                            LDB,B5   CTX$,AUTO
          1 00059B  E805                                 LDR,R6   ,B5
          1 00059C  E570 00FF                            AND,R6   255,IMO
          1 00059E  EF46 0015                            STR,R6   21,B6

     1574     8552    1      GOTO FINISH_UP;

   8552   1 0005A0  0F81 0083                            B        s:8612,PREL

     1575     8553
     1576     8554        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:238  
     1577     8555        /*F* NAME: KNT$SEND_EA - Send expedited data acknowledgement TPDU
     1578     8556
     1579     8557        Called from KNT$RECV.
     1580     8558        */
     1581     8559
     1582     8560    1   KNT$SEND_EA: ENTRY(KN$NETPARM) ALTRET;

   8560   1 0005A2  D380 0000 0000  xent KNT$SEND_EA     LNJ,B5   X6A_AUTO_1
          1 0005A5       0070 0001                       DC       112,1

     1583     8561    1      CTX$ = KN$NETPARM.TCTX$;

   8561   1 0005A7  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 0005A9  DCC6 001B                            LDB,B5   27,B6
          1 0005AB  DFC7 0006                            STB,B5   CTX$,AUTO

     1584     8562    1      ENTRY_SWITCH = %K_TPDU_TYPE_EA;

   8562   1 0005AD  6C02                                 LDV,R6   2
          1 0005AE  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1585     8563
     1586     8564    1      TPDU$ = ADDR(K$TPDU);

   8564   1 0005B0  CBC7 001A                            LAB,B4   K$TPDU,AUTO
          1 0005B2  CFC7 000A                            STB,B4   TPDU$,AUTO

     1587     8565    1      IF KN$TCTX.OPTION.EXTENDED ~= '0'B

   8565   1 0005B4  82C5 000C                            LB,'0004'X        12,B5
   8565   1 0005B6       0004
          1 0005B7  0581 000F                            BBF      s:8573,PREL

     1588     8566    2      THEN DO;

     1589     8567    2           B$TPDU_EA_EXT.LI = SIZEC(K$TPDU_EA_EXT) -1;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:239  
   8567   1 0005B9  5C07                                 LDV,R5   7
          1 0005BA  D784                                 STH,R5   ,B4

     1590     8568    2           B$TPDU_EA_EXT.YR_TU_NR = KN$TCTX.RECV_EXPD;

   8568   1 0005BB  8CC5 0028                            LDI      40,B5
          1 0005BD  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005BF  8D44 0002                            SDI      2,B4

     1591     8569    2           B$TPDU_EA_EXT.MBZ = 0;

   8569   1 0005C1  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005C3  8804                                 LBF,'000F'X       ,B4
          1 0005C4       000F

     1592     8570    2           END;

   8570   1 0005C5  0F81 0009                            B        s:8577,PREL

     1593     8571
     1594     8572    2      ELSE DO;

     1595     8573    2           B$TPDU_EA.LI = SIZEC(K$TPDU_EA) -1;

   8573   1 0005C7  5C04                                 LDV,R5   4
          1 0005C8  D784                                 STH,R5   ,B4

     1596     8574    2           B$TPDU_EA.YR_EDTU_NR = KN$TCTX.RECV_EXPD;

   8574   1 0005C9  C845 0029                            LDR,R4   41,B5
          1 0005CB  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005CD  C7C4 0002                            STH,R4   2,B4

     1597     8575    2           END;

     1598     8576
     1599     8577    1      B$TPDU_EA.TYPE = %K_TPDU_TYPE_EA;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:240  

   8577   1 0005CF  6C20                                 LDV,R6   32
          1 0005D0  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005D2  EA84                                 SRM,R6,'00F0'X    ,B4
          1 0005D3       00F0

     1600     8578    1      B$TPDU_EA.MBZ = 0;

   8578   1 0005D4  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005D6  8804                                 LBF,'000F'X       ,B4
          1 0005D7       000F

     1601     8579
     1602     8580    1      GOTO SET_ACK_NODE;

   8580   1 0005D8  0F81 FFBE                            B        s:8548,PREL

     1603     8581
     1604     8582        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:241  
     1605     8583        /*F* NAME: KNT$SEND_DC - Send disconnect confirm TPDU
     1606     8584
     1607     8585        Called from KNT$RECV.
     1608     8586        */
     1609     8587    1   KNT$SEND_DC: ENTRY(KN$NETPARM)  ALTRET;

   8587   1 0005DA  D380 0000 0000  xent KNT$SEND_DC     LNJ,B5   X6A_AUTO_1
          1 0005DD       0070 0001                       DC       112,1

     1610     8588    1      CTX$ = KN$NETPARM.TCTX$;

   8588   1 0005DF  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 0005E1  DCC6 001B                            LDB,B5   27,B6
          1 0005E3  DFC7 0006                            STB,B5   CTX$,AUTO

     1611     8589    1      ENTRY_SWITCH = %K_TPDU_TYPE_DC;

   8589   1 0005E5  6C0C                                 LDV,R6   12
          1 0005E6  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1612     8590
     1613     8591    1      TPDU$ = ADDR(K$TPDU);

   8591   1 0005E8  CBC7 001A                            LAB,B4   K$TPDU,AUTO
          1 0005EA  CFC7 000A                            STB,B4   TPDU$,AUTO

     1614     8592    1      B$TPDU_DC.LI = SIZEC(K$TPDU_DC) -1;

   8592   1 0005EC  5C05                                 LDV,R5   5
          1 0005ED  D784                                 STH,R5   ,B4

     1615     8593    1      B$TPDU_DC.MBZ = 0;

   8593   1 0005EE  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005F0  8804                                 LBF,'000F'X       ,B4
          1 0005F1       000F

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:242  
     1616     8594    1      B$TPDU_DC.SRC_REF = KN$TCTX.SRC_REF;

   8594   1 0005F2  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005F4  C845 0002                            LDR,R4   2,B5
          1 0005F6  CF44 0002                            STR,R4   2,B4

     1617     8595    1      B$TPDU_DC.TYPE = %K_TPDU_TYPE_DC;

   8595   1 0005F8  C870 00C0                            LDR,R4   192,IMO
          1 0005FA  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 0005FC  CA84                                 SRM,R4,'00F0'X    ,B4
          1 0005FD       00F0

     1618     8596
     1619     8597    1      GOTO FINISH_UP;

   8597   1 0005FE  0F81 0025                            B        s:8612,PREL

     1620     8598
     1621     8599        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:243  
     1622     8600        /*F* NAME: KNT$SEND_ER - Send error TPDU
     1623     8601
     1624     8602        This routeine is currently not used.
     1625     8603        */
     1626     8604    1   KNT$SEND_ER: ENTRY(KN$NETPARM) ALTRET;

   8604   1 000600  D380 0000 0000  xent KNT$SEND_ER     LNJ,B5   X6A_AUTO_1
          1 000603       0070 0001                       DC       112,1

     1627     8605    1      CTX$ = KN$NETPARM.TCTX$;

   8605   1 000605  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000607  DCC6 001B                            LDB,B5   27,B6
          1 000609  DFC7 0006                            STB,B5   CTX$,AUTO

     1628     8606    1      ENTRY_SWITCH = %K_TPDU_TYPE_ER;

   8606   1 00060B  6C07                                 LDV,R6   7
          1 00060C  EF47 0014                            STR,R6   ENTRY_SWITCH,AUTO

     1629     8607
     1630     8608    1      TPDU$ = ADDR(K$TPDU);

   8608   1 00060E  CBC7 001A                            LAB,B4   K$TPDU,AUTO
          1 000610  CFC7 000A                            STB,B4   TPDU$,AUTO

     1631     8609    1      B$TPDU_ER.LI = SIZEC(K$TPDU_ER) -1;

   8609   1 000612  5C04                                 LDV,R5   4
          1 000613  D784                                 STH,R5   ,B4

     1632     8610    1      B$TPDU_ER.MBZ = 0;

   8610   1 000614  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 000616  8804                                 LBF,'000F'X       ,B4
          1 000617       000F

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:244  
     1633     8611    1      B$TPDU_ER.TYPE = %K_TPDU_TYPE_ER;

   8611   1 000618  4C70                                 LDV,R4   112
          1 000619  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 00061B  CA84                                 SRM,R4,'00F0'X    ,B4
          1 00061C       00F0

     1634     8612    1      B$TPDU_ER.REJECT_CAUSE = 1 /* Unimplemented function */;

   8612   1 00061D  3C01                                 LDV,R3   1
          1 00061E  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 000620  B7C4 0002                            STH,R3   2,B4

     1635     8613
     1636     8614    1      GOTO FINISH_UP;

   8614   1 000622  0F81 0001                            B        s:8612,PREL

   8612   1                              FINISH_UP       null
     1637     8615
     1638     8616        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:245  
     1639     8617    1   FINISH_UP: ;
     1640     8618    1      CHKOFF = B$TPDU.LI + 4;

   8618   1 000624  CCC7 000A            FINISH_UP       LDB,B4   TPDU$,AUTO
          1 000626  E284                                 LLH,R6   ,B4
          1 000627  6E04                                 ADV,R6   4
          1 000628  EF47 0018                            STR,R6   CHKOFF,AUTO

     1641     8619
     1642     8620    1      IF KN$TCTX.OPTION.OSI = '0'B

   8620   1 00062A  82C5 000C                            LB,'0010'X        12,B5
   8620   1 00062C       0010
          1 00062D  0501 0007                            BBT      s:8622,PREL

     1643     8621    1      THEN B$TPDU.LI =( ( (B$TPDU.LI +2) /2) * 2) -1;

   8621   1 00062F  D284                                 LLH,R5   ,B4
          1 000630  5E02                                 ADV,R5   2
          1 000631  5041                                 SOR,R5   1
          1 000632  5001                                 SOL,R5   1
          1 000633  5EFF                                 ADV,R5   -1
          1 000634  D784                                 STH,R5   ,B4

     1644     8622    1      FRAG_SZ = B$TPDU.LI + 1;

   8622   1 000635  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 000637  E284                                 LLH,R6   ,B4
          1 000638  6E01                                 ADV,R6   1
          1 000639  EF47 000E                            STR,R6   FRAG_SZ,AUTO

   8622   1                              FINISH_UP2      null
     1645     8623
     1646     8624    1   FINISH_UP2:;
     1647     8625    1      B$TPDU.DST_REF = KN$TCTX.DST_REF;

   8625   1 00063B  D845 0001            FINISH_UP2      LDR,R5   1,B5
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:246  
          1 00063D  DF44 0001                            STR,R5   1,B4

     1648     8626
     1649     8627    1      IF KN$TCTX.OPTION.CHKSUM ~= '0'B

   8627   1 00063F  82C5 000C                            LB,'0001'X        12,B5
   8627   1 000641       0001
          1 000642  0581 002A                            BBF      s:8634,PREL

     1650     8628    2      THEN DO;

     1651     8629    2           B$TPDU.LI = B$TPDU.LI + SIZEC(K$TPARM_CHKSUM);

   8629   1 000644  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 000646  E284                                 LLH,R6   ,B4
          1 000647  6E04                                 ADV,R6   4
          1 000648  E784                                 STH,R6   ,B4

     1652     8630    2           FRAG_SZ = B$TPDU.LI + 1;

   8630   1 000649  CCC7 000A                            LDB,B4   TPDU$,AUTO
          1 00064B  E284                                 LLH,R6   ,B4
          1 00064C  6E01                                 ADV,R6   1
          1 00064D  EF47 000E                            STR,R6   FRAG_SZ,AUTO

     1653     8631    2           PINCRC(ADDR(B$TPDU),CHKOFF-3)->CHR4BSD = ADDR(K_CKSUM_INIT)->CHR4BSD;

   8631   1 00064F  AB80 0000 0000  xsym                 LAB,B2   K_CKSUM_INIT
          1 000652  2C00                                 LDV,R2   0
          1 000653  6C04                                 LDV,R6   4
          1 000654  BB84                                 LAB,B3   ,B4
          1 000655  B847 0018                            LDR,R3   CHKOFF,AUTO
          1 000657  3EFD                                 ADV,R3   -3
          1 000658  0008                                 MMM

   8631   1                              BUILD_CHKSUM    null
     1654     8632    2   BUILD_CHKSUM:;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:247  
     1655     8633    2           CALL KNA$CALC_CHKSUM(TPDU$,FRAG_SZ,CHKOFF);

   8633   1 000659  DBC7 0018            BUILD_CHKSUM    LAB,B5   CHKOFF,AUTO
          1 00065B  DFC7 006E                            STB,B5   KN@NETPARM+40,AUTO
          1 00065D  CBC7 000E                            LAB,B4   FRAG_SZ,AUTO
          1 00065F  CFC7 006C                            STB,B4   KN@NETPARM+38,AUTO
          1 000661  BBC7 000A                            LAB,B3   TPDU$,AUTO
          1 000663  BFC7 006A                            STB,B3   KN@NETPARM+36,AUTO
          1 000665  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 000667  CBF0 0300                            LAB,B4   768,IMO
          1 000669  E380 0000 0000  xent                 LNJ,B6   KNA$CALC_CHKSUM
          1 00066C       0001                            DC       s:8634,PREL

     1656     8634    2           END;

   8631   1                              SEND_TO_NET     null
     1657     8635
     1658     8636    1   SEND_TO_NET:;
     1659     8637    1      CALL I$SEND_TO_NET

   8637   1 00066D  E3C0 005E            SEND_TO_NET     LNJ,B6   s:0,PREL
          1 00066F       0003                            DC       s:8639,PREL
          1 000670  0F81 000C                            B        s:8650,PREL

     1660     8638    2      WHENALTRETURN DO;

     1661     8639    2           IF ENTRY_SWITCH = %K_TPDU_TYPE_CR

   8639   1 000672  E847 0014                            LDR,R6   ENTRY_SWITCH,AUTO
          1 000674  6D0E                                 CMV,R6   14
          1 000675  0901 F9EB                            BE       s:8152,PREL
          1 000677  6D0D                                 CMV,R6   13
          1 000678  0901 F9E8                            BE       s:8152,PREL
          1 00067A  6D08                                 CMV,R6   8
          1 00067B  0901 F9E5                            BE       s:8152,PREL

     1662     8640    2             OR ENTRY_SWITCH = %K_TPDU_TYPE_CC
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:248  
     1663     8641    2             OR ENTRY_SWITCH = %K_TPDU_TYPE_DR
     1664     8642    2           THEN GOTO NOQ_4BUFFERED;
     1665     8643
     1666     8644    3           ELSE DO;

     1667     8645                     /*N* cant send non-buffered tpdu*/
     1668     8646    3                END;

     1669     8647
     1670     8648    2           END/*altret from knn$send*/;

     1671     8649
     1672     8650    1      IF ENTRY_SWITCH = %K_TPDU_TYPE_AK

   8650   1 00067D  E847 0014                            LDR,R6   ENTRY_SWITCH,AUTO
          1 00067F  6D06                                 CMV,R6   6
          1 000680  0981 0048                            BNE      s:8665,PREL

     1673     8651    2      THEN DO;

     1674     8652    2           IF TPDU_AK_SWITCH = 0

   8652   1 000682  D847 0016                            LDR,R5   TPDU_AK_SWITCH,AUTO
          1 000684  5981 000C                            BNEZ,R5  s:8654,PREL

     1675     8653    2           THEN KN$TCTX.TMR_WINDOW.INTERVAL = (KNT_WINDOW_TIMER *15) /2;

   8653   1 000686  C800 0000 0000  xsym                 LDR,R4   KNT_WINDOW_TIMER
          1 000689  4F0F                                 MLV,R4   15
          1 00068A  4041                                 SOR,R4   1
          1 00068B  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00068D  CF46 005D                            STR,R4   93,B6
          1 00068F  0F81 000A                            B        s:8655,PREL

     1676     8654    2           ELSE KN$TCTX.TMR_WINDOW.INTERVAL = (KNT_FCCWINDOW_TIMER *15) /2;

   8654   1 000691  C800 0000 0000  xsym                 LDR,R4   KNT_FCCWINDOW_TIMER
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:249  
          1 000694  4F0F                                 MLV,R4   15
          1 000695  4041                                 SOR,R4   1
          1 000696  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000698  CF46 005D                            STR,R4   93,B6

     1677     8655    2           IF KN$TCTX.CLASS = 4

   8655   1 00069A  B2C6 0005                            LLH,R3   5,B6
          1 00069C  3D04                                 CMV,R3   4
          1 00069D  0981 000D                            BNE      s:8657,PREL

     1678     8656    2           THEN CALL GHS$SET_TMR (KN$TCTX.TMR_WINDOW);

   8656   1 00069F  DBC6 005A                            LAB,B5   90,B6
          1 0006A1  DFC7 006A                            STB,B5   KN@NETPARM+36,AUTO
          1 0006A3  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 0006A5  CBF0 0100                            LAB,B4   256,IMO
          1 0006A7  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          1 0006AA       0001                            DC       s:8657,PREL

     1679     8657    2           IF NOT KN$TCTX.LOST_TPDU

   8657   1 0006AB  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0006AD  82C6 000D                            LB,'0080'X        13,B6
          1 0006AF       0080
          1 0006B0  0501 0018                            BBT      s:8665,PREL

     1680     8658    3           THEN DO;

     1681     8659    3                KN$TCTX.RECV_UWE = KN$TCTX.RECV_LWE + CDT;

   8659   1 0006B2  8CC6 0022                            LDI      34,B6
          1 0006B4  8447 0012                            AID      CDT,AUTO
          1 0006B6  8D46 0024                            SDI      36,B6

     1682     8660    3                IF KN$TCTX.RECV_UWE > KN$TCTX.MAXSEQ

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:250  
   8660   1 0006B8  84C6 000A                            SID      10,B6
          1 0006BA  0681 000E                            BCF      s:8665,PREL
          1 0006BC  6981 0003                            BNEZ,R6  s:8661,PREL
          1 0006BE  7901 000A                            BEZ,R7   s:8665,PREL

     1683     8661    3                THEN KN$TCTX.RECV_UWE = KN$TCTX.RECV_UWE - KN$TCTX.MAXSEQ - 1;

   8661   1 0006C0  8CC6 0024                            LDI      36,B6
          1 0006C2  84C6 000A                            SID      10,B6
          1 0006C4  8470 FFFF FFFF                       AID      -1,IMO
          1 0006C7  8D46 0024                            SDI      36,B6

     1684     8662    3                END;

     1685     8663    2           END;

     1686     8664
     1687     8665    1      RETURN;

   8665   1 0006C9  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1688     8666
     1689     8667        %EJECT;
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:251  
     1690     8668        /*I* NAME: I$SEND_TO_NET
     1691     8669
     1692     8670             PURPOSE: To provide the common setup and call to network.
     1693     8671        */
     1694     8672
     1695     8673    1   I$SEND_TO_NET: PROC ALTRET;

   8673   1 0006CC  EFC7 0068            I$SEND_TO_NET   STB,B6   KN@NETPARM+34,AUTO

     1696     8674
     1697     8675    2      SEND_DIRECTION = 0;

   8675   1 0006CE  8747 0017                            CL       SEND_DIRECTION,AUTO

     1698     8676    2      GOTO COMMON_SEND;

   8676   1 0006D0  0F81 0006                            B        s:8682,PREL

     1699     8677
     1700     8678    2   I$SEND_TO_HOST: ENTRY ALTRET;

   8678   1 0006D2  EFC7 0068            I$SEND_TO_HOST  STB,B6   KN@NETPARM+34,AUTO

     1701     8679    2      SEND_DIRECTION = 1;

   8679   1 0006D4  6C01                                 LDV,R6   1
          1 0006D5  EF47 0017                            STR,R6   SEND_DIRECTION,AUTO

     1702     8680
     1703     8681    2   COMMON_SEND:
     1704     8682    2      KN@NETPARM = KN_NETPARM_INIT;

   8682   1 0006D7  AB80 0000 0000  xsym COMMON_SEND     LAB,B2   KN_NETPARM_INIT
          1 0006DA  2C00                                 LDV,R2   0
          1 0006DB  6C42                                 LDV,R6   66
          1 0006DC  BBC7 0046                            LAB,B3   KN@NETPARM,AUTO
          1 0006DE  3C00                                 LDV,R3   0
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:252  
          1 0006DF  0008                                 MMM

     1705     8683    2      KN@NETPARM.TCTX$ = CTX$;

   8683   1 0006E0  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0006E2  EFC7 0061                            STB,B6   KN@NETPARM+27,AUTO

     1706     8684    2      KN@NETPARM.TCTX_ID = KN$TCTX.SRC_REF;

   8684   1 0006E4  E846 0002                            LDR,R6   2,B6
          1 0006E6  EF47 0057                            STR,R6   KN@NETPARM+17,AUTO

     1707     8685    2      KN@NETPARM.THDR$ = TPDU$;

   8685   1 0006E8  DCC7 000A                            LDB,B5   TPDU$,AUTO
          1 0006EA  DFC7 0051                            STB,B5   KN@NETPARM+11,AUTO

     1708     8686    2      KN@NETPARM.THDRSZ = FRAG_SZ;

   8686   1 0006EC  D847 000E                            LDR,R5   FRAG_SZ,AUTO
          1 0006EE  DF47 0053                            STR,R5   KN@NETPARM+13,AUTO

     1709     8687    2      KN@NETPARM.NODE = KN$NETPARM.NODE;

   8687   1 0006F0  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          1 0006F2  C844 0015                            LDR,R4   21,B4
          1 0006F4  CF47 005B                            STR,R4   KN@NETPARM+21,AUTO

     1710     8688
     1711     8689    2      KN@NETPARM.FUNCTION = %KN_FCN_DATA;

   8689   1 0006F6  3C05                                 LDV,R3   5
          1 0006F7  BF47 005A                            STR,R3   KN@NETPARM+20,AUTO

     1712     8690
     1713     8691    2      IF SEND_DIRECTION = 1

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:253  
   8691   1 0006F9  A847 0017                            LDR,R2   SEND_DIRECTION,AUTO
          1 0006FB  2D01                                 CMV,R2   1
          1 0006FC  0901 0033                            BE       s:8710,PREL

     1714     8692    2      THEN GOTO SEND_TO_HOST;
     1715     8693
     1716     8694    2      IF KN$TCTX.OPTION.OSI

   8694   1 0006FE  82C6 000C                            LB,'0010'X        12,B6
   8694   1 000700       0010
          1 000701  0581 000C                            BBF      s:8701,PREL

     1717     8695    3      THEN DO;

     1718     8696    3           KN@NETPARM.FUNCTION = %K_NDATA;

   8696   1 000703  3C21                                 LDV,R3   33
          1 000704  BF47 005A                            STR,R3   KN@NETPARM+20,AUTO

     1719     8697    3           KN@NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);

   8697   1 000706  BBC6 009A                            LAB,B3   154,B6
          1 000708  BFC7 0063                            STB,B3   KN@NETPARM+29,AUTO

     1720     8698    3           KN@NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);

   8698   1 00070A  ABC6 00A5                            LAB,B2   165,B6
          1 00070C  AFC7 0065                            STB,B2   KN@NETPARM+31,AUTO

     1721     8699    3           END;

     1722     8700
     1723     8701    2      IF KN$TCTX.OPTION.CONS

   8701   1 00070E  82C6 000C                            LB,'0020'X        12,B6
   8701   1 000710       0020
          1 000711  0581 001E                            BBF      s:8710,PREL
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:254  

     1724     8702    3      THEN DO;

     1725     8703    3           KN@NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);

   8703   1 000713  9806                                 LDR,R1   ,B6
          1 000714  9570 00FF                            AND,R1   255,IMO
          1 000716  BC80 0000 0000  xsym                 LDB,B3   KN_DCT$$
          1 000719  AC93                                 LDB,B2   ,B3,R1
          1 00071A  AFC7 0046                            STB,B2   KN@NETPARM,AUTO

     1726     8704    3           CALL KNH$SEND(KN@NETPARM)

   8704   1 00071C  9BC7 0046                            LAB,B1   KN@NETPARM,AUTO
          1 00071E  9FC7 006A                            STB,B1   KN@NETPARM+36,AUTO
          1 000720  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 000722  CBF0 0100                            LAB,B4   256,IMO
          1 000724  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          1 000727       0003                            DC       s:8706,PREL
          1 000728  0F81 0005                            B        s:8708,PREL

     1727     8705    4           WHENALTRETURN DO;

     1728     8706    4                ALTRETURN;

   8706   1 00072A  ECC7 0068                            LDB,B6   KN@NETPARM+34,AUTO
          1 00072C  B806                                 LDR,R3   ,B6
          1 00072D  C3B6                                 LNJ,B4   ,B6,R3

     1729     8707    4                END;
     1730     8708    3           END;

   8708   1 00072E  0F81 0016                            B        s:8719,PREL

     1731     8709
     1732     8710    3      ELSE DO;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:255  
     1733     8711    3   SEND_TO_HOST:
     1734     8712    3           KN@NETPARM.LDCT$ = KN$NETPARM.LDCT$;

   8712   1 000730  BC84                 SEND_TO_HOST    LDB,B3   ,B4
          1 000731  BFC7 0046                            STB,B3   KN@NETPARM,AUTO

     1735     8713    3           CALL KNN$SEND(KN@NETPARM)

   8713   1 000733  ABC7 0046                            LAB,B2   KN@NETPARM,AUTO
          1 000735  AFC7 006A                            STB,B2   KN@NETPARM+36,AUTO
          1 000737  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 000739  CBF0 0100                            LAB,B4   256,IMO
          1 00073B  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          1 00073E       0003                            DC       s:8715,PREL
          1 00073F  0F81 0005                            B        s:8719,PREL

     1736     8714    4           WHENALTRETURN DO;

     1737     8715    4                ALTRETURN;

   8715   1 000741  ECC7 0068                            LDB,B6   KN@NETPARM+34,AUTO
          1 000743  B806                                 LDR,R3   ,B6
          1 000744  C3B6                                 LNJ,B4   ,B6,R3

     1738     8716    4                END;
     1739     8717    3           END;

     1740     8718
     1741     8719    2      IF KN$TCTX.OPTION.TRACE

   8719   1 000745  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000747  82C6 000C                            LB,'0040'X        12,B6
          1 000749       0040
          1 00074A  0501 0009                            BBT      s:8723,PREL

     1742     8720    2      THEN GOTO LOG_IT;
     1743     8721
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:256  
     1744     8722    2      IF ENTRY_SWITCH~=%K_TPDU_TYPE_DT AND ENTRY_SWITCH~=%K_TPDU_TYPE_AK

   8722   1 00074C  E847 0014                            LDR,R6   ENTRY_SWITCH,AUTO
          1 00074E  6D0F                                 CMV,R6   15
          1 00074F  0901 0027                            BE       s:8737,PREL
          1 000751  6D06                                 CMV,R6   6
          1 000752  0901 0024                            BE       s:8737,PREL

     1745     8723    3      THEN DO;

     1746     8724    3   LOG_IT:
     1747     8725    3           IF ENTRY_SWITCH = %K_TPDU_TYPE_DR

   8725   1 000754  E847 0014            LOG_IT          LDR,R6   ENTRY_SWITCH,AUTO
          1 000756  6D08                                 CMV,R6   8
          1 000757  0981 0013                            BNE      s:8731,PREL

     1748     8726    4           THEN DO;

     1749     8727    4                IF TPDU_DR_SWITCH = 0

   8727   1 000759  D847 0015                            LDR,R5   TPDU_DR_SWITCH,AUTO
          1 00075B  5901 000F                            BEZ,R5   s:8731,PREL

     1750     8728    4                THEN GOTO LOG_SEND;
     1751     8729    4                ELSE CALL KNT$TR_FHOST(KN@NETPARM);

   8729   1 00075D  DBC7 0046                            LAB,B5   KN@NETPARM,AUTO
          1 00075F  DFC7 006A                            STB,B5   KN@NETPARM+36,AUTO
          1 000761  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 000763  CBF0 0100                            LAB,B4   256,IMO
          1 000765  E380 0000 0000  xent                 LNJ,B6   KNT$TR_FHOST
          1 000768       0001                            DC       s:8730,PREL

     1752     8730    4                END;

   8730   1 000769  0F81 000D                            B        s:8737,PREL
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:257  

     1753     8731    4           ELSE DO;

     1754     8732    4   LOG_SEND:
     1755     8733    4                CALL KNT$TR_SEND(KN@NETPARM);

   8733   1 00076B  DBC7 0046            LOG_SEND        LAB,B5   KN@NETPARM,AUTO
          1 00076D  DFC7 006A                            STB,B5   KN@NETPARM+36,AUTO
          1 00076F  BBC7 006A                            LAB,B3   KN@NETPARM+36,AUTO
          1 000771  CBF0 0100                            LAB,B4   256,IMO
          1 000773  E380 0000 0000  xent                 LNJ,B6   KNT$TR_SEND
          1 000776       0001                            DC       s:8737,PREL

     1756     8734    4                END;

     1757     8735    3           END;

     1758     8736
     1759     8737    2      RETURN;

   8737   1 000777  ECC7 0068                            LDB,B6   KN@NETPARM+34,AUTO
          1 000779  C3C6 0001                            LNJ,B4   1,B6
     1760     8738
     1761     8739    2   END I$SEND_TO_NET;
     1762     8740    1   END KNT$SEND_TPDU;
     1763     8741        %EOD;

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:258  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SEND_TPDU.
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:259  

 **** Variables and constants ****

  ****  Section 000 RoData KNT$SEND_TPDU

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(88)    r     1 PARM_HDRS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM               12-0-0/w SBIN(32)    r     1 CDT
    18-0-0/w SBIN(16)    r     1 CHKOFF                     6-0-0/w PTR         r     1 CTX$
     C-0-0/w PTR         r     1 DPTR$                     14-0-0/w SBIN(16)    r     1 ENTRY_SWITCH
     8-0-0/w PTR         r     1 FRAG$                      E-0-0/w SBIN(16)    r     1 FRAG_SZ
    11-0-0/w SBIN(16)    r     1 ITEMP1                    1A-0-0/w STRC(704)   r     1 K$TPDU
    *0-0-0/w STRC(528)   r     1 KN$NETPARM                46-0-0/w STRC(528)   r     1 KN@NETPARM
    19-0-0/w BIT         r     1 SAVE_CHKSUM               17-0-0/w UBIN(16)    r     1 SEND_DIRECTION
    10-0-0/w SBIN(16)    r     1 SPDU_SZ                    F-0-0/w SBIN(16)    r     1 THDR_SZ
     A-0-0/w PTR         r     1 TPDU$                     16-0-0/w UBIN(16)    r     1 TPDU_AK_SWITCH
    15-0-0/w UBIN(16)    r     1 TPDU_DR_SWITCH

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_FCCWINDOW_TIMER        0-0-0/w UBIN(32)    r     1 KNT_SCODE
     0-0-0/w UBIN(16)    r     1 KNT_WAIT_COUNT             0-0-0/w UBIN(16)    r     1 KNT_WINDOW_TIMER
     0-0-0/w PTR         r     1 KN_DCT$$                   0-0-0/w STRC(528)   r     1 KN_NETPARM_INIT
     0-0-0/c CHAR(4)     r     1 K_CKSUM_INIT

  ****  BASED and DCB variables  ****

PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:260  
  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 B$CHAR                     0-0-0/w ACHR        r     1 B$CHAR_ALGN
     0-0-0/c STRC(56)    r     1 B$TPDU                     0-0-0/w STRC(40)    r     1 B$TPDU_AK
     0-0-0/w STRC(80)    r     1 B$TPDU_AK_EXT              0-0-0/w STRC(56)    r     1 B$TPDU_C
     0-0-0/w STRC(48)    r     1 B$TPDU_DC                  0-0-0/w STRC(56)    r     1 B$TPDU_DR
     0-0-0/w STRC(40)    r     1 B$TPDU_EA                  0-0-0/w STRC(64)    r     1 B$TPDU_EA_EXT
     0-0-0/w STRC(40)    r     1 B$TPDU_ER                  0-0-0/c CHAR(2)     r     1 CHR2BSD
     0-0-0/c CHAR(3)     r     1 CHR3BSD                    0-0-0/c CHAR(4)     r     1 CHR4BSD
     0-0-0/w STRC(128)   r     1 FRAG_HDR                   0-0-0/c STRC(32)    r     1 K$TPARM_CHKSUM
     0-0-0/c STRC(24)    r     1 K$TPARM_CLR_INFO           0-0-0/c STRC(80)    r     1 K$TPARM_FCC
     0-0-0/c STRC(24)    r     1 K$TPARM_OPTION             0-0-0/c STRC(24)    r     1 K$TPARM_TPDUSZ
     0-0-0/c STRC(272)   r     1 K$TPARM_TSAP_ID            0-0-0/c STRC(24)    r     1 K$TPARM_VERSION
     0-0-0/c STRC(40)    r     1 K$TPDU_AK                  0-0-0/c STRC(80)    r     1 K$TPDU_AK_EXT
     0-0-0/c STRC(56)    r     1 K$TPDU_CR_CC               0-0-0/c STRC(48)    r     1 K$TPDU_DC
     0-0-0/c STRC(56)    r     1 K$TPDU_DR                  0-0-0/c STRC(40)    r     1 K$TPDU_EA
     0-0-0/c STRC(64)    r     1 K$TPDU_EA_EXT              0-0-0/c STRC(40)    r     1 K$TPDU_ER
     0-0-0/w PTR         r     1 KN$LDCT$(0:0)
     0-0-0/w STRC(2816)  r     1 KN$TCTX


   Procedure KNT$SEND_TPDU requires 1915 words for executable code.
   Procedure KNT$SEND_TPDU requires 112 words of local(AUTO) storage.
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:261  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:262  
          MINI XREF LISTING

APPEND_SHDR
      8452**LABEL    8427--GOTO
B$CHAR
      7931**DCL      8410<<ASSIGN   8410>>ASSIGN   8422<<ASSIGN   8422>>ASSIGN   8465<<ASSIGN   8472<<ASSIGN
      8479<<ASSIGN   8479>>ASSIGN
B$CHAR_ALGN
      7932**DCL      8465>>ASSIGN   8472>>ASSIGN
B$TPDU
      6834**DCL      8631--ASSIGN
B$TPDU.DST_REF
      6862**DCL      8625<<ASSIGN
B$TPDU.LI
      6835**DCL      8618>>ASSIGN   8621<<ASSIGN   8621>>ASSIGN   8622>>ASSIGN   8629<<ASSIGN   8629>>ASSIGN
      8630>>ASSIGN
B$TPDU_AK.CDT
      6953**DCL      8537<<ASSIGN
B$TPDU_AK.LI
      6939**DCL      8536<<ASSIGN   8545>>ASSIGN   8547<<ASSIGN   8547>>ASSIGN
B$TPDU_AK.TYPE
      6946**DCL      8541<<ASSIGN
B$TPDU_AK.YR_TU_NR
      6964**DCL      8538<<ASSIGN
B$TPDU_AK_EXT.CDT
      6915**DCL      8531<<ASSIGN
B$TPDU_AK_EXT.LI
      6895**DCL      8530<<ASSIGN
B$TPDU_AK_EXT.MBZ
      6906**DCL      8533<<ASSIGN
B$TPDU_AK_EXT.YR_TU_NR
      6911**DCL      8532<<ASSIGN
B$TPDU_C.CDT
      7082**DCL      8378<<ASSIGN   8381<<ASSIGN   8382<<ASSIGN
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:263  
B$TPDU_C.CLASS
      7101**DCL      8374<<ASSIGN
B$TPDU_C.DST_REF
      7086**DCL      8335<<ASSIGN
B$TPDU_C.EXT_FMT_FLAG
      7109**DCL      8375<<ASSIGN
B$TPDU_C.LI
      7069**DCL      8333<<ASSIGN
B$TPDU_C.MBZ
      7108**DCL      8336<<ASSIGN
B$TPDU_C.SRC_REF
      7094**DCL      8334<<ASSIGN
B$TPDU_C.TYPE
      7076**DCL      8372<<ASSIGN
B$TPDU_DC.LI
      6987**DCL      8592<<ASSIGN
B$TPDU_DC.MBZ
      6999**DCL      8593<<ASSIGN
B$TPDU_DC.SRC_REF
      7004**DCL      8594<<ASSIGN
B$TPDU_DC.TYPE
      6994**DCL      8595<<ASSIGN
B$TPDU_DR.DST_REF
      7039**DCL      8358<<ASSIGN
B$TPDU_DR.MBZ
      7038**DCL      8343<<ASSIGN
B$TPDU_DR.REASON
      7047**DCL      8342<<ASSIGN
B$TPDU_DR.TYPE
      7033**DCL      8341<<ASSIGN
B$TPDU_EA.LI
      7164**DCL      8573<<ASSIGN
B$TPDU_EA.MBZ
      7169**DCL      8578<<ASSIGN
B$TPDU_EA.TYPE
      7168**DCL      8577<<ASSIGN
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:264  
B$TPDU_EA.YR_EDTU_NR
      7171**DCL      8574<<ASSIGN
B$TPDU_EA_EXT.LI
      7138**DCL      8567<<ASSIGN
B$TPDU_EA_EXT.MBZ
      7143**DCL      8569<<ASSIGN
B$TPDU_EA_EXT.YR_TU_NR
      7145**DCL      8568<<ASSIGN
B$TPDU_ER.LI
      7190**DCL      8609<<ASSIGN
B$TPDU_ER.MBZ
      7202**DCL      8610<<ASSIGN
B$TPDU_ER.REJECT_CAUSE
      7207**DCL      8612<<ASSIGN
B$TPDU_ER.TYPE
      7197**DCL      8611<<ASSIGN
BUILD_CHKSUM
      8631**LABEL    8486--GOTO
CDT
      5425**DCL      8514<<ASSIGN   8515<<ASSIGN   8517>>IF       8518<<ASSIGN   8518>>ASSIGN   8522>>IF
      8523<<ASSIGN   8524<<ASSIGN   8524>>ASSIGN   8531>>ASSIGN   8537>>ASSIGN   8659>>ASSIGN
CHKOFF
      5430**DCL      8456<<ASSIGN   8618<<ASSIGN   8631>>ASSIGN   8633<>CALL
CHK_CHKSUM
      8442**LABEL    8369--GOTO
CHR2BSD
      7930**DCL      8391<<ASSIGN   8391>>ASSIGN
CHR3BSD
      7929**DCL      8349<<ASSIGN   8349>>ASSIGN   8431<<ASSIGN   8431>>ASSIGN   8445<<ASSIGN   8445>>ASSIGN
CHR4BSD
      7928**DCL      8454<<ASSIGN   8454>>ASSIGN   8631<<ASSIGN   8631>>ASSIGN
COMMON_AK
      8502**LABEL    8499--GOTO
COMMON_DR
      8231**LABEL    8228--GOTO
COMMON_SEND IN PROCEDURE I$SEND_TO_NET
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:265  
      8682**LABEL    8676--GOTO
CTX$
      5417**DCL      5915--IMP-PTR  8119<<ASSIGN   8120>>ASSIGN   8122>>DOWHILE  8122>>DOWHILE  8122>>DOWHILE
      8126>>ASSIGN   8128>>IF       8128>>IF       8130>>IF       8130>>IF       8132>>IF       8132>>IF
      8136>>ASSIGN   8136>>ASSIGN   8142>>IF       8142>>IF       8154>>ASSIGN   8154>>ASSIGN   8159>>IF
      8161>>IF       8161>>IF       8163>>ASSIGN   8164>>CALL     8168>>ASSIGN   8170>>IF       8172>>ASSIGN
      8174>>IF       8175>>ASSIGN   8177>>CALL     8183>>IF       8195<<ASSIGN   8196>>ASSIGN   8198>>IF
      8198>>IF       8198>>IF       8198>>IF       8202>>ASSIGN   8208>>ASSIGN   8209>>ASSIGN   8210>>CALL
      8235<<ASSIGN   8236>>ASSIGN   8241>>CALL     8245>>IF       8245>>IF       8249>>IF       8251>>IF
      8252>>ASSIGN   8252>>ASSIGN   8253>>ASSIGN   8267<<ASSIGN   8270>>ASSIGN   8271>>IF       8272>>ASSIGN
      8282<<ASSIGN   8284>>ASSIGN   8294>>IF       8295>>ASSIGN   8297>>IF       8298>>ASSIGN   8300>>IF
      8310>>IF       8316>>IF       8321>>CALL     8329>>ASSIGN   8330>>ASSIGN   8334>>ASSIGN   8335>>ASSIGN
      8342>>ASSIGN   8347>>IF       8347>>IF       8350>>ASSIGN   8356>>IF       8358>>ASSIGN   8359>>ASSIGN
      8374>>ASSIGN   8375>>ASSIGN   8377>>IF       8380>>IF       8382>>ASSIGN   8392>>ASSIGN   8402>>ASSIGN
      8409>>ASSIGN   8410>>ASSIGN   8414>>ASSIGN   8421>>ASSIGN   8422>>ASSIGN   8426>>IF       8435>>IF
      8452>>IF       8482>>IF       8485>>ASSIGN   8505<<ASSIGN   8508>>IF       8508>>IF       8513>>IF
      8514>>ASSIGN   8514>>ASSIGN   8515>>ASSIGN   8515>>ASSIGN   8518>>ASSIGN   8520>>IF       8522>>IF
      8524>>ASSIGN   8528>>IF       8532>>ASSIGN   8538>>ASSIGN   8551>>ASSIGN   8561<<ASSIGN   8565>>IF
      8568>>ASSIGN   8574>>ASSIGN   8588<<ASSIGN   8594>>ASSIGN   8605<<ASSIGN   8620>>IF       8625>>ASSIGN
      8627>>IF       8653>>ASSIGN   8654>>ASSIGN   8655>>IF       8656>>CALL     8657>>IF       8659>>ASSIGN
      8659>>ASSIGN   8660>>IF       8660>>IF       8661>>ASSIGN   8661>>ASSIGN   8661>>ASSIGN   8683>>ASSIGN
      8684>>ASSIGN   8694>>IF       8697>>ASSIGN   8698>>ASSIGN   8701>>IF       8703>>ASSIGN   8719>>IF
DPTR$
      5420**DCL      8345<<ASSIGN   8349>>ASSIGN   8350>>ASSIGN   8351<<ASSIGN   8351>>ASSIGN   8387<<ASSIGN
      8391>>ASSIGN   8392>>ASSIGN   8393<<ASSIGN   8393>>ASSIGN   8406>>ASSIGN   8407>>ASSIGN   8409>>ASSIGN
      8410>>ASSIGN   8411<<ASSIGN   8411>>ASSIGN   8418>>ASSIGN   8419>>ASSIGN   8421>>ASSIGN   8422>>ASSIGN
      8423<<ASSIGN   8423>>ASSIGN   8431>>ASSIGN   8434>>ASSIGN   8436>>ASSIGN   8438<<ASSIGN   8438>>ASSIGN
      8445>>ASSIGN   8446<<ASSIGN   8446>>ASSIGN   8454>>ASSIGN   8455<<ASSIGN   8455>>ASSIGN   8456>>ASSIGN
      8465>>ASSIGN   8466<<ASSIGN   8466>>ASSIGN   8472>>ASSIGN   8473<<ASSIGN   8473>>ASSIGN   8479>>ASSIGN
      8545<<ASSIGN   8546>>ASSIGN
ENTRY_SWITCH
      5426**DCL      8118<<ASSIGN   8194<<ASSIGN   8234<<ASSIGN   8268<<ASSIGN   8283<<ASSIGN   8304>>IF
      8338>>IF       8372>>ASSIGN   8405>>IF       8417>>IF       8442>>IF       8484>>IF       8506<<ASSIGN
      8562<<ASSIGN   8589<<ASSIGN   8606<<ASSIGN   8639>>IF       8639>>IF       8639>>IF       8650>>IF
      8722>>IF       8722>>IF       8725>>IF
FINISH_UP
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:266  
      8612**LABEL    8552--GOTO     8597--GOTO     8614--GOTO
FRAG$
      5418**DCL      7230--IMP-PTR  8126<<ASSIGN   8132>>IF       8132>>IF       8142>>IF       8142>>IF
      8148>>ASSIGN   8149>>ASSIGN   8168>>ASSIGN   8172>>ASSIGN   8177>>CALL     8202<<ASSIGN   8203>>ASSIGN
      8204>>ASSIGN   8208>>ASSIGN   8321<>CALL     8327>>ASSIGN   8329>>ASSIGN   8330>>ASSIGN   8332>>ASSIGN
      8340>>ASSIGN
FRAG_HDR
      7230**DCL      8148--ASSIGN   8177<>CALL     8203--ASSIGN   8332--ASSIGN
FRAG_HDR.DATA_BSIZE
      7239**DCL      8149>>ASSIGN   8204>>ASSIGN
FRAG_HDR.LINK$
      7255**DCL      8168>>ASSIGN   8172>>ASSIGN   8208>>ASSIGN
FRAG_HDR.SEQ
      7243**DCL      7244--REDEF    8132>>IF       8132>>IF       8142>>IF       8142>>IF       8340<<ASSIGN
      8514>>ASSIGN
FRAG_HDR.SEQ_SBIN
      7244**DCL      8327<<ASSIGN
FRAG_SZ
      5421**DCL      8149<<ASSIGN   8204<<ASSIGN   8319<<ASSIGN   8321<>CALL     8622<<ASSIGN   8630<<ASSIGN
      8633<>CALL     8686>>ASSIGN
GET_INIT_THDR_SZ
      8288**LABEL    8274--GOTO
GHS$SET_TMR
      5903**DCL-ENT  8164--CALL     8210--CALL     8656--CALL
GOT_INIT_THDR_SZ
      8300**LABEL    8259--GOTO
I$SEND_TO_HOST IN PROCEDURE I$SEND_TO_NET
      8678**ENTRY    8360--CALL
I$SEND_TO_NET
      8673**PROC     8151--CALL     8206--CALL     8637--CALL
ITEMP1
      5424**DCL      7931--IMP-SIZ  7932--IMP-SIZ  8402<<ASSIGN   8403>>IF       8410>>ASSIGN   8410>>ASSIGN
      8411>>ASSIGN   8414<<ASSIGN   8415>>IF       8422>>ASSIGN   8422>>ASSIGN   8423>>ASSIGN   8464<<ASSIGN
      8465>>ASSIGN   8465>>ASSIGN   8471<<ASSIGN   8472>>ASSIGN   8472>>ASSIGN   8478<<ASSIGN   8479>>ASSIGN
      8479>>ASSIGN
K$TPARM_CHKSUM
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:267  
      7649**DCL      8311--ASSIGN   8455--ASSIGN   8629--ASSIGN
K$TPARM_CLR_INFO
      7848**DCL      8246--ASSIGN
K$TPARM_CLR_INFO.PVALUE
      7865**DCL      7872--REDEF
K$TPARM_FCC
      7897**DCL      8546<<ASSIGN   8546>>ASSIGN   8547--ASSIGN
K$TPARM_OPTION
      7801**DCL      8302--ASSIGN   8438--ASSIGN
K$TPARM_OPTION.CHKSUM
      7818**DCL      8434<<ASSIGN
K$TPARM_OPTION.EXPD
      7824**DCL      8436<<ASSIGN
K$TPARM_TPDUSZ
      7725**DCL      8291--ASSIGN   8393--ASSIGN
K$TPARM_TPDUSZ.SIZE
      7738**DCL      8392<<ASSIGN
K$TPARM_TSAP_ID.CODE
      7768**DCL      8406<<ASSIGN   8407<<ASSIGN   8418<<ASSIGN   8419<<ASSIGN
K$TPARM_TSAP_ID.ID
      7779**DCL      8410--ASSIGN   8422--ASSIGN
K$TPARM_TSAP_ID.LEN
      7774**DCL      8409<<ASSIGN   8421<<ASSIGN
K$TPARM_VERSION
      7689**DCL      8305--ASSIGN   8351--ASSIGN   8446--ASSIGN
K$TPARM_VERSION.VERS
      7702**DCL      8350<<ASSIGN
K$TPDU
      5451**DCL      8527--ASSIGN   8564--ASSIGN   8591--ASSIGN   8608--ASSIGN
K$TPDU_AK
      7465**DCL      8536--ASSIGN
K$TPDU_AK_EXT
      7513**DCL      8530--ASSIGN
K$TPDU_CR_CC
      7314**DCL      8291--ASSIGN   8387--ASSIGN
K$TPDU_DC
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:268  
      7426**DCL      8592--ASSIGN
K$TPDU_DR
      7383**DCL      8243--ASSIGN   8345--ASSIGN
K$TPDU_EA
      7557**DCL      8573--ASSIGN
K$TPDU_EA_EXT
      7583**DCL      8567--ASSIGN
K$TPDU_ER
      7609**DCL      8609--ASSIGN
KN$LDCT$
      7934**DCL      8703>>ASSIGN
KN$NETPARM
      5275**DCL        24--PROC     8117--ENTRY    8193--ENTRY    8226--ENTRY    8230--ENTRY    8266--ENTRY
      8281--ENTRY    8497--ENTRY    8501--ENTRY    8560--ENTRY    8587--ENTRY    8604--ENTRY
KN$NETPARM.ERRCODE
      5382**DCL      8155<<ASSIGN   8323<<ASSIGN
KN$NETPARM.FPT$
      5394**DCL      8546>>ASSIGN
KN$NETPARM.LDCT$
      5276**DCL      8712>>ASSIGN
KN$NETPARM.MSG$
      5282**DCL      5287--REDEF    8479>>ASSIGN
KN$NETPARM.MSGSZ
      5293**DCL      8237<<ASSIGN   8288<<ASSIGN   8314>>ASSIGN   8476>>IF       8478>>ASSIGN
KN$NETPARM.NHDR$
      5334**DCL      5335--REDEF
KN$NETPARM.NODE
      5377**DCL      8120<<ASSIGN   8196<<ASSIGN   8236<<ASSIGN   8359<<ASSIGN   8551<<ASSIGN   8687>>ASSIGN
KN$NETPARM.SHDR$
      5312**DCL      5313--REDEF    8465>>ASSIGN
KN$NETPARM.SHDRSZ
      5318**DCL      8239<<ASSIGN   8286<<ASSIGN   8314>>ASSIGN   8462>>IF       8464>>ASSIGN   8466>>ASSIGN
KN$NETPARM.TCTX$
      5399**DCL      8119>>ASSIGN   8195>>ASSIGN   8235>>ASSIGN   8267>>ASSIGN   8282>>ASSIGN   8505>>ASSIGN
      8561>>ASSIGN   8588>>ASSIGN   8605>>ASSIGN
KN$NETPARM.THDR$
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:269  
      5323**DCL      5324--REDEF
KN$NETPARM.UHDR$
      5298**DCL      5299--REDEF    8472>>ASSIGN
KN$NETPARM.UHDRSZ
      5307**DCL      8238<<ASSIGN   8287<<ASSIGN   8314>>ASSIGN   8469>>IF       8471>>ASSIGN   8473>>ASSIGN
KN$TCTX
      5915**DCL      8177<>CALL     8241<>CALL     8321<>CALL
KN$TCTX.CLASS
      5981**DCL      8128>>IF       8159>>IF       8170>>IF       8183>>IF       8245>>IF       8245>>IF
      8271>>IF       8300>>IF       8347>>IF       8347>>IF       8374>>ASSIGN   8377>>IF       8426>>IF
      8508>>IF       8655>>IF
KN$TCTX.DST_NSAP
      6770**DCL      8698--ASSIGN
KN$TCTX.DST_NSAP.ADDRESS_N
      6800**DCL      6801--REDEF
KN$TCTX.DST_REF
      5941**DCL      8335>>ASSIGN   8625>>ASSIGN
KN$TCTX.DST_TSAP.LEN
      6664**DCL      8294>>IF       8295>>ASSIGN   8402>>ASSIGN   8409>>ASSIGN
KN$TCTX.DST_TSAP.TSAP
      6672**DCL      8410--ASSIGN
KN$TCTX.ERR
      6172**DCL      8251>>IF       8252<<ASSIGN   8350>>ASSIGN
KN$TCTX.HOST_NODE
      5964**DCL      8359>>ASSIGN
KN$TCTX.HOST_REF
      5957**DCL      8356>>IF       8358>>ASSIGN
KN$TCTX.LDCTX#
      5935**DCL      8703>>ASSIGN
KN$TCTX.LOST_TPDU
      6100**DCL      8513>>IF       8520>>IF       8657>>IF
KN$TCTX.MAXSEQ
      6019**DCL      8518>>ASSIGN   8660>>IF       8661>>ASSIGN
KN$TCTX.NODE
      5922**DCL      5935--REDEF    8120>>ASSIGN   8196>>ASSIGN   8236>>ASSIGN   8551>>ASSIGN
KN$TCTX.OPTION.CHKSUM
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:270  
      6078**DCL      8270>>ASSIGN   8272<<ASSIGN   8284>>ASSIGN   8310>>IF       8452>>IF       8482>>IF
      8485<<ASSIGN   8627>>IF
KN$TCTX.OPTION.CLASS_2_FLOW
      6053**DCL      8128>>IF       8508>>IF
KN$TCTX.OPTION.CONS
      6034**DCL      8701>>IF
KN$TCTX.OPTION.EXPEDITED
      6066**DCL      8435>>IF
KN$TCTX.OPTION.EXTENDED
      6058**DCL      8375>>ASSIGN   8528>>IF       8565>>IF
KN$TCTX.OPTION.OSI
      6043**DCL      8316>>IF       8620>>IF       8694>>IF
KN$TCTX.OPTION.TRACE
      6029**DCL      8719>>IF
KN$TCTX.RCV_WINDOW_SZ
      5987**DCL      8380>>IF       8382>>ASSIGN   8522>>IF       8524>>ASSIGN
KN$TCTX.REASON
      6166**DCL      8249>>IF       8252>>ASSIGN   8253<<ASSIGN   8342>>ASSIGN
KN$TCTX.RECV_EXPD
      6313**DCL      8568>>ASSIGN   8574>>ASSIGN
KN$TCTX.RECV_HEAD$
      6321**DCL      8514>>ASSIGN
KN$TCTX.RECV_LWE
      6283**DCL      8514>>ASSIGN   8515>>ASSIGN   8532>>ASSIGN   8538>>ASSIGN   8659>>ASSIGN
KN$TCTX.RECV_NEXT
      6302**DCL      8515>>ASSIGN
KN$TCTX.RECV_UWE
      6293**DCL      8659<<ASSIGN   8660>>IF       8661<<ASSIGN   8661>>ASSIGN
KN$TCTX.SEND_EHEAD$
      6401**DCL      8122>>DOWHILE  8198>>IF
KN$TCTX.SEND_ENOTSENT$
      6414**DCL      8198>>IF       8198>>IF       8202>>ASSIGN   8208<<ASSIGN
KN$TCTX.SEND_HEAD$
      6376**DCL      8161>>IF       8172<<ASSIGN   8174>>IF       8329<<ASSIGN
KN$TCTX.SEND_LWE
      6343**DCL      8130>>IF       8132>>IF       8142>>IF
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:271  
KN$TCTX.SEND_NOTSENT$
      6393**DCL      8122>>DOWHILE  8126>>ASSIGN   8161>>IF       8168<<ASSIGN
KN$TCTX.SEND_RETRY_COUNT
      6459**DCL      8163<<ASSIGN   8209<<ASSIGN
KN$TCTX.SEND_TAIL$
      6384**DCL      8175<<ASSIGN   8330<<ASSIGN
KN$TCTX.SEND_UWE
      6349**DCL      8130>>IF       8132>>IF       8142>>IF
KN$TCTX.SERR.DT_NWINDOW
      6201**DCL      8136<<ASSIGN   8136>>ASSIGN
KN$TCTX.SERR.NOQ
      6207**DCL      8154<<ASSIGN   8154>>ASSIGN
KN$TCTX.SRC_NSAP
      6706**DCL      8697--ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      6736**DCL      6737--REDEF
KN$TCTX.SRC_REF
      5949**DCL      8334>>ASSIGN   8594>>ASSIGN   8684>>ASSIGN
KN$TCTX.SRC_TSAP.LEN
      6620**DCL      8297>>IF       8298>>ASSIGN   8414>>ASSIGN   8421>>ASSIGN
KN$TCTX.SRC_TSAP.TSAP
      6628**DCL      8422--ASSIGN
KN$TCTX.STATE
      5916**DCL      8122>>DOWHILE  8198>>IF
KN$TCTX.TMR_INACTIVITY.ARG
      6556**DCL      6557--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      6586**DCL      6587--REDEF
KN$TCTX.TMR_RETRAN
      6495**DCL      8164<>CALL     8210<>CALL
KN$TCTX.TMR_RETRAN.ARG
      6497**DCL      6498--REDEF
KN$TCTX.TMR_WINDOW
      6524**DCL      8656<>CALL
KN$TCTX.TMR_WINDOW.ARG
      6526**DCL      6527--REDEF
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:272  
KN$TCTX.TMR_WINDOW.INTERVAL
      6527**DCL      8653<<ASSIGN   8654<<ASSIGN
KN$TCTX.TPDUSZ_PARM
      6017**DCL      8392>>ASSIGN
KN@NETPARM
      5754**DCL      8682<<ASSIGN   8704<>CALL     8713<>CALL     8729<>CALL     8733<>CALL
KN@NETPARM.DST_ADDR$
      5888**DCL      8698<<ASSIGN
KN@NETPARM.FUNCTION
      5849**DCL      8689<<ASSIGN   8696<<ASSIGN
KN@NETPARM.LDCT$
      5755**DCL      8703<<ASSIGN   8712<<ASSIGN
KN@NETPARM.MSG$
      5761**DCL      5766--REDEF
KN@NETPARM.NHDR$
      5813**DCL      5814--REDEF
KN@NETPARM.NODE
      5856**DCL      8687<<ASSIGN
KN@NETPARM.SHDR$
      5791**DCL      5792--REDEF
KN@NETPARM.SRC_ADDR$
      5883**DCL      8697<<ASSIGN
KN@NETPARM.TCTX$
      5878**DCL      8683<<ASSIGN
KN@NETPARM.TCTX_ID
      5824**DCL      8684<<ASSIGN
KN@NETPARM.THDR$
      5802**DCL      5803--REDEF    8685<<ASSIGN
KN@NETPARM.THDRSZ
      5808**DCL      8686<<ASSIGN
KN@NETPARM.UHDR$
      5777**DCL      5778--REDEF
KNA$CALC_CHKSUM
      5900**DCL-ENT  8633--CALL
KNH$SEND
      5902**DCL-ENT  8704--CALL
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:273  
KNN$SEND
      5901**DCL-ENT  8713--CALL
KNT$GET_SBUF
      5896**DCL-ENT  8321--CALL
KNT$RELBUF
      5897**DCL-ENT  8177--CALL
KNT$RLS_CHAIN
      5898**DCL-ENT  8241--CALL
KNT$TR_FHOST
      5906**DCL-ENT  8729--CALL
KNT$TR_SEND
      5905**DCL-ENT  8733--CALL
KNT$UNQ_BUFFER
      5899**DCL-ENT  8184--CALL
KNT_FCCWINDOW_TIMER
      8092**DCL      8654>>ASSIGN
KNT_SCODE
      8094**DCL      8510<>CALL
KNT_WAIT_COUNT
      8090**DCL      8183>>IF
KNT_WINDOW_TIMER
      8091**DCL      8653>>ASSIGN
KN_DCT$$
      8093**DCL      7934--IMP-PTR  8703>>ASSIGN
KN_NETPARM_INIT
      7949**DCL      8682>>ASSIGN
KN_NETPARM_INIT.MSG$
      7956**DCL      7961--REDEF
KN_NETPARM_INIT.NHDR$
      8008**DCL      8009--REDEF
KN_NETPARM_INIT.SHDR$
      7986**DCL      7987--REDEF
KN_NETPARM_INIT.THDR$
      7997**DCL      7998--REDEF
KN_NETPARM_INIT.UHDR$
      7972**DCL      7973--REDEF
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:274  
K_CKSUM_INIT
      8089**DCL      8454--ASSIGN   8631--ASSIGN
LOG_IT IN PROCEDURE I$SEND_TO_NET
      8725**LABEL    8720--GOTO
LOG_SEND IN PROCEDURE I$SEND_TO_NET
      8733**LABEL    8728--GOTO
NOQ_4BUFFERED
      8154**LABEL    8206--CALLALT  8642--GOTO
NO_SEND_WINDOW
      8136**LABEL    8144--GOTO
PARM_HDRS.CLR_INFO
      8105**DCL      8349--ASSIGN
PARM_HDRS.OPTION
      8102**DCL      8431--ASSIGN
PARM_HDRS.SIZE
      8100**DCL      8391--ASSIGN
PARM_HDRS.VERS
      8097**DCL      8445--ASSIGN
SAVE_CHKSUM
      5431**DCL      8270<<ASSIGN   8284<<ASSIGN   8433>>IF       8485>>ASSIGN
SCREECH
      5907**DCL-ENT  8510--CALL
SEND_DIRECTION
      5429**DCL      8675<<ASSIGN   8679<<ASSIGN   8691>>IF
SEND_TO_HOST IN PROCEDURE I$SEND_TO_NET
      8712**LABEL    8692--GOTO
SEND_TO_NET
      8631**LABEL    8489--GOTO
SET_ACK_NODE
      8543**LABEL    8580--GOTO
SKIP_CHKSUM
      8314**LABEL    8258--GOTO
SPDU_SZ
      5423**DCL      8314<<ASSIGN   8319>>ASSIGN
THDR_SZ
      5422**DCL      8243<<ASSIGN   8246<<ASSIGN   8246>>ASSIGN   8291<<ASSIGN   8295<<ASSIGN   8295>>ASSIGN
PL6.E3A0      #004=KNT$SEND_TPDU File=KNT$SEND.:E05TSI                           WED 07/30/97 01:13 Page:275  
      8298<<ASSIGN   8298>>ASSIGN   8302<<ASSIGN   8302>>ASSIGN   8305<<ASSIGN   8305>>ASSIGN   8311<<ASSIGN
      8311>>ASSIGN   8317<<ASSIGN   8317>>ASSIGN   8319>>ASSIGN   8333>>ASSIGN
TPDU$
      5419**DCL      6834--IMP-PTR  6894--IMP-PTR  6938--IMP-PTR  6986--IMP-PTR  7025--IMP-PTR  7068--IMP-PTR
      7137--IMP-PTR  7163--IMP-PTR  7189--IMP-PTR  8148<<ASSIGN   8203<<ASSIGN   8332<<ASSIGN   8333>>ASSIGN
      8334>>ASSIGN   8335>>ASSIGN   8336>>ASSIGN   8341>>ASSIGN   8342>>ASSIGN   8343>>ASSIGN   8345>>ASSIGN
      8358>>ASSIGN   8372>>ASSIGN   8374>>ASSIGN   8375>>ASSIGN   8378>>ASSIGN   8381>>ASSIGN   8382>>ASSIGN
      8387>>ASSIGN   8456>>ASSIGN   8527<<ASSIGN   8530>>ASSIGN   8531>>ASSIGN   8532>>ASSIGN   8533>>ASSIGN
      8536>>ASSIGN   8537>>ASSIGN   8538>>ASSIGN   8541>>ASSIGN   8545>>ASSIGN   8545>>ASSIGN   8547>>ASSIGN
      8547>>ASSIGN   8564<<ASSIGN   8567>>ASSIGN   8568>>ASSIGN   8569>>ASSIGN   8573>>ASSIGN   8574>>ASSIGN
      8577>>ASSIGN   8578>>ASSIGN   8591<<ASSIGN   8592>>ASSIGN   8593>>ASSIGN   8594>>ASSIGN   8595>>ASSIGN
      8608<<ASSIGN   8609>>ASSIGN   8610>>ASSIGN   8611>>ASSIGN   8612>>ASSIGN   8618>>ASSIGN   8621>>ASSIGN
      8621>>ASSIGN   8622>>ASSIGN   8625>>ASSIGN   8629>>ASSIGN   8629>>ASSIGN   8630>>ASSIGN   8631>>ASSIGN
      8633<>CALL     8685>>ASSIGN
TPDU_AK_SWITCH
      5428**DCL      8498<<ASSIGN   8502<<ASSIGN   8543>>IF       8652>>IF
TPDU_DR_SWITCH
      5427**DCL      8227<<ASSIGN   8231<<ASSIGN   8257>>IF       8354>>IF       8727>>IF

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:276  
     1764        1        /*M* KNT$SEND_4HOST - Send session messages to network.   */
     1765        2        /*T***********************************************************/
     1766        3        /*T*                                                         */
     1767        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1768        5        /*T*                                                         */
     1769        6        /*T***********************************************************/
     1770        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
     1771        8
     1772        9        KNT$SEND_4HOST: PROC(KN$NETPARM) ALTRET;
     1773       10
     1774       11        %INCLUDE GH_GATE_M;
     1775       52        %INCLUDE GH_SCHD_M;
     1776      196        %INCLUDE K_ADDRESS_M;
     1777      699        %INCLUDE K_INTERFACE_M;
     1778     1108        %INCLUDE K_TRANSPORT_E;
     1779     1433        %INCLUDE K_TRANSPORT_M;
     1780     3217        %INCLUDE K_QDPHDRS_M;
     1781     4099        %INCLUDE KN_DATA_M;
     1782     5885        %INCLUDE KNH_MACRO_C;
     1783     6168
     1784     6169                                                /* Input parameters                   */
     1785     6170        %KN$NETPARM;
     1786     6323                                                /* Auto Storage                       */
     1787     6324    1   DCL ITEMP1 SBIN;
     1788     6325    1   DCL CTX$ PTR;
     1789     6326    1   DCL FRAG$ PTR;
     1790     6327    1   DCL THDRSZ UBIN;
     1791     6328    1   DCL ERRNUM UBIN;
     1792     6329
     1793     6330        %K$TPDU_DR (NAME=K$TPDU_DR, STCLASS=AUTO);
     1794     6373        %K$TPDU_CP6 (NAME=K$TPDU_CP6_FLOW, STCLASS=AUTO, LAST=",");
     1795     6408           %K$TPARM_FLOW_CONTROL (NAME=P, LVL=2, STCLASS=AUTO, LAST=";");
     1796     6444        %K$TPDU_UN (NAME=K$TPDU_UN, STCLASS=AUTO);
     1797     6483
     1798     6484
     1799     6485                                                /* External Procedures                */
     1800     6486    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:277  
     1801     6487    1   DCL KNH$SEND ENTRY(1) ALTRET;
     1802     6488    1   DCL KNN$SEND ENTRY(1) ALTRET;
     1803     6489    1   DCL KNT$GET_SBUF ENTRY(3) ALTRET;
     1804     6490    1   DCL KNT$RELBUF ENTRY(2);
     1805     6491    1   DCL KNT$SEND_HOST_DATA ENTRY(1) ALTRET;
     1806     6492    1   DCL KNT$SEND_CR_4HOST ENTRY(1) ALTRET;
     1807     6493    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
     1808     6494    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
     1809     6495    1   DCL KNT$DSESSION ENTRY(1) ALTRET;
     1810     6496    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1811     6497    1   DCL KNT$SET_REFWAIT ENTRY(1);
     1812     6498    1   DCL KNT$TR_ERROR ENTRY(1);
     1813     6499    1   DCL KNT$TR_FHOST ENTRY(1);
     1814     6500    1   DCL KNT$TR_RCVH ENTRY(1);
     1815     6501    1   DCL KNT$TR_NCR ENTRY(1);
     1816     6502    1   DCL KNT$TR_SEND ENTRY(1);
     1817     6503    1   DCL GHS$SET_TMR ENTRY(1);
     1818     6504    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1819     6505    1   DCL SCREECH ENTRY(1);
     1820     6506
     1821     6507                                                /* External Data                      */
     1822     6508    1   DCL KN_TCTX_MAX# UBIN SYMREF;
     1823     6509    1   DCL KN_TCTX$$ PTR SYMREF;
     1824     6510    1   DCL KN_DCT$$ PTR SYMREF;
     1825     6511    1   DCL KNT_ERROR_SCREECH UBIN SYMREF;
     1826     6512    1   DCL KNT_SCODE UBIN(32) SYMREF;
     1827     6513
     1828     6514                                                /* Based Data                         */
     1829     6515        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     1830     7422    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     1831     7423    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
     1832     7424
     1833     7425        %KN$LDCT (NAME=KN$LDCT, STCLASS="BASED(KN$NETPARM.LDCT$)");
     1834     7670
     1835     7671        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS="BASED(FRAG$)");
     1836     7754
     1837     7755        %K$TPDU_CR_CC(NAME=B$TPDU_CR,STCLASS="BASED(KN$NETPARM.THDR_C$)");
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:278  
     1838     7824        %K$TPDU_DR (NAME=B$TPDU_DR, STCLASS="BASED(KN$NETPARM.THDR_C$)");
     1839     7867        %K$TPDU_DT(NAME=B$TPDU_DT, STCLASS="BASED(KN$NETPARM.THDR_C$)");
     1840     7917
     1841     7918        %K$TPDU_CP6 (NAME=B$TPDU_CP6, STCLASS="BASED(KN$NETPARM.THDR$)", LAST=",");
     1842     7953            %K$TPARM_SSN_CRDT (NAME=P, STCLASS=BASED, LVL=2);
     1843     7992
     1844     7993
     1845     7994        %K$TPDU_CP6 (NAME=B$TPDU_CP6_OPT, STCLASS="BASED(KN$NETPARM.THDR$)", LAST=",");
     1846     8029            %K$TPARM_CP6_OPTIONS (NAME=P, STCLASS=BASED, LVL=2);
     1847     8074
     1848     8075
     1849     8076        %K$NQDP_HDR (NAME=B$NHDR, STCLASS="BASED(KN$NETPARM.NHDR$)");
     1850     8153
     1851     8154
     1852     8155    1   DCL B$TPDU CHAR(THDRSZ) BASED CALIGNED;
     1853     8156        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:279  
     1854     8157        /*F* NAME: KNT$SEND_4HOST
     1855     8158
     1856     8159        This routine is entered when Network has just received a message from
     1857     8160        an adjacent host node and the destination of the message is not this
     1858     8161        fep node.  KNN$RECV calls this routine with the following parameters:
     1859     8162        .fif
     1860     8163        }
     1861     8164        }    KN$NETPARM.FUNCTION
     1862     8165        }                - Contains a value to indicate if we have received
     1863     8166        }                  an OSI Session or CP-6 Session message:
     1864     8167        }                    KN_FCN_DATA - CP-6
     1865     8168        }                    K_NDATA      - OSI
     1866     8169        }
     1867     8170        }    KN$NETPARM.THDR$
     1868     8171        }                - Contains the address within the message of the first
     1869     8172        }                  byte of the TPDU.
     1870     8173        }
     1871     8174        }    KN$NETPARM.THDRSZ
     1872     8175        }                - Contains the byte size of the TPDU.
     1873     8176        }
     1874     8177        }    KN$NETPARM.NHDR$
     1875     8178        }                - Contains the address of the network header.
     1876     8179        }
     1877     8180        }    KN$NETPARM.LDCT$
     1878     8181        }                - Contains the address of the remote fep link LDCT.
     1879     8182        }
     1880     8183        }    KN$NETPARM.SLDCT$
     1881     8184        }                - Contains the address of the host link LDCT.
     1882     8185        .fin
     1883     8186
     1884     8187        The action to be taken is dependent on the type of TPDU that has been
     1885     8188        received.  This will be one of the following:
     1886     8189        .fif
     1887     8190        }    K_TPDU_TYPE_DT  - Data               - forward by calling KNT$SEND
     1888     8191        }    K_TPDU_TYPE_ED  - Expedited Data     - forward by calling KNT$SEND
     1889     8192        }    K_TPDU_TYPE_CR  - Connect Request    - forward by returning
     1890     8193        }    K_TPDU_TYPE_CC  - Connect Confirm    - forward by returning
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:280  
     1891     8194        }    K_TPDU_TYPE_DR  - Disconnect Request
     1892     8195        .fin
     1893     8196
     1894     8197        There are three possible ways to exit:
     1895     8198        .fif
     1896     8199        }    RETURN         KNN$RECV will call KNH$SEND to forward the msg
     1897     8200        }
     1898     8201        }    ALTRETURN      with NETPARM.ERRCODE zero
     1899     8202        }                   KNN$RECV will simply return - message on COUPLER's
     1900     8203        }                                                 SQ is complete.
     1901     8204        }    ALTRETURN      with NETPARM.ERRCODE non-zero
     1902     8205        }                   KNN$RECV will altreturn - message on COUPLER's SQ
     1903     8206        }                                             will remain.
     1904     8207        .fin
     1905     8208        */
     1906     8209        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:281  
     1907     8210    1      CTX$ = KN$TCTX$(B$TPDU_CR.DST_REF);
     1908     8211
     1909     8212    1      KN$NETPARM.TCTX$ = CTX$;
     1910     8213
     1911     8214
     1912     8215        /*   KNT$SEND_4HOST   -   TPDU_DT and TPDU_ED
     1913     8216
     1914     8217           When the host is forwarding data, we make this look as if we had
     1915     8218           been called by local session by stiping off the transport header
     1916     8219           that was built on the host and setting netparn.shdr$ and .shdrsz
     1917     8220           to frame the spdu.
     1918     8221
     1919     8222           Entering the KNT$SEND routine will take care of busting it into
     1920     8223           smaller tpdus if necessary, buffering the composed tpdus, building
     1921     8224           the appropriate transport header, and forwarding the message by
     1922     8225           calling KNN$SEND or KNH$SEND.
     1923     8226
     1924     8227           If we have buffered twice the window size, we send a flow_stop
     1925     8228           tpdu to host transport.
     1926     8229
     1927     8230           We then altreturn to KNN$RECV, so we don't forward the message
     1928     8231           twice.
     1929     8232        */
     1930     8233
     1931     8234    1      IF B$TPDU_CR.TYPE = %K_TPDU_TYPE_DT
     1932     8235    2      THEN DO;
     1933     8236
     1934     8237    2   STRIP_OFF_THDR: ;
     1935     8238    2           IF KN$TCTX.OPTION.TRACE
     1936     8239    2           THEN CALL KNT$TR_RCVH(KN$NETPARM);
     1937     8240
     1938     8241    2           KN$NETPARM.NODE = KN$TCTX.NODE;
     1939     8242    2           KN$NETPARM.TCTX_ID = B$TPDU_DT.DST_REF;
     1940     8243
     1941     8244    2           THDRSZ = B$TPDU_DT.LI +1;
     1942     8245    2           KN$NETPARM.SHDR_C$ = PINCRC(KN$NETPARM.THDR_C$, THDRSZ);
     1943     8246    2           KN$NETPARM.SHDRSZ = KN$NETPARM.THDRSZ - THDRSZ;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:282  
     1944     8247    2           KN$NETPARM.UHDR$ = ADDR(NIL);
     1945     8248    2           KN$NETPARM.MSG$ = ADDR(NIL);
     1946     8249
     1947     8250    2           CALL KNT$SEND_HOST_DATA(KN$NETPARM)
     1948     8251    3           WHENALTRETURN DO;
     1949     8252    3                IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ2
     1950     8253    3                THEN ALTRETURN;       /*couldn't get buf - leave on coupler cq   */
     1951     8254
     1952     8255    3                IF KN$TCTX.FLOW_CONTROLLED /*buffer limit exceeded*/
     1953     8256    3                  AND KN$TCTX.OPTION.OSI
     1954     8257    4                THEN DO;
     1955     8258    4                     K$TPDU_CP6_FLOW = '0'B;
     1956     8259    4                     K$TPDU_CP6_FLOW.P.CODE = %K_TPARM_FLOW_STOP;
     1957     8260    4                     CALL I$RETURN_TPDU_CP6;
     1958     8261    4                     END;
     1959     8262
     1960     8263        /*           KN$TCTX.FLOW_CONTROLLED = '0'B; reset when ak recvd */
     1961     8264    3                KN$NETPARM.ERRCODE = 0;    /*so knn won't altret to knh$scan     */
     1962     8265    3                END/*altret from knt$send*/;
     1963     8266
     1964     8267    2           ALTRETURN;                      /*so knn doesn't also forward message */
     1965     8268    2           END/*do if tpdu_dt*/;
     1966     8269
     1967     8270
     1968     8271
     1969     8272    1      IF B$TPDU_CR.TYPE = %K_TPDU_TYPE_ED
     1970     8273    2      THEN DO;
     1971     8274    2           KN$NETPARM.FUNCTION = %K_TEXPD_DATA_REQ;
     1972     8275    2           GOTO STRIP_OFF_THDR;
     1973     8276    2           END;
     1974     8277
     1975     8278
     1976     8279        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:283  
     1977     8280    1      IF B$TPDU_CR.TYPE ~= %K_TPDU_TYPE_CP6
     1978     8281    1      THEN CALL KNT$TR_RCVH(KN$NETPARM);
     1979     8282
     1980     8283    1      THDRSZ = KN$NETPARM.THDRSZ;
     1981     8284
     1982     8285    2      DO CASE ( B$TPDU_CR.TYPE );
     1983     8286
     1984     8287
     1985     8288        /*   KNT$SEND_4HOST   -   TPDU_CR
     1986     8289
     1987     8290           If the TPDU is a Connect Request, a secondary Transport Context
     1988     8291           Block is allocated and initialized by an entry into KNT$RECV.
     1989     8292
     1990     8293           If KNT$RECV finds errors, KNT$RECV will send a TPDU_DR back to the
     1991     8294           host and altreturn to here, where we will in turn altreturn to
     1992     8295           KNN$RECV to avoid sending the tpdu on.
     1993     8296
     1994     8297           On a normal return, the state of the TCTX is WFNC is mode is CONS;
     1995     8298           state is WFCC if mode is CLNS.
     1996     8299        */
     1997     8300
     1998     8301    2       CASE( %K_TPDU_TYPE_CR);
     1999     8302    2         CALL KNT$SEND_CR_4HOST(KN$NETPARM)
     2000     8303    3         WHENALTRETURN DO;
     2001     8304    3              GOTO MSG_COMPLETE;
     2002     8305    3              END;
     2003     8306
     2004     8307    2         CTX$ = KN$NETPARM.TCTX$;
     2005     8308
     2006     8309        /* Make sure we can get a buffer before continuing.
     2007     8310        */
     2008     8311    2         CALL KNT$GET_SBUF(THDRSZ,FRAG$,KN$TCTX)
     2009     8312    3         WHENALTRETURN DO;
     2010     8313    3              KN$TCTX.ERR = %K_ERROR_NOMEM;
     2011     8314    3   ABORT_CONNECT:
     2012     8315    3              CALL KNT$SEND_DR_HOST(KN$NETPARM);
     2013     8316
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:284  
     2014     8317    3              CALL KNT$SET_REFWAIT(KN$TCTX);
     2015     8318
     2016     8319    3   MSG_COMPLETE:
     2017     8320    3              KN$NETPARM.ERRCODE = 0;
     2018     8321    3              ALTRETURN;                   /*to knn$recv to avoid sending twice  */
     2019     8322    3              END;
     2020     8323
     2021     8324        /* If we are to use Connection Oriented Network, try to establish a virtual
     2022     8325           circuit by calling KNN$SEND with K_NCONNECT_REQ function.  If successful,
     2023     8326           remember the index for the LDCT that was allocated for the virtual
     2024     8327           circuit in the transport context.
     2025     8328        */
     2026     8329    2         IF KN$TCTX.OPTION.CONS
     2027     8330    3         THEN DO;
     2028     8331    3              KN$NETPARM.FLAGS.CONS = '1'B;
     2029     8332    3              KN$NETPARM.FUNCTION = %K_NCONNECT_REQ;
     2030     8333    3              KN$NETPARM.LDCT$ = ADDR(NIL);
     2031     8334
     2032     8335    3              KN$NETPARM.MSGSZ = SIZEC(K$TPDU_UN);
     2033     8336    3              KN$NETPARM.MSGW$ = ADDR(K$TPDU_UN);
     2034     8337    3              K$TPDU_UN.LI = SIZEC(K$TPDU_UN) -1;
     2035     8338    3              K$TPDU_UN.TYPE = %K_TPDU_TYPE_UN;
     2036     8339    3              K$TPDU_UN.PRT_ID = %K_UN_PRTID_VC;
     2037     8340    3              K$TPDU_UN.SHARE = 0;
     2038     8341
     2039     8342    3              CALL KNT$TR_NCR(KN$NETPARM);
     2040     8343
     2041     8344    3              CALL KNN$SEND(KN$NETPARM)
     2042     8345    4              WHENALTRETURN DO;
     2043     8346    4                   KN$TCTX.ERR = KN$NETPARM.ERRCODE; /* kn_err_norte, knt_no_ldct*/
     2044     8347    4                   CALL KNT$RELBUF (FRAG$->FRAG_HDR, KN$TCTX);
     2045     8348    4                   GOTO ABORT_CONNECT;
     2046     8349    4                   END;
     2047     8350
     2048     8351    3              KN$NETPARM.LDCT$->KN$LDCT.RLCID.TCTX# = KN$TCTX.SRC_REF;
     2049     8352    3              KN$TCTX.LDCTX# = KN$NETPARM.LDCT$->KN$LDCT.LDCTX;
     2050     8353    3              END/*do if cons*/;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:285  
     2051     8354
     2052     8355
     2053     8356        /* Store the TPDU_CR or TPDU_CC into the pre-allocated buffer.
     2054     8357        */
     2055     8358    2   BUFFER_REQUEST: ;
     2056     8359    2         FRAG_HDR.SEQ_SBIN = -1;
     2057     8360
     2058     8361    2         KN$TCTX.SEND_HEAD$ = FRAG$;
     2059     8362    2         KN$TCTX.SEND_TAIL$ = FRAG$;
     2060     8363
     2061     8364    2         FRAG$ = PINCRW(FRAG$, SIZEW(FRAG_HDR) );
     2062     8365    2         FRAG$->B$TPDU = KN$NETPARM.THDR_C$->B$TPDU;
     2063     8366
     2064     8367        /* If class 4, start the retransmission timer.
     2065     8368        */
     2066     8369    2         IF KN$TCTX.CLASS = 4
     2067     8370    3         THEN DO;
     2068     8371    3              CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);
     2069     8372    3              END;
     2070     8373
     2071     8374        /* If Connectionless network, return to network to forward the tpdu.
     2072     8375           If Connection oriented, altreturn to network to avoid sending the tpdu_cr.
     2073     8376           It will eventually be sent when we get a K_NCONNECT_CFM.
     2074     8377        */
     2075     8378    2         IF KN$TCTX.OPTION.CONS
     2076     8379    2         THEN GOTO MSG_COMPLETE/*to knn$recv to avoid sending twice*/;
     2077     8380    2         ELSE RETURN/*to knn$recv to forward host's tpdu_cr*/;
     2078     8381
     2079     8382        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:286  
     2080     8383
     2081     8384        /*   KNT$SEND_4HOST   -   TPDU_CC
     2082     8385
     2083     8386           If the TPDU is a Connect Confirm, the secondary Transport Context
     2084     8387           Block is updated by an entry into KNT$RECV.
     2085     8388           If using Connection Oriented Network, we forward it by calling KNH$SEND.
     2086     8389        */
     2087     8390    2       CASE(%K_TPDU_TYPE_CC);
     2088     8391    2         IF KN$TCTX.STATE ~= %K_TSTATE_WFTRESP
     2089     8392    3         THEN DO;
     2090     8393    3              KN$NETPARM.THDRSZ = %K_ERROR_BAD_TSTATE;
     2091     8394    3              CALL KNT$TR_ERROR(KN$NETPARM);
     2092     8395
     2093     8396    3              K$TPDU_DR.LI = SIZEC(K$TPDU_DR) -1;
     2094     8397    3              K$TPDU_DR.TYPE = %K_TPDU_TYPE_DR;
     2095     8398    3              K$TPDU_DR.DST_REF = B$TPDU_CR.SRC_REF;
     2096     8399    3              K$TPDU_DR.SRC_REF = B$TPDU_CR.DST_REF;
     2097     8400    3              K$TPDU_DR.REASON = %K_ERROR_BAD_TSTATE;
     2098     8401
     2099     8402    3              KN$NETPARM.THDRSZ = SIZEC(K$TPDU_DR);
     2100     8403    3              KN$NETPARM.THDR$ = ADDR(K$TPDU_DR);
     2101     8404    3              KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
     2102     8405
     2103     8406    3              KN$NETPARM.MSGSZ = 0;
     2104     8407    3              KN$NETPARM.UHDRSZ = 0;
     2105     8408    3              KN$NETPARM.SHDRSZ = 0;
     2106     8409
     2107     8410    3              CALL KNN$SEND(KN$NETPARM);
     2108     8411
     2109     8412    3              GOTO MSG_COMPLETE;
     2110     8413    3              END;
     2111     8414
     2112     8415    2         KN$TCTX.HOST_REF = B$TPDU_CR.SRC_REF;
     2113     8416
     2114     8417    2         IF KN$TCTX.CLASS = 0
     2115     8418    2         THEN B$TPDU_CR.CDT = 0;
     2116     8419
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:287  
     2117     8420    3         ELSE DO;                          /*for classes 2 and 4                 */
     2118     8421    3              IF KN$TCTX.RCV_WINDOW_SZ > 15
     2119     8422    3              THEN B$TPDU_CR.CDT = 15;
     2120     8423    3              ELSE B$TPDU_CR.CDT = KN$TCTX.RCV_WINDOW_SZ;
     2121     8424
     2122     8425    3              IF KN$TCTX.CLASS = 4
     2123     8426    4              THEN DO;
     2124     8427    4                   CALL KNT$GET_SBUF(THDRSZ,FRAG$,KN$TCTX)
     2125     8428    5                   WHENALTRETURN DO;
     2126     8429    5                        KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;
     2127     8430    5                        ALTRETURN;         /*leave on coupler cq                 */
     2128     8431    5                        END;
     2129     8432    4                   END;
     2130     8433    3              END;
     2131     8434
     2132     8435    2         KN$TCTX.STATE = %K_TSTATE_WFCC;   /*fake out send_cr_4host*/
     2133     8436
     2134     8437    2         CALL KNT$SEND_CR_4HOST(KN$NETPARM)
     2135     8438    3         WHENALTRETURN DO;
     2136     8439    3              GOTO FORCE_SCREECH;
     2137     8440    3              END;
     2138     8441
     2139     8442    2         IF KN$TCTX.OPTION.CONS
     2140     8443    3         THEN DO;
     2141     8444    3              KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);
     2142     8445    3              KN$NETPARM.FUNCTION = %KN_FCN_DATA;
     2143     8446    3              KN$NETPARM.NHDR$ = ADDR(NIL);
     2144     8447    3              KN$NETPARM.NHDRSZ = 0;
     2145     8448    3              KN$NETPARM.SHDRSZ = 0;
     2146     8449    3              KN$NETPARM.UHDRSZ = 0;
     2147     8450    3              KN$NETPARM.MSGSZ = 0;
     2148     8451
     2149     8452    3              CALL KNT$TR_SEND(KN$NETPARM);
     2150     8453
     2151     8454    3              CALL KNH$SEND(KN$NETPARM)
     2152     8455    4              WHENALTRETURN DO;
     2153     8456    4                   ALTRETURN; /*N* change hdr so nw wont call again */
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:288  
     2154     8457    4                   END;
     2155     8458
     2156     8459    3              IF KN$TCTX.CLASS = 4
     2157     8460    3              THEN GOTO BUFFER_REQUEST;
     2158     8461    3              ALTRETURN;                   /*so knn doesn't also forward message */
     2159     8462    3              END/*cons   */;
     2160     8463
     2161     8464    2         IF KN$TCTX.OPTION.OSI
     2162     8465    3         THEN DO;
     2163     8466    3              KN$NETPARM.FUNCTION = %K_NDATA;
     2164     8467    3              KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);
     2165     8468    3              KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);
     2166     8469    3              END;
     2167     8470
     2168     8471    2         IF KN$TCTX.CLASS = 4
     2169     8472    2         THEN GOTO BUFFER_REQUEST;
     2170     8473    2         ELSE RETURN;                 /*to knn$recv to forward host's tpdu_cc*/
     2171     8474
     2172     8475        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:289  
     2173     8476
     2174     8477        /*   KNT$SEND_4HOST   -   TPDU_DR
     2175     8478
     2176     8479           If the TPDU is a Disconnect Request, OSI session on the host has
     2177     8480           requested T_DISCONNECT_REQ.
     2178     8481
     2179     8482           A call to the special entry point in KNT$RECV simply decodes
     2180     8483           the parmaeters and stores them in the TCTX.
     2181     8484        */
     2182     8485
     2183     8486    2       CASE(%K_TPDU_TYPE_DR);
     2184     8487
     2185     8488    2         IF B$TPDU_DR.DST_REF = 0
     2186     8489    3         THEN DO/*connection not yet open*/;
     2187     8490    4              DO ITEMP1 = 1 TO KN_TCTX_MAX#;
     2188     8491    4                   IF KN$TCTX$(ITEMP1) ~= ADDR(NIL)
     2189     8492    5                   THEN DO;
     2190     8493    5                        IF KN$TCTX$(ITEMP1)->KN$TCTX.HOST_NODE = B$NHDR.SOURCE_NODE -1
     2191     8494    5                          AND KN$TCTX$(ITEMP1)->KN$TCTX.HOST_REF = B$TPDU_DR.SRC_REF
     2192     8495    6                        THEN DO;
     2193     8496    6                             B$TPDU_DR.DST_REF = KN$TCTX$(ITEMP1)->KN$TCTX.SRC_REF;
     2194     8497    6                             CTX$ = KN$TCTX$(ITEMP1);
     2195     8498    6                             GOTO DECODE_TPDU_DR;
     2196     8499    6                             END;
     2197     8500    5                        END/*do if ctx$ not nil*/;
     2198     8501    4                   END/*do while*/;
     2199     8502    3              END/*do if .dst_ref 0*/;
     2200     8503
     2201     8504    2   DECODE_TPDU_DR:
     2202     8505    2         CALL KNT$SEND_CR_4HOST(KN$NETPARM)
     2203     8506    3         WHENALTRETURN DO;
     2204     8507    3              ALTRETURN;
     2205     8508    3              END;
     2206     8509
     2207     8510    2         IF KN$TCTX.STATE = %K_TSTATE_WFTRESP
     2208     8511    3         THEN DO;
     2209     8512    3              ITEMP1 = KN$TCTX.SRC_REF;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:290  
     2210     8513    3              KN$TCTX.SRC_REF = 0;
     2211     8514    3              CALL KNT$SEND_DR(KN$NETPARM);
     2212     8515    3              KN$TCTX.SRC_REF = ITEMP1;
     2213     8516    3              GOTO SET_REFWAIT;
     2214     8517    3              END;
     2215     8518
     2216     8519    2         IF KN$TCTX.STATE = %K_TSTATE_WFNC
     2217     8520    2         THEN GOTO TERM_VC;
     2218     8521
     2219     8522    2         IF KN$TCTX.STATE = %K_TSTATE_WFCC
     2220     8523    3         THEN DO;
     2221     8524    3              IF KN$TCTX.CLASS = 0
     2222     8525    4              THEN DO;
     2223     8526    4   SEND_TERM:
     2224     8527    4                   KN$NETPARM.UHDRSZ = 0;
     2225     8528    4                   KN$NETPARM.THDRSZ = 0;
     2226     8529    4                   KN$NETPARM.NHDRSZ = 0;
     2227     8530    4                   KN$NETPARM.FUNCTION = %KN_FCN_TERM;
     2228     8531    4                   KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);
     2229     8532
     2230     8533    4                   CALL KNH$SEND(KN$NETPARM)
     2231     8534    5                   WHENALTRETURN DO;
     2232     8535    5                        ERRNUM = %K_ERROR_NETWORK;
     2233     8536    5                        GOTO SCREECH_CHECK;
     2234     8537    5                        END;
     2235     8538
     2236     8539    4   SET_REFWAIT:
     2237     8540    4                   CALL KNT$SET_REFWAIT(KN$TCTX);
     2238     8541
     2239     8542    4                   ALTRETURN;              /*so knn$recv won't forward same msg*/
     2240     8543    4                   END/*do if class 0 */;
     2241     8544
     2242     8545    4              ELSE DO;
     2243     8546    4   TERM_VC:
     2244     8547    4                   KN$TCTX.STATE = %K_TSTATE_WBCL;
     2245     8548    4                   ALTRETURN;
     2246     8549    4                   END/*do if class 2 or 4*/;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:291  
     2247     8550    3              END/*do if WFCC*/;
     2248     8551
     2249     8552    2         IF KN$TCTX.CLASS = 0
     2250     8553    2         THEN GOTO SEND_TERM;
     2251     8554
     2252     8555    2         IF KN$TCTX.STATE = %K_TSTATE_OPEN
     2253     8556    3         THEN DO;
     2254     8557    3              IF KN$TCTX.CLASS = 2
     2255     8558    3              THEN GOTO SET_CLOSING;
     2256     8559
     2257     8560    3              IF KN$TCTX.CLASS = 4
     2258     8561    4              THEN DO;
     2259     8562    4                   CALL GHS$CANCEL_TMR (KN$TCTX.TMR_WINDOW);
     2260     8563    4                   CALL GHS$CANCEL_TMR (KN$TCTX.TMR_INACTIVITY);
     2261     8564    4   SET_RETRY:
     2262     8565    4                   KN$TCTX.SEND_RETRY_COUNT = 1;
     2263     8566    4                   CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);
     2264     8567    4                   END;
     2265     8568    3   SET_CLOSING:
     2266     8569    3              KN$TCTX.STATE = %K_TSTATE_CLOSING;
     2267     8570    3              CALL KNT$SEND_DR(KN$NETPARM);
     2268     8571    3              ALTRETURN;
     2269     8572    3              END;
     2270     8573
     2271     8574    2         IF (KN$TCTX.STATE = %K_TSTATE_AKWAIT) AND (KN$TCTX.CLASS = 4)
     2272     8575    2         THEN GOTO SET_RETRY;
     2273     8576    2         ELSE GOTO REPORT_BAD_TSTATE;
     2274     8577
     2275     8578
     2276     8579        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:292  
     2277     8580
     2278     8581        /*   KNT$SEND_4HOST   -   TPDU_CP6
     2279     8582
     2280     8583           If the TPDU is a CP-6 Control tpdu, the action to be taken is
     2281     8584           dependent on the appended parameter code.
     2282     8585
     2283     8586           Currently the only parameters defined are for passing initial transport
     2284     8587           options (trace is the only current one) and for passing host OSI
     2285     8588           session credit information.
     2286     8589        */
     2287     8590
     2288     8591    2       CASE(%K_TPDU_TYPE_CP6);
     2289     8592    3         DO CASE(B$TPDU_CP6.P.CODE);
     2290     8593
     2291     8594    3          CASE(%K_TPARM_CP6_OPTIONS);
     2292     8595    3            IF B$TPDU_CP6_OPT.LI ~= SIZEC(B$TPDU_CP6_OPT) -1
     2293     8596    3            THEN GOTO BAD_TPDU;
     2294     8597
     2295     8598    3            KN$TCTX.OPTION.TRACE = B$TPDU_CP6_OPT.P.OPTION.TRACE;
     2296     8599
     2297     8600    3            ALTRETURN;                     /*so knn doesn't forward message      */
     2298     8601
     2299     8602    3          CASE(%K_TPARM_SSN_CRDT);
     2300     8603    3            IF KN$TCTX.OPTION.OSI = '0'B
     2301     8604    3            THEN GOTO BAD_TPDU;
     2302     8605
     2303     8606    3            IF B$TPDU_CP6.LI ~= SIZEC(B$TPDU_CP6) -1
     2304     8607    3            THEN GOTO BAD_TPDU;
     2305     8608
     2306     8609    3            KN$TCTX.SSN_CRDT = KN$TCTX.SSN_CRDT + B$TPDU_CP6.P.CREDIT;
     2307     8610
     2308     8611    3            IF KN$TCTX.SSN_CRDT > 0
     2309     8612    4            THEN DO;
     2310     8613    4                 IF KN$TCTX.RECV_HEAD$ ~= ADDR(NIL)
     2311     8614    4                 THEN CALL KNT$DSESSION(KN$NETPARM);
     2312     8615    4                 END;
     2313     8616    4            ELSE DO;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:293  
     2314     8617    4                 K$TPDU_CP6_FLOW = '0'B;
     2315     8618    4                 K$TPDU_CP6_FLOW.P.CODE = %K_TPARM_SSN_CRDT_ACK;
     2316     8619    4                 CALL I$RETURN_TPDU_CP6;
     2317     8620    4                 END;
     2318     8621
     2319     8622    3            ALTRETURN;                     /*so knn doesn't forward message      */
     2320     8623
     2321     8624    3          CASE(ELSE);
     2322     8625    3            GOTO FORCE_SCREECH;
     2323     8626
     2324     8627
     2325     8628    3            END/*do case(b$tpdu_cp6.parm.code)*/;
     2326     8629
     2327     8630        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:294  
     2328     8631    2       CASE(ELSE);
     2329     8632    2   BAD_TPDU:
     2330     8633    2         ERRNUM = %K_ERROR_TPDU_TYPE;
     2331     8634    2         GOTO SCREECH_CHECK;
     2332     8635
     2333     8636    2         END/*do case(function)*/;
     2334     8637
     2335     8638
     2336     8639
     2337     8640    1   REPORT_BAD_TSTATE:
     2338     8641    1      ERRNUM = %K_ERROR_BAD_TSTATE;
     2339     8642
     2340     8643    1   SCREECH_CHECK:
     2341     8644    1      IF KNT_ERROR_SCREECH ~= 0
     2342     8645    2      THEN DO;
     2343     8646    2   FORCE_SCREECH:
     2344     8647    2           CALL SCREECH(KNT_SCODE);
     2345     8648    2           END;
     2346     8649
     2347     8650    1   LOG_ERR:
     2348     8651    1      KN$NETPARM.THDRSZ = ERRNUM;
     2349     8652    1      CALL KNT$TR_ERROR(KN$NETPARM);
     2350     8653
     2351     8654    1      ALTRETURN;
     2352     8655        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:295  
     2353     8656
     2354     8657        /*   I$RETURN_TPDU_CP6
     2355     8658
     2356     8659           This subroutine returns a TPDU_CP6 to the host to either flow
     2357     8660           stop host session or acknowledge a zero credit TPDU_CP6.
     2358     8661        */
     2359     8662
     2360     8663    1   I$RETURN_TPDU_CP6: PROC;
     2361     8664    2      K$TPDU_CP6_FLOW.LI = SIZEC(K$TPDU_CP6_FLOW) -1;
     2362     8665    2      K$TPDU_CP6_FLOW.TYPE = %K_TPDU_TYPE_CP6;
     2363     8666    2      K$TPDU_CP6_FLOW.DST_REF = KN$TCTX.HOST_REF;
     2364     8667
     2365     8668    2      KN$NETPARM.MSGSZ = 0;
     2366     8669    2      KN$NETPARM.UHDRSZ = 0;
     2367     8670    2      KN$NETPARM.SHDRSZ = 0;
     2368     8671    2      KN$NETPARM.THDRSZ = SIZEC(K$TPDU_CP6_FLOW);
     2369     8672    2      KN$NETPARM.THDR$ = ADDR(K$TPDU_CP6_FLOW);
     2370     8673    2      KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
     2371     8674
     2372     8675    2      CALL KNN$SEND(KN$NETPARM);
     2373     8676
     2374     8677    2      RETURN;
     2375     8678    2   END I$RETURN_TPDU_CP6;
     2376     8679
     2377     8680    1   END KNT$SEND_4HOST;

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:296  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_QDPHDRS_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SEND_4HOST.

   Procedure KNT$SEND_4HOST requires 1077 words for executable code.
   Procedure KNT$SEND_4HOST requires 30 words of local(AUTO) storage.

    No errors detected in file KNT$SEND.:E05TSI    .

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:297  

 Object Unit name= KNT$SEND_4HOST                             File name= KNT$SEND.:E05TOU
 UTS= JUL 30 '97 01:14:16.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none  1077    435  KNT$SEND_4HOST
    1  RoData even  none     2      2  KNT$SEND_4HOST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KNT$SEND_4HOST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KNT$TR_RCVH
 yes     yes           Std       1 KNT$SEND_HOST_DATA
 yes     yes           Std       1 KNT$SEND_CR_4HOST
         yes           Std       1 KNT$SET_REFWAIT
 yes     yes           Std       1 KNT$DSESSION
 yes     yes           Std       1 KNH$SEND
         yes           Std       1 SCREECH
         yes           Std       1 GHS$CANCEL_TMR
 yes     yes           Std       3 KNT$GET_SBUF
         yes           Std       1 KNT$TR_NCR
         yes           Std       1 KNT$TR_ERROR
         yes           Std       1 GHS$SET_TMR
 yes     yes           Std       1 KNT$SEND_DR
 yes     yes           Std       1 KNT$SEND_DR_HOST
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:298  
         yes           Std       1 KNT$TR_SEND
 yes     yes           Std       1 KNN$SEND
         yes           Std       2 KNT$RELBUF
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KN_TCTX_MAX#                          KN_TCTX$$                             KN_DCT$$
     KNT_ERROR_SCREECH                     KNT_SCODE                        r    G$ROS$
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:299  


     1764        1        /*M* KNT$SEND_4HOST - Send session messages to network.   */
     1765        2        /*T***********************************************************/
     1766        3        /*T*                                                         */
     1767        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1768        5        /*T*                                                         */
     1769        6        /*T***********************************************************/
     1770        7        /*X* PLM=3,IND=5,ENU=0,ECU=0 */
     1771        8
     1772        9        KNT$SEND_4HOST: PROC(KN$NETPARM) ALTRET;

      9   0 000000  D380 0000 0000  xent KNT$SEND_4HOST  LNJ,B5   X6A_AUTO_1
          0 000003       001E 0001                       DC       30,1

     1773       10
     1774       11        %INCLUDE GH_GATE_M;
     1775       52        %INCLUDE GH_SCHD_M;
     1776      196        %INCLUDE K_ADDRESS_M;
     1777      699        %INCLUDE K_INTERFACE_M;
     1778     1108        %INCLUDE K_TRANSPORT_E;
     1779     1433        %INCLUDE K_TRANSPORT_M;
     1780     3217        %INCLUDE K_QDPHDRS_M;
     1781     4099        %INCLUDE KN_DATA_M;
     1782     5885        %INCLUDE KNH_MACRO_C;
     1783     6168
     1784     6169                                                /* Input parameters                   */
     1785     6170        %KN$NETPARM;
     1786     6323                                                /* Auto Storage                       */
     1787     6324    1   DCL ITEMP1 SBIN;
     1788     6325    1   DCL CTX$ PTR;
     1789     6326    1   DCL FRAG$ PTR;
     1790     6327    1   DCL THDRSZ UBIN;
     1791     6328    1   DCL ERRNUM UBIN;
     1792     6329
     1793     6330        %K$TPDU_DR (NAME=K$TPDU_DR, STCLASS=AUTO);
     1794     6373        %K$TPDU_CP6 (NAME=K$TPDU_CP6_FLOW, STCLASS=AUTO, LAST=",");
     1795     6408           %K$TPARM_FLOW_CONTROL (NAME=P, LVL=2, STCLASS=AUTO, LAST=";");
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:300  
     1796     6444        %K$TPDU_UN (NAME=K$TPDU_UN, STCLASS=AUTO);
     1797     6483
     1798     6484
     1799     6485                                                /* External Procedures                */
     1800     6486    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
     1801     6487    1   DCL KNH$SEND ENTRY(1) ALTRET;
     1802     6488    1   DCL KNN$SEND ENTRY(1) ALTRET;
     1803     6489    1   DCL KNT$GET_SBUF ENTRY(3) ALTRET;
     1804     6490    1   DCL KNT$RELBUF ENTRY(2);
     1805     6491    1   DCL KNT$SEND_HOST_DATA ENTRY(1) ALTRET;
     1806     6492    1   DCL KNT$SEND_CR_4HOST ENTRY(1) ALTRET;
     1807     6493    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
     1808     6494    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
     1809     6495    1   DCL KNT$DSESSION ENTRY(1) ALTRET;
     1810     6496    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1811     6497    1   DCL KNT$SET_REFWAIT ENTRY(1);
     1812     6498    1   DCL KNT$TR_ERROR ENTRY(1);
     1813     6499    1   DCL KNT$TR_FHOST ENTRY(1);
     1814     6500    1   DCL KNT$TR_RCVH ENTRY(1);
     1815     6501    1   DCL KNT$TR_NCR ENTRY(1);
     1816     6502    1   DCL KNT$TR_SEND ENTRY(1);
     1817     6503    1   DCL GHS$SET_TMR ENTRY(1);
     1818     6504    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1819     6505    1   DCL SCREECH ENTRY(1);
     1820     6506
     1821     6507                                                /* External Data                      */
     1822     6508    1   DCL KN_TCTX_MAX# UBIN SYMREF;
     1823     6509    1   DCL KN_TCTX$$ PTR SYMREF;
     1824     6510    1   DCL KN_DCT$$ PTR SYMREF;
     1825     6511    1   DCL KNT_ERROR_SCREECH UBIN SYMREF;
     1826     6512    1   DCL KNT_SCODE UBIN(32) SYMREF;
     1827     6513
     1828     6514                                                /* Based Data                         */
     1829     6515        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     1830     7422    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     1831     7423    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
     1832     7424
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:301  
     1833     7425        %KN$LDCT (NAME=KN$LDCT, STCLASS="BASED(KN$NETPARM.LDCT$)");
     1834     7670
     1835     7671        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS="BASED(FRAG$)");
     1836     7754
     1837     7755        %K$TPDU_CR_CC(NAME=B$TPDU_CR,STCLASS="BASED(KN$NETPARM.THDR_C$)");
     1838     7824        %K$TPDU_DR (NAME=B$TPDU_DR, STCLASS="BASED(KN$NETPARM.THDR_C$)");
     1839     7867        %K$TPDU_DT(NAME=B$TPDU_DT, STCLASS="BASED(KN$NETPARM.THDR_C$)");
     1840     7917
     1841     7918        %K$TPDU_CP6 (NAME=B$TPDU_CP6, STCLASS="BASED(KN$NETPARM.THDR$)", LAST=",");
     1842     7953            %K$TPARM_SSN_CRDT (NAME=P, STCLASS=BASED, LVL=2);
     1843     7992
     1844     7993
     1845     7994        %K$TPDU_CP6 (NAME=B$TPDU_CP6_OPT, STCLASS="BASED(KN$NETPARM.THDR$)", LAST=",");
     1846     8029            %K$TPARM_CP6_OPTIONS (NAME=P, STCLASS=BASED, LVL=2);
     1847     8074
     1848     8075
     1849     8076        %K$NQDP_HDR (NAME=B$NHDR, STCLASS="BASED(KN$NETPARM.NHDR$)");
     1850     8153
     1851     8154
     1852     8155    1   DCL B$TPDU CHAR(THDRSZ) BASED CALIGNED;
     1853     8156        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:302  
     1854     8157        /*F* NAME: KNT$SEND_4HOST
     1855     8158
     1856     8159        This routine is entered when Network has just received a message from
     1857     8160        an adjacent host node and the destination of the message is not this
     1858     8161        fep node.  KNN$RECV calls this routine with the following parameters:
     1859     8162        .fif
     1860     8163        }
     1861     8164        }    KN$NETPARM.FUNCTION
     1862     8165        }                - Contains a value to indicate if we have received
     1863     8166        }                  an OSI Session or CP-6 Session message:
     1864     8167        }                    KN_FCN_DATA - CP-6
     1865     8168        }                    K_NDATA      - OSI
     1866     8169        }
     1867     8170        }    KN$NETPARM.THDR$
     1868     8171        }                - Contains the address within the message of the first
     1869     8172        }                  byte of the TPDU.
     1870     8173        }
     1871     8174        }    KN$NETPARM.THDRSZ
     1872     8175        }                - Contains the byte size of the TPDU.
     1873     8176        }
     1874     8177        }    KN$NETPARM.NHDR$
     1875     8178        }                - Contains the address of the network header.
     1876     8179        }
     1877     8180        }    KN$NETPARM.LDCT$
     1878     8181        }                - Contains the address of the remote fep link LDCT.
     1879     8182        }
     1880     8183        }    KN$NETPARM.SLDCT$
     1881     8184        }                - Contains the address of the host link LDCT.
     1882     8185        .fin
     1883     8186
     1884     8187        The action to be taken is dependent on the type of TPDU that has been
     1885     8188        received.  This will be one of the following:
     1886     8189        .fif
     1887     8190        }    K_TPDU_TYPE_DT  - Data               - forward by calling KNT$SEND
     1888     8191        }    K_TPDU_TYPE_ED  - Expedited Data     - forward by calling KNT$SEND
     1889     8192        }    K_TPDU_TYPE_CR  - Connect Request    - forward by returning
     1890     8193        }    K_TPDU_TYPE_CC  - Connect Confirm    - forward by returning
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:303  
     1891     8194        }    K_TPDU_TYPE_DR  - Disconnect Request
     1892     8195        .fin
     1893     8196
     1894     8197        There are three possible ways to exit:
     1895     8198        .fif
     1896     8199        }    RETURN         KNN$RECV will call KNH$SEND to forward the msg
     1897     8200        }
     1898     8201        }    ALTRETURN      with NETPARM.ERRCODE zero
     1899     8202        }                   KNN$RECV will simply return - message on COUPLER's
     1900     8203        }                                                 SQ is complete.
     1901     8204        }    ALTRETURN      with NETPARM.ERRCODE non-zero
     1902     8205        }                   KNN$RECV will altreturn - message on COUPLER's SQ
     1903     8206        }                                             will remain.
     1904     8207        .fin
     1905     8208        */
     1906     8209        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:304  
     1907     8210    1      CTX$ = KN$TCTX$(B$TPDU_CR.DST_REF);

   8210   0 000005  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000007  DCC6 000B                            LDB,B5   11,B6
          0 000009  B845 0001                            LDR,R3   1,B5
          0 00000B  CC80 0000 0000  xsym                 LDB,B4   KN_TCTX$$
          0 00000E  BCB4                                 LDB,B3   ,B4,R3
          0 00000F  BFC7 0007                            STB,B3   CTX$,AUTO

     1908     8211
     1909     8212    1      KN$NETPARM.TCTX$ = CTX$;

   8212   0 000011  BFC6 001B                            STB,B3   27,B6

     1910     8213
     1911     8214
     1912     8215        /*   KNT$SEND_4HOST   -   TPDU_DT and TPDU_ED
     1913     8216
     1914     8217           When the host is forwarding data, we make this look as if we had
     1915     8218           been called by local session by stiping off the transport header
     1916     8219           that was built on the host and setting netparn.shdr$ and .shdrsz
     1917     8220           to frame the spdu.
     1918     8221
     1919     8222           Entering the KNT$SEND routine will take care of busting it into
     1920     8223           smaller tpdus if necessary, buffering the composed tpdus, building
     1921     8224           the appropriate transport header, and forwarding the message by
     1922     8225           calling KNN$SEND or KNH$SEND.
     1923     8226
     1924     8227           If we have buffered twice the window size, we send a flow_stop
     1925     8228           tpdu to host transport.
     1926     8229
     1927     8230           We then altreturn to KNN$RECV, so we don't forward the message
     1928     8231           twice.
     1929     8232        */
     1930     8233
     1931     8234    1      IF B$TPDU_CR.TYPE = %K_TPDU_TYPE_DT

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:305  
   8234   0 000013  E805                                 LDR,R6   ,B5
          0 000014  6044                                 SOR,R6   4
          0 000015  E570 000F                            AND,R6   15,IMO
          0 000017  6D0F                                 CMV,R6   15
          0 000018  0981 0073                            BNE      s:8272,PREL

     1932     8235    2      THEN DO;

   8124   0                              STRIP_OFF_THDR  null
     1933     8236
     1934     8237    2   STRIP_OFF_THDR: ;
     1935     8238    2           IF KN$TCTX.OPTION.TRACE

   8238   0 00001A  ECC7 0007            STRIP_OFF_THDR  LDB,B6   CTX$,AUTO
          0 00001C  82C6 000C                            LB,'0040'X        12,B6
          0 00001E       0040
          0 00001F  0581 0009                            BBF      s:8241,PREL

     1936     8239    2           THEN CALL KNT$TR_RCVH(KN$NETPARM);

   8239   0 000021  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000023  CBF0 0100                            LAB,B4   256,IMO
          0 000025  E380 0000 0000  xent                 LNJ,B6   KNT$TR_RCVH
          0 000028       0001                            DC       s:8241,PREL

     1937     8240
     1938     8241    2           KN$NETPARM.NODE = KN$TCTX.NODE;

   8241   0 000029  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 00002B  DCC7 0007                            LDB,B5   CTX$,AUTO
          0 00002D  E805                                 LDR,R6   ,B5
          0 00002E  E570 00FF                            AND,R6   255,IMO
          0 000030  EF46 0015                            STR,R6   21,B6

     1939     8242    2           KN$NETPARM.TCTX_ID = B$TPDU_DT.DST_REF;

   8242   0 000032  CCC6 000B                            LDB,B4   11,B6
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:306  
          0 000034  D844 0001                            LDR,R5   1,B4
          0 000036  DF46 0011                            STR,R5   17,B6

     1940     8243
     1941     8244    2           THDRSZ = B$TPDU_DT.LI +1;

   8244   0 000038  C284                                 LLH,R4   ,B4
          0 000039  4E01                                 ADV,R4   1
          0 00003A  CF47 000B                            STR,R4   THDRSZ,AUTO

     1942     8245    2           KN$NETPARM.SHDR_C$ = PINCRC(KN$NETPARM.THDR_C$, THDRSZ);

   8245   0 00003C  8CC6 000B                            LDI      11,B6
          0 00003E  7031                                 DCL,R7   1
          0 00003F  8D47 0018                            SDI      K$TPDU_UN+4,AUTO
          0 000041  F854                                 LDR,R7   R4
          0 000042  6C00                                 LDV,R6   0
          0 000043  8447 0018                            AID      K$TPDU_UN+4,AUTO
          0 000045  7071                                 DCR,R7   1
          0 000046  8D46 0008                            SDI      8,B6

     1943     8246    2           KN$NETPARM.SHDRSZ = KN$NETPARM.THDRSZ - THDRSZ;

   8246   0 000048  D846 000D                            LDR,R5   13,B6
          0 00004A  D247 000B                            SUB,R5   THDRSZ,AUTO
          0 00004C  DF46 000A                            STR,R5   10,B6

     1944     8247    2           KN$NETPARM.UHDR$ = ADDR(NIL);

   8247   0 00004E  CB80 0000 0000                       LAB,B4   0
          0 000051  CFC6 0005                            STB,B4   5,B6

     1945     8248    2           KN$NETPARM.MSG$ = ADDR(NIL);

   8248   0 000053  BB80 0000 0000                       LAB,B3   0
          0 000056  BFC6 0002                            STB,B3   2,B6

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:307  
     1946     8249
     1947     8250    2           CALL KNT$SEND_HOST_DATA(KN$NETPARM)

   8250   0 000058  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00005A  CBF0 0100                            LAB,B4   256,IMO
          0 00005C  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_HOST_DATA
          0 00005F       0003                            DC       s:8252,PREL
          0 000060  0F81 0028                            B        s:8267,PREL

     1948     8251    3           WHENALTRETURN DO;

     1949     8252    3                IF KN$NETPARM.ERRCODE = %KN_ERR_NOQ2

   8252   0 000062  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000064  E846 0016                            LDR,R6   22,B6
          0 000066  6D07                                 CMV,R6   7
          0 000067  0981 0004                            BNE      s:8255,PREL

     1950     8253    3                THEN ALTRETURN;       /*couldn't get buf - leave on coupler cq   */

   8253   0 000069  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1951     8254
     1952     8255    3                IF KN$TCTX.FLOW_CONTROLLED /*buffer limit exceeded*/

   8255   0 00006C  DCC7 0007                            LDB,B5   CTX$,AUTO
          0 00006E  82C5 000D                            LB,'0010'X        13,B5
          0 000070       0010
          0 000071  0581 0013                            BBF      s:8264,PREL
          0 000073  82C5 000C                            LB,'0010'X        12,B5
          0 000075       0010
          0 000076  0581 000E                            BBF      s:8264,PREL

     1953     8256    3                  AND KN$TCTX.OPTION.OSI
     1954     8257    4                THEN DO;

     1955     8258    4                     K$TPDU_CP6_FLOW = '0'B;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:308  

   8258   0 000078  5C06                                 LDV,R5   6
          0 000079  0021                                 ALR      ;
          0 00007A       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 00007C       4007 0011                                ALPHANUM(K$TPDU_CP6_FLOW,AUTO,,R5,FILL)

     1956     8259    4                     K$TPDU_CP6_FLOW.P.CODE = %K_TPARM_FLOW_STOP;

   8259   0 00007E  6C03                                 LDV,R6   3
          0 00007F  437F                                 CSYNC    s:8259,SPREL
          0 000080  E7C7 0013                            STH,R6   K$TPDU_CP6_FLOW+2,AUTO

     1957     8260    4                     CALL I$RETURN_TPDU_CP6;

   8260   0 000082  E3C0 0385                            LNJ,B6   s:0,PREL
          0 000084       0001                            DC       s:8264,PREL

     1958     8261    4                     END;

     1959     8262
     1960     8263        /*           KN$TCTX.FLOW_CONTROLLED = '0'B; reset when ak recvd */
     1961     8264    3                KN$NETPARM.ERRCODE = 0;    /*so knn won't altret to knh$scan     */

   8264   0 000085  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000087  8746 0016                            CL       22,B6

     1962     8265    3                END/*altret from knt$send*/;

     1963     8266
     1964     8267    2           ALTRETURN;                      /*so knn doesn't also forward message */

   8267   0 000089  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1965     8268    2           END/*do if tpdu_dt*/;
     1966     8269
     1967     8270
     1968     8271
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:309  
     1969     8272    1      IF B$TPDU_CR.TYPE = %K_TPDU_TYPE_ED

   8272   0 00008C  6D01                                 CMV,R6   1
          0 00008D  0981 0006                            BNE      s:8280,PREL

     1970     8273    2      THEN DO;

     1971     8274    2           KN$NETPARM.FUNCTION = %K_TEXPD_DATA_REQ;

   8274   0 00008F  5C18                                 LDV,R5   24
          0 000090  DF46 0014                            STR,R5   20,B6

     1972     8275    2           GOTO STRIP_OFF_THDR;

   8275   0 000092  0F81 FF87                            B        s:8235,PREL

     1973     8276    2           END;
     1974     8277
     1975     8278
     1976     8279        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:310  
     1977     8280    1      IF B$TPDU_CR.TYPE ~= %K_TPDU_TYPE_CP6

   8280   0 000094  8285                                 LB,'00F0'X        ,B5
   8280   0 000095       00F0
          0 000096  0581 0009                            BBF      s:8283,PREL

     1978     8281    1      THEN CALL KNT$TR_RCVH(KN$NETPARM);

   8281   0 000098  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00009A  CBF0 0100                            LAB,B4   256,IMO
          0 00009C  E380 0000 0000  xent                 LNJ,B6   KNT$TR_RCVH
          0 00009F       0001                            DC       s:8283,PREL

     1979     8282
     1980     8283    1      THDRSZ = KN$NETPARM.THDRSZ;

   8283   0 0000A0  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0000A2  E846 000D                            LDR,R6   13,B6
          0 0000A4  EF47 000B                            STR,R6   THDRSZ,AUTO

     1981     8284
     1982     8285    2      DO CASE ( B$TPDU_CR.TYPE );

   8285   0 0000A6  DCC6 000B                            LDB,B5   11,B6
          0 0000A8  B805                                 LDR,R3   ,B5
          0 0000A9  3044                                 SOR,R3   4
          0 0000AA  B570 000F                            AND,R3   15,IMO
          0 0000AC  3D0F                                 CMV,R3   15
          0 0000AD  0281 0331                            BGE      s:8631,PREL
          0 0000AF  A830 0000 00B5  00                   LDR,R2   s:8285+15,R3
          0 0000B2  83A0 0000 00C4  00                   JMP      s:8302,R2
          0 0000B5       02CC                            DC       s:8592,PREL
          0 0000B6       031B                            DC       s:8631,PREL
          0 0000B7       031B                            DC       s:8631,PREL
          0 0000B8       031B                            DC       s:8631,PREL
          0 0000B9       031B                            DC       s:8631,PREL
          0 0000BA       031B                            DC       s:8631,PREL
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:311  
          0 0000BB       031B                            DC       s:8631,PREL
          0 0000BC       031B                            DC       s:8631,PREL
          0 0000BD       01DA                            DC       s:8488,PREL
          0 0000BE       031B                            DC       s:8631,PREL
          0 0000BF       031B                            DC       s:8631,PREL
          0 0000C0       031B                            DC       s:8631,PREL
          0 0000C1       031B                            DC       s:8631,PREL
          0 0000C2       00E5                            DC       s:8391,PREL
          0 0000C3       0000                            DC       s:8302,PREL

     1983     8286
     1984     8287
     1985     8288        /*   KNT$SEND_4HOST   -   TPDU_CR
     1986     8289
     1987     8290           If the TPDU is a Connect Request, a secondary Transport Context
     1988     8291           Block is allocated and initialized by an entry into KNT$RECV.
     1989     8292
     1990     8293           If KNT$RECV finds errors, KNT$RECV will send a TPDU_DR back to the
     1991     8294           host and altreturn to here, where we will in turn altreturn to
     1992     8295           KNN$RECV to avoid sending the tpdu on.
     1993     8296
     1994     8297           On a normal return, the state of the TCTX is WFNC is mode is CONS;
     1995     8298           state is WFCC if mode is CLNS.
     1996     8299        */
     1997     8300
     1998     8301    2       CASE( %K_TPDU_TYPE_CR);

     1999     8302    2         CALL KNT$SEND_CR_4HOST(KN$NETPARM)

   8302   0 0000C4  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0000C6  CBF0 0100                            LAB,B4   256,IMO
          0 0000C8  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_CR_4HOST
          0 0000CB       0003                            DC       s:8304,PREL
          0 0000CC  0F81 0003                            B        s:8307,PREL

     2000     8303    3         WHENALTRETURN DO;

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:312  
     2001     8304    3              GOTO MSG_COMPLETE;

   8304   0 0000CE  0F81 0032                            B        s:8320,PREL

     2002     8305    3              END;
     2003     8306
     2004     8307    2         CTX$ = KN$NETPARM.TCTX$;

   8307   0 0000D0  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0000D2  DCC6 001B                            LDB,B5   27,B6
          0 0000D4  DFC7 0007                            STB,B5   CTX$,AUTO

     2005     8308
     2006     8309        /* Make sure we can get a buffer before continuing.
     2007     8310        */
     2008     8311    2         CALL KNT$GET_SBUF(THDRSZ,FRAG$,KN$TCTX)

   8311   0 0000D6  DFC7 001C                            STB,B5   K$TPDU_UN+8,AUTO
          0 0000D8  CBC7 0009                            LAB,B4   FRAG$,AUTO
          0 0000DA  CFC7 001A                            STB,B4   K$TPDU_UN+6,AUTO
          0 0000DC  BBC7 000B                            LAB,B3   THDRSZ,AUTO
          0 0000DE  BFC7 0018                            STB,B3   K$TPDU_UN+4,AUTO
          0 0000E0  BBC7 0018                            LAB,B3   K$TPDU_UN+4,AUTO
          0 0000E2  CBF0 0300                            LAB,B4   768,IMO
          0 0000E4  E380 0000 0000  xent                 LNJ,B6   KNT$GET_SBUF
          0 0000E7       0003                            DC       s:8313,PREL
          0 0000E8  0F81 001F                            B        s:8329,PREL

     2009     8312    3         WHENALTRETURN DO;

     2010     8313    3              KN$TCTX.ERR = %K_ERROR_NOMEM;

   8313   0 0000EA  E870 00F4                            LDR,R6   244,IMO
          0 0000EC  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 0000EE  EAC6 000E                            SRM,R6,'00FF'X    14,B6
          0 0000F0       00FF

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:313  
     2011     8314    3   ABORT_CONNECT:
     2012     8315    3              CALL KNT$SEND_DR_HOST(KN$NETPARM);

   8315   0 0000F1  BBC7 0004            ABORT_CONNECT   LAB,B3   @KN$NETPARM,AUTO
          0 0000F3  CBF0 0100                            LAB,B4   256,IMO
          0 0000F5  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR_HOST
          0 0000F8       0001                            DC       s:8317,PREL

     2013     8316
     2014     8317    3              CALL KNT$SET_REFWAIT(KN$TCTX);

   8317   0 0000F9  BBC7 0007                            LAB,B3   CTX$,AUTO
          0 0000FB  CBF0 0100                            LAB,B4   256,IMO
          0 0000FD  E380 0000 0000  xent                 LNJ,B6   KNT$SET_REFWAIT
          0 000100       0001                            DC       s:8320,PREL

     2015     8318
     2016     8319    3   MSG_COMPLETE:
     2017     8320    3              KN$NETPARM.ERRCODE = 0;

   8320   0 000101  ECC7 0004            MSG_COMPLETE    LDB,B6   @KN$NETPARM,AUTO
          0 000103  8746 0016                            CL       22,B6

     2018     8321    3              ALTRETURN;                   /*to knn$recv to avoid sending twice  */

   8321   0 000105  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2019     8322    3              END;
     2020     8323
     2021     8324        /* If we are to use Connection Oriented Network, try to establish a virtual
     2022     8325           circuit by calling KNN$SEND with K_NCONNECT_REQ function.  If successful,
     2023     8326           remember the index for the LDCT that was allocated for the virtual
     2024     8327           circuit in the transport context.
     2025     8328        */
     2026     8329    2         IF KN$TCTX.OPTION.CONS

   8329   0 000108  ECC7 0007                            LDB,B6   CTX$,AUTO
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:314  
          0 00010A  82C6 000C                            LB,'0020'X        12,B6
          0 00010C       0020
          0 00010D  0581 0059                            BBF      s:8353,PREL

     2027     8330    3         THEN DO;

     2028     8331    3              KN$NETPARM.FLAGS.CONS = '1'B;

   8331   0 00010F  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 000111  8945 0012                            LBT,'0100'X       18,B5
          0 000113       0100

     2029     8332    3              KN$NETPARM.FUNCTION = %K_NCONNECT_REQ;

   8332   0 000114  6C1F                                 LDV,R6   31
          0 000115  EF45 0014                            STR,R6   20,B5

     2030     8333    3              KN$NETPARM.LDCT$ = ADDR(NIL);

   8333   0 000117  CB80 0000 0000                       LAB,B4   0
          0 00011A  CF85                                 STB,B4   ,B5

     2031     8334
     2032     8335    3              KN$NETPARM.MSGSZ = SIZEC(K$TPDU_UN);

   8335   0 00011B  5C04                                 LDV,R5   4
          0 00011C  DF45 0004                            STR,R5   4,B5

     2033     8336    3              KN$NETPARM.MSGW$ = ADDR(K$TPDU_UN);

   8336   0 00011E  BBC7 0014                            LAB,B3   K$TPDU_UN,AUTO
          0 000120  BFC5 0002                            STB,B3   2,B5

     2034     8337    3              K$TPDU_UN.LI = SIZEC(K$TPDU_UN) -1;

   8337   0 000122  4C03                                 LDV,R4   3
          0 000123  C7C7 0014                            STH,R4   K$TPDU_UN,AUTO
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:315  

     2035     8338    3              K$TPDU_UN.TYPE = %K_TPDU_TYPE_UN;

   8338   0 000125  3C01                                 LDV,R3   1
          0 000126  BAC7 0014                            SRM,R3,'00FF'X    K$TPDU_UN,AUTO
          0 000128       00FF

     2036     8339    3              K$TPDU_UN.PRT_ID = %K_UN_PRTID_VC;

   8339   0 000129  B7C7 0015                            STH,R3   K$TPDU_UN+1,AUTO

     2037     8340    3              K$TPDU_UN.SHARE = 0;

   8340   0 00012B  8847 0015                            LBF,'00FF'X       K$TPDU_UN+1,AUTO
   8340   0 00012D       00FF

     2038     8341
     2039     8342    3              CALL KNT$TR_NCR(KN$NETPARM);

   8342   0 00012E  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000130  CBF0 0100                            LAB,B4   256,IMO
          0 000132  E380 0000 0000  xent                 LNJ,B6   KNT$TR_NCR
          0 000135       0001                            DC       s:8344,PREL

     2040     8343
     2041     8344    3              CALL KNN$SEND(KN$NETPARM)

   8344   0 000136  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000138  CBF0 0100                            LAB,B4   256,IMO
          0 00013A  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          0 00013D       0003                            DC       s:8346,PREL
          0 00013E  0F81 001A                            B        s:8351,PREL

     2042     8345    4              WHENALTRETURN DO;

     2043     8346    4                   KN$TCTX.ERR = KN$NETPARM.ERRCODE; /* kn_err_norte, knt_no_ldct*/

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:316  
   8346   0 000140  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000142  E846 0016                            LDR,R6   22,B6
          0 000144  DCC7 0007                            LDB,B5   CTX$,AUTO
          0 000146  EAC5 000E                            SRM,R6,'00FF'X    14,B5
          0 000148       00FF

     2044     8347    4                   CALL KNT$RELBUF (FRAG$->FRAG_HDR, KN$TCTX);

   8347   0 000149  DFC7 001A                            STB,B5   K$TPDU_UN+6,AUTO
          0 00014B  CCC7 0009                            LDB,B4   FRAG$,AUTO
          0 00014D  CFC7 0018                            STB,B4   K$TPDU_UN+4,AUTO
          0 00014F  BBC7 0018                            LAB,B3   K$TPDU_UN+4,AUTO
          0 000151  CBF0 0200                            LAB,B4   512,IMO
          0 000153  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          0 000156       0001                            DC       s:8348,PREL

     2045     8348    4                   GOTO ABORT_CONNECT;

   8348   0 000157  0F81 FF99                            B        s:8315,PREL

     2046     8349    4                   END;
     2047     8350
     2048     8351    3              KN$NETPARM.LDCT$->KN$LDCT.RLCID.TCTX# = KN$TCTX.SRC_REF;

   8351   0 000159  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 00015B  DC86                                 LDB,B5   ,B6
          0 00015C  CCC7 0007                            LDB,B4   CTX$,AUTO
          0 00015E  E844 0002                            LDR,R6   2,B4
          0 000160  EF45 0002                            STR,R6   2,B5

     2049     8352    3              KN$TCTX.LDCTX# = KN$NETPARM.LDCT$->KN$LDCT.LDCTX;

   8352   0 000162  DC86                                 LDB,B5   ,B6
          0 000163  E845 0007                            LDR,R6   7,B5
          0 000165  EA84                                 SRM,R6,'00FF'X    ,B4
          0 000166       00FF

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:317  
     2050     8353    3              END/*do if cons*/;

   8347   0                              BUFFER_REQUEST  null
     2051     8354
     2052     8355
     2053     8356        /* Store the TPDU_CR or TPDU_CC into the pre-allocated buffer.
     2054     8357        */
     2055     8358    2   BUFFER_REQUEST: ;
     2056     8359    2         FRAG_HDR.SEQ_SBIN = -1;

   8359   0 000167  8CF0 FFFF FFFF       BUFFER_REQUEST  LDI      -1,IMO
          0 00016A  ECC7 0009                            LDB,B6   FRAG$,AUTO
          0 00016C  8D46 0002                            SDI      2,B6

     2057     8360
     2058     8361    2         KN$TCTX.SEND_HEAD$ = FRAG$;

   8361   0 00016E  ECC7 0009                            LDB,B6   FRAG$,AUTO
          0 000170  DCC7 0007                            LDB,B5   CTX$,AUTO
          0 000172  EFC5 003A                            STB,B6   58,B5

     2059     8362    2         KN$TCTX.SEND_TAIL$ = FRAG$;

   8362   0 000174  EFC5 003C                            STB,B6   60,B5

     2060     8363
     2061     8364    2         FRAG$ = PINCRW(FRAG$, SIZEW(FRAG_HDR) );

   8364   0 000176  CBC6 0008                            LAB,B4   8,B6
          0 000178  CFC7 0009                            STB,B4   FRAG$,AUTO

     2062     8365    2         FRAG$->B$TPDU = KN$NETPARM.THDR_C$->B$TPDU;

   8365   0 00017A  BCC7 0004                            LDB,B3   @KN$NETPARM,AUTO
          0 00017C  8CC3 000B                            LDI      11,B3
          0 00017E  B856                                 LDR,R3   R6
          0 00017F  E570 7FFF                            AND,R6   32767,IMO
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:318  
          0 000181  8D47 0018                            SDI      K$TPDU_UN+4,AUTO
          0 000183  ACC7 0018                            LDB,B2   K$TPDU_UN+4,AUTO
          0 000185  304F                                 SOR,R3   15
          0 000186  A853                                 LDR,R2   R3
          0 000187  E847 000B                            LDR,R6   THDRSZ,AUTO
          0 000189  BB84                                 LAB,B3   ,B4
          0 00018A  3C00                                 LDV,R3   0
          0 00018B  0008                                 MMM

     2063     8366
     2064     8367        /* If class 4, start the retransmission timer.
     2065     8368        */
     2066     8369    2         IF KN$TCTX.CLASS = 4

   8369   0 00018C  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 00018E  E2C6 0005                            LLH,R6   5,B6
          0 000190  6D04                                 CMV,R6   4
          0 000191  0981 000D                            BNE      s:8378,PREL

     2067     8370    3         THEN DO;

     2068     8371    3              CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);

   8371   0 000193  DBC6 0050                            LAB,B5   80,B6
          0 000195  DFC7 0018                            STB,B5   K$TPDU_UN+4,AUTO
          0 000197  BBC7 0018                            LAB,B3   K$TPDU_UN+4,AUTO
          0 000199  CBF0 0100                            LAB,B4   256,IMO
          0 00019B  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 00019E       0001                            DC       s:8378,PREL

     2069     8372    3              END;

     2070     8373
     2071     8374        /* If Connectionless network, return to network to forward the tpdu.
     2072     8375           If Connection oriented, altreturn to network to avoid sending the tpdu_cr.
     2073     8376           It will eventually be sent when we get a K_NCONNECT_CFM.
     2074     8377        */
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:319  
     2075     8378    2         IF KN$TCTX.OPTION.CONS

   8378   0 00019F  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 0001A1  82C6 000C                            LB,'0020'X        12,B6
          0 0001A3       0020
          0 0001A4  0501 FF5C                            BBT      s:8320,PREL

     2076     8379    2         THEN GOTO MSG_COMPLETE/*to knn$recv to avoid sending twice*/;
     2077     8380    2         ELSE RETURN/*to knn$recv to forward host's tpdu_cr*/;

   8380   0 0001A6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2078     8381
     2079     8382        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:320  
     2080     8383
     2081     8384        /*   KNT$SEND_4HOST   -   TPDU_CC
     2082     8385
     2083     8386           If the TPDU is a Connect Confirm, the secondary Transport Context
     2084     8387           Block is updated by an entry into KNT$RECV.
     2085     8388           If using Connection Oriented Network, we forward it by calling KNH$SEND.
     2086     8389        */
     2087     8390    2       CASE(%K_TPDU_TYPE_CC);

     2088     8391    2         IF KN$TCTX.STATE ~= %K_TSTATE_WFTRESP

   8391   0 0001A9  CCC7 0007                            LDB,B4   CTX$,AUTO
          0 0001AB  D284                                 LLH,R5   ,B4
          0 0001AC  5D06                                 CMV,R5   6
          0 0001AD  0901 0044                            BE       s:8415,PREL

     2089     8392    3         THEN DO;

     2090     8393    3              KN$NETPARM.THDRSZ = %K_ERROR_BAD_TSTATE;

   8393   0 0001AF  E870 00E0                            LDR,R6   224,IMO
          0 0001B1  EF46 000D                            STR,R6   13,B6

     2091     8394    3              CALL KNT$TR_ERROR(KN$NETPARM);

   8394   0 0001B3  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0001B5  CBF0 0100                            LAB,B4   256,IMO
          0 0001B7  E380 0000 0000  xent                 LNJ,B6   KNT$TR_ERROR
          0 0001BA       0001                            DC       s:8396,PREL

     2092     8395
     2093     8396    3              K$TPDU_DR.LI = SIZEC(K$TPDU_DR) -1;

   8396   0 0001BB  6C07                                 LDV,R6   7
          0 0001BC  E7C7 000D                            STH,R6   K$TPDU_DR,AUTO

     2094     8397    3              K$TPDU_DR.TYPE = %K_TPDU_TYPE_DR;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:321  

   8397   0 0001BE  D870 0080                            LDR,R5   128,IMO
          0 0001C0  DAC7 000D                            SRM,R5,'00F0'X    K$TPDU_DR,AUTO
          0 0001C2       00F0

     2095     8398    3              K$TPDU_DR.DST_REF = B$TPDU_CR.SRC_REF;

   8398   0 0001C3  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 0001C5  DCC6 000B                            LDB,B5   11,B6
          0 0001C7  C845 0002                            LDR,R4   2,B5
          0 0001C9  CF47 000E                            STR,R4   K$TPDU_DR+1,AUTO

     2096     8399    3              K$TPDU_DR.SRC_REF = B$TPDU_CR.DST_REF;

   8399   0 0001CB  DCC6 000B                            LDB,B5   11,B6
          0 0001CD  B845 0001                            LDR,R3   1,B5
          0 0001CF  BF47 000F                            STR,R3   K$TPDU_DR+2,AUTO

     2097     8400    3              K$TPDU_DR.REASON = %K_ERROR_BAD_TSTATE;

   8400   0 0001D1  A870 00E0                            LDR,R2   224,IMO
          0 0001D3  A7C7 0010                            STH,R2   K$TPDU_DR+3,AUTO

     2098     8401
     2099     8402    3              KN$NETPARM.THDRSZ = SIZEC(K$TPDU_DR);

   8402   0 0001D5  1C08                                 LDV,R1   8
          0 0001D6  9F46 000D                            STR,R1   13,B6

     2100     8403    3              KN$NETPARM.THDR$ = ADDR(K$TPDU_DR);

   8403   0 0001D8  DBC7 000D                            LAB,B5   K$TPDU_DR,AUTO
          0 0001DA  DFC6 000B                            STB,B5   11,B6

     2101     8404    3              KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

   8404   0 0001DC  CCC7 0007                            LDB,B4   CTX$,AUTO
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:322  
          0 0001DE  C2C4 0004                            LLH,R4   4,B4
          0 0001E0  CF46 0015                            STR,R4   21,B6

     2102     8405
     2103     8406    3              KN$NETPARM.MSGSZ = 0;

   8406   0 0001E2  8746 0004                            CL       4,B6

     2104     8407    3              KN$NETPARM.UHDRSZ = 0;

   8407   0 0001E4  8746 0007                            CL       7,B6

     2105     8408    3              KN$NETPARM.SHDRSZ = 0;

   8408   0 0001E6  8746 000A                            CL       10,B6

     2106     8409
     2107     8410    3              CALL KNN$SEND(KN$NETPARM);

   8410   0 0001E8  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0001EA  CBF0 0100                            LAB,B4   256,IMO
          0 0001EC  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          0 0001EF       0001                            DC       s:8412,PREL

     2108     8411
     2109     8412    3              GOTO MSG_COMPLETE;

   8412   0 0001F0  0F81 FF10                            B        s:8320,PREL

     2110     8413    3              END;
     2111     8414
     2112     8415    2         KN$TCTX.HOST_REF = B$TPDU_CR.SRC_REF;

   8415   0 0001F2  C845 0002                            LDR,R4   2,B5
          0 0001F4  CF44 0003                            STR,R4   3,B4

     2113     8416
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:323  
     2114     8417    2         IF KN$TCTX.CLASS = 0

   8417   0 0001F6  E2C4 0005                            LLH,R6   5,B4
          0 0001F8  6981 0007                            BNEZ,R6  s:8421,PREL

     2115     8418    2         THEN B$TPDU_CR.CDT = 0;

   8418   0 0001FA  DCC6 000B                            LDB,B5   11,B6
          0 0001FC  8805                                 LBF,'000F'X       ,B5
          0 0001FD       000F
          0 0001FE  0F81 0035                            B        s:8435,PREL

     2116     8419
     2117     8420    3         ELSE DO;                          /*for classes 2 and 4                 */

     2118     8421    3              IF KN$TCTX.RCV_WINDOW_SZ > 15

   8421   0 000200  B844 0005                            LDR,R3   5,B4
          0 000202  B570 00FF                            AND,R3   255,IMO
          0 000204  3D0F                                 CMV,R3   15
          0 000205  0381 0007                            BLE      s:8423,PREL

     2119     8422    3              THEN B$TPDU_CR.CDT = 15;

   8422   0 000207  DCC6 000B                            LDB,B5   11,B6
          0 000209  8905                                 LBT,'000F'X       ,B5
          0 00020A       000F
          0 00020B  0F81 0007                            B        s:8425,PREL

     2120     8423    3              ELSE B$TPDU_CR.CDT = KN$TCTX.RCV_WINDOW_SZ;

   8423   0 00020D  DCC6 000B                            LDB,B5   11,B6
          0 00020F  A844 0005                            LDR,R2   5,B4
          0 000211  AA85                                 SRM,R2,'000F'X    ,B5
          0 000212       000F

     2121     8424
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:324  
     2122     8425    3              IF KN$TCTX.CLASS = 4

   8425   0 000213  E2C4 0005                            LLH,R6   5,B4
          0 000215  6D04                                 CMV,R6   4
          0 000216  0981 001D                            BNE      s:8435,PREL

     2123     8426    4              THEN DO;

     2124     8427    4                   CALL KNT$GET_SBUF(THDRSZ,FRAG$,KN$TCTX)

   8427   0 000218  CFC7 001C                            STB,B4   K$TPDU_UN+8,AUTO
          0 00021A  DBC7 0009                            LAB,B5   FRAG$,AUTO
          0 00021C  DFC7 001A                            STB,B5   K$TPDU_UN+6,AUTO
          0 00021E  BBC7 000B                            LAB,B3   THDRSZ,AUTO
          0 000220  BFC7 0018                            STB,B3   K$TPDU_UN+4,AUTO
          0 000222  BBC7 0018                            LAB,B3   K$TPDU_UN+4,AUTO
          0 000224  CBF0 0300                            LAB,B4   768,IMO
          0 000226  E380 0000 0000  xent                 LNJ,B6   KNT$GET_SBUF
          0 000229       0003                            DC       s:8429,PREL
          0 00022A  0F81 0009                            B        s:8435,PREL

     2125     8428    5                   WHENALTRETURN DO;

     2126     8429    5                        KN$NETPARM.ERRCODE = %KN_ERR_NOQ2;

   8429   0 00022C  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 00022E  6C07                                 LDV,R6   7
          0 00022F  EF46 0016                            STR,R6   22,B6

     2127     8430    5                        ALTRETURN;         /*leave on coupler cq                 */

   8430   0 000231  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2128     8431    5                        END;
     2129     8432    4                   END;

     2130     8433    3              END;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:325  

     2131     8434
     2132     8435    2         KN$TCTX.STATE = %K_TSTATE_WFCC;   /*fake out send_cr_4host*/

   8435   0 000234  6C03                                 LDV,R6   3
          0 000235  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 000237  E786                                 STH,R6   ,B6

     2133     8436
     2134     8437    2         CALL KNT$SEND_CR_4HOST(KN$NETPARM)

   8437   0 000238  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00023A  CBF0 0100                            LAB,B4   256,IMO
          0 00023C  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_CR_4HOST
          0 00023F       0003                            DC       s:8439,PREL
          0 000240  0F81 0003                            B        s:8442,PREL

     2135     8438    3         WHENALTRETURN DO;

     2136     8439    3              GOTO FORCE_SCREECH;

   8439   0 000242  0F81 01AB                            B        s:8645,PREL

     2137     8440    3              END;
     2138     8441
     2139     8442    2         IF KN$TCTX.OPTION.CONS

   8442   0 000244  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 000246  82C6 000C                            LB,'0020'X        12,B6
          0 000248       0020
          0 000249  0581 003A                            BBF      s:8464,PREL

     2140     8443    3         THEN DO;

     2141     8444    3              KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);

   8444   0 00024B  B806                                 LDR,R3   ,B6
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:326  
          0 00024C  B570 00FF                            AND,R3   255,IMO
          0 00024E  DC80 0000 0000  xsym                 LDB,B5   KN_DCT$$
          0 000251  CCB5                                 LDB,B4   ,B5,R3
          0 000252  BCC7 0004                            LDB,B3   @KN$NETPARM,AUTO
          0 000254  CF83                                 STB,B4   ,B3

     2142     8445    3              KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   8445   0 000255  6C05                                 LDV,R6   5
          0 000256  EF43 0014                            STR,R6   20,B3

     2143     8446    3              KN$NETPARM.NHDR$ = ADDR(NIL);

   8446   0 000258  DB80 0000 0000                       LAB,B5   0
          0 00025B  DFC3 000E                            STB,B5   14,B3

     2144     8447    3              KN$NETPARM.NHDRSZ = 0;

   8447   0 00025D  8743 0010                            CL       16,B3

     2145     8448    3              KN$NETPARM.SHDRSZ = 0;

   8448   0 00025F  8743 000A                            CL       10,B3

     2146     8449    3              KN$NETPARM.UHDRSZ = 0;

   8449   0 000261  8743 0007                            CL       7,B3

     2147     8450    3              KN$NETPARM.MSGSZ = 0;

   8450   0 000263  8743 0004                            CL       4,B3

     2148     8451
     2149     8452    3              CALL KNT$TR_SEND(KN$NETPARM);

   8452   0 000265  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000267  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:327  
          0 000269  E380 0000 0000  xent                 LNJ,B6   KNT$TR_SEND
          0 00026C       0001                            DC       s:8454,PREL

     2150     8453
     2151     8454    3              CALL KNH$SEND(KN$NETPARM)

   8454   0 00026D  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00026F  CBF0 0100                            LAB,B4   256,IMO
          0 000271  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          0 000274       0003                            DC       s:8456,PREL
          0 000275  0F81 0004                            B        s:8459,PREL

     2152     8455    4              WHENALTRETURN DO;

     2153     8456    4                   ALTRETURN; /*N* change hdr so nw wont call again */

   8456   0 000277  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2154     8457    4                   END;
     2155     8458
     2156     8459    3              IF KN$TCTX.CLASS = 4

   8459   0 00027A  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 00027C  E2C6 0005                            LLH,R6   5,B6
          0 00027E  6D04                                 CMV,R6   4
          0 00027F  0901 FEE7                            BE       s:8353,PREL

     2157     8460    3              THEN GOTO BUFFER_REQUEST;
     2158     8461    3              ALTRETURN;                   /*so knn doesn't also forward message */

   8461   0 000281  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2159     8462    3              END/*cons   */;
     2160     8463
     2161     8464    2         IF KN$TCTX.OPTION.OSI

   8464   0 000284  82C6 000C                            LB,'0010'X        12,B6
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:328  
   8464   0 000286       0010
          0 000287  0581 000E                            BBF      s:8471,PREL

     2162     8465    3         THEN DO;

     2163     8466    3              KN$NETPARM.FUNCTION = %K_NDATA;

   8466   0 000289  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          0 00028B  6C21                                 LDV,R6   33
          0 00028C  EF45 0014                            STR,R6   20,B5

     2164     8467    3              KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);

   8467   0 00028E  CBC6 009A                            LAB,B4   154,B6
          0 000290  CFC5 001D                            STB,B4   29,B5

     2165     8468    3              KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);

   8468   0 000292  BBC6 00A5                            LAB,B3   165,B6
          0 000294  BFC5 001F                            STB,B3   31,B5

     2166     8469    3              END;

     2167     8470
     2168     8471    2         IF KN$TCTX.CLASS = 4

   8471   0 000296  E2C6 0005                            LLH,R6   5,B6
          0 000298  6D04                                 CMV,R6   4
          0 000299  0901 FECD                            BE       s:8353,PREL

     2169     8472    2         THEN GOTO BUFFER_REQUEST;
     2170     8473    2         ELSE RETURN;                 /*to knn$recv to forward host's tpdu_cc*/

   8473   0 00029B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2171     8474
     2172     8475        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:329  
     2173     8476
     2174     8477        /*   KNT$SEND_4HOST   -   TPDU_DR
     2175     8478
     2176     8479           If the TPDU is a Disconnect Request, OSI session on the host has
     2177     8480           requested T_DISCONNECT_REQ.
     2178     8481
     2179     8482           A call to the special entry point in KNT$RECV simply decodes
     2180     8483           the parmaeters and stores them in the TCTX.
     2181     8484        */
     2182     8485
     2183     8486    2       CASE(%K_TPDU_TYPE_DR);

     2184     8487
     2185     8488    2         IF B$TPDU_DR.DST_REF = 0

   8488   0 00029E  D845 0001                            LDR,R5   1,B5
          0 0002A0  5981 003A                            BNEZ,R5  s:8502,PREL

     2186     8489    3         THEN DO/*connection not yet open*/;

     2187     8490    4              DO ITEMP1 = 1 TO KN_TCTX_MAX#;

   8490   0 0002A2  4C01                                 LDV,R4   1
          0 0002A3  CF47 0006                            STR,R4   ITEMP1,AUTO
          0 0002A5  0F81 002E                            B        s:8501+2,PREL

     2188     8491    4                   IF KN$TCTX$(ITEMP1) ~= ADDR(NIL)

   8491   0 0002A7  EC80 0000 0000  xsym                 LDB,B6   KN_TCTX$$
          0 0002AA  B847 0006                            LDR,R3   ITEMP1,AUTO
          0 0002AC  8DB6                                 CMN      ,B6,R3
          0 0002AD  0901 0024                            BE       s:8501,PREL

     2189     8492    5                   THEN DO;

     2190     8493    5                        IF KN$TCTX$(ITEMP1)->KN$TCTX.HOST_NODE = B$NHDR.SOURCE_NODE -1

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:330  
   8493   0 0002AF  DCB6                                 LDB,B5   ,B6,R3
          0 0002B0  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          0 0002B2  BCC4 000E                            LDB,B3   14,B4
          0 0002B4  E2C5 0004                            LLH,R6   4,B5
          0 0002B6  D843 0001                            LDR,R5   1,B3
          0 0002B8  D570 00FF                            AND,R5   255,IMO
          0 0002BA  5EFF                                 ADV,R5   -1
          0 0002BB  E955                                 CMR,R6   R5
          0 0002BC  0981 0015                            BNE      s:8501,PREL
          0 0002BE  ACC4 000B                            LDB,B2   11,B4
          0 0002C0  C845 0003                            LDR,R4   3,B5
          0 0002C2  C942 0002                            CMR,R4   2,B2
          0 0002C4  0981 000D                            BNE      s:8501,PREL

     2191     8494    5                          AND KN$TCTX$(ITEMP1)->KN$TCTX.HOST_REF = B$TPDU_DR.SRC_REF
     2192     8495    6                        THEN DO;

     2193     8496    6                             B$TPDU_DR.DST_REF = KN$TCTX$(ITEMP1)->KN$TCTX.SRC_REF;

   8496   0 0002C6  A845 0002                            LDR,R2   2,B5
          0 0002C8  AF42 0001                            STR,R2   1,B2

     2194     8497    6                             CTX$ = KN$TCTX$(ITEMP1);

   8497   0 0002CA  EC80 0000 0000  xsym                 LDB,B6   KN_TCTX$$
          0 0002CD  DCB6                                 LDB,B5   ,B6,R3
          0 0002CE  DFC7 0007                            STB,B5   CTX$,AUTO

     2195     8498    6                             GOTO DECODE_TPDU_DR;

   8498   0 0002D0  0F81 000A                            B        s:8502,PREL

     2196     8499    6                             END;
     2197     8500    5                        END/*do if ctx$ not nil*/;
     2198     8501    4                   END/*do while*/;

   8501   0 0002D2  8AC7 0006                            INC      ITEMP1,AUTO
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:331  
          0 0002D4  E847 0006                            LDR,R6   ITEMP1,AUTO
          0 0002D6  6851                                 BLZ,R6   s:8491,SPREL
          0 0002D7  E900 0000 0000  xsym                 CMR,R6   KN_TCTX_MAX#
          0 0002DA  03CD                                 BLE      s:8491,SPREL

     2199     8502    3              END/*do if .dst_ref 0*/;

     2200     8503
     2201     8504    2   DECODE_TPDU_DR:
     2202     8505    2         CALL KNT$SEND_CR_4HOST(KN$NETPARM)

   8505   0 0002DB  BBC7 0004            DECODE_TPDU_DR  LAB,B3   @KN$NETPARM,AUTO
          0 0002DD  CBF0 0100                            LAB,B4   256,IMO
          0 0002DF  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_CR_4HOST
          0 0002E2       0003                            DC       s:8507,PREL
          0 0002E3  0F81 0004                            B        s:8510,PREL

     2203     8506    3         WHENALTRETURN DO;

     2204     8507    3              ALTRETURN;

   8507   0 0002E5  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2205     8508    3              END;
     2206     8509
     2207     8510    2         IF KN$TCTX.STATE = %K_TSTATE_WFTRESP

   8510   0 0002E8  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 0002EA  E286                                 LLH,R6   ,B6
          0 0002EB  6D06                                 CMV,R6   6
          0 0002EC  0981 0017                            BNE      s:8519,PREL

     2208     8511    3         THEN DO;

     2209     8512    3              ITEMP1 = KN$TCTX.SRC_REF;

   8512   0 0002EE  D846 0002                            LDR,R5   2,B6
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:332  
          0 0002F0  DF47 0006                            STR,R5   ITEMP1,AUTO

     2210     8513    3              KN$TCTX.SRC_REF = 0;

   8513   0 0002F2  8746 0002                            CL       2,B6

     2211     8514    3              CALL KNT$SEND_DR(KN$NETPARM);

   8514   0 0002F4  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0002F6  CBF0 0100                            LAB,B4   256,IMO
          0 0002F8  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR
          0 0002FB       0001                            DC       s:8515,PREL

     2212     8515    3              KN$TCTX.SRC_REF = ITEMP1;

   8515   0 0002FC  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 0002FE  E847 0006                            LDR,R6   ITEMP1,AUTO
          0 000300  EF46 0002                            STR,R6   2,B6

     2213     8516    3              GOTO SET_REFWAIT;

   8516   0 000302  0F81 0030                            B        s:8540,PREL

     2214     8517    3              END;
     2215     8518
     2216     8519    2         IF KN$TCTX.STATE = %K_TSTATE_WFNC

   8519   0 000304  6D09                                 CMV,R6   9
          0 000305  0901 0038                            BE       s:8545,PREL

     2217     8520    2         THEN GOTO TERM_VC;
     2218     8521
     2219     8522    2         IF KN$TCTX.STATE = %K_TSTATE_WFCC

   8522   0 000307  6D03                                 CMV,R6   3
          0 000308  0981 003A                            BNE      s:8552,PREL

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:333  
     2220     8523    3         THEN DO;

     2221     8524    3              IF KN$TCTX.CLASS = 0

   8524   0 00030A  D2C6 0005                            LLH,R5   5,B6
          0 00030C  5981 0031                            BNEZ,R5  s:8545,PREL

     2222     8525    4              THEN DO;

     2223     8526    4   SEND_TERM:
     2224     8527    4                   KN$NETPARM.UHDRSZ = 0;

   8527   0 00030E  ECC7 0004            SEND_TERM       LDB,B6   @KN$NETPARM,AUTO
          0 000310  8746 0007                            CL       7,B6

     2225     8528    4                   KN$NETPARM.THDRSZ = 0;

   8528   0 000312  8746 000D                            CL       13,B6

     2226     8529    4                   KN$NETPARM.NHDRSZ = 0;

   8529   0 000314  8746 0010                            CL       16,B6

     2227     8530    4                   KN$NETPARM.FUNCTION = %KN_FCN_TERM;

   8530   0 000316  6C03                                 LDV,R6   3
          0 000317  EF46 0014                            STR,R6   20,B6

     2228     8531    4                   KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);

   8531   0 000319  DCC7 0007                            LDB,B5   CTX$,AUTO
          0 00031B  B805                                 LDR,R3   ,B5
          0 00031C  B570 00FF                            AND,R3   255,IMO
          0 00031E  CC80 0000 0000  xsym                 LDB,B4   KN_DCT$$
          0 000321  BCB4                                 LDB,B3   ,B4,R3
          0 000322  BF86                                 STB,B3   ,B6

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:334  
     2229     8532
     2230     8533    4                   CALL KNH$SEND(KN$NETPARM)

   8533   0 000323  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000325  CBF0 0100                            LAB,B4   256,IMO
          0 000327  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          0 00032A       0003                            DC       s:8535,PREL
          0 00032B  0F81 0007                            B        s:8540,PREL

     2231     8534    5                   WHENALTRETURN DO;

     2232     8535    5                        ERRNUM = %K_ERROR_NETWORK;

   8535   0 00032D  E870 00F9                            LDR,R6   249,IMO
          0 00032F  EF47 000C                            STR,R6   ERRNUM,AUTO

     2233     8536    5                        GOTO SCREECH_CHECK;

   8536   0 000331  0F81 00B7                            B        s:8644,PREL

     2234     8537    5                        END;
     2235     8538
     2236     8539    4   SET_REFWAIT:
     2237     8540    4                   CALL KNT$SET_REFWAIT(KN$TCTX);

   8540   0 000333  BBC7 0007            SET_REFWAIT     LAB,B3   CTX$,AUTO
          0 000335  CBF0 0100                            LAB,B4   256,IMO
          0 000337  E380 0000 0000  xent                 LNJ,B6   KNT$SET_REFWAIT
          0 00033A       0001                            DC       s:8542,PREL

     2238     8541
     2239     8542    4                   ALTRETURN;              /*so knn$recv won't forward same msg*/

   8542   0 00033B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2240     8543    4                   END/*do if class 0 */;
     2241     8544
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:335  
     2242     8545    4              ELSE DO;

     2243     8546    4   TERM_VC:
     2244     8547    4                   KN$TCTX.STATE = %K_TSTATE_WBCL;

   8547   0 00033E  5C04                 TERM_VC         LDV,R5   4
          0 00033F  D786                                 STH,R5   ,B6

     2245     8548    4                   ALTRETURN;

   8548   0 000340  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2246     8549    4                   END/*do if class 2 or 4*/;
     2247     8550    3              END/*do if WFCC*/;
     2248     8551
     2249     8552    2         IF KN$TCTX.CLASS = 0

   8552   0 000343  D2C6 0005                            LLH,R5   5,B6
          0 000345  5949                                 BEZ,R5   s:8525,SPREL

     2250     8553    2         THEN GOTO SEND_TERM;
     2251     8554
     2252     8555    2         IF KN$TCTX.STATE = %K_TSTATE_OPEN

   8555   0 000346  6D05                                 CMV,R6   5
          0 000347  0981 0041                            BNE      s:8574,PREL

     2253     8556    3         THEN DO;

     2254     8557    3              IF KN$TCTX.CLASS = 2

   8557   0 000349  5D02                                 CMV,R5   2
          0 00034A  0901 002F                            BE       s:8567,PREL

     2255     8558    3              THEN GOTO SET_CLOSING;
     2256     8559
     2257     8560    3              IF KN$TCTX.CLASS = 4
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:336  

   8560   0 00034C  5D04                                 CMV,R5   4
          0 00034D  0981 002C                            BNE      s:8567,PREL

     2258     8561    4              THEN DO;

     2259     8562    4                   CALL GHS$CANCEL_TMR (KN$TCTX.TMR_WINDOW);

   8562   0 00034F  DBC6 005A                            LAB,B5   90,B6
          0 000351  DFC7 0018                            STB,B5   K$TPDU_UN+4,AUTO
          0 000353  BBC7 0018                            LAB,B3   K$TPDU_UN+4,AUTO
          0 000355  CBF0 0100                            LAB,B4   256,IMO
          0 000357  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 00035A       0001                            DC       s:8563,PREL

     2260     8563    4                   CALL GHS$CANCEL_TMR (KN$TCTX.TMR_INACTIVITY);

   8563   0 00035B  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 00035D  DBC6 0064                            LAB,B5   100,B6
          0 00035F  DFC7 0018                            STB,B5   K$TPDU_UN+4,AUTO
          0 000361  BBC7 0018                            LAB,B3   K$TPDU_UN+4,AUTO
          0 000363  CBF0 0100                            LAB,B4   256,IMO
          0 000365  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 000368       0001                            DC       s:8565,PREL

     2261     8564    4   SET_RETRY:
     2262     8565    4                   KN$TCTX.SEND_RETRY_COUNT = 1;

   8565   0 000369  6C01                 SET_RETRY       LDV,R6   1
          0 00036A  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 00036C  E7C6 004D                            STH,R6   77,B6

     2263     8566    4                   CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);

   8566   0 00036E  DBC6 0050                            LAB,B5   80,B6
          0 000370  DFC7 0018                            STB,B5   K$TPDU_UN+4,AUTO
          0 000372  BBC7 0018                            LAB,B3   K$TPDU_UN+4,AUTO
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:337  
          0 000374  CBF0 0100                            LAB,B4   256,IMO
          0 000376  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 000379       0001                            DC       s:8567,PREL

     2264     8567    4                   END;

     2265     8568    3   SET_CLOSING:
     2266     8569    3              KN$TCTX.STATE = %K_TSTATE_CLOSING;

   8569   0 00037A  6C08                 SET_CLOSING     LDV,R6   8
          0 00037B  ECC7 0007                            LDB,B6   CTX$,AUTO
          0 00037D  E786                                 STH,R6   ,B6

     2267     8570    3              CALL KNT$SEND_DR(KN$NETPARM);

   8570   0 00037E  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 000380  CBF0 0100                            LAB,B4   256,IMO
          0 000382  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR
          0 000385       0001                            DC       s:8571,PREL

     2268     8571    3              ALTRETURN;

   8571   0 000386  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2269     8572    3              END;
     2270     8573
     2271     8574    2         IF (KN$TCTX.STATE = %K_TSTATE_AKWAIT) AND (KN$TCTX.CLASS = 4)

   8574   0 000389  6D07                                 CMV,R6   7
          0 00038A  0981 0003                            BNE      s:8576,PREL
          0 00038C  5D04                                 CMV,R5   4
          0 00038D  095C                                 BE       s:8565,SPREL

     2272     8575    2         THEN GOTO SET_RETRY;
     2273     8576    2         ELSE GOTO REPORT_BAD_TSTATE;

   8576   0 00038E  0F81 0056                            B        s:8636,PREL
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:338  

     2274     8577
     2275     8578
     2276     8579        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:339  
     2277     8580
     2278     8581        /*   KNT$SEND_4HOST   -   TPDU_CP6
     2279     8582
     2280     8583           If the TPDU is a CP-6 Control tpdu, the action to be taken is
     2281     8584           dependent on the appended parameter code.
     2282     8585
     2283     8586           Currently the only parameters defined are for passing initial transport
     2284     8587           options (trace is the only current one) and for passing host OSI
     2285     8588           session credit information.
     2286     8589        */
     2287     8590
     2288     8591    2       CASE(%K_TPDU_TYPE_CP6);

     2289     8592    3         DO CASE(B$TPDU_CP6.P.CODE);

   8592   0 000390  92C5 0002                            LLH,R1   2,B5
          0 000392  1D03                                 CMV,R1   3
          0 000393  0281 0049                            BGE      s:8625,PREL
          0 000395  B810 0000 039B  00                   LDR,R3   s:8592+11,R1
          0 000398  83B0 0000 039E  00                   JMP      s:8595,R3
          0 00039B       003F                            DC       s:8625,PREL
          0 00039C       000E                            DC       s:8603,PREL
          0 00039D       0000                            DC       s:8595,PREL

     2290     8593
     2291     8594    3          CASE(%K_TPARM_CP6_OPTIONS);

     2292     8595    3            IF B$TPDU_CP6_OPT.LI ~= SIZEC(B$TPDU_CP6_OPT) -1

   8595   0 00039E  D285                                 LLH,R5   ,B5
          0 00039F  5D07                                 CMV,R5   7
          0 0003A0  0981 003E                            BNE      s:8631,PREL

     2293     8596    3            THEN GOTO BAD_TPDU;
     2294     8597
     2295     8598    3            KN$TCTX.OPTION.TRACE = B$TPDU_CP6_OPT.P.OPTION.TRACE;

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:340  
   8598   0 0003A2  C845 0003                            LDR,R4   3,B5
          0 0003A4  CCC7 0007                            LDB,B4   CTX$,AUTO
          0 0003A6  CAC4 000C                            SRM,R4,'0040'X    12,B4
          0 0003A8       0040

     2296     8599
     2297     8600    3            ALTRETURN;                     /*so knn doesn't forward message      */

   8600   0 0003A9  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2298     8601
     2299     8602    3          CASE(%K_TPARM_SSN_CRDT);

     2300     8603    3            IF KN$TCTX.OPTION.OSI = '0'B

   8603   0 0003AC  CCC7 0007                            LDB,B4   CTX$,AUTO
          0 0003AE  82C4 000C                            LB,'0010'X        12,B4
          0 0003B0       0010
          0 0003B1  0581 002D                            BBF      s:8631,PREL

     2301     8604    3            THEN GOTO BAD_TPDU;
     2302     8605
     2303     8606    3            IF B$TPDU_CP6.LI ~= SIZEC(B$TPDU_CP6) -1

   8606   0 0003B3  D285                                 LLH,R5   ,B5
          0 0003B4  5D07                                 CMV,R5   7
          0 0003B5  0981 0029                            BNE      s:8631,PREL

     2304     8607    3            THEN GOTO BAD_TPDU;
     2305     8608
     2306     8609    3            KN$TCTX.SSN_CRDT = KN$TCTX.SSN_CRDT + B$TPDU_CP6.P.CREDIT;

   8609   0 0003B7  C844 004A                            LDR,R4   74,B4
          0 0003B9  CA45 0003                            ADD,R4   3,B5
          0 0003BB  CF44 004A                            STR,R4   74,B4

     2307     8610
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:341  
     2308     8611    3            IF KN$TCTX.SSN_CRDT > 0

   8611   0 0003BD  4A81 000F                            BLEZ,R4  s:8617,PREL

     2309     8612    4            THEN DO;

     2310     8613    4                 IF KN$TCTX.RECV_HEAD$ ~= ADDR(NIL)

   8613   0 0003BF  8DC4 002A                            CMN      42,B4
          0 0003C1  0901 0018                            BE       s:8622,PREL

     2311     8614    4                 THEN CALL KNT$DSESSION(KN$NETPARM);

   8614   0 0003C3  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0003C5  CBF0 0100                            LAB,B4   256,IMO
          0 0003C7  E380 0000 0000  xent                 LNJ,B6   KNT$DSESSION
          0 0003CA       0001                            DC       s:8615,PREL

     2312     8615    4                 END;

   8615   0 0003CB  0F81 000E                            B        s:8622,PREL

     2313     8616    4            ELSE DO;

     2314     8617    4                 K$TPDU_CP6_FLOW = '0'B;

   8617   0 0003CD  5C06                                 LDV,R5   6
          0 0003CE  0021                                 ALR      ;
          0 0003CF       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 0003D1       4007 0011                                ALPHANUM(K$TPDU_CP6_FLOW,AUTO,,R5,FILL)

     2315     8618    4                 K$TPDU_CP6_FLOW.P.CODE = %K_TPARM_SSN_CRDT_ACK;

   8618   0 0003D3  4C05                                 LDV,R4   5
          0 0003D4  437F                                 CSYNC    s:8618,SPREL
          0 0003D5  C7C7 0013                            STH,R4   K$TPDU_CP6_FLOW+2,AUTO

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:342  
     2316     8619    4                 CALL I$RETURN_TPDU_CP6;

   8619   0 0003D7  E3C0 0030                            LNJ,B6   s:0,PREL
          0 0003D9       0001                            DC       s:8622,PREL

     2317     8620    4                 END;

     2318     8621
     2319     8622    3            ALTRETURN;                     /*so knn doesn't forward message      */

   8622   0 0003DA  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2320     8623
     2321     8624    3          CASE(ELSE);

     2322     8625    3            GOTO FORCE_SCREECH;

   8625   0 0003DD  0F81 0010                            B        s:8645,PREL

     2323     8626
     2324     8627
     2325     8628    3            END/*do case(b$tpdu_cp6.parm.code)*/;

     2326     8629
     2327     8630        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:343  
     2328     8631    2       CASE(ELSE);

     2329     8632    2   BAD_TPDU:
     2330     8633    2         ERRNUM = %K_ERROR_TPDU_TYPE;

   8633   0 0003DF  D870 00E6            BAD_TPDU        LDR,R5   230,IMO
          0 0003E1  DF47 000C                            STR,R5   ERRNUM,AUTO

     2331     8634    2         GOTO SCREECH_CHECK;

   8634   0 0003E3  0F81 0005                            B        s:8644,PREL

     2332     8635
     2333     8636    2         END/*do case(function)*/;

     2334     8637
     2335     8638
     2336     8639
     2337     8640    1   REPORT_BAD_TSTATE:
     2338     8641    1      ERRNUM = %K_ERROR_BAD_TSTATE;

   8641   0 0003E5  C870 00E0            REPORT_BAD_TSTA*LDR,R4   224,IMO
          0 0003E7  CF47 000C                            STR,R4   ERRNUM,AUTO

     2339     8642
     2340     8643    1   SCREECH_CHECK:
     2341     8644    1      IF KNT_ERROR_SCREECH ~= 0

   8644   0 0003E9  E800 0000 0000  xsym SCREECH_CHECK   LDR,R6   KNT_ERROR_SCREECH
          0 0003EC  6901 000A                            BEZ,R6   s:8648,PREL

     2342     8645    2      THEN DO;

     2343     8646    2   FORCE_SCREECH:
     2344     8647    2           CALL SCREECH(KNT_SCODE);

   8647   0 0003EE  BB80 0000 0000  01   FORCE_SCREECH   LAB,B3   0
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:344  
          0 0003F1  CBF0 0100                            LAB,B4   256,IMO
          0 0003F3  E380 0000 0000  xent                 LNJ,B6   SCREECH
          0 0003F6       0001                            DC       s:8648,PREL

     2345     8648    2           END;

     2346     8649
     2347     8650    1   LOG_ERR:
     2348     8651    1      KN$NETPARM.THDRSZ = ERRNUM;

   8651   0 0003F7  ECC7 0004            LOG_ERR         LDB,B6   @KN$NETPARM,AUTO
          0 0003F9  E847 000C                            LDR,R6   ERRNUM,AUTO
          0 0003FB  EF46 000D                            STR,R6   13,B6

     2349     8652    1      CALL KNT$TR_ERROR(KN$NETPARM);

   8652   0 0003FD  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 0003FF  CBF0 0100                            LAB,B4   256,IMO
          0 000401  E380 0000 0000  xent                 LNJ,B6   KNT$TR_ERROR
          0 000404       0001                            DC       s:8654,PREL

     2350     8653
     2351     8654    1      ALTRETURN;

   8654   0 000405  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     2352     8655        %EJECT;
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:345  
     2353     8656
     2354     8657        /*   I$RETURN_TPDU_CP6
     2355     8658
     2356     8659           This subroutine returns a TPDU_CP6 to the host to either flow
     2357     8660           stop host session or acknowledge a zero credit TPDU_CP6.
     2358     8661        */
     2359     8662
     2360     8663    1   I$RETURN_TPDU_CP6: PROC;

   8663   0 000408  EFC7 0016            I$RETURN_TPDU_C*STB,B6   K$TPDU_UN+2,AUTO

     2361     8664    2      K$TPDU_CP6_FLOW.LI = SIZEC(K$TPDU_CP6_FLOW) -1;

   8664   0 00040A  6C05                                 LDV,R6   5
          0 00040B  E7C7 0011                            STH,R6   K$TPDU_CP6_FLOW,AUTO

     2362     8665    2      K$TPDU_CP6_FLOW.TYPE = %K_TPDU_TYPE_CP6;

   8665   0 00040D  8847 0011                            LBF,'00F0'X       K$TPDU_CP6_FLOW,AUTO
   8665   0 00040F       00F0

     2363     8666    2      K$TPDU_CP6_FLOW.DST_REF = KN$TCTX.HOST_REF;

   8666   0 000410  DCC7 0007                            LDB,B5   CTX$,AUTO
          0 000412  D845 0003                            LDR,R5   3,B5
          0 000414  DF47 0012                            STR,R5   K$TPDU_CP6_FLOW+1,AUTO

     2364     8667
     2365     8668    2      KN$NETPARM.MSGSZ = 0;

   8668   0 000416  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          0 000418  8744 0004                            CL       4,B4

     2366     8669    2      KN$NETPARM.UHDRSZ = 0;

   8669   0 00041A  8744 0007                            CL       7,B4

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:346  
     2367     8670    2      KN$NETPARM.SHDRSZ = 0;

   8670   0 00041C  8744 000A                            CL       10,B4

     2368     8671    2      KN$NETPARM.THDRSZ = SIZEC(K$TPDU_CP6_FLOW);

   8671   0 00041E  5C06                                 LDV,R5   6
          0 00041F  DF44 000D                            STR,R5   13,B4

     2369     8672    2      KN$NETPARM.THDR$ = ADDR(K$TPDU_CP6_FLOW);

   8672   0 000421  EBC7 0011                            LAB,B6   K$TPDU_CP6_FLOW,AUTO
          0 000423  EFC4 000B                            STB,B6   11,B4

     2370     8673    2      KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

   8673   0 000425  C2C5 0004                            LLH,R4   4,B5
          0 000427  CF44 0015                            STR,R4   21,B4

     2371     8674
     2372     8675    2      CALL KNN$SEND(KN$NETPARM);

   8675   0 000429  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          0 00042B  CBF0 0100                            LAB,B4   256,IMO
          0 00042D  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          0 000430       0001                            DC       s:8677,PREL

     2373     8676
     2374     8677    2      RETURN;

   8677   0 000431  ECC7 0016                            LDB,B6   K$TPDU_UN+2,AUTO
          0 000433  C3C6 0001                            LNJ,B4   1,B6
     2375     8678    2   END I$RETURN_TPDU_CP6;
     2376     8679
     2377     8680    1   END KNT$SEND_4HOST;

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:347  
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_QDPHDRS_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SEND_4HOST.
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:348  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM                7-0-0/w PTR         r     1 CTX$
     C-0-0/w UBIN(16)    r     1 ERRNUM                     9-0-0/w PTR         r     1 FRAG$
     6-0-0/w SBIN(16)    r     1 ITEMP1                    11-0-0/w STRC(48)    r     1 K$TPDU_CP6_FLOW
     D-0-0/w STRC(56)    r     1 K$TPDU_DR                 14-0-0/w STRC(32)    r     1 K$TPDU_UN
    *0-0-0/w STRC(528)   r     1 KN$NETPARM                 B-0-0/w UBIN(16)    r     1 THDRSZ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_ERROR_SCREECH          0-0-0/w UBIN(32)    r     1 KNT_SCODE
     0-0-0/w PTR         r     1 KN_DCT$$                   0-0-0/w PTR         r     1 KN_TCTX$$
     0-0-0/w UBIN(16)    r     1 KN_TCTX_MAX#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 B$NHDR                     0-0-0/c ACHR        r     1 B$TPDU
     0-0-0/w STRC(64)    r     1 B$TPDU_CP6                 0-0-0/w STRC(64)    r     1 B$TPDU_CP6_OPT
     0-0-0/w STRC(56)    r     1 B$TPDU_CR                  0-0-0/w STRC(56)    r     1 B$TPDU_DR
     0-0-0/w STRC(40)    r     1 B$TPDU_DT                  0-0-0/w STRC(128)   r     1 FRAG_HDR
     0-0-0/w STRC(256)   r     1 KN$LDCT
     0-0-0/w PTR         r     1 KN$LDCT$(0:0)
     0-0-0/w STRC(2816)  r     1 KN$TCTX
     0-0-0/w PTR         r     1 KN$TCTX$(0:0)

PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:349  

   Procedure KNT$SEND_4HOST requires 1077 words for executable code.
   Procedure KNT$SEND_4HOST requires 30 words of local(AUTO) storage.

    No errors detected in file KNT$SEND.:E05TSI    .
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:350  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:351  
          MINI XREF LISTING

ABORT_CONNECT
      8315**LABEL    8348--GOTO
B$NHDR.SOURCE_NODE
      8124**DCL      8493>>IF
B$TPDU
      8155**DCL      8365<<ASSIGN   8365>>ASSIGN
B$TPDU_CP6
      7934**DCL      8606--IF
B$TPDU_CP6.LI
      7935**DCL      8606>>IF
B$TPDU_CP6.P.CODE
      7974**DCL      8592>>DOCASE
B$TPDU_CP6.P.CREDIT
      7984**DCL      8609>>ASSIGN
B$TPDU_CP6_OPT
      8010**DCL      8595--IF
B$TPDU_CP6_OPT.LI
      8011**DCL      8595>>IF
B$TPDU_CP6_OPT.P.OPTION.TRACE
      8069**DCL      8598>>ASSIGN
B$TPDU_CR.CDT
      7785**DCL      8418<<ASSIGN   8422<<ASSIGN   8423<<ASSIGN
B$TPDU_CR.DST_REF
      7789**DCL      8210>>ASSIGN   8399>>ASSIGN
B$TPDU_CR.SRC_REF
      7797**DCL      8398>>ASSIGN   8415>>ASSIGN
B$TPDU_CR.TYPE
      7779**DCL      8234>>IF       8272>>IF       8280>>IF       8285>>DOCASE
B$TPDU_DR.DST_REF
      7854**DCL      8488>>IF       8496<<ASSIGN
B$TPDU_DR.SRC_REF
      7858**DCL      8493>>IF
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:352  
B$TPDU_DT.DST_REF
      7898**DCL      8242>>ASSIGN
B$TPDU_DT.LI
      7884**DCL      8244>>ASSIGN
BAD_TPDU
      8633**LABEL    8596--GOTO     8604--GOTO     8607--GOTO
BUFFER_REQUEST
      8347**LABEL    8460--GOTO     8472--GOTO
CTX$
      6325**DCL      6520--IMP-PTR  8210<<ASSIGN   8212>>ASSIGN   8238>>IF       8241>>ASSIGN   8255>>IF
      8255>>IF       8307<<ASSIGN   8311>>CALL     8313>>ASSIGN   8317>>CALL     8329>>IF       8346>>ASSIGN
      8347>>CALL     8351>>ASSIGN   8352>>ASSIGN   8361>>ASSIGN   8362>>ASSIGN   8369>>IF       8371>>CALL
      8378>>IF       8391>>IF       8404>>ASSIGN   8415>>ASSIGN   8417>>IF       8421>>IF       8423>>ASSIGN
      8425>>IF       8427>>CALL     8435>>ASSIGN   8442>>IF       8444>>ASSIGN   8459>>IF       8464>>IF
      8467>>ASSIGN   8468>>ASSIGN   8471>>IF       8497<<ASSIGN   8510>>IF       8512>>ASSIGN   8513>>ASSIGN
      8515>>ASSIGN   8519>>IF       8522>>IF       8524>>IF       8531>>ASSIGN   8540>>CALL     8547>>ASSIGN
      8552>>IF       8555>>IF       8557>>IF       8560>>IF       8562>>CALL     8563>>CALL     8565>>ASSIGN
      8566>>CALL     8569>>ASSIGN   8574>>IF       8574>>IF       8598>>ASSIGN   8603>>IF       8609>>ASSIGN
      8609>>ASSIGN   8611>>IF       8613>>IF       8666>>ASSIGN   8673>>ASSIGN
DECODE_TPDU_DR
      8505**LABEL    8498--GOTO
ERRNUM
      6328**DCL      8535<<ASSIGN   8633<<ASSIGN   8641<<ASSIGN   8651>>ASSIGN
FORCE_SCREECH
      8647**LABEL    8439--GOTO     8625--GOTO
FRAG$
      6326**DCL      7688--IMP-PTR  8311<>CALL     8347>>CALL     8359>>ASSIGN   8361>>ASSIGN   8362>>ASSIGN
      8364<<ASSIGN   8364>>ASSIGN   8365>>ASSIGN   8427<>CALL
FRAG_HDR
      7688**DCL      8347<>CALL     8364--ASSIGN
FRAG_HDR.SEQ
      7701**DCL      7702--REDEF
FRAG_HDR.SEQ_SBIN
      7702**DCL      8359<<ASSIGN
GHS$CANCEL_TMR
      6504**DCL-ENT  8562--CALL     8563--CALL
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:353  
GHS$SET_TMR
      6503**DCL-ENT  8371--CALL     8566--CALL
I$RETURN_TPDU_CP6
      8663**PROC     8260--CALL     8619--CALL
ITEMP1
      6324**DCL      8490<<DOINDEX  8491>>IF       8493>>IF       8493>>IF       8496>>ASSIGN   8497>>ASSIGN
      8512<<ASSIGN   8515>>ASSIGN
K$TPDU_CP6_FLOW
      6389**DCL      8258<<ASSIGN   8617<<ASSIGN   8664--ASSIGN   8671--ASSIGN   8672--ASSIGN
K$TPDU_CP6_FLOW.DST_REF
      6403**DCL      8666<<ASSIGN
K$TPDU_CP6_FLOW.LI
      6390**DCL      8664<<ASSIGN
K$TPDU_CP6_FLOW.P.CODE
      6429**DCL      8259<<ASSIGN   8618<<ASSIGN
K$TPDU_CP6_FLOW.TYPE
      6397**DCL      8665<<ASSIGN
K$TPDU_DR
      6346**DCL      8396--ASSIGN   8402--ASSIGN   8403--ASSIGN
K$TPDU_DR.DST_REF
      6360**DCL      8398<<ASSIGN
K$TPDU_DR.LI
      6347**DCL      8396<<ASSIGN
K$TPDU_DR.REASON
      6368**DCL      8400<<ASSIGN
K$TPDU_DR.SRC_REF
      6364**DCL      8399<<ASSIGN
K$TPDU_DR.TYPE
      6354**DCL      8397<<ASSIGN
K$TPDU_UN
      6460**DCL      8335--ASSIGN   8336--ASSIGN   8337--ASSIGN
K$TPDU_UN.LI
      6461**DCL      8337<<ASSIGN
K$TPDU_UN.PRT_ID
      6470**DCL      8339<<ASSIGN
K$TPDU_UN.SHARE
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:354  
      6476**DCL      8340<<ASSIGN
K$TPDU_UN.TYPE
      6465**DCL      8338<<ASSIGN
KN$LDCT.LDCTX
      7582**DCL      8352>>ASSIGN
KN$LDCT.RLCID.LDCTX
      7501**DCL      7508--REDEF    7516--REDEF
KN$LDCT.RLCID.TCTX#
      7508**DCL      8351<<ASSIGN
KN$LDCT.TRANSPORT_ID
      7535**DCL      7543--REDEF
KN$LDCT.UID
      7565**DCL      7566--REDEF    7575--REDEF
KN$LDCT$
      7423**DCL      8444>>ASSIGN   8531>>ASSIGN
KN$NETPARM
      6183**DCL         9--PROC     8239<>CALL     8250<>CALL     8281<>CALL     8302<>CALL     8315<>CALL
      8342<>CALL     8344<>CALL     8394<>CALL     8410<>CALL     8437<>CALL     8452<>CALL     8454<>CALL
      8505<>CALL     8514<>CALL     8533<>CALL     8570<>CALL     8614<>CALL     8652<>CALL     8675<>CALL
KN$NETPARM.DST_ADDR$
      6317**DCL      8468<<ASSIGN
KN$NETPARM.ERRCODE
      6290**DCL      8252>>IF       8264<<ASSIGN   8320<<ASSIGN   8346>>ASSIGN   8429<<ASSIGN
KN$NETPARM.FLAGS.CONS
      6260**DCL      8331<<ASSIGN
KN$NETPARM.FUNCTION
      6278**DCL      8274<<ASSIGN   8332<<ASSIGN   8445<<ASSIGN   8466<<ASSIGN   8530<<ASSIGN
KN$NETPARM.LDCT$
      6184**DCL      7440--IMP-PTR  8333<<ASSIGN   8351>>ASSIGN   8352>>ASSIGN   8444<<ASSIGN   8531<<ASSIGN
KN$NETPARM.MSG$
      6190**DCL      6195--REDEF    8248<<ASSIGN
KN$NETPARM.MSGSZ
      6201**DCL      8335<<ASSIGN   8406<<ASSIGN   8450<<ASSIGN   8668<<ASSIGN
KN$NETPARM.MSGW$
      6195**DCL      8336<<ASSIGN
KN$NETPARM.NHDR$
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:355  
      6242**DCL      6243--REDEF    8097--IMP-PTR  8446<<ASSIGN   8493>>IF
KN$NETPARM.NHDRSZ
      6248**DCL      8447<<ASSIGN   8529<<ASSIGN
KN$NETPARM.NODE
      6285**DCL      8241<<ASSIGN   8404<<ASSIGN   8673<<ASSIGN
KN$NETPARM.SHDR$
      6220**DCL      6221--REDEF
KN$NETPARM.SHDRSZ
      6226**DCL      8246<<ASSIGN   8408<<ASSIGN   8448<<ASSIGN   8670<<ASSIGN
KN$NETPARM.SHDR_C$
      6221**DCL      8245<<ASSIGN
KN$NETPARM.SRC_ADDR$
      6312**DCL      8467<<ASSIGN
KN$NETPARM.TCTX$
      6307**DCL      8212<<ASSIGN   8307>>ASSIGN
KN$NETPARM.TCTX_ID
      6253**DCL      8242<<ASSIGN
KN$NETPARM.THDR$
      6231**DCL      6232--REDEF    7934--IMP-PTR  8010--IMP-PTR  8403<<ASSIGN   8592>>DOCASE   8595>>IF
      8598>>ASSIGN   8606>>IF       8609>>ASSIGN   8672<<ASSIGN
KN$NETPARM.THDRSZ
      6237**DCL      8246>>ASSIGN   8283>>ASSIGN   8393<<ASSIGN   8402<<ASSIGN   8528<<ASSIGN   8651<<ASSIGN
      8671<<ASSIGN
KN$NETPARM.THDR_C$
      6232**DCL      7771--IMP-PTR  7840--IMP-PTR  7883--IMP-PTR  8210>>ASSIGN   8234>>IF       8242>>ASSIGN
      8244>>ASSIGN   8245>>ASSIGN   8272>>IF       8280>>IF       8285>>DOCASE   8365>>ASSIGN   8398>>ASSIGN
      8399>>ASSIGN   8415>>ASSIGN   8418>>ASSIGN   8422>>ASSIGN   8423>>ASSIGN   8488>>IF       8493>>IF
      8496>>ASSIGN
KN$NETPARM.UHDR$
      6206**DCL      6207--REDEF    8247<<ASSIGN
KN$NETPARM.UHDRSZ
      6215**DCL      8407<<ASSIGN   8449<<ASSIGN   8527<<ASSIGN   8669<<ASSIGN
KN$TCTX
      6520**DCL      8311<>CALL     8317<>CALL     8347<>CALL     8427<>CALL     8540<>CALL
KN$TCTX.CLASS
      6586**DCL      8369>>IF       8417>>IF       8425>>IF       8459>>IF       8471>>IF       8524>>IF
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:356  
      8552>>IF       8557>>IF       8560>>IF       8574>>IF
KN$TCTX.DST_NSAP
      7375**DCL      8468--ASSIGN
KN$TCTX.DST_NSAP.ADDRESS_N
      7405**DCL      7406--REDEF
KN$TCTX.ERR
      6777**DCL      8313<<ASSIGN   8346<<ASSIGN
KN$TCTX.FLOW_CONTROLLED
      6735**DCL      8255>>IF
KN$TCTX.HOST_NODE
      6569**DCL      8404>>ASSIGN   8493>>IF       8673>>ASSIGN
KN$TCTX.HOST_REF
      6562**DCL      8415<<ASSIGN   8493>>IF       8666>>ASSIGN
KN$TCTX.LDCTX#
      6540**DCL      8352<<ASSIGN   8444>>ASSIGN   8531>>ASSIGN
KN$TCTX.NODE
      6527**DCL      6540--REDEF    8241>>ASSIGN
KN$TCTX.OPTION.CONS
      6639**DCL      8329>>IF       8378>>IF       8442>>IF
KN$TCTX.OPTION.OSI
      6648**DCL      8255>>IF       8464>>IF       8603>>IF
KN$TCTX.OPTION.TRACE
      6634**DCL      8238>>IF       8598<<ASSIGN
KN$TCTX.RCV_WINDOW_SZ
      6592**DCL      8421>>IF       8423>>ASSIGN
KN$TCTX.RECV_HEAD$
      6926**DCL      8613>>IF
KN$TCTX.SEND_HEAD$
      6981**DCL      8361<<ASSIGN
KN$TCTX.SEND_RETRY_COUNT
      7064**DCL      8565<<ASSIGN
KN$TCTX.SEND_TAIL$
      6989**DCL      8362<<ASSIGN
KN$TCTX.SRC_NSAP
      7311**DCL      8467--ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:357  
      7341**DCL      7342--REDEF
KN$TCTX.SRC_REF
      6554**DCL      8351>>ASSIGN   8496>>ASSIGN   8512>>ASSIGN   8513<<ASSIGN   8515<<ASSIGN
KN$TCTX.SSN_CRDT
      7049**DCL      8609<<ASSIGN   8609>>ASSIGN   8611>>IF
KN$TCTX.STATE
      6521**DCL      8391>>IF       8435<<ASSIGN   8510>>IF       8519>>IF       8522>>IF       8547<<ASSIGN
      8555>>IF       8569<<ASSIGN   8574>>IF
KN$TCTX.TMR_INACTIVITY
      7159**DCL      8563<>CALL
KN$TCTX.TMR_INACTIVITY.ARG
      7161**DCL      7162--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      7191**DCL      7192--REDEF
KN$TCTX.TMR_RETRAN
      7100**DCL      8371<>CALL     8566<>CALL
KN$TCTX.TMR_RETRAN.ARG
      7102**DCL      7103--REDEF
KN$TCTX.TMR_WINDOW
      7129**DCL      8562<>CALL
KN$TCTX.TMR_WINDOW.ARG
      7131**DCL      7132--REDEF
KN$TCTX$
      7422**DCL      8210>>ASSIGN   8491>>IF       8493>>IF       8493>>IF       8496>>ASSIGN   8497>>ASSIGN
KNH$SEND
      6487**DCL-ENT  8454--CALL     8533--CALL
KNN$SEND
      6488**DCL-ENT  8344--CALL     8410--CALL     8675--CALL
KNT$DSESSION
      6495**DCL-ENT  8614--CALL
KNT$GET_SBUF
      6489**DCL-ENT  8311--CALL     8427--CALL
KNT$RELBUF
      6490**DCL-ENT  8347--CALL
KNT$SEND_CR_4HOST
      6492**DCL-ENT  8302--CALL     8437--CALL     8505--CALL
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:358  
KNT$SEND_DR
      6493**DCL-ENT  8514--CALL     8570--CALL
KNT$SEND_DR_HOST
      6494**DCL-ENT  8315--CALL
KNT$SEND_HOST_DATA
      6491**DCL-ENT  8250--CALL
KNT$SET_REFWAIT
      6497**DCL-ENT  8317--CALL     8540--CALL
KNT$TR_ERROR
      6498**DCL-ENT  8394--CALL     8652--CALL
KNT$TR_NCR
      6501**DCL-ENT  8342--CALL
KNT$TR_RCVH
      6500**DCL-ENT  8239--CALL     8281--CALL
KNT$TR_SEND
      6502**DCL-ENT  8452--CALL
KNT_ERROR_SCREECH
      6511**DCL      8644>>IF
KNT_SCODE
      6512**DCL      8647<>CALL
KN_DCT$$
      6510**DCL      7423--IMP-PTR  8444>>ASSIGN   8531>>ASSIGN
KN_TCTX$$
      6509**DCL      7422--IMP-PTR  8210>>ASSIGN   8491>>IF       8493>>IF       8493>>IF       8496>>ASSIGN
      8497>>ASSIGN
KN_TCTX_MAX#
      6508**DCL      8490>>DOINDEX
MSG_COMPLETE
      8320**LABEL    8304--GOTO     8379--GOTO     8412--GOTO
REPORT_BAD_TSTATE
      8641**LABEL    8576--GOTO
SCREECH
      6505**DCL-ENT  8647--CALL
SCREECH_CHECK
      8644**LABEL    8536--GOTO     8634--GOTO
SEND_TERM
PL6.E3A0      #005=KNT$SEND_4HOST File=KNT$SEND.:E05TSI                          WED 07/30/97 01:14 Page:359  
      8527**LABEL    8553--GOTO
SET_CLOSING
      8569**LABEL    8558--GOTO
SET_REFWAIT
      8540**LABEL    8516--GOTO
SET_RETRY
      8565**LABEL    8575--GOTO
STRIP_OFF_THDR
      8124**LABEL    8275--GOTO
TERM_VC
      8547**LABEL    8520--GOTO
THDRSZ
      6327**DCL      8155--IMP-SIZ  8244<<ASSIGN   8245>>ASSIGN   8246>>ASSIGN   8283<<ASSIGN   8311<>CALL
      8365>>ASSIGN   8365>>ASSIGN   8427<>CALL
