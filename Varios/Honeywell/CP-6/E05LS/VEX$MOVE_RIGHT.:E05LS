VERSION E05

PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:1    
        1        1        /*M*    VEX$MOVE_RIGHT - MOVE A PORTION OF AN EDIT RECORD TO THE RIGHT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$MOVE_RIGHT: PROC(CLMN,MOVE#);
        9        9        /**/
       10       10        /*F*     NAME:     VEX$MOVE_RIGHT
       11       11                 PURPOSE:  TO SHIFT THE RIGHT HAND PORTION OF A RECORD TO THE
       12       12                           RIGHT STARTING FROM A GIVEN COLUMN AND BY A GIVEN
       13       13                           AMOUNT. THE HOLE IS BLANK FILLED.    */
       14       14        /**/
       15       15        /*D*     NAME:     VEX$MOVE_RIGHT
       16       16                 PARAMETERS: CLMN - STARTING COLUMN OF PORTION OF RECORD TO SHIFT
       17       17                           MOVE# - NUMBER OF COLUMN POSITIONS TO BE SHIFTED RIGHT
       18       18                 DESCRIPTION: IF DATA WILL BE LOST OFF OF THE RIGHT EDGE OF THE
       19       19                           RECORD WHEN THE RIGHT PORTION IS MOVED RIGHT THEN
       20       20                           THE USER IS INFORMED OF THIS 'OVERFLOW'.THEN THE
       21       21                           RIGHT (REC_SIZE-CLMN) COLUMNS ARE MOVED MOVE# POSITIONS
       22       22                           TO THE RIGHT ,THE HOLE IS BLANK FILLED AND VEX$MOVE_RIGHT
       23       23                           RETURNS TO THE USER.                    */
       24       24        /**/
       25       25        /**********************************************************************/
       26       26        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       27       27        /**********************************************************************/
       28       28    1   DCL CLMN UBIN(36);
       29       29    1   DCL MOVE# UBIN(36);
       30       30        /*****************************************************************/
       31       31        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       32       32        /*****************************************************************/
       33       33    1   DCL TEMP_COUNT UBIN(36);
       34       34        /*****************************************************************/
       35       35        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       36       36        /*****************************************************************/
       37       37        %INCLUDE VE_SUBS_C;
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:2    
       38      231        %INCLUDE VE_PERR_C;
       39      448        /**/
       40      449        %INCLUDE VE_FLAGS_R;
       41      500        /**/
       42      501    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
       43      502    1   DCL REC_SIZE UBIN(36) SYMREF;
       44      503    1   DCL TEMP_BUF CHAR(PC_RECSIZE#) AUTO;
       45      504    1   DCL MAX_CLMN UBIN(36) SYMREF;
       46      505    1   DCL BLANKS CHAR(4)   SYMREF;
       47      506    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       48      507        %EJECT;
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:3    
       49      508        /*****************************************************************************/
       50      509        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       51      510        /*****************************************************************************/
       52      511        /**/
       53      512    2        IF (CLMN > REC_SIZE) THEN DO;
       54      513    2           REC_SIZE = CLMN + MOVE#;
       55      514    2           RETURN;
       56      515    2           END;
       57      516        /**/
       58      517    1        TEMP_BUF = SUBSTR(REC_BUF,CLMN,REC_SIZE-CLMN);
       59      518        /**/
       60      519    2        IF (CLMN + MOVE# > MAX_CLMN) THEN DO;
       61      520    2           CALL INSERT (REC_BUF,CLMN,MAX_CLMN-CLMN,BLANKS);
       62      521    3           IF (~FLAGS.OVERFLOWMSG) THEN DO;
       63      522    3              CALL VEX$ERROR(E$E_OVERFLOW,2);
       64      523    3              FLAGS.OVERFLOWMSG = TRUE;
       65      524    3              END;
       66      525        /**/
       67      526        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
       68      527                 DESCRIPTION: Characters have been shifted off of the right
       69      528                           edge of the record.
       70      529        */
       71      530    2           REC_SIZE = MAX_CLMN;
       72      531    2           RETURN;
       73      532    2           END;
       74      533        /**/
       75      534    2        IF (REC_SIZE + MOVE# > MAX_CLMN) THEN DO;
       76      535    3           IF (~FLAGS.OVERFLOWMSG) THEN DO;
       77      536    3              CALL VEX$ERROR(E$E_OVERFLOW,2);
       78      537    3              FLAGS.OVERFLOWMSG = TRUE;
       79      538    3              END;
       80      539        /**/
       81      540        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
       82      541                 DESCRIPTION: Characters have been shifted off of the right
       83      542                           edge of the record.
       84      543        */
       85      544    2           TEMP_COUNT = MAX_CLMN - MOVE# - CLMN;
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:4    
       86      545    2           END;
       87      546    1        ELSE TEMP_COUNT = REC_SIZE - CLMN;
       88      547        /**/
       89      548    1        CALL INSERT (REC_BUF,CLMN+MOVE#,TEMP_COUNT,
       90      549    1           SUBSTR(TEMP_BUF,0,TEMP_COUNT));
       91      550    1        CALL INSERT (REC_BUF,CLMN,MOVE#,BLANKS);
       92      551        /**/
       93      552    1        REC_SIZE = REC_SIZE + MOVE#;
       94      553    1        IF (REC_SIZE > MAX_CLMN) THEN REC_SIZE = MAX_CLMN;
       95      554    1        RETURN;
       96      555    1   END;                                    /* END VEX$MOVE_RIGHT                 */

PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:5    
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$MOVE_RIGHT.

   Procedure VEX$MOVE_RIGHT requires 91 words for executable code.
   Procedure VEX$MOVE_RIGHT requires 262 words of local(AUTO) storage.

    No errors detected in file VEX$MOVE_RIGHT.:E05TSI    .

PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:6    

 Object Unit name= VEX$MOVE_RIGHT                             File name= VEX$MOVE_RIGHT.:E05TOU
 UTS= JUL 30 '97 07:13:41.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    91    133  VEX$MOVE_RIGHT
    1  RoData even  none     3      3  VEX$MOVE_RIGHT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  VEX$MOVE_RIGHT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VEX$ERROR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FLAGS                                 REC_BUF                               REC_SIZE
     MAX_CLMN                              BLANKS                                B_VECTNIL
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:8    


        1        1        /*M*    VEX$MOVE_RIGHT - MOVE A PORTION OF AN EDIT RECORD TO THE RIGHT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$MOVE_RIGHT: PROC(CLMN,MOVE#);

      8  0 000000   000000 700200 xent  VEX$MOVE_RI* TSX0  ! X66_AUTO_2
         0 000001   000406 000002                    ZERO    262,2

        9        9        /**/
       10       10        /*F*     NAME:     VEX$MOVE_RIGHT
       11       11                 PURPOSE:  TO SHIFT THE RIGHT HAND PORTION OF A RECORD TO THE
       12       12                           RIGHT STARTING FROM A GIVEN COLUMN AND BY A GIVEN
       13       13                           AMOUNT. THE HOLE IS BLANK FILLED.    */
       14       14        /**/
       15       15        /*D*     NAME:     VEX$MOVE_RIGHT
       16       16                 PARAMETERS: CLMN - STARTING COLUMN OF PORTION OF RECORD TO SHIFT
       17       17                           MOVE# - NUMBER OF COLUMN POSITIONS TO BE SHIFTED RIGHT
       18       18                 DESCRIPTION: IF DATA WILL BE LOST OFF OF THE RIGHT EDGE OF THE
       19       19                           RECORD WHEN THE RIGHT PORTION IS MOVED RIGHT THEN
       20       20                           THE USER IS INFORMED OF THIS 'OVERFLOW'.THEN THE
       21       21                           RIGHT (REC_SIZE-CLMN) COLUMNS ARE MOVED MOVE# POSITIONS
       22       22                           TO THE RIGHT ,THE HOLE IS BLANK FILLED AND VEX$MOVE_RIGHT
       23       23                           RETURNS TO THE USER.                    */
       24       24        /**/
       25       25        /**********************************************************************/
       26       26        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       27       27        /**********************************************************************/
       28       28    1   DCL CLMN UBIN(36);
       29       29    1   DCL MOVE# UBIN(36);
       30       30        /*****************************************************************/
       31       31        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       32       32        /*****************************************************************/
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:9    
       33       33    1   DCL TEMP_COUNT UBIN(36);
       34       34        /*****************************************************************/
       35       35        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       36       36        /*****************************************************************/
       37       37        %INCLUDE VE_SUBS_C;
       38      231        %INCLUDE VE_PERR_C;
       39      448        /**/
       40      449        %INCLUDE VE_FLAGS_R;
       41      500        /**/
       42      501    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
       43      502    1   DCL REC_SIZE UBIN(36) SYMREF;
       44      503    1   DCL TEMP_BUF CHAR(PC_RECSIZE#) AUTO;
       45      504    1   DCL MAX_CLMN UBIN(36) SYMREF;
       46      505    1   DCL BLANKS CHAR(4)   SYMREF;
       47      506    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       48      507        %EJECT;
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:10   
       49      508        /*****************************************************************************/
       50      509        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       51      510        /*****************************************************************************/
       52      511        /**/
       53      512    2        IF (CLMN > REC_SIZE) THEN DO;

    512  0 000002   200003 470500                    LDP0    @CLMN,,AUTO
         0 000003   000000 236000 xsym               LDQ     REC_SIZE
         0 000004   000000 116100                    CMPQ    0,,PR0
         0 000005   000013 603000 0                  TRC     s:517

       54      513    2           REC_SIZE = CLMN + MOVE#;

    513  0 000006   200004 471500                    LDP1    @MOVE#,,AUTO
         0 000007   000000 236100                    LDQ     0,,PR0
         0 000010   100000 036100                    ADLQ    0,,PR1
         0 000011   000000 756000 xsym               STQ     REC_SIZE

       55      514    2           RETURN;

    514  0 000012   000000 702200 xent               TSX2  ! X66_ARET

       56      515    2           END;
       57      516        /**/
       58      517    1        TEMP_BUF = SUBSTR(REC_BUF,CLMN,REC_SIZE-CLMN);

    517  0 000013   000000 136100                    SBLQ    0,,PR0
         0 000014   000000 235100                    LDA     0,,PR0
         0 000015   000000 620006                    EAX0    0,QL
         0 000016   040100 100445                    MLR     fill='040'O
         0 000017   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0
         0 000020   200006 002000                    ADSC9   TEMP_BUF,,AUTO           cn=0,n=1024

       59      518        /**/
       60      519    2        IF (CLMN + MOVE# > MAX_CLMN) THEN DO;

    519  0 000021   200004 471500                    LDP1    @MOVE#,,AUTO
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:11   
         0 000022   000000 236100                    LDQ     0,,PR0
         0 000023   100000 036100                    ADLQ    0,,PR1
         0 000024   000000 116000 xsym               CMPQ    MAX_CLMN
         0 000025   000053 602000 0                  TNC     s:534
         0 000026   000053 600000 0                  TZE     s:534

       61      520    2           CALL INSERT (REC_BUF,CLMN,MAX_CLMN-CLMN,BLANKS);

    520  0 000027   000000 236000 xsym               LDQ     MAX_CLMN
         0 000030   000000 136100                    SBLQ    0,,PR0
         0 000031   000000 620006                    EAX0    0,QL
         0 000032   040045 100400                    MLR     fill='040'O
         0 000033   000000 000004 xsym               ADSC9   BLANKS                   cn=0,n=4
         0 000034   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0

       62      521    3           IF (~FLAGS.OVERFLOWMSG) THEN DO;

    521  0 000035   000000 236000 xsym               LDQ     FLAGS
         0 000036   000023 736000                    QLS     19
         0 000037   400000 376003                    ANQ     -131072,DU
         0 000040   400000 676003                    ERQ     -131072,DU
         0 000041   000050 600000 0                  TZE     s:530

       63      522    3              CALL VEX$ERROR(E$E_OVERFLOW,2);

    522  0 000042   000001 630400 1                  EPPR0   1
         0 000043   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000044   000000 701000 xent               TSX1    VEX$ERROR
         0 000045   000000 011000                    NOP     0

       64      523    3              FLAGS.OVERFLOWMSG = TRUE;

    523  0 000046   200000 236007                    LDQ     65536,DL
         0 000047   000000 256000 xsym               ORSQ    FLAGS

       65      524    3              END;

PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:12   
       66      525        /**/
       67      526        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
       68      527                 DESCRIPTION: Characters have been shifted off of the right
       69      528                           edge of the record.
       70      529        */
       71      530    2           REC_SIZE = MAX_CLMN;

    530  0 000050   000000 235000 xsym               LDA     MAX_CLMN
         0 000051   000000 755000 xsym               STA     REC_SIZE

       72      531    2           RETURN;

    531  0 000052   000000 702200 xent               TSX2  ! X66_ARET

       73      532    2           END;
       74      533        /**/
       75      534    2        IF (REC_SIZE + MOVE# > MAX_CLMN) THEN DO;

    534  0 000053   000000 236000 xsym               LDQ     REC_SIZE
         0 000054   100000 036100                    ADLQ    0,,PR1
         0 000055   000000 116000 xsym               CMPQ    MAX_CLMN
         0 000056   000102 602000 0                  TNC     s:546
         0 000057   000102 600000 0                  TZE     s:546

       76      535    3           IF (~FLAGS.OVERFLOWMSG) THEN DO;

    535  0 000060   000000 236000 xsym               LDQ     FLAGS
         0 000061   000023 736000                    QLS     19
         0 000062   400000 376003                    ANQ     -131072,DU
         0 000063   400000 676003                    ERQ     -131072,DU
         0 000064   000073 600000 0                  TZE     s:544

       77      536    3              CALL VEX$ERROR(E$E_OVERFLOW,2);

    536  0 000065   000001 630400 1                  EPPR0   1
         0 000066   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000067   000000 701000 xent               TSX1    VEX$ERROR
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:13   
         0 000070   000000 011000                    NOP     0

       78      537    3              FLAGS.OVERFLOWMSG = TRUE;

    537  0 000071   200000 236007                    LDQ     65536,DL
         0 000072   000000 256000 xsym               ORSQ    FLAGS

       79      538    3              END;

       80      539        /**/
       81      540        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
       82      541                 DESCRIPTION: Characters have been shifted off of the right
       83      542                           edge of the record.
       84      543        */
       85      544    2           TEMP_COUNT = MAX_CLMN - MOVE# - CLMN;

    544  0 000073   200004 470500                    LDP0    @MOVE#,,AUTO
         0 000074   000000 236000 xsym               LDQ     MAX_CLMN
         0 000075   000000 136100                    SBLQ    0,,PR0
         0 000076   200003 471500                    LDP1    @CLMN,,AUTO
         0 000077   100000 136100                    SBLQ    0,,PR1
         0 000100   200005 756100                    STQ     TEMP_COUNT,,AUTO

       86      545    2           END;

    545  0 000101   000105 710000 0                  TRA     s:548

       87      546    1        ELSE TEMP_COUNT = REC_SIZE - CLMN;

    546  0 000102   000000 236000 xsym               LDQ     REC_SIZE
         0 000103   000000 136100                    SBLQ    0,,PR0
         0 000104   200005 756100                    STQ     TEMP_COUNT,,AUTO

       88      547        /**/
       89      548    1        CALL INSERT (REC_BUF,CLMN+MOVE#,TEMP_COUNT,

    548  0 000105   200003 470500                    LDP0    @CLMN,,AUTO
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:14   
         0 000106   200004 471500                    LDP1    @MOVE#,,AUTO
         0 000107   000000 236100                    LDQ     0,,PR0
         0 000110   100000 036100                    ADLQ    0,,PR1
         0 000111   200005 720100                    LXL0    TEMP_COUNT,,AUTO
         0 000112   040046 100540                    MLR     fill='040'O
         0 000113   200006 000010                    ADSC9   TEMP_BUF,,AUTO           cn=0,n=*X0
         0 000114   000000 000010 xsym               ADSC9   REC_BUF,Q                cn=0,n=*X0

       90      549    1           SUBSTR(TEMP_BUF,0,TEMP_COUNT));
       91      550    1        CALL INSERT (REC_BUF,CLMN,MOVE#,BLANKS);

    550  0 000115   000000 235100                    LDA     0,,PR0
         0 000116   100000 721100                    LXL1    0,,PR1
         0 000117   040045 100400                    MLR     fill='040'O
         0 000120   000000 000004 xsym               ADSC9   BLANKS                   cn=0,n=4
         0 000121   000000 000011 xsym               ADSC9   REC_BUF,A                cn=0,n=*X1

       92      551        /**/
       93      552    1        REC_SIZE = REC_SIZE + MOVE#;

    552  0 000122   000000 236000 xsym               LDQ     REC_SIZE
         0 000123   100000 036100                    ADLQ    0,,PR1
         0 000124   000000 756000 xsym               STQ     REC_SIZE

       94      553    1        IF (REC_SIZE > MAX_CLMN) THEN REC_SIZE = MAX_CLMN;

    553  0 000125   000000 116000 xsym               CMPQ    MAX_CLMN
         0 000126   000132 602000 0                  TNC     s:554
         0 000127   000132 600000 0                  TZE     s:554

    553  0 000130   000000 235000 xsym               LDA     MAX_CLMN
         0 000131   000000 755000 xsym               STA     REC_SIZE

       95      554    1        RETURN;

    554  0 000132   000000 702200 xent               TSX2  ! X66_ARET
       96      555    1   END;                                    /* END VEX$MOVE_RIGHT                 */
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:15   

PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:16   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$MOVE_RIGHT.
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:17   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CLMN                      4-0-0/w PTR         r     1 @MOVE#
    *0-0-0/w UBIN        r     1 CLMN                      *0-0-0/w UBIN        r     1 MOVE#
     6-0-0/c CHAR(1024)  r     1 TEMP_BUF                   5-0-0/w UBIN        r     1 TEMP_COUNT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)     r     1 BLANKS                     0-0-0/b STRC(72)    r     1 FLAGS
     0-0-0/w UBIN        r     1 MAX_CLMN                   0-0-0/c CHAR(1024)  r     1 REC_BUF
     0-0-0/w UBIN        r     1 REC_SIZE


   Procedure VEX$MOVE_RIGHT requires 91 words for executable code.
   Procedure VEX$MOVE_RIGHT requires 262 words of local(AUTO) storage.

    No errors detected in file VEX$MOVE_RIGHT.:E05TSI    .
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$MOVE_RIGHT File=VEX$MOVE_RIGHT.:E05TSI                    WED 07/30/97 07:13 Page:19   
          MINI XREF LISTING

BLANKS
       505**DCL       520>>CALLBLT   550>>CALLBLT
CLMN
        28**DCL         8--PROC      512>>IF        513>>ASSIGN    517>>ASSIGN    517>>ASSIGN    519>>IF
       520>>CALLBLT   520>>CALLBLT   544>>ASSIGN    546>>ASSIGN    548>>CALLBLT   550>>CALLBLT
FLAGS.OVERFLOWMSG
       477**DCL       521>>IF        523<<ASSIGN    535>>IF        537<<ASSIGN
MAX_CLMN
       504**DCL       519>>IF        520>>CALLBLT   530>>ASSIGN    534>>IF        544>>ASSIGN    553>>IF
       553>>ASSIGN
MOVE#
        29**DCL         8--PROC      513>>ASSIGN    519>>IF        534>>IF        544>>ASSIGN    548>>CALLBLT
       550>>CALLBLT   552>>ASSIGN
REC_BUF
       501**DCL       517>>ASSIGN    520<<CALLBLT   548<<CALLBLT   550<<CALLBLT
REC_SIZE
       502**DCL       512>>IF        513<<ASSIGN    517>>ASSIGN    530<<ASSIGN    534>>IF        546>>ASSIGN
       552<<ASSIGN    552>>ASSIGN    553>>IF        553<<ASSIGN
TEMP_BUF
       503**DCL       517<<ASSIGN    548>>CALLBLT
TEMP_COUNT
        33**DCL       544<<ASSIGN    546<<ASSIGN    548>>CALLBLT   548>>CALLBLT
VEX$ERROR
       506**DCL-ENT   522--CALL      536--CALL
