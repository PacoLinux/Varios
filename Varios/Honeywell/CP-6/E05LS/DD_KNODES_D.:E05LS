

14:20 JUL 28 '97 DD_KNODES_D.:E05SI                                        1    
    1      /*M* DD_KNODES_D - Concatenation nodes for SYNTAX command binding. */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8                                              /**/
    9
   10      %MACRO NODE_DEFS (STCLASS="AREAREF",FCG=NU_);
   11
   12      %LSET STR = CONCAT(TEXTCHAR(STCLASS), '        ');
   13      %IF SUBSTR(STR,0,5)='BASED' OR SUBSTR(STR,0,7)='AREAREF' OR SUBSTR(STR,0,6)='SYMREF';
   14           DCL DD_MODE_NODE_PTR$(0:8) PTR SYMREF READONLY; /* Mode-changed nodes */
   15           DCL DD_HOST_NODE_PTR$(0:8) PTR SYMREF READONLY; /* Host version nodes */
   16           DCL DD_L6_NODE_PTR$(0:8) PTR SYMREF READONLY; /* Fep version nodes */
   17           DCL DD_L6X_NODE_PTR$(0:0) PTR SYMREF READONLY; /* Fep Xdelta change */
   18           DCL DD_COMPNODE$(0:13) PTR SYMREF READONLY; /* Indexed by compilerid */
   19           DCL DD_COMP_NODE_PTR$(0:11) PTR SYMREF READONLY; /* Where to store pointer */
   20           DCL DD$COMP_NODE_PTR$(0:11) PTR BASED ALIGNED; /* To ref through COMPNODE$ */
   21           %P$NODE(NAME=DD_INSTR_CONT,STCLASS=STCLASS);
   22           %P$NODE(STCLASS=BASED, NAME=DD_NODE);
   23      %ELSE;
   24           %P$NODE(NAME=DD_CNR4,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   25           %P$NODE(NAME=DD_L@DIV,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   26           %P$NODE(NAME=DD_L@LSHIFT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   27           %P$NODE(NAME=DD_L@MINUS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   28           %P$NODE(NAME=DD_L@MULT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   29           %P$NODE(NAME=DD_L@PLUS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   30           %P$NODE(NAME=DD_L@RSHIFT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   31           %P$NODE(NAME=DD_L@OR,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   32           %P$NODE(NAME=DD_L@AND,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   33           %P$NODE(NAME=DD_SYMBOLS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   34           %P$NODE(NAME=DD_SYMDEL,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   35           %P$NODE(NAME=DD_SYMLIST,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   36           %P$NODE(NAME=DD_INSTR_CONT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
   37      %LSET P=CHARTEXT(TEXTCHAR(FCG));
14:20 JUL 28 '97 DD_KNODES_D.:E05SI                                        2    
   38           DCL %(P)DUMP SBIN SYMREF;
   39           DCL %(P)ECHO SBIN SYMREF;
   40           DCL %(P)OUTPUT SBIN SYMREF;
   41           DCL %(P)READ SBIN SYMREF;
   42           %P$NODE(NAME=DD_CNR2,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(CNR2_HOST)");
   43           %P$NODE(NAME=DD_BASE,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(OCTIL)");
   44           %P$NODE(NAME=DD_BASE1,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(OCTIL1)");
   45           %P$NODE(NAME=DD_BASEDIG,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(ODIG)");
   46           %P$NODE(NAME=DD_BASEBOTH,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(OCTILBOTH)");
   47           %P$NODE(NAME=DD_INSTR,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(INSTR)");
   48           %P$NODE(NAME=DD_DUMP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)DUMP)");
   49           %P$NODE(NAME=DD_ECHO,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)ECHO)");
   50           %P$NODE(NAME=DD_KEEP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)KEEP)");
   51           %P$NODE(NAME=DD_IGNORE,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(NU_IGNORE)");
   52           %P$NODE(NAME=DD_TRAP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(NU_TRAP)");
   53           %P$NODE(NAME=DD_OUTPUT,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)OUTPUT)");
   54           %P$NODE(NAME=DD_READ,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)READ)");
   55
   56           DCL CNR4_FORTRAN SBIN SYMREF;
   57           DCL CNR4_PL6 SBIN SYMREF;
   58           DCL L@DIV SBIN SYMREF;
   59           DCL L@LSHIFT SBIN SYMREF;
   60           DCL L@PLUS SBIN SYMREF;
   61           DCL L@MINUS SBIN SYMREF;
   62           DCL L@MULT SBIN SYMREF;
   63           DCL L@RSHIFT SBIN SYMREF;
   64           DCL L@OR SBIN SYMREF;
   65           DCL L@AND SBIN SYMREF;
   66           DCL SYMBOL_PL6 SBIN SYMREF;
   67           DCL SYMDEL_PL6 SBIN SYMREF;
   68           DCL SYMLIST SBIN SYMREF;
   69           DCL SYMBOL_CC SBIN SYMREF;
   70           DCL CNR4_COBOL SBIN SYMREF;
   71           DCL L@DIVC SBIN SYMREF;
   72           DCL L@LSHIFTC SBIN SYMREF;
   73           DCL L@PLUSC SBIN SYMREF;
   74           DCL L@MINUSC SBIN SYMREF;
14:20 JUL 28 '97 DD_KNODES_D.:E05SI                                        3    
   75           DCL L@MULTC SBIN SYMREF;
   76           DCL L@RSHIFTC SBIN SYMREF;
   77           DCL L@ORC SBIN SYMREF;
   78           DCL L@ANDC SBIN SYMREF;
   79           DCL SYMBOL_COBOL SBIN SYMREF;
   80           DCL SYMDEL_COBOL SBIN SYMREF;
   81           DCL SYMLISTC SBIN SYMREF;
   82           DCL NU_KEEP SBIN SYMREF;
   83           DCL NU_TRAP SBIN SYMREF;
   84           DCL NU_IGNORE SBIN SYMREF;
   85           DCL OCTIL SBIN SYMREF;
   86           DCL OCTIL1 SBIN SYMREF;
   87           DCL ODIG SBIN SYMREF;
   88           DCL OCTILBOTH SBIN SYMREF;
   89           DCL INSTR SBIN SYMREF;
   90           DCL CNR2_HOST SBIN SYMREF;
   91           DCL NF_KEEP SBIN SYMREF;
   92           DCL NF_TRAP SBIN SYMREF;
   93           DCL NF_IGNORE SBIN SYMREF;
   94           DCL HEXIL SBIN SYMREF;
   95           DCL HEXIL1 SBIN SYMREF;
   96           DCL HDIG SBIN SYMREF;
   97           DCL HEXBOTH SBIN SYMREF;
   98           DCL INSTR_L6 SBIN SYMREF;
   99           DCL CNR2_L6 SBIN SYMREF;
  100           DCL NX_KEEP SBIN SYMREF;
  101           DCL DD_MODE_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
  102             ADDR(DD_KEEP),  /* must be first, for L6XDELTA */
  103             ADDR(DD_TRAP),
  104             ADDR(DD_IGNORE),
  105             ADDR(DD_BASE),
  106             ADDR(DD_BASE1),
  107             ADDR(DD_BASEDIG),
  108             ADDR(DD_BASEBOTH),
  109             ADDR(DD_INSTR),
  110             ADDR(DD_CNR2));
  111           DCL DD_HOST_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
14:20 JUL 28 '97 DD_KNODES_D.:E05SI                                        4    
  112             ADDR(NU_KEEP),  /* must be first, for L6XDELTA */
  113             ADDR(NU_TRAP),
  114             ADDR(NU_IGNORE),
  115             ADDR(OCTIL),
  116             ADDR(OCTIL1),
  117             ADDR(ODIG),
  118             ADDR(OCTILBOTH),
  119             ADDR(INSTR),
  120             ADDR(CNR2_HOST));
  121           DCL DD_L6_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
  122             ADDR(NF_KEEP),  /* must be first, for L6XDELTA */
  123             ADDR(NF_TRAP),
  124             ADDR(NF_IGNORE),
  125             ADDR(HEXIL),
  126             ADDR(HEXIL1),
  127             ADDR(HDIG),
  128             ADDR(HEXBOTH),
  129             ADDR(INSTR_L6),
  130             ADDR(CNR2_L6));
  131           DCL DD_L6X_NODE_PTR$(0:0) PTR CONSTANT SYMDEF INIT(
  132             ADDR(NX_KEEP)); /* must be first, for L6XDELTA - see? */
  133           DCL DD_COMP_NODE_PTR$(0:11) PTR CONSTANT SYMDEF INIT(
  134             ADDR(DD_CNR4),
  135             ADDR(DD_L@DIV),
  136             ADDR(DD_L@LSHIFT),
  137             ADDR(DD_L@PLUS),
  138             ADDR(DD_L@MINUS),
  139             ADDR(DD_L@MULT),
  140             ADDR(DD_L@RSHIFT),
  141             ADDR(DD_L@OR),
  142             ADDR(DD_L@AND),
  143             ADDR(DD_SYMBOLS),
  144             ADDR(DD_SYMDEL),
  145             ADDR(DD_SYMLIST) );
  146           DCL DD_SYN_PL6(0:11) PTR CONSTANT SYMDEF INIT(
  147             ADDR(CNR4_PL6),
  148             ADDR(L@DIV),
14:20 JUL 28 '97 DD_KNODES_D.:E05SI                                        5    
  149             ADDR(L@LSHIFT),
  150             ADDR(L@PLUS),
  151             ADDR(L@MINUS),
  152             ADDR(L@MULT),
  153             ADDR(L@RSHIFT),
  154             ADDR(L@OR),
  155             ADDR(L@AND),
  156             ADDR(SYMBOL_PL6),
  157             ADDR(SYMDEL_PL6),
  158             ADDR(SYMLIST) );
  159           DCL DD_SYN_FORT(0:11) PTR CONSTANT SYMDEF INIT(
  160             ADDR(CNR4_FORTRAN),
  161             ADDR(L@DIV),
  162             ADDR(L@LSHIFT),
  163             ADDR(L@PLUS),
  164             ADDR(L@MINUS),
  165             ADDR(L@MULT),
  166             ADDR(L@RSHIFT),
  167             ADDR(L@OR),
  168             ADDR(L@AND),
  169             ADDR(SYMBOL_PL6),
  170             ADDR(SYMDEL_PL6),
  171             ADDR(SYMLIST) );
  172           DCL DD_SYN_CC(0:11) PTR CONSTANT SYMDEF INIT(
  173             ADDR(CNR4_PL6),
  174             ADDR(L@DIV),
  175             ADDR(L@LSHIFT),
  176             ADDR(L@PLUS),
  177             ADDR(L@MINUS),
  178             ADDR(L@MULT),
  179             ADDR(L@RSHIFT),
  180             ADDR(L@OR),
  181             ADDR(L@AND),
  182             ADDR(SYMBOL_CC),
  183             ADDR(SYMDEL_PL6),
  184             ADDR(SYMLIST) ); /* Could fix to allow "A -> first sublevel" */
  185           DCL DD_SYN_COBOL(0:11) PTR CONSTANT SYMDEF INIT(
14:20 JUL 28 '97 DD_KNODES_D.:E05SI                                        6    
  186             ADDR(CNR4_COBOL),
  187             ADDR(L@DIVC),
  188             ADDR(L@LSHIFTC),
  189             ADDR(L@PLUSC),
  190             ADDR(L@MINUSC),
  191             ADDR(L@MULTC),
  192             ADDR(L@RSHIFTC),
  193             ADDR(L@ORC),
  194             ADDR(L@ANDC),
  195             ADDR(SYMBOL_COBOL),
  196             ADDR(SYMDEL_COBOL),
  197             ADDR(SYMLISTC) );
  198           DCL DD_COMPNODE$(0:13) PTR CONSTANT SYMDEF INIT(
  199             ADDR(DD_SYN_PL6),  /* GMAP */
  200             ADDR(DD_SYN_PL6),  /* PL6 */
  201             ADDR(DD_SYN_FORT),  /* FORTRAN */
  202             ADDR(DD_SYN_COBOL),  /* COBOL */
  203             ADDR(DD_SYN_PL6),  /* PL1 */
  204             ADDR(DD_SYN_PL6),  /* RPG */
  205             ADDR(DD_SYN_PL6),  /* PASCAL */
  206             ADDR(DD_SYN_PL6),  /* MOMUS */
  207             ADDR(DD_SYN_COBOL),  /* FPL */
  208             ADDR(DD_SYN_PL6),  /* PARTRGE */
  209             ADDR(DD_SYN_PL6),  /* IDL */
  210             ADDR(DD_SYN_PL6),  /* ELSIE */
  211             ADDR(DD_SYN_PL6),  /* CALF */
  212             ADDR(DD_SYN_CC) ); /* C */
  213      %ENDIF;
  214      %MEND;
  215

