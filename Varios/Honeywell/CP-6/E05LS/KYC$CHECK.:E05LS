VERSION E05

PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:1    
        1        1        /*M* KYC$CHECK_CARD - CHECK FOR SPECIAL CONTROL CARDS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /* This routine is called after we have read a card to determine
       10       10        if the card was one of !ASC, !BIN, !EOD, !FIN, or !JOB.  The type
       11       11        of control card is returned in code using the subs %KY#CNTRL_code from
       12       12        KY$IUR_SUBS.  If the card read is not special the code returned is
       13       13        %KY#CNTRL_NONE.                                          */
       14       14        /**/
       15       15        /*P* NAME: KYC$CHECK_CARD - CHECK FOR SPECIAL CONTROL CARDS */
       16       16        KYC$CHECK_CARD: PROC(KY$CTX,CODE);
       17       17        /**/
       18       18        %INCLUDE KY_URP_M;
       19      313        %INCLUDE KY_SUBS_C;
       20      402        %INCLUDE KV_GLBCNS_E;
       21      743        /**/
       22      744        %KY$CTX;
       23      921    1          DCL CODE UBIN WORD;
       24      922        /**/
       25      923    1          DCL BITBASE (0:79) BIT(16) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       26      924    1          DCL JOBBITBASE (0:3) BIT(16) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       27      925    1          DCL CHARBASE CHAR(80) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       28      926    1          DCL JOBCHARBASE CHAR(4) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       29      927        /**/
       30      928        %EJECT;
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:2    
       31      929    1          IF KY$CTX.MODE.BIN_CURR THEN     /* CARD WAS READ IN BINARY */
       32      930    2             DO;
       33      931    2                IF BITBASE = '0482090002800840'X THEN /* !ASC */
       34      932    2                   CODE = %KY#CNTRL_ASC;
       35      933    2                ELSE
       36      934    2                   IF BITBASE = '0482088008010410'X THEN /* !BIN */
       37      935    2                      CODE = %KY#CNTRL_BIN;
       38      936    2                   ELSE
       39      937    2                      IF BITBASE = '0482080808010410'X THEN /* !FIN */
       40      938    2                         CODE = %KY#CNTRL_FIN;
       41      939    2                      ELSE
       42      940    2                         IF JOBBITBASE = '0482050004080880'X THEN /* !JOB */
       43      941    2                            CODE = %KY#CNTRL_JOB;
       44      942    2                         ELSE
       45      943    2                            CODE = %KY#CNTRL_NONE;
       46      944    2             END;                          /* IF MODE = BIN */
       47      945    1          ELSE
       48      946    2             DO;                           /* CARD WAS READ IN ASCII */
       49      947    2                IF CHARBASE = '!ASC' THEN
       50      948    2                   CODE = %KY#CNTRL_ASC;
       51      949    2                ELSE
       52      950    2                   IF CHARBASE = '!BIN' THEN
       53      951    2                      CODE = %KY#CNTRL_BIN;
       54      952    2                   ELSE
       55      953    2                      IF CHARBASE = '!FIN' THEN
       56      954    2                         CODE = %KY#CNTRL_FIN;
       57      955    2                      ELSE
       58      956    2                         IF JOBCHARBASE = '!JOB' THEN
       59      957    2                            CODE = %KY#CNTRL_JOB;
       60      958    2                         ELSE
       61      959    2                            CODE = %KY#CNTRL_NONE;
       62      960    2             END; /* ELSE
       63      961                               */
       64      962    1          RETURN;
       65      963    1   END KYC$CHECK_CARD;
       66      964        %EOD;

PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:3    
--  Include file information  --

   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYC$CHECK_CARD.

   Procedure KYC$CHECK_CARD requires 161 words for executable code.
   Procedure KYC$CHECK_CARD requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:4    

 Object Unit name= KYC$CHECK_CARD                             File name= KYC$CHECK.:E05TOU
 UTS= JUL 30 '97 02:39:41.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     40     28  KYC$CHECK_CARD
    1   Proc  even  none   161     A1  KYC$CHECK_CARD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  KYC$CHECK_CARD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:5    


        1        1        /*M* KYC$CHECK_CARD - CHECK FOR SPECIAL CONTROL CARDS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /* This routine is called after we have read a card to determine
       10       10        if the card was one of !ASC, !BIN, !EOD, !FIN, or !JOB.  The type
       11       11        of control card is returned in code using the subs %KY#CNTRL_code from
       12       12        KY$IUR_SUBS.  If the card read is not special the code returned is
       13       13        %KY#CNTRL_NONE.                                          */
       14       14        /**/
       15       15        /*P* NAME: KYC$CHECK_CARD - CHECK FOR SPECIAL CONTROL CARDS */
       16       16        KYC$CHECK_CARD: PROC(KY$CTX,CODE);

     16   1 000000  D380 0000 0000  xent KYC$CHECK_CARD  LNJ,B5   X6A_AUTO_2
          1 000003       0008 0002                       DC       8,2

       17       17        /**/
       18       18        %INCLUDE KY_URP_M;
       19      313        %INCLUDE KY_SUBS_C;
       20      402        %INCLUDE KV_GLBCNS_E;
       21      743        /**/
       22      744        %KY$CTX;
       23      921    1          DCL CODE UBIN WORD;
       24      922        /**/
       25      923    1          DCL BITBASE (0:79) BIT(16) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       26      924    1          DCL JOBBITBASE (0:3) BIT(16) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       27      925    1          DCL CHARBASE CHAR(80) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       28      926    1          DCL JOBCHARBASE CHAR(4) CALIGNED BASED(KY$CTX.INPUT.BUF$);
       29      927        /**/
       30      928        %EJECT;
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:6    
       31      929    1          IF KY$CTX.MODE.BIN_CURR THEN     /* CARD WAS READ IN BINARY */

    929   1 000005  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          1 000007  82C6 000C                            LB,'0080'X        12,B6
          1 000009       0080
          1 00000A  0581 004C                            BBF      s:947,PREL

       32      930    2             DO;

       33      931    2                IF BITBASE = '0482090002800840'X THEN /* !ASC */

    931   1 00000C  DCC6 001A                            LDB,B5   26,B6
          1 00000E  C870 00A0                            LDR,R4   160,IMO
          1 000010  CB80 0000 0000  00                   LAB,B4   0
          1 000013  5C08                                 LDV,R5   8
          1 000014  0022                                 ACM      ;
          1 000015       4005 0000                                ALPHANUM(0,B5,,R4,FILL),;
          1 000017       4004 0000                                ALPHANUM(0,B4,,R5,FILL)
          1 000019  5301 0007                            CBNE     s:934,PREL

       34      932    2                   CODE = %KY#CNTRL_ASC;

    932   1 00001B  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 00001D  6C02                                 LDV,R6   2
          1 00001E  EF04                                 STR,R6   ,B4
          1 00001F  0F81 007E                            B        s:962,PREL

       35      933    2                ELSE
       36      934    2                   IF BITBASE = '0482088008010410'X THEN /* !BIN */

    934   1 000021  CB80 0000 0000  00                   LAB,B4   0
          1 000024  0022                                 ACM      ;
          1 000025       4005 0000                                ALPHANUM(0,B5,,R4,FILL),;
          1 000027       4004 0008                                ALPHANUM(8,B4,,R5,FILL)
          1 000029  5301 0007                            CBNE     s:937,PREL

       37      935    2                      CODE = %KY#CNTRL_BIN;
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:7    

    935   1 00002B  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 00002D  6C01                                 LDV,R6   1
          1 00002E  EF04                                 STR,R6   ,B4
          1 00002F  0F81 006E                            B        s:962,PREL

       38      936    2                   ELSE
       39      937    2                      IF BITBASE = '0482080808010410'X THEN /* !FIN */

    937   1 000031  CB80 0000 0000  00                   LAB,B4   0
          1 000034  0022                                 ACM      ;
          1 000035       4005 0000                                ALPHANUM(0,B5,,R4,FILL),;
          1 000037       4004 0010                                ALPHANUM(16,B4,,R5,FILL)
          1 000039  5301 0007                            CBNE     s:940,PREL

       40      938    2                         CODE = %KY#CNTRL_FIN;

    938   1 00003B  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 00003D  6C04                                 LDV,R6   4
          1 00003E  EF04                                 STR,R6   ,B4
          1 00003F  0F81 005E                            B        s:962,PREL

       41      939    2                      ELSE
       42      940    2                         IF JOBBITBASE = '0482050004080880'X THEN /* !JOB */

    940   1 000041  CB80 0000 0000  00                   LAB,B4   0
          1 000044  0022                                 ACM      ;
          1 000045       4805 0000                                ALPHANUM(0,B5,,8,FILL),;
          1 000047       4004 0018                                ALPHANUM(24,B4,,R5,FILL)
          1 000049  5301 0007                            CBNE     s:943,PREL

       43      941    2                            CODE = %KY#CNTRL_JOB;

    941   1 00004B  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 00004D  6C03                                 LDV,R6   3
          1 00004E  EF04                                 STR,R6   ,B4
          1 00004F  0F81 004E                            B        s:962,PREL
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:8    

       44      942    2                         ELSE
       45      943    2                            CODE = %KY#CNTRL_NONE;

    943   1 000051  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 000053  6C05                                 LDV,R6   5
          1 000054  EF04                                 STR,R6   ,B4

       46      944    2             END;                          /* IF MODE = BIN */

    944   1 000055  0F81 0048                            B        s:962,PREL

       47      945    1          ELSE
       48      946    2             DO;                           /* CARD WAS READ IN ASCII */

       49      947    2                IF CHARBASE = '!ASC' THEN

    947   1 000057  DCC6 001A                            LDB,B5   26,B6
          1 000059  4C50                                 LDV,R4   80
          1 00005A  CB80 0000 0000  00                   LAB,B4   0
          1 00005D  0022                                 ACM      ;
          1 00005E       4005 0000                                ALPHANUM(0,B5,,R4,FILL),;
          1 000060       4404 0020                                ALPHANUM(32,B4,,4,FILL)
          1 000062  5301 0007                            CBNE     s:950,PREL

       50      948    2                   CODE = %KY#CNTRL_ASC;

    948   1 000064  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 000066  6C02                                 LDV,R6   2
          1 000067  EF04                                 STR,R6   ,B4
          1 000068  0F81 0035                            B        s:962,PREL

       51      949    2                ELSE
       52      950    2                   IF CHARBASE = '!BIN' THEN

    950   1 00006A  CB80 0000 0000  00                   LAB,B4   0
          1 00006D  0022                                 ACM      ;
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:9    
          1 00006E       4005 0000                                ALPHANUM(0,B5,,R4,FILL),;
          1 000070       4404 0022                                ALPHANUM(34,B4,,4,FILL)
          1 000072  5301 0007                            CBNE     s:953,PREL

       53      951    2                      CODE = %KY#CNTRL_BIN;

    951   1 000074  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 000076  6C01                                 LDV,R6   1
          1 000077  EF04                                 STR,R6   ,B4
          1 000078  0F81 0025                            B        s:962,PREL

       54      952    2                   ELSE
       55      953    2                      IF CHARBASE = '!FIN' THEN

    953   1 00007A  CB80 0000 0000  00                   LAB,B4   0
          1 00007D  0022                                 ACM      ;
          1 00007E       4005 0000                                ALPHANUM(0,B5,,R4,FILL),;
          1 000080       4404 0024                                ALPHANUM(36,B4,,4,FILL)
          1 000082  5301 0007                            CBNE     s:956,PREL

       56      954    2                         CODE = %KY#CNTRL_FIN;

    954   1 000084  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 000086  6C04                                 LDV,R6   4
          1 000087  EF04                                 STR,R6   ,B4
          1 000088  0F81 0015                            B        s:962,PREL

       57      955    2                      ELSE
       58      956    2                         IF JOBCHARBASE = '!JOB' THEN

    956   1 00008A  CB80 0000 0000  00                   LAB,B4   0
          1 00008D  0022                                 ACM      ;
          1 00008E       4405 0000                                ALPHANUM(0,B5,,4,FILL),;
          1 000090       4404 0026                                ALPHANUM(38,B4,,4,FILL)
          1 000092  5301 0007                            CBNE     s:959,PREL

       59      957    2                            CODE = %KY#CNTRL_JOB;
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:10   

    957   1 000094  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 000096  6C03                                 LDV,R6   3
          1 000097  EF04                                 STR,R6   ,B4
          1 000098  0F81 0005                            B        s:962,PREL

       60      958    2                         ELSE
       61      959    2                            CODE = %KY#CNTRL_NONE;

    959   1 00009A  CCC7 0006                            LDB,B4   @CODE,AUTO
          1 00009C  6C05                                 LDV,R6   5
          1 00009D  EF04                                 STR,R6   ,B4

       62      960    2             END; /* ELSE

       63      961                               */
       64      962    1          RETURN;

    962   1 00009E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       65      963    1   END KYC$CHECK_CARD;
       66      964        %EOD;

PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:11   
--  Include file information  --

   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYC$CHECK_CARD.
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:12   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CODE                      4-0-0/w PTR         r     1 @KY$CTX
    *0-0-0/w UBIN(16)    r     1 CODE                      *0-0-0/w STRC(608)   r     1 KY$CTX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c BIT (16)    r     1 BITBASE(0:79)              0-0-0/c CHAR(80)    r     1 CHARBASE
     0-0-0/c BIT (16)    r     1 JOBBITBASE(0:3)
     0-0-0/c CHAR(4)     r     1 JOBCHARBASE


   Procedure KYC$CHECK_CARD requires 161 words for executable code.
   Procedure KYC$CHECK_CARD requires 8 words of local(AUTO) storage.
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:13   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KYC$CHECK_CARD File=KYC$CHECK.:E05TSI                         WED 07/30/97 02:39 Page:14   
          MINI XREF LISTING

BITBASE
       923**DCL       931>>IF        934>>IF        937>>IF
CHARBASE
       925**DCL       947>>IF        950>>IF        953>>IF
CODE
       921**DCL        16--PROC      932<<ASSIGN    935<<ASSIGN    938<<ASSIGN    941<<ASSIGN    943<<ASSIGN
       948<<ASSIGN    951<<ASSIGN    954<<ASSIGN    957<<ASSIGN    959<<ASSIGN
JOBBITBASE
       924**DCL       940>>IF
JOBCHARBASE
       926**DCL       956>>IF
KY$CTX
       755**DCL        16--PROC
KY$CTX.DEFRD.STATUSW
       897**DCL       899--REDEF
KY$CTX.INPUT.BUF$
       876**DCL       923--IMP-PTR   924--IMP-PTR   925--IMP-PTR   926--IMP-PTR   931>>IF        934>>IF
       937>>IF        940>>IF        947>>IF        950>>IF        953>>IF        956>>IF
KY$CTX.MODE
       846**DCL       854--REDEF
KY$CTX.MODE.BIN_CURR
       850**DCL       929>>IF
KY$CTX.STATUSW
       773**DCL       775--REDEF     783--REDEF     797--REDEF     811--REDEF     825--REDEF
KY$CTX.VDIENB
       911**DCL       917--REDEF

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:15   
       67        1        /*M* KYC$CHECK_STATUS -    DEVICE HARDWARE STATUS WORD CHECKER */
       68        2        /*T***********************************************************/
       69        3        /*T*                                                         */
       70        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       71        5        /*T*                                                         */
       72        6        /*T***********************************************************/
       73        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
       74        8               ECI=0,DIN=7,CSU=3,AND      */
       75        9        /*
       76       10
       77       11          E X T E R N A L    I N T E R F A C E    D E S C R I P T I O N
       78       12
       79       13        This routine represents one of the few ( hopefully ) places that
       80       14        really understand what a hardware status word looks like.  It will
       81       15        do all the individual bit checking, and errlogging that is required
       82       16        based on information within the status word itself.  The only input
       83       17        that this routine gets is from the context block indicating what
       84       18        type of device it is being told about, and the status word itself.
       85       19        The only output of this routine is externally visable Errlog Entries,
       86       20        and a software representation of the status word 'KY$CTX.DVC_STATUS'
       87       21        And the only major impact that this code has on the rest of the URP
       88       22        Handler is that it can SCREECH if a uncorrectable memory error is
       89       23        reported.
       90       24
       91       25        */
       92       26        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:16   
       93       27        /*
       94       28                  I N T E R N A L   O V E R V I E W
       95       29
       96       30        There is not too much more to add to the to the external interface
       97       31        description other than to point out that the way that status words
       98       32        are defined, bits 0-1, and 12-15 mean the same thing for all devices.
       99       33        So use the Line Printer status word as a reference for checking the
      100       34        common bits and then go on to do a a device-specific check of bits
      101       35        2-11.
      102       36
      103       37        */
      104       38        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:17   
      105       39        /*P* NAME: KYC$CHECK_STATUS          Device specific status checker */
      106       40        KYC$CHECK_STATUS: PROC( KY$CTX );
      107       41        /**/
      108       42        %INCLUDE GH_HARDWARE_M;
      109      140        %INCLUDE LCP_6;
      110     4419        %INCLUDE KY_SCODE_C;
      111     4433        %VLP_SCODE ( FPTN = U_BADMEM, FCG = KY, MID = C, ERR# = S$KY_BADMEM, STCLASS =
              4433            CONSTANT);
      112     4494        %INCLUDE KH_SCREECH_M;
      113     4505        %INCLUDE KL_AFCN_C;
      114     4606        %INCLUDE KL_MACRO_C;
      115     7958        %INCLUDE K_ID_E;
      116     8008        %K#ENTID_E;
      117     8027        %K#LYRID_E;
      118     8034        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      119     8375        %INCLUDE KV_PRMID_E;
      120     8549        %INCLUDE KV$GLB;
      121     8968        %INCLUDE KV$GLBCTX;
      122     9413        %INCLUDE KV$PRM;
      123     9626        %INCLUDE KY_URP_M;
      124     9921        %INCLUDE KY_PERR_C;
      125     9943        %INCLUDE KY_SUBS_C;
      126    10032        %INCLUDE KH$STT;
      127    10062        %INCLUDE KV_GLB_M;
      128    10184        %INCLUDE KY_DATA_R;
      129    10979        %INCLUDE KH$CHN;
      130    11101        /**/
      131    11102        %KY$CTX;
      132    11279        %KH$CHN;
      133    11403        %KV$VDI;
      134    11474    1          DCL TEMP_STATUSW UBIN(16);
      135    11475    1          DCL STATUSW UBIN(16);
      136    11476    1          DCL 1 PRNTR_STAT REDEF STATUSW,
      137    11477    1                 2 * UBIN(8) UNAL,
      138    11478    1                 2 ERR UBIN(8) UNAL;
      139    11479        /**/
      140    11480    1          DCL KHD$SCREECH ENTRY(1);
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:18   
      141    11481    1          DCL KYI$IO ENTRY(2) ALTRET;
      142    11482    1          DCL KHA$ERRLOG ENTRY(2) ALTRET;
      143    11483        /*  */
      144    11484               %FPT_WRSYSLOG(FCG='KY',MID='P',STCLASS=STATIC);
      145    11579        /*  */
      146    11580        /**/
      147    11581        %KV_PRMID_E;
      148    11737        /**/
      149    11738    1          FPT_WRSYSLOG.V.TERMID = KY$CTX.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;
      150    11739        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:19   
      151    11740    1          KY$CTX.DVC_STATUS = %KY#DVC_READY;
      152    11741
      153    11742    1          IF NOT ( KY$CTX.STATUSW = %BITBIN( '8000'X ) ) THEN
      154    11743    2             DO;
      155    11744    2                IF NOT( KY$CTX.LP_STATUS.DEV_READY ) THEN
      156    11745    2                   KY$CTX.DVC_STATUS = %KY#DVC_UNREADY;
      157    11746
      158    11747        /*
      159    11748            In the case of a uncorrectable memory error, detected by the
      160    11749            device, screech the whole world.  Since that way the memory
      161    11750            problem can be looked at.
      162    11751        */
      163    11752
      164    11753    2                IF KY$CTX.LP_STATUS.BAD_MEM THEN
      165    11754                         /*S* SCREECH_CODE: KYC-S$KY_BADMEM
      166    11755                              MESSAGE: UNITREC has encountered some bad memory */
      167    11756                        %KH$SCREECH ( COD = U_BADMEM );
      168    11760
      169    11761    2                IF KY$CTX.LP_STATUS.PARITY_ERROR THEN
      170    11762    3                   DO;
      171    11763    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_PARITY_ERR;
      172    11764    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);
      173    11765        /*E* ERROR:   KYP-GG#EC_KYP_PARITY_ERR
      174    11766            MESSAGE:  Parity error detected.
      175    11767            DESCRIPTION:      THE DEVICE HAS REPORTED THAT A PARITY ERROR
      176    11768                              OCCURRED DURING THE LAST I/O COMMAND.
      177    11769        */
      178    11770    3                   END;
      179    11771
      180    11772    2                IF KY$CTX.LP_STATUS.NON_RESOURCE THEN
      181    11773    3                   DO;
      182    11774    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_NONRESOURCE;
      183    11775    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);
      184    11776        /*E* ERROR:   KYP-GG#EC_KYP_NONRESOURCE
      185    11777            MESSAGE:  I/O operation to nonexistant resource
      186    11778            DESCRIPTION:      THIS IS PROBABLY AN INTERNAL ERROR CAUSED BY
      187    11779                              A BADLY BUILT I/O COMMAND, OR A BAD ADDRESS.
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:20   
      188    11780        */
      189    11781    3                   END;
      190    11782
      191    11783    2                IF KY$CTX.LP_STATUS.CORRECT_MEM THEN
      192    11784    3                   DO;
      193    11785    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_FIXD_MEMORY;
      194    11786    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);
      195    11787        /*E* ERROR:   KYP-GG#EC_KYP_FIXD_MEMORY
      196    11788            MESSAGE:  A corrected memory error has occurred.
      197    11789            DESCRIPTION:      THE DEVICE DETECTED THE OCCURRENCE OF A
      198    11790                              CORRECTABLE MEMORY ERROR.
      199    11791        */
      200    11792    3                   END;
      201    11793         %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:21   
      202    11794    3                DO CASE ( KY$CTX.DVCTYP );
      203    11795    3                   CASE ( %KY#TYP_LP );
      204    11796        /*
      205    11797         Nothing to do since all the important bits have just been checked.
      206    11798        */
      207    11799
      208    11800    3                   CASE ( %KY#TYP_CP );
      209    11801    3                      IF KY$CTX.CP_STATUS.HOPPER_EMPTY THEN
      210    11802    4                         DO;
      211    11803    4                            KY$CTX.DVC_STATUS = %KY#DVC_HOPEMPTY;
      212    11804    4                         END;
      213    11805
      214    11806    3                      IF KY$CTX.CP_STATUS.PUNCH_ERROR THEN
      215    11807    4                         DO;
      216    11808    4                            KY$CTX.DVC_STATUS = %KY#DVC_PUNCH_ERR;
      217    11809    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_PUNCH_ERROR;
      218    11810    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);
      219    11811        /*E* ERROR:  KYP-GG#EC_KYP_PUNCH_ERROR
      220    11812             MESSAGE: Data punched does not match
      221    11813             DESCRIPTION:      THE DATA PUNCHED ON THE CARD DOES NOT MATCH WHAT
      222    11814                              WAS SENT IN THE I/O COMMAND.
      223    11815        */
      224    11816    4                         END;
      225    11817
      226    11818    3                      IF KY$CTX.CP_STATUS.CARD_JAM THEN
      227    11819    4                         DO;
      228    11820    4                            KY$CTX.DVC_STATUS = %KY#DVC_CARDJAM;
      229    11821    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_CARD_JAM;
      230    11822    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);
      231    11823        /*E* ERROR:  KYP-GG#EC_KYP_CARD_JAM
      232    11824             MESSAGE: Card jam
      233    11825             DESCRIPTION:      THE DEVICE DETECTED THAT A CARD DID NOT MAKE
      234    11826                              IT ALL THE WAY THRU.
      235    11827        */
      236    11828    4                         END;
      237    11829
      238    11830    3                      IF KY$CTX.CP_STATUS.SERVICE_RATE THEN
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:22   
      239    11831    4                         DO;
      240    11832    4                            KY$CTX.DVC_STATUS = %KY#DVC_SRVC_RATE;
      241    11833    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_SERVICE_RATE;
      242    11834    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);
      243    11835        /*E* ERROR:   KYP-GG#EC_KYP_SERVICE_RATE
      244    11836             MESSAGE: Data transfer rate too slow - data lost
      245    11837             DESCRIPTION:      THE DEVICE HAS REPORTED THAT MEMORY COULD NOT
      246    11838                              KEEP UP WITH IT, AND THAT DATA WAS LOST.
      247    11839        */
      248    11840    4                         END;
      249    11841
      250    11842        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:23   
      251    11843    3                   CASE ( %KY#TYP_CR );
      252    11844    3                      IF KY$CTX.CR_9107_STATUS.SERV_RATE THEN
      253    11845    4                         DO;
      254    11846    4                            KY$CTX.DVC_STATUS = %KY#DVC_SRVC_RATE;
      255    11847    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_SERVICE_RATE;
      256    11848    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);
      257    11849    4                         END;              /* IF */
      258    11850    3                      ELSE
      259    11851    3                         IF KY$CTX.DVC_ID = %BITBIN('208C'X) THEN
      260    11852    4                            DO;            /* 9107 */
      261    11853    4                               IF KY$CTX.CR_9107_STATUS.HOPPER_EMPTY THEN
      262    11854    5                                  DO;
      263    11855    5                                     KY$CTX.DVC_STATUS = %KY#DVC_HOPEMPTY;
      264    11856    5                                  END;     /* IF */
      265    11857    4                               IF KY$CTX.CR_9107_STATUS.CARD_JAM THEN
      266    11858    5                                  DO;
      267    11859    5                                     KY$CTX.DVC_STATUS = %KY#DVC_CARDJAM;
      268    11860    5                                     FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_CARD_JAM;
      269    11861    5                                     CALL KHA$ERRLOG(FPT_WRSYSLOG);
      270    11862    5                                  END;     /* IF */
      271    11863    4                            END;           /* IF DVC_ID = 9107 */
      272    11864    3                         ELSE
      273    11865    4                            DO;            /* 9111 */
      274    11866    4                               IF KY$CTX.CR_9111_STATUS.BAD_ASC THEN
      275    11867    4                                  KY$CTX.DVC_STATUS = %KY#DVC_REREAD;
      276    11868    4                               ELSE
      277    11869    4                                  IF NOT KY$CTX.CR_9111_STATUS.DEV_READY THEN
      278    11870    5                                     DO;
      279    11871    5                                        CALL KYI$IO(KY$CTX,%KY#GET_RANGE) ALTRET(L1);
      280    11872    5                                        IF KY_LAST_RANGE ~= KY$CTX.INPUT.BUF_SIZE THEN
      281    11873    5                                           KY$CTX.DVC_STATUS = %KY#DVC_HOPEMPTY;
      282    11874    5   L1:                               END;  /* IF NOT READY */
      283    11875    4                            END;           /* 9111 */
      284    11876    3                END;                       /* DO CASE */
      285    11877    2             END;
      286    11878    1          ELSE
      287    11879    2             DO;  /* the device says it is okay, but never trust a smiling lp */
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:24   
      288    11880    2                IF KY$CTX.DVCTYP = %KY#TYP_LP THEN
      289    11881    3                   DO;
      290    11882    3                      IF KY$CTX.DVC_ID = %BITBIN('20C4'X) THEN
      291    11883    4                         DO;
      292    11884    4                            TEMP_STATUSW = KY$CTX.STATUSW;
      293    11885    5                            CALL KYI$IO(KY$CTX,%KY#GET_STATW2) WHENALTRETURN DO;
      294    11886    5                                  RETURN;
      295    11887    5                               END;
      296    11888    4                            STATUSW = KY$CTX.STATUSW;
      297    11889    4                            IF PRNTR_STAT.ERR = %BITBIN(%KY#STAT_PAPI) THEN
      298    11890    5                               DO;
      299    11891    5                                  KY$CTX.DVC_STATUS = %KY#DVC_UNREADY;
      300    11892
      301    11893        /*
      302    11894                set printers status word bits manually
      303    11895        */
      304    11896    5                                  KY$CTX.LP_PR54_STATUS.STATUS_CHANGE = '1'B;
      305    11897    5                                  KY$CTX.LP_PR54_STATUS.EOF = '1'B;
      306    11898    5                                  KY$CTX.LP_PR54_STATUS.DEV_READY = '0'B;
      307    11899    5                               END;
      308    11900    4                            ELSE
      309    11901    4                               KY$CTX.STATUSW = TEMP_STATUSW;
      310    11902    4                         END;              /* dvc_id = 20C4 (PR-54) */
      311    11903    3                   END;                    /* dvctyp = lp  */
      312    11904    2             END;                          /* never trust a smiling lp */
      313    11905    1          RETURN;
      314    11906    1   END KYC$CHECK_STATUS;

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:25   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_PERR_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KY_SCODE_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYC$CHECK_STATUS.

   Procedure KYC$CHECK_STATUS requires 397 words for executable code.
   Procedure KYC$CHECK_STATUS requires 12 words of local(AUTO) storage.

    No errors detected in file KYC$CHECK.:E05TSI    .
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:26   

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:27   

 Object Unit name= KYC$CHECK_STATUS                           File name= KYC$CHECK.:E05TOU
 UTS= JUL 30 '97 02:39:54.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      3      3  KYC$CHECK_STATUS
    1   Data  even  none    21     15  KYC$CHECK_STATUS
    2   Proc  even  none   397    18D  KYC$CHECK_STATUS
    3  RoData even  none     4      4  KYC$CHECK_STATUS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KYC$CHECK_STATUS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHD$SCREECH
 yes     yes           Std       2 KHA$ERRLOG
 yes     yes           Std       2 KYI$IO
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_LAST_RANGE                    r    G$ROS$
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:28   


       67        1        /*M* KYC$CHECK_STATUS -    DEVICE HARDWARE STATUS WORD CHECKER */
       68        2        /*T***********************************************************/
       69        3        /*T*                                                         */
       70        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       71        5        /*T*                                                         */
       72        6        /*T***********************************************************/
       73        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
       74        8               ECI=0,DIN=7,CSU=3,AND      */
       75        9        /*
       76       10
       77       11          E X T E R N A L    I N T E R F A C E    D E S C R I P T I O N
       78       12
       79       13        This routine represents one of the few ( hopefully ) places that
       80       14        really understand what a hardware status word looks like.  It will
       81       15        do all the individual bit checking, and errlogging that is required
       82       16        based on information within the status word itself.  The only input
       83       17        that this routine gets is from the context block indicating what
       84       18        type of device it is being told about, and the status word itself.
       85       19        The only output of this routine is externally visable Errlog Entries,
       86       20        and a software representation of the status word 'KY$CTX.DVC_STATUS'
       87       21        And the only major impact that this code has on the rest of the URP
       88       22        Handler is that it can SCREECH if a uncorrectable memory error is
       89       23        reported.
       90       24
       91       25        */
       92       26        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:29   
       93       27        /*
       94       28                  I N T E R N A L   O V E R V I E W
       95       29
       96       30        There is not too much more to add to the to the external interface
       97       31        description other than to point out that the way that status words
       98       32        are defined, bits 0-1, and 12-15 mean the same thing for all devices.
       99       33        So use the Line Printer status word as a reference for checking the
      100       34        common bits and then go on to do a a device-specific check of bits
      101       35        2-11.
      102       36
      103       37        */
      104       38        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:30   
      105       39        /*P* NAME: KYC$CHECK_STATUS          Device specific status checker */
      106       40        KYC$CHECK_STATUS: PROC( KY$CTX );

     40   2 000000  D380 0000 0000  xent KYC$CHECK_STATUSLNJ,B5   X6A_AUTO_1
          2 000003       000C 0001                       DC       12,1

      107       41        /**/
      108       42        %INCLUDE GH_HARDWARE_M;
      109      140        %INCLUDE LCP_6;
      110     4419        %INCLUDE KY_SCODE_C;
      111     4433        %VLP_SCODE ( FPTN = U_BADMEM, FCG = KY, MID = C, ERR# = S$KY_BADMEM, STCLASS =
              4433            CONSTANT);
      112     4494        %INCLUDE KH_SCREECH_M;
      113     4505        %INCLUDE KL_AFCN_C;
      114     4606        %INCLUDE KL_MACRO_C;
      115     7958        %INCLUDE K_ID_E;
      116     8008        %K#ENTID_E;
      117     8027        %K#LYRID_E;
      118     8034        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      119     8375        %INCLUDE KV_PRMID_E;
      120     8549        %INCLUDE KV$GLB;
      121     8968        %INCLUDE KV$GLBCTX;
      122     9413        %INCLUDE KV$PRM;
      123     9626        %INCLUDE KY_URP_M;
      124     9921        %INCLUDE KY_PERR_C;
      125     9943        %INCLUDE KY_SUBS_C;
      126    10032        %INCLUDE KH$STT;
      127    10062        %INCLUDE KV_GLB_M;
      128    10184        %INCLUDE KY_DATA_R;
      129    10979        %INCLUDE KH$CHN;
      130    11101        /**/
      131    11102        %KY$CTX;
      132    11279        %KH$CHN;
      133    11403        %KV$VDI;
      134    11474    1          DCL TEMP_STATUSW UBIN(16);
      135    11475    1          DCL STATUSW UBIN(16);
      136    11476    1          DCL 1 PRNTR_STAT REDEF STATUSW,
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:31   
      137    11477    1                 2 * UBIN(8) UNAL,
      138    11478    1                 2 ERR UBIN(8) UNAL;
      139    11479        /**/
      140    11480    1          DCL KHD$SCREECH ENTRY(1);
      141    11481    1          DCL KYI$IO ENTRY(2) ALTRET;
      142    11482    1          DCL KHA$ERRLOG ENTRY(2) ALTRET;
      143    11483        /*  */
      144    11484               %FPT_WRSYSLOG(FCG='KY',MID='P',STCLASS=STATIC);
      145    11579        /*  */
      146    11580        /**/
      147    11581        %KV_PRMID_E;
      148    11737        /**/
      149    11738    1          FPT_WRSYSLOG.V.TERMID = KY$CTX.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;

  11738   2 000005  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 000007  DCC6 0008                            LDB,B5   8,B6
          2 000009  CC85                                 LDB,B4   ,B5
          2 00000A  AB84                                 LAB,B2   ,B4
          2 00000B  2C24                                 LDV,R2   36
          2 00000C  6C10                                 LDV,R6   16
          2 00000D  BB80 0000 0000  01                   LAB,B3   FPT_WRSYSLOG
          2 000010  3C10                                 LDV,R3   16
          2 000011  0008                                 MMM

      150    11739        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:32   
      151    11740    1          KY$CTX.DVC_STATUS = %KY#DVC_READY;

  11740   2 000012  8846 0004                            LBF,'00FF'X       4,B6
  11740   2 000014       00FF

      152    11741
      153    11742    1          IF NOT ( KY$CTX.STATUSW = %BITBIN( '8000'X ) ) THEN

  11742   2 000015  E846 0006                            LDR,R6   6,B6
          2 000017  E970 8000                            CMR,R6   -32768,IMO
          2 000019  0901 0130                            BE       s:11880,PREL

      154    11743    2             DO;

      155    11744    2                IF NOT( KY$CTX.LP_STATUS.DEV_READY ) THEN

  11744   2 00001B  89C6 0006                            CMZ      6,B6
          2 00001D  0801 0005                            BAL      s:11753,PREL

      156    11745    2                   KY$CTX.DVC_STATUS = %KY#DVC_UNREADY;

  11745   2 00001F  5C01                                 LDV,R5   1
          2 000020  DAC6 0004                            SRM,R5,'00FF'X    4,B6
          2 000022       00FF

      157    11746
      158    11747        /*
      159    11748            In the case of a uncorrectable memory error, detected by the
      160    11749            device, screech the whole world.  Since that way the memory
      161    11750            problem can be looked at.
      162    11751        */
      163    11752
      164    11753    2                IF KY$CTX.LP_STATUS.BAD_MEM THEN

  11753   2 000023  82C6 0006                            LB,'0001'X        6,B6
  11753   2 000025       0001
          2 000026  0581 000A                            BBF      s:11761,PREL
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:33   

      165    11754                         /*S* SCREECH_CODE: KYC-S$KY_BADMEM
      166    11755                              MESSAGE: UNITREC has encountered some bad memory */
      167    11756                        %KH$SCREECH ( COD = U_BADMEM );

  11758   2 000028  BB80 0000 0000  03                   LAB,B3   0
          2 00002B  CBF0 0100                            LAB,B4   256,IMO
          2 00002D  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000030       0001                            DC       s:11761,PREL

      168    11760
      169    11761    2                IF KY$CTX.LP_STATUS.PARITY_ERROR THEN

  11761   2 000031  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 000033  82C6 0006                            LB,'0002'X        6,B6
          2 000035       0002
          2 000036  0581 0010                            BBF      s:11772,PREL

      170    11762    3                   DO;

      171    11763    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_PARITY_ERR;

  11763   2 000038  E870 0328                            LDR,R6   808,IMO
          2 00003A  EA80 0000 0007  01                   SRM,R6,'FFF8'X    FPT_WRSYSLOG+7
          2 00003D       FFF8

      172    11764    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11764   2 00003E  BB80 0000 0002  03                   LAB,B3   +2
          2 000041  CBF0 0100                            LAB,B4   256,IMO
          2 000043  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 000046       0001                            DC       s:11772,PREL

      173    11765        /*E* ERROR:   KYP-GG#EC_KYP_PARITY_ERR
      174    11766            MESSAGE:  Parity error detected.
      175    11767            DESCRIPTION:      THE DEVICE HAS REPORTED THAT A PARITY ERROR
      176    11768                              OCCURRED DURING THE LAST I/O COMMAND.
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:34   
      177    11769        */
      178    11770    3                   END;

      179    11771
      180    11772    2                IF KY$CTX.LP_STATUS.NON_RESOURCE THEN

  11772   2 000047  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 000049  82C6 0006                            LB,'0004'X        6,B6
          2 00004B       0004
          2 00004C  0581 0010                            BBF      s:11783,PREL

      181    11773    3                   DO;

      182    11774    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_NONRESOURCE;

  11774   2 00004E  E870 0330                            LDR,R6   816,IMO
          2 000050  EA80 0000 0007  01                   SRM,R6,'FFF8'X    FPT_WRSYSLOG+7
          2 000053       FFF8

      183    11775    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11775   2 000054  BB80 0000 0002  03                   LAB,B3   +2
          2 000057  CBF0 0100                            LAB,B4   256,IMO
          2 000059  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 00005C       0001                            DC       s:11783,PREL

      184    11776        /*E* ERROR:   KYP-GG#EC_KYP_NONRESOURCE
      185    11777            MESSAGE:  I/O operation to nonexistant resource
      186    11778            DESCRIPTION:      THIS IS PROBABLY AN INTERNAL ERROR CAUSED BY
      187    11779                              A BADLY BUILT I/O COMMAND, OR A BAD ADDRESS.
      188    11780        */
      189    11781    3                   END;

      190    11782
      191    11783    2                IF KY$CTX.LP_STATUS.CORRECT_MEM THEN

  11783   2 00005D  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:35   
          2 00005F  82C6 0006                            LB,'0008'X        6,B6
          2 000061       0008
          2 000062  0581 0010                            BBF      s:11794,PREL

      192    11784    3                   DO;

      193    11785    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_FIXD_MEMORY;

  11785   2 000064  E870 0338                            LDR,R6   824,IMO
          2 000066  EA80 0000 0007  01                   SRM,R6,'FFF8'X    FPT_WRSYSLOG+7
          2 000069       FFF8

      194    11786    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11786   2 00006A  BB80 0000 0002  03                   LAB,B3   +2
          2 00006D  CBF0 0100                            LAB,B4   256,IMO
          2 00006F  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 000072       0001                            DC       s:11794,PREL

      195    11787        /*E* ERROR:   KYP-GG#EC_KYP_FIXD_MEMORY
      196    11788            MESSAGE:  A corrected memory error has occurred.
      197    11789            DESCRIPTION:      THE DEVICE DETECTED THE OCCURRENCE OF A
      198    11790                              CORRECTABLE MEMORY ERROR.
      199    11791        */
      200    11792    3                   END;

      201    11793         %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:36   
      202    11794    3                DO CASE ( KY$CTX.DVCTYP );

  11794   2 000073  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 000075  B2C6 000B                            LLH,R3   11,B6
          2 000077  3D04                                 CMV,R3   4
          2 000078  0281 0111                            BGE      s:11905,PREL
          2 00007A  A830 0000 0080  02                   LDR,R2   s:11794+13,R3
          2 00007D  83A0 0000 0084  02                   JMP      s:11801,R2
          2 000080       00C4                            DC       s:11874,PREL
          2 000081       00C4                            DC       s:11874,PREL
          2 000082       0000                            DC       s:11801,PREL
          2 000083       0057                            DC       s:11844,PREL

      203    11795    3                   CASE ( %KY#TYP_LP );

      204    11796        /*
      205    11797         Nothing to do since all the important bits have just been checked.
      206    11798        */
      207    11799
      208    11800    3                   CASE ( %KY#TYP_CP );

      209    11801    3                      IF KY$CTX.CP_STATUS.HOPPER_EMPTY THEN

  11801   2 000084  82C6 0006                            LB,'0100'X        6,B6
  11801   2 000086       0100
          2 000087  0581 0005                            BBF      s:11806,PREL

      210    11802    4                         DO;

      211    11803    4                            KY$CTX.DVC_STATUS = %KY#DVC_HOPEMPTY;

  11803   2 000089  6C05                                 LDV,R6   5
          2 00008A  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          2 00008C       00FF

      212    11804    4                         END;

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:37   
      213    11805
      214    11806    3                      IF KY$CTX.CP_STATUS.PUNCH_ERROR THEN

  11806   2 00008D  82C6 0006                            LB,'0800'X        6,B6
  11806   2 00008F       0800
          2 000090  0581 0014                            BBF      s:11818,PREL

      215    11807    4                         DO;

      216    11808    4                            KY$CTX.DVC_STATUS = %KY#DVC_PUNCH_ERR;

  11808   2 000092  6C03                                 LDV,R6   3
          2 000093  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          2 000095       00FF

      217    11809    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_PUNCH_ERROR;

  11809   2 000096  D870 0340                            LDR,R5   832,IMO
          2 000098  DA80 0000 0007  01                   SRM,R5,'FFF8'X    FPT_WRSYSLOG+7
          2 00009B       FFF8

      218    11810    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11810   2 00009C  BB80 0000 0002  03                   LAB,B3   +2
          2 00009F  CBF0 0100                            LAB,B4   256,IMO
          2 0000A1  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 0000A4       0001                            DC       s:11818,PREL

      219    11811        /*E* ERROR:  KYP-GG#EC_KYP_PUNCH_ERROR
      220    11812             MESSAGE: Data punched does not match
      221    11813             DESCRIPTION:      THE DATA PUNCHED ON THE CARD DOES NOT MATCH WHAT
      222    11814                              WAS SENT IN THE I/O COMMAND.
      223    11815        */
      224    11816    4                         END;

      225    11817
      226    11818    3                      IF KY$CTX.CP_STATUS.CARD_JAM THEN
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:38   

  11818   2 0000A5  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 0000A7  82C6 0006                            LB,'0200'X        6,B6
          2 0000A9       0200
          2 0000AA  0581 0014                            BBF      s:11830,PREL

      227    11819    4                         DO;

      228    11820    4                            KY$CTX.DVC_STATUS = %KY#DVC_CARDJAM;

  11820   2 0000AC  6C04                                 LDV,R6   4
          2 0000AD  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          2 0000AF       00FF

      229    11821    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_CARD_JAM;

  11821   2 0000B0  D870 0348                            LDR,R5   840,IMO
          2 0000B2  DA80 0000 0007  01                   SRM,R5,'FFF8'X    FPT_WRSYSLOG+7
          2 0000B5       FFF8

      230    11822    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11822   2 0000B6  BB80 0000 0002  03                   LAB,B3   +2
          2 0000B9  CBF0 0100                            LAB,B4   256,IMO
          2 0000BB  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 0000BE       0001                            DC       s:11830,PREL

      231    11823        /*E* ERROR:  KYP-GG#EC_KYP_CARD_JAM
      232    11824             MESSAGE: Card jam
      233    11825             DESCRIPTION:      THE DEVICE DETECTED THAT A CARD DID NOT MAKE
      234    11826                              IT ALL THE WAY THRU.
      235    11827        */
      236    11828    4                         END;

      237    11829
      238    11830    3                      IF KY$CTX.CP_STATUS.SERVICE_RATE THEN

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:39   
  11830   2 0000BF  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 0000C1  82C6 0006                            LB,'2000'X        6,B6
          2 0000C3       2000
          2 0000C4  0581 00C5                            BBF      s:11905,PREL

      239    11831    4                         DO;

      240    11832    4                            KY$CTX.DVC_STATUS = %KY#DVC_SRVC_RATE;

  11832   2 0000C6  6C02                                 LDV,R6   2
          2 0000C7  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          2 0000C9       00FF

      241    11833    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_SERVICE_RATE;

  11833   2 0000CA  D870 0350                            LDR,R5   848,IMO
          2 0000CC  DA80 0000 0007  01                   SRM,R5,'FFF8'X    FPT_WRSYSLOG+7
          2 0000CF       FFF8

      242    11834    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11834   2 0000D0  BB80 0000 0002  03                   LAB,B3   +2
          2 0000D3  CBF0 0100                            LAB,B4   256,IMO
          2 0000D5  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 0000D8       0001                            DC       s:11840,PREL

      243    11835        /*E* ERROR:   KYP-GG#EC_KYP_SERVICE_RATE
      244    11836             MESSAGE: Data transfer rate too slow - data lost
      245    11837             DESCRIPTION:      THE DEVICE HAS REPORTED THAT MEMORY COULD NOT
      246    11838                              KEEP UP WITH IT, AND THAT DATA WAS LOST.
      247    11839        */
      248    11840    4                         END;

  11840   2 0000D9  0F81 00B0                            B        s:11905,PREL

      249    11841
      250    11842        %EJECT;
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:40   
      251    11843    3                   CASE ( %KY#TYP_CR );

      252    11844    3                      IF KY$CTX.CR_9107_STATUS.SERV_RATE THEN

  11844   2 0000DB  82C6 0006                            LB,'2000'X        6,B6
  11844   2 0000DD       2000
          2 0000DE  0581 0016                            BBF      s:11851,PREL

      253    11845    4                         DO;

      254    11846    4                            KY$CTX.DVC_STATUS = %KY#DVC_SRVC_RATE;

  11846   2 0000E0  6C02                                 LDV,R6   2
          2 0000E1  EAC6 0004                            SRM,R6,'00FF'X    4,B6
          2 0000E3       00FF

      255    11847    4                            FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_SERVICE_RATE;

  11847   2 0000E4  D870 0350                            LDR,R5   848,IMO
          2 0000E6  DA80 0000 0007  01                   SRM,R5,'FFF8'X    FPT_WRSYSLOG+7
          2 0000E9       FFF8

      256    11848    4                            CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11848   2 0000EA  BB80 0000 0002  03                   LAB,B3   +2
          2 0000ED  CBF0 0100                            LAB,B4   256,IMO
          2 0000EF  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 0000F2       0001                            DC       s:11849,PREL

      257    11849    4                         END;              /* IF */

  11849   2 0000F3  0F81 0096                            B        s:11905,PREL

      258    11850    3                      ELSE
      259    11851    3                         IF KY$CTX.DVC_ID = %BITBIN('208C'X) THEN

  11851   2 0000F5  E846 0007                            LDR,R6   7,B6
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:41   
          2 0000F7  E970 208C                            CMR,R6   8332,IMO
          2 0000F9  0981 0024                            BNE      s:11866,PREL

      260    11852    4                            DO;            /* 9107 */

      261    11853    4                               IF KY$CTX.CR_9107_STATUS.HOPPER_EMPTY THEN

  11853   2 0000FB  82C6 0006                            LB,'0100'X        6,B6
  11853   2 0000FD       0100
          2 0000FE  0581 0005                            BBF      s:11857,PREL

      262    11854    5                                  DO;

      263    11855    5                                     KY$CTX.DVC_STATUS = %KY#DVC_HOPEMPTY;

  11855   2 000100  5C05                                 LDV,R5   5
          2 000101  DAC6 0004                            SRM,R5,'00FF'X    4,B6
          2 000103       00FF

      264    11856    5                                  END;     /* IF */

      265    11857    4                               IF KY$CTX.CR_9107_STATUS.CARD_JAM THEN

  11857   2 000104  82C6 0006                            LB,'0200'X        6,B6
  11857   2 000106       0200
          2 000107  0581 0082                            BBF      s:11905,PREL

      266    11858    5                                  DO;

      267    11859    5                                     KY$CTX.DVC_STATUS = %KY#DVC_CARDJAM;

  11859   2 000109  5C04                                 LDV,R5   4
          2 00010A  DAC6 0004                            SRM,R5,'00FF'X    4,B6
          2 00010C       00FF

      268    11860    5                                     FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYP_CARD_JAM;

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:42   
  11860   2 00010D  C870 0348                            LDR,R4   840,IMO
          2 00010F  CA80 0000 0007  01                   SRM,R4,'FFF8'X    FPT_WRSYSLOG+7
          2 000112       FFF8

      269    11861    5                                     CALL KHA$ERRLOG(FPT_WRSYSLOG);

  11861   2 000113  BB80 0000 0002  03                   LAB,B3   +2
          2 000116  CBF0 0100                            LAB,B4   256,IMO
          2 000118  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 00011B       0001                            DC       s:11863,PREL

      270    11862    5                                  END;     /* IF */

      271    11863    4                            END;           /* IF DVC_ID = 9107 */

  11863   2 00011C  0F81 006D                            B        s:11905,PREL

      272    11864    3                         ELSE
      273    11865    4                            DO;            /* 9111 */

      274    11866    4                               IF KY$CTX.CR_9111_STATUS.BAD_ASC THEN

  11866   2 00011E  82C6 0006                            LB,'0080'X        6,B6
  11866   2 000120       0080
          2 000121  0581 0007                            BBF      s:11869,PREL

      275    11867    4                                  KY$CTX.DVC_STATUS = %KY#DVC_REREAD;

  11867   2 000123  5C08                                 LDV,R5   8
          2 000124  DAC6 0004                            SRM,R5,'00FF'X    4,B6
          2 000126       00FF
          2 000127  0F81 0062                            B        s:11905,PREL

      276    11868    4                               ELSE
      277    11869    4                                  IF NOT KY$CTX.CR_9111_STATUS.DEV_READY THEN

  11869   2 000129  89C6 0006                            CMZ      6,B6
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:43   
          2 00012B  0801 005E                            BAL      s:11905,PREL

      278    11870    5                                     DO;

      279    11871    5                                        CALL KYI$IO(KY$CTX,%KY#GET_RANGE) ALTRET(L1);

  11871   2 00012D  DBF0 0005                            LAB,B5   5,IMO
          2 00012F  DFC7 000A                            STB,B5   STATUSW+3,AUTO
          2 000131  EFC7 0008                            STB,B6   STATUSW+1,AUTO
          2 000133  BBC7 0008                            LAB,B3   STATUSW+1,AUTO
          2 000135  CBF0 0200                            LAB,B4   512,IMO
          2 000137  E380 0000 0000  xent                 LNJ,B6   KYI$IO
          2 00013A       000E                            DC       s:11874,PREL

      280    11872    5                                        IF KY_LAST_RANGE ~= KY$CTX.INPUT.BUF_SIZE THEN

  11872   2 00013B  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 00013D  E800 0000 0000  xsym                 LDR,R6   KY_LAST_RANGE
          2 000140  E946 001C                            CMR,R6   28,B6
          2 000142  0901 0005                            BE       s:11874,PREL

      281    11873    5                                           KY$CTX.DVC_STATUS = %KY#DVC_HOPEMPTY;

  11873   2 000144  5C05                                 LDV,R5   5
          2 000145  DAC6 0004                            SRM,R5,'00FF'X    4,B6
          2 000147       00FF

      282    11874    5   L1:                               END;  /* IF NOT READY */

  11874   2                              L1              null
      283    11875    4                            END;           /* 9111 */

      284    11876    3                END;                       /* DO CASE */

      285    11877    2             END;

  11877   2 000148  0F81 0041            L1              B        s:11905,PREL
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:44   

      286    11878    1          ELSE
      287    11879    2             DO;  /* the device says it is okay, but never trust a smiling lp */

      288    11880    2                IF KY$CTX.DVCTYP = %KY#TYP_LP THEN

  11880   2 00014A  D2C6 000B                            LLH,R5   11,B6
          2 00014C  5D01                                 CMV,R5   1
          2 00014D  0981 003C                            BNE      s:11905,PREL

      289    11881    3                   DO;

      290    11882    3                      IF KY$CTX.DVC_ID = %BITBIN('20C4'X) THEN

  11882   2 00014F  C846 0007                            LDR,R4   7,B6
          2 000151  C970 20C4                            CMR,R4   8388,IMO
          2 000153  0981 0036                            BNE      s:11905,PREL

      291    11883    4                         DO;

      292    11884    4                            TEMP_STATUSW = KY$CTX.STATUSW;

  11884   2 000155  EF47 0006                            STR,R6   TEMP_STATUSW,AUTO

      293    11885    5                            CALL KYI$IO(KY$CTX,%KY#GET_STATW2) WHENALTRETURN DO;

  11885   2 000157  DBF0 0007                            LAB,B5   7,IMO
          2 000159  DFC7 000A                            STB,B5   STATUSW+3,AUTO
          2 00015B  EFC7 0008                            STB,B6   STATUSW+1,AUTO
          2 00015D  BBC7 0008                            LAB,B3   STATUSW+1,AUTO
          2 00015F  CBF0 0200                            LAB,B4   512,IMO
          2 000161  E380 0000 0000  xent                 LNJ,B6   KYI$IO
          2 000164       0003                            DC       s:11886,PREL
          2 000165  0F81 0004                            B        s:11888,PREL

      294    11886    5                                  RETURN;

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:45   
  11886   2 000167  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      295    11887    5                               END;
      296    11888    4                            STATUSW = KY$CTX.STATUSW;

  11888   2 00016A  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          2 00016C  E846 0006                            LDR,R6   6,B6
          2 00016E  EF47 0007                            STR,R6   STATUSW,AUTO

      297    11889    4                            IF PRNTR_STAT.ERR = %BITBIN(%KY#STAT_PAPI) THEN

  11889   2 000170  D847 0007                            LDR,R5   STATUSW,AUTO
          2 000172  D570 00FF                            AND,R5   255,IMO
          2 000174  5D05                                 CMV,R5   5
          2 000175  0981 0010                            BNE      s:11901,PREL

      298    11890    5                               DO;

      299    11891    5                                  KY$CTX.DVC_STATUS = %KY#DVC_UNREADY;

  11891   2 000177  4C01                                 LDV,R4   1
          2 000178  CAC6 0004                            SRM,R4,'00FF'X    4,B6
          2 00017A       00FF

      300    11892
      301    11893        /*
      302    11894                set printers status word bits manually
      303    11895        */
      304    11896    5                                  KY$CTX.LP_PR54_STATUS.STATUS_CHANGE = '1'B;

  11896   2 00017B  8946 0006                            LBT,'4000'X       6,B6
  11896   2 00017D       4000

      305    11897    5                                  KY$CTX.LP_PR54_STATUS.EOF = '1'B;

  11897   2 00017E  8946 0006                            LBT,'1000'X       6,B6
  11897   2 000180       1000
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:46   

      306    11898    5                                  KY$CTX.LP_PR54_STATUS.DEV_READY = '0'B;

  11898   2 000181  8846 0006                            LBF,'8000'X       6,B6
  11898   2 000183       8000

      307    11899    5                               END;

  11899   2 000184  0F81 0005                            B        s:11905,PREL

      308    11900    4                            ELSE
      309    11901    4                               KY$CTX.STATUSW = TEMP_STATUSW;

  11901   2 000186  E847 0006                            LDR,R6   TEMP_STATUSW,AUTO
          2 000188  EF46 0006                            STR,R6   6,B6

      310    11902    4                         END;              /* dvc_id = 20C4 (PR-54) */

      311    11903    3                   END;                    /* dvctyp = lp  */

      312    11904    2             END;                          /* never trust a smiling lp */

      313    11905    1          RETURN;

  11905   2 00018A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      314    11906    1   END KYC$CHECK_STATUS;

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:47   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_PERR_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KY_SCODE_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYC$CHECK_STATUS.
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:48   

 **** Variables and constants ****

  ****  Section 000 RoData KYC$CHECK_STATUS

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 U_BADMEM

  ****  Section 001  Data  KYC$CHECK_STATUS

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(336)   r     1 FPT_WRSYSLOG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KY$CTX                   *0-0-0/w STRC(608)   r     1 KY$CTX
     7-0-0/w STRC(16)    r     1 PRNTR_STAT                 7-0-0/w UBIN(16)    r     1 STATUSW
     6-0-0/w UBIN(16)    r     1 TEMP_STATUSW

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KY_LAST_RANGE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:49   
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KYC$CHECK_STATUS requires 397 words for executable code.
   Procedure KYC$CHECK_STATUS requires 12 words of local(AUTO) storage.

    No errors detected in file KYC$CHECK.:E05TSI    .
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:51   
          MINI XREF LISTING

FPT_WRSYSLOG
     11497**DCL     11764<>CALL    11775<>CALL    11786<>CALL    11810<>CALL    11822<>CALL    11834<>CALL
     11848<>CALL    11861<>CALL
FPT_WRSYSLOG.V
     11501**DCL     11499--DCLINIT
FPT_WRSYSLOG.V.ERRCODE.ERR#
     11545**DCL     11763<<ASSIGN  11774<<ASSIGN  11785<<ASSIGN  11809<<ASSIGN  11821<<ASSIGN  11833<<ASSIGN
     11847<<ASSIGN  11860<<ASSIGN
FPT_WRSYSLOG.V.TERMID
     11564**DCL     11738<<ASSIGN
FPT_WRSYSLOG.V.TERMID.TERM
     11566**DCL     11575--REDEF
KH$CHN.TERMID
     11388**DCL     11738>>ASSIGN
KH$CHN.TERMID.TERM
     11390**DCL     11399--REDEF
KHA$ERRLOG
     11482**DCL-ENT 11764--CALL    11775--CALL    11786--CALL    11810--CALL    11822--CALL    11834--CALL
     11848--CALL    11861--CALL
KHD$SCREECH
     11480**DCL-ENT 11758--CALL
KV$VDI.CHN$
     11424**DCL     11738>>ASSIGN
KV_STT.REQSTATS.DSPMSK
     10855**DCL     10861--REDEF
KV_STT.REQSTATS.SLCMSK
     10896**DCL     10903--REDEF
KY$CTX
     11113**DCL        40--PROC    11871<>CALL    11885<>CALL
KY$CTX.CP_STATUS.CARD_JAM
     11162**DCL     11818>>IF
KY$CTX.CP_STATUS.HOPPER_EMPTY
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:52   
     11163**DCL     11801>>IF
KY$CTX.CP_STATUS.PUNCH_ERROR
     11160**DCL     11806>>IF
KY$CTX.CP_STATUS.SERVICE_RATE
     11158**DCL     11830>>IF
KY$CTX.CR_9107_STATUS.CARD_JAM
     11190**DCL     11857>>IF
KY$CTX.CR_9107_STATUS.HOPPER_EMPTY
     11191**DCL     11853>>IF
KY$CTX.CR_9107_STATUS.SERV_RATE
     11186**DCL     11844>>IF
KY$CTX.CR_9111_STATUS.BAD_ASC
     11177**DCL     11866>>IF
KY$CTX.CR_9111_STATUS.DEV_READY
     11170**DCL     11869>>IF
KY$CTX.DEFRD.STATUSW
     11255**DCL     11257--REDEF
KY$CTX.DVCTYP
     11201**DCL     11794>>DOCASE  11880>>IF
KY$CTX.DVC_ID
     11197**DCL     11851>>IF      11882>>IF
KY$CTX.DVC_STATUS
     11117**DCL     11740<<ASSIGN  11745<<ASSIGN  11803<<ASSIGN  11808<<ASSIGN  11820<<ASSIGN  11832<<ASSIGN
     11846<<ASSIGN  11855<<ASSIGN  11859<<ASSIGN  11867<<ASSIGN  11873<<ASSIGN  11891<<ASSIGN
KY$CTX.INPUT.BUF_SIZE
     11235**DCL     11872>>IF
KY$CTX.LP_PR54_STATUS.DEV_READY
     11142**DCL     11898<<ASSIGN
KY$CTX.LP_PR54_STATUS.EOF
     11145**DCL     11897<<ASSIGN
KY$CTX.LP_PR54_STATUS.STATUS_CHANGE
     11143**DCL     11896<<ASSIGN
KY$CTX.LP_STATUS.BAD_MEM
     11140**DCL     11753>>IF
KY$CTX.LP_STATUS.CORRECT_MEM
     11137**DCL     11783>>IF
PL6.E3A0      #002=KYC$CHECK_STATUS File=KYC$CHECK.:E05TSI                       WED 07/30/97 02:39 Page:53   
KY$CTX.LP_STATUS.DEV_READY
     11134**DCL     11744>>IF
KY$CTX.LP_STATUS.NON_RESOURCE
     11138**DCL     11772>>IF
KY$CTX.LP_STATUS.PARITY_ERROR
     11139**DCL     11761>>IF
KY$CTX.MODE
     11204**DCL     11212--REDEF
KY$CTX.STATUSW
     11131**DCL     11133--REDEF   11141--REDEF   11155--REDEF   11169--REDEF   11183--REDEF   11742>>IF
     11884>>ASSIGN  11888>>ASSIGN  11901<<ASSIGN
KY$CTX.VDI$
     11198**DCL     11738>>ASSIGN
KY$CTX.VDIENB
     11269**DCL     11275--REDEF
KYI$IO
     11481**DCL-ENT 11871--CALL    11885--CALL
KY_LAST_RANGE
     10976**DCL     11872>>IF
KY_STT_URP.REQSTATS.DSPMSK
     10504**DCL     10510--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     10545**DCL     10552--REDEF
L1
     11874**LABEL   11871--CALLALT
PRNTR_STAT.ERR
     11478**DCL     11889>>IF
STATUSW
     11475**DCL     11476--REDEF   11888<<ASSIGN
TEMP_STATUSW
     11474**DCL     11884<<ASSIGN  11901>>ASSIGN
U_BADMEM
      4460**DCL     11758<>CALL
