

15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      1    
    1      /*M* K_TRANSPORT_E - EQU statements for the Transport Layer    */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8
    9      /*F* NAME: K_TPDU_TYPE_equ
   10      */
   11      /*K* VALUES -
   12      The EQUated values for K$TPDU_xx.TYPE are in the
   13      form: 'K_TPDU_TYPE_name',  where:
   14      .fif
   15      }
   16      }                                              Valid with
   17      }   name        Value    Type                  Trans. Classes
   18      } --------      -----    -------------------   ---------------
   19      }    CP6         00      CP-6 Control          0   2   4
   20      }    UN          01      Use of NW Connection  0   2   4
   21
   22      }    ED          01      Expedited Data          1 F 3 4
   23      }    EA          02      Expedited Data Ack      1 F 3 4
   24      }    RJ          05      Reject                  1   3
   25      }    AK          06      Data Acknowledgment     1 F 3 4
   26      }    ER          07      TPDU Error            0 1 2 3 4
   27      }    DR          08      Disconnect Request    0 1 2 3 4
   28      }    DC          12      Disconnect Confirm      1 2 3 4
   29      }    CC          13      Connection Confirm    0 1 2 3 4
   30      }    CR          14      Connection Request    0 1 2 3 4
   31      }    DT          15      Data                  0 1 2 3 4
   32      }
   33      }                                      (F = available in class 2
   34      }                                       with explicit flow control)
   35      .fin
   36      */
   37      %EQU K_TPDU_TYPE_CP6= 0;                /*CP-6 Host to Fep Transport Control  */
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      2    
   38      %EQU K_TPDU_TYPE_UN = 1;                /*Used with N-CONNECT Request         */
   39      %EQU K_TPDU_TYPE_ED = 1;
   40      %EQU K_TPDU_TYPE_EA = 2;
   41      %EQU K_TPDU_TYPE_GR = 3;                /*Graceful Rundown - according to MAP */
   42      %EQU K_TPDU_TYPE_UD = 4;                /*Unit Data - Connectionless Mode     */
   43      %EQU K_TPDU_TYPE_RJ = 5;
   44      %EQU K_TPDU_TYPE_AK = 6;
   45      %EQU K_TPDU_TYPE_ER = 7;
   46      %EQU K_TPDU_TYPE_DR = 8;
   47      %EQU K_TPDU_TYPE_DC = 12;
   48      %EQU K_TPDU_TYPE_CC = 13;
   49      %EQU K_TPDU_TYPE_CR = 14;
   50      %EQU K_TPDU_TYPE_DT = 15;
   51
   52      /*F* NAME: K_TPARM_CODE_equ
   53
   54      The file K_TRANSPORT_E contsains a set of EQUs that may be used to
   55      reference K$TPARM.CODE.
   56
   57      Each EQU is of the form     '%EQU K_TPARM_name = value;'
   58
   59      where:
   60
   61      .fif
   62                     decimal   hex    octal   valid with    valid with
   63        name          value   value   value   TPDU types:   Trans. Classes:
   64       -----------  --------- ------ -------  -----------   ---------------
   65       SSN_CRDT        001      01     001    CP6           0   2   4
   66       CP6_OPTIONS     002      02     002    CP6           0   2   4
   67       FLOW_STOP       003      03     003    CP6           0   2   4
   68       FLOW_START      004      04     004    CP6           0   2   4
   69       SSN_CRDT_ACK    005      05     005    CP6           0   2   4
   70
   71       ACK_TIME        133      85     205    CR CC                 4
   72       ERR_RATE        134      86     206    CR CC           1 2 3 4
   73       PRIORITY        135      87     207    CR CC           1 2 3 4
   74       TRANSIT_DELAY   136      88     210    CR CC           1 2 3 4
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      3    
   75       THROUGHPUT      137      89     211    CR CC           1 2 3 4
   76       SUBSEQ          138      8A     212    AK                    4
   77       REASS_TIME      139      8B     213    CR              1   3
   78       FCC             140      8C     214    AK                    4
   79       TPDUSZ          192      C0     300    CR CC         0 1 2 3 4
   80       CALLING_TSAP    193      C1     301    CR CC         0 1 2 3 4
   81       CALLED_TSAP     194      C2     302    CR CC         0 1 2 3 4
   82       CHKSUM          195      C3     303    All                   4
   83       VERSION         196      C4     304    CR              1 2 3 4
   84       SECURITY        197      C5     305    CR              1 2 3 4
   85       OPTION          198      C6     306    CR CC           1 2 3 4
   86       ALT_CLASS       199      C7     307    CR              1 2 3 4
   87       CLR_INFO        224      E0     340    DR            0 1 2 3 4
   88
   89       INVALID_TPDU    193      C1     301    ER            0 1 2 3 4
   90
   91      .fin
   92      */
   93
   94      %EQU K_TPARM_SSN_CRDT = 1;
   95      %EQU K_TPARM_CP6_OPTIONS = 2;
   96      %EQU K_TPARM_FLOW_STOP = 3;
   97      %EQU K_TPARM_FLOW_START = 4;
   98      %EQU K_TPARM_SSN_CRDT_ACK = 5;
   99
  100      %EQU K_TPARM_ACK_TIME = 133;
  101      %EQU K_TPARM_ERR_RATE = 134;
  102      %EQU K_TPARM_PRIORITY = 135;
  103      %EQU K_TPARM_TRANSIT_DELAY = 136;
  104      %EQU K_TPARM_THROUGHPUT = 137;
  105      %EQU K_TPARM_SUBSEQ = 138;
  106      %EQU K_TPARM_REASS_TIME = 139;
  107      %EQU K_TPARM_FCC = 140;
  108      %EQU K_TPARM_TPDUSZ = 192;
  109      %EQU K_TPARM_CALLING_TSAP = 193;
  110      %EQU K_TPARM_CALLED_TSAP = 194;
  111      %EQU K_TPARM_CHKSUM = 195;
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      4    
  112      %EQU K_TPARM_VERSION = 196;
  113      %EQU K_TPARM_SECURITY = 197;
  114      %EQU K_TPARM_OPTION = 198;
  115      %EQU K_TPARM_ALT_CLASS = 199;
  116      %EQU K_TPARM_CLR_INFO = 224;
  117      %EQU K_TPARM_INVALID_TPDU = 193;
  118
  119
  120      /*F* NAME: K_TPDUSIZE_equ
  121
  122      The following EQUs are used to reference K$TPARM_TPDUSZ.SIZE
  123      and K$TCTX.TPDUSIZE_PARM.
  124
  125      Each EQU is of the form     '%EQU K_TPDUSIZE_tpdusize = value;'
  126
  127      where:
  128
  129      .fif
  130          value   tpdusize
  131          -----   --------
  132             7       128
  133             8       256
  134             9       512
  135            10      1024
  136            11      2048
  137            12      4096  (not allowed in class 0)
  138            13      8192  (not allowed in class 0)
  139      */
  140
  141      %EQU K_TPDUSIZE_128 = 7;
  142      %EQU K_TPDUSIZE_256 = 8;
  143      %EQU K_TPDUSIZE_512 = 9;
  144      %EQU K_TPDUSIZE_1024 = 10;
  145      %EQU K_TPDUSIZE_2048 = 11;
  146      %EQU K_TPDUSIZE_4096 = 12;
  147      %EQU K_TPDUSIZE_8192 = 13;
  148
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      5    
  149      /*F* NAME: K_TPDU_RJ_equ
  150      */
  151      /*K* VALUES -
  152      The EQUated values for K$TPDU_ER.REJECT_CAUSE are in the
  153      form: 'K_TPDU_RJ_name',  where:
  154      .fif
  155      }     Name      Value    Type
  156      }  ----------   -----    ---------------------------
  157      }     NS         00      Reason not specified
  158      }     PCODE      01      Invalid Parameter code
  159      }     TTYPE      02      Invalid TPDU type
  160      }     PVALUE     03      Invalid Parameter Value
  161      }
  162      .fin
  163      */
  164      %EQU K_TPDU_RJ_NS     = 0;
  165      %EQU K_TPDU_RJ_PCODE  = 1;
  166      %EQU K_TPDU_RJ_TTYPE  = 2;
  167      %EQU K_TPDU_RJ_PVALUE = 3;
  168
  169
  170
  171      /*F* NAME: K_UN_PRTID_equ
  172      */
  173      /*K* VALUES -
  174      The EQUated values for K$TPDU_UN.PRT_ID are in the
  175      form: 'K_UN_PRTID_name',  where:
  176      .fif
  177      } Name      Value    Type
  178      } -------   -----    ---------------------------
  179      } VC         01      OSI Transport Protocol (IS 8073)
  180      } CLNS       02      OSI Connectionless-mode Transport (IS 8602)
  181      }
  182      .fin
  183      */
  184      %EQU K_UN_PRTID_VC     = 1;
  185      %EQU K_UN_PRTID_CLNS   = 2;
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      6    
  186
  187
  188
  189      /*F* NAME: K_TTIMER_equ
  190      */
  191      %EQU K_TTIMER_RETRAN = 0;
  192      %EQU K_TTIMER_WINDOW = 1;
  193      %EQU K_TTIMER_INACTIVITY = 2;
  194      %EQU K_TTIMER_REFERENCE = 3;
  195      %EQU K_TTIMER_PSEUDO = 4;
  196
  197      /*F* NAME: K$TCTX_REASON_equ
  198
  199      The following EQUs are used to set K$TCTX.REASON and K$TPDU_DR.REASON:
  200      */
  201
  202      /*K* VALUES -
  203
  204      .fif
  205
  206       decimal   hex    octal
  207        value   value   value   meaning
  208      --------- ------ -------  -----------------------------
  209         000      0        0    Unspecified (normal disconnect for class 0)
  210         001      1        1    Transport congestion
  211         002      2        2    Session entity not attached
  212         003      3        3    Network address unknown
  213
  214         128     80      200    Normal Session disconnect
  215         129     81      201    Transport congestion at connect request
  216         130     82      202    Connection negoiation failed
  217         131     83      203    Duplicate SRC_REF for same NSAP
  218         132     84      204    Mismatched references
  219         133     85      205    Protocol Error
  220         134     86      206    * unused
  221         135     87      207    Reference Overflow
  222         136     88      210    Network refused the connection
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      7    
  223         137     89      211    * unused
  224         138     8A      212    Invalid TPDU.LI or TPARM.LEN
  225
  226      Only reason codes 0 through 3 are valid for Class 0.  Classes 1 to 4
  227      recognize all reason codes.
  228      .fin
  229      */
  230      /* See Section 13.5 in the ISO spec.
  231      */
  232      /* for TPDU_DR.REASON - classes 1 - 4 */
  233      %EQU K_REASON_NORMAL = 128;
  234      %EQU K_REASON_RMTCONGESTION = 129;
  235      %EQU K_REASON_NEGOTIATION = 130;
  236      %EQU K_REASON_DUP_SRC_REF = 131;
  237      %EQU K_REASON_MISMATCHED = 132;
  238      %EQU K_REASON_PROTOCOL = 133;
  239      %EQU K_REASON_REF_OVFLW = 135;
  240      %EQU K_REASON_NTWK_REFUSED = 136;
  241      %EQU K_REASON_LEN_INV = 138;
  242
  243      /* for TPDU_DR.REASON - all classes   */
  244      %EQU K_REASON_NOTSPEC = 0;
  245      %EQU K_REASON_CONGESTION = 1;
  246      %EQU K_REASON_NOTATTACHED = 2;
  247      %EQU K_REASON_ADDRESS_UNKNOWN = 3;
  248
  249
  250      /*F* NAME: K$TCTX_ERR_equ
  251
  252      The file K_TRANSPORT_E contains a set of EQUs that may be used to
  253      reference the value in .ERR of both the host and the fep TCTX.
  254      */
  255
  256      /*K* VALUES -
  257
  258      .fif
  259
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      8    
  260       decimal   hex    octal
  261        value   value   value   meaning
  262      --------- ------ -------  -----------------------------
  263         220     DC      334    Connect Time Out
  264         221     DD      335    Retransmission Timer Expired
  265         222     DE      336    Inactivity Timer Expired
  266         224     E0      340    Bad state:event combination
  267         225     E1      341    Illegal expedited data received
  268         226     E2      342    TPARM_xx.CODE invalid for TPDU
  269         227     E3      343    Invalid value in TPARM_xx.LEN
  270         228     E4      344    Out of sequence TPDU received
  271         229     E5      345    SSN data exceeds maximum
  272         230     E6      346    TPDU.TYPE invalid
  273         231     E7      347    TPDU.LI invalid for type
  274         232     E8      350    Duplicate TPDU_CR received
  275         233     E9      351    TPDU.MBZ isn't zero
  276         234     EA      352    Out of transport contect blocks
  277         235     EB      353    TPDU.DST_REF bad
  278         236     EC      354    Communications Protocol Error
  279         237     ED      355    Data received out of window
  280         238     EE      356    Bad class in TPDU_CR or TPDU_CC
  281         239     EF      357    Bad TPDU_AK.subsequence number
  282         240     F0      360    Bad TPDU_AK.tpdu_nr
  283         242     F2      362    Checksum validation failure
  284         243     F3      363    Flow control in effect
  285         244     F4      364    Out of transport buffers
  286         245     F5      365    TERM recieved from Network
  287         246     F6      366    Dup TPDU_CR for open CP6 TCTX
  288         247     F7      367    DISCONNECT_REQ received from CP6 Session
  289         249     F9      371    Altret from Network
  290         250     FA      372    NRESET received from Network
  291      .fin
  292      */
  293
  294      /* for K$TCTX.ERR - set by KNT$TIME.  */
  295      %EQU K_ERROR_CONNECT_TO = 220;          /* Connect Time Out                   */
  296      %EQU K_ERROR_RETRAN = 221;              /* Retransmission Expired             */
15:04 JUL 28 '97 K_TRANSPORT_E.:E05SI                                      9    
  297      %EQU K_ERROR_INACT_TO = 222;            /* Inactivity Time Out                */
  298
  299      /* for K$TCTX.ERR and KNT$TRC_BUF.WHO                  */
  300      %EQU K_ERROR_BAD_TSTATE = 224;          /* Bad state:event combination        */
  301      %EQU K_ERROR_NOEXPD = 225;              /* Illegal expedited data received    */
  302      %EQU K_ERROR_INVPARM = 226;             /* K$TPARM_xx.CODE invalid for  type  */
  303      %EQU K_ERROR_INVPARM_LEN = 227;         /* Invalid value in K$TPARM_xx.LEN    */
  304      %EQU K_ERROR_LOST_TPDU = 228;           /* Out of sequence TPDU received      */
  305      %EQU K_ERROR_DATASZ = 229;              /* SSN data exceeds max               */
  306      %EQU K_ERROR_TPDU_TYPE = 230;           /* K$TPDU.TYPE invalid                */
  307      %EQU K_ERROR_TPDU_LEN = 231;            /* K$TPDU.LI invalid for type         */
  308      %EQU K_ERROR_DUP_CR = 232;              /* Duplicate TPDU_CR received         */
  309      %EQU K_ERROR_MBZ = 233;                 /* K$TPDU.MBZ isn't zero              */
  310      %EQU K_ERROR_NO_TCTX = 234;             /* Out of transport contect blocks    */
  311      %EQU K_ERROR_DST_REF = 235;             /* K$TPDU.DST_REF bad                 */
  312      %EQU K_ERROR_PROTOCOL = 236;            /* Communications Protocol Error      */
  313      %EQU K_ERROR_NWINDOW = 237;             /* data received out of rcv window    */
  314      %EQU K_ERROR_CLASS = 238;               /* bad class in _cr or _cc            */
  315      %EQU K_ERROR_AK_SUBSEQU = 239;          /* bad tpdu_ak.subsequence            */
  316      %EQU K_ERROR_AK_NWINDOW = 240;          /* bad tpdu_ak.tpdu_nr                */
  317      %EQU K_ERROR_CHKSUM = 242;              /* altret from check checksum         */
  318      %EQU K_ERROR_FLOW = 243;                /* Flow control in effect             */
  319      %EQU K_ERROR_NOMEM = 244;               /* KNT$GETBUF altreturned             */
  320      %EQU K_ERROR_TERM = 245;                /* KNT$RECV called for TERM function  */
  321      %EQU K_ERROR_RESTART=246;               /* Dup tpdu_cr for open CP6 tctx      */
  322      %EQU K_ERROR_DISCONNECT_REQ = 247;      /* K_DISCONNECT_REQ received          */
  323      %EQU K_ERROR_NETWORK = 249;             /* Altret from KNN$SEND               */
  324      %EQU K_ERROR_NRESET = 250;              /* KNT$RECV called for K_NRESET       */

