VERSION E05

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:1    
        1        1        /*M*    CPX$RESOURC    Subroutine for RESOURCE command context errors         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        CPX$RESOURC: PROC(P_PARAM);
        9        9        /*******************************************************************************
       10       10        *                                Include files                                 *
       11       11        *******************************************************************************/
       12       12        %INCLUDE AS_SUPER_C;
       13      447        %INCLUDE B$JIT;
       14      737        %INCLUDE B_MACROS_C;
       15      848        %INCLUDE CP_6;
       16      929        %INCLUDE CP_MACROS_C;
       17     1681        %INCLUDE CP_PERR_C;
       18     2019        %INCLUDE CP_SUBS_C;
       19     2936        %INCLUDE JG_GHOSTS_C;
       20     3026        %INCLUDE JM_SUBS_C;
       21     3132        %INCLUDE M_INFO_C;
       22     3272        %INCLUDE XU_MACRO_C;
       23     6378        %INCLUDE XU_SUBS_C;
       24     6470        %INCLUDE B_SEGIDS_C;
       25     7009        /**/
       26     7010        /*******************************************************************************
       27     7011        *                                 Parameter                                    *
       28     7012        *******************************************************************************/
       29     7013        %PARSE$PARAM(NAME = P_PARAM,STCLASS=);
       30     7094        /*******************************************************************************
       31     7095        *                          External entry references                           *
       32     7096        *******************************************************************************/
       33     7097    1   DCL CXX$DECBIN ENTRY(2) ALTRET;
       34     7098    1   DCL CXP$POSTERR ENTRY(5);
       35     7099    1   DCL XUP$FREEOUT ENTRY(2);
       36     7100    1   DCL XUP$GETSPACE ENTRY(3);
       37     7101        /*******************************************************************************
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:2    
       38     7102        *                                 Symref data                                  *
       39     7103        *******************************************************************************/
       40     7104    1   DCL B$JIT$ PTR SYMREF;
       41     7105    1   DCL B$TCB$ PTR SYMREF;
       42     7106        /*******************************************************************************
       43     7107        *                             System service fpts                              *
       44     7108        *******************************************************************************/
       45     7109        %FPT_MADMUCK(FPTN = FPT_MADMUCKC,STCLASS = CONSTANT,
       46     7110                 READ = YES);
       47     7126        %FPT_MADMUCK(FPTN = FPT_MADMUCK,STCLASS = AUTO);
       48     7142        /*******************************************************************************
       49     7143        *                                Constant data                                 *
       50     7144        *******************************************************************************/
       51     7145    1   DCL 1 SEG2PTR CONSTANT,
       52     7146    1          2 OFFSET UBIN(24) UNAL INIT(0),
       53     7147    1          2 SEGID BIT(12) UNAL INIT(%DS2SID);
       54     7148    1   DCL SEG2$ REDEF SEG2PTR PTR;
       55     7149        %FPT_RESCTL (FPTN = CFPT_RESCTL,STCLASS = CONSTANT);
       56     7166        /*******************************************************************************
       57     7167        *                                 Auto data                                    *
       58     7168        *******************************************************************************/
       59     7169    1   DCL VAL SBIN;
       60     7170    1   DCL TIME UBIN;
       61     7171        %VLP_SN(FPTN = SN,STCLASS = AUTO,
       62     7172                 N = 1);
       63     7185    1   DCL I SBIN;
       64     7186    1   DCL J SBIN;
       65     7187    1   DCL MODE_INDEX SBIN WORD;
       66     7188    1   DCL COMMAND UBIN;
       67     7189    1   DCL BLK$ PTR;
       68     7190    1   DCL P$ PTR;
       69     7191    1   DCL ERR$ PTR;
       70     7192    1   DCL USER$ PTR;
       71     7193    1   DCL PSEUDO$ PTR;
       72     7194    1   DCL PHYS$ PTR;
       73     7195    1   DCL MADACCT CHAR(8);
       74     7196    1   DCL RES_TYPE CHAR(2);
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:3    
       75     7197    1   DCL RES_TBL(0:11) SBIN WORD;
       76     7198          %VLP_PRES (FPTN = CUR_RES,STCLASS = AUTO,N = VIRT_SLOTS);
       77     7214          %VLP_PSEUDO (FPTN = CUR_PSEUDO,STCLASS = AUTO,N = PSEUDO_SLOTS);
       78     7230        /*******************************************************************************
       79     7231        *                                 Based data                                   *
       80     7232        *******************************************************************************/
       81     7233        %SEG$2;
       82     7293        %AS_USERS(STR_NAME = AS$USERS,STCLASS = BASED);
       83     7471        %G$D(NAME = G$D,STCLASS = BASED);
       84     7567        %P$PCB (NAME=P$PCB,STCLASS=BASED);
       85     7768        %P$NODE (NAME=P$NODE,STCLASS=BASED);
       86     7862        %PARSE$OUT (NAME=P$B,STCLASS=BASED);
       87     7907        %PARSE$SYM (NAME=P$S,STCLASS=BASED);
       88     7945        %U$PARAM(NAME = U$PARAM,STCLASS = BASED);
       89     7961        %VLP_PRES(FPTN = PHYS$LIST,STCLASS = BASED);
       90     7977        %VLP_PSEUDO(FPTN = PSEUDO$LIST,STCLASS = BASED);
       91     7993        %FPT_RESCTL (FPTN=FPT_RESCTL,STCLASS=AUTO);
       92     8010        %B$TCB (STCLASS="BASED(B$TCB$)");
       93     8013        %B$EXCFR;
       94     8031        /*******************************************************************************
       95     8032        *                                 Error codes                                  *
       96     8033        *******************************************************************************/
       97     8034        %ERR_CODE (NAME=E_BDCVAL,MID#=CPX$IBEXMID,CODE#=E$BDCVAL,STCLASS=CONSTANT);
       98     8054        %ERR_CODE(NAME=E_JPBIGRTIME,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGRTIME,STCLASS=
              8054            CONSTANT);
       99     8074        /*E* ERROR: CPX-E$JPBIGRTIME
      100     8075             MESSAGE: TIME resource exceeds user maximum
      101     8076        */
      102     8077        %ERR_CODE(NAME=E_JPBIGMEM,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGMEM,STCLASS=CONSTANT)
              8077            ;
      103     8097        /*E* ERROR: CPX-E$JPBIGMEM
      104     8098             MESSAGE: MEMORY resource exceeds user maximum
      105     8099        */
      106     8100        %ERR_CODE(NAME=E_JPBADVNUM,FCG#='0320'O,MID#='30'O,CODE#=E$JPBADVNUM,STCLASS=
              8100            CONSTANT);
      107     8120        /*E* ERROR: CPX-E$JPBADVNUM
      108     8121             MESSAGE: dd portion of DVdd not between 01 and 99
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:4    
      109     8122        */
      110     8123        %ERR_CODE(NAME=E_JPBIGSETNM,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGSETNM,STCLASS=
              8123            CONSTANT);
      111     8143        /*E* ERROR: CPX-E$JPBIGSETNM
      112     8144             MESSAGE: Packset name greater than 6 characters
      113     8145        */
      114     8146        %ERR_CODE(NAME=E_JPSUDOAUTH,FCG#='0320'O,MID#='30'O,CODE#=E$JPSUDOAUTH,STCLASS=
              8146            CONSTANT);
      115     8166        /*E* ERROR: CPX-E$JPSUDOAUTH
      116     8167             MESSAGE: You're not authorized for that PSEUDO resource
      117     8168        */
      118     8169        %ERR_CODE(NAME=E_JPSUDOMAX,FCG#='0320'O,MID#='30'O,CODE#=E$JPSUDOMAX,STCLASS=
              8169            CONSTANT);
      119     8189        /*E* ERROR: CPX-E$JPSUDOMAX
      120     8190             MESSAGE: PSEUDO resource count exceeds user maximum
      121     8191        */
      122     8192        %ERR_CODE(NAME=E_JPNORES,FCG#='0320'O,MID#='30'O,CODE#=E$JPNORES,STCLASS=CONSTANT);
      123     8212        /*E* ERROR: CPX-E$JPNORES
      124     8213             MESSAGE: That resource does not exist on this system.
      125     8214        */
      126     8215        %ERR_CODE(NAME=E_JPBIGACCT,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGACCT,STCLASS=
              8215            CONSTANT);
      127     8235        %ERR_CODE(NAME=E_JPRESMAX,FCG#='0320'O,MID#='30'O,CODE#=E$JPRESMAX,STCLASS=CONSTANT)
              8235            ;
      128     8255        /*E* ERROR: CPX-E$JPRESMAX
      129     8256             MESSAGE: RESOURCE count exceeds user maximum */
      130     8257        %ERR_CODE(NAME=E_JPRESAUTH,FCG#='0320'O,MID#='30'O,CODE#=E$JPRESAUTH,STCLASS=
              8257            CONSTANT);
      131     8277        /*E* ERROR: CPX-E$JPRESAUTH
      132     8278             MESSAGE: You're not authorized for that RESOURCE */
      133     8279        %ERR_CODE(NAME=E_JPSMALLMEM,FCG#='0320'O,MID#='30'O,CODE#=E$JPSMALLMEM,STCLASS=
              8279            CONSTANT);
      134     8299        /*E* ERROR: CPX-E$JPSMALLMEM
      135     8300             MESSAGE: MEMORY resource less than system minimum */
      136     8301        %ERR_CODE(NAME=E_JPNOLP01,FCG#='0320'O,MID#='30'O,CODE#=E$JPNOLP01,STCLASS=CONSTANT)
              8301            ;
      137     8321        /*E* ERROR: CPX-E$JPNOLP01
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:5    
      138     8322             MESSAGE: You can't get LP01 as a RESOURCE */
      139     8323        %ERR_CODE(NAME=E_XHRXCD,MID#='30'O,CODE#=E$XHRXCD,STCLASS=CONSTANT);
      140     8343        %ERR_CODE(NAME=E_XMINXCD,MID#='30'O,CODE#=E$XMINXCD,STCLASS=CONSTANT);
      141     8363        %ERR_CODE(NAME=E_XSECXCD,MID#='30'O,CODE#=E$XSECXCD,STCLASS=CONSTANT);
      142     8383        %EJECT;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:6    
      143     8384        /*******************************************************************************
      144     8385        *                               Begin procedure                                *
      145     8386        *******************************************************************************/
      146     8387        /**/
      147     8388    1   CPX$ACQUIRE: ENTRY(P_PARAM);
      148     8389        /**/
      149     8390    1     ERR$ = P_PARAM.USER$->U$PARAM.ERRBUF$;
      150     8391    1     USER$ = P_PARAM.USER$->U$PARAM.USERS$;
      151     8392    1     PSEUDO$ = P_PARAM.USER$->U$PARAM.PSEUDO$;
      152     8393    1     PHYS$ = P_PARAM.USER$->U$PARAM.PHYS$;
      153     8394    1     P$ = P_PARAM.OUT$;
      154     8395        /**/
      155     8396    2     DO I = 0 TO 11;
      156     8397    2        RES_TBL(I) = 0;
      157     8398    2     END;
      158     8399    1     CUR_PSEUDO.MEMORY# = 0;
      159     8400    1     COMMAND = P_PARAM.PCB$ -> P$PCB.ROOT$ -> P$NODE.CODE;
      160     8401        /**/
      161     8402    2     IF COMMAND = ACQUIRECMND THEN DO;
      162     8403        /*
      163     8404           *** Get the list of resources currently reserved for this user
      164     8405        */
      165     8406    2     FPT_RESCTL = CFPT_RESCTL;
      166     8407    2     FPT_RESCTL.V_ = VECTOR(FPT_RESCTL.V);
      167     8408    2     FPT_RESCTL.PRES_ = VECTOR(CUR_RES);
      168     8409    2     FPT_RESCTL.PSEUDO_ = VECTOR(CUR_PSEUDO);
      169     8410        /**/
      170     8411    2     CALL M$DISPRES(FPT_RESCTL) ALTRET (MADALT);
      171     8412        /**/
      172     8413    3     DO I = 0 TO CUR_PSEUDO.NN# - 1; /* Get pseudos in use                 */
      173     8414    4        DO J = 0 TO PSEUDO$ -> PSEUDO$LIST.NN#-1;
      174     8415    4           IF (CUR_PSEUDO.PSLIST.PSEUDO#(I) =
      175     8416    4                PSEUDO$ -> PSEUDO$LIST.PSLIST.PSEUDO#(J))
      176     8417    4              THEN
      177     8418    5                 DO;
      178     8419    5                    RES_TBL(J+JM_RX$PR1) = CUR_PSEUDO.PSLIST.NUM#(I);
      179     8420    5                 END;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:7    
      180     8421    4        END;
      181     8422    3     END;
      182     8423        /**/
      183     8424    3     DO I = 0 TO CUR_RES.NN# - 1;    /* Get phys res in use                */
      184     8425    3        IF (CUR_RES.PRLIST.RNME.TYP(I) = 'MT')
      185     8426    3           THEN
      186     8427    3              RES_TBL(JM_RX$MT) = RES_TBL(JM_RX$MT) + 1;
      187     8428    3           ELSE IF (CUR_RES.PRLIST.RNME.TYP(I) = 'DP')
      188     8429    3                 THEN
      189     8430    3                    RES_TBL(JM_RX$DP) = RES_TBL(JM_RX$DP) + 1;
      190     8431    3                 ELSE RES_TBL(JM_RX$XX) = RES_TBL(JM_RX$XX) + 1;
      191     8432    3     END;
      192     8433        /**/
      193     8434    2     END;
      194     8435        /**/
      195     8436    1     IF (P_PARAM.USER$ -> U$PARAM.MODE ~= IBEX_MODE)
      196     8437    1        THEN MODE_INDEX =  %M_BATCH#-1;
      197     8438    1        ELSE MODE_INDEX = B$JIT$ -> B$JIT.MODE - 1;
      198     8439    1     IF P$->P$B.NDTYPE=%DEC#
      199     8440
      200     8441    1        THEN
      201     8442    1           CALL CXX$DECBIN(P$->P$S.COUNT,VAL) ALTRET(BIGNUM);
      202     8443    2     DO CASE(P_PARAM.OUT$->P$B.CODE);
      203     8444    2      CASE(RES_MEMORY);
      204     8445    2        IF VAL+CUR_PSEUDO.MEMORY#>USER$->AS$USERS.MMEM(MODE_INDEX)
      205     8446
      206     8447    2           THEN
      207     8448    2              CALL POSTERR(E_JPBIGMEM);
      208     8449    2           ELSE
      209     8450    2              IF COMMAND = RELEASECMND
      210     8451    2                 THEN
      211     8452    3                    DO;
      212     8453    3                       IF B$JIT$ -> B$JIT.MAXCORE - VAL < %MM_MINMEM#
      213     8454    3                          THEN   /* Error */
      214     8455    3                             CALL POSTERR (E_JPSMALLMEM);
      215     8456    3                          ELSE
      216     8457    3                             P_PARAM.OUT$ -> P$B.SCRITCH = VAL;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:8    
      217     8458    3                    END;
      218     8459    2                 ELSE   /* ORES or RESOURCE cmd */
      219     8460    3                    DO;
      220     8461    3                       IF VAL+CUR_PSEUDO.MEMORY# < %MM_MINMEM#
      221     8462    3                          THEN
      222     8463    3                             CALL POSTERR (E_JPSMALLMEM);
      223     8464    3                          ELSE
      224     8465    3                             P_PARAM.OUT$ -> P$B.SCRITCH = VAL;
      225     8466    3                    END;
      226     8467    2      CASE(RES_TIME);
      227     8468    2        TIME = 0;
      228     8469    3        DO I=0 TO P_PARAM.OUT$->P$B.NSUBLKS-1;
      229     8470    3           P$ = P_PARAM.OUT$->P$B.SUBLK$(I);
      230     8471    3           CALL CXX$DECBIN(P$->P$S.COUNT,VAL) ALTRET(BIGNUM);
      231     8472    4           DO CASE(P$->P$B.CODE);
      232     8473    4            CASE(LIM_HOURS);
      233     8474    4              IF VAL > 95442
      234     8475
      235     8476    4                 THEN
      236     8477    4                    CALL CXP$POSTERR (ERR$,P$->P$S.CPOS,E_XHRXCD);
      237     8478    4                 ELSE
      238     8479    4                    TIME = VAL * 3600;
      239     8480    4            CASE(LIM_MINUTS);
      240     8481    4              IF I ~= 0 AND VAL > 59 OR VAL > 5726622
      241     8482
      242     8483    4                 THEN
      243     8484    4                    CALL CXP$POSTERR (ERR$,P$->P$S.CPOS,E_XMINXCD);
      244     8485    4                 ELSE
      245     8486    4                    TIME = TIME + VAL*60;
      246     8487    4            CASE(LIM_SECNDS);
      247     8488    4              IF I ~= 0 AND VAL > 59 OR VAL > 343597383
      248     8489
      249     8490    4                 THEN
      250     8491    4                    CALL CXP$POSTERR (ERR$,P$->P$S.CPOS,E_XSECXCD);
      251     8492    4                 ELSE
      252     8493    4                    TIME = TIME + VAL;
      253     8494    4            END;                     /* End case                           */
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:9    
      254     8495        /**/
      255     8496    3        END;
      256     8497    2        IF TIME*100>USER$->AS$USERS.MTIME(MODE_INDEX)
      257     8498
      258     8499    2           THEN
      259     8500    2              CALL POSTERR(E_JPBIGRTIME);
      260     8501    2      CASE(RES_ACCT);
      261     8502    2        IF P_PARAM.OUT$->P$S.COUNT>8
      262     8503
      263     8504    2           THEN
      264     8505    2              CALL POSTERR(E_JPBIGACCT);
      265     8506    3           ELSE DO;
      266     8507    3                 FPT_MADMUCK = FPT_MADMUCKC;
      267     8508    3                 FPT_MADMUCK.V_ = VECTOR(FPT_MADMUCK.V);
      268     8509    3                 FPT_MADMUCK.ACCT_ = VECTOR(MADACCT);
      269     8510    3                 MADACCT = P_PARAM.OUT$->P$S.TEXT;
      270     8511    3                 FPT_MADMUCK.SN_ = VECTOR(SN);
      271     8512    4                 CALL M$MADMUCK(FPT_MADMUCK) WHENALTRETURN DO;
      272     8513    4   MADALT:          CALL POSTERR (B$TCB.ALT$->B$EXCFR.ERR);
      273     8514    4                 END;
      274     8515    3                 CALL XUP$GETSPACE(SIZEW(P$B)+3,BLK$,P_PARAM.GLOBAL$->G$D);
      275     8516    3                 BLK$->P$B = P_PARAM.OUT$->P$B;
      276     8517    3                 BLK$->P$S.COUNT = 6;
      277     8518    3                 BLK$->P$S.TEXT = SN.SN#(0); /* Store the actual psn             */
      278     8519    3                 CALL XUP$FREEOUT(P_PARAM.OUT$,P_PARAM.GLOBAL$->G$D);
      279     8520    3                 P_PARAM.OUT$ = BLK$;
      280     8521    3              END;
      281     8522    2      CASE(RES_COUNT);
      282     8523    2        P_PARAM.OUT$->P$B.SCRITCH = VAL;
      283     8524    2      CASE(RES_VNUM);
      284     8525    2        IF P_PARAM.OUT$->P$S.COUNT~=2 OR VAL=0
      285     8526
      286     8527    2           THEN
      287     8528    2              CALL POSTERR(E_JPBADVNUM);
      288     8529    2           ELSE
      289     8530    2              P_PARAM.OUT$->P$B.SCRITCH = VAL;
      290     8531    2      CASE(RES_SETNM);
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:10   
      291     8532    2        IF P_PARAM.OUT$->P$S.COUNT>6
      292     8533
      293     8534    2           THEN
      294     8535    2              CALL POSTERR(E_JPBIGSETNM);
      295     8536    2      CASE(RES_PSEUDO);
      296     8537    2        I=0;
      297     8538    3        DO WHILE(I<PSEUDO$->PSEUDO$LIST.NN#
      298     8539    3                AND P_PARAM.OUT$->P$S.TEXT~=PSEUDO$->PSEUDO$LIST.PSLIST.PSEUDO#(I));
      299     8540    3           I = I+1;
      300     8541    3        END;
      301     8542    2        IF I=PSEUDO$->PSEUDO$LIST.NN#
      302     8543
      303     8544    3           THEN DO;
      304     8545    3              P_PARAM.REJECT = '1'B;      /* That's no pseudo resource          */
      305     8546    3              P_PARAM.CHARPOS = P_PARAM.OUT$ -> P$S.CPOS; /* Back up for retry  */
      306     8547    3              END;
      307     8548    2           ELSE
      308     8549    2              P_PARAM.OUT$->P$S.SCRITCH = I;
      309     8550    2      CASE(RES_OTHER_NM);
      310     8551    2        I = 0;
      311     8552    2        RES_TYPE = P_PARAM.OUT$->P$S.TEXT; /* Only lookup the first 2 chars */
      312     8553    3        DO WHILE(I<PHYS$->PHYS$LIST.NN#
      313     8554    3                AND RES_TYPE~=PHYS$->PHYS$LIST.PRLIST.RNME.TYP(I));
      314     8555    3           I = I+1;
      315     8556    3        END;
      316     8557    2        IF I=PHYS$->PHYS$LIST.NN#
      317     8558
      318     8559    2           THEN
      319     8560    3              DO;
      320     8561    3                 P_PARAM.OUT$->P$S.COUNT = 0; /* make a bad name if it is */
      321     8562    3              END;
      322     8563    2        IF P_PARAM.OUT$->P$S.COUNT>2
      323     8564
      324     8565    2           THEN
      325     8566    3              DO; /* Scrub off the NN part if there is one */
      326     8567    4                 DO UNTIL P_PARAM.OUT$->P$S.COUNT=2; /* Make sure its decimals */
      327     8568    4                    IF SUBSTR(P_PARAM.OUT$->P$S.TEXT,P_PARAM.OUT$->P$S.COUNT-1,1)
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:11   
      328     8569    4                         >'9'
      329     8570
      330     8571    4                       THEN EXIT;
      331     8572    4                    P_PARAM.OUT$->P$S.COUNT = P_PARAM.OUT$->P$S.COUNT-1;
      332     8573    4                 END;
      333     8574    3              IF P_PARAM.OUT$->P$S.COUNT=2
      334     8575
      335     8576    3                 THEN
      336     8577    3                    P_PARAM.CHARPOS = P_PARAM.OUT$->P$S.CPOS+2;
      337     8578    3                 ELSE
      338     8579    3                    P_PARAM.OUT$->P$S.COUNT = 0; /* make a bad name of it */
      339     8580    3              END;
      340     8581    2      CASE(RES_RSRCE);
      341     8582    2        I = P_PARAM.OUT$->P$B.NSUBLKS-1;
      342     8583    2        IF P_PARAM.OUT$->P$B.SUBLK$(I)->P$B.CODE=RES_COUNT
      343     8584
      344     8585    2           THEN
      345     8586    2              J = P_PARAM.OUT$->P$B.SUBLK$(I)->P$B.SCRITCH;
      346     8587    2           ELSE
      347     8588    2              J = 1;
      348     8589    2        IF COMMAND=RELEASECMND AND (P_PARAM.OUT$->P$B.NSUBLKS=1
      349     8590    2             OR P_PARAM.OUT$->P$B.SUBLK$(1)->P$B.CODE~=RES_VNUM
      350     8591    2             AND P_PARAM.OUT$->P$B.SUBLK$(I)->P$B.CODE~=RES_COUNT)
      351     8592    2             OR COMMAND=ORESCMND AND J=0
      352     8593
      353     8594    2           THEN
      354     8595    2              J = 99999; /* Special value for releasing all of a resource */
      355     8596    2        P_PARAM.OUT$ -> P$B.SCRITCH = J;
      356     8597    2        IF J = 99999 THEN J = 0;
      357     8598    3        DO CASE(P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.CODE);
      358     8599    3         CASE(RES_PSEUDO);
      359     8600    3           IF P_PARAM.OUT$->P$B.SCRITCH=99999 AND COMMAND=RELEASECMND
      360     8601
      361     8602    3              THEN
      362     8603    3                 P_PARAM.OUT$->P$B.SCRITCH = 1;
      363     8604    3           I = 0;
      364     8605    4           DO WHILE(I<8
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:12   
      365     8606    4                   AND USER$->AS$USERS.PSDOL.PSDO_NAME(I)~=P_PARAM.OUT$->P$B.SUBLK$(0)
              8606                            ->P$S.TEXT);
      366     8607    4              I = I+1;
      367     8608    4           END;
      368     8609    3           J = J + RES_TBL(I + JM_RX$PR1);
      369     8610    3           IF I=8
      370     8611
      371     8612    3              THEN
      372     8613    3                 CALL POSTERR(E_JPSUDOAUTH);
      373     8614    3              ELSE
      374     8615    3                 IF (J > USER$ -> AS$USERS.PSDOL.BMAX(I) AND
      375     8616    3                      MODE_INDEX = %M_BATCH#-1)
      376     8617    3                   OR (J > USER$ -> AS$USERS.PSDOL.OMAX(I) AND
      377     8618    3                      MODE_INDEX = %M_INT#-1)
      378     8619    3                   OR (J > USER$ -> AS$USERS.PSDOL.GMAX(I) AND
      379     8620    3                      MODE_INDEX = %M_GHOST#-1)
      380     8621
      381     8622    3                    THEN
      382     8623    3                       CALL POSTERR(E_JPSUDOMAX);
      383     8624    3         CASE(ELSE);
      384     8625    4           DO CASE(P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.CODE);
      385     8626    4            CASE(RES_MT);
      386     8627    4              RES_TYPE = 'MT';
      387     8628    4              J = J + RES_TBL(JM_RX$MT);
      388     8629    4            CASE(RES_DP);
      389     8630    4              RES_TYPE = 'DP';
      390     8631    4              J = J + RES_TBL(JM_RX$DP);
      391     8632    4            CASE(RES_OTHER_NM);
      392     8633    4              RES_TYPE = P_PARAM.OUT$->P$B.SUBLK$(0)->P$S.TEXT;
      393     8634    4              IF RES_TYPE='LP' AND P_PARAM.OUT$->P$B.NSUBLKS>1
      394     8635
      395     8636    4                 THEN
      396     8637    4                    IF P_PARAM.OUT$->P$B.SUBLK$(1)->P$B.CODE=RES_VNUM
      397     8638
      398     8639    4                       THEN
      399     8640    4                          IF P_PARAM.OUT$->P$B.SUBLK$(1)->P$B.SCRITCH=1
      400     8641
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:13   
      401     8642    4                             THEN
      402     8643    4                                CALL POSTERR(E_JPNOLP01);
      403     8644                                                /* Don't allow LP01                   */
      404     8645    4              J = J + RES_TBL(JM_RX$XX);
      405     8646    4            END;
      406     8647    3           I = 0;
      407     8648    4           DO WHILE(I<PHYS$->PHYS$LIST.NN# AND (RES_TYPE=' '
      408     8649    4                   OR RES_TYPE~=PHYS$->PHYS$LIST.PRLIST.RNME.TYP(I)));
      409     8650    4              I = I+1;
      410     8651    4           END;
      411     8652    3           IF I=PHYS$->PHYS$LIST.NN#
      412     8653
      413     8654    3              THEN
      414     8655    4                 DO;
      415     8656    4                    CALL POSTERR (E_JPNORES);
      416     8657    4                    RETURN;
      417     8658    4                 END;
      418     8659    3           I = 0;
      419     8660    4           DO WHILE(I<USER$->AS$USERS.TOT_TYPES
      420     8661    4                   AND USER$->AS$USERS.RESL.RNAME(I)~=RES_TYPE);
      421     8662    4              I = I+1;
      422     8663    4           END;
      423     8664    3           IF I=USER$->AS$USERS.TOT_TYPES
      424     8665
      425     8666    3              THEN
      426     8667    3                 CALL POSTERR(E_JPRESAUTH);
      427     8668    3              ELSE
      428     8669    3                 IF (J > USER$ -> AS$USERS.RESL.BMAX(I) AND
      429     8670    3                   MODE_INDEX = %M_BATCH#-1)
      430     8671    3                   OR (J > USER$ -> AS$USERS.RESL.OMAX(I) AND
      431     8672    3                   MODE_INDEX = %M_INT#-1)
      432     8673    3                   OR (J > USER$ -> AS$USERS.RESL.GMAX(I) AND
      433     8674    3                   MODE_INDEX = %M_GHOST#-1)
      434     8675
      435     8676    3                    THEN
      436     8677    3                       CALL POSTERR(E_JPRESMAX);
      437     8678    3         END;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:14   
      438     8679    2      END;                           /* End case                           */
      439     8680    1     RETURN;
      440     8681        %EJECT;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:15   
      441     8682    1   POSTERR: PROC (ERRCODE);
      442     8683    2   DCL ERRCODE BIT(36) ALIGNED;
      443     8684
      444     8685    2           CALL CXP$POSTERR (ERR$, P_PARAM.OUT$->P$B.CPOS, ERRCODE);
      445     8686    2           RETURN;
      446     8687    2   END POSTERR;
      447     8688        /**/
      448     8689    1   BIGNUM:
      449     8690    1     CALL CXP$POSTERR (ERR$,P$->P$B.CPOS,E_BDCVAL);
      450     8691    1     RETURN;
      451     8692    1   END CPX$RESOURC;

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:16   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPX$RESOURC.

   Procedure CPX$RESOURC requires 812 words for executable code.
   Procedure CPX$RESOURC requires 226 words of local(AUTO) storage.

    No errors detected in file CPX$RESOURC.:E05TSI    .

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:17   

 Object Unit name= CPX$RESOURC                                File name= CPX$RESOURC.:E05TOU
 UTS= JUL 29 '97 12:09:58.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     47     57  CPX$RESOURC
    2   Proc  even  none   812   1454  CPX$RESOURC
    3  RoData even  none    25     31  CPX$RESOURC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  CPX$RESOURC
     2      3                  yes      Std        1  CPX$ACQUIRE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 CXX$DECBIN
         yes           Std       5 CXP$POSTERR
         yes           Std       3 XUP$GETSPACE
         yes           Std       2 XUP$FREEOUT
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:18   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                B$TCB$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:19   


        1        1        /*M*    CPX$RESOURC    Subroutine for RESOURCE command context errors         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        CPX$RESOURC: PROC(P_PARAM);

      8  2 000000   000000 700200 xent  CPX$RESOURC  TSX0  ! X66_AUTO_1
         2 000001   000342 000001                    ZERO    226,1
         2 000002   000005 710000 2                  TRA     s:8390

        9        9        /*******************************************************************************
       10       10        *                                Include files                                 *
       11       11        *******************************************************************************/
       12       12        %INCLUDE AS_SUPER_C;
       13      447        %INCLUDE B$JIT;
       14      737        %INCLUDE B_MACROS_C;
       15      848        %INCLUDE CP_6;
       16      929        %INCLUDE CP_MACROS_C;
       17     1681        %INCLUDE CP_PERR_C;
       18     2019        %INCLUDE CP_SUBS_C;
       19     2936        %INCLUDE JG_GHOSTS_C;
       20     3026        %INCLUDE JM_SUBS_C;
       21     3132        %INCLUDE M_INFO_C;
       22     3272        %INCLUDE XU_MACRO_C;
       23     6378        %INCLUDE XU_SUBS_C;
       24     6470        %INCLUDE B_SEGIDS_C;
       25     7009        /**/
       26     7010        /*******************************************************************************
       27     7011        *                                 Parameter                                    *
       28     7012        *******************************************************************************/
       29     7013        %PARSE$PARAM(NAME = P_PARAM,STCLASS=);
       30     7094        /*******************************************************************************
       31     7095        *                          External entry references                           *
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:20   
       32     7096        *******************************************************************************/
       33     7097    1   DCL CXX$DECBIN ENTRY(2) ALTRET;
       34     7098    1   DCL CXP$POSTERR ENTRY(5);
       35     7099    1   DCL XUP$FREEOUT ENTRY(2);
       36     7100    1   DCL XUP$GETSPACE ENTRY(3);
       37     7101        /*******************************************************************************
       38     7102        *                                 Symref data                                  *
       39     7103        *******************************************************************************/
       40     7104    1   DCL B$JIT$ PTR SYMREF;
       41     7105    1   DCL B$TCB$ PTR SYMREF;
       42     7106        /*******************************************************************************
       43     7107        *                             System service fpts                              *
       44     7108        *******************************************************************************/
       45     7109        %FPT_MADMUCK(FPTN = FPT_MADMUCKC,STCLASS = CONSTANT,
       46     7110                 READ = YES);
       47     7126        %FPT_MADMUCK(FPTN = FPT_MADMUCK,STCLASS = AUTO);
       48     7142        /*******************************************************************************
       49     7143        *                                Constant data                                 *
       50     7144        *******************************************************************************/
       51     7145    1   DCL 1 SEG2PTR CONSTANT,
       52     7146    1          2 OFFSET UBIN(24) UNAL INIT(0),
       53     7147    1          2 SEGID BIT(12) UNAL INIT(%DS2SID);
       54     7148    1   DCL SEG2$ REDEF SEG2PTR PTR;
       55     7149        %FPT_RESCTL (FPTN = CFPT_RESCTL,STCLASS = CONSTANT);
       56     7166        /*******************************************************************************
       57     7167        *                                 Auto data                                    *
       58     7168        *******************************************************************************/
       59     7169    1   DCL VAL SBIN;
       60     7170    1   DCL TIME UBIN;
       61     7171        %VLP_SN(FPTN = SN,STCLASS = AUTO,
       62     7172                 N = 1);
       63     7185    1   DCL I SBIN;
       64     7186    1   DCL J SBIN;
       65     7187    1   DCL MODE_INDEX SBIN WORD;
       66     7188    1   DCL COMMAND UBIN;
       67     7189    1   DCL BLK$ PTR;
       68     7190    1   DCL P$ PTR;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:21   
       69     7191    1   DCL ERR$ PTR;
       70     7192    1   DCL USER$ PTR;
       71     7193    1   DCL PSEUDO$ PTR;
       72     7194    1   DCL PHYS$ PTR;
       73     7195    1   DCL MADACCT CHAR(8);
       74     7196    1   DCL RES_TYPE CHAR(2);
       75     7197    1   DCL RES_TBL(0:11) SBIN WORD;
       76     7198          %VLP_PRES (FPTN = CUR_RES,STCLASS = AUTO,N = VIRT_SLOTS);
       77     7214          %VLP_PSEUDO (FPTN = CUR_PSEUDO,STCLASS = AUTO,N = PSEUDO_SLOTS);
       78     7230        /*******************************************************************************
       79     7231        *                                 Based data                                   *
       80     7232        *******************************************************************************/
       81     7233        %SEG$2;
       82     7293        %AS_USERS(STR_NAME = AS$USERS,STCLASS = BASED);
       83     7471        %G$D(NAME = G$D,STCLASS = BASED);
       84     7567        %P$PCB (NAME=P$PCB,STCLASS=BASED);
       85     7768        %P$NODE (NAME=P$NODE,STCLASS=BASED);
       86     7862        %PARSE$OUT (NAME=P$B,STCLASS=BASED);
       87     7907        %PARSE$SYM (NAME=P$S,STCLASS=BASED);
       88     7945        %U$PARAM(NAME = U$PARAM,STCLASS = BASED);
       89     7961        %VLP_PRES(FPTN = PHYS$LIST,STCLASS = BASED);
       90     7977        %VLP_PSEUDO(FPTN = PSEUDO$LIST,STCLASS = BASED);
       91     7993        %FPT_RESCTL (FPTN=FPT_RESCTL,STCLASS=AUTO);
       92     8010        %B$TCB (STCLASS="BASED(B$TCB$)");
       93     8013        %B$EXCFR;
       94     8031        /*******************************************************************************
       95     8032        *                                 Error codes                                  *
       96     8033        *******************************************************************************/
       97     8034        %ERR_CODE (NAME=E_BDCVAL,MID#=CPX$IBEXMID,CODE#=E$BDCVAL,STCLASS=CONSTANT);
       98     8054        %ERR_CODE(NAME=E_JPBIGRTIME,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGRTIME,STCLASS=
              8054            CONSTANT);
       99     8074        /*E* ERROR: CPX-E$JPBIGRTIME
      100     8075             MESSAGE: TIME resource exceeds user maximum
      101     8076        */
      102     8077       %ERR_CODE(NAME=E_JPBIGMEM,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGMEM,STCLASS=CONSTANT)
              8077            ;
      103     8097        /*E* ERROR: CPX-E$JPBIGMEM
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:22   
      104     8098             MESSAGE: MEMORY resource exceeds user maximum
      105     8099        */
      106     8100        %ERR_CODE(NAME=E_JPBADVNUM,FCG#='0320'O,MID#='30'O,CODE#=E$JPBADVNUM,STCLASS=
              8100            CONSTANT);
      107     8120        /*E* ERROR: CPX-E$JPBADVNUM
      108     8121             MESSAGE: dd portion of DVdd not between 01 and 99
      109     8122        */
      110     8123        %ERR_CODE(NAME=E_JPBIGSETNM,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGSETNM,STCLASS=
              8123            CONSTANT);
      111     8143        /*E* ERROR: CPX-E$JPBIGSETNM
      112     8144             MESSAGE: Packset name greater than 6 characters
      113     8145        */
      114     8146        %ERR_CODE(NAME=E_JPSUDOAUTH,FCG#='0320'O,MID#='30'O,CODE#=E$JPSUDOAUTH,STCLASS=
              8146            CONSTANT);
      115     8166        /*E* ERROR: CPX-E$JPSUDOAUTH
      116     8167             MESSAGE: You're not authorized for that PSEUDO resource
      117     8168        */
      118     8169        %ERR_CODE(NAME=E_JPSUDOMAX,FCG#='0320'O,MID#='30'O,CODE#=E$JPSUDOMAX,STCLASS=
              8169            CONSTANT);
      119     8189        /*E* ERROR: CPX-E$JPSUDOMAX
      120     8190             MESSAGE: PSEUDO resource count exceeds user maximum
      121     8191        */
      122     8192        %ERR_CODE(NAME=E_JPNORES,FCG#='0320'O,MID#='30'O,CODE#=E$JPNORES,STCLASS=CONSTANT);
      123     8212        /*E* ERROR: CPX-E$JPNORES
      124     8213             MESSAGE: That resource does not exist on this system.
      125     8214        */
      126     8215        %ERR_CODE(NAME=E_JPBIGACCT,FCG#='0320'O,MID#='30'O,CODE#=E$JPBIGACCT,STCLASS=
              8215            CONSTANT);
      127     8235       %ERR_CODE(NAME=E_JPRESMAX,FCG#='0320'O,MID#='30'O,CODE#=E$JPRESMAX,STCLASS=CONSTANT)
              8235            ;
      128     8255        /*E* ERROR: CPX-E$JPRESMAX
      129     8256             MESSAGE: RESOURCE count exceeds user maximum */
      130     8257        %ERR_CODE(NAME=E_JPRESAUTH,FCG#='0320'O,MID#='30'O,CODE#=E$JPRESAUTH,STCLASS=
              8257            CONSTANT);
      131     8277        /*E* ERROR: CPX-E$JPRESAUTH
      132     8278             MESSAGE: You're not authorized for that RESOURCE */
      133     8279        %ERR_CODE(NAME=E_JPSMALLMEM,FCG#='0320'O,MID#='30'O,CODE#=E$JPSMALLMEM,STCLASS=
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:23   
              8279            CONSTANT);
      134     8299        /*E* ERROR: CPX-E$JPSMALLMEM
      135     8300             MESSAGE: MEMORY resource less than system minimum */
      136     8301       %ERR_CODE(NAME=E_JPNOLP01,FCG#='0320'O,MID#='30'O,CODE#=E$JPNOLP01,STCLASS=CONSTANT)
              8301            ;
      137     8321        /*E* ERROR: CPX-E$JPNOLP01
      138     8322             MESSAGE: You can't get LP01 as a RESOURCE */
      139     8323        %ERR_CODE(NAME=E_XHRXCD,MID#='30'O,CODE#=E$XHRXCD,STCLASS=CONSTANT);
      140     8343        %ERR_CODE(NAME=E_XMINXCD,MID#='30'O,CODE#=E$XMINXCD,STCLASS=CONSTANT);
      141     8363        %ERR_CODE(NAME=E_XSECXCD,MID#='30'O,CODE#=E$XSECXCD,STCLASS=CONSTANT);
      142     8383        %EJECT;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:24   
      143     8384        /*******************************************************************************
      144     8385        *                               Begin procedure                                *
      145     8386        *******************************************************************************/
      146     8387        /**/
      147     8388    1   CPX$ACQUIRE: ENTRY(P_PARAM);

   8388  2 000003   000000 700200 xent  CPX$ACQUIRE  TSX0  ! X66_AUTO_1
         2 000004   000342 000001                    ZERO    226,1

      148     8389        /**/
      149     8390    1     ERR$ = P_PARAM.USER$->U$PARAM.ERRBUF$;

   8390  2 000005   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000006   000006 471500                    LDP1    6,,PR0
         2 000007   100000 236100                    LDQ     0,,PR1
         2 000010   200030 756100                    STQ     ERR$,,AUTO

      150     8391    1     USER$ = P_PARAM.USER$->U$PARAM.USERS$;

   8391  2 000011   000006 471500                    LDP1    6,,PR0
         2 000012   100001 236100                    LDQ     1,,PR1
         2 000013   200031 756100                    STQ     USER$,,AUTO

      151     8392    1     PSEUDO$ = P_PARAM.USER$->U$PARAM.PSEUDO$;

   8392  2 000014   100004 236100                    LDQ     4,,PR1
         2 000015   200032 756100                    STQ     PSEUDO$,,AUTO

      152     8393    1     PHYS$ = P_PARAM.USER$->U$PARAM.PHYS$;

   8393  2 000016   100005 236100                    LDQ     5,,PR1
         2 000017   200033 756100                    STQ     PHYS$,,AUTO

      153     8394    1     P$ = P_PARAM.OUT$;

   8394  2 000020   000002 236100                    LDQ     2,,PR0
         2 000021   200027 756100                    STQ     P$,,AUTO
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:25   

      154     8395        /**/
      155     8396    2     DO I = 0 TO 11;

   8396  2 000022   200022 450100                    STZ     I,,AUTO

      156     8397    2        RES_TBL(I) = 0;

   8397  2 000023   200022 720100                    LXL0    I,,AUTO
         2 000024   200037 450110                    STZ     RES_TBL,X0,AUTO

      157     8398    2     END;

   8398  2 000025   200022 054100                    AOS     I,,AUTO
         2 000026   200022 235100                    LDA     I,,AUTO
         2 000027   000013 115007                    CMPA    11,DL
         2 000030   000023 604400 2                  TMOZ    s:8397

      158     8399    1     CUR_PSEUDO.MEMORY# = 0;

   8399  2 000031   000000 220003                    LDX0    0,DU
         2 000032   200254 740100                    STX0    CUR_PSEUDO+2,,AUTO

      159     8400    1     COMMAND = P_PARAM.PCB$ -> P$PCB.ROOT$ -> P$NODE.CODE;

   8400  2 000033   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000034   000005 471500                    LDP1    5,,PR0
         2 000035   100001 473500                    LDP3    1,,PR1
         2 000036   300000 236100                    LDQ     0,,PR3
         2 000037   177777 376007                    ANQ     65535,DL
         2 000040   200025 756100                    STQ     COMMAND,,AUTO

      160     8401        /**/
      161     8402    2     IF COMMAND = ACQUIRECMND THEN DO;

   8402  2 000041   000002 116007                    CMPQ    2,DL
         2 000042   000151 601000 2                  TNZ     s:8436
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:26   

      162     8403        /*
      163     8404           *** Get the list of resources currently reserved for this user
      164     8405        */
      165     8406    2     FPT_RESCTL = CFPT_RESCTL;

   8406  2 000043   000100 100400                    MLR     fill='000'O
         2 000044   000012 000110 1                  ADSC9   CFPT_RESCTL              cn=0,n=72
         2 000045   200312 000110                    ADSC9   FPT_RESCTL,,AUTO         cn=0,n=72

      166     8407    2     FPT_RESCTL.V_ = VECTOR(FPT_RESCTL.V);

   8407  2 000046   000000 235000 3                  LDA     0
         2 000047   200336 452500                    STP2    @ERRCODE+1,,AUTO
         2 000050   200336 236100                    LDQ     @ERRCODE+1,,AUTO
         2 000051   000326 036003                    ADLQ    214,DU
         2 000052   200312 757100                    STAQ    FPT_RESCTL,,AUTO

      167     8408    2     FPT_RESCTL.PRES_ = VECTOR(CUR_RES);

   8408  2 000053   000001 235000 3                  LDA     1
         2 000054   200336 452500                    STP2    @ERRCODE+1,,AUTO
         2 000055   200336 236100                    LDQ     @ERRCODE+1,,AUTO
         2 000056   000054 036003                    ADLQ    44,DU
         2 000057   200316 757100                    STAQ    FPT_RESCTL+4,,AUTO

      168     8409    2     FPT_RESCTL.PSEUDO_ = VECTOR(CUR_PSEUDO);

   8409  2 000060   000002 235000 3                  LDA     2
         2 000061   200336 452500                    STP2    @ERRCODE+1,,AUTO
         2 000062   200336 236100                    LDQ     @ERRCODE+1,,AUTO
         2 000063   000252 036003                    ADLQ    170,DU
         2 000064   200314 757100                    STAQ    FPT_RESCTL+2,,AUTO

      169     8410        /**/
      170     8411    2     CALL M$DISPRES(FPT_RESCTL) ALTRET (MADALT);

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:27   
   8411  2 000065   200312 630500                    EPPR0   FPT_RESCTL,,AUTO
         2 000066   550002 713400                    CLIMB   alt,+53250
         2 000067   402400 401760                    pmme    nvectors=6
         2 000070   000563 702000 2                  TSX2    MADALT

      171     8412        /**/
      172     8413    3     DO I = 0 TO CUR_PSEUDO.NN# - 1; /* Get pseudos in use                 */

   8413  2 000071   200022 450100                    STZ     I,,AUTO
         2 000072   000124 710000 2                  TRA     s:8422+1

      173     8414    4        DO J = 0 TO PSEUDO$ -> PSEUDO$LIST.NN#-1;

   8414  2 000073   200023 450100                    STZ     J,,AUTO
         2 000074   000117 710000 2                  TRA     s:8421+1

      174     8415    4           IF (CUR_PSEUDO.PSLIST.PSEUDO#(I) =

   8415  2 000075   200022 236100                    LDQ     I,,AUTO
         2 000076   000014 402007                    MPY     12,DL
         2 000077   200336 756100                    STQ     @ERRCODE+1,,AUTO
         2 000100   200023 236100                    LDQ     J,,AUTO
         2 000101   000014 402007                    MPY     12,DL
         2 000102   200336 235100                    LDA     @ERRCODE+1,,AUTO
         2 000103   200032 470500                    LDP0    PSEUDO$,,AUTO
         2 000104   040106 106505                    CMPC    fill='040'O
         2 000105   200256 000010                    ADSC9   CUR_PSEUDO+4,A,AUTO      cn=0,n=8
         2 000106   000004 000010                    ADSC9   4,Q,PR0                  cn=0,n=8
         2 000107   000116 601000 2                  TNZ     s:8421

      175     8416    4                PSEUDO$ -> PSEUDO$LIST.PSLIST.PSEUDO#(J))
      176     8417    4              THEN
      177     8418    5                 DO;

      178     8419    5                    RES_TBL(J+JM_RX$PR1) = CUR_PSEUDO.PSLIST.NUM#(I);

   8419  2 000110   200022 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:28   
         2 000111   000003 402007                    MPY     3,DL
         2 000112   200260 236106                    LDQ     CUR_PSEUDO+6,QL,AUTO
         2 000113   000033 772000                    QRL     27
         2 000114   200023 720100                    LXL0    J,,AUTO
         2 000115   200043 756110                    STQ     RES_TBL+4,X0,AUTO

      179     8420    5                 END;

      180     8421    4        END;

   8421  2 000116   200023 054100                    AOS     J,,AUTO
         2 000117   200032 470500                    LDP0    PSEUDO$,,AUTO
         2 000120   200023 236100                    LDQ     J,,AUTO
         2 000121   000000 116100                    CMPQ    0,,PR0
         2 000122   000075 604000 2                  TMI     s:8415

      181     8422    3     END;

   8422  2 000123   200022 054100                    AOS     I,,AUTO
         2 000124   200022 236100                    LDQ     I,,AUTO
         2 000125   200252 116100                    CMPQ    CUR_PSEUDO,,AUTO
         2 000126   000073 604000 2                  TMI     s:8414

      182     8423        /**/
      183     8424    3     DO I = 0 TO CUR_RES.NN# - 1;    /* Get phys res in use                */

   8424  2 000127   200022 450100                    STZ     I,,AUTO
         2 000130   000146 710000 2                  TRA     s:8432+1

      184     8425    3        IF (CUR_RES.PRLIST.RNME.TYP(I) = 'MT')

   8425  2 000131   200022 235100                    LDA     I,,AUTO
         2 000132   000002 735000                    ALS     2
         2 000133   200056 220105                    LDX0    CUR_RES+2,AL,AUTO
         2 000134   000054 100000 1                  CMPX0   E_XSECXCD+1
         2 000135   000140 601000 2                  TNZ     s:8428

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:29   
      185     8426    3           THEN
      186     8427    3              RES_TBL(JM_RX$MT) = RES_TBL(JM_RX$MT) + 1;

   8427  2 000136   200041 054100                    AOS     RES_TBL+2,,AUTO
         2 000137   000145 710000 2                  TRA     s:8432

      187     8428    3           ELSE IF (CUR_RES.PRLIST.RNME.TYP(I) = 'DP')

   8428  2 000140   000055 100000 1                  CMPX0   E_XSECXCD+2
         2 000141   000144 601000 2                  TNZ     s:8431

      188     8429    3                 THEN
      189     8430    3                    RES_TBL(JM_RX$DP) = RES_TBL(JM_RX$DP) + 1;

   8430  2 000142   200040 054100                    AOS     RES_TBL+1,,AUTO
         2 000143   000145 710000 2                  TRA     s:8432

      190     8431    3                 ELSE RES_TBL(JM_RX$XX) = RES_TBL(JM_RX$XX) + 1;

   8431  2 000144   200042 054100                    AOS     RES_TBL+3,,AUTO

      191     8432    3     END;

   8432  2 000145   200022 054100                    AOS     I,,AUTO
         2 000146   200022 236100                    LDQ     I,,AUTO
         2 000147   200054 116100                    CMPQ    CUR_RES,,AUTO
         2 000150   000131 604000 2                  TMI     s:8425

      192     8433        /**/
      193     8434    2     END;

      194     8435        /**/
      195     8436    1     IF (P_PARAM.USER$ -> U$PARAM.MODE ~= IBEX_MODE)

   8436  2 000151   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000152   000006 471500                    LDP1    6,,PR0
         2 000153   100006 236100                    LDQ     6,,PR1
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:30   
         2 000154   777000 376003                    ANQ     -512,DU
         2 000155   001000 116003                    CMPQ    512,DU
         2 000156   000161 600000 2                  TZE     s:8438

      196     8437    1        THEN MODE_INDEX =  %M_BATCH#-1;

   8437  2 000157   200024 450100                    STZ     MODE_INDEX,,AUTO
         2 000160   000166 710000 2                  TRA     s:8439

      197     8438    1        ELSE MODE_INDEX = B$JIT$ -> B$JIT.MODE - 1;

   8438  2 000161   000000 473400 xsym               LDP3    B$JIT$
         2 000162   300000 236100                    LDQ     0,,PR3
         2 000163   000040 772000                    QRL     32
         2 000164   000001 136007                    SBLQ    1,DL
         2 000165   200024 756100                    STQ     MODE_INDEX,,AUTO

      198     8439    1     IF P$->P$B.NDTYPE=%DEC#

   8439  2 000166   200027 473500                    LDP3    P$,,AUTO
         2 000167   300000 236100                    LDQ     0,,PR3
         2 000170   000077 376003                    ANQ     63,DU
         2 000171   000022 116003                    CMPQ    18,DU
         2 000172   000204 601000 2                  TNZ     s:8443

      199     8440
      200     8441    1        THEN
      201     8442    1           CALL CXX$DECBIN(P$->P$S.COUNT,VAL) ALTRET(BIGNUM);

   8442  2 000173   200014 634500                    EPPR4   VAL,,AUTO
         2 000174   200337 454500                    STP4    @ERRCODE+2,,AUTO
         2 000175   200027 236100                    LDQ     P$,,AUTO
         2 000176   000004 036003                    ADLQ    4,DU
         2 000177   200336 756100                    STQ     @ERRCODE+1,,AUTO
         2 000200   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000201   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000202   000000 701000 xent               TSX1    CXX$DECBIN
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:31   
         2 000203   001440 702000 2                  TSX2    BIGNUM

      202     8443    2     DO CASE(P_PARAM.OUT$->P$B.CODE);

   8443  2 000204   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000205   000002 471500                    LDP1    2,,PR0
         2 000206   100000 236100                    LDQ     0,,PR1
         2 000207   777777 376007                    ANQ     -1,DL
         2 000210   000011 136007                    SBLQ    9,DL
         2 000211   000032 116007                    CMPQ    26,DL
         2 000212   000214 602006 2                  TNC     s:8443+8,QL
         2 000213   001420 710000 2                  TRA     s:8680
         2 000214   000514 710000 2                  TRA     s:8502
         2 000215   001420 710000 2                  TRA     s:8680
         2 000216   001420 710000 2                  TRA     s:8680
         2 000217   001420 710000 2                  TRA     s:8680
         2 000220   000641 710000 2                  TRA     s:8523
         2 000221   001420 710000 2                  TRA     s:8680
         2 000222   001420 710000 2                  TRA     s:8680
         2 000223   001420 710000 2                  TRA     s:8680
         2 000224   001420 710000 2                  TRA     s:8680
         2 000225   001420 710000 2                  TRA     s:8680
         2 000226   001420 710000 2                  TRA     s:8680
         2 000227   001420 710000 2                  TRA     s:8680
         2 000230   000246 710000 2                  TRA     s:8445
         2 000231   001420 710000 2                  TRA     s:8680
         2 000232   001420 710000 2                  TRA     s:8680
         2 000233   000734 710000 2                  TRA     s:8551
         2 000234   001420 710000 2                  TRA     s:8680
         2 000235   000673 710000 2                  TRA     s:8537
         2 000236   001420 710000 2                  TRA     s:8680
         2 000237   001025 710000 2                  TRA     s:8582
         2 000240   001420 710000 2                  TRA     s:8680
         2 000241   000662 710000 2                  TRA     s:8532
         2 000242   001420 710000 2                  TRA     s:8680
         2 000243   000330 710000 2                  TRA     s:8468
         2 000244   001420 710000 2                  TRA     s:8680
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:32   
         2 000245   000644 710000 2                  TRA     s:8525

      203     8444    2      CASE(RES_MEMORY);

      204     8445    2        IF VAL+CUR_PSEUDO.MEMORY#>USER$->AS$USERS.MMEM(MODE_INDEX)

   8445  2 000246   200254 236100                    LDQ     CUR_PSEUDO+2,,AUTO
         2 000247   000022 772000                    QRL     18
         2 000250   200014 036100                    ADLQ    VAL,,AUTO
         2 000251   200336 756100                    STQ     @ERRCODE+1,,AUTO
         2 000252   200024 235100                    LDA     MODE_INDEX,,AUTO
         2 000253   000001 735000                    ALS     1
         2 000254   200031 471500                    LDP1    USER$,,AUTO
         2 000255   000100 101505                    MRL     fill='000'O
         2 000256   100261 000002                    ADSC9   177,A,PR1                cn=0,n=2
         2 000257   200337 000004                    ADSC9   @ERRCODE+2,,AUTO         cn=0,n=4
         2 000260   200337 236100                    LDQ     @ERRCODE+2,,AUTO
         2 000261   200336 116100                    CMPQ    @ERRCODE+1,,AUTO
         2 000262   000270 605000 2                  TPL     s:8450

      205     8446
      206     8447    2           THEN
      207     8448    2              CALL POSTERR(E_JPBIGMEM);

   8448  2 000263   000003 236000 3                  LDQ     3
         2 000264   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 000265   001421 701000 2                  TSX1    POSTERR
         2 000266   000000 011000                    NOP     0
         2 000267   001420 710000 2                  TRA     s:8680

      208     8449    2           ELSE
      209     8450    2              IF COMMAND = RELEASECMND

   8450  2 000270   200025 235100                    LDA     COMMAND,,AUTO
         2 000271   000070 115007                    CMPA    56,DL
         2 000272   000312 601000 2                  TNZ     s:8461

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:33   
      210     8451    2                 THEN
      211     8452    3                    DO;

      212     8453    3                       IF B$JIT$ -> B$JIT.MAXCORE - VAL < %MM_MINMEM#

   8453  2 000273   000000 473400 xsym               LDP3    B$JIT$
         2 000274   300210 236100                    LDQ     136,,PR3
         2 000275   000022 772000                    QRL     18
         2 000276   200014 136100                    SBLQ    VAL,,AUTO
         2 000277   000010 116007                    CMPQ    8,DL
         2 000300   000306 605000 2                  TPL     s:8457

      213     8454    3                          THEN   /* Error */
      214     8455    3                             CALL POSTERR (E_JPSMALLMEM);

   8455  2 000301   000004 236000 3                  LDQ     4
         2 000302   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 000303   001421 701000 2                  TSX1    POSTERR
         2 000304   000000 011000                    NOP     0
         2 000305   001420 710000 2                  TRA     s:8680

      215     8456    3                          ELSE
      216     8457    3                             P_PARAM.OUT$ -> P$B.SCRITCH = VAL;

   8457  2 000306   000002 474500                    LDP4    2,,PR0
         2 000307   200014 720100                    LXL0    VAL,,AUTO
         2 000310   400001 440100                    SXL0    1,,PR4

      217     8458    3                    END;

   8458  2 000311   001420 710000 2                  TRA     s:8680

      218     8459    2                 ELSE   /* ORES or RESOURCE cmd */
      219     8460    3                    DO;

      220     8461    3                       IF VAL+CUR_PSEUDO.MEMORY# < %MM_MINMEM#

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:34   
   8461  2 000312   200254 236100                    LDQ     CUR_PSEUDO+2,,AUTO
         2 000313   000022 772000                    QRL     18
         2 000314   200014 036100                    ADLQ    VAL,,AUTO
         2 000315   000010 116007                    CMPQ    8,DL
         2 000316   000324 605000 2                  TPL     s:8465

      221     8462    3                          THEN
      222     8463    3                             CALL POSTERR (E_JPSMALLMEM);

   8463  2 000317   000004 236000 3                  LDQ     4
         2 000320   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 000321   001421 701000 2                  TSX1    POSTERR
         2 000322   000000 011000                    NOP     0
         2 000323   001420 710000 2                  TRA     s:8680

      223     8464    3                          ELSE
      224     8465    3                             P_PARAM.OUT$ -> P$B.SCRITCH = VAL;

   8465  2 000324   000002 473500                    LDP3    2,,PR0
         2 000325   200014 720100                    LXL0    VAL,,AUTO
         2 000326   300001 440100                    SXL0    1,,PR3

      225     8466    3                    END;

   8466  2 000327   001420 710000 2                  TRA     s:8680

      226     8467    2      CASE(RES_TIME);

      227     8468    2        TIME = 0;

   8468  2 000330   200015 450100                    STZ     TIME,,AUTO

      228     8469    3        DO I=0 TO P_PARAM.OUT$->P$B.NSUBLKS-1;

   8469  2 000331   200022 450100                    STZ     I,,AUTO
         2 000332   000472 710000 2                  TRA     s:8496+1

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:35   
      229     8470    3           P$ = P_PARAM.OUT$->P$B.SUBLK$(I);

   8470  2 000333   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000334   000002 471500                    LDP1    2,,PR0
         2 000335   200022 720100                    LXL0    I,,AUTO
         2 000336   100003 236110                    LDQ     3,X0,PR1
         2 000337   200027 756100                    STQ     P$,,AUTO

      230     8471    3           CALL CXX$DECBIN(P$->P$S.COUNT,VAL) ALTRET(BIGNUM);

   8471  2 000340   200014 633500                    EPPR3   VAL,,AUTO
         2 000341   200337 453500                    STP3    @ERRCODE+2,,AUTO
         2 000342   000004 036003                    ADLQ    4,DU
         2 000343   200336 756100                    STQ     @ERRCODE+1,,AUTO
         2 000344   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000345   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000346   000000 701000 xent               TSX1    CXX$DECBIN
         2 000347   001440 702000 2                  TSX2    BIGNUM

      231     8472    4           DO CASE(P$->P$B.CODE);

   8472  2 000350   200027 470500                    LDP0    P$,,AUTO
         2 000351   000000 236100                    LDQ     0,,PR0
         2 000352   777777 376007                    ANQ     -1,DL
         2 000353   000004 136007                    SBLQ    4,DL
         2 000354   000007 116007                    CMPQ    7,DL
         2 000355   000357 602006 2                  TNC     s:8472+7,QL
         2 000356   000471 710000 2                  TRA     s:8496
         2 000357   000366 710000 2                  TRA     s:8474
         2 000360   000471 710000 2                  TRA     s:8496
         2 000361   000471 710000 2                  TRA     s:8496
         2 000362   000411 710000 2                  TRA     s:8481
         2 000363   000471 710000 2                  TRA     s:8496
         2 000364   000471 710000 2                  TRA     s:8496
         2 000365   000442 710000 2                  TRA     s:8488

      232     8473    4            CASE(LIM_HOURS);
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:36   

      233     8474    4              IF VAL > 95442

   8474  2 000366   200014 235100                    LDA     VAL,,AUTO
         2 000367   272322 115007                    CMPA    95442,DL
         2 000370   000405 604400 2                  TMOZ    s:8479

      234     8475
      235     8476    4                 THEN
      236     8477    4                    CALL CXP$POSTERR (ERR$,P$->P$S.CPOS,E_XHRXCD);

   8477  2 000371   000005 236000 3                  LDQ     5
         2 000372   200340 756100                    STQ     @ERRCODE+3,,AUTO
         2 000373   200027 236100                    LDQ     P$,,AUTO
         2 000374   000002 036003                    ADLQ    2,DU
         2 000375   200337 756100                    STQ     @ERRCODE+2,,AUTO
         2 000376   200030 631500                    EPPR1   ERR$,,AUTO
         2 000377   200336 451500                    STP1    @ERRCODE+1,,AUTO
         2 000400   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000401   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000402   000000 701000 xent               TSX1    CXP$POSTERR
         2 000403   000000 011000                    NOP     0
         2 000404   000471 710000 2                  TRA     s:8496

      237     8478    4                 ELSE
      238     8479    4                    TIME = VAL * 3600;

   8479  2 000405   200014 236100                    LDQ     VAL,,AUTO
         2 000406   007020 402007                    MPY     3600,DL
         2 000407   200015 756100                    STQ     TIME,,AUTO
         2 000410   000471 710000 2                  TRA     s:8496

      239     8480    4            CASE(LIM_MINUTS);

      240     8481    4              IF I ~= 0 AND VAL > 59 OR VAL > 5726622

   8481  2 000411   200022 235100                    LDA     I,,AUTO
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:37   
         2 000412   000416 600000 2                  TZE     s:8481+5
         2 000413   200014 235100                    LDA     VAL,,AUTO
         2 000414   000073 115007                    CMPA    59,DL
         2 000415   000421 605400 2                  TPNZ    s:8484
         2 000416   200014 235100                    LDA     VAL,,AUTO
         2 000417   000006 115000 3                  CMPA    6
         2 000420   000435 604400 2                  TMOZ    s:8486

      241     8482
      242     8483    4                 THEN
      243     8484    4                    CALL CXP$POSTERR (ERR$,P$->P$S.CPOS,E_XMINXCD);

   8484  2 000421   000007 236000 3                  LDQ     7
         2 000422   200340 756100                    STQ     @ERRCODE+3,,AUTO
         2 000423   200027 236100                    LDQ     P$,,AUTO
         2 000424   000002 036003                    ADLQ    2,DU
         2 000425   200337 756100                    STQ     @ERRCODE+2,,AUTO
         2 000426   200030 631500                    EPPR1   ERR$,,AUTO
         2 000427   200336 451500                    STP1    @ERRCODE+1,,AUTO
         2 000430   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000431   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000432   000000 701000 xent               TSX1    CXP$POSTERR
         2 000433   000000 011000                    NOP     0
         2 000434   000471 710000 2                  TRA     s:8496

      244     8485    4                 ELSE
      245     8486    4                    TIME = TIME + VAL*60;

   8486  2 000435   200014 236100                    LDQ     VAL,,AUTO
         2 000436   000074 402007                    MPY     60,DL
         2 000437   200015 036100                    ADLQ    TIME,,AUTO
         2 000440   200015 756100                    STQ     TIME,,AUTO
         2 000441   000471 710000 2                  TRA     s:8496

      246     8487    4            CASE(LIM_SECNDS);

      247     8488    4              IF I ~= 0 AND VAL > 59 OR VAL > 343597383
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:38   

   8488  2 000442   200022 235100                    LDA     I,,AUTO
         2 000443   000447 600000 2                  TZE     s:8488+5
         2 000444   200014 235100                    LDA     VAL,,AUTO
         2 000445   000073 115007                    CMPA    59,DL
         2 000446   000452 605400 2                  TPNZ    s:8491
         2 000447   200014 235100                    LDA     VAL,,AUTO
         2 000450   000010 115000 3                  CMPA    8
         2 000451   000466 604400 2                  TMOZ    s:8493

      248     8489
      249     8490    4                 THEN
      250     8491    4                    CALL CXP$POSTERR (ERR$,P$->P$S.CPOS,E_XSECXCD);

   8491  2 000452   000011 236000 3                  LDQ     9
         2 000453   200340 756100                    STQ     @ERRCODE+3,,AUTO
         2 000454   200027 236100                    LDQ     P$,,AUTO
         2 000455   000002 036003                    ADLQ    2,DU
         2 000456   200337 756100                    STQ     @ERRCODE+2,,AUTO
         2 000457   200030 631500                    EPPR1   ERR$,,AUTO
         2 000460   200336 451500                    STP1    @ERRCODE+1,,AUTO
         2 000461   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000462   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000463   000000 701000 xent               TSX1    CXP$POSTERR
         2 000464   000000 011000                    NOP     0
         2 000465   000471 710000 2                  TRA     s:8496

      251     8492    4                 ELSE
      252     8493    4                    TIME = TIME + VAL;

   8493  2 000466   200015 236100                    LDQ     TIME,,AUTO
         2 000467   200014 036100                    ADLQ    VAL,,AUTO
         2 000470   200015 756100                    STQ     TIME,,AUTO

      253     8494    4            END;                     /* End case                           */

      254     8495        /**/
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:39   
      255     8496    3        END;

   8496  2 000471   200022 054100                    AOS     I,,AUTO
         2 000472   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000473   000002 471500                    LDP1    2,,PR0
         2 000474   100001 236100                    LDQ     1,,PR1
         2 000475   000022 772000                    QRL     18
         2 000476   200022 116100                    CMPQ    I,,AUTO
         2 000477   000333 605400 2                  TPNZ    s:8470

      256     8497    2        IF TIME*100>USER$->AS$USERS.MTIME(MODE_INDEX)

   8497  2 000500   200031 473500                    LDP3    USER$,,AUTO
         2 000501   200024 720100                    LXL0    MODE_INDEX,,AUTO
         2 000502   200015 236100                    LDQ     TIME,,AUTO
         2 000503   000144 402007                    MPY     100,DL
         2 000504   300251 116110                    CMPQ    169,X0,PR3
         2 000505   001420 602000 2                  TNC     s:8680
         2 000506   001420 600000 2                  TZE     s:8680

      257     8498
      258     8499    2           THEN
      259     8500    2              CALL POSTERR(E_JPBIGRTIME);

   8500  2 000507   000012 236000 3                  LDQ     10
         2 000510   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 000511   001421 701000 2                  TSX1    POSTERR
         2 000512   000000 011000                    NOP     0
         2 000513   001420 710000 2                  TRA     s:8680

      260     8501    2      CASE(RES_ACCT);

      261     8502    2        IF P_PARAM.OUT$->P$S.COUNT>8

   8502  2 000514   100004 236100                    LDQ     4,,PR1
         2 000515   777000 376003                    ANQ     -512,DU
         2 000516   011000 116003                    CMPQ    4608,DU
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:40   
         2 000517   000525 602000 2                  TNC     s:8507

      262     8503
      263     8504    2           THEN
      264     8505    2              CALL POSTERR(E_JPBIGACCT);

   8505  2 000520   000013 236000 3                  LDQ     11
         2 000521   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 000522   001421 701000 2                  TSX1    POSTERR
         2 000523   000000 011000                    NOP     0
         2 000524   001420 710000 2                  TRA     s:8680

      265     8506    3           ELSE DO;

      266     8507    3                 FPT_MADMUCK = FPT_MADMUCKC;

   8507  2 000525   000100 100400                    MLR     fill='000'O
         2 000526   000000 000040 1                  ADSC9   FPT_MADMUCKC             cn=0,n=32
         2 000527   200004 000040                    ADSC9   FPT_MADMUCK,,AUTO        cn=0,n=32

      267     8508    3                 FPT_MADMUCK.V_ = VECTOR(FPT_MADMUCK.V);

   8508  2 000530   000014 235000 3                  LDA     12
         2 000531   200336 452500                    STP2    @ERRCODE+1,,AUTO
         2 000532   200336 236100                    LDQ     @ERRCODE+1,,AUTO
         2 000533   000012 036003                    ADLQ    10,DU
         2 000534   200004 757100                    STAQ    FPT_MADMUCK,,AUTO

      268     8509    3                 FPT_MADMUCK.ACCT_ = VECTOR(MADACCT);

   8509  2 000535   000014 235000 3                  LDA     12
         2 000536   200336 452500                    STP2    @ERRCODE+1,,AUTO
         2 000537   200336 236100                    LDQ     @ERRCODE+1,,AUTO
         2 000540   000034 036003                    ADLQ    28,DU
         2 000541   200006 757100                    STAQ    FPT_MADMUCK+2,,AUTO

      269     8510    3                 MADACCT = P_PARAM.OUT$->P$S.TEXT;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:41   

   8510  2 000542   000002 471500                    LDP1    2,,PR0
         2 000543   100004 236100                    LDQ     4,,PR1
         2 000544   000033 772000                    QRL     27
         2 000545   000000 620006                    EAX0    0,QL
         2 000546   040100 100540                    MLR     fill='040'O
         2 000547   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 000550   200034 000010                    ADSC9   MADACCT,,AUTO            cn=0,n=8

      270     8511    3                 FPT_MADMUCK.SN_ = VECTOR(SN);

   8511  2 000551   000015 235000 3                  LDA     13
         2 000552   200336 452500                    STP2    @ERRCODE+1,,AUTO
         2 000553   200336 236100                    LDQ     @ERRCODE+1,,AUTO
         2 000554   000016 036003                    ADLQ    14,DU
         2 000555   200010 757100                    STAQ    FPT_MADMUCK+4,,AUTO

      271     8512    4                 CALL M$MADMUCK(FPT_MADMUCK) WHENALTRETURN DO;

   8512  2 000556   200004 630500                    EPPR0   FPT_MADMUCK,,AUTO
         2 000557   460005 713400                    CLIMB   alt,+24581
         2 000560   401000 401760                    pmme    nvectors=3
         2 000561   000563 702000 2                  TSX2    MADALT
         2 000562   000571 710000 2                  TRA     s:8515

      272     8513    4   MADALT:          CALL POSTERR (B$TCB.ALT$->B$EXCFR.ERR);

   8513  2 000563   000000 470400 xsym  MADALT       LDP0    B$TCB$
         2 000564   000000 471500                    LDP1    0,,PR0
         2 000565   100102 633500                    EPPR3   66,,PR1
         2 000566   200335 453500                    STP3    FPT_RESCTL+19,,AUTO
         2 000567   001421 701000 2                  TSX1    POSTERR
         2 000570   000000 011000                    NOP     0

      273     8514    4                 END;

      274     8515    3                 CALL XUP$GETSPACE(SIZEW(P$B)+3,BLK$,P_PARAM.GLOBAL$->G$D);
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:42   

   8515  2 000571   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000572   000003 471500                    LDP1    3,,PR0
         2 000573   200340 451500                    STP1    @ERRCODE+3,,AUTO
         2 000574   200026 633500                    EPPR3   BLK$,,AUTO
         2 000575   200337 453500                    STP3    @ERRCODE+2,,AUTO
         2 000576   000016 236000 3                  LDQ     14
         2 000577   200336 756100                    STQ     @ERRCODE+1,,AUTO
         2 000600   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000601   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000602   000000 701000 xent               TSX1    XUP$GETSPACE
         2 000603   000000 011000                    NOP     0

      275     8516    3                 BLK$->P$B = P_PARAM.OUT$->P$B;

   8516  2 000604   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000605   000002 471500                    LDP1    2,,PR0
         2 000606   200026 473500                    LDP3    BLK$,,AUTO
         2 000607   000100 100500                    MLR     fill='000'O
         2 000610   100000 000020                    ADSC9   0,,PR1                   cn=0,n=16
         2 000611   300000 000020                    ADSC9   0,,PR3                   cn=0,n=16

      276     8517    3                 BLK$->P$S.COUNT = 6;

   8517  2 000612   200026 471500                    LDP1    BLK$,,AUTO
         2 000613   006000 236003                    LDQ     3072,DU
         2 000614   100004 552140                    STBQ    4,'40'O,PR1

      277     8518    3                 BLK$->P$S.TEXT = SN.SN#(0); /* Store the actual psn             */

   8518  2 000615   200026 471500                    LDP1    BLK$,,AUTO
         2 000616   100004 236100                    LDQ     4,,PR1
         2 000617   000033 772000                    QRL     27
         2 000620   000000 620006                    EAX0    0,QL
         2 000621   040140 100500                    MLR     fill='040'O
         2 000622   200017 000006                    ADSC9   SN+1,,AUTO               cn=0,n=6
         2 000623   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:43   

      278     8519    3                 CALL XUP$FREEOUT(P_PARAM.OUT$,P_PARAM.GLOBAL$->G$D);

   8519  2 000624   000003 471500                    LDP1    3,,PR0
         2 000625   200337 451500                    STP1    @ERRCODE+2,,AUTO
         2 000626   200003 236100                    LDQ     @P_PARAM,,AUTO
         2 000627   000002 036003                    ADLQ    2,DU
         2 000630   200336 756100                    STQ     @ERRCODE+1,,AUTO
         2 000631   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000632   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000633   000000 701000 xent               TSX1    XUP$FREEOUT
         2 000634   000000 011000                    NOP     0

      279     8520    3                 P_PARAM.OUT$ = BLK$;

   8520  2 000635   200026 236100                    LDQ     BLK$,,AUTO
         2 000636   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000637   000002 756100                    STQ     2,,PR0

      280     8521    3              END;

   8521  2 000640   001420 710000 2                  TRA     s:8680

      281     8522    2      CASE(RES_COUNT);

      282     8523    2        P_PARAM.OUT$->P$B.SCRITCH = VAL;

   8523  2 000641   200014 720100                    LXL0    VAL,,AUTO
         2 000642   100001 440100                    SXL0    1,,PR1
         2 000643   001420 710000 2                  TRA     s:8680

      283     8524    2      CASE(RES_VNUM);

      284     8525    2        IF P_PARAM.OUT$->P$S.COUNT~=2 OR VAL=0

   8525  2 000644   100004 236100                    LDQ     4,,PR1
         2 000645   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:44   
         2 000646   002000 116003                    CMPQ    1024,DU
         2 000647   000652 601000 2                  TNZ     s:8528
         2 000650   200014 235100                    LDA     VAL,,AUTO
         2 000651   000657 601000 2                  TNZ     s:8530

      285     8526
      286     8527    2           THEN
      287     8528    2              CALL POSTERR(E_JPBADVNUM);

   8528  2 000652   000017 236000 3                  LDQ     15
         2 000653   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 000654   001421 701000 2                  TSX1    POSTERR
         2 000655   000000 011000                    NOP     0
         2 000656   001420 710000 2                  TRA     s:8680

      288     8529    2           ELSE
      289     8530    2              P_PARAM.OUT$->P$B.SCRITCH = VAL;

   8530  2 000657   000000 620005                    EAX0    0,AL
         2 000660   100001 440100                    SXL0    1,,PR1
         2 000661   001420 710000 2                  TRA     s:8680

      290     8531    2      CASE(RES_SETNM);

      291     8532    2        IF P_PARAM.OUT$->P$S.COUNT>6

   8532  2 000662   100004 236100                    LDQ     4,,PR1
         2 000663   777000 376003                    ANQ     -512,DU
         2 000664   007000 116003                    CMPQ    3584,DU
         2 000665   001420 602000 2                  TNC     s:8680

      292     8533
      293     8534    2           THEN
      294     8535    2              CALL POSTERR(E_JPBIGSETNM);

   8535  2 000666   000020 236000 3                  LDQ     16
         2 000667   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:45   
         2 000670   001421 701000 2                  TSX1    POSTERR
         2 000671   000000 011000                    NOP     0
         2 000672   001420 710000 2                  TRA     s:8680

      295     8536    2      CASE(RES_PSEUDO);

      296     8537    2        I=0;

   8537  2 000673   200022 450100                    STZ     I,,AUTO

      297     8538    3        DO WHILE(I<PSEUDO$->PSEUDO$LIST.NN#

   8538  2 000674   000676 710000 2                  TRA     s:8541

      298     8539    3                AND P_PARAM.OUT$->P$S.TEXT~=PSEUDO$->PSEUDO$LIST.PSLIST.PSEUDO#(I));
      299     8540    3           I = I+1;

   8540  2 000675   200022 054100                    AOS     I,,AUTO

      300     8541    3        END;

   8541  2 000676   200032 470500                    LDP0    PSEUDO$,,AUTO
         2 000677   200022 236100                    LDQ     I,,AUTO
         2 000700   000000 116100                    CMPQ    0,,PR0
         2 000701   000715 605000 2                  TPL     s:8542
         2 000702   200003 471500                    LDP1    @P_PARAM,,AUTO
         2 000703   100002 473500                    LDP3    2,,PR1
         2 000704   300004 236100                    LDQ     4,,PR3
         2 000705   000033 772000                    QRL     27
         2 000706   000000 620006                    EAX0    0,QL
         2 000707   200022 236100                    LDQ     I,,AUTO
         2 000710   000014 402007                    MPY     12,DL
         2 000711   040106 106540                    CMPC    fill='040'O
         2 000712   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         2 000713   000004 000010                    ADSC9   4,Q,PR0                  cn=0,n=8
         2 000714   000675 601000 2                  TNZ     s:8540

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:46   
      301     8542    2        IF I=PSEUDO$->PSEUDO$LIST.NN#

   8542  2 000715   200022 236100                    LDQ     I,,AUTO
         2 000716   000000 116100                    CMPQ    0,,PR0
         2 000717   000727 601000 2                  TNZ     s:8549

      302     8543
      303     8544    3           THEN DO;

      304     8545    3              P_PARAM.REJECT = '1'B;      /* That's no pseudo resource          */

   8545  2 000720   200003 471500                    LDP1    @P_PARAM,,AUTO
         2 000721   000200 236003                    LDQ     128,DU
         2 000722   100000 256100                    ORSQ    0,,PR1

      305     8546    3              P_PARAM.CHARPOS = P_PARAM.OUT$ -> P$S.CPOS; /* Back up for retry  */

   8546  2 000723   100002 473500                    LDP3    2,,PR1
         2 000724   300002 235100                    LDA     2,,PR3
         2 000725   100004 755100                    STA     4,,PR1

      306     8547    3              END;

   8547  2 000726   001420 710000 2                  TRA     s:8680

      307     8548    2           ELSE
      308     8549    2              P_PARAM.OUT$->P$S.SCRITCH = I;

   8549  2 000727   200003 471500                    LDP1    @P_PARAM,,AUTO
         2 000730   100002 473500                    LDP3    2,,PR1
         2 000731   000000 620006                    EAX0    0,QL
         2 000732   300001 440100                    SXL0    1,,PR3
         2 000733   001420 710000 2                  TRA     s:8680

      309     8550    2      CASE(RES_OTHER_NM);

      310     8551    2        I = 0;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:47   

   8551  2 000734   200022 450100                    STZ     I,,AUTO

      311     8552    2        RES_TYPE = P_PARAM.OUT$->P$S.TEXT; /* Only lookup the first 2 chars */

   8552  2 000735   100004 236100                    LDQ     4,,PR1
         2 000736   000033 772000                    QRL     27
         2 000737   000000 620006                    EAX0    0,QL
         2 000740   040100 100540                    MLR     fill='040'O
         2 000741   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         2 000742   200036 000002                    ADSC9   RES_TYPE,,AUTO           cn=0,n=2

      312     8553    3        DO WHILE(I<PHYS$->PHYS$LIST.NN#

   8553  2 000743   000745 710000 2                  TRA     s:8556

      313     8554    3                AND RES_TYPE~=PHYS$->PHYS$LIST.PRLIST.RNME.TYP(I));
      314     8555    3           I = I+1;

   8555  2 000744   200022 054100                    AOS     I,,AUTO

      315     8556    3        END;

   8556  2 000745   200033 470500                    LDP0    PHYS$,,AUTO
         2 000746   200022 236100                    LDQ     I,,AUTO
         2 000747   000000 116100                    CMPQ    0,,PR0
         2 000750   000756 605000 2                  TPL     s:8557
         2 000751   200036 220100                    LDX0    RES_TYPE,,AUTO
         2 000752   200022 235100                    LDA     I,,AUTO
         2 000753   000002 735000                    ALS     2
         2 000754   000002 100105                    CMPX0   2,AL,PR0
         2 000755   000744 601000 2                  TNZ     s:8555

      316     8557    2        IF I=PHYS$->PHYS$LIST.NN#

   8557  2 000756   000000 116100                    CMPQ    0,,PR0
         2 000757   000764 601000 2                  TNZ     s:8563
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:48   

      317     8558
      318     8559    2           THEN
      319     8560    3              DO;

      320     8561    3                 P_PARAM.OUT$->P$S.COUNT = 0; /* make a bad name if it is */

   8561  2 000760   200003 471500                    LDP1    @P_PARAM,,AUTO
         2 000761   100002 473500                    LDP3    2,,PR1
         2 000762   000000 236003                    LDQ     0,DU
         2 000763   300004 552140                    STBQ    4,'40'O,PR3

      321     8562    3              END;

      322     8563    2        IF P_PARAM.OUT$->P$S.COUNT>2

   8563  2 000764   200003 471500                    LDP1    @P_PARAM,,AUTO
         2 000765   100002 473500                    LDP3    2,,PR1
         2 000766   300004 236100                    LDQ     4,,PR3
         2 000767   777000 376003                    ANQ     -512,DU
         2 000770   003000 116003                    CMPQ    1536,DU
         2 000771   001420 602000 2                  TNC     s:8680

      323     8564
      324     8565    2           THEN
      325     8566    3              DO; /* Scrub off the NN part if there is one */

      326     8567    4                 DO UNTIL P_PARAM.OUT$->P$S.COUNT=2; /* Make sure its decimals */

      327     8568    4                    IF SUBSTR(P_PARAM.OUT$->P$S.TEXT,P_PARAM.OUT$->P$S.COUNT-1,1)

   8568  2 000772   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000773   000002 471500                    LDP1    2,,PR0
         2 000774   100004 236100                    LDQ     4,,PR1
         2 000775   000033 772000                    QRL     27
         2 000776   040106 106400                    CMPC    fill='040'O
         2 000777   000021 000001 3                  ADSC9   17                       cn=0,n=1
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:49   
         2 001000   100004 000001                    ADSC9   4,Q,PR1                  cn=0,n=1
         2 001001   001012 602000 2                  TNC     s:8574

      328     8569    4                         >'9'
      329     8570
      330     8571    4                       THEN EXIT;
      331     8572    4                    P_PARAM.OUT$->P$S.COUNT = P_PARAM.OUT$->P$S.COUNT-1;

   8572  2 001002   100004 236100                    LDQ     4,,PR1
         2 001003   777000 036003                    ADLQ    -512,DU
         2 001004   100004 552140                    STBQ    4,'40'O,PR1

      332     8573    4                 END;

   8573  2 001005   000002 471500                    LDP1    2,,PR0
         2 001006   100004 236100                    LDQ     4,,PR1
         2 001007   777000 376003                    ANQ     -512,DU
         2 001010   002000 116003                    CMPQ    1024,DU
         2 001011   000772 601000 2                  TNZ     s:8568

      333     8574    3              IF P_PARAM.OUT$->P$S.COUNT=2

   8574  2 001012   100004 236100                    LDQ     4,,PR1
         2 001013   777000 376003                    ANQ     -512,DU
         2 001014   002000 116003                    CMPQ    1024,DU
         2 001015   001022 601000 2                  TNZ     s:8579

      334     8575
      335     8576    3                 THEN
      336     8577    3                    P_PARAM.CHARPOS = P_PARAM.OUT$->P$S.CPOS+2;

   8577  2 001016   100002 235100                    LDA     2,,PR1
         2 001017   000002 035007                    ADLA    2,DL
         2 001020   000004 755100                    STA     4,,PR0
         2 001021   001420 710000 2                  TRA     s:8680

      337     8578    3                 ELSE
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:50   
      338     8579    3                    P_PARAM.OUT$->P$S.COUNT = 0; /* make a bad name of it */

   8579  2 001022   000000 236003                    LDQ     0,DU
         2 001023   100004 552140                    STBQ    4,'40'O,PR1

      339     8580    3              END;

   8580  2 001024   001420 710000 2                  TRA     s:8680

      340     8581    2      CASE(RES_RSRCE);

      341     8582    2        I = P_PARAM.OUT$->P$B.NSUBLKS-1;

   8582  2 001025   100001 236100                    LDQ     1,,PR1
         2 001026   000022 772000                    QRL     18
         2 001027   000001 136007                    SBLQ    1,DL
         2 001030   200022 756100                    STQ     I,,AUTO

      342     8583    2        IF P_PARAM.OUT$->P$B.SUBLK$(I)->P$B.CODE=RES_COUNT

   8583  2 001031   100003 473506                    LDP3    3,QL,PR1
         2 001032   300000 720100                    LXL0    0,,PR3
         2 001033   000015 100003                    CMPX0   13,DU
         2 001034   001043 601000 2                  TNZ     s:8588

      343     8584
      344     8585    2           THEN
      345     8586    2              J = P_PARAM.OUT$->P$B.SUBLK$(I)->P$B.SCRITCH;

   8586  2 001035   200022 720100                    LXL0    I,,AUTO
         2 001036   100003 473510                    LDP3    3,X0,PR1
         2 001037   300001 236100                    LDQ     1,,PR3
         2 001040   777777 376007                    ANQ     -1,DL
         2 001041   200023 756100                    STQ     J,,AUTO
         2 001042   001045 710000 2                  TRA     s:8589

      346     8587    2           ELSE
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:51   
      347     8588    2              J = 1;

   8588  2 001043   000001 235007                    LDA     1,DL
         2 001044   200023 755100                    STA     J,,AUTO

      348     8589    2        IF COMMAND=RELEASECMND AND (P_PARAM.OUT$->P$B.NSUBLKS=1

   8589  2 001045   200025 235100                    LDA     COMMAND,,AUTO
         2 001046   000070 115007                    CMPA    56,DL
         2 001047   001064 601000 2                  TNZ     s:8589+15
         2 001050   100001 220100                    LDX0    1,,PR1
         2 001051   000001 100003                    CMPX0   1,DU
         2 001052   001070 600000 2                  TZE     s:8595
         2 001053   100004 473500                    LDP3    4,,PR1
         2 001054   300000 721100                    LXL1    0,,PR3
         2 001055   000042 101003                    CMPX1   34,DU
         2 001056   001064 600000 2                  TZE     s:8589+15
         2 001057   200022 722100                    LXL2    I,,AUTO
         2 001060   100003 474512                    LDP4    3,X2,PR1
         2 001061   400000 723100                    LXL3    0,,PR4
         2 001062   000015 103003                    CMPX3   13,DU
         2 001063   001070 601000 2                  TNZ     s:8595
         2 001064   000052 115007                    CMPA    42,DL
         2 001065   001072 601000 2                  TNZ     s:8596
         2 001066   200023 236100                    LDQ     J,,AUTO
         2 001067   001072 601000 2                  TNZ     s:8596

      349     8590    2             OR P_PARAM.OUT$->P$B.SUBLK$(1)->P$B.CODE~=RES_VNUM
      350     8591    2             AND P_PARAM.OUT$->P$B.SUBLK$(I)->P$B.CODE~=RES_COUNT)
      351     8592    2             OR COMMAND=ORESCMND AND J=0
      352     8593
      353     8594    2           THEN
      354     8595    2              J = 99999; /* Special value for releasing all of a resource */

   8595  2 001070   303237 236007                    LDQ     99999,DL
         2 001071   200023 756100                    STQ     J,,AUTO

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:52   
      355     8596    2        P_PARAM.OUT$ -> P$B.SCRITCH = J;

   8596  2 001072   200023 720100                    LXL0    J,,AUTO
         2 001073   100001 440100                    SXL0    1,,PR1

      356     8597    2        IF J = 99999 THEN J = 0;

   8597  2 001074   200023 236100                    LDQ     J,,AUTO
         2 001075   303237 116007                    CMPQ    99999,DL
         2 001076   001100 601000 2                  TNZ     s:8598

   8597  2 001077   200023 450100                    STZ     J,,AUTO

      357     8598    3        DO CASE(P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.CODE);

   8598  2 001100   000002 471500                    LDP1    2,,PR0
         2 001101   100003 473500                    LDP3    3,,PR1
         2 001102   300000 236100                    LDQ     0,,PR3
         2 001103   777777 376007                    ANQ     -1,DL
         2 001104   000032 136007                    SBLQ    26,DL
         2 001105   000001 116007                    CMPQ    1,DL
         2 001106   001110 602006 2                  TNC     s:8598+8,QL
         2 001107   001215 710000 2                  TRA     s:8625
         2 001110   001111 710000 2                  TRA     s:8600

      358     8599    3         CASE(RES_PSEUDO);

      359     8600    3           IF P_PARAM.OUT$->P$B.SCRITCH=99999 AND COMMAND=RELEASECMND

   8600  2 001111   100001 720100                    LXL0    1,,PR1
         2 001112   303237 100003                    CMPX0   99999,DU
         2 001113   001120 601000 2                  TNZ     s:8604
         2 001114   000070 115007                    CMPA    56,DL
         2 001115   001120 601000 2                  TNZ     s:8604

      360     8601
      361     8602    3              THEN
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:53   
      362     8603    3                 P_PARAM.OUT$->P$B.SCRITCH = 1;

   8603  2 001116   000001 221003                    LDX1    1,DU
         2 001117   100001 441100                    SXL1    1,,PR1

      363     8604    3           I = 0;

   8604  2 001120   200022 450100                    STZ     I,,AUTO

      364     8605    4           DO WHILE(I<8

   8605  2 001121   001123 710000 2                  TRA     s:8608

      365     8606    4                   AND USER$->AS$USERS.PSDOL.PSDO_NAME(I)~=P_PARAM.OUT$->P$B.SUBLK$(0)
              8606                            ->P$S.TEXT);
      366     8607    4              I = I+1;

   8607  2 001122   200022 054100                    AOS     I,,AUTO

      367     8608    4           END;

   8608  2 001123   200022 235100                    LDA     I,,AUTO
         2 001124   000010 115007                    CMPA    8,DL
         2 001125   001142 605000 2                  TPL     s:8609
         2 001126   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 001127   000002 471500                    LDP1    2,,PR0
         2 001130   100003 473500                    LDP3    3,,PR1
         2 001131   300004 236100                    LDQ     4,,PR3
         2 001132   000033 772000                    QRL     27
         2 001133   000004 735000                    ALS     4
         2 001134   200031 474500                    LDP4    USER$,,AUTO
         2 001135   000000 620006                    EAX0    0,QL
         2 001136   040140 106505                    CMPC    fill='040'O
         2 001137   400265 000010                    ADSC9   181,A,PR4                cn=0,n=8
         2 001140   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         2 001141   001122 601000 2                  TNZ     s:8607

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:54   
      368     8609    3           J = J + RES_TBL(I + JM_RX$PR1);

   8609  2 001142   200022 720100                    LXL0    I,,AUTO
         2 001143   200023 236100                    LDQ     J,,AUTO
         2 001144   200043 036110                    ADLQ    RES_TBL+4,X0,AUTO
         2 001145   200023 756100                    STQ     J,,AUTO

      369     8610    3           IF I=8

   8610  2 001146   200022 235100                    LDA     I,,AUTO
         2 001147   000010 115007                    CMPA    8,DL
         2 001150   001156 601000 2                  TNZ     s:8615

      370     8611
      371     8612    3              THEN
      372     8613    3                 CALL POSTERR(E_JPSUDOAUTH);

   8613  2 001151   000022 236000 3                  LDQ     18
         2 001152   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 001153   001421 701000 2                  TSX1    POSTERR
         2 001154   000000 011000                    NOP     0
         2 001155   001420 710000 2                  TRA     s:8680

      373     8614    3              ELSE
      374     8615    3                 IF (J > USER$ -> AS$USERS.PSDOL.BMAX(I) AND

   8615  2 001156   000002 735000                    ALS     2
         2 001157   200031 470500                    LDP0    USER$,,AUTO
         2 001160   000267 236105                    LDQ     183,AL,PR0
         2 001161   000022 772000                    QRL     18
         2 001162   200023 116100                    CMPQ    J,,AUTO
         2 001163   001166 605000 2                  TPL     s:8615+8
         2 001164   200024 235100                    LDA     MODE_INDEX,,AUTO
         2 001165   001210 600000 2                  TZE     s:8623
         2 001166   200022 235100                    LDA     I,,AUTO
         2 001167   000002 735000                    ALS     2
         2 001170   000270 236105                    LDQ     184,AL,PR0
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:55   
         2 001171   000022 772000                    QRL     18
         2 001172   200023 116100                    CMPQ    J,,AUTO
         2 001173   001177 605000 2                  TPL     s:8615+17
         2 001174   200024 235100                    LDA     MODE_INDEX,,AUTO
         2 001175   000002 115007                    CMPA    2,DL
         2 001176   001210 600000 2                  TZE     s:8623
         2 001177   200022 235100                    LDA     I,,AUTO
         2 001200   000002 735000                    ALS     2
         2 001201   000267 236105                    LDQ     183,AL,PR0
         2 001202   777777 376007                    ANQ     -1,DL
         2 001203   200023 116100                    CMPQ    J,,AUTO
         2 001204   001420 605000 2                  TPL     s:8680
         2 001205   200024 235100                    LDA     MODE_INDEX,,AUTO
         2 001206   000001 115007                    CMPA    1,DL
         2 001207   001420 601000 2                  TNZ     s:8680

      375     8616    3                      MODE_INDEX = %M_BATCH#-1)
      376     8617    3                   OR (J > USER$ -> AS$USERS.PSDOL.OMAX(I) AND
      377     8618    3                      MODE_INDEX = %M_INT#-1)
      378     8619    3                   OR (J > USER$ -> AS$USERS.PSDOL.GMAX(I) AND
      379     8620    3                      MODE_INDEX = %M_GHOST#-1)
      380     8621
      381     8622    3                    THEN
      382     8623    3                       CALL POSTERR(E_JPSUDOMAX);

   8623  2 001210   000023 236000 3                  LDQ     19
         2 001211   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 001212   001421 701000 2                  TSX1    POSTERR
         2 001213   000000 011000                    NOP     0
         2 001214   001420 710000 2                  TRA     s:8680

      383     8624    3         CASE(ELSE);

      384     8625    4           DO CASE(P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.CODE);

   8625  2 001215   300000 236100                    LDQ     0,,PR3
         2 001216   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:56   
         2 001217   000022 136007                    SBLQ    18,DL
         2 001220   000007 116007                    CMPQ    7,DL
         2 001221   001223 602006 2                  TNC     s:8625+6,QL
         2 001222   001300 710000 2                  TRA     s:8647
         2 001223   001240 710000 2                  TRA     s:8630
         2 001224   001300 710000 2                  TRA     s:8647
         2 001225   001300 710000 2                  TRA     s:8647
         2 001226   001300 710000 2                  TRA     s:8647
         2 001227   001232 710000 2                  TRA     s:8627
         2 001230   001300 710000 2                  TRA     s:8647
         2 001231   001246 710000 2                  TRA     s:8633

      385     8626    4            CASE(RES_MT);

      386     8627    4              RES_TYPE = 'MT';

   8627  2 001232   000054 220000 1                  LDX0    E_XSECXCD+1
         2 001233   200036 740100                    STX0    RES_TYPE,,AUTO

      387     8628    4              J = J + RES_TBL(JM_RX$MT);

   8628  2 001234   200023 236100                    LDQ     J,,AUTO
         2 001235   200041 036100                    ADLQ    RES_TBL+2,,AUTO
         2 001236   200023 756100                    STQ     J,,AUTO
         2 001237   001300 710000 2                  TRA     s:8647

      388     8629    4            CASE(RES_DP);

      389     8630    4              RES_TYPE = 'DP';

   8630  2 001240   000055 220000 1                  LDX0    E_XSECXCD+2
         2 001241   200036 740100                    STX0    RES_TYPE,,AUTO

      390     8631    4              J = J + RES_TBL(JM_RX$DP);

   8631  2 001242   200023 236100                    LDQ     J,,AUTO
         2 001243   200040 036100                    ADLQ    RES_TBL+1,,AUTO
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:57   
         2 001244   200023 756100                    STQ     J,,AUTO
         2 001245   001300 710000 2                  TRA     s:8647

      391     8632    4            CASE(RES_OTHER_NM);

      392     8633    4              RES_TYPE = P_PARAM.OUT$->P$B.SUBLK$(0)->P$S.TEXT;

   8633  2 001246   300004 236100                    LDQ     4,,PR3
         2 001247   000033 772000                    QRL     27
         2 001250   000000 620006                    EAX0    0,QL
         2 001251   040100 100540                    MLR     fill='040'O
         2 001252   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         2 001253   200036 000002                    ADSC9   RES_TYPE,,AUTO           cn=0,n=2

      393     8634    4              IF RES_TYPE='LP' AND P_PARAM.OUT$->P$B.NSUBLKS>1

   8634  2 001254   200036 221100                    LDX1    RES_TYPE,,AUTO
         2 001255   000056 101000 1                  CMPX1   E_XSECXCD+3
         2 001256   001275 601000 2                  TNZ     s:8645
         2 001257   100001 222100                    LDX2    1,,PR1
         2 001260   000002 102003                    CMPX2   2,DU
         2 001261   001275 602000 2                  TNC     s:8645

      394     8635
      395     8636    4                 THEN
      396     8637    4                    IF P_PARAM.OUT$->P$B.SUBLK$(1)->P$B.CODE=RES_VNUM

   8637  2 001262   100004 474500                    LDP4    4,,PR1
         2 001263   400000 723100                    LXL3    0,,PR4
         2 001264   000042 103003                    CMPX3   34,DU
         2 001265   001275 601000 2                  TNZ     s:8645

      397     8638
      398     8639    4                       THEN
      399     8640    4                          IF P_PARAM.OUT$->P$B.SUBLK$(1)->P$B.SCRITCH=1

   8640  2 001266   400001 724100                    LXL4    1,,PR4
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:58   
         2 001267   000001 104003                    CMPX4   1,DU
         2 001270   001275 601000 2                  TNZ     s:8645

      400     8641
      401     8642    4                             THEN
      402     8643    4                                CALL POSTERR(E_JPNOLP01);

   8643  2 001271   000024 236000 3                  LDQ     20
         2 001272   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 001273   001421 701000 2                  TSX1    POSTERR
         2 001274   000000 011000                    NOP     0

      403     8644                                                /* Don't allow LP01                   */
      404     8645    4              J = J + RES_TBL(JM_RX$XX);

   8645  2 001275   200023 236100                    LDQ     J,,AUTO
         2 001276   200042 036100                    ADLQ    RES_TBL+3,,AUTO
         2 001277   200023 756100                    STQ     J,,AUTO

      405     8646    4            END;

      406     8647    3           I = 0;

   8647  2 001300   200022 450100                    STZ     I,,AUTO

      407     8648    4           DO WHILE(I<PHYS$->PHYS$LIST.NN# AND (RES_TYPE=' '

   8648  2 001301   001303 710000 2                  TRA     s:8651

      408     8649    4                   OR RES_TYPE~=PHYS$->PHYS$LIST.PRLIST.RNME.TYP(I)));
      409     8650    4              I = I+1;

   8650  2 001302   200022 054100                    AOS     I,,AUTO

      410     8651    4           END;

   8651  2 001303   200033 470500                    LDP0    PHYS$,,AUTO
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:59   
         2 001304   200022 236100                    LDQ     I,,AUTO
         2 001305   000000 116100                    CMPQ    0,,PR0
         2 001306   001316 605000 2                  TPL     s:8652
         2 001307   200036 220100                    LDX0    RES_TYPE,,AUTO
         2 001310   040040 100003                    CMPX0   16416,DU
         2 001311   001302 600000 2                  TZE     s:8650
         2 001312   200022 235100                    LDA     I,,AUTO
         2 001313   000002 735000                    ALS     2
         2 001314   000002 100105                    CMPX0   2,AL,PR0
         2 001315   001302 601000 2                  TNZ     s:8650

      411     8652    3           IF I=PHYS$->PHYS$LIST.NN#

   8652  2 001316   000000 116100                    CMPQ    0,,PR0
         2 001317   001325 601000 2                  TNZ     s:8659

      412     8653
      413     8654    3              THEN
      414     8655    4                 DO;

      415     8656    4                    CALL POSTERR (E_JPNORES);

   8656  2 001320   000025 236000 3                  LDQ     21
         2 001321   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 001322   001421 701000 2                  TSX1    POSTERR
         2 001323   000000 011000                    NOP     0

      416     8657    4                    RETURN;

   8657  2 001324   000000 702200 xent               TSX2  ! X66_ARET

      417     8658    4                 END;
      418     8659    3           I = 0;

   8659  2 001325   200022 450100                    STZ     I,,AUTO

      419     8660    4           DO WHILE(I<USER$->AS$USERS.TOT_TYPES
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:60   

   8660  2 001326   001330 710000 2                  TRA     s:8663

      420     8661    4                   AND USER$->AS$USERS.RESL.RNAME(I)~=RES_TYPE);
      421     8662    4              I = I+1;

   8662  2 001327   200022 054100                    AOS     I,,AUTO

      422     8663    4           END;

   8663  2 001330   200031 470500                    LDP0    USER$,,AUTO
         2 001331   000325 236100                    LDQ     213,,PR0
         2 001332   000022 772000                    QRL     18
         2 001333   200022 116100                    CMPQ    I,,AUTO
         2 001334   001343 604400 2                  TMOZ    s:8664
         2 001335   200022 236100                    LDQ     I,,AUTO
         2 001336   000012 402007                    MPY     10,DL
         2 001337   040100 106506                    CMPC    fill='040'O
         2 001340   000325 400002                    ADSC9   213,Q,PR0                cn=2,n=2
         2 001341   200036 000002                    ADSC9   RES_TYPE,,AUTO           cn=0,n=2
         2 001342   001327 601000 2                  TNZ     s:8662

      423     8664    3           IF I=USER$->AS$USERS.TOT_TYPES

   8664  2 001343   000325 236100                    LDQ     213,,PR0
         2 001344   000022 772000                    QRL     18
         2 001345   200022 116100                    CMPQ    I,,AUTO
         2 001346   001354 601000 2                  TNZ     s:8669

      424     8665
      425     8666    3              THEN
      426     8667    3                 CALL POSTERR(E_JPRESAUTH);

   8667  2 001347   000026 236000 3                  LDQ     22
         2 001350   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 001351   001421 701000 2                  TSX1    POSTERR
         2 001352   000000 011000                    NOP     0
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:61   
         2 001353   001420 710000 2                  TRA     s:8680

      427     8668    3              ELSE
      428     8669    3                 IF (J > USER$ -> AS$USERS.RESL.BMAX(I) AND

   8669  2 001354   200022 236100                    LDQ     I,,AUTO
         2 001355   000012 402007                    MPY     10,DL
         2 001356   000100 101506                    MRL     fill='000'O
         2 001357   000326 000002                    ADSC9   214,Q,PR0                cn=0,n=2
         2 001360   200336 000004                    ADSC9   @ERRCODE+1,,AUTO         cn=0,n=4
         2 001361   200336 236100                    LDQ     @ERRCODE+1,,AUTO
         2 001362   200023 116100                    CMPQ    J,,AUTO
         2 001363   001366 605000 2                  TPL     s:8669+10
         2 001364   200024 235100                    LDA     MODE_INDEX,,AUTO
         2 001365   001414 600000 2                  TZE     s:8677
         2 001366   200022 236100                    LDQ     I,,AUTO
         2 001367   000012 402007                    MPY     10,DL
         2 001370   000100 101506                    MRL     fill='000'O
         2 001371   000327 000002                    ADSC9   215,Q,PR0                cn=0,n=2
         2 001372   200337 000004                    ADSC9   @ERRCODE+2,,AUTO         cn=0,n=4
         2 001373   200337 236100                    LDQ     @ERRCODE+2,,AUTO
         2 001374   200023 116100                    CMPQ    J,,AUTO
         2 001375   001401 605000 2                  TPL     s:8669+21
         2 001376   200024 235100                    LDA     MODE_INDEX,,AUTO
         2 001377   000002 115007                    CMPA    2,DL
         2 001400   001414 600000 2                  TZE     s:8677
         2 001401   200022 236100                    LDQ     I,,AUTO
         2 001402   000012 402007                    MPY     10,DL
         2 001403   000100 101506                    MRL     fill='000'O
         2 001404   000326 400002                    ADSC9   214,Q,PR0                cn=2,n=2
         2 001405   200340 000004                    ADSC9   @ERRCODE+3,,AUTO         cn=0,n=4
         2 001406   200340 236100                    LDQ     @ERRCODE+3,,AUTO
         2 001407   200023 116100                    CMPQ    J,,AUTO
         2 001410   001420 605000 2                  TPL     s:8680
         2 001411   200024 235100                    LDA     MODE_INDEX,,AUTO
         2 001412   000001 115007                    CMPA    1,DL
         2 001413   001420 601000 2                  TNZ     s:8680
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:62   

      429     8670    3                   MODE_INDEX = %M_BATCH#-1)
      430     8671    3                   OR (J > USER$ -> AS$USERS.RESL.OMAX(I) AND
      431     8672    3                   MODE_INDEX = %M_INT#-1)
      432     8673    3                   OR (J > USER$ -> AS$USERS.RESL.GMAX(I) AND
      433     8674    3                   MODE_INDEX = %M_GHOST#-1)
      434     8675
      435     8676    3                    THEN
      436     8677    3                       CALL POSTERR(E_JPRESMAX);

   8677  2 001414   000027 236000 3                  LDQ     23
         2 001415   200335 756100                    STQ     FPT_RESCTL+19,,AUTO
         2 001416   001421 701000 2                  TSX1    POSTERR
         2 001417   000000 011000                    NOP     0

      437     8678    3         END;

      438     8679    2      END;                           /* End case                           */

      439     8680    1     RETURN;

   8680  2 001420   000000 702200 xent               TSX2  ! X66_ARET

      440     8681        %EJECT;
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:63   
      441     8682    1   POSTERR: PROC (ERRCODE);

   8682  2 001421   200334 741300       POSTERR      STX1  ! FPT_RESCTL+18,,AUTO

      442     8683    2   DCL ERRCODE BIT(36) ALIGNED;
      443     8684
      444     8685    2           CALL CXP$POSTERR (ERR$, P_PARAM.OUT$->P$B.CPOS, ERRCODE);

   8685  2 001422   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 001423   000002 471500                    LDP1    2,,PR0
         2 001424   200335 236100                    LDQ     @ERRCODE,,AUTO
         2 001425   200340 756100                    STQ     @ERRCODE+3,,AUTO
         2 001426   100002 633500                    EPPR3   2,,PR1
         2 001427   200337 453500                    STP3    @ERRCODE+2,,AUTO
         2 001430   200030 631500                    EPPR1   ERR$,,AUTO
         2 001431   200336 451500                    STP1    @ERRCODE+1,,AUTO
         2 001432   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 001433   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001434   000000 701000 xent               TSX1    CXP$POSTERR
         2 001435   000000 011000                    NOP     0

      445     8686    2           RETURN;

   8686  2 001436   200334 221300                    LDX1  ! FPT_RESCTL+18,,AUTO
         2 001437   000001 702211                    TSX2  ! 1,X1

      446     8687    2   END POSTERR;
      447     8688        /**/
      448     8689    1   BIGNUM:
      449     8690    1     CALL CXP$POSTERR (ERR$,P$->P$B.CPOS,E_BDCVAL);

   8690  2 001440   000030 236000 3     BIGNUM       LDQ     24
         2 001441   200340 756100                    STQ     @ERRCODE+3,,AUTO
         2 001442   200027 236100                    LDQ     P$,,AUTO
         2 001443   000002 036003                    ADLQ    2,DU
         2 001444   200337 756100                    STQ     @ERRCODE+2,,AUTO
         2 001445   200030 630500                    EPPR0   ERR$,,AUTO
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:64   
         2 001446   200336 450500                    STP0    @ERRCODE+1,,AUTO
         2 001447   200336 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 001450   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001451   000000 701000 xent               TSX1    CXP$POSTERR
         2 001452   000000 011000                    NOP     0

      450     8691    1     RETURN;

   8691  2 001453   000000 702200 xent               TSX2  ! X66_ARET
      451     8692    1   END CPX$RESOURC;

PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:65   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPX$RESOURC.
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:66   

 **** Variables and constants ****

  ****  Section 001 RoData CPX$RESOURC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/d STRC(648)   r     1 CFPT_RESCTL               34-0-0/w STRC        r     1 E_BDCVAL
    37-0-0/w STRC        r     1 E_JPBADVNUM               44-0-0/w STRC        r     1 E_JPBIGACCT
    36-0-0/w STRC        r     1 E_JPBIGMEM                35-0-0/w STRC        r     1 E_JPBIGRTIME
    40-0-0/w STRC        r     1 E_JPBIGSETNM              50-0-0/w STRC        r     1 E_JPNOLP01
    43-0-0/w STRC        r     1 E_JPNORES                 46-0-0/w STRC        r     1 E_JPRESAUTH
    45-0-0/w STRC        r     1 E_JPRESMAX                47-0-0/w STRC        r     1 E_JPSMALLMEM
    41-0-0/w STRC        r     1 E_JPSUDOAUTH              42-0-0/w STRC        r     1 E_JPSUDOMAX
    51-0-0/w STRC        r     1 E_XHRXCD                  52-0-0/w STRC        r     1 E_XMINXCD
    53-0-0/w STRC        r     1 E_XSECXCD                  0-0-0/d STRC(288)   r     1 FPT_MADMUCKC
    10-0-0/w PTR         r     1 SEG2$                     10-0-0/b STRC        r     1 SEG2PTR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   335-0-0/w PTR         r     1 @ERRCODE                   3-0-0/w PTR         r     1 @P_PARAM
    26-0-0/w PTR         r     1 BLK$                      25-0-0/w UBIN        r     1 COMMAND
   252-0-0/d STRC(1116)  r     1 CUR_PSEUDO                54-0-0/d STRC(4536)  r     1 CUR_RES
    30-0-0/w PTR         r     1 ERR$                      *0-0-0/w BIT         r     1 ERRCODE
     4-0-0/d STRC(288)   r     1 FPT_MADMUCK              312-0-0/d STRC(648)   r     1 FPT_RESCTL
    22-0-0/w SBIN        r     1 I                         23-0-0/w SBIN        r     1 J
    34-0-0/c CHAR(8)     r     1 MADACCT                   24-0-0/w SBIN        r     1 MODE_INDEX
    27-0-0/w PTR         r     1 P$                        33-0-0/w PTR         r     1 PHYS$
    32-0-0/w PTR         r     1 PSEUDO$                   *0-0-0/w STRC(270)   r     1 P_PARAM
    37-0-0/w SBIN        r     1 RES_TBL(0:11)             36-0-0/c CHAR(2)     r     1 RES_TYPE
    16-0-0/d STRC(90)    r     1 SN                        15-0-0/w UBIN        r     1 TIME
    31-0-0/w PTR         r     1 USER$                     14-0-0/w SBIN        r     1 VAL

  ****  SYMREF variables  ****
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:67   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18576) r     1 AS$USERS                   0-0-0/w STRC(2448)  r     1 B$EXCFR
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d STRC(5175)  r     1 G$D                        0-0-0/w STRC(144)   r     1 P$B
     0-0-0/w STRC(72)    r     1 P$NODE                     0-0-0/w STRC(504)   r     1 P$PCB
     0-0-0/w ASTR(153)   r     1 P$S                        0-0-0/d STRC(360)   r     1 PHYS$LIST
     0-0-0/d STRC(360)   r     1 PSEUDO$LIST                0-0-0/w STRC(576)   r     1 U$PARAM


   Procedure CPX$RESOURC requires 812 words for executable code.
   Procedure CPX$RESOURC requires 226 words of local(AUTO) storage.

    No errors detected in file CPX$RESOURC.:E05TSI    .
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:68   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:69   
          MINI XREF LISTING

AS$USERS.BANNER_PERM
      7421**DCL      7422--REDEF
AS$USERS.BUDGET.MACCT
      7326**DCL      7330--REDEF
AS$USERS.BUDGET.MAX_PROJECTS
      7339**DCL      7342--REDEF
AS$USERS.BUDGET.PACCUM
      7322**DCL      7324--REDEF
AS$USERS.BUDGET.PMAXC
      7317**DCL      7319--REDEF
AS$USERS.MMEM
      7405**DCL      8445>>IF
AS$USERS.MTIME
      7402**DCL      8497>>IF
AS$USERS.PSDOL.BMAX
      7409**DCL      8615>>IF
AS$USERS.PSDOL.GMAX
      7410**DCL      8615>>IF
AS$USERS.PSDOL.OMAX
      7411**DCL      8615>>IF
AS$USERS.PSDOL.PSDO_NAME
      7408**DCL      8605>>DOWHILE
AS$USERS.RESL.BMAX
      7416**DCL      8669>>IF
AS$USERS.RESL.GMAX
      7417**DCL      8669>>IF
AS$USERS.RESL.OMAX
      7418**DCL      8669>>IF
AS$USERS.RESL.RNAME
      7415**DCL      8660>>DOWHILE
AS$USERS.SETUP_CHRA.TXT
      7437**DCL      7438--REDEF    7439--REDEF
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:70   
AS$USERS.TOT_TYPES
      7413**DCL      8660>>DOWHILE  8664>>IF
B$EXCFR.ASL
      8014**DCL      8014--REDEF
B$EXCFR.ERR
      8028**DCL      8513<>CALL
B$EXCFR.ERR.ERR#
      8028**DCL      8028--REDEF
B$EXCFR.EVID
      8027**DCL      8027--REDEF    8028--REDEF
B$EXCFR.IR
      8015**DCL      8015--REDEF
B$EXCFR.PREVSZ
      8014**DCL      8014--REDEF
B$EXCFR.SUBC
      8026**DCL      8026--REDEF    8027--REDEF    8027--REDEF
B$JIT.CPFLAGS1.SLEAZE
       555**DCL       555--REDEF
B$JIT.ERR.MID
       462**DCL       462--REDEF
B$JIT.JRESPEAK
       623**DCL       624--REDEF
B$JIT.MAXCORE
       622**DCL      8453>>IF
B$JIT.MODE
       456**DCL      8438>>ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
       732**DCL       732--REDEF     733--REDEF
B$JIT.PNR
       636**DCL       636--REDEF
B$JIT.TSLINE
       730**DCL       731--REDEF
B$JIT$
      7104**DCL       456--IMP-PTR  8438>>ASSIGN   8453>>IF
B$TCB.ALT$
      8011**DCL      8513>>CALL
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:71   
B$TCB$
      7105**DCL      8011--IMP-PTR  8513>>CALL
BIGNUM
      8690**LABEL    8442--CALLALT  8471--CALLALT
BLK$
      7189**DCL      8515<>CALL     8516>>ASSIGN   8517>>ASSIGN   8518>>ASSIGN   8518>>ASSIGN   8520>>ASSIGN
CFPT_RESCTL
      7160**DCL      8406>>ASSIGN
CFPT_RESCTL.V
      7162**DCL      7160--DCLINIT
COMMAND
      7188**DCL      8400<<ASSIGN   8402>>IF       8450>>IF       8589>>IF       8589>>IF       8600>>IF
CUR_PSEUDO
      7225**DCL      8409--ASSIGN
CUR_PSEUDO.MEMORY#
      7225**DCL      8399<<ASSIGN   8445>>IF       8461>>IF
CUR_PSEUDO.NN#
      7225**DCL      8413>>DOINDEX
CUR_PSEUDO.PSLIST.NUM#
      7227**DCL      8419>>ASSIGN
CUR_PSEUDO.PSLIST.PSEUDO#
      7227**DCL      8415>>IF
CUR_RES
      7209**DCL      8408--ASSIGN
CUR_RES.NN#
      7209**DCL      8424>>DOINDEX
CUR_RES.PRLIST.RNAME#
      7209**DCL      7210--REDEF
CUR_RES.PRLIST.RNME.TYP
      7210**DCL      8425>>IF       8428>>IF
CXP$POSTERR
      7098**DCL-ENT  8477--CALL     8484--CALL     8491--CALL     8685--CALL     8690--CALL
CXX$DECBIN
      7097**DCL-ENT  8442--CALL     8471--CALL
ERR$
      7191**DCL      8390<<ASSIGN   8477<>CALL     8484<>CALL     8491<>CALL     8685<>CALL     8690<>CALL
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:72   
ERRCODE IN PROCEDURE POSTERR
      8683**DCL      8682--PROC     8685<>CALL
E_BDCVAL
      8047**DCL      8690<>CALL
E_JPBADVNUM
      8113**DCL      8528<>CALL
E_JPBIGACCT
      8228**DCL      8505<>CALL
E_JPBIGMEM
      8090**DCL      8448<>CALL
E_JPBIGRTIME
      8067**DCL      8500<>CALL
E_JPBIGSETNM
      8136**DCL      8535<>CALL
E_JPNOLP01
      8314**DCL      8643<>CALL
E_JPNORES
      8205**DCL      8656<>CALL
E_JPRESAUTH
      8270**DCL      8667<>CALL
E_JPRESMAX
      8248**DCL      8677<>CALL
E_JPSMALLMEM
      8292**DCL      8455<>CALL     8463<>CALL
E_JPSUDOAUTH
      8159**DCL      8613<>CALL
E_JPSUDOMAX
      8182**DCL      8623<>CALL
E_XHRXCD
      8336**DCL      8477<>CALL
E_XMINXCD
      8356**DCL      8484<>CALL
E_XSECXCD
      8376**DCL      8491<>CALL
FPT_MADMUCK
      7137**DCL      8507<<ASSIGN   8512<>CALL
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:73   
FPT_MADMUCK.ACCT_
      7137**DCL      8509<<ASSIGN
FPT_MADMUCK.SN_
      7137**DCL      8511<<ASSIGN
FPT_MADMUCK.V
      7138**DCL      8508--ASSIGN
FPT_MADMUCK.V_
      7137**DCL      8508<<ASSIGN
FPT_MADMUCKC
      7121**DCL      8507>>ASSIGN
FPT_MADMUCKC.V
      7122**DCL      7121--DCLINIT
FPT_RESCTL
      8004**DCL      8406<<ASSIGN   8411<>CALL
FPT_RESCTL.PRES_
      8004**DCL      8408<<ASSIGN
FPT_RESCTL.PSEUDO_
      8004**DCL      8409<<ASSIGN
FPT_RESCTL.V
      8006**DCL      8407--ASSIGN
FPT_RESCTL.V_
      8004**DCL      8407<<ASSIGN
G$D
      7480**DCL      8515<>CALL     8519<>CALL
G$D.LDCMNT.TX
      7550**DCL      7551--REDEF
G$D.SCRATCH
      7517**DCL      7520--REDEF
G$D.TRCMNT.TX
      7558**DCL      7559--REDEF
I
      7185**DCL      8396<<DOINDEX  8397>>ASSIGN   8413<<DOINDEX  8415>>IF       8419>>ASSIGN   8424<<DOINDEX
      8425>>IF       8428>>IF       8469<<DOINDEX  8470>>ASSIGN   8481>>IF       8488>>IF       8537<<ASSIGN
      8538>>DOWHILE  8538>>DOWHILE  8540<<ASSIGN   8540>>ASSIGN   8542>>IF       8549>>ASSIGN   8551<<ASSIGN
      8553>>DOWHILE  8553>>DOWHILE  8555<<ASSIGN   8555>>ASSIGN   8557>>IF       8582<<ASSIGN   8583>>IF
      8586>>ASSIGN   8589>>IF       8604<<ASSIGN   8605>>DOWHILE  8605>>DOWHILE  8607<<ASSIGN   8607>>ASSIGN
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:74   
      8609>>ASSIGN   8610>>IF       8615>>IF       8615>>IF       8615>>IF       8647<<ASSIGN   8648>>DOWHILE
      8648>>DOWHILE  8650<<ASSIGN   8650>>ASSIGN   8652>>IF       8659<<ASSIGN   8660>>DOWHILE  8660>>DOWHILE
      8662<<ASSIGN   8662>>ASSIGN   8664>>IF       8669>>IF       8669>>IF       8669>>IF
J
      7186**DCL      8414<<DOINDEX  8415>>IF       8419>>ASSIGN   8586<<ASSIGN   8588<<ASSIGN   8589>>IF
      8595<<ASSIGN   8596>>ASSIGN   8597>>IF       8597<<ASSIGN   8609<<ASSIGN   8609>>ASSIGN   8615>>IF
      8615>>IF       8615>>IF       8628<<ASSIGN   8628>>ASSIGN   8631<<ASSIGN   8631>>ASSIGN   8645<<ASSIGN
      8645>>ASSIGN   8669>>IF       8669>>IF       8669>>IF
M$DISPRES
       864**DCL-ENT  8411--CALL
M$MADMUCK
       865**DCL-ENT  8512--CALL
MADACCT
      7195**DCL      8509--ASSIGN   8510<<ASSIGN
MADALT
      8513**LABEL    8411--CALLALT
MODE_INDEX
      7187**DCL      8437<<ASSIGN   8438<<ASSIGN   8445>>IF       8497>>IF       8615>>IF       8615>>IF
      8615>>IF       8669>>IF       8669>>IF       8669>>IF
P$
      7190**DCL      8394<<ASSIGN   8439>>IF       8442>>CALL     8470<<ASSIGN   8471>>CALL     8472>>DOCASE
      8477>>CALL     8484>>CALL     8491>>CALL     8690>>CALL
P$B
      7868**DCL      8515--CALL     8516<<ASSIGN   8516>>ASSIGN
P$B.CODE
      7876**DCL      8443>>DOCASE   8472>>DOCASE   8583>>IF       8589>>IF       8589>>IF       8598>>DOCASE
      8625>>DOCASE   8637>>IF
P$B.CPOS
      7894**DCL      8685<>CALL     8690<>CALL
P$B.NDTYPE
      7871**DCL      8439>>IF
P$B.NSUBLKS
      7880**DCL      8469>>DOINDEX  8582>>ASSIGN   8589>>IF       8634>>IF
P$B.SCRITCH
      7884**DCL      8457<<ASSIGN   8465<<ASSIGN   8523<<ASSIGN   8530<<ASSIGN   8586>>ASSIGN   8596<<ASSIGN
      8600>>IF       8603<<ASSIGN   8640>>IF
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:75   
P$B.SUBLK$
      7901**DCL      8470>>ASSIGN   8583>>IF       8586>>ASSIGN   8589>>IF       8589>>IF       8598>>DOCASE
      8605>>DOWHILE  8605>>DOWHILE  8625>>DOCASE   8633>>ASSIGN   8633>>ASSIGN   8637>>IF       8640>>IF
P$NODE.CODE
      7847**DCL      8400>>ASSIGN
P$PCB.ROOT$
      7591**DCL      8400>>ASSIGN
P$S.COUNT
      7937**DCL      7940--IMP-SIZ  8442<>CALL     8471<>CALL     8502>>IF       8510>>ASSIGN   8517<<ASSIGN
      8518>>ASSIGN   8525>>IF       8532>>IF       8538>>DOWHILE  8552>>ASSIGN   8561<<ASSIGN   8563>>IF
      8567>>DOUNTIL  8568>>IF       8568>>IF       8572<<ASSIGN   8572>>ASSIGN   8574>>IF       8579<<ASSIGN
      8605>>DOWHILE  8633>>ASSIGN
P$S.CPOS
      7929**DCL      8477<>CALL     8484<>CALL     8491<>CALL     8546>>ASSIGN   8577>>ASSIGN
P$S.SCRITCH
      7926**DCL      8549<<ASSIGN
P$S.TEXT
      7940**DCL      8510>>ASSIGN   8518<<ASSIGN   8538>>DOWHILE  8552>>ASSIGN   8568>>IF       8605>>DOWHILE
      8633>>ASSIGN
PHYS$
      7194**DCL      8393<<ASSIGN   8553>>DOWHILE  8553>>DOWHILE  8557>>IF       8648>>DOWHILE  8648>>DOWHILE
      8652>>IF
PHYS$LIST.NN#
      7972**DCL      8553>>DOWHILE  8557>>IF       8648>>DOWHILE  8652>>IF
PHYS$LIST.PRLIST.RNAME#
      7972**DCL      7973--REDEF
PHYS$LIST.PRLIST.RNME.TYP
      7973**DCL      8553>>DOWHILE  8648>>DOWHILE
POSTERR
      8682**PROC     8448--CALL     8455--CALL     8463--CALL     8500--CALL     8505--CALL     8513--CALL
      8528--CALL     8535--CALL     8613--CALL     8623--CALL     8643--CALL     8656--CALL     8667--CALL
      8677--CALL
PSEUDO$
      7193**DCL      8392<<ASSIGN   8414>>DOINDEX  8415>>IF       8538>>DOWHILE  8538>>DOWHILE  8542>>IF
PSEUDO$LIST.NN#
      7988**DCL      8414>>DOINDEX  8538>>DOWHILE  8542>>IF
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:76   
PSEUDO$LIST.PSLIST.PSEUDO#
      7990**DCL      8415>>IF       8538>>DOWHILE
P_PARAM
      7032**DCL         8--PROC     8388--ENTRY
P_PARAM.CHARPOS
      7070**DCL      8546<<ASSIGN   8577<<ASSIGN
P_PARAM.GLOBAL$
      7066**DCL      8515>>CALL     8519>>CALL
P_PARAM.OUT$
      7062**DCL      8394>>ASSIGN   8443>>DOCASE   8457>>ASSIGN   8465>>ASSIGN   8469>>DOINDEX  8470>>ASSIGN
      8502>>IF       8510>>ASSIGN   8510>>ASSIGN   8516>>ASSIGN   8519<>CALL     8520<<ASSIGN   8523>>ASSIGN
      8525>>IF       8530>>ASSIGN   8532>>IF       8538>>DOWHILE  8538>>DOWHILE  8546>>ASSIGN   8549>>ASSIGN
      8552>>ASSIGN   8552>>ASSIGN   8561>>ASSIGN   8563>>IF       8567>>DOUNTIL  8568>>IF       8568>>IF
      8568>>IF       8572>>ASSIGN   8572>>ASSIGN   8574>>IF       8577>>ASSIGN   8579>>ASSIGN   8582>>ASSIGN
      8583>>IF       8586>>ASSIGN   8589>>IF       8589>>IF       8589>>IF       8596>>ASSIGN   8598>>DOCASE
      8600>>IF       8603>>ASSIGN   8605>>DOWHILE  8605>>DOWHILE  8625>>DOCASE   8633>>ASSIGN   8633>>ASSIGN
      8634>>IF       8637>>IF       8640>>IF       8685>>CALL
P_PARAM.PCB$
      7076**DCL      8400>>ASSIGN
P_PARAM.REJECT
      7044**DCL      8545<<ASSIGN
P_PARAM.USER$
      7080**DCL      8390>>ASSIGN   8391>>ASSIGN   8392>>ASSIGN   8393>>ASSIGN   8436>>IF
RES_TBL
      7197**DCL      8397<<ASSIGN   8419<<ASSIGN   8427<<ASSIGN   8427>>ASSIGN   8430<<ASSIGN   8430>>ASSIGN
      8431<<ASSIGN   8431>>ASSIGN   8609>>ASSIGN   8628>>ASSIGN   8631>>ASSIGN   8645>>ASSIGN
RES_TYPE
      7196**DCL      8552<<ASSIGN   8553>>DOWHILE  8627<<ASSIGN   8630<<ASSIGN   8633<<ASSIGN   8634>>IF
      8648>>DOWHILE  8648>>DOWHILE  8660>>DOWHILE
SEG2$
      7148**DCL      7234--IMP-PTR
SEG2PTR
      7145**DCL      7148--REDEF
SN
      7183**DCL      8511--ASSIGN
SN.SN#
PL6.E3A0      #001=CPX$RESOURC File=CPX$RESOURC.:E05TSI                          TUE 07/29/97 12:09 Page:77   
      7183**DCL      8518>>ASSIGN
TIME
      7170**DCL      8468<<ASSIGN   8479<<ASSIGN   8486<<ASSIGN   8486>>ASSIGN   8493<<ASSIGN   8493>>ASSIGN
      8497>>IF
U$PARAM.ERRBUF$
      7947**DCL      8390>>ASSIGN
U$PARAM.MODE
      7953**DCL      8436>>IF
U$PARAM.PHYS$
      7952**DCL      8393>>ASSIGN
U$PARAM.PSEUDO$
      7951**DCL      8392>>ASSIGN
U$PARAM.USERS$
      7948**DCL      8391>>ASSIGN
USER$
      7192**DCL      8391<<ASSIGN   8445>>IF       8497>>IF       8605>>DOWHILE  8615>>IF       8615>>IF
      8615>>IF       8660>>DOWHILE  8660>>DOWHILE  8664>>IF       8669>>IF       8669>>IF       8669>>IF
VAL
      7169**DCL      8442<>CALL     8445>>IF       8453>>IF       8457>>ASSIGN   8461>>IF       8465>>ASSIGN
      8471<>CALL     8474>>IF       8479>>ASSIGN   8481>>IF       8481>>IF       8486>>ASSIGN   8488>>IF
      8488>>IF       8493>>ASSIGN   8523>>ASSIGN   8525>>IF       8530>>ASSIGN
XUP$FREEOUT
      7099**DCL-ENT  8519--CALL
XUP$GETSPACE
      7100**DCL-ENT  8515--CALL
