VERSION E05

PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:1    
        1        1        /*M* KLX$SUBS - Subroutines for SLUG                                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*D* NAME:        KLX$WRHLPNODE
        8        8             PURPOSE:     To write a message to some node on CG/HLPCG
        9        9             CALL:        CALL KLX$WRHLPNODE(BUF,LEN,NODE[,MSGTYP]) ALTRET(LBL);
       10       10             INPUT:       BUF - The buffer to write
       11       11                          LEN - Byte length of BUF
       12       12                          NODE - Node number of the node to write this
       13       13                             message to
       14       14             OUTPUT:      A message to the specified node on CG/HLPCG
       15       15             DESCRIPTION: KLX$WRHLPNODE will write BUF of byte length
       16       16                          LEN to the administrative node of node number
       17       17                          NODE on CG/HLPCG. If MSGTYP is passed, it is used as the
       18       18                          MSGTYP to be written; otherwise blanks will be used.
       19       19                          If the M$WRITE altrets, then so will KLX$WRHLPNODE.
       20       20        */
       21       21        KLX$WRHLPNODE: PROC(BUF,LEN,NODE,MSGTYP) ALTRET;
       22       22
       23       23    1   DCL BUF CHAR(1);
       24       24    1   DCL LEN UBIN;
       25       25    1   DCL NODE UBIN;
       26       26    1   DCL MSGTYP CHAR(8);
       27       27        %INCLUDE CP_6;
       28      108        %INCLUDE KL_DATA_R;
       29      572    1   DCL 1 FENM,
       30      573    1         2 FEPA CHAR(4),
       31      574    1         2 NODE CHAR(4);
       32      575    1   DCL FENMTXT REDEF FENM CHAR(8);
       33      576        %FPT_WRITE(FPTN=FPT_WRITE,STCLASS=STATIC,DCB=M$HLP,STATION=VLP_STATION,BP=YES);
       34      607        %VLP_STATION(FPTN=VLP_STATION,STCLASS=STATIC);
       35      634    1   DCL STA$TION CHAR(8) BASED;
       36      635
       37      636    1        IF NODE = KL_NODE   /*   My node */
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:2    
       38      637    1        THEN
       39      638    1             VLP_STATION.STATION# = 'BABOON';
       40      639    2           ELSE DO;
       41      640    2              CALL BINCHAR(FENM.NODE,NODE);
       42      641    2              FENM.FEPA = 'FEPA';
       43      642    2              VLP_STATION.STATION#=FENMTXT;
       44      643    2              END;
       45      644    1         GOTO CMN;
       46      645
       47      646        /*D* NAME:        KLX$WRHLPSTA
       48      647             PURPOSE:     To write a message to a specified station on CG/HLPCG
       49      648             CALL:        CALL KLX$WRHLPSTA(BUF,LEN,STA[,MSGTYP]) ALTRET(LBL);
       50      649             DESCRIPTION: Same as KLX$WRHLPNODE except this entry writes to
       51      650                          a specified station name instead of to a specified
       52      651                          node number.
       53      652        */
       54      653
       55      654    1   KLX$WRHLPSTA:  ENTRY(BUF,LEN,NODE,MSGTYP) ALTRET;
       56      655    1         VLP_STATION.STATION#=ADDR(NODE)->STA$TION;
       57      656
       58      657    1   CMN:  ;
       59      658    1         IF ADDR(MSGTYP)~=ADDR(NIL)
       60      659    1            THEN VLP_STATION.MSGTYP#=MSGTYP;
       61      660    1            ELSE VLP_STATION.MSGTYP#=' ';
       62      661    1         FPT_WRITE.BUF_.BUF$=ADDR(BUF);
       63      662    1         FPT_WRITE.BUF_.BOUND=LEN-1;
       64      663    2         CALL M$WRITE(FPT_WRITE) WHENALTRETURN DO;
       65      664    2            ALTRETURN;
       66      665    2            END;
       67      666    1         RETURN;
       68      667    1   END KLX$WRHLPNODE;
       69      668        %EOD;

PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:3    
--  Include file information  --

   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLX$WRHLPNODE.

   Procedure KLX$WRHLPNODE requires 54 words for executable code.
   Procedure KLX$WRHLPNODE requires 12 words of local(AUTO) storage.

PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:4    

 Object Unit name= KLX$WRHLPNODE                              File name= KLX$SUBS.:E05TOU
 UTS= JUL 30 '97 00:53:52.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2   Data  even  none    20     24  KLX$WRHLPNODE
    3  RoData even  UTS      3      3  KLX$WRHLPNODE
    4   Proc  even  none    54     66  KLX$WRHLPNODE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        4  KLX$WRHLPNODE
     4     25          yes     yes      Std        4  KLX$WRHLPSTA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:5    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$HLP                                 KL_NODE
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:6    


        1        1        /*M* KLX$SUBS - Subroutines for SLUG                                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*D* NAME:        KLX$WRHLPNODE
        8        8             PURPOSE:     To write a message to some node on CG/HLPCG
        9        9             CALL:        CALL KLX$WRHLPNODE(BUF,LEN,NODE[,MSGTYP]) ALTRET(LBL);
       10       10             INPUT:       BUF - The buffer to write
       11       11                          LEN - Byte length of BUF
       12       12                          NODE - Node number of the node to write this
       13       13                             message to
       14       14             OUTPUT:      A message to the specified node on CG/HLPCG
       15       15             DESCRIPTION: KLX$WRHLPNODE will write BUF of byte length
       16       16                          LEN to the administrative node of node number
       17       17                          NODE on CG/HLPCG. If MSGTYP is passed, it is used as the
       18       18                          MSGTYP to be written; otherwise blanks will be used.
       19       19                          If the M$WRITE altrets, then so will KLX$WRHLPNODE.
       20       20        */
       21       21        KLX$WRHLPNODE: PROC(BUF,LEN,NODE,MSGTYP) ALTRET;

     21  4 000000   000000 700200 xent  KLX$WRHLPNO* TSX0  ! X66_AUTO_4
         4 000001   000014 000004                    ZERO    12,4

       22       22
       23       23    1   DCL BUF CHAR(1);
       24       24    1   DCL LEN UBIN;
       25       25    1   DCL NODE UBIN;
       26       26    1   DCL MSGTYP CHAR(8);
       27       27        %INCLUDE CP_6;
       28      108        %INCLUDE KL_DATA_R;
       29      572    1   DCL 1 FENM,
       30      573    1         2 FEPA CHAR(4),
       31      574    1         2 NODE CHAR(4);
       32      575    1   DCL FENMTXT REDEF FENM CHAR(8);
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:7    
       33      576        %FPT_WRITE(FPTN=FPT_WRITE,STCLASS=STATIC,DCB=M$HLP,STATION=VLP_STATION,BP=YES);
       34      607        %VLP_STATION(FPTN=VLP_STATION,STCLASS=STATIC);
       35      634    1   DCL STA$TION CHAR(8) BASED;
       36      635
       37      636    1        IF NODE = KL_NODE   /*   My node */

    636  4 000002   200005 470500                    LDP0    @NODE,,AUTO
         4 000003   000000 236100                    LDQ     0,,PR0
         4 000004   000000 116000 xsym               CMPQ    KL_NODE
         4 000005   000012 601000 4                  TNZ     s:640

       38      637    1        THEN
       39      638    1             VLP_STATION.STATION# = 'BABOON';

    638  4 000006   040000 100400                    MLR     fill='040'O
         4 000007   000000 000006 3                  ADSC9   0                        cn=0,n=6
         4 000010   000014 000010 2                  ADSC9   VLP_STATION              cn=0,n=8
         4 000011   000024 710000 4                  TRA     s:644

       40      639    2           ELSE DO;

       41      640    2              CALL BINCHAR(FENM.NODE,NODE);

    640  4 000012   000000 235003                    LDA     0,DU
         4 000013   200012 757100                    STAQ    FENM+3,,AUTO
         4 000014   000100 301500                    BTD
         4 000015   200012 000010                    NDSC9   FENM+3,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 000016   200010 030004                    NDSC9   FENM+1,,AUTO             cn=0,s=nosgn,sf=0,n=4

       42      641    2              FENM.FEPA = 'FEPA';

    641  4 000017   000002 236000 3                  LDQ     2
         4 000020   200007 756100                    STQ     FENM,,AUTO

       43      642    2              VLP_STATION.STATION#=FENMTXT;

    642  4 000021   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:8    
         4 000022   200007 000010                    ADSC9   FENM,,AUTO               cn=0,n=8
         4 000023   000014 000010 2                  ADSC9   VLP_STATION              cn=0,n=8

       44      643    2              END;

       45      644    1         GOTO CMN;

    644  4 000024   000033 710000 4                  TRA     CMN

       46      645
       47      646        /*D* NAME:        KLX$WRHLPSTA
       48      647             PURPOSE:     To write a message to a specified station on CG/HLPCG
       49      648             CALL:        CALL KLX$WRHLPSTA(BUF,LEN,STA[,MSGTYP]) ALTRET(LBL);
       50      649             DESCRIPTION: Same as KLX$WRHLPNODE except this entry writes to
       51      650                          a specified station name instead of to a specified
       52      651                          node number.
       53      652        */
       54      653
       55      654    1   KLX$WRHLPSTA:  ENTRY(BUF,LEN,NODE,MSGTYP) ALTRET;

    654  4 000025   000000 700200 xent  KLX$WRHLPSTA TSX0  ! X66_AUTO_4
         4 000026   000014 000004                    ZERO    12,4

       56      655    1         VLP_STATION.STATION#=ADDR(NODE)->STA$TION;

    655  4 000027   200005 470500                    LDP0    @NODE,,AUTO
         4 000030   040000 100500                    MLR     fill='040'O
         4 000031   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         4 000032   000014 000010 2                  ADSC9   VLP_STATION              cn=0,n=8

    655  4 000033                       CMN          null
       57      656
       58      657    1   CMN:  ;
       59      658    1         IF ADDR(MSGTYP)~=ADDR(NIL)

    658  4 000033   200006 236100                    LDQ     @MSGTYP,,AUTO
         4 000034   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:9    
         4 000035   000043 600000 4                  TZE     s:660

       60      659    1            THEN VLP_STATION.MSGTYP#=MSGTYP;

    659  4 000036   200006 471500                    LDP1    @MSGTYP,,AUTO
         4 000037   040000 100500                    MLR     fill='040'O
         4 000040   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         4 000041   000016 000010 2                  ADSC9   VLP_STATION+2            cn=0,n=8
         4 000042   000046 710000 4                  TRA     s:661

       61      660    1            ELSE VLP_STATION.MSGTYP#=' ';

    660  4 000043   000035 235000 xsym               LDA     B_VECTNIL+29
         4 000044   000035 236000 xsym               LDQ     B_VECTNIL+29
         4 000045   000016 757000 2                  STAQ    VLP_STATION+2

       62      661    1         FPT_WRITE.BUF_.BUF$=ADDR(BUF);

    661  4 000046   200003 236100                    LDQ     @BUF,,AUTO
         4 000047   000005 756000 2                  STQ     FPT_WRITE+5

       63      662    1         FPT_WRITE.BUF_.BOUND=LEN-1;

    662  4 000050   200004 471500                    LDP1    @LEN,,AUTO
         4 000051   100000 236100                    LDQ     0,,PR1
         4 000052   000001 136007                    SBLQ    1,DL
         4 000053   000020 736000                    QLS     16
         4 000054   000004 676000 2                  ERQ     FPT_WRITE+4
         4 000055   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 000056   000004 656000 2                  ERSQ    FPT_WRITE+4

       64      663    2         CALL M$WRITE(FPT_WRITE) WHENALTRETURN DO;

    663  4 000057   000000 630400 2                  EPPR0   FPT_WRITE
         4 000060   440001 713400                    CLIMB   alt,write
         4 000061   401400 401760                    pmme    nvectors=4
         4 000062   000064 702000 4                  TSX2    s:664
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:10   
         4 000063   000065 710000 4                  TRA     s:666

       65      664    2            ALTRETURN;

    664  4 000064   000000 702200 xent               TSX2  ! X66_AALT

       66      665    2            END;
       67      666    1         RETURN;

    666  4 000065   000000 702200 xent               TSX2  ! X66_ARET
       68      667    1   END KLX$WRHLPNODE;
       69      668        %EOD;

PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:11   
--  Include file information  --

   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLX$WRHLPNODE.
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:12   

 **** Variables and constants ****

  ****  Section 002  Data  KLX$WRHLPNODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 FPT_WRITE                 14-0-0/w STRC(288)   r     1 VLP_STATION

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF                       4-0-0/w PTR         r     1 @LEN
     6-0-0/w PTR         r     1 @MSGTYP                    5-0-0/w PTR         r     1 @NODE
    *0-0-0/c CHAR        r     1 BUF                        7-0-0/c STRC(72)    r     1 FENM
     7-0-0/c CHAR(8)     r     1 FENMTXT                   *0-0-0/w UBIN        r     1 LEN
    *0-0-0/c CHAR(8)     r     1 MSGTYP                    *0-0-0/w UBIN        r     1 NODE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KL_NODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$HLP                      0-0-0/c CHAR(8)     r     1 STA$TION


   Procedure KLX$WRHLPNODE requires 54 words for executable code.
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:13   
   Procedure KLX$WRHLPNODE requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:15   
          MINI XREF LISTING

BUF
        23**DCL        21--PROC      654--ENTRY     661--ASSIGN
CMN
       655**LABEL     644--GOTO
FENM
       572**DCL       575--REDEF
FENM.FEPA
       573**DCL       641<<ASSIGN
FENM.NODE
       574**DCL       640<<CALLBLT
FENMTXT
       575**DCL       642>>ASSIGN
FPT_WRITE
       593**DCL       663<>CALL
FPT_WRITE.BUF_.BOUND
       593**DCL       662<<ASSIGN
FPT_WRITE.BUF_.BUF$
       595**DCL       661<<ASSIGN
FPT_WRITE.STATION_
       595**DCL       595--REDEF
FPT_WRITE.V
       596**DCL       593--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
       602**DCL       602--REDEF
KL_AUTOFAIL.FLAGS
       412**DCL       413--REDEF
KL_AUTOFAIL.MSGID
       408**DCL       409--REDEF
KL_AUTOFAIL.WSN
       415**DCL       416--REDEF
KL_FEMSG.FLAGS
       362**DCL       363--REDEF
PL6.E3A0      #001=KLX$WRHLPNODE File=KLX$SUBS.:E05TSI                           WED 07/30/97 00:53 Page:16   
KL_FEMSG.MSGID
       358**DCL       359--REDEF
KL_FEMSG.WSN
       365**DCL       366--REDEF
KL_NETWORK_BUF.TERMINAL_ID.TERM
       552**DCL       561--REDEF
KL_NETWORK_KEY.KEY.TERMID.TERM
       478**DCL       487--REDEF
KL_NODE
       343**DCL       636>>IF
KL_RDBF.FEL#
       321**DCL       322--REDEF
KL_TMSG.FLAGS
       384**DCL       385--REDEF
KL_TMSG.MSGID
       380**DCL       381--REDEF
KL_TMSG.WSN
       387**DCL       388--REDEF
LEN
        24**DCL        21--PROC      654--ENTRY     662>>ASSIGN
M$WRITE
        37**DCL-ENT   663--CALL
MSGTYP
        26**DCL        21--PROC      654--ENTRY     658--IF        659>>ASSIGN
NODE
        25**DCL        21--PROC      636>>IF        640>>CALLBLT   654--ENTRY     655--ASSIGN
STA$TION
       634**DCL       655>>ASSIGN
VLP_STATION
       619**DCL       595--DCLINIT
VLP_STATION.MSGIDXT
       629**DCL       632--REDEF
VLP_STATION.MSGTYP#
       623**DCL       659<<ASSIGN    660<<ASSIGN
VLP_STATION.STATION#
       623**DCL       638<<ASSIGN    642<<ASSIGN    655<<ASSIGN

PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:17   
       70        1        /*T***********************************************************/
       71        2        /*T*                                                         */
       72        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       73        4        /*T*                                                         */
       74        5        /*T***********************************************************/
       75        6        /*D* NAME:        KLX$9TO8
       76        7             PURPOSE:     To ready strings to be sent to the FEP over the coupler
       77        8             CALL:        CALL KLX$9TO8(SOURCE,DESTINATION,BYTES);
       78        9             INPUT:       SOURCE - The source string
       79       10                          BYTES  - Number of bytes in SOURCE and DESTINATION
       80       11             OUTPUT:      DESTINATION - The destination string
       81       12             DESCRIPTION: KLX$9TO8 takes the BYTES bytes long SOURCE string and
       82       13                          strips off the first BYTES bits and then places the
       83       14                          remaining BYTES 8-bit chunks into DESTINATION adding
       84       15                          slack bits as it goes along.
       85       16
       86       17                          SOURCE and DESTINATION should not overlap.
       87       18        */
       88       19
       89       20        KLX$9TO8: PROC(SOURCE,DEST,BYTES);
       90       21        /**/
       91       22        /**/
       92       23    1   DCL SOURCE(0:0) UBIN BYTE CALIGNED;
       93       24    1   DCL DEST(0:0) UBIN BYTE CALIGNED;
       94       25    1   DCL BYTES UBIN;
       95       26    1   DCL TEMP UBIN;
       96       27    1   DCL SRC$ PTR;
       97       28    1   DCL DST$ PTR;
       98       29    1   DCL BYT$8(0:0) UBIN(8) UNAL BASED;
       99       30    1   DCL BIT$S BIT(BYTES) UNAL BASED;
      100       31
      101       32    1           SRC$=PINCRB(ADDR(SOURCE),BYTES);
      102       33    2           DO TEMP=0 TO BYTES-1;
      103       34    2             DEST(TEMP)=SRC$->BYT$8(TEMP);
      104       35    2             END;
      105       36    1           RETURN;
      106       37
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:18   
      107       38        /**/
      108       39        /**/
      109       40        /*D* NAME:        KLX$8TO9
      110       41            PURPOSE:     To remove slack bits from data read from the FEP across the coupler
      111       42             CALL:        CALL KLX$8TO9(SOURCE,DESTINATION,BYTES);
      112       43             DESCRIPTION: This is the reverse of KLX$9TO8.
      113       44        */
      114       45    1   KLX$8TO9: ENTRY(SOURCE,DEST,BYTES);
      115       46        /**/
      116       47        /**/
      117       48    1           DST$=ADDR(DEST);
      118       49    1           DST$->BIT$S='0'B;
      119       50    1           DST$=PINCRB(DST$,BYTES);
      120       51    2           DO TEMP=0 TO BYTES-1;
      121       52    2             DST$->BYT$8(TEMP)=SOURCE(TEMP);
      122       53    2             END;
      123       54    1           RETURN;
      124       55    1   END KLX$9TO8;
      125       56        %EOD;

PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:19   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KLX$9TO8.

   Procedure KLX$9TO8 requires 60 words for executable code.
   Procedure KLX$9TO8 requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:20   

 Object Unit name= KLX$9TO8                                   File name= KLX$SUBS.:E05TOU
 UTS= JUL 30 '97 00:54:06.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    60     74  KLX$9TO8

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  KLX$9TO8
     0     34                  yes      Std        3  KLX$8TO9

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:21   


       70        1        /*T***********************************************************/
       71        2        /*T*                                                         */
       72        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       73        4        /*T*                                                         */
       74        5        /*T***********************************************************/
       75        6        /*D* NAME:        KLX$9TO8
       76        7             PURPOSE:     To ready strings to be sent to the FEP over the coupler
       77        8             CALL:        CALL KLX$9TO8(SOURCE,DESTINATION,BYTES);
       78        9             INPUT:       SOURCE - The source string
       79       10                          BYTES  - Number of bytes in SOURCE and DESTINATION
       80       11             OUTPUT:      DESTINATION - The destination string
       81       12             DESCRIPTION: KLX$9TO8 takes the BYTES bytes long SOURCE string and
       82       13                          strips off the first BYTES bits and then places the
       83       14                          remaining BYTES 8-bit chunks into DESTINATION adding
       84       15                          slack bits as it goes along.
       85       16
       86       17                          SOURCE and DESTINATION should not overlap.
       87       18        */
       88       19
       89       20        KLX$9TO8: PROC(SOURCE,DEST,BYTES);

     20  0 000000   000000 700200 xent  KLX$9TO8     TSX0  ! X66_AUTO_3
         0 000001   000014 000003                    ZERO    12,3

       90       21        /**/
       91       22        /**/
       92       23    1   DCL SOURCE(0:0) UBIN BYTE CALIGNED;
       93       24    1   DCL DEST(0:0) UBIN BYTE CALIGNED;
       94       25    1   DCL BYTES UBIN;
       95       26    1   DCL TEMP UBIN;
       96       27    1   DCL SRC$ PTR;
       97       28    1   DCL DST$ PTR;
       98       29    1   DCL BYT$8(0:0) UBIN(8) UNAL BASED;
       99       30    1   DCL BIT$S BIT(BYTES) UNAL BASED;
      100       31
      101       32    1           SRC$=PINCRB(ADDR(SOURCE),BYTES);
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:22   

     32  0 000002   200005 470500                    LDP0    @BYTES,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   200003 471500                    LDP1    @SOURCE,,AUTO
         0 000005   100000 503506                    ABD     0,QL,PR1
         0 000006   200007 451500                    STP1    SRC$,,AUTO

      102       33    2           DO TEMP=0 TO BYTES-1;

     33  0 000007   200006 450100                    STZ     TEMP,,AUTO
         0 000010   000027 710000 0                  TRA     s:35+3

      103       34    2             DEST(TEMP)=SRC$->BYT$8(TEMP);

     34  0 000011   200006 235100                    LDA     TEMP,,AUTO
         0 000012   000003 735000                    ALS     3
         0 000013   200006 236100                    LDQ     TEMP,,AUTO
         0 000014   200012 755100                    STA     DST$+2,,AUTO
         0 000015   000011 402007                    MPY     9,DL
         0 000016   200007 470500                    LDP0    SRC$,,AUTO
         0 000017   200012 235100                    LDA     DST$+2,,AUTO
         0 000020   200004 471500                    LDP1    @DEST,,AUTO
         0 000021   003106 061505                    CSR     bolr='003'O
         0 000022   000000 000010                    BDSC    0,A,PR0                  by=0,bit=0,n=8
         0 000023   100000 000011                    BDSC    0,Q,PR1                  by=0,bit=0,n=9

      104       35    2             END;

     35  0 000024   200006 235100                    LDA     TEMP,,AUTO
         0 000025   000001 035007                    ADLA    1,DL
         0 000026   200006 755100                    STA     TEMP,,AUTO
         0 000027   200005 470500                    LDP0    @BYTES,,AUTO
         0 000030   200006 236100                    LDQ     TEMP,,AUTO
         0 000031   000000 116100                    CMPQ    0,,PR0
         0 000032   000011 602000 0                  TNC     s:34

      105       36    1           RETURN;
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:23   

     36  0 000033   000000 702200 xent               TSX2  ! X66_ARET

      106       37
      107       38        /**/
      108       39        /**/
      109       40        /*D* NAME:        KLX$8TO9
      110       41            PURPOSE:    To remove slack bits from data read from the FEP across the coupler
      111       42             CALL:        CALL KLX$8TO9(SOURCE,DESTINATION,BYTES);
      112       43             DESCRIPTION: This is the reverse of KLX$9TO8.
      113       44        */
      114       45    1   KLX$8TO9: ENTRY(SOURCE,DEST,BYTES);

     45  0 000034   000000 700200 xent  KLX$8TO9     TSX0  ! X66_AUTO_3
         0 000035   000014 000003                    ZERO    12,3

      115       46        /**/
      116       47        /**/
      117       48    1           DST$=ADDR(DEST);

     48  0 000036   200004 236100                    LDQ     @DEST,,AUTO
         0 000037   200010 756100                    STQ     DST$,,AUTO

      118       49    1           DST$->BIT$S='0'B;

     49  0 000040   200005 470500                    LDP0    @BYTES,,AUTO
         0 000041   000000 720100                    LXL0    0,,PR0
         0 000042   200010 471500                    LDP1    DST$,,AUTO
         0 000043   003140 060400                    CSL     bolr='003'O
         0 000044   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         0 000045   100000 000010                    BDSC    0,,PR1                   by=0,bit=0,n=*X0

      119       50    1           DST$=PINCRB(DST$,BYTES);

     50  0 000046   000000 236100                    LDQ     0,,PR0
         0 000047   100000 503506                    ABD     0,QL,PR1
         0 000050   200010 451500                    STP1    DST$,,AUTO
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:24   

      120       51    2           DO TEMP=0 TO BYTES-1;

     51  0 000051   200006 450100                    STZ     TEMP,,AUTO
         0 000052   000067 710000 0                  TRA     s:53+3

      121       52    2             DST$->BYT$8(TEMP)=SOURCE(TEMP);

     52  0 000053   200006 236100                    LDQ     TEMP,,AUTO
         0 000054   000011 402007                    MPY     9,DL
         0 000055   200006 235100                    LDA     TEMP,,AUTO
         0 000056   000003 735000                    ALS     3
         0 000057   200003 470500                    LDP0    @SOURCE,,AUTO
         0 000060   200010 471500                    LDP1    DST$,,AUTO
         0 000061   003105 061506                    CSR     bolr='003'O
         0 000062   000000 000011                    BDSC    0,Q,PR0                  by=0,bit=0,n=9
         0 000063   100000 000010                    BDSC    0,A,PR1                  by=0,bit=0,n=8

      122       53    2             END;

     53  0 000064   200006 235100                    LDA     TEMP,,AUTO
         0 000065   000001 035007                    ADLA    1,DL
         0 000066   200006 755100                    STA     TEMP,,AUTO
         0 000067   200005 470500                    LDP0    @BYTES,,AUTO
         0 000070   200006 236100                    LDQ     TEMP,,AUTO
         0 000071   000000 116100                    CMPQ    0,,PR0
         0 000072   000053 602000 0                  TNC     s:52

      123       54    1           RETURN;

     54  0 000073   000000 702200 xent               TSX2  ! X66_ARET
      124       55    1   END KLX$9TO8;
      125       56        %EOD;

PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:25   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KLX$9TO8.
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:26   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @BYTES                     4-0-0/w PTR         r     1 @DEST
     3-0-0/w PTR         r     1 @SOURCE                   *0-0-0/w UBIN        r     1 BYTES
    *0-0-0/c UBIN(9)     r     1 DEST(0:0)                 10-0-0/w PTR         r     1 DST$
    *0-0-0/c UBIN(9)     r     1 SOURCE(0:0)                7-0-0/w PTR         r     1 SRC$
     6-0-0/w UBIN        r     1 TEMP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b ABIT        r     1 BIT$S                      0-0-0/b UBIN(8)     r     1 BYT$8(0:0)


   Procedure KLX$9TO8 requires 60 words for executable code.
   Procedure KLX$9TO8 requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:27   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KLX$9TO8 File=KLX$SUBS.:E05TSI                                WED 07/30/97 00:54 Page:28   
          MINI XREF LISTING

BIT$S
        30**DCL        49<<ASSIGN
BYT$8
        29**DCL        34>>ASSIGN     52<<ASSIGN
BYTES
        25**DCL        20--PROC       30--IMP-SIZ    32>>ASSIGN     33>>DOINDEX    45--ENTRY      49>>ASSIGN
        50>>ASSIGN     51>>DOINDEX
DEST
        24**DCL        20--PROC       34<<ASSIGN     45--ENTRY      48--ASSIGN
DST$
        28**DCL        48<<ASSIGN     49>>ASSIGN     50<<ASSIGN     50>>ASSIGN     52>>ASSIGN
SOURCE
        23**DCL        20--PROC       32--ASSIGN     45--ENTRY      52>>ASSIGN
SRC$
        27**DCL        32<<ASSIGN     34>>ASSIGN
TEMP
        26**DCL        33<<DOINDEX    34>>ASSIGN     34>>ASSIGN     51<<DOINDEX    52>>ASSIGN     52>>ASSIGN

PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:29   
      126        1        /*T***********************************************************/
      127        2        /*T*                                                         */
      128        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      129        4        /*T*                                                         */
      130        5        /*T***********************************************************/
      131        6        KLX$ERR2NETERR:   PROC(ERR,NETERR);
      132        7        /*D* NAME:        KLX$ERR2NETERR
      133        8             PURPOSE:     To fill in a network error code from a host error code
      134        9             CALL:        CALL KLX$ERR2NETERR(ERR,NETERR);
      135       10             INPUT:       ERR - A host error code possibly from B$JIT.ERR.
      136       11             OUTPUT:      NETERR - A KL_NETERR structure defining a network
      137       12                                   error code.
      138       13             DESCRIPTION: KLX$ERR2NETERR accepts a host error code and forms
      139       14                          a KL_NETERR structure expanding ERR to allow for
      140       15                          coupler slack bits and also setting KL_NETERR.HOSTERR.
      141       16        */
      142       17
      143       18        %INCLUDE KL_MACRO_C;
      144     3370    1   DCL ERR BIT(36) ALIGNED;
      145     3371        %KL_NETERR(FPTN=NETERR,ALGN=CALIGNED,STCLASS=PARAM,LAST=";");
      146     3408    1   DCL 1 TERR,
      147     3409    1         2 * UBIN BYTE UNAL,
      148     3410    1         2 SIGNIF BIT(36) UNAL;
      149     3411    1   DCL KLX$9TO8 ENTRY(3);
      150     3412
      151     3413    1         NETERR='0'B;
      152     3414    1         NETERR.HOSTERR='1'B;
      153     3415    1         TERR='0'B;
      154     3416    1         TERR.SIGNIF=ERR;
      155     3417    1         CALL KLX$9TO8(TERR,NETERR.ERR,5);
      156     3418    1         RETURN;
      157     3419    1   END KLX$ERR2NETERR;
      158     3420        %EOD;

PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:30   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KLX$ERR2NETERR.

   Procedure KLX$ERR2NETERR requires 27 words for executable code.
   Procedure KLX$ERR2NETERR requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:31   

 Object Unit name= KLX$ERR2NETERR                             File name= KLX$SUBS.:E05TOU
 UTS= JUL 30 '97 00:54:12.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    27     33  KLX$ERR2NETERR
    1  RoData even  none     1      1  KLX$ERR2NETERR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KLX$ERR2NETERR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 KLX$9TO8
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:32   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:33   


      126        1        /*T***********************************************************/
      127        2        /*T*                                                         */
      128        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      129        4        /*T*                                                         */
      130        5        /*T***********************************************************/
      131        6        KLX$ERR2NETERR:   PROC(ERR,NETERR);

      6  0 000000   000000 700200 xent  KLX$ERR2NET* TSX0  ! X66_AUTO_2
         0 000001   000014 000002                    ZERO    12,2

      132        7        /*D* NAME:        KLX$ERR2NETERR
      133        8             PURPOSE:     To fill in a network error code from a host error code
      134        9             CALL:        CALL KLX$ERR2NETERR(ERR,NETERR);
      135       10             INPUT:       ERR - A host error code possibly from B$JIT.ERR.
      136       11             OUTPUT:      NETERR - A KL_NETERR structure defining a network
      137       12                                   error code.
      138       13             DESCRIPTION: KLX$ERR2NETERR accepts a host error code and forms
      139       14                          a KL_NETERR structure expanding ERR to allow for
      140       15                          coupler slack bits and also setting KL_NETERR.HOSTERR.
      141       16        */
      142       17
      143       18        %INCLUDE KL_MACRO_C;
      144     3370    1   DCL ERR BIT(36) ALIGNED;
      145     3371        %KL_NETERR(FPTN=NETERR,ALGN=CALIGNED,STCLASS=PARAM,LAST=";");
      146     3408    1   DCL 1 TERR,
      147     3409    1         2 * UBIN BYTE UNAL,
      148     3410    1         2 SIGNIF BIT(36) UNAL;
      149     3411    1   DCL KLX$9TO8 ENTRY(3);
      150     3412
      151     3413    1         NETERR='0'B;

   3413  0 000002   200004 470500                    LDP0    @NETERR,,AUTO
         0 000003   000100 100400                    MLR     fill='000'O
         0 000004   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000005   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6

PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:34   
      152     3414    1         NETERR.HOSTERR='1'B;

   3414  0 000006   003100 060400                    CSL     bolr='003'O
         0 000007   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         0 000010   000000 010001                    BDSC    0,,PR0                   by=0,bit=1,n=1

      153     3415    1         TERR='0'B;

   3415  0 000011   200005 450100                    STZ     TERR,,AUTO
         0 000012   200006 450100                    STZ     TERR+1,,AUTO

      154     3416    1         TERR.SIGNIF=ERR;

   3416  0 000013   200003 471500                    LDP1    @ERR,,AUTO
         0 000014   000100 100500                    MLR     fill='000'O
         0 000015   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         0 000016   200005 200004                    ADSC9   TERR,,AUTO               cn=1,n=4

      155     3417    1         CALL KLX$9TO8(TERR,NETERR.ERR,5);

   3417  0 000017   000000 236000 1                  LDQ     0
         0 000020   200012 756100                    STQ     TERR+5,,AUTO
         0 000021   200004 236100                    LDQ     @NETERR,,AUTO
         0 000022   200000 036007                    ADLQ    65536,DL
         0 000023   200011 756100                    STQ     TERR+4,,AUTO
         0 000024   200005 633500                    EPPR3   TERR,,AUTO
         0 000025   200010 453500                    STP3    TERR+3,,AUTO
         0 000026   200010 630500                    EPPR0   TERR+3,,AUTO
         0 000027   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000030   000000 701000 xent               TSX1    KLX$9TO8
         0 000031   000000 011000                    NOP     0

      156     3418    1         RETURN;

   3418  0 000032   000000 702200 xent               TSX2  ! X66_ARET
      157     3419    1   END KLX$ERR2NETERR;
      158     3420        %EOD;
PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:35   

PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:36   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KLX$ERR2NETERR.
PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:37   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR                       4-0-0/w PTR         r     1 @NETERR
    *0-0-0/w BIT         r     1 ERR                       *0-0-0/c STRC(54)    r     1 NETERR
     5-0-0/b STRC(45)    r     1 TERR


   Procedure KLX$ERR2NETERR requires 27 words for executable code.
   Procedure KLX$ERR2NETERR requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KLX$ERR2NETERR File=KLX$SUBS.:E05TSI                          WED 07/30/97 00:54 Page:39   
          MINI XREF LISTING

ERR
      3370**DCL         6--PROC     3416>>ASSIGN
KLX$9TO8
      3411**DCL-ENT  3417--CALL
NETERR
      3385**DCL         6--PROC     3413<<ASSIGN
NETERR.ERR
      3397**DCL      3417<>CALL
NETERR.HOSTERR
      3392**DCL      3414<<ASSIGN
TERR
      3408**DCL      3415<<ASSIGN   3417<>CALL
TERR.SIGNIF
      3410**DCL      3416<<ASSIGN

PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:40   
      159        1        /*T***********************************************************/
      160        2        /*T*                                                         */
      161        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      162        4        /*T*                                                         */
      163        5        /*T***********************************************************/
      164        6        KLX$CONV_NODENAME: PROC (NODENAME,NODE#,NODETYPE) ALTRET;
      165        7
      166        8        %INCLUDE CP_6;
      167       89        %INCLUDE KL_DATA_R;
      168      553        %INCLUDE KL_CONFIG_M;
      169     1315
      170     1316        /* Paremeters */
      171     1317    1   DCL NODENAME CHAR(8);
      172     1318    1   DCL NODE# UBIN;
      173     1319    1   DCL NODETYPE UBIN;
      174     1320
      175     1321        /* FPTs */
      176     1322        %FPT_READ (FPTN=KL_RD_NETCON,STCLASS=SYMREF);
      177     1361
      178     1362                                                /* Based                              */
      179     1363        %KL$NETWORK (STCLASS="BASED(KL_EXTRSP_BUF$)");
      180     1390
      181     1391        /* Constant */
      182     1392        %KL$NETWORK_KEY (NAME=NETWORK_KEY,STCLASS=CONSTANT);
      183     1409        /* AUTO */
      184     1410    1   DCL I SBIN;
      185     1411
      186     1412    1           KL_RD_NETCON.BUF_ = VECTOR(KL_EXTRSP_BUF);
      187     1413    1           KL_RD_NETCON.KEY_ = VECTOR(NETWORK_KEY);
      188     1414    1           IF ~KL_NETWORK_VALID
      189     1415    1           THEN
      190     1416    1           CALL M$READ (KL_RD_NETCON)
      191     1417    2           WHENALTRETURN DO;
      192     1418    2              ALTRETURN;
      193     1419    2              END;
      194     1420    1           KL_NETWORK_VALID = '1'B;
      195     1421
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:41   
      196     1422    2           DO I = 0 TO KL$NETWORK.NODE#;
      197     1423    2              IF KL$NETWORK.NODE.NODE(I) = NODENAME
      198     1424    3              THEN DO;
      199     1425    3                 NODETYPE = KL$NETWORK.NODE.TYPE(I);
      200     1426    3                  IF NODETYPE = %KL_NODETYPE_UNDEF
      201     1427    3                  THEN
      202     1428    3                       ALTRETURN;
      203     1429    3                 NODE# = I;
      204     1430    3                 RETURN;
      205     1431    3                 END;
      206     1432    2              END;
      207     1433
      208     1434    1           ALTRETURN;
      209     1435        %EJECT;
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:42   
      210     1436    1   KLX$CONV_NODE: ENTRY (NODENAME,NODE#,NODETYPE) ALTRET;
      211     1437
      212     1438    1           KL_RD_NETCON.BUF_ = VECTOR(KL_EXTRSP_BUF);
      213     1439    1           KL_RD_NETCON.KEY_ = VECTOR(NETWORK_KEY);
      214     1440    1           IF ~KL_NETWORK_VALID
      215     1441    1           THEN
      216     1442    1              CALL M$READ (KL_RD_NETCON)
      217     1443    2              WHENALTRETURN DO;
      218     1444    2                 ALTRETURN;
      219     1445    2                 END;
      220     1446    1           KL_NETWORK_VALID = '1'B;
      221     1447
      222     1448    1           IF NODE# > KL$NETWORK.NODE#
      223     1449    1           THEN
      224     1450    1              ALTRETURN;
      225     1451
      226     1452    1           NODENAME = KL$NETWORK.NODE.NODE(NODE#);
      227     1453    1           NODETYPE = KL$NETWORK.NODE.TYPE(NODE#);
      228     1454    1           IF NODETYPE = %KL_NODETYPE_UNDEF/* Not defined */
      229     1455    1           THEN
      230     1456    1               ALTRETURN;
      231     1457
      232     1458    1           RETURN;
      233     1459
      234     1460    1   END KLX$CONV_NODENAME;

PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:43   
--  Include file information  --

   KL_CONFIG_M.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLX$CONV_NODENAME.

   Procedure KLX$CONV_NODENAME requires 86 words for executable code.
   Procedure KLX$CONV_NODENAME requires 8 words of local(AUTO) storage.

    No errors detected in file KLX$SUBS.:E05TSI    .

PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:44   

 Object Unit name= KLX$CONV_NODENAME                          File name= KLX$SUBS.:E05TOU
 UTS= JUL 30 '97 00:54:24.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2  RoData even  UTS      1      1  KLX$CONV_NODENAME
    3   Proc  even  none    86    126  KLX$CONV_NODENAME
    4  RoData even  none     4      4  KLX$CONV_NODENAME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        3  KLX$CONV_NODENAME
     3     56          yes     yes      Std        3  KLX$CONV_NODE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:45   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$HLP                                 KL_NETWORK_VALID
     KL_EXTRSP_BUF                         KL_EXTRSP_BUF$                        KL_RD_NETCON

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:46   


      159        1        /*T***********************************************************/
      160        2        /*T*                                                         */
      161        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      162        4        /*T*                                                         */
      163        5        /*T***********************************************************/
      164        6        KLX$CONV_NODENAME: PROC (NODENAME,NODE#,NODETYPE) ALTRET;

      6  3 000000   000000 700200 xent  KLX$CONV_NO* TSX0  ! X66_AUTO_3
         3 000001   000010 000003                    ZERO    8,3

      165        7
      166        8        %INCLUDE CP_6;
      167       89        %INCLUDE KL_DATA_R;
      168      553        %INCLUDE KL_CONFIG_M;
      169     1315
      170     1316        /* Paremeters */
      171     1317    1   DCL NODENAME CHAR(8);
      172     1318    1   DCL NODE# UBIN;
      173     1319    1   DCL NODETYPE UBIN;
      174     1320
      175     1321        /* FPTs */
      176     1322        %FPT_READ (FPTN=KL_RD_NETCON,STCLASS=SYMREF);
      177     1361
      178     1362                                                /* Based                              */
      179     1363        %KL$NETWORK (STCLASS="BASED(KL_EXTRSP_BUF$)");
      180     1390
      181     1391        /* Constant */
      182     1392        %KL$NETWORK_KEY (NAME=NETWORK_KEY,STCLASS=CONSTANT);
      183     1409        /* AUTO */
      184     1410    1   DCL I SBIN;
      185     1411
      186     1412    1           KL_RD_NETCON.BUF_ = VECTOR(KL_EXTRSP_BUF);

   1412  3 000002   000000 237000 4                  LDAQ    0
         3 000003   000004 757000 xsym               STAQ    KL_RD_NETCON+4

PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:47   
      187     1413    1           KL_RD_NETCON.KEY_ = VECTOR(NETWORK_KEY);

   1413  3 000004   000002 237000 4                  LDAQ    2
         3 000005   000002 757000 xsym               STAQ    KL_RD_NETCON+2

      188     1414    1           IF ~KL_NETWORK_VALID

   1414  3 000006   000000 236000 xsym               LDQ     KL_NETWORK_VALID
         3 000007   400000 376003                    ANQ     -131072,DU
         3 000010   400000 676003                    ERQ     -131072,DU
         3 000011   000020 600000 3                  TZE     s:1420

      189     1415    1           THEN
      190     1416    1           CALL M$READ (KL_RD_NETCON)

   1416  3 000012   000000 630400 xsym               EPPR0   KL_RD_NETCON
         3 000013   440000 713400                    CLIMB   alt,read
         3 000014   401400 401760                    pmme    nvectors=4
         3 000015   000017 702000 3                  TSX2    s:1418
         3 000016   000020 710000 3                  TRA     s:1420

      191     1417    2           WHENALTRETURN DO;

      192     1418    2              ALTRETURN;

   1418  3 000017   000000 702200 xent               TSX2  ! X66_AALT

      193     1419    2              END;
      194     1420    1           KL_NETWORK_VALID = '1'B;

   1420  3 000020   400000 236003                    LDQ     -131072,DU
         3 000021   000000 756000 xsym               STQ     KL_NETWORK_VALID

      195     1421
      196     1422    2           DO I = 0 TO KL$NETWORK.NODE#;

   1422  3 000022   200006 450100                    STZ     I,,AUTO
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:48   
         3 000023   000050 710000 3                  TRA     s:1432+1

      197     1423    2              IF KL$NETWORK.NODE.NODE(I) = NODENAME

   1423  3 000024   200006 236100                    LDQ     I,,AUTO
         3 000025   000024 402007                    MPY     20,DL
         3 000026   000000 470400 xsym               LDP0    KL_EXTRSP_BUF$
         3 000027   200003 471500                    LDP1    @NODENAME,,AUTO
         3 000030   040100 106506                    CMPC    fill='040'O
         3 000031   000002 000010                    ADSC9   2,Q,PR0                  cn=0,n=8
         3 000032   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 000033   000047 601000 3                  TNZ     s:1432

      198     1424    3              THEN DO;

      199     1425    3                 NODETYPE = KL$NETWORK.NODE.TYPE(I);

   1425  3 000034   200006 236100                    LDQ     I,,AUTO
         3 000035   000005 402007                    MPY     5,DL
         3 000036   200005 473500                    LDP3    @NODETYPE,,AUTO
         3 000037   000001 235106                    LDA     1,QL,PR0
         3 000040   300000 755100                    STA     0,,PR3

      200     1426    3                  IF NODETYPE = %KL_NODETYPE_UNDEF

   1426  3 000041   000043 601000 3                  TNZ     s:1429

      201     1427    3                  THEN
      202     1428    3                       ALTRETURN;

   1428  3 000042   000000 702200 xent               TSX2  ! X66_AALT

      203     1429    3                 NODE# = I;

   1429  3 000043   200006 235100                    LDA     I,,AUTO
         3 000044   200004 470500                    LDP0    @NODE#,,AUTO
         3 000045   000000 755100                    STA     0,,PR0
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:49   

      204     1430    3                 RETURN;

   1430  3 000046   000000 702200 xent               TSX2  ! X66_ARET

      205     1431    3                 END;
      206     1432    2              END;

   1432  3 000047   200006 054100                    AOS     I,,AUTO
         3 000050   000000 470400 xsym               LDP0    KL_EXTRSP_BUF$
         3 000051   000000 236100                    LDQ     0,,PR0
         3 000052   000024 604000 3                  TMI     s:1423
         3 000053   200006 116100                    CMPQ    I,,AUTO
         3 000054   000024 605000 3                  TPL     s:1423

      207     1433
      208     1434    1           ALTRETURN;

   1434  3 000055   000000 702200 xent               TSX2  ! X66_AALT

      209     1435        %EJECT;
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:50   
      210     1436    1   KLX$CONV_NODE: ENTRY (NODENAME,NODE#,NODETYPE) ALTRET;

   1436  3 000056   000000 700200 xent  KLX$CONV_NO* TSX0  ! X66_AUTO_3
         3 000057   000010 000003                    ZERO    8,3

      211     1437
      212     1438    1           KL_RD_NETCON.BUF_ = VECTOR(KL_EXTRSP_BUF);

   1438  3 000060   000000 237000 4                  LDAQ    0
         3 000061   000004 757000 xsym               STAQ    KL_RD_NETCON+4

      213     1439    1           KL_RD_NETCON.KEY_ = VECTOR(NETWORK_KEY);

   1439  3 000062   000002 237000 4                  LDAQ    2
         3 000063   000002 757000 xsym               STAQ    KL_RD_NETCON+2

      214     1440    1           IF ~KL_NETWORK_VALID

   1440  3 000064   000000 236000 xsym               LDQ     KL_NETWORK_VALID
         3 000065   400000 376003                    ANQ     -131072,DU
         3 000066   400000 676003                    ERQ     -131072,DU
         3 000067   000076 600000 3                  TZE     s:1446

      215     1441    1           THEN
      216     1442    1              CALL M$READ (KL_RD_NETCON)

   1442  3 000070   000000 630400 xsym               EPPR0   KL_RD_NETCON
         3 000071   440000 713400                    CLIMB   alt,read
         3 000072   401400 401760                    pmme    nvectors=4
         3 000073   000075 702000 3                  TSX2    s:1444
         3 000074   000076 710000 3                  TRA     s:1446

      217     1443    2              WHENALTRETURN DO;

      218     1444    2                 ALTRETURN;

   1444  3 000075   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:51   

      219     1445    2                 END;
      220     1446    1           KL_NETWORK_VALID = '1'B;

   1446  3 000076   400000 236003                    LDQ     -131072,DU
         3 000077   000000 756000 xsym               STQ     KL_NETWORK_VALID

      221     1447
      222     1448    1           IF NODE# > KL$NETWORK.NODE#

   1448  3 000100   000000 470400 xsym               LDP0    KL_EXTRSP_BUF$
         3 000101   200004 471500                    LDP1    @NODE#,,AUTO
         3 000102   000000 236100                    LDQ     0,,PR0
         3 000103   100000 116100                    CMPQ    0,,PR1
         3 000104   000106 603000 3                  TRC     s:1452

      223     1449    1           THEN
      224     1450    1              ALTRETURN;

   1450  3 000105   000000 702200 xent               TSX2  ! X66_AALT

      225     1451
      226     1452    1           NODENAME = KL$NETWORK.NODE.NODE(NODE#);

   1452  3 000106   100000 236100                    LDQ     0,,PR1
         3 000107   000005 402007                    MPY     5,DL
         3 000110   000002 736000                    QLS     2
         3 000111   200003 473500                    LDP3    @NODENAME,,AUTO
         3 000112   040100 100506                    MLR     fill='040'O
         3 000113   000002 000010                    ADSC9   2,Q,PR0                  cn=0,n=8
         3 000114   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8

      227     1453    1           NODETYPE = KL$NETWORK.NODE.TYPE(NODE#);

   1453  3 000115   100000 236100                    LDQ     0,,PR1
         3 000116   000005 402007                    MPY     5,DL
         3 000117   000000 470400 xsym               LDP0    KL_EXTRSP_BUF$
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:52   
         3 000120   200005 474500                    LDP4    @NODETYPE,,AUTO
         3 000121   000001 235106                    LDA     1,QL,PR0
         3 000122   400000 755100                    STA     0,,PR4

      228     1454    1           IF NODETYPE = %KL_NODETYPE_UNDEF/* Not defined */

   1454  3 000123   000125 601000 3                  TNZ     s:1458

      229     1455    1           THEN
      230     1456    1               ALTRETURN;

   1456  3 000124   000000 702200 xent               TSX2  ! X66_AALT

      231     1457
      232     1458    1           RETURN;

   1458  3 000125   000000 702200 xent               TSX2  ! X66_ARET
      233     1459
      234     1460    1   END KLX$CONV_NODENAME;

PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:53   
--  Include file information  --

   KL_CONFIG_M.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLX$CONV_NODENAME.
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:54   

 **** Variables and constants ****

  ****  Section 002 RoData KLX$CONV_NODENAME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18)    r     1 NETWORK_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NODE#                     3-0-0/w PTR         r     1 @NODENAME
     5-0-0/w PTR         r     1 @NODETYPE                  6-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 NODE#                     *0-0-0/c CHAR(8)     r     1 NODENAME
    *0-0-0/w UBIN        r     1 NODETYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KL_EXTRSP_BUF(0:1499)
     0-0-0/w PTR         r     1 KL_EXTRSP_BUF$             0-0-0/b BIT         r     1 KL_NETWORK_VALID
     0-0-0/d STRC(504)   r     1 KL_RD_NETCON

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(216)   r     1 KL$NETWORK

PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:55   

   Procedure KLX$CONV_NODENAME requires 86 words for executable code.
   Procedure KLX$CONV_NODENAME requires 8 words of local(AUTO) storage.

    No errors detected in file KLX$SUBS.:E05TSI    .
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:56   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:57   
          MINI XREF LISTING

I
      1410**DCL      1422<<DOINDEX  1423>>IF       1425>>ASSIGN   1429>>ASSIGN
KL$NETWORK.NODE.NODE
      1385**DCL      1423>>IF       1452>>ASSIGN
KL$NETWORK.NODE.TYPE
      1382**DCL      1425>>ASSIGN   1453>>ASSIGN
KL$NETWORK.NODE#
      1377**DCL      1422>>DOINDEX  1448>>IF
KL_AUTOFAIL.FLAGS
       393**DCL       394--REDEF
KL_AUTOFAIL.MSGID
       389**DCL       390--REDEF
KL_AUTOFAIL.WSN
       396**DCL       397--REDEF
KL_EXTRSP_BUF
       549**DCL      1412--ASSIGN   1438--ASSIGN
KL_EXTRSP_BUF$
       550**DCL      1376--IMP-PTR  1422>>DOINDEX  1423>>IF       1425>>ASSIGN   1448>>IF       1452>>ASSIGN
      1453>>ASSIGN
KL_FEMSG.FLAGS
       343**DCL       344--REDEF
KL_FEMSG.MSGID
       339**DCL       340--REDEF
KL_FEMSG.WSN
       346**DCL       347--REDEF
KL_NETWORK_BUF.TERMINAL_ID.TERM
       533**DCL       542--REDEF
KL_NETWORK_KEY.KEY.TERMID.TERM
       459**DCL       468--REDEF
KL_NETWORK_VALID
       322**DCL      1414>>IF       1420<<ASSIGN   1440>>IF       1446<<ASSIGN
KL_RDBF.FEL#
PL6.E3A0      #004=KLX$CONV_NODENAME File=KLX$SUBS.:E05TSI                       WED 07/30/97 00:54 Page:58   
       302**DCL       303--REDEF
KL_RD_NETCON
      1339**DCL      1416<>CALL     1442<>CALL
KL_RD_NETCON.BUF_
      1341**DCL      1412<<ASSIGN   1438<<ASSIGN
KL_RD_NETCON.KEY_
      1339**DCL      1413<<ASSIGN   1439<<ASSIGN
KL_RD_NETCON.STATION_
      1342**DCL      1343--REDEF
KL_RD_NETCON.V.DVBYTE.REREAD#
      1354**DCL      1354--REDEF
KL_RD_NETCON.V.INDX#
      1352**DCL      1352--REDEF
KL_TMSG.FLAGS
       365**DCL       366--REDEF
KL_TMSG.MSGID
       361**DCL       362--REDEF
KL_TMSG.WSN
       368**DCL       369--REDEF
M$READ
        18**DCL-ENT  1416--CALL     1442--CALL
NETWORK_KEY
      1405**DCL      1413--ASSIGN   1439--ASSIGN
NODE#
      1318**DCL         6--PROC     1429<<ASSIGN   1436--ENTRY    1448>>IF       1452>>ASSIGN   1453>>ASSIGN
NODENAME
      1317**DCL         6--PROC     1423>>IF       1436--ENTRY    1452<<ASSIGN
NODETYPE
      1319**DCL         6--PROC     1425<<ASSIGN   1426>>IF       1436--ENTRY    1453<<ASSIGN   1454>>IF
